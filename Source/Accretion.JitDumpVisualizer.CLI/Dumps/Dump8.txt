****** START compiling SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task (MethodHash=216328f7)
Generating code for Windows x64
OPTIONS: compCodeOpt = BLENDED_CODE
OPTIONS: compDbgCode = false
OPTIONS: compDbgInfo = true
OPTIONS: compDbgEnC  = false
OPTIONS: compProcedureSplitting   = false
OPTIONS: compProcedureSplittingEH = false
IL to import:
IL_0000  73 93 00 00 06    newobj       0x6000093
IL_0005  0a                stloc.0     
IL_0006  06                ldloc.0     
IL_0007  03                ldarg.1     
IL_0008  7d 7c 00 00 04    stfld        0x400007C
IL_000d  06                ldloc.0     
IL_000e  16                ldc.i4.0    
IL_000f  7d 7a 00 00 04    stfld        0x400007A
IL_0014  06                ldloc.0     
IL_0015  16                ldc.i4.0    
IL_0016  7d 79 00 00 04    stfld        0x4000079
IL_001b  06                ldloc.0     
IL_001c  73 ab 00 00 0a    newobj       0xA0000AB
IL_0021  7d 7b 00 00 04    stfld        0x400007B
IL_0026  06                ldloc.0     
IL_0027  73 ac 00 00 0a    newobj       0xA0000AC
IL_002c  7d 77 00 00 04    stfld        0x4000077
IL_0031  06                ldloc.0     
IL_0032  14                ldnull      
IL_0033  7d 78 00 00 04    stfld        0x4000078
IL_0038  06                ldloc.0     
IL_0039  73 ad 00 00 0a    newobj       0xA0000AD
IL_003e  7d 7d 00 00 04    stfld        0x400007D
IL_0043  28 ae 00 00 0a    call         0xA0000AE
IL_0048  6f af 00 00 0a    callvirt     0xA0000AF
IL_004d  6f b0 00 00 0a    callvirt     0xA0000B0
IL_0052  0b                stloc.1     
IL_0053  07                ldloc.1     
IL_0054  72 e6 04 00 70    ldstr        0x700004E6
IL_0059  1b                ldc.i4.5    
IL_005a  6f b1 00 00 0a    callvirt     0xA0000B1
IL_005f  0c                stloc.2     
IL_0060  28 b2 00 00 0a    call         0xA0000B2
IL_0065  16                ldc.i4.0    
IL_0066  9a                ldelem.ref  
IL_0067  0d                stloc.3     
IL_0068  02                ldarg.0     
IL_0069  6f 71 00 00 0a    callvirt     0xA000071
IL_006e  13 04             stloc.s      0x4
IL_0070  2b 77             br.s         119 (IL_00e9)
IL_0072  11 04             ldloc.s      0x4
IL_0074  6f 72 00 00 0a    callvirt     0xA000072
IL_0079  13 05             stloc.s      0x5
IL_007b  73 b3 00 00 0a    newobj       0xA0000B3
IL_0080  25                dup         
IL_0081  07                ldloc.1     
IL_0082  6f b4 00 00 0a    callvirt     0xA0000B4
IL_0087  25                dup         
IL_0088  08                ldloc.2     
IL_0089  2d 04             brtrue.s     4 (IL_008f)
IL_008b  11 05             ldloc.s      0x5
IL_008d  2b 0d             br.s         13 (IL_009c)
IL_008f  09                ldloc.3     
IL_0090  72 fc 04 00 70    ldstr        0x700004FC
IL_0095  11 05             ldloc.s      0x5
IL_0097  28 6f 00 00 0a    call         0xA00006F
IL_009c  6f b5 00 00 0a    callvirt     0xA0000B5
IL_00a1  25                dup         
IL_00a2  16                ldc.i4.0    
IL_00a3  6f b6 00 00 0a    callvirt     0xA0000B6
IL_00a8  13 06             stloc.s      0x6
IL_00aa  06                ldloc.0     
IL_00ab  7b 77 00 00 04    ldfld        0x4000077
IL_00b0  11 06             ldloc.s      0x6
IL_00b2  06                ldloc.0     
IL_00b3  7b 7e 00 00 04    ldfld        0x400007E
IL_00b8  25                dup         
IL_00b9  2d 18             brtrue.s     24 (IL_00d3)
IL_00bb  26                pop         
IL_00bc  06                ldloc.0     
IL_00bd  06                ldloc.0     
IL_00be  fe 06 96 00 00 06 ldftn        0x6000096
IL_00c4  73 b7 00 00 0a    newobj       0xA0000B7
IL_00c9  25                dup         
IL_00ca  13 07             stloc.s      0x7
IL_00cc  7d 7e 00 00 04    stfld        0x400007E
IL_00d1  11 07             ldloc.s      0x7
IL_00d3  06                ldloc.0     
IL_00d4  fe 06 95 00 00 06 ldftn        0x6000095
IL_00da  73 b8 00 00 0a    newobj       0xA0000B8
IL_00df  28 31 00 00 06    call         0x6000031
IL_00e4  6f b9 00 00 0a    callvirt     0xA0000B9
IL_00e9  11 04             ldloc.s      0x4
IL_00eb  6f 77 00 00 0a    callvirt     0xA000077
IL_00f0  2d 80             brtrue.s     -128 (IL_0072)
IL_00f2  de 0c             leave.s      12 (IL_0100)
IL_00f4  11 04             ldloc.s      0x4
IL_00f6  2c 07             brfalse.s    7 (IL_00ff)
IL_00f8  11 04             ldloc.s      0x4
IL_00fa  6f 78 00 00 0a    callvirt     0xA000078
IL_00ff  dc                endfinally  
IL_0100  06                ldloc.0     
IL_0101  06                ldloc.0     
IL_0102  7b 77 00 00 04    ldfld        0x4000077
IL_0107  6f ba 00 00 0a    callvirt     0xA0000BA
IL_010c  7d 7a 00 00 04    stfld        0x400007A
IL_0111  06                ldloc.0     
IL_0112  06                ldloc.0     
IL_0113  7b 7a 00 00 04    ldfld        0x400007A
IL_0118  73 3e 00 00 06    newobj       0x600003E
IL_011d  7d 78 00 00 04    stfld        0x4000078
IL_0122  16                ldc.i4.0    
IL_0123  13 08             stloc.s      0x8
IL_0125  2b 0c             br.s         12 (IL_0133)
IL_0127  06                ldloc.0     
IL_0128  6f 94 00 00 06    callvirt     0x6000094
IL_012d  11 08             ldloc.s      0x8
IL_012f  17                ldc.i4.1    
IL_0130  58                add         
IL_0131  13 08             stloc.s      0x8
IL_0133  11 08             ldloc.s      0x8
IL_0135  28 bb 00 00 0a    call         0xA0000BB
IL_013a  06                ldloc.0     
IL_013b  7b 7a 00 00 04    ldfld        0x400007A
IL_0140  28 bc 00 00 0a    call         0xA0000BC
IL_0145  32 e0             blt.s        -32 (IL_0127)
IL_0147  06                ldloc.0     
IL_0148  7b 7b 00 00 04    ldfld        0x400007B
IL_014d  6f bd 00 00 0a    callvirt     0xA0000BD
IL_0152  2a                ret         

lvaSetClass: setting class for V00 to (00000000D1FFAB1E) System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] 
Arg #0    passed in register(s) rcx

lvaSetClass: setting class for V01 to (00000000D1FFAB1E) System.String 
Arg #1    passed in register(s) rdx

lvaSetClass: setting class for V02 to (00000000D1FFAB1E) <>c__DisplayClass5_0 

lvaSetClass: setting class for V03 to (00000000D1FFAB1E) System.String 

lvaSetClass: setting class for V05 to (00000000D1FFAB1E) System.String 

lvaSetClass: setting class for V06 to (00000000D1FFAB1E) System.Collections.Generic.IEnumerator`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] 

lvaSetClass: setting class for V07 to (00000000D1FFAB1E) System.String 

lvaSetClass: setting class for V08 to (00000000D1FFAB1E) System.Diagnostics.ProcessStartInfo 

lvaSetClass: setting class for V09 to (00000000D1FFAB1E) System.Action`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] 

lvaGrabTemp returning 11 (V11 tmp0) (a long lifetime temp) called for OutgoingArgSpace.
; Initial local variable assignments
;
;  V00 arg0              ref  class-hnd
;  V01 arg1              ref  class-hnd
;  V02 loc0              ref  class-hnd
;  V03 loc1              ref  class-hnd
;  V04 loc2             bool 
;  V05 loc3              ref  class-hnd
;  V06 loc4              ref  class-hnd
;  V07 loc5              ref  class-hnd
;  V08 loc6              ref  class-hnd
;  V09 loc7              ref  class-hnd
;  V10 loc8              int 
;  V11 OutArgs        lclBlk <na>  "OutgoingArgSpace"
*************** In compInitDebuggingInfo() for SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task
getVars() returned cVars = 0, extendOthers = true
info.compVarScopesCount = 11
    	VarNum 	LVNum 	      Name 	Beg 	End
 0: 	00h 	00h 	  V00 arg0 	000h   	153h
 1: 	01h 	01h 	  V01 arg1 	000h   	153h
 2: 	02h 	02h 	  V02 loc0 	000h   	153h
 3: 	03h 	03h 	  V03 loc1 	000h   	153h
 4: 	04h 	04h 	  V04 loc2 	000h   	153h
 5: 	05h 	05h 	  V05 loc3 	000h   	153h
 6: 	06h 	06h 	  V06 loc4 	000h   	153h
 7: 	07h 	07h 	  V07 loc5 	000h   	153h
 8: 	08h 	08h 	  V08 loc6 	000h   	153h
 9: 	09h 	09h 	  V09 loc7 	000h   	153h
10: 	0Ah 	0Ah 	  V10 loc8 	000h   	153h
info.compStmtOffsetsCount    = 0
info.compStmtOffsetsImplicit = 0005h ( STACK_EMPTY CALL_SITE )
*************** In fgFindBasicBlocks() for SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task
Marked V02 as a single def local
Marked V03 as a single def local
Marked V04 as a single def local
Marked V05 as a single def local
Marked V06 as a single def local
Marked V07 as a single def local
Marked V08 as a single def local
Marked V09 as a single def local
Jump targets:
  IL_0070
  IL_0072
  IL_008f
  IL_009c
  IL_00d3
  IL_00e9
  IL_00f4
  IL_00ff
  IL_0100
  IL_0127
  IL_0133
New Basic Block BB01 [0000] created.
BB01 [000..070)
New Basic Block BB02 [0001] created.
BB02 [070..072)
New Basic Block BB03 [0002] created.
BB03 [072..08B)
New Basic Block BB04 [0003] created.
BB04 [08B..08F)
New Basic Block BB05 [0004] created.
BB05 [08F..09C)
New Basic Block BB06 [0005] created.
BB06 [09C..0BB)
New Basic Block BB07 [0006] created.
BB07 [0BB..0D3)
New Basic Block BB08 [0007] created.
BB08 [0D3..0E9)
New Basic Block BB09 [0008] created.
BB09 [0E9..0F2)
New Basic Block BB10 [0009] created.
BB10 [0F2..0F4)
New Basic Block BB11 [0010] created.
BB11 [0F4..0F8)
New Basic Block BB12 [0011] created.
BB12 [0F8..0FF)
New Basic Block BB13 [0012] created.
BB13 [0FF..100)
New Basic Block BB14 [0013] created.
BB14 [100..127)
New Basic Block BB15 [0014] created.
BB15 [127..133)
New Basic Block BB16 [0015] created.
BB16 [133..147)
New Basic Block BB17 [0016] created.
BB17 [147..153)
EH clause #0:
  Flags:         0x2 (finally)
  TryOffset:     0x70
  TryLength:     0x84
  HandlerOffset: 0xf4
  HandlerLength: 0xc
  ClassToken:    0x0
*************** After fgFindBasicBlocks() has created the EH table

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB02..BB10 [070..0F4), Finally at BB11..BB13 [0F4..100)
*************** In fgNormalizeEH()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     
BB02 [0001]  1  0                          1       [070..072)-> BB09 (always) T0      try {       keep try label 
BB03 [0002]  1  0                          1       [072..08B)-> BB05 ( cond ) T0                  bwd bwd-target 
BB04 [0003]  1  0                          1       [08B..08F)-> BB06 (always) T0                  bwd 
BB05 [0004]  1  0                          1       [08F..09C)                 T0                  bwd 
BB06 [0005]  2  0                          1       [09C..0BB)-> BB08 ( cond ) T0                  bwd 
BB07 [0006]  1  0                          1       [0BB..0D3)                 T0                  bwd 
BB08 [0007]  2  0                          1       [0D3..0E9)                 T0                  bwd 
BB09 [0008]  2  0                          1       [0E9..0F2)-> BB03 ( cond ) T0                  bwd 
BB10 [0009]  1  0                          1       [0F2..0F4)-> BB14 (leave ) T0      }           
BB11 [0010]  1     0                       1       [0F4..0F8)-> BB13 ( cond )    H0   finally {   keep label target 
BB12 [0011]  1     0                       1       [0F8..0FF)                    H0               
BB13 [0012]  2     0                       1       [0FF..100)        (finret)    H0   }           
BB14 [0013]  1                             1       [100..127)-> BB16 (always)                     
BB15 [0014]  1                             1       [127..133)                                     bwd bwd-target 
BB16 [0015]  2                             1       [133..147)-> BB15 ( cond )                     bwd 
BB17 [0016]  1                             1       [147..153)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB02..BB10 [070..0F4), Finally at BB11..BB13 [0F4..100)
No EH normalization performed.
IL Code Size,Instr  339, 120, Basic Block count  17, Local Variable Num,Ref count  12, 45 for method SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task
OPTIONS: opts.MinOpts() == false
Basic block list for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     
BB02 [0001]  1  0                          1       [070..072)-> BB09 (always) T0      try {       keep try label 
BB03 [0002]  1  0                          1       [072..08B)-> BB05 ( cond ) T0                  bwd bwd-target 
BB04 [0003]  1  0                          1       [08B..08F)-> BB06 (always) T0                  bwd 
BB05 [0004]  1  0                          1       [08F..09C)                 T0                  bwd 
BB06 [0005]  2  0                          1       [09C..0BB)-> BB08 ( cond ) T0                  bwd 
BB07 [0006]  1  0                          1       [0BB..0D3)                 T0                  bwd 
BB08 [0007]  2  0                          1       [0D3..0E9)                 T0                  bwd 
BB09 [0008]  2  0                          1       [0E9..0F2)-> BB03 ( cond ) T0                  bwd 
BB10 [0009]  1  0                          1       [0F2..0F4)-> BB14 (leave ) T0      }           
BB11 [0010]  1     0                       1       [0F4..0F8)-> BB13 ( cond )    H0   finally {   keep label target 
BB12 [0011]  1     0                       1       [0F8..0FF)                    H0               
BB13 [0012]  2     0                       1       [0FF..100)        (finret)    H0   }           
BB14 [0013]  1                             1       [100..127)-> BB16 (always)                     
BB15 [0014]  1                             1       [127..133)                                     bwd bwd-target 
BB16 [0015]  2                             1       [133..147)-> BB15 ( cond )                     bwd 
BB17 [0016]  1                             1       [147..153)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Pre-import

*************** Finishing PHASE Pre-import

*************** Starting PHASE Importation
*************** In impImport() for SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task

impImportBlockPending for BB01

Importing BB01 (PC=000) of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'
    [ 0]   0 (0x000) newobj
lvaGrabTemp returning 12 (V12 tmp1) called for NewObj constructor temp.


STMT00000 (IL 0x000...  ???)
               [000003] -A----------              *  ASG       ref   
               [000002] D------N----              +--*  LCL_VAR   ref    V12 tmp1         
               [000001] ------------              \--*  ALLOCOBJ  ref   
               [000000] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e method
Marked V12 as a single def local

lvaSetClass: setting class for V12 to (00000000D1FFAB1E) <>c__DisplayClass5_0  [exact]
 06000093
In Compiler::impImportCall: opcode is newobj, kind=0, callRetType is void, structSize is 0


STMT00001 (IL   ???...  ???)
               [000005] I-C-G-------              *  CALL      void   <>c__DisplayClass5_0..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000004] ------------ this in rcx  \--*  LCL_VAR   ref    V12 tmp1         

    [ 1]   5 (0x005) stloc.0
lvaUpdateClass: Updating class for V02 from (00000000D1FFAB1E) <>c__DisplayClass5_0 to (00000000D1FFAB1E) <>c__DisplayClass5_0 [exact]


STMT00002 (IL 0x005...  ???)
               [000008] -A----------              *  ASG       ref   
               [000007] D------N----              +--*  LCL_VAR   ref    V02 loc0         
               [000006] ------------              \--*  LCL_VAR   ref    V12 tmp1         

    [ 0]   6 (0x006) ldloc.0
    [ 1]   7 (0x007) ldarg.1
    [ 2]   8 (0x008) stfld 0400007C

STMT00003 (IL 0x006...  ???)
               [000012] -A-XG-------              *  ASG       ref   
               [000011] ---XG--N----              +--*  FIELD     ref    outputFile
               [000009] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000010] ------------              \--*  LCL_VAR   ref    V01 arg1         

    [ 0]  13 (0x00d) ldloc.0
    [ 1]  14 (0x00e) ldc.i4.0 0
    [ 2]  15 (0x00f) stfld 0400007A

STMT00004 (IL 0x00D...  ???)
               [000016] -A-XG-------              *  ASG       int   
               [000015] ---XG--N----              +--*  FIELD     int    analyzerCount
               [000013] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000014] ------------              \--*  CNS_INT   int    0

    [ 0]  20 (0x014) ldloc.0
    [ 1]  21 (0x015) ldc.i4.0 0
    [ 2]  22 (0x016) stfld 04000079

STMT00005 (IL 0x014...  ???)
               [000020] -A-XG-------              *  ASG       int   
               [000019] ---XG--N----              +--*  FIELD     int    analyzersFinishedCount
               [000017] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000018] ------------              \--*  CNS_INT   int    0

    [ 0]  27 (0x01b) ldloc.0
    [ 1]  28 (0x01c) newobj
lvaGrabTemp returning 13 (V13 tmp2) called for NewObj constructor temp.


STMT00006 (IL 0x01B...  ???)
               [000025] -A----------              *  ASG       ref   
               [000024] D------N----              +--*  LCL_VAR   ref    V13 tmp2         
               [000023] ------------              \--*  ALLOCOBJ  ref   
               [000022] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token
Marked V13 as a single def local

lvaSetClass: setting class for V13 to (00000000D1FFAB1E) System.Threading.Tasks.TaskCompletionSource`1[Boolean]  [exact]
 0A0000AB
In Compiler::impImportCall: opcode is newobj, kind=0, callRetType is void, structSize is 0


STMT00007 (IL   ???...  ???)
               [000027] I-C-G-------              *  CALL      void   System.Threading.Tasks.TaskCompletionSource`1[Boolean][System.Boolean]..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000026] ------------ this in rcx  \--*  LCL_VAR   ref    V13 tmp2         

    [ 2]  33 (0x021) stfld 0400007B

STMT00008 (IL 0x021...  ???)
               [000030] -A-XG-------              *  ASG       ref   
               [000029] ---XG--N----              +--*  FIELD     ref    allAnalyzersHaveRun
               [000021] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000028] ------------              \--*  LCL_VAR   ref    V13 tmp2         

    [ 0]  38 (0x026) ldloc.0
    [ 1]  39 (0x027) newobj
lvaGrabTemp returning 14 (V14 tmp3) called for NewObj constructor temp.


STMT00009 (IL 0x026...  ???)
               [000035] -A----------              *  ASG       ref   
               [000034] D------N----              +--*  LCL_VAR   ref    V14 tmp3         
               [000033] ------------              \--*  ALLOCOBJ  ref   
               [000032] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token
Marked V14 as a single def local

lvaSetClass: setting class for V14 to (00000000D1FFAB1E) System.Collections.Generic.Queue`1[[System.Diagnostics.Process, System.Diagnostics.Process, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a]]  [exact]
 0A0000AC
In Compiler::impImportCall: opcode is newobj, kind=0, callRetType is void, structSize is 0


STMT00010 (IL   ???...  ???)
               [000037] I-C-G-------              *  CALL      void   System.Collections.Generic.Queue`1[__Canon][System.__Canon]..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000036] ------------ this in rcx  \--*  LCL_VAR   ref    V14 tmp3         

    [ 2]  44 (0x02c) stfld 04000077

STMT00011 (IL 0x02C...  ???)
               [000040] -A-XG-------              *  ASG       ref   
               [000039] ---XG--N----              +--*  FIELD     ref    queuedAnalyzers
               [000031] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000038] ------------              \--*  LCL_VAR   ref    V14 tmp3         

    [ 0]  49 (0x031) ldloc.0
    [ 1]  50 (0x032) ldnull
    [ 2]  51 (0x033) stfld 04000078

STMT00012 (IL 0x031...  ???)
               [000044] -A-XG-------              *  ASG       ref   
               [000043] ---XG--N----              +--*  FIELD     ref    progressReporter
               [000041] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000042] ------------              \--*  CNS_INT   ref    null

    [ 0]  56 (0x038) ldloc.0
    [ 1]  57 (0x039) newobj
lvaGrabTemp returning 15 (V15 tmp4) called for NewObj constructor temp.


STMT00013 (IL 0x038...  ???)
               [000049] -A----------              *  ASG       ref   
               [000048] D------N----              +--*  LCL_VAR   ref    V15 tmp4         
               [000047] ------------              \--*  ALLOCOBJ  ref   
               [000046] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token
Marked V15 as a single def local

lvaSetClass: setting class for V15 to (00000000D1FFAB1E) System.Collections.Generic.HashSet`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]  [exact]
 0A0000AD
In Compiler::impImportCall: opcode is newobj, kind=0, callRetType is void, structSize is 0


STMT00014 (IL   ???...  ???)
               [000051] I-C-G-------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000050] ------------ this in rcx  \--*  LCL_VAR   ref    V15 tmp4         

    [ 2]  62 (0x03e) stfld 0400007D

STMT00015 (IL 0x03E...  ???)
               [000054] -A-XG-------              *  ASG       ref   
               [000053] ---XG--N----              +--*  FIELD     ref    output
               [000045] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000052] ------------              \--*  LCL_VAR   ref    V15 tmp4         

    [ 0]  67 (0x043) call 0A0000AE
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0


STMT00016 (IL 0x043...  ???)
               [000055] I-C-G-------              *  CALL      ref    System.Diagnostics.Process.GetCurrentProcess (exactContextHnd=0x00000000D1FFAB1E)

    [ 1]  72 (0x048) callvirt 0A0000AF
In Compiler::impImportCall: opcode is callvirt, kind=0, callRetType is ref, structSize is 0


STMT00017 (IL   ???...  ???)
               [000057] I-C-G-------              *  CALL nullcheck ref    System.Diagnostics.Process.get_MainModule (exactContextHnd=0x00000000D1FFAB1E)
               [000056] --C--------- this in rcx  \--*  RET_EXPR  ref   (inl return from call [000055])

    [ 1]  77 (0x04d) callvirt 0A0000B0
In Compiler::impImportCall: opcode is callvirt, kind=0, callRetType is ref, structSize is 0


STMT00018 (IL   ???...  ???)
               [000059] I-C-G-------              *  CALL nullcheck ref    System.Diagnostics.ProcessModule.get_FileName (exactContextHnd=0x00000000D1FFAB1E)
               [000058] --C--------- this in rcx  \--*  RET_EXPR  ref   (inl return from call [000057])

    [ 1]  82 (0x052) stloc.1Named Intrinsic System.Diagnostics.ProcessModule.get_FileName: Not recognized


STMT00019 (IL   ???...  ???)
               [000062] -AC---------              *  ASG       ref   
               [000061] D------N----              +--*  LCL_VAR   ref    V03 loc1         
               [000060] --C---------              \--*  RET_EXPR  ref   (inl return from call [000059])

    [ 0]  83 (0x053) ldloc.1
    [ 1]  84 (0x054) ldstr 700004E6
    [ 2]  89 (0x059) ldc.i4.5 5
    [ 3]  90 (0x05a) callvirt 0A0000B1
In Compiler::impImportCall: opcode is callvirt, kind=0, callRetType is bool, structSize is 0


STMT00020 (IL 0x053...  ???)
               [000066] I-C-G-------              *  CALL nullcheck int    System.String.Contains (exactContextHnd=0x00000000D1FFAB1E)
               [000063] ------------ this in rcx  +--*  LCL_VAR   ref    V03 loc1         
               [000064] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000065] ------------ arg2         \--*  CNS_INT   int    5

    [ 1]  95 (0x05f) stloc.2

STMT00021 (IL   ???...  ???)
               [000069] -AC---------              *  ASG       int   
               [000068] D------N----              +--*  LCL_VAR   int    V04 loc2         
               [000067] --C---------              \--*  RET_EXPR  int   (inl return from call [000066])

    [ 0]  96 (0x060) call 0A0000B2
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0


STMT00022 (IL 0x060...  ???)
               [000070] I-C-G-------              *  CALL      ref    System.Environment.GetCommandLineArgs (exactContextHnd=0x00000000D1FFAB1E)

    [ 1] 101 (0x065) ldc.i4.0 0
    [ 2] 102 (0x066) ldelem.ref
    [ 1] 103 (0x067) stloc.3Named Intrinsic System.Environment.GetCommandLineArgs: Not recognized


STMT00023 (IL   ???...  ???)
               [000075] -ACXG-------              *  ASG       ref   
               [000074] D------N----              +--*  LCL_VAR   ref    V05 loc3         
               [000073] --CXG-------              \--*  INDEX     ref   
               [000071] --C---------                 +--*  RET_EXPR  ref   (inl return from call [000070])
               [000072] ------------                 \--*  CNS_INT   int    0

    [ 0] 104 (0x068) ldarg.0
    [ 1] 105 (0x069) callvirt 0A000071
In Compiler::impImportCall: opcode is callvirt, kind=2, callRetType is ref, structSize is 0

impDevirtualizeCall: Trying to devirtualize interface call:
    class for 'this' is System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] (attrib 10200400)
    base method is System.Collections.Generic.IEnumerable`1[__Canon]::GetEnumerator
Considering guarded devirt...
No likely implementor of interface 00000000D1FFAB1E (System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]), sorry
INLINER: during 'impMarkInlineCandidate' result 'failed this call site' reason 'target not direct' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon]:GetEnumerator():System.Collections.Generic.IEnumerator`1[__Canon]:this'
INLINER: during 'impMarkInlineCandidate' result 'failed this call site' reason 'target not direct'

    [ 1] 110 (0x06e) stloc.s 4
lvaUpdateClass: NOT Updating class for V06 from (00000000D1FFAB1E) System.Collections.Generic.IEnumerator`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] to (00000000D1FFAB1E) System.Collections.Generic.IEnumerator`1[__Canon]


STMT00024 (IL 0x068...  ???)
               [000079] -AC-G-------              *  ASG       ref   
               [000078] D------N----              +--*  LCL_VAR   ref    V06 loc4         
               [000077] --C-G-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator
               [000076] ------------ this in rcx     \--*  LCL_VAR   ref    V00 arg0         

impImportBlockPending for BB02

impImportBlockPending for BB11

Importing BB02 (PC=112) of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'
    [ 0] 112 (0x070) br.s
impImportBlockPending for BB09

Importing BB09 (PC=233) of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'
    [ 0] 233 (0x0e9) ldloc.s 4
    [ 1] 235 (0x0eb) callvirt 0A000077
In Compiler::impImportCall: opcode is callvirt, kind=2, callRetType is bool, structSize is 0

impDevirtualizeCall: Trying to devirtualize interface call:
    class for 'this' is System.Collections.Generic.IEnumerator`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] (attrib 10200400)
    base method is System.Collections.IEnumerator::MoveNext
Considering guarded devirt...
No likely implementor of interface 00000000D1FFAB1E (System.Collections.Generic.IEnumerator`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]), sorry
INLINER: during 'impMarkInlineCandidate' result 'failed this call site' reason 'target not direct' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.Collections.IEnumerator:MoveNext():bool:this'
INLINER: during 'impMarkInlineCandidate' result 'failed this call site' reason 'target not direct'

    [ 1] 240 (0x0f0) brtrue.s

STMT00025 (IL 0x0E9...  ???)
               [000084] --C-G-------              *  JTRUE     void  
               [000083] --C-G-------              \--*  NE        int   
               [000081] --C-G-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext
               [000080] ------------ this in rcx     |  \--*  LCL_VAR   ref    V06 loc4         
               [000082] ------------                 \--*  CNS_INT   int    0

impImportBlockPending for BB10

impImportBlockPending for BB03

Importing BB03 (PC=114) of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'
    [ 0] 114 (0x072) ldloc.s 4
    [ 1] 116 (0x074) callvirt 0A000072
In Compiler::impImportCall: opcode is callvirt, kind=2, callRetType is ref, structSize is 0

impDevirtualizeCall: Trying to devirtualize interface call:
    class for 'this' is System.Collections.Generic.IEnumerator`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] (attrib 10200400)
    base method is System.Collections.Generic.IEnumerator`1[__Canon]::get_Current
Considering guarded devirt...
No likely implementor of interface 00000000D1FFAB1E (System.Collections.Generic.IEnumerator`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]), sorry
INLINER: during 'impMarkInlineCandidate' result 'failed this call site' reason 'target not direct' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon]:get_Current():System.__Canon:this'
INLINER: during 'impMarkInlineCandidate' result 'failed this call site' reason 'target not direct'

    [ 1] 121 (0x079) stloc.s 5
lvaUpdateClass: NOT Updating class for V07 from (00000000D1FFAB1E) System.String to (00000000D1FFAB1E) System.__Canon


STMT00026 (IL 0x072...  ???)
               [000088] -AC-G-------              *  ASG       ref   
               [000087] D------N----              +--*  LCL_VAR   ref    V07 loc5         
               [000086] --C-G-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current
               [000085] ------------ this in rcx     \--*  LCL_VAR   ref    V06 loc4         

    [ 0] 123 (0x07b) newobj
lvaGrabTemp returning 16 (V16 tmp5) called for NewObj constructor temp.


STMT00027 (IL 0x07B...  ???)
               [000092] -A----------              *  ASG       ref   
               [000091] D------N----              +--*  LCL_VAR   ref    V16 tmp5         
               [000090] ------------              \--*  ALLOCOBJ  ref   
               [000089] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token
Marked V16 as a single def local

lvaSetClass: setting class for V16 to (00000000D1FFAB1E) System.Diagnostics.ProcessStartInfo  [exact]
 0A0000B3
In Compiler::impImportCall: opcode is newobj, kind=0, callRetType is void, structSize is 0


STMT00028 (IL   ???...  ???)
               [000094] I-C-G-------              *  CALL      void   System.Diagnostics.ProcessStartInfo..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000093] ------------ this in rcx  \--*  LCL_VAR   ref    V16 tmp5         

    [ 1] 128 (0x080) dup
    [ 2] 129 (0x081) ldloc.1
    [ 3] 130 (0x082) callvirt 0A0000B4
In Compiler::impImportCall: opcode is callvirt, kind=0, callRetType is void, structSize is 0


STMT00029 (IL 0x080...  ???)
               [000098] I-C-G-------              *  CALL nullcheck void   System.Diagnostics.ProcessStartInfo.set_FileName (exactContextHnd=0x00000000D1FFAB1E)
               [000096] ------------ this in rcx  +--*  LCL_VAR   ref    V16 tmp5         
               [000097] ------------ arg1         \--*  LCL_VAR   ref    V03 loc1         

    [ 1] 135 (0x087) dup
    [ 2] 136 (0x088) ldloc.2
    [ 3] 137 (0x089) brtrue.s

STMT00030 (IL 0x087...  ???)
               [000103] ------------              *  JTRUE     void  
               [000102] ------------              \--*  NE        int   
               [000100] ------------                 +--*  LCL_VAR   int    V04 loc2         
               [000101] ------------                 \--*  CNS_INT   int    0

*************** In impGetSpillTmpBase(BB03)

lvaGrabTemps(2) returning 17..18 (long lifetime temps) called for IL Stack Entries
*************** In fgComputeCheapPreds()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i newobj 
BB02 [0001]  1  0                          1       [070..072)-> BB09 (always) T0      try {       keep i try label 
BB03 [0002]  1  0                          1       [072..08B)-> BB05 ( cond ) T0                  newobj bwd bwd-target 
BB04 [0003]  1  0                          1       [08B..08F)-> BB06 (always) T0                  bwd 
BB05 [0004]  1  0                          1       [08F..09C)                 T0                  bwd 
BB06 [0005]  2  0                          1       [09C..0BB)-> BB08 ( cond ) T0                  bwd 
BB07 [0006]  1  0                          1       [0BB..0D3)                 T0                  bwd 
BB08 [0007]  2  0                          1       [0D3..0E9)                 T0                  bwd 
BB09 [0008]  2  0                          1       [0E9..0F2)-> BB03 ( cond ) T0                  i bwd 
BB10 [0009]  1  0                          1       [0F2..0F4)-> BB14 (leave ) T0      }           
BB11 [0010]  1     0                       1       [0F4..0F8)-> BB13 ( cond )    H0   finally {   keep label target 
BB12 [0011]  1     0                       1       [0F8..0FF)                    H0               
BB13 [0012]  2     0                       1       [0FF..100)        (finret)    H0   }           
BB14 [0013]  1                             1       [100..127)-> BB16 (always)                     
BB15 [0014]  1                             1       [127..133)                                     bwd bwd-target 
BB16 [0015]  2                             1       [133..147)-> BB15 ( cond )                     bwd 
BB17 [0016]  1                             1       [147..153)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------


*************** After fgComputeCheapPreds()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd cheap preds     weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i newobj 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB09 (always) T0      try {       keep i try label 
BB03 [0002]  1  0    BB09                  1       [072..08B)-> BB05 ( cond ) T0                  newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  1       [08B..08F)-> BB06 (always) T0                  bwd 
BB05 [0004]  1  0    BB03                  1       [08F..09C)                 T0                  bwd 
BB06 [0005]  2  0    BB05,BB04             1       [09C..0BB)-> BB08 ( cond ) T0                  bwd 
BB07 [0006]  1  0    BB06                  1       [0BB..0D3)                 T0                  bwd 
BB08 [0007]  2  0    BB07,BB06             1       [0D3..0E9)                 T0                  bwd 
BB09 [0008]  2  0    BB08,BB02             1       [0E9..0F2)-> BB03 ( cond ) T0                  i bwd 
BB10 [0009]  1  0    BB09                  1       [0F2..0F4)-> BB14 (leave ) T0      }           
BB11 [0010]  1     0                       1       [0F4..0F8)-> BB13 ( cond )    H0   finally {   keep label target 
BB12 [0011]  1     0 BB11                  1       [0F8..0FF)                    H0               
BB13 [0012]  2     0 BB12,BB11             1       [0FF..100)        (finret)    H0   }           
BB14 [0013]  1       BB10                  1       [100..127)-> BB16 (always)                     
BB15 [0014]  1       BB16                  1       [127..133)                                     bwd bwd-target 
BB16 [0015]  2       BB15,BB14             1       [133..147)-> BB15 ( cond )                     bwd 
BB17 [0016]  1       BB16                  1       [147..153)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------


Spilling stack entries into temps


STMT00031 (IL   ???...  ???)
               [000105] -A----------              *  ASG       ref   
               [000104] D------N----              +--*  LCL_VAR   ref    V17 tmp6         
               [000095] ------------              \--*  LCL_VAR   ref    V16 tmp5         


STMT00032 (IL   ???...  ???)
               [000108] -A----------              *  ASG       ref   
               [000107] D------N----              +--*  LCL_VAR   ref    V18 tmp7         
               [000099] ------------              \--*  LCL_VAR   ref    V16 tmp5         


STMT00030 (IL 0x087...  ???)
               [000103] ------------              *  JTRUE     void  
               [000102] ------------              \--*  NE        int   
               [000100] ------------                 +--*  LCL_VAR   int    V04 loc2         
               [000101] ------------                 \--*  CNS_INT   int    0

impImportBlockPending for BB04

impImportBlockPending for BB05

Importing BB05 (PC=143) of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'
    [ 2] 143 (0x08f) ldloc.3
    [ 3] 144 (0x090) ldstr 700004FC
    [ 4] 149 (0x095) ldloc.s 5
    [ 5] 151 (0x097) call 0A00006F
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'too many il bytes' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.String:Concat(System.String,System.String,System.String):System.String'

INLINER: Marking System.String:Concat(System.String,System.String,System.String):System.String as NOINLINE because of too many il bytes
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'too many il bytes'

*************** In impGetSpillTmpBase(BB05)

lvaGrabTemps(3) returning 19..21 (long lifetime temps) called for IL Stack Entries
Spilling stack entries into temps


STMT00033 (IL   ???...  ???)
               [000119] -A----------              *  ASG       ref   
               [000118] D------N----              +--*  LCL_VAR   ref    V19 tmp8         
               [000112] ------------              \--*  LCL_VAR   ref    V17 tmp6         


STMT00034 (IL   ???...  ???)
               [000122] -A----------              *  ASG       ref   
               [000121] D------N----              +--*  LCL_VAR   ref    V20 tmp9         
               [000113] ------------              \--*  LCL_VAR   ref    V18 tmp7         


STMT00035 (IL   ???...  ???)
               [000125] -AC-G-------              *  ASG       ref   
               [000124] D------N----              +--*  LCL_VAR   ref    V21 tmp10        
               [000117] --C-G-------              \--*  CALL      ref    System.String.Concat
               [000114] ------------ arg0            +--*  LCL_VAR   ref    V05 loc3         
               [000115] ------------ arg1            +--*  CNS_STR   ref   <string constant>
               [000116] ------------ arg2            \--*  LCL_VAR   ref    V07 loc5         

impImportBlockPending for BB06

Importing BB06 (PC=156) of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'
    [ 3] 156 (0x09c) callvirt 0A0000B5
In Compiler::impImportCall: opcode is callvirt, kind=0, callRetType is void, structSize is 0


STMT00036 (IL   ???...  ???)
               [000130] I-C-G-------              *  CALL nullcheck void   System.Diagnostics.ProcessStartInfo.set_Arguments (exactContextHnd=0x00000000D1FFAB1E)
               [000128] ------------ this in rcx  +--*  LCL_VAR   ref    V20 tmp9         
               [000129] ------------ arg1         \--*  LCL_VAR   ref    V21 tmp10        

    [ 1] 161 (0x0a1) dup
    [ 2] 162 (0x0a2) ldc.i4.0 0
    [ 3] 163 (0x0a3) callvirt 0A0000B6
In Compiler::impImportCall: opcode is callvirt, kind=0, callRetType is void, structSize is 0


STMT00037 (IL 0x0A1...  ???)
               [000133] I-C-G-------              *  CALL nullcheck void   System.Diagnostics.ProcessStartInfo.set_UseShellExecute (exactContextHnd=0x00000000D1FFAB1E)
               [000131] ------------ this in rcx  +--*  LCL_VAR   ref    V19 tmp8         
               [000134] ------------ arg1         \--*  PUTARG_TYPE bool  
               [000132] ------------                 \--*  CNS_INT   int    0

    [ 1] 168 (0x0a8) stloc.s 6

STMT00038 (IL 0x0A8...  ???)
               [000136] -A----------              *  ASG       ref   
               [000135] D------N----              +--*  LCL_VAR   ref    V08 loc6         
               [000127] ------------              \--*  LCL_VAR   ref    V19 tmp8         

    [ 0] 170 (0x0aa) ldloc.0
    [ 1] 171 (0x0ab) ldfld 04000077
    [ 1] 176 (0x0b0) ldloc.s 6
    [ 2] 178 (0x0b2) ldloc.0
    [ 3] 179 (0x0b3) ldfld 0400007E
    [ 3] 184 (0x0b8) dup
lvaGrabTemp returning 22 (V22 tmp11) called for dup spill.

lvaGrabTemp returning 23 (V23 tmp12) called for impAppendStmt.


STMT00040 (IL 0x0AA...  ???)
               [000145] -A-XG-------              *  ASG       ref   
               [000144] D------N----              +--*  LCL_VAR   ref    V23 tmp12        
               [000138] ---XG-------              \--*  FIELD     ref    queuedAnalyzers
               [000137] ------------                 \--*  LCL_VAR   ref    V02 loc0         
Marked V23 as a single def temp
Querying runtime about current class of field <>c__DisplayClass5_0.queuedAnalyzers (declared as System.Collections.Generic.Queue`1[[System.Diagnostics.Process, System.Diagnostics.Process, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a]])
Field's current class not available

lvaSetClass: setting class for V23 to (00000000D1FFAB1E) System.Collections.Generic.Queue`1[[System.Diagnostics.Process, System.Diagnostics.Process, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a]] 


STMT00039 (IL 0x0AA...  ???)
               [000143] -A-XG-------              *  ASG       ref   
               [000142] D------N----              +--*  LCL_VAR   ref    V22 tmp11        
               [000141] ---XG-------              \--*  FIELD     ref    <>9__2
               [000140] ------------                 \--*  LCL_VAR   ref    V02 loc0         
Marked V22 as a single def local
Querying runtime about current class of field <>c__DisplayClass5_0.<>9__2 (declared as System.Action`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]])
Field's current class not available

lvaSetClass: setting class for V22 to (00000000D1FFAB1E) System.Action`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] 

    [ 4] 185 (0x0b9) brtrue.s

STMT00041 (IL   ???...  ???)
               [000151] ------------              *  JTRUE     void  
               [000150] ------------              \--*  NE        int   
               [000148] ------------                 +--*  LCL_VAR   ref    V22 tmp11        
               [000149] ------------                 \--*  CNS_INT   ref    null

*************** In impGetSpillTmpBase(BB06)

lvaGrabTemps(3) returning 24..26 (long lifetime temps) called for IL Stack Entries
Spilling stack entries into temps


STMT00042 (IL   ???...  ???)
               [000153] -A----------              *  ASG       ref   
               [000152] D------N----              +--*  LCL_VAR   ref    V24 tmp13        
               [000146] ------------              \--*  LCL_VAR   ref    V23 tmp12        


STMT00043 (IL   ???...  ???)
               [000156] -A----------              *  ASG       ref   
               [000155] D------N----              +--*  LCL_VAR   ref    V25 tmp14        
               [000139] ------------              \--*  LCL_VAR   ref    V08 loc6         


STMT00044 (IL   ???...  ???)
               [000159] -A----------              *  ASG       ref   
               [000158] D------N----              +--*  LCL_VAR   ref    V26 tmp15        
               [000147] ------------              \--*  LCL_VAR   ref    V22 tmp11        


STMT00041 (IL   ???...  ???)
               [000151] ------------              *  JTRUE     void  
               [000150] ------------              \--*  NE        int   
               [000148] ------------                 +--*  LCL_VAR   ref    V22 tmp11        
               [000149] ------------                 \--*  CNS_INT   ref    null

impImportBlockPending for BB07

impImportBlockPending for BB08

Importing BB08 (PC=211) of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'
    [ 3] 211 (0x0d3) ldloc.0
    [ 4] 212 (0x0d4) ldftn 06000095
    [ 5] 218 (0x0da) newobj
lvaGrabTemp returning 27 (V27 tmp16) called for NewObj constructor temp.


STMT00045 (IL   ???...  ???)
               [000172] -A----------              *  ASG       ref   
               [000171] D------N----              +--*  LCL_VAR   ref    V27 tmp16        
               [000170] ------------              \--*  ALLOCOBJ  ref   
               [000169] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token
Marked V27 as a single def local

lvaSetClass: setting class for V27 to (00000000D1FFAB1E) System.Action`1[[System.Diagnostics.Process, System.Diagnostics.Process, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a]]  [exact]
 0A0000B8
In Compiler::impImportCall: opcode is newobj, kind=0, callRetType is void, structSize is 0

fgOptimizeDelegateConstructor: optimized


STMT00046 (IL   ???...  ???)
               [000174] I-C-G-------              *  CALL      void   System.MulticastDelegate.CtorClosed (exactContextHnd=0x00000000D1FFAB1E)
               [000173] ------------ this in rcx  +--*  LCL_VAR   ref    V27 tmp16        
               [000167] ------------ arg1         +--*  LCL_VAR   ref    V02 loc0         
               [000168] ------------ arg2         \--*  FTN_ADDR  long   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__OnAnalyzerFinished|1


    [ 4] 223 (0x0df) call 06000031
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'too many il bytes' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'SolutionAnalyzer.IPC:CreateSession(System.Diagnostics.ProcessStartInfo,System.Action`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.Action`1[[System.Diagnostics.Process, System.Diagnostics.Process, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a]]):System.Diagnostics.Process'

INLINER: Marking SolutionAnalyzer.IPC:CreateSession(System.Diagnostics.ProcessStartInfo,System.Action`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.Action`1[[System.Diagnostics.Process, System.Diagnostics.Process, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a]]):System.Diagnostics.Process as NOINLINE because of too many il bytes
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'too many il bytes'

    [ 2] 228 (0x0e4) callvirt 0A0000B9
In Compiler::impImportCall: opcode is callvirt, kind=0, callRetType is void, structSize is 0
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'too many il bytes' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.Collections.Generic.Queue`1[__Canon][System.__Canon]:Enqueue(System.__Canon):this'

INLINER: Marking System.Collections.Generic.Queue`1[__Canon][System.__Canon]:Enqueue(System.__Canon):this as NOINLINE because of too many il bytes
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'too many il bytes'


STMT00047 (IL 0x0DF...  ???)
               [000177] --C-G-------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue
               [000164] ------------ this in rcx  +--*  LCL_VAR   ref    V24 tmp13        
               [000176] --C-G------- arg1         \--*  CALL      ref    SolutionAnalyzer.IPC.CreateSession
               [000165] ------------ arg0            +--*  LCL_VAR   ref    V25 tmp14        
               [000166] ------------ arg1            +--*  LCL_VAR   ref    V26 tmp15        
               [000175] ------------ arg2            \--*  LCL_VAR   ref    V27 tmp16        

impImportBlockPending for BB09

Importing BB07 (PC=187) of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'
    [ 3] 187 (0x0bb) pop
    [ 2] 188 (0x0bc) ldloc.0
    [ 3] 189 (0x0bd) ldloc.0
    [ 4] 190 (0x0be) ldftn 06000096
    [ 5] 196 (0x0c4) newobj
lvaGrabTemp returning 28 (V28 tmp17) called for NewObj constructor temp.


STMT00048 (IL   ???...  ???)
               [000184] -A----------              *  ASG       ref   
               [000183] D------N----              +--*  LCL_VAR   ref    V28 tmp17        
               [000182] ------------              \--*  ALLOCOBJ  ref   
               [000181] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token
Marked V28 as a single def local

lvaSetClass: setting class for V28 to (00000000D1FFAB1E) System.Action`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]  [exact]
 0A0000B7
In Compiler::impImportCall: opcode is newobj, kind=0, callRetType is void, structSize is 0

fgOptimizeDelegateConstructor: optimized


STMT00049 (IL   ???...  ???)
               [000186] I-C-G-------              *  CALL      void   System.MulticastDelegate.CtorClosed (exactContextHnd=0x00000000D1FFAB1E)
               [000185] ------------ this in rcx  +--*  LCL_VAR   ref    V28 tmp17        
               [000179] ------------ arg1         +--*  LCL_VAR   ref    V02 loc0         
               [000180] ------------ arg2         \--*  FTN_ADDR  long   <>c__DisplayClass5_0.<ExecuteAnalyzers>b__2


    [ 4] 201 (0x0c9) dup
    [ 5] 202 (0x0ca) stloc.s 7

STMT00050 (IL 0x0C9...  ???)
               [000190] -A----------              *  ASG       ref   
               [000189] D------N----              +--*  LCL_VAR   ref    V09 loc7         
               [000188] ------------              \--*  LCL_VAR   ref    V28 tmp17        

    [ 4] 204 (0x0cc) stfld 0400007E

STMT00051 (IL   ???...  ???)
               [000192] -A-XG-------              *  ASG       ref   
               [000191] ---XG--N----              +--*  FIELD     ref    <>9__2
               [000178] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000187] ------------              \--*  LCL_VAR   ref    V28 tmp17        

    [ 2] 209 (0x0d1) ldloc.s 7
Spilling stack entries into temps


STMT00052 (IL   ???...  ???)
               [000199] -A----------              *  ASG       ref   
               [000198] D------N----              +--*  LCL_VAR   ref    V26 tmp15        
               [000193] ------------              \--*  LCL_VAR   ref    V09 loc7         

impImportBlockPending for BB08

Importing BB04 (PC=139) of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'
    [ 2] 139 (0x08b) ldloc.s 5
    [ 3] 141 (0x08d) br.s
Spilling stack entries into temps


STMT00053 (IL   ???...  ???)
               [000203] -A----------              *  ASG       ref   
               [000202] D------N----              +--*  LCL_VAR   ref    V19 tmp8         
               [000110] ------------              \--*  LCL_VAR   ref    V17 tmp6         


STMT00054 (IL   ???...  ???)
               [000206] -A----------              *  ASG       ref   
               [000205] D------N----              +--*  LCL_VAR   ref    V20 tmp9         
               [000111] ------------              \--*  LCL_VAR   ref    V18 tmp7         


STMT00055 (IL   ???...  ???)
               [000209] -A----------              *  ASG       ref   
               [000208] D------N----              +--*  LCL_VAR   ref    V21 tmp10        
               [000201] ------------              \--*  LCL_VAR   ref    V07 loc5         

impImportBlockPending for BB06

Importing BB10 (PC=242) of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'
    [ 0] 242 (0x0f2) leave.s 0100
Before import CEE_LEAVE in BB10 (targetting BB14):

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd cheap preds     weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i newobj 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB09 (always) T0      try {       keep i try label 
BB03 [0002]  1  0    BB09                  1       [072..08B)-> BB05 ( cond ) T0                  i newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  1       [08B..08F)-> BB06 (always) T0                  i bwd 
BB05 [0004]  1  0    BB03                  1       [08F..09C)                 T0                  i bwd 
BB06 [0005]  2  0    BB05,BB04             1       [09C..0BB)-> BB08 ( cond ) T0                  i bwd 
BB07 [0006]  1  0    BB06                  1       [0BB..0D3)                 T0                  i newobj bwd 
BB08 [0007]  2  0    BB07,BB06             1       [0D3..0E9)                 T0                  i newobj bwd 
BB09 [0008]  2  0    BB08,BB02             1       [0E9..0F2)-> BB03 ( cond ) T0                  i bwd 
BB10 [0009]  1  0    BB09                  1       [0F2..0F4)-> BB14 (leave ) T0      }           
BB11 [0010]  1     0                       1       [0F4..0F8)-> BB13 ( cond )    H0   finally {   keep label target 
BB12 [0011]  1     0 BB11                  1       [0F8..0FF)                    H0               
BB13 [0012]  2     0 BB12,BB11             1       [0FF..100)        (finret)    H0   }           
BB14 [0013]  1       BB10                  1       [100..127)-> BB16 (always)                     
BB15 [0014]  1       BB16                  1       [127..133)                                     bwd bwd-target 
BB16 [0015]  2       BB15,BB14             1       [133..147)-> BB15 ( cond )                     bwd 
BB17 [0016]  1       BB16                  1       [147..153)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB02..BB10 [070..0F4), Finally at BB11..BB13 [0F4..100)
fgFindInsertPoint(regionIndex=0, putInTryRegion=true, startBlk=BB01, endBlk=BB00, nearBlk=BB10, jumpBlk=BB00, runRarely=false)
fgNewBBinRegion(jumpKind=8, tryIndex=0, hndIndex=0, putInFilter=false, runRarely=false, insertAtEnd=false): inserting after BB10
New Basic Block BB18 [0017] created.
impImportLeave - jumping out of a finally-protected try (EH#0), convert block BB10 to BBJ_ALWAYS, add BBJ_CALLFINALLY block BB18
New Basic Block BB19 [0018] created.
impImportLeave - jumping out of a finally-protected try (EH#0), created step (BBJ_ALWAYS) block BB19
impImportLeave - final destination of step blocks set to BB14

impImportBlockPending for BB14

After import CEE_LEAVE:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd cheap preds     weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i newobj 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB09 (always) T0      try {       keep i try label 
BB03 [0002]  1  0    BB09                  1       [072..08B)-> BB05 ( cond ) T0                  i newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  1       [08B..08F)-> BB06 (always) T0                  i bwd 
BB05 [0004]  1  0    BB03                  1       [08F..09C)                 T0                  i bwd 
BB06 [0005]  2  0    BB05,BB04             1       [09C..0BB)-> BB08 ( cond ) T0                  i bwd 
BB07 [0006]  1  0    BB06                  1       [0BB..0D3)                 T0                  i newobj bwd 
BB08 [0007]  2  0    BB07,BB06             1       [0D3..0E9)                 T0                  i newobj bwd 
BB09 [0008]  2  0    BB08,BB02             1       [0E9..0F2)-> BB03 ( cond ) T0                  i bwd 
BB10 [0009]  1  0    BB09                  1       [0F2..0F4)-> BB18 (always) T0      }           
BB18 [0017]  1                             1       [???..???)-> BB11 (callf )                     i internal 
BB19 [0018]  0                             1       [???..???)-> BB14 (ALWAYS)                     i internal KEEP 
BB11 [0010]  1     0                       1       [0F4..0F8)-> BB13 ( cond )    H0   finally {   keep label target 
BB12 [0011]  1     0 BB11                  1       [0F8..0FF)                    H0               
BB13 [0012]  2     0 BB12,BB11             1       [0FF..100)        (finret)    H0   }           
BB14 [0013]  1       BB10                  1       [100..127)-> BB16 (always)                     
BB15 [0014]  1       BB16                  1       [127..133)                                     bwd bwd-target 
BB16 [0015]  2       BB15,BB14             1       [133..147)-> BB15 ( cond )                     bwd 
BB17 [0016]  1       BB16                  1       [147..153)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB02..BB10 [070..0F4), Finally at BB11..BB13 [0F4..100)

impImportBlockPending for BB18

Importing BB14 (PC=256) of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'
    [ 0] 256 (0x100) ldloc.0
    [ 1] 257 (0x101) ldloc.0
    [ 2] 258 (0x102) ldfld 04000077
    [ 2] 263 (0x107) callvirt 0A0000BA
In Compiler::impImportCall: opcode is callvirt, kind=0, callRetType is int, structSize is 0


STMT00056 (IL 0x100...  ???)
               [000214] I-CXG-------              *  CALL nullcheck int    System.Collections.Generic.Queue`1[__Canon][System.__Canon].get_Count (exactContextHnd=0x00000000D1FFAB1E)
               [000213] ---XG------- this in rcx  \--*  FIELD     ref    queuedAnalyzers
               [000212] ------------                 \--*  LCL_VAR   ref    V02 loc0         

    [ 2] 268 (0x10c) stfld 0400007A

STMT00057 (IL   ???...  ???)
               [000217] -ACXG-------              *  ASG       int   
               [000216] ---XG--N----              +--*  FIELD     int    analyzerCount
               [000211] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000215] --C---------              \--*  RET_EXPR  int   (inl return from call [000214])

    [ 0] 273 (0x111) ldloc.0
    [ 1] 274 (0x112) ldloc.0
    [ 2] 275 (0x113) ldfld 0400007A
    [ 2] 280 (0x118) newobj
lvaGrabTemp returning 29 (V29 tmp18) called for NewObj constructor temp.


STMT00058 (IL 0x111...  ???)
               [000224] -A----------              *  ASG       ref   
               [000223] D------N----              +--*  LCL_VAR   ref    V29 tmp18        
               [000222] ------------              \--*  ALLOCOBJ  ref   
               [000221] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e method
Marked V29 as a single def local

lvaSetClass: setting class for V29 to (00000000D1FFAB1E) SolutionAnalyzer.LinearProgressReporter  [exact]
 0600003E
In Compiler::impImportCall: opcode is newobj, kind=0, callRetType is void, structSize is 0


STMT00059 (IL   ???...  ???)
               [000226] I-CXG-------              *  CALL      void   SolutionAnalyzer.LinearProgressReporter..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000225] ------------ this in rcx  +--*  LCL_VAR   ref    V29 tmp18        
               [000220] ---XG------- arg1         \--*  FIELD     int    analyzerCount
               [000219] ------------                 \--*  LCL_VAR   ref    V02 loc0         

    [ 2] 285 (0x11d) stfld 04000078

STMT00060 (IL 0x11D...  ???)
               [000229] -A-XG-------              *  ASG       ref   
               [000228] ---XG--N----              +--*  FIELD     ref    progressReporter
               [000218] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000227] ------------              \--*  LCL_VAR   ref    V29 tmp18        

    [ 0] 290 (0x122) ldc.i4.0 0
    [ 1] 291 (0x123) stloc.s 8

STMT00061 (IL 0x122...  ???)
               [000232] -A----------              *  ASG       int   
               [000231] D------N----              +--*  LCL_VAR   int    V10 loc8         
               [000230] ------------              \--*  CNS_INT   int    0

    [ 0] 293 (0x125) br.s
impImportBlockPending for BB16

Importing BB16 (PC=307) of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'
    [ 0] 307 (0x133) ldloc.s 8
    [ 1] 309 (0x135) call 0A0000BB
In Compiler::impImportCall: opcode is call, kind=0, callRetType is int, structSize is 0


STMT00062 (IL 0x133...  ???)
               [000234] I-C-G-------              *  CALL      int    System.Environment.get_ProcessorCount (exactContextHnd=0x00000000D1FFAB1E)

    [ 2] 314 (0x13a) ldloc.0
    [ 3] 315 (0x13b) ldfld 0400007A
    [ 3] 320 (0x140) call 0A0000BC
In Compiler::impImportCall: opcode is call, kind=0, callRetType is int, structSize is 0


STMT00063 (IL   ???...  ???)
               [000238] I-CXG-------              *  CALL      int    System.Math.Min (exactContextHnd=0x00000000D1FFAB1E)
               [000235] --C--------- arg0         +--*  RET_EXPR  int   (inl return from call [000234])
               [000237] ---XG------- arg1         \--*  FIELD     int    analyzerCount
               [000236] ------------                 \--*  LCL_VAR   ref    V02 loc0         

    [ 2] 325 (0x145) blt.s

STMT00064 (IL   ???...  ???)
               [000241] --C---------              *  JTRUE     void  
               [000240] --C---------              \--*  LT        int   
               [000233] ------------                 +--*  LCL_VAR   int    V10 loc8         
               [000239] --C---------                 \--*  RET_EXPR  int   (inl return from call [000238])

impImportBlockPending for BB17

impImportBlockPending for BB15

Importing BB15 (PC=295) of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'
    [ 0] 295 (0x127) ldloc.0
    [ 1] 296 (0x128) callvirt 06000094
In Compiler::impImportCall: opcode is callvirt, kind=0, callRetType is void, structSize is 0


STMT00065 (IL 0x127...  ???)
               [000243] I-C-G-------              *  CALL nullcheck void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0 (exactContextHnd=0x00000000D1FFAB1E)
               [000242] ------------ this in rcx  \--*  LCL_VAR   ref    V02 loc0         

    [ 0] 301 (0x12d) ldloc.s 8
    [ 1] 303 (0x12f) ldc.i4.1 1
    [ 2] 304 (0x130) add
    [ 1] 305 (0x131) stloc.s 8

STMT00066 (IL 0x12D...  ???)
               [000248] -A----------              *  ASG       int   
               [000247] D------N----              +--*  LCL_VAR   int    V10 loc8         
               [000246] ------------              \--*  ADD       int   
               [000244] ------------                 +--*  LCL_VAR   int    V10 loc8         
               [000245] ------------                 \--*  CNS_INT   int    1

impImportBlockPending for BB16

Importing BB17 (PC=327) of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'
    [ 0] 327 (0x147) ldloc.0
    [ 1] 328 (0x148) ldfld 0400007B
    [ 1] 333 (0x14d) callvirt 0A0000BD (Implicit Tail call: prefixFlags |= PREFIX_TAILCALL_IMPLICIT)
In Compiler::impImportCall: opcode is callvirt, kind=0, callRetType is ref, structSize is 0

GTF_CALL_M_IMPLICIT_TAILCALL set for call [000251]


STMT00067 (IL 0x147...  ???)
               [000251] I-CXG-------              *  CALL nullcheck ref    System.Threading.Tasks.TaskCompletionSource`1[Boolean][System.Boolean].get_Task (exactContextHnd=0x00000000D1FFAB1E)
               [000250] ---XG------- this in rcx  \--*  FIELD     ref    allAnalyzersHaveRun
               [000249] ------------                 \--*  LCL_VAR   ref    V02 loc0         

    [ 1] 338 (0x152) ret

STMT00068 (IL   ???...  ???)
               [000253] --C---------              *  RETURN    ref   
               [000252] --C---------              \--*  RET_EXPR  ref   (inl return from call [000251])

Importing BB11 (PC=244) of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'
    [ 0] 244 (0x0f4) ldloc.s 4
    [ 1] 246 (0x0f6) brfalse.s

STMT00069 (IL 0x0F4...  ???)
               [000257] ------------              *  JTRUE     void  
               [000256] ------------              \--*  EQ        int   
               [000254] ------------                 +--*  LCL_VAR   ref    V06 loc4         
               [000255] ------------                 \--*  CNS_INT   ref    null

impImportBlockPending for BB12

impImportBlockPending for BB13

Importing BB13 (PC=255) of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'
    [ 0] 255 (0x0ff) endfinally

STMT00070 (IL 0x0FF...  ???)
               [000258] ------------              *  RETFILT   void  

Importing BB12 (PC=248) of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'
    [ 0] 248 (0x0f8) ldloc.s 4
    [ 1] 250 (0x0fa) callvirt 0A000078
In Compiler::impImportCall: opcode is callvirt, kind=2, callRetType is void, structSize is 0

impDevirtualizeCall: Trying to devirtualize interface call:
    class for 'this' is System.Collections.Generic.IEnumerator`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] (attrib 10200400)
    base method is System.IDisposable::Dispose
Considering guarded devirt...
No likely implementor of interface 00000000D1FFAB1E (System.Collections.Generic.IEnumerator`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]), sorry
INLINER: during 'impMarkInlineCandidate' result 'failed this call site' reason 'target not direct' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.IDisposable:Dispose():this'
INLINER: during 'impMarkInlineCandidate' result 'failed this call site' reason 'target not direct'


STMT00071 (IL 0x0F8...  ???)
               [000260] --C-G-------              *  CALLV stub void   System.IDisposable.Dispose
               [000259] ------------ this in rcx  \--*  LCL_VAR   ref    V06 loc4         

impImportBlockPending for BB13

After impImport() added block for try,catch,finally
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd cheap preds     weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i newobj 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB09 (always) T0      try {       keep i try label 
BB03 [0002]  1  0    BB09                  1       [072..08B)-> BB05 ( cond ) T0                  i newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  1       [08B..08F)-> BB06 (always) T0                  i bwd 
BB05 [0004]  1  0    BB03                  1       [08F..09C)                 T0                  i bwd 
BB06 [0005]  2  0    BB05,BB04             1       [09C..0BB)-> BB08 ( cond ) T0                  i bwd 
BB07 [0006]  1  0    BB06                  1       [0BB..0D3)                 T0                  i newobj bwd 
BB08 [0007]  2  0    BB07,BB06             1       [0D3..0E9)                 T0                  i newobj bwd 
BB09 [0008]  2  0    BB08,BB02             1       [0E9..0F2)-> BB03 ( cond ) T0                  i bwd 
BB10 [0009]  1  0    BB09                  1       [0F2..0F4)-> BB18 (always) T0      }           i 
BB18 [0017]  1                             1       [???..???)-> BB11 (callf )                     i internal 
BB19 [0018]  0                             1       [???..???)-> BB14 (ALWAYS)                     i internal KEEP 
BB11 [0010]  1     0                       1       [0F4..0F8)-> BB13 ( cond )    H0   finally {   keep i label target 
BB12 [0011]  1     0 BB11                  1       [0F8..0FF)                    H0               i 
BB13 [0012]  2     0 BB12,BB11             1       [0FF..100)        (finret)    H0   }           i 
BB14 [0013]  1       BB10                  1       [100..127)-> BB16 (always)                     i newobj 
BB15 [0014]  1       BB16                  1       [127..133)                                     i bwd bwd-target 
BB16 [0015]  2       BB15,BB14             1       [133..147)-> BB15 ( cond )                     i bwd 
BB17 [0016]  1       BB16                  1       [147..153)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------


** Note: root method IL was partially imported -- imported 335 of 339 bytes of method IL

*************** Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i newobj 
BB02 [0001]  1  0                          1       [070..072)-> BB09 (always) T0      try {       keep i try label 
BB03 [0002]  1  0                          1       [072..08B)-> BB05 ( cond ) T0                  i newobj bwd bwd-target 
BB04 [0003]  1  0                          1       [08B..08F)-> BB06 (always) T0                  i bwd 
BB05 [0004]  1  0                          1       [08F..09C)                 T0                  i bwd 
BB06 [0005]  2  0                          1       [09C..0BB)-> BB08 ( cond ) T0                  i bwd 
BB07 [0006]  1  0                          1       [0BB..0D3)                 T0                  i newobj bwd 
BB08 [0007]  2  0                          1       [0D3..0E9)                 T0                  i newobj bwd 
BB09 [0008]  2  0                          1       [0E9..0F2)-> BB03 ( cond ) T0                  i bwd 
BB10 [0009]  1  0                          1       [0F2..0F4)-> BB18 (always) T0      }           i 
BB18 [0017]  1                             1       [???..???)-> BB11 (callf )                     i internal 
BB19 [0018]  0                             1       [???..???)-> BB14 (ALWAYS)                     i internal KEEP 
BB11 [0010]  1     0                       1       [0F4..0F8)-> BB13 ( cond )    H0   finally {   keep i label target 
BB12 [0011]  1     0                       1       [0F8..0FF)                    H0               i 
BB13 [0012]  2     0                       1       [0FF..100)        (finret)    H0   }           i 
BB14 [0013]  1                             1       [100..127)-> BB16 (always)                     i newobj 
BB15 [0014]  1                             1       [127..133)                                     i bwd bwd-target 
BB16 [0015]  2                             1       [133..147)-> BB15 ( cond )                     i bwd 
BB17 [0016]  1                             1       [147..153)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..070), preds={} succs={BB02}

***** BB01
STMT00000 (IL 0x000...0x005)
               [000003] -A----------              *  ASG       ref   
               [000002] D------N----              +--*  LCL_VAR   ref    V12 tmp1         
               [000001] ------------              \--*  ALLOCOBJ  ref   
               [000000] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB01
STMT00001 (IL   ???...  ???)
               [000005] I-C-G-------              *  CALL      void   <>c__DisplayClass5_0..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000004] ------------ this in rcx  \--*  LCL_VAR   ref    V12 tmp1         

***** BB01
STMT00002 (IL 0x005...  ???)
               [000008] -A----------              *  ASG       ref   
               [000007] D------N----              +--*  LCL_VAR   ref    V02 loc0         
               [000006] ------------              \--*  LCL_VAR   ref    V12 tmp1         

***** BB01
STMT00003 (IL 0x006...0x008)
               [000012] -A-XG-------              *  ASG       ref   
               [000011] ---XG--N----              +--*  FIELD     ref    outputFile
               [000009] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000010] ------------              \--*  LCL_VAR   ref    V01 arg1         

***** BB01
STMT00004 (IL 0x00D...0x00F)
               [000016] -A-XG-------              *  ASG       int   
               [000015] ---XG--N----              +--*  FIELD     int    analyzerCount
               [000013] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000014] ------------              \--*  CNS_INT   int    0

***** BB01
STMT00005 (IL 0x014...0x016)
               [000020] -A-XG-------              *  ASG       int   
               [000019] ---XG--N----              +--*  FIELD     int    analyzersFinishedCount
               [000017] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000018] ------------              \--*  CNS_INT   int    0

***** BB01
STMT00006 (IL 0x01B...0x021)
               [000025] -A----------              *  ASG       ref   
               [000024] D------N----              +--*  LCL_VAR   ref    V13 tmp2         
               [000023] ------------              \--*  ALLOCOBJ  ref   
               [000022] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00007 (IL   ???...  ???)
               [000027] I-C-G-------              *  CALL      void   System.Threading.Tasks.TaskCompletionSource`1[Boolean][System.Boolean]..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000026] ------------ this in rcx  \--*  LCL_VAR   ref    V13 tmp2         

***** BB01
STMT00008 (IL 0x021...  ???)
               [000030] -A-XG-------              *  ASG       ref   
               [000029] ---XG--N----              +--*  FIELD     ref    allAnalyzersHaveRun
               [000021] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000028] ------------              \--*  LCL_VAR   ref    V13 tmp2         

***** BB01
STMT00009 (IL 0x026...0x02C)
               [000035] -A----------              *  ASG       ref   
               [000034] D------N----              +--*  LCL_VAR   ref    V14 tmp3         
               [000033] ------------              \--*  ALLOCOBJ  ref   
               [000032] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00010 (IL   ???...  ???)
               [000037] I-C-G-------              *  CALL      void   System.Collections.Generic.Queue`1[__Canon][System.__Canon]..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000036] ------------ this in rcx  \--*  LCL_VAR   ref    V14 tmp3         

***** BB01
STMT00011 (IL 0x02C...  ???)
               [000040] -A-XG-------              *  ASG       ref   
               [000039] ---XG--N----              +--*  FIELD     ref    queuedAnalyzers
               [000031] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000038] ------------              \--*  LCL_VAR   ref    V14 tmp3         

***** BB01
STMT00012 (IL 0x031...0x033)
               [000044] -A-XG-------              *  ASG       ref   
               [000043] ---XG--N----              +--*  FIELD     ref    progressReporter
               [000041] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000042] ------------              \--*  CNS_INT   ref    null

***** BB01
STMT00013 (IL 0x038...0x03E)
               [000049] -A----------              *  ASG       ref   
               [000048] D------N----              +--*  LCL_VAR   ref    V15 tmp4         
               [000047] ------------              \--*  ALLOCOBJ  ref   
               [000046] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00014 (IL   ???...  ???)
               [000051] I-C-G-------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000050] ------------ this in rcx  \--*  LCL_VAR   ref    V15 tmp4         

***** BB01
STMT00015 (IL 0x03E...  ???)
               [000054] -A-XG-------              *  ASG       ref   
               [000053] ---XG--N----              +--*  FIELD     ref    output
               [000045] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000052] ------------              \--*  LCL_VAR   ref    V15 tmp4         

***** BB01
STMT00016 (IL 0x043...0x052)
               [000055] I-C-G-------              *  CALL      ref    System.Diagnostics.Process.GetCurrentProcess (exactContextHnd=0x00000000D1FFAB1E)

***** BB01
STMT00017 (IL   ???...  ???)
               [000057] I-C-G-------              *  CALL nullcheck ref    System.Diagnostics.Process.get_MainModule (exactContextHnd=0x00000000D1FFAB1E)
               [000056] --C--------- this in rcx  \--*  RET_EXPR  ref   (inl return from call [000055])

***** BB01
STMT00018 (IL   ???...  ???)
               [000059] I-C-G-------              *  CALL nullcheck ref    System.Diagnostics.ProcessModule.get_FileName (exactContextHnd=0x00000000D1FFAB1E)
               [000058] --C--------- this in rcx  \--*  RET_EXPR  ref   (inl return from call [000057])

***** BB01
STMT00019 (IL   ???...  ???)
               [000062] -AC---------              *  ASG       ref   
               [000061] D------N----              +--*  LCL_VAR   ref    V03 loc1         
               [000060] --C---------              \--*  RET_EXPR  ref   (inl return from call [000059])

***** BB01
STMT00020 (IL 0x053...0x05F)
               [000066] I-C-G-------              *  CALL nullcheck int    System.String.Contains (exactContextHnd=0x00000000D1FFAB1E)
               [000063] ------------ this in rcx  +--*  LCL_VAR   ref    V03 loc1         
               [000064] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000065] ------------ arg2         \--*  CNS_INT   int    5

***** BB01
STMT00021 (IL   ???...  ???)
               [000069] -AC---------              *  ASG       int   
               [000068] D------N----              +--*  LCL_VAR   int    V04 loc2         
               [000067] --C---------              \--*  RET_EXPR  int   (inl return from call [000066])

***** BB01
STMT00022 (IL 0x060...0x067)
               [000070] I-C-G-------              *  CALL      ref    System.Environment.GetCommandLineArgs (exactContextHnd=0x00000000D1FFAB1E)

***** BB01
STMT00023 (IL   ???...  ???)
               [000075] -ACXG-------              *  ASG       ref   
               [000074] D------N----              +--*  LCL_VAR   ref    V05 loc3         
               [000073] --CXG-------              \--*  INDEX     ref   
               [000071] --C---------                 +--*  RET_EXPR  ref   (inl return from call [000070])
               [000072] ------------                 \--*  CNS_INT   int    0

***** BB01
STMT00024 (IL 0x068...0x06E)
               [000079] -AC-G-------              *  ASG       ref   
               [000078] D------N----              +--*  LCL_VAR   ref    V06 loc4         
               [000077] --C-G-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator
               [000076] ------------ this in rcx     \--*  LCL_VAR   ref    V00 arg0         

------------ BB02 [070..072) -> BB09 (always), preds={} succs={BB09}

------------ BB03 [072..08B) -> BB05 (cond), preds={} succs={BB04,BB05}

***** BB03
STMT00026 (IL 0x072...0x079)
               [000088] -AC-G-------              *  ASG       ref   
               [000087] D------N----              +--*  LCL_VAR   ref    V07 loc5         
               [000086] --C-G-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current
               [000085] ------------ this in rcx     \--*  LCL_VAR   ref    V06 loc4         

***** BB03
STMT00027 (IL 0x07B...0x089)
               [000092] -A----------              *  ASG       ref   
               [000091] D------N----              +--*  LCL_VAR   ref    V16 tmp5         
               [000090] ------------              \--*  ALLOCOBJ  ref   
               [000089] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB03
STMT00028 (IL   ???...  ???)
               [000094] I-C-G-------              *  CALL      void   System.Diagnostics.ProcessStartInfo..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000093] ------------ this in rcx  \--*  LCL_VAR   ref    V16 tmp5         

***** BB03
STMT00029 (IL 0x080...  ???)
               [000098] I-C-G-------              *  CALL nullcheck void   System.Diagnostics.ProcessStartInfo.set_FileName (exactContextHnd=0x00000000D1FFAB1E)
               [000096] ------------ this in rcx  +--*  LCL_VAR   ref    V16 tmp5         
               [000097] ------------ arg1         \--*  LCL_VAR   ref    V03 loc1         

***** BB03
STMT00031 (IL   ???...0x089)
               [000105] -A----------              *  ASG       ref   
               [000104] D------N----              +--*  LCL_VAR   ref    V17 tmp6         
               [000095] ------------              \--*  LCL_VAR   ref    V16 tmp5         

***** BB03
STMT00032 (IL   ???...  ???)
               [000108] -A----------              *  ASG       ref   
               [000107] D------N----              +--*  LCL_VAR   ref    V18 tmp7         
               [000099] ------------              \--*  LCL_VAR   ref    V16 tmp5         

***** BB03
STMT00030 (IL 0x087...  ???)
               [000103] ------------              *  JTRUE     void  
               [000102] ------------              \--*  NE        int   
               [000100] ------------                 +--*  LCL_VAR   int    V04 loc2         
               [000101] ------------                 \--*  CNS_INT   int    0

------------ BB04 [08B..08F) -> BB06 (always), preds={} succs={BB06}

***** BB04
STMT00053 (IL   ???...0x08D)
               [000203] -A----------              *  ASG       ref   
               [000202] D------N----              +--*  LCL_VAR   ref    V19 tmp8         
               [000110] ------------              \--*  LCL_VAR   ref    V17 tmp6         

***** BB04
STMT00054 (IL   ???...  ???)
               [000206] -A----------              *  ASG       ref   
               [000205] D------N----              +--*  LCL_VAR   ref    V20 tmp9         
               [000111] ------------              \--*  LCL_VAR   ref    V18 tmp7         

***** BB04
STMT00055 (IL   ???...  ???)
               [000209] -A----------              *  ASG       ref   
               [000208] D------N----              +--*  LCL_VAR   ref    V21 tmp10        
               [000201] ------------              \--*  LCL_VAR   ref    V07 loc5         

------------ BB05 [08F..09C), preds={} succs={BB06}

***** BB05
STMT00033 (IL   ???...0x097)
               [000119] -A----------              *  ASG       ref   
               [000118] D------N----              +--*  LCL_VAR   ref    V19 tmp8         
               [000112] ------------              \--*  LCL_VAR   ref    V17 tmp6         

***** BB05
STMT00034 (IL   ???...  ???)
               [000122] -A----------              *  ASG       ref   
               [000121] D------N----              +--*  LCL_VAR   ref    V20 tmp9         
               [000113] ------------              \--*  LCL_VAR   ref    V18 tmp7         

***** BB05
STMT00035 (IL   ???...  ???)
               [000125] -AC-G-------              *  ASG       ref   
               [000124] D------N----              +--*  LCL_VAR   ref    V21 tmp10        
               [000117] --C-G-------              \--*  CALL      ref    System.String.Concat
               [000114] ------------ arg0            +--*  LCL_VAR   ref    V05 loc3         
               [000115] ------------ arg1            +--*  CNS_STR   ref   <string constant>
               [000116] ------------ arg2            \--*  LCL_VAR   ref    V07 loc5         

------------ BB06 [09C..0BB) -> BB08 (cond), preds={} succs={BB07,BB08}

***** BB06
STMT00036 (IL   ???...0x0A8)
               [000130] I-C-G-------              *  CALL nullcheck void   System.Diagnostics.ProcessStartInfo.set_Arguments (exactContextHnd=0x00000000D1FFAB1E)
               [000128] ------------ this in rcx  +--*  LCL_VAR   ref    V20 tmp9         
               [000129] ------------ arg1         \--*  LCL_VAR   ref    V21 tmp10        

***** BB06
STMT00037 (IL 0x0A1...  ???)
               [000133] I-C-G-------              *  CALL nullcheck void   System.Diagnostics.ProcessStartInfo.set_UseShellExecute (exactContextHnd=0x00000000D1FFAB1E)
               [000131] ------------ this in rcx  +--*  LCL_VAR   ref    V19 tmp8         
               [000134] ------------ arg1         \--*  PUTARG_TYPE bool  
               [000132] ------------                 \--*  CNS_INT   int    0

***** BB06
STMT00038 (IL 0x0A8...  ???)
               [000136] -A----------              *  ASG       ref   
               [000135] D------N----              +--*  LCL_VAR   ref    V08 loc6         
               [000127] ------------              \--*  LCL_VAR   ref    V19 tmp8         

***** BB06
STMT00040 (IL 0x0AA...0x0B9)
               [000145] -A-XG-------              *  ASG       ref   
               [000144] D------N----              +--*  LCL_VAR   ref    V23 tmp12        
               [000138] ---XG-------              \--*  FIELD     ref    queuedAnalyzers
               [000137] ------------                 \--*  LCL_VAR   ref    V02 loc0         

***** BB06
STMT00039 (IL 0x0AA...  ???)
               [000143] -A-XG-------              *  ASG       ref   
               [000142] D------N----              +--*  LCL_VAR   ref    V22 tmp11        
               [000141] ---XG-------              \--*  FIELD     ref    <>9__2
               [000140] ------------                 \--*  LCL_VAR   ref    V02 loc0         

***** BB06
STMT00042 (IL   ???...0x0B9)
               [000153] -A----------              *  ASG       ref   
               [000152] D------N----              +--*  LCL_VAR   ref    V24 tmp13        
               [000146] ------------              \--*  LCL_VAR   ref    V23 tmp12        

***** BB06
STMT00043 (IL   ???...  ???)
               [000156] -A----------              *  ASG       ref   
               [000155] D------N----              +--*  LCL_VAR   ref    V25 tmp14        
               [000139] ------------              \--*  LCL_VAR   ref    V08 loc6         

***** BB06
STMT00044 (IL   ???...  ???)
               [000159] -A----------              *  ASG       ref   
               [000158] D------N----              +--*  LCL_VAR   ref    V26 tmp15        
               [000147] ------------              \--*  LCL_VAR   ref    V22 tmp11        

***** BB06
STMT00041 (IL   ???...  ???)
               [000151] ------------              *  JTRUE     void  
               [000150] ------------              \--*  NE        int   
               [000148] ------------                 +--*  LCL_VAR   ref    V22 tmp11        
               [000149] ------------                 \--*  CNS_INT   ref    null

------------ BB07 [0BB..0D3), preds={} succs={BB08}

***** BB07
STMT00048 (IL   ???...0x0CA)
               [000184] -A----------              *  ASG       ref   
               [000183] D------N----              +--*  LCL_VAR   ref    V28 tmp17        
               [000182] ------------              \--*  ALLOCOBJ  ref   
               [000181] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB07
STMT00049 (IL   ???...  ???)
               [000186] I-C-G-------              *  CALL      void   System.MulticastDelegate.CtorClosed (exactContextHnd=0x00000000D1FFAB1E)
               [000185] ------------ this in rcx  +--*  LCL_VAR   ref    V28 tmp17        
               [000179] ------------ arg1         +--*  LCL_VAR   ref    V02 loc0         
               [000180] ------------ arg2         \--*  FTN_ADDR  long   <>c__DisplayClass5_0.<ExecuteAnalyzers>b__2


***** BB07
STMT00050 (IL 0x0C9...  ???)
               [000190] -A----------              *  ASG       ref   
               [000189] D------N----              +--*  LCL_VAR   ref    V09 loc7         
               [000188] ------------              \--*  LCL_VAR   ref    V28 tmp17        

***** BB07
STMT00051 (IL   ???...0x0CC)
               [000192] -A-XG-------              *  ASG       ref   
               [000191] ---XG--N----              +--*  FIELD     ref    <>9__2
               [000178] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000187] ------------              \--*  LCL_VAR   ref    V28 tmp17        

***** BB07
STMT00052 (IL   ???...0x0D1)
               [000199] -A----------              *  ASG       ref   
               [000198] D------N----              +--*  LCL_VAR   ref    V26 tmp15        
               [000193] ------------              \--*  LCL_VAR   ref    V09 loc7         

------------ BB08 [0D3..0E9), preds={} succs={BB09}

***** BB08
STMT00045 (IL   ???...0x0E4)
               [000172] -A----------              *  ASG       ref   
               [000171] D------N----              +--*  LCL_VAR   ref    V27 tmp16        
               [000170] ------------              \--*  ALLOCOBJ  ref   
               [000169] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB08
STMT00046 (IL   ???...  ???)
               [000174] I-C-G-------              *  CALL      void   System.MulticastDelegate.CtorClosed (exactContextHnd=0x00000000D1FFAB1E)
               [000173] ------------ this in rcx  +--*  LCL_VAR   ref    V27 tmp16        
               [000167] ------------ arg1         +--*  LCL_VAR   ref    V02 loc0         
               [000168] ------------ arg2         \--*  FTN_ADDR  long   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__OnAnalyzerFinished|1


***** BB08
STMT00047 (IL 0x0DF...  ???)
               [000177] --C-G-------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue
               [000164] ------------ this in rcx  +--*  LCL_VAR   ref    V24 tmp13        
               [000176] --C-G------- arg1         \--*  CALL      ref    SolutionAnalyzer.IPC.CreateSession
               [000165] ------------ arg0            +--*  LCL_VAR   ref    V25 tmp14        
               [000166] ------------ arg1            +--*  LCL_VAR   ref    V26 tmp15        
               [000175] ------------ arg2            \--*  LCL_VAR   ref    V27 tmp16        

------------ BB09 [0E9..0F2) -> BB03 (cond), preds={} succs={BB10,BB03}

***** BB09
STMT00025 (IL 0x0E9...0x0F0)
               [000084] --C-G-------              *  JTRUE     void  
               [000083] --C-G-------              \--*  NE        int   
               [000081] --C-G-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext
               [000080] ------------ this in rcx     |  \--*  LCL_VAR   ref    V06 loc4         
               [000082] ------------                 \--*  CNS_INT   int    0

------------ BB10 [0F2..0F4) -> BB18 (always), preds={} succs={BB18}

------------ BB18 [???..???) -> BB11 (callf), preds={} succs={BB11}

------------ BB19 [???..???) -> BB14 (ALWAYS), preds={} succs={BB14}

------------ BB11 [0F4..0F8) -> BB13 (cond), preds={} succs={BB12,BB13}

***** BB11
STMT00069 (IL 0x0F4...0x0F6)
               [000257] ------------              *  JTRUE     void  
               [000256] ------------              \--*  EQ        int   
               [000254] ------------                 +--*  LCL_VAR   ref    V06 loc4         
               [000255] ------------                 \--*  CNS_INT   ref    null

------------ BB12 [0F8..0FF), preds={} succs={BB13}

***** BB12
STMT00071 (IL 0x0F8...0x0FA)
               [000260] --C-G-------              *  CALLV stub void   System.IDisposable.Dispose
               [000259] ------------ this in rcx  \--*  LCL_VAR   ref    V06 loc4         

------------ BB13 [0FF..100) (finret), preds={} succs={BB19}

***** BB13
STMT00070 (IL 0x0FF...0x0FF)
               [000258] ------------              *  RETFILT   void  

------------ BB14 [100..127) -> BB16 (always), preds={} succs={BB16}

***** BB14
STMT00056 (IL 0x100...0x10C)
               [000214] I-CXG-------              *  CALL nullcheck int    System.Collections.Generic.Queue`1[__Canon][System.__Canon].get_Count (exactContextHnd=0x00000000D1FFAB1E)
               [000213] ---XG------- this in rcx  \--*  FIELD     ref    queuedAnalyzers
               [000212] ------------                 \--*  LCL_VAR   ref    V02 loc0         

***** BB14
STMT00057 (IL   ???...  ???)
               [000217] -ACXG-------              *  ASG       int   
               [000216] ---XG--N----              +--*  FIELD     int    analyzerCount
               [000211] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000215] --C---------              \--*  RET_EXPR  int   (inl return from call [000214])

***** BB14
STMT00058 (IL 0x111...0x11D)
               [000224] -A----------              *  ASG       ref   
               [000223] D------N----              +--*  LCL_VAR   ref    V29 tmp18        
               [000222] ------------              \--*  ALLOCOBJ  ref   
               [000221] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB14
STMT00059 (IL   ???...  ???)
               [000226] I-CXG-------              *  CALL      void   SolutionAnalyzer.LinearProgressReporter..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000225] ------------ this in rcx  +--*  LCL_VAR   ref    V29 tmp18        
               [000220] ---XG------- arg1         \--*  FIELD     int    analyzerCount
               [000219] ------------                 \--*  LCL_VAR   ref    V02 loc0         

***** BB14
STMT00060 (IL 0x11D...  ???)
               [000229] -A-XG-------              *  ASG       ref   
               [000228] ---XG--N----              +--*  FIELD     ref    progressReporter
               [000218] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000227] ------------              \--*  LCL_VAR   ref    V29 tmp18        

***** BB14
STMT00061 (IL 0x122...0x123)
               [000232] -A----------              *  ASG       int   
               [000231] D------N----              +--*  LCL_VAR   int    V10 loc8         
               [000230] ------------              \--*  CNS_INT   int    0

------------ BB15 [127..133), preds={} succs={BB16}

***** BB15
STMT00065 (IL 0x127...0x131)
               [000243] I-C-G-------              *  CALL nullcheck void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0 (exactContextHnd=0x00000000D1FFAB1E)
               [000242] ------------ this in rcx  \--*  LCL_VAR   ref    V02 loc0         

***** BB15
STMT00066 (IL 0x12D...  ???)
               [000248] -A----------              *  ASG       int   
               [000247] D------N----              +--*  LCL_VAR   int    V10 loc8         
               [000246] ------------              \--*  ADD       int   
               [000244] ------------                 +--*  LCL_VAR   int    V10 loc8         
               [000245] ------------                 \--*  CNS_INT   int    1

------------ BB16 [133..147) -> BB15 (cond), preds={} succs={BB17,BB15}

***** BB16
STMT00062 (IL 0x133...0x145)
               [000234] I-C-G-------              *  CALL      int    System.Environment.get_ProcessorCount (exactContextHnd=0x00000000D1FFAB1E)

***** BB16
STMT00063 (IL   ???...  ???)
               [000238] I-CXG-------              *  CALL      int    System.Math.Min (exactContextHnd=0x00000000D1FFAB1E)
               [000235] --C--------- arg0         +--*  RET_EXPR  int   (inl return from call [000234])
               [000237] ---XG------- arg1         \--*  FIELD     int    analyzerCount
               [000236] ------------                 \--*  LCL_VAR   ref    V02 loc0         

***** BB16
STMT00064 (IL   ???...  ???)
               [000241] --C---------              *  JTRUE     void  
               [000240] --C---------              \--*  LT        int   
               [000233] ------------                 +--*  LCL_VAR   int    V10 loc8         
               [000239] --C---------                 \--*  RET_EXPR  int   (inl return from call [000238])

------------ BB17 [147..153) (return), preds={} succs={}

***** BB17
STMT00067 (IL 0x147...0x152)
               [000251] I-CXG-------              *  CALL nullcheck ref    System.Threading.Tasks.TaskCompletionSource`1[Boolean][System.Boolean].get_Task (exactContextHnd=0x00000000D1FFAB1E)
               [000250] ---XG------- this in rcx  \--*  FIELD     ref    allAnalyzersHaveRun
               [000249] ------------                 \--*  LCL_VAR   ref    V02 loc0         

***** BB17
STMT00068 (IL   ???...  ???)
               [000253] --C---------              *  RETURN    ref   
               [000252] --C---------              \--*  RET_EXPR  ref   (inl return from call [000251])

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Finishing PHASE Indirect call transform [no changes]

*************** Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Finishing PHASE Expand patchpoints [no changes]

*************** Starting PHASE Post-import

*************** Finishing PHASE Post-import

*************** Starting PHASE Morph - Init

New BlockSet epoch 1, # of blocks (including unused BB00): 20, bitset array size: 1 (short)

*************** In fgRemoveEmptyBlocks

*************** Finishing PHASE Morph - Init
*************** In fgDebugCheckBBlist

*************** Starting PHASE Morph - Inlining
Expanding INLINE_CANDIDATE in statement STMT00001 in BB01:
STMT00001 (IL   ???...  ???)
               [000005] I-C-G-------              *  CALL      void   <>c__DisplayClass5_0..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000004] ------------ this in rcx  \--*  LCL_VAR   ref    V12 tmp1         
thisArg: is a local var
               [000004] ------------              *  LCL_VAR   ref    V12 tmp1         

INLINER: inlineInfo.tokenLookupContextHandle for <>c__DisplayClass5_0:.ctor():this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method <>c__DisplayClass5_0:.ctor():this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  28 28 00 00 0a    call         0xA000028
IL_0006  2a                ret         

INLINER impTokenLookupContextHandle for <>c__DisplayClass5_0:.ctor():this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for <>c__DisplayClass5_0:.ctor():this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB20 [0019] created.
BB20 [000..007)
Basic block list for '<>c__DisplayClass5_0:.ctor():this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB20 [0019]  1                             1       [000..007)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000005] Starting PHASE Pre-import

*************** Inline @[000005] Finishing PHASE Pre-import

*************** Inline @[000005] Starting PHASE Importation
*************** In impImport() for <>c__DisplayClass5_0:.ctor():this

impImportBlockPending for BB20

Importing BB20 (PC=000) of '<>c__DisplayClass5_0:.ctor():this'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) call 0A000028
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0


               [000261] I-C-G-------              *  CALL      void   System.Object..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000004] ------------ this in rcx  \--*  LCL_VAR   ref    V12 tmp1         

    [ 0]   6 (0x006) ret
After impImport() added block for try,catch,finally
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB20 [0019]  1                             1       [000..007)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** Inline @[000005] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB20 [0019]  1                             1       [000..007)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB20 [000..007) (return), preds={} succs={}

***** BB20
               [000261] I-C-G-------              *  CALL      void   System.Object..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000004] ------------ this in rcx  \--*  LCL_VAR   ref    V12 tmp1         

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000005] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000005] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000005] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000005] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000005] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000005] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000005] -----------

Arguments setup:

Inlinee method body:
STMT00072 (IL   ???...  ???)
               [000261] I-C-G-------              *  CALL      void   System.Object..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000004] ------------ this in rcx  \--*  LCL_VAR   ref    V12 tmp1         

fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined <>c__DisplayClass5_0:.ctor():this (7 IL bytes) (depth 1) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling '<>c__DisplayClass5_0:.ctor():this'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Expanding INLINE_CANDIDATE in statement STMT00072 in BB01:
STMT00072 (IL   ???...  ???)
               [000261] I-C-G-------              *  CALL      void   System.Object..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000004] ------------ this in rcx  \--*  LCL_VAR   ref    V12 tmp1         
thisArg: is a local var
               [000004] ------------              *  LCL_VAR   ref    V12 tmp1         

INLINER: inlineInfo.tokenLookupContextHandle for System.Object:.ctor():this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Object:.ctor():this :
IL to import:
IL_0000  2a                ret         

INLINER impTokenLookupContextHandle for System.Object:.ctor():this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Object:.ctor():this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB21 [0020] created.
BB21 [000..001)
Basic block list for 'System.Object:.ctor():this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB21 [0020]  1                             1       [000..001)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000261] Starting PHASE Pre-import

*************** Inline @[000261] Finishing PHASE Pre-import

*************** Inline @[000261] Starting PHASE Importation
*************** In impImport() for System.Object:.ctor():this

impImportBlockPending for BB21

Importing BB21 (PC=000) of 'System.Object:.ctor():this'
    [ 0]   0 (0x000) ret
After impImport() added block for try,catch,finally
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB21 [0020]  1                             1       [000..001)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------


** Note: inlinee IL was partially imported -- imported 0 of 1 bytes of method IL

*************** Inline @[000261] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB21 [0020]  1                             1       [000..001)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB21 [000..001) (return), preds={} succs={}

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000261] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000261] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000261] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000261] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000261] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000261] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000261] -----------

Arguments setup:

Inlinee method body:fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined System.Object:.ctor():this (1 IL bytes) (depth 2) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.Object:.ctor():this'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Expanding INLINE_CANDIDATE in statement STMT00007 in BB01:
STMT00007 (IL   ???...  ???)
               [000027] I-C-G-------              *  CALL      void   System.Threading.Tasks.TaskCompletionSource`1[Boolean][System.Boolean]..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000026] ------------ this in rcx  \--*  LCL_VAR   ref    V13 tmp2         
thisArg: is a local var
               [000026] ------------              *  LCL_VAR   ref    V13 tmp2         

INLINER: inlineInfo.tokenLookupContextHandle for System.Threading.Tasks.TaskCompletionSource`1[Boolean][System.Boolean]:.ctor():this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Threading.Tasks.TaskCompletionSource`1[Boolean][System.Boolean]:.ctor():this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  28 a7 04 00 06    call         0x60004A7
IL_0006  02                ldarg.0     
IL_0007  73 c0 06 00 0a    newobj       0xA0006C0
IL_000c  7d 64 07 00 0a    stfld        0xA000764
IL_0011  2a                ret         

INLINER impTokenLookupContextHandle for System.Threading.Tasks.TaskCompletionSource`1[Boolean][System.Boolean]:.ctor():this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Threading.Tasks.TaskCompletionSource`1[Boolean][System.Boolean]:.ctor():this
weight= 10 : state   3 [ ldarg.0 ]
weight= 79 : state  40 [ call ]
weight= 10 : state   3 [ ldarg.0 ]
weight=227 : state 103 [ newobj ]
weight= 31 : state 111 [ stfld ]
weight= 19 : state  42 [ ret ]

multiplier in instance constructors increased to 1.5.
Inline candidate is mostly loads and stores.  Multiplier increased to 4.5.
Inline candidate callsite is boring.  Multiplier increased to 5.8.
calleeNativeSizeEstimate=376
callsiteNativeSizeEstimate=85
benefit multiplier=5.8
threshold=493
Native estimate for function size is within threshold for inlining 37.6 <= 49.3 (multiplier = 5.8)
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB22 [0021] created.
BB22 [000..012)
Basic block list for 'System.Threading.Tasks.TaskCompletionSource`1[Boolean][System.Boolean]:.ctor():this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB22 [0021]  1                             1       [000..012)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000027] Starting PHASE Pre-import

*************** Inline @[000027] Finishing PHASE Pre-import

*************** Inline @[000027] Starting PHASE Importation
*************** In impImport() for System.Threading.Tasks.TaskCompletionSource`1[Boolean][System.Boolean]:.ctor():this

impImportBlockPending for BB22

Importing BB22 (PC=000) of 'System.Threading.Tasks.TaskCompletionSource`1[Boolean][System.Boolean]:.ctor():this'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) call 060004A7
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0


               [000264] I-C-G-------              *  CALL      void   System.Object..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000026] ------------ this in rcx  \--*  LCL_VAR   ref    V13 tmp2         

    [ 0]   6 (0x006) ldarg.0
    [ 1]   7 (0x007) newobj
lvaGrabTemp returning 30 (V30 tmp19) called for NewObj constructor temp.


               [000269] -A----------              *  ASG       ref   
               [000268] D------N----              +--*  LCL_VAR   ref    V30 tmp19        
               [000267] ------------              \--*  ALLOCOBJ  ref   
               [000266] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token
Marked V30 as a single def local

lvaSetClass: setting class for V30 to (00000000D1FFAB1E) System.Threading.Tasks.Task`1[Boolean]  [exact]
 0A0006C0
In Compiler::impImportCall: opcode is newobj, kind=0, callRetType is void, structSize is 0


               [000271] I-C-G-------              *  CALL      void   System.Threading.Tasks.Task`1[Boolean][System.Boolean]..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000270] ------------ this in rcx  \--*  LCL_VAR   ref    V30 tmp19        

    [ 2]  12 (0x00c) stfld 0A000764

               [000274] -A-XG-------              *  ASG       ref   
               [000273] ---XG--N----              +--*  FIELD     ref    _task
               [000265] ------------              |  \--*  LCL_VAR   ref    V13 tmp2         
               [000272] ------------              \--*  LCL_VAR   ref    V30 tmp19        

    [ 0]  17 (0x011) ret
After impImport() added block for try,catch,finally
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB22 [0021]  1                             1       [000..012)        (return)                     i newobj 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** Inline @[000027] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB22 [0021]  1                             1       [000..012)        (return)                     i newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB22 [000..012) (return), preds={} succs={}

***** BB22
               [000264] I-C-G-------              *  CALL      void   System.Object..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000026] ------------ this in rcx  \--*  LCL_VAR   ref    V13 tmp2         

***** BB22
               [000269] -A----------              *  ASG       ref   
               [000268] D------N----              +--*  LCL_VAR   ref    V30 tmp19        
               [000267] ------------              \--*  ALLOCOBJ  ref   
               [000266] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB22
               [000271] I-C-G-------              *  CALL      void   System.Threading.Tasks.Task`1[Boolean][System.Boolean]..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000270] ------------ this in rcx  \--*  LCL_VAR   ref    V30 tmp19        

***** BB22
               [000274] -A-XG-------              *  ASG       ref   
               [000273] ---XG--N----              +--*  FIELD     ref    _task
               [000265] ------------              |  \--*  LCL_VAR   ref    V13 tmp2         
               [000272] ------------              \--*  LCL_VAR   ref    V30 tmp19        

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000027] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000027] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000027] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000027] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000027] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000027] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000027] -----------

Arguments setup:

Inlinee method body:
STMT00073 (IL   ???...  ???)
               [000264] I-C-G-------              *  CALL      void   System.Object..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000026] ------------ this in rcx  \--*  LCL_VAR   ref    V13 tmp2         


STMT00074 (IL   ???...  ???)
               [000269] -A----------              *  ASG       ref   
               [000268] D------N----              +--*  LCL_VAR   ref    V30 tmp19        
               [000267] ------------              \--*  ALLOCOBJ  ref   
               [000266] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token


STMT00075 (IL   ???...  ???)
               [000271] I-C-G-------              *  CALL      void   System.Threading.Tasks.Task`1[Boolean][System.Boolean]..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000270] ------------ this in rcx  \--*  LCL_VAR   ref    V30 tmp19        


STMT00076 (IL   ???...  ???)
               [000274] -A-XG-------              *  ASG       ref   
               [000273] ---XG--N----              +--*  FIELD     ref    _task
               [000265] ------------              |  \--*  LCL_VAR   ref    V13 tmp2         
               [000272] ------------              \--*  LCL_VAR   ref    V30 tmp19        

fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined System.Threading.Tasks.TaskCompletionSource`1[Boolean][System.Boolean]:.ctor():this (18 IL bytes) (depth 1) [profitable inline]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'profitable inline' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.Threading.Tasks.TaskCompletionSource`1[Boolean][System.Boolean]:.ctor():this'
INLINER: during 'fgInline' result 'success' reason 'profitable inline'
Expanding INLINE_CANDIDATE in statement STMT00073 in BB01:
STMT00073 (IL   ???...  ???)
               [000264] I-C-G-------              *  CALL      void   System.Object..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000026] ------------ this in rcx  \--*  LCL_VAR   ref    V13 tmp2         
thisArg: is a local var
               [000026] ------------              *  LCL_VAR   ref    V13 tmp2         

INLINER: inlineInfo.tokenLookupContextHandle for System.Object:.ctor():this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Object:.ctor():this :
IL to import:
IL_0000  2a                ret         

INLINER impTokenLookupContextHandle for System.Object:.ctor():this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Object:.ctor():this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB23 [0022] created.
BB23 [000..001)
Basic block list for 'System.Object:.ctor():this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB23 [0022]  1                             1       [000..001)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000264] Starting PHASE Pre-import

*************** Inline @[000264] Finishing PHASE Pre-import

*************** Inline @[000264] Starting PHASE Importation
*************** In impImport() for System.Object:.ctor():this

impImportBlockPending for BB23

Importing BB23 (PC=000) of 'System.Object:.ctor():this'
    [ 0]   0 (0x000) ret
After impImport() added block for try,catch,finally
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB23 [0022]  1                             1       [000..001)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------


** Note: inlinee IL was partially imported -- imported 0 of 1 bytes of method IL

*************** Inline @[000264] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB23 [0022]  1                             1       [000..001)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB23 [000..001) (return), preds={} succs={}

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000264] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000264] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000264] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000264] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000264] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000264] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000264] -----------

Arguments setup:

Inlinee method body:fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined System.Object:.ctor():this (1 IL bytes) (depth 2) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.Object:.ctor():this'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Expanding INLINE_CANDIDATE in statement STMT00075 in BB01:
STMT00075 (IL   ???...  ???)
               [000271] I-C-G-------              *  CALL      void   System.Threading.Tasks.Task`1[Boolean][System.Boolean]..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000270] ------------ this in rcx  \--*  LCL_VAR   ref    V30 tmp19        
thisArg: is a local var
               [000270] ------------              *  LCL_VAR   ref    V30 tmp19        

INLINER: inlineInfo.tokenLookupContextHandle for System.Threading.Tasks.Task`1[Boolean][System.Boolean]:.ctor():this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Threading.Tasks.Task`1[Boolean][System.Boolean]:.ctor():this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  28 84 2b 00 06    call         0x6002B84
IL_0006  2a                ret         

INLINER impTokenLookupContextHandle for System.Threading.Tasks.Task`1[Boolean][System.Boolean]:.ctor():this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Threading.Tasks.Task`1[Boolean][System.Boolean]:.ctor():this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB24 [0023] created.
BB24 [000..007)
Basic block list for 'System.Threading.Tasks.Task`1[Boolean][System.Boolean]:.ctor():this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB24 [0023]  1                             1       [000..007)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000271] Starting PHASE Pre-import

*************** Inline @[000271] Finishing PHASE Pre-import

*************** Inline @[000271] Starting PHASE Importation
*************** In impImport() for System.Threading.Tasks.Task`1[Boolean][System.Boolean]:.ctor():this

impImportBlockPending for BB24

Importing BB24 (PC=000) of 'System.Threading.Tasks.Task`1[Boolean][System.Boolean]:.ctor():this'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) call 06002B84
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0


               [000277] I-C-G-------              *  CALL      void   System.Threading.Tasks.Task..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000270] ------------ this in rcx  \--*  LCL_VAR   ref    V30 tmp19        

    [ 0]   6 (0x006) ret
After impImport() added block for try,catch,finally
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB24 [0023]  1                             1       [000..007)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** Inline @[000271] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB24 [0023]  1                             1       [000..007)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB24 [000..007) (return), preds={} succs={}

***** BB24
               [000277] I-C-G-------              *  CALL      void   System.Threading.Tasks.Task..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000270] ------------ this in rcx  \--*  LCL_VAR   ref    V30 tmp19        

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000271] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000271] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000271] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000271] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000271] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000271] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000271] -----------

Arguments setup:

Inlinee method body:
STMT00077 (IL   ???...  ???)
               [000277] I-C-G-------              *  CALL      void   System.Threading.Tasks.Task..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000270] ------------ this in rcx  \--*  LCL_VAR   ref    V30 tmp19        

fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined System.Threading.Tasks.Task`1[Boolean][System.Boolean]:.ctor():this (7 IL bytes) (depth 2) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.Threading.Tasks.Task`1[Boolean][System.Boolean]:.ctor():this'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Expanding INLINE_CANDIDATE in statement STMT00077 in BB01:
STMT00077 (IL   ???...  ???)
               [000277] I-C-G-------              *  CALL      void   System.Threading.Tasks.Task..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000270] ------------ this in rcx  \--*  LCL_VAR   ref    V30 tmp19        
thisArg: is a local var
               [000270] ------------              *  LCL_VAR   ref    V30 tmp19        

INLINER: inlineInfo.tokenLookupContextHandle for System.Threading.Tasks.Task:.ctor():this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Threading.Tasks.Task:.ctor():this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  28 a7 04 00 06    call         0x60004A7
IL_0006  02                ldarg.0     
IL_0007  20 00 04 00 02    ldc.i4       0x2000400
IL_000c  fe 13             volatile.   
IL_000e  7d 69 0c 00 04    stfld        0x4000C69
IL_0013  2a                ret         

INLINER impTokenLookupContextHandle for System.Threading.Tasks.Task:.ctor():this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Threading.Tasks.Task:.ctor():this
weight= 10 : state   3 [ ldarg.0 ]
weight= 79 : state  40 [ call ]
weight= 10 : state   3 [ ldarg.0 ]
weight= 38 : state  33 [ ldc.i4 ]
weight=-44 : state 178 [ volatile ]
weight= 31 : state 111 [ stfld ]
weight= 19 : state  42 [ ret ]

multiplier in instance constructors increased to 1.5.
Inline candidate is mostly loads and stores.  Multiplier increased to 4.5.
Inline candidate callsite is boring.  Multiplier increased to 5.8.
calleeNativeSizeEstimate=143
callsiteNativeSizeEstimate=85
benefit multiplier=5.8
threshold=493
Native estimate for function size is within threshold for inlining 14.3 <= 49.3 (multiplier = 5.8)
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB25 [0024] created.
BB25 [000..014)
Basic block list for 'System.Threading.Tasks.Task:.ctor():this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB25 [0024]  1                             1       [000..014)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000277] Starting PHASE Pre-import

*************** Inline @[000277] Finishing PHASE Pre-import

*************** Inline @[000277] Starting PHASE Importation
*************** In impImport() for System.Threading.Tasks.Task:.ctor():this

impImportBlockPending for BB25

Importing BB25 (PC=000) of 'System.Threading.Tasks.Task:.ctor():this'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) call 060004A7
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0


               [000279] I-C-G-------              *  CALL      void   System.Object..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000270] ------------ this in rcx  \--*  LCL_VAR   ref    V30 tmp19        

    [ 0]   6 (0x006) ldarg.0
    [ 1]   7 (0x007) ldc.i4 33555456
    [ 2]  12 (0x00c) volatile.stfld 04000C69

               [000283] -A-XGO------              *  ASG       int   
               [000282] V--XGO-N----              +--*  FIELD     int    m_stateFlags
               [000280] ------------              |  \--*  LCL_VAR   ref    V30 tmp19        
               [000281] ------------              \--*  CNS_INT   int    0x2000400

    [ 0]  19 (0x013) ret
After impImport() added block for try,catch,finally
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB25 [0024]  1                             1       [000..014)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** Inline @[000277] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB25 [0024]  1                             1       [000..014)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB25 [000..014) (return), preds={} succs={}

***** BB25
               [000279] I-C-G-------              *  CALL      void   System.Object..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000270] ------------ this in rcx  \--*  LCL_VAR   ref    V30 tmp19        

***** BB25
               [000283] -A-XGO------              *  ASG       int   
               [000282] V--XGO-N----              +--*  FIELD     int    m_stateFlags
               [000280] ------------              |  \--*  LCL_VAR   ref    V30 tmp19        
               [000281] ------------              \--*  CNS_INT   int    0x2000400

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000277] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000277] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000277] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000277] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000277] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000277] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000277] -----------

Arguments setup:

Inlinee method body:
STMT00078 (IL   ???...  ???)
               [000279] I-C-G-------              *  CALL      void   System.Object..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000270] ------------ this in rcx  \--*  LCL_VAR   ref    V30 tmp19        


STMT00079 (IL   ???...  ???)
               [000283] -A-XGO------              *  ASG       int   
               [000282] V--XGO-N----              +--*  FIELD     int    m_stateFlags
               [000280] ------------              |  \--*  LCL_VAR   ref    V30 tmp19        
               [000281] ------------              \--*  CNS_INT   int    0x2000400

fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined System.Threading.Tasks.Task:.ctor():this (20 IL bytes) (depth 3) [profitable inline]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'profitable inline' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.Threading.Tasks.Task:.ctor():this'
INLINER: during 'fgInline' result 'success' reason 'profitable inline'
Expanding INLINE_CANDIDATE in statement STMT00078 in BB01:
STMT00078 (IL   ???...  ???)
               [000279] I-C-G-------              *  CALL      void   System.Object..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000270] ------------ this in rcx  \--*  LCL_VAR   ref    V30 tmp19        
thisArg: is a local var
               [000270] ------------              *  LCL_VAR   ref    V30 tmp19        

INLINER: inlineInfo.tokenLookupContextHandle for System.Object:.ctor():this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Object:.ctor():this :
IL to import:
IL_0000  2a                ret         

INLINER impTokenLookupContextHandle for System.Object:.ctor():this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Object:.ctor():this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB26 [0025] created.
BB26 [000..001)
Basic block list for 'System.Object:.ctor():this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB26 [0025]  1                             1       [000..001)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000279] Starting PHASE Pre-import

*************** Inline @[000279] Finishing PHASE Pre-import

*************** Inline @[000279] Starting PHASE Importation
*************** In impImport() for System.Object:.ctor():this

impImportBlockPending for BB26

Importing BB26 (PC=000) of 'System.Object:.ctor():this'
    [ 0]   0 (0x000) ret
After impImport() added block for try,catch,finally
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB26 [0025]  1                             1       [000..001)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------


** Note: inlinee IL was partially imported -- imported 0 of 1 bytes of method IL

*************** Inline @[000279] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB26 [0025]  1                             1       [000..001)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB26 [000..001) (return), preds={} succs={}

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000279] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000279] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000279] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000279] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000279] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000279] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000279] -----------

Arguments setup:

Inlinee method body:fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined System.Object:.ctor():this (1 IL bytes) (depth 4) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.Object:.ctor():this'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Expanding INLINE_CANDIDATE in statement STMT00010 in BB01:
STMT00010 (IL   ???...  ???)
               [000037] I-C-G-------              *  CALL      void   System.Collections.Generic.Queue`1[__Canon][System.__Canon]..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000036] ------------ this in rcx  \--*  LCL_VAR   ref    V14 tmp3         
thisArg: is a local var
               [000036] ------------              *  LCL_VAR   ref    V14 tmp3         

INLINER: inlineInfo.tokenLookupContextHandle for System.Collections.Generic.Queue`1[__Canon][System.__Canon]:.ctor():this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Collections.Generic.Queue`1[__Canon][System.__Canon]:.ctor():this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  28 0c 00 00 0a    call         0xA00000C
IL_0006  02                ldarg.0     
IL_0007  28 0e 00 00 2b    call         0x2B00000E
IL_000c  7d b7 00 00 0a    stfld        0xA0000B7
IL_0011  2a                ret         

INLINER impTokenLookupContextHandle for System.Collections.Generic.Queue`1[__Canon][System.__Canon]:.ctor():this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Collections.Generic.Queue`1[__Canon][System.__Canon]:.ctor():this
weight= 10 : state   3 [ ldarg.0 ]
weight= 79 : state  40 [ call ]
weight= 10 : state   3 [ ldarg.0 ]
weight= 79 : state  40 [ call ]
weight= 31 : state 111 [ stfld ]
weight= 19 : state  42 [ ret ]

multiplier in instance constructors increased to 1.5.
Inline candidate is mostly loads and stores.  Multiplier increased to 4.5.
Inline candidate callsite is boring.  Multiplier increased to 5.8.
calleeNativeSizeEstimate=228
callsiteNativeSizeEstimate=85
benefit multiplier=5.8
threshold=493
Native estimate for function size is within threshold for inlining 22.8 <= 49.3 (multiplier = 5.8)
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB27 [0026] created.
BB27 [000..012)
Basic block list for 'System.Collections.Generic.Queue`1[__Canon][System.__Canon]:.ctor():this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB27 [0026]  1                             1       [000..012)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000037] Starting PHASE Pre-import

*************** Inline @[000037] Finishing PHASE Pre-import

*************** Inline @[000037] Starting PHASE Importation
*************** In impImport() for System.Collections.Generic.Queue`1[__Canon][System.__Canon]:.ctor():this

impImportBlockPending for BB27

Importing BB27 (PC=000) of 'System.Collections.Generic.Queue`1[__Canon][System.__Canon]:.ctor():this'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) call 0A00000C
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0


               [000286] I-C-G-------              *  CALL      void   System.Object..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000036] ------------ this in rcx  \--*  LCL_VAR   ref    V14 tmp3         

    [ 0]   6 (0x006) ldarg.0
    [ 1]   7 (0x007) call 2B00000E
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0


               [000288] I-C-G-------              *  CALL      ref    System.Array.Empty (exactContextHnd=0x00000000D1FFAB1E)
               [000289] H----------- arg0         \--*  CNS_INT(h) long   0xd1ffab1e method

    [ 2]  12 (0x00c) stfld 0A0000B7

               [000292] -ACXG-------              *  ASG       ref   
               [000291] ---XG--N----              +--*  FIELD     ref    _array
               [000287] ------------              |  \--*  LCL_VAR   ref    V14 tmp3         
               [000290] --C---------              \--*  RET_EXPR  ref   (inl return from call [000288])

    [ 0]  17 (0x011) ret
After impImport() added block for try,catch,finally
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB27 [0026]  1                             1       [000..012)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** Inline @[000037] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB27 [0026]  1                             1       [000..012)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB27 [000..012) (return), preds={} succs={}

***** BB27
               [000286] I-C-G-------              *  CALL      void   System.Object..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000036] ------------ this in rcx  \--*  LCL_VAR   ref    V14 tmp3         

***** BB27
               [000288] I-C-G-------              *  CALL      ref    System.Array.Empty (exactContextHnd=0x00000000D1FFAB1E)
               [000289] H----------- arg0         \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB27
               [000292] -ACXG-------              *  ASG       ref   
               [000291] ---XG--N----              +--*  FIELD     ref    _array
               [000287] ------------              |  \--*  LCL_VAR   ref    V14 tmp3         
               [000290] --C---------              \--*  RET_EXPR  ref   (inl return from call [000288])

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000037] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000037] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000037] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000037] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000037] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000037] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000037] -----------

Arguments setup:

Inlinee method body:
STMT00080 (IL   ???...  ???)
               [000286] I-C-G-------              *  CALL      void   System.Object..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000036] ------------ this in rcx  \--*  LCL_VAR   ref    V14 tmp3         


STMT00081 (IL   ???...  ???)
               [000288] I-C-G-------              *  CALL      ref    System.Array.Empty (exactContextHnd=0x00000000D1FFAB1E)
               [000289] H----------- arg0         \--*  CNS_INT(h) long   0xd1ffab1e method


STMT00082 (IL   ???...  ???)
               [000292] -ACXG-------              *  ASG       ref   
               [000291] ---XG--N----              +--*  FIELD     ref    _array
               [000287] ------------              |  \--*  LCL_VAR   ref    V14 tmp3         
               [000290] --C---------              \--*  RET_EXPR  ref   (inl return from call [000288])

fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined System.Collections.Generic.Queue`1[__Canon][System.__Canon]:.ctor():this (18 IL bytes) (depth 1) [profitable inline]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'profitable inline' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.Collections.Generic.Queue`1[__Canon][System.__Canon]:.ctor():this'
INLINER: during 'fgInline' result 'success' reason 'profitable inline'
Expanding INLINE_CANDIDATE in statement STMT00080 in BB01:
STMT00080 (IL   ???...  ???)
               [000286] I-C-G-------              *  CALL      void   System.Object..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000036] ------------ this in rcx  \--*  LCL_VAR   ref    V14 tmp3         
thisArg: is a local var
               [000036] ------------              *  LCL_VAR   ref    V14 tmp3         

INLINER: inlineInfo.tokenLookupContextHandle for System.Object:.ctor():this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Object:.ctor():this :
IL to import:
IL_0000  2a                ret         

INLINER impTokenLookupContextHandle for System.Object:.ctor():this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Object:.ctor():this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB28 [0027] created.
BB28 [000..001)
Basic block list for 'System.Object:.ctor():this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB28 [0027]  1                             1       [000..001)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000286] Starting PHASE Pre-import

*************** Inline @[000286] Finishing PHASE Pre-import

*************** Inline @[000286] Starting PHASE Importation
*************** In impImport() for System.Object:.ctor():this

impImportBlockPending for BB28

Importing BB28 (PC=000) of 'System.Object:.ctor():this'
    [ 0]   0 (0x000) ret
After impImport() added block for try,catch,finally
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB28 [0027]  1                             1       [000..001)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------


** Note: inlinee IL was partially imported -- imported 0 of 1 bytes of method IL

*************** Inline @[000286] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB28 [0027]  1                             1       [000..001)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB28 [000..001) (return), preds={} succs={}

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000286] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000286] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000286] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000286] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000286] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000286] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000286] -----------

Arguments setup:

Inlinee method body:fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined System.Object:.ctor():this (1 IL bytes) (depth 2) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.Object:.ctor():this'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Expanding INLINE_CANDIDATE in statement STMT00081 in BB01:
STMT00081 (IL   ???...  ???)
               [000288] I-C-G-------              *  CALL      ref    System.Array.Empty (exactContextHnd=0x00000000D1FFAB1E)
               [000289] H----------- arg0         \--*  CNS_INT(h) long   0xd1ffab1e method
INLINER: inlineInfo.tokenLookupContextHandle for System.Array:Empty():System.__Canon[] set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Array:Empty():System.__Canon[] :
IL to import:
IL_0000  7e 0d 00 00 0a    ldsfld       0xA00000D
IL_0005  2a                ret         

INLINER impTokenLookupContextHandle for System.Array:Empty():System.__Canon[] is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Array:Empty():System.__Canon[]
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB29 [0028] created.
BB29 [000..006)
Basic block list for 'System.Array:Empty():System.__Canon[]'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB29 [0028]  1                             1       [000..006)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000288] Starting PHASE Pre-import

*************** Inline @[000288] Finishing PHASE Pre-import

*************** Inline @[000288] Starting PHASE Importation
*************** In impImport() for System.Array:Empty():System.__Canon[]

impImportBlockPending for BB29

Importing BB29 (PC=000) of 'System.Array:Empty():System.__Canon[]'
    [ 0]   0 (0x000) ldsfld 0A00000D
    [ 1]   5 (0x005) ret

    Inlinee Return expression (before normalization)  =>
               [000300] --CXG-------              *  COMMA     ref   
               [000299] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS
               [000297] ------------ arg0         |  +--*  CNS_INT   long   0x7ffc7e0b0028
               [000298] ------------ arg1         |  \--*  CNS_INT   int    14
               [000295] ----G-------              \--*  FIELD     ref    Value


    Inlinee Return expression (after normalization) =>
               [000300] --CXG-------              *  COMMA     ref   
               [000299] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS
               [000297] ------------ arg0         |  +--*  CNS_INT   long   0x7ffc7e0b0028
               [000298] ------------ arg1         |  \--*  CNS_INT   int    14
               [000295] ----G-------              \--*  FIELD     ref    Value

After impImport() added block for try,catch,finally
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB29 [0028]  1                             1       [000..006)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------


** Note: inlinee IL was partially imported -- imported 0 of 6 bytes of method IL

*************** Inline @[000288] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB29 [0028]  1                             1       [000..006)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB29 [000..006) (return), preds={} succs={}

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000288] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000288] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000288] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000288] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000288] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000288] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000288] -----------

Inlinee method body:fgInlineAppendStatements: no gc ref inline locals.

Return expression for call at [000288] is
               [000300] --CXG-------              *  COMMA     ref   
               [000299] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS
               [000297] ------------ arg0         |  +--*  CNS_INT   long   0x7ffc7e0b0028
               [000298] ------------ arg1         |  \--*  CNS_INT   int    14
               [000295] ----G-------              \--*  FIELD     ref    Value
Successfully inlined System.Array:Empty():System.__Canon[] (6 IL bytes) (depth 2) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.Array:Empty():System.__Canon[]'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'

Replacing the return expression placeholder [000290] with [000300]
               [000290] --C---------              *  RET_EXPR  ref   (inl return from call [000300])

Inserting the inline return expression
               [000300] --CXG-------              *  COMMA     ref   
               [000299] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS
               [000297] ------------ arg0         |  +--*  CNS_INT   long   0x7ffc7e0b0028
               [000298] ------------ arg1         |  \--*  CNS_INT   int    14
               [000295] ----G-------              \--*  FIELD     ref    Value

Expanding INLINE_CANDIDATE in statement STMT00014 in BB01:
STMT00014 (IL   ???...  ???)
               [000051] I-C-G-------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000050] ------------ this in rcx  \--*  LCL_VAR   ref    V15 tmp4         
thisArg: is a local var
               [000050] ------------              *  LCL_VAR   ref    V15 tmp4         

INLINER: inlineInfo.tokenLookupContextHandle for System.Collections.Generic.HashSet`1[__Canon][System.__Canon]:.ctor():this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Collections.Generic.HashSet`1[__Canon][System.__Canon]:.ctor():this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  14                ldnull      
IL_0002  28 0b 0c 00 0a    call         0xA000C0B
IL_0007  2a                ret         

INLINER impTokenLookupContextHandle for System.Collections.Generic.HashSet`1[__Canon][System.__Canon]:.ctor():this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Collections.Generic.HashSet`1[__Canon][System.__Canon]:.ctor():this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB30 [0029] created.
BB30 [000..008)
Basic block list for 'System.Collections.Generic.HashSet`1[__Canon][System.__Canon]:.ctor():this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB30 [0029]  1                             1       [000..008)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000051] Starting PHASE Pre-import

*************** Inline @[000051] Finishing PHASE Pre-import

*************** Inline @[000051] Starting PHASE Importation
*************** In impImport() for System.Collections.Generic.HashSet`1[__Canon][System.__Canon]:.ctor():this

impImportBlockPending for BB30

Importing BB30 (PC=000) of 'System.Collections.Generic.HashSet`1[__Canon][System.__Canon]:.ctor():this'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) ldnull
    [ 2]   2 (0x002) call 0A000C0B
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'too many il bytes' for 'System.Collections.Generic.HashSet`1[__Canon][System.__Canon]:.ctor():this' calling 'System.Collections.Generic.HashSet`1[__Canon][System.__Canon]:.ctor(System.Collections.Generic.IEqualityComparer`1[__Canon]):this'

INLINER: Marking System.Collections.Generic.HashSet`1[__Canon][System.__Canon]:.ctor(System.Collections.Generic.IEqualityComparer`1[__Canon]):this as NOINLINE because of too many il bytes
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'too many il bytes'


               [000303] --C-G-------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor
               [000050] ------------ this in rcx  +--*  LCL_VAR   ref    V15 tmp4         
               [000302] ------------ arg1         \--*  CNS_INT   ref    null

    [ 0]   7 (0x007) ret
After impImport() added block for try,catch,finally
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB30 [0029]  1                             1       [000..008)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** Inline @[000051] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB30 [0029]  1                             1       [000..008)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB30 [000..008) (return), preds={} succs={}

***** BB30
               [000303] --C-G-------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor
               [000050] ------------ this in rcx  +--*  LCL_VAR   ref    V15 tmp4         
               [000302] ------------ arg1         \--*  CNS_INT   ref    null

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000051] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000051] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000051] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000051] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000051] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000051] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000051] -----------

Arguments setup:

Inlinee method body:
STMT00083 (IL   ???...  ???)
               [000303] --C-G-------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor
               [000050] ------------ this in rcx  +--*  LCL_VAR   ref    V15 tmp4         
               [000302] ------------ arg1         \--*  CNS_INT   ref    null

fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined System.Collections.Generic.HashSet`1[__Canon][System.__Canon]:.ctor():this (8 IL bytes) (depth 1) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.Collections.Generic.HashSet`1[__Canon][System.__Canon]:.ctor():this'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Expanding INLINE_CANDIDATE in statement STMT00016 in BB01:
STMT00016 (IL 0x043...0x052)
               [000055] I-C-G-------              *  CALL      ref    System.Diagnostics.Process.GetCurrentProcess (exactContextHnd=0x00000000D1FFAB1E)
INLINER: inlineInfo.tokenLookupContextHandle for System.Diagnostics.Process:GetCurrentProcess():System.Diagnostics.Process set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Diagnostics.Process:GetCurrentProcess():System.Diagnostics.Process :
IL to import:
IL_0000  72 34 0c 00 70    ldstr        0x70000C34
IL_0005  16                ldc.i4.0    
IL_0006  28 c1 00 00 0a    call         0xA0000C1
IL_000b  14                ldnull      
IL_000c  73 ef 00 00 06    newobj       0x60000EF
IL_0011  2a                ret         

INLINER impTokenLookupContextHandle for System.Diagnostics.Process:GetCurrentProcess():System.Diagnostics.Process is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Diagnostics.Process:GetCurrentProcess():System.Diagnostics.Process
weight= 66 : state 102 [ ldstr ]
weight= 15 : state  23 [ ldc.i4.0 ]
weight= 79 : state  40 [ call ]
weight=  7 : state  21 [ ldnull ]
weight=227 : state 103 [ newobj ]
weight= 19 : state  42 [ ret ]

Inline candidate callsite is boring.  Multiplier increased to 1.3.
calleeNativeSizeEstimate=413
callsiteNativeSizeEstimate=55
benefit multiplier=1.3
threshold=71
Native estimate for function size exceeds threshold for inlining 41.3 > 7.1 (multiplier = 1.3)


Inline expansion aborted, inline not profitable
Inlining [000055] failed, so bashing STMT00016 to NOP

INLINER: during 'fgInline' result 'failed this call site' reason 'unprofitable inline' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.Diagnostics.Process:GetCurrentProcess():System.Diagnostics.Process'
INLINER: during 'fgInline' result 'failed this call site' reason 'unprofitable inline'
Expanding INLINE_CANDIDATE in statement STMT00017 in BB01:
STMT00017 (IL   ???...  ???)
               [000057] I-C-G-------              *  CALL nullcheck ref    System.Diagnostics.Process.get_MainModule (exactContextHnd=0x00000000D1FFAB1E)
               [000056] --C--------- this in rcx  \--*  RET_EXPR  ref   (inl return from call [000055])
thisArg: has global refs has side effects
               [000055] --C-G-------              *  CALL      ref    System.Diagnostics.Process.GetCurrentProcess

INLINER: inlineInfo.tokenLookupContextHandle for System.Diagnostics.Process:get_MainModule():System.Diagnostics.ProcessModule:this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Diagnostics.Process:get_MainModule():System.Diagnostics.ProcessModule:this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  19                ldc.i4.3    
IL_0002  28 2c 01 00 06    call         0x600012C
IL_0007  02                ldarg.0     
IL_0008  7b d2 00 00 04    ldfld        0x40000D2
IL_000d  28 45 02 00 06    call         0x6000245
IL_0012  2a                ret         

INLINER impTokenLookupContextHandle for System.Diagnostics.Process:get_MainModule():System.Diagnostics.ProcessModule:this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Diagnostics.Process:get_MainModule():System.Diagnostics.ProcessModule:this
weight= 10 : state   3 [ ldarg.0 ]
weight= -6 : state  26 [ ldc.i4.3 ]
weight= 79 : state  40 [ call ]
weight= 31 : state 191 [ ldarg.0 -> ldfld ]
weight= 79 : state  40 [ call ]
weight= 19 : state  42 [ ret ]

Inline candidate looks like a wrapper method.  Multiplier increased to 1.
Inline candidate is mostly loads and stores.  Multiplier increased to 4.
Inline candidate callsite is boring.  Multiplier increased to 5.3.
calleeNativeSizeEstimate=212
callsiteNativeSizeEstimate=85
benefit multiplier=5.3
threshold=450
Native estimate for function size is within threshold for inlining 21.2 <= 45 (multiplier = 5.3)
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB31 [0030] created.
BB31 [000..013)
Basic block list for 'System.Diagnostics.Process:get_MainModule():System.Diagnostics.ProcessModule:this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB31 [0030]  1                             1       [000..013)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000057] Starting PHASE Pre-import

*************** Inline @[000057] Finishing PHASE Pre-import

*************** Inline @[000057] Starting PHASE Importation
*************** In impImport() for System.Diagnostics.Process:get_MainModule():System.Diagnostics.ProcessModule:this

impImportBlockPending for BB31

Importing BB31 (PC=000) of 'System.Diagnostics.Process:get_MainModule():System.Diagnostics.ProcessModule:this'
    [ 0]   0 (0x000) ldarg.0
lvaGrabTemp returning 31 (V31 tmp20) called for Inlining Arg.
Marked V31 as a single def temp

lvaSetClass: setting class for V31 to (00000000D1FFAB1E) System.Diagnostics.Process 

    [ 1]   1 (0x001) ldc.i4.3 3
    [ 2]   2 (0x002) call 0600012C
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'too many il bytes' for 'System.Diagnostics.Process:get_MainModule():System.Diagnostics.ProcessModule:this' calling 'System.Diagnostics.Process:EnsureState(int):this'

INLINER: Marking System.Diagnostics.Process:EnsureState(int):this as NOINLINE because of too many il bytes
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'too many il bytes'


               [000308] --C-G-------              *  CALL      void   System.Diagnostics.Process.EnsureState
               [000306] ------------ this in rcx  +--*  LCL_VAR   ref    V31 tmp20        
               [000307] ------------ arg1         \--*  CNS_INT   int    3

    [ 0]   7 (0x007) ldarg.0
    [ 1]   8 (0x008) ldfld 040000D2
    [ 1]  13 (0x00d) call 06000245
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0


               [000311] I-CXG-------              *  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule (exactContextHnd=0x00000000D1FFAB1E)
               [000310] ---XG------- arg0         \--*  FIELD     int    _processId
               [000309] ------------                 \--*  LCL_VAR   ref    V31 tmp20        

    [ 1]  18 (0x012) ret

    Inlinee Return expression (before normalization)  =>
               [000312] --C---------              *  RET_EXPR  ref   (inl return from call [000311])


    Inlinee Return expression (after normalization) =>
               [000312] --C---------              *  RET_EXPR  ref   (inl return from call [000311])

After impImport() added block for try,catch,finally
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB31 [0030]  1                             1       [000..013)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** Inline @[000057] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB31 [0030]  1                             1       [000..013)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB31 [000..013) (return), preds={} succs={}

***** BB31
               [000308] --C-G-------              *  CALL      void   System.Diagnostics.Process.EnsureState
               [000306] ------------ this in rcx  +--*  LCL_VAR   ref    V31 tmp20        
               [000307] ------------ arg1         \--*  CNS_INT   int    3

***** BB31
               [000311] I-CXG-------              *  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule (exactContextHnd=0x00000000D1FFAB1E)
               [000310] ---XG------- arg0         \--*  FIELD     int    _processId
               [000309] ------------                 \--*  LCL_VAR   ref    V31 tmp20        

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000057] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000057] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000057] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000057] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000057] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000057] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000057] -----------

Arguments setup:
STMT00086 (IL   ???...  ???)
               [000316] -AC-G-------              *  ASG       ref   
               [000315] D------N----              +--*  LCL_VAR   ref    V31 tmp20        
               [000055] --C-G-------              \--*  CALL      ref    System.Diagnostics.Process.GetCurrentProcess

Inlinee method body:
STMT00084 (IL   ???...  ???)
               [000308] --C-G-------              *  CALL      void   System.Diagnostics.Process.EnsureState
               [000306] ------------ this in rcx  +--*  LCL_VAR   ref    V31 tmp20        
               [000307] ------------ arg1         \--*  CNS_INT   int    3


STMT00085 (IL   ???...  ???)
               [000311] I-CXG-------              *  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule (exactContextHnd=0x00000000D1FFAB1E)
               [000310] ---XG------- arg0         \--*  FIELD     int    _processId
               [000309] ------------                 \--*  LCL_VAR   ref    V31 tmp20        

fgInlineAppendStatements: no gc ref inline locals.

Return expression for call at [000057] is
               [000312] --C---------              *  RET_EXPR  ref   (inl return from call [000311])
Successfully inlined System.Diagnostics.Process:get_MainModule():System.Diagnostics.ProcessModule:this (19 IL bytes) (depth 1) [profitable inline]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'profitable inline' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.Diagnostics.Process:get_MainModule():System.Diagnostics.ProcessModule:this'
INLINER: during 'fgInline' result 'success' reason 'profitable inline'
Expanding INLINE_CANDIDATE in statement STMT00085 in BB01:
STMT00085 (IL   ???...  ???)
               [000311] I-CXG-------              *  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule (exactContextHnd=0x00000000D1FFAB1E)
               [000310] ---XG------- arg0         \--*  FIELD     int    _processId
               [000309] ------------                 \--*  LCL_VAR   ref    V31 tmp20        

Argument #0: has global refs has side effects
               [000310] ---XG-------              *  FIELD     int    _processId
               [000309] ------------              \--*  LCL_VAR   ref    V31 tmp20        

INLINER: inlineInfo.tokenLookupContextHandle for System.Diagnostics.NtProcessManager:GetFirstModule(int):System.Diagnostics.ProcessModule set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Diagnostics.NtProcessManager:GetFirstModule(int):System.Diagnostics.ProcessModule :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  17                ldc.i4.1    
IL_0002  28 4f 02 00 06    call         0x600024F
IL_0007  0a                stloc.0     
IL_0008  06                ldloc.0     
IL_0009  6f 86 01 00 0a    callvirt     0xA000186
IL_000e  2c 08             brfalse.s    8 (IL_0018)
IL_0010  06                ldloc.0     
IL_0011  16                ldc.i4.0    
IL_0012  6f d6 01 00 06    callvirt     0x60001D6
IL_0017  2a                ret         
IL_0018  14                ldnull      
IL_0019  2a                ret         

INLINER impTokenLookupContextHandle for System.Diagnostics.NtProcessManager:GetFirstModule(int):System.Diagnostics.ProcessModule is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Diagnostics.NtProcessManager:GetFirstModule(int):System.Diagnostics.ProcessModule
weight= 10 : state   3 [ ldarg.0 ]
weight= 28 : state  24 [ ldc.i4.1 ]
weight= 79 : state  40 [ call ]
weight= 20 : state 199 [ stloc.0 -> ldloc.0 ]
weight= 83 : state  99 [ callvirt ]
weight= 27 : state  44 [ brfalse.s ]
weight= 12 : state   7 [ ldloc.0 ]
weight= 15 : state  23 [ ldc.i4.0 ]
weight= 83 : state  99 [ callvirt ]
weight= 19 : state  42 [ ret ]
weight=  7 : state  21 [ ldnull ]
weight= 19 : state  42 [ ret ]

Inline candidate looks like a wrapper method.  Multiplier increased to 1.
Inline candidate callsite is boring.  Multiplier increased to 2.3.
calleeNativeSizeEstimate=402
callsiteNativeSizeEstimate=85
benefit multiplier=2.3
threshold=195
Native estimate for function size exceeds threshold for inlining 40.2 > 19.5 (multiplier = 2.3)


Inline expansion aborted, inline not profitable
Inlining [000311] failed, so bashing STMT00085 to NOP

INLINER: during 'fgInline' result 'failed this call site' reason 'unprofitable inline' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.Diagnostics.NtProcessManager:GetFirstModule(int):System.Diagnostics.ProcessModule'
INLINER: during 'fgInline' result 'failed this call site' reason 'unprofitable inline'
Expanding INLINE_CANDIDATE in statement STMT00018 in BB01:
STMT00018 (IL   ???...  ???)
               [000059] I-C-G-------              *  CALL nullcheck ref    System.Diagnostics.ProcessModule.get_FileName (exactContextHnd=0x00000000D1FFAB1E)
               [000058] --C--------- this in rcx  \--*  RET_EXPR  ref   (inl return from call [000312])
thisArg: has global refs has side effects
               [000311] --CXG-------              *  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule
               [000310] ---XG------- arg0         \--*  FIELD     int    _processId
               [000309] ------------                 \--*  LCL_VAR   ref    V31 tmp20        

INLINER: inlineInfo.tokenLookupContextHandle for System.Diagnostics.ProcessModule:get_FileName():System.String:this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Diagnostics.ProcessModule:get_FileName():System.String:this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  7b 35 01 00 04    ldfld        0x4000135
IL_0006  2a                ret         

INLINER impTokenLookupContextHandle for System.Diagnostics.ProcessModule:get_FileName():System.String:this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Diagnostics.ProcessModule:get_FileName():System.String:this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB32 [0031] created.
BB32 [000..007)
Basic block list for 'System.Diagnostics.ProcessModule:get_FileName():System.String:this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB32 [0031]  1                             1       [000..007)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000059] Starting PHASE Pre-import

*************** Inline @[000059] Finishing PHASE Pre-import

*************** Inline @[000059] Starting PHASE Importation
*************** In impImport() for System.Diagnostics.ProcessModule:get_FileName():System.String:this

impImportBlockPending for BB32

Importing BB32 (PC=000) of 'System.Diagnostics.ProcessModule:get_FileName():System.String:this'
    [ 0]   0 (0x000) ldarg.0
lvaGrabTemp returning 32 (V32 tmp21) called for Inlining Arg.
Marked V32 as a single def temp

lvaSetClass: setting class for V32 to (00000000D1FFAB1E) System.Diagnostics.ProcessModule 

    [ 1]   1 (0x001) ldfld 04000135
    [ 1]   6 (0x006) ret

    Inlinee Return expression (before normalization)  =>
               [000320] ---XG-------              *  FIELD     ref    <FileName>k__BackingField
               [000319] ------------              \--*  LCL_VAR   ref    V32 tmp21        


    Inlinee Return expression (after normalization) =>
               [000320] ---XG-------              *  FIELD     ref    <FileName>k__BackingField
               [000319] ------------              \--*  LCL_VAR   ref    V32 tmp21        

After impImport() added block for try,catch,finally
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB32 [0031]  1                             1       [000..007)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------


** Note: inlinee IL was partially imported -- imported 0 of 7 bytes of method IL

*************** Inline @[000059] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB32 [0031]  1                             1       [000..007)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB32 [000..007) (return), preds={} succs={}

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000059] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000059] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000059] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000059] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000059] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000059] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000059] -----------

Arguments setup:
STMT00088 (IL   ???...  ???)
               [000322] -ACXG-------              *  ASG       ref   
               [000321] D------N----              +--*  LCL_VAR   ref    V32 tmp21        
               [000311] --CXG-------              \--*  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule
               [000310] ---XG------- arg0            \--*  FIELD     int    _processId
               [000309] ------------                    \--*  LCL_VAR   ref    V31 tmp20        

Inlinee method body:fgInlineAppendStatements: no gc ref inline locals.

Return expression for call at [000059] is
               [000320] ---XG-------              *  FIELD     ref    <FileName>k__BackingField
               [000319] ------------              \--*  LCL_VAR   ref    V32 tmp21        
Successfully inlined System.Diagnostics.ProcessModule:get_FileName():System.String:this (7 IL bytes) (depth 1) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.Diagnostics.ProcessModule:get_FileName():System.String:this'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'

Replacing the return expression placeholder [000060] with [000320]
               [000060] --C---------              *  RET_EXPR  ref   (inl return from call [000320])

Inserting the inline return expression
               [000320] ---XG-------              *  FIELD     ref    <FileName>k__BackingField
               [000319] ------------              \--*  LCL_VAR   ref    V32 tmp21        

Querying runtime about current class of field System.Diagnostics.ProcessModule.<FileName>k__BackingField (declared as System.String)
Field's current class not available
Expanding INLINE_CANDIDATE in statement STMT00020 in BB01:
STMT00020 (IL 0x053...0x05F)
               [000066] I-C-G-------              *  CALL nullcheck int    System.String.Contains (exactContextHnd=0x00000000D1FFAB1E)
               [000063] ------------ this in rcx  +--*  LCL_VAR   ref    V03 loc1         
               [000064] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000065] ------------ arg2         \--*  CNS_INT   int    5
thisArg: is a local var
               [000063] ------------              *  LCL_VAR   ref    V03 loc1         


Argument #1: is a constant
               [000064] ------------              *  CNS_STR   ref   <string constant>


Argument #2: is a constant
               [000065] ------------              *  CNS_INT   int    5

INLINER: inlineInfo.tokenLookupContextHandle for System.String:Contains(System.String,int):bool:this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.String:Contains(System.String,int):bool:this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  03                ldarg.1     
IL_0002  04                ldarg.2     
IL_0003  28 7f 07 00 06    call         0x600077F
IL_0008  16                ldc.i4.0    
IL_0009  fe 04             clt         
IL_000b  16                ldc.i4.0    
IL_000c  fe 01             ceq         
IL_000e  2a                ret         

INLINER impTokenLookupContextHandle for System.String:Contains(System.String,int):bool:this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.String:Contains(System.String,int):bool:this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB33 [0032] created.
BB33 [000..00F)
Basic block list for 'System.String:Contains(System.String,int):bool:this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB33 [0032]  1                             1       [000..00F)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000066] Starting PHASE Pre-import

*************** Inline @[000066] Finishing PHASE Pre-import

*************** Inline @[000066] Starting PHASE Importation
*************** In impImport() for System.String:Contains(System.String,int):bool:this

impImportBlockPending for BB33

Importing BB33 (PC=000) of 'System.String:Contains(System.String,int):bool:this'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) ldarg.1
    [ 2]   2 (0x002) ldarg.2
    [ 3]   3 (0x003) call 0600077F
In Compiler::impImportCall: opcode is call, kind=0, callRetType is int, structSize is 0


               [000326] I-C-G-------              *  CALL      int    System.String.IndexOf (exactContextHnd=0x00000000D1FFAB1E)
               [000063] ------------ this in rcx  +--*  LCL_VAR   ref    V03 loc1         
               [000324] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000325] ------------ arg2         \--*  CNS_INT   int    5

    [ 1]   8 (0x008) ldc.i4.0 0
    [ 2]   9 (0x009) clt
    [ 1]  11 (0x00b) ldc.i4.0 0
    [ 2]  12 (0x00c) ceq
    [ 1]  14 (0x00e) ret

    Inlinee Return expression (before normalization)  =>
               [000331] --C---------              *  EQ        int   
               [000329] --C---------              +--*  LT        int   
               [000327] --C---------              |  +--*  RET_EXPR  int   (inl return from call [000326])
               [000328] ------------              |  \--*  CNS_INT   int    0
               [000330] ------------              \--*  CNS_INT   int    0


    Inlinee Return expression (after normalization) =>
               [000331] --C---------              *  EQ        int   
               [000329] --C---------              +--*  LT        int   
               [000327] --C---------              |  +--*  RET_EXPR  int   (inl return from call [000326])
               [000328] ------------              |  \--*  CNS_INT   int    0
               [000330] ------------              \--*  CNS_INT   int    0

After impImport() added block for try,catch,finally
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB33 [0032]  1                             1       [000..00F)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** Inline @[000066] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB33 [0032]  1                             1       [000..00F)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB33 [000..00F) (return), preds={} succs={}

***** BB33
               [000326] I-C-G-------              *  CALL      int    System.String.IndexOf (exactContextHnd=0x00000000D1FFAB1E)
               [000063] ------------ this in rcx  +--*  LCL_VAR   ref    V03 loc1         
               [000324] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000325] ------------ arg2         \--*  CNS_INT   int    5

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000066] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000066] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000066] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000066] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000066] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000066] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000066] -----------

Arguments setup:

Inlinee method body:
STMT00089 (IL 0x053...  ???)
               [000326] I-C-G-------              *  CALL      int    System.String.IndexOf (exactContextHnd=0x00000000D1FFAB1E)
               [000063] ------------ this in rcx  +--*  LCL_VAR   ref    V03 loc1         
               [000324] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000325] ------------ arg2         \--*  CNS_INT   int    5

fgInlineAppendStatements: no gc ref inline locals.

Return expression for call at [000066] is
               [000331] --C---------              *  EQ        int   
               [000329] --C---------              +--*  LT        int   
               [000327] --C---------              |  +--*  RET_EXPR  int   (inl return from call [000326])
               [000328] ------------              |  \--*  CNS_INT   int    0
               [000330] ------------              \--*  CNS_INT   int    0
Successfully inlined System.String:Contains(System.String,int):bool:this (15 IL bytes) (depth 1) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.String:Contains(System.String,int):bool:this'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Expanding INLINE_CANDIDATE in statement STMT00089 in BB01:
STMT00089 (IL 0x053...  ???)
               [000326] I-C-G-------              *  CALL      int    System.String.IndexOf (exactContextHnd=0x00000000D1FFAB1E)
               [000063] ------------ this in rcx  +--*  LCL_VAR   ref    V03 loc1         
               [000324] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000325] ------------ arg2         \--*  CNS_INT   int    5
thisArg: is a local var
               [000063] ------------              *  LCL_VAR   ref    V03 loc1         


Argument #1: is a constant
               [000324] ------------              *  CNS_STR   ref   <string constant>


Argument #2: is a constant
               [000325] ------------              *  CNS_INT   int    5

INLINER: inlineInfo.tokenLookupContextHandle for System.String:IndexOf(System.String,int):int:this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.String:IndexOf(System.String,int):int:this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  03                ldarg.1     
IL_0002  16                ldc.i4.0    
IL_0003  02                ldarg.0     
IL_0004  28 9a 06 00 06    call         0x600069A
IL_0009  04                ldarg.2     
IL_000a  28 81 07 00 06    call         0x6000781
IL_000f  2a                ret         

INLINER impTokenLookupContextHandle for System.String:IndexOf(System.String,int):int:this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.String:IndexOf(System.String,int):int:this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB34 [0033] created.
BB34 [000..010)
Basic block list for 'System.String:IndexOf(System.String,int):int:this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB34 [0033]  1                             1       [000..010)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000326] Starting PHASE Pre-import

*************** Inline @[000326] Finishing PHASE Pre-import

*************** Inline @[000326] Starting PHASE Importation
*************** In impImport() for System.String:IndexOf(System.String,int):int:this

impImportBlockPending for BB34

Importing BB34 (PC=000) of 'System.String:IndexOf(System.String,int):int:this'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) ldarg.1
    [ 2]   2 (0x002) ldc.i4.0 0
    [ 3]   3 (0x003) ldarg.0
    [ 4]   4 (0x004) call 0600069A
In Compiler::impImportCall: opcode is call, kind=0, callRetType is int, structSize is 0

    [ 4]   9 (0x009) ldarg.2
    [ 5]  10 (0x00a) call 06000781
In Compiler::impImportCall: opcode is call, kind=0, callRetType is int, structSize is 0
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'too many il bytes' for 'System.String:IndexOf(System.String,int):int:this' calling 'System.String:IndexOf(System.String,int,int,int):int:this'

INLINER: Marking System.String:IndexOf(System.String,int,int,int):int:this as NOINLINE because of too many il bytes
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'too many il bytes'

    [ 1]  15 (0x00f) ret

    Inlinee Return expression (before normalization)  =>
               [000340] --CXG-------              *  CALL      int    System.String.IndexOf
               [000063] ------------ this in rcx  +--*  LCL_VAR   ref    V03 loc1         
               [000335] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000336] ------------ arg2         +--*  CNS_INT   int    0
               [000338] ---X-------- arg3         +--*  ARR_LENGTH int   
               [000337] ------------              |  \--*  LCL_VAR   ref    V03 loc1         
               [000339] ------------ arg4         \--*  CNS_INT   int    5


    Inlinee Return expression (after normalization) =>
               [000340] --CXG-------              *  CALL      int    System.String.IndexOf
               [000063] ------------ this in rcx  +--*  LCL_VAR   ref    V03 loc1         
               [000335] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000336] ------------ arg2         +--*  CNS_INT   int    0
               [000338] ---X-------- arg3         +--*  ARR_LENGTH int   
               [000337] ------------              |  \--*  LCL_VAR   ref    V03 loc1         
               [000339] ------------ arg4         \--*  CNS_INT   int    5

After impImport() added block for try,catch,finally
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB34 [0033]  1                             1       [000..010)        (return)                     i idxlen 
-----------------------------------------------------------------------------------------------------------------------------------------


** Note: inlinee IL was partially imported -- imported 0 of 16 bytes of method IL

*************** Inline @[000326] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB34 [0033]  1                             1       [000..010)        (return)                     i idxlen 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB34 [000..010) (return), preds={} succs={}

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000326] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000326] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000326] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000326] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000326] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000326] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000326] -----------

Arguments setup:

Inlinee method body:fgInlineAppendStatements: no gc ref inline locals.
INLINER: Updating optMethodFlags --  root:a callee:4 new:e

Return expression for call at [000326] is
               [000340] --CXG-------              *  CALL      int    System.String.IndexOf
               [000063] ------------ this in rcx  +--*  LCL_VAR   ref    V03 loc1         
               [000335] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000336] ------------ arg2         +--*  CNS_INT   int    0
               [000338] ---X-------- arg3         +--*  ARR_LENGTH int   
               [000337] ------------              |  \--*  LCL_VAR   ref    V03 loc1         
               [000339] ------------ arg4         \--*  CNS_INT   int    5
Successfully inlined System.String:IndexOf(System.String,int):int:this (16 IL bytes) (depth 2) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.String:IndexOf(System.String,int):int:this'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'

Replacing the return expression placeholder [000067] with [000331]
               [000067] --C---------              *  RET_EXPR  int   (inl return from call [000331])

Inserting the inline return expression
               [000331] --C---------              *  EQ        int   
               [000329] --C---------              +--*  LT        int   
               [000327] --C---------              |  +--*  RET_EXPR  int   (inl return from call [000340])
               [000328] ------------              |  \--*  CNS_INT   int    0
               [000330] ------------              \--*  CNS_INT   int    0


Replacing the return expression placeholder [000327] with [000340]
               [000327] --C---------              *  RET_EXPR  int   (inl return from call [000340])

Inserting the inline return expression
               [000340] --CXG-------              *  CALL      int    System.String.IndexOf
               [000063] ------------ this in rcx  +--*  LCL_VAR   ref    V03 loc1         
               [000335] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000336] ------------ arg2         +--*  CNS_INT   int    0
               [000338] ---X-------- arg3         +--*  ARR_LENGTH int   
               [000337] ------------              |  \--*  LCL_VAR   ref    V03 loc1         
               [000339] ------------ arg4         \--*  CNS_INT   int    5

Expanding INLINE_CANDIDATE in statement STMT00022 in BB01:
STMT00022 (IL 0x060...0x067)
               [000070] I-C-G-------              *  CALL      ref    System.Environment.GetCommandLineArgs (exactContextHnd=0x00000000D1FFAB1E)
INLINER: inlineInfo.tokenLookupContextHandle for System.Environment:GetCommandLineArgs():System.String[] set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Environment:GetCommandLineArgs():System.String[] :
IL to import:
IL_0000  7e 1f 01 00 04    ldsfld       0x400011F
IL_0005  2d 06             brtrue.s     6 (IL_000d)
IL_0007  28 41 03 00 06    call         0x6000341
IL_000c  2a                ret         
IL_000d  7e 1f 01 00 04    ldsfld       0x400011F
IL_0012  6f 38 01 00 06    callvirt     0x6000138
IL_0017  74 25 00 00 1b    castclass    0x1B000025
IL_001c  2a                ret         

INLINER impTokenLookupContextHandle for System.Environment:GetCommandLineArgs():System.String[] is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Environment:GetCommandLineArgs():System.String[]
weight=159 : state 112 [ ldsfld ]
weight= 25 : state  45 [ brtrue.s ]
weight= 79 : state  40 [ call ]
weight= 19 : state  42 [ ret ]
weight=159 : state 112 [ ldsfld ]
weight= 83 : state  99 [ callvirt ]
weight=261 : state 104 [ castclass ]
weight= 19 : state  42 [ ret ]

Inline candidate looks like a wrapper method.  Multiplier increased to 1.
Inline candidate callsite is boring.  Multiplier increased to 2.3.
calleeNativeSizeEstimate=804
callsiteNativeSizeEstimate=55
benefit multiplier=2.3
threshold=126
Native estimate for function size exceeds threshold for inlining 80.4 > 12.6 (multiplier = 2.3)


Inline expansion aborted, inline not profitable
Inlining [000070] failed, so bashing STMT00022 to NOP

INLINER: during 'fgInline' result 'failed this call site' reason 'unprofitable inline' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.Environment:GetCommandLineArgs():System.String[]'
INLINER: during 'fgInline' result 'failed this call site' reason 'unprofitable inline'

Replacing the return expression placeholder [000071] with [000070]
               [000071] --C---------              *  RET_EXPR  ref   (inl return from call [000070])

Inserting the inline return expression
               [000070] --C-G-------              *  CALL      ref    System.Environment.GetCommandLineArgs

**** Late devirt opportunity
               [000077] --C-G-------              *  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator
               [000076] ------------ this in rcx  \--*  LCL_VAR   ref    V00 arg0         

impDevirtualizeCall: Trying to devirtualize interface call:
    class for 'this' is System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] (attrib 10200400)
    base method is System.Collections.Generic.IEnumerable`1[__Canon]::GetEnumerator
No guarded devirt during late devirtualization

lvaUpdateClass: NOT Updating class for V06 from (00000000D1FFAB1E) System.Collections.Generic.IEnumerator`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] to (00000000D1FFAB1E) System.Collections.Generic.IEnumerator`1[__Canon]
**** Late devirt opportunity
               [000086] --C-G-------              *  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current
               [000085] ------------ this in rcx  \--*  LCL_VAR   ref    V06 loc4         

impDevirtualizeCall: Trying to devirtualize interface call:
    class for 'this' is System.Collections.Generic.IEnumerator`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] (attrib 10200400)
    base method is System.Collections.Generic.IEnumerator`1[__Canon]::get_Current
No guarded devirt during late devirtualization

lvaUpdateClass: NOT Updating class for V07 from (00000000D1FFAB1E) System.String to (00000000D1FFAB1E) System.__Canon
Expanding INLINE_CANDIDATE in statement STMT00028 in BB03:
STMT00028 (IL   ???...  ???)
               [000094] I-C-G-------              *  CALL      void   System.Diagnostics.ProcessStartInfo..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000093] ------------ this in rcx  \--*  LCL_VAR   ref    V16 tmp5         
thisArg: is a local var
               [000093] ------------              *  LCL_VAR   ref    V16 tmp5         

INLINER: inlineInfo.tokenLookupContextHandle for System.Diagnostics.ProcessStartInfo:.ctor():this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Diagnostics.ProcessStartInfo:.ctor():this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  28 6b 00 00 0a    call         0xA00006B
IL_0006  2a                ret         

INLINER impTokenLookupContextHandle for System.Diagnostics.ProcessStartInfo:.ctor():this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Diagnostics.ProcessStartInfo:.ctor():this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB35 [0034] created.
BB35 [000..007)
Basic block list for 'System.Diagnostics.ProcessStartInfo:.ctor():this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB35 [0034]  1                             1       [000..007)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000094] Starting PHASE Pre-import

*************** Inline @[000094] Finishing PHASE Pre-import

*************** Inline @[000094] Starting PHASE Importation
*************** In impImport() for System.Diagnostics.ProcessStartInfo:.ctor():this

impImportBlockPending for BB35

Importing BB35 (PC=000) of 'System.Diagnostics.ProcessStartInfo:.ctor():this'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) call 0A00006B
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0


               [000343] I-C-G-------              *  CALL      void   System.Object..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000093] ------------ this in rcx  \--*  LCL_VAR   ref    V16 tmp5         

    [ 0]   6 (0x006) ret
After impImport() added block for try,catch,finally
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB35 [0034]  1                             1       [000..007)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** Inline @[000094] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB35 [0034]  1                             1       [000..007)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB35 [000..007) (return), preds={} succs={}

***** BB35
               [000343] I-C-G-------              *  CALL      void   System.Object..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000093] ------------ this in rcx  \--*  LCL_VAR   ref    V16 tmp5         

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000094] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000094] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000094] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000094] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000094] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000094] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000094] -----------

Arguments setup:

Inlinee method body:
STMT00091 (IL   ???...  ???)
               [000343] I-C-G-------              *  CALL      void   System.Object..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000093] ------------ this in rcx  \--*  LCL_VAR   ref    V16 tmp5         

fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined System.Diagnostics.ProcessStartInfo:.ctor():this (7 IL bytes) (depth 1) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.Diagnostics.ProcessStartInfo:.ctor():this'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Expanding INLINE_CANDIDATE in statement STMT00091 in BB03:
STMT00091 (IL   ???...  ???)
               [000343] I-C-G-------              *  CALL      void   System.Object..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000093] ------------ this in rcx  \--*  LCL_VAR   ref    V16 tmp5         
thisArg: is a local var
               [000093] ------------              *  LCL_VAR   ref    V16 tmp5         

INLINER: inlineInfo.tokenLookupContextHandle for System.Object:.ctor():this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Object:.ctor():this :
IL to import:
IL_0000  2a                ret         

INLINER impTokenLookupContextHandle for System.Object:.ctor():this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Object:.ctor():this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB36 [0035] created.
BB36 [000..001)
Basic block list for 'System.Object:.ctor():this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB36 [0035]  1                             1       [000..001)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000343] Starting PHASE Pre-import

*************** Inline @[000343] Finishing PHASE Pre-import

*************** Inline @[000343] Starting PHASE Importation
*************** In impImport() for System.Object:.ctor():this

impImportBlockPending for BB36

Importing BB36 (PC=000) of 'System.Object:.ctor():this'
    [ 0]   0 (0x000) ret
After impImport() added block for try,catch,finally
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB36 [0035]  1                             1       [000..001)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------


** Note: inlinee IL was partially imported -- imported 0 of 1 bytes of method IL

*************** Inline @[000343] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB36 [0035]  1                             1       [000..001)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB36 [000..001) (return), preds={} succs={}

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000343] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000343] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000343] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000343] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000343] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000343] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000343] -----------

Arguments setup:

Inlinee method body:fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined System.Object:.ctor():this (1 IL bytes) (depth 2) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.Object:.ctor():this'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Expanding INLINE_CANDIDATE in statement STMT00029 in BB03:
STMT00029 (IL 0x080...  ???)
               [000098] I-C-G-------              *  CALL nullcheck void   System.Diagnostics.ProcessStartInfo.set_FileName (exactContextHnd=0x00000000D1FFAB1E)
               [000096] ------------ this in rcx  +--*  LCL_VAR   ref    V16 tmp5         
               [000097] ------------ arg1         \--*  LCL_VAR   ref    V03 loc1         
thisArg: is a local var
               [000096] ------------              *  LCL_VAR   ref    V16 tmp5         


Argument #1: is a local var
               [000097] ------------              *  LCL_VAR   ref    V03 loc1         

INLINER: inlineInfo.tokenLookupContextHandle for System.Diagnostics.ProcessStartInfo:set_FileName(System.String):this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Diagnostics.ProcessStartInfo:set_FileName(System.String):this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  03                ldarg.1     
IL_0002  7d 40 01 00 04    stfld        0x4000140
IL_0007  2a                ret         

INLINER impTokenLookupContextHandle for System.Diagnostics.ProcessStartInfo:set_FileName(System.String):this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Diagnostics.ProcessStartInfo:set_FileName(System.String):this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB37 [0036] created.
BB37 [000..008)
Basic block list for 'System.Diagnostics.ProcessStartInfo:set_FileName(System.String):this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB37 [0036]  1                             1       [000..008)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000098] Starting PHASE Pre-import

*************** Inline @[000098] Finishing PHASE Pre-import

*************** Inline @[000098] Starting PHASE Importation
*************** In impImport() for System.Diagnostics.ProcessStartInfo:set_FileName(System.String):this

impImportBlockPending for BB37

Importing BB37 (PC=000) of 'System.Diagnostics.ProcessStartInfo:set_FileName(System.String):this'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) ldarg.1
    [ 2]   2 (0x002) stfld 04000140

               [000347] -A-XG-------              *  ASG       ref   
               [000346] ---XG--N----              +--*  FIELD     ref    _fileName
               [000096] ------------              |  \--*  LCL_VAR   ref    V16 tmp5         
               [000097] ------------              \--*  LCL_VAR   ref    V03 loc1         

    [ 0]   7 (0x007) ret
After impImport() added block for try,catch,finally
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB37 [0036]  1                             1       [000..008)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** Inline @[000098] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB37 [0036]  1                             1       [000..008)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB37 [000..008) (return), preds={} succs={}

***** BB37
               [000347] -A-XG-------              *  ASG       ref   
               [000346] ---XG--N----              +--*  FIELD     ref    _fileName
               [000096] ------------              |  \--*  LCL_VAR   ref    V16 tmp5         
               [000097] ------------              \--*  LCL_VAR   ref    V03 loc1         

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000098] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000098] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000098] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000098] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000098] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000098] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000098] -----------

Arguments setup:

Inlinee method body:
STMT00092 (IL 0x080...  ???)
               [000347] -A-XG-------              *  ASG       ref   
               [000346] ---XG--N----              +--*  FIELD     ref    _fileName
               [000096] ------------              |  \--*  LCL_VAR   ref    V16 tmp5         
               [000097] ------------              \--*  LCL_VAR   ref    V03 loc1         

fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined System.Diagnostics.ProcessStartInfo:set_FileName(System.String):this (8 IL bytes) (depth 1) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.Diagnostics.ProcessStartInfo:set_FileName(System.String):this'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Expanding INLINE_CANDIDATE in statement STMT00036 in BB06:
STMT00036 (IL   ???...0x0A8)
               [000130] I-C-G-------              *  CALL nullcheck void   System.Diagnostics.ProcessStartInfo.set_Arguments (exactContextHnd=0x00000000D1FFAB1E)
               [000128] ------------ this in rcx  +--*  LCL_VAR   ref    V20 tmp9         
               [000129] ------------ arg1         \--*  LCL_VAR   ref    V21 tmp10        
thisArg: is a local var
               [000128] ------------              *  LCL_VAR   ref    V20 tmp9         


Argument #1: is a local var
               [000129] ------------              *  LCL_VAR   ref    V21 tmp10        

INLINER: inlineInfo.tokenLookupContextHandle for System.Diagnostics.ProcessStartInfo:set_Arguments(System.String):this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Diagnostics.ProcessStartInfo:set_Arguments(System.String):this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  03                ldarg.1     
IL_0002  7d 41 01 00 04    stfld        0x4000141
IL_0007  2a                ret         

INLINER impTokenLookupContextHandle for System.Diagnostics.ProcessStartInfo:set_Arguments(System.String):this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Diagnostics.ProcessStartInfo:set_Arguments(System.String):this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB38 [0037] created.
BB38 [000..008)
Basic block list for 'System.Diagnostics.ProcessStartInfo:set_Arguments(System.String):this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB38 [0037]  1                             1       [000..008)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000130] Starting PHASE Pre-import

*************** Inline @[000130] Finishing PHASE Pre-import

*************** Inline @[000130] Starting PHASE Importation
*************** In impImport() for System.Diagnostics.ProcessStartInfo:set_Arguments(System.String):this

impImportBlockPending for BB38

Importing BB38 (PC=000) of 'System.Diagnostics.ProcessStartInfo:set_Arguments(System.String):this'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) ldarg.1
    [ 2]   2 (0x002) stfld 04000141

               [000350] -A-XG-------              *  ASG       ref   
               [000349] ---XG--N----              +--*  FIELD     ref    _arguments
               [000128] ------------              |  \--*  LCL_VAR   ref    V20 tmp9         
               [000129] ------------              \--*  LCL_VAR   ref    V21 tmp10        

    [ 0]   7 (0x007) ret
After impImport() added block for try,catch,finally
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB38 [0037]  1                             1       [000..008)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** Inline @[000130] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB38 [0037]  1                             1       [000..008)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB38 [000..008) (return), preds={} succs={}

***** BB38
               [000350] -A-XG-------              *  ASG       ref   
               [000349] ---XG--N----              +--*  FIELD     ref    _arguments
               [000128] ------------              |  \--*  LCL_VAR   ref    V20 tmp9         
               [000129] ------------              \--*  LCL_VAR   ref    V21 tmp10        

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000130] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000130] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000130] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000130] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000130] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000130] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000130] -----------

Arguments setup:

Inlinee method body:
STMT00093 (IL   ???...  ???)
               [000350] -A-XG-------              *  ASG       ref   
               [000349] ---XG--N----              +--*  FIELD     ref    _arguments
               [000128] ------------              |  \--*  LCL_VAR   ref    V20 tmp9         
               [000129] ------------              \--*  LCL_VAR   ref    V21 tmp10        

fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined System.Diagnostics.ProcessStartInfo:set_Arguments(System.String):this (8 IL bytes) (depth 1) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.Diagnostics.ProcessStartInfo:set_Arguments(System.String):this'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Expanding INLINE_CANDIDATE in statement STMT00037 in BB06:
STMT00037 (IL 0x0A1...  ???)
               [000133] I-C-G-------              *  CALL nullcheck void   System.Diagnostics.ProcessStartInfo.set_UseShellExecute (exactContextHnd=0x00000000D1FFAB1E)
               [000131] ------------ this in rcx  +--*  LCL_VAR   ref    V19 tmp8         
               [000134] ------------ arg1         \--*  PUTARG_TYPE bool  
               [000132] ------------                 \--*  CNS_INT   int    0
thisArg: is a local var
               [000131] ------------              *  LCL_VAR   ref    V19 tmp8         


Argument #1: is a constant
               [000132] ------------              *  CNS_INT   int    0


Folding operator with constant nodes into a constant:
               [000352] ------------              *  CAST      int <- bool <- int
               [000132] ------------              \--*  CNS_INT   int    0
Bashed to int constant:
               [000352] ------------              *  CNS_INT   int    0
INLINER: inlineInfo.tokenLookupContextHandle for System.Diagnostics.ProcessStartInfo:set_UseShellExecute(bool):this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Diagnostics.ProcessStartInfo:set_UseShellExecute(bool):this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  03                ldarg.1     
IL_0002  7d 55 01 00 04    stfld        0x4000155
IL_0007  2a                ret         

INLINER impTokenLookupContextHandle for System.Diagnostics.ProcessStartInfo:set_UseShellExecute(bool):this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Diagnostics.ProcessStartInfo:set_UseShellExecute(bool):this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB39 [0038] created.
BB39 [000..008)
Basic block list for 'System.Diagnostics.ProcessStartInfo:set_UseShellExecute(bool):this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB39 [0038]  1                             1       [000..008)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000133] Starting PHASE Pre-import

*************** Inline @[000133] Finishing PHASE Pre-import

*************** Inline @[000133] Starting PHASE Importation
*************** In impImport() for System.Diagnostics.ProcessStartInfo:set_UseShellExecute(bool):this

impImportBlockPending for BB39

Importing BB39 (PC=000) of 'System.Diagnostics.ProcessStartInfo:set_UseShellExecute(bool):this'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) ldarg.1
    [ 2]   2 (0x002) stfld 04000155

               [000355] -A-XG-------              *  ASG       bool  
               [000354] ---XG--N----              +--*  FIELD     bool   <UseShellExecute>k__BackingField
               [000131] ------------              |  \--*  LCL_VAR   ref    V19 tmp8         
               [000353] ------------              \--*  CNS_INT   int    0

    [ 0]   7 (0x007) ret
After impImport() added block for try,catch,finally
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB39 [0038]  1                             1       [000..008)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** Inline @[000133] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB39 [0038]  1                             1       [000..008)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB39 [000..008) (return), preds={} succs={}

***** BB39
               [000355] -A-XG-------              *  ASG       bool  
               [000354] ---XG--N----              +--*  FIELD     bool   <UseShellExecute>k__BackingField
               [000131] ------------              |  \--*  LCL_VAR   ref    V19 tmp8         
               [000353] ------------              \--*  CNS_INT   int    0

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000133] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000133] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000133] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000133] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000133] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000133] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000133] -----------

Arguments setup:

Inlinee method body:
STMT00094 (IL 0x0A1...  ???)
               [000355] -A-XG-------              *  ASG       bool  
               [000354] ---XG--N----              +--*  FIELD     bool   <UseShellExecute>k__BackingField
               [000131] ------------              |  \--*  LCL_VAR   ref    V19 tmp8         
               [000353] ------------              \--*  CNS_INT   int    0

fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined System.Diagnostics.ProcessStartInfo:set_UseShellExecute(bool):this (8 IL bytes) (depth 1) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.Diagnostics.ProcessStartInfo:set_UseShellExecute(bool):this'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Querying runtime about current class of field <>c__DisplayClass5_0.queuedAnalyzers (declared as System.Collections.Generic.Queue`1[[System.Diagnostics.Process, System.Diagnostics.Process, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a]])
Field's current class not available
Querying runtime about current class of field <>c__DisplayClass5_0.<>9__2 (declared as System.Action`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]])
Field's current class not available
Expanding INLINE_CANDIDATE in statement STMT00049 in BB07:
STMT00049 (IL   ???...  ???)
               [000186] I-C-G-------              *  CALL      void   System.MulticastDelegate.CtorClosed (exactContextHnd=0x00000000D1FFAB1E)
               [000185] ------------ this in rcx  +--*  LCL_VAR   ref    V28 tmp17        
               [000179] ------------ arg1         +--*  LCL_VAR   ref    V02 loc0         
               [000180] ------------ arg2         \--*  FTN_ADDR  long   <>c__DisplayClass5_0.<ExecuteAnalyzers>b__2

thisArg: is a local var
               [000185] ------------              *  LCL_VAR   ref    V28 tmp17        


Argument #1: is a local var
               [000179] ------------              *  LCL_VAR   ref    V02 loc0         


Argument #2:
               [000180] ------------              *  FTN_ADDR  long   <>c__DisplayClass5_0.<ExecuteAnalyzers>b__2


INLINER: inlineInfo.tokenLookupContextHandle for System.MulticastDelegate:CtorClosed(System.Object,long):this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.MulticastDelegate:CtorClosed(System.Object,long):this :
IL to import:
IL_0000  03                ldarg.1     
IL_0001  2d 05             brtrue.s     5 (IL_0008)
IL_0003  28 9c 04 00 06    call         0x600049C
IL_0008  02                ldarg.0     
IL_0009  03                ldarg.1     
IL_000a  7d 0d 01 00 04    stfld        0x400010D
IL_000f  02                ldarg.0     
IL_0010  04                ldarg.2     
IL_0011  7d 0f 01 00 04    stfld        0x400010F
IL_0016  2a                ret         

INLINER impTokenLookupContextHandle for System.MulticastDelegate:CtorClosed(System.Object,long):this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.MulticastDelegate:CtorClosed(System.Object,long):this
weight= 16 : state   4 [ ldarg.1 ]
weight= 25 : state  45 [ brtrue.s ]
weight= 79 : state  40 [ call ]
weight= 69 : state 226 [ ldarg.0 -> ldarg.1 -> stfld ]
weight= 98 : state 228 [ ldarg.0 -> ldarg.2 -> stfld ]
weight= 19 : state  42 [ ret ]

Inline candidate has an arg that feeds a constant test.  Multiplier increased to 1.
Inline candidate is mostly loads and stores.  Multiplier increased to 4.
Inline candidate callsite is in a loop.  Multiplier increased to 7.
calleeNativeSizeEstimate=306
callsiteNativeSizeEstimate=145
benefit multiplier=7
threshold=1015
Native estimate for function size is within threshold for inlining 30.6 <= 101.5 (multiplier = 7)
Jump targets:
  IL_0008
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB40 [0039] created.
BB40 [000..003)
New Basic Block BB41 [0040] created.
BB41 [003..008)
New Basic Block BB42 [0041] created.
BB42 [008..017)
Basic block list for 'System.MulticastDelegate:CtorClosed(System.Object,long):this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB40 [0039]  1                             1       [000..003)-> BB42 ( cond )                     
BB41 [0040]  1                             1       [003..008)                                     
BB42 [0041]  2                             1       [008..017)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000186] Starting PHASE Pre-import

*************** Inline @[000186] Finishing PHASE Pre-import

*************** Inline @[000186] Starting PHASE Importation
*************** In impImport() for System.MulticastDelegate:CtorClosed(System.Object,long):this

impImportBlockPending for BB40

Importing BB40 (PC=000) of 'System.MulticastDelegate:CtorClosed(System.Object,long):this'
    [ 0]   0 (0x000) ldarg.1
    [ 1]   1 (0x001) brtrue.s

               [000359] ------------              *  JTRUE     void  
               [000358] ------------              \--*  NE        int   
               [000179] ------------                 +--*  LCL_VAR   ref    V02 loc0         
               [000357] ------------                 \--*  CNS_INT   ref    null

impImportBlockPending for BB41

impImportBlockPending for BB42

Importing BB42 (PC=008) of 'System.MulticastDelegate:CtorClosed(System.Object,long):this'
    [ 0]   8 (0x008) ldarg.0
    [ 1]   9 (0x009) ldarg.1
    [ 2]  10 (0x00a) stfld 0400010D

               [000362] -A-XG-------              *  ASG       ref   
               [000361] ---XG--N----              +--*  FIELD     ref    _target
               [000185] ------------              |  \--*  LCL_VAR   ref    V28 tmp17        
               [000360] ------------              \--*  LCL_VAR   ref    V02 loc0         

    [ 0]  15 (0x00f) ldarg.0
    [ 1]  16 (0x010) ldarg.2
lvaGrabTemp returning 33 (V33 tmp22) called for Inlining Arg.

    [ 2]  17 (0x011) stfld 0400010F

               [000366] -A-XG-------              *  ASG       long  
               [000365] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000363] ------------              |  \--*  LCL_VAR   ref    V28 tmp17        
               [000364] ------------              \--*  LCL_VAR   long   V33 tmp22        

    [ 0]  22 (0x016) ret
Importing BB41 (PC=003) of 'System.MulticastDelegate:CtorClosed(System.Object,long):this'
    [ 0]   3 (0x003) call 0600049C
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0


               [000367] I-C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance (exactContextHnd=0x00000000D1FFAB1E)

impImportBlockPending for BB42

After impImport() added block for try,catch,finally
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB40 [0039]  1                             1       [000..003)-> BB42 ( cond )                     i 
BB41 [0040]  1                             1       [003..008)                                     i 
BB42 [0041]  2                             1       [008..017)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** Inline @[000186] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB40 [0039]  1                             1       [000..003)-> BB42 ( cond )                     i 
BB41 [0040]  1                             1       [003..008)                                     i 
BB42 [0041]  2                             1       [008..017)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB40 [000..003) -> BB42 (cond), preds={} succs={BB41,BB42}

***** BB40
               [000359] ------------              *  JTRUE     void  
               [000358] ------------              \--*  NE        int   
               [000179] ------------                 +--*  LCL_VAR   ref    V02 loc0         
               [000357] ------------                 \--*  CNS_INT   ref    null

------------ BB41 [003..008), preds={} succs={BB42}

***** BB41
               [000367] I-C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance (exactContextHnd=0x00000000D1FFAB1E)

------------ BB42 [008..017) (return), preds={} succs={}

***** BB42
               [000362] -A-XG-------              *  ASG       ref   
               [000361] ---XG--N----              +--*  FIELD     ref    _target
               [000185] ------------              |  \--*  LCL_VAR   ref    V28 tmp17        
               [000360] ------------              \--*  LCL_VAR   ref    V02 loc0         

***** BB42
               [000366] -A-XG-------              *  ASG       long  
               [000365] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000363] ------------              |  \--*  LCL_VAR   ref    V28 tmp17        
               [000364] ------------              \--*  LCL_VAR   long   V33 tmp22        

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000186] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000186] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000186] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000186] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000186] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000186] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000186] -----------

Arguments setup:

Inlinee method body:New Basic Block BB43 [0042] created.

Convert bbJumpKind of BB42 to BBJ_NONE
fgInlineAppendStatements: no gc ref inline locals.

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB40 [0039]  1  0                          1       [000..000)-> BB42 ( cond ) T0                  i internal bwd 
BB41 [0040]  1  0                          0.50    [000..000)                 T0                  i internal bwd 
BB42 [0041]  2  0                          1       [000..000)                 T0                  i internal bwd 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB40 [000..000) -> BB42 (cond), preds={} succs={BB41,BB42}

***** BB40
STMT00095 (IL   ???...  ???)
               [000359] ------------              *  JTRUE     void  
               [000358] ------------              \--*  NE        int   
               [000179] ------------                 +--*  LCL_VAR   ref    V02 loc0         
               [000357] ------------                 \--*  CNS_INT   ref    null

------------ BB41 [000..000), preds={} succs={BB42}

***** BB41
STMT00098 (IL   ???...  ???)
               [000367] I-C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance (exactContextHnd=0x00000000D1FFAB1E)

------------ BB42 [000..000), preds={} succs={BB43}

***** BB42
STMT00096 (IL   ???...  ???)
               [000362] -A-XG-------              *  ASG       ref   
               [000361] ---XG--N----              +--*  FIELD     ref    _target
               [000185] ------------              |  \--*  LCL_VAR   ref    V28 tmp17        
               [000360] ------------              \--*  LCL_VAR   ref    V02 loc0         

***** BB42
STMT00097 (IL   ???...  ???)
               [000366] -A-XG-------              *  ASG       long  
               [000365] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000363] ------------              |  \--*  LCL_VAR   ref    V28 tmp17        
               [000180] ------------              \--*  FTN_ADDR  long   <>c__DisplayClass5_0.<ExecuteAnalyzers>b__2


-------------------------------------------------------------------------------------------------------------------
Successfully inlined System.MulticastDelegate:CtorClosed(System.Object,long):this (23 IL bytes) (depth 1) [profitable inline]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'profitable inline' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.MulticastDelegate:CtorClosed(System.Object,long):this'
INLINER: during 'fgInline' result 'success' reason 'profitable inline'
Expanding INLINE_CANDIDATE in statement STMT00098 in BB41:
STMT00098 (IL   ???...  ???)
               [000367] I-C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance (exactContextHnd=0x00000000D1FFAB1E)
INLINER: inlineInfo.tokenLookupContextHandle for System.MulticastDelegate:ThrowNullThisInDelegateToInstance() set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.MulticastDelegate:ThrowNullThisInDelegateToInstance() :
IL to import:
IL_0000  28 04 14 00 06    call         0x6001404
IL_0005  73 4a 0a 00 06    newobj       0x6000A4A
IL_000a  7a                throw       

INLINER impTokenLookupContextHandle for System.MulticastDelegate:ThrowNullThisInDelegateToInstance() is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.MulticastDelegate:ThrowNullThisInDelegateToInstance()
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB44 [0043] created.
BB44 [000..00B)
Basic block list for 'System.MulticastDelegate:ThrowNullThisInDelegateToInstance()'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB44 [0043]  1                             0       [000..00B)        (throw )                     rare 
-----------------------------------------------------------------------------------------------------------------------------------------
INLINER: during 'fgInline' result 'failed this callee' reason 'does not return' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.MulticastDelegate:ThrowNullThisInDelegateToInstance()'
INLINER: during 'fgInline' result 'failed this callee' reason 'does not return'

lvaUpdateClass: Updating class for V09 from (00000000D1FFAB1E) System.Action`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] to (00000000D1FFAB1E) System.Action`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] [exact]
Expanding INLINE_CANDIDATE in statement STMT00046 in BB08:
STMT00046 (IL   ???...  ???)
               [000174] I-C-G-------              *  CALL      void   System.MulticastDelegate.CtorClosed (exactContextHnd=0x00000000D1FFAB1E)
               [000173] ------------ this in rcx  +--*  LCL_VAR   ref    V27 tmp16        
               [000167] ------------ arg1         +--*  LCL_VAR   ref    V02 loc0         
               [000168] ------------ arg2         \--*  FTN_ADDR  long   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__OnAnalyzerFinished|1

thisArg: is a local var
               [000173] ------------              *  LCL_VAR   ref    V27 tmp16        


Argument #1: is a local var
               [000167] ------------              *  LCL_VAR   ref    V02 loc0         


Argument #2:
               [000168] ------------              *  FTN_ADDR  long   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__OnAnalyzerFinished|1


INLINER: inlineInfo.tokenLookupContextHandle for System.MulticastDelegate:CtorClosed(System.Object,long):this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.MulticastDelegate:CtorClosed(System.Object,long):this :
IL to import:
IL_0000  03                ldarg.1     
IL_0001  2d 05             brtrue.s     5 (IL_0008)
IL_0003  28 9c 04 00 06    call         0x600049C
IL_0008  02                ldarg.0     
IL_0009  03                ldarg.1     
IL_000a  7d 0d 01 00 04    stfld        0x400010D
IL_000f  02                ldarg.0     
IL_0010  04                ldarg.2     
IL_0011  7d 0f 01 00 04    stfld        0x400010F
IL_0016  2a                ret         

INLINER impTokenLookupContextHandle for System.MulticastDelegate:CtorClosed(System.Object,long):this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.MulticastDelegate:CtorClosed(System.Object,long):this
weight= 16 : state   4 [ ldarg.1 ]
weight= 25 : state  45 [ brtrue.s ]
weight= 79 : state  40 [ call ]
weight= 69 : state 226 [ ldarg.0 -> ldarg.1 -> stfld ]
weight= 98 : state 228 [ ldarg.0 -> ldarg.2 -> stfld ]
weight= 19 : state  42 [ ret ]

Inline candidate has an arg that feeds a constant test.  Multiplier increased to 1.
Inline candidate is mostly loads and stores.  Multiplier increased to 4.
Inline candidate callsite is in a loop.  Multiplier increased to 7.
calleeNativeSizeEstimate=306
callsiteNativeSizeEstimate=145
benefit multiplier=7
threshold=1015
Native estimate for function size is within threshold for inlining 30.6 <= 101.5 (multiplier = 7)
Jump targets:
  IL_0008
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB45 [0043] created.
BB45 [000..003)
New Basic Block BB46 [0044] created.
BB46 [003..008)
New Basic Block BB47 [0045] created.
BB47 [008..017)
Basic block list for 'System.MulticastDelegate:CtorClosed(System.Object,long):this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB45 [0043]  1                             1       [000..003)-> BB47 ( cond )                     
BB46 [0044]  1                             1       [003..008)                                     
BB47 [0045]  2                             1       [008..017)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000174] Starting PHASE Pre-import

*************** Inline @[000174] Finishing PHASE Pre-import

*************** Inline @[000174] Starting PHASE Importation
*************** In impImport() for System.MulticastDelegate:CtorClosed(System.Object,long):this

impImportBlockPending for BB45

Importing BB45 (PC=000) of 'System.MulticastDelegate:CtorClosed(System.Object,long):this'
    [ 0]   0 (0x000) ldarg.1
    [ 1]   1 (0x001) brtrue.s

               [000371] ------------              *  JTRUE     void  
               [000370] ------------              \--*  NE        int   
               [000167] ------------                 +--*  LCL_VAR   ref    V02 loc0         
               [000369] ------------                 \--*  CNS_INT   ref    null

impImportBlockPending for BB46

impImportBlockPending for BB47

Importing BB47 (PC=008) of 'System.MulticastDelegate:CtorClosed(System.Object,long):this'
    [ 0]   8 (0x008) ldarg.0
    [ 1]   9 (0x009) ldarg.1
    [ 2]  10 (0x00a) stfld 0400010D

               [000374] -A-XG-------              *  ASG       ref   
               [000373] ---XG--N----              +--*  FIELD     ref    _target
               [000173] ------------              |  \--*  LCL_VAR   ref    V27 tmp16        
               [000372] ------------              \--*  LCL_VAR   ref    V02 loc0         

    [ 0]  15 (0x00f) ldarg.0
    [ 1]  16 (0x010) ldarg.2
lvaGrabTemp returning 34 (V34 tmp23) called for Inlining Arg.

    [ 2]  17 (0x011) stfld 0400010F

               [000378] -A-XG-------              *  ASG       long  
               [000377] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000375] ------------              |  \--*  LCL_VAR   ref    V27 tmp16        
               [000376] ------------              \--*  LCL_VAR   long   V34 tmp23        

    [ 0]  22 (0x016) ret
Importing BB46 (PC=003) of 'System.MulticastDelegate:CtorClosed(System.Object,long):this'
    [ 0]   3 (0x003) call 0600049C
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0


               [000379] I-C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance (exactContextHnd=0x00000000D1FFAB1E)

impImportBlockPending for BB47

After impImport() added block for try,catch,finally
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB45 [0043]  1                             1       [000..003)-> BB47 ( cond )                     i 
BB46 [0044]  1                             1       [003..008)                                     i 
BB47 [0045]  2                             1       [008..017)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** Inline @[000174] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB45 [0043]  1                             1       [000..003)-> BB47 ( cond )                     i 
BB46 [0044]  1                             1       [003..008)                                     i 
BB47 [0045]  2                             1       [008..017)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB45 [000..003) -> BB47 (cond), preds={} succs={BB46,BB47}

***** BB45
               [000371] ------------              *  JTRUE     void  
               [000370] ------------              \--*  NE        int   
               [000167] ------------                 +--*  LCL_VAR   ref    V02 loc0         
               [000369] ------------                 \--*  CNS_INT   ref    null

------------ BB46 [003..008), preds={} succs={BB47}

***** BB46
               [000379] I-C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance (exactContextHnd=0x00000000D1FFAB1E)

------------ BB47 [008..017) (return), preds={} succs={}

***** BB47
               [000374] -A-XG-------              *  ASG       ref   
               [000373] ---XG--N----              +--*  FIELD     ref    _target
               [000173] ------------              |  \--*  LCL_VAR   ref    V27 tmp16        
               [000372] ------------              \--*  LCL_VAR   ref    V02 loc0         

***** BB47
               [000378] -A-XG-------              *  ASG       long  
               [000377] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000375] ------------              |  \--*  LCL_VAR   ref    V27 tmp16        
               [000376] ------------              \--*  LCL_VAR   long   V34 tmp23        

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000174] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000174] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000174] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000174] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000174] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000174] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000174] -----------

Arguments setup:

Inlinee method body:New Basic Block BB48 [0046] created.

Convert bbJumpKind of BB47 to BBJ_NONE
fgInlineAppendStatements: no gc ref inline locals.

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB45 [0043]  1  0                          1       [000..000)-> BB47 ( cond ) T0                  i internal bwd 
BB46 [0044]  1  0                          0.50    [000..000)                 T0                  i internal bwd 
BB47 [0045]  2  0                          1       [000..000)                 T0                  i internal bwd 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB45 [000..000) -> BB47 (cond), preds={} succs={BB46,BB47}

***** BB45
STMT00099 (IL   ???...  ???)
               [000371] ------------              *  JTRUE     void  
               [000370] ------------              \--*  NE        int   
               [000167] ------------                 +--*  LCL_VAR   ref    V02 loc0         
               [000369] ------------                 \--*  CNS_INT   ref    null

------------ BB46 [000..000), preds={} succs={BB47}

***** BB46
STMT00102 (IL   ???...  ???)
               [000379] I-C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance (exactContextHnd=0x00000000D1FFAB1E)

------------ BB47 [000..000), preds={} succs={BB48}

***** BB47
STMT00100 (IL   ???...  ???)
               [000374] -A-XG-------              *  ASG       ref   
               [000373] ---XG--N----              +--*  FIELD     ref    _target
               [000173] ------------              |  \--*  LCL_VAR   ref    V27 tmp16        
               [000372] ------------              \--*  LCL_VAR   ref    V02 loc0         

***** BB47
STMT00101 (IL   ???...  ???)
               [000378] -A-XG-------              *  ASG       long  
               [000377] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000375] ------------              |  \--*  LCL_VAR   ref    V27 tmp16        
               [000168] ------------              \--*  FTN_ADDR  long   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__OnAnalyzerFinished|1


-------------------------------------------------------------------------------------------------------------------
Successfully inlined System.MulticastDelegate:CtorClosed(System.Object,long):this (23 IL bytes) (depth 1) [profitable inline]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'profitable inline' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.MulticastDelegate:CtorClosed(System.Object,long):this'
INLINER: during 'fgInline' result 'success' reason 'profitable inline'
Expanding INLINE_CANDIDATE in statement STMT00102 in BB46:
STMT00102 (IL   ???...  ???)
               [000379] I-C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance (exactContextHnd=0x00000000D1FFAB1E)
INLINER: inlineInfo.tokenLookupContextHandle for System.MulticastDelegate:ThrowNullThisInDelegateToInstance() set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.MulticastDelegate:ThrowNullThisInDelegateToInstance() :
IL to import:
IL_0000  28 04 14 00 06    call         0x6001404
IL_0005  73 4a 0a 00 06    newobj       0x6000A4A
IL_000a  7a                throw       

INLINER impTokenLookupContextHandle for System.MulticastDelegate:ThrowNullThisInDelegateToInstance() is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.MulticastDelegate:ThrowNullThisInDelegateToInstance()
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB49 [0047] created.
BB49 [000..00B)
Basic block list for 'System.MulticastDelegate:ThrowNullThisInDelegateToInstance()'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB49 [0047]  1                             0       [000..00B)        (throw )                     rare 
-----------------------------------------------------------------------------------------------------------------------------------------
INLINER: during 'fgInline' result 'failed this callee' reason 'does not return' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.MulticastDelegate:ThrowNullThisInDelegateToInstance()'
INLINER: during 'fgInline' result 'failed this callee' reason 'does not return'
**** Late devirt opportunity
               [000081] --C-G-------              *  CALLV stub int    System.Collections.IEnumerator.MoveNext
               [000080] ------------ this in rcx  \--*  LCL_VAR   ref    V06 loc4         

impDevirtualizeCall: Trying to devirtualize interface call:
    class for 'this' is System.Collections.Generic.IEnumerator`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] (attrib 10200400)
    base method is System.Collections.IEnumerator::MoveNext
No guarded devirt during late devirtualization
**** Late devirt opportunity
               [000260] --C-G-------              *  CALLV stub void   System.IDisposable.Dispose
               [000259] ------------ this in rcx  \--*  LCL_VAR   ref    V06 loc4         

impDevirtualizeCall: Trying to devirtualize interface call:
    class for 'this' is System.Collections.Generic.IEnumerator`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] (attrib 10200400)
    base method is System.IDisposable::Dispose
No guarded devirt during late devirtualization
Expanding INLINE_CANDIDATE in statement STMT00056 in BB14:
STMT00056 (IL 0x100...0x10C)
               [000214] I-CXG-------              *  CALL nullcheck int    System.Collections.Generic.Queue`1[__Canon][System.__Canon].get_Count (exactContextHnd=0x00000000D1FFAB1E)
               [000213] ---XG------- this in rcx  \--*  FIELD     ref    queuedAnalyzers
               [000212] ------------                 \--*  LCL_VAR   ref    V02 loc0         
thisArg: has global refs has side effects
               [000213] ---XG-------              *  FIELD     ref    queuedAnalyzers
               [000212] ------------              \--*  LCL_VAR   ref    V02 loc0         

INLINER: inlineInfo.tokenLookupContextHandle for System.Collections.Generic.Queue`1[__Canon][System.__Canon]:get_Count():int:this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Collections.Generic.Queue`1[__Canon][System.__Canon]:get_Count():int:this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  7b b8 00 00 0a    ldfld        0xA0000B8
IL_0006  2a                ret         

INLINER impTokenLookupContextHandle for System.Collections.Generic.Queue`1[__Canon][System.__Canon]:get_Count():int:this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Collections.Generic.Queue`1[__Canon][System.__Canon]:get_Count():int:this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB50 [0047] created.
BB50 [000..007)
Basic block list for 'System.Collections.Generic.Queue`1[__Canon][System.__Canon]:get_Count():int:this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB50 [0047]  1                             1       [000..007)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000214] Starting PHASE Pre-import

*************** Inline @[000214] Finishing PHASE Pre-import

*************** Inline @[000214] Starting PHASE Importation
*************** In impImport() for System.Collections.Generic.Queue`1[__Canon][System.__Canon]:get_Count():int:this

impImportBlockPending for BB50

Importing BB50 (PC=000) of 'System.Collections.Generic.Queue`1[__Canon][System.__Canon]:get_Count():int:this'
    [ 0]   0 (0x000) ldarg.0
lvaGrabTemp returning 35 (V35 tmp24) called for Inlining Arg.
Marked V35 as a single def temp
Querying runtime about current class of field <>c__DisplayClass5_0.queuedAnalyzers (declared as System.Collections.Generic.Queue`1[[System.Diagnostics.Process, System.Diagnostics.Process, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a]])
Field's current class not available

lvaSetClass: setting class for V35 to (00000000D1FFAB1E) System.Collections.Generic.Queue`1[[System.Diagnostics.Process, System.Diagnostics.Process, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a]] 

    [ 1]   1 (0x001) ldfld 0A0000B8
    [ 1]   6 (0x006) ret

    Inlinee Return expression (before normalization)  =>
               [000382] ---XG-------              *  FIELD     int    _size
               [000381] ------------              \--*  LCL_VAR   ref    V35 tmp24        


    Inlinee Return expression (after normalization) =>
               [000382] ---XG-------              *  FIELD     int    _size
               [000381] ------------              \--*  LCL_VAR   ref    V35 tmp24        

After impImport() added block for try,catch,finally
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB50 [0047]  1                             1       [000..007)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------


** Note: inlinee IL was partially imported -- imported 0 of 7 bytes of method IL

*************** Inline @[000214] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB50 [0047]  1                             1       [000..007)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB50 [000..007) (return), preds={} succs={}

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000214] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000214] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000214] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000214] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000214] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000214] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000214] -----------

Arguments setup:
STMT00103 (IL 0x100...  ???)
               [000384] -A-XG-------              *  ASG       ref   
               [000383] D------N----              +--*  LCL_VAR   ref    V35 tmp24        
               [000213] ---XG-------              \--*  FIELD     ref    queuedAnalyzers
               [000212] ------------                 \--*  LCL_VAR   ref    V02 loc0         

Inlinee method body:fgInlineAppendStatements: no gc ref inline locals.

Return expression for call at [000214] is
               [000382] ---XG-------              *  FIELD     int    _size
               [000381] ------------              \--*  LCL_VAR   ref    V35 tmp24        
Successfully inlined System.Collections.Generic.Queue`1[__Canon][System.__Canon]:get_Count():int:this (7 IL bytes) (depth 1) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.Collections.Generic.Queue`1[__Canon][System.__Canon]:get_Count():int:this'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Querying runtime about current class of field <>c__DisplayClass5_0.queuedAnalyzers (declared as System.Collections.Generic.Queue`1[[System.Diagnostics.Process, System.Diagnostics.Process, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a]])
Field's current class not available

Replacing the return expression placeholder [000215] with [000382]
               [000215] --C---------              *  RET_EXPR  int   (inl return from call [000382])

Inserting the inline return expression
               [000382] ---XG-------              *  FIELD     int    _size
               [000381] ------------              \--*  LCL_VAR   ref    V35 tmp24        

Expanding INLINE_CANDIDATE in statement STMT00059 in BB14:
STMT00059 (IL   ???...  ???)
               [000226] I-CXG-------              *  CALL      void   SolutionAnalyzer.LinearProgressReporter..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000225] ------------ this in rcx  +--*  LCL_VAR   ref    V29 tmp18        
               [000220] ---XG------- arg1         \--*  FIELD     int    analyzerCount
               [000219] ------------                 \--*  LCL_VAR   ref    V02 loc0         
thisArg: is a local var
               [000225] ------------              *  LCL_VAR   ref    V29 tmp18        


Argument #1: has global refs has side effects
               [000220] ---XG-------              *  FIELD     int    analyzerCount
               [000219] ------------              \--*  LCL_VAR   ref    V02 loc0         

INLINER: inlineInfo.tokenLookupContextHandle for SolutionAnalyzer.LinearProgressReporter:.ctor(int):this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method SolutionAnalyzer.LinearProgressReporter:.ctor(int):this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  73 8f 00 00 0a    newobj       0xA00008F
IL_0006  7d 13 00 00 04    stfld        0x4000013
IL_000b  02                ldarg.0     
IL_000c  28 28 00 00 0a    call         0xA000028
IL_0011  02                ldarg.0     
IL_0012  03                ldarg.1     
IL_0013  7d 14 00 00 04    stfld        0x4000014
IL_0018  2a                ret         

INLINER impTokenLookupContextHandle for SolutionAnalyzer.LinearProgressReporter:.ctor(int):this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for SolutionAnalyzer.LinearProgressReporter:.ctor(int):this
weight= 10 : state   3 [ ldarg.0 ]
weight=227 : state 103 [ newobj ]
weight= 31 : state 111 [ stfld ]
weight= 10 : state   3 [ ldarg.0 ]
weight= 79 : state  40 [ call ]
weight= 69 : state 226 [ ldarg.0 -> ldarg.1 -> stfld ]
weight= 19 : state  42 [ ret ]

multiplier in instance constructors increased to 1.5.
Inline candidate is mostly loads and stores.  Multiplier increased to 4.5.
Inline candidate callsite is boring.  Multiplier increased to 5.8.
calleeNativeSizeEstimate=445
callsiteNativeSizeEstimate=115
benefit multiplier=5.8
threshold=667
Native estimate for function size is within threshold for inlining 44.5 <= 66.7 (multiplier = 5.8)
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB51 [0048] created.
BB51 [000..019)
Basic block list for 'SolutionAnalyzer.LinearProgressReporter:.ctor(int):this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB51 [0048]  1                             1       [000..019)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000226] Starting PHASE Pre-import

*************** Inline @[000226] Finishing PHASE Pre-import

*************** Inline @[000226] Starting PHASE Importation
*************** In impImport() for SolutionAnalyzer.LinearProgressReporter:.ctor(int):this

impImportBlockPending for BB51

Importing BB51 (PC=000) of 'SolutionAnalyzer.LinearProgressReporter:.ctor(int):this'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) newobj
lvaGrabTemp returning 36 (V36 tmp25) called for NewObj constructor temp.


               [000389] -A----------              *  ASG       ref   
               [000388] D------N----              +--*  LCL_VAR   ref    V36 tmp25        
               [000387] ------------              \--*  ALLOCOBJ  ref   
               [000386] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token
Marked V36 as a single def local

lvaSetClass: setting class for V36 to (00000000D1FFAB1E) System.Collections.Generic.Dictionary`2[[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Diagnostics.Stopwatch, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]  [exact]
 0A00008F
In Compiler::impImportCall: opcode is newobj, kind=0, callRetType is void, structSize is 0


               [000391] I-C-G-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000390] ------------ this in rcx  \--*  LCL_VAR   ref    V36 tmp25        

    [ 2]   6 (0x006) stfld 04000013

               [000394] -A-XG-------              *  ASG       ref   
               [000393] ---XG--N----              +--*  FIELD     ref    _workItems
               [000225] ------------              |  \--*  LCL_VAR   ref    V29 tmp18        
               [000392] ------------              \--*  LCL_VAR   ref    V36 tmp25        

    [ 0]  11 (0x00b) ldarg.0
    [ 1]  12 (0x00c) call 0A000028
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0


               [000396] I-C-G-------              *  CALL      void   System.Object..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000395] ------------ this in rcx  \--*  LCL_VAR   ref    V29 tmp18        

    [ 0]  17 (0x011) ldarg.0
    [ 1]  18 (0x012) ldarg.1
lvaGrabTemp returning 37 (V37 tmp26) called for Inlining Arg.

    [ 2]  19 (0x013) stfld 04000014

               [000400] -A-XG-------              *  ASG       int   
               [000399] ---XG--N----              +--*  FIELD     int    _workItemsToComplete
               [000397] ------------              |  \--*  LCL_VAR   ref    V29 tmp18        
               [000398] ------------              \--*  LCL_VAR   int    V37 tmp26        

    [ 0]  24 (0x018) ret
After impImport() added block for try,catch,finally
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB51 [0048]  1                             1       [000..019)        (return)                     i newobj 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** Inline @[000226] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB51 [0048]  1                             1       [000..019)        (return)                     i newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB51 [000..019) (return), preds={} succs={}

***** BB51
               [000389] -A----------              *  ASG       ref   
               [000388] D------N----              +--*  LCL_VAR   ref    V36 tmp25        
               [000387] ------------              \--*  ALLOCOBJ  ref   
               [000386] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB51
               [000391] I-C-G-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000390] ------------ this in rcx  \--*  LCL_VAR   ref    V36 tmp25        

***** BB51
               [000394] -A-XG-------              *  ASG       ref   
               [000393] ---XG--N----              +--*  FIELD     ref    _workItems
               [000225] ------------              |  \--*  LCL_VAR   ref    V29 tmp18        
               [000392] ------------              \--*  LCL_VAR   ref    V36 tmp25        

***** BB51
               [000396] I-C-G-------              *  CALL      void   System.Object..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000395] ------------ this in rcx  \--*  LCL_VAR   ref    V29 tmp18        

***** BB51
               [000400] -A-XG-------              *  ASG       int   
               [000399] ---XG--N----              +--*  FIELD     int    _workItemsToComplete
               [000397] ------------              |  \--*  LCL_VAR   ref    V29 tmp18        
               [000398] ------------              \--*  LCL_VAR   int    V37 tmp26        

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000226] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000226] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000226] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000226] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000226] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000226] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000226] -----------

Arguments setup:
STMT00109 (IL   ???...  ???)
               [000402] -A-XG-------              *  ASG       int   
               [000401] D------N----              +--*  LCL_VAR   int    V37 tmp26        
               [000220] ---XG-------              \--*  FIELD     int    analyzerCount
               [000219] ------------                 \--*  LCL_VAR   ref    V02 loc0         

Inlinee method body:
STMT00104 (IL   ???...  ???)
               [000389] -A----------              *  ASG       ref   
               [000388] D------N----              +--*  LCL_VAR   ref    V36 tmp25        
               [000387] ------------              \--*  ALLOCOBJ  ref   
               [000386] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token


STMT00105 (IL   ???...  ???)
               [000391] I-C-G-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000390] ------------ this in rcx  \--*  LCL_VAR   ref    V36 tmp25        


STMT00106 (IL   ???...  ???)
               [000394] -A-XG-------              *  ASG       ref   
               [000393] ---XG--N----              +--*  FIELD     ref    _workItems
               [000225] ------------              |  \--*  LCL_VAR   ref    V29 tmp18        
               [000392] ------------              \--*  LCL_VAR   ref    V36 tmp25        


STMT00107 (IL   ???...  ???)
               [000396] I-C-G-------              *  CALL      void   System.Object..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000395] ------------ this in rcx  \--*  LCL_VAR   ref    V29 tmp18        


STMT00108 (IL   ???...  ???)
               [000400] -A-XG-------              *  ASG       int   
               [000399] ---XG--N----              +--*  FIELD     int    _workItemsToComplete
               [000397] ------------              |  \--*  LCL_VAR   ref    V29 tmp18        
               [000398] ------------              \--*  LCL_VAR   int    V37 tmp26        

fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined SolutionAnalyzer.LinearProgressReporter:.ctor(int):this (25 IL bytes) (depth 1) [profitable inline]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'profitable inline' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'SolutionAnalyzer.LinearProgressReporter:.ctor(int):this'
INLINER: during 'fgInline' result 'success' reason 'profitable inline'
Expanding INLINE_CANDIDATE in statement STMT00105 in BB14:
STMT00105 (IL   ???...  ???)
               [000391] I-C-G-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000390] ------------ this in rcx  \--*  LCL_VAR   ref    V36 tmp25        
thisArg: is a local var
               [000390] ------------              *  LCL_VAR   ref    V36 tmp25        

INLINER: inlineInfo.tokenLookupContextHandle for System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:.ctor():this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:.ctor():this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  16                ldc.i4.0    
IL_0002  14                ldnull      
IL_0003  28 bb 0b 00 0a    call         0xA000BBB
IL_0008  2a                ret         

INLINER impTokenLookupContextHandle for System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:.ctor():this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:.ctor():this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB52 [0049] created.
BB52 [000..009)
Basic block list for 'System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:.ctor():this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB52 [0049]  1                             1       [000..009)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000391] Starting PHASE Pre-import

*************** Inline @[000391] Finishing PHASE Pre-import

*************** Inline @[000391] Starting PHASE Importation
*************** In impImport() for System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:.ctor():this

impImportBlockPending for BB52

Importing BB52 (PC=000) of 'System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:.ctor():this'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) ldc.i4.0 0
    [ 2]   2 (0x002) ldnull
    [ 3]   3 (0x003) call 0A000BBB
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'noinline per IL/cached result' for 'System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:.ctor():this' calling 'System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:.ctor(int,System.Collections.Generic.IEqualityComparer`1[__Canon]):this'
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'noinline per IL/cached result'


               [000406] --C-G-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor
               [000390] ------------ this in rcx  +--*  LCL_VAR   ref    V36 tmp25        
               [000404] ------------ arg1         +--*  CNS_INT   int    0
               [000405] ------------ arg2         \--*  CNS_INT   ref    null

    [ 0]   8 (0x008) ret
After impImport() added block for try,catch,finally
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB52 [0049]  1                             1       [000..009)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** Inline @[000391] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB52 [0049]  1                             1       [000..009)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB52 [000..009) (return), preds={} succs={}

***** BB52
               [000406] --C-G-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor
               [000390] ------------ this in rcx  +--*  LCL_VAR   ref    V36 tmp25        
               [000404] ------------ arg1         +--*  CNS_INT   int    0
               [000405] ------------ arg2         \--*  CNS_INT   ref    null

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000391] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000391] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000391] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000391] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000391] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000391] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000391] -----------

Arguments setup:

Inlinee method body:
STMT00110 (IL   ???...  ???)
               [000406] --C-G-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor
               [000390] ------------ this in rcx  +--*  LCL_VAR   ref    V36 tmp25        
               [000404] ------------ arg1         +--*  CNS_INT   int    0
               [000405] ------------ arg2         \--*  CNS_INT   ref    null

fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:.ctor():this (9 IL bytes) (depth 2) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:.ctor():this'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Expanding INLINE_CANDIDATE in statement STMT00107 in BB14:
STMT00107 (IL   ???...  ???)
               [000396] I-C-G-------              *  CALL      void   System.Object..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000395] ------------ this in rcx  \--*  LCL_VAR   ref    V29 tmp18        
thisArg: is a local var
               [000395] ------------              *  LCL_VAR   ref    V29 tmp18        

INLINER: inlineInfo.tokenLookupContextHandle for System.Object:.ctor():this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Object:.ctor():this :
IL to import:
IL_0000  2a                ret         

INLINER impTokenLookupContextHandle for System.Object:.ctor():this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Object:.ctor():this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB53 [0050] created.
BB53 [000..001)
Basic block list for 'System.Object:.ctor():this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB53 [0050]  1                             1       [000..001)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000396] Starting PHASE Pre-import

*************** Inline @[000396] Finishing PHASE Pre-import

*************** Inline @[000396] Starting PHASE Importation
*************** In impImport() for System.Object:.ctor():this

impImportBlockPending for BB53

Importing BB53 (PC=000) of 'System.Object:.ctor():this'
    [ 0]   0 (0x000) ret
After impImport() added block for try,catch,finally
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB53 [0050]  1                             1       [000..001)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------


** Note: inlinee IL was partially imported -- imported 0 of 1 bytes of method IL

*************** Inline @[000396] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB53 [0050]  1                             1       [000..001)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB53 [000..001) (return), preds={} succs={}

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000396] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000396] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000396] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000396] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000396] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000396] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000396] -----------

Arguments setup:

Inlinee method body:fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined System.Object:.ctor():this (1 IL bytes) (depth 2) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.Object:.ctor():this'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Expanding INLINE_CANDIDATE in statement STMT00065 in BB15:
STMT00065 (IL 0x127...0x131)
               [000243] I-C-G-------              *  CALL nullcheck void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0 (exactContextHnd=0x00000000D1FFAB1E)
               [000242] ------------ this in rcx  \--*  LCL_VAR   ref    V02 loc0         
thisArg: is a local var
               [000242] ------------              *  LCL_VAR   ref    V02 loc0         

INLINER: inlineInfo.tokenLookupContextHandle for <>c__DisplayClass5_0:<ExecuteAnalyzers>g__StartNextAnalyzer|0():this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method <>c__DisplayClass5_0:<ExecuteAnalyzers>g__StartNextAnalyzer|0():this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  7b 77 00 00 04    ldfld        0x4000077
IL_0006  6f 39 01 00 0a    callvirt     0xA000139
IL_000b  0a                stloc.0     
IL_000c  72 73 08 00 70    ldstr        0x70000873
IL_0011  18                ldc.i4.2    
IL_0012  28 0b 00 00 2b    call         0x2B00000B
IL_0017  26                pop         
IL_0018  06                ldloc.0     
IL_0019  28 32 00 00 06    call         0x6000032
IL_001e  02                ldarg.0     
IL_001f  7b 78 00 00 04    ldfld        0x4000078
IL_0024  25                dup         
IL_0025  2d 02             brtrue.s     2 (IL_0029)
IL_0027  26                pop         
IL_0028  2a                ret         
IL_0029  06                ldloc.0     
IL_002a  28 41 00 00 06    call         0x6000041
IL_002f  2a                ret         

INLINER impTokenLookupContextHandle for <>c__DisplayClass5_0:<ExecuteAnalyzers>g__StartNextAnalyzer|0():this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for <>c__DisplayClass5_0:<ExecuteAnalyzers>g__StartNextAnalyzer|0():this
weight= 31 : state 191 [ ldarg.0 -> ldfld ]
weight= 83 : state  99 [ callvirt ]
weight=  6 : state  11 [ stloc.0 ]
weight= 66 : state 102 [ ldstr ]
weight= 34 : state  25 [ ldc.i4.2 ]
weight= 79 : state  40 [ call ]
weight=-24 : state  39 [ pop ]
weight= 12 : state   7 [ ldloc.0 ]
weight= 79 : state  40 [ call ]
weight= 31 : state 191 [ ldarg.0 -> ldfld ]
weight= 11 : state  38 [ dup ]
weight= 25 : state  45 [ brtrue.s ]
weight=-24 : state  39 [ pop ]
weight= 19 : state  42 [ ret ]
weight= 12 : state   7 [ ldloc.0 ]
weight= 79 : state  40 [ call ]
weight= 19 : state  42 [ ret ]

Inline candidate looks like a wrapper method.  Multiplier increased to 1.
Inline candidate has an arg that feeds a constant test.  Multiplier increased to 2.
Inline candidate callsite is in a loop.  Multiplier increased to 5.
calleeNativeSizeEstimate=538
callsiteNativeSizeEstimate=85
benefit multiplier=5
threshold=425
Native estimate for function size exceeds threshold for inlining 53.8 > 42.5 (multiplier = 5)


Inline expansion aborted, inline not profitable
INLINER: during 'fgInline' result 'failed this call site' reason 'unprofitable inline' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling '<>c__DisplayClass5_0:<ExecuteAnalyzers>g__StartNextAnalyzer|0():this'
INLINER: during 'fgInline' result 'failed this call site' reason 'unprofitable inline'
Expanding INLINE_CANDIDATE in statement STMT00062 in BB16:
STMT00062 (IL 0x133...0x145)
               [000234] I-C-G-------              *  CALL      int    System.Environment.get_ProcessorCount (exactContextHnd=0x00000000D1FFAB1E)
INLINER: inlineInfo.tokenLookupContextHandle for System.Environment:get_ProcessorCount():int set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Environment:get_ProcessorCount():int :
IL to import:
IL_0000  7e 1e 01 00 04    ldsfld       0x400011E
IL_0005  2a                ret         

INLINER impTokenLookupContextHandle for System.Environment:get_ProcessorCount():int is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Environment:get_ProcessorCount():int
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB54 [0051] created.
BB54 [000..006)
Basic block list for 'System.Environment:get_ProcessorCount():int'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB54 [0051]  1                             1       [000..006)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000234] Starting PHASE Pre-import

*************** Inline @[000234] Finishing PHASE Pre-import

*************** Inline @[000234] Starting PHASE Importation
*************** In impImport() for System.Environment:get_ProcessorCount():int

impImportBlockPending for BB54

Importing BB54 (PC=000) of 'System.Environment:get_ProcessorCount():int'
    [ 0]   0 (0x000) ldsfld 0400011E
    [ 1]   5 (0x005) ret

    Inlinee Return expression (before normalization)  =>
               [000409] ------------              *  CNS_INT   int    8


    Inlinee Return expression (after normalization) =>
               [000409] ------------              *  CNS_INT   int    8

After impImport() added block for try,catch,finally
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB54 [0051]  1                             1       [000..006)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------


** Note: inlinee IL was partially imported -- imported 0 of 6 bytes of method IL

*************** Inline @[000234] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB54 [0051]  1                             1       [000..006)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB54 [000..006) (return), preds={} succs={}

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000234] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000234] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000234] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000234] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000234] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000234] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000234] -----------

Inlinee method body:fgInlineAppendStatements: no gc ref inline locals.

Return expression for call at [000234] is
               [000409] ------------              *  CNS_INT   int    8
Successfully inlined System.Environment:get_ProcessorCount():int (6 IL bytes) (depth 1) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.Environment:get_ProcessorCount():int'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Expanding INLINE_CANDIDATE in statement STMT00063 in BB16:
STMT00063 (IL   ???...  ???)
               [000238] I-CXG-------              *  CALL      int    System.Math.Min (exactContextHnd=0x00000000D1FFAB1E)
               [000235] --C--------- arg0         +--*  RET_EXPR  int   (inl return from call [000409])
               [000237] ---XG------- arg1         \--*  FIELD     int    analyzerCount
               [000236] ------------                 \--*  LCL_VAR   ref    V02 loc0         

Argument #0: is a constant
               [000409] ------------              *  CNS_INT   int    8


Argument #1: has global refs has side effects
               [000237] ---XG-------              *  FIELD     int    analyzerCount
               [000236] ------------              \--*  LCL_VAR   ref    V02 loc0         

INLINER: inlineInfo.tokenLookupContextHandle for System.Math:Min(int,int):int set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Math:Min(int,int):int :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  03                ldarg.1     
IL_0002  31 02             ble.s        2 (IL_0006)
IL_0004  03                ldarg.1     
IL_0005  2a                ret         
IL_0006  02                ldarg.0     
IL_0007  2a                ret         

INLINER impTokenLookupContextHandle for System.Math:Min(int,int):int is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Math:Min(int,int):int
Jump targets:
  IL_0006
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB55 [0052] created.
BB55 [000..004)
New Basic Block BB56 [0053] created.
BB56 [004..006)
New Basic Block BB57 [0054] created.
BB57 [006..008)

lvaGrabTemp returning 38 (V38 tmp27) (a long lifetime temp) called for Inline return value spill temp.
Basic block list for 'System.Math:Min(int,int):int'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB55 [0052]  1                             1       [000..004)-> BB57 ( cond )                     
BB56 [0053]  1                             1       [004..006)        (return)                     
BB57 [0054]  1                             1       [006..008)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000238] Starting PHASE Pre-import

*************** Inline @[000238] Finishing PHASE Pre-import

*************** Inline @[000238] Starting PHASE Importation
*************** In impImport() for System.Math:Min(int,int):int

impImportBlockPending for BB55

Importing BB55 (PC=000) of 'System.Math:Min(int,int):int'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) ldarg.1
lvaGrabTemp returning 39 (V39 tmp28) called for Inlining Arg.

    [ 2]   2 (0x002) ble.s

               [000414] ------------              *  JTRUE     void  
               [000413] ------------              \--*  LE        int   
               [000411] ------------                 +--*  CNS_INT   int    8
               [000412] ------------                 \--*  LCL_VAR   int    V39 tmp28        

impImportBlockPending for BB56

impImportBlockPending for BB57

Importing BB57 (PC=006) of 'System.Math:Min(int,int):int'
    [ 0]   6 (0x006) ldarg.0
    [ 1]   7 (0x007) ret

    Inlinee Return expression (before normalization)  =>
               [000415] ------------              *  CNS_INT   int    8


               [000417] -A----------              *  ASG       int   
               [000416] D------N----              +--*  LCL_VAR   int    V38 tmp27        
               [000415] ------------              \--*  CNS_INT   int    8


    Inlinee Return expression (after normalization) =>
               [000418] ------------              *  LCL_VAR   int    V38 tmp27        

Importing BB56 (PC=004) of 'System.Math:Min(int,int):int'
    [ 0]   4 (0x004) ldarg.1
    [ 1]   5 (0x005) ret

    Inlinee Return expression (before normalization)  =>
               [000419] ------------              *  LCL_VAR   int    V39 tmp28        


               [000421] -A----------              *  ASG       int   
               [000420] D------N----              +--*  LCL_VAR   int    V38 tmp27        
               [000419] ------------              \--*  LCL_VAR   int    V39 tmp28        


    Inlinee Return expression (after normalization) =>
               [000422] ------------              *  LCL_VAR   int    V38 tmp27        

After impImport() added block for try,catch,finally
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB55 [0052]  1                             1       [000..004)-> BB57 ( cond )                     i 
BB56 [0053]  1                             1       [004..006)        (return)                     i 
BB57 [0054]  1                             1       [006..008)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** Inline @[000238] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB55 [0052]  1                             1       [000..004)-> BB57 ( cond )                     i 
BB56 [0053]  1                             1       [004..006)        (return)                     i 
BB57 [0054]  1                             1       [006..008)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB55 [000..004) -> BB57 (cond), preds={} succs={BB56,BB57}

***** BB55
               [000414] ------------              *  JTRUE     void  
               [000413] ------------              \--*  LE        int   
               [000411] ------------                 +--*  CNS_INT   int    8
               [000412] ------------                 \--*  LCL_VAR   int    V39 tmp28        

------------ BB56 [004..006) (return), preds={} succs={}

***** BB56
               [000421] -A----------              *  ASG       int   
               [000420] D------N----              +--*  LCL_VAR   int    V38 tmp27        
               [000419] ------------              \--*  LCL_VAR   int    V39 tmp28        

------------ BB57 [006..008) (return), preds={} succs={}

***** BB57
               [000417] -A----------              *  ASG       int   
               [000416] D------N----              +--*  LCL_VAR   int    V38 tmp27        
               [000415] ------------              \--*  CNS_INT   int    8

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000238] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000238] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000238] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000238] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000238] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000238] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000238] -----------

Arguments setup:
STMT00114 (IL   ???...  ???)
               [000424] -A-XG-------              *  ASG       int   
               [000423] D------N----              +--*  LCL_VAR   int    V39 tmp28        
               [000237] ---XG-------              \--*  FIELD     int    analyzerCount
               [000236] ------------                 \--*  LCL_VAR   ref    V02 loc0         

Inlinee method body:New Basic Block BB58 [0055] created.

Convert bbJumpKind of BB56 to BBJ_ALWAYS to bottomBlock BB58

Convert bbJumpKind of BB57 to BBJ_NONE
fgInlineAppendStatements: no gc ref inline locals.

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB55 [0052]  1                             1       [000..000)-> BB57 ( cond )                     i internal bwd 
BB56 [0053]  1                             1       [000..000)-> BB58 (always)                     i internal bwd 
BB57 [0054]  1                             1       [000..000)                                     i internal bwd 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB55 [000..000) -> BB57 (cond), preds={} succs={BB56,BB57}

***** BB55
STMT00111 (IL   ???...  ???)
               [000414] ------------              *  JTRUE     void  
               [000413] ------------              \--*  LE        int   
               [000411] ------------                 +--*  CNS_INT   int    8
               [000412] ------------                 \--*  LCL_VAR   int    V39 tmp28        

------------ BB56 [000..000) -> BB58 (always), preds={} succs={BB58}

***** BB56
STMT00113 (IL   ???...  ???)
               [000421] -A----------              *  ASG       int   
               [000420] D------N----              +--*  LCL_VAR   int    V38 tmp27        
               [000419] ------------              \--*  LCL_VAR   int    V39 tmp28        

------------ BB57 [000..000), preds={} succs={BB58}

***** BB57
STMT00112 (IL   ???...  ???)
               [000417] -A----------              *  ASG       int   
               [000416] D------N----              +--*  LCL_VAR   int    V38 tmp27        
               [000415] ------------              \--*  CNS_INT   int    8

-------------------------------------------------------------------------------------------------------------------

Return expression for call at [000238] is
               [000422] ------------              *  LCL_VAR   int    V38 tmp27        
Successfully inlined System.Math:Min(int,int):int (8 IL bytes) (depth 1) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.Math:Min(int,int):int'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'

Replacing the return expression placeholder [000239] with [000422]
               [000239] --C---------              *  RET_EXPR  int   (inl return from call [000422])

Inserting the inline return expression
               [000422] ------------              *  LCL_VAR   int    V38 tmp27        

Expanding INLINE_CANDIDATE in statement STMT00067 in BB17:
STMT00067 (IL 0x147...0x152)
               [000251] I-CXG-------              *  CALL nullcheck ref    System.Threading.Tasks.TaskCompletionSource`1[Boolean][System.Boolean].get_Task (exactContextHnd=0x00000000D1FFAB1E)
               [000250] ---XG------- this in rcx  \--*  FIELD     ref    allAnalyzersHaveRun
               [000249] ------------                 \--*  LCL_VAR   ref    V02 loc0         
Note: candidate is implicit tail call
thisArg: has global refs has side effects
               [000250] ---XG-------              *  FIELD     ref    allAnalyzersHaveRun
               [000249] ------------              \--*  LCL_VAR   ref    V02 loc0         

INLINER: inlineInfo.tokenLookupContextHandle for System.Threading.Tasks.TaskCompletionSource`1[Boolean][System.Boolean]:get_Task():System.Threading.Tasks.Task`1[Boolean]:this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Threading.Tasks.TaskCompletionSource`1[Boolean][System.Boolean]:get_Task():System.Threading.Tasks.Task`1[Boolean]:this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  7b 64 07 00 0a    ldfld        0xA000764
IL_0006  2a                ret         

INLINER impTokenLookupContextHandle for System.Threading.Tasks.TaskCompletionSource`1[Boolean][System.Boolean]:get_Task():System.Threading.Tasks.Task`1[Boolean]:this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Threading.Tasks.TaskCompletionSource`1[Boolean][System.Boolean]:get_Task():System.Threading.Tasks.Task`1[Boolean]:this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB59 [0056] created.
BB59 [000..007)
Basic block list for 'System.Threading.Tasks.TaskCompletionSource`1[Boolean][System.Boolean]:get_Task():System.Threading.Tasks.Task`1[Boolean]:this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB59 [0056]  1                             1       [000..007)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000251] Starting PHASE Pre-import

*************** Inline @[000251] Finishing PHASE Pre-import

*************** Inline @[000251] Starting PHASE Importation
*************** In impImport() for System.Threading.Tasks.TaskCompletionSource`1[Boolean][System.Boolean]:get_Task():System.Threading.Tasks.Task`1[Boolean]:this

impImportBlockPending for BB59

Importing BB59 (PC=000) of 'System.Threading.Tasks.TaskCompletionSource`1[Boolean][System.Boolean]:get_Task():System.Threading.Tasks.Task`1[Boolean]:this'
    [ 0]   0 (0x000) ldarg.0
lvaGrabTemp returning 40 (V40 tmp29) called for Inlining Arg.
Marked V40 as a single def temp
Querying runtime about current class of field <>c__DisplayClass5_0.allAnalyzersHaveRun (declared as System.Threading.Tasks.TaskCompletionSource`1[Boolean])
Field's current class not available

lvaSetClass: setting class for V40 to (00000000D1FFAB1E) System.Threading.Tasks.TaskCompletionSource`1[Boolean] 

    [ 1]   1 (0x001) ldfld 0A000764
    [ 1]   6 (0x006) ret

    Inlinee Return expression (before normalization)  =>
               [000427] ---XG-------              *  FIELD     ref    _task
               [000426] ------------              \--*  LCL_VAR   ref    V40 tmp29        


    Inlinee Return expression (after normalization) =>
               [000427] ---XG-------              *  FIELD     ref    _task
               [000426] ------------              \--*  LCL_VAR   ref    V40 tmp29        

After impImport() added block for try,catch,finally
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB59 [0056]  1                             1       [000..007)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------


** Note: inlinee IL was partially imported -- imported 0 of 7 bytes of method IL

*************** Inline @[000251] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB59 [0056]  1                             1       [000..007)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB59 [000..007) (return), preds={} succs={}

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000251] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000251] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000251] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000251] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000251] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000251] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000251] -----------

Arguments setup:
STMT00115 (IL 0x147...  ???)
               [000429] -A-XG-------              *  ASG       ref   
               [000428] D------N----              +--*  LCL_VAR   ref    V40 tmp29        
               [000250] ---XG-------              \--*  FIELD     ref    allAnalyzersHaveRun
               [000249] ------------                 \--*  LCL_VAR   ref    V02 loc0         

Inlinee method body:fgInlineAppendStatements: no gc ref inline locals.

Return expression for call at [000251] is
               [000427] ---XG-------              *  FIELD     ref    _task
               [000426] ------------              \--*  LCL_VAR   ref    V40 tmp29        
Successfully inlined System.Threading.Tasks.TaskCompletionSource`1[Boolean][System.Boolean]:get_Task():System.Threading.Tasks.Task`1[Boolean]:this (7 IL bytes) (depth 1) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task' calling 'System.Threading.Tasks.TaskCompletionSource`1[Boolean][System.Boolean]:get_Task():System.Threading.Tasks.Task`1[Boolean]:this'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Querying runtime about current class of field <>c__DisplayClass5_0.allAnalyzersHaveRun (declared as System.Threading.Tasks.TaskCompletionSource`1[Boolean])
Field's current class not available

Replacing the return expression placeholder [000252] with [000427]
               [000252] --C---------              *  RET_EXPR  ref   (inl return from call [000427])

Inserting the inline return expression
               [000427] ---XG-------              *  FIELD     ref    _task
               [000426] ------------              \--*  LCL_VAR   ref    V40 tmp29        

**************** Inline Tree
Inlines into 06000047 [via DefaultPolicy] SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task
  [1 IL=0000 TR=000005 06000093] [below ALWAYS_INLINE size] <>c__DisplayClass5_0:.ctor():this
    [2 IL=0001 TR=000261 060004A7] [below ALWAYS_INLINE size] System.Object:.ctor():this
  [3 IL=0028 TR=000027 06002CAA] [profitable inline] System.Threading.Tasks.TaskCompletionSource`1[Boolean][System.Boolean]:.ctor():this
    [4 IL=0001 TR=000264 060004A7] [below ALWAYS_INLINE size] System.Object:.ctor():this
    [5 IL=0007 TR=000271 06002ACF] [below ALWAYS_INLINE size] System.Threading.Tasks.Task`1[Boolean][System.Boolean]:.ctor():this
      [6 IL=0001 TR=000277 06002B84] [profitable inline] System.Threading.Tasks.Task:.ctor():this
        [7 IL=0001 TR=000279 060004A7] [below ALWAYS_INLINE size] System.Object:.ctor():this
  [8 IL=0039 TR=000037 0600009D] [profitable inline] System.Collections.Generic.Queue`1[__Canon][System.__Canon]:.ctor():this
    [9 IL=0001 TR=000286 060004A7] [below ALWAYS_INLINE size] System.Object:.ctor():this
    [10 IL=0007 TR=000288 06000147] [below ALWAYS_INLINE size] System.Array:Empty():System.__Canon[]
  [11 IL=0057 TR=000051 06006259] [below ALWAYS_INLINE size] System.Collections.Generic.HashSet`1[__Canon][System.__Canon]:.ctor():this
    [0 IL=0002 TR=000303 0600625A] [FAILED: too many il bytes] System.Collections.Generic.HashSet`1[__Canon][System.__Canon]:.ctor(System.Collections.Generic.IEqualityComparer`1[__Canon]):this
  [0 IL=0067 TR=000055 06000134] [FAILED: unprofitable inline] System.Diagnostics.Process:GetCurrentProcess():System.Diagnostics.Process
  [12 IL=0072 TR=000057 06000155] [profitable inline] System.Diagnostics.Process:get_MainModule():System.Diagnostics.ProcessModule:this
    [0 IL=0002 TR=000308 0600012C] [FAILED: too many il bytes] System.Diagnostics.Process:EnsureState(int):this
    [0 IL=0013 TR=000311 06000245] [FAILED: unprofitable inline] System.Diagnostics.NtProcessManager:GetFirstModule(int):System.Diagnostics.ProcessModule
  [0 IL=0067 TR=000055 06000134] [FAILED: unprofitable inline] System.Diagnostics.Process:GetCurrentProcess():System.Diagnostics.Process
  [13 IL=0077 TR=000059 060001C8] [below ALWAYS_INLINE size] System.Diagnostics.ProcessModule:get_FileName():System.String:this
  [0 IL=0013 TR=000311 06000245] [FAILED: unprofitable inline] System.Diagnostics.NtProcessManager:GetFirstModule(int):System.Diagnostics.ProcessModule
  [14 IL=0090 TR=000066 0600076D] [below ALWAYS_INLINE size] System.String:Contains(System.String,int):bool:this
    [15 IL=0003 TR=000326 0600077F] [below ALWAYS_INLINE size] System.String:IndexOf(System.String,int):int:this
  [0 IL=0096 TR=000070 06000342] [FAILED: unprofitable inline] System.Environment:GetCommandLineArgs():System.String[]
  [0 IL=0105 TR=000077 060062B4] [FAILED: target not direct] System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon]:GetEnumerator():System.Collections.Generic.IEnumerator`1[__Canon]:this
  [0 IL=0116 TR=000086 060062B5] [FAILED: target not direct] System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon]:get_Current():System.__Canon:this
  [16 IL=0123 TR=000094 060001DB] [below ALWAYS_INLINE size] System.Diagnostics.ProcessStartInfo:.ctor():this
    [17 IL=0001 TR=000343 060004A7] [below ALWAYS_INLINE size] System.Object:.ctor():this
  [18 IL=0130 TR=000098 060001F2] [below ALWAYS_INLINE size] System.Diagnostics.ProcessStartInfo:set_FileName(System.String):this
  [0 IL=0151 TR=000117 0600071A] [FAILED: too many il bytes] System.String:Concat(System.String,System.String,System.String):System.String
  [19 IL=0156 TR=000130 060001DF] [below ALWAYS_INLINE size] System.Diagnostics.ProcessStartInfo:set_Arguments(System.String):this
  [20 IL=0163 TR=000133 0600020B] [below ALWAYS_INLINE size] System.Diagnostics.ProcessStartInfo:set_UseShellExecute(bool):this
  [21 IL=0196 TR=000186 0600049D] [profitable inline] System.MulticastDelegate:CtorClosed(System.Object,long):this
    [0 IL=0003 TR=000367 0600049C] [FAILED: does not return] System.MulticastDelegate:ThrowNullThisInDelegateToInstance()
  [22 IL=0218 TR=000174 0600049D] [profitable inline] System.MulticastDelegate:CtorClosed(System.Object,long):this
    [0 IL=0003 TR=000379 0600049C] [FAILED: does not return] System.MulticastDelegate:ThrowNullThisInDelegateToInstance()
  [0 IL=0228 TR=000177 060000A6] [FAILED: too many il bytes] System.Collections.Generic.Queue`1[__Canon][System.__Canon]:Enqueue(System.__Canon):this
  [0 IL=0223 TR=000176 06000031] [FAILED: too many il bytes] SolutionAnalyzer.IPC:CreateSession(System.Diagnostics.ProcessStartInfo,System.Action`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.Action`1[[System.Diagnostics.Process, System.Diagnostics.Process, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a]]):System.Diagnostics.Process
  [0 IL=0235 TR=000081 060060BB] [FAILED: target not direct] System.Collections.IEnumerator:MoveNext():bool:this
  [0 IL=0250 TR=000260 06000F94] [FAILED: target not direct] System.IDisposable:Dispose():this
  [23 IL=0263 TR=000214 060000A0] [below ALWAYS_INLINE size] System.Collections.Generic.Queue`1[__Canon][System.__Canon]:get_Count():int:this
  [24 IL=0280 TR=000226 0600003E] [profitable inline] SolutionAnalyzer.LinearProgressReporter:.ctor(int):this
    [25 IL=0001 TR=000391 060061E9] [below ALWAYS_INLINE size] System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:.ctor():this
      [0 IL=0003 TR=000406 060061EC] [FAILED: noinline per IL/cached result] System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:.ctor(int,System.Collections.Generic.IEqualityComparer`1[__Canon]):this
    [26 IL=0012 TR=000396 060004A7] [below ALWAYS_INLINE size] System.Object:.ctor():this
  [0 IL=0296 TR=000243 06000094] [FAILED: unprofitable inline] <>c__DisplayClass5_0:<ExecuteAnalyzers>g__StartNextAnalyzer|0():this
  [27 IL=0309 TR=000234 06000348] [below ALWAYS_INLINE size] System.Environment:get_ProcessorCount():int
  [28 IL=0320 TR=000238 06000436] [below ALWAYS_INLINE size] System.Math:Min(int,int):int
  [29 IL=0333 TR=000251 06002CAE] [below ALWAYS_INLINE size] System.Threading.Tasks.TaskCompletionSource`1[Boolean][System.Boolean]:get_Task():System.Threading.Tasks.Task`1[Boolean]:this
Budget: initialTime=1077, finalTime=1133, initialBudget=10770, currentBudget=10770
Budget: initialSize=7860, finalSize=9131

*************** Finishing PHASE Morph - Inlining
Trees after Morph - Inlining

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i idxlen newobj nullcheck 
BB02 [0001]  1  0                          1       [070..072)-> BB09 (always) T0      try {       keep i try label 
BB03 [0002]  1  0                          1       [072..08B)-> BB05 ( cond ) T0                  i newobj bwd bwd-target 
BB04 [0003]  1  0                          1       [08B..08F)-> BB06 (always) T0                  i bwd 
BB05 [0004]  1  0                          1       [08F..09C)                 T0                  i bwd 
BB06 [0005]  2  0                          1       [09C..0BB)-> BB08 ( cond ) T0                  i bwd 
BB07 [0006]  1  0                          1       [0BB..0D3)                 T0                  i newobj bwd 
BB40 [0039]  1  0                          1       [000..000)-> BB42 ( cond ) T0                  i internal bwd 
BB41 [0040]  1  0                          0.50    [000..000)                 T0                  i internal bwd 
BB42 [0041]  2  0                          1       [000..000)                 T0                  i internal bwd 
BB43 [0042]  1  0                          1       [???..???)                 T0                  internal newobj bwd 
BB08 [0007]  2  0                          1       [0D3..0E9)                 T0                  i newobj bwd 
BB45 [0043]  1  0                          1       [000..000)-> BB47 ( cond ) T0                  i internal bwd 
BB46 [0044]  1  0                          0.50    [000..000)                 T0                  i internal bwd 
BB47 [0045]  2  0                          1       [000..000)                 T0                  i internal bwd 
BB48 [0046]  1  0                          1       [???..???)                 T0                  internal newobj bwd 
BB09 [0008]  2  0                          1       [0E9..0F2)-> BB03 ( cond ) T0                  i bwd 
BB10 [0009]  1  0                          1       [0F2..0F4)-> BB18 (always) T0      }           i 
BB18 [0017]  1                             1       [???..???)-> BB11 (callf )                     i internal 
BB19 [0018]  0                             1       [???..???)-> BB14 (ALWAYS)                     i internal KEEP 
BB11 [0010]  1     0                       1       [0F4..0F8)-> BB13 ( cond )    H0   finally {   keep i label target 
BB12 [0011]  1     0                       1       [0F8..0FF)                    H0               i 
BB13 [0012]  2     0                       1       [0FF..100)        (finret)    H0   }           i 
BB14 [0013]  1                             1       [100..127)-> BB16 (always)                     i newobj 
BB15 [0014]  1                             1       [127..133)                                     i bwd bwd-target 
BB16 [0015]  2                             1       [133..147)                                     i bwd 
BB55 [0052]  1                             1       [000..000)-> BB57 ( cond )                     i internal bwd 
BB56 [0053]  1                             1       [000..000)-> BB58 (always)                     i internal bwd 
BB57 [0054]  1                             1       [000..000)                                     i internal bwd 
BB58 [0055]  1                             1       [???..???)-> BB15 ( cond )                     internal bwd 
BB17 [0016]  1                             1       [147..153)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..070), preds={} succs={BB02}

***** BB01
STMT00000 (IL 0x000...0x005)
               [000003] -A----------              *  ASG       ref   
               [000002] D------N----              +--*  LCL_VAR   ref    V12 tmp1         
               [000001] ------------              \--*  ALLOCOBJ  ref   
               [000000] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB01
STMT00002 (IL 0x005...  ???)
               [000008] -A----------              *  ASG       ref   
               [000007] D------N----              +--*  LCL_VAR   ref    V02 loc0         
               [000006] ------------              \--*  LCL_VAR   ref    V12 tmp1         

***** BB01
STMT00003 (IL 0x006...0x008)
               [000012] -A-XG-------              *  ASG       ref   
               [000011] ---XG--N----              +--*  FIELD     ref    outputFile
               [000009] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000010] ------------              \--*  LCL_VAR   ref    V01 arg1         

***** BB01
STMT00004 (IL 0x00D...0x00F)
               [000016] -A-XG-------              *  ASG       int   
               [000015] ---XG--N----              +--*  FIELD     int    analyzerCount
               [000013] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000014] ------------              \--*  CNS_INT   int    0

***** BB01
STMT00005 (IL 0x014...0x016)
               [000020] -A-XG-------              *  ASG       int   
               [000019] ---XG--N----              +--*  FIELD     int    analyzersFinishedCount
               [000017] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000018] ------------              \--*  CNS_INT   int    0

***** BB01
STMT00006 (IL 0x01B...0x021)
               [000025] -A----------              *  ASG       ref   
               [000024] D------N----              +--*  LCL_VAR   ref    V13 tmp2         
               [000023] ------------              \--*  ALLOCOBJ  ref   
               [000022] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00074 (IL   ???...  ???)
               [000269] -A----------              *  ASG       ref   
               [000268] D------N----              +--*  LCL_VAR   ref    V30 tmp19        
               [000267] ------------              \--*  ALLOCOBJ  ref   
               [000266] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00079 (IL   ???...  ???)
               [000283] -A-XGO------              *  ASG       int   
               [000282] V--XGO-N----              +--*  FIELD     int    m_stateFlags
               [000280] ------------              |  \--*  LCL_VAR   ref    V30 tmp19        
               [000281] ------------              \--*  CNS_INT   int    0x2000400

***** BB01
STMT00076 (IL   ???...  ???)
               [000274] -A-XG-------              *  ASG       ref   
               [000273] ---XG--N----              +--*  FIELD     ref    _task
               [000265] ------------              |  \--*  LCL_VAR   ref    V13 tmp2         
               [000272] ------------              \--*  LCL_VAR   ref    V30 tmp19        

***** BB01
STMT00008 (IL 0x021...  ???)
               [000030] -A-XG-------              *  ASG       ref   
               [000029] ---XG--N----              +--*  FIELD     ref    allAnalyzersHaveRun
               [000021] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000028] ------------              \--*  LCL_VAR   ref    V13 tmp2         

***** BB01
STMT00009 (IL 0x026...0x02C)
               [000035] -A----------              *  ASG       ref   
               [000034] D------N----              +--*  LCL_VAR   ref    V14 tmp3         
               [000033] ------------              \--*  ALLOCOBJ  ref   
               [000032] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00082 (IL   ???...  ???)
               [000292] -ACXG-------              *  ASG       ref   
               [000291] ---XG--N----              +--*  FIELD     ref    _array
               [000287] ------------              |  \--*  LCL_VAR   ref    V14 tmp3         
               [000300] --CXG-------              \--*  COMMA     ref   
               [000299] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS
               [000297] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc7e0b0028
               [000298] ------------ arg1            |  \--*  CNS_INT   int    14
               [000295] ----G-------                 \--*  FIELD     ref    Value

***** BB01
STMT00011 (IL 0x02C...  ???)
               [000040] -A-XG-------              *  ASG       ref   
               [000039] ---XG--N----              +--*  FIELD     ref    queuedAnalyzers
               [000031] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000038] ------------              \--*  LCL_VAR   ref    V14 tmp3         

***** BB01
STMT00012 (IL 0x031...0x033)
               [000044] -A-XG-------              *  ASG       ref   
               [000043] ---XG--N----              +--*  FIELD     ref    progressReporter
               [000041] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000042] ------------              \--*  CNS_INT   ref    null

***** BB01
STMT00013 (IL 0x038...0x03E)
               [000049] -A----------              *  ASG       ref   
               [000048] D------N----              +--*  LCL_VAR   ref    V15 tmp4         
               [000047] ------------              \--*  ALLOCOBJ  ref   
               [000046] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00083 (IL   ???...  ???)
               [000303] --C-G-------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor
               [000050] ------------ this in rcx  +--*  LCL_VAR   ref    V15 tmp4         
               [000302] ------------ arg1         \--*  CNS_INT   ref    null

***** BB01
STMT00015 (IL 0x03E...  ???)
               [000054] -A-XG-------              *  ASG       ref   
               [000053] ---XG--N----              +--*  FIELD     ref    output
               [000045] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000052] ------------              \--*  LCL_VAR   ref    V15 tmp4         

***** BB01
STMT00086 (IL   ???...  ???)
               [000316] -AC-G-------              *  ASG       ref   
               [000315] D------N----              +--*  LCL_VAR   ref    V31 tmp20        
               [000055] --C-G-------              \--*  CALL      ref    System.Diagnostics.Process.GetCurrentProcess

***** BB01
STMT00087 (IL   ???...  ???)
               [000314] ---X--------              *  NULLCHECK byte  
               [000313] ------------              \--*  LCL_VAR   ref    V31 tmp20        

***** BB01
STMT00084 (IL   ???...  ???)
               [000308] --C-G-------              *  CALL      void   System.Diagnostics.Process.EnsureState
               [000306] ------------ this in rcx  +--*  LCL_VAR   ref    V31 tmp20        
               [000307] ------------ arg1         \--*  CNS_INT   int    3

***** BB01
STMT00088 (IL   ???...  ???)
               [000322] -ACXG-------              *  ASG       ref   
               [000321] D------N----              +--*  LCL_VAR   ref    V32 tmp21        
               [000311] --CXG-------              \--*  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule
               [000310] ---XG------- arg0            \--*  FIELD     int    _processId
               [000309] ------------                    \--*  LCL_VAR   ref    V31 tmp20        

***** BB01
STMT00019 (IL   ???...  ???)
               [000062] -AC---------              *  ASG       ref   
               [000061] D------N----              +--*  LCL_VAR   ref    V03 loc1         
               [000320] ---XG-------              \--*  FIELD     ref    <FileName>k__BackingField
               [000319] ------------                 \--*  LCL_VAR   ref    V32 tmp21        

***** BB01
STMT00090 (IL 0x053...  ???)
               [000333] ---X--------              *  NULLCHECK byte  
               [000332] ------------              \--*  LCL_VAR   ref    V03 loc1         

***** BB01
STMT00021 (IL   ???...  ???)
               [000069] -AC---------              *  ASG       int   
               [000068] D------N----              +--*  LCL_VAR   int    V04 loc2         
               [000331] --C---------              \--*  EQ        int   
               [000329] --C---------                 +--*  LT        int   
               [000340] --CXG-------                 |  +--*  CALL      int    System.String.IndexOf
               [000063] ------------ this in rcx     |  |  +--*  LCL_VAR   ref    V03 loc1         
               [000335] ------------ arg1            |  |  +--*  CNS_STR   ref   <string constant>
               [000336] ------------ arg2            |  |  +--*  CNS_INT   int    0
               [000338] ---X-------- arg3            |  |  +--*  ARR_LENGTH int   
               [000337] ------------                 |  |  |  \--*  LCL_VAR   ref    V03 loc1         
               [000339] ------------ arg4            |  |  \--*  CNS_INT   int    5
               [000328] ------------                 |  \--*  CNS_INT   int    0
               [000330] ------------                 \--*  CNS_INT   int    0

***** BB01
STMT00023 (IL   ???...  ???)
               [000075] -ACXG-------              *  ASG       ref   
               [000074] D------N----              +--*  LCL_VAR   ref    V05 loc3         
               [000073] --CXG-------              \--*  INDEX     ref   
               [000070] --C-G-------                 +--*  CALL      ref    System.Environment.GetCommandLineArgs
               [000072] ------------                 \--*  CNS_INT   int    0

***** BB01
STMT00024 (IL 0x068...0x06E)
               [000079] -AC-G-------              *  ASG       ref   
               [000078] D------N----              +--*  LCL_VAR   ref    V06 loc4         
               [000077] --C-G-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator
               [000076] ------------ this in rcx     \--*  LCL_VAR   ref    V00 arg0         

------------ BB02 [070..072) -> BB09 (always), preds={} succs={BB09}

------------ BB03 [072..08B) -> BB05 (cond), preds={} succs={BB04,BB05}

***** BB03
STMT00026 (IL 0x072...0x079)
               [000088] -AC-G-------              *  ASG       ref   
               [000087] D------N----              +--*  LCL_VAR   ref    V07 loc5         
               [000086] --C-G-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current
               [000085] ------------ this in rcx     \--*  LCL_VAR   ref    V06 loc4         

***** BB03
STMT00027 (IL 0x07B...0x089)
               [000092] -A----------              *  ASG       ref   
               [000091] D------N----              +--*  LCL_VAR   ref    V16 tmp5         
               [000090] ------------              \--*  ALLOCOBJ  ref   
               [000089] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB03
STMT00092 (IL 0x080...  ???)
               [000347] -A-XG-------              *  ASG       ref   
               [000346] ---XG--N----              +--*  FIELD     ref    _fileName
               [000096] ------------              |  \--*  LCL_VAR   ref    V16 tmp5         
               [000097] ------------              \--*  LCL_VAR   ref    V03 loc1         

***** BB03
STMT00031 (IL   ???...0x089)
               [000105] -A----------              *  ASG       ref   
               [000104] D------N----              +--*  LCL_VAR   ref    V17 tmp6         
               [000095] ------------              \--*  LCL_VAR   ref    V16 tmp5         

***** BB03
STMT00032 (IL   ???...  ???)
               [000108] -A----------              *  ASG       ref   
               [000107] D------N----              +--*  LCL_VAR   ref    V18 tmp7         
               [000099] ------------              \--*  LCL_VAR   ref    V16 tmp5         

***** BB03
STMT00030 (IL 0x087...  ???)
               [000103] ------------              *  JTRUE     void  
               [000102] ------------              \--*  NE        int   
               [000100] ------------                 +--*  LCL_VAR   int    V04 loc2         
               [000101] ------------                 \--*  CNS_INT   int    0

------------ BB04 [08B..08F) -> BB06 (always), preds={} succs={BB06}

***** BB04
STMT00053 (IL   ???...0x08D)
               [000203] -A----------              *  ASG       ref   
               [000202] D------N----              +--*  LCL_VAR   ref    V19 tmp8         
               [000110] ------------              \--*  LCL_VAR   ref    V17 tmp6         

***** BB04
STMT00054 (IL   ???...  ???)
               [000206] -A----------              *  ASG       ref   
               [000205] D------N----              +--*  LCL_VAR   ref    V20 tmp9         
               [000111] ------------              \--*  LCL_VAR   ref    V18 tmp7         

***** BB04
STMT00055 (IL   ???...  ???)
               [000209] -A----------              *  ASG       ref   
               [000208] D------N----              +--*  LCL_VAR   ref    V21 tmp10        
               [000201] ------------              \--*  LCL_VAR   ref    V07 loc5         

------------ BB05 [08F..09C), preds={} succs={BB06}

***** BB05
STMT00033 (IL   ???...0x097)
               [000119] -A----------              *  ASG       ref   
               [000118] D------N----              +--*  LCL_VAR   ref    V19 tmp8         
               [000112] ------------              \--*  LCL_VAR   ref    V17 tmp6         

***** BB05
STMT00034 (IL   ???...  ???)
               [000122] -A----------              *  ASG       ref   
               [000121] D------N----              +--*  LCL_VAR   ref    V20 tmp9         
               [000113] ------------              \--*  LCL_VAR   ref    V18 tmp7         

***** BB05
STMT00035 (IL   ???...  ???)
               [000125] -AC-G-------              *  ASG       ref   
               [000124] D------N----              +--*  LCL_VAR   ref    V21 tmp10        
               [000117] --C-G-------              \--*  CALL      ref    System.String.Concat
               [000114] ------------ arg0            +--*  LCL_VAR   ref    V05 loc3         
               [000115] ------------ arg1            +--*  CNS_STR   ref   <string constant>
               [000116] ------------ arg2            \--*  LCL_VAR   ref    V07 loc5         

------------ BB06 [09C..0BB) -> BB08 (cond), preds={} succs={BB07,BB08}

***** BB06
STMT00093 (IL   ???...  ???)
               [000350] -A-XG-------              *  ASG       ref   
               [000349] ---XG--N----              +--*  FIELD     ref    _arguments
               [000128] ------------              |  \--*  LCL_VAR   ref    V20 tmp9         
               [000129] ------------              \--*  LCL_VAR   ref    V21 tmp10        

***** BB06
STMT00094 (IL 0x0A1...  ???)
               [000355] -A-XG-------              *  ASG       bool  
               [000354] ---XG--N----              +--*  FIELD     bool   <UseShellExecute>k__BackingField
               [000131] ------------              |  \--*  LCL_VAR   ref    V19 tmp8         
               [000353] ------------              \--*  CNS_INT   int    0

***** BB06
STMT00038 (IL 0x0A8...  ???)
               [000136] -A----------              *  ASG       ref   
               [000135] D------N----              +--*  LCL_VAR   ref    V08 loc6         
               [000127] ------------              \--*  LCL_VAR   ref    V19 tmp8         

***** BB06
STMT00040 (IL 0x0AA...0x0B9)
               [000145] -A-XG-------              *  ASG       ref   
               [000144] D------N----              +--*  LCL_VAR   ref    V23 tmp12        
               [000138] ---XG-------              \--*  FIELD     ref    queuedAnalyzers
               [000137] ------------                 \--*  LCL_VAR   ref    V02 loc0         

***** BB06
STMT00039 (IL 0x0AA...  ???)
               [000143] -A-XG-------              *  ASG       ref   
               [000142] D------N----              +--*  LCL_VAR   ref    V22 tmp11        
               [000141] ---XG-------              \--*  FIELD     ref    <>9__2
               [000140] ------------                 \--*  LCL_VAR   ref    V02 loc0         

***** BB06
STMT00042 (IL   ???...0x0B9)
               [000153] -A----------              *  ASG       ref   
               [000152] D------N----              +--*  LCL_VAR   ref    V24 tmp13        
               [000146] ------------              \--*  LCL_VAR   ref    V23 tmp12        

***** BB06
STMT00043 (IL   ???...  ???)
               [000156] -A----------              *  ASG       ref   
               [000155] D------N----              +--*  LCL_VAR   ref    V25 tmp14        
               [000139] ------------              \--*  LCL_VAR   ref    V08 loc6         

***** BB06
STMT00044 (IL   ???...  ???)
               [000159] -A----------              *  ASG       ref   
               [000158] D------N----              +--*  LCL_VAR   ref    V26 tmp15        
               [000147] ------------              \--*  LCL_VAR   ref    V22 tmp11        

***** BB06
STMT00041 (IL   ???...  ???)
               [000151] ------------              *  JTRUE     void  
               [000150] ------------              \--*  NE        int   
               [000148] ------------                 +--*  LCL_VAR   ref    V22 tmp11        
               [000149] ------------                 \--*  CNS_INT   ref    null

------------ BB07 [0BB..0D3), preds={} succs={BB40}

***** BB07
STMT00048 (IL   ???...0x0CA)
               [000184] -A----------              *  ASG       ref   
               [000183] D------N----              +--*  LCL_VAR   ref    V28 tmp17        
               [000182] ------------              \--*  ALLOCOBJ  ref   
               [000181] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token

------------ BB40 [000..000) -> BB42 (cond), preds={} succs={BB41,BB42}

***** BB40
STMT00095 (IL   ???...  ???)
               [000359] ------------              *  JTRUE     void  
               [000358] ------------              \--*  NE        int   
               [000179] ------------                 +--*  LCL_VAR   ref    V02 loc0         
               [000357] ------------                 \--*  CNS_INT   ref    null

------------ BB41 [000..000), preds={} succs={BB42}

***** BB41
STMT00098 (IL   ???...  ???)
               [000367] --C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

------------ BB42 [000..000), preds={} succs={BB43}

***** BB42
STMT00096 (IL   ???...  ???)
               [000362] -A-XG-------              *  ASG       ref   
               [000361] ---XG--N----              +--*  FIELD     ref    _target
               [000185] ------------              |  \--*  LCL_VAR   ref    V28 tmp17        
               [000360] ------------              \--*  LCL_VAR   ref    V02 loc0         

***** BB42
STMT00097 (IL   ???...  ???)
               [000366] -A-XG-------              *  ASG       long  
               [000365] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000363] ------------              |  \--*  LCL_VAR   ref    V28 tmp17        
               [000180] ------------              \--*  FTN_ADDR  long   <>c__DisplayClass5_0.<ExecuteAnalyzers>b__2


------------ BB43 [???..???), preds={} succs={BB08}

***** BB43
STMT00050 (IL 0x0C9...  ???)
               [000190] -A----------              *  ASG       ref   
               [000189] D------N----              +--*  LCL_VAR   ref    V09 loc7         
               [000188] ------------              \--*  LCL_VAR   ref    V28 tmp17        

***** BB43
STMT00051 (IL   ???...0x0CC)
               [000192] -A-XG-------              *  ASG       ref   
               [000191] ---XG--N----              +--*  FIELD     ref    <>9__2
               [000178] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000187] ------------              \--*  LCL_VAR   ref    V28 tmp17        

***** BB43
STMT00052 (IL   ???...0x0D1)
               [000199] -A----------              *  ASG       ref   
               [000198] D------N----              +--*  LCL_VAR   ref    V26 tmp15        
               [000193] ------------              \--*  LCL_VAR   ref    V09 loc7         

------------ BB08 [0D3..0E9), preds={} succs={BB45}

***** BB08
STMT00045 (IL   ???...0x0E4)
               [000172] -A----------              *  ASG       ref   
               [000171] D------N----              +--*  LCL_VAR   ref    V27 tmp16        
               [000170] ------------              \--*  ALLOCOBJ  ref   
               [000169] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token

------------ BB45 [000..000) -> BB47 (cond), preds={} succs={BB46,BB47}

***** BB45
STMT00099 (IL   ???...  ???)
               [000371] ------------              *  JTRUE     void  
               [000370] ------------              \--*  NE        int   
               [000167] ------------                 +--*  LCL_VAR   ref    V02 loc0         
               [000369] ------------                 \--*  CNS_INT   ref    null

------------ BB46 [000..000), preds={} succs={BB47}

***** BB46
STMT00102 (IL   ???...  ???)
               [000379] --C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

------------ BB47 [000..000), preds={} succs={BB48}

***** BB47
STMT00100 (IL   ???...  ???)
               [000374] -A-XG-------              *  ASG       ref   
               [000373] ---XG--N----              +--*  FIELD     ref    _target
               [000173] ------------              |  \--*  LCL_VAR   ref    V27 tmp16        
               [000372] ------------              \--*  LCL_VAR   ref    V02 loc0         

***** BB47
STMT00101 (IL   ???...  ???)
               [000378] -A-XG-------              *  ASG       long  
               [000377] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000375] ------------              |  \--*  LCL_VAR   ref    V27 tmp16        
               [000168] ------------              \--*  FTN_ADDR  long   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__OnAnalyzerFinished|1


------------ BB48 [???..???), preds={} succs={BB09}

***** BB48
STMT00047 (IL 0x0DF...  ???)
               [000177] --C-G-------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue
               [000164] ------------ this in rcx  +--*  LCL_VAR   ref    V24 tmp13        
               [000176] --C-G------- arg1         \--*  CALL      ref    SolutionAnalyzer.IPC.CreateSession
               [000165] ------------ arg0            +--*  LCL_VAR   ref    V25 tmp14        
               [000166] ------------ arg1            +--*  LCL_VAR   ref    V26 tmp15        
               [000175] ------------ arg2            \--*  LCL_VAR   ref    V27 tmp16        

------------ BB09 [0E9..0F2) -> BB03 (cond), preds={} succs={BB10,BB03}

***** BB09
STMT00025 (IL 0x0E9...0x0F0)
               [000084] --C-G-------              *  JTRUE     void  
               [000083] --C-G-------              \--*  NE        int   
               [000081] --C-G-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext
               [000080] ------------ this in rcx     |  \--*  LCL_VAR   ref    V06 loc4         
               [000082] ------------                 \--*  CNS_INT   int    0

------------ BB10 [0F2..0F4) -> BB18 (always), preds={} succs={BB18}

------------ BB18 [???..???) -> BB11 (callf), preds={} succs={BB11}

------------ BB19 [???..???) -> BB14 (ALWAYS), preds={} succs={BB14}

------------ BB11 [0F4..0F8) -> BB13 (cond), preds={} succs={BB12,BB13}

***** BB11
STMT00069 (IL 0x0F4...0x0F6)
               [000257] ------------              *  JTRUE     void  
               [000256] ------------              \--*  EQ        int   
               [000254] ------------                 +--*  LCL_VAR   ref    V06 loc4         
               [000255] ------------                 \--*  CNS_INT   ref    null

------------ BB12 [0F8..0FF), preds={} succs={BB13}

***** BB12
STMT00071 (IL 0x0F8...0x0FA)
               [000260] --C-G-------              *  CALLV stub void   System.IDisposable.Dispose
               [000259] ------------ this in rcx  \--*  LCL_VAR   ref    V06 loc4         

------------ BB13 [0FF..100) (finret), preds={} succs={BB19}

***** BB13
STMT00070 (IL 0x0FF...0x0FF)
               [000258] ------------              *  RETFILT   void  

------------ BB14 [100..127) -> BB16 (always), preds={} succs={BB16}

***** BB14
STMT00103 (IL 0x100...  ???)
               [000384] -A-XG-------              *  ASG       ref   
               [000383] D------N----              +--*  LCL_VAR   ref    V35 tmp24        
               [000213] ---XG-------              \--*  FIELD     ref    queuedAnalyzers
               [000212] ------------                 \--*  LCL_VAR   ref    V02 loc0         

***** BB14
STMT00057 (IL   ???...  ???)
               [000217] -ACXG-------              *  ASG       int   
               [000216] ---XG--N----              +--*  FIELD     int    analyzerCount
               [000211] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000382] ---XG-------              \--*  FIELD     int    _size
               [000381] ------------                 \--*  LCL_VAR   ref    V35 tmp24        

***** BB14
STMT00058 (IL 0x111...0x11D)
               [000224] -A----------              *  ASG       ref   
               [000223] D------N----              +--*  LCL_VAR   ref    V29 tmp18        
               [000222] ------------              \--*  ALLOCOBJ  ref   
               [000221] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB14
STMT00109 (IL   ???...  ???)
               [000402] -A-XG-------              *  ASG       int   
               [000401] D------N----              +--*  LCL_VAR   int    V37 tmp26        
               [000220] ---XG-------              \--*  FIELD     int    analyzerCount
               [000219] ------------                 \--*  LCL_VAR   ref    V02 loc0         

***** BB14
STMT00104 (IL   ???...  ???)
               [000389] -A----------              *  ASG       ref   
               [000388] D------N----              +--*  LCL_VAR   ref    V36 tmp25        
               [000387] ------------              \--*  ALLOCOBJ  ref   
               [000386] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB14
STMT00110 (IL   ???...  ???)
               [000406] --C-G-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor
               [000390] ------------ this in rcx  +--*  LCL_VAR   ref    V36 tmp25        
               [000404] ------------ arg1         +--*  CNS_INT   int    0
               [000405] ------------ arg2         \--*  CNS_INT   ref    null

***** BB14
STMT00106 (IL   ???...  ???)
               [000394] -A-XG-------              *  ASG       ref   
               [000393] ---XG--N----              +--*  FIELD     ref    _workItems
               [000225] ------------              |  \--*  LCL_VAR   ref    V29 tmp18        
               [000392] ------------              \--*  LCL_VAR   ref    V36 tmp25        

***** BB14
STMT00108 (IL   ???...  ???)
               [000400] -A-XG-------              *  ASG       int   
               [000399] ---XG--N----              +--*  FIELD     int    _workItemsToComplete
               [000397] ------------              |  \--*  LCL_VAR   ref    V29 tmp18        
               [000398] ------------              \--*  LCL_VAR   int    V37 tmp26        

***** BB14
STMT00060 (IL 0x11D...  ???)
               [000229] -A-XG-------              *  ASG       ref   
               [000228] ---XG--N----              +--*  FIELD     ref    progressReporter
               [000218] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000227] ------------              \--*  LCL_VAR   ref    V29 tmp18        

***** BB14
STMT00061 (IL 0x122...0x123)
               [000232] -A----------              *  ASG       int   
               [000231] D------N----              +--*  LCL_VAR   int    V10 loc8         
               [000230] ------------              \--*  CNS_INT   int    0

------------ BB15 [127..133), preds={} succs={BB16}

***** BB15
STMT00065 (IL 0x127...0x131)
               [000243] --C-G-------              *  CALL nullcheck void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0
               [000242] ------------ this in rcx  \--*  LCL_VAR   ref    V02 loc0         

***** BB15
STMT00066 (IL 0x12D...  ???)
               [000248] -A----------              *  ASG       int   
               [000247] D------N----              +--*  LCL_VAR   int    V10 loc8         
               [000246] ------------              \--*  ADD       int   
               [000244] ------------                 +--*  LCL_VAR   int    V10 loc8         
               [000245] ------------                 \--*  CNS_INT   int    1

------------ BB16 [133..147), preds={} succs={BB55}

***** BB16
STMT00114 (IL   ???...  ???)
               [000424] -A-XG-------              *  ASG       int   
               [000423] D------N----              +--*  LCL_VAR   int    V39 tmp28        
               [000237] ---XG-------              \--*  FIELD     int    analyzerCount
               [000236] ------------                 \--*  LCL_VAR   ref    V02 loc0         

------------ BB55 [000..000) -> BB57 (cond), preds={} succs={BB56,BB57}

***** BB55
STMT00111 (IL   ???...  ???)
               [000414] ------------              *  JTRUE     void  
               [000413] ------------              \--*  LE        int   
               [000411] ------------                 +--*  CNS_INT   int    8
               [000412] ------------                 \--*  LCL_VAR   int    V39 tmp28        

------------ BB56 [000..000) -> BB58 (always), preds={} succs={BB58}

***** BB56
STMT00113 (IL   ???...  ???)
               [000421] -A----------              *  ASG       int   
               [000420] D------N----              +--*  LCL_VAR   int    V38 tmp27        
               [000419] ------------              \--*  LCL_VAR   int    V39 tmp28        

------------ BB57 [000..000), preds={} succs={BB58}

***** BB57
STMT00112 (IL   ???...  ???)
               [000417] -A----------              *  ASG       int   
               [000416] D------N----              +--*  LCL_VAR   int    V38 tmp27        
               [000415] ------------              \--*  CNS_INT   int    8

------------ BB58 [???..???) -> BB15 (cond), preds={} succs={BB17,BB15}

***** BB58
STMT00064 (IL   ???...  ???)
               [000241] --C---------              *  JTRUE     void  
               [000240] --C---------              \--*  LT        int   
               [000233] ------------                 +--*  LCL_VAR   int    V10 loc8         
               [000422] ------------                 \--*  LCL_VAR   int    V38 tmp27        

------------ BB17 [147..153) (return), preds={} succs={}

***** BB17
STMT00115 (IL 0x147...  ???)
               [000429] -A-XG-------              *  ASG       ref   
               [000428] D------N----              +--*  LCL_VAR   ref    V40 tmp29        
               [000250] ---XG-------              \--*  FIELD     ref    allAnalyzersHaveRun
               [000249] ------------                 \--*  LCL_VAR   ref    V02 loc0         

***** BB17
STMT00068 (IL   ???...  ???)
               [000253] --C---------              *  RETURN    ref   
               [000427] ---XG-------              \--*  FIELD     ref    _task
               [000426] ------------                 \--*  LCL_VAR   ref    V40 tmp29        

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Allocate Objects
disabled, punting

*************** Finishing PHASE Allocate Objects [no changes]

*************** Starting PHASE Morph - Add internal blocks

*************** After fgAddInternal()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i idxlen newobj nullcheck 
BB02 [0001]  1  0                          1       [070..072)-> BB09 (always) T0      try {       keep i try label 
BB03 [0002]  1  0                          1       [072..08B)-> BB05 ( cond ) T0                  i newobj bwd bwd-target 
BB04 [0003]  1  0                          1       [08B..08F)-> BB06 (always) T0                  i bwd 
BB05 [0004]  1  0                          1       [08F..09C)                 T0                  i bwd 
BB06 [0005]  2  0                          1       [09C..0BB)-> BB08 ( cond ) T0                  i bwd 
BB07 [0006]  1  0                          1       [0BB..0D3)                 T0                  i newobj bwd 
BB40 [0039]  1  0                          1       [000..000)-> BB42 ( cond ) T0                  i internal bwd 
BB41 [0040]  1  0                          0.50    [000..000)                 T0                  i internal bwd 
BB42 [0041]  2  0                          1       [000..000)                 T0                  i internal bwd 
BB43 [0042]  1  0                          1       [???..???)                 T0                  internal newobj bwd 
BB08 [0007]  2  0                          1       [0D3..0E9)                 T0                  i newobj bwd 
BB45 [0043]  1  0                          1       [000..000)-> BB47 ( cond ) T0                  i internal bwd 
BB46 [0044]  1  0                          0.50    [000..000)                 T0                  i internal bwd 
BB47 [0045]  2  0                          1       [000..000)                 T0                  i internal bwd 
BB48 [0046]  1  0                          1       [???..???)                 T0                  internal newobj bwd 
BB09 [0008]  2  0                          1       [0E9..0F2)-> BB03 ( cond ) T0                  i bwd 
BB10 [0009]  1  0                          1       [0F2..0F4)-> BB18 (always) T0      }           i 
BB18 [0017]  1                             1       [???..???)-> BB11 (callf )                     i internal 
BB19 [0018]  0                             1       [???..???)-> BB14 (ALWAYS)                     i internal KEEP 
BB11 [0010]  1     0                       1       [0F4..0F8)-> BB13 ( cond )    H0   finally {   keep i label target 
BB12 [0011]  1     0                       1       [0F8..0FF)                    H0               i 
BB13 [0012]  2     0                       1       [0FF..100)        (finret)    H0   }           i 
BB14 [0013]  1                             1       [100..127)-> BB16 (always)                     i newobj 
BB15 [0014]  1                             1       [127..133)                                     i bwd bwd-target 
BB16 [0015]  2                             1       [133..147)                                     i bwd 
BB55 [0052]  1                             1       [000..000)-> BB57 ( cond )                     i internal bwd 
BB56 [0053]  1                             1       [000..000)-> BB58 (always)                     i internal bwd 
BB57 [0054]  1                             1       [000..000)                                     i internal bwd 
BB58 [0055]  1                             1       [???..???)-> BB15 ( cond )                     internal bwd 
BB17 [0016]  1                             1       [147..153)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB02..BB10 [070..0F4), Finally at BB11..BB13 [0F4..100)

*************** Finishing PHASE Morph - Add internal blocks

*************** Starting PHASE Remove empty try

*************** In fgRemoveEmptyTry()

*************** Before fgRemoveEmptyTry()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i idxlen newobj nullcheck 
BB02 [0001]  1  0                          1       [070..072)-> BB09 (always) T0      try {       keep i try label 
BB03 [0002]  1  0                          1       [072..08B)-> BB05 ( cond ) T0                  i newobj bwd bwd-target 
BB04 [0003]  1  0                          1       [08B..08F)-> BB06 (always) T0                  i bwd 
BB05 [0004]  1  0                          1       [08F..09C)                 T0                  i bwd 
BB06 [0005]  2  0                          1       [09C..0BB)-> BB08 ( cond ) T0                  i bwd 
BB07 [0006]  1  0                          1       [0BB..0D3)                 T0                  i newobj bwd 
BB40 [0039]  1  0                          1       [000..000)-> BB42 ( cond ) T0                  i internal bwd 
BB41 [0040]  1  0                          0.50    [000..000)                 T0                  i internal bwd 
BB42 [0041]  2  0                          1       [000..000)                 T0                  i internal bwd 
BB43 [0042]  1  0                          1       [???..???)                 T0                  internal newobj bwd 
BB08 [0007]  2  0                          1       [0D3..0E9)                 T0                  i newobj bwd 
BB45 [0043]  1  0                          1       [000..000)-> BB47 ( cond ) T0                  i internal bwd 
BB46 [0044]  1  0                          0.50    [000..000)                 T0                  i internal bwd 
BB47 [0045]  2  0                          1       [000..000)                 T0                  i internal bwd 
BB48 [0046]  1  0                          1       [???..???)                 T0                  internal newobj bwd 
BB09 [0008]  2  0                          1       [0E9..0F2)-> BB03 ( cond ) T0                  i bwd 
BB10 [0009]  1  0                          1       [0F2..0F4)-> BB18 (always) T0      }           i 
BB18 [0017]  1                             1       [???..???)-> BB11 (callf )                     i internal 
BB19 [0018]  0                             1       [???..???)-> BB14 (ALWAYS)                     i internal KEEP 
BB11 [0010]  1     0                       1       [0F4..0F8)-> BB13 ( cond )    H0   finally {   keep i label target 
BB12 [0011]  1     0                       1       [0F8..0FF)                    H0               i 
BB13 [0012]  2     0                       1       [0FF..100)        (finret)    H0   }           i 
BB14 [0013]  1                             1       [100..127)-> BB16 (always)                     i newobj 
BB15 [0014]  1                             1       [127..133)                                     i bwd bwd-target 
BB16 [0015]  2                             1       [133..147)                                     i bwd 
BB55 [0052]  1                             1       [000..000)-> BB57 ( cond )                     i internal bwd 
BB56 [0053]  1                             1       [000..000)-> BB58 (always)                     i internal bwd 
BB57 [0054]  1                             1       [000..000)                                     i internal bwd 
BB58 [0055]  1                             1       [???..???)-> BB15 ( cond )                     internal bwd 
BB17 [0016]  1                             1       [147..153)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB02..BB10 [070..0F4), Finally at BB11..BB13 [0F4..100)

EH#0 first try block BB02 always jumps but not to a callfinally; skipping.

*************** Finishing PHASE Remove empty try [no changes]

*************** Starting PHASE Remove empty finally

*************** Before fgRemoveEmptyFinally()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i idxlen newobj nullcheck 
BB02 [0001]  1  0                          1       [070..072)-> BB09 (always) T0      try {       keep i try label 
BB03 [0002]  1  0                          1       [072..08B)-> BB05 ( cond ) T0                  i newobj bwd bwd-target 
BB04 [0003]  1  0                          1       [08B..08F)-> BB06 (always) T0                  i bwd 
BB05 [0004]  1  0                          1       [08F..09C)                 T0                  i bwd 
BB06 [0005]  2  0                          1       [09C..0BB)-> BB08 ( cond ) T0                  i bwd 
BB07 [0006]  1  0                          1       [0BB..0D3)                 T0                  i newobj bwd 
BB40 [0039]  1  0                          1       [000..000)-> BB42 ( cond ) T0                  i internal bwd 
BB41 [0040]  1  0                          0.50    [000..000)                 T0                  i internal bwd 
BB42 [0041]  2  0                          1       [000..000)                 T0                  i internal bwd 
BB43 [0042]  1  0                          1       [???..???)                 T0                  internal newobj bwd 
BB08 [0007]  2  0                          1       [0D3..0E9)                 T0                  i newobj bwd 
BB45 [0043]  1  0                          1       [000..000)-> BB47 ( cond ) T0                  i internal bwd 
BB46 [0044]  1  0                          0.50    [000..000)                 T0                  i internal bwd 
BB47 [0045]  2  0                          1       [000..000)                 T0                  i internal bwd 
BB48 [0046]  1  0                          1       [???..???)                 T0                  internal newobj bwd 
BB09 [0008]  2  0                          1       [0E9..0F2)-> BB03 ( cond ) T0                  i bwd 
BB10 [0009]  1  0                          1       [0F2..0F4)-> BB18 (always) T0      }           i 
BB18 [0017]  1                             1       [???..???)-> BB11 (callf )                     i internal 
BB19 [0018]  0                             1       [???..???)-> BB14 (ALWAYS)                     i internal KEEP 
BB11 [0010]  1     0                       1       [0F4..0F8)-> BB13 ( cond )    H0   finally {   keep i label target 
BB12 [0011]  1     0                       1       [0F8..0FF)                    H0               i 
BB13 [0012]  2     0                       1       [0FF..100)        (finret)    H0   }           i 
BB14 [0013]  1                             1       [100..127)-> BB16 (always)                     i newobj 
BB15 [0014]  1                             1       [127..133)                                     i bwd bwd-target 
BB16 [0015]  2                             1       [133..147)                                     i bwd 
BB55 [0052]  1                             1       [000..000)-> BB57 ( cond )                     i internal bwd 
BB56 [0053]  1                             1       [000..000)-> BB58 (always)                     i internal bwd 
BB57 [0054]  1                             1       [000..000)                                     i internal bwd 
BB58 [0055]  1                             1       [???..???)-> BB15 ( cond )                     internal bwd 
BB17 [0016]  1                             1       [147..153)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB02..BB10 [070..0F4), Finally at BB11..BB13 [0F4..100)

EH#0 finally has multiple basic blocks; skipping.

*************** Finishing PHASE Remove empty finally [no changes]

*************** Starting PHASE Merge callfinally chains

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i idxlen newobj nullcheck 
BB02 [0001]  1  0                          1       [070..072)-> BB09 (always) T0      try {       keep i try label 
BB03 [0002]  1  0                          1       [072..08B)-> BB05 ( cond ) T0                  i newobj bwd bwd-target 
BB04 [0003]  1  0                          1       [08B..08F)-> BB06 (always) T0                  i bwd 
BB05 [0004]  1  0                          1       [08F..09C)                 T0                  i bwd 
BB06 [0005]  2  0                          1       [09C..0BB)-> BB08 ( cond ) T0                  i bwd 
BB07 [0006]  1  0                          1       [0BB..0D3)                 T0                  i newobj bwd 
BB40 [0039]  1  0                          1       [000..000)-> BB42 ( cond ) T0                  i internal bwd 
BB41 [0040]  1  0                          0.50    [000..000)                 T0                  i internal bwd 
BB42 [0041]  2  0                          1       [000..000)                 T0                  i internal bwd 
BB43 [0042]  1  0                          1       [???..???)                 T0                  internal newobj bwd 
BB08 [0007]  2  0                          1       [0D3..0E9)                 T0                  i newobj bwd 
BB45 [0043]  1  0                          1       [000..000)-> BB47 ( cond ) T0                  i internal bwd 
BB46 [0044]  1  0                          0.50    [000..000)                 T0                  i internal bwd 
BB47 [0045]  2  0                          1       [000..000)                 T0                  i internal bwd 
BB48 [0046]  1  0                          1       [???..???)                 T0                  internal newobj bwd 
BB09 [0008]  2  0                          1       [0E9..0F2)-> BB03 ( cond ) T0                  i bwd 
BB10 [0009]  1  0                          1       [0F2..0F4)-> BB18 (always) T0      }           i 
BB18 [0017]  1                             1       [???..???)-> BB11 (callf )                     i internal 
BB19 [0018]  0                             1       [???..???)-> BB14 (ALWAYS)                     i internal KEEP 
BB11 [0010]  1     0                       1       [0F4..0F8)-> BB13 ( cond )    H0   finally {   keep i label target 
BB12 [0011]  1     0                       1       [0F8..0FF)                    H0               i 
BB13 [0012]  2     0                       1       [0FF..100)        (finret)    H0   }           i 
BB14 [0013]  1                             1       [100..127)-> BB16 (always)                     i newobj 
BB15 [0014]  1                             1       [127..133)                                     i bwd bwd-target 
BB16 [0015]  2                             1       [133..147)                                     i bwd 
BB55 [0052]  1                             1       [000..000)-> BB57 ( cond )                     i internal bwd 
BB56 [0053]  1                             1       [000..000)-> BB58 (always)                     i internal bwd 
BB57 [0054]  1                             1       [000..000)                                     i internal bwd 
BB58 [0055]  1                             1       [???..???)-> BB15 ( cond )                     internal bwd 
BB17 [0016]  1                             1       [147..153)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB02..BB10 [070..0F4), Finally at BB11..BB13 [0F4..100)

Examining callfinallys for EH#0.
EH#0 has 1 callfinallys, 1 continuations
EH#0 does not have any mergeable callfinallys
Method had try-finallys, but did not have any mergeable finally chains.

*************** Finishing PHASE Merge callfinally chains [no changes]

*************** Starting PHASE Clone finally

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i idxlen newobj nullcheck 
BB02 [0001]  1  0                          1       [070..072)-> BB09 (always) T0      try {       keep i try label 
BB03 [0002]  1  0                          1       [072..08B)-> BB05 ( cond ) T0                  i newobj bwd bwd-target 
BB04 [0003]  1  0                          1       [08B..08F)-> BB06 (always) T0                  i bwd 
BB05 [0004]  1  0                          1       [08F..09C)                 T0                  i bwd 
BB06 [0005]  2  0                          1       [09C..0BB)-> BB08 ( cond ) T0                  i bwd 
BB07 [0006]  1  0                          1       [0BB..0D3)                 T0                  i newobj bwd 
BB40 [0039]  1  0                          1       [000..000)-> BB42 ( cond ) T0                  i internal bwd 
BB41 [0040]  1  0                          0.50    [000..000)                 T0                  i internal bwd 
BB42 [0041]  2  0                          1       [000..000)                 T0                  i internal bwd 
BB43 [0042]  1  0                          1       [???..???)                 T0                  internal newobj bwd 
BB08 [0007]  2  0                          1       [0D3..0E9)                 T0                  i newobj bwd 
BB45 [0043]  1  0                          1       [000..000)-> BB47 ( cond ) T0                  i internal bwd 
BB46 [0044]  1  0                          0.50    [000..000)                 T0                  i internal bwd 
BB47 [0045]  2  0                          1       [000..000)                 T0                  i internal bwd 
BB48 [0046]  1  0                          1       [???..???)                 T0                  internal newobj bwd 
BB09 [0008]  2  0                          1       [0E9..0F2)-> BB03 ( cond ) T0                  i bwd 
BB10 [0009]  1  0                          1       [0F2..0F4)-> BB18 (always) T0      }           i 
BB18 [0017]  1                             1       [???..???)-> BB11 (callf )                     i internal 
BB19 [0018]  0                             1       [???..???)-> BB14 (ALWAYS)                     i internal KEEP 
BB11 [0010]  1     0                       1       [0F4..0F8)-> BB13 ( cond )    H0   finally {   keep i label target 
BB12 [0011]  1     0                       1       [0F8..0FF)                    H0               i 
BB13 [0012]  2     0                       1       [0FF..100)        (finret)    H0   }           i 
BB14 [0013]  1                             1       [100..127)-> BB16 (always)                     i newobj 
BB15 [0014]  1                             1       [127..133)                                     i bwd bwd-target 
BB16 [0015]  2                             1       [133..147)                                     i bwd 
BB55 [0052]  1                             1       [000..000)-> BB57 ( cond )                     i internal bwd 
BB56 [0053]  1                             1       [000..000)-> BB58 (always)                     i internal bwd 
BB57 [0054]  1                             1       [000..000)                                     i internal bwd 
BB58 [0055]  1                             1       [???..???)-> BB15 ( cond )                     internal bwd 
BB17 [0016]  1                             1       [147..153)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB02..BB10 [070..0F4), Finally at BB11..BB13 [0F4..100)

EH#0 is a candidate for finally cloning: 3 blocks, 3 statements
Chose path to clone: try block BB10 jumps to callfinally at BB18; the call returns to BB19 which jumps to BB14
Will update callfinally block BB18 to jump to the clone; clone will jump to BB14
fgFindInsertPoint(regionIndex=0, putInTryRegion=true, startBlk=BB01, endBlk=BB00, nearBlk=BB19, jumpBlk=BB00, runRarely=false)
fgNewBBinRegion(jumpKind=9, tryIndex=0, hndIndex=0, putInFilter=false, runRarely=false, insertAtEnd=false): inserting after BB19
New Basic Block BB60 [0057] created.
New Basic Block BB61 [0058] created.
New Basic Block BB62 [0059] created.
Cloned finally blocks are: BB60 ... BB62

Removing statement STMT00118 (IL   ???...  ???)
               [000437] ------------              *  RETFILT   void  
 in BB62 as useless:

BB62 becomes empty
fgRemoveBlock BB19

Removing unreachable BB19
All callfinallys retargeted; changing finally to fault.

Done with EH#0

fgCloneFinally() cloned 1 finally handlers

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i idxlen newobj nullcheck 
BB02 [0001]  1  0                          1       [070..072)-> BB09 (always) T0      try {       keep i try label 
BB03 [0002]  1  0                          1       [072..08B)-> BB05 ( cond ) T0                  i newobj bwd bwd-target 
BB04 [0003]  1  0                          1       [08B..08F)-> BB06 (always) T0                  i bwd 
BB05 [0004]  1  0                          1       [08F..09C)                 T0                  i bwd 
BB06 [0005]  2  0                          1       [09C..0BB)-> BB08 ( cond ) T0                  i bwd 
BB07 [0006]  1  0                          1       [0BB..0D3)                 T0                  i newobj bwd 
BB40 [0039]  1  0                          1       [000..000)-> BB42 ( cond ) T0                  i internal bwd 
BB41 [0040]  1  0                          0.50    [000..000)                 T0                  i internal bwd 
BB42 [0041]  2  0                          1       [000..000)                 T0                  i internal bwd 
BB43 [0042]  1  0                          1       [???..???)                 T0                  internal newobj bwd 
BB08 [0007]  2  0                          1       [0D3..0E9)                 T0                  i newobj bwd 
BB45 [0043]  1  0                          1       [000..000)-> BB47 ( cond ) T0                  i internal bwd 
BB46 [0044]  1  0                          0.50    [000..000)                 T0                  i internal bwd 
BB47 [0045]  2  0                          1       [000..000)                 T0                  i internal bwd 
BB48 [0046]  1  0                          1       [???..???)                 T0                  internal newobj bwd 
BB09 [0008]  2  0                          1       [0E9..0F2)-> BB03 ( cond ) T0                  i bwd 
BB10 [0009]  1  0                          1       [0F2..0F4)-> BB18 (always) T0      }           i 
BB18 [0017]  1                             1       [???..???)                                     i internal 
BB60 [0057]  2                             1       [0F4..0F8)-> BB62 ( cond )                     keep i label target cfb 
BB61 [0058]  1                             1       [0F8..0FF)                                     i 
BB62 [0059]  2                             1       [0FF..100)-> BB14 (always)                     i cfe 
BB11 [0010]  1     0                       1       [0F4..0F8)-> BB13 ( cond )    H0   fault {     keep i label target 
BB12 [0011]  1     0                       1       [0F8..0FF)                    H0               i 
BB13 [0012]  2     0                       1       [0FF..100)        (finret)    H0   }           i 
BB14 [0013]  1                             1       [100..127)-> BB16 (always)                     i newobj 
BB15 [0014]  1                             1       [127..133)                                     i bwd bwd-target 
BB16 [0015]  2                             1       [133..147)                                     i bwd 
BB55 [0052]  1                             1       [000..000)-> BB57 ( cond )                     i internal bwd 
BB56 [0053]  1                             1       [000..000)-> BB58 (always)                     i internal bwd 
BB57 [0054]  1                             1       [000..000)                                     i internal bwd 
BB58 [0055]  1                             1       [???..???)-> BB15 ( cond )                     internal bwd 
BB17 [0016]  1                             1       [147..153)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB02..BB10 [070..0F4), Fault   at BB11..BB13 [0F4..100)


*************** Finishing PHASE Clone finally
Trees after Clone finally

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i idxlen newobj nullcheck 
BB02 [0001]  1  0                          1       [070..072)-> BB09 (always) T0      try {       keep i try label 
BB03 [0002]  1  0                          1       [072..08B)-> BB05 ( cond ) T0                  i newobj bwd bwd-target 
BB04 [0003]  1  0                          1       [08B..08F)-> BB06 (always) T0                  i bwd 
BB05 [0004]  1  0                          1       [08F..09C)                 T0                  i bwd 
BB06 [0005]  2  0                          1       [09C..0BB)-> BB08 ( cond ) T0                  i bwd 
BB07 [0006]  1  0                          1       [0BB..0D3)                 T0                  i newobj bwd 
BB40 [0039]  1  0                          1       [000..000)-> BB42 ( cond ) T0                  i internal bwd 
BB41 [0040]  1  0                          0.50    [000..000)                 T0                  i internal bwd 
BB42 [0041]  2  0                          1       [000..000)                 T0                  i internal bwd 
BB43 [0042]  1  0                          1       [???..???)                 T0                  internal newobj bwd 
BB08 [0007]  2  0                          1       [0D3..0E9)                 T0                  i newobj bwd 
BB45 [0043]  1  0                          1       [000..000)-> BB47 ( cond ) T0                  i internal bwd 
BB46 [0044]  1  0                          0.50    [000..000)                 T0                  i internal bwd 
BB47 [0045]  2  0                          1       [000..000)                 T0                  i internal bwd 
BB48 [0046]  1  0                          1       [???..???)                 T0                  internal newobj bwd 
BB09 [0008]  2  0                          1       [0E9..0F2)-> BB03 ( cond ) T0                  i bwd 
BB10 [0009]  1  0                          1       [0F2..0F4)-> BB18 (always) T0      }           i 
BB18 [0017]  1                             1       [???..???)                                     i internal 
BB60 [0057]  2                             1       [0F4..0F8)-> BB62 ( cond )                     keep i label target cfb 
BB61 [0058]  1                             1       [0F8..0FF)                                     i 
BB62 [0059]  2                             1       [0FF..100)-> BB14 (always)                     i cfe 
BB11 [0010]  1     0                       1       [0F4..0F8)-> BB13 ( cond )    H0   fault {     keep i label target 
BB12 [0011]  1     0                       1       [0F8..0FF)                    H0               i 
BB13 [0012]  2     0                       1       [0FF..100)        (finret)    H0   }           i 
BB14 [0013]  1                             1       [100..127)-> BB16 (always)                     i newobj 
BB15 [0014]  1                             1       [127..133)                                     i bwd bwd-target 
BB16 [0015]  2                             1       [133..147)                                     i bwd 
BB55 [0052]  1                             1       [000..000)-> BB57 ( cond )                     i internal bwd 
BB56 [0053]  1                             1       [000..000)-> BB58 (always)                     i internal bwd 
BB57 [0054]  1                             1       [000..000)                                     i internal bwd 
BB58 [0055]  1                             1       [???..???)-> BB15 ( cond )                     internal bwd 
BB17 [0016]  1                             1       [147..153)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..070), preds={} succs={BB02}

***** BB01
STMT00000 (IL 0x000...0x005)
               [000003] -AC---------              *  ASG       ref   
               [000002] D------N----              +--*  LCL_VAR   ref    V12 tmp1         
               [000001] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000000] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB01
STMT00002 (IL 0x005...  ???)
               [000008] -A----------              *  ASG       ref   
               [000007] D------N----              +--*  LCL_VAR   ref    V02 loc0         
               [000006] ------------              \--*  LCL_VAR   ref    V12 tmp1         

***** BB01
STMT00003 (IL 0x006...0x008)
               [000012] -A-XG-------              *  ASG       ref   
               [000011] ---XG--N----              +--*  FIELD     ref    outputFile
               [000009] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000010] ------------              \--*  LCL_VAR   ref    V01 arg1         

***** BB01
STMT00004 (IL 0x00D...0x00F)
               [000016] -A-XG-------              *  ASG       int   
               [000015] ---XG--N----              +--*  FIELD     int    analyzerCount
               [000013] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000014] ------------              \--*  CNS_INT   int    0

***** BB01
STMT00005 (IL 0x014...0x016)
               [000020] -A-XG-------              *  ASG       int   
               [000019] ---XG--N----              +--*  FIELD     int    analyzersFinishedCount
               [000017] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000018] ------------              \--*  CNS_INT   int    0

***** BB01
STMT00006 (IL 0x01B...0x021)
               [000025] -AC---------              *  ASG       ref   
               [000024] D------N----              +--*  LCL_VAR   ref    V13 tmp2         
               [000023] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000022] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00074 (IL   ???...  ???)
               [000269] -AC---------              *  ASG       ref   
               [000268] D------N----              +--*  LCL_VAR   ref    V30 tmp19        
               [000267] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000266] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00079 (IL   ???...  ???)
               [000283] -A-XGO------              *  ASG       int   
               [000282] V--XGO-N----              +--*  FIELD     int    m_stateFlags
               [000280] ------------              |  \--*  LCL_VAR   ref    V30 tmp19        
               [000281] ------------              \--*  CNS_INT   int    0x2000400

***** BB01
STMT00076 (IL   ???...  ???)
               [000274] -A-XG-------              *  ASG       ref   
               [000273] ---XG--N----              +--*  FIELD     ref    _task
               [000265] ------------              |  \--*  LCL_VAR   ref    V13 tmp2         
               [000272] ------------              \--*  LCL_VAR   ref    V30 tmp19        

***** BB01
STMT00008 (IL 0x021...  ???)
               [000030] -A-XG-------              *  ASG       ref   
               [000029] ---XG--N----              +--*  FIELD     ref    allAnalyzersHaveRun
               [000021] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000028] ------------              \--*  LCL_VAR   ref    V13 tmp2         

***** BB01
STMT00009 (IL 0x026...0x02C)
               [000035] -AC---------              *  ASG       ref   
               [000034] D------N----              +--*  LCL_VAR   ref    V14 tmp3         
               [000033] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000032] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00082 (IL   ???...  ???)
               [000292] -ACXG-------              *  ASG       ref   
               [000291] ---XG--N----              +--*  FIELD     ref    _array
               [000287] ------------              |  \--*  LCL_VAR   ref    V14 tmp3         
               [000300] --CXG-------              \--*  COMMA     ref   
               [000299] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS
               [000297] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc7e0b0028
               [000298] ------------ arg1            |  \--*  CNS_INT   int    14
               [000295] ----G-------                 \--*  FIELD     ref    Value

***** BB01
STMT00011 (IL 0x02C...  ???)
               [000040] -A-XG-------              *  ASG       ref   
               [000039] ---XG--N----              +--*  FIELD     ref    queuedAnalyzers
               [000031] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000038] ------------              \--*  LCL_VAR   ref    V14 tmp3         

***** BB01
STMT00012 (IL 0x031...0x033)
               [000044] -A-XG-------              *  ASG       ref   
               [000043] ---XG--N----              +--*  FIELD     ref    progressReporter
               [000041] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000042] ------------              \--*  CNS_INT   ref    null

***** BB01
STMT00013 (IL 0x038...0x03E)
               [000049] -AC---------              *  ASG       ref   
               [000048] D------N----              +--*  LCL_VAR   ref    V15 tmp4         
               [000047] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000046] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00083 (IL   ???...  ???)
               [000303] --C-G-------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor
               [000050] ------------ this in rcx  +--*  LCL_VAR   ref    V15 tmp4         
               [000302] ------------ arg1         \--*  CNS_INT   ref    null

***** BB01
STMT00015 (IL 0x03E...  ???)
               [000054] -A-XG-------              *  ASG       ref   
               [000053] ---XG--N----              +--*  FIELD     ref    output
               [000045] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000052] ------------              \--*  LCL_VAR   ref    V15 tmp4         

***** BB01
STMT00086 (IL   ???...  ???)
               [000316] -AC-G-------              *  ASG       ref   
               [000315] D------N----              +--*  LCL_VAR   ref    V31 tmp20        
               [000055] --C-G-------              \--*  CALL      ref    System.Diagnostics.Process.GetCurrentProcess

***** BB01
STMT00087 (IL   ???...  ???)
               [000314] ---X--------              *  NULLCHECK byte  
               [000313] ------------              \--*  LCL_VAR   ref    V31 tmp20        

***** BB01
STMT00084 (IL   ???...  ???)
               [000308] --C-G-------              *  CALL      void   System.Diagnostics.Process.EnsureState
               [000306] ------------ this in rcx  +--*  LCL_VAR   ref    V31 tmp20        
               [000307] ------------ arg1         \--*  CNS_INT   int    3

***** BB01
STMT00088 (IL   ???...  ???)
               [000322] -ACXG-------              *  ASG       ref   
               [000321] D------N----              +--*  LCL_VAR   ref    V32 tmp21        
               [000311] --CXG-------              \--*  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule
               [000310] ---XG------- arg0            \--*  FIELD     int    _processId
               [000309] ------------                    \--*  LCL_VAR   ref    V31 tmp20        

***** BB01
STMT00019 (IL   ???...  ???)
               [000062] -AC---------              *  ASG       ref   
               [000061] D------N----              +--*  LCL_VAR   ref    V03 loc1         
               [000320] ---XG-------              \--*  FIELD     ref    <FileName>k__BackingField
               [000319] ------------                 \--*  LCL_VAR   ref    V32 tmp21        

***** BB01
STMT00090 (IL 0x053...  ???)
               [000333] ---X--------              *  NULLCHECK byte  
               [000332] ------------              \--*  LCL_VAR   ref    V03 loc1         

***** BB01
STMT00021 (IL   ???...  ???)
               [000069] -AC---------              *  ASG       int   
               [000068] D------N----              +--*  LCL_VAR   int    V04 loc2         
               [000331] --C---------              \--*  EQ        int   
               [000329] --C---------                 +--*  LT        int   
               [000340] --CXG-------                 |  +--*  CALL      int    System.String.IndexOf
               [000063] ------------ this in rcx     |  |  +--*  LCL_VAR   ref    V03 loc1         
               [000335] ------------ arg1            |  |  +--*  CNS_STR   ref   <string constant>
               [000336] ------------ arg2            |  |  +--*  CNS_INT   int    0
               [000338] ---X-------- arg3            |  |  +--*  ARR_LENGTH int   
               [000337] ------------                 |  |  |  \--*  LCL_VAR   ref    V03 loc1         
               [000339] ------------ arg4            |  |  \--*  CNS_INT   int    5
               [000328] ------------                 |  \--*  CNS_INT   int    0
               [000330] ------------                 \--*  CNS_INT   int    0

***** BB01
STMT00023 (IL   ???...  ???)
               [000075] -ACXG-------              *  ASG       ref   
               [000074] D------N----              +--*  LCL_VAR   ref    V05 loc3         
               [000073] --CXG-------              \--*  INDEX     ref   
               [000070] --C-G-------                 +--*  CALL      ref    System.Environment.GetCommandLineArgs
               [000072] ------------                 \--*  CNS_INT   int    0

***** BB01
STMT00024 (IL 0x068...0x06E)
               [000079] -AC-G-------              *  ASG       ref   
               [000078] D------N----              +--*  LCL_VAR   ref    V06 loc4         
               [000077] --C-G-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator
               [000076] ------------ this in rcx     \--*  LCL_VAR   ref    V00 arg0         

------------ BB02 [070..072) -> BB09 (always), preds={} succs={BB09}

------------ BB03 [072..08B) -> BB05 (cond), preds={} succs={BB04,BB05}

***** BB03
STMT00026 (IL 0x072...0x079)
               [000088] -AC-G-------              *  ASG       ref   
               [000087] D------N----              +--*  LCL_VAR   ref    V07 loc5         
               [000086] --C-G-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current
               [000085] ------------ this in rcx     \--*  LCL_VAR   ref    V06 loc4         

***** BB03
STMT00027 (IL 0x07B...0x089)
               [000092] -AC---------              *  ASG       ref   
               [000091] D------N----              +--*  LCL_VAR   ref    V16 tmp5         
               [000090] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000089] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB03
STMT00092 (IL 0x080...  ???)
               [000347] -A-XG-------              *  ASG       ref   
               [000346] ---XG--N----              +--*  FIELD     ref    _fileName
               [000096] ------------              |  \--*  LCL_VAR   ref    V16 tmp5         
               [000097] ------------              \--*  LCL_VAR   ref    V03 loc1         

***** BB03
STMT00031 (IL   ???...0x089)
               [000105] -A----------              *  ASG       ref   
               [000104] D------N----              +--*  LCL_VAR   ref    V17 tmp6         
               [000095] ------------              \--*  LCL_VAR   ref    V16 tmp5         

***** BB03
STMT00032 (IL   ???...  ???)
               [000108] -A----------              *  ASG       ref   
               [000107] D------N----              +--*  LCL_VAR   ref    V18 tmp7         
               [000099] ------------              \--*  LCL_VAR   ref    V16 tmp5         

***** BB03
STMT00030 (IL 0x087...  ???)
               [000103] ------------              *  JTRUE     void  
               [000102] ------------              \--*  NE        int   
               [000100] ------------                 +--*  LCL_VAR   int    V04 loc2         
               [000101] ------------                 \--*  CNS_INT   int    0

------------ BB04 [08B..08F) -> BB06 (always), preds={} succs={BB06}

***** BB04
STMT00053 (IL   ???...0x08D)
               [000203] -A----------              *  ASG       ref   
               [000202] D------N----              +--*  LCL_VAR   ref    V19 tmp8         
               [000110] ------------              \--*  LCL_VAR   ref    V17 tmp6         

***** BB04
STMT00054 (IL   ???...  ???)
               [000206] -A----------              *  ASG       ref   
               [000205] D------N----              +--*  LCL_VAR   ref    V20 tmp9         
               [000111] ------------              \--*  LCL_VAR   ref    V18 tmp7         

***** BB04
STMT00055 (IL   ???...  ???)
               [000209] -A----------              *  ASG       ref   
               [000208] D------N----              +--*  LCL_VAR   ref    V21 tmp10        
               [000201] ------------              \--*  LCL_VAR   ref    V07 loc5         

------------ BB05 [08F..09C), preds={} succs={BB06}

***** BB05
STMT00033 (IL   ???...0x097)
               [000119] -A----------              *  ASG       ref   
               [000118] D------N----              +--*  LCL_VAR   ref    V19 tmp8         
               [000112] ------------              \--*  LCL_VAR   ref    V17 tmp6         

***** BB05
STMT00034 (IL   ???...  ???)
               [000122] -A----------              *  ASG       ref   
               [000121] D------N----              +--*  LCL_VAR   ref    V20 tmp9         
               [000113] ------------              \--*  LCL_VAR   ref    V18 tmp7         

***** BB05
STMT00035 (IL   ???...  ???)
               [000125] -AC-G-------              *  ASG       ref   
               [000124] D------N----              +--*  LCL_VAR   ref    V21 tmp10        
               [000117] --C-G-------              \--*  CALL      ref    System.String.Concat
               [000114] ------------ arg0            +--*  LCL_VAR   ref    V05 loc3         
               [000115] ------------ arg1            +--*  CNS_STR   ref   <string constant>
               [000116] ------------ arg2            \--*  LCL_VAR   ref    V07 loc5         

------------ BB06 [09C..0BB) -> BB08 (cond), preds={} succs={BB07,BB08}

***** BB06
STMT00093 (IL   ???...  ???)
               [000350] -A-XG-------              *  ASG       ref   
               [000349] ---XG--N----              +--*  FIELD     ref    _arguments
               [000128] ------------              |  \--*  LCL_VAR   ref    V20 tmp9         
               [000129] ------------              \--*  LCL_VAR   ref    V21 tmp10        

***** BB06
STMT00094 (IL 0x0A1...  ???)
               [000355] -A-XG-------              *  ASG       bool  
               [000354] ---XG--N----              +--*  FIELD     bool   <UseShellExecute>k__BackingField
               [000131] ------------              |  \--*  LCL_VAR   ref    V19 tmp8         
               [000353] ------------              \--*  CNS_INT   int    0

***** BB06
STMT00038 (IL 0x0A8...  ???)
               [000136] -A----------              *  ASG       ref   
               [000135] D------N----              +--*  LCL_VAR   ref    V08 loc6         
               [000127] ------------              \--*  LCL_VAR   ref    V19 tmp8         

***** BB06
STMT00040 (IL 0x0AA...0x0B9)
               [000145] -A-XG-------              *  ASG       ref   
               [000144] D------N----              +--*  LCL_VAR   ref    V23 tmp12        
               [000138] ---XG-------              \--*  FIELD     ref    queuedAnalyzers
               [000137] ------------                 \--*  LCL_VAR   ref    V02 loc0         

***** BB06
STMT00039 (IL 0x0AA...  ???)
               [000143] -A-XG-------              *  ASG       ref   
               [000142] D------N----              +--*  LCL_VAR   ref    V22 tmp11        
               [000141] ---XG-------              \--*  FIELD     ref    <>9__2
               [000140] ------------                 \--*  LCL_VAR   ref    V02 loc0         

***** BB06
STMT00042 (IL   ???...0x0B9)
               [000153] -A----------              *  ASG       ref   
               [000152] D------N----              +--*  LCL_VAR   ref    V24 tmp13        
               [000146] ------------              \--*  LCL_VAR   ref    V23 tmp12        

***** BB06
STMT00043 (IL   ???...  ???)
               [000156] -A----------              *  ASG       ref   
               [000155] D------N----              +--*  LCL_VAR   ref    V25 tmp14        
               [000139] ------------              \--*  LCL_VAR   ref    V08 loc6         

***** BB06
STMT00044 (IL   ???...  ???)
               [000159] -A----------              *  ASG       ref   
               [000158] D------N----              +--*  LCL_VAR   ref    V26 tmp15        
               [000147] ------------              \--*  LCL_VAR   ref    V22 tmp11        

***** BB06
STMT00041 (IL   ???...  ???)
               [000151] ------------              *  JTRUE     void  
               [000150] ------------              \--*  NE        int   
               [000148] ------------                 +--*  LCL_VAR   ref    V22 tmp11        
               [000149] ------------                 \--*  CNS_INT   ref    null

------------ BB07 [0BB..0D3), preds={} succs={BB40}

***** BB07
STMT00048 (IL   ???...0x0CA)
               [000184] -AC---------              *  ASG       ref   
               [000183] D------N----              +--*  LCL_VAR   ref    V28 tmp17        
               [000182] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000181] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token

------------ BB40 [000..000) -> BB42 (cond), preds={} succs={BB41,BB42}

***** BB40
STMT00095 (IL   ???...  ???)
               [000359] ------------              *  JTRUE     void  
               [000358] ------------              \--*  NE        int   
               [000179] ------------                 +--*  LCL_VAR   ref    V02 loc0         
               [000357] ------------                 \--*  CNS_INT   ref    null

------------ BB41 [000..000), preds={} succs={BB42}

***** BB41
STMT00098 (IL   ???...  ???)
               [000367] --C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

------------ BB42 [000..000), preds={} succs={BB43}

***** BB42
STMT00096 (IL   ???...  ???)
               [000362] -A-XG-------              *  ASG       ref   
               [000361] ---XG--N----              +--*  FIELD     ref    _target
               [000185] ------------              |  \--*  LCL_VAR   ref    V28 tmp17        
               [000360] ------------              \--*  LCL_VAR   ref    V02 loc0         

***** BB42
STMT00097 (IL   ???...  ???)
               [000366] -A-XG-------              *  ASG       long  
               [000365] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000363] ------------              |  \--*  LCL_VAR   ref    V28 tmp17        
               [000180] ------------              \--*  FTN_ADDR  long   <>c__DisplayClass5_0.<ExecuteAnalyzers>b__2


------------ BB43 [???..???), preds={} succs={BB08}

***** BB43
STMT00050 (IL 0x0C9...  ???)
               [000190] -A----------              *  ASG       ref   
               [000189] D------N----              +--*  LCL_VAR   ref    V09 loc7         
               [000188] ------------              \--*  LCL_VAR   ref    V28 tmp17        

***** BB43
STMT00051 (IL   ???...0x0CC)
               [000192] -A-XG-------              *  ASG       ref   
               [000191] ---XG--N----              +--*  FIELD     ref    <>9__2
               [000178] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000187] ------------              \--*  LCL_VAR   ref    V28 tmp17        

***** BB43
STMT00052 (IL   ???...0x0D1)
               [000199] -A----------              *  ASG       ref   
               [000198] D------N----              +--*  LCL_VAR   ref    V26 tmp15        
               [000193] ------------              \--*  LCL_VAR   ref    V09 loc7         

------------ BB08 [0D3..0E9), preds={} succs={BB45}

***** BB08
STMT00045 (IL   ???...0x0E4)
               [000172] -AC---------              *  ASG       ref   
               [000171] D------N----              +--*  LCL_VAR   ref    V27 tmp16        
               [000170] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000169] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token

------------ BB45 [000..000) -> BB47 (cond), preds={} succs={BB46,BB47}

***** BB45
STMT00099 (IL   ???...  ???)
               [000371] ------------              *  JTRUE     void  
               [000370] ------------              \--*  NE        int   
               [000167] ------------                 +--*  LCL_VAR   ref    V02 loc0         
               [000369] ------------                 \--*  CNS_INT   ref    null

------------ BB46 [000..000), preds={} succs={BB47}

***** BB46
STMT00102 (IL   ???...  ???)
               [000379] --C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

------------ BB47 [000..000), preds={} succs={BB48}

***** BB47
STMT00100 (IL   ???...  ???)
               [000374] -A-XG-------              *  ASG       ref   
               [000373] ---XG--N----              +--*  FIELD     ref    _target
               [000173] ------------              |  \--*  LCL_VAR   ref    V27 tmp16        
               [000372] ------------              \--*  LCL_VAR   ref    V02 loc0         

***** BB47
STMT00101 (IL   ???...  ???)
               [000378] -A-XG-------              *  ASG       long  
               [000377] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000375] ------------              |  \--*  LCL_VAR   ref    V27 tmp16        
               [000168] ------------              \--*  FTN_ADDR  long   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__OnAnalyzerFinished|1


------------ BB48 [???..???), preds={} succs={BB09}

***** BB48
STMT00047 (IL 0x0DF...  ???)
               [000177] --C-G-------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue
               [000164] ------------ this in rcx  +--*  LCL_VAR   ref    V24 tmp13        
               [000176] --C-G------- arg1         \--*  CALL      ref    SolutionAnalyzer.IPC.CreateSession
               [000165] ------------ arg0            +--*  LCL_VAR   ref    V25 tmp14        
               [000166] ------------ arg1            +--*  LCL_VAR   ref    V26 tmp15        
               [000175] ------------ arg2            \--*  LCL_VAR   ref    V27 tmp16        

------------ BB09 [0E9..0F2) -> BB03 (cond), preds={} succs={BB10,BB03}

***** BB09
STMT00025 (IL 0x0E9...0x0F0)
               [000084] --C-G-------              *  JTRUE     void  
               [000083] --C-G-------              \--*  NE        int   
               [000081] --C-G-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext
               [000080] ------------ this in rcx     |  \--*  LCL_VAR   ref    V06 loc4         
               [000082] ------------                 \--*  CNS_INT   int    0

------------ BB10 [0F2..0F4) -> BB18 (always), preds={} succs={BB18}

------------ BB18 [???..???), preds={} succs={BB60}

------------ BB60 [0F4..0F8) -> BB62 (cond), preds={} succs={BB61,BB62}

***** BB60
STMT00116 (IL   ???...  ???)
               [000431] ------------              *  JTRUE     void  
               [000432] ------------              \--*  EQ        int   
               [000433] ------------                 +--*  LCL_VAR   ref    V06 loc4         
               [000434] ------------                 \--*  CNS_INT   ref    null

------------ BB61 [0F8..0FF), preds={} succs={BB62}

***** BB61
STMT00117 (IL   ???...  ???)
               [000435] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose
               [000436] ------------ this in rcx  \--*  LCL_VAR   ref    V06 loc4         

------------ BB62 [0FF..100) -> BB14 (always), preds={} succs={BB14}

------------ BB11 [0F4..0F8) -> BB13 (cond), preds={} succs={BB12,BB13}

***** BB11
STMT00069 (IL 0x0F4...0x0F6)
               [000257] ------------              *  JTRUE     void  
               [000256] ------------              \--*  EQ        int   
               [000254] ------------                 +--*  LCL_VAR   ref    V06 loc4         
               [000255] ------------                 \--*  CNS_INT   ref    null

------------ BB12 [0F8..0FF), preds={} succs={BB13}

***** BB12
STMT00071 (IL 0x0F8...0x0FA)
               [000260] --C-G-------              *  CALLV stub void   System.IDisposable.Dispose
               [000259] ------------ this in rcx  \--*  LCL_VAR   ref    V06 loc4         

------------ BB13 [0FF..100) (finret), preds={} succs={}

***** BB13
STMT00070 (IL 0x0FF...0x0FF)
               [000258] ------------              *  RETFILT   void  

------------ BB14 [100..127) -> BB16 (always), preds={} succs={BB16}

***** BB14
STMT00103 (IL 0x100...  ???)
               [000384] -A-XG-------              *  ASG       ref   
               [000383] D------N----              +--*  LCL_VAR   ref    V35 tmp24        
               [000213] ---XG-------              \--*  FIELD     ref    queuedAnalyzers
               [000212] ------------                 \--*  LCL_VAR   ref    V02 loc0         

***** BB14
STMT00057 (IL   ???...  ???)
               [000217] -ACXG-------              *  ASG       int   
               [000216] ---XG--N----              +--*  FIELD     int    analyzerCount
               [000211] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000382] ---XG-------              \--*  FIELD     int    _size
               [000381] ------------                 \--*  LCL_VAR   ref    V35 tmp24        

***** BB14
STMT00058 (IL 0x111...0x11D)
               [000224] -AC---------              *  ASG       ref   
               [000223] D------N----              +--*  LCL_VAR   ref    V29 tmp18        
               [000222] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000221] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB14
STMT00109 (IL   ???...  ???)
               [000402] -A-XG-------              *  ASG       int   
               [000401] D------N----              +--*  LCL_VAR   int    V37 tmp26        
               [000220] ---XG-------              \--*  FIELD     int    analyzerCount
               [000219] ------------                 \--*  LCL_VAR   ref    V02 loc0         

***** BB14
STMT00104 (IL   ???...  ???)
               [000389] -AC---------              *  ASG       ref   
               [000388] D------N----              +--*  LCL_VAR   ref    V36 tmp25        
               [000387] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000386] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB14
STMT00110 (IL   ???...  ???)
               [000406] --C-G-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor
               [000390] ------------ this in rcx  +--*  LCL_VAR   ref    V36 tmp25        
               [000404] ------------ arg1         +--*  CNS_INT   int    0
               [000405] ------------ arg2         \--*  CNS_INT   ref    null

***** BB14
STMT00106 (IL   ???...  ???)
               [000394] -A-XG-------              *  ASG       ref   
               [000393] ---XG--N----              +--*  FIELD     ref    _workItems
               [000225] ------------              |  \--*  LCL_VAR   ref    V29 tmp18        
               [000392] ------------              \--*  LCL_VAR   ref    V36 tmp25        

***** BB14
STMT00108 (IL   ???...  ???)
               [000400] -A-XG-------              *  ASG       int   
               [000399] ---XG--N----              +--*  FIELD     int    _workItemsToComplete
               [000397] ------------              |  \--*  LCL_VAR   ref    V29 tmp18        
               [000398] ------------              \--*  LCL_VAR   int    V37 tmp26        

***** BB14
STMT00060 (IL 0x11D...  ???)
               [000229] -A-XG-------              *  ASG       ref   
               [000228] ---XG--N----              +--*  FIELD     ref    progressReporter
               [000218] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000227] ------------              \--*  LCL_VAR   ref    V29 tmp18        

***** BB14
STMT00061 (IL 0x122...0x123)
               [000232] -A----------              *  ASG       int   
               [000231] D------N----              +--*  LCL_VAR   int    V10 loc8         
               [000230] ------------              \--*  CNS_INT   int    0

------------ BB15 [127..133), preds={} succs={BB16}

***** BB15
STMT00065 (IL 0x127...0x131)
               [000243] --C-G-------              *  CALL nullcheck void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0
               [000242] ------------ this in rcx  \--*  LCL_VAR   ref    V02 loc0         

***** BB15
STMT00066 (IL 0x12D...  ???)
               [000248] -A----------              *  ASG       int   
               [000247] D------N----              +--*  LCL_VAR   int    V10 loc8         
               [000246] ------------              \--*  ADD       int   
               [000244] ------------                 +--*  LCL_VAR   int    V10 loc8         
               [000245] ------------                 \--*  CNS_INT   int    1

------------ BB16 [133..147), preds={} succs={BB55}

***** BB16
STMT00114 (IL   ???...  ???)
               [000424] -A-XG-------              *  ASG       int   
               [000423] D------N----              +--*  LCL_VAR   int    V39 tmp28        
               [000237] ---XG-------              \--*  FIELD     int    analyzerCount
               [000236] ------------                 \--*  LCL_VAR   ref    V02 loc0         

------------ BB55 [000..000) -> BB57 (cond), preds={} succs={BB56,BB57}

***** BB55
STMT00111 (IL   ???...  ???)
               [000414] ------------              *  JTRUE     void  
               [000413] ------------              \--*  LE        int   
               [000411] ------------                 +--*  CNS_INT   int    8
               [000412] ------------                 \--*  LCL_VAR   int    V39 tmp28        

------------ BB56 [000..000) -> BB58 (always), preds={} succs={BB58}

***** BB56
STMT00113 (IL   ???...  ???)
               [000421] -A----------              *  ASG       int   
               [000420] D------N----              +--*  LCL_VAR   int    V38 tmp27        
               [000419] ------------              \--*  LCL_VAR   int    V39 tmp28        

------------ BB57 [000..000), preds={} succs={BB58}

***** BB57
STMT00112 (IL   ???...  ???)
               [000417] -A----------              *  ASG       int   
               [000416] D------N----              +--*  LCL_VAR   int    V38 tmp27        
               [000415] ------------              \--*  CNS_INT   int    8

------------ BB58 [???..???) -> BB15 (cond), preds={} succs={BB17,BB15}

***** BB58
STMT00064 (IL   ???...  ???)
               [000241] --C---------              *  JTRUE     void  
               [000240] --C---------              \--*  LT        int   
               [000233] ------------                 +--*  LCL_VAR   int    V10 loc8         
               [000422] ------------                 \--*  LCL_VAR   int    V38 tmp27        

------------ BB17 [147..153) (return), preds={} succs={}

***** BB17
STMT00115 (IL 0x147...  ???)
               [000429] -A-XG-------              *  ASG       ref   
               [000428] D------N----              +--*  LCL_VAR   ref    V40 tmp29        
               [000250] ---XG-------              \--*  FIELD     ref    allAnalyzersHaveRun
               [000249] ------------                 \--*  LCL_VAR   ref    V02 loc0         

***** BB17
STMT00068 (IL   ???...  ???)
               [000253] --C---------              *  RETURN    ref   
               [000427] ---XG-------              \--*  FIELD     ref    _task
               [000426] ------------                 \--*  LCL_VAR   ref    V40 tmp29        

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Compute preds

Renumbering the basic blocks for fgComputePred

*************** Before renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i idxlen newobj nullcheck 
BB02 [0001]  1  0                          1       [070..072)-> BB09 (always) T0      try {       keep i try label 
BB03 [0002]  1  0                          1       [072..08B)-> BB05 ( cond ) T0                  i newobj bwd bwd-target 
BB04 [0003]  1  0                          1       [08B..08F)-> BB06 (always) T0                  i bwd 
BB05 [0004]  1  0                          1       [08F..09C)                 T0                  i bwd 
BB06 [0005]  2  0                          1       [09C..0BB)-> BB08 ( cond ) T0                  i bwd 
BB07 [0006]  1  0                          1       [0BB..0D3)                 T0                  i newobj bwd 
BB40 [0039]  1  0                          1       [000..000)-> BB42 ( cond ) T0                  i internal bwd 
BB41 [0040]  1  0                          0.50    [000..000)                 T0                  i internal bwd 
BB42 [0041]  2  0                          1       [000..000)                 T0                  i internal bwd 
BB43 [0042]  1  0                          1       [???..???)                 T0                  internal newobj bwd 
BB08 [0007]  2  0                          1       [0D3..0E9)                 T0                  i newobj bwd 
BB45 [0043]  1  0                          1       [000..000)-> BB47 ( cond ) T0                  i internal bwd 
BB46 [0044]  1  0                          0.50    [000..000)                 T0                  i internal bwd 
BB47 [0045]  2  0                          1       [000..000)                 T0                  i internal bwd 
BB48 [0046]  1  0                          1       [???..???)                 T0                  internal newobj bwd 
BB09 [0008]  2  0                          1       [0E9..0F2)-> BB03 ( cond ) T0                  i bwd 
BB10 [0009]  1  0                          1       [0F2..0F4)-> BB18 (always) T0      }           i 
BB18 [0017]  1                             1       [???..???)                                     i internal 
BB60 [0057]  2                             1       [0F4..0F8)-> BB62 ( cond )                     keep i label target cfb 
BB61 [0058]  1                             1       [0F8..0FF)                                     i 
BB62 [0059]  2                             1       [0FF..100)-> BB14 (always)                     i cfe 
BB11 [0010]  1     0                       1       [0F4..0F8)-> BB13 ( cond )    H0   fault {     keep i label target 
BB12 [0011]  1     0                       1       [0F8..0FF)                    H0               i 
BB13 [0012]  2     0                       1       [0FF..100)        (finret)    H0   }           i 
BB14 [0013]  1                             1       [100..127)-> BB16 (always)                     i newobj 
BB15 [0014]  1                             1       [127..133)                                     i bwd bwd-target 
BB16 [0015]  2                             1       [133..147)                                     i bwd 
BB55 [0052]  1                             1       [000..000)-> BB57 ( cond )                     i internal bwd 
BB56 [0053]  1                             1       [000..000)-> BB58 (always)                     i internal bwd 
BB57 [0054]  1                             1       [000..000)                                     i internal bwd 
BB58 [0055]  1                             1       [???..???)-> BB15 ( cond )                     internal bwd 
BB17 [0016]  1                             1       [147..153)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB02..BB10 [070..0F4), Fault   at BB11..BB13 [0F4..100)
Renumber BB40 to BB08
Renumber BB41 to BB09
Renumber BB42 to BB10
Renumber BB43 to BB11
Renumber BB08 to BB12
Renumber BB45 to BB13
Renumber BB46 to BB14
Renumber BB47 to BB15
Renumber BB48 to BB16
Renumber BB09 to BB17
Renumber BB10 to BB18
Renumber BB18 to BB19
Renumber BB60 to BB20
Renumber BB61 to BB21
Renumber BB62 to BB22
Renumber BB11 to BB23
Renumber BB12 to BB24
Renumber BB13 to BB25
Renumber BB14 to BB26
Renumber BB15 to BB27
Renumber BB16 to BB28
Renumber BB55 to BB29
Renumber BB56 to BB30
Renumber BB57 to BB31
Renumber BB58 to BB32
Renumber BB17 to BB33

*************** After renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i idxlen newobj nullcheck 
BB02 [0001]  1  0                          1       [070..072)-> BB17 (always) T0      try {       keep i try label 
BB03 [0002]  1  0                          1       [072..08B)-> BB05 ( cond ) T0                  i newobj bwd bwd-target 
BB04 [0003]  1  0                          1       [08B..08F)-> BB06 (always) T0                  i bwd 
BB05 [0004]  1  0                          1       [08F..09C)                 T0                  i bwd 
BB06 [0005]  2  0                          1       [09C..0BB)-> BB12 ( cond ) T0                  i bwd 
BB07 [0006]  1  0                          1       [0BB..0D3)                 T0                  i newobj bwd 
BB08 [0039]  1  0                          1       [000..000)-> BB10 ( cond ) T0                  i internal bwd 
BB09 [0040]  1  0                          0.50    [000..000)                 T0                  i internal bwd 
BB10 [0041]  2  0                          1       [000..000)                 T0                  i internal bwd 
BB11 [0042]  1  0                          1       [???..???)                 T0                  internal newobj bwd 
BB12 [0007]  2  0                          1       [0D3..0E9)                 T0                  i newobj bwd 
BB13 [0043]  1  0                          1       [000..000)-> BB15 ( cond ) T0                  i internal bwd 
BB14 [0044]  1  0                          0.50    [000..000)                 T0                  i internal bwd 
BB15 [0045]  2  0                          1       [000..000)                 T0                  i internal bwd 
BB16 [0046]  1  0                          1       [???..???)                 T0                  internal newobj bwd 
BB17 [0008]  2  0                          1       [0E9..0F2)-> BB03 ( cond ) T0                  i bwd 
BB18 [0009]  1  0                          1       [0F2..0F4)-> BB19 (always) T0      }           i 
BB19 [0017]  1                             1       [???..???)                                     i internal 
BB20 [0057]  2                             1       [0F4..0F8)-> BB22 ( cond )                     keep i label target cfb 
BB21 [0058]  1                             1       [0F8..0FF)                                     i 
BB22 [0059]  2                             1       [0FF..100)-> BB26 (always)                     i cfe 
BB23 [0010]  1     0                       1       [0F4..0F8)-> BB25 ( cond )    H0   fault {     keep i label target 
BB24 [0011]  1     0                       1       [0F8..0FF)                    H0               i 
BB25 [0012]  2     0                       1       [0FF..100)        (finret)    H0   }           i 
BB26 [0013]  1                             1       [100..127)-> BB28 (always)                     i newobj 
BB27 [0014]  1                             1       [127..133)                                     i bwd bwd-target 
BB28 [0015]  2                             1       [133..147)                                     i bwd 
BB29 [0052]  1                             1       [000..000)-> BB31 ( cond )                     i internal bwd 
BB30 [0053]  1                             1       [000..000)-> BB32 (always)                     i internal bwd 
BB31 [0054]  1                             1       [000..000)                                     i internal bwd 
BB32 [0055]  1                             1       [???..???)-> BB27 ( cond )                     internal bwd 
BB33 [0016]  1                             1       [147..153)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB02..BB18 [070..0F4), Fault   at BB23..BB25 [0F4..100)

New BlockSet epoch 2, # of blocks (including unused BB00): 34, bitset array size: 1 (short)

*************** In fgComputePreds()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i idxlen newobj nullcheck 
BB02 [0001]  1  0                          1       [070..072)-> BB17 (always) T0      try {       keep i try label 
BB03 [0002]  1  0                          1       [072..08B)-> BB05 ( cond ) T0                  i newobj bwd bwd-target 
BB04 [0003]  1  0                          1       [08B..08F)-> BB06 (always) T0                  i bwd 
BB05 [0004]  1  0                          1       [08F..09C)                 T0                  i bwd 
BB06 [0005]  2  0                          1       [09C..0BB)-> BB12 ( cond ) T0                  i bwd 
BB07 [0006]  1  0                          1       [0BB..0D3)                 T0                  i newobj bwd 
BB08 [0039]  1  0                          1       [000..000)-> BB10 ( cond ) T0                  i internal bwd 
BB09 [0040]  1  0                          0.50    [000..000)                 T0                  i internal bwd 
BB10 [0041]  2  0                          1       [000..000)                 T0                  i internal bwd 
BB11 [0042]  1  0                          1       [???..???)                 T0                  internal newobj bwd 
BB12 [0007]  2  0                          1       [0D3..0E9)                 T0                  i newobj bwd 
BB13 [0043]  1  0                          1       [000..000)-> BB15 ( cond ) T0                  i internal bwd 
BB14 [0044]  1  0                          0.50    [000..000)                 T0                  i internal bwd 
BB15 [0045]  2  0                          1       [000..000)                 T0                  i internal bwd 
BB16 [0046]  1  0                          1       [???..???)                 T0                  internal newobj bwd 
BB17 [0008]  2  0                          1       [0E9..0F2)-> BB03 ( cond ) T0                  i bwd 
BB18 [0009]  1  0                          1       [0F2..0F4)-> BB19 (always) T0      }           i 
BB19 [0017]  1                             1       [???..???)                                     i internal 
BB20 [0057]  2                             1       [0F4..0F8)-> BB22 ( cond )                     keep i label target cfb 
BB21 [0058]  1                             1       [0F8..0FF)                                     i 
BB22 [0059]  2                             1       [0FF..100)-> BB26 (always)                     i cfe 
BB23 [0010]  1     0                       1       [0F4..0F8)-> BB25 ( cond )    H0   fault {     keep i label target 
BB24 [0011]  1     0                       1       [0F8..0FF)                    H0               i 
BB25 [0012]  2     0                       1       [0FF..100)        (finret)    H0   }           i 
BB26 [0013]  1                             1       [100..127)-> BB28 (always)                     i newobj 
BB27 [0014]  1                             1       [127..133)                                     i bwd bwd-target 
BB28 [0015]  2                             1       [133..147)                                     i bwd 
BB29 [0052]  1                             1       [000..000)-> BB31 ( cond )                     i internal bwd 
BB30 [0053]  1                             1       [000..000)-> BB32 (always)                     i internal bwd 
BB31 [0054]  1                             1       [000..000)                                     i internal bwd 
BB32 [0055]  1                             1       [???..???)-> BB27 ( cond )                     internal bwd 
BB33 [0016]  1                             1       [147..153)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** After fgComputePreds()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB17 (always) T0      try {       keep i try label 
BB03 [0002]  1  0    BB17                  1       [072..08B)-> BB05 ( cond ) T0                  i label target newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  1       [08B..08F)-> BB06 (always) T0                  i bwd 
BB05 [0004]  1  0    BB03                  1       [08F..09C)                 T0                  i label target bwd 
BB06 [0005]  2  0    BB04,BB05             1       [09C..0BB)-> BB12 ( cond ) T0                  i label target bwd 
BB07 [0006]  1  0    BB06                  1       [0BB..0D3)                 T0                  i newobj bwd 
BB08 [0039]  1  0    BB07                  1       [000..000)-> BB10 ( cond ) T0                  i internal bwd 
BB09 [0040]  1  0    BB08                  0.50    [000..000)                 T0                  i internal bwd 
BB10 [0041]  2  0    BB08,BB09             1       [000..000)                 T0                  i internal label target bwd 
BB11 [0042]  1  0    BB10                  1       [???..???)                 T0                  internal newobj bwd 
BB12 [0007]  2  0    BB06,BB11             1       [0D3..0E9)                 T0                  i label target newobj bwd 
BB13 [0043]  1  0    BB12                  1       [000..000)-> BB15 ( cond ) T0                  i internal bwd 
BB14 [0044]  1  0    BB13                  0.50    [000..000)                 T0                  i internal bwd 
BB15 [0045]  2  0    BB13,BB14             1       [000..000)                 T0                  i internal label target bwd 
BB16 [0046]  1  0    BB15                  1       [???..???)                 T0                  internal newobj bwd 
BB17 [0008]  2  0    BB02,BB16             1       [0E9..0F2)-> BB03 ( cond ) T0                  i label target bwd 
BB18 [0009]  1  0    BB17                  1       [0F2..0F4)-> BB19 (always) T0      }           i 
BB19 [0017]  1       BB18                  1       [???..???)                                     i internal label target 
BB20 [0057]  1       BB19                  1       [0F4..0F8)-> BB22 ( cond )                     keep i label target cfb 
BB21 [0058]  1       BB20                  1       [0F8..0FF)                                     i 
BB22 [0059]  2       BB20,BB21             1       [0FF..100)-> BB26 (always)                     i label target cfe 
BB23 [0010]  1     0                       1       [0F4..0F8)-> BB25 ( cond )    H0   fault {     keep i label target 
BB24 [0011]  1     0 BB23                  1       [0F8..0FF)                    H0               i 
BB25 [0012]  2     0 BB23,BB24             1       [0FF..100)        (finret)    H0   }           i label target 
BB26 [0013]  1       BB22                  1       [100..127)-> BB28 (always)                     i label target newobj 
BB27 [0014]  1       BB32                  1       [127..133)                                     i label target bwd bwd-target 
BB28 [0015]  2       BB26,BB27             1       [133..147)                                     i label target bwd 
BB29 [0052]  1       BB28                  1       [000..000)-> BB31 ( cond )                     i internal bwd 
BB30 [0053]  1       BB29                  1       [000..000)-> BB32 (always)                     i internal bwd 
BB31 [0054]  1       BB29                  1       [000..000)                                     i internal label target bwd 
BB32 [0055]  2       BB30,BB31             1       [???..???)-> BB27 ( cond )                     internal label target bwd 
BB33 [0016]  1       BB32                  1       [147..153)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** Finishing PHASE Compute preds

*************** Starting PHASE Merge throw blocks

*************** In fgTailMergeThrows
Scanning the 2 candidates

*** Does not return call
               [000379] --C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance
    in BB14 is unique, marking it as canonical

*** Does not return call
               [000367] --C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance
    in BB09 can be dup'd to canonical BB14

*** found 1 merge candidates, rewriting flow

New Basic Block BB34 [0060] created.
*** BB08 now falling through to empty BB34 and then to BB14
Made 1 updates

*************** Finishing PHASE Merge throw blocks
Trees after Merge throw blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB17 (always) T0      try {       keep i try label 
BB03 [0002]  1  0    BB17                  1       [072..08B)-> BB05 ( cond ) T0                  i label target newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  1       [08B..08F)-> BB06 (always) T0                  i bwd 
BB05 [0004]  1  0    BB03                  1       [08F..09C)                 T0                  i label target bwd 
BB06 [0005]  2  0    BB04,BB05             1       [09C..0BB)-> BB12 ( cond ) T0                  i label target bwd 
BB07 [0006]  1  0    BB06                  1       [0BB..0D3)                 T0                  i newobj bwd 
BB08 [0039]  1  0    BB07                  1       [000..000)-> BB10 ( cond ) T0                  i internal bwd 
BB34 [0060]  1  0    BB08                  1       [???..???)-> BB14 (always) T0                  internal 
BB09 [0040]  0  0                          0.50    [000..000)                 T0                  i internal bwd 
BB10 [0041]  2  0    BB08,BB09             1       [000..000)                 T0                  i internal label target bwd 
BB11 [0042]  1  0    BB10                  1       [???..???)                 T0                  internal newobj bwd 
BB12 [0007]  2  0    BB06,BB11             1       [0D3..0E9)                 T0                  i label target newobj bwd 
BB13 [0043]  1  0    BB12                  1       [000..000)-> BB15 ( cond ) T0                  i internal bwd 
BB14 [0044]  2  0    BB13,BB34             0.50    [000..000)                 T0                  i internal label target bwd 
BB15 [0045]  2  0    BB13,BB14             1       [000..000)                 T0                  i internal label target bwd 
BB16 [0046]  1  0    BB15                  1       [???..???)                 T0                  internal newobj bwd 
BB17 [0008]  2  0    BB02,BB16             1       [0E9..0F2)-> BB03 ( cond ) T0                  i label target bwd 
BB18 [0009]  1  0    BB17                  1       [0F2..0F4)-> BB19 (always) T0      }           i 
BB19 [0017]  1       BB18                  1       [???..???)                                     i internal label target 
BB20 [0057]  1       BB19                  1       [0F4..0F8)-> BB22 ( cond )                     keep i label target cfb 
BB21 [0058]  1       BB20                  1       [0F8..0FF)                                     i 
BB22 [0059]  2       BB20,BB21             1       [0FF..100)-> BB26 (always)                     i label target cfe 
BB23 [0010]  1     0                       1       [0F4..0F8)-> BB25 ( cond )    H0   fault {     keep i label target 
BB24 [0011]  1     0 BB23                  1       [0F8..0FF)                    H0               i 
BB25 [0012]  2     0 BB23,BB24             1       [0FF..100)        (finret)    H0   }           i label target 
BB26 [0013]  1       BB22                  1       [100..127)-> BB28 (always)                     i label target newobj 
BB27 [0014]  1       BB32                  1       [127..133)                                     i label target bwd bwd-target 
BB28 [0015]  2       BB26,BB27             1       [133..147)                                     i label target bwd 
BB29 [0052]  1       BB28                  1       [000..000)-> BB31 ( cond )                     i internal bwd 
BB30 [0053]  1       BB29                  1       [000..000)-> BB32 (always)                     i internal bwd 
BB31 [0054]  1       BB29                  1       [000..000)                                     i internal label target bwd 
BB32 [0055]  2       BB30,BB31             1       [???..???)-> BB27 ( cond )                     internal label target bwd 
BB33 [0016]  1       BB32                  1       [147..153)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..070), preds={} succs={BB02}

***** BB01
STMT00000 (IL 0x000...0x005)
               [000003] -AC---------              *  ASG       ref   
               [000002] D------N----              +--*  LCL_VAR   ref    V12 tmp1         
               [000001] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000000] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB01
STMT00002 (IL 0x005...  ???)
               [000008] -A----------              *  ASG       ref   
               [000007] D------N----              +--*  LCL_VAR   ref    V02 loc0         
               [000006] ------------              \--*  LCL_VAR   ref    V12 tmp1         

***** BB01
STMT00003 (IL 0x006...0x008)
               [000012] -A-XG-------              *  ASG       ref   
               [000011] ---XG--N----              +--*  FIELD     ref    outputFile
               [000009] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000010] ------------              \--*  LCL_VAR   ref    V01 arg1         

***** BB01
STMT00004 (IL 0x00D...0x00F)
               [000016] -A-XG-------              *  ASG       int   
               [000015] ---XG--N----              +--*  FIELD     int    analyzerCount
               [000013] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000014] ------------              \--*  CNS_INT   int    0

***** BB01
STMT00005 (IL 0x014...0x016)
               [000020] -A-XG-------              *  ASG       int   
               [000019] ---XG--N----              +--*  FIELD     int    analyzersFinishedCount
               [000017] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000018] ------------              \--*  CNS_INT   int    0

***** BB01
STMT00006 (IL 0x01B...0x021)
               [000025] -AC---------              *  ASG       ref   
               [000024] D------N----              +--*  LCL_VAR   ref    V13 tmp2         
               [000023] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000022] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00074 (IL   ???...  ???)
               [000269] -AC---------              *  ASG       ref   
               [000268] D------N----              +--*  LCL_VAR   ref    V30 tmp19        
               [000267] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000266] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00079 (IL   ???...  ???)
               [000283] -A-XGO------              *  ASG       int   
               [000282] V--XGO-N----              +--*  FIELD     int    m_stateFlags
               [000280] ------------              |  \--*  LCL_VAR   ref    V30 tmp19        
               [000281] ------------              \--*  CNS_INT   int    0x2000400

***** BB01
STMT00076 (IL   ???...  ???)
               [000274] -A-XG-------              *  ASG       ref   
               [000273] ---XG--N----              +--*  FIELD     ref    _task
               [000265] ------------              |  \--*  LCL_VAR   ref    V13 tmp2         
               [000272] ------------              \--*  LCL_VAR   ref    V30 tmp19        

***** BB01
STMT00008 (IL 0x021...  ???)
               [000030] -A-XG-------              *  ASG       ref   
               [000029] ---XG--N----              +--*  FIELD     ref    allAnalyzersHaveRun
               [000021] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000028] ------------              \--*  LCL_VAR   ref    V13 tmp2         

***** BB01
STMT00009 (IL 0x026...0x02C)
               [000035] -AC---------              *  ASG       ref   
               [000034] D------N----              +--*  LCL_VAR   ref    V14 tmp3         
               [000033] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000032] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00082 (IL   ???...  ???)
               [000292] -ACXG-------              *  ASG       ref   
               [000291] ---XG--N----              +--*  FIELD     ref    _array
               [000287] ------------              |  \--*  LCL_VAR   ref    V14 tmp3         
               [000300] --CXG-------              \--*  COMMA     ref   
               [000299] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS
               [000297] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc7e0b0028
               [000298] ------------ arg1            |  \--*  CNS_INT   int    14
               [000295] ----G-------                 \--*  FIELD     ref    Value

***** BB01
STMT00011 (IL 0x02C...  ???)
               [000040] -A-XG-------              *  ASG       ref   
               [000039] ---XG--N----              +--*  FIELD     ref    queuedAnalyzers
               [000031] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000038] ------------              \--*  LCL_VAR   ref    V14 tmp3         

***** BB01
STMT00012 (IL 0x031...0x033)
               [000044] -A-XG-------              *  ASG       ref   
               [000043] ---XG--N----              +--*  FIELD     ref    progressReporter
               [000041] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000042] ------------              \--*  CNS_INT   ref    null

***** BB01
STMT00013 (IL 0x038...0x03E)
               [000049] -AC---------              *  ASG       ref   
               [000048] D------N----              +--*  LCL_VAR   ref    V15 tmp4         
               [000047] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000046] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00083 (IL   ???...  ???)
               [000303] --C-G-------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor
               [000050] ------------ this in rcx  +--*  LCL_VAR   ref    V15 tmp4         
               [000302] ------------ arg1         \--*  CNS_INT   ref    null

***** BB01
STMT00015 (IL 0x03E...  ???)
               [000054] -A-XG-------              *  ASG       ref   
               [000053] ---XG--N----              +--*  FIELD     ref    output
               [000045] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000052] ------------              \--*  LCL_VAR   ref    V15 tmp4         

***** BB01
STMT00086 (IL   ???...  ???)
               [000316] -AC-G-------              *  ASG       ref   
               [000315] D------N----              +--*  LCL_VAR   ref    V31 tmp20        
               [000055] --C-G-------              \--*  CALL      ref    System.Diagnostics.Process.GetCurrentProcess

***** BB01
STMT00087 (IL   ???...  ???)
               [000314] ---X--------              *  NULLCHECK byte  
               [000313] ------------              \--*  LCL_VAR   ref    V31 tmp20        

***** BB01
STMT00084 (IL   ???...  ???)
               [000308] --C-G-------              *  CALL      void   System.Diagnostics.Process.EnsureState
               [000306] ------------ this in rcx  +--*  LCL_VAR   ref    V31 tmp20        
               [000307] ------------ arg1         \--*  CNS_INT   int    3

***** BB01
STMT00088 (IL   ???...  ???)
               [000322] -ACXG-------              *  ASG       ref   
               [000321] D------N----              +--*  LCL_VAR   ref    V32 tmp21        
               [000311] --CXG-------              \--*  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule
               [000310] ---XG------- arg0            \--*  FIELD     int    _processId
               [000309] ------------                    \--*  LCL_VAR   ref    V31 tmp20        

***** BB01
STMT00019 (IL   ???...  ???)
               [000062] -AC---------              *  ASG       ref   
               [000061] D------N----              +--*  LCL_VAR   ref    V03 loc1         
               [000320] ---XG-------              \--*  FIELD     ref    <FileName>k__BackingField
               [000319] ------------                 \--*  LCL_VAR   ref    V32 tmp21        

***** BB01
STMT00090 (IL 0x053...  ???)
               [000333] ---X--------              *  NULLCHECK byte  
               [000332] ------------              \--*  LCL_VAR   ref    V03 loc1         

***** BB01
STMT00021 (IL   ???...  ???)
               [000069] -AC---------              *  ASG       int   
               [000068] D------N----              +--*  LCL_VAR   int    V04 loc2         
               [000331] --C---------              \--*  EQ        int   
               [000329] --C---------                 +--*  LT        int   
               [000340] --CXG-------                 |  +--*  CALL      int    System.String.IndexOf
               [000063] ------------ this in rcx     |  |  +--*  LCL_VAR   ref    V03 loc1         
               [000335] ------------ arg1            |  |  +--*  CNS_STR   ref   <string constant>
               [000336] ------------ arg2            |  |  +--*  CNS_INT   int    0
               [000338] ---X-------- arg3            |  |  +--*  ARR_LENGTH int   
               [000337] ------------                 |  |  |  \--*  LCL_VAR   ref    V03 loc1         
               [000339] ------------ arg4            |  |  \--*  CNS_INT   int    5
               [000328] ------------                 |  \--*  CNS_INT   int    0
               [000330] ------------                 \--*  CNS_INT   int    0

***** BB01
STMT00023 (IL   ???...  ???)
               [000075] -ACXG-------              *  ASG       ref   
               [000074] D------N----              +--*  LCL_VAR   ref    V05 loc3         
               [000073] --CXG-------              \--*  INDEX     ref   
               [000070] --C-G-------                 +--*  CALL      ref    System.Environment.GetCommandLineArgs
               [000072] ------------                 \--*  CNS_INT   int    0

***** BB01
STMT00024 (IL 0x068...0x06E)
               [000079] -AC-G-------              *  ASG       ref   
               [000078] D------N----              +--*  LCL_VAR   ref    V06 loc4         
               [000077] --C-G-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator
               [000076] ------------ this in rcx     \--*  LCL_VAR   ref    V00 arg0         

------------ BB02 [070..072) -> BB17 (always), preds={BB01} succs={BB17}

------------ BB03 [072..08B) -> BB05 (cond), preds={BB17} succs={BB04,BB05}

***** BB03
STMT00026 (IL 0x072...0x079)
               [000088] -AC-G-------              *  ASG       ref   
               [000087] D------N----              +--*  LCL_VAR   ref    V07 loc5         
               [000086] --C-G-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current
               [000085] ------------ this in rcx     \--*  LCL_VAR   ref    V06 loc4         

***** BB03
STMT00027 (IL 0x07B...0x089)
               [000092] -AC---------              *  ASG       ref   
               [000091] D------N----              +--*  LCL_VAR   ref    V16 tmp5         
               [000090] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000089] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB03
STMT00092 (IL 0x080...  ???)
               [000347] -A-XG-------              *  ASG       ref   
               [000346] ---XG--N----              +--*  FIELD     ref    _fileName
               [000096] ------------              |  \--*  LCL_VAR   ref    V16 tmp5         
               [000097] ------------              \--*  LCL_VAR   ref    V03 loc1         

***** BB03
STMT00031 (IL   ???...0x089)
               [000105] -A----------              *  ASG       ref   
               [000104] D------N----              +--*  LCL_VAR   ref    V17 tmp6         
               [000095] ------------              \--*  LCL_VAR   ref    V16 tmp5         

***** BB03
STMT00032 (IL   ???...  ???)
               [000108] -A----------              *  ASG       ref   
               [000107] D------N----              +--*  LCL_VAR   ref    V18 tmp7         
               [000099] ------------              \--*  LCL_VAR   ref    V16 tmp5         

***** BB03
STMT00030 (IL 0x087...  ???)
               [000103] ------------              *  JTRUE     void  
               [000102] ------------              \--*  NE        int   
               [000100] ------------                 +--*  LCL_VAR   int    V04 loc2         
               [000101] ------------                 \--*  CNS_INT   int    0

------------ BB04 [08B..08F) -> BB06 (always), preds={BB03} succs={BB06}

***** BB04
STMT00053 (IL   ???...0x08D)
               [000203] -A----------              *  ASG       ref   
               [000202] D------N----              +--*  LCL_VAR   ref    V19 tmp8         
               [000110] ------------              \--*  LCL_VAR   ref    V17 tmp6         

***** BB04
STMT00054 (IL   ???...  ???)
               [000206] -A----------              *  ASG       ref   
               [000205] D------N----              +--*  LCL_VAR   ref    V20 tmp9         
               [000111] ------------              \--*  LCL_VAR   ref    V18 tmp7         

***** BB04
STMT00055 (IL   ???...  ???)
               [000209] -A----------              *  ASG       ref   
               [000208] D------N----              +--*  LCL_VAR   ref    V21 tmp10        
               [000201] ------------              \--*  LCL_VAR   ref    V07 loc5         

------------ BB05 [08F..09C), preds={BB03} succs={BB06}

***** BB05
STMT00033 (IL   ???...0x097)
               [000119] -A----------              *  ASG       ref   
               [000118] D------N----              +--*  LCL_VAR   ref    V19 tmp8         
               [000112] ------------              \--*  LCL_VAR   ref    V17 tmp6         

***** BB05
STMT00034 (IL   ???...  ???)
               [000122] -A----------              *  ASG       ref   
               [000121] D------N----              +--*  LCL_VAR   ref    V20 tmp9         
               [000113] ------------              \--*  LCL_VAR   ref    V18 tmp7         

***** BB05
STMT00035 (IL   ???...  ???)
               [000125] -AC-G-------              *  ASG       ref   
               [000124] D------N----              +--*  LCL_VAR   ref    V21 tmp10        
               [000117] --C-G-------              \--*  CALL      ref    System.String.Concat
               [000114] ------------ arg0            +--*  LCL_VAR   ref    V05 loc3         
               [000115] ------------ arg1            +--*  CNS_STR   ref   <string constant>
               [000116] ------------ arg2            \--*  LCL_VAR   ref    V07 loc5         

------------ BB06 [09C..0BB) -> BB12 (cond), preds={BB04,BB05} succs={BB07,BB12}

***** BB06
STMT00093 (IL   ???...  ???)
               [000350] -A-XG-------              *  ASG       ref   
               [000349] ---XG--N----              +--*  FIELD     ref    _arguments
               [000128] ------------              |  \--*  LCL_VAR   ref    V20 tmp9         
               [000129] ------------              \--*  LCL_VAR   ref    V21 tmp10        

***** BB06
STMT00094 (IL 0x0A1...  ???)
               [000355] -A-XG-------              *  ASG       bool  
               [000354] ---XG--N----              +--*  FIELD     bool   <UseShellExecute>k__BackingField
               [000131] ------------              |  \--*  LCL_VAR   ref    V19 tmp8         
               [000353] ------------              \--*  CNS_INT   int    0

***** BB06
STMT00038 (IL 0x0A8...  ???)
               [000136] -A----------              *  ASG       ref   
               [000135] D------N----              +--*  LCL_VAR   ref    V08 loc6         
               [000127] ------------              \--*  LCL_VAR   ref    V19 tmp8         

***** BB06
STMT00040 (IL 0x0AA...0x0B9)
               [000145] -A-XG-------              *  ASG       ref   
               [000144] D------N----              +--*  LCL_VAR   ref    V23 tmp12        
               [000138] ---XG-------              \--*  FIELD     ref    queuedAnalyzers
               [000137] ------------                 \--*  LCL_VAR   ref    V02 loc0         

***** BB06
STMT00039 (IL 0x0AA...  ???)
               [000143] -A-XG-------              *  ASG       ref   
               [000142] D------N----              +--*  LCL_VAR   ref    V22 tmp11        
               [000141] ---XG-------              \--*  FIELD     ref    <>9__2
               [000140] ------------                 \--*  LCL_VAR   ref    V02 loc0         

***** BB06
STMT00042 (IL   ???...0x0B9)
               [000153] -A----------              *  ASG       ref   
               [000152] D------N----              +--*  LCL_VAR   ref    V24 tmp13        
               [000146] ------------              \--*  LCL_VAR   ref    V23 tmp12        

***** BB06
STMT00043 (IL   ???...  ???)
               [000156] -A----------              *  ASG       ref   
               [000155] D------N----              +--*  LCL_VAR   ref    V25 tmp14        
               [000139] ------------              \--*  LCL_VAR   ref    V08 loc6         

***** BB06
STMT00044 (IL   ???...  ???)
               [000159] -A----------              *  ASG       ref   
               [000158] D------N----              +--*  LCL_VAR   ref    V26 tmp15        
               [000147] ------------              \--*  LCL_VAR   ref    V22 tmp11        

***** BB06
STMT00041 (IL   ???...  ???)
               [000151] ------------              *  JTRUE     void  
               [000150] ------------              \--*  NE        int   
               [000148] ------------                 +--*  LCL_VAR   ref    V22 tmp11        
               [000149] ------------                 \--*  CNS_INT   ref    null

------------ BB07 [0BB..0D3), preds={BB06} succs={BB08}

***** BB07
STMT00048 (IL   ???...0x0CA)
               [000184] -AC---------              *  ASG       ref   
               [000183] D------N----              +--*  LCL_VAR   ref    V28 tmp17        
               [000182] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000181] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token

------------ BB08 [000..000) -> BB10 (cond), preds={BB07} succs={BB34,BB10}

***** BB08
STMT00095 (IL   ???...  ???)
               [000359] ------------              *  JTRUE     void  
               [000358] ------------              \--*  NE        int   
               [000179] ------------                 +--*  LCL_VAR   ref    V02 loc0         
               [000357] ------------                 \--*  CNS_INT   ref    null

------------ BB34 [???..???) -> BB14 (always), preds={BB08} succs={BB14}

------------ BB09 [000..000), preds={} succs={BB10}

***** BB09
STMT00098 (IL   ???...  ???)
               [000367] --C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

------------ BB10 [000..000), preds={BB08,BB09} succs={BB11}

***** BB10
STMT00096 (IL   ???...  ???)
               [000362] -A-XG-------              *  ASG       ref   
               [000361] ---XG--N----              +--*  FIELD     ref    _target
               [000185] ------------              |  \--*  LCL_VAR   ref    V28 tmp17        
               [000360] ------------              \--*  LCL_VAR   ref    V02 loc0         

***** BB10
STMT00097 (IL   ???...  ???)
               [000366] -A-XG-------              *  ASG       long  
               [000365] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000363] ------------              |  \--*  LCL_VAR   ref    V28 tmp17        
               [000180] ------------              \--*  FTN_ADDR  long   <>c__DisplayClass5_0.<ExecuteAnalyzers>b__2


------------ BB11 [???..???), preds={BB10} succs={BB12}

***** BB11
STMT00050 (IL 0x0C9...  ???)
               [000190] -A----------              *  ASG       ref   
               [000189] D------N----              +--*  LCL_VAR   ref    V09 loc7         
               [000188] ------------              \--*  LCL_VAR   ref    V28 tmp17        

***** BB11
STMT00051 (IL   ???...0x0CC)
               [000192] -A-XG-------              *  ASG       ref   
               [000191] ---XG--N----              +--*  FIELD     ref    <>9__2
               [000178] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000187] ------------              \--*  LCL_VAR   ref    V28 tmp17        

***** BB11
STMT00052 (IL   ???...0x0D1)
               [000199] -A----------              *  ASG       ref   
               [000198] D------N----              +--*  LCL_VAR   ref    V26 tmp15        
               [000193] ------------              \--*  LCL_VAR   ref    V09 loc7         

------------ BB12 [0D3..0E9), preds={BB06,BB11} succs={BB13}

***** BB12
STMT00045 (IL   ???...0x0E4)
               [000172] -AC---------              *  ASG       ref   
               [000171] D------N----              +--*  LCL_VAR   ref    V27 tmp16        
               [000170] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000169] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token

------------ BB13 [000..000) -> BB15 (cond), preds={BB12} succs={BB14,BB15}

***** BB13
STMT00099 (IL   ???...  ???)
               [000371] ------------              *  JTRUE     void  
               [000370] ------------              \--*  NE        int   
               [000167] ------------                 +--*  LCL_VAR   ref    V02 loc0         
               [000369] ------------                 \--*  CNS_INT   ref    null

------------ BB14 [000..000), preds={BB13,BB34} succs={BB15}

***** BB14
STMT00102 (IL   ???...  ???)
               [000379] --C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

------------ BB15 [000..000), preds={BB13,BB14} succs={BB16}

***** BB15
STMT00100 (IL   ???...  ???)
               [000374] -A-XG-------              *  ASG       ref   
               [000373] ---XG--N----              +--*  FIELD     ref    _target
               [000173] ------------              |  \--*  LCL_VAR   ref    V27 tmp16        
               [000372] ------------              \--*  LCL_VAR   ref    V02 loc0         

***** BB15
STMT00101 (IL   ???...  ???)
               [000378] -A-XG-------              *  ASG       long  
               [000377] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000375] ------------              |  \--*  LCL_VAR   ref    V27 tmp16        
               [000168] ------------              \--*  FTN_ADDR  long   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__OnAnalyzerFinished|1


------------ BB16 [???..???), preds={BB15} succs={BB17}

***** BB16
STMT00047 (IL 0x0DF...  ???)
               [000177] --C-G-------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue
               [000164] ------------ this in rcx  +--*  LCL_VAR   ref    V24 tmp13        
               [000176] --C-G------- arg1         \--*  CALL      ref    SolutionAnalyzer.IPC.CreateSession
               [000165] ------------ arg0            +--*  LCL_VAR   ref    V25 tmp14        
               [000166] ------------ arg1            +--*  LCL_VAR   ref    V26 tmp15        
               [000175] ------------ arg2            \--*  LCL_VAR   ref    V27 tmp16        

------------ BB17 [0E9..0F2) -> BB03 (cond), preds={BB02,BB16} succs={BB18,BB03}

***** BB17
STMT00025 (IL 0x0E9...0x0F0)
               [000084] --C-G-------              *  JTRUE     void  
               [000083] --C-G-------              \--*  NE        int   
               [000081] --C-G-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext
               [000080] ------------ this in rcx     |  \--*  LCL_VAR   ref    V06 loc4         
               [000082] ------------                 \--*  CNS_INT   int    0

------------ BB18 [0F2..0F4) -> BB19 (always), preds={BB17} succs={BB19}

------------ BB19 [???..???), preds={BB18} succs={BB20}

------------ BB20 [0F4..0F8) -> BB22 (cond), preds={BB19} succs={BB21,BB22}

***** BB20
STMT00116 (IL   ???...  ???)
               [000431] ------------              *  JTRUE     void  
               [000432] ------------              \--*  EQ        int   
               [000433] ------------                 +--*  LCL_VAR   ref    V06 loc4         
               [000434] ------------                 \--*  CNS_INT   ref    null

------------ BB21 [0F8..0FF), preds={BB20} succs={BB22}

***** BB21
STMT00117 (IL   ???...  ???)
               [000435] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose
               [000436] ------------ this in rcx  \--*  LCL_VAR   ref    V06 loc4         

------------ BB22 [0FF..100) -> BB26 (always), preds={BB20,BB21} succs={BB26}

------------ BB23 [0F4..0F8) -> BB25 (cond), preds={} succs={BB24,BB25}

***** BB23
STMT00069 (IL 0x0F4...0x0F6)
               [000257] ------------              *  JTRUE     void  
               [000256] ------------              \--*  EQ        int   
               [000254] ------------                 +--*  LCL_VAR   ref    V06 loc4         
               [000255] ------------                 \--*  CNS_INT   ref    null

------------ BB24 [0F8..0FF), preds={BB23} succs={BB25}

***** BB24
STMT00071 (IL 0x0F8...0x0FA)
               [000260] --C-G-------              *  CALLV stub void   System.IDisposable.Dispose
               [000259] ------------ this in rcx  \--*  LCL_VAR   ref    V06 loc4         

------------ BB25 [0FF..100) (finret), preds={BB23,BB24} succs={}

***** BB25
STMT00070 (IL 0x0FF...0x0FF)
               [000258] ------------              *  RETFILT   void  

------------ BB26 [100..127) -> BB28 (always), preds={BB22} succs={BB28}

***** BB26
STMT00103 (IL 0x100...  ???)
               [000384] -A-XG-------              *  ASG       ref   
               [000383] D------N----              +--*  LCL_VAR   ref    V35 tmp24        
               [000213] ---XG-------              \--*  FIELD     ref    queuedAnalyzers
               [000212] ------------                 \--*  LCL_VAR   ref    V02 loc0         

***** BB26
STMT00057 (IL   ???...  ???)
               [000217] -ACXG-------              *  ASG       int   
               [000216] ---XG--N----              +--*  FIELD     int    analyzerCount
               [000211] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000382] ---XG-------              \--*  FIELD     int    _size
               [000381] ------------                 \--*  LCL_VAR   ref    V35 tmp24        

***** BB26
STMT00058 (IL 0x111...0x11D)
               [000224] -AC---------              *  ASG       ref   
               [000223] D------N----              +--*  LCL_VAR   ref    V29 tmp18        
               [000222] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000221] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB26
STMT00109 (IL   ???...  ???)
               [000402] -A-XG-------              *  ASG       int   
               [000401] D------N----              +--*  LCL_VAR   int    V37 tmp26        
               [000220] ---XG-------              \--*  FIELD     int    analyzerCount
               [000219] ------------                 \--*  LCL_VAR   ref    V02 loc0         

***** BB26
STMT00104 (IL   ???...  ???)
               [000389] -AC---------              *  ASG       ref   
               [000388] D------N----              +--*  LCL_VAR   ref    V36 tmp25        
               [000387] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000386] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB26
STMT00110 (IL   ???...  ???)
               [000406] --C-G-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor
               [000390] ------------ this in rcx  +--*  LCL_VAR   ref    V36 tmp25        
               [000404] ------------ arg1         +--*  CNS_INT   int    0
               [000405] ------------ arg2         \--*  CNS_INT   ref    null

***** BB26
STMT00106 (IL   ???...  ???)
               [000394] -A-XG-------              *  ASG       ref   
               [000393] ---XG--N----              +--*  FIELD     ref    _workItems
               [000225] ------------              |  \--*  LCL_VAR   ref    V29 tmp18        
               [000392] ------------              \--*  LCL_VAR   ref    V36 tmp25        

***** BB26
STMT00108 (IL   ???...  ???)
               [000400] -A-XG-------              *  ASG       int   
               [000399] ---XG--N----              +--*  FIELD     int    _workItemsToComplete
               [000397] ------------              |  \--*  LCL_VAR   ref    V29 tmp18        
               [000398] ------------              \--*  LCL_VAR   int    V37 tmp26        

***** BB26
STMT00060 (IL 0x11D...  ???)
               [000229] -A-XG-------              *  ASG       ref   
               [000228] ---XG--N----              +--*  FIELD     ref    progressReporter
               [000218] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000227] ------------              \--*  LCL_VAR   ref    V29 tmp18        

***** BB26
STMT00061 (IL 0x122...0x123)
               [000232] -A----------              *  ASG       int   
               [000231] D------N----              +--*  LCL_VAR   int    V10 loc8         
               [000230] ------------              \--*  CNS_INT   int    0

------------ BB27 [127..133), preds={BB32} succs={BB28}

***** BB27
STMT00065 (IL 0x127...0x131)
               [000243] --C-G-------              *  CALL nullcheck void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0
               [000242] ------------ this in rcx  \--*  LCL_VAR   ref    V02 loc0         

***** BB27
STMT00066 (IL 0x12D...  ???)
               [000248] -A----------              *  ASG       int   
               [000247] D------N----              +--*  LCL_VAR   int    V10 loc8         
               [000246] ------------              \--*  ADD       int   
               [000244] ------------                 +--*  LCL_VAR   int    V10 loc8         
               [000245] ------------                 \--*  CNS_INT   int    1

------------ BB28 [133..147), preds={BB26,BB27} succs={BB29}

***** BB28
STMT00114 (IL   ???...  ???)
               [000424] -A-XG-------              *  ASG       int   
               [000423] D------N----              +--*  LCL_VAR   int    V39 tmp28        
               [000237] ---XG-------              \--*  FIELD     int    analyzerCount
               [000236] ------------                 \--*  LCL_VAR   ref    V02 loc0         

------------ BB29 [000..000) -> BB31 (cond), preds={BB28} succs={BB30,BB31}

***** BB29
STMT00111 (IL   ???...  ???)
               [000414] ------------              *  JTRUE     void  
               [000413] ------------              \--*  LE        int   
               [000411] ------------                 +--*  CNS_INT   int    8
               [000412] ------------                 \--*  LCL_VAR   int    V39 tmp28        

------------ BB30 [000..000) -> BB32 (always), preds={BB29} succs={BB32}

***** BB30
STMT00113 (IL   ???...  ???)
               [000421] -A----------              *  ASG       int   
               [000420] D------N----              +--*  LCL_VAR   int    V38 tmp27        
               [000419] ------------              \--*  LCL_VAR   int    V39 tmp28        

------------ BB31 [000..000), preds={BB29} succs={BB32}

***** BB31
STMT00112 (IL   ???...  ???)
               [000417] -A----------              *  ASG       int   
               [000416] D------N----              +--*  LCL_VAR   int    V38 tmp27        
               [000415] ------------              \--*  CNS_INT   int    8

------------ BB32 [???..???) -> BB27 (cond), preds={BB30,BB31} succs={BB33,BB27}

***** BB32
STMT00064 (IL   ???...  ???)
               [000241] --C---------              *  JTRUE     void  
               [000240] --C---------              \--*  LT        int   
               [000233] ------------                 +--*  LCL_VAR   int    V10 loc8         
               [000422] ------------                 \--*  LCL_VAR   int    V38 tmp27        

------------ BB33 [147..153) (return), preds={BB32} succs={}

***** BB33
STMT00115 (IL 0x147...  ???)
               [000429] -A-XG-------              *  ASG       ref   
               [000428] D------N----              +--*  LCL_VAR   ref    V40 tmp29        
               [000250] ---XG-------              \--*  FIELD     ref    allAnalyzersHaveRun
               [000249] ------------                 \--*  LCL_VAR   ref    V02 loc0         

***** BB33
STMT00068 (IL   ???...  ???)
               [000253] --C---------              *  RETURN    ref   
               [000427] ---XG-------              \--*  FIELD     ref    _task
               [000426] ------------                 \--*  LCL_VAR   ref    V40 tmp29        

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Update flow graph early pass

*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB17 (always) T0      try {       keep i try label 
BB03 [0002]  1  0    BB17                  1       [072..08B)-> BB05 ( cond ) T0                  i label target newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  1       [08B..08F)-> BB06 (always) T0                  i bwd 
BB05 [0004]  1  0    BB03                  1       [08F..09C)                 T0                  i label target bwd 
BB06 [0005]  2  0    BB04,BB05             1       [09C..0BB)-> BB12 ( cond ) T0                  i label target bwd 
BB07 [0006]  1  0    BB06                  1       [0BB..0D3)                 T0                  i newobj bwd 
BB08 [0039]  1  0    BB07                  1       [000..000)-> BB10 ( cond ) T0                  i internal bwd 
BB34 [0060]  1  0    BB08                  1       [???..???)-> BB14 (always) T0                  internal 
BB09 [0040]  0  0                          0.50    [000..000)                 T0                  i internal bwd 
BB10 [0041]  2  0    BB08,BB09             1       [000..000)                 T0                  i internal label target bwd 
BB11 [0042]  1  0    BB10                  1       [???..???)                 T0                  internal newobj bwd 
BB12 [0007]  2  0    BB06,BB11             1       [0D3..0E9)                 T0                  i label target newobj bwd 
BB13 [0043]  1  0    BB12                  1       [000..000)-> BB15 ( cond ) T0                  i internal bwd 
BB14 [0044]  2  0    BB13,BB34             0.50    [000..000)                 T0                  i internal label target bwd 
BB15 [0045]  2  0    BB13,BB14             1       [000..000)                 T0                  i internal label target bwd 
BB16 [0046]  1  0    BB15                  1       [???..???)                 T0                  internal newobj bwd 
BB17 [0008]  2  0    BB02,BB16             1       [0E9..0F2)-> BB03 ( cond ) T0                  i label target bwd 
BB18 [0009]  1  0    BB17                  1       [0F2..0F4)-> BB19 (always) T0      }           i 
BB19 [0017]  1       BB18                  1       [???..???)                                     i internal label target 
BB20 [0057]  1       BB19                  1       [0F4..0F8)-> BB22 ( cond )                     keep i label target cfb 
BB21 [0058]  1       BB20                  1       [0F8..0FF)                                     i 
BB22 [0059]  2       BB20,BB21             1       [0FF..100)-> BB26 (always)                     i label target cfe 
BB23 [0010]  1     0                       1       [0F4..0F8)-> BB25 ( cond )    H0   fault {     keep i label target 
BB24 [0011]  1     0 BB23                  1       [0F8..0FF)                    H0               i 
BB25 [0012]  2     0 BB23,BB24             1       [0FF..100)        (finret)    H0   }           i label target 
BB26 [0013]  1       BB22                  1       [100..127)-> BB28 (always)                     i label target newobj 
BB27 [0014]  1       BB32                  1       [127..133)                                     i label target bwd bwd-target 
BB28 [0015]  2       BB26,BB27             1       [133..147)                                     i label target bwd 
BB29 [0052]  1       BB28                  1       [000..000)-> BB31 ( cond )                     i internal bwd 
BB30 [0053]  1       BB29                  1       [000..000)-> BB32 (always)                     i internal bwd 
BB31 [0054]  1       BB29                  1       [000..000)                                     i internal label target bwd 
BB32 [0055]  2       BB30,BB31             1       [???..???)-> BB27 ( cond )                     internal label target bwd 
BB33 [0016]  1       BB32                  1       [147..153)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------


Compacting blocks BB07 and BB08:
*************** In fgDebugCheckBBlist
fgRemoveBlock BB09

Removing unreachable BB09

Removing statement STMT00098 (IL   ???...  ???)
               [000367] --C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance
 in BB09 as useless:

BB09 becomes empty

Compacting blocks BB10 and BB11:
*************** In fgDebugCheckBBlist

Compacting blocks BB12 and BB13:
*************** In fgDebugCheckBBlist

Compacting blocks BB15 and BB16:
*************** In fgDebugCheckBBlist

Removing unconditional jump to next block (BB18 -> BB19) (converted BB18 to fall-through)
fgRemoveBlock BB18
Removing empty BB18
EH#0: New last block of try: BB17
fgRemoveBlock BB19
Removing empty BB19

Optimizing a jump to an unconditional jump (BB20 -> BB22 -> BB26)

Compacting blocks BB21 and BB22:
*************** In fgDebugCheckBBlist

Compacting blocks BB28 and BB29:
*************** In fgDebugCheckBBlist

Reversing a conditional jump around an unconditional jump (BB07 -> BB10 -> BB14)

After reversing the jump:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB17 (always) T0      try {       keep i try label 
BB03 [0002]  1  0    BB17                  1       [072..08B)-> BB05 ( cond ) T0                  i label target newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  1       [08B..08F)-> BB06 (always) T0                  i bwd 
BB05 [0004]  1  0    BB03                  1       [08F..09C)                 T0                  i label target bwd 
BB06 [0005]  2  0    BB04,BB05             1       [09C..0BB)-> BB12 ( cond ) T0                  i label target bwd 
BB07 [0006]  1  0    BB06                  1       [000..0D3)-> BB14 ( cond ) T0                  i newobj bwd 
BB10 [0041]  1  0    BB07                  1       [000..000)                 T0                  i internal label target newobj bwd 
BB12 [0007]  2  0    BB06,BB10             1       [000..0E9)-> BB15 ( cond ) T0                  i label target newobj bwd 
BB14 [0044]  2  0    BB07,BB12             0.50    [000..000)                 T0                  i internal label target bwd 
BB15 [0045]  2  0    BB12,BB14             1       [000..000)                 T0                  i internal label target newobj bwd 
BB17 [0008]  2  0    BB02,BB15             1       [0E9..0F2)-> BB03 ( cond ) T0      }           i label target bwd 
BB20 [0057]  1       BB17                  1       [0F4..0F8)-> BB26 ( cond )                     keep i label target cfb 
BB21 [0058]  1       BB20                  1       [0F8..100)-> BB26 (always)                     i 
BB23 [0010]  1     0                       1       [0F4..0F8)-> BB25 ( cond )    H0   fault {     keep i label target 
BB24 [0011]  1     0 BB23                  1       [0F8..0FF)                    H0               i 
BB25 [0012]  2     0 BB23,BB24             1       [0FF..100)        (finret)    H0   }           i label target 
BB26 [0013]  2       BB20,BB21             1       [100..127)-> BB28 (always)                     i label target newobj 
BB27 [0014]  1       BB32                  1       [127..133)                                     i label target bwd bwd-target 
BB28 [0015]  2       BB26,BB27             1       [000..147)-> BB31 ( cond )                     i label target bwd 
BB30 [0053]  1       BB28                  1       [000..000)-> BB32 (always)                     i internal bwd 
BB31 [0054]  1       BB28                  1       [000..000)                                     i internal label target bwd 
BB32 [0055]  2       BB30,BB31             1       [???..???)-> BB27 ( cond )                     internal label target bwd 
BB33 [0016]  1       BB32                  1       [147..153)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

After updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB17 (always) T0      try {       keep i try label 
BB03 [0002]  1  0    BB17                  1       [072..08B)-> BB05 ( cond ) T0                  i label target newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  1       [08B..08F)-> BB06 (always) T0                  i bwd 
BB05 [0004]  1  0    BB03                  1       [08F..09C)                 T0                  i label target bwd 
BB06 [0005]  2  0    BB04,BB05             1       [09C..0BB)-> BB12 ( cond ) T0                  i label target bwd 
BB07 [0006]  1  0    BB06                  1       [000..0D3)-> BB14 ( cond ) T0                  i newobj bwd 
BB10 [0041]  1  0    BB07                  1       [000..000)                 T0                  i internal label target newobj bwd 
BB12 [0007]  2  0    BB06,BB10             1       [000..0E9)-> BB15 ( cond ) T0                  i label target newobj bwd 
BB14 [0044]  2  0    BB07,BB12             0.50    [000..000)                 T0                  i internal label target bwd 
BB15 [0045]  2  0    BB12,BB14             1       [000..000)                 T0                  i internal label target newobj bwd 
BB17 [0008]  2  0    BB02,BB15             1       [0E9..0F2)-> BB03 ( cond ) T0      }           i label target bwd 
BB20 [0057]  1       BB17                  1       [0F4..0F8)-> BB26 ( cond )                     keep i label target cfb 
BB21 [0058]  1       BB20                  1       [0F8..100)-> BB26 (always)                     i 
BB23 [0010]  1     0                       1       [0F4..0F8)-> BB25 ( cond )    H0   fault {     keep i label target 
BB24 [0011]  1     0 BB23                  1       [0F8..0FF)                    H0               i 
BB25 [0012]  2     0 BB23,BB24             1       [0FF..100)        (finret)    H0   }           i label target 
BB26 [0013]  2       BB20,BB21             1       [100..127)-> BB28 (always)                     i label target newobj 
BB27 [0014]  1       BB32                  1       [127..133)                                     i label target bwd bwd-target 
BB28 [0015]  2       BB26,BB27             1       [000..147)-> BB31 ( cond )                     i label target bwd 
BB30 [0053]  1       BB28                  1       [000..000)-> BB32 (always)                     i internal bwd 
BB31 [0054]  1       BB28                  1       [000..000)                                     i internal label target bwd 
BB32 [0055]  2       BB30,BB31             1       [???..???)-> BB27 ( cond )                     internal label target bwd 
BB33 [0016]  1       BB32                  1       [147..153)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB02..BB17 [070..0F4), Fault   at BB23..BB25 [0F4..100)
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Update flow graph early pass

*************** Starting PHASE Morph - Promote Structs

*************** In fgResetImplicitByRefRefCount()
*************** In fgPromoteStructs()

lvaTable before fgPromoteStructs
; Initial local variable assignments
;
;  V00 arg0              ref  class-hnd
;  V01 arg1              ref  class-hnd
;  V02 loc0              ref  class-hnd exact
;  V03 loc1              ref  class-hnd
;  V04 loc2             bool 
;  V05 loc3              ref  class-hnd
;  V06 loc4              ref  class-hnd
;  V07 loc5              ref  class-hnd
;  V08 loc6              ref  class-hnd
;  V09 loc7              ref  class-hnd exact
;  V10 loc8              int 
;  V11 OutArgs        lclBlk <na>  "OutgoingArgSpace"
;  V12 tmp1              ref  class-hnd exact "NewObj constructor temp"
;  V13 tmp2              ref  class-hnd exact "NewObj constructor temp"
;  V14 tmp3              ref  class-hnd exact "NewObj constructor temp"
;  V15 tmp4              ref  class-hnd exact "NewObj constructor temp"
;  V16 tmp5              ref  class-hnd exact "NewObj constructor temp"
;  V17 tmp6              ref 
;  V18 tmp7              ref 
;  V19 tmp8              ref 
;  V20 tmp9              ref 
;  V21 tmp10             ref 
;  V22 tmp11             ref  class-hnd "dup spill"
;  V23 tmp12             ref  class-hnd "impAppendStmt"
;  V24 tmp13             ref 
;  V25 tmp14             ref 
;  V26 tmp15             ref 
;  V27 tmp16             ref  class-hnd exact "NewObj constructor temp"
;  V28 tmp17             ref  class-hnd exact "NewObj constructor temp"
;  V29 tmp18             ref  class-hnd exact "NewObj constructor temp"
;  V30 tmp19             ref  class-hnd exact "NewObj constructor temp"
;  V31 tmp20             ref  class-hnd "Inlining Arg"
;  V32 tmp21             ref  class-hnd "Inlining Arg"
;  V33 tmp22            long  "Inlining Arg"
;  V34 tmp23            long  "Inlining Arg"
;  V35 tmp24             ref  class-hnd "Inlining Arg"
;  V36 tmp25             ref  class-hnd exact "NewObj constructor temp"
;  V37 tmp26             int  "Inlining Arg"
;  V38 tmp27             int  "Inline return value spill temp"
;  V39 tmp28             int  "Inlining Arg"
;  V40 tmp29             ref  class-hnd "Inlining Arg"

lvaTable after fgPromoteStructs
; Initial local variable assignments
;
;  V00 arg0              ref  class-hnd
;  V01 arg1              ref  class-hnd
;  V02 loc0              ref  class-hnd exact
;  V03 loc1              ref  class-hnd
;  V04 loc2             bool 
;  V05 loc3              ref  class-hnd
;  V06 loc4              ref  class-hnd
;  V07 loc5              ref  class-hnd
;  V08 loc6              ref  class-hnd
;  V09 loc7              ref  class-hnd exact
;  V10 loc8              int 
;  V11 OutArgs        lclBlk <na>  "OutgoingArgSpace"
;  V12 tmp1              ref  class-hnd exact "NewObj constructor temp"
;  V13 tmp2              ref  class-hnd exact "NewObj constructor temp"
;  V14 tmp3              ref  class-hnd exact "NewObj constructor temp"
;  V15 tmp4              ref  class-hnd exact "NewObj constructor temp"
;  V16 tmp5              ref  class-hnd exact "NewObj constructor temp"
;  V17 tmp6              ref 
;  V18 tmp7              ref 
;  V19 tmp8              ref 
;  V20 tmp9              ref 
;  V21 tmp10             ref 
;  V22 tmp11             ref  class-hnd "dup spill"
;  V23 tmp12             ref  class-hnd "impAppendStmt"
;  V24 tmp13             ref 
;  V25 tmp14             ref 
;  V26 tmp15             ref 
;  V27 tmp16             ref  class-hnd exact "NewObj constructor temp"
;  V28 tmp17             ref  class-hnd exact "NewObj constructor temp"
;  V29 tmp18             ref  class-hnd exact "NewObj constructor temp"
;  V30 tmp19             ref  class-hnd exact "NewObj constructor temp"
;  V31 tmp20             ref  class-hnd "Inlining Arg"
;  V32 tmp21             ref  class-hnd "Inlining Arg"
;  V33 tmp22            long  "Inlining Arg"
;  V34 tmp23            long  "Inlining Arg"
;  V35 tmp24             ref  class-hnd "Inlining Arg"
;  V36 tmp25             ref  class-hnd exact "NewObj constructor temp"
;  V37 tmp26             int  "Inlining Arg"
;  V38 tmp27             int  "Inline return value spill temp"
;  V39 tmp28             int  "Inlining Arg"
;  V40 tmp29             ref  class-hnd "Inlining Arg"

*************** Finishing PHASE Morph - Promote Structs

*************** Starting PHASE Morph - Structs/AddrExp

*************** In fgMarkAddressExposedLocals()
LocalAddressVisitor visiting statement:
STMT00000 (IL 0x000...0x005)
               [000003] -AC---------              *  ASG       ref   
               [000002] D------N----              +--*  LCL_VAR   ref    V12 tmp1         
               [000001] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000000] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e method

LocalAddressVisitor visiting statement:
STMT00002 (IL 0x005...  ???)
               [000008] -A----------              *  ASG       ref   
               [000007] D------N----              +--*  LCL_VAR   ref    V02 loc0         
               [000006] ------------              \--*  LCL_VAR   ref    V12 tmp1         

LocalAddressVisitor visiting statement:
STMT00003 (IL 0x006...0x008)
               [000012] -A-XG-------              *  ASG       ref   
               [000011] ---XG--N----              +--*  FIELD     ref    outputFile
               [000009] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000010] ------------              \--*  LCL_VAR   ref    V01 arg1         

LocalAddressVisitor visiting statement:
STMT00004 (IL 0x00D...0x00F)
               [000016] -A-XG-------              *  ASG       int   
               [000015] ---XG--N----              +--*  FIELD     int    analyzerCount
               [000013] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000014] ------------              \--*  CNS_INT   int    0

LocalAddressVisitor visiting statement:
STMT00005 (IL 0x014...0x016)
               [000020] -A-XG-------              *  ASG       int   
               [000019] ---XG--N----              +--*  FIELD     int    analyzersFinishedCount
               [000017] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000018] ------------              \--*  CNS_INT   int    0

LocalAddressVisitor visiting statement:
STMT00006 (IL 0x01B...0x021)
               [000025] -AC---------              *  ASG       ref   
               [000024] D------N----              +--*  LCL_VAR   ref    V13 tmp2         
               [000023] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000022] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token

LocalAddressVisitor visiting statement:
STMT00074 (IL   ???...  ???)
               [000269] -AC---------              *  ASG       ref   
               [000268] D------N----              +--*  LCL_VAR   ref    V30 tmp19        
               [000267] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000266] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token

LocalAddressVisitor visiting statement:
STMT00079 (IL   ???...  ???)
               [000283] -A-XGO------              *  ASG       int   
               [000282] V--XGO-N----              +--*  FIELD     int    m_stateFlags
               [000280] ------------              |  \--*  LCL_VAR   ref    V30 tmp19        
               [000281] ------------              \--*  CNS_INT   int    0x2000400

LocalAddressVisitor visiting statement:
STMT00076 (IL   ???...  ???)
               [000274] -A-XG-------              *  ASG       ref   
               [000273] ---XG--N----              +--*  FIELD     ref    _task
               [000265] ------------              |  \--*  LCL_VAR   ref    V13 tmp2         
               [000272] ------------              \--*  LCL_VAR   ref    V30 tmp19        

LocalAddressVisitor visiting statement:
STMT00008 (IL 0x021...  ???)
               [000030] -A-XG-------              *  ASG       ref   
               [000029] ---XG--N----              +--*  FIELD     ref    allAnalyzersHaveRun
               [000021] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000028] ------------              \--*  LCL_VAR   ref    V13 tmp2         

LocalAddressVisitor visiting statement:
STMT00009 (IL 0x026...0x02C)
               [000035] -AC---------              *  ASG       ref   
               [000034] D------N----              +--*  LCL_VAR   ref    V14 tmp3         
               [000033] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000032] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token

LocalAddressVisitor visiting statement:
STMT00082 (IL   ???...  ???)
               [000292] -ACXG-------              *  ASG       ref   
               [000291] ---XG--N----              +--*  FIELD     ref    _array
               [000287] ------------              |  \--*  LCL_VAR   ref    V14 tmp3         
               [000300] --CXG-------              \--*  COMMA     ref   
               [000299] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS
               [000297] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc7e0b0028
               [000298] ------------ arg1            |  \--*  CNS_INT   int    14
               [000295] ----G-------                 \--*  FIELD     ref    Value

LocalAddressVisitor visiting statement:
STMT00011 (IL 0x02C...  ???)
               [000040] -A-XG-------              *  ASG       ref   
               [000039] ---XG--N----              +--*  FIELD     ref    queuedAnalyzers
               [000031] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000038] ------------              \--*  LCL_VAR   ref    V14 tmp3         

LocalAddressVisitor visiting statement:
STMT00012 (IL 0x031...0x033)
               [000044] -A-XG-------              *  ASG       ref   
               [000043] ---XG--N----              +--*  FIELD     ref    progressReporter
               [000041] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000042] ------------              \--*  CNS_INT   ref    null

LocalAddressVisitor visiting statement:
STMT00013 (IL 0x038...0x03E)
               [000049] -AC---------              *  ASG       ref   
               [000048] D------N----              +--*  LCL_VAR   ref    V15 tmp4         
               [000047] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000046] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token

LocalAddressVisitor visiting statement:
STMT00083 (IL   ???...  ???)
               [000303] --C-G-------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor
               [000050] ------------ this in rcx  +--*  LCL_VAR   ref    V15 tmp4         
               [000302] ------------ arg1         \--*  CNS_INT   ref    null

LocalAddressVisitor visiting statement:
STMT00015 (IL 0x03E...  ???)
               [000054] -A-XG-------              *  ASG       ref   
               [000053] ---XG--N----              +--*  FIELD     ref    output
               [000045] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000052] ------------              \--*  LCL_VAR   ref    V15 tmp4         

LocalAddressVisitor visiting statement:
STMT00086 (IL   ???...  ???)
               [000316] -AC-G-------              *  ASG       ref   
               [000315] D------N----              +--*  LCL_VAR   ref    V31 tmp20        
               [000055] --C-G-------              \--*  CALL      ref    System.Diagnostics.Process.GetCurrentProcess

LocalAddressVisitor visiting statement:
STMT00087 (IL   ???...  ???)
               [000314] ---X--------              *  NULLCHECK byte  
               [000313] ------------              \--*  LCL_VAR   ref    V31 tmp20        

LocalAddressVisitor visiting statement:
STMT00084 (IL   ???...  ???)
               [000308] --C-G-------              *  CALL      void   System.Diagnostics.Process.EnsureState
               [000306] ------------ this in rcx  +--*  LCL_VAR   ref    V31 tmp20        
               [000307] ------------ arg1         \--*  CNS_INT   int    3

LocalAddressVisitor visiting statement:
STMT00088 (IL   ???...  ???)
               [000322] -ACXG-------              *  ASG       ref   
               [000321] D------N----              +--*  LCL_VAR   ref    V32 tmp21        
               [000311] --CXG-------              \--*  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule
               [000310] ---XG------- arg0            \--*  FIELD     int    _processId
               [000309] ------------                    \--*  LCL_VAR   ref    V31 tmp20        

LocalAddressVisitor visiting statement:
STMT00019 (IL   ???...  ???)
               [000062] -AC---------              *  ASG       ref   
               [000061] D------N----              +--*  LCL_VAR   ref    V03 loc1         
               [000320] ---XG-------              \--*  FIELD     ref    <FileName>k__BackingField
               [000319] ------------                 \--*  LCL_VAR   ref    V32 tmp21        

LocalAddressVisitor visiting statement:
STMT00090 (IL 0x053...  ???)
               [000333] ---X--------              *  NULLCHECK byte  
               [000332] ------------              \--*  LCL_VAR   ref    V03 loc1         

LocalAddressVisitor visiting statement:
STMT00021 (IL   ???...  ???)
               [000069] -AC---------              *  ASG       int   
               [000068] D------N----              +--*  LCL_VAR   int    V04 loc2         
               [000331] --C---------              \--*  EQ        int   
               [000329] --C---------                 +--*  LT        int   
               [000340] --CXG-------                 |  +--*  CALL      int    System.String.IndexOf
               [000063] ------------ this in rcx     |  |  +--*  LCL_VAR   ref    V03 loc1         
               [000335] ------------ arg1            |  |  +--*  CNS_STR   ref   <string constant>
               [000336] ------------ arg2            |  |  +--*  CNS_INT   int    0
               [000338] ---X-------- arg3            |  |  +--*  ARR_LENGTH int   
               [000337] ------------                 |  |  |  \--*  LCL_VAR   ref    V03 loc1         
               [000339] ------------ arg4            |  |  \--*  CNS_INT   int    5
               [000328] ------------                 |  \--*  CNS_INT   int    0
               [000330] ------------                 \--*  CNS_INT   int    0

LocalAddressVisitor visiting statement:
STMT00023 (IL   ???...  ???)
               [000075] -ACXG-------              *  ASG       ref   
               [000074] D------N----              +--*  LCL_VAR   ref    V05 loc3         
               [000073] --CXG-------              \--*  INDEX     ref   
               [000070] --C-G-------                 +--*  CALL      ref    System.Environment.GetCommandLineArgs
               [000072] ------------                 \--*  CNS_INT   int    0

LocalAddressVisitor visiting statement:
STMT00024 (IL 0x068...0x06E)
               [000079] -AC-G-------              *  ASG       ref   
               [000078] D------N----              +--*  LCL_VAR   ref    V06 loc4         
               [000077] --C-G-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator
               [000076] ------------ this in rcx     \--*  LCL_VAR   ref    V00 arg0         

LocalAddressVisitor visiting statement:
STMT00026 (IL 0x072...0x079)
               [000088] -AC-G-------              *  ASG       ref   
               [000087] D------N----              +--*  LCL_VAR   ref    V07 loc5         
               [000086] --C-G-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current
               [000085] ------------ this in rcx     \--*  LCL_VAR   ref    V06 loc4         

LocalAddressVisitor visiting statement:
STMT00027 (IL 0x07B...0x089)
               [000092] -AC---------              *  ASG       ref   
               [000091] D------N----              +--*  LCL_VAR   ref    V16 tmp5         
               [000090] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000089] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token

LocalAddressVisitor visiting statement:
STMT00092 (IL 0x080...  ???)
               [000347] -A-XG-------              *  ASG       ref   
               [000346] ---XG--N----              +--*  FIELD     ref    _fileName
               [000096] ------------              |  \--*  LCL_VAR   ref    V16 tmp5         
               [000097] ------------              \--*  LCL_VAR   ref    V03 loc1         

LocalAddressVisitor visiting statement:
STMT00031 (IL   ???...0x089)
               [000105] -A----------              *  ASG       ref   
               [000104] D------N----              +--*  LCL_VAR   ref    V17 tmp6         
               [000095] ------------              \--*  LCL_VAR   ref    V16 tmp5         

LocalAddressVisitor visiting statement:
STMT00032 (IL   ???...  ???)
               [000108] -A----------              *  ASG       ref   
               [000107] D------N----              +--*  LCL_VAR   ref    V18 tmp7         
               [000099] ------------              \--*  LCL_VAR   ref    V16 tmp5         

LocalAddressVisitor visiting statement:
STMT00030 (IL 0x087...  ???)
               [000103] ------------              *  JTRUE     void  
               [000102] ------------              \--*  NE        int   
               [000100] ------------                 +--*  LCL_VAR   int    V04 loc2         
               [000101] ------------                 \--*  CNS_INT   int    0

LocalAddressVisitor visiting statement:
STMT00053 (IL   ???...0x08D)
               [000203] -A----------              *  ASG       ref   
               [000202] D------N----              +--*  LCL_VAR   ref    V19 tmp8         
               [000110] ------------              \--*  LCL_VAR   ref    V17 tmp6         

LocalAddressVisitor visiting statement:
STMT00054 (IL   ???...  ???)
               [000206] -A----------              *  ASG       ref   
               [000205] D------N----              +--*  LCL_VAR   ref    V20 tmp9         
               [000111] ------------              \--*  LCL_VAR   ref    V18 tmp7         

LocalAddressVisitor visiting statement:
STMT00055 (IL   ???...  ???)
               [000209] -A----------              *  ASG       ref   
               [000208] D------N----              +--*  LCL_VAR   ref    V21 tmp10        
               [000201] ------------              \--*  LCL_VAR   ref    V07 loc5         

LocalAddressVisitor visiting statement:
STMT00033 (IL   ???...0x097)
               [000119] -A----------              *  ASG       ref   
               [000118] D------N----              +--*  LCL_VAR   ref    V19 tmp8         
               [000112] ------------              \--*  LCL_VAR   ref    V17 tmp6         

LocalAddressVisitor visiting statement:
STMT00034 (IL   ???...  ???)
               [000122] -A----------              *  ASG       ref   
               [000121] D------N----              +--*  LCL_VAR   ref    V20 tmp9         
               [000113] ------------              \--*  LCL_VAR   ref    V18 tmp7         

LocalAddressVisitor visiting statement:
STMT00035 (IL   ???...  ???)
               [000125] -AC-G-------              *  ASG       ref   
               [000124] D------N----              +--*  LCL_VAR   ref    V21 tmp10        
               [000117] --C-G-------              \--*  CALL      ref    System.String.Concat
               [000114] ------------ arg0            +--*  LCL_VAR   ref    V05 loc3         
               [000115] ------------ arg1            +--*  CNS_STR   ref   <string constant>
               [000116] ------------ arg2            \--*  LCL_VAR   ref    V07 loc5         

LocalAddressVisitor visiting statement:
STMT00093 (IL   ???...  ???)
               [000350] -A-XG-------              *  ASG       ref   
               [000349] ---XG--N----              +--*  FIELD     ref    _arguments
               [000128] ------------              |  \--*  LCL_VAR   ref    V20 tmp9         
               [000129] ------------              \--*  LCL_VAR   ref    V21 tmp10        

LocalAddressVisitor visiting statement:
STMT00094 (IL 0x0A1...  ???)
               [000355] -A-XG-------              *  ASG       bool  
               [000354] ---XG--N----              +--*  FIELD     bool   <UseShellExecute>k__BackingField
               [000131] ------------              |  \--*  LCL_VAR   ref    V19 tmp8         
               [000353] ------------              \--*  CNS_INT   int    0

LocalAddressVisitor visiting statement:
STMT00038 (IL 0x0A8...  ???)
               [000136] -A----------              *  ASG       ref   
               [000135] D------N----              +--*  LCL_VAR   ref    V08 loc6         
               [000127] ------------              \--*  LCL_VAR   ref    V19 tmp8         

LocalAddressVisitor visiting statement:
STMT00040 (IL 0x0AA...0x0B9)
               [000145] -A-XG-------              *  ASG       ref   
               [000144] D------N----              +--*  LCL_VAR   ref    V23 tmp12        
               [000138] ---XG-------              \--*  FIELD     ref    queuedAnalyzers
               [000137] ------------                 \--*  LCL_VAR   ref    V02 loc0         

LocalAddressVisitor visiting statement:
STMT00039 (IL 0x0AA...  ???)
               [000143] -A-XG-------              *  ASG       ref   
               [000142] D------N----              +--*  LCL_VAR   ref    V22 tmp11        
               [000141] ---XG-------              \--*  FIELD     ref    <>9__2
               [000140] ------------                 \--*  LCL_VAR   ref    V02 loc0         

LocalAddressVisitor visiting statement:
STMT00042 (IL   ???...0x0B9)
               [000153] -A----------              *  ASG       ref   
               [000152] D------N----              +--*  LCL_VAR   ref    V24 tmp13        
               [000146] ------------              \--*  LCL_VAR   ref    V23 tmp12        

LocalAddressVisitor visiting statement:
STMT00043 (IL   ???...  ???)
               [000156] -A----------              *  ASG       ref   
               [000155] D------N----              +--*  LCL_VAR   ref    V25 tmp14        
               [000139] ------------              \--*  LCL_VAR   ref    V08 loc6         

LocalAddressVisitor visiting statement:
STMT00044 (IL   ???...  ???)
               [000159] -A----------              *  ASG       ref   
               [000158] D------N----              +--*  LCL_VAR   ref    V26 tmp15        
               [000147] ------------              \--*  LCL_VAR   ref    V22 tmp11        

LocalAddressVisitor visiting statement:
STMT00041 (IL   ???...  ???)
               [000151] ------------              *  JTRUE     void  
               [000150] ------------              \--*  NE        int   
               [000148] ------------                 +--*  LCL_VAR   ref    V22 tmp11        
               [000149] ------------                 \--*  CNS_INT   ref    null

LocalAddressVisitor visiting statement:
STMT00048 (IL   ???...0x0CA)
               [000184] -AC---------              *  ASG       ref   
               [000183] D------N----              +--*  LCL_VAR   ref    V28 tmp17        
               [000182] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000181] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token

LocalAddressVisitor visiting statement:
STMT00095 (IL   ???...  ???)
               [000359] ------------              *  JTRUE     void  
               [000358] ------------              \--*  EQ        int   
               [000179] ------------                 +--*  LCL_VAR   ref    V02 loc0         
               [000357] ------------                 \--*  CNS_INT   ref    null

LocalAddressVisitor visiting statement:
STMT00096 (IL   ???...  ???)
               [000362] -A-XG-------              *  ASG       ref   
               [000361] ---XG--N----              +--*  FIELD     ref    _target
               [000185] ------------              |  \--*  LCL_VAR   ref    V28 tmp17        
               [000360] ------------              \--*  LCL_VAR   ref    V02 loc0         

LocalAddressVisitor visiting statement:
STMT00097 (IL   ???...  ???)
               [000366] -A-XG-------              *  ASG       long  
               [000365] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000363] ------------              |  \--*  LCL_VAR   ref    V28 tmp17        
               [000180] ------------              \--*  FTN_ADDR  long   <>c__DisplayClass5_0.<ExecuteAnalyzers>b__2


LocalAddressVisitor visiting statement:
STMT00050 (IL 0x0C9...  ???)
               [000190] -A----------              *  ASG       ref   
               [000189] D------N----              +--*  LCL_VAR   ref    V09 loc7         
               [000188] ------------              \--*  LCL_VAR   ref    V28 tmp17        

LocalAddressVisitor visiting statement:
STMT00051 (IL   ???...0x0CC)
               [000192] -A-XG-------              *  ASG       ref   
               [000191] ---XG--N----              +--*  FIELD     ref    <>9__2
               [000178] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000187] ------------              \--*  LCL_VAR   ref    V28 tmp17        

LocalAddressVisitor visiting statement:
STMT00052 (IL   ???...0x0D1)
               [000199] -A----------              *  ASG       ref   
               [000198] D------N----              +--*  LCL_VAR   ref    V26 tmp15        
               [000193] ------------              \--*  LCL_VAR   ref    V09 loc7         

LocalAddressVisitor visiting statement:
STMT00045 (IL   ???...0x0E4)
               [000172] -AC---------              *  ASG       ref   
               [000171] D------N----              +--*  LCL_VAR   ref    V27 tmp16        
               [000170] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000169] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token

LocalAddressVisitor visiting statement:
STMT00099 (IL   ???...  ???)
               [000371] ------------              *  JTRUE     void  
               [000370] ------------              \--*  NE        int   
               [000167] ------------                 +--*  LCL_VAR   ref    V02 loc0         
               [000369] ------------                 \--*  CNS_INT   ref    null

LocalAddressVisitor visiting statement:
STMT00102 (IL   ???...  ???)
               [000379] --C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

LocalAddressVisitor visiting statement:
STMT00100 (IL   ???...  ???)
               [000374] -A-XG-------              *  ASG       ref   
               [000373] ---XG--N----              +--*  FIELD     ref    _target
               [000173] ------------              |  \--*  LCL_VAR   ref    V27 tmp16        
               [000372] ------------              \--*  LCL_VAR   ref    V02 loc0         

LocalAddressVisitor visiting statement:
STMT00101 (IL   ???...  ???)
               [000378] -A-XG-------              *  ASG       long  
               [000377] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000375] ------------              |  \--*  LCL_VAR   ref    V27 tmp16        
               [000168] ------------              \--*  FTN_ADDR  long   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__OnAnalyzerFinished|1


LocalAddressVisitor visiting statement:
STMT00047 (IL 0x0DF...  ???)
               [000177] --C-G-------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue
               [000164] ------------ this in rcx  +--*  LCL_VAR   ref    V24 tmp13        
               [000176] --C-G------- arg1         \--*  CALL      ref    SolutionAnalyzer.IPC.CreateSession
               [000165] ------------ arg0            +--*  LCL_VAR   ref    V25 tmp14        
               [000166] ------------ arg1            +--*  LCL_VAR   ref    V26 tmp15        
               [000175] ------------ arg2            \--*  LCL_VAR   ref    V27 tmp16        

LocalAddressVisitor visiting statement:
STMT00025 (IL 0x0E9...0x0F0)
               [000084] --C-G-------              *  JTRUE     void  
               [000083] --C-G-------              \--*  NE        int   
               [000081] --C-G-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext
               [000080] ------------ this in rcx     |  \--*  LCL_VAR   ref    V06 loc4         
               [000082] ------------                 \--*  CNS_INT   int    0

LocalAddressVisitor visiting statement:
STMT00116 (IL   ???...  ???)
               [000431] ------------              *  JTRUE     void  
               [000432] ------------              \--*  EQ        int   
               [000433] ------------                 +--*  LCL_VAR   ref    V06 loc4         
               [000434] ------------                 \--*  CNS_INT   ref    null

LocalAddressVisitor visiting statement:
STMT00117 (IL   ???...  ???)
               [000435] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose
               [000436] ------------ this in rcx  \--*  LCL_VAR   ref    V06 loc4         

LocalAddressVisitor visiting statement:
STMT00069 (IL 0x0F4...0x0F6)
               [000257] ------------              *  JTRUE     void  
               [000256] ------------              \--*  EQ        int   
               [000254] ------------                 +--*  LCL_VAR   ref    V06 loc4         
               [000255] ------------                 \--*  CNS_INT   ref    null

LocalAddressVisitor visiting statement:
STMT00071 (IL 0x0F8...0x0FA)
               [000260] --C-G-------              *  CALLV stub void   System.IDisposable.Dispose
               [000259] ------------ this in rcx  \--*  LCL_VAR   ref    V06 loc4         

LocalAddressVisitor visiting statement:
STMT00070 (IL 0x0FF...0x0FF)
               [000258] ------------              *  RETFILT   void  

LocalAddressVisitor visiting statement:
STMT00103 (IL 0x100...  ???)
               [000384] -A-XG-------              *  ASG       ref   
               [000383] D------N----              +--*  LCL_VAR   ref    V35 tmp24        
               [000213] ---XG-------              \--*  FIELD     ref    queuedAnalyzers
               [000212] ------------                 \--*  LCL_VAR   ref    V02 loc0         

LocalAddressVisitor visiting statement:
STMT00057 (IL   ???...  ???)
               [000217] -ACXG-------              *  ASG       int   
               [000216] ---XG--N----              +--*  FIELD     int    analyzerCount
               [000211] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000382] ---XG-------              \--*  FIELD     int    _size
               [000381] ------------                 \--*  LCL_VAR   ref    V35 tmp24        

LocalAddressVisitor visiting statement:
STMT00058 (IL 0x111...0x11D)
               [000224] -AC---------              *  ASG       ref   
               [000223] D------N----              +--*  LCL_VAR   ref    V29 tmp18        
               [000222] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000221] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e method

LocalAddressVisitor visiting statement:
STMT00109 (IL   ???...  ???)
               [000402] -A-XG-------              *  ASG       int   
               [000401] D------N----              +--*  LCL_VAR   int    V37 tmp26        
               [000220] ---XG-------              \--*  FIELD     int    analyzerCount
               [000219] ------------                 \--*  LCL_VAR   ref    V02 loc0         

LocalAddressVisitor visiting statement:
STMT00104 (IL   ???...  ???)
               [000389] -AC---------              *  ASG       ref   
               [000388] D------N----              +--*  LCL_VAR   ref    V36 tmp25        
               [000387] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000386] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token

LocalAddressVisitor visiting statement:
STMT00110 (IL   ???...  ???)
               [000406] --C-G-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor
               [000390] ------------ this in rcx  +--*  LCL_VAR   ref    V36 tmp25        
               [000404] ------------ arg1         +--*  CNS_INT   int    0
               [000405] ------------ arg2         \--*  CNS_INT   ref    null

LocalAddressVisitor visiting statement:
STMT00106 (IL   ???...  ???)
               [000394] -A-XG-------              *  ASG       ref   
               [000393] ---XG--N----              +--*  FIELD     ref    _workItems
               [000225] ------------              |  \--*  LCL_VAR   ref    V29 tmp18        
               [000392] ------------              \--*  LCL_VAR   ref    V36 tmp25        

LocalAddressVisitor visiting statement:
STMT00108 (IL   ???...  ???)
               [000400] -A-XG-------              *  ASG       int   
               [000399] ---XG--N----              +--*  FIELD     int    _workItemsToComplete
               [000397] ------------              |  \--*  LCL_VAR   ref    V29 tmp18        
               [000398] ------------              \--*  LCL_VAR   int    V37 tmp26        

LocalAddressVisitor visiting statement:
STMT00060 (IL 0x11D...  ???)
               [000229] -A-XG-------              *  ASG       ref   
               [000228] ---XG--N----              +--*  FIELD     ref    progressReporter
               [000218] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000227] ------------              \--*  LCL_VAR   ref    V29 tmp18        

LocalAddressVisitor visiting statement:
STMT00061 (IL 0x122...0x123)
               [000232] -A----------              *  ASG       int   
               [000231] D------N----              +--*  LCL_VAR   int    V10 loc8         
               [000230] ------------              \--*  CNS_INT   int    0

LocalAddressVisitor visiting statement:
STMT00065 (IL 0x127...0x131)
               [000243] --C-G-------              *  CALL nullcheck void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0
               [000242] ------------ this in rcx  \--*  LCL_VAR   ref    V02 loc0         

LocalAddressVisitor visiting statement:
STMT00066 (IL 0x12D...  ???)
               [000248] -A----------              *  ASG       int   
               [000247] D------N----              +--*  LCL_VAR   int    V10 loc8         
               [000246] ------------              \--*  ADD       int   
               [000244] ------------                 +--*  LCL_VAR   int    V10 loc8         
               [000245] ------------                 \--*  CNS_INT   int    1

LocalAddressVisitor visiting statement:
STMT00114 (IL   ???...  ???)
               [000424] -A-XG-------              *  ASG       int   
               [000423] D------N----              +--*  LCL_VAR   int    V39 tmp28        
               [000237] ---XG-------              \--*  FIELD     int    analyzerCount
               [000236] ------------                 \--*  LCL_VAR   ref    V02 loc0         

LocalAddressVisitor visiting statement:
STMT00111 (IL   ???...  ???)
               [000414] ------------              *  JTRUE     void  
               [000413] ------------              \--*  LE        int   
               [000411] ------------                 +--*  CNS_INT   int    8
               [000412] ------------                 \--*  LCL_VAR   int    V39 tmp28        

LocalAddressVisitor visiting statement:
STMT00113 (IL   ???...  ???)
               [000421] -A----------              *  ASG       int   
               [000420] D------N----              +--*  LCL_VAR   int    V38 tmp27        
               [000419] ------------              \--*  LCL_VAR   int    V39 tmp28        

LocalAddressVisitor visiting statement:
STMT00112 (IL   ???...  ???)
               [000417] -A----------              *  ASG       int   
               [000416] D------N----              +--*  LCL_VAR   int    V38 tmp27        
               [000415] ------------              \--*  CNS_INT   int    8

LocalAddressVisitor visiting statement:
STMT00064 (IL   ???...  ???)
               [000241] --C---------              *  JTRUE     void  
               [000240] --C---------              \--*  LT        int   
               [000233] ------------                 +--*  LCL_VAR   int    V10 loc8         
               [000422] ------------                 \--*  LCL_VAR   int    V38 tmp27        

LocalAddressVisitor visiting statement:
STMT00115 (IL 0x147...  ???)
               [000429] -A-XG-------              *  ASG       ref   
               [000428] D------N----              +--*  LCL_VAR   ref    V40 tmp29        
               [000250] ---XG-------              \--*  FIELD     ref    allAnalyzersHaveRun
               [000249] ------------                 \--*  LCL_VAR   ref    V02 loc0         

LocalAddressVisitor visiting statement:
STMT00068 (IL   ???...  ???)
               [000253] --C---------              *  RETURN    ref   
               [000427] ---XG-------              \--*  FIELD     ref    _task
               [000426] ------------                 \--*  LCL_VAR   ref    V40 tmp29        


*************** Finishing PHASE Morph - Structs/AddrExp

*************** Starting PHASE Morph - ByRefs

*************** In fgRetypeImplicitByRefArgs()

*************** Finishing PHASE Morph - ByRefs

*************** Starting PHASE Morph - Global

*************** In fgMorphBlocks()

Morphing BB01 of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'

fgMorphTree BB01, STMT00000 (before)
               [000003] -AC---------              *  ASG       ref   
               [000002] D------N----              +--*  LCL_VAR   ref    V12 tmp1         
               [000001] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000000] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e method
Initializing arg info for 1.CALL:
ArgTable for 1.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 0.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]

Morphing args for 1.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000000] H----+------              *  CNS_INT(h) long   0xd1ffab1e method
Replaced with placeholder node:
               [000438] ----------L-              *  ARGPLACE  long  

Shuffled argument table:    rcx 
ArgTable for 1.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 0.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]


fgMorphTree BB01, STMT00000 (after)
               [000003] -AC--+------              *  ASG       ref   
               [000002] D----+-N----              +--*  LCL_VAR   ref    V12 tmp1         
               [000001] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000000] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

fgMorphTree BB01, STMT00002 (before)
               [000008] -A----------              *  ASG       ref   
               [000007] D------N----              +--*  LCL_VAR   ref    V02 loc0         
               [000006] ------------              \--*  LCL_VAR   ref    V12 tmp1         
GenTreeNode creates assertion:
               [000008] -A----------              *  ASG       ref   
In BB01 New Local Copy     Assertion: V02 == V12 index=#01, mask=0000000000000001

fgMorphTree BB01, STMT00003 (before)
               [000012] -A-XG-------              *  ASG       ref   
               [000011] ---XG--N----              +--*  FIELD     ref    outputFile
               [000009] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000010] ------------              \--*  LCL_VAR   ref    V01 arg1         

Assertion prop in BB01:
Copy     Assertion: V02 == V12 index=#01, mask=0000000000000001
               [000009] ------------              *  LCL_VAR   ref    V12 tmp1         

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000011] ---XG--N----              *  IND       ref   
               [000440] -----+------              \--*  ADD       byref 
               [000009] -----+------                 +--*  LCL_VAR   ref    V12 tmp1         
               [000439] -----+------                 \--*  CNS_INT   long   32 field offset Fseq[outputFile]
GenTreeNode creates assertion:
               [000011] ---XG--N----              *  IND       ref   
In BB01 New Local Constant Assertion: V12 != null index=#02, mask=0000000000000002

fgMorphTree BB01, STMT00003 (after)
               [000012] -A-XG+------              *  ASG       ref   
               [000011] ---XG+-N----              +--*  IND       ref   
               [000440] -----+------              |  \--*  ADD       byref 
               [000009] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000439] -----+------              |     \--*  CNS_INT   long   32 field offset Fseq[outputFile]
               [000010] -----+------              \--*  LCL_VAR   ref    V01 arg1         

fgMorphTree BB01, STMT00004 (before)
               [000016] -A-XG-------              *  ASG       int   
               [000015] ---XG--N----              +--*  FIELD     int    analyzerCount
               [000013] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000014] ------------              \--*  CNS_INT   int    0

Assertion prop in BB01:
Copy     Assertion: V02 == V12 index=#01, mask=0000000000000001
               [000013] ------------              *  LCL_VAR   ref    V12 tmp1         

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000015] ---XG--N----              *  IND       int   
               [000442] -----+------              \--*  ADD       byref 
               [000013] -----+------                 +--*  LCL_VAR   ref    V12 tmp1         
               [000441] -----+------                 \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]

fgMorphTree BB01, STMT00004 (after)
               [000016] -A-XG+------              *  ASG       int   
               [000015] ---XG+-N----              +--*  IND       int   
               [000442] -----+------              |  \--*  ADD       byref 
               [000013] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000441] -----+------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]
               [000014] -----+------              \--*  CNS_INT   int    0

fgMorphTree BB01, STMT00005 (before)
               [000020] -A-XG-------              *  ASG       int   
               [000019] ---XG--N----              +--*  FIELD     int    analyzersFinishedCount
               [000017] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000018] ------------              \--*  CNS_INT   int    0

Assertion prop in BB01:
Copy     Assertion: V02 == V12 index=#01, mask=0000000000000001
               [000017] ------------              *  LCL_VAR   ref    V12 tmp1         

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000019] ---XG--N----              *  IND       int   
               [000444] -----+------              \--*  ADD       byref 
               [000017] -----+------                 +--*  LCL_VAR   ref    V12 tmp1         
               [000443] -----+------                 \--*  CNS_INT   long   56 field offset Fseq[analyzersFinishedCount]

fgMorphTree BB01, STMT00005 (after)
               [000020] -A-XG+------              *  ASG       int   
               [000019] ---XG+-N----              +--*  IND       int   
               [000444] -----+------              |  \--*  ADD       byref 
               [000017] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000443] -----+------              |     \--*  CNS_INT   long   56 field offset Fseq[analyzersFinishedCount]
               [000018] -----+------              \--*  CNS_INT   int    0

fgMorphTree BB01, STMT00006 (before)
               [000025] -AC---------              *  ASG       ref   
               [000024] D------N----              +--*  LCL_VAR   ref    V13 tmp2         
               [000023] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000022] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token
Initializing arg info for 23.CALL:
ArgTable for 23.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 22.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]

Morphing args for 23.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000022] H----+------              *  CNS_INT(h) long   0xd1ffab1e token
Replaced with placeholder node:
               [000445] ----------L-              *  ARGPLACE  long  

Shuffled argument table:    rcx 
ArgTable for 23.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 22.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]


fgMorphTree BB01, STMT00006 (after)
               [000025] -AC--+------              *  ASG       ref   
               [000024] D----+-N----              +--*  LCL_VAR   ref    V13 tmp2         
               [000023] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000022] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

fgMorphTree BB01, STMT00074 (before)
               [000269] -AC---------              *  ASG       ref   
               [000268] D------N----              +--*  LCL_VAR   ref    V30 tmp19        
               [000267] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000266] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token
Initializing arg info for 267.CALL:
ArgTable for 267.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 266.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]

Morphing args for 267.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000266] H----+------              *  CNS_INT(h) long   0xd1ffab1e token
Replaced with placeholder node:
               [000446] ----------L-              *  ARGPLACE  long  

Shuffled argument table:    rcx 
ArgTable for 267.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 266.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]


fgMorphTree BB01, STMT00074 (after)
               [000269] -AC--+------              *  ASG       ref   
               [000268] D----+-N----              +--*  LCL_VAR   ref    V30 tmp19        
               [000267] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000266] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

fgMorphTree BB01, STMT00079 (before)
               [000283] -A-XGO------              *  ASG       int   
               [000282] V--XGO-N----              +--*  FIELD     int    m_stateFlags
               [000280] ------------              |  \--*  LCL_VAR   ref    V30 tmp19        
               [000281] ------------              \--*  CNS_INT   int    0x2000400

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000282] V--XGO-N----              *  IND       int   
               [000448] -----+------              \--*  ADD       byref 
               [000280] -----+------                 +--*  LCL_VAR   ref    V30 tmp19        
               [000447] -----+------                 \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags]
GenTreeNode creates assertion:
               [000282] V--XGO-N----              *  IND       int   
In BB01 New Local Constant Assertion: V30 != null index=#03, mask=0000000000000004

fgMorphTree BB01, STMT00079 (after)
               [000283] -A-XG+------              *  ASG       int   
               [000282] V--XG+-N----              +--*  IND       int   
               [000448] -----+------              |  \--*  ADD       byref 
               [000280] -----+------              |     +--*  LCL_VAR   ref    V30 tmp19        
               [000447] -----+------              |     \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags]
               [000281] -----+------              \--*  CNS_INT   int    0x2000400

fgMorphTree BB01, STMT00076 (before)
               [000274] -A-XG-------              *  ASG       ref   
               [000273] ---XG--N----              +--*  FIELD     ref    _task
               [000265] ------------              |  \--*  LCL_VAR   ref    V13 tmp2         
               [000272] ------------              \--*  LCL_VAR   ref    V30 tmp19        

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000273] ---XG--N----              *  IND       ref   
               [000450] -----+------              \--*  ADD       byref 
               [000265] -----+------                 +--*  LCL_VAR   ref    V13 tmp2         
               [000449] -----+------                 \--*  CNS_INT   long   8 field offset Fseq[_task]
GenTreeNode creates assertion:
               [000273] ---XG--N----              *  IND       ref   
In BB01 New Local Constant Assertion: V13 != null index=#04, mask=0000000000000008

fgMorphTree BB01, STMT00076 (after)
               [000274] -A-XG+------              *  ASG       ref   
               [000273] ---XG+-N----              +--*  IND       ref   
               [000450] -----+------              |  \--*  ADD       byref 
               [000265] -----+------              |     +--*  LCL_VAR   ref    V13 tmp2         
               [000449] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_task]
               [000272] -----+------              \--*  LCL_VAR   ref    V30 tmp19        

fgMorphTree BB01, STMT00008 (before)
               [000030] -A-XG-------              *  ASG       ref   
               [000029] ---XG--N----              +--*  FIELD     ref    allAnalyzersHaveRun
               [000021] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000028] ------------              \--*  LCL_VAR   ref    V13 tmp2         

Assertion prop in BB01:
Copy     Assertion: V02 == V12 index=#01, mask=0000000000000001
               [000021] ------------              *  LCL_VAR   ref    V12 tmp1         

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000029] ---XG--N----              *  IND       ref   
               [000452] -----+------              \--*  ADD       byref 
               [000021] -----+------                 +--*  LCL_VAR   ref    V12 tmp1         
               [000451] -----+------                 \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun]

fgMorphTree BB01, STMT00008 (after)
               [000030] -A-XG+------              *  ASG       ref   
               [000029] ---XG+-N----              +--*  IND       ref   
               [000452] -----+------              |  \--*  ADD       byref 
               [000021] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000451] -----+------              |     \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun]
               [000028] -----+------              \--*  LCL_VAR   ref    V13 tmp2         

fgMorphTree BB01, STMT00009 (before)
               [000035] -AC---------              *  ASG       ref   
               [000034] D------N----              +--*  LCL_VAR   ref    V14 tmp3         
               [000033] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000032] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token
Initializing arg info for 33.CALL:
ArgTable for 33.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 32.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]

Morphing args for 33.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000032] H----+------              *  CNS_INT(h) long   0xd1ffab1e token
Replaced with placeholder node:
               [000453] ----------L-              *  ARGPLACE  long  

Shuffled argument table:    rcx 
ArgTable for 33.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 32.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]


fgMorphTree BB01, STMT00009 (after)
               [000035] -AC--+------              *  ASG       ref   
               [000034] D----+-N----              +--*  LCL_VAR   ref    V14 tmp3         
               [000033] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000032] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

fgMorphTree BB01, STMT00082 (before)
               [000292] -ACXG-------              *  ASG       ref   
               [000291] ---XG--N----              +--*  FIELD     ref    _array
               [000287] ------------              |  \--*  LCL_VAR   ref    V14 tmp3         
               [000300] --CXG-------              \--*  COMMA     ref   
               [000299] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS
               [000297] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc7e0b0028
               [000298] ------------ arg1            |  \--*  CNS_INT   int    14
               [000295] ----G-------                 \--*  FIELD     ref    Value

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000291] ---XG--N----              *  IND       ref   
               [000455] -----+------              \--*  ADD       byref 
               [000287] -----+------                 +--*  LCL_VAR   ref    V14 tmp3         
               [000454] -----+------                 \--*  CNS_INT   long   8 field offset Fseq[_array]
GenTreeNode creates assertion:
               [000291] ---XG--N----              *  IND       ref   
In BB01 New Local Constant Assertion: V14 != null index=#05, mask=0000000000000010
Initializing arg info for 299.CALL:
ArgTable for 299.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 297.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 298.CNS_INT int (By ref), 1 reg: rdx, byteAlignment=8]

Morphing args for 299.CALL:
argSlots=2, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000297] -----+------              *  CNS_INT   long   0x7ffc7e0b0028
Replaced with placeholder node:
               [000456] ----------L-              *  ARGPLACE  long  
Deferred argument ('rdx'):
               [000298] -----+------              *  CNS_INT   int    14
Replaced with placeholder node:
               [000457] ----------L-              *  ARGPLACE  int   

Shuffled argument table:    rcx rdx 
ArgTable for 299.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 297.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 298.CNS_INT int (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]


fgMorphTree BB01, STMT00082 (after)
               [000292] -ACXG+------              *  ASG       ref   
               [000291] ---XG+-N----              +--*  IND       ref   
               [000455] -----+------              |  \--*  ADD       byref 
               [000287] -----+------              |     +--*  LCL_VAR   ref    V14 tmp3         
               [000454] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_array]
               [000300] --CXG+------              \--*  COMMA     ref   
               [000299] H-CXG+------                 +--*  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS
               [000297] -----+------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e0b0028
               [000298] -----+------ arg1 in rdx     |  \--*  CNS_INT   int    14
               [000295] n---G+------                 \--*  IND       ref   
               [000458] I----+------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[Value]

fgMorphTree BB01, STMT00011 (before)
               [000040] -A-XG-------              *  ASG       ref   
               [000039] ---XG--N----              +--*  FIELD     ref    queuedAnalyzers
               [000031] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000038] ------------              \--*  LCL_VAR   ref    V14 tmp3         

Assertion prop in BB01:
Copy     Assertion: V02 == V12 index=#01, mask=0000000000000001
               [000031] ------------              *  LCL_VAR   ref    V12 tmp1         

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000039] ---XG--N----              *  IND       ref   
               [000460] -----+------              \--*  ADD       byref 
               [000031] -----+------                 +--*  LCL_VAR   ref    V12 tmp1         
               [000459] -----+------                 \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers]

fgMorphTree BB01, STMT00011 (after)
               [000040] -A-XG+------              *  ASG       ref   
               [000039] ---XG+-N----              +--*  IND       ref   
               [000460] -----+------              |  \--*  ADD       byref 
               [000031] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000459] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers]
               [000038] -----+------              \--*  LCL_VAR   ref    V14 tmp3         

fgMorphTree BB01, STMT00012 (before)
               [000044] -A-XG-------              *  ASG       ref   
               [000043] ---XG--N----              +--*  FIELD     ref    progressReporter
               [000041] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000042] ------------              \--*  CNS_INT   ref    null

Assertion prop in BB01:
Copy     Assertion: V02 == V12 index=#01, mask=0000000000000001
               [000041] ------------              *  LCL_VAR   ref    V12 tmp1         

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000043] ---XG--N----              *  IND       ref   
               [000462] -----+------              \--*  ADD       byref 
               [000041] -----+------                 +--*  LCL_VAR   ref    V12 tmp1         
               [000461] -----+------                 \--*  CNS_INT   long   16 field offset Fseq[progressReporter]

fgMorphTree BB01, STMT00012 (after)
               [000044] -A-XG+------              *  ASG       ref   
               [000043] ---XG+-N----              +--*  IND       ref   
               [000462] -----+------              |  \--*  ADD       byref 
               [000041] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000461] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter]
               [000042] -----+------              \--*  CNS_INT   ref    null

fgMorphTree BB01, STMT00013 (before)
               [000049] -AC---------              *  ASG       ref   
               [000048] D------N----              +--*  LCL_VAR   ref    V15 tmp4         
               [000047] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000046] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token
Initializing arg info for 47.CALL:
ArgTable for 47.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 46.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]

Morphing args for 47.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000046] H----+------              *  CNS_INT(h) long   0xd1ffab1e token
Replaced with placeholder node:
               [000463] ----------L-              *  ARGPLACE  long  

Shuffled argument table:    rcx 
ArgTable for 47.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 46.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]


fgMorphTree BB01, STMT00013 (after)
               [000049] -AC--+------              *  ASG       ref   
               [000048] D----+-N----              +--*  LCL_VAR   ref    V15 tmp4         
               [000047] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000046] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

fgMorphTree BB01, STMT00083 (before)
               [000303] --C-G-------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor
               [000050] ------------ this in rcx  +--*  LCL_VAR   ref    V15 tmp4         
               [000302] ------------ arg1         \--*  CNS_INT   ref    null
Initializing arg info for 303.CALL:
ArgTable for 303.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 50.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 302.CNS_INT ref (By ref), 1 reg: rdx, byteAlignment=8]

Morphing args for 303.CALL:
argSlots=2, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000050] -----+------              *  LCL_VAR   ref    V15 tmp4         
Replaced with placeholder node:
               [000464] ----------L-              *  ARGPLACE  ref   
Deferred argument ('rdx'):
               [000302] -----+------              *  CNS_INT   ref    null
Replaced with placeholder node:
               [000465] ----------L-              *  ARGPLACE  ref   

Shuffled argument table:    rcx rdx 
ArgTable for 303.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 50.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 302.CNS_INT ref (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]


fgMorphTree BB01, STMT00083 (after)
               [000303] --CXG+------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor
               [000050] -----+------ this in rcx  +--*  LCL_VAR   ref    V15 tmp4         
               [000302] -----+------ arg1 in rdx  \--*  CNS_INT   ref    null

fgMorphTree BB01, STMT00015 (before)
               [000054] -A-XG-------              *  ASG       ref   
               [000053] ---XG--N----              +--*  FIELD     ref    output
               [000045] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000052] ------------              \--*  LCL_VAR   ref    V15 tmp4         

Assertion prop in BB01:
Copy     Assertion: V02 == V12 index=#01, mask=0000000000000001
               [000045] ------------              *  LCL_VAR   ref    V12 tmp1         

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000053] ---XG--N----              *  IND       ref   
               [000467] -----+------              \--*  ADD       byref 
               [000045] -----+------                 +--*  LCL_VAR   ref    V12 tmp1         
               [000466] -----+------                 \--*  CNS_INT   long   40 field offset Fseq[output]

fgMorphTree BB01, STMT00015 (after)
               [000054] -A-XG+------              *  ASG       ref   
               [000053] ---XG+-N----              +--*  IND       ref   
               [000467] -----+------              |  \--*  ADD       byref 
               [000045] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000466] -----+------              |     \--*  CNS_INT   long   40 field offset Fseq[output]
               [000052] -----+------              \--*  LCL_VAR   ref    V15 tmp4         

fgMorphTree BB01, STMT00086 (before)
               [000316] -AC-G-------              *  ASG       ref   
               [000315] D------N----              +--*  LCL_VAR   ref    V31 tmp20        
               [000055] --C-G-------              \--*  CALL      ref    System.Diagnostics.Process.GetCurrentProcess
Initializing arg info for 55.CALL:
ArgTable for 55.CALL after fgInitArgInfo:

Morphing args for 55.CALL:
argSlots=0, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32
ArgTable for 55.CALL after fgMorphArgs:


fgMorphTree BB01, STMT00087 (before)
               [000314] ---X--------              *  NULLCHECK byte  
               [000313] ------------              \--*  LCL_VAR   ref    V31 tmp20        
GenTreeNode creates assertion:
               [000314] ---X--------              *  NULLCHECK byte  
In BB01 New Local Constant Assertion: V31 != null index=#06, mask=0000000000000020

fgMorphTree BB01, STMT00084 (before)
               [000308] --C-G-------              *  CALL      void   System.Diagnostics.Process.EnsureState
               [000306] ------------ this in rcx  +--*  LCL_VAR   ref    V31 tmp20        
               [000307] ------------ arg1         \--*  CNS_INT   int    3
Initializing arg info for 308.CALL:
ArgTable for 308.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 306.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 307.CNS_INT int (By ref), 1 reg: rdx, byteAlignment=8]

Morphing args for 308.CALL:
argSlots=2, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000306] -----+------              *  LCL_VAR   ref    V31 tmp20        
Replaced with placeholder node:
               [000468] ----------L-              *  ARGPLACE  ref   
Deferred argument ('rdx'):
               [000307] -----+------              *  CNS_INT   int    3
Replaced with placeholder node:
               [000469] ----------L-              *  ARGPLACE  int   

Shuffled argument table:    rcx rdx 
ArgTable for 308.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 306.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 307.CNS_INT int (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]


fgMorphTree BB01, STMT00084 (after)
               [000308] --CXG+------              *  CALL      void   System.Diagnostics.Process.EnsureState
               [000306] -----+------ this in rcx  +--*  LCL_VAR   ref    V31 tmp20        
               [000307] -----+------ arg1 in rdx  \--*  CNS_INT   int    3

fgMorphTree BB01, STMT00088 (before)
               [000322] -ACXG-------              *  ASG       ref   
               [000321] D------N----              +--*  LCL_VAR   ref    V32 tmp21        
               [000311] --CXG-------              \--*  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule
               [000310] ---XG------- arg0            \--*  FIELD     int    _processId
               [000309] ------------                    \--*  LCL_VAR   ref    V31 tmp20        
Initializing arg info for 311.CALL:
ArgTable for 311.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 310.FIELD int (By ref), 1 reg: rcx, byteAlignment=8]

Morphing args for 311.CALL:

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000310] ---XG-------              *  IND       int   
               [000471] -----+------              \--*  ADD       byref 
               [000309] -----+------                 +--*  LCL_VAR   ref    V31 tmp20        
               [000470] -----+------                 \--*  CNS_INT   long   200 field offset Fseq[_processId]
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000310] ---XG+------              *  IND       int   
               [000471] -----+------              \--*  ADD       byref 
               [000309] -----+------                 +--*  LCL_VAR   ref    V31 tmp20        
               [000470] -----+------                 \--*  CNS_INT   long   200 field offset Fseq[_processId]
Replaced with placeholder node:
               [000472] ----------L-              *  ARGPLACE  int   

Shuffled argument table:    rcx 
ArgTable for 311.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 310.IND int (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]


fgMorphTree BB01, STMT00088 (after)
               [000322] -ACXG+------              *  ASG       ref   
               [000321] D----+-N----              +--*  LCL_VAR   ref    V32 tmp21        
               [000311] --CXG+------              \--*  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule
               [000310] ---XG+------ arg0 in rcx     \--*  IND       int   
               [000471] -----+------                    \--*  ADD       byref 
               [000309] -----+------                       +--*  LCL_VAR   ref    V31 tmp20        
               [000470] -----+------                       \--*  CNS_INT   long   200 field offset Fseq[_processId]

fgMorphTree BB01, STMT00019 (before)
               [000062] -AC---------              *  ASG       ref   
               [000061] D------N----              +--*  LCL_VAR   ref    V03 loc1         
               [000320] ---XG-------              \--*  FIELD     ref    <FileName>k__BackingField
               [000319] ------------                 \--*  LCL_VAR   ref    V32 tmp21        

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000320] ---XG-------              *  IND       ref   
               [000474] -----+------              \--*  ADD       byref 
               [000319] -----+------                 +--*  LCL_VAR   ref    V32 tmp21        
               [000473] -----+------                 \--*  CNS_INT   long   40 field offset Fseq[<FileName>k__BackingField]
GenTreeNode creates assertion:
               [000320] ---XG-------              *  IND       ref   
In BB01 New Local Constant Assertion: V32 != null index=#07, mask=0000000000000040

fgMorphTree BB01, STMT00019 (after)
               [000062] -A-XG+------              *  ASG       ref   
               [000061] D----+-N----              +--*  LCL_VAR   ref    V03 loc1         
               [000320] ---XG+------              \--*  IND       ref   
               [000474] -----+------                 \--*  ADD       byref 
               [000319] -----+------                    +--*  LCL_VAR   ref    V32 tmp21        
               [000473] -----+------                    \--*  CNS_INT   long   40 field offset Fseq[<FileName>k__BackingField]

fgMorphTree BB01, STMT00090 (before)
               [000333] ---X--------              *  NULLCHECK byte  
               [000332] ------------              \--*  LCL_VAR   ref    V03 loc1         
GenTreeNode creates assertion:
               [000333] ---X--------              *  NULLCHECK byte  
In BB01 New Local Constant Assertion: V03 != null index=#08, mask=0000000000000080

fgMorphTree BB01, STMT00021 (before)
               [000069] -AC---------              *  ASG       int   
               [000068] D------N----              +--*  LCL_VAR   int    V04 loc2         
               [000331] --C---------              \--*  EQ        int   
               [000329] --C---------                 +--*  LT        int   
               [000340] --CXG-------                 |  +--*  CALL      int    System.String.IndexOf
               [000063] ------------ this in rcx     |  |  +--*  LCL_VAR   ref    V03 loc1         
               [000335] ------------ arg1            |  |  +--*  CNS_STR   ref   <string constant>
               [000336] ------------ arg2            |  |  +--*  CNS_INT   int    0
               [000338] ---X-------- arg3            |  |  +--*  ARR_LENGTH int   
               [000337] ------------                 |  |  |  \--*  LCL_VAR   ref    V03 loc1         
               [000339] ------------ arg4            |  |  \--*  CNS_INT   int    5
               [000328] ------------                 |  \--*  CNS_INT   int    0
               [000330] ------------                 \--*  CNS_INT   int    0
Initializing arg info for 340.CALL:
ArgTable for 340.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 63.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 335.CNS_STR ref (By ref), 1 reg: rdx, byteAlignment=8]
fgArgTabEntry[arg 2 336.CNS_INT int (By ref), 1 reg: r8, byteAlignment=8]
fgArgTabEntry[arg 3 338.ARR_LENGTH int (By ref), 1 reg: r9, byteAlignment=8]
fgArgTabEntry[arg 4 339.CNS_INT int (By ref), numSlots=1, slotNum=4, byteSize=4, byteOffset=32, byteAlignment=8]

Morphing args for 340.CALL:
argSlots=5, preallocatedArgCount=5, nextSlotNum=5, nextSlotByteOffset=40, outgoingArgSpaceSize=40

Sorting the arguments:
Deferred argument ('r9'):
     (  5,  4) [000338] ---X--------              *  ARR_LENGTH int   
     (  3,  2) [000337] ------------              \--*  LCL_VAR   ref    V03 loc1         
Replaced with placeholder node:
               [000477] ----------L-              *  ARGPLACE  int   
Deferred argument ('rdx'):
     (  4, 12) [000476] #---G-------              *  IND       ref   
     (  2, 10) [000475] H-----------              \--*  CNS_INT(h) long   0xD1FFAB1E "dotnet.exe"
Replaced with placeholder node:
               [000478] ----------L-              *  ARGPLACE  ref   
Deferred argument ('rcx'):
               [000063] -----+------              *  LCL_VAR   ref    V03 loc1         
Replaced with placeholder node:
               [000479] ----------L-              *  ARGPLACE  ref   
Deferred argument ('r8'):
               [000336] -----+------              *  CNS_INT   int    0
Replaced with placeholder node:
               [000480] ----------L-              *  ARGPLACE  int   

Shuffled argument table:    r9 rdx rcx r8 
ArgTable for 340.CALL after fgMorphArgs:
fgArgTabEntry[arg 3 338.ARR_LENGTH int (By ref), 1 reg: r9, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 476.IND ref (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]
fgArgTabEntry[arg 0 63.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=2, processed]
fgArgTabEntry[arg 2 336.CNS_INT int (By ref), 1 reg: r8, byteAlignment=8, lateArgInx=3, processed]
fgArgTabEntry[arg 4 339.CNS_INT int (By ref), numSlots=1, slotNum=4, byteSize=4, byteOffset=32, byteAlignment=8, processed]

GenTreeNode creates assertion:
               [000069] -ACXG-------              *  ASG       int   
In BB01 New Local Subrange Assertion: V04 in [0..1] index=#09, mask=0000000000000100

fgMorphTree BB01, STMT00021 (after)
               [000069] -ACXG+------              *  ASG       int   
               [000068] D----+-N----              +--*  LCL_VAR   int    V04 loc2         
               [000329] --CXG+------              \--*  GE        int   
               [000340] --CXG+------                 +--*  CALL      int    System.String.IndexOf
               [000339] -----+------ arg4 out+20     |  +--*  CNS_INT   int    5
     (  5,  4) [000338] ---X-------- arg3 in r9      |  +--*  ARR_LENGTH int   
     (  3,  2) [000337] ------------                 |  |  \--*  LCL_VAR   ref    V03 loc1         
     (  4, 12) [000476] #---G------- arg1 in rdx     |  +--*  IND       ref   
     (  2, 10) [000475] H-----------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E "dotnet.exe"
               [000063] -----+------ this in rcx     |  +--*  LCL_VAR   ref    V03 loc1         
               [000336] -----+------ arg2 in r8      |  \--*  CNS_INT   int    0
               [000328] -----+------                 \--*  CNS_INT   int    0

fgMorphTree BB01, STMT00023 (before)
               [000075] -ACXG-------              *  ASG       ref   
               [000074] D------N----              +--*  LCL_VAR   ref    V05 loc3         
               [000073] --CXG-------              \--*  INDEX     ref   
               [000070] --C-G-------                 +--*  CALL      ref    System.Environment.GetCommandLineArgs
               [000072] ------------                 \--*  CNS_INT   int    0

lvaGrabTemp returning 41 (V41 tmp30) called for arr expr.
Initializing arg info for 70.CALL:
ArgTable for 70.CALL after fgInitArgInfo:

Morphing args for 70.CALL:
argSlots=0, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32
ArgTable for 70.CALL after fgMorphArgs:

GenTreeNode creates assertion:
               [000486] ---X--------              *  ARR_LENGTH int   
In BB01 New Local Constant Assertion: V41 != null index=#10, mask=0000000000000200

Folding long operator with constant nodes into a constant:
               [000489] ------------              *  MUL       long  
               [000485] -----+------              +--*  CNS_INT   long   0
               [000488] -----+-N----              \--*  CNS_INT   long   8
Bashed to long constant:
               [000489] ------------              *  CNS_INT   long   0

Folding long operator with constant nodes into a constant:
               [000491] ------------              *  ADD       long  
               [000489] -----+------              +--*  CNS_INT   long   0
               [000490] -----+------              \--*  CNS_INT   long   16
Bashed to long constant:
               [000491] ------------              *  CNS_INT   long   16

fgMorphTree BB01, STMT00023 (after)
               [000075] -ACXG+------              *  ASG       ref   
               [000074] D----+-N----              +--*  LCL_VAR   ref    V05 loc3         
               [000494] -ACXG+------              \--*  COMMA     ref   
               [000482] -ACXG+------                 +--*  ASG       ref   
               [000481] D----+-N----                 |  +--*  LCL_VAR   ref    V41 tmp30        
               [000070] --CXG+------                 |  \--*  CALL      ref    System.Environment.GetCommandLineArgs
               [000493] ---XG+------                 \--*  COMMA     ref   
               [000487] ---X-+------                    +--*  ARR_BOUNDS_CHECK_Rng void  
               [000072] -----+------                    |  +--*  CNS_INT   int    0
               [000486] ---X-+------                    |  \--*  ARR_LENGTH int   
               [000483] -----+------                    |     \--*  LCL_VAR   ref    V41 tmp30        
               [000073] a---G+------                    \--*  IND       ref   
               [000492] -----+------                       \--*  ADD       byref 
               [000484] -----+------                          +--*  LCL_VAR   ref    V41 tmp30        
               [000491] -----+------                          \--*  CNS_INT   long   16 Fseq[#FirstElem]

fgMorphTree BB01, STMT00024 (before)
               [000079] -AC-G-------              *  ASG       ref   
               [000078] D------N----              +--*  LCL_VAR   ref    V06 loc4         
               [000077] --C-G-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator
               [000076] ------------ this in rcx     \--*  LCL_VAR   ref    V00 arg0         
Initializing arg info for 77.CALL:
ArgTable for 77.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 76.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 495.CNS_INT long (By ref), 1 reg: r11, byteAlignment=8, isNonStandard]

Morphing args for 77.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000076] -----+------              *  LCL_VAR   ref    V00 arg0         
Replaced with placeholder node:
               [000496] ----------L-              *  ARGPLACE  ref   
Deferred argument ('r11'):
               [000495] H----+------              *  CNS_INT(h) long   0xd1ffab1e ftn REG r11
Replaced with placeholder node:
               [000497] ----------L-              *  ARGPLACE  long  

Shuffled argument table:    rcx r11 
ArgTable for 77.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 76.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 495.CNS_INT long (By ref), 1 reg: r11, byteAlignment=8, lateArgInx=1, processed, isNonStandard]

GenTreeNode creates assertion:
               [000077] --CXG-------              *  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator
In BB01 New Local Constant Assertion: V00 != null index=#11, mask=0000000000000400

fgMorphTree BB01, STMT00024 (after)
               [000079] -ACXG+------              *  ASG       ref   
               [000078] D----+-N----              +--*  LCL_VAR   ref    V06 loc4         
               [000077] --CXG+------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator
               [000076] -----+------ this in rcx     +--*  LCL_VAR   ref    V00 arg0         
               [000495] H----+------ arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

Morphing BB02 of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'

Morphing BB03 of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'

fgMorphTree BB03, STMT00026 (before)
               [000088] -AC-G-------              *  ASG       ref   
               [000087] D------N----              +--*  LCL_VAR   ref    V07 loc5         
               [000086] --C-G-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current
               [000085] ------------ this in rcx     \--*  LCL_VAR   ref    V06 loc4         
Initializing arg info for 86.CALL:
ArgTable for 86.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 85.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 498.CNS_INT long (By ref), 1 reg: r11, byteAlignment=8, isNonStandard]

Morphing args for 86.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000085] -----+------              *  LCL_VAR   ref    V06 loc4         
Replaced with placeholder node:
               [000499] ----------L-              *  ARGPLACE  ref   
Deferred argument ('r11'):
               [000498] H----+------              *  CNS_INT(h) long   0xd1ffab1e ftn REG r11
Replaced with placeholder node:
               [000500] ----------L-              *  ARGPLACE  long  

Shuffled argument table:    rcx r11 
ArgTable for 86.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 85.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 498.CNS_INT long (By ref), 1 reg: r11, byteAlignment=8, lateArgInx=1, processed, isNonStandard]

GenTreeNode creates assertion:
               [000086] --CXG-------              *  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current
In BB03 New Local Constant Assertion: V06 != null index=#01, mask=0000000000000001

fgMorphTree BB03, STMT00026 (after)
               [000088] -ACXG+------              *  ASG       ref   
               [000087] D----+-N----              +--*  LCL_VAR   ref    V07 loc5         
               [000086] --CXG+------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current
               [000085] -----+------ this in rcx     +--*  LCL_VAR   ref    V06 loc4         
               [000498] H----+------ arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

fgMorphTree BB03, STMT00027 (before)
               [000092] -AC---------              *  ASG       ref   
               [000091] D------N----              +--*  LCL_VAR   ref    V16 tmp5         
               [000090] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000089] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token
Initializing arg info for 90.CALL:
ArgTable for 90.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 89.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]

Morphing args for 90.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000089] H----+------              *  CNS_INT(h) long   0xd1ffab1e token
Replaced with placeholder node:
               [000501] ----------L-              *  ARGPLACE  long  

Shuffled argument table:    rcx 
ArgTable for 90.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 89.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]


fgMorphTree BB03, STMT00027 (after)
               [000092] -AC--+------              *  ASG       ref   
               [000091] D----+-N----              +--*  LCL_VAR   ref    V16 tmp5         
               [000090] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000089] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

fgMorphTree BB03, STMT00092 (before)
               [000347] -A-XG-------              *  ASG       ref   
               [000346] ---XG--N----              +--*  FIELD     ref    _fileName
               [000096] ------------              |  \--*  LCL_VAR   ref    V16 tmp5         
               [000097] ------------              \--*  LCL_VAR   ref    V03 loc1         

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000346] ---XG--N----              *  IND       ref   
               [000503] -----+------              \--*  ADD       byref 
               [000096] -----+------                 +--*  LCL_VAR   ref    V16 tmp5         
               [000502] -----+------                 \--*  CNS_INT   long   8 field offset Fseq[_fileName]
GenTreeNode creates assertion:
               [000346] ---XG--N----              *  IND       ref   
In BB03 New Local Constant Assertion: V16 != null index=#02, mask=0000000000000002

fgMorphTree BB03, STMT00092 (after)
               [000347] -A-XG+------              *  ASG       ref   
               [000346] ---XG+-N----              +--*  IND       ref   
               [000503] -----+------              |  \--*  ADD       byref 
               [000096] -----+------              |     +--*  LCL_VAR   ref    V16 tmp5         
               [000502] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_fileName]
               [000097] -----+------              \--*  LCL_VAR   ref    V03 loc1         

fgMorphTree BB03, STMT00031 (before)
               [000105] -A----------              *  ASG       ref   
               [000104] D------N----              +--*  LCL_VAR   ref    V17 tmp6         
               [000095] ------------              \--*  LCL_VAR   ref    V16 tmp5         
GenTreeNode creates assertion:
               [000105] -A----------              *  ASG       ref   
In BB03 New Local Copy     Assertion: V17 == V16 index=#03, mask=0000000000000004

fgMorphTree BB03, STMT00032 (before)
               [000108] -A----------              *  ASG       ref   
               [000107] D------N----              +--*  LCL_VAR   ref    V18 tmp7         
               [000099] ------------              \--*  LCL_VAR   ref    V16 tmp5         
GenTreeNode creates assertion:
               [000108] -A----------              *  ASG       ref   
In BB03 New Local Copy     Assertion: V18 == V16 index=#04, mask=0000000000000008

fgMorphTree BB03, STMT00030 (before)
               [000103] ------------              *  JTRUE     void  
               [000102] ------------              \--*  NE        int   
               [000100] ------------                 +--*  LCL_VAR   int    V04 loc2         
               [000101] ------------                 \--*  CNS_INT   int    0

Morphing BB04 of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'

fgMorphTree BB04, STMT00053 (before)
               [000203] -A----------              *  ASG       ref   
               [000202] D------N----              +--*  LCL_VAR   ref    V19 tmp8         
               [000110] ------------              \--*  LCL_VAR   ref    V17 tmp6         
GenTreeNode creates assertion:
               [000203] -A----------              *  ASG       ref   
In BB04 New Local Copy     Assertion: V19 == V17 index=#01, mask=0000000000000001

fgMorphTree BB04, STMT00054 (before)
               [000206] -A----------              *  ASG       ref   
               [000205] D------N----              +--*  LCL_VAR   ref    V20 tmp9         
               [000111] ------------              \--*  LCL_VAR   ref    V18 tmp7         
GenTreeNode creates assertion:
               [000206] -A----------              *  ASG       ref   
In BB04 New Local Copy     Assertion: V20 == V18 index=#02, mask=0000000000000002

fgMorphTree BB04, STMT00055 (before)
               [000209] -A----------              *  ASG       ref   
               [000208] D------N----              +--*  LCL_VAR   ref    V21 tmp10        
               [000201] ------------              \--*  LCL_VAR   ref    V07 loc5         
GenTreeNode creates assertion:
               [000209] -A----------              *  ASG       ref   
In BB04 New Local Copy     Assertion: V21 == V07 index=#03, mask=0000000000000004

Morphing BB05 of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'

fgMorphTree BB05, STMT00033 (before)
               [000119] -A----------              *  ASG       ref   
               [000118] D------N----              +--*  LCL_VAR   ref    V19 tmp8         
               [000112] ------------              \--*  LCL_VAR   ref    V17 tmp6         
GenTreeNode creates assertion:
               [000119] -A----------              *  ASG       ref   
In BB05 New Local Copy     Assertion: V19 == V17 index=#01, mask=0000000000000001

fgMorphTree BB05, STMT00034 (before)
               [000122] -A----------              *  ASG       ref   
               [000121] D------N----              +--*  LCL_VAR   ref    V20 tmp9         
               [000113] ------------              \--*  LCL_VAR   ref    V18 tmp7         
GenTreeNode creates assertion:
               [000122] -A----------              *  ASG       ref   
In BB05 New Local Copy     Assertion: V20 == V18 index=#02, mask=0000000000000002

fgMorphTree BB05, STMT00035 (before)
               [000125] -AC-G-------              *  ASG       ref   
               [000124] D------N----              +--*  LCL_VAR   ref    V21 tmp10        
               [000117] --C-G-------              \--*  CALL      ref    System.String.Concat
               [000114] ------------ arg0            +--*  LCL_VAR   ref    V05 loc3         
               [000115] ------------ arg1            +--*  CNS_STR   ref   <string constant>
               [000116] ------------ arg2            \--*  LCL_VAR   ref    V07 loc5         
Initializing arg info for 117.CALL:
ArgTable for 117.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 114.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 115.CNS_STR ref (By ref), 1 reg: rdx, byteAlignment=8]
fgArgTabEntry[arg 2 116.LCL_VAR ref (By ref), 1 reg: r8, byteAlignment=8]

Morphing args for 117.CALL:
argSlots=3, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rdx'):
               [000505] #---G+------              *  IND       ref   
               [000504] H----+------              \--*  CNS_INT(h) long   0xD1FFAB1E " "
Replaced with placeholder node:
               [000506] ----------L-              *  ARGPLACE  ref   
Deferred argument ('rcx'):
               [000114] -----+------              *  LCL_VAR   ref    V05 loc3         
Replaced with placeholder node:
               [000507] ----------L-              *  ARGPLACE  ref   
Deferred argument ('r8'):
               [000116] -----+------              *  LCL_VAR   ref    V07 loc5         
Replaced with placeholder node:
               [000508] ----------L-              *  ARGPLACE  ref   

Shuffled argument table:    rdx rcx r8 
ArgTable for 117.CALL after fgMorphArgs:
fgArgTabEntry[arg 1 505.IND ref (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 0 114.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=1, processed]
fgArgTabEntry[arg 2 116.LCL_VAR ref (By ref), 1 reg: r8, byteAlignment=8, lateArgInx=2, processed]


fgMorphTree BB05, STMT00035 (after)
               [000125] -ACXG+------              *  ASG       ref   
               [000124] D----+-N----              +--*  LCL_VAR   ref    V21 tmp10        
               [000117] --CXG+------              \--*  CALL      ref    System.String.Concat
               [000505] #---G+------ arg1 in rdx     +--*  IND       ref   
               [000504] H----+------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E " "
               [000114] -----+------ arg0 in rcx     +--*  LCL_VAR   ref    V05 loc3         
               [000116] -----+------ arg2 in r8      \--*  LCL_VAR   ref    V07 loc5         

Morphing BB06 of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'

fgMorphTree BB06, STMT00093 (before)
               [000350] -A-XG-------              *  ASG       ref   
               [000349] ---XG--N----              +--*  FIELD     ref    _arguments
               [000128] ------------              |  \--*  LCL_VAR   ref    V20 tmp9         
               [000129] ------------              \--*  LCL_VAR   ref    V21 tmp10        

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000349] ---XG--N----              *  IND       ref   
               [000510] -----+------              \--*  ADD       byref 
               [000128] -----+------                 +--*  LCL_VAR   ref    V20 tmp9         
               [000509] -----+------                 \--*  CNS_INT   long   16 field offset Fseq[_arguments]
GenTreeNode creates assertion:
               [000349] ---XG--N----              *  IND       ref   
In BB06 New Local Constant Assertion: V20 != null index=#01, mask=0000000000000001

fgMorphTree BB06, STMT00093 (after)
               [000350] -A-XG+------              *  ASG       ref   
               [000349] ---XG+-N----              +--*  IND       ref   
               [000510] -----+------              |  \--*  ADD       byref 
               [000128] -----+------              |     +--*  LCL_VAR   ref    V20 tmp9         
               [000509] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[_arguments]
               [000129] -----+------              \--*  LCL_VAR   ref    V21 tmp10        

fgMorphTree BB06, STMT00094 (before)
               [000355] -A-XG-------              *  ASG       bool  
               [000354] ---XG--N----              +--*  FIELD     bool   <UseShellExecute>k__BackingField
               [000131] ------------              |  \--*  LCL_VAR   ref    V19 tmp8         
               [000353] ------------              \--*  CNS_INT   int    0

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000354] ---XG--N----              *  IND       bool  
               [000512] -----+------              \--*  ADD       byref 
               [000131] -----+------                 +--*  LCL_VAR   ref    V19 tmp8         
               [000511] -----+------                 \--*  CNS_INT   long   130 field offset Fseq[<UseShellExecute>k__BackingField]
GenTreeNode creates assertion:
               [000354] ---XG--N----              *  IND       bool  
In BB06 New Local Constant Assertion: V19 != null index=#02, mask=0000000000000002

fgMorphTree BB06, STMT00094 (after)
               [000355] -A-XG+------              *  ASG       bool  
               [000354] ---XG+-N----              +--*  IND       bool  
               [000512] -----+------              |  \--*  ADD       byref 
               [000131] -----+------              |     +--*  LCL_VAR   ref    V19 tmp8         
               [000511] -----+------              |     \--*  CNS_INT   long   130 field offset Fseq[<UseShellExecute>k__BackingField]
               [000353] -----+------              \--*  CNS_INT   int    0

fgMorphTree BB06, STMT00038 (before)
               [000136] -A----------              *  ASG       ref   
               [000135] D------N----              +--*  LCL_VAR   ref    V08 loc6         
               [000127] ------------              \--*  LCL_VAR   ref    V19 tmp8         
GenTreeNode creates assertion:
               [000136] -A----------              *  ASG       ref   
In BB06 New Local Copy     Assertion: V08 == V19 index=#03, mask=0000000000000004

fgMorphTree BB06, STMT00040 (before)
               [000145] -A-XG-------              *  ASG       ref   
               [000144] D------N----              +--*  LCL_VAR   ref    V23 tmp12        
               [000138] ---XG-------              \--*  FIELD     ref    queuedAnalyzers
               [000137] ------------                 \--*  LCL_VAR   ref    V02 loc0         

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000138] ---XG-------              *  IND       ref   
               [000514] -----+------              \--*  ADD       byref 
               [000137] -----+------                 +--*  LCL_VAR   ref    V02 loc0         
               [000513] -----+------                 \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers]
GenTreeNode creates assertion:
               [000138] ---XG-------              *  IND       ref   
In BB06 New Local Constant Assertion: V02 != null index=#04, mask=0000000000000008

fgMorphTree BB06, STMT00040 (after)
               [000145] -A-XG+------              *  ASG       ref   
               [000144] D----+-N----              +--*  LCL_VAR   ref    V23 tmp12        
               [000138] ---XG+------              \--*  IND       ref   
               [000514] -----+------                 \--*  ADD       byref 
               [000137] -----+------                    +--*  LCL_VAR   ref    V02 loc0         
               [000513] -----+------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers]

fgMorphTree BB06, STMT00039 (before)
               [000143] -A-XG-------              *  ASG       ref   
               [000142] D------N----              +--*  LCL_VAR   ref    V22 tmp11        
               [000141] ---XG-------              \--*  FIELD     ref    <>9__2
               [000140] ------------                 \--*  LCL_VAR   ref    V02 loc0         

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000141] ---XG-------              *  IND       ref   
               [000516] -----+------              \--*  ADD       byref 
               [000140] -----+------                 +--*  LCL_VAR   ref    V02 loc0         
               [000515] -----+------                 \--*  CNS_INT   long   48 field offset Fseq[<>9__2]

fgMorphTree BB06, STMT00039 (after)
               [000143] -A-XG+------              *  ASG       ref   
               [000142] D----+-N----              +--*  LCL_VAR   ref    V22 tmp11        
               [000141] ---XG+------              \--*  IND       ref   
               [000516] -----+------                 \--*  ADD       byref 
               [000140] -----+------                    +--*  LCL_VAR   ref    V02 loc0         
               [000515] -----+------                    \--*  CNS_INT   long   48 field offset Fseq[<>9__2]

fgMorphTree BB06, STMT00042 (before)
               [000153] -A----------              *  ASG       ref   
               [000152] D------N----              +--*  LCL_VAR   ref    V24 tmp13        
               [000146] ------------              \--*  LCL_VAR   ref    V23 tmp12        
GenTreeNode creates assertion:
               [000153] -A----------              *  ASG       ref   
In BB06 New Local Copy     Assertion: V24 == V23 index=#05, mask=0000000000000010

fgMorphTree BB06, STMT00043 (before)
               [000156] -A----------              *  ASG       ref   
               [000155] D------N----              +--*  LCL_VAR   ref    V25 tmp14        
               [000139] ------------              \--*  LCL_VAR   ref    V08 loc6         

Assertion prop in BB06:
Copy     Assertion: V08 == V19 index=#03, mask=0000000000000004
               [000139] ------------              *  LCL_VAR   ref    V19 tmp8         
GenTreeNode creates assertion:
               [000156] -A----------              *  ASG       ref   
In BB06 New Local Copy     Assertion: V25 == V19 index=#06, mask=0000000000000020

fgMorphTree BB06, STMT00043 (after)
               [000156] -A---+------              *  ASG       ref   
               [000155] D----+-N----              +--*  LCL_VAR   ref    V25 tmp14        
               [000139] -----+------              \--*  LCL_VAR   ref    V19 tmp8         

fgMorphTree BB06, STMT00044 (before)
               [000159] -A----------              *  ASG       ref   
               [000158] D------N----              +--*  LCL_VAR   ref    V26 tmp15        
               [000147] ------------              \--*  LCL_VAR   ref    V22 tmp11        
GenTreeNode creates assertion:
               [000159] -A----------              *  ASG       ref   
In BB06 New Local Copy     Assertion: V26 == V22 index=#07, mask=0000000000000040

fgMorphTree BB06, STMT00041 (before)
               [000151] ------------              *  JTRUE     void  
               [000150] ------------              \--*  NE        int   
               [000148] ------------                 +--*  LCL_VAR   ref    V22 tmp11        
               [000149] ------------                 \--*  CNS_INT   ref    null

Morphing BB07 of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'

fgMorphTree BB07, STMT00048 (before)
               [000184] -AC---------              *  ASG       ref   
               [000183] D------N----              +--*  LCL_VAR   ref    V28 tmp17        
               [000182] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000181] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token
Initializing arg info for 182.CALL:
ArgTable for 182.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 181.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]

Morphing args for 182.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000181] H----+------              *  CNS_INT(h) long   0xd1ffab1e token
Replaced with placeholder node:
               [000517] ----------L-              *  ARGPLACE  long  

Shuffled argument table:    rcx 
ArgTable for 182.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 181.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]


fgMorphTree BB07, STMT00048 (after)
               [000184] -AC--+------              *  ASG       ref   
               [000183] D----+-N----              +--*  LCL_VAR   ref    V28 tmp17        
               [000182] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000181] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

fgMorphTree BB07, STMT00095 (before)
               [000359] ------------              *  JTRUE     void  
               [000358] ------------              \--*  EQ        int   
               [000179] ------------                 +--*  LCL_VAR   ref    V02 loc0         
               [000357] ------------                 \--*  CNS_INT   ref    null

Morphing BB10 of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'

fgMorphTree BB10, STMT00096 (before)
               [000362] -A-XG-------              *  ASG       ref   
               [000361] ---XG--N----              +--*  FIELD     ref    _target
               [000185] ------------              |  \--*  LCL_VAR   ref    V28 tmp17        
               [000360] ------------              \--*  LCL_VAR   ref    V02 loc0         

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000361] ---XG--N----              *  IND       ref   
               [000519] -----+------              \--*  ADD       byref 
               [000185] -----+------                 +--*  LCL_VAR   ref    V28 tmp17        
               [000518] -----+------                 \--*  CNS_INT   long   8 field offset Fseq[_target]
GenTreeNode creates assertion:
               [000361] ---XG--N----              *  IND       ref   
In BB10 New Local Constant Assertion: V28 != null index=#01, mask=0000000000000001

fgMorphTree BB10, STMT00096 (after)
               [000362] -A-XG+------              *  ASG       ref   
               [000361] ---XG+-N----              +--*  IND       ref   
               [000519] -----+------              |  \--*  ADD       byref 
               [000185] -----+------              |     +--*  LCL_VAR   ref    V28 tmp17        
               [000518] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
               [000360] -----+------              \--*  LCL_VAR   ref    V02 loc0         

fgMorphTree BB10, STMT00097 (before)
               [000366] -A-XG-------              *  ASG       long  
               [000365] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000363] ------------              |  \--*  LCL_VAR   ref    V28 tmp17        
               [000180] ------------              \--*  FTN_ADDR  long   <>c__DisplayClass5_0.<ExecuteAnalyzers>b__2


Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000365] ---XG--N----              *  IND       long  
               [000521] -----+------              \--*  ADD       byref 
               [000363] -----+------                 +--*  LCL_VAR   ref    V28 tmp17        
               [000520] -----+------                 \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]

fgMorphTree BB10, STMT00097 (after)
               [000366] -A-XG+------              *  ASG       long  
               [000365] ---XG+-N----              +--*  IND       long  
               [000521] -----+------              |  \--*  ADD       byref 
               [000363] -----+------              |     +--*  LCL_VAR   ref    V28 tmp17        
               [000520] -----+------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
               [000180] H----+------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

fgMorphTree BB10, STMT00050 (before)
               [000190] -A----------              *  ASG       ref   
               [000189] D------N----              +--*  LCL_VAR   ref    V09 loc7         
               [000188] ------------              \--*  LCL_VAR   ref    V28 tmp17        
GenTreeNode creates assertion:
               [000190] -A----------              *  ASG       ref   
In BB10 New Local Copy     Assertion: V09 == V28 index=#02, mask=0000000000000002

fgMorphTree BB10, STMT00051 (before)
               [000192] -A-XG-------              *  ASG       ref   
               [000191] ---XG--N----              +--*  FIELD     ref    <>9__2
               [000178] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000187] ------------              \--*  LCL_VAR   ref    V28 tmp17        

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000191] ---XG--N----              *  IND       ref   
               [000523] -----+------              \--*  ADD       byref 
               [000178] -----+------                 +--*  LCL_VAR   ref    V02 loc0         
               [000522] -----+------                 \--*  CNS_INT   long   48 field offset Fseq[<>9__2]
GenTreeNode creates assertion:
               [000191] ---XG--N----              *  IND       ref   
In BB10 New Local Constant Assertion: V02 != null index=#03, mask=0000000000000004

fgMorphTree BB10, STMT00051 (after)
               [000192] -A-XG+------              *  ASG       ref   
               [000191] ---XG+-N----              +--*  IND       ref   
               [000523] -----+------              |  \--*  ADD       byref 
               [000178] -----+------              |     +--*  LCL_VAR   ref    V02 loc0         
               [000522] -----+------              |     \--*  CNS_INT   long   48 field offset Fseq[<>9__2]
               [000187] -----+------              \--*  LCL_VAR   ref    V28 tmp17        

fgMorphTree BB10, STMT00052 (before)
               [000199] -A----------              *  ASG       ref   
               [000198] D------N----              +--*  LCL_VAR   ref    V26 tmp15        
               [000193] ------------              \--*  LCL_VAR   ref    V09 loc7         

Assertion prop in BB10:
Copy     Assertion: V09 == V28 index=#02, mask=0000000000000002
               [000193] ------------              *  LCL_VAR   ref    V28 tmp17        
GenTreeNode creates assertion:
               [000199] -A----------              *  ASG       ref   
In BB10 New Local Copy     Assertion: V26 == V28 index=#04, mask=0000000000000008

fgMorphTree BB10, STMT00052 (after)
               [000199] -A---+------              *  ASG       ref   
               [000198] D----+-N----              +--*  LCL_VAR   ref    V26 tmp15        
               [000193] -----+------              \--*  LCL_VAR   ref    V28 tmp17        

Morphing BB12 of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'

fgMorphTree BB12, STMT00045 (before)
               [000172] -AC---------              *  ASG       ref   
               [000171] D------N----              +--*  LCL_VAR   ref    V27 tmp16        
               [000170] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000169] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token
Initializing arg info for 170.CALL:
ArgTable for 170.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 169.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]

Morphing args for 170.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000169] H----+------              *  CNS_INT(h) long   0xd1ffab1e token
Replaced with placeholder node:
               [000524] ----------L-              *  ARGPLACE  long  

Shuffled argument table:    rcx 
ArgTable for 170.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 169.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]


fgMorphTree BB12, STMT00045 (after)
               [000172] -AC--+------              *  ASG       ref   
               [000171] D----+-N----              +--*  LCL_VAR   ref    V27 tmp16        
               [000170] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000169] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

fgMorphTree BB12, STMT00099 (before)
               [000371] ------------              *  JTRUE     void  
               [000370] ------------              \--*  NE        int   
               [000167] ------------                 +--*  LCL_VAR   ref    V02 loc0         
               [000369] ------------                 \--*  CNS_INT   ref    null

Morphing BB14 of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'

fgMorphTree BB14, STMT00102 (before)
               [000379] --C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance
Initializing arg info for 379.CALL:
ArgTable for 379.CALL after fgInitArgInfo:

Morphing args for 379.CALL:
argSlots=0, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32
ArgTable for 379.CALL after fgMorphArgs:

Converting BB14 to BBJ_THROW

Morphing BB15 of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'

fgMorphTree BB15, STMT00100 (before)
               [000374] -A-XG-------              *  ASG       ref   
               [000373] ---XG--N----              +--*  FIELD     ref    _target
               [000173] ------------              |  \--*  LCL_VAR   ref    V27 tmp16        
               [000372] ------------              \--*  LCL_VAR   ref    V02 loc0         

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000373] ---XG--N----              *  IND       ref   
               [000526] -----+------              \--*  ADD       byref 
               [000173] -----+------                 +--*  LCL_VAR   ref    V27 tmp16        
               [000525] -----+------                 \--*  CNS_INT   long   8 field offset Fseq[_target]
GenTreeNode creates assertion:
               [000373] ---XG--N----              *  IND       ref   
In BB15 New Local Constant Assertion: V27 != null index=#01, mask=0000000000000001

fgMorphTree BB15, STMT00100 (after)
               [000374] -A-XG+------              *  ASG       ref   
               [000373] ---XG+-N----              +--*  IND       ref   
               [000526] -----+------              |  \--*  ADD       byref 
               [000173] -----+------              |     +--*  LCL_VAR   ref    V27 tmp16        
               [000525] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
               [000372] -----+------              \--*  LCL_VAR   ref    V02 loc0         

fgMorphTree BB15, STMT00101 (before)
               [000378] -A-XG-------              *  ASG       long  
               [000377] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000375] ------------              |  \--*  LCL_VAR   ref    V27 tmp16        
               [000168] ------------              \--*  FTN_ADDR  long   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__OnAnalyzerFinished|1


Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000377] ---XG--N----              *  IND       long  
               [000528] -----+------              \--*  ADD       byref 
               [000375] -----+------                 +--*  LCL_VAR   ref    V27 tmp16        
               [000527] -----+------                 \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]

fgMorphTree BB15, STMT00101 (after)
               [000378] -A-XG+------              *  ASG       long  
               [000377] ---XG+-N----              +--*  IND       long  
               [000528] -----+------              |  \--*  ADD       byref 
               [000375] -----+------              |     +--*  LCL_VAR   ref    V27 tmp16        
               [000527] -----+------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
               [000168] H----+------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

fgMorphTree BB15, STMT00047 (before)
               [000177] --C-G-------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue
               [000164] ------------ this in rcx  +--*  LCL_VAR   ref    V24 tmp13        
               [000176] --C-G------- arg1         \--*  CALL      ref    SolutionAnalyzer.IPC.CreateSession
               [000165] ------------ arg0            +--*  LCL_VAR   ref    V25 tmp14        
               [000166] ------------ arg1            +--*  LCL_VAR   ref    V26 tmp15        
               [000175] ------------ arg2            \--*  LCL_VAR   ref    V27 tmp16        
Initializing arg info for 177.CALL:
ArgTable for 177.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 164.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 176.CALL ref (By ref), 1 reg: rdx, byteAlignment=8]

Morphing args for 177.CALL:
Initializing arg info for 176.CALL:
ArgTable for 176.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 165.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 166.LCL_VAR ref (By ref), 1 reg: rdx, byteAlignment=8]
fgArgTabEntry[arg 2 175.LCL_VAR ref (By ref), 1 reg: r8, byteAlignment=8]

Morphing args for 176.CALL:
argSlots=3, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000165] -----+------              *  LCL_VAR   ref    V25 tmp14        
Replaced with placeholder node:
               [000529] ----------L-              *  ARGPLACE  ref   
Deferred argument ('rdx'):
               [000166] -----+------              *  LCL_VAR   ref    V26 tmp15        
Replaced with placeholder node:
               [000530] ----------L-              *  ARGPLACE  ref   
Deferred argument ('r8'):
               [000175] -----+------              *  LCL_VAR   ref    V27 tmp16        
Replaced with placeholder node:
               [000531] ----------L-              *  ARGPLACE  ref   

Shuffled argument table:    rcx rdx r8 
ArgTable for 176.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 165.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 166.LCL_VAR ref (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]
fgArgTabEntry[arg 2 175.LCL_VAR ref (By ref), 1 reg: r8, byteAlignment=8, lateArgInx=2, processed]

argSlots=2, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Argument with 'side effect'...
               [000176] --CXG+------              *  CALL      ref    SolutionAnalyzer.IPC.CreateSession
               [000165] -----+------ arg0 in rcx  +--*  LCL_VAR   ref    V25 tmp14        
               [000166] -----+------ arg1 in rdx  +--*  LCL_VAR   ref    V26 tmp15        
               [000175] -----+------ arg2 in r8   \--*  LCL_VAR   ref    V27 tmp16        

lvaGrabTemp returning 42 (V42 tmp31) called for argument with side effect.

  Evaluate to a temp:
               [000533] -ACXG-----L-              *  ASG       ref   
               [000532] D------N----              +--*  LCL_VAR   ref    V42 tmp31        
               [000176] --CXG+------              \--*  CALL      ref    SolutionAnalyzer.IPC.CreateSession
               [000165] -----+------ arg0 in rcx     +--*  LCL_VAR   ref    V25 tmp14        
               [000166] -----+------ arg1 in rdx     +--*  LCL_VAR   ref    V26 tmp15        
               [000175] -----+------ arg2 in r8      \--*  LCL_VAR   ref    V27 tmp16        
Deferred argument ('rcx'):
               [000164] -----+------              *  LCL_VAR   ref    V24 tmp13        
Replaced with placeholder node:
               [000535] ----------L-              *  ARGPLACE  ref   

Shuffled argument table:    rdx rcx 
ArgTable for 177.CALL after fgMorphArgs:
fgArgTabEntry[arg 1 534.LCL_VAR ref (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=0, tmpNum=V42, isTmp, processed]
fgArgTabEntry[arg 0 164.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=1, processed]

GenTreeNode creates assertion:
               [000177] --CXG-------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue
In BB15 New Local Constant Assertion: V24 != null index=#02, mask=0000000000000002

fgMorphTree BB15, STMT00047 (after)
               [000177] --CXG+------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue
               [000533] -ACXG-----L- arg1 SETUP   +--*  ASG       ref   
               [000532] D------N----              |  +--*  LCL_VAR   ref    V42 tmp31        
               [000176] --CXG+------              |  \--*  CALL      ref    SolutionAnalyzer.IPC.CreateSession
               [000165] -----+------ arg0 in rcx  |     +--*  LCL_VAR   ref    V25 tmp14        
               [000166] -----+------ arg1 in rdx  |     +--*  LCL_VAR   ref    V26 tmp15        
               [000175] -----+------ arg2 in r8   |     \--*  LCL_VAR   ref    V27 tmp16        
               [000534] ------------ arg1 in rdx  +--*  LCL_VAR   ref    V42 tmp31        
               [000164] -----+------ this in rcx  \--*  LCL_VAR   ref    V24 tmp13        

Morphing BB17 of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'

fgMorphTree BB17, STMT00025 (before)
               [000084] --C-G-------              *  JTRUE     void  
               [000083] --C-G-------              \--*  NE        int   
               [000081] --C-G-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext
               [000080] ------------ this in rcx     |  \--*  LCL_VAR   ref    V06 loc4         
               [000082] ------------                 \--*  CNS_INT   int    0
Initializing arg info for 81.CALL:
ArgTable for 81.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 80.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 536.CNS_INT long (By ref), 1 reg: r11, byteAlignment=8, isNonStandard]

Morphing args for 81.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000080] -----+------              *  LCL_VAR   ref    V06 loc4         
Replaced with placeholder node:
               [000537] ----------L-              *  ARGPLACE  ref   
Deferred argument ('r11'):
               [000536] H----+------              *  CNS_INT(h) long   0xd1ffab1e ftn REG r11
Replaced with placeholder node:
               [000538] ----------L-              *  ARGPLACE  long  

Shuffled argument table:    rcx r11 
ArgTable for 81.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 80.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 536.CNS_INT long (By ref), 1 reg: r11, byteAlignment=8, lateArgInx=1, processed, isNonStandard]

GenTreeNode creates assertion:
               [000081] --CXG-------              *  CALLV stub int    System.Collections.IEnumerator.MoveNext
In BB17 New Local Constant Assertion: V06 != null index=#01, mask=0000000000000001

fgMorphTree BB17, STMT00025 (after)
               [000084] --CXG+------              *  JTRUE     void  
               [000083] J-CXG+-N----              \--*  NE        int   
               [000081] --CXG+------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext
               [000080] -----+------ this in rcx     |  +--*  LCL_VAR   ref    V06 loc4         
               [000536] H----+------ arg1 in r11     |  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11
               [000082] -----+------                 \--*  CNS_INT   int    0

Morphing BB20 of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'

fgMorphTree BB20, STMT00116 (before)
               [000431] ------------              *  JTRUE     void  
               [000432] ------------              \--*  EQ        int   
               [000433] ------------                 +--*  LCL_VAR   ref    V06 loc4         
               [000434] ------------                 \--*  CNS_INT   ref    null

Morphing BB21 of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'

fgMorphTree BB21, STMT00117 (before)
               [000435] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose
               [000436] ------------ this in rcx  \--*  LCL_VAR   ref    V06 loc4         
Initializing arg info for 435.CALL:
ArgTable for 435.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 436.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 539.CNS_INT long (By ref), 1 reg: r11, byteAlignment=8, isNonStandard]

Morphing args for 435.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000436] -----+------              *  LCL_VAR   ref    V06 loc4         
Replaced with placeholder node:
               [000540] ----------L-              *  ARGPLACE  ref   
Deferred argument ('r11'):
               [000539] H----+------              *  CNS_INT(h) long   0xd1ffab1e ftn REG r11
Replaced with placeholder node:
               [000541] ----------L-              *  ARGPLACE  long  

Shuffled argument table:    rcx r11 
ArgTable for 435.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 436.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 539.CNS_INT long (By ref), 1 reg: r11, byteAlignment=8, lateArgInx=1, processed, isNonStandard]

GenTreeNode creates assertion:
               [000435] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose
In BB21 New Local Constant Assertion: V06 != null index=#01, mask=0000000000000001

fgMorphTree BB21, STMT00117 (after)
               [000435] --CXG+------              *  CALLV stub void   System.IDisposable.Dispose
               [000436] -----+------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         
               [000539] H----+------ arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

Morphing BB23 of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'

fgMorphTree BB23, STMT00069 (before)
               [000257] ------------              *  JTRUE     void  
               [000256] ------------              \--*  EQ        int   
               [000254] ------------                 +--*  LCL_VAR   ref    V06 loc4         
               [000255] ------------                 \--*  CNS_INT   ref    null

Morphing BB24 of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'

fgMorphTree BB24, STMT00071 (before)
               [000260] --C-G-------              *  CALLV stub void   System.IDisposable.Dispose
               [000259] ------------ this in rcx  \--*  LCL_VAR   ref    V06 loc4         
Initializing arg info for 260.CALL:
ArgTable for 260.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 259.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 542.CNS_INT long (By ref), 1 reg: r11, byteAlignment=8, isNonStandard]

Morphing args for 260.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000259] -----+------              *  LCL_VAR   ref    V06 loc4         
Replaced with placeholder node:
               [000543] ----------L-              *  ARGPLACE  ref   
Deferred argument ('r11'):
               [000542] H----+------              *  CNS_INT(h) long   0xd1ffab1e ftn REG r11
Replaced with placeholder node:
               [000544] ----------L-              *  ARGPLACE  long  

Shuffled argument table:    rcx r11 
ArgTable for 260.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 259.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 542.CNS_INT long (By ref), 1 reg: r11, byteAlignment=8, lateArgInx=1, processed, isNonStandard]

GenTreeNode creates assertion:
               [000260] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose
In BB24 New Local Constant Assertion: V06 != null index=#01, mask=0000000000000001

fgMorphTree BB24, STMT00071 (after)
               [000260] --CXG+------              *  CALLV stub void   System.IDisposable.Dispose
               [000259] -----+------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         
               [000542] H----+------ arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

Morphing BB25 of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'

fgMorphTree BB25, STMT00070 (before)
               [000258] ------------              *  RETFILT   void  

Morphing BB26 of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'

fgMorphTree BB26, STMT00103 (before)
               [000384] -A-XG-------              *  ASG       ref   
               [000383] D------N----              +--*  LCL_VAR   ref    V35 tmp24        
               [000213] ---XG-------              \--*  FIELD     ref    queuedAnalyzers
               [000212] ------------                 \--*  LCL_VAR   ref    V02 loc0         

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000213] ---XG-------              *  IND       ref   
               [000546] -----+------              \--*  ADD       byref 
               [000212] -----+------                 +--*  LCL_VAR   ref    V02 loc0         
               [000545] -----+------                 \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers]
GenTreeNode creates assertion:
               [000213] ---XG-------              *  IND       ref   
In BB26 New Local Constant Assertion: V02 != null index=#01, mask=0000000000000001

fgMorphTree BB26, STMT00103 (after)
               [000384] -A-XG+------              *  ASG       ref   
               [000383] D----+-N----              +--*  LCL_VAR   ref    V35 tmp24        
               [000213] ---XG+------              \--*  IND       ref   
               [000546] -----+------                 \--*  ADD       byref 
               [000212] -----+------                    +--*  LCL_VAR   ref    V02 loc0         
               [000545] -----+------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers]

fgMorphTree BB26, STMT00057 (before)
               [000217] -ACXG-------              *  ASG       int   
               [000216] ---XG--N----              +--*  FIELD     int    analyzerCount
               [000211] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000382] ---XG-------              \--*  FIELD     int    _size
               [000381] ------------                 \--*  LCL_VAR   ref    V35 tmp24        

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000216] ---XG--N----              *  IND       int   
               [000548] -----+------              \--*  ADD       byref 
               [000211] -----+------                 +--*  LCL_VAR   ref    V02 loc0         
               [000547] -----+------                 \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000382] ---XG-------              *  IND       int   
               [000550] -----+------              \--*  ADD       byref 
               [000381] -----+------                 +--*  LCL_VAR   ref    V35 tmp24        
               [000549] -----+------                 \--*  CNS_INT   long   24 field offset Fseq[_size]
GenTreeNode creates assertion:
               [000382] ---XG-------              *  IND       int   
In BB26 New Local Constant Assertion: V35 != null index=#02, mask=0000000000000002

fgMorphTree BB26, STMT00057 (after)
               [000217] -A-XG+------              *  ASG       int   
               [000216] ---XG+-N----              +--*  IND       int   
               [000548] -----+------              |  \--*  ADD       byref 
               [000211] -----+------              |     +--*  LCL_VAR   ref    V02 loc0         
               [000547] -----+------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]
               [000382] ---XG+------              \--*  IND       int   
               [000550] -----+------                 \--*  ADD       byref 
               [000381] -----+------                    +--*  LCL_VAR   ref    V35 tmp24        
               [000549] -----+------                    \--*  CNS_INT   long   24 field offset Fseq[_size]

fgMorphTree BB26, STMT00058 (before)
               [000224] -AC---------              *  ASG       ref   
               [000223] D------N----              +--*  LCL_VAR   ref    V29 tmp18        
               [000222] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000221] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e method
Initializing arg info for 222.CALL:
ArgTable for 222.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 221.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]

Morphing args for 222.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000221] H----+------              *  CNS_INT(h) long   0xd1ffab1e method
Replaced with placeholder node:
               [000551] ----------L-              *  ARGPLACE  long  

Shuffled argument table:    rcx 
ArgTable for 222.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 221.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]


fgMorphTree BB26, STMT00058 (after)
               [000224] -AC--+------              *  ASG       ref   
               [000223] D----+-N----              +--*  LCL_VAR   ref    V29 tmp18        
               [000222] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000221] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

fgMorphTree BB26, STMT00109 (before)
               [000402] -A-XG-------              *  ASG       int   
               [000401] D------N----              +--*  LCL_VAR   int    V37 tmp26        
               [000220] ---XG-------              \--*  FIELD     int    analyzerCount
               [000219] ------------                 \--*  LCL_VAR   ref    V02 loc0         

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000220] ---XG-------              *  IND       int   
               [000553] -----+------              \--*  ADD       byref 
               [000219] -----+------                 +--*  LCL_VAR   ref    V02 loc0         
               [000552] -----+------                 \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]
GenTreeNode creates assertion:
               [000402] -A-XG-------              *  ASG       int   
In BB26 New Local Subrange Assertion: V37 in [-2147483648..2147483647] index=#03, mask=0000000000000004

fgMorphTree BB26, STMT00109 (after)
               [000402] -A-XG+------              *  ASG       int   
               [000401] D----+-N----              +--*  LCL_VAR   int    V37 tmp26        
               [000220] ---XG+------              \--*  IND       int   
               [000553] -----+------                 \--*  ADD       byref 
               [000219] -----+------                    +--*  LCL_VAR   ref    V02 loc0         
               [000552] -----+------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]

fgMorphTree BB26, STMT00104 (before)
               [000389] -AC---------              *  ASG       ref   
               [000388] D------N----              +--*  LCL_VAR   ref    V36 tmp25        
               [000387] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000386] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token
Initializing arg info for 387.CALL:
ArgTable for 387.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 386.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]

Morphing args for 387.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000386] H----+------              *  CNS_INT(h) long   0xd1ffab1e token
Replaced with placeholder node:
               [000554] ----------L-              *  ARGPLACE  long  

Shuffled argument table:    rcx 
ArgTable for 387.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 386.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]


fgMorphTree BB26, STMT00104 (after)
               [000389] -AC--+------              *  ASG       ref   
               [000388] D----+-N----              +--*  LCL_VAR   ref    V36 tmp25        
               [000387] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000386] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

fgMorphTree BB26, STMT00110 (before)
               [000406] --C-G-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor
               [000390] ------------ this in rcx  +--*  LCL_VAR   ref    V36 tmp25        
               [000404] ------------ arg1         +--*  CNS_INT   int    0
               [000405] ------------ arg2         \--*  CNS_INT   ref    null
Initializing arg info for 406.CALL:
ArgTable for 406.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 390.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 404.CNS_INT int (By ref), 1 reg: rdx, byteAlignment=8]
fgArgTabEntry[arg 2 405.CNS_INT ref (By ref), 1 reg: r8, byteAlignment=8]

Morphing args for 406.CALL:
argSlots=3, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000390] -----+------              *  LCL_VAR   ref    V36 tmp25        
Replaced with placeholder node:
               [000555] ----------L-              *  ARGPLACE  ref   
Deferred argument ('rdx'):
               [000404] -----+------              *  CNS_INT   int    0
Replaced with placeholder node:
               [000556] ----------L-              *  ARGPLACE  int   
Deferred argument ('r8'):
               [000405] -----+------              *  CNS_INT   ref    null
Replaced with placeholder node:
               [000557] ----------L-              *  ARGPLACE  ref   

Shuffled argument table:    rcx rdx r8 
ArgTable for 406.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 390.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 404.CNS_INT int (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]
fgArgTabEntry[arg 2 405.CNS_INT ref (By ref), 1 reg: r8, byteAlignment=8, lateArgInx=2, processed]


fgMorphTree BB26, STMT00110 (after)
               [000406] --CXG+------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor
               [000390] -----+------ this in rcx  +--*  LCL_VAR   ref    V36 tmp25        
               [000404] -----+------ arg1 in rdx  +--*  CNS_INT   int    0
               [000405] -----+------ arg2 in r8   \--*  CNS_INT   ref    null

fgMorphTree BB26, STMT00106 (before)
               [000394] -A-XG-------              *  ASG       ref   
               [000393] ---XG--N----              +--*  FIELD     ref    _workItems
               [000225] ------------              |  \--*  LCL_VAR   ref    V29 tmp18        
               [000392] ------------              \--*  LCL_VAR   ref    V36 tmp25        

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000393] ---XG--N----              *  IND       ref   
               [000559] -----+------              \--*  ADD       byref 
               [000225] -----+------                 +--*  LCL_VAR   ref    V29 tmp18        
               [000558] -----+------                 \--*  CNS_INT   long   8 field offset Fseq[_workItems]
GenTreeNode creates assertion:
               [000393] ---XG--N----              *  IND       ref   
In BB26 New Local Constant Assertion: V29 != null index=#04, mask=0000000000000008

fgMorphTree BB26, STMT00106 (after)
               [000394] -A-XG+------              *  ASG       ref   
               [000393] ---XG+-N----              +--*  IND       ref   
               [000559] -----+------              |  \--*  ADD       byref 
               [000225] -----+------              |     +--*  LCL_VAR   ref    V29 tmp18        
               [000558] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_workItems]
               [000392] -----+------              \--*  LCL_VAR   ref    V36 tmp25        

fgMorphTree BB26, STMT00108 (before)
               [000400] -A-XG-------              *  ASG       int   
               [000399] ---XG--N----              +--*  FIELD     int    _workItemsToComplete
               [000397] ------------              |  \--*  LCL_VAR   ref    V29 tmp18        
               [000398] ------------              \--*  LCL_VAR   int    V37 tmp26        

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000399] ---XG--N----              *  IND       int   
               [000561] -----+------              \--*  ADD       byref 
               [000397] -----+------                 +--*  LCL_VAR   ref    V29 tmp18        
               [000560] -----+------                 \--*  CNS_INT   long   16 field offset Fseq[_workItemsToComplete]

fgMorphTree BB26, STMT00108 (after)
               [000400] -A-XG+------              *  ASG       int   
               [000399] ---XG+-N----              +--*  IND       int   
               [000561] -----+------              |  \--*  ADD       byref 
               [000397] -----+------              |     +--*  LCL_VAR   ref    V29 tmp18        
               [000560] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[_workItemsToComplete]
               [000398] -----+------              \--*  LCL_VAR   int    V37 tmp26        

fgMorphTree BB26, STMT00060 (before)
               [000229] -A-XG-------              *  ASG       ref   
               [000228] ---XG--N----              +--*  FIELD     ref    progressReporter
               [000218] ------------              |  \--*  LCL_VAR   ref    V02 loc0         
               [000227] ------------              \--*  LCL_VAR   ref    V29 tmp18        

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000228] ---XG--N----              *  IND       ref   
               [000563] -----+------              \--*  ADD       byref 
               [000218] -----+------                 +--*  LCL_VAR   ref    V02 loc0         
               [000562] -----+------                 \--*  CNS_INT   long   16 field offset Fseq[progressReporter]

fgMorphTree BB26, STMT00060 (after)
               [000229] -A-XG+------              *  ASG       ref   
               [000228] ---XG+-N----              +--*  IND       ref   
               [000563] -----+------              |  \--*  ADD       byref 
               [000218] -----+------              |     +--*  LCL_VAR   ref    V02 loc0         
               [000562] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter]
               [000227] -----+------              \--*  LCL_VAR   ref    V29 tmp18        

fgMorphTree BB26, STMT00061 (before)
               [000232] -A----------              *  ASG       int   
               [000231] D------N----              +--*  LCL_VAR   int    V10 loc8         
               [000230] ------------              \--*  CNS_INT   int    0
GenTreeNode creates assertion:
               [000232] -A----------              *  ASG       int   
In BB26 New Local Constant Assertion: V10 == 0 index=#05, mask=0000000000000010

Morphing BB27 of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'

fgMorphTree BB27, STMT00065 (before)
               [000243] --C-G-------              *  CALL nullcheck void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0
               [000242] ------------ this in rcx  \--*  LCL_VAR   ref    V02 loc0         
Initializing arg info for 243.CALL:
ArgTable for 243.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 242.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8]

Morphing args for 243.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000242] -----+------              *  LCL_VAR   ref    V02 loc0         
Replaced with placeholder node:
               [000564] ----------L-              *  ARGPLACE  ref   

Shuffled argument table:    rcx 
ArgTable for 243.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 242.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]

GenTreeNode creates assertion:
               [000243] --CXG-------              *  CALL nullcheck void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0
In BB27 New Local Constant Assertion: V02 != null index=#01, mask=0000000000000001

fgMorphTree BB27, STMT00065 (after)
               [000243] --CXG+------              *  CALL nullcheck void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0
               [000242] -----+------ this in rcx  \--*  LCL_VAR   ref    V02 loc0         

fgMorphTree BB27, STMT00066 (before)
               [000248] -A----------              *  ASG       int   
               [000247] D------N----              +--*  LCL_VAR   int    V10 loc8         
               [000246] ------------              \--*  ADD       int   
               [000244] ------------                 +--*  LCL_VAR   int    V10 loc8         
               [000245] ------------                 \--*  CNS_INT   int    1

Morphing BB28 of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'

fgMorphTree BB28, STMT00114 (before)
               [000424] -A-XG-------              *  ASG       int   
               [000423] D------N----              +--*  LCL_VAR   int    V39 tmp28        
               [000237] ---XG-------              \--*  FIELD     int    analyzerCount
               [000236] ------------                 \--*  LCL_VAR   ref    V02 loc0         

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000237] ---XG-------              *  IND       int   
               [000566] -----+------              \--*  ADD       byref 
               [000236] -----+------                 +--*  LCL_VAR   ref    V02 loc0         
               [000565] -----+------                 \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]
GenTreeNode creates assertion:
               [000237] ---XG-------              *  IND       int   
In BB28 New Local Constant Assertion: V02 != null index=#01, mask=0000000000000001
GenTreeNode creates assertion:
               [000424] -A-XG-------              *  ASG       int   
In BB28 New Local Subrange Assertion: V39 in [-2147483648..2147483647] index=#02, mask=0000000000000002

fgMorphTree BB28, STMT00114 (after)
               [000424] -A-XG+------              *  ASG       int   
               [000423] D----+-N----              +--*  LCL_VAR   int    V39 tmp28        
               [000237] ---XG+------              \--*  IND       int   
               [000566] -----+------                 \--*  ADD       byref 
               [000236] -----+------                    +--*  LCL_VAR   ref    V02 loc0         
               [000565] -----+------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]

fgMorphTree BB28, STMT00111 (before)
               [000414] ------------              *  JTRUE     void  
               [000413] ------------              \--*  LE        int   
               [000411] ------------                 +--*  CNS_INT   int    8
               [000412] ------------                 \--*  LCL_VAR   int    V39 tmp28        

Morphing BB30 of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'

fgMorphTree BB30, STMT00113 (before)
               [000421] -A----------              *  ASG       int   
               [000420] D------N----              +--*  LCL_VAR   int    V38 tmp27        
               [000419] ------------              \--*  LCL_VAR   int    V39 tmp28        
GenTreeNode creates assertion:
               [000421] -A----------              *  ASG       int   
In BB30 New Local Copy     Assertion: V38 == V39 index=#01, mask=0000000000000001

Morphing BB31 of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'

fgMorphTree BB31, STMT00112 (before)
               [000417] -A----------              *  ASG       int   
               [000416] D------N----              +--*  LCL_VAR   int    V38 tmp27        
               [000415] ------------              \--*  CNS_INT   int    8
GenTreeNode creates assertion:
               [000417] -A----------              *  ASG       int   
In BB31 New Local Constant Assertion: V38 == 8 index=#01, mask=0000000000000001

Morphing BB32 of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'

fgMorphTree BB32, STMT00064 (before)
               [000241] --C---------              *  JTRUE     void  
               [000240] --C---------              \--*  LT        int   
               [000233] ------------                 +--*  LCL_VAR   int    V10 loc8         
               [000422] ------------                 \--*  LCL_VAR   int    V38 tmp27        

Morphing BB33 of 'SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task'

fgMorphTree BB33, STMT00115 (before)
               [000429] -A-XG-------              *  ASG       ref   
               [000428] D------N----              +--*  LCL_VAR   ref    V40 tmp29        
               [000250] ---XG-------              \--*  FIELD     ref    allAnalyzersHaveRun
               [000249] ------------                 \--*  LCL_VAR   ref    V02 loc0         

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000250] ---XG-------              *  IND       ref   
               [000568] -----+------              \--*  ADD       byref 
               [000249] -----+------                 +--*  LCL_VAR   ref    V02 loc0         
               [000567] -----+------                 \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun]
GenTreeNode creates assertion:
               [000250] ---XG-------              *  IND       ref   
In BB33 New Local Constant Assertion: V02 != null index=#01, mask=0000000000000001

fgMorphTree BB33, STMT00115 (after)
               [000429] -A-XG+------              *  ASG       ref   
               [000428] D----+-N----              +--*  LCL_VAR   ref    V40 tmp29        
               [000250] ---XG+------              \--*  IND       ref   
               [000568] -----+------                 \--*  ADD       byref 
               [000249] -----+------                    +--*  LCL_VAR   ref    V02 loc0         
               [000567] -----+------                    \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun]

fgMorphTree BB33, STMT00068 (before)
               [000253] --C---------              *  RETURN    ref   
               [000427] ---XG-------              \--*  FIELD     ref    _task
               [000426] ------------                 \--*  LCL_VAR   ref    V40 tmp29        

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000427] ---XG-------              *  IND       ref   
               [000570] -----+------              \--*  ADD       byref 
               [000426] -----+------                 +--*  LCL_VAR   ref    V40 tmp29        
               [000569] -----+------                 \--*  CNS_INT   long   8 field offset Fseq[_task]
GenTreeNode creates assertion:
               [000427] ---XG-------              *  IND       ref   
In BB33 New Local Constant Assertion: V40 != null index=#02, mask=0000000000000002

fgMorphTree BB33, STMT00068 (after)
               [000253] ---XG+------              *  RETURN    ref   
               [000427] ---XG+------              \--*  IND       ref   
               [000570] -----+------                 \--*  ADD       byref 
               [000426] -----+------                    +--*  LCL_VAR   ref    V40 tmp29        
               [000569] -----+------                    \--*  CNS_INT   long   8 field offset Fseq[_task]
Method has EH, marking method as fully interruptible

*************** Finishing PHASE Morph - Global
Trees after Morph - Global

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB17 (always) T0      try {       keep i try label 
BB03 [0002]  1  0    BB17                  1       [072..08B)-> BB05 ( cond ) T0                  i label target hascall gcsafe newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  1       [08B..08F)-> BB06 (always) T0                  i bwd 
BB05 [0004]  1  0    BB03                  1       [08F..09C)                 T0                  i label target hascall gcsafe bwd 
BB06 [0005]  2  0    BB04,BB05             1       [09C..0BB)-> BB12 ( cond ) T0                  i label target bwd 
BB07 [0006]  1  0    BB06                  1       [000..0D3)-> BB14 ( cond ) T0                  i hascall newobj bwd 
BB10 [0041]  1  0    BB07                  1       [000..000)                 T0                  i internal label target newobj bwd 
BB12 [0007]  2  0    BB06,BB10             1       [000..0E9)-> BB15 ( cond ) T0                  i label target hascall newobj bwd 
BB14 [0044]  2  0    BB07,BB12             0       [000..000)        (throw ) T0                  i internal rare label target hascall gcsafe bwd 
BB15 [0045]  1  0    BB12                  1       [000..000)                 T0                  i internal label target hascall gcsafe newobj bwd 
BB17 [0008]  2  0    BB02,BB15             1       [0E9..0F2)-> BB03 ( cond ) T0      }           i label target hascall bwd 
BB20 [0057]  1       BB17                  1       [0F4..0F8)-> BB26 ( cond )                     keep i label target cfb 
BB21 [0058]  1       BB20                  1       [0F8..100)-> BB26 (always)                     i hascall gcsafe 
BB23 [0010]  1     0                       1       [0F4..0F8)-> BB25 ( cond )    H0   fault {     keep i label target 
BB24 [0011]  1     0 BB23                  1       [0F8..0FF)                    H0               i hascall gcsafe 
BB25 [0012]  2     0 BB23,BB24             1       [0FF..100)        (finret)    H0   }           i label target 
BB26 [0013]  2       BB20,BB21             1       [100..127)-> BB28 (always)                     i label target hascall gcsafe newobj 
BB27 [0014]  1       BB32                  1       [127..133)                                     i label target hascall gcsafe bwd bwd-target 
BB28 [0015]  2       BB26,BB27             1       [000..147)-> BB31 ( cond )                     i label target bwd 
BB30 [0053]  1       BB28                  1       [000..000)-> BB32 (always)                     i internal bwd 
BB31 [0054]  1       BB28                  1       [000..000)                                     i internal label target bwd 
BB32 [0055]  2       BB30,BB31             1       [???..???)-> BB27 ( cond )                     internal label target bwd 
BB33 [0016]  1       BB32                  1       [147..153)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..070), preds={} succs={BB02}

***** BB01
STMT00000 (IL 0x000...0x005)
               [000003] -AC--+------              *  ASG       ref   
               [000002] D----+-N----              +--*  LCL_VAR   ref    V12 tmp1         
               [000001] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000000] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB01
STMT00002 (IL 0x005...  ???)
               [000008] -A---+------              *  ASG       ref   
               [000007] D----+-N----              +--*  LCL_VAR   ref    V02 loc0         
               [000006] -----+------              \--*  LCL_VAR   ref    V12 tmp1         

***** BB01
STMT00003 (IL 0x006...0x008)
               [000012] -A-XG+------              *  ASG       ref   
               [000011] ---XG+-N----              +--*  IND       ref   
               [000440] -----+------              |  \--*  ADD       byref 
               [000009] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000439] -----+------              |     \--*  CNS_INT   long   32 field offset Fseq[outputFile]
               [000010] -----+------              \--*  LCL_VAR   ref    V01 arg1         

***** BB01
STMT00004 (IL 0x00D...0x00F)
               [000016] -A-XG+------              *  ASG       int   
               [000015] ---XG+-N----              +--*  IND       int   
               [000442] -----+------              |  \--*  ADD       byref 
               [000013] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000441] -----+------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]
               [000014] -----+------              \--*  CNS_INT   int    0

***** BB01
STMT00005 (IL 0x014...0x016)
               [000020] -A-XG+------              *  ASG       int   
               [000019] ---XG+-N----              +--*  IND       int   
               [000444] -----+------              |  \--*  ADD       byref 
               [000017] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000443] -----+------              |     \--*  CNS_INT   long   56 field offset Fseq[analyzersFinishedCount]
               [000018] -----+------              \--*  CNS_INT   int    0

***** BB01
STMT00006 (IL 0x01B...0x021)
               [000025] -AC--+------              *  ASG       ref   
               [000024] D----+-N----              +--*  LCL_VAR   ref    V13 tmp2         
               [000023] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000022] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00074 (IL   ???...  ???)
               [000269] -AC--+------              *  ASG       ref   
               [000268] D----+-N----              +--*  LCL_VAR   ref    V30 tmp19        
               [000267] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000266] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00079 (IL   ???...  ???)
               [000283] -A-XG+------              *  ASG       int   
               [000282] V--XG+-N----              +--*  IND       int   
               [000448] -----+------              |  \--*  ADD       byref 
               [000280] -----+------              |     +--*  LCL_VAR   ref    V30 tmp19        
               [000447] -----+------              |     \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags]
               [000281] -----+------              \--*  CNS_INT   int    0x2000400

***** BB01
STMT00076 (IL   ???...  ???)
               [000274] -A-XG+------              *  ASG       ref   
               [000273] ---XG+-N----              +--*  IND       ref   
               [000450] -----+------              |  \--*  ADD       byref 
               [000265] -----+------              |     +--*  LCL_VAR   ref    V13 tmp2         
               [000449] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_task]
               [000272] -----+------              \--*  LCL_VAR   ref    V30 tmp19        

***** BB01
STMT00008 (IL 0x021...  ???)
               [000030] -A-XG+------              *  ASG       ref   
               [000029] ---XG+-N----              +--*  IND       ref   
               [000452] -----+------              |  \--*  ADD       byref 
               [000021] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000451] -----+------              |     \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun]
               [000028] -----+------              \--*  LCL_VAR   ref    V13 tmp2         

***** BB01
STMT00009 (IL 0x026...0x02C)
               [000035] -AC--+------              *  ASG       ref   
               [000034] D----+-N----              +--*  LCL_VAR   ref    V14 tmp3         
               [000033] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000032] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00082 (IL   ???...  ???)
               [000292] -ACXG+------              *  ASG       ref   
               [000291] ---XG+-N----              +--*  IND       ref   
               [000455] -----+------              |  \--*  ADD       byref 
               [000287] -----+------              |     +--*  LCL_VAR   ref    V14 tmp3         
               [000454] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_array]
               [000300] --CXG+------              \--*  COMMA     ref   
               [000299] H-CXG+------                 +--*  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS
               [000297] -----+------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e0b0028
               [000298] -----+------ arg1 in rdx     |  \--*  CNS_INT   int    14
               [000295] n---G+------                 \--*  IND       ref   
               [000458] I----+------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[Value]

***** BB01
STMT00011 (IL 0x02C...  ???)
               [000040] -A-XG+------              *  ASG       ref   
               [000039] ---XG+-N----              +--*  IND       ref   
               [000460] -----+------              |  \--*  ADD       byref 
               [000031] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000459] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers]
               [000038] -----+------              \--*  LCL_VAR   ref    V14 tmp3         

***** BB01
STMT00012 (IL 0x031...0x033)
               [000044] -A-XG+------              *  ASG       ref   
               [000043] ---XG+-N----              +--*  IND       ref   
               [000462] -----+------              |  \--*  ADD       byref 
               [000041] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000461] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter]
               [000042] -----+------              \--*  CNS_INT   ref    null

***** BB01
STMT00013 (IL 0x038...0x03E)
               [000049] -AC--+------              *  ASG       ref   
               [000048] D----+-N----              +--*  LCL_VAR   ref    V15 tmp4         
               [000047] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000046] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00083 (IL   ???...  ???)
               [000303] --CXG+------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor
               [000050] -----+------ this in rcx  +--*  LCL_VAR   ref    V15 tmp4         
               [000302] -----+------ arg1 in rdx  \--*  CNS_INT   ref    null

***** BB01
STMT00015 (IL 0x03E...  ???)
               [000054] -A-XG+------              *  ASG       ref   
               [000053] ---XG+-N----              +--*  IND       ref   
               [000467] -----+------              |  \--*  ADD       byref 
               [000045] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000466] -----+------              |     \--*  CNS_INT   long   40 field offset Fseq[output]
               [000052] -----+------              \--*  LCL_VAR   ref    V15 tmp4         

***** BB01
STMT00086 (IL   ???...  ???)
               [000316] -ACXG+------              *  ASG       ref   
               [000315] D----+-N----              +--*  LCL_VAR   ref    V31 tmp20        
               [000055] --CXG+------              \--*  CALL      ref    System.Diagnostics.Process.GetCurrentProcess

***** BB01
STMT00087 (IL   ???...  ???)
               [000314] ---X-+------              *  NULLCHECK byte  
               [000313] -----+------              \--*  LCL_VAR   ref    V31 tmp20        

***** BB01
STMT00084 (IL   ???...  ???)
               [000308] --CXG+------              *  CALL      void   System.Diagnostics.Process.EnsureState
               [000306] -----+------ this in rcx  +--*  LCL_VAR   ref    V31 tmp20        
               [000307] -----+------ arg1 in rdx  \--*  CNS_INT   int    3

***** BB01
STMT00088 (IL   ???...  ???)
               [000322] -ACXG+------              *  ASG       ref   
               [000321] D----+-N----              +--*  LCL_VAR   ref    V32 tmp21        
               [000311] --CXG+------              \--*  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule
               [000310] ---XG+------ arg0 in rcx     \--*  IND       int   
               [000471] -----+------                    \--*  ADD       byref 
               [000309] -----+------                       +--*  LCL_VAR   ref    V31 tmp20        
               [000470] -----+------                       \--*  CNS_INT   long   200 field offset Fseq[_processId]

***** BB01
STMT00019 (IL   ???...  ???)
               [000062] -A-XG+------              *  ASG       ref   
               [000061] D----+-N----              +--*  LCL_VAR   ref    V03 loc1         
               [000320] ---XG+------              \--*  IND       ref   
               [000474] -----+------                 \--*  ADD       byref 
               [000319] -----+------                    +--*  LCL_VAR   ref    V32 tmp21        
               [000473] -----+------                    \--*  CNS_INT   long   40 field offset Fseq[<FileName>k__BackingField]

***** BB01
STMT00090 (IL 0x053...  ???)
               [000333] ---X-+------              *  NULLCHECK byte  
               [000332] -----+------              \--*  LCL_VAR   ref    V03 loc1         

***** BB01
STMT00021 (IL   ???...  ???)
               [000069] -ACXG+------              *  ASG       int   
               [000068] D----+-N----              +--*  LCL_VAR   int    V04 loc2         
               [000329] --CXG+------              \--*  GE        int   
               [000340] --CXG+------                 +--*  CALL      int    System.String.IndexOf
               [000339] -----+------ arg4 out+20     |  +--*  CNS_INT   int    5
     (  5,  4) [000338] ---X-------- arg3 in r9      |  +--*  ARR_LENGTH int   
     (  3,  2) [000337] ------------                 |  |  \--*  LCL_VAR   ref    V03 loc1         
     (  4, 12) [000476] #---G------- arg1 in rdx     |  +--*  IND       ref   
     (  2, 10) [000475] H-----------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E "dotnet.exe"
               [000063] -----+------ this in rcx     |  +--*  LCL_VAR   ref    V03 loc1         
               [000336] -----+------ arg2 in r8      |  \--*  CNS_INT   int    0
               [000328] -----+------                 \--*  CNS_INT   int    0

***** BB01
STMT00023 (IL   ???...  ???)
               [000075] -ACXG+------              *  ASG       ref   
               [000074] D----+-N----              +--*  LCL_VAR   ref    V05 loc3         
               [000494] -ACXG+------              \--*  COMMA     ref   
               [000482] -ACXG+------                 +--*  ASG       ref   
               [000481] D----+-N----                 |  +--*  LCL_VAR   ref    V41 tmp30        
               [000070] --CXG+------                 |  \--*  CALL      ref    System.Environment.GetCommandLineArgs
               [000493] ---XG+------                 \--*  COMMA     ref   
               [000487] ---X-+------                    +--*  ARR_BOUNDS_CHECK_Rng void  
               [000072] -----+------                    |  +--*  CNS_INT   int    0
               [000486] ---X-+------                    |  \--*  ARR_LENGTH int   
               [000483] -----+------                    |     \--*  LCL_VAR   ref    V41 tmp30        
               [000073] a---G+------                    \--*  IND       ref   
               [000492] -----+------                       \--*  ADD       byref 
               [000484] -----+------                          +--*  LCL_VAR   ref    V41 tmp30        
               [000491] -----+------                          \--*  CNS_INT   long   16 Fseq[#FirstElem]

***** BB01
STMT00024 (IL 0x068...0x06E)
               [000079] -ACXG+------              *  ASG       ref   
               [000078] D----+-N----              +--*  LCL_VAR   ref    V06 loc4         
               [000077] --CXG+------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator
               [000076] -----+------ this in rcx     +--*  LCL_VAR   ref    V00 arg0         
               [000495] H----+------ arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

------------ BB02 [070..072) -> BB17 (always), preds={BB01} succs={BB17}

------------ BB03 [072..08B) -> BB05 (cond), preds={BB17} succs={BB04,BB05}

***** BB03
STMT00026 (IL 0x072...0x079)
               [000088] -ACXG+------              *  ASG       ref   
               [000087] D----+-N----              +--*  LCL_VAR   ref    V07 loc5         
               [000086] --CXG+------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current
               [000085] -----+------ this in rcx     +--*  LCL_VAR   ref    V06 loc4         
               [000498] H----+------ arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

***** BB03
STMT00027 (IL 0x07B...0x089)
               [000092] -AC--+------              *  ASG       ref   
               [000091] D----+-N----              +--*  LCL_VAR   ref    V16 tmp5         
               [000090] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000089] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB03
STMT00092 (IL 0x080...  ???)
               [000347] -A-XG+------              *  ASG       ref   
               [000346] ---XG+-N----              +--*  IND       ref   
               [000503] -----+------              |  \--*  ADD       byref 
               [000096] -----+------              |     +--*  LCL_VAR   ref    V16 tmp5         
               [000502] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_fileName]
               [000097] -----+------              \--*  LCL_VAR   ref    V03 loc1         

***** BB03
STMT00031 (IL   ???...0x089)
               [000105] -A---+------              *  ASG       ref   
               [000104] D----+-N----              +--*  LCL_VAR   ref    V17 tmp6         
               [000095] -----+------              \--*  LCL_VAR   ref    V16 tmp5         

***** BB03
STMT00032 (IL   ???...  ???)
               [000108] -A---+------              *  ASG       ref   
               [000107] D----+-N----              +--*  LCL_VAR   ref    V18 tmp7         
               [000099] -----+------              \--*  LCL_VAR   ref    V16 tmp5         

***** BB03
STMT00030 (IL 0x087...  ???)
               [000103] -----+------              *  JTRUE     void  
               [000102] J----+-N----              \--*  NE        int   
               [000100] -----+------                 +--*  LCL_VAR   int    V04 loc2         
               [000101] -----+------                 \--*  CNS_INT   int    0

------------ BB04 [08B..08F) -> BB06 (always), preds={BB03} succs={BB06}

***** BB04
STMT00053 (IL   ???...0x08D)
               [000203] -A---+------              *  ASG       ref   
               [000202] D----+-N----              +--*  LCL_VAR   ref    V19 tmp8         
               [000110] -----+------              \--*  LCL_VAR   ref    V17 tmp6         

***** BB04
STMT00054 (IL   ???...  ???)
               [000206] -A---+------              *  ASG       ref   
               [000205] D----+-N----              +--*  LCL_VAR   ref    V20 tmp9         
               [000111] -----+------              \--*  LCL_VAR   ref    V18 tmp7         

***** BB04
STMT00055 (IL   ???...  ???)
               [000209] -A---+------              *  ASG       ref   
               [000208] D----+-N----              +--*  LCL_VAR   ref    V21 tmp10        
               [000201] -----+------              \--*  LCL_VAR   ref    V07 loc5         

------------ BB05 [08F..09C), preds={BB03} succs={BB06}

***** BB05
STMT00033 (IL   ???...0x097)
               [000119] -A---+------              *  ASG       ref   
               [000118] D----+-N----              +--*  LCL_VAR   ref    V19 tmp8         
               [000112] -----+------              \--*  LCL_VAR   ref    V17 tmp6         

***** BB05
STMT00034 (IL   ???...  ???)
               [000122] -A---+------              *  ASG       ref   
               [000121] D----+-N----              +--*  LCL_VAR   ref    V20 tmp9         
               [000113] -----+------              \--*  LCL_VAR   ref    V18 tmp7         

***** BB05
STMT00035 (IL   ???...  ???)
               [000125] -ACXG+------              *  ASG       ref   
               [000124] D----+-N----              +--*  LCL_VAR   ref    V21 tmp10        
               [000117] --CXG+------              \--*  CALL      ref    System.String.Concat
               [000505] #---G+------ arg1 in rdx     +--*  IND       ref   
               [000504] H----+------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E " "
               [000114] -----+------ arg0 in rcx     +--*  LCL_VAR   ref    V05 loc3         
               [000116] -----+------ arg2 in r8      \--*  LCL_VAR   ref    V07 loc5         

------------ BB06 [09C..0BB) -> BB12 (cond), preds={BB04,BB05} succs={BB07,BB12}

***** BB06
STMT00093 (IL   ???...  ???)
               [000350] -A-XG+------              *  ASG       ref   
               [000349] ---XG+-N----              +--*  IND       ref   
               [000510] -----+------              |  \--*  ADD       byref 
               [000128] -----+------              |     +--*  LCL_VAR   ref    V20 tmp9         
               [000509] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[_arguments]
               [000129] -----+------              \--*  LCL_VAR   ref    V21 tmp10        

***** BB06
STMT00094 (IL 0x0A1...  ???)
               [000355] -A-XG+------              *  ASG       bool  
               [000354] ---XG+-N----              +--*  IND       bool  
               [000512] -----+------              |  \--*  ADD       byref 
               [000131] -----+------              |     +--*  LCL_VAR   ref    V19 tmp8         
               [000511] -----+------              |     \--*  CNS_INT   long   130 field offset Fseq[<UseShellExecute>k__BackingField]
               [000353] -----+------              \--*  CNS_INT   int    0

***** BB06
STMT00038 (IL 0x0A8...  ???)
               [000136] -A---+------              *  ASG       ref   
               [000135] D----+-N----              +--*  LCL_VAR   ref    V08 loc6         
               [000127] -----+------              \--*  LCL_VAR   ref    V19 tmp8         

***** BB06
STMT00040 (IL 0x0AA...0x0B9)
               [000145] -A-XG+------              *  ASG       ref   
               [000144] D----+-N----              +--*  LCL_VAR   ref    V23 tmp12        
               [000138] ---XG+------              \--*  IND       ref   
               [000514] -----+------                 \--*  ADD       byref 
               [000137] -----+------                    +--*  LCL_VAR   ref    V02 loc0         
               [000513] -----+------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers]

***** BB06
STMT00039 (IL 0x0AA...  ???)
               [000143] -A-XG+------              *  ASG       ref   
               [000142] D----+-N----              +--*  LCL_VAR   ref    V22 tmp11        
               [000141] ---XG+------              \--*  IND       ref   
               [000516] -----+------                 \--*  ADD       byref 
               [000140] -----+------                    +--*  LCL_VAR   ref    V02 loc0         
               [000515] -----+------                    \--*  CNS_INT   long   48 field offset Fseq[<>9__2]

***** BB06
STMT00042 (IL   ???...0x0B9)
               [000153] -A---+------              *  ASG       ref   
               [000152] D----+-N----              +--*  LCL_VAR   ref    V24 tmp13        
               [000146] -----+------              \--*  LCL_VAR   ref    V23 tmp12        

***** BB06
STMT00043 (IL   ???...  ???)
               [000156] -A---+------              *  ASG       ref   
               [000155] D----+-N----              +--*  LCL_VAR   ref    V25 tmp14        
               [000139] -----+------              \--*  LCL_VAR   ref    V19 tmp8         

***** BB06
STMT00044 (IL   ???...  ???)
               [000159] -A---+------              *  ASG       ref   
               [000158] D----+-N----              +--*  LCL_VAR   ref    V26 tmp15        
               [000147] -----+------              \--*  LCL_VAR   ref    V22 tmp11        

***** BB06
STMT00041 (IL   ???...  ???)
               [000151] -----+------              *  JTRUE     void  
               [000150] J----+-N----              \--*  NE        int   
               [000148] -----+------                 +--*  LCL_VAR   ref    V22 tmp11        
               [000149] -----+------                 \--*  CNS_INT   ref    null

------------ BB07 [000..0D3) -> BB14 (cond), preds={BB06} succs={BB10,BB14}

***** BB07
STMT00048 (IL   ???...0x0CA)
               [000184] -AC--+------              *  ASG       ref   
               [000183] D----+-N----              +--*  LCL_VAR   ref    V28 tmp17        
               [000182] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000181] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB07
STMT00095 (IL   ???...  ???)
               [000359] -----+------              *  JTRUE     void  
               [000358] J----+-N----              \--*  EQ        int   
               [000179] -----+------                 +--*  LCL_VAR   ref    V02 loc0         
               [000357] -----+------                 \--*  CNS_INT   ref    null

------------ BB10 [000..000), preds={BB07} succs={BB12}

***** BB10
STMT00096 (IL   ???...  ???)
               [000362] -A-XG+------              *  ASG       ref   
               [000361] ---XG+-N----              +--*  IND       ref   
               [000519] -----+------              |  \--*  ADD       byref 
               [000185] -----+------              |     +--*  LCL_VAR   ref    V28 tmp17        
               [000518] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
               [000360] -----+------              \--*  LCL_VAR   ref    V02 loc0         

***** BB10
STMT00097 (IL   ???...  ???)
               [000366] -A-XG+------              *  ASG       long  
               [000365] ---XG+-N----              +--*  IND       long  
               [000521] -----+------              |  \--*  ADD       byref 
               [000363] -----+------              |     +--*  LCL_VAR   ref    V28 tmp17        
               [000520] -----+------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
               [000180] H----+------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

***** BB10
STMT00050 (IL 0x0C9...  ???)
               [000190] -A---+------              *  ASG       ref   
               [000189] D----+-N----              +--*  LCL_VAR   ref    V09 loc7         
               [000188] -----+------              \--*  LCL_VAR   ref    V28 tmp17        

***** BB10
STMT00051 (IL   ???...0x0CC)
               [000192] -A-XG+------              *  ASG       ref   
               [000191] ---XG+-N----              +--*  IND       ref   
               [000523] -----+------              |  \--*  ADD       byref 
               [000178] -----+------              |     +--*  LCL_VAR   ref    V02 loc0         
               [000522] -----+------              |     \--*  CNS_INT   long   48 field offset Fseq[<>9__2]
               [000187] -----+------              \--*  LCL_VAR   ref    V28 tmp17        

***** BB10
STMT00052 (IL   ???...0x0D1)
               [000199] -A---+------              *  ASG       ref   
               [000198] D----+-N----              +--*  LCL_VAR   ref    V26 tmp15        
               [000193] -----+------              \--*  LCL_VAR   ref    V28 tmp17        

------------ BB12 [000..0E9) -> BB15 (cond), preds={BB06,BB10} succs={BB14,BB15}

***** BB12
STMT00045 (IL   ???...0x0E4)
               [000172] -AC--+------              *  ASG       ref   
               [000171] D----+-N----              +--*  LCL_VAR   ref    V27 tmp16        
               [000170] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000169] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB12
STMT00099 (IL   ???...  ???)
               [000371] -----+------              *  JTRUE     void  
               [000370] J----+-N----              \--*  NE        int   
               [000167] -----+------                 +--*  LCL_VAR   ref    V02 loc0         
               [000369] -----+------                 \--*  CNS_INT   ref    null

------------ BB14 [000..000) (throw), preds={BB07,BB12} succs={}

***** BB14
STMT00102 (IL   ???...  ???)
               [000379] --CXG+------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

------------ BB15 [000..000), preds={BB12} succs={BB17}

***** BB15
STMT00100 (IL   ???...  ???)
               [000374] -A-XG+------              *  ASG       ref   
               [000373] ---XG+-N----              +--*  IND       ref   
               [000526] -----+------              |  \--*  ADD       byref 
               [000173] -----+------              |     +--*  LCL_VAR   ref    V27 tmp16        
               [000525] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
               [000372] -----+------              \--*  LCL_VAR   ref    V02 loc0         

***** BB15
STMT00101 (IL   ???...  ???)
               [000378] -A-XG+------              *  ASG       long  
               [000377] ---XG+-N----              +--*  IND       long  
               [000528] -----+------              |  \--*  ADD       byref 
               [000375] -----+------              |     +--*  LCL_VAR   ref    V27 tmp16        
               [000527] -----+------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
               [000168] H----+------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

***** BB15
STMT00047 (IL 0x0DF...  ???)
               [000177] --CXG+------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue
               [000533] -ACXG-----L- arg1 SETUP   +--*  ASG       ref   
               [000532] D------N----              |  +--*  LCL_VAR   ref    V42 tmp31        
               [000176] --CXG+------              |  \--*  CALL      ref    SolutionAnalyzer.IPC.CreateSession
               [000165] -----+------ arg0 in rcx  |     +--*  LCL_VAR   ref    V25 tmp14        
               [000166] -----+------ arg1 in rdx  |     +--*  LCL_VAR   ref    V26 tmp15        
               [000175] -----+------ arg2 in r8   |     \--*  LCL_VAR   ref    V27 tmp16        
               [000534] ------------ arg1 in rdx  +--*  LCL_VAR   ref    V42 tmp31        
               [000164] -----+------ this in rcx  \--*  LCL_VAR   ref    V24 tmp13        

------------ BB17 [0E9..0F2) -> BB03 (cond), preds={BB02,BB15} succs={BB20,BB03}

***** BB17
STMT00025 (IL 0x0E9...0x0F0)
               [000084] --CXG+------              *  JTRUE     void  
               [000083] J-CXG+-N----              \--*  NE        int   
               [000081] --CXG+------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext
               [000080] -----+------ this in rcx     |  +--*  LCL_VAR   ref    V06 loc4         
               [000536] H----+------ arg1 in r11     |  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11
               [000082] -----+------                 \--*  CNS_INT   int    0

------------ BB20 [0F4..0F8) -> BB26 (cond), preds={BB17} succs={BB21,BB26}

***** BB20
STMT00116 (IL   ???...  ???)
               [000431] -----+------              *  JTRUE     void  
               [000432] J----+-N----              \--*  EQ        int   
               [000433] -----+------                 +--*  LCL_VAR   ref    V06 loc4         
               [000434] -----+------                 \--*  CNS_INT   ref    null

------------ BB21 [0F8..100) -> BB26 (always), preds={BB20} succs={BB26}

***** BB21
STMT00117 (IL   ???...  ???)
               [000435] --CXG+------              *  CALLV stub void   System.IDisposable.Dispose
               [000436] -----+------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         
               [000539] H----+------ arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

------------ BB23 [0F4..0F8) -> BB25 (cond), preds={} succs={BB24,BB25}

***** BB23
STMT00069 (IL 0x0F4...0x0F6)
               [000257] -----+------              *  JTRUE     void  
               [000256] J----+-N----              \--*  EQ        int   
               [000254] -----+------                 +--*  LCL_VAR   ref    V06 loc4         
               [000255] -----+------                 \--*  CNS_INT   ref    null

------------ BB24 [0F8..0FF), preds={BB23} succs={BB25}

***** BB24
STMT00071 (IL 0x0F8...0x0FA)
               [000260] --CXG+------              *  CALLV stub void   System.IDisposable.Dispose
               [000259] -----+------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         
               [000542] H----+------ arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

------------ BB25 [0FF..100) (finret), preds={BB23,BB24} succs={}

***** BB25
STMT00070 (IL 0x0FF...0x0FF)
               [000258] -----+------              *  RETFILT   void  

------------ BB26 [100..127) -> BB28 (always), preds={BB20,BB21} succs={BB28}

***** BB26
STMT00103 (IL 0x100...  ???)
               [000384] -A-XG+------              *  ASG       ref   
               [000383] D----+-N----              +--*  LCL_VAR   ref    V35 tmp24        
               [000213] ---XG+------              \--*  IND       ref   
               [000546] -----+------                 \--*  ADD       byref 
               [000212] -----+------                    +--*  LCL_VAR   ref    V02 loc0         
               [000545] -----+------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers]

***** BB26
STMT00057 (IL   ???...  ???)
               [000217] -A-XG+------              *  ASG       int   
               [000216] ---XG+-N----              +--*  IND       int   
               [000548] -----+------              |  \--*  ADD       byref 
               [000211] -----+------              |     +--*  LCL_VAR   ref    V02 loc0         
               [000547] -----+------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]
               [000382] ---XG+------              \--*  IND       int   
               [000550] -----+------                 \--*  ADD       byref 
               [000381] -----+------                    +--*  LCL_VAR   ref    V35 tmp24        
               [000549] -----+------                    \--*  CNS_INT   long   24 field offset Fseq[_size]

***** BB26
STMT00058 (IL 0x111...0x11D)
               [000224] -AC--+------              *  ASG       ref   
               [000223] D----+-N----              +--*  LCL_VAR   ref    V29 tmp18        
               [000222] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000221] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB26
STMT00109 (IL   ???...  ???)
               [000402] -A-XG+------              *  ASG       int   
               [000401] D----+-N----              +--*  LCL_VAR   int    V37 tmp26        
               [000220] ---XG+------              \--*  IND       int   
               [000553] -----+------                 \--*  ADD       byref 
               [000219] -----+------                    +--*  LCL_VAR   ref    V02 loc0         
               [000552] -----+------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]

***** BB26
STMT00104 (IL   ???...  ???)
               [000389] -AC--+------              *  ASG       ref   
               [000388] D----+-N----              +--*  LCL_VAR   ref    V36 tmp25        
               [000387] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000386] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB26
STMT00110 (IL   ???...  ???)
               [000406] --CXG+------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor
               [000390] -----+------ this in rcx  +--*  LCL_VAR   ref    V36 tmp25        
               [000404] -----+------ arg1 in rdx  +--*  CNS_INT   int    0
               [000405] -----+------ arg2 in r8   \--*  CNS_INT   ref    null

***** BB26
STMT00106 (IL   ???...  ???)
               [000394] -A-XG+------              *  ASG       ref   
               [000393] ---XG+-N----              +--*  IND       ref   
               [000559] -----+------              |  \--*  ADD       byref 
               [000225] -----+------              |     +--*  LCL_VAR   ref    V29 tmp18        
               [000558] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_workItems]
               [000392] -----+------              \--*  LCL_VAR   ref    V36 tmp25        

***** BB26
STMT00108 (IL   ???...  ???)
               [000400] -A-XG+------              *  ASG       int   
               [000399] ---XG+-N----              +--*  IND       int   
               [000561] -----+------              |  \--*  ADD       byref 
               [000397] -----+------              |     +--*  LCL_VAR   ref    V29 tmp18        
               [000560] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[_workItemsToComplete]
               [000398] -----+------              \--*  LCL_VAR   int    V37 tmp26        

***** BB26
STMT00060 (IL 0x11D...  ???)
               [000229] -A-XG+------              *  ASG       ref   
               [000228] ---XG+-N----              +--*  IND       ref   
               [000563] -----+------              |  \--*  ADD       byref 
               [000218] -----+------              |     +--*  LCL_VAR   ref    V02 loc0         
               [000562] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter]
               [000227] -----+------              \--*  LCL_VAR   ref    V29 tmp18        

***** BB26
STMT00061 (IL 0x122...0x123)
               [000232] -A---+------              *  ASG       int   
               [000231] D----+-N----              +--*  LCL_VAR   int    V10 loc8         
               [000230] -----+------              \--*  CNS_INT   int    0

------------ BB27 [127..133), preds={BB32} succs={BB28}

***** BB27
STMT00065 (IL 0x127...0x131)
               [000243] --CXG+------              *  CALL nullcheck void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0
               [000242] -----+------ this in rcx  \--*  LCL_VAR   ref    V02 loc0         

***** BB27
STMT00066 (IL 0x12D...  ???)
               [000248] -A---+------              *  ASG       int   
               [000247] D----+-N----              +--*  LCL_VAR   int    V10 loc8         
               [000246] -----+------              \--*  ADD       int   
               [000244] -----+------                 +--*  LCL_VAR   int    V10 loc8         
               [000245] -----+------                 \--*  CNS_INT   int    1

------------ BB28 [000..147) -> BB31 (cond), preds={BB26,BB27} succs={BB30,BB31}

***** BB28
STMT00114 (IL   ???...  ???)
               [000424] -A-XG+------              *  ASG       int   
               [000423] D----+-N----              +--*  LCL_VAR   int    V39 tmp28        
               [000237] ---XG+------              \--*  IND       int   
               [000566] -----+------                 \--*  ADD       byref 
               [000236] -----+------                    +--*  LCL_VAR   ref    V02 loc0         
               [000565] -----+------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]

***** BB28
STMT00111 (IL   ???...  ???)
               [000414] -----+------              *  JTRUE     void  
               [000413] J----+-N----              \--*  LE        int   
               [000411] -----+------                 +--*  CNS_INT   int    8
               [000412] -----+------                 \--*  LCL_VAR   int    V39 tmp28        

------------ BB30 [000..000) -> BB32 (always), preds={BB28} succs={BB32}

***** BB30
STMT00113 (IL   ???...  ???)
               [000421] -A---+------              *  ASG       int   
               [000420] D----+-N----              +--*  LCL_VAR   int    V38 tmp27        
               [000419] -----+------              \--*  LCL_VAR   int    V39 tmp28        

------------ BB31 [000..000), preds={BB28} succs={BB32}

***** BB31
STMT00112 (IL   ???...  ???)
               [000417] -A---+------              *  ASG       int   
               [000416] D----+-N----              +--*  LCL_VAR   int    V38 tmp27        
               [000415] -----+------              \--*  CNS_INT   int    8

------------ BB32 [???..???) -> BB27 (cond), preds={BB30,BB31} succs={BB33,BB27}

***** BB32
STMT00064 (IL   ???...  ???)
               [000241] -----+------              *  JTRUE     void  
               [000240] J----+-N----              \--*  LT        int   
               [000233] -----+------                 +--*  LCL_VAR   int    V10 loc8         
               [000422] -----+------                 \--*  LCL_VAR   int    V38 tmp27        

------------ BB33 [147..153) (return), preds={BB32} succs={}

***** BB33
STMT00115 (IL 0x147...  ???)
               [000429] -A-XG+------              *  ASG       ref   
               [000428] D----+-N----              +--*  LCL_VAR   ref    V40 tmp29        
               [000250] ---XG+------              \--*  IND       ref   
               [000568] -----+------                 \--*  ADD       byref 
               [000249] -----+------                    +--*  LCL_VAR   ref    V02 loc0         
               [000567] -----+------                    \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun]

***** BB33
STMT00068 (IL   ???...  ???)
               [000253] ---XG+------              *  RETURN    ref   
               [000427] ---XG+------              \--*  IND       ref   
               [000570] -----+------                 \--*  ADD       byref 
               [000426] -----+------                    +--*  LCL_VAR   ref    V40 tmp29        
               [000569] -----+------                    \--*  CNS_INT   long   8 field offset Fseq[_task]

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist

*************** Starting PHASE GS Cookie
No GS security needed

*************** Finishing PHASE GS Cookie

*************** Starting PHASE Compute edge weights (1, false)
*************** In fgComputeBlockAndEdgeWeights()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB17 (always) T0      try {       keep i try label 
BB03 [0002]  1  0    BB17                  1       [072..08B)-> BB05 ( cond ) T0                  i label target hascall gcsafe newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  1       [08B..08F)-> BB06 (always) T0                  i bwd 
BB05 [0004]  1  0    BB03                  1       [08F..09C)                 T0                  i label target hascall gcsafe bwd 
BB06 [0005]  2  0    BB04,BB05             1       [09C..0BB)-> BB12 ( cond ) T0                  i label target bwd 
BB07 [0006]  1  0    BB06                  1       [000..0D3)-> BB14 ( cond ) T0                  i hascall newobj bwd 
BB10 [0041]  1  0    BB07                  1       [000..000)                 T0                  i internal label target newobj bwd 
BB12 [0007]  2  0    BB06,BB10             1       [000..0E9)-> BB15 ( cond ) T0                  i label target hascall newobj bwd 
BB14 [0044]  2  0    BB07,BB12             0       [000..000)        (throw ) T0                  i internal rare label target hascall gcsafe bwd 
BB15 [0045]  1  0    BB12                  1       [000..000)                 T0                  i internal label target hascall gcsafe newobj bwd 
BB17 [0008]  2  0    BB02,BB15             1       [0E9..0F2)-> BB03 ( cond ) T0      }           i label target hascall bwd 
BB20 [0057]  1       BB17                  1       [0F4..0F8)-> BB26 ( cond )                     keep i label target cfb 
BB21 [0058]  1       BB20                  1       [0F8..100)-> BB26 (always)                     i hascall gcsafe 
BB23 [0010]  1     0                       1       [0F4..0F8)-> BB25 ( cond )    H0   fault {     keep i label target 
BB24 [0011]  1     0 BB23                  1       [0F8..0FF)                    H0               i hascall gcsafe 
BB25 [0012]  2     0 BB23,BB24             1       [0FF..100)        (finret)    H0   }           i label target 
BB26 [0013]  2       BB20,BB21             1       [100..127)-> BB28 (always)                     i label target hascall gcsafe newobj 
BB27 [0014]  1       BB32                  1       [127..133)                                     i label target hascall gcsafe bwd bwd-target 
BB28 [0015]  2       BB26,BB27             1       [000..147)-> BB31 ( cond )                     i label target bwd 
BB30 [0053]  1       BB28                  1       [000..000)-> BB32 (always)                     i internal bwd 
BB31 [0054]  1       BB28                  1       [000..000)                                     i internal label target bwd 
BB32 [0055]  2       BB30,BB31             1       [???..???)-> BB27 ( cond )                     internal label target bwd 
BB33 [0016]  1       BB32                  1       [147..153)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

 -- no profile data, so using default called count
 -- not optimizing or no profile data, so not computing edge weights

*************** Finishing PHASE Compute edge weights (1, false)

*************** Starting PHASE Create EH funclets
*************** In fgCreateFunclets()
Relocating handler range BB23..BB25 (EH#0) to end of BBlist

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB17 (always) T0      try {       keep i try label 
BB03 [0002]  1  0    BB17                  1       [072..08B)-> BB05 ( cond ) T0                  i label target hascall gcsafe newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  1       [08B..08F)-> BB06 (always) T0                  i bwd 
BB05 [0004]  1  0    BB03                  1       [08F..09C)                 T0                  i label target hascall gcsafe bwd 
BB06 [0005]  2  0    BB04,BB05             1       [09C..0BB)-> BB12 ( cond ) T0                  i label target bwd 
BB07 [0006]  1  0    BB06                  1       [000..0D3)-> BB14 ( cond ) T0                  i hascall newobj bwd 
BB10 [0041]  1  0    BB07                  1       [000..000)                 T0                  i internal label target newobj bwd 
BB12 [0007]  2  0    BB06,BB10             1       [000..0E9)-> BB15 ( cond ) T0                  i label target hascall newobj bwd 
BB14 [0044]  2  0    BB07,BB12             0       [000..000)        (throw ) T0                  i internal rare label target hascall gcsafe bwd 
BB15 [0045]  1  0    BB12                  1       [000..000)                 T0                  i internal label target hascall gcsafe newobj bwd 
BB17 [0008]  2  0    BB02,BB15             1       [0E9..0F2)-> BB03 ( cond ) T0      }           i label target hascall bwd 
BB20 [0057]  1       BB17                  1       [0F4..0F8)-> BB26 ( cond )                     keep i label target cfb 
BB21 [0058]  1       BB20                  1       [0F8..100)-> BB26 (always)                     i hascall gcsafe 
BB23 [0010]  1     0                       1       [0F4..0F8)-> BB25 ( cond )    H0   fault {     keep i label target 
BB24 [0011]  1     0 BB23                  1       [0F8..0FF)                    H0               i hascall gcsafe 
BB25 [0012]  2     0 BB23,BB24             1       [0FF..100)        (finret)    H0   }           i label target 
BB26 [0013]  2       BB20,BB21             1       [100..127)-> BB28 (always)                     i label target hascall gcsafe newobj 
BB27 [0014]  1       BB32                  1       [127..133)                                     i label target hascall gcsafe bwd bwd-target 
BB28 [0015]  2       BB26,BB27             1       [000..147)-> BB31 ( cond )                     i label target bwd 
BB30 [0053]  1       BB28                  1       [000..000)-> BB32 (always)                     i internal bwd 
BB31 [0054]  1       BB28                  1       [000..000)                                     i internal label target bwd 
BB32 [0055]  2       BB30,BB31             1       [???..???)-> BB27 ( cond )                     internal label target bwd 
BB33 [0016]  1       BB32                  1       [147..153)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB02..BB17 [070..0F4), Fault   at BB23..BB25 [0F4..100)
Relocated blocks [BB23..BB25] inserted after BB33 at the end of method
Create funclets: moved region

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB02..BB17 [070..0F4), Fault   at BB23..BB25 [0F4..100)

After fgCreateFunclets()
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB17 (always) T0      try {       keep i try label 
BB03 [0002]  1  0    BB17                  1       [072..08B)-> BB05 ( cond ) T0                  i label target hascall gcsafe newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  1       [08B..08F)-> BB06 (always) T0                  i bwd 
BB05 [0004]  1  0    BB03                  1       [08F..09C)                 T0                  i label target hascall gcsafe bwd 
BB06 [0005]  2  0    BB04,BB05             1       [09C..0BB)-> BB12 ( cond ) T0                  i label target bwd 
BB07 [0006]  1  0    BB06                  1       [000..0D3)-> BB14 ( cond ) T0                  i hascall newobj bwd 
BB10 [0041]  1  0    BB07                  1       [000..000)                 T0                  i internal label target newobj bwd 
BB12 [0007]  2  0    BB06,BB10             1       [000..0E9)-> BB15 ( cond ) T0                  i label target hascall newobj bwd 
BB14 [0044]  2  0    BB07,BB12             0       [000..000)        (throw ) T0                  i internal rare label target hascall gcsafe bwd 
BB15 [0045]  1  0    BB12                  1       [000..000)                 T0                  i internal label target hascall gcsafe newobj bwd 
BB17 [0008]  2  0    BB02,BB15             1       [0E9..0F2)-> BB03 ( cond ) T0      }           i label target hascall bwd 
BB20 [0057]  1       BB17                  1       [0F4..0F8)-> BB26 ( cond )                     keep i label target cfb 
BB21 [0058]  1       BB20                  1       [0F8..100)-> BB26 (always)                     i hascall gcsafe 
BB26 [0013]  2       BB20,BB21             1       [100..127)-> BB28 (always)                     i label target hascall gcsafe newobj 
BB27 [0014]  1       BB32                  1       [127..133)                                     i label target hascall gcsafe bwd bwd-target 
BB28 [0015]  2       BB26,BB27             1       [000..147)-> BB31 ( cond )                     i label target bwd 
BB30 [0053]  1       BB28                  1       [000..000)-> BB32 (always)                     i internal bwd 
BB31 [0054]  1       BB28                  1       [000..000)                                     i internal label target bwd 
BB32 [0055]  2       BB30,BB31             1       [???..???)-> BB27 ( cond )                     internal label target bwd 
BB33 [0016]  1       BB32                  1       [147..153)        (return)                     i 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB23 [0010]  1     0                       1       [0F4..0F8)-> BB25 ( cond )    H0 F fault {     keep i label target flet 
BB24 [0011]  1     0 BB23                  1       [0F8..0FF)                    H0               i hascall gcsafe 
BB25 [0012]  2     0 BB23,BB24             1       [0FF..100)        (finret)    H0   }           i label target 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB02..BB17 [070..0F4), Fault   at BB23..BB25 [0F4..100)
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Create EH funclets

*************** Starting PHASE Optimize layout
*************** In optOptimizeLayout()

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB02..BB17 [070..0F4), Fault   at BB23..BB25 [0F4..100)
*************** In fgDebugCheckBBlist

Duplication of loop condition [000083] is performed, because the cost of duplication (24) is less or equal than 32,
   loopIterations =   8.000, countOfHelpers = 0, validProfileWeights = false

Duplicating loop condition in BB02 for loop (BB03 - BB17)
Estimated code size expansion is 24
 STMT00119 (IL 0x0E9...  ???)
               [000578] --CXG-------              *  JTRUE     void  
     ( 27, 24) [000571] J-CXG--N----              \--*  EQ        int   
     ( 25, 22) [000572] --CXG-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext
     (  3,  2) [000575] ------------ this in rcx     |  +--*  LCL_VAR   ref    V06 loc4         
     (  2, 10) [000576] H----------- arg1 in r11     |  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11
     (  1,  1) [000577] ------------                 \--*  CNS_INT   int    0
fgComputeEdgeWeights() found inconsistent profile data, not using the edge weights

*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB20 ( cond ) T0      try {       keep i try label hascall 
BB03 [0002]  2  0    BB02,BB17             1       [072..08B)-> BB05 ( cond ) T0                  i label target hascall gcsafe newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  1       [08B..08F)-> BB06 (always) T0                  i bwd 
BB05 [0004]  1  0    BB03                  1       [08F..09C)                 T0                  i label target hascall gcsafe bwd 
BB06 [0005]  2  0    BB04,BB05             1       [09C..0BB)-> BB12 ( cond ) T0                  i label target bwd 
BB07 [0006]  1  0    BB06                  1       [000..0D3)-> BB14 ( cond ) T0                  i hascall newobj bwd 
BB10 [0041]  1  0    BB07                  1       [000..000)                 T0                  i internal label target newobj bwd 
BB12 [0007]  2  0    BB06,BB10             1       [000..0E9)-> BB15 ( cond ) T0                  i label target hascall newobj bwd 
BB14 [0044]  2  0    BB07,BB12             0       [000..000)        (throw ) T0                  i internal rare label target hascall gcsafe bwd 
BB15 [0045]  1  0    BB12                  1       [000..000)                 T0                  i internal label target hascall gcsafe newobj bwd 
BB17 [0008]  1  0    BB15                  1       [0E9..0F2)-> BB03 ( cond ) T0      }           i label target hascall bwd 
BB20 [0057]  2       BB02,BB17             1       [0F4..0F8)-> BB26 ( cond )                     keep i label target cfb 
BB21 [0058]  1       BB20                  1       [0F8..100)-> BB26 (always)                     i hascall gcsafe 
BB26 [0013]  2       BB20,BB21             1       [100..127)-> BB28 (always)                     i label target hascall gcsafe newobj 
BB27 [0014]  1       BB32                  1       [127..133)                                     i label target hascall gcsafe bwd bwd-target 
BB28 [0015]  2       BB26,BB27             1       [000..147)-> BB31 ( cond )                     i label target bwd 
BB30 [0053]  1       BB28                  1       [000..000)-> BB32 (always)                     i internal bwd 
BB31 [0054]  1       BB28                  1       [000..000)                                     i internal label target bwd 
BB32 [0055]  2       BB30,BB31             1       [???..???)-> BB27 ( cond )                     internal label target bwd 
BB33 [0016]  1       BB32                  1       [147..153)        (return)                     i 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB23 [0010]  1     0                       1       [0F4..0F8)-> BB25 ( cond )    H0 F fault {     keep i label target flet 
BB24 [0011]  1     0 BB23                  1       [0F8..0FF)                    H0               i hascall gcsafe 
BB25 [0012]  2     0 BB23,BB24             1       [0FF..100)        (finret)    H0   }           i label target 
-----------------------------------------------------------------------------------------------------------------------------------------


Compacting blocks BB15 and BB17:
EH#0: New last block of try: BB15
*************** In fgDebugCheckBBlist

Removing unconditional jump to next block (BB21 -> BB26) (converted BB21 to fall-through)

After updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB20 ( cond ) T0      try {       keep i try label hascall 
BB03 [0002]  2  0    BB02,BB15             1       [072..08B)-> BB05 ( cond ) T0                  i label target hascall gcsafe newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  1       [08B..08F)-> BB06 (always) T0                  i bwd 
BB05 [0004]  1  0    BB03                  1       [08F..09C)                 T0                  i label target hascall gcsafe bwd 
BB06 [0005]  2  0    BB04,BB05             1       [09C..0BB)-> BB12 ( cond ) T0                  i label target bwd 
BB07 [0006]  1  0    BB06                  1       [000..0D3)-> BB14 ( cond ) T0                  i hascall newobj bwd 
BB10 [0041]  1  0    BB07                  1       [000..000)                 T0                  i internal label target newobj bwd 
BB12 [0007]  2  0    BB06,BB10             1       [000..0E9)-> BB15 ( cond ) T0                  i label target hascall newobj bwd 
BB14 [0044]  2  0    BB07,BB12             0       [000..000)        (throw ) T0                  i internal rare label target hascall gcsafe bwd 
BB15 [0045]  1  0    BB12                  1       [000..0F2)-> BB03 ( cond ) T0      }           i label target hascall gcsafe newobj bwd 
BB20 [0057]  2       BB02,BB15             1       [0F4..0F8)-> BB26 ( cond )                     keep i label target cfb 
BB21 [0058]  1       BB20                  1       [0F8..100)                                     i hascall gcsafe 
BB26 [0013]  2       BB20,BB21             1       [100..127)-> BB28 (always)                     i label target hascall gcsafe newobj 
BB27 [0014]  1       BB32                  1       [127..133)                                     i label target hascall gcsafe bwd bwd-target 
BB28 [0015]  2       BB26,BB27             1       [000..147)-> BB31 ( cond )                     i label target bwd 
BB30 [0053]  1       BB28                  1       [000..000)-> BB32 (always)                     i internal bwd 
BB31 [0054]  1       BB28                  1       [000..000)                                     i internal label target bwd 
BB32 [0055]  2       BB30,BB31             1       [???..???)-> BB27 ( cond )                     internal label target bwd 
BB33 [0016]  1       BB32                  1       [147..153)        (return)                     i 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB23 [0010]  1     0                       1       [0F4..0F8)-> BB25 ( cond )    H0 F fault {     keep i label target flet 
BB24 [0011]  1     0 BB23                  1       [0F8..0FF)                    H0               i hascall gcsafe 
BB25 [0012]  2     0 BB23,BB24             1       [0FF..100)        (finret)    H0   }           i label target 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB02..BB15 [070..0F4), Fault   at BB23..BB25 [0F4..100)
*************** In fgDebugCheckBBlist

*************** In fgExpandRarelyRunBlocks()
*************** In fgReorderBlocks()

Initial BasicBlocks
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB20 ( cond ) T0      try {       keep i try label hascall 
BB03 [0002]  2  0    BB02,BB15             1       [072..08B)-> BB05 ( cond ) T0                  i label target hascall gcsafe newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  1       [08B..08F)-> BB06 (always) T0                  i bwd 
BB05 [0004]  1  0    BB03                  1       [08F..09C)                 T0                  i label target hascall gcsafe bwd 
BB06 [0005]  2  0    BB04,BB05             1       [09C..0BB)-> BB12 ( cond ) T0                  i label target bwd 
BB07 [0006]  1  0    BB06                  1       [000..0D3)-> BB14 ( cond ) T0                  i hascall newobj bwd 
BB10 [0041]  1  0    BB07                  1       [000..000)                 T0                  i internal label target newobj bwd 
BB12 [0007]  2  0    BB06,BB10             1       [000..0E9)-> BB15 ( cond ) T0                  i label target hascall newobj bwd 
BB14 [0044]  2  0    BB07,BB12             0       [000..000)        (throw ) T0                  i internal rare label target hascall gcsafe bwd 
BB15 [0045]  1  0    BB12                  1       [000..0F2)-> BB03 ( cond ) T0      }           i label target hascall gcsafe newobj bwd 
BB20 [0057]  2       BB02,BB15             1       [0F4..0F8)-> BB26 ( cond )                     keep i label target cfb 
BB21 [0058]  1       BB20                  1       [0F8..100)                                     i hascall gcsafe 
BB26 [0013]  2       BB20,BB21             1       [100..127)-> BB28 (always)                     i label target hascall gcsafe newobj 
BB27 [0014]  1       BB32                  1       [127..133)                                     i label target hascall gcsafe bwd bwd-target 
BB28 [0015]  2       BB26,BB27             1       [000..147)-> BB31 ( cond )                     i label target bwd 
BB30 [0053]  1       BB28                  1       [000..000)-> BB32 (always)                     i internal bwd 
BB31 [0054]  1       BB28                  1       [000..000)                                     i internal label target bwd 
BB32 [0055]  2       BB30,BB31             1       [???..???)-> BB27 ( cond )                     internal label target bwd 
BB33 [0016]  1       BB32                  1       [147..153)        (return)                     i 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB23 [0010]  1     0                       1       [0F4..0F8)-> BB25 ( cond )    H0 F fault {     keep i label target flet 
BB24 [0011]  1     0 BB23                  1       [0F8..0FF)                    H0               i hascall gcsafe 
BB25 [0012]  2     0 BB23,BB24             1       [0FF..100)        (finret)    H0   }           i label target 
-----------------------------------------------------------------------------------------------------------------------------------------

Decided to reverse conditional branch at block BB12 branch to BB15 since it falls into a rarely run block
fgFindInsertPoint(regionIndex=1, putInTryRegion=true, startBlk=BB02, endBlk=BB20, nearBlk=BB15, jumpBlk=BB00, runRarely=true)
Relocated rarely run block BB14 by reversing conditional jump at BB12
Relocated block [BB14..BB14] inserted after BB04

After this change in fgReorderBlocks the BB graph is:
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB20 ( cond ) T0      try {       keep i try label hascall 
BB03 [0002]  2  0    BB02,BB15             1       [072..08B)-> BB05 ( cond ) T0                  i label target hascall gcsafe newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  1       [08B..08F)-> BB06 (always) T0                  i bwd 
BB14 [0044]  2  0    BB07,BB12             0       [000..000)        (throw ) T0                  i internal rare label target hascall gcsafe bwd 
BB05 [0004]  1  0    BB03                  1       [08F..09C)                 T0                  i label target hascall gcsafe bwd 
BB06 [0005]  2  0    BB04,BB05             1       [09C..0BB)-> BB12 ( cond ) T0                  i label target bwd 
BB07 [0006]  1  0    BB06                  1       [000..0D3)-> BB14 ( cond ) T0                  i hascall newobj bwd 
BB10 [0041]  1  0    BB07                  1       [000..000)                 T0                  i internal label target newobj bwd 
BB12 [0007]  2  0    BB06,BB10             1       [000..0E9)-> BB14 ( cond ) T0                  i label target hascall newobj bwd 
BB15 [0045]  1  0    BB12                  1       [000..0F2)-> BB03 ( cond ) T0      }           i label target hascall gcsafe newobj bwd 
BB20 [0057]  2       BB02,BB15             1       [0F4..0F8)-> BB26 ( cond )                     keep i label target cfb 
BB21 [0058]  1       BB20                  1       [0F8..100)                                     i hascall gcsafe 
BB26 [0013]  2       BB20,BB21             1       [100..127)-> BB28 (always)                     i label target hascall gcsafe newobj 
BB27 [0014]  1       BB32                  1       [127..133)                                     i label target hascall gcsafe bwd bwd-target 
BB28 [0015]  2       BB26,BB27             1       [000..147)-> BB31 ( cond )                     i label target bwd 
BB30 [0053]  1       BB28                  1       [000..000)-> BB32 (always)                     i internal bwd 
BB31 [0054]  1       BB28                  1       [000..000)                                     i internal label target bwd 
BB32 [0055]  2       BB30,BB31             1       [???..???)-> BB27 ( cond )                     internal label target bwd 
BB33 [0016]  1       BB32                  1       [147..153)        (return)                     i 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB23 [0010]  1     0                       1       [0F4..0F8)-> BB25 ( cond )    H0 F fault {     keep i label target flet 
BB24 [0011]  1     0 BB23                  1       [0F8..0FF)                    H0               i hascall gcsafe 
BB25 [0012]  2     0 BB23,BB24             1       [0FF..100)        (finret)    H0   }           i label target 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB20 ( cond ) T0      try {       keep i try label hascall 
BB03 [0002]  2  0    BB02,BB15             1       [072..08B)-> BB05 ( cond ) T0                  i label target hascall gcsafe newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  1       [08B..08F)-> BB06 (always) T0                  i bwd 
BB14 [0044]  2  0    BB07,BB12             0       [000..000)        (throw ) T0                  i internal rare label target hascall gcsafe bwd 
BB05 [0004]  1  0    BB03                  1       [08F..09C)                 T0                  i label target hascall gcsafe bwd 
BB06 [0005]  2  0    BB04,BB05             1       [09C..0BB)-> BB12 ( cond ) T0                  i label target bwd 
BB07 [0006]  1  0    BB06                  1       [000..0D3)-> BB14 ( cond ) T0                  i hascall newobj bwd 
BB10 [0041]  1  0    BB07                  1       [000..000)                 T0                  i internal label target newobj bwd 
BB12 [0007]  2  0    BB06,BB10             1       [000..0E9)-> BB14 ( cond ) T0                  i label target hascall newobj bwd 
BB15 [0045]  1  0    BB12                  1       [000..0F2)-> BB03 ( cond ) T0      }           i label target hascall gcsafe newobj bwd 
BB20 [0057]  2       BB02,BB15             1       [0F4..0F8)-> BB26 ( cond )                     keep i label target cfb 
BB21 [0058]  1       BB20                  1       [0F8..100)                                     i hascall gcsafe 
BB26 [0013]  2       BB20,BB21             1       [100..127)-> BB28 (always)                     i label target hascall gcsafe newobj 
BB27 [0014]  1       BB32                  1       [127..133)                                     i label target hascall gcsafe bwd bwd-target 
BB28 [0015]  2       BB26,BB27             1       [000..147)-> BB31 ( cond )                     i label target bwd 
BB30 [0053]  1       BB28                  1       [000..000)-> BB32 (always)                     i internal bwd 
BB31 [0054]  1       BB28                  1       [000..000)                                     i internal label target bwd 
BB32 [0055]  2       BB30,BB31             1       [???..???)-> BB27 ( cond )                     internal label target bwd 
BB33 [0016]  1       BB32                  1       [147..153)        (return)                     i 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB23 [0010]  1     0                       1       [0F4..0F8)-> BB25 ( cond )    H0 F fault {     keep i label target flet 
BB24 [0011]  1     0 BB23                  1       [0F8..0FF)                    H0               i hascall gcsafe 
BB25 [0012]  2     0 BB23,BB24             1       [0FF..100)        (finret)    H0   }           i label target 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist

*************** Finishing PHASE Optimize layout

*************** Starting PHASE Compute blocks reachability
*************** In fgComputeReachability
*************** In fgDebugCheckBBlist

Renumbering the basic blocks for fgComputeReachability pass #1

*************** Before renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB20 ( cond ) T0      try {       keep i try label hascall 
BB03 [0002]  2  0    BB02,BB15             1       [072..08B)-> BB05 ( cond ) T0                  i label target hascall gcsafe newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  1       [08B..08F)-> BB06 (always) T0                  i bwd 
BB14 [0044]  2  0    BB07,BB12             0       [000..000)        (throw ) T0                  i internal rare label target hascall gcsafe bwd 
BB05 [0004]  1  0    BB03                  1       [08F..09C)                 T0                  i label target hascall gcsafe bwd 
BB06 [0005]  2  0    BB04,BB05             1       [09C..0BB)-> BB12 ( cond ) T0                  i label target bwd 
BB07 [0006]  1  0    BB06                  1       [000..0D3)-> BB14 ( cond ) T0                  i hascall newobj bwd 
BB10 [0041]  1  0    BB07                  1       [000..000)                 T0                  i internal label target newobj bwd 
BB12 [0007]  2  0    BB06,BB10             1       [000..0E9)-> BB14 ( cond ) T0                  i label target hascall newobj bwd 
BB15 [0045]  1  0    BB12                  1       [000..0F2)-> BB03 ( cond ) T0      }           i label target hascall gcsafe newobj bwd 
BB20 [0057]  2       BB02,BB15             1       [0F4..0F8)-> BB26 ( cond )                     keep i label target cfb 
BB21 [0058]  1       BB20                  1       [0F8..100)                                     i hascall gcsafe 
BB26 [0013]  2       BB20,BB21             1       [100..127)-> BB28 (always)                     i label target hascall gcsafe newobj 
BB27 [0014]  1       BB32                  1       [127..133)                                     i label target hascall gcsafe bwd bwd-target 
BB28 [0015]  2       BB26,BB27             1       [000..147)-> BB31 ( cond )                     i label target bwd 
BB30 [0053]  1       BB28                  1       [000..000)-> BB32 (always)                     i internal bwd 
BB31 [0054]  1       BB28                  1       [000..000)                                     i internal label target bwd 
BB32 [0055]  2       BB30,BB31             1       [???..???)-> BB27 ( cond )                     internal label target bwd 
BB33 [0016]  1       BB32                  1       [147..153)        (return)                     i 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB23 [0010]  1     0                       1       [0F4..0F8)-> BB25 ( cond )    H0 F fault {     keep i label target flet 
BB24 [0011]  1     0 BB23                  1       [0F8..0FF)                    H0               i hascall gcsafe 
BB25 [0012]  2     0 BB23,BB24             1       [0FF..100)        (finret)    H0   }           i label target 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB02..BB15 [070..0F4), Fault   at BB23..BB25 [0F4..100)
Renumber BB14 to BB05
Renumber BB05 to BB06
Renumber BB06 to BB07
Renumber BB07 to BB08
Renumber BB10 to BB09
Renumber BB12 to BB10
Renumber BB15 to BB11
Renumber BB20 to BB12
Renumber BB21 to BB13
Renumber BB26 to BB14
Renumber BB27 to BB15
Renumber BB28 to BB16
Renumber BB30 to BB17
Renumber BB31 to BB18
Renumber BB32 to BB19
Renumber BB33 to BB20
Renumber BB23 to BB21
Renumber BB24 to BB22
Renumber BB25 to BB23

*************** After renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB12 ( cond ) T0      try {       keep i try label hascall 
BB03 [0002]  2  0    BB02,BB11             1       [072..08B)-> BB06 ( cond ) T0                  i label target hascall gcsafe newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  1       [08B..08F)-> BB07 (always) T0                  i bwd 
BB05 [0044]  2  0    BB08,BB10             0       [000..000)        (throw ) T0                  i internal rare label target hascall gcsafe bwd 
BB06 [0004]  1  0    BB03                  1       [08F..09C)                 T0                  i label target hascall gcsafe bwd 
BB07 [0005]  2  0    BB04,BB06             1       [09C..0BB)-> BB10 ( cond ) T0                  i label target bwd 
BB08 [0006]  1  0    BB07                  1       [000..0D3)-> BB05 ( cond ) T0                  i hascall newobj bwd 
BB09 [0041]  1  0    BB08                  1       [000..000)                 T0                  i internal label target newobj bwd 
BB10 [0007]  2  0    BB07,BB09             1       [000..0E9)-> BB05 ( cond ) T0                  i label target hascall newobj bwd 
BB11 [0045]  1  0    BB10                  1       [000..0F2)-> BB03 ( cond ) T0      }           i label target hascall gcsafe newobj bwd 
BB12 [0057]  2       BB02,BB11             1       [0F4..0F8)-> BB14 ( cond )                     keep i label target cfb 
BB13 [0058]  1       BB12                  1       [0F8..100)                                     i hascall gcsafe 
BB14 [0013]  2       BB12,BB13             1       [100..127)-> BB16 (always)                     i label target hascall gcsafe newobj 
BB15 [0014]  1       BB19                  1       [127..133)                                     i label target hascall gcsafe bwd bwd-target 
BB16 [0015]  2       BB14,BB15             1       [000..147)-> BB18 ( cond )                     i label target bwd 
BB17 [0053]  1       BB16                  1       [000..000)-> BB19 (always)                     i internal bwd 
BB18 [0054]  1       BB16                  1       [000..000)                                     i internal label target bwd 
BB19 [0055]  2       BB17,BB18             1       [???..???)-> BB15 ( cond )                     internal label target bwd 
BB20 [0016]  1       BB19                  1       [147..153)        (return)                     i 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB21 [0010]  1     0                       1       [0F4..0F8)-> BB23 ( cond )    H0 F fault {     keep i label target flet 
BB22 [0011]  1     0 BB21                  1       [0F8..0FF)                    H0               i hascall gcsafe 
BB23 [0012]  2     0 BB21,BB22             1       [0FF..100)        (finret)    H0   }           i label target 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB02..BB11 [070..0F4), Fault   at BB21..BB23 [0F4..100)

New BlockSet epoch 3, # of blocks (including unused BB00): 24, bitset array size: 1 (short)
Enter blocks: BB01 BB21 

After computing reachability sets:
------------------------------------------------
BBnum  Reachable by 
------------------------------------------------
BB01 : BB01 
BB02 : BB01 BB02 
BB03 : BB01 BB02 BB03 BB04 BB06 BB07 BB08 BB09 BB10 BB11 
BB04 : BB01 BB02 BB03 BB04 BB06 BB07 BB08 BB09 BB10 BB11 
BB05 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 BB11 
BB06 : BB01 BB02 BB03 BB04 BB06 BB07 BB08 BB09 BB10 BB11 
BB07 : BB01 BB02 BB03 BB04 BB06 BB07 BB08 BB09 BB10 BB11 
BB08 : BB01 BB02 BB03 BB04 BB06 BB07 BB08 BB09 BB10 BB11 
BB09 : BB01 BB02 BB03 BB04 BB06 BB07 BB08 BB09 BB10 BB11 
BB10 : BB01 BB02 BB03 BB04 BB06 BB07 BB08 BB09 BB10 BB11 
BB11 : BB01 BB02 BB03 BB04 BB06 BB07 BB08 BB09 BB10 BB11 
BB12 : BB01 BB02 BB03 BB04 BB06 BB07 BB08 BB09 BB10 BB11 BB12 
BB13 : BB01 BB02 BB03 BB04 BB06 BB07 BB08 BB09 BB10 BB11 BB12 BB13 
BB14 : BB01 BB02 BB03 BB04 BB06 BB07 BB08 BB09 BB10 BB11 BB12 BB13 BB14 
BB15 : BB01 BB02 BB03 BB04 BB06 BB07 BB08 BB09 BB10 BB11 BB12 BB13 BB14 BB15 BB16 BB17 BB18 BB19 
BB16 : BB01 BB02 BB03 BB04 BB06 BB07 BB08 BB09 BB10 BB11 BB12 BB13 BB14 BB15 BB16 BB17 BB18 BB19 
BB17 : BB01 BB02 BB03 BB04 BB06 BB07 BB08 BB09 BB10 BB11 BB12 BB13 BB14 BB15 BB16 BB17 BB18 BB19 
BB18 : BB01 BB02 BB03 BB04 BB06 BB07 BB08 BB09 BB10 BB11 BB12 BB13 BB14 BB15 BB16 BB17 BB18 BB19 
BB19 : BB01 BB02 BB03 BB04 BB06 BB07 BB08 BB09 BB10 BB11 BB12 BB13 BB14 BB15 BB16 BB17 BB18 BB19 
BB20 : BB01 BB02 BB03 BB04 BB06 BB07 BB08 BB09 BB10 BB11 BB12 BB13 BB14 BB15 BB16 BB17 BB18 BB19 BB20 
BB21 : BB21 
BB22 : BB21 BB22 
BB23 : BB21 BB22 BB23 

After computing reachability:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB12 ( cond ) T0      try {       keep i try label hascall gcsafe 
BB03 [0002]  2  0    BB02,BB11             1       [072..08B)-> BB06 ( cond ) T0                  i Loop label target hascall gcsafe newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  1       [08B..08F)-> BB07 (always) T0                  i gcsafe bwd 
BB05 [0044]  2  0    BB08,BB10             0       [000..000)        (throw ) T0                  i internal rare label target hascall gcsafe bwd 
BB06 [0004]  1  0    BB03                  1       [08F..09C)                 T0                  i label target hascall gcsafe bwd 
BB07 [0005]  2  0    BB04,BB06             1       [09C..0BB)-> BB10 ( cond ) T0                  i label target gcsafe bwd 
BB08 [0006]  1  0    BB07                  1       [000..0D3)-> BB05 ( cond ) T0                  i hascall gcsafe newobj bwd 
BB09 [0041]  1  0    BB08                  1       [000..000)                 T0                  i internal label target gcsafe newobj bwd 
BB10 [0007]  2  0    BB07,BB09             1       [000..0E9)-> BB05 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB11 [0045]  1  0    BB10                  1       [000..0F2)-> BB03 ( cond ) T0      }           i label target hascall gcsafe newobj bwd 
BB12 [0057]  2       BB02,BB11             1       [0F4..0F8)-> BB14 ( cond )                     keep i label target gcsafe cfb 
BB13 [0058]  1       BB12                  1       [0F8..100)                                     i hascall gcsafe 
BB14 [0013]  2       BB12,BB13             1       [100..127)-> BB16 (always)                     i label target hascall gcsafe newobj 
BB15 [0014]  1       BB19                  1       [127..133)                                     i Loop label target hascall gcsafe bwd bwd-target 
BB16 [0015]  2       BB14,BB15             1       [000..147)-> BB18 ( cond )                     i label target gcsafe bwd 
BB17 [0053]  1       BB16                  1       [000..000)-> BB19 (always)                     i internal gcsafe bwd 
BB18 [0054]  1       BB16                  1       [000..000)                                     i internal label target gcsafe bwd 
BB19 [0055]  2       BB17,BB18             1       [???..???)-> BB15 ( cond )                     internal label target gcsafe bwd 
BB20 [0016]  1       BB19                  1       [147..153)        (return)                     i gcsafe 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB21 [0010]  1     0                       1       [0F4..0F8)-> BB23 ( cond )    H0 F fault {     keep i label target flet 
BB22 [0011]  1     0 BB21                  1       [0F8..0FF)                    H0               i hascall gcsafe 
BB23 [0012]  2     0 BB21,BB22             1       [0FF..100)        (finret)    H0   }           i label target 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist
*************** In fgComputeDoms
*************** In fgDebugCheckBBlist

Dominator computation start blocks (those blocks with no incoming edges):
BB01 BB21 
------------------------------------------------
BBnum  Dominated by
------------------------------------------------
BB21:  BB21 
BB22:  BB22 BB21 
BB23:  BB23 BB21 
BB01:  BB01 
BB02:  BB02 BB01 
BB03:  BB03 BB02 BB01 
BB04:  BB04 BB03 BB02 BB01 
BB06:  BB06 BB03 BB02 BB01 
BB07:  BB07 BB03 BB02 BB01 
BB08:  BB08 BB07 BB03 BB02 BB01 
BB09:  BB09 BB08 BB07 BB03 BB02 BB01 
BB10:  BB10 BB07 BB03 BB02 BB01 
BB11:  BB11 BB10 BB07 BB03 BB02 BB01 
BB05:  BB05 BB07 BB03 BB02 BB01 
BB12:  BB12 BB02 BB01 
BB13:  BB13 BB12 BB02 BB01 
BB14:  BB14 BB12 BB02 BB01 
BB16:  BB16 BB14 BB12 BB02 BB01 
BB17:  BB17 BB16 BB14 BB12 BB02 BB01 
BB18:  BB18 BB16 BB14 BB12 BB02 BB01 
BB19:  BB19 BB16 BB14 BB12 BB02 BB01 
BB20:  BB20 BB19 BB16 BB14 BB12 BB02 BB01 
BB15:  BB15 BB19 BB16 BB14 BB12 BB02 BB01 

Inside fgBuildDomTree

After computing the Dominance Tree:
BB01 : BB02 
BB02 : BB12 BB03 
BB03 : BB07 BB06 BB04 
BB07 : BB10 BB08 BB05 
BB08 : BB09 
BB10 : BB11 
BB12 : BB14 BB13 
BB14 : BB16 
BB16 : BB19 BB18 BB17 
BB19 : BB20 BB15 
BB21 : BB23 BB22 


After numbering the dominator tree:
BB01: pre=01, post=20
BB02: pre=02, post=19
BB03: pre=12, post=18
BB04: pre=20, post=17
BB05: pre=18, post=14
BB06: pre=19, post=16
BB07: pre=13, post=15
BB08: pre=16, post=13
BB09: pre=17, post=12
BB10: pre=14, post=11
BB11: pre=15, post=10
BB12: pre=03, post=09
BB13: pre=11, post=08
BB14: pre=04, post=07
BB15: pre=08, post=02
BB16: pre=05, post=06
BB17: pre=10, post=05
BB18: pre=09, post=04
BB19: pre=06, post=03
BB20: pre=07, post=01
BB21: pre=21, post=23
BB22: pre=23, post=22
BB23: pre=22, post=21

*************** Finishing PHASE Compute blocks reachability

*************** Starting PHASE Optimize loops
*************** In optOptimizeLoops()

After optSetBlockWeights:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB12 ( cond ) T0      try {       keep i try label hascall gcsafe 
BB03 [0002]  2  0    BB02,BB11             0.50    [072..08B)-> BB06 ( cond ) T0                  i Loop label target hascall gcsafe newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  0.50    [08B..08F)-> BB07 (always) T0                  i gcsafe bwd 
BB05 [0044]  2  0    BB08,BB10             0       [000..000)        (throw ) T0                  i internal rare label target hascall gcsafe bwd 
BB06 [0004]  1  0    BB03                  0.50    [08F..09C)                 T0                  i label target hascall gcsafe bwd 
BB07 [0005]  2  0    BB04,BB06             0.50    [09C..0BB)-> BB10 ( cond ) T0                  i label target gcsafe bwd 
BB08 [0006]  1  0    BB07                  0.50    [000..0D3)-> BB05 ( cond ) T0                  i hascall gcsafe newobj bwd 
BB09 [0041]  1  0    BB08                  0.50    [000..000)                 T0                  i internal label target gcsafe newobj bwd 
BB10 [0007]  2  0    BB07,BB09             0.50    [000..0E9)-> BB05 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB11 [0045]  1  0    BB10                  0.50    [000..0F2)-> BB03 ( cond ) T0      }           i label target hascall gcsafe newobj bwd 
BB12 [0057]  2       BB02,BB11             1       [0F4..0F8)-> BB14 ( cond )                     keep i label target gcsafe cfb 
BB13 [0058]  1       BB12                  0.50    [0F8..100)                                     i hascall gcsafe 
BB14 [0013]  2       BB12,BB13             1       [100..127)-> BB16 (always)                     i label target hascall gcsafe newobj 
BB15 [0014]  1       BB19                  0.50    [127..133)                                     i Loop label target hascall gcsafe bwd bwd-target 
BB16 [0015]  2       BB14,BB15             1       [000..147)-> BB18 ( cond )                     i label target gcsafe bwd 
BB17 [0053]  1       BB16                  0.50    [000..000)-> BB19 (always)                     i internal gcsafe bwd 
BB18 [0054]  1       BB16                  0.50    [000..000)                                     i internal label target gcsafe bwd 
BB19 [0055]  2       BB17,BB18             1       [???..???)-> BB15 ( cond )                     internal label target gcsafe bwd 
BB20 [0016]  1       BB19                  1       [147..153)        (return)                     i gcsafe 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB21 [0010]  1     0                       0       [0F4..0F8)-> BB23 ( cond )    H0 F fault {     keep i rare label target flet 
BB22 [0011]  1     0 BB21                  0       [0F8..0FF)                    H0               i rare hascall gcsafe 
BB23 [0012]  2     0 BB21,BB22             0       [0FF..100)        (finret)    H0   }           i rare label target 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist
*************** In optFindNaturalLoops()
Relocated block [BB05..BB05] inserted after BB11
EH#0: New last block of try: BB05
New Basic Block BB24 [0061] created.
Added an unconditional jump to BB12 after block BB11
Recorded loop L00, from BB03 to BB11 (Head=BB02, Entry=BB03, ExitCnt=3)
Recorded loop L01, from BB15 to BB19 (Head=BB14, Entry=BB16, ExitCnt=1 at BB19)

*************** Before renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB12 ( cond ) T0      try {       keep i try label hascall gcsafe 
BB03 [0002]  2  0    BB02,BB11             0.50    [072..08B)-> BB06 ( cond ) T0                  i Loop label target hascall gcsafe newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  0.50    [08B..08F)-> BB07 (always) T0                  i gcsafe bwd 
BB06 [0004]  1  0    BB03                  0.50    [08F..09C)                 T0                  i label target hascall gcsafe bwd 
BB07 [0005]  2  0    BB04,BB06             0.50    [09C..0BB)-> BB10 ( cond ) T0                  i label target gcsafe bwd 
BB08 [0006]  1  0    BB07                  0.50    [000..0D3)-> BB05 ( cond ) T0                  i hascall gcsafe newobj bwd 
BB09 [0041]  1  0    BB08                  0.50    [000..000)                 T0                  i internal label target gcsafe newobj bwd 
BB10 [0007]  2  0    BB07,BB09             0.50    [000..0E9)-> BB05 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB11 [0045]  1  0    BB10                  0.50    [000..0F2)-> BB03 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB24 [0061]  1  0    BB11                  0.50    [???..???)-> BB12 (always) T0                  internal 
BB05 [0044]  2  0    BB08,BB10             0       [000..000)        (throw ) T0      }           i internal rare label target hascall gcsafe bwd 
BB12 [0057]  2       BB02,BB24             1       [0F4..0F8)-> BB14 ( cond )                     keep i label target gcsafe cfb 
BB13 [0058]  1       BB12                  0.50    [0F8..100)                                     i hascall gcsafe 
BB14 [0013]  2       BB12,BB13             1       [100..127)-> BB16 (always)                     i label target hascall gcsafe newobj 
BB15 [0014]  1       BB19                  0.50    [127..133)                                     i Loop label target hascall gcsafe bwd bwd-target 
BB16 [0015]  2       BB14,BB15             1       [000..147)-> BB18 ( cond )                     i label target gcsafe bwd 
BB17 [0053]  1       BB16                  0.50    [000..000)-> BB19 (always)                     i internal gcsafe bwd 
BB18 [0054]  1       BB16                  0.50    [000..000)                                     i internal label target gcsafe bwd 
BB19 [0055]  2       BB17,BB18             1       [???..???)-> BB15 ( cond )                     internal label target gcsafe bwd 
BB20 [0016]  1       BB19                  1       [147..153)        (return)                     i gcsafe 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB21 [0010]  1     0                       0       [0F4..0F8)-> BB23 ( cond )    H0 F fault {     keep i rare label target flet 
BB22 [0011]  1     0 BB21                  0       [0F8..0FF)                    H0               i rare hascall gcsafe 
BB23 [0012]  2     0 BB21,BB22             0       [0FF..100)        (finret)    H0   }           i rare label target 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB02..BB05 [070..0F4), Fault   at BB21..BB23 [0F4..100)
Renumber BB06 to BB05
Renumber BB07 to BB06
Renumber BB08 to BB07
Renumber BB09 to BB08
Renumber BB10 to BB09
Renumber BB11 to BB10
Renumber BB24 to BB11
Renumber BB05 to BB12
Renumber BB12 to BB13
Renumber BB13 to BB14
Renumber BB14 to BB15
Renumber BB15 to BB16
Renumber BB16 to BB17
Renumber BB17 to BB18
Renumber BB18 to BB19
Renumber BB19 to BB20
Renumber BB20 to BB21
Renumber BB21 to BB22
Renumber BB22 to BB23
Renumber BB23 to BB24

*************** After renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB13 ( cond ) T0      try {       keep i try label hascall gcsafe 
BB03 [0002]  2  0    BB02,BB10             0.50    [072..08B)-> BB05 ( cond ) T0                  i Loop label target hascall gcsafe newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  0.50    [08B..08F)-> BB06 (always) T0                  i gcsafe bwd 
BB05 [0004]  1  0    BB03                  0.50    [08F..09C)                 T0                  i label target hascall gcsafe bwd 
BB06 [0005]  2  0    BB04,BB05             0.50    [09C..0BB)-> BB09 ( cond ) T0                  i label target gcsafe bwd 
BB07 [0006]  1  0    BB06                  0.50    [000..0D3)-> BB12 ( cond ) T0                  i hascall gcsafe newobj bwd 
BB08 [0041]  1  0    BB07                  0.50    [000..000)                 T0                  i internal label target gcsafe newobj bwd 
BB09 [0007]  2  0    BB06,BB08             0.50    [000..0E9)-> BB12 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB10 [0045]  1  0    BB09                  0.50    [000..0F2)-> BB03 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB11 [0061]  1  0    BB10                  0.50    [???..???)-> BB13 (always) T0                  internal 
BB12 [0044]  2  0    BB07,BB09             0       [000..000)        (throw ) T0      }           i internal rare label target hascall gcsafe bwd 
BB13 [0057]  2       BB02,BB11             1       [0F4..0F8)-> BB15 ( cond )                     keep i label target gcsafe cfb 
BB14 [0058]  1       BB13                  0.50    [0F8..100)                                     i hascall gcsafe 
BB15 [0013]  2       BB13,BB14             1       [100..127)-> BB17 (always)                     i label target hascall gcsafe newobj 
BB16 [0014]  1       BB20                  0.50    [127..133)                                     i Loop label target hascall gcsafe bwd bwd-target 
BB17 [0015]  2       BB15,BB16             1       [000..147)-> BB19 ( cond )                     i label target gcsafe bwd 
BB18 [0053]  1       BB17                  0.50    [000..000)-> BB20 (always)                     i internal gcsafe bwd 
BB19 [0054]  1       BB17                  0.50    [000..000)                                     i internal label target gcsafe bwd 
BB20 [0055]  2       BB18,BB19             1       [???..???)-> BB16 ( cond )                     internal label target gcsafe bwd 
BB21 [0016]  1       BB20                  1       [147..153)        (return)                     i gcsafe 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB22 [0010]  1     0                       0       [0F4..0F8)-> BB24 ( cond )    H0 F fault {     keep i rare label target flet 
BB23 [0011]  1     0 BB22                  0       [0F8..0FF)                    H0               i rare hascall gcsafe 
BB24 [0012]  2     0 BB22,BB23             0       [0FF..100)        (finret)    H0   }           i rare label target 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB02..BB12 [070..0F4), Fault   at BB22..BB24 [0F4..100)

New BlockSet epoch 4, # of blocks (including unused BB00): 25, bitset array size: 1 (short)

Renumbering the basic blocks for fgUpdateChangeFlowGraph

*************** Before renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB13 ( cond ) T0      try {       keep i try label hascall gcsafe 
BB03 [0002]  2  0    BB02,BB10             0.50  0 [072..08B)-> BB05 ( cond ) T0                  i Loop label target hascall gcsafe newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  0.50  0 [08B..08F)-> BB06 (always) T0                  i gcsafe bwd 
BB05 [0004]  1  0    BB03                  0.50  0 [08F..09C)                 T0                  i label target hascall gcsafe bwd 
BB06 [0005]  2  0    BB04,BB05             0.50  0 [09C..0BB)-> BB09 ( cond ) T0                  i label target gcsafe bwd 
BB07 [0006]  1  0    BB06                  0.50  0 [000..0D3)-> BB12 ( cond ) T0                  i hascall gcsafe newobj bwd 
BB08 [0041]  1  0    BB07                  0.50  0 [000..000)                 T0                  i internal label target gcsafe newobj bwd 
BB09 [0007]  2  0    BB06,BB08             0.50  0 [000..0E9)-> BB12 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB10 [0045]  1  0    BB09                  0.50  0 [000..0F2)-> BB03 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB11 [0061]  1  0    BB10                  0.50    [???..???)-> BB13 (always) T0                  internal 
BB12 [0044]  2  0    BB07,BB09             0       [000..000)        (throw ) T0      }           i internal rare label target hascall gcsafe bwd 
BB13 [0057]  2       BB02,BB11             1       [0F4..0F8)-> BB15 ( cond )                     keep i label target gcsafe cfb 
BB14 [0058]  1       BB13                  0.50    [0F8..100)                                     i hascall gcsafe 
BB15 [0013]  2       BB13,BB14             1       [100..127)-> BB17 (always)                     i label target hascall gcsafe newobj 
BB16 [0014]  1       BB20                  0.50  1 [127..133)                                     i Loop label target hascall gcsafe bwd bwd-target 
BB17 [0015]  2       BB15,BB16             1     1 [000..147)-> BB19 ( cond )                     i label target gcsafe bwd 
BB18 [0053]  1       BB17                  0.50  1 [000..000)-> BB20 (always)                     i internal gcsafe bwd 
BB19 [0054]  1       BB17                  0.50  1 [000..000)                                     i internal label target gcsafe bwd 
BB20 [0055]  2       BB18,BB19             1     1 [???..???)-> BB16 ( cond )                     internal label target gcsafe bwd 
BB21 [0016]  1       BB20                  1       [147..153)        (return)                     i gcsafe 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB22 [0010]  1     0                       0       [0F4..0F8)-> BB24 ( cond )    H0 F fault {     keep i rare label target flet 
BB23 [0011]  1     0 BB22                  0       [0F8..0FF)                    H0               i rare hascall gcsafe 
BB24 [0012]  2     0 BB22,BB23             0       [0FF..100)        (finret)    H0   }           i rare label target 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB02..BB12 [070..0F4), Fault   at BB22..BB24 [0F4..100)

*************** After renumbering the basic blocks
=============== No blocks renumbered!

*************** In fgComputePreds()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB13 ( cond ) T0      try {       keep i try label hascall gcsafe 
BB03 [0002]  2  0    BB02,BB10             0.50  0 [072..08B)-> BB05 ( cond ) T0                  i Loop label target hascall gcsafe newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  0.50  0 [08B..08F)-> BB06 (always) T0                  i gcsafe bwd 
BB05 [0004]  1  0    BB03                  0.50  0 [08F..09C)                 T0                  i label target hascall gcsafe bwd 
BB06 [0005]  2  0    BB04,BB05             0.50  0 [09C..0BB)-> BB09 ( cond ) T0                  i label target gcsafe bwd 
BB07 [0006]  1  0    BB06                  0.50  0 [000..0D3)-> BB12 ( cond ) T0                  i hascall gcsafe newobj bwd 
BB08 [0041]  1  0    BB07                  0.50  0 [000..000)                 T0                  i internal label target gcsafe newobj bwd 
BB09 [0007]  2  0    BB06,BB08             0.50  0 [000..0E9)-> BB12 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB10 [0045]  1  0    BB09                  0.50  0 [000..0F2)-> BB03 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB11 [0061]  1  0    BB10                  0.50    [???..???)-> BB13 (always) T0                  internal 
BB12 [0044]  2  0    BB07,BB09             0       [000..000)        (throw ) T0      }           i internal rare label target hascall gcsafe bwd 
BB13 [0057]  2       BB02,BB11             1       [0F4..0F8)-> BB15 ( cond )                     keep i label target gcsafe cfb 
BB14 [0058]  1       BB13                  0.50    [0F8..100)                                     i hascall gcsafe 
BB15 [0013]  2       BB13,BB14             1       [100..127)-> BB17 (always)                     i label target hascall gcsafe newobj 
BB16 [0014]  1       BB20                  0.50  1 [127..133)                                     i Loop label target hascall gcsafe bwd bwd-target 
BB17 [0015]  2       BB15,BB16             1     1 [000..147)-> BB19 ( cond )                     i label target gcsafe bwd 
BB18 [0053]  1       BB17                  0.50  1 [000..000)-> BB20 (always)                     i internal gcsafe bwd 
BB19 [0054]  1       BB17                  0.50  1 [000..000)                                     i internal label target gcsafe bwd 
BB20 [0055]  2       BB18,BB19             1     1 [???..???)-> BB16 ( cond )                     internal label target gcsafe bwd 
BB21 [0016]  1       BB20                  1       [147..153)        (return)                     i gcsafe 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB22 [0010]  1     0                       0       [0F4..0F8)-> BB24 ( cond )    H0 F fault {     keep i rare label target flet 
BB23 [0011]  1     0 BB22                  0       [0F8..0FF)                    H0               i rare hascall gcsafe 
BB24 [0012]  2     0 BB22,BB23             0       [0FF..100)        (finret)    H0   }           i rare label target 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** After fgComputePreds()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB13 ( cond ) T0      try {       keep i try label hascall gcsafe 
BB03 [0002]  2  0    BB02,BB10             0.50  0 [072..08B)-> BB05 ( cond ) T0                  i Loop label target hascall gcsafe newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  0.50  0 [08B..08F)-> BB06 (always) T0                  i gcsafe bwd 
BB05 [0004]  1  0    BB03                  0.50  0 [08F..09C)                 T0                  i label target hascall gcsafe bwd 
BB06 [0005]  2  0    BB04,BB05             0.50  0 [09C..0BB)-> BB09 ( cond ) T0                  i label target gcsafe bwd 
BB07 [0006]  1  0    BB06                  0.50  0 [000..0D3)-> BB12 ( cond ) T0                  i hascall gcsafe newobj bwd 
BB08 [0041]  1  0    BB07                  0.50  0 [000..000)                 T0                  i internal label target gcsafe newobj bwd 
BB09 [0007]  2  0    BB06,BB08             0.50  0 [000..0E9)-> BB12 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB10 [0045]  1  0    BB09                  0.50  0 [000..0F2)-> BB03 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB11 [0061]  1  0    BB10                  0.50    [???..???)-> BB13 (always) T0                  internal 
BB12 [0044]  2  0    BB07,BB09             0       [000..000)        (throw ) T0      }           i internal rare label target hascall gcsafe bwd 
BB13 [0057]  2       BB02,BB11             1       [0F4..0F8)-> BB15 ( cond )                     keep i label target gcsafe cfb 
BB14 [0058]  1       BB13                  0.50    [0F8..100)                                     i hascall gcsafe 
BB15 [0013]  2       BB13,BB14             1       [100..127)-> BB17 (always)                     i label target hascall gcsafe newobj 
BB16 [0014]  1       BB20                  0.50  1 [127..133)                                     i Loop label target hascall gcsafe bwd bwd-target 
BB17 [0015]  2       BB15,BB16             1     1 [000..147)-> BB19 ( cond )                     i label target gcsafe bwd 
BB18 [0053]  1       BB17                  0.50  1 [000..000)-> BB20 (always)                     i internal gcsafe bwd 
BB19 [0054]  1       BB17                  0.50  1 [000..000)                                     i internal label target gcsafe bwd 
BB20 [0055]  2       BB18,BB19             1     1 [???..???)-> BB16 ( cond )                     internal label target gcsafe bwd 
BB21 [0016]  1       BB20                  1       [147..153)        (return)                     i gcsafe 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB22 [0010]  1     0                       0       [0F4..0F8)-> BB24 ( cond )    H0 F fault {     keep i rare label target flet 
BB23 [0011]  1     0 BB22                  0       [0F8..0FF)                    H0               i rare hascall gcsafe 
BB24 [0012]  2     0 BB22,BB23             0       [0FF..100)        (finret)    H0   }           i rare label target 
-----------------------------------------------------------------------------------------------------------------------------------------

Enter blocks: BB01 BB22 

After computing reachability sets:
------------------------------------------------
BBnum  Reachable by 
------------------------------------------------
BB01 : BB01 
BB02 : BB01 BB02 
BB03 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 
BB04 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 
BB05 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 
BB06 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 
BB07 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 
BB08 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 
BB09 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 
BB10 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 
BB11 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 BB11 
BB12 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 BB12 
BB13 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 BB11 BB13 
BB14 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 BB11 BB13 BB14 
BB15 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 BB11 BB13 BB14 BB15 
BB16 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 BB11 BB13 BB14 BB15 BB16 BB17 BB18 BB19 BB20 
BB17 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 BB11 BB13 BB14 BB15 BB16 BB17 BB18 BB19 BB20 
BB18 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 BB11 BB13 BB14 BB15 BB16 BB17 BB18 BB19 BB20 
BB19 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 BB11 BB13 BB14 BB15 BB16 BB17 BB18 BB19 BB20 
BB20 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 BB11 BB13 BB14 BB15 BB16 BB17 BB18 BB19 BB20 
BB21 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 BB11 BB13 BB14 BB15 BB16 BB17 BB18 BB19 BB20 BB21 
BB22 : BB22 
BB23 : BB22 BB23 
BB24 : BB22 BB23 BB24 
*************** In fgComputeDoms
*************** In fgDebugCheckBBlist

Dominator computation start blocks (those blocks with no incoming edges):
BB01 BB22 
------------------------------------------------
BBnum  Dominated by
------------------------------------------------
BB22:  BB22 
BB23:  BB23 BB22 
BB24:  BB24 BB22 
BB01:  BB01 
BB02:  BB02 BB01 
BB03:  BB03 BB02 BB01 
BB04:  BB04 BB03 BB02 BB01 
BB05:  BB05 BB03 BB02 BB01 
BB06:  BB06 BB03 BB02 BB01 
BB07:  BB07 BB06 BB03 BB02 BB01 
BB08:  BB08 BB07 BB06 BB03 BB02 BB01 
BB09:  BB09 BB06 BB03 BB02 BB01 
BB10:  BB10 BB09 BB06 BB03 BB02 BB01 
BB11:  BB11 BB10 BB09 BB06 BB03 BB02 BB01 
BB12:  BB12 BB06 BB03 BB02 BB01 
BB13:  BB13 BB02 BB01 
BB14:  BB14 BB13 BB02 BB01 
BB15:  BB15 BB13 BB02 BB01 
BB17:  BB17 BB15 BB13 BB02 BB01 
BB18:  BB18 BB17 BB15 BB13 BB02 BB01 
BB19:  BB19 BB17 BB15 BB13 BB02 BB01 
BB20:  BB20 BB17 BB15 BB13 BB02 BB01 
BB21:  BB21 BB20 BB17 BB15 BB13 BB02 BB01 
BB16:  BB16 BB20 BB17 BB15 BB13 BB02 BB01 

Inside fgBuildDomTree

After computing the Dominance Tree:
BB01 : BB02 
BB02 : BB13 BB03 
BB03 : BB06 BB05 BB04 
BB06 : BB12 BB09 BB07 
BB07 : BB08 
BB09 : BB10 
BB10 : BB11 
BB13 : BB15 BB14 
BB15 : BB17 
BB17 : BB20 BB19 BB18 
BB20 : BB21 BB16 
BB22 : BB24 BB23 


After numbering the dominator tree:
BB01: pre=01, post=21
BB02: pre=02, post=20
BB03: pre=12, post=19
BB04: pre=21, post=18
BB05: pre=20, post=17
BB06: pre=13, post=16
BB07: pre=18, post=15
BB08: pre=19, post=14
BB09: pre=15, post=13
BB10: pre=16, post=12
BB11: pre=17, post=11
BB12: pre=14, post=10
BB13: pre=03, post=09
BB14: pre=11, post=08
BB15: pre=04, post=07
BB16: pre=08, post=02
BB17: pre=05, post=06
BB18: pre=10, post=05
BB19: pre=09, post=04
BB20: pre=06, post=03
BB21: pre=07, post=01
BB22: pre=22, post=24
BB23: pre=24, post=23
BB24: pre=23, post=22

Final natural loop table:
L00, from BB03 to BB10 (Head=BB02, Entry=BB03, ExitCnt=3)
L01, from BB16 to BB20 (Head=BB15, Entry=BB17, ExitCnt=1 at BB20)

Marking a loop from BB03 to BB10
    BB03(wt=4   )
    BB04(wt=2   )
    BB05(wt=2   )
    BB06(wt=4   )
    BB07(wt=2   )
    BB08(wt=2   )
    BB09(wt=4   )
    BB10(wt=4   )
Marking a loop from BB16 to BB20
    BB16(wt=2   )
    BB17(wt=8   )
    BB18(wt=2   )
    BB19(wt=2   )
    BB20(wt=8   )
Found a total of 2 loops.
After loop weight marking:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB13 ( cond ) T0      try {       keep i try label hascall gcsafe 
BB03 [0002]  2  0    BB02,BB10             4     0 [072..08B)-> BB05 ( cond ) T0                  i Loop label target hascall gcsafe newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  2     0 [08B..08F)-> BB06 (always) T0                  i gcsafe bwd 
BB05 [0004]  1  0    BB03                  2     0 [08F..09C)                 T0                  i label target hascall gcsafe bwd 
BB06 [0005]  2  0    BB04,BB05             4     0 [09C..0BB)-> BB09 ( cond ) T0                  i label target gcsafe bwd 
BB07 [0006]  1  0    BB06                  2     0 [000..0D3)-> BB12 ( cond ) T0                  i hascall gcsafe newobj bwd 
BB08 [0041]  1  0    BB07                  2     0 [000..000)                 T0                  i internal label target gcsafe newobj bwd 
BB09 [0007]  2  0    BB06,BB08             4     0 [000..0E9)-> BB12 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB10 [0045]  1  0    BB09                  4     0 [000..0F2)-> BB03 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB11 [0061]  1  0    BB10                  0.50    [???..???)-> BB13 (always) T0                  internal gcsafe 
BB12 [0044]  2  0    BB07,BB09             0       [000..000)        (throw ) T0      }           i internal rare label target hascall gcsafe bwd 
BB13 [0057]  2       BB02,BB11             1       [0F4..0F8)-> BB15 ( cond )                     keep i label target gcsafe cfb 
BB14 [0058]  1       BB13                  0.50    [0F8..100)                                     i hascall gcsafe 
BB15 [0013]  2       BB13,BB14             1       [100..127)-> BB17 (always)                     i label target hascall gcsafe newobj 
BB16 [0014]  1       BB20                  2     1 [127..133)                                     i Loop label target hascall gcsafe bwd bwd-target 
BB17 [0015]  2       BB15,BB16             8     1 [000..147)-> BB19 ( cond )                     i label target gcsafe bwd 
BB18 [0053]  1       BB17                  2     1 [000..000)-> BB20 (always)                     i internal gcsafe bwd 
BB19 [0054]  1       BB17                  2     1 [000..000)                                     i internal label target gcsafe bwd 
BB20 [0055]  2       BB18,BB19             8     1 [???..???)-> BB16 ( cond )                     internal label target gcsafe bwd 
BB21 [0016]  1       BB20                  1       [147..153)        (return)                     i gcsafe 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB22 [0010]  1     0                       0       [0F4..0F8)-> BB24 ( cond )    H0 F fault {     keep i rare label target flet 
BB23 [0011]  1     0 BB22                  0       [0F8..0FF)                    H0               i rare hascall gcsafe 
BB24 [0012]  2     0 BB22,BB23             0       [0FF..100)        (finret)    H0   }           i rare label target 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** Finishing PHASE Optimize loops

*************** Starting PHASE Clone loops

*************** In optCloneLoops()
Blocks/Trees at start of phase

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB13 ( cond ) T0      try {       keep i try label hascall gcsafe 
BB03 [0002]  2  0    BB02,BB10             4     0 [072..08B)-> BB05 ( cond ) T0                  i Loop label target hascall gcsafe newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  2     0 [08B..08F)-> BB06 (always) T0                  i gcsafe bwd 
BB05 [0004]  1  0    BB03                  2     0 [08F..09C)                 T0                  i label target hascall gcsafe bwd 
BB06 [0005]  2  0    BB04,BB05             4     0 [09C..0BB)-> BB09 ( cond ) T0                  i label target gcsafe bwd 
BB07 [0006]  1  0    BB06                  2     0 [000..0D3)-> BB12 ( cond ) T0                  i hascall gcsafe newobj bwd 
BB08 [0041]  1  0    BB07                  2     0 [000..000)                 T0                  i internal label target gcsafe newobj bwd 
BB09 [0007]  2  0    BB06,BB08             4     0 [000..0E9)-> BB12 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB10 [0045]  1  0    BB09                  4     0 [000..0F2)-> BB03 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB11 [0061]  1  0    BB10                  0.50    [???..???)-> BB13 (always) T0                  internal gcsafe 
BB12 [0044]  2  0    BB07,BB09             0       [000..000)        (throw ) T0      }           i internal rare label target hascall gcsafe bwd 
BB13 [0057]  2       BB02,BB11             1       [0F4..0F8)-> BB15 ( cond )                     keep i label target gcsafe cfb 
BB14 [0058]  1       BB13                  0.50    [0F8..100)                                     i hascall gcsafe 
BB15 [0013]  2       BB13,BB14             1       [100..127)-> BB17 (always)                     i label target hascall gcsafe newobj 
BB16 [0014]  1       BB20                  2     1 [127..133)                                     i Loop label target hascall gcsafe bwd bwd-target 
BB17 [0015]  2       BB15,BB16             8     1 [000..147)-> BB19 ( cond )                     i label target gcsafe bwd 
BB18 [0053]  1       BB17                  2     1 [000..000)-> BB20 (always)                     i internal gcsafe bwd 
BB19 [0054]  1       BB17                  2     1 [000..000)                                     i internal label target gcsafe bwd 
BB20 [0055]  2       BB18,BB19             8     1 [???..???)-> BB16 ( cond )                     internal label target gcsafe bwd 
BB21 [0016]  1       BB20                  1       [147..153)        (return)                     i gcsafe 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB22 [0010]  1     0                       0       [0F4..0F8)-> BB24 ( cond )    H0 F fault {     keep i rare label target flet 
BB23 [0011]  1     0 BB22                  0       [0F8..0FF)                    H0               i rare hascall gcsafe 
BB24 [0012]  2     0 BB22,BB23             0       [0FF..100)        (finret)    H0   }           i rare label target 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..070), preds={} succs={BB02}

***** BB01
STMT00000 (IL 0x000...0x005)
               [000003] -AC--+------              *  ASG       ref   
               [000002] D----+-N----              +--*  LCL_VAR   ref    V12 tmp1         
               [000001] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000000] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB01
STMT00002 (IL 0x005...  ???)
               [000008] -A---+------              *  ASG       ref   
               [000007] D----+-N----              +--*  LCL_VAR   ref    V02 loc0         
               [000006] -----+------              \--*  LCL_VAR   ref    V12 tmp1         

***** BB01
STMT00003 (IL 0x006...0x008)
               [000012] -A-XG+------              *  ASG       ref   
               [000011] ---XG+-N----              +--*  IND       ref   
               [000440] -----+------              |  \--*  ADD       byref 
               [000009] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000439] -----+------              |     \--*  CNS_INT   long   32 field offset Fseq[outputFile]
               [000010] -----+------              \--*  LCL_VAR   ref    V01 arg1         

***** BB01
STMT00004 (IL 0x00D...0x00F)
               [000016] -A-XG+------              *  ASG       int   
               [000015] ---XG+-N----              +--*  IND       int   
               [000442] -----+------              |  \--*  ADD       byref 
               [000013] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000441] -----+------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]
               [000014] -----+------              \--*  CNS_INT   int    0

***** BB01
STMT00005 (IL 0x014...0x016)
               [000020] -A-XG+------              *  ASG       int   
               [000019] ---XG+-N----              +--*  IND       int   
               [000444] -----+------              |  \--*  ADD       byref 
               [000017] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000443] -----+------              |     \--*  CNS_INT   long   56 field offset Fseq[analyzersFinishedCount]
               [000018] -----+------              \--*  CNS_INT   int    0

***** BB01
STMT00006 (IL 0x01B...0x021)
               [000025] -AC--+------              *  ASG       ref   
               [000024] D----+-N----              +--*  LCL_VAR   ref    V13 tmp2         
               [000023] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000022] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00074 (IL   ???...  ???)
               [000269] -AC--+------              *  ASG       ref   
               [000268] D----+-N----              +--*  LCL_VAR   ref    V30 tmp19        
               [000267] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000266] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00079 (IL   ???...  ???)
               [000283] -A-XG+------              *  ASG       int   
               [000282] V--XG+-N----              +--*  IND       int   
               [000448] -----+------              |  \--*  ADD       byref 
               [000280] -----+------              |     +--*  LCL_VAR   ref    V30 tmp19        
               [000447] -----+------              |     \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags]
               [000281] -----+------              \--*  CNS_INT   int    0x2000400

***** BB01
STMT00076 (IL   ???...  ???)
               [000274] -A-XG+------              *  ASG       ref   
               [000273] ---XG+-N----              +--*  IND       ref   
               [000450] -----+------              |  \--*  ADD       byref 
               [000265] -----+------              |     +--*  LCL_VAR   ref    V13 tmp2         
               [000449] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_task]
               [000272] -----+------              \--*  LCL_VAR   ref    V30 tmp19        

***** BB01
STMT00008 (IL 0x021...  ???)
               [000030] -A-XG+------              *  ASG       ref   
               [000029] ---XG+-N----              +--*  IND       ref   
               [000452] -----+------              |  \--*  ADD       byref 
               [000021] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000451] -----+------              |     \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun]
               [000028] -----+------              \--*  LCL_VAR   ref    V13 tmp2         

***** BB01
STMT00009 (IL 0x026...0x02C)
               [000035] -AC--+------              *  ASG       ref   
               [000034] D----+-N----              +--*  LCL_VAR   ref    V14 tmp3         
               [000033] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000032] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00082 (IL   ???...  ???)
               [000292] -ACXG+------              *  ASG       ref   
               [000291] ---XG+-N----              +--*  IND       ref   
               [000455] -----+------              |  \--*  ADD       byref 
               [000287] -----+------              |     +--*  LCL_VAR   ref    V14 tmp3         
               [000454] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_array]
               [000300] --CXG+------              \--*  COMMA     ref   
               [000299] H-CXG+------                 +--*  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS
               [000297] -----+------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e0b0028
               [000298] -----+------ arg1 in rdx     |  \--*  CNS_INT   int    14
               [000295] n---G+------                 \--*  IND       ref   
               [000458] I----+------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[Value]

***** BB01
STMT00011 (IL 0x02C...  ???)
               [000040] -A-XG+------              *  ASG       ref   
               [000039] ---XG+-N----              +--*  IND       ref   
               [000460] -----+------              |  \--*  ADD       byref 
               [000031] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000459] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers]
               [000038] -----+------              \--*  LCL_VAR   ref    V14 tmp3         

***** BB01
STMT00012 (IL 0x031...0x033)
               [000044] -A-XG+------              *  ASG       ref   
               [000043] ---XG+-N----              +--*  IND       ref   
               [000462] -----+------              |  \--*  ADD       byref 
               [000041] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000461] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter]
               [000042] -----+------              \--*  CNS_INT   ref    null

***** BB01
STMT00013 (IL 0x038...0x03E)
               [000049] -AC--+------              *  ASG       ref   
               [000048] D----+-N----              +--*  LCL_VAR   ref    V15 tmp4         
               [000047] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000046] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00083 (IL   ???...  ???)
               [000303] --CXG+------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor
               [000050] -----+------ this in rcx  +--*  LCL_VAR   ref    V15 tmp4         
               [000302] -----+------ arg1 in rdx  \--*  CNS_INT   ref    null

***** BB01
STMT00015 (IL 0x03E...  ???)
               [000054] -A-XG+------              *  ASG       ref   
               [000053] ---XG+-N----              +--*  IND       ref   
               [000467] -----+------              |  \--*  ADD       byref 
               [000045] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000466] -----+------              |     \--*  CNS_INT   long   40 field offset Fseq[output]
               [000052] -----+------              \--*  LCL_VAR   ref    V15 tmp4         

***** BB01
STMT00086 (IL   ???...  ???)
               [000316] -ACXG+------              *  ASG       ref   
               [000315] D----+-N----              +--*  LCL_VAR   ref    V31 tmp20        
               [000055] --CXG+------              \--*  CALL      ref    System.Diagnostics.Process.GetCurrentProcess

***** BB01
STMT00087 (IL   ???...  ???)
               [000314] ---X-+------              *  NULLCHECK byte  
               [000313] -----+------              \--*  LCL_VAR   ref    V31 tmp20        

***** BB01
STMT00084 (IL   ???...  ???)
               [000308] --CXG+------              *  CALL      void   System.Diagnostics.Process.EnsureState
               [000306] -----+------ this in rcx  +--*  LCL_VAR   ref    V31 tmp20        
               [000307] -----+------ arg1 in rdx  \--*  CNS_INT   int    3

***** BB01
STMT00088 (IL   ???...  ???)
               [000322] -ACXG+------              *  ASG       ref   
               [000321] D----+-N----              +--*  LCL_VAR   ref    V32 tmp21        
               [000311] --CXG+------              \--*  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule
               [000310] ---XG+------ arg0 in rcx     \--*  IND       int   
               [000471] -----+------                    \--*  ADD       byref 
               [000309] -----+------                       +--*  LCL_VAR   ref    V31 tmp20        
               [000470] -----+------                       \--*  CNS_INT   long   200 field offset Fseq[_processId]

***** BB01
STMT00019 (IL   ???...  ???)
               [000062] -A-XG+------              *  ASG       ref   
               [000061] D----+-N----              +--*  LCL_VAR   ref    V03 loc1         
               [000320] ---XG+------              \--*  IND       ref   
               [000474] -----+------                 \--*  ADD       byref 
               [000319] -----+------                    +--*  LCL_VAR   ref    V32 tmp21        
               [000473] -----+------                    \--*  CNS_INT   long   40 field offset Fseq[<FileName>k__BackingField]

***** BB01
STMT00090 (IL 0x053...  ???)
               [000333] ---X-+------              *  NULLCHECK byte  
               [000332] -----+------              \--*  LCL_VAR   ref    V03 loc1         

***** BB01
STMT00021 (IL   ???...  ???)
               [000069] -ACXG+------              *  ASG       int   
               [000068] D----+-N----              +--*  LCL_VAR   int    V04 loc2         
               [000329] --CXG+------              \--*  GE        int   
               [000340] --CXG+------                 +--*  CALL      int    System.String.IndexOf
               [000339] -----+------ arg4 out+20     |  +--*  CNS_INT   int    5
     (  5,  4) [000338] ---X-------- arg3 in r9      |  +--*  ARR_LENGTH int   
     (  3,  2) [000337] ------------                 |  |  \--*  LCL_VAR   ref    V03 loc1         
     (  4, 12) [000476] #---G------- arg1 in rdx     |  +--*  IND       ref   
     (  2, 10) [000475] H-----------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E "dotnet.exe"
               [000063] -----+------ this in rcx     |  +--*  LCL_VAR   ref    V03 loc1         
               [000336] -----+------ arg2 in r8      |  \--*  CNS_INT   int    0
               [000328] -----+------                 \--*  CNS_INT   int    0

***** BB01
STMT00023 (IL   ???...  ???)
               [000075] -ACXG+------              *  ASG       ref   
               [000074] D----+-N----              +--*  LCL_VAR   ref    V05 loc3         
               [000494] -ACXG+------              \--*  COMMA     ref   
               [000482] -ACXG+------                 +--*  ASG       ref   
               [000481] D----+-N----                 |  +--*  LCL_VAR   ref    V41 tmp30        
               [000070] --CXG+------                 |  \--*  CALL      ref    System.Environment.GetCommandLineArgs
               [000493] ---XG+------                 \--*  COMMA     ref   
               [000487] ---X-+------                    +--*  ARR_BOUNDS_CHECK_Rng void  
               [000072] -----+------                    |  +--*  CNS_INT   int    0
               [000486] ---X-+------                    |  \--*  ARR_LENGTH int   
               [000483] -----+------                    |     \--*  LCL_VAR   ref    V41 tmp30        
               [000073] a---G+------                    \--*  IND       ref   
               [000492] -----+------                       \--*  ADD       byref 
               [000484] -----+------                          +--*  LCL_VAR   ref    V41 tmp30        
               [000491] -----+------                          \--*  CNS_INT   long   16 Fseq[#FirstElem]

***** BB01
STMT00024 (IL 0x068...0x06E)
               [000079] -ACXG+------              *  ASG       ref   
               [000078] D----+-N----              +--*  LCL_VAR   ref    V06 loc4         
               [000077] --CXG+------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator
               [000076] -----+------ this in rcx     +--*  LCL_VAR   ref    V00 arg0         
               [000495] H----+------ arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

------------ BB02 [070..072) -> BB13 (cond), preds={BB01} succs={BB03,BB13}

***** BB02
STMT00119 (IL 0x0E9...  ???)
               [000578] --CXG-------              *  JTRUE     void  
     ( 27, 24) [000571] J-CXG--N----              \--*  EQ        int   
     ( 25, 22) [000572] --CXG-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext
     (  3,  2) [000575] ------------ this in rcx     |  +--*  LCL_VAR   ref    V06 loc4         
     (  2, 10) [000576] H----------- arg1 in r11     |  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11
     (  1,  1) [000577] ------------                 \--*  CNS_INT   int    0

------------ BB03 [072..08B) -> BB05 (cond), preds={BB02,BB10} succs={BB04,BB05}

***** BB03
STMT00026 (IL 0x072...0x079)
               [000088] -ACXG+------              *  ASG       ref   
               [000087] D----+-N----              +--*  LCL_VAR   ref    V07 loc5         
               [000086] --CXG+------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current
               [000085] -----+------ this in rcx     +--*  LCL_VAR   ref    V06 loc4         
               [000498] H----+------ arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

***** BB03
STMT00027 (IL 0x07B...0x089)
               [000092] -AC--+------              *  ASG       ref   
               [000091] D----+-N----              +--*  LCL_VAR   ref    V16 tmp5         
               [000090] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000089] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB03
STMT00092 (IL 0x080...  ???)
               [000347] -A-XG+------              *  ASG       ref   
               [000346] ---XG+-N----              +--*  IND       ref   
               [000503] -----+------              |  \--*  ADD       byref 
               [000096] -----+------              |     +--*  LCL_VAR   ref    V16 tmp5         
               [000502] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_fileName]
               [000097] -----+------              \--*  LCL_VAR   ref    V03 loc1         

***** BB03
STMT00031 (IL   ???...0x089)
               [000105] -A---+------              *  ASG       ref   
               [000104] D----+-N----              +--*  LCL_VAR   ref    V17 tmp6         
               [000095] -----+------              \--*  LCL_VAR   ref    V16 tmp5         

***** BB03
STMT00032 (IL   ???...  ???)
               [000108] -A---+------              *  ASG       ref   
               [000107] D----+-N----              +--*  LCL_VAR   ref    V18 tmp7         
               [000099] -----+------              \--*  LCL_VAR   ref    V16 tmp5         

***** BB03
STMT00030 (IL 0x087...  ???)
               [000103] -----+------              *  JTRUE     void  
               [000102] J----+-N----              \--*  NE        int   
               [000100] -----+------                 +--*  LCL_VAR   int    V04 loc2         
               [000101] -----+------                 \--*  CNS_INT   int    0

------------ BB04 [08B..08F) -> BB06 (always), preds={BB03} succs={BB06}

***** BB04
STMT00053 (IL   ???...0x08D)
               [000203] -A---+------              *  ASG       ref   
               [000202] D----+-N----              +--*  LCL_VAR   ref    V19 tmp8         
               [000110] -----+------              \--*  LCL_VAR   ref    V17 tmp6         

***** BB04
STMT00054 (IL   ???...  ???)
               [000206] -A---+------              *  ASG       ref   
               [000205] D----+-N----              +--*  LCL_VAR   ref    V20 tmp9         
               [000111] -----+------              \--*  LCL_VAR   ref    V18 tmp7         

***** BB04
STMT00055 (IL   ???...  ???)
               [000209] -A---+------              *  ASG       ref   
               [000208] D----+-N----              +--*  LCL_VAR   ref    V21 tmp10        
               [000201] -----+------              \--*  LCL_VAR   ref    V07 loc5         

------------ BB05 [08F..09C), preds={BB03} succs={BB06}

***** BB05
STMT00033 (IL   ???...0x097)
               [000119] -A---+------              *  ASG       ref   
               [000118] D----+-N----              +--*  LCL_VAR   ref    V19 tmp8         
               [000112] -----+------              \--*  LCL_VAR   ref    V17 tmp6         

***** BB05
STMT00034 (IL   ???...  ???)
               [000122] -A---+------              *  ASG       ref   
               [000121] D----+-N----              +--*  LCL_VAR   ref    V20 tmp9         
               [000113] -----+------              \--*  LCL_VAR   ref    V18 tmp7         

***** BB05
STMT00035 (IL   ???...  ???)
               [000125] -ACXG+------              *  ASG       ref   
               [000124] D----+-N----              +--*  LCL_VAR   ref    V21 tmp10        
               [000117] --CXG+------              \--*  CALL      ref    System.String.Concat
               [000505] #---G+------ arg1 in rdx     +--*  IND       ref   
               [000504] H----+------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E " "
               [000114] -----+------ arg0 in rcx     +--*  LCL_VAR   ref    V05 loc3         
               [000116] -----+------ arg2 in r8      \--*  LCL_VAR   ref    V07 loc5         

------------ BB06 [09C..0BB) -> BB09 (cond), preds={BB04,BB05} succs={BB07,BB09}

***** BB06
STMT00093 (IL   ???...  ???)
               [000350] -A-XG+------              *  ASG       ref   
               [000349] ---XG+-N----              +--*  IND       ref   
               [000510] -----+------              |  \--*  ADD       byref 
               [000128] -----+------              |     +--*  LCL_VAR   ref    V20 tmp9         
               [000509] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[_arguments]
               [000129] -----+------              \--*  LCL_VAR   ref    V21 tmp10        

***** BB06
STMT00094 (IL 0x0A1...  ???)
               [000355] -A-XG+------              *  ASG       bool  
               [000354] ---XG+-N----              +--*  IND       bool  
               [000512] -----+------              |  \--*  ADD       byref 
               [000131] -----+------              |     +--*  LCL_VAR   ref    V19 tmp8         
               [000511] -----+------              |     \--*  CNS_INT   long   130 field offset Fseq[<UseShellExecute>k__BackingField]
               [000353] -----+------              \--*  CNS_INT   int    0

***** BB06
STMT00038 (IL 0x0A8...  ???)
               [000136] -A---+------              *  ASG       ref   
               [000135] D----+-N----              +--*  LCL_VAR   ref    V08 loc6         
               [000127] -----+------              \--*  LCL_VAR   ref    V19 tmp8         

***** BB06
STMT00040 (IL 0x0AA...0x0B9)
               [000145] -A-XG+------              *  ASG       ref   
               [000144] D----+-N----              +--*  LCL_VAR   ref    V23 tmp12        
               [000138] ---XG+------              \--*  IND       ref   
               [000514] -----+------                 \--*  ADD       byref 
               [000137] -----+------                    +--*  LCL_VAR   ref    V02 loc0         
               [000513] -----+------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers]

***** BB06
STMT00039 (IL 0x0AA...  ???)
               [000143] -A-XG+------              *  ASG       ref   
               [000142] D----+-N----              +--*  LCL_VAR   ref    V22 tmp11        
               [000141] ---XG+------              \--*  IND       ref   
               [000516] -----+------                 \--*  ADD       byref 
               [000140] -----+------                    +--*  LCL_VAR   ref    V02 loc0         
               [000515] -----+------                    \--*  CNS_INT   long   48 field offset Fseq[<>9__2]

***** BB06
STMT00042 (IL   ???...0x0B9)
               [000153] -A---+------              *  ASG       ref   
               [000152] D----+-N----              +--*  LCL_VAR   ref    V24 tmp13        
               [000146] -----+------              \--*  LCL_VAR   ref    V23 tmp12        

***** BB06
STMT00043 (IL   ???...  ???)
               [000156] -A---+------              *  ASG       ref   
               [000155] D----+-N----              +--*  LCL_VAR   ref    V25 tmp14        
               [000139] -----+------              \--*  LCL_VAR   ref    V19 tmp8         

***** BB06
STMT00044 (IL   ???...  ???)
               [000159] -A---+------              *  ASG       ref   
               [000158] D----+-N----              +--*  LCL_VAR   ref    V26 tmp15        
               [000147] -----+------              \--*  LCL_VAR   ref    V22 tmp11        

***** BB06
STMT00041 (IL   ???...  ???)
               [000151] -----+------              *  JTRUE     void  
               [000150] J----+-N----              \--*  NE        int   
               [000148] -----+------                 +--*  LCL_VAR   ref    V22 tmp11        
               [000149] -----+------                 \--*  CNS_INT   ref    null

------------ BB07 [000..0D3) -> BB12 (cond), preds={BB06} succs={BB08,BB12}

***** BB07
STMT00048 (IL   ???...0x0CA)
               [000184] -AC--+------              *  ASG       ref   
               [000183] D----+-N----              +--*  LCL_VAR   ref    V28 tmp17        
               [000182] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000181] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB07
STMT00095 (IL   ???...  ???)
               [000359] -----+------              *  JTRUE     void  
               [000358] J----+-N----              \--*  EQ        int   
               [000179] -----+------                 +--*  LCL_VAR   ref    V02 loc0         
               [000357] -----+------                 \--*  CNS_INT   ref    null

------------ BB08 [000..000), preds={BB07} succs={BB09}

***** BB08
STMT00096 (IL   ???...  ???)
               [000362] -A-XG+------              *  ASG       ref   
               [000361] ---XG+-N----              +--*  IND       ref   
               [000519] -----+------              |  \--*  ADD       byref 
               [000185] -----+------              |     +--*  LCL_VAR   ref    V28 tmp17        
               [000518] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
               [000360] -----+------              \--*  LCL_VAR   ref    V02 loc0         

***** BB08
STMT00097 (IL   ???...  ???)
               [000366] -A-XG+------              *  ASG       long  
               [000365] ---XG+-N----              +--*  IND       long  
               [000521] -----+------              |  \--*  ADD       byref 
               [000363] -----+------              |     +--*  LCL_VAR   ref    V28 tmp17        
               [000520] -----+------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
               [000180] H----+------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

***** BB08
STMT00050 (IL 0x0C9...  ???)
               [000190] -A---+------              *  ASG       ref   
               [000189] D----+-N----              +--*  LCL_VAR   ref    V09 loc7         
               [000188] -----+------              \--*  LCL_VAR   ref    V28 tmp17        

***** BB08
STMT00051 (IL   ???...0x0CC)
               [000192] -A-XG+------              *  ASG       ref   
               [000191] ---XG+-N----              +--*  IND       ref   
               [000523] -----+------              |  \--*  ADD       byref 
               [000178] -----+------              |     +--*  LCL_VAR   ref    V02 loc0         
               [000522] -----+------              |     \--*  CNS_INT   long   48 field offset Fseq[<>9__2]
               [000187] -----+------              \--*  LCL_VAR   ref    V28 tmp17        

***** BB08
STMT00052 (IL   ???...0x0D1)
               [000199] -A---+------              *  ASG       ref   
               [000198] D----+-N----              +--*  LCL_VAR   ref    V26 tmp15        
               [000193] -----+------              \--*  LCL_VAR   ref    V28 tmp17        

------------ BB09 [000..0E9) -> BB12 (cond), preds={BB06,BB08} succs={BB10,BB12}

***** BB09
STMT00045 (IL   ???...0x0E4)
               [000172] -AC--+------              *  ASG       ref   
               [000171] D----+-N----              +--*  LCL_VAR   ref    V27 tmp16        
               [000170] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000169] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB09
STMT00099 (IL   ???...  ???)
               [000371] -----+------              *  JTRUE     void  
               [000370] J----+-N----              \--*  EQ        int   
               [000167] -----+------                 +--*  LCL_VAR   ref    V02 loc0         
               [000369] -----+------                 \--*  CNS_INT   ref    null

------------ BB10 [000..0F2) -> BB03 (cond), preds={BB09} succs={BB11,BB03}

***** BB10
STMT00100 (IL   ???...  ???)
               [000374] -A-XG+------              *  ASG       ref   
               [000373] ---XG+-N----              +--*  IND       ref   
               [000526] -----+------              |  \--*  ADD       byref 
               [000173] -----+------              |     +--*  LCL_VAR   ref    V27 tmp16        
               [000525] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
               [000372] -----+------              \--*  LCL_VAR   ref    V02 loc0         

***** BB10
STMT00101 (IL   ???...  ???)
               [000378] -A-XG+------              *  ASG       long  
               [000377] ---XG+-N----              +--*  IND       long  
               [000528] -----+------              |  \--*  ADD       byref 
               [000375] -----+------              |     +--*  LCL_VAR   ref    V27 tmp16        
               [000527] -----+------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
               [000168] H----+------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

***** BB10
STMT00047 (IL 0x0DF...  ???)
               [000177] --CXG+------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue
               [000533] -ACXG-----L- arg1 SETUP   +--*  ASG       ref   
               [000532] D------N----              |  +--*  LCL_VAR   ref    V42 tmp31        
               [000176] --CXG+------              |  \--*  CALL      ref    SolutionAnalyzer.IPC.CreateSession
               [000165] -----+------ arg0 in rcx  |     +--*  LCL_VAR   ref    V25 tmp14        
               [000166] -----+------ arg1 in rdx  |     +--*  LCL_VAR   ref    V26 tmp15        
               [000175] -----+------ arg2 in r8   |     \--*  LCL_VAR   ref    V27 tmp16        
               [000534] ------------ arg1 in rdx  +--*  LCL_VAR   ref    V42 tmp31        
               [000164] -----+------ this in rcx  \--*  LCL_VAR   ref    V24 tmp13        

***** BB10
STMT00025 (IL 0x0E9...0x0F0)
               [000084] --CXG+------              *  JTRUE     void  
     ( 27, 24) [000083] J-CXG--N----              \--*  NE        int   
     ( 25, 22) [000081] --CXG-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext
     (  3,  2) [000080] ------------ this in rcx     |  +--*  LCL_VAR   ref    V06 loc4         
     (  2, 10) [000536] H----------- arg1 in r11     |  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11
     (  1,  1) [000082] ------------                 \--*  CNS_INT   int    0

------------ BB11 [???..???) -> BB13 (always), preds={BB10} succs={BB13}

------------ BB12 [000..000) (throw), preds={BB07,BB09} succs={}

***** BB12
STMT00102 (IL   ???...  ???)
               [000379] --CXG+------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

------------ BB13 [0F4..0F8) -> BB15 (cond), preds={BB02,BB11} succs={BB14,BB15}

***** BB13
STMT00116 (IL   ???...  ???)
               [000431] -----+------              *  JTRUE     void  
               [000432] J----+-N----              \--*  EQ        int   
               [000433] -----+------                 +--*  LCL_VAR   ref    V06 loc4         
               [000434] -----+------                 \--*  CNS_INT   ref    null

------------ BB14 [0F8..100), preds={BB13} succs={BB15}

***** BB14
STMT00117 (IL   ???...  ???)
               [000435] --CXG+------              *  CALLV stub void   System.IDisposable.Dispose
               [000436] -----+------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         
               [000539] H----+------ arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

------------ BB15 [100..127) -> BB17 (always), preds={BB13,BB14} succs={BB17}

***** BB15
STMT00103 (IL 0x100...  ???)
               [000384] -A-XG+------              *  ASG       ref   
               [000383] D----+-N----              +--*  LCL_VAR   ref    V35 tmp24        
               [000213] ---XG+------              \--*  IND       ref   
               [000546] -----+------                 \--*  ADD       byref 
               [000212] -----+------                    +--*  LCL_VAR   ref    V02 loc0         
               [000545] -----+------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers]

***** BB15
STMT00057 (IL   ???...  ???)
               [000217] -A-XG+------              *  ASG       int   
               [000216] ---XG+-N----              +--*  IND       int   
               [000548] -----+------              |  \--*  ADD       byref 
               [000211] -----+------              |     +--*  LCL_VAR   ref    V02 loc0         
               [000547] -----+------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]
               [000382] ---XG+------              \--*  IND       int   
               [000550] -----+------                 \--*  ADD       byref 
               [000381] -----+------                    +--*  LCL_VAR   ref    V35 tmp24        
               [000549] -----+------                    \--*  CNS_INT   long   24 field offset Fseq[_size]

***** BB15
STMT00058 (IL 0x111...0x11D)
               [000224] -AC--+------              *  ASG       ref   
               [000223] D----+-N----              +--*  LCL_VAR   ref    V29 tmp18        
               [000222] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000221] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB15
STMT00109 (IL   ???...  ???)
               [000402] -A-XG+------              *  ASG       int   
               [000401] D----+-N----              +--*  LCL_VAR   int    V37 tmp26        
               [000220] ---XG+------              \--*  IND       int   
               [000553] -----+------                 \--*  ADD       byref 
               [000219] -----+------                    +--*  LCL_VAR   ref    V02 loc0         
               [000552] -----+------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]

***** BB15
STMT00104 (IL   ???...  ???)
               [000389] -AC--+------              *  ASG       ref   
               [000388] D----+-N----              +--*  LCL_VAR   ref    V36 tmp25        
               [000387] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000386] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB15
STMT00110 (IL   ???...  ???)
               [000406] --CXG+------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor
               [000390] -----+------ this in rcx  +--*  LCL_VAR   ref    V36 tmp25        
               [000404] -----+------ arg1 in rdx  +--*  CNS_INT   int    0
               [000405] -----+------ arg2 in r8   \--*  CNS_INT   ref    null

***** BB15
STMT00106 (IL   ???...  ???)
               [000394] -A-XG+------              *  ASG       ref   
               [000393] ---XG+-N----              +--*  IND       ref   
               [000559] -----+------              |  \--*  ADD       byref 
               [000225] -----+------              |     +--*  LCL_VAR   ref    V29 tmp18        
               [000558] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_workItems]
               [000392] -----+------              \--*  LCL_VAR   ref    V36 tmp25        

***** BB15
STMT00108 (IL   ???...  ???)
               [000400] -A-XG+------              *  ASG       int   
               [000399] ---XG+-N----              +--*  IND       int   
               [000561] -----+------              |  \--*  ADD       byref 
               [000397] -----+------              |     +--*  LCL_VAR   ref    V29 tmp18        
               [000560] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[_workItemsToComplete]
               [000398] -----+------              \--*  LCL_VAR   int    V37 tmp26        

***** BB15
STMT00060 (IL 0x11D...  ???)
               [000229] -A-XG+------              *  ASG       ref   
               [000228] ---XG+-N----              +--*  IND       ref   
               [000563] -----+------              |  \--*  ADD       byref 
               [000218] -----+------              |     +--*  LCL_VAR   ref    V02 loc0         
               [000562] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter]
               [000227] -----+------              \--*  LCL_VAR   ref    V29 tmp18        

***** BB15
STMT00061 (IL 0x122...0x123)
               [000232] -A---+------              *  ASG       int   
               [000231] D----+-N----              +--*  LCL_VAR   int    V10 loc8         
               [000230] -----+------              \--*  CNS_INT   int    0

------------ BB16 [127..133), preds={BB20} succs={BB17}

***** BB16
STMT00065 (IL 0x127...0x131)
               [000243] --CXG+------              *  CALL nullcheck void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0
               [000242] -----+------ this in rcx  \--*  LCL_VAR   ref    V02 loc0         

***** BB16
STMT00066 (IL 0x12D...  ???)
               [000248] -A---+------              *  ASG       int   
               [000247] D----+-N----              +--*  LCL_VAR   int    V10 loc8         
               [000246] -----+------              \--*  ADD       int   
               [000244] -----+------                 +--*  LCL_VAR   int    V10 loc8         
               [000245] -----+------                 \--*  CNS_INT   int    1

------------ BB17 [000..147) -> BB19 (cond), preds={BB15,BB16} succs={BB18,BB19}

***** BB17
STMT00114 (IL   ???...  ???)
               [000424] -A-XG+------              *  ASG       int   
               [000423] D----+-N----              +--*  LCL_VAR   int    V39 tmp28        
               [000237] ---XG+------              \--*  IND       int   
               [000566] -----+------                 \--*  ADD       byref 
               [000236] -----+------                    +--*  LCL_VAR   ref    V02 loc0         
               [000565] -----+------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]

***** BB17
STMT00111 (IL   ???...  ???)
               [000414] -----+------              *  JTRUE     void  
               [000413] J----+-N----              \--*  LE        int   
               [000411] -----+------                 +--*  CNS_INT   int    8
               [000412] -----+------                 \--*  LCL_VAR   int    V39 tmp28        

------------ BB18 [000..000) -> BB20 (always), preds={BB17} succs={BB20}

***** BB18
STMT00113 (IL   ???...  ???)
               [000421] -A---+------              *  ASG       int   
               [000420] D----+-N----              +--*  LCL_VAR   int    V38 tmp27        
               [000419] -----+------              \--*  LCL_VAR   int    V39 tmp28        

------------ BB19 [000..000), preds={BB17} succs={BB20}

***** BB19
STMT00112 (IL   ???...  ???)
               [000417] -A---+------              *  ASG       int   
               [000416] D----+-N----              +--*  LCL_VAR   int    V38 tmp27        
               [000415] -----+------              \--*  CNS_INT   int    8

------------ BB20 [???..???) -> BB16 (cond), preds={BB18,BB19} succs={BB21,BB16}

***** BB20
STMT00064 (IL   ???...  ???)
               [000241] -----+------              *  JTRUE     void  
               [000240] J----+-N----              \--*  LT        int   
               [000233] -----+------                 +--*  LCL_VAR   int    V10 loc8         
               [000422] -----+------                 \--*  LCL_VAR   int    V38 tmp27        

------------ BB21 [147..153) (return), preds={BB20} succs={}

***** BB21
STMT00115 (IL 0x147...  ???)
               [000429] -A-XG+------              *  ASG       ref   
               [000428] D----+-N----              +--*  LCL_VAR   ref    V40 tmp29        
               [000250] ---XG+------              \--*  IND       ref   
               [000568] -----+------                 \--*  ADD       byref 
               [000249] -----+------                    +--*  LCL_VAR   ref    V02 loc0         
               [000567] -----+------                    \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun]

***** BB21
STMT00068 (IL   ???...  ???)
               [000253] ---XG+------              *  RETURN    ref   
               [000427] ---XG+------              \--*  IND       ref   
               [000570] -----+------                 \--*  ADD       byref 
               [000426] -----+------                    +--*  LCL_VAR   ref    V40 tmp29        
               [000569] -----+------                    \--*  CNS_INT   long   8 field offset Fseq[_task]

------------ BB22 [0F4..0F8) -> BB24 (cond), preds={} succs={BB23,BB24}

***** BB22
STMT00069 (IL 0x0F4...0x0F6)
               [000257] -----+------              *  JTRUE     void  
               [000256] J----+-N----              \--*  EQ        int   
               [000254] -----+------                 +--*  LCL_VAR   ref    V06 loc4         
               [000255] -----+------                 \--*  CNS_INT   ref    null

------------ BB23 [0F8..0FF), preds={BB22} succs={BB24}

***** BB23
STMT00071 (IL 0x0F8...0x0FA)
               [000260] --CXG+------              *  CALLV stub void   System.IDisposable.Dispose
               [000259] -----+------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         
               [000542] H----+------ arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

------------ BB24 [0FF..100) (finret), preds={BB22,BB23} succs={}

***** BB24
STMT00070 (IL 0x0FF...0x0FF)
               [000258] -----+------              *  RETFILT   void  

-------------------------------------------------------------------------------------------------------------------
Considering loop 0 to clone for optimizations.
> No iter flag on loop 0.
------------------------------------------------------------
Considering loop 1 to clone for optimizations.
> No iter flag on loop 1.
------------------------------------------------------------


After loop cloning:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB13 ( cond ) T0      try {       keep i try label hascall gcsafe 
BB03 [0002]  2  0    BB02,BB10             4     0 [072..08B)-> BB05 ( cond ) T0                  i Loop label target hascall gcsafe newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  2     0 [08B..08F)-> BB06 (always) T0                  i gcsafe bwd 
BB05 [0004]  1  0    BB03                  2     0 [08F..09C)                 T0                  i label target hascall gcsafe bwd 
BB06 [0005]  2  0    BB04,BB05             4     0 [09C..0BB)-> BB09 ( cond ) T0                  i label target gcsafe bwd 
BB07 [0006]  1  0    BB06                  2     0 [000..0D3)-> BB12 ( cond ) T0                  i hascall gcsafe newobj bwd 
BB08 [0041]  1  0    BB07                  2     0 [000..000)                 T0                  i internal label target gcsafe newobj bwd 
BB09 [0007]  2  0    BB06,BB08             4     0 [000..0E9)-> BB12 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB10 [0045]  1  0    BB09                  4     0 [000..0F2)-> BB03 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB11 [0061]  1  0    BB10                  0.50    [???..???)-> BB13 (always) T0                  internal gcsafe 
BB12 [0044]  2  0    BB07,BB09             0       [000..000)        (throw ) T0      }           i internal rare label target hascall gcsafe bwd 
BB13 [0057]  2       BB02,BB11             1       [0F4..0F8)-> BB15 ( cond )                     keep i label target gcsafe cfb 
BB14 [0058]  1       BB13                  0.50    [0F8..100)                                     i hascall gcsafe 
BB15 [0013]  2       BB13,BB14             1       [100..127)-> BB17 (always)                     i label target hascall gcsafe newobj 
BB16 [0014]  1       BB20                  2     1 [127..133)                                     i Loop label target hascall gcsafe bwd bwd-target 
BB17 [0015]  2       BB15,BB16             8     1 [000..147)-> BB19 ( cond )                     i label target gcsafe bwd 
BB18 [0053]  1       BB17                  2     1 [000..000)-> BB20 (always)                     i internal gcsafe bwd 
BB19 [0054]  1       BB17                  2     1 [000..000)                                     i internal label target gcsafe bwd 
BB20 [0055]  2       BB18,BB19             8     1 [???..???)-> BB16 ( cond )                     internal label target gcsafe bwd 
BB21 [0016]  1       BB20                  1       [147..153)        (return)                     i gcsafe 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB22 [0010]  1     0                       0       [0F4..0F8)-> BB24 ( cond )    H0 F fault {     keep i rare label target flet 
BB23 [0011]  1     0 BB22                  0       [0F8..0FF)                    H0               i rare hascall gcsafe 
BB24 [0012]  2     0 BB22,BB23             0       [0FF..100)        (finret)    H0   }           i rare label target 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..070), preds={} succs={BB02}

***** BB01
STMT00000 (IL 0x000...0x005)
               [000003] -AC--+------              *  ASG       ref   
               [000002] D----+-N----              +--*  LCL_VAR   ref    V12 tmp1         
               [000001] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000000] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB01
STMT00002 (IL 0x005...  ???)
               [000008] -A---+------              *  ASG       ref   
               [000007] D----+-N----              +--*  LCL_VAR   ref    V02 loc0         
               [000006] -----+------              \--*  LCL_VAR   ref    V12 tmp1         

***** BB01
STMT00003 (IL 0x006...0x008)
               [000012] -A-XG+------              *  ASG       ref   
               [000011] ---XG+-N----              +--*  IND       ref   
               [000440] -----+------              |  \--*  ADD       byref 
               [000009] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000439] -----+------              |     \--*  CNS_INT   long   32 field offset Fseq[outputFile]
               [000010] -----+------              \--*  LCL_VAR   ref    V01 arg1         

***** BB01
STMT00004 (IL 0x00D...0x00F)
               [000016] -A-XG+------              *  ASG       int   
               [000015] ---XG+-N----              +--*  IND       int   
               [000442] -----+------              |  \--*  ADD       byref 
               [000013] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000441] -----+------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]
               [000014] -----+------              \--*  CNS_INT   int    0

***** BB01
STMT00005 (IL 0x014...0x016)
               [000020] -A-XG+------              *  ASG       int   
               [000019] ---XG+-N----              +--*  IND       int   
               [000444] -----+------              |  \--*  ADD       byref 
               [000017] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000443] -----+------              |     \--*  CNS_INT   long   56 field offset Fseq[analyzersFinishedCount]
               [000018] -----+------              \--*  CNS_INT   int    0

***** BB01
STMT00006 (IL 0x01B...0x021)
               [000025] -AC--+------              *  ASG       ref   
               [000024] D----+-N----              +--*  LCL_VAR   ref    V13 tmp2         
               [000023] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000022] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00074 (IL   ???...  ???)
               [000269] -AC--+------              *  ASG       ref   
               [000268] D----+-N----              +--*  LCL_VAR   ref    V30 tmp19        
               [000267] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000266] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00079 (IL   ???...  ???)
               [000283] -A-XG+------              *  ASG       int   
               [000282] V--XG+-N----              +--*  IND       int   
               [000448] -----+------              |  \--*  ADD       byref 
               [000280] -----+------              |     +--*  LCL_VAR   ref    V30 tmp19        
               [000447] -----+------              |     \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags]
               [000281] -----+------              \--*  CNS_INT   int    0x2000400

***** BB01
STMT00076 (IL   ???...  ???)
               [000274] -A-XG+------              *  ASG       ref   
               [000273] ---XG+-N----              +--*  IND       ref   
               [000450] -----+------              |  \--*  ADD       byref 
               [000265] -----+------              |     +--*  LCL_VAR   ref    V13 tmp2         
               [000449] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_task]
               [000272] -----+------              \--*  LCL_VAR   ref    V30 tmp19        

***** BB01
STMT00008 (IL 0x021...  ???)
               [000030] -A-XG+------              *  ASG       ref   
               [000029] ---XG+-N----              +--*  IND       ref   
               [000452] -----+------              |  \--*  ADD       byref 
               [000021] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000451] -----+------              |     \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun]
               [000028] -----+------              \--*  LCL_VAR   ref    V13 tmp2         

***** BB01
STMT00009 (IL 0x026...0x02C)
               [000035] -AC--+------              *  ASG       ref   
               [000034] D----+-N----              +--*  LCL_VAR   ref    V14 tmp3         
               [000033] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000032] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00082 (IL   ???...  ???)
               [000292] -ACXG+------              *  ASG       ref   
               [000291] ---XG+-N----              +--*  IND       ref   
               [000455] -----+------              |  \--*  ADD       byref 
               [000287] -----+------              |     +--*  LCL_VAR   ref    V14 tmp3         
               [000454] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_array]
               [000300] --CXG+------              \--*  COMMA     ref   
               [000299] H-CXG+------                 +--*  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS
               [000297] -----+------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e0b0028
               [000298] -----+------ arg1 in rdx     |  \--*  CNS_INT   int    14
               [000295] n---G+------                 \--*  IND       ref   
               [000458] I----+------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[Value]

***** BB01
STMT00011 (IL 0x02C...  ???)
               [000040] -A-XG+------              *  ASG       ref   
               [000039] ---XG+-N----              +--*  IND       ref   
               [000460] -----+------              |  \--*  ADD       byref 
               [000031] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000459] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers]
               [000038] -----+------              \--*  LCL_VAR   ref    V14 tmp3         

***** BB01
STMT00012 (IL 0x031...0x033)
               [000044] -A-XG+------              *  ASG       ref   
               [000043] ---XG+-N----              +--*  IND       ref   
               [000462] -----+------              |  \--*  ADD       byref 
               [000041] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000461] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter]
               [000042] -----+------              \--*  CNS_INT   ref    null

***** BB01
STMT00013 (IL 0x038...0x03E)
               [000049] -AC--+------              *  ASG       ref   
               [000048] D----+-N----              +--*  LCL_VAR   ref    V15 tmp4         
               [000047] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000046] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00083 (IL   ???...  ???)
               [000303] --CXG+------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor
               [000050] -----+------ this in rcx  +--*  LCL_VAR   ref    V15 tmp4         
               [000302] -----+------ arg1 in rdx  \--*  CNS_INT   ref    null

***** BB01
STMT00015 (IL 0x03E...  ???)
               [000054] -A-XG+------              *  ASG       ref   
               [000053] ---XG+-N----              +--*  IND       ref   
               [000467] -----+------              |  \--*  ADD       byref 
               [000045] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000466] -----+------              |     \--*  CNS_INT   long   40 field offset Fseq[output]
               [000052] -----+------              \--*  LCL_VAR   ref    V15 tmp4         

***** BB01
STMT00086 (IL   ???...  ???)
               [000316] -ACXG+------              *  ASG       ref   
               [000315] D----+-N----              +--*  LCL_VAR   ref    V31 tmp20        
               [000055] --CXG+------              \--*  CALL      ref    System.Diagnostics.Process.GetCurrentProcess

***** BB01
STMT00087 (IL   ???...  ???)
               [000314] ---X-+------              *  NULLCHECK byte  
               [000313] -----+------              \--*  LCL_VAR   ref    V31 tmp20        

***** BB01
STMT00084 (IL   ???...  ???)
               [000308] --CXG+------              *  CALL      void   System.Diagnostics.Process.EnsureState
               [000306] -----+------ this in rcx  +--*  LCL_VAR   ref    V31 tmp20        
               [000307] -----+------ arg1 in rdx  \--*  CNS_INT   int    3

***** BB01
STMT00088 (IL   ???...  ???)
               [000322] -ACXG+------              *  ASG       ref   
               [000321] D----+-N----              +--*  LCL_VAR   ref    V32 tmp21        
               [000311] --CXG+------              \--*  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule
               [000310] ---XG+------ arg0 in rcx     \--*  IND       int   
               [000471] -----+------                    \--*  ADD       byref 
               [000309] -----+------                       +--*  LCL_VAR   ref    V31 tmp20        
               [000470] -----+------                       \--*  CNS_INT   long   200 field offset Fseq[_processId]

***** BB01
STMT00019 (IL   ???...  ???)
               [000062] -A-XG+------              *  ASG       ref   
               [000061] D----+-N----              +--*  LCL_VAR   ref    V03 loc1         
               [000320] ---XG+------              \--*  IND       ref   
               [000474] -----+------                 \--*  ADD       byref 
               [000319] -----+------                    +--*  LCL_VAR   ref    V32 tmp21        
               [000473] -----+------                    \--*  CNS_INT   long   40 field offset Fseq[<FileName>k__BackingField]

***** BB01
STMT00090 (IL 0x053...  ???)
               [000333] ---X-+------              *  NULLCHECK byte  
               [000332] -----+------              \--*  LCL_VAR   ref    V03 loc1         

***** BB01
STMT00021 (IL   ???...  ???)
               [000069] -ACXG+------              *  ASG       int   
               [000068] D----+-N----              +--*  LCL_VAR   int    V04 loc2         
               [000329] --CXG+------              \--*  GE        int   
               [000340] --CXG+------                 +--*  CALL      int    System.String.IndexOf
               [000339] -----+------ arg4 out+20     |  +--*  CNS_INT   int    5
     (  5,  4) [000338] ---X-------- arg3 in r9      |  +--*  ARR_LENGTH int   
     (  3,  2) [000337] ------------                 |  |  \--*  LCL_VAR   ref    V03 loc1         
     (  4, 12) [000476] #---G------- arg1 in rdx     |  +--*  IND       ref   
     (  2, 10) [000475] H-----------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E "dotnet.exe"
               [000063] -----+------ this in rcx     |  +--*  LCL_VAR   ref    V03 loc1         
               [000336] -----+------ arg2 in r8      |  \--*  CNS_INT   int    0
               [000328] -----+------                 \--*  CNS_INT   int    0

***** BB01
STMT00023 (IL   ???...  ???)
               [000075] -ACXG+------              *  ASG       ref   
               [000074] D----+-N----              +--*  LCL_VAR   ref    V05 loc3         
               [000494] -ACXG+------              \--*  COMMA     ref   
               [000482] -ACXG+------                 +--*  ASG       ref   
               [000481] D----+-N----                 |  +--*  LCL_VAR   ref    V41 tmp30        
               [000070] --CXG+------                 |  \--*  CALL      ref    System.Environment.GetCommandLineArgs
               [000493] ---XG+------                 \--*  COMMA     ref   
               [000487] ---X-+------                    +--*  ARR_BOUNDS_CHECK_Rng void  
               [000072] -----+------                    |  +--*  CNS_INT   int    0
               [000486] ---X-+------                    |  \--*  ARR_LENGTH int   
               [000483] -----+------                    |     \--*  LCL_VAR   ref    V41 tmp30        
               [000073] a---G+------                    \--*  IND       ref   
               [000492] -----+------                       \--*  ADD       byref 
               [000484] -----+------                          +--*  LCL_VAR   ref    V41 tmp30        
               [000491] -----+------                          \--*  CNS_INT   long   16 Fseq[#FirstElem]

***** BB01
STMT00024 (IL 0x068...0x06E)
               [000079] -ACXG+------              *  ASG       ref   
               [000078] D----+-N----              +--*  LCL_VAR   ref    V06 loc4         
               [000077] --CXG+------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator
               [000076] -----+------ this in rcx     +--*  LCL_VAR   ref    V00 arg0         
               [000495] H----+------ arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

------------ BB02 [070..072) -> BB13 (cond), preds={BB01} succs={BB03,BB13}

***** BB02
STMT00119 (IL 0x0E9...  ???)
               [000578] --CXG-------              *  JTRUE     void  
     ( 27, 24) [000571] J-CXG--N----              \--*  EQ        int   
     ( 25, 22) [000572] --CXG-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext
     (  3,  2) [000575] ------------ this in rcx     |  +--*  LCL_VAR   ref    V06 loc4         
     (  2, 10) [000576] H----------- arg1 in r11     |  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11
     (  1,  1) [000577] ------------                 \--*  CNS_INT   int    0

------------ BB03 [072..08B) -> BB05 (cond), preds={BB02,BB10} succs={BB04,BB05}

***** BB03
STMT00026 (IL 0x072...0x079)
               [000088] -ACXG+------              *  ASG       ref   
               [000087] D----+-N----              +--*  LCL_VAR   ref    V07 loc5         
               [000086] --CXG+------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current
               [000085] -----+------ this in rcx     +--*  LCL_VAR   ref    V06 loc4         
               [000498] H----+------ arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

***** BB03
STMT00027 (IL 0x07B...0x089)
               [000092] -AC--+------              *  ASG       ref   
               [000091] D----+-N----              +--*  LCL_VAR   ref    V16 tmp5         
               [000090] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000089] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB03
STMT00092 (IL 0x080...  ???)
               [000347] -A-XG+------              *  ASG       ref   
               [000346] ---XG+-N----              +--*  IND       ref   
               [000503] -----+------              |  \--*  ADD       byref 
               [000096] -----+------              |     +--*  LCL_VAR   ref    V16 tmp5         
               [000502] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_fileName]
               [000097] -----+------              \--*  LCL_VAR   ref    V03 loc1         

***** BB03
STMT00031 (IL   ???...0x089)
               [000105] -A---+------              *  ASG       ref   
               [000104] D----+-N----              +--*  LCL_VAR   ref    V17 tmp6         
               [000095] -----+------              \--*  LCL_VAR   ref    V16 tmp5         

***** BB03
STMT00032 (IL   ???...  ???)
               [000108] -A---+------              *  ASG       ref   
               [000107] D----+-N----              +--*  LCL_VAR   ref    V18 tmp7         
               [000099] -----+------              \--*  LCL_VAR   ref    V16 tmp5         

***** BB03
STMT00030 (IL 0x087...  ???)
               [000103] -----+------              *  JTRUE     void  
               [000102] J----+-N----              \--*  NE        int   
               [000100] -----+------                 +--*  LCL_VAR   int    V04 loc2         
               [000101] -----+------                 \--*  CNS_INT   int    0

------------ BB04 [08B..08F) -> BB06 (always), preds={BB03} succs={BB06}

***** BB04
STMT00053 (IL   ???...0x08D)
               [000203] -A---+------              *  ASG       ref   
               [000202] D----+-N----              +--*  LCL_VAR   ref    V19 tmp8         
               [000110] -----+------              \--*  LCL_VAR   ref    V17 tmp6         

***** BB04
STMT00054 (IL   ???...  ???)
               [000206] -A---+------              *  ASG       ref   
               [000205] D----+-N----              +--*  LCL_VAR   ref    V20 tmp9         
               [000111] -----+------              \--*  LCL_VAR   ref    V18 tmp7         

***** BB04
STMT00055 (IL   ???...  ???)
               [000209] -A---+------              *  ASG       ref   
               [000208] D----+-N----              +--*  LCL_VAR   ref    V21 tmp10        
               [000201] -----+------              \--*  LCL_VAR   ref    V07 loc5         

------------ BB05 [08F..09C), preds={BB03} succs={BB06}

***** BB05
STMT00033 (IL   ???...0x097)
               [000119] -A---+------              *  ASG       ref   
               [000118] D----+-N----              +--*  LCL_VAR   ref    V19 tmp8         
               [000112] -----+------              \--*  LCL_VAR   ref    V17 tmp6         

***** BB05
STMT00034 (IL   ???...  ???)
               [000122] -A---+------              *  ASG       ref   
               [000121] D----+-N----              +--*  LCL_VAR   ref    V20 tmp9         
               [000113] -----+------              \--*  LCL_VAR   ref    V18 tmp7         

***** BB05
STMT00035 (IL   ???...  ???)
               [000125] -ACXG+------              *  ASG       ref   
               [000124] D----+-N----              +--*  LCL_VAR   ref    V21 tmp10        
               [000117] --CXG+------              \--*  CALL      ref    System.String.Concat
               [000505] #---G+------ arg1 in rdx     +--*  IND       ref   
               [000504] H----+------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E " "
               [000114] -----+------ arg0 in rcx     +--*  LCL_VAR   ref    V05 loc3         
               [000116] -----+------ arg2 in r8      \--*  LCL_VAR   ref    V07 loc5         

------------ BB06 [09C..0BB) -> BB09 (cond), preds={BB04,BB05} succs={BB07,BB09}

***** BB06
STMT00093 (IL   ???...  ???)
               [000350] -A-XG+------              *  ASG       ref   
               [000349] ---XG+-N----              +--*  IND       ref   
               [000510] -----+------              |  \--*  ADD       byref 
               [000128] -----+------              |     +--*  LCL_VAR   ref    V20 tmp9         
               [000509] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[_arguments]
               [000129] -----+------              \--*  LCL_VAR   ref    V21 tmp10        

***** BB06
STMT00094 (IL 0x0A1...  ???)
               [000355] -A-XG+------              *  ASG       bool  
               [000354] ---XG+-N----              +--*  IND       bool  
               [000512] -----+------              |  \--*  ADD       byref 
               [000131] -----+------              |     +--*  LCL_VAR   ref    V19 tmp8         
               [000511] -----+------              |     \--*  CNS_INT   long   130 field offset Fseq[<UseShellExecute>k__BackingField]
               [000353] -----+------              \--*  CNS_INT   int    0

***** BB06
STMT00038 (IL 0x0A8...  ???)
               [000136] -A---+------              *  ASG       ref   
               [000135] D----+-N----              +--*  LCL_VAR   ref    V08 loc6         
               [000127] -----+------              \--*  LCL_VAR   ref    V19 tmp8         

***** BB06
STMT00040 (IL 0x0AA...0x0B9)
               [000145] -A-XG+------              *  ASG       ref   
               [000144] D----+-N----              +--*  LCL_VAR   ref    V23 tmp12        
               [000138] ---XG+------              \--*  IND       ref   
               [000514] -----+------                 \--*  ADD       byref 
               [000137] -----+------                    +--*  LCL_VAR   ref    V02 loc0         
               [000513] -----+------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers]

***** BB06
STMT00039 (IL 0x0AA...  ???)
               [000143] -A-XG+------              *  ASG       ref   
               [000142] D----+-N----              +--*  LCL_VAR   ref    V22 tmp11        
               [000141] ---XG+------              \--*  IND       ref   
               [000516] -----+------                 \--*  ADD       byref 
               [000140] -----+------                    +--*  LCL_VAR   ref    V02 loc0         
               [000515] -----+------                    \--*  CNS_INT   long   48 field offset Fseq[<>9__2]

***** BB06
STMT00042 (IL   ???...0x0B9)
               [000153] -A---+------              *  ASG       ref   
               [000152] D----+-N----              +--*  LCL_VAR   ref    V24 tmp13        
               [000146] -----+------              \--*  LCL_VAR   ref    V23 tmp12        

***** BB06
STMT00043 (IL   ???...  ???)
               [000156] -A---+------              *  ASG       ref   
               [000155] D----+-N----              +--*  LCL_VAR   ref    V25 tmp14        
               [000139] -----+------              \--*  LCL_VAR   ref    V19 tmp8         

***** BB06
STMT00044 (IL   ???...  ???)
               [000159] -A---+------              *  ASG       ref   
               [000158] D----+-N----              +--*  LCL_VAR   ref    V26 tmp15        
               [000147] -----+------              \--*  LCL_VAR   ref    V22 tmp11        

***** BB06
STMT00041 (IL   ???...  ???)
               [000151] -----+------              *  JTRUE     void  
               [000150] J----+-N----              \--*  NE        int   
               [000148] -----+------                 +--*  LCL_VAR   ref    V22 tmp11        
               [000149] -----+------                 \--*  CNS_INT   ref    null

------------ BB07 [000..0D3) -> BB12 (cond), preds={BB06} succs={BB08,BB12}

***** BB07
STMT00048 (IL   ???...0x0CA)
               [000184] -AC--+------              *  ASG       ref   
               [000183] D----+-N----              +--*  LCL_VAR   ref    V28 tmp17        
               [000182] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000181] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB07
STMT00095 (IL   ???...  ???)
               [000359] -----+------              *  JTRUE     void  
               [000358] J----+-N----              \--*  EQ        int   
               [000179] -----+------                 +--*  LCL_VAR   ref    V02 loc0         
               [000357] -----+------                 \--*  CNS_INT   ref    null

------------ BB08 [000..000), preds={BB07} succs={BB09}

***** BB08
STMT00096 (IL   ???...  ???)
               [000362] -A-XG+------              *  ASG       ref   
               [000361] ---XG+-N----              +--*  IND       ref   
               [000519] -----+------              |  \--*  ADD       byref 
               [000185] -----+------              |     +--*  LCL_VAR   ref    V28 tmp17        
               [000518] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
               [000360] -----+------              \--*  LCL_VAR   ref    V02 loc0         

***** BB08
STMT00097 (IL   ???...  ???)
               [000366] -A-XG+------              *  ASG       long  
               [000365] ---XG+-N----              +--*  IND       long  
               [000521] -----+------              |  \--*  ADD       byref 
               [000363] -----+------              |     +--*  LCL_VAR   ref    V28 tmp17        
               [000520] -----+------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
               [000180] H----+------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

***** BB08
STMT00050 (IL 0x0C9...  ???)
               [000190] -A---+------              *  ASG       ref   
               [000189] D----+-N----              +--*  LCL_VAR   ref    V09 loc7         
               [000188] -----+------              \--*  LCL_VAR   ref    V28 tmp17        

***** BB08
STMT00051 (IL   ???...0x0CC)
               [000192] -A-XG+------              *  ASG       ref   
               [000191] ---XG+-N----              +--*  IND       ref   
               [000523] -----+------              |  \--*  ADD       byref 
               [000178] -----+------              |     +--*  LCL_VAR   ref    V02 loc0         
               [000522] -----+------              |     \--*  CNS_INT   long   48 field offset Fseq[<>9__2]
               [000187] -----+------              \--*  LCL_VAR   ref    V28 tmp17        

***** BB08
STMT00052 (IL   ???...0x0D1)
               [000199] -A---+------              *  ASG       ref   
               [000198] D----+-N----              +--*  LCL_VAR   ref    V26 tmp15        
               [000193] -----+------              \--*  LCL_VAR   ref    V28 tmp17        

------------ BB09 [000..0E9) -> BB12 (cond), preds={BB06,BB08} succs={BB10,BB12}

***** BB09
STMT00045 (IL   ???...0x0E4)
               [000172] -AC--+------              *  ASG       ref   
               [000171] D----+-N----              +--*  LCL_VAR   ref    V27 tmp16        
               [000170] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000169] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB09
STMT00099 (IL   ???...  ???)
               [000371] -----+------              *  JTRUE     void  
               [000370] J----+-N----              \--*  EQ        int   
               [000167] -----+------                 +--*  LCL_VAR   ref    V02 loc0         
               [000369] -----+------                 \--*  CNS_INT   ref    null

------------ BB10 [000..0F2) -> BB03 (cond), preds={BB09} succs={BB11,BB03}

***** BB10
STMT00100 (IL   ???...  ???)
               [000374] -A-XG+------              *  ASG       ref   
               [000373] ---XG+-N----              +--*  IND       ref   
               [000526] -----+------              |  \--*  ADD       byref 
               [000173] -----+------              |     +--*  LCL_VAR   ref    V27 tmp16        
               [000525] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
               [000372] -----+------              \--*  LCL_VAR   ref    V02 loc0         

***** BB10
STMT00101 (IL   ???...  ???)
               [000378] -A-XG+------              *  ASG       long  
               [000377] ---XG+-N----              +--*  IND       long  
               [000528] -----+------              |  \--*  ADD       byref 
               [000375] -----+------              |     +--*  LCL_VAR   ref    V27 tmp16        
               [000527] -----+------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
               [000168] H----+------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

***** BB10
STMT00047 (IL 0x0DF...  ???)
               [000177] --CXG+------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue
               [000533] -ACXG-----L- arg1 SETUP   +--*  ASG       ref   
               [000532] D------N----              |  +--*  LCL_VAR   ref    V42 tmp31        
               [000176] --CXG+------              |  \--*  CALL      ref    SolutionAnalyzer.IPC.CreateSession
               [000165] -----+------ arg0 in rcx  |     +--*  LCL_VAR   ref    V25 tmp14        
               [000166] -----+------ arg1 in rdx  |     +--*  LCL_VAR   ref    V26 tmp15        
               [000175] -----+------ arg2 in r8   |     \--*  LCL_VAR   ref    V27 tmp16        
               [000534] ------------ arg1 in rdx  +--*  LCL_VAR   ref    V42 tmp31        
               [000164] -----+------ this in rcx  \--*  LCL_VAR   ref    V24 tmp13        

***** BB10
STMT00025 (IL 0x0E9...0x0F0)
               [000084] --CXG+------              *  JTRUE     void  
     ( 27, 24) [000083] J-CXG--N----              \--*  NE        int   
     ( 25, 22) [000081] --CXG-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext
     (  3,  2) [000080] ------------ this in rcx     |  +--*  LCL_VAR   ref    V06 loc4         
     (  2, 10) [000536] H----------- arg1 in r11     |  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11
     (  1,  1) [000082] ------------                 \--*  CNS_INT   int    0

------------ BB11 [???..???) -> BB13 (always), preds={BB10} succs={BB13}

------------ BB12 [000..000) (throw), preds={BB07,BB09} succs={}

***** BB12
STMT00102 (IL   ???...  ???)
               [000379] --CXG+------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

------------ BB13 [0F4..0F8) -> BB15 (cond), preds={BB02,BB11} succs={BB14,BB15}

***** BB13
STMT00116 (IL   ???...  ???)
               [000431] -----+------              *  JTRUE     void  
               [000432] J----+-N----              \--*  EQ        int   
               [000433] -----+------                 +--*  LCL_VAR   ref    V06 loc4         
               [000434] -----+------                 \--*  CNS_INT   ref    null

------------ BB14 [0F8..100), preds={BB13} succs={BB15}

***** BB14
STMT00117 (IL   ???...  ???)
               [000435] --CXG+------              *  CALLV stub void   System.IDisposable.Dispose
               [000436] -----+------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         
               [000539] H----+------ arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

------------ BB15 [100..127) -> BB17 (always), preds={BB13,BB14} succs={BB17}

***** BB15
STMT00103 (IL 0x100...  ???)
               [000384] -A-XG+------              *  ASG       ref   
               [000383] D----+-N----              +--*  LCL_VAR   ref    V35 tmp24        
               [000213] ---XG+------              \--*  IND       ref   
               [000546] -----+------                 \--*  ADD       byref 
               [000212] -----+------                    +--*  LCL_VAR   ref    V02 loc0         
               [000545] -----+------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers]

***** BB15
STMT00057 (IL   ???...  ???)
               [000217] -A-XG+------              *  ASG       int   
               [000216] ---XG+-N----              +--*  IND       int   
               [000548] -----+------              |  \--*  ADD       byref 
               [000211] -----+------              |     +--*  LCL_VAR   ref    V02 loc0         
               [000547] -----+------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]
               [000382] ---XG+------              \--*  IND       int   
               [000550] -----+------                 \--*  ADD       byref 
               [000381] -----+------                    +--*  LCL_VAR   ref    V35 tmp24        
               [000549] -----+------                    \--*  CNS_INT   long   24 field offset Fseq[_size]

***** BB15
STMT00058 (IL 0x111...0x11D)
               [000224] -AC--+------              *  ASG       ref   
               [000223] D----+-N----              +--*  LCL_VAR   ref    V29 tmp18        
               [000222] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000221] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB15
STMT00109 (IL   ???...  ???)
               [000402] -A-XG+------              *  ASG       int   
               [000401] D----+-N----              +--*  LCL_VAR   int    V37 tmp26        
               [000220] ---XG+------              \--*  IND       int   
               [000553] -----+------                 \--*  ADD       byref 
               [000219] -----+------                    +--*  LCL_VAR   ref    V02 loc0         
               [000552] -----+------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]

***** BB15
STMT00104 (IL   ???...  ???)
               [000389] -AC--+------              *  ASG       ref   
               [000388] D----+-N----              +--*  LCL_VAR   ref    V36 tmp25        
               [000387] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000386] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB15
STMT00110 (IL   ???...  ???)
               [000406] --CXG+------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor
               [000390] -----+------ this in rcx  +--*  LCL_VAR   ref    V36 tmp25        
               [000404] -----+------ arg1 in rdx  +--*  CNS_INT   int    0
               [000405] -----+------ arg2 in r8   \--*  CNS_INT   ref    null

***** BB15
STMT00106 (IL   ???...  ???)
               [000394] -A-XG+------              *  ASG       ref   
               [000393] ---XG+-N----              +--*  IND       ref   
               [000559] -----+------              |  \--*  ADD       byref 
               [000225] -----+------              |     +--*  LCL_VAR   ref    V29 tmp18        
               [000558] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_workItems]
               [000392] -----+------              \--*  LCL_VAR   ref    V36 tmp25        

***** BB15
STMT00108 (IL   ???...  ???)
               [000400] -A-XG+------              *  ASG       int   
               [000399] ---XG+-N----              +--*  IND       int   
               [000561] -----+------              |  \--*  ADD       byref 
               [000397] -----+------              |     +--*  LCL_VAR   ref    V29 tmp18        
               [000560] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[_workItemsToComplete]
               [000398] -----+------              \--*  LCL_VAR   int    V37 tmp26        

***** BB15
STMT00060 (IL 0x11D...  ???)
               [000229] -A-XG+------              *  ASG       ref   
               [000228] ---XG+-N----              +--*  IND       ref   
               [000563] -----+------              |  \--*  ADD       byref 
               [000218] -----+------              |     +--*  LCL_VAR   ref    V02 loc0         
               [000562] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter]
               [000227] -----+------              \--*  LCL_VAR   ref    V29 tmp18        

***** BB15
STMT00061 (IL 0x122...0x123)
               [000232] -A---+------              *  ASG       int   
               [000231] D----+-N----              +--*  LCL_VAR   int    V10 loc8         
               [000230] -----+------              \--*  CNS_INT   int    0

------------ BB16 [127..133), preds={BB20} succs={BB17}

***** BB16
STMT00065 (IL 0x127...0x131)
               [000243] --CXG+------              *  CALL nullcheck void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0
               [000242] -----+------ this in rcx  \--*  LCL_VAR   ref    V02 loc0         

***** BB16
STMT00066 (IL 0x12D...  ???)
               [000248] -A---+------              *  ASG       int   
               [000247] D----+-N----              +--*  LCL_VAR   int    V10 loc8         
               [000246] -----+------              \--*  ADD       int   
               [000244] -----+------                 +--*  LCL_VAR   int    V10 loc8         
               [000245] -----+------                 \--*  CNS_INT   int    1

------------ BB17 [000..147) -> BB19 (cond), preds={BB15,BB16} succs={BB18,BB19}

***** BB17
STMT00114 (IL   ???...  ???)
               [000424] -A-XG+------              *  ASG       int   
               [000423] D----+-N----              +--*  LCL_VAR   int    V39 tmp28        
               [000237] ---XG+------              \--*  IND       int   
               [000566] -----+------                 \--*  ADD       byref 
               [000236] -----+------                    +--*  LCL_VAR   ref    V02 loc0         
               [000565] -----+------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]

***** BB17
STMT00111 (IL   ???...  ???)
               [000414] -----+------              *  JTRUE     void  
               [000413] J----+-N----              \--*  LE        int   
               [000411] -----+------                 +--*  CNS_INT   int    8
               [000412] -----+------                 \--*  LCL_VAR   int    V39 tmp28        

------------ BB18 [000..000) -> BB20 (always), preds={BB17} succs={BB20}

***** BB18
STMT00113 (IL   ???...  ???)
               [000421] -A---+------              *  ASG       int   
               [000420] D----+-N----              +--*  LCL_VAR   int    V38 tmp27        
               [000419] -----+------              \--*  LCL_VAR   int    V39 tmp28        

------------ BB19 [000..000), preds={BB17} succs={BB20}

***** BB19
STMT00112 (IL   ???...  ???)
               [000417] -A---+------              *  ASG       int   
               [000416] D----+-N----              +--*  LCL_VAR   int    V38 tmp27        
               [000415] -----+------              \--*  CNS_INT   int    8

------------ BB20 [???..???) -> BB16 (cond), preds={BB18,BB19} succs={BB21,BB16}

***** BB20
STMT00064 (IL   ???...  ???)
               [000241] -----+------              *  JTRUE     void  
               [000240] J----+-N----              \--*  LT        int   
               [000233] -----+------                 +--*  LCL_VAR   int    V10 loc8         
               [000422] -----+------                 \--*  LCL_VAR   int    V38 tmp27        

------------ BB21 [147..153) (return), preds={BB20} succs={}

***** BB21
STMT00115 (IL 0x147...  ???)
               [000429] -A-XG+------              *  ASG       ref   
               [000428] D----+-N----              +--*  LCL_VAR   ref    V40 tmp29        
               [000250] ---XG+------              \--*  IND       ref   
               [000568] -----+------                 \--*  ADD       byref 
               [000249] -----+------                    +--*  LCL_VAR   ref    V02 loc0         
               [000567] -----+------                    \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun]

***** BB21
STMT00068 (IL   ???...  ???)
               [000253] ---XG+------              *  RETURN    ref   
               [000427] ---XG+------              \--*  IND       ref   
               [000570] -----+------                 \--*  ADD       byref 
               [000426] -----+------                    +--*  LCL_VAR   ref    V40 tmp29        
               [000569] -----+------                    \--*  CNS_INT   long   8 field offset Fseq[_task]

------------ BB22 [0F4..0F8) -> BB24 (cond), preds={} succs={BB23,BB24}

***** BB22
STMT00069 (IL 0x0F4...0x0F6)
               [000257] -----+------              *  JTRUE     void  
               [000256] J----+-N----              \--*  EQ        int   
               [000254] -----+------                 +--*  LCL_VAR   ref    V06 loc4         
               [000255] -----+------                 \--*  CNS_INT   ref    null

------------ BB23 [0F8..0FF), preds={BB22} succs={BB24}

***** BB23
STMT00071 (IL 0x0F8...0x0FA)
               [000260] --CXG+------              *  CALLV stub void   System.IDisposable.Dispose
               [000259] -----+------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         
               [000542] H----+------ arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

------------ BB24 [0FF..100) (finret), preds={BB22,BB23} succs={}

***** BB24
STMT00070 (IL 0x0FF...0x0FF)
               [000258] -----+------              *  RETFILT   void  

-------------------------------------------------------------------------------------------------------------------

*************** Finishing PHASE Clone loops

*************** Starting PHASE Unroll loops
*************** In optUnrollLoops()
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Unroll loops

*************** Starting PHASE Mark local vars

*************** In lvaMarkLocalVars()
lvaGrabTemp returning 43 (V43 tmp32) (a long lifetime temp) called for PSPSym.

Local V43 should not be enregistered because: it is address exposed

*** lvaComputeRefCounts ***

*** lvaComputeRefCounts -- explicit counts ***

*** marking local variables in block BB01 (weight=1   )
STMT00000 (IL 0x000...0x005)
               [000003] -AC--+------              *  ASG       ref   
               [000002] D----+-N----              +--*  LCL_VAR   ref    V12 tmp1         
               [000001] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000000] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method
New refCnts for V12: refCnt =  1, refCntWtd = 2   
STMT00002 (IL 0x005...  ???)
               [000008] -A---+------              *  ASG       ref   
               [000007] D----+-N----              +--*  LCL_VAR   ref    V02 loc0         
               [000006] -----+------              \--*  LCL_VAR   ref    V12 tmp1         
New refCnts for V02: refCnt =  1, refCntWtd = 1   
New refCnts for V12: refCnt =  2, refCntWtd = 4   
STMT00003 (IL 0x006...0x008)
               [000012] -A-XG+------              *  ASG       ref   
               [000011] ---XG+-N----              +--*  IND       ref   
               [000440] -----+------              |  \--*  ADD       byref 
               [000009] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000439] -----+------              |     \--*  CNS_INT   long   32 field offset Fseq[outputFile]
               [000010] -----+------              \--*  LCL_VAR   ref    V01 arg1         
New refCnts for V12: refCnt =  3, refCntWtd = 6   
New refCnts for V01: refCnt =  1, refCntWtd = 1   
STMT00004 (IL 0x00D...0x00F)
               [000016] -A-XG+------              *  ASG       int   
               [000015] ---XG+-N----              +--*  IND       int   
               [000442] -----+------              |  \--*  ADD       byref 
               [000013] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000441] -----+------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]
               [000014] -----+------              \--*  CNS_INT   int    0
New refCnts for V12: refCnt =  4, refCntWtd = 8   
STMT00005 (IL 0x014...0x016)
               [000020] -A-XG+------              *  ASG       int   
               [000019] ---XG+-N----              +--*  IND       int   
               [000444] -----+------              |  \--*  ADD       byref 
               [000017] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000443] -----+------              |     \--*  CNS_INT   long   56 field offset Fseq[analyzersFinishedCount]
               [000018] -----+------              \--*  CNS_INT   int    0
New refCnts for V12: refCnt =  5, refCntWtd = 10   
STMT00006 (IL 0x01B...0x021)
               [000025] -AC--+------              *  ASG       ref   
               [000024] D----+-N----              +--*  LCL_VAR   ref    V13 tmp2         
               [000023] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000022] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token
New refCnts for V13: refCnt =  1, refCntWtd = 2   
STMT00074 (IL   ???...  ???)
               [000269] -AC--+------              *  ASG       ref   
               [000268] D----+-N----              +--*  LCL_VAR   ref    V30 tmp19        
               [000267] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000266] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token
New refCnts for V30: refCnt =  1, refCntWtd = 2   
STMT00079 (IL   ???...  ???)
               [000283] -A-XG+------              *  ASG       int   
               [000282] V--XG+-N----              +--*  IND       int   
               [000448] -----+------              |  \--*  ADD       byref 
               [000280] -----+------              |     +--*  LCL_VAR   ref    V30 tmp19        
               [000447] -----+------              |     \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags]
               [000281] -----+------              \--*  CNS_INT   int    0x2000400
New refCnts for V30: refCnt =  2, refCntWtd = 4   
STMT00076 (IL   ???...  ???)
               [000274] -A-XG+------              *  ASG       ref   
               [000273] ---XG+-N----              +--*  IND       ref   
               [000450] -----+------              |  \--*  ADD       byref 
               [000265] -----+------              |     +--*  LCL_VAR   ref    V13 tmp2         
               [000449] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_task]
               [000272] -----+------              \--*  LCL_VAR   ref    V30 tmp19        
New refCnts for V13: refCnt =  2, refCntWtd = 4   
New refCnts for V30: refCnt =  3, refCntWtd = 6   
STMT00008 (IL 0x021...  ???)
               [000030] -A-XG+------              *  ASG       ref   
               [000029] ---XG+-N----              +--*  IND       ref   
               [000452] -----+------              |  \--*  ADD       byref 
               [000021] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000451] -----+------              |     \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun]
               [000028] -----+------              \--*  LCL_VAR   ref    V13 tmp2         
New refCnts for V12: refCnt =  6, refCntWtd = 12   
New refCnts for V13: refCnt =  3, refCntWtd = 6   
STMT00009 (IL 0x026...0x02C)
               [000035] -AC--+------              *  ASG       ref   
               [000034] D----+-N----              +--*  LCL_VAR   ref    V14 tmp3         
               [000033] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000032] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token
New refCnts for V14: refCnt =  1, refCntWtd = 2   
STMT00082 (IL   ???...  ???)
               [000292] -ACXG+------              *  ASG       ref   
               [000291] ---XG+-N----              +--*  IND       ref   
               [000455] -----+------              |  \--*  ADD       byref 
               [000287] -----+------              |     +--*  LCL_VAR   ref    V14 tmp3         
               [000454] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_array]
               [000300] --CXG+------              \--*  COMMA     ref   
               [000299] H-CXG+------                 +--*  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS
               [000297] -----+------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e0b0028
               [000298] -----+------ arg1 in rdx     |  \--*  CNS_INT   int    14
               [000295] n---G+------                 \--*  IND       ref   
               [000458] I----+------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[Value]
New refCnts for V14: refCnt =  2, refCntWtd = 4   
STMT00011 (IL 0x02C...  ???)
               [000040] -A-XG+------              *  ASG       ref   
               [000039] ---XG+-N----              +--*  IND       ref   
               [000460] -----+------              |  \--*  ADD       byref 
               [000031] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000459] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers]
               [000038] -----+------              \--*  LCL_VAR   ref    V14 tmp3         
New refCnts for V12: refCnt =  7, refCntWtd = 14   
New refCnts for V14: refCnt =  3, refCntWtd = 6   
STMT00012 (IL 0x031...0x033)
               [000044] -A-XG+------              *  ASG       ref   
               [000043] ---XG+-N----              +--*  IND       ref   
               [000462] -----+------              |  \--*  ADD       byref 
               [000041] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000461] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter]
               [000042] -----+------              \--*  CNS_INT   ref    null
New refCnts for V12: refCnt =  8, refCntWtd = 16   
STMT00013 (IL 0x038...0x03E)
               [000049] -AC--+------              *  ASG       ref   
               [000048] D----+-N----              +--*  LCL_VAR   ref    V15 tmp4         
               [000047] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000046] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token
New refCnts for V15: refCnt =  1, refCntWtd = 2   
STMT00083 (IL   ???...  ???)
               [000303] --CXG+------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor
               [000050] -----+------ this in rcx  +--*  LCL_VAR   ref    V15 tmp4         
               [000302] -----+------ arg1 in rdx  \--*  CNS_INT   ref    null
New refCnts for V15: refCnt =  2, refCntWtd = 4   
STMT00015 (IL 0x03E...  ???)
               [000054] -A-XG+------              *  ASG       ref   
               [000053] ---XG+-N----              +--*  IND       ref   
               [000467] -----+------              |  \--*  ADD       byref 
               [000045] -----+------              |     +--*  LCL_VAR   ref    V12 tmp1         
               [000466] -----+------              |     \--*  CNS_INT   long   40 field offset Fseq[output]
               [000052] -----+------              \--*  LCL_VAR   ref    V15 tmp4         
New refCnts for V12: refCnt =  9, refCntWtd = 18   
New refCnts for V15: refCnt =  3, refCntWtd = 6   
STMT00086 (IL   ???...  ???)
               [000316] -ACXG+------              *  ASG       ref   
               [000315] D----+-N----              +--*  LCL_VAR   ref    V31 tmp20        
               [000055] --CXG+------              \--*  CALL      ref    System.Diagnostics.Process.GetCurrentProcess
New refCnts for V31: refCnt =  1, refCntWtd = 2   
STMT00087 (IL   ???...  ???)
               [000314] ---X-+------              *  NULLCHECK byte  
               [000313] -----+------              \--*  LCL_VAR   ref    V31 tmp20        
New refCnts for V31: refCnt =  2, refCntWtd = 4   
STMT00084 (IL   ???...  ???)
               [000308] --CXG+------              *  CALL      void   System.Diagnostics.Process.EnsureState
               [000306] -----+------ this in rcx  +--*  LCL_VAR   ref    V31 tmp20        
               [000307] -----+------ arg1 in rdx  \--*  CNS_INT   int    3
New refCnts for V31: refCnt =  3, refCntWtd = 6   
STMT00088 (IL   ???...  ???)
               [000322] -ACXG+------              *  ASG       ref   
               [000321] D----+-N----              +--*  LCL_VAR   ref    V32 tmp21        
               [000311] --CXG+------              \--*  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule
               [000310] ---XG+------ arg0 in rcx     \--*  IND       int   
               [000471] -----+------                    \--*  ADD       byref 
               [000309] -----+------                       +--*  LCL_VAR   ref    V31 tmp20        
               [000470] -----+------                       \--*  CNS_INT   long   200 field offset Fseq[_processId]
New refCnts for V32: refCnt =  1, refCntWtd = 2   
New refCnts for V31: refCnt =  4, refCntWtd = 8   
STMT00019 (IL   ???...  ???)
               [000062] -A-XG+------              *  ASG       ref   
               [000061] D----+-N----              +--*  LCL_VAR   ref    V03 loc1         
               [000320] ---XG+------              \--*  IND       ref   
               [000474] -----+------                 \--*  ADD       byref 
               [000319] -----+------                    +--*  LCL_VAR   ref    V32 tmp21        
               [000473] -----+------                    \--*  CNS_INT   long   40 field offset Fseq[<FileName>k__BackingField]
New refCnts for V03: refCnt =  1, refCntWtd = 1   
New refCnts for V32: refCnt =  2, refCntWtd = 4   
STMT00090 (IL 0x053...  ???)
               [000333] ---X-+------              *  NULLCHECK byte  
               [000332] -----+------              \--*  LCL_VAR   ref    V03 loc1         
New refCnts for V03: refCnt =  2, refCntWtd = 2   
STMT00021 (IL   ???...  ???)
               [000069] -ACXG+------              *  ASG       int   
               [000068] D----+-N----              +--*  LCL_VAR   int    V04 loc2         
               [000329] --CXG+------              \--*  GE        int   
               [000340] --CXG+------                 +--*  CALL      int    System.String.IndexOf
               [000339] -----+------ arg4 out+20     |  +--*  CNS_INT   int    5
     (  5,  4) [000338] ---X-------- arg3 in r9      |  +--*  ARR_LENGTH int   
     (  3,  2) [000337] ------------                 |  |  \--*  LCL_VAR   ref    V03 loc1         
     (  4, 12) [000476] #---G------- arg1 in rdx     |  +--*  IND       ref   
     (  2, 10) [000475] H-----------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E "dotnet.exe"
               [000063] -----+------ this in rcx     |  +--*  LCL_VAR   ref    V03 loc1         
               [000336] -----+------ arg2 in r8      |  \--*  CNS_INT   int    0
               [000328] -----+------                 \--*  CNS_INT   int    0
New refCnts for V04: refCnt =  1, refCntWtd = 1   
New refCnts for V03: refCnt =  3, refCntWtd = 3   
New refCnts for V03: refCnt =  4, refCntWtd = 4   
STMT00023 (IL   ???...  ???)
               [000075] -ACXG+------              *  ASG       ref   
               [000074] D----+-N----              +--*  LCL_VAR   ref    V05 loc3         
               [000494] -ACXG+------              \--*  COMMA     ref   
               [000482] -ACXG+------                 +--*  ASG       ref   
               [000481] D----+-N----                 |  +--*  LCL_VAR   ref    V41 tmp30        
               [000070] --CXG+------                 |  \--*  CALL      ref    System.Environment.GetCommandLineArgs
               [000493] ---XG+------                 \--*  COMMA     ref   
               [000487] ---X-+------                    +--*  ARR_BOUNDS_CHECK_Rng void  
               [000072] -----+------                    |  +--*  CNS_INT   int    0
               [000486] ---X-+------                    |  \--*  ARR_LENGTH int   
               [000483] -----+------                    |     \--*  LCL_VAR   ref    V41 tmp30        
               [000073] a---G+------                    \--*  IND       ref   
               [000492] -----+------                       \--*  ADD       byref 
               [000484] -----+------                          +--*  LCL_VAR   ref    V41 tmp30        
               [000491] -----+------                          \--*  CNS_INT   long   16 Fseq[#FirstElem]
New refCnts for V05: refCnt =  1, refCntWtd = 1   
New refCnts for V41: refCnt =  1, refCntWtd = 2   
New refCnts for V41: refCnt =  2, refCntWtd = 4   
New refCnts for V41: refCnt =  3, refCntWtd = 6   
STMT00024 (IL 0x068...0x06E)
               [000079] -ACXG+------              *  ASG       ref   
               [000078] D----+-N----              +--*  LCL_VAR   ref    V06 loc4         
               [000077] --CXG+------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator
               [000076] -----+------ this in rcx     +--*  LCL_VAR   ref    V00 arg0         
               [000495] H----+------ arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11
New refCnts for V06: refCnt =  1, refCntWtd = 1   
New refCnts for V00: refCnt =  1, refCntWtd = 1   

*** marking local variables in block BB02 (weight=1   )
STMT00119 (IL 0x0E9...  ???)
               [000578] --CXG-------              *  JTRUE     void  
     ( 27, 24) [000571] J-CXG--N----              \--*  EQ        int   
     ( 25, 22) [000572] --CXG-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext
     (  3,  2) [000575] ------------ this in rcx     |  +--*  LCL_VAR   ref    V06 loc4         
     (  2, 10) [000576] H----------- arg1 in r11     |  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11
     (  1,  1) [000577] ------------                 \--*  CNS_INT   int    0
New refCnts for V06: refCnt =  2, refCntWtd = 2   

*** marking local variables in block BB03 (weight=4   )
STMT00026 (IL 0x072...0x079)
               [000088] -ACXG+------              *  ASG       ref   
               [000087] D----+-N----              +--*  LCL_VAR   ref    V07 loc5         
               [000086] --CXG+------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current
               [000085] -----+------ this in rcx     +--*  LCL_VAR   ref    V06 loc4         
               [000498] H----+------ arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11
New refCnts for V07: refCnt =  1, refCntWtd = 4   
New refCnts for V06: refCnt =  3, refCntWtd = 6   
STMT00027 (IL 0x07B...0x089)
               [000092] -AC--+------              *  ASG       ref   
               [000091] D----+-N----              +--*  LCL_VAR   ref    V16 tmp5         
               [000090] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000089] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token
New refCnts for V16: refCnt =  1, refCntWtd = 8   
STMT00092 (IL 0x080...  ???)
               [000347] -A-XG+------              *  ASG       ref   
               [000346] ---XG+-N----              +--*  IND       ref   
               [000503] -----+------              |  \--*  ADD       byref 
               [000096] -----+------              |     +--*  LCL_VAR   ref    V16 tmp5         
               [000502] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_fileName]
               [000097] -----+------              \--*  LCL_VAR   ref    V03 loc1         
New refCnts for V16: refCnt =  2, refCntWtd = 16   
New refCnts for V03: refCnt =  5, refCntWtd = 8   
STMT00031 (IL   ???...0x089)
               [000105] -A---+------              *  ASG       ref   
               [000104] D----+-N----              +--*  LCL_VAR   ref    V17 tmp6         
               [000095] -----+------              \--*  LCL_VAR   ref    V16 tmp5         
New refCnts for V17: refCnt =  1, refCntWtd = 4   
New refCnts for V16: refCnt =  3, refCntWtd = 24   
STMT00032 (IL   ???...  ???)
               [000108] -A---+------              *  ASG       ref   
               [000107] D----+-N----              +--*  LCL_VAR   ref    V18 tmp7         
               [000099] -----+------              \--*  LCL_VAR   ref    V16 tmp5         
New refCnts for V18: refCnt =  1, refCntWtd = 4   
New refCnts for V16: refCnt =  4, refCntWtd = 32   
STMT00030 (IL 0x087...  ???)
               [000103] -----+------              *  JTRUE     void  
               [000102] J----+-N----              \--*  NE        int   
               [000100] -----+------                 +--*  LCL_VAR   int    V04 loc2         
               [000101] -----+------                 \--*  CNS_INT   int    0
New refCnts for V04: refCnt =  2, refCntWtd = 5   

*** marking local variables in block BB04 (weight=2   )
STMT00053 (IL   ???...0x08D)
               [000203] -A---+------              *  ASG       ref   
               [000202] D----+-N----              +--*  LCL_VAR   ref    V19 tmp8         
               [000110] -----+------              \--*  LCL_VAR   ref    V17 tmp6         
New refCnts for V19: refCnt =  1, refCntWtd = 2   
New refCnts for V17: refCnt =  2, refCntWtd = 6   
STMT00054 (IL   ???...  ???)
               [000206] -A---+------              *  ASG       ref   
               [000205] D----+-N----              +--*  LCL_VAR   ref    V20 tmp9         
               [000111] -----+------              \--*  LCL_VAR   ref    V18 tmp7         
New refCnts for V20: refCnt =  1, refCntWtd = 2   
New refCnts for V18: refCnt =  2, refCntWtd = 6   
STMT00055 (IL   ???...  ???)
               [000209] -A---+------              *  ASG       ref   
               [000208] D----+-N----              +--*  LCL_VAR   ref    V21 tmp10        
               [000201] -----+------              \--*  LCL_VAR   ref    V07 loc5         
New refCnts for V21: refCnt =  1, refCntWtd = 2   
New refCnts for V07: refCnt =  2, refCntWtd = 6   

*** marking local variables in block BB05 (weight=2   )
STMT00033 (IL   ???...0x097)
               [000119] -A---+------              *  ASG       ref   
               [000118] D----+-N----              +--*  LCL_VAR   ref    V19 tmp8         
               [000112] -----+------              \--*  LCL_VAR   ref    V17 tmp6         
New refCnts for V19: refCnt =  2, refCntWtd = 4   
New refCnts for V17: refCnt =  3, refCntWtd = 8   
STMT00034 (IL   ???...  ???)
               [000122] -A---+------              *  ASG       ref   
               [000121] D----+-N----              +--*  LCL_VAR   ref    V20 tmp9         
               [000113] -----+------              \--*  LCL_VAR   ref    V18 tmp7         
New refCnts for V20: refCnt =  2, refCntWtd = 4   
New refCnts for V18: refCnt =  3, refCntWtd = 8   
STMT00035 (IL   ???...  ???)
               [000125] -ACXG+------              *  ASG       ref   
               [000124] D----+-N----              +--*  LCL_VAR   ref    V21 tmp10        
               [000117] --CXG+------              \--*  CALL      ref    System.String.Concat
               [000505] #---G+------ arg1 in rdx     +--*  IND       ref   
               [000504] H----+------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E " "
               [000114] -----+------ arg0 in rcx     +--*  LCL_VAR   ref    V05 loc3         
               [000116] -----+------ arg2 in r8      \--*  LCL_VAR   ref    V07 loc5         
New refCnts for V21: refCnt =  2, refCntWtd = 4   
New refCnts for V05: refCnt =  2, refCntWtd = 3   
New refCnts for V07: refCnt =  3, refCntWtd = 8   

*** marking local variables in block BB06 (weight=4   )
STMT00093 (IL   ???...  ???)
               [000350] -A-XG+------              *  ASG       ref   
               [000349] ---XG+-N----              +--*  IND       ref   
               [000510] -----+------              |  \--*  ADD       byref 
               [000128] -----+------              |     +--*  LCL_VAR   ref    V20 tmp9         
               [000509] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[_arguments]
               [000129] -----+------              \--*  LCL_VAR   ref    V21 tmp10        
New refCnts for V20: refCnt =  3, refCntWtd = 8   
New refCnts for V21: refCnt =  3, refCntWtd = 8   
STMT00094 (IL 0x0A1...  ???)
               [000355] -A-XG+------              *  ASG       bool  
               [000354] ---XG+-N----              +--*  IND       bool  
               [000512] -----+------              |  \--*  ADD       byref 
               [000131] -----+------              |     +--*  LCL_VAR   ref    V19 tmp8         
               [000511] -----+------              |     \--*  CNS_INT   long   130 field offset Fseq[<UseShellExecute>k__BackingField]
               [000353] -----+------              \--*  CNS_INT   int    0
New refCnts for V19: refCnt =  3, refCntWtd = 8   
STMT00038 (IL 0x0A8...  ???)
               [000136] -A---+------              *  ASG       ref   
               [000135] D----+-N----              +--*  LCL_VAR   ref    V08 loc6         
               [000127] -----+------              \--*  LCL_VAR   ref    V19 tmp8         
New refCnts for V08: refCnt =  1, refCntWtd = 4   
New refCnts for V19: refCnt =  4, refCntWtd = 12   
STMT00040 (IL 0x0AA...0x0B9)
               [000145] -A-XG+------              *  ASG       ref   
               [000144] D----+-N----              +--*  LCL_VAR   ref    V23 tmp12        
               [000138] ---XG+------              \--*  IND       ref   
               [000514] -----+------                 \--*  ADD       byref 
               [000137] -----+------                    +--*  LCL_VAR   ref    V02 loc0         
               [000513] -----+------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers]
New refCnts for V23: refCnt =  1, refCntWtd = 8   
New refCnts for V02: refCnt =  2, refCntWtd = 5   
STMT00039 (IL 0x0AA...  ???)
               [000143] -A-XG+------              *  ASG       ref   
               [000142] D----+-N----              +--*  LCL_VAR   ref    V22 tmp11        
               [000141] ---XG+------              \--*  IND       ref   
               [000516] -----+------                 \--*  ADD       byref 
               [000140] -----+------                    +--*  LCL_VAR   ref    V02 loc0         
               [000515] -----+------                    \--*  CNS_INT   long   48 field offset Fseq[<>9__2]
New refCnts for V22: refCnt =  1, refCntWtd = 8   
New refCnts for V02: refCnt =  3, refCntWtd = 9   
STMT00042 (IL   ???...0x0B9)
               [000153] -A---+------              *  ASG       ref   
               [000152] D----+-N----              +--*  LCL_VAR   ref    V24 tmp13        
               [000146] -----+------              \--*  LCL_VAR   ref    V23 tmp12        
New refCnts for V24: refCnt =  1, refCntWtd = 4   
New refCnts for V23: refCnt =  2, refCntWtd = 16   
STMT00043 (IL   ???...  ???)
               [000156] -A---+------              *  ASG       ref   
               [000155] D----+-N----              +--*  LCL_VAR   ref    V25 tmp14        
               [000139] -----+------              \--*  LCL_VAR   ref    V19 tmp8         
New refCnts for V25: refCnt =  1, refCntWtd = 4   
New refCnts for V19: refCnt =  5, refCntWtd = 16   
STMT00044 (IL   ???...  ???)
               [000159] -A---+------              *  ASG       ref   
               [000158] D----+-N----              +--*  LCL_VAR   ref    V26 tmp15        
               [000147] -----+------              \--*  LCL_VAR   ref    V22 tmp11        
New refCnts for V26: refCnt =  1, refCntWtd = 4   
New refCnts for V22: refCnt =  2, refCntWtd = 16   
STMT00041 (IL   ???...  ???)
               [000151] -----+------              *  JTRUE     void  
               [000150] J----+-N----              \--*  NE        int   
               [000148] -----+------                 +--*  LCL_VAR   ref    V22 tmp11        
               [000149] -----+------                 \--*  CNS_INT   ref    null
New refCnts for V22: refCnt =  3, refCntWtd = 24   

*** marking local variables in block BB07 (weight=2   )
STMT00048 (IL   ???...0x0CA)
               [000184] -AC--+------              *  ASG       ref   
               [000183] D----+-N----              +--*  LCL_VAR   ref    V28 tmp17        
               [000182] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000181] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token
New refCnts for V28: refCnt =  1, refCntWtd = 4   
STMT00095 (IL   ???...  ???)
               [000359] -----+------              *  JTRUE     void  
               [000358] J----+-N----              \--*  EQ        int   
               [000179] -----+------                 +--*  LCL_VAR   ref    V02 loc0         
               [000357] -----+------                 \--*  CNS_INT   ref    null
New refCnts for V02: refCnt =  4, refCntWtd = 11   

*** marking local variables in block BB08 (weight=2   )
STMT00096 (IL   ???...  ???)
               [000362] -A-XG+------              *  ASG       ref   
               [000361] ---XG+-N----              +--*  IND       ref   
               [000519] -----+------              |  \--*  ADD       byref 
               [000185] -----+------              |     +--*  LCL_VAR   ref    V28 tmp17        
               [000518] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
               [000360] -----+------              \--*  LCL_VAR   ref    V02 loc0         
New refCnts for V28: refCnt =  2, refCntWtd = 8   
New refCnts for V02: refCnt =  5, refCntWtd = 13   
STMT00097 (IL   ???...  ???)
               [000366] -A-XG+------              *  ASG       long  
               [000365] ---XG+-N----              +--*  IND       long  
               [000521] -----+------              |  \--*  ADD       byref 
               [000363] -----+------              |     +--*  LCL_VAR   ref    V28 tmp17        
               [000520] -----+------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
               [000180] H----+------              \--*  CNS_INT(h) long   0xd1ffab1e ftn
New refCnts for V28: refCnt =  3, refCntWtd = 12   
STMT00050 (IL 0x0C9...  ???)
               [000190] -A---+------              *  ASG       ref   
               [000189] D----+-N----              +--*  LCL_VAR   ref    V09 loc7         
               [000188] -----+------              \--*  LCL_VAR   ref    V28 tmp17        
New refCnts for V09: refCnt =  1, refCntWtd = 2   
New refCnts for V28: refCnt =  4, refCntWtd = 16   
STMT00051 (IL   ???...0x0CC)
               [000192] -A-XG+------              *  ASG       ref   
               [000191] ---XG+-N----              +--*  IND       ref   
               [000523] -----+------              |  \--*  ADD       byref 
               [000178] -----+------              |     +--*  LCL_VAR   ref    V02 loc0         
               [000522] -----+------              |     \--*  CNS_INT   long   48 field offset Fseq[<>9__2]
               [000187] -----+------              \--*  LCL_VAR   ref    V28 tmp17        
New refCnts for V02: refCnt =  6, refCntWtd = 15   
New refCnts for V28: refCnt =  5, refCntWtd = 20   
STMT00052 (IL   ???...0x0D1)
               [000199] -A---+------              *  ASG       ref   
               [000198] D----+-N----              +--*  LCL_VAR   ref    V26 tmp15        
               [000193] -----+------              \--*  LCL_VAR   ref    V28 tmp17        
New refCnts for V26: refCnt =  2, refCntWtd = 6   
New refCnts for V28: refCnt =  6, refCntWtd = 24   

*** marking local variables in block BB09 (weight=4   )
STMT00045 (IL   ???...0x0E4)
               [000172] -AC--+------              *  ASG       ref   
               [000171] D----+-N----              +--*  LCL_VAR   ref    V27 tmp16        
               [000170] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000169] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token
New refCnts for V27: refCnt =  1, refCntWtd = 8   
STMT00099 (IL   ???...  ???)
               [000371] -----+------              *  JTRUE     void  
               [000370] J----+-N----              \--*  EQ        int   
               [000167] -----+------                 +--*  LCL_VAR   ref    V02 loc0         
               [000369] -----+------                 \--*  CNS_INT   ref    null
New refCnts for V02: refCnt =  7, refCntWtd = 19   

*** marking local variables in block BB10 (weight=4   )
STMT00100 (IL   ???...  ???)
               [000374] -A-XG+------              *  ASG       ref   
               [000373] ---XG+-N----              +--*  IND       ref   
               [000526] -----+------              |  \--*  ADD       byref 
               [000173] -----+------              |     +--*  LCL_VAR   ref    V27 tmp16        
               [000525] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
               [000372] -----+------              \--*  LCL_VAR   ref    V02 loc0         
New refCnts for V27: refCnt =  2, refCntWtd = 16   
New refCnts for V02: refCnt =  8, refCntWtd = 23   
STMT00101 (IL   ???...  ???)
               [000378] -A-XG+------              *  ASG       long  
               [000377] ---XG+-N----              +--*  IND       long  
               [000528] -----+------              |  \--*  ADD       byref 
               [000375] -----+------              |     +--*  LCL_VAR   ref    V27 tmp16        
               [000527] -----+------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
               [000168] H----+------              \--*  CNS_INT(h) long   0xd1ffab1e ftn
New refCnts for V27: refCnt =  3, refCntWtd = 24   
STMT00047 (IL 0x0DF...  ???)
               [000177] --CXG+------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue
               [000533] -ACXG-----L- arg1 SETUP   +--*  ASG       ref   
               [000532] D------N----              |  +--*  LCL_VAR   ref    V42 tmp31        
               [000176] --CXG+------              |  \--*  CALL      ref    SolutionAnalyzer.IPC.CreateSession
               [000165] -----+------ arg0 in rcx  |     +--*  LCL_VAR   ref    V25 tmp14        
               [000166] -----+------ arg1 in rdx  |     +--*  LCL_VAR   ref    V26 tmp15        
               [000175] -----+------ arg2 in r8   |     \--*  LCL_VAR   ref    V27 tmp16        
               [000534] ------------ arg1 in rdx  +--*  LCL_VAR   ref    V42 tmp31        
               [000164] -----+------ this in rcx  \--*  LCL_VAR   ref    V24 tmp13        
New refCnts for V42: refCnt =  1, refCntWtd = 8   
New refCnts for V25: refCnt =  2, refCntWtd = 8   
New refCnts for V26: refCnt =  3, refCntWtd = 10   
New refCnts for V27: refCnt =  4, refCntWtd = 32   
New refCnts for V42: refCnt =  2, refCntWtd = 16   
New refCnts for V24: refCnt =  2, refCntWtd = 8   
STMT00025 (IL 0x0E9...0x0F0)
               [000084] --CXG+------              *  JTRUE     void  
     ( 27, 24) [000083] J-CXG--N----              \--*  NE        int   
     ( 25, 22) [000081] --CXG-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext
     (  3,  2) [000080] ------------ this in rcx     |  +--*  LCL_VAR   ref    V06 loc4         
     (  2, 10) [000536] H----------- arg1 in r11     |  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11
     (  1,  1) [000082] ------------                 \--*  CNS_INT   int    0
New refCnts for V06: refCnt =  4, refCntWtd = 10   

*** marking local variables in block BB11 (weight=0.50)

*** marking local variables in block BB12 (weight=0   )
STMT00102 (IL   ???...  ???)
               [000379] --CXG+------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

*** marking local variables in block BB13 (weight=1   )
STMT00116 (IL   ???...  ???)
               [000431] -----+------              *  JTRUE     void  
               [000432] J----+-N----              \--*  EQ        int   
               [000433] -----+------                 +--*  LCL_VAR   ref    V06 loc4         
               [000434] -----+------                 \--*  CNS_INT   ref    null
New refCnts for V06: refCnt =  5, refCntWtd = 11   

*** marking local variables in block BB14 (weight=0.50)
STMT00117 (IL   ???...  ???)
               [000435] --CXG+------              *  CALLV stub void   System.IDisposable.Dispose
               [000436] -----+------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         
               [000539] H----+------ arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11
New refCnts for V06: refCnt =  6, refCntWtd = 11.50

*** marking local variables in block BB15 (weight=1   )
STMT00103 (IL 0x100...  ???)
               [000384] -A-XG+------              *  ASG       ref   
               [000383] D----+-N----              +--*  LCL_VAR   ref    V35 tmp24        
               [000213] ---XG+------              \--*  IND       ref   
               [000546] -----+------                 \--*  ADD       byref 
               [000212] -----+------                    +--*  LCL_VAR   ref    V02 loc0         
               [000545] -----+------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers]
New refCnts for V35: refCnt =  1, refCntWtd = 2   
New refCnts for V02: refCnt =  9, refCntWtd = 24   
STMT00057 (IL   ???...  ???)
               [000217] -A-XG+------              *  ASG       int   
               [000216] ---XG+-N----              +--*  IND       int   
               [000548] -----+------              |  \--*  ADD       byref 
               [000211] -----+------              |     +--*  LCL_VAR   ref    V02 loc0         
               [000547] -----+------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]
               [000382] ---XG+------              \--*  IND       int   
               [000550] -----+------                 \--*  ADD       byref 
               [000381] -----+------                    +--*  LCL_VAR   ref    V35 tmp24        
               [000549] -----+------                    \--*  CNS_INT   long   24 field offset Fseq[_size]
New refCnts for V02: refCnt = 10, refCntWtd = 25   
New refCnts for V35: refCnt =  2, refCntWtd = 4   
STMT00058 (IL 0x111...0x11D)
               [000224] -AC--+------              *  ASG       ref   
               [000223] D----+-N----              +--*  LCL_VAR   ref    V29 tmp18        
               [000222] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000221] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method
New refCnts for V29: refCnt =  1, refCntWtd = 2   
STMT00109 (IL   ???...  ???)
               [000402] -A-XG+------              *  ASG       int   
               [000401] D----+-N----              +--*  LCL_VAR   int    V37 tmp26        
               [000220] ---XG+------              \--*  IND       int   
               [000553] -----+------                 \--*  ADD       byref 
               [000219] -----+------                    +--*  LCL_VAR   ref    V02 loc0         
               [000552] -----+------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]
New refCnts for V37: refCnt =  1, refCntWtd = 2   
New refCnts for V02: refCnt = 11, refCntWtd = 26   
STMT00104 (IL   ???...  ???)
               [000389] -AC--+------              *  ASG       ref   
               [000388] D----+-N----              +--*  LCL_VAR   ref    V36 tmp25        
               [000387] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000386] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token
New refCnts for V36: refCnt =  1, refCntWtd = 2   
STMT00110 (IL   ???...  ???)
               [000406] --CXG+------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor
               [000390] -----+------ this in rcx  +--*  LCL_VAR   ref    V36 tmp25        
               [000404] -----+------ arg1 in rdx  +--*  CNS_INT   int    0
               [000405] -----+------ arg2 in r8   \--*  CNS_INT   ref    null
New refCnts for V36: refCnt =  2, refCntWtd = 4   
STMT00106 (IL   ???...  ???)
               [000394] -A-XG+------              *  ASG       ref   
               [000393] ---XG+-N----              +--*  IND       ref   
               [000559] -----+------              |  \--*  ADD       byref 
               [000225] -----+------              |     +--*  LCL_VAR   ref    V29 tmp18        
               [000558] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_workItems]
               [000392] -----+------              \--*  LCL_VAR   ref    V36 tmp25        
New refCnts for V29: refCnt =  2, refCntWtd = 4   
New refCnts for V36: refCnt =  3, refCntWtd = 6   
STMT00108 (IL   ???...  ???)
               [000400] -A-XG+------              *  ASG       int   
               [000399] ---XG+-N----              +--*  IND       int   
               [000561] -----+------              |  \--*  ADD       byref 
               [000397] -----+------              |     +--*  LCL_VAR   ref    V29 tmp18        
               [000560] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[_workItemsToComplete]
               [000398] -----+------              \--*  LCL_VAR   int    V37 tmp26        
New refCnts for V29: refCnt =  3, refCntWtd = 6   
New refCnts for V37: refCnt =  2, refCntWtd = 4   
STMT00060 (IL 0x11D...  ???)
               [000229] -A-XG+------              *  ASG       ref   
               [000228] ---XG+-N----              +--*  IND       ref   
               [000563] -----+------              |  \--*  ADD       byref 
               [000218] -----+------              |     +--*  LCL_VAR   ref    V02 loc0         
               [000562] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter]
               [000227] -----+------              \--*  LCL_VAR   ref    V29 tmp18        
New refCnts for V02: refCnt = 12, refCntWtd = 27   
New refCnts for V29: refCnt =  4, refCntWtd = 8   
STMT00061 (IL 0x122...0x123)
               [000232] -A---+------              *  ASG       int   
               [000231] D----+-N----              +--*  LCL_VAR   int    V10 loc8         
               [000230] -----+------              \--*  CNS_INT   int    0
New refCnts for V10: refCnt =  1, refCntWtd = 1   

*** marking local variables in block BB16 (weight=2   )
STMT00065 (IL 0x127...0x131)
               [000243] --CXG+------              *  CALL nullcheck void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0
               [000242] -----+------ this in rcx  \--*  LCL_VAR   ref    V02 loc0         
New refCnts for V02: refCnt = 13, refCntWtd = 29   
STMT00066 (IL 0x12D...  ???)
               [000248] -A---+------              *  ASG       int   
               [000247] D----+-N----              +--*  LCL_VAR   int    V10 loc8         
               [000246] -----+------              \--*  ADD       int   
               [000244] -----+------                 +--*  LCL_VAR   int    V10 loc8         
               [000245] -----+------                 \--*  CNS_INT   int    1
New refCnts for V10: refCnt =  2, refCntWtd = 3   
New refCnts for V10: refCnt =  3, refCntWtd = 5   

*** marking local variables in block BB17 (weight=8   )
STMT00114 (IL   ???...  ???)
               [000424] -A-XG+------              *  ASG       int   
               [000423] D----+-N----              +--*  LCL_VAR   int    V39 tmp28        
               [000237] ---XG+------              \--*  IND       int   
               [000566] -----+------                 \--*  ADD       byref 
               [000236] -----+------                    +--*  LCL_VAR   ref    V02 loc0         
               [000565] -----+------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]
New refCnts for V39: refCnt =  1, refCntWtd = 16   
New refCnts for V02: refCnt = 14, refCntWtd = 37   
STMT00111 (IL   ???...  ???)
               [000414] -----+------              *  JTRUE     void  
               [000413] J----+-N----              \--*  LE        int   
               [000411] -----+------                 +--*  CNS_INT   int    8
               [000412] -----+------                 \--*  LCL_VAR   int    V39 tmp28        
New refCnts for V39: refCnt =  2, refCntWtd = 32   

*** marking local variables in block BB18 (weight=2   )
STMT00113 (IL   ???...  ???)
               [000421] -A---+------              *  ASG       int   
               [000420] D----+-N----              +--*  LCL_VAR   int    V38 tmp27        
               [000419] -----+------              \--*  LCL_VAR   int    V39 tmp28        
New refCnts for V38: refCnt =  1, refCntWtd = 2   
New refCnts for V39: refCnt =  3, refCntWtd = 36   

*** marking local variables in block BB19 (weight=2   )
STMT00112 (IL   ???...  ???)
               [000417] -A---+------              *  ASG       int   
               [000416] D----+-N----              +--*  LCL_VAR   int    V38 tmp27        
               [000415] -----+------              \--*  CNS_INT   int    8
New refCnts for V38: refCnt =  2, refCntWtd = 4   

*** marking local variables in block BB20 (weight=8   )
STMT00064 (IL   ???...  ???)
               [000241] -----+------              *  JTRUE     void  
               [000240] J----+-N----              \--*  LT        int   
               [000233] -----+------                 +--*  LCL_VAR   int    V10 loc8         
               [000422] -----+------                 \--*  LCL_VAR   int    V38 tmp27        
New refCnts for V10: refCnt =  4, refCntWtd = 13   
New refCnts for V38: refCnt =  3, refCntWtd = 12   

*** marking local variables in block BB21 (weight=1   )
STMT00115 (IL 0x147...  ???)
               [000429] -A-XG+------              *  ASG       ref   
               [000428] D----+-N----              +--*  LCL_VAR   ref    V40 tmp29        
               [000250] ---XG+------              \--*  IND       ref   
               [000568] -----+------                 \--*  ADD       byref 
               [000249] -----+------                    +--*  LCL_VAR   ref    V02 loc0         
               [000567] -----+------                    \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun]
New refCnts for V40: refCnt =  1, refCntWtd = 2   
New refCnts for V02: refCnt = 15, refCntWtd = 38   
STMT00068 (IL   ???...  ???)
               [000253] ---XG+------              *  RETURN    ref   
               [000427] ---XG+------              \--*  IND       ref   
               [000570] -----+------                 \--*  ADD       byref 
               [000426] -----+------                    +--*  LCL_VAR   ref    V40 tmp29        
               [000569] -----+------                    \--*  CNS_INT   long   8 field offset Fseq[_task]
New refCnts for V40: refCnt =  2, refCntWtd = 4   

*** marking local variables in block BB22 (weight=0   )
STMT00069 (IL 0x0F4...0x0F6)
               [000257] -----+------              *  JTRUE     void  
               [000256] J----+-N----              \--*  EQ        int   
               [000254] -----+------                 +--*  LCL_VAR   ref    V06 loc4         
               [000255] -----+------                 \--*  CNS_INT   ref    null
New refCnts for V06: refCnt =  7, refCntWtd = 11.50

*** marking local variables in block BB23 (weight=0   )
STMT00071 (IL 0x0F8...0x0FA)
               [000260] --CXG+------              *  CALLV stub void   System.IDisposable.Dispose
               [000259] -----+------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         
               [000542] H----+------ arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11
New refCnts for V06: refCnt =  8, refCntWtd = 11.50

*** marking local variables in block BB24 (weight=0   )
STMT00070 (IL 0x0FF...0x0FF)
               [000258] -----+------              *  RETFILT   void  

*** lvaComputeRefCounts -- implicit counts ***
New refCnts for V00: refCnt =  2, refCntWtd = 2   
New refCnts for V00: refCnt =  3, refCntWtd = 3   
New refCnts for V01: refCnt =  2, refCntWtd = 2   
New refCnts for V01: refCnt =  3, refCntWtd = 3   

*************** In optAddCopies()


*************** Finishing PHASE Mark local vars

*************** Starting PHASE Optimize bools
*************** In optOptimizeBools()
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Optimize bools

*************** Starting PHASE Find oper order
*************** In fgFindOperOrder()

*************** Finishing PHASE Find oper order

*************** Starting PHASE Set block order
*************** In fgSetBlockOrder()
fgMarkLoopHead: Checking loop head block BB03: method is already fully interruptible
fgMarkLoopHead: Checking loop head block BB16: method is already fully interruptible
The biggest BB has   16 tree nodes

*************** Finishing PHASE Set block order
Trees before Build SSA representation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB13 ( cond ) T0      try {       keep i try label hascall gcsafe 
BB03 [0002]  2  0    BB02,BB10             4     0 [072..08B)-> BB05 ( cond ) T0                  i Loop label target hascall gcsafe newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  2     0 [08B..08F)-> BB06 (always) T0                  i gcsafe bwd 
BB05 [0004]  1  0    BB03                  2     0 [08F..09C)                 T0                  i label target hascall gcsafe bwd 
BB06 [0005]  2  0    BB04,BB05             4     0 [09C..0BB)-> BB09 ( cond ) T0                  i label target gcsafe bwd 
BB07 [0006]  1  0    BB06                  2     0 [000..0D3)-> BB12 ( cond ) T0                  i hascall gcsafe newobj bwd 
BB08 [0041]  1  0    BB07                  2     0 [000..000)                 T0                  i internal label target gcsafe newobj bwd 
BB09 [0007]  2  0    BB06,BB08             4     0 [000..0E9)-> BB12 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB10 [0045]  1  0    BB09                  4     0 [000..0F2)-> BB03 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB11 [0061]  1  0    BB10                  0.50    [???..???)-> BB13 (always) T0                  internal gcsafe 
BB12 [0044]  2  0    BB07,BB09             0       [000..000)        (throw ) T0      }           i internal rare label target hascall gcsafe bwd 
BB13 [0057]  2       BB02,BB11             1       [0F4..0F8)-> BB15 ( cond )                     keep i label target gcsafe cfb 
BB14 [0058]  1       BB13                  0.50    [0F8..100)                                     i hascall gcsafe 
BB15 [0013]  2       BB13,BB14             1       [100..127)-> BB17 (always)                     i label target hascall gcsafe newobj 
BB16 [0014]  1       BB20                  2     1 [127..133)                                     i Loop label target hascall gcsafe bwd bwd-target 
BB17 [0015]  2       BB15,BB16             8     1 [000..147)-> BB19 ( cond )                     i label target gcsafe bwd 
BB18 [0053]  1       BB17                  2     1 [000..000)-> BB20 (always)                     i internal gcsafe bwd 
BB19 [0054]  1       BB17                  2     1 [000..000)                                     i internal label target gcsafe bwd 
BB20 [0055]  2       BB18,BB19             8     1 [???..???)-> BB16 ( cond )                     internal label target gcsafe bwd 
BB21 [0016]  1       BB20                  1       [147..153)        (return)                     i gcsafe 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB22 [0010]  1     0                       0       [0F4..0F8)-> BB24 ( cond )    H0 F fault {     keep i rare label target flet 
BB23 [0011]  1     0 BB22                  0       [0F8..0FF)                    H0               i rare hascall gcsafe 
BB24 [0012]  2     0 BB22,BB23             0       [0FF..100)        (finret)    H0   }           i rare label target 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..070), preds={} succs={BB02}

***** BB01
STMT00000 (IL 0x000...0x005)
N005 ( 16, 16) [000003] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000002] D------N----              +--*  LCL_VAR   ref    V12 tmp1         
N003 ( 16, 16) [000001] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000000] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB01
STMT00002 (IL 0x005...  ???)
N003 (  1,  3) [000008] -A------R---              *  ASG       ref   
N002 (  1,  1) [000007] D------N----              +--*  LCL_VAR   ref    V02 loc0         
N001 (  1,  1) [000006] ------------              \--*  LCL_VAR   ref    V12 tmp1         

***** BB01
STMT00003 (IL 0x006...0x008)
N006 (  6,  6) [000012] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000011] ---XG--N----              +--*  IND       ref   
N003 (  2,  2) [000440] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000009] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         
N002 (  1,  1) [000439] ------------              |     \--*  CNS_INT   long   32 field offset Fseq[outputFile]
N005 (  1,  1) [000010] ------------              \--*  LCL_VAR   ref    V01 arg1         

***** BB01
STMT00004 (IL 0x00D...0x00F)
N006 (  6,  6) [000016] -A-XG-------              *  ASG       int   
N004 (  4,  4) [000015] ---XG--N----              +--*  IND       int   
N003 (  2,  2) [000442] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000013] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         
N002 (  1,  1) [000441] ------------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]
N005 (  1,  1) [000014] ------------              \--*  CNS_INT   int    0

***** BB01
STMT00005 (IL 0x014...0x016)
N006 (  6,  6) [000020] -A-XG-------              *  ASG       int   
N004 (  4,  4) [000019] ---XG--N----              +--*  IND       int   
N003 (  2,  2) [000444] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000017] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         
N002 (  1,  1) [000443] ------------              |     \--*  CNS_INT   long   56 field offset Fseq[analyzersFinishedCount]
N005 (  1,  1) [000018] ------------              \--*  CNS_INT   int    0

***** BB01
STMT00006 (IL 0x01B...0x021)
N005 ( 16, 16) [000025] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000024] D------N----              +--*  LCL_VAR   ref    V13 tmp2         
N003 ( 16, 16) [000023] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000022] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00074 (IL   ???...  ???)
N005 ( 16, 16) [000269] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000268] D------N----              +--*  LCL_VAR   ref    V30 tmp19        
N003 ( 16, 16) [000267] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000266] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00079 (IL   ???...  ???)
N006 (  6,  9) [000283] -A-XGO------              *  ASG       int   
N004 (  4,  4) [000282] V--XGO-N----              +--*  IND       int   
N003 (  2,  2) [000448] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000280] ------------              |     +--*  LCL_VAR   ref    V30 tmp19        
N002 (  1,  1) [000447] ------------              |     \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags]
N005 (  1,  4) [000281] ------------              \--*  CNS_INT   int    0x2000400

***** BB01
STMT00076 (IL   ???...  ???)
N006 (  6,  6) [000274] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000273] ---XG--N----              +--*  IND       ref   
N003 (  2,  2) [000450] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000265] ------------              |     +--*  LCL_VAR   ref    V13 tmp2         
N002 (  1,  1) [000449] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_task]
N005 (  1,  1) [000272] ------------              \--*  LCL_VAR   ref    V30 tmp19        

***** BB01
STMT00008 (IL 0x021...  ???)
N006 (  6,  6) [000030] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000029] ---XG--N----              +--*  IND       ref   
N003 (  2,  2) [000452] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000021] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         
N002 (  1,  1) [000451] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun]
N005 (  1,  1) [000028] ------------              \--*  LCL_VAR   ref    V13 tmp2         

***** BB01
STMT00009 (IL 0x026...0x02C)
N005 ( 16, 16) [000035] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000034] D------N----              +--*  LCL_VAR   ref    V14 tmp3         
N003 ( 16, 16) [000033] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000032] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00082 (IL   ???...  ???)
N013 ( 26, 35) [000292] -ACXG---R---              *  ASG       ref   
N012 (  4,  4) [000291] ---XG--N----              +--*  IND       ref   
N011 (  2,  2) [000455] -------N----              |  \--*  ADD       byref 
N009 (  1,  1) [000287] ------------              |     +--*  LCL_VAR   ref    V14 tmp3         
N010 (  1,  1) [000454] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_array]
N008 ( 21, 30) [000300] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 18) [000299] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS
N003 (  2, 10) [000297] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e0b0028
N004 (  1,  1) [000298] ------------ arg1 in rdx     |  \--*  CNS_INT   int    14
N007 (  4, 12) [000295] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000458] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[Value]

***** BB01
STMT00011 (IL 0x02C...  ???)
N006 (  6,  6) [000040] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000039] ---XG--N----              +--*  IND       ref   
N003 (  2,  2) [000460] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000031] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         
N002 (  1,  1) [000459] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers]
N005 (  1,  1) [000038] ------------              \--*  LCL_VAR   ref    V14 tmp3         

***** BB01
STMT00012 (IL 0x031...0x033)
N006 (  6,  6) [000044] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000043] ---XG--N----              +--*  IND       ref   
N003 (  2,  2) [000462] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000041] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         
N002 (  1,  1) [000461] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter]
N005 (  1,  1) [000042] ------------              \--*  CNS_INT   ref    null

***** BB01
STMT00013 (IL 0x038...0x03E)
N005 ( 16, 16) [000049] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000048] D------N----              +--*  LCL_VAR   ref    V15 tmp4         
N003 ( 16, 16) [000047] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000046] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00083 (IL   ???...  ???)
N005 ( 16, 10) [000303] --CXG-------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor
N003 (  1,  1) [000050] ------------ this in rcx  +--*  LCL_VAR   ref    V15 tmp4         
N004 (  1,  1) [000302] ------------ arg1 in rdx  \--*  CNS_INT   ref    null

***** BB01
STMT00015 (IL 0x03E...  ???)
N006 (  6,  6) [000054] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000053] ---XG--N----              +--*  IND       ref   
N003 (  2,  2) [000467] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000045] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         
N002 (  1,  1) [000466] ------------              |     \--*  CNS_INT   long   40 field offset Fseq[output]
N005 (  1,  1) [000052] ------------              \--*  LCL_VAR   ref    V15 tmp4         

***** BB01
STMT00086 (IL   ???...  ???)
N003 ( 14,  5) [000316] -ACXG---R---              *  ASG       ref   
N002 (  1,  1) [000315] D------N----              +--*  LCL_VAR   ref    V31 tmp20        
N001 ( 14,  5) [000055] --CXG-------              \--*  CALL      ref    System.Diagnostics.Process.GetCurrentProcess

***** BB01
STMT00087 (IL   ???...  ???)
N002 (  2,  2) [000314] ---X--------              *  NULLCHECK byte  
N001 (  1,  1) [000313] ------------              \--*  LCL_VAR   ref    V31 tmp20        

***** BB01
STMT00084 (IL   ???...  ???)
N005 ( 16, 10) [000308] --CXG-------              *  CALL      void   System.Diagnostics.Process.EnsureState
N003 (  1,  1) [000306] ------------ this in rcx  +--*  LCL_VAR   ref    V31 tmp20        
N004 (  1,  1) [000307] ------------ arg1 in rdx  \--*  CNS_INT   int    3

***** BB01
STMT00088 (IL   ???...  ???)
N008 ( 18, 13) [000322] -ACXG---R---              *  ASG       ref   
N007 (  1,  1) [000321] D------N----              +--*  LCL_VAR   ref    V32 tmp21        
N006 ( 18, 13) [000311] --CXG-------              \--*  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule
N005 (  4,  7) [000310] ---XG------- arg0 in rcx     \--*  IND       int   
N004 (  2,  5) [000471] -------N----                    \--*  ADD       byref 
N002 (  1,  1) [000309] ------------                       +--*  LCL_VAR   ref    V31 tmp20        
N003 (  1,  4) [000470] ------------                       \--*  CNS_INT   long   200 field offset Fseq[_processId]

***** BB01
STMT00019 (IL   ???...  ???)
N006 (  4,  4) [000062] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000061] D------N----              +--*  LCL_VAR   ref    V03 loc1         
N004 (  4,  4) [000320] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000474] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000319] ------------                    +--*  LCL_VAR   ref    V32 tmp21        
N002 (  1,  1) [000473] ------------                    \--*  CNS_INT   long   40 field offset Fseq[<FileName>k__BackingField]

***** BB01
STMT00090 (IL 0x053...  ???)
N002 (  2,  2) [000333] ---X--------              *  NULLCHECK byte  
N001 (  1,  1) [000332] ------------              \--*  LCL_VAR   ref    V03 loc1         

***** BB01
STMT00021 (IL   ???...  ???)
N016 ( 32, 30) [000069] -ACXG---R---              *  ASG       int   
N015 (  1,  1) [000068] D------N----              +--*  LCL_VAR   int    V04 loc2         
N014 ( 32, 30) [000329] --CXG-------              \--*  GE        int   
N012 ( 27, 28) [000340] --CXG-------                 +--*  CALL      int    System.String.IndexOf
N005 (  1,  1) [000339] ------------ arg4 out+20     |  +--*  CNS_INT   int    5
N007 (  3,  3) [000338] ---X-------- arg3 in r9      |  +--*  ARR_LENGTH int   
N006 (  1,  1) [000337] ------------                 |  |  \--*  LCL_VAR   ref    V03 loc1         
N009 (  4, 12) [000476] #---G------- arg1 in rdx     |  +--*  IND       ref   
N008 (  2, 10) [000475] H-----------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E "dotnet.exe"
N010 (  1,  1) [000063] ------------ this in rcx     |  +--*  LCL_VAR   ref    V03 loc1         
N011 (  1,  1) [000336] ------------ arg2 in r8      |  \--*  CNS_INT   int    0
N013 (  1,  1) [000328] ------------                 \--*  CNS_INT   int    0

***** BB01
STMT00023 (IL   ???...  ???)
N015 ( 26, 20) [000075] -ACXG---R---              *  ASG       ref   
N014 (  1,  1) [000074] D------N----              +--*  LCL_VAR   ref    V05 loc3         
N013 ( 26, 20) [000494] -ACXG-------              \--*  COMMA     ref   
N003 ( 14,  5) [000482] -ACXG---R---                 +--*  ASG       ref   
N002 (  1,  1) [000481] D------N----                 |  +--*  LCL_VAR   ref    V41 tmp30        
N001 ( 14,  5) [000070] --CXG-------                 |  \--*  CALL      ref    System.Environment.GetCommandLineArgs
N012 ( 12, 15) [000493] ---XG-------                 \--*  COMMA     ref   
N007 (  8, 11) [000487] ---X--------                    +--*  ARR_BOUNDS_CHECK_Rng void  
N004 (  1,  1) [000072] ------------                    |  +--*  CNS_INT   int    0
N006 (  3,  3) [000486] ---X--------                    |  \--*  ARR_LENGTH int   
N005 (  1,  1) [000483] ------------                    |     \--*  LCL_VAR   ref    V41 tmp30        
N011 (  4,  4) [000073] a---G-------                    \--*  IND       ref   
N010 (  2,  2) [000492] -------N----                       \--*  ADD       byref 
N008 (  1,  1) [000484] ------------                          +--*  LCL_VAR   ref    V41 tmp30        
N009 (  1,  1) [000491] ------------                          \--*  CNS_INT   long   16 Fseq[#FirstElem]

***** BB01
STMT00024 (IL 0x068...0x06E)
N007 ( 23, 21) [000079] -ACXG---R---              *  ASG       ref   
N006 (  1,  1) [000078] D------N----              +--*  LCL_VAR   ref    V06 loc4         
N005 ( 23, 21) [000077] --CXG-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator
N003 (  1,  1) [000076] ------------ this in rcx     +--*  LCL_VAR   ref    V00 arg0         
N004 (  2, 10) [000495] H----------- arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

------------ BB02 [070..072) -> BB13 (cond), preds={BB01} succs={BB03,BB13}

***** BB02
STMT00119 (IL 0x0E9...  ???)
N008 ( 27, 25) [000578] --CXG-------              *  JTRUE     void  
N007 ( 25, 23) [000571] J-CXG--N----              \--*  EQ        int   
N005 ( 23, 21) [000572] --CXG-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext
N003 (  1,  1) [000575] ------------ this in rcx     |  +--*  LCL_VAR   ref    V06 loc4         
N004 (  2, 10) [000576] H----------- arg1 in r11     |  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11
N006 (  1,  1) [000577] ------------                 \--*  CNS_INT   int    0

------------ BB03 [072..08B) -> BB05 (cond), preds={BB02,BB10} succs={BB04,BB05}

***** BB03
STMT00026 (IL 0x072...0x079)
N007 ( 23, 21) [000088] -ACXG---R---              *  ASG       ref   
N006 (  1,  1) [000087] D------N----              +--*  LCL_VAR   ref    V07 loc5         
N005 ( 23, 21) [000086] --CXG-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current
N003 (  1,  1) [000085] ------------ this in rcx     +--*  LCL_VAR   ref    V06 loc4         
N004 (  2, 10) [000498] H----------- arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

***** BB03
STMT00027 (IL 0x07B...0x089)
N005 ( 16, 16) [000092] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000091] D------N----              +--*  LCL_VAR   ref    V16 tmp5         
N003 ( 16, 16) [000090] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000089] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB03
STMT00092 (IL 0x080...  ???)
N006 (  6,  6) [000347] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000346] ---XG--N----              +--*  IND       ref   
N003 (  2,  2) [000503] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000096] ------------              |     +--*  LCL_VAR   ref    V16 tmp5         
N002 (  1,  1) [000502] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_fileName]
N005 (  1,  1) [000097] ------------              \--*  LCL_VAR   ref    V03 loc1         

***** BB03
STMT00031 (IL   ???...0x089)
N003 (  1,  3) [000105] -A------R---              *  ASG       ref   
N002 (  1,  1) [000104] D------N----              +--*  LCL_VAR   ref    V17 tmp6         
N001 (  1,  1) [000095] ------------              \--*  LCL_VAR   ref    V16 tmp5         

***** BB03
STMT00032 (IL   ???...  ???)
N003 (  1,  3) [000108] -A------R---              *  ASG       ref   
N002 (  1,  1) [000107] D------N----              +--*  LCL_VAR   ref    V18 tmp7         
N001 (  1,  1) [000099] ------------              \--*  LCL_VAR   ref    V16 tmp5         

***** BB03
STMT00030 (IL 0x087...  ???)
N004 (  5,  5) [000103] ------------              *  JTRUE     void  
N003 (  3,  3) [000102] J------N----              \--*  NE        int   
N001 (  1,  1) [000100] ------------                 +--*  LCL_VAR   int    V04 loc2         
N002 (  1,  1) [000101] ------------                 \--*  CNS_INT   int    0

------------ BB04 [08B..08F) -> BB06 (always), preds={BB03} succs={BB06}

***** BB04
STMT00053 (IL   ???...0x08D)
N003 (  1,  3) [000203] -A------R---              *  ASG       ref   
N002 (  1,  1) [000202] D------N----              +--*  LCL_VAR   ref    V19 tmp8         
N001 (  1,  1) [000110] ------------              \--*  LCL_VAR   ref    V17 tmp6         

***** BB04
STMT00054 (IL   ???...  ???)
N003 (  1,  3) [000206] -A------R---              *  ASG       ref   
N002 (  1,  1) [000205] D------N----              +--*  LCL_VAR   ref    V20 tmp9         
N001 (  1,  1) [000111] ------------              \--*  LCL_VAR   ref    V18 tmp7         

***** BB04
STMT00055 (IL   ???...  ???)
N003 (  1,  3) [000209] -A------R---              *  ASG       ref   
N002 (  1,  1) [000208] D------N----              +--*  LCL_VAR   ref    V21 tmp10        
N001 (  1,  1) [000201] ------------              \--*  LCL_VAR   ref    V07 loc5         

------------ BB05 [08F..09C), preds={BB03} succs={BB06}

***** BB05
STMT00033 (IL   ???...0x097)
N003 (  1,  3) [000119] -A------R---              *  ASG       ref   
N002 (  1,  1) [000118] D------N----              +--*  LCL_VAR   ref    V19 tmp8         
N001 (  1,  1) [000112] ------------              \--*  LCL_VAR   ref    V17 tmp6         

***** BB05
STMT00034 (IL   ???...  ???)
N003 (  1,  3) [000122] -A------R---              *  ASG       ref   
N002 (  1,  1) [000121] D------N----              +--*  LCL_VAR   ref    V20 tmp9         
N001 (  1,  1) [000113] ------------              \--*  LCL_VAR   ref    V18 tmp7         

***** BB05
STMT00035 (IL   ???...  ???)
N010 ( 20, 22) [000125] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000124] D------N----              +--*  LCL_VAR   ref    V21 tmp10        
N008 ( 20, 22) [000117] --CXG-------              \--*  CALL      ref    System.String.Concat
N005 (  4, 12) [000505] #---G------- arg1 in rdx     +--*  IND       ref   
N004 (  2, 10) [000504] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E " "
N006 (  1,  1) [000114] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V05 loc3         
N007 (  1,  1) [000116] ------------ arg2 in r8      \--*  LCL_VAR   ref    V07 loc5         

------------ BB06 [09C..0BB) -> BB09 (cond), preds={BB04,BB05} succs={BB07,BB09}

***** BB06
STMT00093 (IL   ???...  ???)
N006 (  6,  6) [000350] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000349] ---XG--N----              +--*  IND       ref   
N003 (  2,  2) [000510] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000128] ------------              |     +--*  LCL_VAR   ref    V20 tmp9         
N002 (  1,  1) [000509] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_arguments]
N005 (  1,  1) [000129] ------------              \--*  LCL_VAR   ref    V21 tmp10        

***** BB06
STMT00094 (IL 0x0A1...  ???)
N006 (  7, 10) [000355] -A-XG-------              *  ASG       bool  
N004 (  5,  8) [000354] ---XG--N----              +--*  IND       bool  
N003 (  2,  5) [000512] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000131] ------------              |     +--*  LCL_VAR   ref    V19 tmp8         
N002 (  1,  4) [000511] ------------              |     \--*  CNS_INT   long   130 field offset Fseq[<UseShellExecute>k__BackingField]
N005 (  1,  1) [000353] ------------              \--*  CNS_INT   int    0

***** BB06
STMT00038 (IL 0x0A8...  ???)
N003 (  1,  3) [000136] -A------R---              *  ASG       ref   
N002 (  1,  1) [000135] D------N----              +--*  LCL_VAR   ref    V08 loc6         
N001 (  1,  1) [000127] ------------              \--*  LCL_VAR   ref    V19 tmp8         

***** BB06
STMT00040 (IL 0x0AA...0x0B9)
N006 (  4,  4) [000145] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000144] D------N----              +--*  LCL_VAR   ref    V23 tmp12        
N004 (  4,  4) [000138] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000514] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000137] ------------                    +--*  LCL_VAR   ref    V02 loc0         
N002 (  1,  1) [000513] ------------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers]

***** BB06
STMT00039 (IL 0x0AA...  ???)
N006 (  4,  4) [000143] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000142] D------N----              +--*  LCL_VAR   ref    V22 tmp11        
N004 (  4,  4) [000141] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000516] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000140] ------------                    +--*  LCL_VAR   ref    V02 loc0         
N002 (  1,  1) [000515] ------------                    \--*  CNS_INT   long   48 field offset Fseq[<>9__2]

***** BB06
STMT00042 (IL   ???...0x0B9)
N003 (  1,  3) [000153] -A------R---              *  ASG       ref   
N002 (  1,  1) [000152] D------N----              +--*  LCL_VAR   ref    V24 tmp13        
N001 (  1,  1) [000146] ------------              \--*  LCL_VAR   ref    V23 tmp12        

***** BB06
STMT00043 (IL   ???...  ???)
N003 (  1,  3) [000156] -A------R---              *  ASG       ref   
N002 (  1,  1) [000155] D------N----              +--*  LCL_VAR   ref    V25 tmp14        
N001 (  1,  1) [000139] ------------              \--*  LCL_VAR   ref    V19 tmp8         

***** BB06
STMT00044 (IL   ???...  ???)
N003 (  1,  3) [000159] -A------R---              *  ASG       ref   
N002 (  1,  1) [000158] D------N----              +--*  LCL_VAR   ref    V26 tmp15        
N001 (  1,  1) [000147] ------------              \--*  LCL_VAR   ref    V22 tmp11        

***** BB06
STMT00041 (IL   ???...  ???)
N004 (  5,  5) [000151] ------------              *  JTRUE     void  
N003 (  3,  3) [000150] J------N----              \--*  NE        int   
N001 (  1,  1) [000148] ------------                 +--*  LCL_VAR   ref    V22 tmp11        
N002 (  1,  1) [000149] ------------                 \--*  CNS_INT   ref    null

------------ BB07 [000..0D3) -> BB12 (cond), preds={BB06} succs={BB08,BB12}

***** BB07
STMT00048 (IL   ???...0x0CA)
N005 ( 16, 16) [000184] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000183] D------N----              +--*  LCL_VAR   ref    V28 tmp17        
N003 ( 16, 16) [000182] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000181] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB07
STMT00095 (IL   ???...  ???)
N004 (  5,  5) [000359] ------------              *  JTRUE     void  
N003 (  3,  3) [000358] J------N----              \--*  EQ        int   
N001 (  1,  1) [000179] ------------                 +--*  LCL_VAR   ref    V02 loc0         
N002 (  1,  1) [000357] ------------                 \--*  CNS_INT   ref    null

------------ BB08 [000..000), preds={BB07} succs={BB09}

***** BB08
STMT00096 (IL   ???...  ???)
N006 (  6,  6) [000362] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000361] ---XG--N----              +--*  IND       ref   
N003 (  2,  2) [000519] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000185] ------------              |     +--*  LCL_VAR   ref    V28 tmp17        
N002 (  1,  1) [000518] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
N005 (  1,  1) [000360] ------------              \--*  LCL_VAR   ref    V02 loc0         

***** BB08
STMT00097 (IL   ???...  ???)
N006 (  7, 15) [000366] -A-XG-------              *  ASG       long  
N004 (  4,  4) [000365] ---XG--N----              +--*  IND       long  
N003 (  2,  2) [000521] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000363] ------------              |     +--*  LCL_VAR   ref    V28 tmp17        
N002 (  1,  1) [000520] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
N005 (  2, 10) [000180] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

***** BB08
STMT00050 (IL 0x0C9...  ???)
N003 (  5,  4) [000190] -A------R---              *  ASG       ref   
N002 (  3,  2) [000189] D------N----              +--*  LCL_VAR   ref    V09 loc7         
N001 (  1,  1) [000188] ------------              \--*  LCL_VAR   ref    V28 tmp17        

***** BB08
STMT00051 (IL   ???...0x0CC)
N006 (  6,  6) [000192] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000191] ---XG--N----              +--*  IND       ref   
N003 (  2,  2) [000523] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000178] ------------              |     +--*  LCL_VAR   ref    V02 loc0         
N002 (  1,  1) [000522] ------------              |     \--*  CNS_INT   long   48 field offset Fseq[<>9__2]
N005 (  1,  1) [000187] ------------              \--*  LCL_VAR   ref    V28 tmp17        

***** BB08
STMT00052 (IL   ???...0x0D1)
N003 (  1,  3) [000199] -A------R---              *  ASG       ref   
N002 (  1,  1) [000198] D------N----              +--*  LCL_VAR   ref    V26 tmp15        
N001 (  1,  1) [000193] ------------              \--*  LCL_VAR   ref    V28 tmp17        

------------ BB09 [000..0E9) -> BB12 (cond), preds={BB06,BB08} succs={BB10,BB12}

***** BB09
STMT00045 (IL   ???...0x0E4)
N005 ( 16, 16) [000172] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000171] D------N----              +--*  LCL_VAR   ref    V27 tmp16        
N003 ( 16, 16) [000170] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000169] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB09
STMT00099 (IL   ???...  ???)
N004 (  5,  5) [000371] ------------              *  JTRUE     void  
N003 (  3,  3) [000370] J------N----              \--*  EQ        int   
N001 (  1,  1) [000167] ------------                 +--*  LCL_VAR   ref    V02 loc0         
N002 (  1,  1) [000369] ------------                 \--*  CNS_INT   ref    null

------------ BB10 [000..0F2) -> BB03 (cond), preds={BB09} succs={BB11,BB03}

***** BB10
STMT00100 (IL   ???...  ???)
N006 (  6,  6) [000374] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000373] ---XG--N----              +--*  IND       ref   
N003 (  2,  2) [000526] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000173] ------------              |     +--*  LCL_VAR   ref    V27 tmp16        
N002 (  1,  1) [000525] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
N005 (  1,  1) [000372] ------------              \--*  LCL_VAR   ref    V02 loc0         

***** BB10
STMT00101 (IL   ???...  ???)
N006 (  7, 15) [000378] -A-XG-------              *  ASG       long  
N004 (  4,  4) [000377] ---XG--N----              +--*  IND       long  
N003 (  2,  2) [000528] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000375] ------------              |     +--*  LCL_VAR   ref    V27 tmp16        
N002 (  1,  1) [000527] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
N005 (  2, 10) [000168] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

***** BB10
STMT00047 (IL 0x0DF...  ???)
N013 ( 36, 21) [000177] --CXG-------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue
N010 ( 17, 11) [000533] -ACXG---R-L- arg1 SETUP   +--*  ASG       ref   
N009 (  1,  1) [000532] D------N----              |  +--*  LCL_VAR   ref    V42 tmp31        
N008 ( 17, 11) [000176] --CXG-------              |  \--*  CALL      ref    SolutionAnalyzer.IPC.CreateSession
N005 (  1,  1) [000165] ------------ arg0 in rcx  |     +--*  LCL_VAR   ref    V25 tmp14        
N006 (  1,  1) [000166] ------------ arg1 in rdx  |     +--*  LCL_VAR   ref    V26 tmp15        
N007 (  1,  1) [000175] ------------ arg2 in r8   |     \--*  LCL_VAR   ref    V27 tmp16        
N011 (  1,  1) [000534] ------------ arg1 in rdx  +--*  LCL_VAR   ref    V42 tmp31        
N012 (  1,  1) [000164] ------------ this in rcx  \--*  LCL_VAR   ref    V24 tmp13        

***** BB10
STMT00025 (IL 0x0E9...0x0F0)
N008 ( 27, 25) [000084] --CXG-------              *  JTRUE     void  
N007 ( 25, 23) [000083] J-CXG--N----              \--*  NE        int   
N005 ( 23, 21) [000081] --CXG-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext
N003 (  1,  1) [000080] ------------ this in rcx     |  +--*  LCL_VAR   ref    V06 loc4         
N004 (  2, 10) [000536] H----------- arg1 in r11     |  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11
N006 (  1,  1) [000082] ------------                 \--*  CNS_INT   int    0

------------ BB11 [???..???) -> BB13 (always), preds={BB10} succs={BB13}

------------ BB12 [000..000) (throw), preds={BB07,BB09} succs={}

***** BB12
STMT00102 (IL   ???...  ???)
N001 ( 14,  5) [000379] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

------------ BB13 [0F4..0F8) -> BB15 (cond), preds={BB02,BB11} succs={BB14,BB15}

***** BB13
STMT00116 (IL   ???...  ???)
N004 (  5,  5) [000431] ------------              *  JTRUE     void  
N003 (  3,  3) [000432] J------N----              \--*  EQ        int   
N001 (  1,  1) [000433] ------------                 +--*  LCL_VAR   ref    V06 loc4         
N002 (  1,  1) [000434] ------------                 \--*  CNS_INT   ref    null

------------ BB14 [0F8..100), preds={BB13} succs={BB15}

***** BB14
STMT00117 (IL   ???...  ???)
N005 ( 23, 21) [000435] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose
N003 (  1,  1) [000436] ------------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         
N004 (  2, 10) [000539] H----------- arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

------------ BB15 [100..127) -> BB17 (always), preds={BB13,BB14} succs={BB17}

***** BB15
STMT00103 (IL 0x100...  ???)
N006 (  4,  4) [000384] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000383] D------N----              +--*  LCL_VAR   ref    V35 tmp24        
N004 (  4,  4) [000213] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000546] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000212] ------------                    +--*  LCL_VAR   ref    V02 loc0         
N002 (  1,  1) [000545] ------------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers]

***** BB15
STMT00057 (IL   ???...  ???)
N009 (  9,  9) [000217] -A-XG---R---              *  ASG       int   
N008 (  4,  4) [000216] ---XG--N----              +--*  IND       int   
N007 (  2,  2) [000548] -------N----              |  \--*  ADD       byref 
N005 (  1,  1) [000211] ------------              |     +--*  LCL_VAR   ref    V02 loc0         
N006 (  1,  1) [000547] ------------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]
N004 (  4,  4) [000382] ---XG-------              \--*  IND       int   
N003 (  2,  2) [000550] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000381] ------------                    +--*  LCL_VAR   ref    V35 tmp24        
N002 (  1,  1) [000549] ------------                    \--*  CNS_INT   long   24 field offset Fseq[_size]

***** BB15
STMT00058 (IL 0x111...0x11D)
N005 ( 16, 16) [000224] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000223] D------N----              +--*  LCL_VAR   ref    V29 tmp18        
N003 ( 16, 16) [000222] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000221] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB15
STMT00109 (IL   ???...  ???)
N006 (  4,  4) [000402] -A-XG---R---              *  ASG       int   
N005 (  1,  1) [000401] D------N----              +--*  LCL_VAR   int    V37 tmp26        
N004 (  4,  4) [000220] ---XG-------              \--*  IND       int   
N003 (  2,  2) [000553] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000219] ------------                    +--*  LCL_VAR   ref    V02 loc0         
N002 (  1,  1) [000552] ------------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]

***** BB15
STMT00104 (IL   ???...  ???)
N005 ( 16, 16) [000389] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000388] D------N----              +--*  LCL_VAR   ref    V36 tmp25        
N003 ( 16, 16) [000387] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000386] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB15
STMT00110 (IL   ???...  ???)
N007 ( 17, 12) [000406] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor
N004 (  1,  1) [000390] ------------ this in rcx  +--*  LCL_VAR   ref    V36 tmp25        
N005 (  1,  1) [000404] ------------ arg1 in rdx  +--*  CNS_INT   int    0
N006 (  1,  1) [000405] ------------ arg2 in r8   \--*  CNS_INT   ref    null

***** BB15
STMT00106 (IL   ???...  ???)
N006 (  6,  6) [000394] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000393] ---XG--N----              +--*  IND       ref   
N003 (  2,  2) [000559] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000225] ------------              |     +--*  LCL_VAR   ref    V29 tmp18        
N002 (  1,  1) [000558] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_workItems]
N005 (  1,  1) [000392] ------------              \--*  LCL_VAR   ref    V36 tmp25        

***** BB15
STMT00108 (IL   ???...  ???)
N006 (  6,  6) [000400] -A-XG-------              *  ASG       int   
N004 (  4,  4) [000399] ---XG--N----              +--*  IND       int   
N003 (  2,  2) [000561] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000397] ------------              |     +--*  LCL_VAR   ref    V29 tmp18        
N002 (  1,  1) [000560] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_workItemsToComplete]
N005 (  1,  1) [000398] ------------              \--*  LCL_VAR   int    V37 tmp26        

***** BB15
STMT00060 (IL 0x11D...  ???)
N006 (  6,  6) [000229] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000228] ---XG--N----              +--*  IND       ref   
N003 (  2,  2) [000563] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000218] ------------              |     +--*  LCL_VAR   ref    V02 loc0         
N002 (  1,  1) [000562] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter]
N005 (  1,  1) [000227] ------------              \--*  LCL_VAR   ref    V29 tmp18        

***** BB15
STMT00061 (IL 0x122...0x123)
N003 (  1,  3) [000232] -A------R---              *  ASG       int   
N002 (  1,  1) [000231] D------N----              +--*  LCL_VAR   int    V10 loc8         
N001 (  1,  1) [000230] ------------              \--*  CNS_INT   int    0

------------ BB16 [127..133), preds={BB20} succs={BB17}

***** BB16
STMT00065 (IL 0x127...0x131)
N003 ( 15,  8) [000243] --CXG-------              *  CALL nullcheck void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0
N002 (  1,  1) [000242] ------------ this in rcx  \--*  LCL_VAR   ref    V02 loc0         

***** BB16
STMT00066 (IL 0x12D...  ???)
N005 (  3,  3) [000248] -A------R---              *  ASG       int   
N004 (  1,  1) [000247] D------N----              +--*  LCL_VAR   int    V10 loc8         
N003 (  3,  3) [000246] ------------              \--*  ADD       int   
N001 (  1,  1) [000244] ------------                 +--*  LCL_VAR   int    V10 loc8         
N002 (  1,  1) [000245] ------------                 \--*  CNS_INT   int    1

------------ BB17 [000..147) -> BB19 (cond), preds={BB15,BB16} succs={BB18,BB19}

***** BB17
STMT00114 (IL   ???...  ???)
N006 (  4,  4) [000424] -A-XG---R---              *  ASG       int   
N005 (  1,  1) [000423] D------N----              +--*  LCL_VAR   int    V39 tmp28        
N004 (  4,  4) [000237] ---XG-------              \--*  IND       int   
N003 (  2,  2) [000566] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000236] ------------                    +--*  LCL_VAR   ref    V02 loc0         
N002 (  1,  1) [000565] ------------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]

***** BB17
STMT00111 (IL   ???...  ???)
N004 (  5,  5) [000414] ------------              *  JTRUE     void  
N003 (  3,  3) [000413] J------N----              \--*  GE        int   
N001 (  1,  1) [000412] ------------                 +--*  LCL_VAR   int    V39 tmp28        
N002 (  1,  1) [000411] ------------                 \--*  CNS_INT   int    8

------------ BB18 [000..000) -> BB20 (always), preds={BB17} succs={BB20}

***** BB18
STMT00113 (IL   ???...  ???)
N003 (  1,  3) [000421] -A------R---              *  ASG       int   
N002 (  1,  1) [000420] D------N----              +--*  LCL_VAR   int    V38 tmp27        
N001 (  1,  1) [000419] ------------              \--*  LCL_VAR   int    V39 tmp28        

------------ BB19 [000..000), preds={BB17} succs={BB20}

***** BB19
STMT00112 (IL   ???...  ???)
N003 (  1,  3) [000417] -A------R---              *  ASG       int   
N002 (  1,  1) [000416] D------N----              +--*  LCL_VAR   int    V38 tmp27        
N001 (  1,  1) [000415] ------------              \--*  CNS_INT   int    8

------------ BB20 [???..???) -> BB16 (cond), preds={BB18,BB19} succs={BB21,BB16}

***** BB20
STMT00064 (IL   ???...  ???)
N004 (  5,  5) [000241] ------------              *  JTRUE     void  
N003 (  3,  3) [000240] J------N----              \--*  LT        int   
N001 (  1,  1) [000233] ------------                 +--*  LCL_VAR   int    V10 loc8         
N002 (  1,  1) [000422] ------------                 \--*  LCL_VAR   int    V38 tmp27        

------------ BB21 [147..153) (return), preds={BB20} succs={}

***** BB21
STMT00115 (IL 0x147...  ???)
N006 (  4,  4) [000429] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000428] D------N----              +--*  LCL_VAR   ref    V40 tmp29        
N004 (  4,  4) [000250] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000568] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000249] ------------                    +--*  LCL_VAR   ref    V02 loc0         
N002 (  1,  1) [000567] ------------                    \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun]

***** BB21
STMT00068 (IL   ???...  ???)
N005 (  5,  5) [000253] ---XG-------              *  RETURN    ref   
N004 (  4,  4) [000427] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000570] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000426] ------------                    +--*  LCL_VAR   ref    V40 tmp29        
N002 (  1,  1) [000569] ------------                    \--*  CNS_INT   long   8 field offset Fseq[_task]

------------ BB22 [0F4..0F8) -> BB24 (cond), preds={} succs={BB23,BB24}

***** BB22
STMT00069 (IL 0x0F4...0x0F6)
N004 (  5,  5) [000257] ------------              *  JTRUE     void  
N003 (  3,  3) [000256] J------N----              \--*  EQ        int   
N001 (  1,  1) [000254] ------------                 +--*  LCL_VAR   ref    V06 loc4         
N002 (  1,  1) [000255] ------------                 \--*  CNS_INT   ref    null

------------ BB23 [0F8..0FF), preds={BB22} succs={BB24}

***** BB23
STMT00071 (IL 0x0F8...0x0FA)
N005 ( 23, 21) [000260] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose
N003 (  1,  1) [000259] ------------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         
N004 (  2, 10) [000542] H----------- arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

------------ BB24 [0FF..100) (finret), preds={BB22,BB23} succs={}

***** BB24
STMT00070 (IL 0x0FF...0x0FF)
N001 (  0,  0) [000258] ------------              *  RETFILT   void  

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Build SSA representation
*************** In SsaBuilder::Build()
[SsaBuilder] Max block count is 25.

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB13 ( cond ) T0      try {       keep i try label hascall gcsafe 
BB03 [0002]  2  0    BB02,BB10             4     0 [072..08B)-> BB05 ( cond ) T0                  i Loop label target hascall gcsafe newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  2     0 [08B..08F)-> BB06 (always) T0                  i gcsafe bwd 
BB05 [0004]  1  0    BB03                  2     0 [08F..09C)                 T0                  i label target hascall gcsafe bwd 
BB06 [0005]  2  0    BB04,BB05             4     0 [09C..0BB)-> BB09 ( cond ) T0                  i label target gcsafe bwd 
BB07 [0006]  1  0    BB06                  2     0 [000..0D3)-> BB12 ( cond ) T0                  i hascall gcsafe newobj bwd 
BB08 [0041]  1  0    BB07                  2     0 [000..000)                 T0                  i internal label target gcsafe newobj bwd 
BB09 [0007]  2  0    BB06,BB08             4     0 [000..0E9)-> BB12 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB10 [0045]  1  0    BB09                  4     0 [000..0F2)-> BB03 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB11 [0061]  1  0    BB10                  0.50    [???..???)-> BB13 (always) T0                  internal gcsafe 
BB12 [0044]  2  0    BB07,BB09             0       [000..000)        (throw ) T0      }           i internal rare label target hascall gcsafe bwd 
BB13 [0057]  2       BB02,BB11             1       [0F4..0F8)-> BB15 ( cond )                     keep i label target gcsafe cfb 
BB14 [0058]  1       BB13                  0.50    [0F8..100)                                     i hascall gcsafe 
BB15 [0013]  2       BB13,BB14             1       [100..127)-> BB17 (always)                     i label target hascall gcsafe newobj 
BB16 [0014]  1       BB20                  2     1 [127..133)                                     i Loop label target hascall gcsafe bwd bwd-target 
BB17 [0015]  2       BB15,BB16             8     1 [000..147)-> BB19 ( cond )                     i label target gcsafe bwd 
BB18 [0053]  1       BB17                  2     1 [000..000)-> BB20 (always)                     i internal gcsafe bwd 
BB19 [0054]  1       BB17                  2     1 [000..000)                                     i internal label target gcsafe bwd 
BB20 [0055]  2       BB18,BB19             8     1 [???..???)-> BB16 ( cond )                     internal label target gcsafe bwd 
BB21 [0016]  1       BB20                  1       [147..153)        (return)                     i gcsafe 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB22 [0010]  1     0                       0       [0F4..0F8)-> BB24 ( cond )    H0 F fault {     keep i rare label target flet 
BB23 [0011]  1     0 BB22                  0       [0F8..0FF)                    H0               i rare hascall gcsafe 
BB24 [0012]  2     0 BB22,BB23             0       [0FF..100)        (finret)    H0   }           i rare label target 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB02..BB12 [070..0F4), Fault   at BB22..BB24 [0F4..100)
[SsaBuilder] Topologically sorted the graph.
[SsaBuilder::ComputeImmediateDom]

Inside fgBuildDomTree

After computing the Dominance Tree:
BB01 : BB22 BB02 
BB02 : BB13 BB03 
BB03 : BB06 BB05 BB04 
BB06 : BB12 BB09 BB07 
BB07 : BB08 
BB09 : BB10 
BB10 : BB11 
BB13 : BB15 BB14 
BB15 : BB17 
BB17 : BB20 BB19 BB18 
BB20 : BB21 BB16 
BB22 : BB24 BB23 

*************** In fgLocalVarLiveness()
In fgLocalVarLivenessInit
Tracked variable (40 out of 44) table:
V02 loc0          [   ref]: refCnt =   15, refCntWtd =  38   
V39 tmp28         [   int]: refCnt =    3, refCntWtd =  36   
V16 tmp5          [   ref]: refCnt =    4, refCntWtd =  32   
V27 tmp16         [   ref]: refCnt =    4, refCntWtd =  32   
V28 tmp17         [   ref]: refCnt =    6, refCntWtd =  24   
V22 tmp11         [   ref]: refCnt =    3, refCntWtd =  24   
V12 tmp1          [   ref]: refCnt =    9, refCntWtd =  18   
V19 tmp8          [   ref]: refCnt =    5, refCntWtd =  16   
V23 tmp12         [   ref]: refCnt =    2, refCntWtd =  16   
V42 tmp31         [   ref]: refCnt =    2, refCntWtd =  16   
V10 loc8          [   int]: refCnt =    4, refCntWtd =  13   
V38 tmp27         [   int]: refCnt =    3, refCntWtd =  12   
V06 loc4          [   ref]: refCnt =    8, refCntWtd =  11.50
V26 tmp15         [   ref]: refCnt =    3, refCntWtd =  10   
V03 loc1          [   ref]: refCnt =    5, refCntWtd =   8   
V29 tmp18         [   ref]: refCnt =    4, refCntWtd =   8   
V31 tmp20         [   ref]: refCnt =    4, refCntWtd =   8   
V07 loc5          [   ref]: refCnt =    3, refCntWtd =   8   
V17 tmp6          [   ref]: refCnt =    3, refCntWtd =   8   
V18 tmp7          [   ref]: refCnt =    3, refCntWtd =   8   
V20 tmp9          [   ref]: refCnt =    3, refCntWtd =   8   
V21 tmp10         [   ref]: refCnt =    3, refCntWtd =   8   
V24 tmp13         [   ref]: refCnt =    2, refCntWtd =   8   
V25 tmp14         [   ref]: refCnt =    2, refCntWtd =   8   
V13 tmp2          [   ref]: refCnt =    3, refCntWtd =   6   
V14 tmp3          [   ref]: refCnt =    3, refCntWtd =   6   
V15 tmp4          [   ref]: refCnt =    3, refCntWtd =   6   
V30 tmp19         [   ref]: refCnt =    3, refCntWtd =   6   
V36 tmp25         [   ref]: refCnt =    3, refCntWtd =   6   
V41 tmp30         [   ref]: refCnt =    3, refCntWtd =   6   
V00 arg0          [   ref]: refCnt =    3, refCntWtd =   3   
V01 arg1          [   ref]: refCnt =    3, refCntWtd =   3   
V04 loc2          [  bool]: refCnt =    2, refCntWtd =   5   
V32 tmp21         [   ref]: refCnt =    2, refCntWtd =   4   
V35 tmp24         [   ref]: refCnt =    2, refCntWtd =   4   
V40 tmp29         [   ref]: refCnt =    2, refCntWtd =   4   
V37 tmp26         [   int]: refCnt =    2, refCntWtd =   4   
V08 loc6          [   ref]: refCnt =    1, refCntWtd =   4   
V05 loc3          [   ref]: refCnt =    2, refCntWtd =   3   
V09 loc7          [   ref]: refCnt =    1, refCntWtd =   2   

*************** In fgPerBlockLocalVarLiveness()
BB01 USE(2)={                                        V00 V01            } + ByrefExposed + GcHeap
     DEF(13)={V02 V12 V06 V03 V31 V13 V14 V15 V30 V41         V04 V32 V05} + ByrefExposed* + GcHeap*

BB02 USE(1)={V06} + ByrefExposed + GcHeap
     DEF(0)={   } + ByrefExposed* + GcHeap*

BB03 USE(3)={    V06 V03             V04} + ByrefExposed + GcHeap
     DEF(4)={V16         V07 V17 V18    } + ByrefExposed* + GcHeap*

BB04 USE(3)={    V07 V17 V18        }
     DEF(3)={V19             V20 V21}

BB05 USE(4)={    V07 V17 V18         V05} + ByrefExposed + GcHeap
     DEF(3)={V19             V20 V21    } + ByrefExposed* + GcHeap*

BB06 USE(4)={V02     V19         V20 V21            } + ByrefExposed + GcHeap
     DEF(6)={    V22     V23 V26         V24 V25 V08} + ByrefExposed + GcHeap

BB07 USE(1)={V02    }
     DEF(1)={    V28}

BB08 USE(2)={V02 V28        } + ByrefExposed + GcHeap
     DEF(2)={        V26 V09} + ByrefExposed + GcHeap

BB09 USE(1)={V02    }
     DEF(1)={    V27}

BB10 USE(6)={V02 V27     V06 V26 V24 V25} + ByrefExposed + GcHeap
     DEF(1)={        V42                } + ByrefExposed* + GcHeap*

BB11 USE(0)={}
     DEF(0)={}

BB12 USE(0)={} + ByrefExposed + GcHeap
     DEF(0)={} + ByrefExposed* + GcHeap*

BB13 USE(1)={V06}
     DEF(0)={   }

BB14 USE(1)={V06} + ByrefExposed + GcHeap
     DEF(0)={   } + ByrefExposed* + GcHeap*

BB15 USE(1)={V02                    } + ByrefExposed + GcHeap
     DEF(5)={    V10 V29 V36 V35 V37} + ByrefExposed* + GcHeap*

BB16 USE(2)={V02 V10} + ByrefExposed + GcHeap
     DEF(1)={    V10} + ByrefExposed* + GcHeap*

BB17 USE(1)={V02    } + ByrefExposed + GcHeap
     DEF(1)={    V39}

BB18 USE(1)={V39    }
     DEF(1)={    V38}

BB19 USE(0)={   }
     DEF(1)={V38}

BB20 USE(2)={V10 V38}
     DEF(0)={       }

BB21 USE(1)={V02    } + ByrefExposed + GcHeap
     DEF(1)={    V40}

BB22 USE(1)={V06}
     DEF(0)={   }

BB23 USE(1)={V06} + ByrefExposed + GcHeap
     DEF(0)={   } + ByrefExposed* + GcHeap*

BB24 USE(0)={}
     DEF(0)={}

** Memory liveness computed, GcHeap states and ByrefExposed states match
*************** In fgInterBlockLocalVarLiveness()

BB liveness after fgLiveVarAnalysis():

BB01 IN (2)={            V00 V01        } + ByrefExposed + GcHeap
     OUT(5)={V02 V06 V03         V04 V05} + ByrefExposed + GcHeap

BB02 IN (5)={V02 V06 V03 V04 V05} + ByrefExposed + GcHeap
     OUT(5)={V02 V06 V03 V04 V05} + ByrefExposed + GcHeap

BB03 IN (5)={V02 V06 V03             V04 V05} + ByrefExposed + GcHeap
     OUT(8)={V02 V06 V03 V07 V17 V18 V04 V05} + ByrefExposed + GcHeap

BB04 IN (8)={V02     V06 V03 V07 V17 V18         V04 V05} + ByrefExposed + GcHeap
     OUT(8)={V02 V19 V06 V03             V20 V21 V04 V05} + ByrefExposed + GcHeap

BB05 IN (8)={V02     V06 V03 V07 V17 V18         V04 V05} + ByrefExposed + GcHeap
     OUT(8)={V02 V19 V06 V03             V20 V21 V04 V05} + ByrefExposed + GcHeap

BB06 IN (8)={V02 V19 V06     V03 V20 V21         V04 V05} + ByrefExposed + GcHeap
     OUT(8)={V02     V06 V26 V03         V24 V25 V04 V05} + ByrefExposed + GcHeap

BB07 IN (7)={V02     V06 V03 V24 V25 V04 V05} + ByrefExposed + GcHeap
     OUT(8)={V02 V28 V06 V03 V24 V25 V04 V05} + ByrefExposed + GcHeap

BB08 IN (8)={V02 V28 V06     V03 V24 V25 V04 V05} + ByrefExposed + GcHeap
     OUT(8)={V02     V06 V26 V03 V24 V25 V04 V05} + ByrefExposed + GcHeap

BB09 IN (8)={V02     V06 V26 V03 V24 V25 V04 V05} + ByrefExposed + GcHeap
     OUT(9)={V02 V27 V06 V26 V03 V24 V25 V04 V05} + ByrefExposed + GcHeap

BB10 IN (9)={V02 V27 V06 V26 V03 V24 V25 V04 V05} + ByrefExposed + GcHeap
     OUT(5)={V02     V06     V03         V04 V05} + ByrefExposed + GcHeap

BB11 IN (2)={V02 V06} + ByrefExposed + GcHeap
     OUT(2)={V02 V06} + ByrefExposed + GcHeap

BB12 IN (1)={V06} + ByrefExposed + GcHeap
     OUT(1)={V06} + ByrefExposed + GcHeap

BB13 IN (2)={V02 V06} + ByrefExposed + GcHeap
     OUT(2)={V02 V06} + ByrefExposed + GcHeap

BB14 IN (2)={V02 V06} + ByrefExposed + GcHeap
     OUT(1)={V02    } + ByrefExposed + GcHeap

BB15 IN (1)={V02    } + ByrefExposed + GcHeap
     OUT(2)={V02 V10} + ByrefExposed + GcHeap

BB16 IN (2)={V02 V10} + ByrefExposed + GcHeap
     OUT(2)={V02 V10} + ByrefExposed + GcHeap

BB17 IN (2)={V02     V10} + ByrefExposed + GcHeap
     OUT(3)={V02 V39 V10} + ByrefExposed + GcHeap

BB18 IN (3)={V02 V39 V10    } + ByrefExposed + GcHeap
     OUT(3)={V02     V10 V38} + ByrefExposed + GcHeap

BB19 IN (2)={V02 V10    } + ByrefExposed + GcHeap
     OUT(3)={V02 V10 V38} + ByrefExposed + GcHeap

BB20 IN (3)={V02 V10 V38} + ByrefExposed + GcHeap
     OUT(2)={V02 V10    } + ByrefExposed + GcHeap

BB21 IN (1)={V02} + ByrefExposed + GcHeap
     OUT(0)={   }

BB22 IN (1)={V06} + ByrefExposed + GcHeap
     OUT(1)={V06} + ByrefExposed + GcHeap

BB23 IN (1)={V06} + ByrefExposed + GcHeap
     OUT(0)={   }

BB24 IN (0)={}
     OUT(0)={}


Local V06 should not be enregistered because: live in/out of a handler
top level assign
removing stmt with no side effects

Removing statement STMT00038 (IL 0x0A8...  ???)
N003 (  1,  3) [000136] -A------R---              *  ASG       ref   
N002 (  1,  1) [000135] D------N----              +--*  LCL_VAR   ref    V08 loc6         
N001 (  1,  1) [000127] ------------              \--*  LCL_VAR   ref    V19 tmp8         
 in BB06 as useless:

top level assign
removing stmt with no side effects

Removing statement STMT00050 (IL 0x0C9...  ???)
N003 (  5,  4) [000190] -A------R---              *  ASG       ref   
N002 (  3,  2) [000189] D------N----              +--*  LCL_VAR   ref    V09 loc7         
N001 (  1,  1) [000188] ------------              \--*  LCL_VAR   ref    V28 tmp17        
 in BB08 as useless:

*************** In optRemoveRedundantZeroInits()
*************** In SsaBuilder::InsertPhiFunctions()
Inserting phi functions:
Added PHI definition for V10 at start of BB17.
Inserting phi definition for ByrefExposed at start of BB17.
Added PHI definition for V38 at start of BB20.
Inserting phi definition for ByrefExposed at start of BB15.
Inserting phi definition for ByrefExposed at start of BB13.
Inserting phi definition for ByrefExposed at start of BB22.
Inserting phi definition for ByrefExposed at start of BB03.
Added PHI definition for V26 at start of BB09.
Inserting phi definition for ByrefExposed at start of BB09.
Inserting phi definition for ByrefExposed at start of BB12.
Added PHI definition for V19 at start of BB06.
Added PHI definition for V20 at start of BB06.
Added PHI definition for V21 at start of BB06.
Inserting phi definition for ByrefExposed at start of BB06.
*************** In SsaBuilder::RenameVariables()

After fgSsaBuild:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB13 ( cond ) T0      try {       keep i try label hascall gcsafe 
BB03 [0002]  2  0    BB02,BB10             4     0 [072..08B)-> BB05 ( cond ) T0                  i Loop label target hascall gcsafe newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  2     0 [08B..08F)-> BB06 (always) T0                  i gcsafe bwd 
BB05 [0004]  1  0    BB03                  2     0 [08F..09C)                 T0                  i label target hascall gcsafe bwd 
BB06 [0005]  2  0    BB04,BB05             4     0 [09C..0BB)-> BB09 ( cond ) T0                  i label target gcsafe bwd 
BB07 [0006]  1  0    BB06                  2     0 [000..0D3)-> BB12 ( cond ) T0                  i hascall gcsafe newobj bwd 
BB08 [0041]  1  0    BB07                  2     0 [000..000)                 T0                  i internal label target gcsafe newobj bwd 
BB09 [0007]  2  0    BB06,BB08             4     0 [000..0E9)-> BB12 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB10 [0045]  1  0    BB09                  4     0 [000..0F2)-> BB03 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB11 [0061]  1  0    BB10                  0.50    [???..???)-> BB13 (always) T0                  internal gcsafe 
BB12 [0044]  2  0    BB07,BB09             0       [000..000)        (throw ) T0      }           i internal rare label target hascall gcsafe bwd 
BB13 [0057]  2       BB02,BB11             1       [0F4..0F8)-> BB15 ( cond )                     keep i label target gcsafe cfb 
BB14 [0058]  1       BB13                  0.50    [0F8..100)                                     i hascall gcsafe 
BB15 [0013]  2       BB13,BB14             1       [100..127)-> BB17 (always)                     i label target hascall gcsafe newobj 
BB16 [0014]  1       BB20                  2     1 [127..133)                                     i Loop label target hascall gcsafe bwd bwd-target 
BB17 [0015]  2       BB15,BB16             8     1 [000..147)-> BB19 ( cond )                     i label target gcsafe bwd 
BB18 [0053]  1       BB17                  2     1 [000..000)-> BB20 (always)                     i internal gcsafe bwd 
BB19 [0054]  1       BB17                  2     1 [000..000)                                     i internal label target gcsafe bwd 
BB20 [0055]  2       BB18,BB19             8     1 [???..???)-> BB16 ( cond )                     internal label target gcsafe bwd 
BB21 [0016]  1       BB20                  1       [147..153)        (return)                     i gcsafe 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB22 [0010]  1     0                       0       [0F4..0F8)-> BB24 ( cond )    H0 F fault {     keep i rare label target flet 
BB23 [0011]  1     0 BB22                  0       [0F8..0FF)                    H0               i rare hascall gcsafe 
BB24 [0012]  2     0 BB22,BB23             0       [0FF..100)        (finret)    H0   }           i rare label target 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..070), preds={} succs={BB02}

***** BB01
STMT00000 (IL 0x000...0x005)
N005 ( 16, 16) [000003] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000002] D------N----              +--*  LCL_VAR   ref    V12 tmp1         d:2
N003 ( 16, 16) [000001] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000000] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB01
STMT00002 (IL 0x005...  ???)
N003 (  1,  3) [000008] -A------R---              *  ASG       ref   
N002 (  1,  1) [000007] D------N----              +--*  LCL_VAR   ref    V02 loc0         d:2
N001 (  1,  1) [000006] ------------              \--*  LCL_VAR   ref    V12 tmp1         u:2

***** BB01
STMT00003 (IL 0x006...0x008)
N006 (  6,  6) [000012] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000011] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000440] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000009] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2
N002 (  1,  1) [000439] ------------              |     \--*  CNS_INT   long   32 field offset Fseq[outputFile]
N005 (  1,  1) [000010] ------------              \--*  LCL_VAR   ref    V01 arg1         u:1 (last use)

***** BB01
STMT00004 (IL 0x00D...0x00F)
N006 (  6,  6) [000016] -A-XG-------              *  ASG       int   
N004 (  4,  4) [000015] D--XG--N----              +--*  IND       int   
N003 (  2,  2) [000442] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000013] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2
N002 (  1,  1) [000441] ------------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]
N005 (  1,  1) [000014] ------------              \--*  CNS_INT   int    0

***** BB01
STMT00005 (IL 0x014...0x016)
N006 (  6,  6) [000020] -A-XG-------              *  ASG       int   
N004 (  4,  4) [000019] D--XG--N----              +--*  IND       int   
N003 (  2,  2) [000444] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000017] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2
N002 (  1,  1) [000443] ------------              |     \--*  CNS_INT   long   56 field offset Fseq[analyzersFinishedCount]
N005 (  1,  1) [000018] ------------              \--*  CNS_INT   int    0

***** BB01
STMT00006 (IL 0x01B...0x021)
N005 ( 16, 16) [000025] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000024] D------N----              +--*  LCL_VAR   ref    V13 tmp2         d:2
N003 ( 16, 16) [000023] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000022] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00074 (IL   ???...  ???)
N005 ( 16, 16) [000269] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000268] D------N----              +--*  LCL_VAR   ref    V30 tmp19        d:2
N003 ( 16, 16) [000267] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000266] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00079 (IL   ???...  ???)
N006 (  6,  9) [000283] -A-XGO------              *  ASG       int   
N004 (  4,  4) [000282] V--XGO-N----              +--*  IND       int   
N003 (  2,  2) [000448] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000280] ------------              |     +--*  LCL_VAR   ref    V30 tmp19        u:2
N002 (  1,  1) [000447] ------------              |     \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags]
N005 (  1,  4) [000281] ------------              \--*  CNS_INT   int    0x2000400

***** BB01
STMT00076 (IL   ???...  ???)
N006 (  6,  6) [000274] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000273] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000450] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000265] ------------              |     +--*  LCL_VAR   ref    V13 tmp2         u:2
N002 (  1,  1) [000449] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_task]
N005 (  1,  1) [000272] ------------              \--*  LCL_VAR   ref    V30 tmp19        u:2 (last use)

***** BB01
STMT00008 (IL 0x021...  ???)
N006 (  6,  6) [000030] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000029] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000452] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000021] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2
N002 (  1,  1) [000451] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun]
N005 (  1,  1) [000028] ------------              \--*  LCL_VAR   ref    V13 tmp2         u:2 (last use)

***** BB01
STMT00009 (IL 0x026...0x02C)
N005 ( 16, 16) [000035] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000034] D------N----              +--*  LCL_VAR   ref    V14 tmp3         d:2
N003 ( 16, 16) [000033] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000032] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00082 (IL   ???...  ???)
N013 ( 26, 35) [000292] -ACXG---R---              *  ASG       ref   
N012 (  4,  4) [000291] D--XG--N----              +--*  IND       ref   
N011 (  2,  2) [000455] -------N----              |  \--*  ADD       byref 
N009 (  1,  1) [000287] ------------              |     +--*  LCL_VAR   ref    V14 tmp3         u:2
N010 (  1,  1) [000454] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_array]
N008 ( 21, 30) [000300] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 18) [000299] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS
N003 (  2, 10) [000297] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e0b0028
N004 (  1,  1) [000298] ------------ arg1 in rdx     |  \--*  CNS_INT   int    14
N007 (  4, 12) [000295] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000458] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[Value]

***** BB01
STMT00011 (IL 0x02C...  ???)
N006 (  6,  6) [000040] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000039] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000460] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000031] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2
N002 (  1,  1) [000459] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers]
N005 (  1,  1) [000038] ------------              \--*  LCL_VAR   ref    V14 tmp3         u:2 (last use)

***** BB01
STMT00012 (IL 0x031...0x033)
N006 (  6,  6) [000044] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000043] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000462] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000041] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2
N002 (  1,  1) [000461] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter]
N005 (  1,  1) [000042] ------------              \--*  CNS_INT   ref    null

***** BB01
STMT00013 (IL 0x038...0x03E)
N005 ( 16, 16) [000049] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000048] D------N----              +--*  LCL_VAR   ref    V15 tmp4         d:2
N003 ( 16, 16) [000047] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000046] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00083 (IL   ???...  ???)
N005 ( 16, 10) [000303] --CXG-------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor
N003 (  1,  1) [000050] ------------ this in rcx  +--*  LCL_VAR   ref    V15 tmp4         u:2
N004 (  1,  1) [000302] ------------ arg1 in rdx  \--*  CNS_INT   ref    null

***** BB01
STMT00015 (IL 0x03E...  ???)
N006 (  6,  6) [000054] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000053] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000467] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000045] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2 (last use)
N002 (  1,  1) [000466] ------------              |     \--*  CNS_INT   long   40 field offset Fseq[output]
N005 (  1,  1) [000052] ------------              \--*  LCL_VAR   ref    V15 tmp4         u:2 (last use)

***** BB01
STMT00086 (IL   ???...  ???)
N003 ( 14,  5) [000316] -ACXG---R---              *  ASG       ref   
N002 (  1,  1) [000315] D------N----              +--*  LCL_VAR   ref    V31 tmp20        d:2
N001 ( 14,  5) [000055] --CXG-------              \--*  CALL      ref    System.Diagnostics.Process.GetCurrentProcess

***** BB01
STMT00087 (IL   ???...  ???)
N002 (  2,  2) [000314] ---X--------              *  NULLCHECK byte  
N001 (  1,  1) [000313] ------------              \--*  LCL_VAR   ref    V31 tmp20        u:2

***** BB01
STMT00084 (IL   ???...  ???)
N005 ( 16, 10) [000308] --CXG-------              *  CALL      void   System.Diagnostics.Process.EnsureState
N003 (  1,  1) [000306] ------------ this in rcx  +--*  LCL_VAR   ref    V31 tmp20        u:2
N004 (  1,  1) [000307] ------------ arg1 in rdx  \--*  CNS_INT   int    3

***** BB01
STMT00088 (IL   ???...  ???)
N008 ( 18, 13) [000322] -ACXG---R---              *  ASG       ref   
N007 (  1,  1) [000321] D------N----              +--*  LCL_VAR   ref    V32 tmp21        d:2
N006 ( 18, 13) [000311] --CXG-------              \--*  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule
N005 (  4,  7) [000310] ---XG------- arg0 in rcx     \--*  IND       int   
N004 (  2,  5) [000471] -------N----                    \--*  ADD       byref 
N002 (  1,  1) [000309] ------------                       +--*  LCL_VAR   ref    V31 tmp20        u:2 (last use)
N003 (  1,  4) [000470] ------------                       \--*  CNS_INT   long   200 field offset Fseq[_processId]

***** BB01
STMT00019 (IL   ???...  ???)
N006 (  4,  4) [000062] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000061] D------N----              +--*  LCL_VAR   ref    V03 loc1         d:2
N004 (  4,  4) [000320] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000474] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000319] ------------                    +--*  LCL_VAR   ref    V32 tmp21        u:2 (last use)
N002 (  1,  1) [000473] ------------                    \--*  CNS_INT   long   40 field offset Fseq[<FileName>k__BackingField]

***** BB01
STMT00090 (IL 0x053...  ???)
N002 (  2,  2) [000333] ---X--------              *  NULLCHECK byte  
N001 (  1,  1) [000332] ------------              \--*  LCL_VAR   ref    V03 loc1         u:2

***** BB01
STMT00021 (IL   ???...  ???)
N016 ( 32, 30) [000069] -ACXG---R---              *  ASG       int   
N015 (  1,  1) [000068] D------N----              +--*  LCL_VAR   int    V04 loc2         d:2
N014 ( 32, 30) [000329] --CXG-------              \--*  GE        int   
N012 ( 27, 28) [000340] --CXG-------                 +--*  CALL      int    System.String.IndexOf
N005 (  1,  1) [000339] ------------ arg4 out+20     |  +--*  CNS_INT   int    5
N007 (  3,  3) [000338] ---X-------- arg3 in r9      |  +--*  ARR_LENGTH int   
N006 (  1,  1) [000337] ------------                 |  |  \--*  LCL_VAR   ref    V03 loc1         u:2
N009 (  4, 12) [000476] #---G------- arg1 in rdx     |  +--*  IND       ref   
N008 (  2, 10) [000475] H-----------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E "dotnet.exe"
N010 (  1,  1) [000063] ------------ this in rcx     |  +--*  LCL_VAR   ref    V03 loc1         u:2
N011 (  1,  1) [000336] ------------ arg2 in r8      |  \--*  CNS_INT   int    0
N013 (  1,  1) [000328] ------------                 \--*  CNS_INT   int    0

***** BB01
STMT00023 (IL   ???...  ???)
N015 ( 26, 20) [000075] -ACXG---R---              *  ASG       ref   
N014 (  1,  1) [000074] D------N----              +--*  LCL_VAR   ref    V05 loc3         d:2
N013 ( 26, 20) [000494] -ACXG-------              \--*  COMMA     ref   
N003 ( 14,  5) [000482] -ACXG---R---                 +--*  ASG       ref   
N002 (  1,  1) [000481] D------N----                 |  +--*  LCL_VAR   ref    V41 tmp30        d:2
N001 ( 14,  5) [000070] --CXG-------                 |  \--*  CALL      ref    System.Environment.GetCommandLineArgs
N012 ( 12, 15) [000493] ---XG-------                 \--*  COMMA     ref   
N007 (  8, 11) [000487] ---X--------                    +--*  ARR_BOUNDS_CHECK_Rng void  
N004 (  1,  1) [000072] ------------                    |  +--*  CNS_INT   int    0
N006 (  3,  3) [000486] ---X--------                    |  \--*  ARR_LENGTH int   
N005 (  1,  1) [000483] ------------                    |     \--*  LCL_VAR   ref    V41 tmp30        u:2
N011 (  4,  4) [000073] a---G-------                    \--*  IND       ref   
N010 (  2,  2) [000492] -------N----                       \--*  ADD       byref 
N008 (  1,  1) [000484] ------------                          +--*  LCL_VAR   ref    V41 tmp30        u:2 (last use)
N009 (  1,  1) [000491] ------------                          \--*  CNS_INT   long   16 Fseq[#FirstElem]

***** BB01
STMT00024 (IL 0x068...0x06E)
N007 ( 23, 21) [000079] -ACXG---R---              *  ASG       ref   
N006 (  1,  1) [000078] D------N----              +--*  LCL_VAR   ref    V06 loc4         d:2
N005 ( 23, 21) [000077] --CXG-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator
N003 (  1,  1) [000076] ------------ this in rcx     +--*  LCL_VAR   ref    V00 arg0         u:1 (last use)
N004 (  2, 10) [000495] H----------- arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

------------ BB02 [070..072) -> BB13 (cond), preds={BB01} succs={BB03,BB13}

***** BB02
STMT00119 (IL 0x0E9...  ???)
N008 ( 27, 25) [000578] --CXG-------              *  JTRUE     void  
N007 ( 25, 23) [000571] J-CXG--N----              \--*  EQ        int   
N005 ( 23, 21) [000572] --CXG-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext
N003 (  1,  1) [000575] ------------ this in rcx     |  +--*  LCL_VAR   ref    V06 loc4         u:2
N004 (  2, 10) [000576] H----------- arg1 in r11     |  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11
N006 (  1,  1) [000577] ------------                 \--*  CNS_INT   int    0

------------ BB03 [072..08B) -> BB05 (cond), preds={BB02,BB10} succs={BB04,BB05}

***** BB03
STMT00026 (IL 0x072...0x079)
N007 ( 23, 21) [000088] -ACXG---R---              *  ASG       ref   
N006 (  1,  1) [000087] D------N----              +--*  LCL_VAR   ref    V07 loc5         d:2
N005 ( 23, 21) [000086] --CXG-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current
N003 (  1,  1) [000085] ------------ this in rcx     +--*  LCL_VAR   ref    V06 loc4         u:2
N004 (  2, 10) [000498] H----------- arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

***** BB03
STMT00027 (IL 0x07B...0x089)
N005 ( 16, 16) [000092] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000091] D------N----              +--*  LCL_VAR   ref    V16 tmp5         d:2
N003 ( 16, 16) [000090] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000089] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB03
STMT00092 (IL 0x080...  ???)
N006 (  6,  6) [000347] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000346] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000503] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000096] ------------              |     +--*  LCL_VAR   ref    V16 tmp5         u:2
N002 (  1,  1) [000502] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_fileName]
N005 (  1,  1) [000097] ------------              \--*  LCL_VAR   ref    V03 loc1         u:2

***** BB03
STMT00031 (IL   ???...0x089)
N003 (  1,  3) [000105] -A------R---              *  ASG       ref   
N002 (  1,  1) [000104] D------N----              +--*  LCL_VAR   ref    V17 tmp6         d:2
N001 (  1,  1) [000095] ------------              \--*  LCL_VAR   ref    V16 tmp5         u:2

***** BB03
STMT00032 (IL   ???...  ???)
N003 (  1,  3) [000108] -A------R---              *  ASG       ref   
N002 (  1,  1) [000107] D------N----              +--*  LCL_VAR   ref    V18 tmp7         d:2
N001 (  1,  1) [000099] ------------              \--*  LCL_VAR   ref    V16 tmp5         u:2 (last use)

***** BB03
STMT00030 (IL 0x087...  ???)
N004 (  5,  5) [000103] ------------              *  JTRUE     void  
N003 (  3,  3) [000102] J------N----              \--*  NE        int   
N001 (  1,  1) [000100] ------------                 +--*  LCL_VAR   int    V04 loc2         u:2
N002 (  1,  1) [000101] ------------                 \--*  CNS_INT   int    0

------------ BB04 [08B..08F) -> BB06 (always), preds={BB03} succs={BB06}

***** BB04
STMT00053 (IL   ???...0x08D)
N003 (  1,  3) [000203] -A------R---              *  ASG       ref   
N002 (  1,  1) [000202] D------N----              +--*  LCL_VAR   ref    V19 tmp8         d:4
N001 (  1,  1) [000110] ------------              \--*  LCL_VAR   ref    V17 tmp6         u:2 (last use)

***** BB04
STMT00054 (IL   ???...  ???)
N003 (  1,  3) [000206] -A------R---              *  ASG       ref   
N002 (  1,  1) [000205] D------N----              +--*  LCL_VAR   ref    V20 tmp9         d:4
N001 (  1,  1) [000111] ------------              \--*  LCL_VAR   ref    V18 tmp7         u:2 (last use)

***** BB04
STMT00055 (IL   ???...  ???)
N003 (  1,  3) [000209] -A------R---              *  ASG       ref   
N002 (  1,  1) [000208] D------N----              +--*  LCL_VAR   ref    V21 tmp10        d:4
N001 (  1,  1) [000201] ------------              \--*  LCL_VAR   ref    V07 loc5         u:2 (last use)

------------ BB05 [08F..09C), preds={BB03} succs={BB06}

***** BB05
STMT00033 (IL   ???...0x097)
N003 (  1,  3) [000119] -A------R---              *  ASG       ref   
N002 (  1,  1) [000118] D------N----              +--*  LCL_VAR   ref    V19 tmp8         d:3
N001 (  1,  1) [000112] ------------              \--*  LCL_VAR   ref    V17 tmp6         u:2 (last use)

***** BB05
STMT00034 (IL   ???...  ???)
N003 (  1,  3) [000122] -A------R---              *  ASG       ref   
N002 (  1,  1) [000121] D------N----              +--*  LCL_VAR   ref    V20 tmp9         d:3
N001 (  1,  1) [000113] ------------              \--*  LCL_VAR   ref    V18 tmp7         u:2 (last use)

***** BB05
STMT00035 (IL   ???...  ???)
N010 ( 20, 22) [000125] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000124] D------N----              +--*  LCL_VAR   ref    V21 tmp10        d:3
N008 ( 20, 22) [000117] --CXG-------              \--*  CALL      ref    System.String.Concat
N005 (  4, 12) [000505] #---G------- arg1 in rdx     +--*  IND       ref   
N004 (  2, 10) [000504] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E " "
N006 (  1,  1) [000114] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V05 loc3         u:2
N007 (  1,  1) [000116] ------------ arg2 in r8      \--*  LCL_VAR   ref    V07 loc5         u:2 (last use)

------------ BB06 [09C..0BB) -> BB09 (cond), preds={BB04,BB05} succs={BB07,BB09}

***** BB06
STMT00125 (IL   ???...  ???)
N005 (  0,  0) [000596] -A------R---              *  ASG       ref   
N004 (  0,  0) [000594] D------N----              +--*  LCL_VAR   ref    V21 tmp10        d:2
N003 (  0,  0) [000595] ------------              \--*  PHI       ref   
N001 (  0,  0) [000606] ------------ pred BB04       +--*  PHI_ARG   ref    V21 tmp10        u:4
N002 (  0,  0) [000603] ------------ pred BB05       \--*  PHI_ARG   ref    V21 tmp10        u:3

***** BB06
STMT00124 (IL   ???...  ???)
N005 (  0,  0) [000593] -A------R---              *  ASG       ref   
N004 (  0,  0) [000591] D------N----              +--*  LCL_VAR   ref    V20 tmp9         d:2
N003 (  0,  0) [000592] ------------              \--*  PHI       ref   
N001 (  0,  0) [000607] ------------ pred BB04       +--*  PHI_ARG   ref    V20 tmp9         u:4
N002 (  0,  0) [000604] ------------ pred BB05       \--*  PHI_ARG   ref    V20 tmp9         u:3

***** BB06
STMT00123 (IL   ???...  ???)
N005 (  0,  0) [000590] -A------R---              *  ASG       ref   
N004 (  0,  0) [000588] D------N----              +--*  LCL_VAR   ref    V19 tmp8         d:2
N003 (  0,  0) [000589] ------------              \--*  PHI       ref   
N001 (  0,  0) [000608] ------------ pred BB04       +--*  PHI_ARG   ref    V19 tmp8         u:4
N002 (  0,  0) [000605] ------------ pred BB05       \--*  PHI_ARG   ref    V19 tmp8         u:3

***** BB06
STMT00093 (IL   ???...  ???)
N006 (  6,  6) [000350] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000349] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000510] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000128] ------------              |     +--*  LCL_VAR   ref    V20 tmp9         u:2 (last use)
N002 (  1,  1) [000509] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_arguments]
N005 (  1,  1) [000129] ------------              \--*  LCL_VAR   ref    V21 tmp10        u:2 (last use)

***** BB06
STMT00094 (IL 0x0A1...  ???)
N006 (  7, 10) [000355] -A-XG-------              *  ASG       bool  
N004 (  5,  8) [000354] D--XG--N----              +--*  IND       bool  
N003 (  2,  5) [000512] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000131] ------------              |     +--*  LCL_VAR   ref    V19 tmp8         u:2
N002 (  1,  4) [000511] ------------              |     \--*  CNS_INT   long   130 field offset Fseq[<UseShellExecute>k__BackingField]
N005 (  1,  1) [000353] ------------              \--*  CNS_INT   int    0

***** BB06
STMT00040 (IL 0x0AA...0x0B9)
N006 (  4,  4) [000145] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000144] D------N----              +--*  LCL_VAR   ref    V23 tmp12        d:2
N004 (  4,  4) [000138] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000514] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000137] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000513] ------------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers]

***** BB06
STMT00039 (IL 0x0AA...  ???)
N006 (  4,  4) [000143] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000142] D------N----              +--*  LCL_VAR   ref    V22 tmp11        d:2
N004 (  4,  4) [000141] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000516] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000140] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000515] ------------                    \--*  CNS_INT   long   48 field offset Fseq[<>9__2]

***** BB06
STMT00042 (IL   ???...0x0B9)
N003 (  1,  3) [000153] -A------R---              *  ASG       ref   
N002 (  1,  1) [000152] D------N----              +--*  LCL_VAR   ref    V24 tmp13        d:2
N001 (  1,  1) [000146] ------------              \--*  LCL_VAR   ref    V23 tmp12        u:2 (last use)

***** BB06
STMT00043 (IL   ???...  ???)
N003 (  1,  3) [000156] -A------R---              *  ASG       ref   
N002 (  1,  1) [000155] D------N----              +--*  LCL_VAR   ref    V25 tmp14        d:2
N001 (  1,  1) [000139] ------------              \--*  LCL_VAR   ref    V19 tmp8         u:2 (last use)

***** BB06
STMT00044 (IL   ???...  ???)
N003 (  1,  3) [000159] -A------R---              *  ASG       ref   
N002 (  1,  1) [000158] D------N----              +--*  LCL_VAR   ref    V26 tmp15        d:2
N001 (  1,  1) [000147] ------------              \--*  LCL_VAR   ref    V22 tmp11        u:2

***** BB06
STMT00041 (IL   ???...  ???)
N004 (  5,  5) [000151] ------------              *  JTRUE     void  
N003 (  3,  3) [000150] J------N----              \--*  NE        int   
N001 (  1,  1) [000148] ------------                 +--*  LCL_VAR   ref    V22 tmp11        u:2 (last use)
N002 (  1,  1) [000149] ------------                 \--*  CNS_INT   ref    null

------------ BB07 [000..0D3) -> BB12 (cond), preds={BB06} succs={BB08,BB12}

***** BB07
STMT00048 (IL   ???...0x0CA)
N005 ( 16, 16) [000184] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000183] D------N----              +--*  LCL_VAR   ref    V28 tmp17        d:2
N003 ( 16, 16) [000182] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000181] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB07
STMT00095 (IL   ???...  ???)
N004 (  5,  5) [000359] ------------              *  JTRUE     void  
N003 (  3,  3) [000358] J------N----              \--*  EQ        int   
N001 (  1,  1) [000179] ------------                 +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000357] ------------                 \--*  CNS_INT   ref    null

------------ BB08 [000..000), preds={BB07} succs={BB09}

***** BB08
STMT00096 (IL   ???...  ???)
N006 (  6,  6) [000362] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000361] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000519] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000185] ------------              |     +--*  LCL_VAR   ref    V28 tmp17        u:2
N002 (  1,  1) [000518] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
N005 (  1,  1) [000360] ------------              \--*  LCL_VAR   ref    V02 loc0         u:2

***** BB08
STMT00097 (IL   ???...  ???)
N006 (  7, 15) [000366] -A-XG-------              *  ASG       long  
N004 (  4,  4) [000365] D--XG--N----              +--*  IND       long  
N003 (  2,  2) [000521] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000363] ------------              |     +--*  LCL_VAR   ref    V28 tmp17        u:2
N002 (  1,  1) [000520] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
N005 (  2, 10) [000180] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

***** BB08
STMT00051 (IL   ???...0x0CC)
N006 (  6,  6) [000192] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000191] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000523] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000178] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000522] ------------              |     \--*  CNS_INT   long   48 field offset Fseq[<>9__2]
N005 (  1,  1) [000187] ------------              \--*  LCL_VAR   ref    V28 tmp17        u:2

***** BB08
STMT00052 (IL   ???...0x0D1)
N003 (  1,  3) [000199] -A------R---              *  ASG       ref   
N002 (  1,  1) [000198] D------N----              +--*  LCL_VAR   ref    V26 tmp15        d:4
N001 (  1,  1) [000193] ------------              \--*  LCL_VAR   ref    V28 tmp17        u:2 (last use)

------------ BB09 [000..0E9) -> BB12 (cond), preds={BB06,BB08} succs={BB10,BB12}

***** BB09
STMT00122 (IL   ???...  ???)
N005 (  0,  0) [000587] -A------R---              *  ASG       ref   
N004 (  0,  0) [000585] D------N----              +--*  LCL_VAR   ref    V26 tmp15        d:3
N003 (  0,  0) [000586] ------------              \--*  PHI       ref   
N001 (  0,  0) [000602] ------------ pred BB08       +--*  PHI_ARG   ref    V26 tmp15        u:4
N002 (  0,  0) [000601] ------------ pred BB06       \--*  PHI_ARG   ref    V26 tmp15        u:2

***** BB09
STMT00045 (IL   ???...0x0E4)
N005 ( 16, 16) [000172] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000171] D------N----              +--*  LCL_VAR   ref    V27 tmp16        d:2
N003 ( 16, 16) [000170] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000169] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB09
STMT00099 (IL   ???...  ???)
N004 (  5,  5) [000371] ------------              *  JTRUE     void  
N003 (  3,  3) [000370] J------N----              \--*  EQ        int   
N001 (  1,  1) [000167] ------------                 +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000369] ------------                 \--*  CNS_INT   ref    null

------------ BB10 [000..0F2) -> BB03 (cond), preds={BB09} succs={BB11,BB03}

***** BB10
STMT00100 (IL   ???...  ???)
N006 (  6,  6) [000374] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000373] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000526] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000173] ------------              |     +--*  LCL_VAR   ref    V27 tmp16        u:2
N002 (  1,  1) [000525] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
N005 (  1,  1) [000372] ------------              \--*  LCL_VAR   ref    V02 loc0         u:2

***** BB10
STMT00101 (IL   ???...  ???)
N006 (  7, 15) [000378] -A-XG-------              *  ASG       long  
N004 (  4,  4) [000377] D--XG--N----              +--*  IND       long  
N003 (  2,  2) [000528] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000375] ------------              |     +--*  LCL_VAR   ref    V27 tmp16        u:2
N002 (  1,  1) [000527] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
N005 (  2, 10) [000168] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

***** BB10
STMT00047 (IL 0x0DF...  ???)
N013 ( 36, 21) [000177] --CXG-------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue
N010 ( 17, 11) [000533] -ACXG---R-L- arg1 SETUP   +--*  ASG       ref   
N009 (  1,  1) [000532] D------N----              |  +--*  LCL_VAR   ref    V42 tmp31        d:2
N008 ( 17, 11) [000176] --CXG-------              |  \--*  CALL      ref    SolutionAnalyzer.IPC.CreateSession
N005 (  1,  1) [000165] ------------ arg0 in rcx  |     +--*  LCL_VAR   ref    V25 tmp14        u:2 (last use)
N006 (  1,  1) [000166] ------------ arg1 in rdx  |     +--*  LCL_VAR   ref    V26 tmp15        u:3 (last use)
N007 (  1,  1) [000175] ------------ arg2 in r8   |     \--*  LCL_VAR   ref    V27 tmp16        u:2 (last use)
N011 (  1,  1) [000534] ------------ arg1 in rdx  +--*  LCL_VAR   ref    V42 tmp31        u:2 (last use)
N012 (  1,  1) [000164] ------------ this in rcx  \--*  LCL_VAR   ref    V24 tmp13        u:2 (last use)

***** BB10
STMT00025 (IL 0x0E9...0x0F0)
N008 ( 27, 25) [000084] --CXG-------              *  JTRUE     void  
N007 ( 25, 23) [000083] J-CXG--N----              \--*  NE        int   
N005 ( 23, 21) [000081] --CXG-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext
N003 (  1,  1) [000080] ------------ this in rcx     |  +--*  LCL_VAR   ref    V06 loc4         u:2
N004 (  2, 10) [000536] H----------- arg1 in r11     |  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11
N006 (  1,  1) [000082] ------------                 \--*  CNS_INT   int    0

------------ BB11 [???..???) -> BB13 (always), preds={BB10} succs={BB13}

------------ BB12 [000..000) (throw), preds={BB07,BB09} succs={}

***** BB12
STMT00102 (IL   ???...  ???)
N001 ( 14,  5) [000379] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

------------ BB13 [0F4..0F8) -> BB15 (cond), preds={BB02,BB11} succs={BB14,BB15}

***** BB13
STMT00116 (IL   ???...  ???)
N004 (  5,  5) [000431] ------------              *  JTRUE     void  
N003 (  3,  3) [000432] J------N----              \--*  EQ        int   
N001 (  1,  1) [000433] ------------                 +--*  LCL_VAR   ref    V06 loc4         u:2
N002 (  1,  1) [000434] ------------                 \--*  CNS_INT   ref    null

------------ BB14 [0F8..100), preds={BB13} succs={BB15}

***** BB14
STMT00117 (IL   ???...  ???)
N005 ( 23, 21) [000435] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose
N003 (  1,  1) [000436] ------------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         u:2 (last use)
N004 (  2, 10) [000539] H----------- arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

------------ BB15 [100..127) -> BB17 (always), preds={BB13,BB14} succs={BB17}

***** BB15
STMT00103 (IL 0x100...  ???)
N006 (  4,  4) [000384] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000383] D------N----              +--*  LCL_VAR   ref    V35 tmp24        d:2
N004 (  4,  4) [000213] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000546] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000212] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000545] ------------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers]

***** BB15
STMT00057 (IL   ???...  ???)
N009 (  9,  9) [000217] -A-XG---R---              *  ASG       int   
N008 (  4,  4) [000216] D--XG--N----              +--*  IND       int   
N007 (  2,  2) [000548] -------N----              |  \--*  ADD       byref 
N005 (  1,  1) [000211] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2
N006 (  1,  1) [000547] ------------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]
N004 (  4,  4) [000382] ---XG-------              \--*  IND       int   
N003 (  2,  2) [000550] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000381] ------------                    +--*  LCL_VAR   ref    V35 tmp24        u:2 (last use)
N002 (  1,  1) [000549] ------------                    \--*  CNS_INT   long   24 field offset Fseq[_size]

***** BB15
STMT00058 (IL 0x111...0x11D)
N005 ( 16, 16) [000224] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000223] D------N----              +--*  LCL_VAR   ref    V29 tmp18        d:2
N003 ( 16, 16) [000222] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000221] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB15
STMT00109 (IL   ???...  ???)
N006 (  4,  4) [000402] -A-XG---R---              *  ASG       int   
N005 (  1,  1) [000401] D------N----              +--*  LCL_VAR   int    V37 tmp26        d:2
N004 (  4,  4) [000220] ---XG-------              \--*  IND       int   
N003 (  2,  2) [000553] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000219] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000552] ------------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]

***** BB15
STMT00104 (IL   ???...  ???)
N005 ( 16, 16) [000389] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000388] D------N----              +--*  LCL_VAR   ref    V36 tmp25        d:2
N003 ( 16, 16) [000387] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000386] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB15
STMT00110 (IL   ???...  ???)
N007 ( 17, 12) [000406] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor
N004 (  1,  1) [000390] ------------ this in rcx  +--*  LCL_VAR   ref    V36 tmp25        u:2
N005 (  1,  1) [000404] ------------ arg1 in rdx  +--*  CNS_INT   int    0
N006 (  1,  1) [000405] ------------ arg2 in r8   \--*  CNS_INT   ref    null

***** BB15
STMT00106 (IL   ???...  ???)
N006 (  6,  6) [000394] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000393] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000559] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000225] ------------              |     +--*  LCL_VAR   ref    V29 tmp18        u:2
N002 (  1,  1) [000558] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_workItems]
N005 (  1,  1) [000392] ------------              \--*  LCL_VAR   ref    V36 tmp25        u:2 (last use)

***** BB15
STMT00108 (IL   ???...  ???)
N006 (  6,  6) [000400] -A-XG-------              *  ASG       int   
N004 (  4,  4) [000399] D--XG--N----              +--*  IND       int   
N003 (  2,  2) [000561] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000397] ------------              |     +--*  LCL_VAR   ref    V29 tmp18        u:2
N002 (  1,  1) [000560] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_workItemsToComplete]
N005 (  1,  1) [000398] ------------              \--*  LCL_VAR   int    V37 tmp26        u:2 (last use)

***** BB15
STMT00060 (IL 0x11D...  ???)
N006 (  6,  6) [000229] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000228] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000563] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000218] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000562] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter]
N005 (  1,  1) [000227] ------------              \--*  LCL_VAR   ref    V29 tmp18        u:2 (last use)

***** BB15
STMT00061 (IL 0x122...0x123)
N003 (  1,  3) [000232] -A------R---              *  ASG       int   
N002 (  1,  1) [000231] D------N----              +--*  LCL_VAR   int    V10 loc8         d:2
N001 (  1,  1) [000230] ------------              \--*  CNS_INT   int    0

------------ BB16 [127..133), preds={BB20} succs={BB17}

***** BB16
STMT00065 (IL 0x127...0x131)
N003 ( 15,  8) [000243] --CXG-------              *  CALL nullcheck void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0
N002 (  1,  1) [000242] ------------ this in rcx  \--*  LCL_VAR   ref    V02 loc0         u:2

***** BB16
STMT00066 (IL 0x12D...  ???)
N005 (  3,  3) [000248] -A------R---              *  ASG       int   
N004 (  1,  1) [000247] D------N----              +--*  LCL_VAR   int    V10 loc8         d:4
N003 (  3,  3) [000246] ------------              \--*  ADD       int   
N001 (  1,  1) [000244] ------------                 +--*  LCL_VAR   int    V10 loc8         u:3 (last use)
N002 (  1,  1) [000245] ------------                 \--*  CNS_INT   int    1

------------ BB17 [000..147) -> BB19 (cond), preds={BB15,BB16} succs={BB18,BB19}

***** BB17
STMT00120 (IL   ???...  ???)
N005 (  0,  0) [000581] -A------R---              *  ASG       int   
N004 (  0,  0) [000579] D------N----              +--*  LCL_VAR   int    V10 loc8         d:3
N003 (  0,  0) [000580] ------------              \--*  PHI       int   
N001 (  0,  0) [000598] ------------ pred BB16       +--*  PHI_ARG   int    V10 loc8         u:4
N002 (  0,  0) [000597] ------------ pred BB15       \--*  PHI_ARG   int    V10 loc8         u:2

***** BB17
STMT00114 (IL   ???...  ???)
N006 (  4,  4) [000424] -A-XG---R---              *  ASG       int   
N005 (  1,  1) [000423] D------N----              +--*  LCL_VAR   int    V39 tmp28        d:2
N004 (  4,  4) [000237] ---XG-------              \--*  IND       int   
N003 (  2,  2) [000566] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000236] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000565] ------------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]

***** BB17
STMT00111 (IL   ???...  ???)
N004 (  5,  5) [000414] ------------              *  JTRUE     void  
N003 (  3,  3) [000413] J------N----              \--*  GE        int   
N001 (  1,  1) [000412] ------------                 +--*  LCL_VAR   int    V39 tmp28        u:2
N002 (  1,  1) [000411] ------------                 \--*  CNS_INT   int    8

------------ BB18 [000..000) -> BB20 (always), preds={BB17} succs={BB20}

***** BB18
STMT00113 (IL   ???...  ???)
N003 (  1,  3) [000421] -A------R---              *  ASG       int   
N002 (  1,  1) [000420] D------N----              +--*  LCL_VAR   int    V38 tmp27        d:4
N001 (  1,  1) [000419] ------------              \--*  LCL_VAR   int    V39 tmp28        u:2 (last use)

------------ BB19 [000..000), preds={BB17} succs={BB20}

***** BB19
STMT00112 (IL   ???...  ???)
N003 (  1,  3) [000417] -A------R---              *  ASG       int   
N002 (  1,  1) [000416] D------N----              +--*  LCL_VAR   int    V38 tmp27        d:3
N001 (  1,  1) [000415] ------------              \--*  CNS_INT   int    8

------------ BB20 [???..???) -> BB16 (cond), preds={BB18,BB19} succs={BB21,BB16}

***** BB20
STMT00121 (IL   ???...  ???)
N005 (  0,  0) [000584] -A------R---              *  ASG       int   
N004 (  0,  0) [000582] D------N----              +--*  LCL_VAR   int    V38 tmp27        d:2
N003 (  0,  0) [000583] ------------              \--*  PHI       int   
N001 (  0,  0) [000600] ------------ pred BB18       +--*  PHI_ARG   int    V38 tmp27        u:4
N002 (  0,  0) [000599] ------------ pred BB19       \--*  PHI_ARG   int    V38 tmp27        u:3

***** BB20
STMT00064 (IL   ???...  ???)
N004 (  5,  5) [000241] ------------              *  JTRUE     void  
N003 (  3,  3) [000240] J------N----              \--*  LT        int   
N001 (  1,  1) [000233] ------------                 +--*  LCL_VAR   int    V10 loc8         u:3
N002 (  1,  1) [000422] ------------                 \--*  LCL_VAR   int    V38 tmp27        u:2 (last use)

------------ BB21 [147..153) (return), preds={BB20} succs={}

***** BB21
STMT00115 (IL 0x147...  ???)
N006 (  4,  4) [000429] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000428] D------N----              +--*  LCL_VAR   ref    V40 tmp29        d:2
N004 (  4,  4) [000250] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000568] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000249] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 (last use)
N002 (  1,  1) [000567] ------------                    \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun]

***** BB21
STMT00068 (IL   ???...  ???)
N005 (  5,  5) [000253] ---XG-------              *  RETURN    ref   
N004 (  4,  4) [000427] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000570] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000426] ------------                    +--*  LCL_VAR   ref    V40 tmp29        u:2 (last use)
N002 (  1,  1) [000569] ------------                    \--*  CNS_INT   long   8 field offset Fseq[_task]

------------ BB22 [0F4..0F8) -> BB24 (cond), preds={} succs={BB23,BB24}

***** BB22
STMT00069 (IL 0x0F4...0x0F6)
N004 (  5,  5) [000257] ------------              *  JTRUE     void  
N003 (  3,  3) [000256] J------N----              \--*  EQ        int   
N001 (  1,  1) [000254] ------------                 +--*  LCL_VAR   ref    V06 loc4         u:2
N002 (  1,  1) [000255] ------------                 \--*  CNS_INT   ref    null

------------ BB23 [0F8..0FF), preds={BB22} succs={BB24}

***** BB23
STMT00071 (IL 0x0F8...0x0FA)
N005 ( 23, 21) [000260] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose
N003 (  1,  1) [000259] ------------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         u:2 (last use)
N004 (  2, 10) [000542] H----------- arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

------------ BB24 [0FF..100) (finret), preds={BB22,BB23} succs={}

***** BB24
STMT00070 (IL 0x0FF...0x0FF)
N001 (  0,  0) [000258] ------------              *  RETFILT   void  

-------------------------------------------------------------------------------------------------------------------

*************** Finishing PHASE Build SSA representation
Trees after Build SSA representation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB13 ( cond ) T0      try {       keep i try label hascall gcsafe 
BB03 [0002]  2  0    BB02,BB10             4     0 [072..08B)-> BB05 ( cond ) T0                  i Loop label target hascall gcsafe newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  2     0 [08B..08F)-> BB06 (always) T0                  i gcsafe bwd 
BB05 [0004]  1  0    BB03                  2     0 [08F..09C)                 T0                  i label target hascall gcsafe bwd 
BB06 [0005]  2  0    BB04,BB05             4     0 [09C..0BB)-> BB09 ( cond ) T0                  i label target gcsafe bwd 
BB07 [0006]  1  0    BB06                  2     0 [000..0D3)-> BB12 ( cond ) T0                  i hascall gcsafe newobj bwd 
BB08 [0041]  1  0    BB07                  2     0 [000..000)                 T0                  i internal label target gcsafe newobj bwd 
BB09 [0007]  2  0    BB06,BB08             4     0 [000..0E9)-> BB12 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB10 [0045]  1  0    BB09                  4     0 [000..0F2)-> BB03 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB11 [0061]  1  0    BB10                  0.50    [???..???)-> BB13 (always) T0                  internal gcsafe 
BB12 [0044]  2  0    BB07,BB09             0       [000..000)        (throw ) T0      }           i internal rare label target hascall gcsafe bwd 
BB13 [0057]  2       BB02,BB11             1       [0F4..0F8)-> BB15 ( cond )                     keep i label target gcsafe cfb 
BB14 [0058]  1       BB13                  0.50    [0F8..100)                                     i hascall gcsafe 
BB15 [0013]  2       BB13,BB14             1       [100..127)-> BB17 (always)                     i label target hascall gcsafe newobj 
BB16 [0014]  1       BB20                  2     1 [127..133)                                     i Loop label target hascall gcsafe bwd bwd-target 
BB17 [0015]  2       BB15,BB16             8     1 [000..147)-> BB19 ( cond )                     i label target gcsafe bwd 
BB18 [0053]  1       BB17                  2     1 [000..000)-> BB20 (always)                     i internal gcsafe bwd 
BB19 [0054]  1       BB17                  2     1 [000..000)                                     i internal label target gcsafe bwd 
BB20 [0055]  2       BB18,BB19             8     1 [???..???)-> BB16 ( cond )                     internal label target gcsafe bwd 
BB21 [0016]  1       BB20                  1       [147..153)        (return)                     i gcsafe 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB22 [0010]  1     0                       0       [0F4..0F8)-> BB24 ( cond )    H0 F fault {     keep i rare label target flet 
BB23 [0011]  1     0 BB22                  0       [0F8..0FF)                    H0               i rare hascall gcsafe 
BB24 [0012]  2     0 BB22,BB23             0       [0FF..100)        (finret)    H0   }           i rare label target 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..070), preds={} succs={BB02}

***** BB01
STMT00000 (IL 0x000...0x005)
N005 ( 16, 16) [000003] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000002] D------N----              +--*  LCL_VAR   ref    V12 tmp1         d:2
N003 ( 16, 16) [000001] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000000] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB01
STMT00002 (IL 0x005...  ???)
N003 (  1,  3) [000008] -A------R---              *  ASG       ref   
N002 (  1,  1) [000007] D------N----              +--*  LCL_VAR   ref    V02 loc0         d:2
N001 (  1,  1) [000006] ------------              \--*  LCL_VAR   ref    V12 tmp1         u:2

***** BB01
STMT00003 (IL 0x006...0x008)
N006 (  6,  6) [000012] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000011] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000440] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000009] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2
N002 (  1,  1) [000439] ------------              |     \--*  CNS_INT   long   32 field offset Fseq[outputFile]
N005 (  1,  1) [000010] ------------              \--*  LCL_VAR   ref    V01 arg1         u:1 (last use)

***** BB01
STMT00004 (IL 0x00D...0x00F)
N006 (  6,  6) [000016] -A-XG-------              *  ASG       int   
N004 (  4,  4) [000015] D--XG--N----              +--*  IND       int   
N003 (  2,  2) [000442] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000013] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2
N002 (  1,  1) [000441] ------------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]
N005 (  1,  1) [000014] ------------              \--*  CNS_INT   int    0

***** BB01
STMT00005 (IL 0x014...0x016)
N006 (  6,  6) [000020] -A-XG-------              *  ASG       int   
N004 (  4,  4) [000019] D--XG--N----              +--*  IND       int   
N003 (  2,  2) [000444] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000017] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2
N002 (  1,  1) [000443] ------------              |     \--*  CNS_INT   long   56 field offset Fseq[analyzersFinishedCount]
N005 (  1,  1) [000018] ------------              \--*  CNS_INT   int    0

***** BB01
STMT00006 (IL 0x01B...0x021)
N005 ( 16, 16) [000025] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000024] D------N----              +--*  LCL_VAR   ref    V13 tmp2         d:2
N003 ( 16, 16) [000023] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000022] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00074 (IL   ???...  ???)
N005 ( 16, 16) [000269] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000268] D------N----              +--*  LCL_VAR   ref    V30 tmp19        d:2
N003 ( 16, 16) [000267] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000266] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00079 (IL   ???...  ???)
N006 (  6,  9) [000283] -A-XGO------              *  ASG       int   
N004 (  4,  4) [000282] V--XGO-N----              +--*  IND       int   
N003 (  2,  2) [000448] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000280] ------------              |     +--*  LCL_VAR   ref    V30 tmp19        u:2
N002 (  1,  1) [000447] ------------              |     \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags]
N005 (  1,  4) [000281] ------------              \--*  CNS_INT   int    0x2000400

***** BB01
STMT00076 (IL   ???...  ???)
N006 (  6,  6) [000274] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000273] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000450] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000265] ------------              |     +--*  LCL_VAR   ref    V13 tmp2         u:2
N002 (  1,  1) [000449] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_task]
N005 (  1,  1) [000272] ------------              \--*  LCL_VAR   ref    V30 tmp19        u:2 (last use)

***** BB01
STMT00008 (IL 0x021...  ???)
N006 (  6,  6) [000030] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000029] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000452] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000021] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2
N002 (  1,  1) [000451] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun]
N005 (  1,  1) [000028] ------------              \--*  LCL_VAR   ref    V13 tmp2         u:2 (last use)

***** BB01
STMT00009 (IL 0x026...0x02C)
N005 ( 16, 16) [000035] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000034] D------N----              +--*  LCL_VAR   ref    V14 tmp3         d:2
N003 ( 16, 16) [000033] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000032] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00082 (IL   ???...  ???)
N013 ( 26, 35) [000292] -ACXG---R---              *  ASG       ref   
N012 (  4,  4) [000291] D--XG--N----              +--*  IND       ref   
N011 (  2,  2) [000455] -------N----              |  \--*  ADD       byref 
N009 (  1,  1) [000287] ------------              |     +--*  LCL_VAR   ref    V14 tmp3         u:2
N010 (  1,  1) [000454] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_array]
N008 ( 21, 30) [000300] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 18) [000299] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS
N003 (  2, 10) [000297] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e0b0028
N004 (  1,  1) [000298] ------------ arg1 in rdx     |  \--*  CNS_INT   int    14
N007 (  4, 12) [000295] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000458] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[Value]

***** BB01
STMT00011 (IL 0x02C...  ???)
N006 (  6,  6) [000040] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000039] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000460] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000031] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2
N002 (  1,  1) [000459] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers]
N005 (  1,  1) [000038] ------------              \--*  LCL_VAR   ref    V14 tmp3         u:2 (last use)

***** BB01
STMT00012 (IL 0x031...0x033)
N006 (  6,  6) [000044] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000043] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000462] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000041] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2
N002 (  1,  1) [000461] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter]
N005 (  1,  1) [000042] ------------              \--*  CNS_INT   ref    null

***** BB01
STMT00013 (IL 0x038...0x03E)
N005 ( 16, 16) [000049] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000048] D------N----              +--*  LCL_VAR   ref    V15 tmp4         d:2
N003 ( 16, 16) [000047] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000046] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00083 (IL   ???...  ???)
N005 ( 16, 10) [000303] --CXG-------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor
N003 (  1,  1) [000050] ------------ this in rcx  +--*  LCL_VAR   ref    V15 tmp4         u:2
N004 (  1,  1) [000302] ------------ arg1 in rdx  \--*  CNS_INT   ref    null

***** BB01
STMT00015 (IL 0x03E...  ???)
N006 (  6,  6) [000054] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000053] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000467] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000045] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2 (last use)
N002 (  1,  1) [000466] ------------              |     \--*  CNS_INT   long   40 field offset Fseq[output]
N005 (  1,  1) [000052] ------------              \--*  LCL_VAR   ref    V15 tmp4         u:2 (last use)

***** BB01
STMT00086 (IL   ???...  ???)
N003 ( 14,  5) [000316] -ACXG---R---              *  ASG       ref   
N002 (  1,  1) [000315] D------N----              +--*  LCL_VAR   ref    V31 tmp20        d:2
N001 ( 14,  5) [000055] --CXG-------              \--*  CALL      ref    System.Diagnostics.Process.GetCurrentProcess

***** BB01
STMT00087 (IL   ???...  ???)
N002 (  2,  2) [000314] ---X--------              *  NULLCHECK byte  
N001 (  1,  1) [000313] ------------              \--*  LCL_VAR   ref    V31 tmp20        u:2

***** BB01
STMT00084 (IL   ???...  ???)
N005 ( 16, 10) [000308] --CXG-------              *  CALL      void   System.Diagnostics.Process.EnsureState
N003 (  1,  1) [000306] ------------ this in rcx  +--*  LCL_VAR   ref    V31 tmp20        u:2
N004 (  1,  1) [000307] ------------ arg1 in rdx  \--*  CNS_INT   int    3

***** BB01
STMT00088 (IL   ???...  ???)
N008 ( 18, 13) [000322] -ACXG---R---              *  ASG       ref   
N007 (  1,  1) [000321] D------N----              +--*  LCL_VAR   ref    V32 tmp21        d:2
N006 ( 18, 13) [000311] --CXG-------              \--*  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule
N005 (  4,  7) [000310] ---XG------- arg0 in rcx     \--*  IND       int   
N004 (  2,  5) [000471] -------N----                    \--*  ADD       byref 
N002 (  1,  1) [000309] ------------                       +--*  LCL_VAR   ref    V31 tmp20        u:2 (last use)
N003 (  1,  4) [000470] ------------                       \--*  CNS_INT   long   200 field offset Fseq[_processId]

***** BB01
STMT00019 (IL   ???...  ???)
N006 (  4,  4) [000062] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000061] D------N----              +--*  LCL_VAR   ref    V03 loc1         d:2
N004 (  4,  4) [000320] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000474] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000319] ------------                    +--*  LCL_VAR   ref    V32 tmp21        u:2 (last use)
N002 (  1,  1) [000473] ------------                    \--*  CNS_INT   long   40 field offset Fseq[<FileName>k__BackingField]

***** BB01
STMT00090 (IL 0x053...  ???)
N002 (  2,  2) [000333] ---X--------              *  NULLCHECK byte  
N001 (  1,  1) [000332] ------------              \--*  LCL_VAR   ref    V03 loc1         u:2

***** BB01
STMT00021 (IL   ???...  ???)
N016 ( 32, 30) [000069] -ACXG---R---              *  ASG       int   
N015 (  1,  1) [000068] D------N----              +--*  LCL_VAR   int    V04 loc2         d:2
N014 ( 32, 30) [000329] --CXG-------              \--*  GE        int   
N012 ( 27, 28) [000340] --CXG-------                 +--*  CALL      int    System.String.IndexOf
N005 (  1,  1) [000339] ------------ arg4 out+20     |  +--*  CNS_INT   int    5
N007 (  3,  3) [000338] ---X-------- arg3 in r9      |  +--*  ARR_LENGTH int   
N006 (  1,  1) [000337] ------------                 |  |  \--*  LCL_VAR   ref    V03 loc1         u:2
N009 (  4, 12) [000476] #---G------- arg1 in rdx     |  +--*  IND       ref   
N008 (  2, 10) [000475] H-----------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E "dotnet.exe"
N010 (  1,  1) [000063] ------------ this in rcx     |  +--*  LCL_VAR   ref    V03 loc1         u:2
N011 (  1,  1) [000336] ------------ arg2 in r8      |  \--*  CNS_INT   int    0
N013 (  1,  1) [000328] ------------                 \--*  CNS_INT   int    0

***** BB01
STMT00023 (IL   ???...  ???)
N015 ( 26, 20) [000075] -ACXG---R---              *  ASG       ref   
N014 (  1,  1) [000074] D------N----              +--*  LCL_VAR   ref    V05 loc3         d:2
N013 ( 26, 20) [000494] -ACXG-------              \--*  COMMA     ref   
N003 ( 14,  5) [000482] -ACXG---R---                 +--*  ASG       ref   
N002 (  1,  1) [000481] D------N----                 |  +--*  LCL_VAR   ref    V41 tmp30        d:2
N001 ( 14,  5) [000070] --CXG-------                 |  \--*  CALL      ref    System.Environment.GetCommandLineArgs
N012 ( 12, 15) [000493] ---XG-------                 \--*  COMMA     ref   
N007 (  8, 11) [000487] ---X--------                    +--*  ARR_BOUNDS_CHECK_Rng void  
N004 (  1,  1) [000072] ------------                    |  +--*  CNS_INT   int    0
N006 (  3,  3) [000486] ---X--------                    |  \--*  ARR_LENGTH int   
N005 (  1,  1) [000483] ------------                    |     \--*  LCL_VAR   ref    V41 tmp30        u:2
N011 (  4,  4) [000073] a---G-------                    \--*  IND       ref   
N010 (  2,  2) [000492] -------N----                       \--*  ADD       byref 
N008 (  1,  1) [000484] ------------                          +--*  LCL_VAR   ref    V41 tmp30        u:2 (last use)
N009 (  1,  1) [000491] ------------                          \--*  CNS_INT   long   16 Fseq[#FirstElem]

***** BB01
STMT00024 (IL 0x068...0x06E)
N007 ( 23, 21) [000079] -ACXG---R---              *  ASG       ref   
N006 (  1,  1) [000078] D------N----              +--*  LCL_VAR   ref    V06 loc4         d:2
N005 ( 23, 21) [000077] --CXG-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator
N003 (  1,  1) [000076] ------------ this in rcx     +--*  LCL_VAR   ref    V00 arg0         u:1 (last use)
N004 (  2, 10) [000495] H----------- arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

------------ BB02 [070..072) -> BB13 (cond), preds={BB01} succs={BB03,BB13}

***** BB02
STMT00119 (IL 0x0E9...  ???)
N008 ( 27, 25) [000578] --CXG-------              *  JTRUE     void  
N007 ( 25, 23) [000571] J-CXG--N----              \--*  EQ        int   
N005 ( 23, 21) [000572] --CXG-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext
N003 (  1,  1) [000575] ------------ this in rcx     |  +--*  LCL_VAR   ref    V06 loc4         u:2
N004 (  2, 10) [000576] H----------- arg1 in r11     |  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11
N006 (  1,  1) [000577] ------------                 \--*  CNS_INT   int    0

------------ BB03 [072..08B) -> BB05 (cond), preds={BB02,BB10} succs={BB04,BB05}

***** BB03
STMT00026 (IL 0x072...0x079)
N007 ( 23, 21) [000088] -ACXG---R---              *  ASG       ref   
N006 (  1,  1) [000087] D------N----              +--*  LCL_VAR   ref    V07 loc5         d:2
N005 ( 23, 21) [000086] --CXG-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current
N003 (  1,  1) [000085] ------------ this in rcx     +--*  LCL_VAR   ref    V06 loc4         u:2
N004 (  2, 10) [000498] H----------- arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

***** BB03
STMT00027 (IL 0x07B...0x089)
N005 ( 16, 16) [000092] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000091] D------N----              +--*  LCL_VAR   ref    V16 tmp5         d:2
N003 ( 16, 16) [000090] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000089] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB03
STMT00092 (IL 0x080...  ???)
N006 (  6,  6) [000347] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000346] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000503] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000096] ------------              |     +--*  LCL_VAR   ref    V16 tmp5         u:2
N002 (  1,  1) [000502] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_fileName]
N005 (  1,  1) [000097] ------------              \--*  LCL_VAR   ref    V03 loc1         u:2

***** BB03
STMT00031 (IL   ???...0x089)
N003 (  1,  3) [000105] -A------R---              *  ASG       ref   
N002 (  1,  1) [000104] D------N----              +--*  LCL_VAR   ref    V17 tmp6         d:2
N001 (  1,  1) [000095] ------------              \--*  LCL_VAR   ref    V16 tmp5         u:2

***** BB03
STMT00032 (IL   ???...  ???)
N003 (  1,  3) [000108] -A------R---              *  ASG       ref   
N002 (  1,  1) [000107] D------N----              +--*  LCL_VAR   ref    V18 tmp7         d:2
N001 (  1,  1) [000099] ------------              \--*  LCL_VAR   ref    V16 tmp5         u:2 (last use)

***** BB03
STMT00030 (IL 0x087...  ???)
N004 (  5,  5) [000103] ------------              *  JTRUE     void  
N003 (  3,  3) [000102] J------N----              \--*  NE        int   
N001 (  1,  1) [000100] ------------                 +--*  LCL_VAR   int    V04 loc2         u:2
N002 (  1,  1) [000101] ------------                 \--*  CNS_INT   int    0

------------ BB04 [08B..08F) -> BB06 (always), preds={BB03} succs={BB06}

***** BB04
STMT00053 (IL   ???...0x08D)
N003 (  1,  3) [000203] -A------R---              *  ASG       ref   
N002 (  1,  1) [000202] D------N----              +--*  LCL_VAR   ref    V19 tmp8         d:4
N001 (  1,  1) [000110] ------------              \--*  LCL_VAR   ref    V17 tmp6         u:2 (last use)

***** BB04
STMT00054 (IL   ???...  ???)
N003 (  1,  3) [000206] -A------R---              *  ASG       ref   
N002 (  1,  1) [000205] D------N----              +--*  LCL_VAR   ref    V20 tmp9         d:4
N001 (  1,  1) [000111] ------------              \--*  LCL_VAR   ref    V18 tmp7         u:2 (last use)

***** BB04
STMT00055 (IL   ???...  ???)
N003 (  1,  3) [000209] -A------R---              *  ASG       ref   
N002 (  1,  1) [000208] D------N----              +--*  LCL_VAR   ref    V21 tmp10        d:4
N001 (  1,  1) [000201] ------------              \--*  LCL_VAR   ref    V07 loc5         u:2 (last use)

------------ BB05 [08F..09C), preds={BB03} succs={BB06}

***** BB05
STMT00033 (IL   ???...0x097)
N003 (  1,  3) [000119] -A------R---              *  ASG       ref   
N002 (  1,  1) [000118] D------N----              +--*  LCL_VAR   ref    V19 tmp8         d:3
N001 (  1,  1) [000112] ------------              \--*  LCL_VAR   ref    V17 tmp6         u:2 (last use)

***** BB05
STMT00034 (IL   ???...  ???)
N003 (  1,  3) [000122] -A------R---              *  ASG       ref   
N002 (  1,  1) [000121] D------N----              +--*  LCL_VAR   ref    V20 tmp9         d:3
N001 (  1,  1) [000113] ------------              \--*  LCL_VAR   ref    V18 tmp7         u:2 (last use)

***** BB05
STMT00035 (IL   ???...  ???)
N010 ( 20, 22) [000125] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000124] D------N----              +--*  LCL_VAR   ref    V21 tmp10        d:3
N008 ( 20, 22) [000117] --CXG-------              \--*  CALL      ref    System.String.Concat
N005 (  4, 12) [000505] #---G------- arg1 in rdx     +--*  IND       ref   
N004 (  2, 10) [000504] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E " "
N006 (  1,  1) [000114] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V05 loc3         u:2
N007 (  1,  1) [000116] ------------ arg2 in r8      \--*  LCL_VAR   ref    V07 loc5         u:2 (last use)

------------ BB06 [09C..0BB) -> BB09 (cond), preds={BB04,BB05} succs={BB07,BB09}

***** BB06
STMT00125 (IL   ???...  ???)
N005 (  0,  0) [000596] -A------R---              *  ASG       ref   
N004 (  0,  0) [000594] D------N----              +--*  LCL_VAR   ref    V21 tmp10        d:2
N003 (  0,  0) [000595] ------------              \--*  PHI       ref   
N001 (  0,  0) [000606] ------------ pred BB04       +--*  PHI_ARG   ref    V21 tmp10        u:4
N002 (  0,  0) [000603] ------------ pred BB05       \--*  PHI_ARG   ref    V21 tmp10        u:3

***** BB06
STMT00124 (IL   ???...  ???)
N005 (  0,  0) [000593] -A------R---              *  ASG       ref   
N004 (  0,  0) [000591] D------N----              +--*  LCL_VAR   ref    V20 tmp9         d:2
N003 (  0,  0) [000592] ------------              \--*  PHI       ref   
N001 (  0,  0) [000607] ------------ pred BB04       +--*  PHI_ARG   ref    V20 tmp9         u:4
N002 (  0,  0) [000604] ------------ pred BB05       \--*  PHI_ARG   ref    V20 tmp9         u:3

***** BB06
STMT00123 (IL   ???...  ???)
N005 (  0,  0) [000590] -A------R---              *  ASG       ref   
N004 (  0,  0) [000588] D------N----              +--*  LCL_VAR   ref    V19 tmp8         d:2
N003 (  0,  0) [000589] ------------              \--*  PHI       ref   
N001 (  0,  0) [000608] ------------ pred BB04       +--*  PHI_ARG   ref    V19 tmp8         u:4
N002 (  0,  0) [000605] ------------ pred BB05       \--*  PHI_ARG   ref    V19 tmp8         u:3

***** BB06
STMT00093 (IL   ???...  ???)
N006 (  6,  6) [000350] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000349] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000510] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000128] ------------              |     +--*  LCL_VAR   ref    V20 tmp9         u:2 (last use)
N002 (  1,  1) [000509] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_arguments]
N005 (  1,  1) [000129] ------------              \--*  LCL_VAR   ref    V21 tmp10        u:2 (last use)

***** BB06
STMT00094 (IL 0x0A1...  ???)
N006 (  7, 10) [000355] -A-XG-------              *  ASG       bool  
N004 (  5,  8) [000354] D--XG--N----              +--*  IND       bool  
N003 (  2,  5) [000512] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000131] ------------              |     +--*  LCL_VAR   ref    V19 tmp8         u:2
N002 (  1,  4) [000511] ------------              |     \--*  CNS_INT   long   130 field offset Fseq[<UseShellExecute>k__BackingField]
N005 (  1,  1) [000353] ------------              \--*  CNS_INT   int    0

***** BB06
STMT00040 (IL 0x0AA...0x0B9)
N006 (  4,  4) [000145] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000144] D------N----              +--*  LCL_VAR   ref    V23 tmp12        d:2
N004 (  4,  4) [000138] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000514] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000137] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000513] ------------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers]

***** BB06
STMT00039 (IL 0x0AA...  ???)
N006 (  4,  4) [000143] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000142] D------N----              +--*  LCL_VAR   ref    V22 tmp11        d:2
N004 (  4,  4) [000141] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000516] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000140] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000515] ------------                    \--*  CNS_INT   long   48 field offset Fseq[<>9__2]

***** BB06
STMT00042 (IL   ???...0x0B9)
N003 (  1,  3) [000153] -A------R---              *  ASG       ref   
N002 (  1,  1) [000152] D------N----              +--*  LCL_VAR   ref    V24 tmp13        d:2
N001 (  1,  1) [000146] ------------              \--*  LCL_VAR   ref    V23 tmp12        u:2 (last use)

***** BB06
STMT00043 (IL   ???...  ???)
N003 (  1,  3) [000156] -A------R---              *  ASG       ref   
N002 (  1,  1) [000155] D------N----              +--*  LCL_VAR   ref    V25 tmp14        d:2
N001 (  1,  1) [000139] ------------              \--*  LCL_VAR   ref    V19 tmp8         u:2 (last use)

***** BB06
STMT00044 (IL   ???...  ???)
N003 (  1,  3) [000159] -A------R---              *  ASG       ref   
N002 (  1,  1) [000158] D------N----              +--*  LCL_VAR   ref    V26 tmp15        d:2
N001 (  1,  1) [000147] ------------              \--*  LCL_VAR   ref    V22 tmp11        u:2

***** BB06
STMT00041 (IL   ???...  ???)
N004 (  5,  5) [000151] ------------              *  JTRUE     void  
N003 (  3,  3) [000150] J------N----              \--*  NE        int   
N001 (  1,  1) [000148] ------------                 +--*  LCL_VAR   ref    V22 tmp11        u:2 (last use)
N002 (  1,  1) [000149] ------------                 \--*  CNS_INT   ref    null

------------ BB07 [000..0D3) -> BB12 (cond), preds={BB06} succs={BB08,BB12}

***** BB07
STMT00048 (IL   ???...0x0CA)
N005 ( 16, 16) [000184] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000183] D------N----              +--*  LCL_VAR   ref    V28 tmp17        d:2
N003 ( 16, 16) [000182] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000181] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB07
STMT00095 (IL   ???...  ???)
N004 (  5,  5) [000359] ------------              *  JTRUE     void  
N003 (  3,  3) [000358] J------N----              \--*  EQ        int   
N001 (  1,  1) [000179] ------------                 +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000357] ------------                 \--*  CNS_INT   ref    null

------------ BB08 [000..000), preds={BB07} succs={BB09}

***** BB08
STMT00096 (IL   ???...  ???)
N006 (  6,  6) [000362] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000361] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000519] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000185] ------------              |     +--*  LCL_VAR   ref    V28 tmp17        u:2
N002 (  1,  1) [000518] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
N005 (  1,  1) [000360] ------------              \--*  LCL_VAR   ref    V02 loc0         u:2

***** BB08
STMT00097 (IL   ???...  ???)
N006 (  7, 15) [000366] -A-XG-------              *  ASG       long  
N004 (  4,  4) [000365] D--XG--N----              +--*  IND       long  
N003 (  2,  2) [000521] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000363] ------------              |     +--*  LCL_VAR   ref    V28 tmp17        u:2
N002 (  1,  1) [000520] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
N005 (  2, 10) [000180] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

***** BB08
STMT00051 (IL   ???...0x0CC)
N006 (  6,  6) [000192] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000191] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000523] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000178] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000522] ------------              |     \--*  CNS_INT   long   48 field offset Fseq[<>9__2]
N005 (  1,  1) [000187] ------------              \--*  LCL_VAR   ref    V28 tmp17        u:2

***** BB08
STMT00052 (IL   ???...0x0D1)
N003 (  1,  3) [000199] -A------R---              *  ASG       ref   
N002 (  1,  1) [000198] D------N----              +--*  LCL_VAR   ref    V26 tmp15        d:4
N001 (  1,  1) [000193] ------------              \--*  LCL_VAR   ref    V28 tmp17        u:2 (last use)

------------ BB09 [000..0E9) -> BB12 (cond), preds={BB06,BB08} succs={BB10,BB12}

***** BB09
STMT00122 (IL   ???...  ???)
N005 (  0,  0) [000587] -A------R---              *  ASG       ref   
N004 (  0,  0) [000585] D------N----              +--*  LCL_VAR   ref    V26 tmp15        d:3
N003 (  0,  0) [000586] ------------              \--*  PHI       ref   
N001 (  0,  0) [000602] ------------ pred BB08       +--*  PHI_ARG   ref    V26 tmp15        u:4
N002 (  0,  0) [000601] ------------ pred BB06       \--*  PHI_ARG   ref    V26 tmp15        u:2

***** BB09
STMT00045 (IL   ???...0x0E4)
N005 ( 16, 16) [000172] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000171] D------N----              +--*  LCL_VAR   ref    V27 tmp16        d:2
N003 ( 16, 16) [000170] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000169] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB09
STMT00099 (IL   ???...  ???)
N004 (  5,  5) [000371] ------------              *  JTRUE     void  
N003 (  3,  3) [000370] J------N----              \--*  EQ        int   
N001 (  1,  1) [000167] ------------                 +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000369] ------------                 \--*  CNS_INT   ref    null

------------ BB10 [000..0F2) -> BB03 (cond), preds={BB09} succs={BB11,BB03}

***** BB10
STMT00100 (IL   ???...  ???)
N006 (  6,  6) [000374] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000373] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000526] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000173] ------------              |     +--*  LCL_VAR   ref    V27 tmp16        u:2
N002 (  1,  1) [000525] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
N005 (  1,  1) [000372] ------------              \--*  LCL_VAR   ref    V02 loc0         u:2

***** BB10
STMT00101 (IL   ???...  ???)
N006 (  7, 15) [000378] -A-XG-------              *  ASG       long  
N004 (  4,  4) [000377] D--XG--N----              +--*  IND       long  
N003 (  2,  2) [000528] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000375] ------------              |     +--*  LCL_VAR   ref    V27 tmp16        u:2
N002 (  1,  1) [000527] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
N005 (  2, 10) [000168] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

***** BB10
STMT00047 (IL 0x0DF...  ???)
N013 ( 36, 21) [000177] --CXG-------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue
N010 ( 17, 11) [000533] -ACXG---R-L- arg1 SETUP   +--*  ASG       ref   
N009 (  1,  1) [000532] D------N----              |  +--*  LCL_VAR   ref    V42 tmp31        d:2
N008 ( 17, 11) [000176] --CXG-------              |  \--*  CALL      ref    SolutionAnalyzer.IPC.CreateSession
N005 (  1,  1) [000165] ------------ arg0 in rcx  |     +--*  LCL_VAR   ref    V25 tmp14        u:2 (last use)
N006 (  1,  1) [000166] ------------ arg1 in rdx  |     +--*  LCL_VAR   ref    V26 tmp15        u:3 (last use)
N007 (  1,  1) [000175] ------------ arg2 in r8   |     \--*  LCL_VAR   ref    V27 tmp16        u:2 (last use)
N011 (  1,  1) [000534] ------------ arg1 in rdx  +--*  LCL_VAR   ref    V42 tmp31        u:2 (last use)
N012 (  1,  1) [000164] ------------ this in rcx  \--*  LCL_VAR   ref    V24 tmp13        u:2 (last use)

***** BB10
STMT00025 (IL 0x0E9...0x0F0)
N008 ( 27, 25) [000084] --CXG-------              *  JTRUE     void  
N007 ( 25, 23) [000083] J-CXG--N----              \--*  NE        int   
N005 ( 23, 21) [000081] --CXG-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext
N003 (  1,  1) [000080] ------------ this in rcx     |  +--*  LCL_VAR   ref    V06 loc4         u:2
N004 (  2, 10) [000536] H----------- arg1 in r11     |  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11
N006 (  1,  1) [000082] ------------                 \--*  CNS_INT   int    0

------------ BB11 [???..???) -> BB13 (always), preds={BB10} succs={BB13}

------------ BB12 [000..000) (throw), preds={BB07,BB09} succs={}

***** BB12
STMT00102 (IL   ???...  ???)
N001 ( 14,  5) [000379] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

------------ BB13 [0F4..0F8) -> BB15 (cond), preds={BB02,BB11} succs={BB14,BB15}

***** BB13
STMT00116 (IL   ???...  ???)
N004 (  5,  5) [000431] ------------              *  JTRUE     void  
N003 (  3,  3) [000432] J------N----              \--*  EQ        int   
N001 (  1,  1) [000433] ------------                 +--*  LCL_VAR   ref    V06 loc4         u:2
N002 (  1,  1) [000434] ------------                 \--*  CNS_INT   ref    null

------------ BB14 [0F8..100), preds={BB13} succs={BB15}

***** BB14
STMT00117 (IL   ???...  ???)
N005 ( 23, 21) [000435] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose
N003 (  1,  1) [000436] ------------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         u:2 (last use)
N004 (  2, 10) [000539] H----------- arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

------------ BB15 [100..127) -> BB17 (always), preds={BB13,BB14} succs={BB17}

***** BB15
STMT00103 (IL 0x100...  ???)
N006 (  4,  4) [000384] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000383] D------N----              +--*  LCL_VAR   ref    V35 tmp24        d:2
N004 (  4,  4) [000213] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000546] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000212] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000545] ------------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers]

***** BB15
STMT00057 (IL   ???...  ???)
N009 (  9,  9) [000217] -A-XG---R---              *  ASG       int   
N008 (  4,  4) [000216] D--XG--N----              +--*  IND       int   
N007 (  2,  2) [000548] -------N----              |  \--*  ADD       byref 
N005 (  1,  1) [000211] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2
N006 (  1,  1) [000547] ------------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]
N004 (  4,  4) [000382] ---XG-------              \--*  IND       int   
N003 (  2,  2) [000550] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000381] ------------                    +--*  LCL_VAR   ref    V35 tmp24        u:2 (last use)
N002 (  1,  1) [000549] ------------                    \--*  CNS_INT   long   24 field offset Fseq[_size]

***** BB15
STMT00058 (IL 0x111...0x11D)
N005 ( 16, 16) [000224] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000223] D------N----              +--*  LCL_VAR   ref    V29 tmp18        d:2
N003 ( 16, 16) [000222] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000221] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB15
STMT00109 (IL   ???...  ???)
N006 (  4,  4) [000402] -A-XG---R---              *  ASG       int   
N005 (  1,  1) [000401] D------N----              +--*  LCL_VAR   int    V37 tmp26        d:2
N004 (  4,  4) [000220] ---XG-------              \--*  IND       int   
N003 (  2,  2) [000553] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000219] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000552] ------------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]

***** BB15
STMT00104 (IL   ???...  ???)
N005 ( 16, 16) [000389] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000388] D------N----              +--*  LCL_VAR   ref    V36 tmp25        d:2
N003 ( 16, 16) [000387] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000386] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB15
STMT00110 (IL   ???...  ???)
N007 ( 17, 12) [000406] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor
N004 (  1,  1) [000390] ------------ this in rcx  +--*  LCL_VAR   ref    V36 tmp25        u:2
N005 (  1,  1) [000404] ------------ arg1 in rdx  +--*  CNS_INT   int    0
N006 (  1,  1) [000405] ------------ arg2 in r8   \--*  CNS_INT   ref    null

***** BB15
STMT00106 (IL   ???...  ???)
N006 (  6,  6) [000394] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000393] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000559] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000225] ------------              |     +--*  LCL_VAR   ref    V29 tmp18        u:2
N002 (  1,  1) [000558] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_workItems]
N005 (  1,  1) [000392] ------------              \--*  LCL_VAR   ref    V36 tmp25        u:2 (last use)

***** BB15
STMT00108 (IL   ???...  ???)
N006 (  6,  6) [000400] -A-XG-------              *  ASG       int   
N004 (  4,  4) [000399] D--XG--N----              +--*  IND       int   
N003 (  2,  2) [000561] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000397] ------------              |     +--*  LCL_VAR   ref    V29 tmp18        u:2
N002 (  1,  1) [000560] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_workItemsToComplete]
N005 (  1,  1) [000398] ------------              \--*  LCL_VAR   int    V37 tmp26        u:2 (last use)

***** BB15
STMT00060 (IL 0x11D...  ???)
N006 (  6,  6) [000229] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000228] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000563] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000218] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000562] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter]
N005 (  1,  1) [000227] ------------              \--*  LCL_VAR   ref    V29 tmp18        u:2 (last use)

***** BB15
STMT00061 (IL 0x122...0x123)
N003 (  1,  3) [000232] -A------R---              *  ASG       int   
N002 (  1,  1) [000231] D------N----              +--*  LCL_VAR   int    V10 loc8         d:2
N001 (  1,  1) [000230] ------------              \--*  CNS_INT   int    0

------------ BB16 [127..133), preds={BB20} succs={BB17}

***** BB16
STMT00065 (IL 0x127...0x131)
N003 ( 15,  8) [000243] --CXG-------              *  CALL nullcheck void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0
N002 (  1,  1) [000242] ------------ this in rcx  \--*  LCL_VAR   ref    V02 loc0         u:2

***** BB16
STMT00066 (IL 0x12D...  ???)
N005 (  3,  3) [000248] -A------R---              *  ASG       int   
N004 (  1,  1) [000247] D------N----              +--*  LCL_VAR   int    V10 loc8         d:4
N003 (  3,  3) [000246] ------------              \--*  ADD       int   
N001 (  1,  1) [000244] ------------                 +--*  LCL_VAR   int    V10 loc8         u:3 (last use)
N002 (  1,  1) [000245] ------------                 \--*  CNS_INT   int    1

------------ BB17 [000..147) -> BB19 (cond), preds={BB15,BB16} succs={BB18,BB19}

***** BB17
STMT00120 (IL   ???...  ???)
N005 (  0,  0) [000581] -A------R---              *  ASG       int   
N004 (  0,  0) [000579] D------N----              +--*  LCL_VAR   int    V10 loc8         d:3
N003 (  0,  0) [000580] ------------              \--*  PHI       int   
N001 (  0,  0) [000598] ------------ pred BB16       +--*  PHI_ARG   int    V10 loc8         u:4
N002 (  0,  0) [000597] ------------ pred BB15       \--*  PHI_ARG   int    V10 loc8         u:2

***** BB17
STMT00114 (IL   ???...  ???)
N006 (  4,  4) [000424] -A-XG---R---              *  ASG       int   
N005 (  1,  1) [000423] D------N----              +--*  LCL_VAR   int    V39 tmp28        d:2
N004 (  4,  4) [000237] ---XG-------              \--*  IND       int   
N003 (  2,  2) [000566] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000236] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000565] ------------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]

***** BB17
STMT00111 (IL   ???...  ???)
N004 (  5,  5) [000414] ------------              *  JTRUE     void  
N003 (  3,  3) [000413] J------N----              \--*  GE        int   
N001 (  1,  1) [000412] ------------                 +--*  LCL_VAR   int    V39 tmp28        u:2
N002 (  1,  1) [000411] ------------                 \--*  CNS_INT   int    8

------------ BB18 [000..000) -> BB20 (always), preds={BB17} succs={BB20}

***** BB18
STMT00113 (IL   ???...  ???)
N003 (  1,  3) [000421] -A------R---              *  ASG       int   
N002 (  1,  1) [000420] D------N----              +--*  LCL_VAR   int    V38 tmp27        d:4
N001 (  1,  1) [000419] ------------              \--*  LCL_VAR   int    V39 tmp28        u:2 (last use)

------------ BB19 [000..000), preds={BB17} succs={BB20}

***** BB19
STMT00112 (IL   ???...  ???)
N003 (  1,  3) [000417] -A------R---              *  ASG       int   
N002 (  1,  1) [000416] D------N----              +--*  LCL_VAR   int    V38 tmp27        d:3
N001 (  1,  1) [000415] ------------              \--*  CNS_INT   int    8

------------ BB20 [???..???) -> BB16 (cond), preds={BB18,BB19} succs={BB21,BB16}

***** BB20
STMT00121 (IL   ???...  ???)
N005 (  0,  0) [000584] -A------R---              *  ASG       int   
N004 (  0,  0) [000582] D------N----              +--*  LCL_VAR   int    V38 tmp27        d:2
N003 (  0,  0) [000583] ------------              \--*  PHI       int   
N001 (  0,  0) [000600] ------------ pred BB18       +--*  PHI_ARG   int    V38 tmp27        u:4
N002 (  0,  0) [000599] ------------ pred BB19       \--*  PHI_ARG   int    V38 tmp27        u:3

***** BB20
STMT00064 (IL   ???...  ???)
N004 (  5,  5) [000241] ------------              *  JTRUE     void  
N003 (  3,  3) [000240] J------N----              \--*  LT        int   
N001 (  1,  1) [000233] ------------                 +--*  LCL_VAR   int    V10 loc8         u:3
N002 (  1,  1) [000422] ------------                 \--*  LCL_VAR   int    V38 tmp27        u:2 (last use)

------------ BB21 [147..153) (return), preds={BB20} succs={}

***** BB21
STMT00115 (IL 0x147...  ???)
N006 (  4,  4) [000429] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000428] D------N----              +--*  LCL_VAR   ref    V40 tmp29        d:2
N004 (  4,  4) [000250] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000568] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000249] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 (last use)
N002 (  1,  1) [000567] ------------                    \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun]

***** BB21
STMT00068 (IL   ???...  ???)
N005 (  5,  5) [000253] ---XG-------              *  RETURN    ref   
N004 (  4,  4) [000427] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000570] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000426] ------------                    +--*  LCL_VAR   ref    V40 tmp29        u:2 (last use)
N002 (  1,  1) [000569] ------------                    \--*  CNS_INT   long   8 field offset Fseq[_task]

------------ BB22 [0F4..0F8) -> BB24 (cond), preds={} succs={BB23,BB24}

***** BB22
STMT00069 (IL 0x0F4...0x0F6)
N004 (  5,  5) [000257] ------------              *  JTRUE     void  
N003 (  3,  3) [000256] J------N----              \--*  EQ        int   
N001 (  1,  1) [000254] ------------                 +--*  LCL_VAR   ref    V06 loc4         u:2
N002 (  1,  1) [000255] ------------                 \--*  CNS_INT   ref    null

------------ BB23 [0F8..0FF), preds={BB22} succs={BB24}

***** BB23
STMT00071 (IL 0x0F8...0x0FA)
N005 ( 23, 21) [000260] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose
N003 (  1,  1) [000259] ------------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         u:2 (last use)
N004 (  2, 10) [000542] H----------- arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

------------ BB24 [0FF..100) (finret), preds={BB22,BB23} succs={}

***** BB24
STMT00070 (IL 0x0FF...0x0FF)
N001 (  0,  0) [000258] ------------              *  RETFILT   void  

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist

*************** Starting PHASE Early Value Propagation
*************** In optEarlyProp()
optEarlyProp Marking a null check for removal
N002 (  2,  2) [000333] ---X--------              *  NULLCHECK byte  
N001 (  1,  1) [000332] ------------              \--*  LCL_VAR   ref    V03 loc1         u:2


Removing statement STMT00090 (IL 0x053...  ???)
N002 (  2,  2) [000333] -----O------              *  NULLCHECK byte  
N001 (  1,  1) [000332] ------------              \--*  LCL_VAR   ref    V03 loc1         u:2
 in BB01 as useless:

optFoldNullCheck removed tree:
N002 (  2,  2) [000333] -----O------              *  NULLCHECK byte  
N001 (  1,  1) [000332] ------------              \--*  LCL_VAR   ref    V03 loc1         u:2


After optEarlyProp:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB13 ( cond ) T0      try {       keep i try label hascall gcsafe 
BB03 [0002]  2  0    BB02,BB10             4     0 [072..08B)-> BB05 ( cond ) T0                  i Loop label target hascall gcsafe newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  2     0 [08B..08F)-> BB06 (always) T0                  i gcsafe bwd 
BB05 [0004]  1  0    BB03                  2     0 [08F..09C)                 T0                  i label target hascall gcsafe bwd 
BB06 [0005]  2  0    BB04,BB05             4     0 [09C..0BB)-> BB09 ( cond ) T0                  i label target gcsafe bwd 
BB07 [0006]  1  0    BB06                  2     0 [000..0D3)-> BB12 ( cond ) T0                  i hascall gcsafe newobj bwd 
BB08 [0041]  1  0    BB07                  2     0 [000..000)                 T0                  i internal label target gcsafe newobj bwd 
BB09 [0007]  2  0    BB06,BB08             4     0 [000..0E9)-> BB12 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB10 [0045]  1  0    BB09                  4     0 [000..0F2)-> BB03 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB11 [0061]  1  0    BB10                  0.50    [???..???)-> BB13 (always) T0                  internal gcsafe 
BB12 [0044]  2  0    BB07,BB09             0       [000..000)        (throw ) T0      }           i internal rare label target hascall gcsafe bwd 
BB13 [0057]  2       BB02,BB11             1       [0F4..0F8)-> BB15 ( cond )                     keep i label target gcsafe cfb 
BB14 [0058]  1       BB13                  0.50    [0F8..100)                                     i hascall gcsafe 
BB15 [0013]  2       BB13,BB14             1       [100..127)-> BB17 (always)                     i label target hascall gcsafe newobj 
BB16 [0014]  1       BB20                  2     1 [127..133)                                     i Loop label target hascall gcsafe bwd bwd-target 
BB17 [0015]  2       BB15,BB16             8     1 [000..147)-> BB19 ( cond )                     i label target gcsafe bwd 
BB18 [0053]  1       BB17                  2     1 [000..000)-> BB20 (always)                     i internal gcsafe bwd 
BB19 [0054]  1       BB17                  2     1 [000..000)                                     i internal label target gcsafe bwd 
BB20 [0055]  2       BB18,BB19             8     1 [???..???)-> BB16 ( cond )                     internal label target gcsafe bwd 
BB21 [0016]  1       BB20                  1       [147..153)        (return)                     i gcsafe 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB22 [0010]  1     0                       0       [0F4..0F8)-> BB24 ( cond )    H0 F fault {     keep i rare label target flet 
BB23 [0011]  1     0 BB22                  0       [0F8..0FF)                    H0               i rare hascall gcsafe 
BB24 [0012]  2     0 BB22,BB23             0       [0FF..100)        (finret)    H0   }           i rare label target 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..070), preds={} succs={BB02}

***** BB01
STMT00000 (IL 0x000...0x005)
N005 ( 16, 16) [000003] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000002] D------N----              +--*  LCL_VAR   ref    V12 tmp1         d:2
N003 ( 16, 16) [000001] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000000] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB01
STMT00002 (IL 0x005...  ???)
N003 (  1,  3) [000008] -A------R---              *  ASG       ref   
N002 (  1,  1) [000007] D------N----              +--*  LCL_VAR   ref    V02 loc0         d:2
N001 (  1,  1) [000006] ------------              \--*  LCL_VAR   ref    V12 tmp1         u:2

***** BB01
STMT00003 (IL 0x006...0x008)
N006 (  6,  6) [000012] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000011] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000440] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000009] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2
N002 (  1,  1) [000439] ------------              |     \--*  CNS_INT   long   32 field offset Fseq[outputFile]
N005 (  1,  1) [000010] ------------              \--*  LCL_VAR   ref    V01 arg1         u:1 (last use)

***** BB01
STMT00004 (IL 0x00D...0x00F)
N006 (  6,  6) [000016] -A-XG-------              *  ASG       int   
N004 (  4,  4) [000015] D--XG--N----              +--*  IND       int   
N003 (  2,  2) [000442] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000013] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2
N002 (  1,  1) [000441] ------------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]
N005 (  1,  1) [000014] ------------              \--*  CNS_INT   int    0

***** BB01
STMT00005 (IL 0x014...0x016)
N006 (  6,  6) [000020] -A-XG-------              *  ASG       int   
N004 (  4,  4) [000019] D--XG--N----              +--*  IND       int   
N003 (  2,  2) [000444] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000017] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2
N002 (  1,  1) [000443] ------------              |     \--*  CNS_INT   long   56 field offset Fseq[analyzersFinishedCount]
N005 (  1,  1) [000018] ------------              \--*  CNS_INT   int    0

***** BB01
STMT00006 (IL 0x01B...0x021)
N005 ( 16, 16) [000025] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000024] D------N----              +--*  LCL_VAR   ref    V13 tmp2         d:2
N003 ( 16, 16) [000023] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000022] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00074 (IL   ???...  ???)
N005 ( 16, 16) [000269] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000268] D------N----              +--*  LCL_VAR   ref    V30 tmp19        d:2
N003 ( 16, 16) [000267] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000266] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00079 (IL   ???...  ???)
N006 (  6,  9) [000283] -A-XGO------              *  ASG       int   
N004 (  4,  4) [000282] V--XGO-N----              +--*  IND       int   
N003 (  2,  2) [000448] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000280] ------------              |     +--*  LCL_VAR   ref    V30 tmp19        u:2
N002 (  1,  1) [000447] ------------              |     \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags]
N005 (  1,  4) [000281] ------------              \--*  CNS_INT   int    0x2000400

***** BB01
STMT00076 (IL   ???...  ???)
N006 (  6,  6) [000274] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000273] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000450] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000265] ------------              |     +--*  LCL_VAR   ref    V13 tmp2         u:2
N002 (  1,  1) [000449] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_task]
N005 (  1,  1) [000272] ------------              \--*  LCL_VAR   ref    V30 tmp19        u:2 (last use)

***** BB01
STMT00008 (IL 0x021...  ???)
N006 (  6,  6) [000030] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000029] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000452] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000021] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2
N002 (  1,  1) [000451] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun]
N005 (  1,  1) [000028] ------------              \--*  LCL_VAR   ref    V13 tmp2         u:2 (last use)

***** BB01
STMT00009 (IL 0x026...0x02C)
N005 ( 16, 16) [000035] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000034] D------N----              +--*  LCL_VAR   ref    V14 tmp3         d:2
N003 ( 16, 16) [000033] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000032] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00082 (IL   ???...  ???)
N013 ( 26, 35) [000292] -ACXG---R---              *  ASG       ref   
N012 (  4,  4) [000291] D--XG--N----              +--*  IND       ref   
N011 (  2,  2) [000455] -------N----              |  \--*  ADD       byref 
N009 (  1,  1) [000287] ------------              |     +--*  LCL_VAR   ref    V14 tmp3         u:2
N010 (  1,  1) [000454] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_array]
N008 ( 21, 30) [000300] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 18) [000299] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS
N003 (  2, 10) [000297] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e0b0028
N004 (  1,  1) [000298] ------------ arg1 in rdx     |  \--*  CNS_INT   int    14
N007 (  4, 12) [000295] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000458] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[Value]

***** BB01
STMT00011 (IL 0x02C...  ???)
N006 (  6,  6) [000040] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000039] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000460] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000031] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2
N002 (  1,  1) [000459] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers]
N005 (  1,  1) [000038] ------------              \--*  LCL_VAR   ref    V14 tmp3         u:2 (last use)

***** BB01
STMT00012 (IL 0x031...0x033)
N006 (  6,  6) [000044] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000043] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000462] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000041] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2
N002 (  1,  1) [000461] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter]
N005 (  1,  1) [000042] ------------              \--*  CNS_INT   ref    null

***** BB01
STMT00013 (IL 0x038...0x03E)
N005 ( 16, 16) [000049] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000048] D------N----              +--*  LCL_VAR   ref    V15 tmp4         d:2
N003 ( 16, 16) [000047] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000046] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00083 (IL   ???...  ???)
N005 ( 16, 10) [000303] --CXG-------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor
N003 (  1,  1) [000050] ------------ this in rcx  +--*  LCL_VAR   ref    V15 tmp4         u:2
N004 (  1,  1) [000302] ------------ arg1 in rdx  \--*  CNS_INT   ref    null

***** BB01
STMT00015 (IL 0x03E...  ???)
N006 (  6,  6) [000054] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000053] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000467] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000045] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2 (last use)
N002 (  1,  1) [000466] ------------              |     \--*  CNS_INT   long   40 field offset Fseq[output]
N005 (  1,  1) [000052] ------------              \--*  LCL_VAR   ref    V15 tmp4         u:2 (last use)

***** BB01
STMT00086 (IL   ???...  ???)
N003 ( 14,  5) [000316] -ACXG---R---              *  ASG       ref   
N002 (  1,  1) [000315] D------N----              +--*  LCL_VAR   ref    V31 tmp20        d:2
N001 ( 14,  5) [000055] --CXG-------              \--*  CALL      ref    System.Diagnostics.Process.GetCurrentProcess

***** BB01
STMT00087 (IL   ???...  ???)
N002 (  2,  2) [000314] ---X--------              *  NULLCHECK byte  
N001 (  1,  1) [000313] ------------              \--*  LCL_VAR   ref    V31 tmp20        u:2

***** BB01
STMT00084 (IL   ???...  ???)
N005 ( 16, 10) [000308] --CXG-------              *  CALL      void   System.Diagnostics.Process.EnsureState
N003 (  1,  1) [000306] ------------ this in rcx  +--*  LCL_VAR   ref    V31 tmp20        u:2
N004 (  1,  1) [000307] ------------ arg1 in rdx  \--*  CNS_INT   int    3

***** BB01
STMT00088 (IL   ???...  ???)
N008 ( 18, 13) [000322] -ACXG---R---              *  ASG       ref   
N007 (  1,  1) [000321] D------N----              +--*  LCL_VAR   ref    V32 tmp21        d:2
N006 ( 18, 13) [000311] --CXG-------              \--*  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule
N005 (  4,  7) [000310] ---XG------- arg0 in rcx     \--*  IND       int   
N004 (  2,  5) [000471] -------N----                    \--*  ADD       byref 
N002 (  1,  1) [000309] ------------                       +--*  LCL_VAR   ref    V31 tmp20        u:2 (last use)
N003 (  1,  4) [000470] ------------                       \--*  CNS_INT   long   200 field offset Fseq[_processId]

***** BB01
STMT00019 (IL   ???...  ???)
N006 (  4,  4) [000062] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000061] D------N----              +--*  LCL_VAR   ref    V03 loc1         d:2
N004 (  4,  4) [000320] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000474] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000319] ------------                    +--*  LCL_VAR   ref    V32 tmp21        u:2 (last use)
N002 (  1,  1) [000473] ------------                    \--*  CNS_INT   long   40 field offset Fseq[<FileName>k__BackingField]

***** BB01
STMT00021 (IL   ???...  ???)
N016 ( 32, 30) [000069] -ACXG---R---              *  ASG       int   
N015 (  1,  1) [000068] D------N----              +--*  LCL_VAR   int    V04 loc2         d:2
N014 ( 32, 30) [000329] --CXG-------              \--*  GE        int   
N012 ( 27, 28) [000340] --CXG-------                 +--*  CALL      int    System.String.IndexOf
N005 (  1,  1) [000339] ------------ arg4 out+20     |  +--*  CNS_INT   int    5
N007 (  3,  3) [000338] ---X-------- arg3 in r9      |  +--*  ARR_LENGTH int   
N006 (  1,  1) [000337] ------------                 |  |  \--*  LCL_VAR   ref    V03 loc1         u:2
N009 (  4, 12) [000476] #---G------- arg1 in rdx     |  +--*  IND       ref   
N008 (  2, 10) [000475] H-----------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E "dotnet.exe"
N010 (  1,  1) [000063] ------------ this in rcx     |  +--*  LCL_VAR   ref    V03 loc1         u:2
N011 (  1,  1) [000336] ------------ arg2 in r8      |  \--*  CNS_INT   int    0
N013 (  1,  1) [000328] ------------                 \--*  CNS_INT   int    0

***** BB01
STMT00023 (IL   ???...  ???)
N015 ( 26, 20) [000075] -ACXG---R---              *  ASG       ref   
N014 (  1,  1) [000074] D------N----              +--*  LCL_VAR   ref    V05 loc3         d:2
N013 ( 26, 20) [000494] -ACXG-------              \--*  COMMA     ref   
N003 ( 14,  5) [000482] -ACXG---R---                 +--*  ASG       ref   
N002 (  1,  1) [000481] D------N----                 |  +--*  LCL_VAR   ref    V41 tmp30        d:2
N001 ( 14,  5) [000070] --CXG-------                 |  \--*  CALL      ref    System.Environment.GetCommandLineArgs
N012 ( 12, 15) [000493] ---XG-------                 \--*  COMMA     ref   
N007 (  8, 11) [000487] ---X--------                    +--*  ARR_BOUNDS_CHECK_Rng void  
N004 (  1,  1) [000072] ------------                    |  +--*  CNS_INT   int    0
N006 (  3,  3) [000486] ---X--------                    |  \--*  ARR_LENGTH int   
N005 (  1,  1) [000483] ------------                    |     \--*  LCL_VAR   ref    V41 tmp30        u:2
N011 (  4,  4) [000073] a---G-------                    \--*  IND       ref   
N010 (  2,  2) [000492] -------N----                       \--*  ADD       byref 
N008 (  1,  1) [000484] ------------                          +--*  LCL_VAR   ref    V41 tmp30        u:2 (last use)
N009 (  1,  1) [000491] ------------                          \--*  CNS_INT   long   16 Fseq[#FirstElem]

***** BB01
STMT00024 (IL 0x068...0x06E)
N007 ( 23, 21) [000079] -ACXG---R---              *  ASG       ref   
N006 (  1,  1) [000078] D------N----              +--*  LCL_VAR   ref    V06 loc4         d:2
N005 ( 23, 21) [000077] --CXG-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator
N003 (  1,  1) [000076] ------------ this in rcx     +--*  LCL_VAR   ref    V00 arg0         u:1 (last use)
N004 (  2, 10) [000495] H----------- arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

------------ BB02 [070..072) -> BB13 (cond), preds={BB01} succs={BB03,BB13}

***** BB02
STMT00119 (IL 0x0E9...  ???)
N008 ( 27, 25) [000578] --CXG-------              *  JTRUE     void  
N007 ( 25, 23) [000571] J-CXG--N----              \--*  EQ        int   
N005 ( 23, 21) [000572] --CXG-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext
N003 (  1,  1) [000575] ------------ this in rcx     |  +--*  LCL_VAR   ref    V06 loc4         u:2
N004 (  2, 10) [000576] H----------- arg1 in r11     |  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11
N006 (  1,  1) [000577] ------------                 \--*  CNS_INT   int    0

------------ BB03 [072..08B) -> BB05 (cond), preds={BB02,BB10} succs={BB04,BB05}

***** BB03
STMT00026 (IL 0x072...0x079)
N007 ( 23, 21) [000088] -ACXG---R---              *  ASG       ref   
N006 (  1,  1) [000087] D------N----              +--*  LCL_VAR   ref    V07 loc5         d:2
N005 ( 23, 21) [000086] --CXG-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current
N003 (  1,  1) [000085] ------------ this in rcx     +--*  LCL_VAR   ref    V06 loc4         u:2
N004 (  2, 10) [000498] H----------- arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

***** BB03
STMT00027 (IL 0x07B...0x089)
N005 ( 16, 16) [000092] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000091] D------N----              +--*  LCL_VAR   ref    V16 tmp5         d:2
N003 ( 16, 16) [000090] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000089] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB03
STMT00092 (IL 0x080...  ???)
N006 (  6,  6) [000347] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000346] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000503] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000096] ------------              |     +--*  LCL_VAR   ref    V16 tmp5         u:2
N002 (  1,  1) [000502] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_fileName]
N005 (  1,  1) [000097] ------------              \--*  LCL_VAR   ref    V03 loc1         u:2

***** BB03
STMT00031 (IL   ???...0x089)
N003 (  1,  3) [000105] -A------R---              *  ASG       ref   
N002 (  1,  1) [000104] D------N----              +--*  LCL_VAR   ref    V17 tmp6         d:2
N001 (  1,  1) [000095] ------------              \--*  LCL_VAR   ref    V16 tmp5         u:2

***** BB03
STMT00032 (IL   ???...  ???)
N003 (  1,  3) [000108] -A------R---              *  ASG       ref   
N002 (  1,  1) [000107] D------N----              +--*  LCL_VAR   ref    V18 tmp7         d:2
N001 (  1,  1) [000099] ------------              \--*  LCL_VAR   ref    V16 tmp5         u:2 (last use)

***** BB03
STMT00030 (IL 0x087...  ???)
N004 (  5,  5) [000103] ------------              *  JTRUE     void  
N003 (  3,  3) [000102] J------N----              \--*  NE        int   
N001 (  1,  1) [000100] ------------                 +--*  LCL_VAR   int    V04 loc2         u:2
N002 (  1,  1) [000101] ------------                 \--*  CNS_INT   int    0

------------ BB04 [08B..08F) -> BB06 (always), preds={BB03} succs={BB06}

***** BB04
STMT00053 (IL   ???...0x08D)
N003 (  1,  3) [000203] -A------R---              *  ASG       ref   
N002 (  1,  1) [000202] D------N----              +--*  LCL_VAR   ref    V19 tmp8         d:4
N001 (  1,  1) [000110] ------------              \--*  LCL_VAR   ref    V17 tmp6         u:2 (last use)

***** BB04
STMT00054 (IL   ???...  ???)
N003 (  1,  3) [000206] -A------R---              *  ASG       ref   
N002 (  1,  1) [000205] D------N----              +--*  LCL_VAR   ref    V20 tmp9         d:4
N001 (  1,  1) [000111] ------------              \--*  LCL_VAR   ref    V18 tmp7         u:2 (last use)

***** BB04
STMT00055 (IL   ???...  ???)
N003 (  1,  3) [000209] -A------R---              *  ASG       ref   
N002 (  1,  1) [000208] D------N----              +--*  LCL_VAR   ref    V21 tmp10        d:4
N001 (  1,  1) [000201] ------------              \--*  LCL_VAR   ref    V07 loc5         u:2 (last use)

------------ BB05 [08F..09C), preds={BB03} succs={BB06}

***** BB05
STMT00033 (IL   ???...0x097)
N003 (  1,  3) [000119] -A------R---              *  ASG       ref   
N002 (  1,  1) [000118] D------N----              +--*  LCL_VAR   ref    V19 tmp8         d:3
N001 (  1,  1) [000112] ------------              \--*  LCL_VAR   ref    V17 tmp6         u:2 (last use)

***** BB05
STMT00034 (IL   ???...  ???)
N003 (  1,  3) [000122] -A------R---              *  ASG       ref   
N002 (  1,  1) [000121] D------N----              +--*  LCL_VAR   ref    V20 tmp9         d:3
N001 (  1,  1) [000113] ------------              \--*  LCL_VAR   ref    V18 tmp7         u:2 (last use)

***** BB05
STMT00035 (IL   ???...  ???)
N010 ( 20, 22) [000125] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000124] D------N----              +--*  LCL_VAR   ref    V21 tmp10        d:3
N008 ( 20, 22) [000117] --CXG-------              \--*  CALL      ref    System.String.Concat
N005 (  4, 12) [000505] #---G------- arg1 in rdx     +--*  IND       ref   
N004 (  2, 10) [000504] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E " "
N006 (  1,  1) [000114] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V05 loc3         u:2
N007 (  1,  1) [000116] ------------ arg2 in r8      \--*  LCL_VAR   ref    V07 loc5         u:2 (last use)

------------ BB06 [09C..0BB) -> BB09 (cond), preds={BB04,BB05} succs={BB07,BB09}

***** BB06
STMT00125 (IL   ???...  ???)
N005 (  0,  0) [000596] -A------R---              *  ASG       ref   
N004 (  0,  0) [000594] D------N----              +--*  LCL_VAR   ref    V21 tmp10        d:2
N003 (  0,  0) [000595] ------------              \--*  PHI       ref   
N001 (  0,  0) [000606] ------------ pred BB04       +--*  PHI_ARG   ref    V21 tmp10        u:4
N002 (  0,  0) [000603] ------------ pred BB05       \--*  PHI_ARG   ref    V21 tmp10        u:3

***** BB06
STMT00124 (IL   ???...  ???)
N005 (  0,  0) [000593] -A------R---              *  ASG       ref   
N004 (  0,  0) [000591] D------N----              +--*  LCL_VAR   ref    V20 tmp9         d:2
N003 (  0,  0) [000592] ------------              \--*  PHI       ref   
N001 (  0,  0) [000607] ------------ pred BB04       +--*  PHI_ARG   ref    V20 tmp9         u:4
N002 (  0,  0) [000604] ------------ pred BB05       \--*  PHI_ARG   ref    V20 tmp9         u:3

***** BB06
STMT00123 (IL   ???...  ???)
N005 (  0,  0) [000590] -A------R---              *  ASG       ref   
N004 (  0,  0) [000588] D------N----              +--*  LCL_VAR   ref    V19 tmp8         d:2
N003 (  0,  0) [000589] ------------              \--*  PHI       ref   
N001 (  0,  0) [000608] ------------ pred BB04       +--*  PHI_ARG   ref    V19 tmp8         u:4
N002 (  0,  0) [000605] ------------ pred BB05       \--*  PHI_ARG   ref    V19 tmp8         u:3

***** BB06
STMT00093 (IL   ???...  ???)
N006 (  6,  6) [000350] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000349] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000510] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000128] ------------              |     +--*  LCL_VAR   ref    V20 tmp9         u:2 (last use)
N002 (  1,  1) [000509] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_arguments]
N005 (  1,  1) [000129] ------------              \--*  LCL_VAR   ref    V21 tmp10        u:2 (last use)

***** BB06
STMT00094 (IL 0x0A1...  ???)
N006 (  7, 10) [000355] -A-XG-------              *  ASG       bool  
N004 (  5,  8) [000354] D--XG--N----              +--*  IND       bool  
N003 (  2,  5) [000512] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000131] ------------              |     +--*  LCL_VAR   ref    V19 tmp8         u:2
N002 (  1,  4) [000511] ------------              |     \--*  CNS_INT   long   130 field offset Fseq[<UseShellExecute>k__BackingField]
N005 (  1,  1) [000353] ------------              \--*  CNS_INT   int    0

***** BB06
STMT00040 (IL 0x0AA...0x0B9)
N006 (  4,  4) [000145] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000144] D------N----              +--*  LCL_VAR   ref    V23 tmp12        d:2
N004 (  4,  4) [000138] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000514] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000137] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000513] ------------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers]

***** BB06
STMT00039 (IL 0x0AA...  ???)
N006 (  4,  4) [000143] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000142] D------N----              +--*  LCL_VAR   ref    V22 tmp11        d:2
N004 (  4,  4) [000141] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000516] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000140] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000515] ------------                    \--*  CNS_INT   long   48 field offset Fseq[<>9__2]

***** BB06
STMT00042 (IL   ???...0x0B9)
N003 (  1,  3) [000153] -A------R---              *  ASG       ref   
N002 (  1,  1) [000152] D------N----              +--*  LCL_VAR   ref    V24 tmp13        d:2
N001 (  1,  1) [000146] ------------              \--*  LCL_VAR   ref    V23 tmp12        u:2 (last use)

***** BB06
STMT00043 (IL   ???...  ???)
N003 (  1,  3) [000156] -A------R---              *  ASG       ref   
N002 (  1,  1) [000155] D------N----              +--*  LCL_VAR   ref    V25 tmp14        d:2
N001 (  1,  1) [000139] ------------              \--*  LCL_VAR   ref    V19 tmp8         u:2 (last use)

***** BB06
STMT00044 (IL   ???...  ???)
N003 (  1,  3) [000159] -A------R---              *  ASG       ref   
N002 (  1,  1) [000158] D------N----              +--*  LCL_VAR   ref    V26 tmp15        d:2
N001 (  1,  1) [000147] ------------              \--*  LCL_VAR   ref    V22 tmp11        u:2

***** BB06
STMT00041 (IL   ???...  ???)
N004 (  5,  5) [000151] ------------              *  JTRUE     void  
N003 (  3,  3) [000150] J------N----              \--*  NE        int   
N001 (  1,  1) [000148] ------------                 +--*  LCL_VAR   ref    V22 tmp11        u:2 (last use)
N002 (  1,  1) [000149] ------------                 \--*  CNS_INT   ref    null

------------ BB07 [000..0D3) -> BB12 (cond), preds={BB06} succs={BB08,BB12}

***** BB07
STMT00048 (IL   ???...0x0CA)
N005 ( 16, 16) [000184] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000183] D------N----              +--*  LCL_VAR   ref    V28 tmp17        d:2
N003 ( 16, 16) [000182] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000181] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB07
STMT00095 (IL   ???...  ???)
N004 (  5,  5) [000359] ------------              *  JTRUE     void  
N003 (  3,  3) [000358] J------N----              \--*  EQ        int   
N001 (  1,  1) [000179] ------------                 +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000357] ------------                 \--*  CNS_INT   ref    null

------------ BB08 [000..000), preds={BB07} succs={BB09}

***** BB08
STMT00096 (IL   ???...  ???)
N006 (  6,  6) [000362] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000361] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000519] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000185] ------------              |     +--*  LCL_VAR   ref    V28 tmp17        u:2
N002 (  1,  1) [000518] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
N005 (  1,  1) [000360] ------------              \--*  LCL_VAR   ref    V02 loc0         u:2

***** BB08
STMT00097 (IL   ???...  ???)
N006 (  7, 15) [000366] -A-XG-------              *  ASG       long  
N004 (  4,  4) [000365] D--XG--N----              +--*  IND       long  
N003 (  2,  2) [000521] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000363] ------------              |     +--*  LCL_VAR   ref    V28 tmp17        u:2
N002 (  1,  1) [000520] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
N005 (  2, 10) [000180] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

***** BB08
STMT00051 (IL   ???...0x0CC)
N006 (  6,  6) [000192] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000191] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000523] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000178] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000522] ------------              |     \--*  CNS_INT   long   48 field offset Fseq[<>9__2]
N005 (  1,  1) [000187] ------------              \--*  LCL_VAR   ref    V28 tmp17        u:2

***** BB08
STMT00052 (IL   ???...0x0D1)
N003 (  1,  3) [000199] -A------R---              *  ASG       ref   
N002 (  1,  1) [000198] D------N----              +--*  LCL_VAR   ref    V26 tmp15        d:4
N001 (  1,  1) [000193] ------------              \--*  LCL_VAR   ref    V28 tmp17        u:2 (last use)

------------ BB09 [000..0E9) -> BB12 (cond), preds={BB06,BB08} succs={BB10,BB12}

***** BB09
STMT00122 (IL   ???...  ???)
N005 (  0,  0) [000587] -A------R---              *  ASG       ref   
N004 (  0,  0) [000585] D------N----              +--*  LCL_VAR   ref    V26 tmp15        d:3
N003 (  0,  0) [000586] ------------              \--*  PHI       ref   
N001 (  0,  0) [000602] ------------ pred BB08       +--*  PHI_ARG   ref    V26 tmp15        u:4
N002 (  0,  0) [000601] ------------ pred BB06       \--*  PHI_ARG   ref    V26 tmp15        u:2

***** BB09
STMT00045 (IL   ???...0x0E4)
N005 ( 16, 16) [000172] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000171] D------N----              +--*  LCL_VAR   ref    V27 tmp16        d:2
N003 ( 16, 16) [000170] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000169] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB09
STMT00099 (IL   ???...  ???)
N004 (  5,  5) [000371] ------------              *  JTRUE     void  
N003 (  3,  3) [000370] J------N----              \--*  EQ        int   
N001 (  1,  1) [000167] ------------                 +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000369] ------------                 \--*  CNS_INT   ref    null

------------ BB10 [000..0F2) -> BB03 (cond), preds={BB09} succs={BB11,BB03}

***** BB10
STMT00100 (IL   ???...  ???)
N006 (  6,  6) [000374] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000373] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000526] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000173] ------------              |     +--*  LCL_VAR   ref    V27 tmp16        u:2
N002 (  1,  1) [000525] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
N005 (  1,  1) [000372] ------------              \--*  LCL_VAR   ref    V02 loc0         u:2

***** BB10
STMT00101 (IL   ???...  ???)
N006 (  7, 15) [000378] -A-XG-------              *  ASG       long  
N004 (  4,  4) [000377] D--XG--N----              +--*  IND       long  
N003 (  2,  2) [000528] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000375] ------------              |     +--*  LCL_VAR   ref    V27 tmp16        u:2
N002 (  1,  1) [000527] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
N005 (  2, 10) [000168] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

***** BB10
STMT00047 (IL 0x0DF...  ???)
N013 ( 36, 21) [000177] --CXG-------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue
N010 ( 17, 11) [000533] -ACXG---R-L- arg1 SETUP   +--*  ASG       ref   
N009 (  1,  1) [000532] D------N----              |  +--*  LCL_VAR   ref    V42 tmp31        d:2
N008 ( 17, 11) [000176] --CXG-------              |  \--*  CALL      ref    SolutionAnalyzer.IPC.CreateSession
N005 (  1,  1) [000165] ------------ arg0 in rcx  |     +--*  LCL_VAR   ref    V25 tmp14        u:2 (last use)
N006 (  1,  1) [000166] ------------ arg1 in rdx  |     +--*  LCL_VAR   ref    V26 tmp15        u:3 (last use)
N007 (  1,  1) [000175] ------------ arg2 in r8   |     \--*  LCL_VAR   ref    V27 tmp16        u:2 (last use)
N011 (  1,  1) [000534] ------------ arg1 in rdx  +--*  LCL_VAR   ref    V42 tmp31        u:2 (last use)
N012 (  1,  1) [000164] ------------ this in rcx  \--*  LCL_VAR   ref    V24 tmp13        u:2 (last use)

***** BB10
STMT00025 (IL 0x0E9...0x0F0)
N008 ( 27, 25) [000084] --CXG-------              *  JTRUE     void  
N007 ( 25, 23) [000083] J-CXG--N----              \--*  NE        int   
N005 ( 23, 21) [000081] --CXG-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext
N003 (  1,  1) [000080] ------------ this in rcx     |  +--*  LCL_VAR   ref    V06 loc4         u:2
N004 (  2, 10) [000536] H----------- arg1 in r11     |  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11
N006 (  1,  1) [000082] ------------                 \--*  CNS_INT   int    0

------------ BB11 [???..???) -> BB13 (always), preds={BB10} succs={BB13}

------------ BB12 [000..000) (throw), preds={BB07,BB09} succs={}

***** BB12
STMT00102 (IL   ???...  ???)
N001 ( 14,  5) [000379] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

------------ BB13 [0F4..0F8) -> BB15 (cond), preds={BB02,BB11} succs={BB14,BB15}

***** BB13
STMT00116 (IL   ???...  ???)
N004 (  5,  5) [000431] ------------              *  JTRUE     void  
N003 (  3,  3) [000432] J------N----              \--*  EQ        int   
N001 (  1,  1) [000433] ------------                 +--*  LCL_VAR   ref    V06 loc4         u:2
N002 (  1,  1) [000434] ------------                 \--*  CNS_INT   ref    null

------------ BB14 [0F8..100), preds={BB13} succs={BB15}

***** BB14
STMT00117 (IL   ???...  ???)
N005 ( 23, 21) [000435] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose
N003 (  1,  1) [000436] ------------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         u:2 (last use)
N004 (  2, 10) [000539] H----------- arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

------------ BB15 [100..127) -> BB17 (always), preds={BB13,BB14} succs={BB17}

***** BB15
STMT00103 (IL 0x100...  ???)
N006 (  4,  4) [000384] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000383] D------N----              +--*  LCL_VAR   ref    V35 tmp24        d:2
N004 (  4,  4) [000213] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000546] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000212] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000545] ------------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers]

***** BB15
STMT00057 (IL   ???...  ???)
N009 (  9,  9) [000217] -A-XG---R---              *  ASG       int   
N008 (  4,  4) [000216] D--XG--N----              +--*  IND       int   
N007 (  2,  2) [000548] -------N----              |  \--*  ADD       byref 
N005 (  1,  1) [000211] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2
N006 (  1,  1) [000547] ------------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]
N004 (  4,  4) [000382] ---XG-------              \--*  IND       int   
N003 (  2,  2) [000550] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000381] ------------                    +--*  LCL_VAR   ref    V35 tmp24        u:2 (last use)
N002 (  1,  1) [000549] ------------                    \--*  CNS_INT   long   24 field offset Fseq[_size]

***** BB15
STMT00058 (IL 0x111...0x11D)
N005 ( 16, 16) [000224] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000223] D------N----              +--*  LCL_VAR   ref    V29 tmp18        d:2
N003 ( 16, 16) [000222] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000221] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB15
STMT00109 (IL   ???...  ???)
N006 (  4,  4) [000402] -A-XG---R---              *  ASG       int   
N005 (  1,  1) [000401] D------N----              +--*  LCL_VAR   int    V37 tmp26        d:2
N004 (  4,  4) [000220] ---XG-------              \--*  IND       int   
N003 (  2,  2) [000553] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000219] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000552] ------------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]

***** BB15
STMT00104 (IL   ???...  ???)
N005 ( 16, 16) [000389] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000388] D------N----              +--*  LCL_VAR   ref    V36 tmp25        d:2
N003 ( 16, 16) [000387] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000386] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB15
STMT00110 (IL   ???...  ???)
N007 ( 17, 12) [000406] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor
N004 (  1,  1) [000390] ------------ this in rcx  +--*  LCL_VAR   ref    V36 tmp25        u:2
N005 (  1,  1) [000404] ------------ arg1 in rdx  +--*  CNS_INT   int    0
N006 (  1,  1) [000405] ------------ arg2 in r8   \--*  CNS_INT   ref    null

***** BB15
STMT00106 (IL   ???...  ???)
N006 (  6,  6) [000394] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000393] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000559] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000225] ------------              |     +--*  LCL_VAR   ref    V29 tmp18        u:2
N002 (  1,  1) [000558] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_workItems]
N005 (  1,  1) [000392] ------------              \--*  LCL_VAR   ref    V36 tmp25        u:2 (last use)

***** BB15
STMT00108 (IL   ???...  ???)
N006 (  6,  6) [000400] -A-XG-------              *  ASG       int   
N004 (  4,  4) [000399] D--XG--N----              +--*  IND       int   
N003 (  2,  2) [000561] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000397] ------------              |     +--*  LCL_VAR   ref    V29 tmp18        u:2
N002 (  1,  1) [000560] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_workItemsToComplete]
N005 (  1,  1) [000398] ------------              \--*  LCL_VAR   int    V37 tmp26        u:2 (last use)

***** BB15
STMT00060 (IL 0x11D...  ???)
N006 (  6,  6) [000229] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000228] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000563] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000218] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000562] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter]
N005 (  1,  1) [000227] ------------              \--*  LCL_VAR   ref    V29 tmp18        u:2 (last use)

***** BB15
STMT00061 (IL 0x122...0x123)
N003 (  1,  3) [000232] -A------R---              *  ASG       int   
N002 (  1,  1) [000231] D------N----              +--*  LCL_VAR   int    V10 loc8         d:2
N001 (  1,  1) [000230] ------------              \--*  CNS_INT   int    0

------------ BB16 [127..133), preds={BB20} succs={BB17}

***** BB16
STMT00065 (IL 0x127...0x131)
N003 ( 15,  8) [000243] --CXG-------              *  CALL nullcheck void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0
N002 (  1,  1) [000242] ------------ this in rcx  \--*  LCL_VAR   ref    V02 loc0         u:2

***** BB16
STMT00066 (IL 0x12D...  ???)
N005 (  3,  3) [000248] -A------R---              *  ASG       int   
N004 (  1,  1) [000247] D------N----              +--*  LCL_VAR   int    V10 loc8         d:4
N003 (  3,  3) [000246] ------------              \--*  ADD       int   
N001 (  1,  1) [000244] ------------                 +--*  LCL_VAR   int    V10 loc8         u:3 (last use)
N002 (  1,  1) [000245] ------------                 \--*  CNS_INT   int    1

------------ BB17 [000..147) -> BB19 (cond), preds={BB15,BB16} succs={BB18,BB19}

***** BB17
STMT00120 (IL   ???...  ???)
N005 (  0,  0) [000581] -A------R---              *  ASG       int   
N004 (  0,  0) [000579] D------N----              +--*  LCL_VAR   int    V10 loc8         d:3
N003 (  0,  0) [000580] ------------              \--*  PHI       int   
N001 (  0,  0) [000598] ------------ pred BB16       +--*  PHI_ARG   int    V10 loc8         u:4
N002 (  0,  0) [000597] ------------ pred BB15       \--*  PHI_ARG   int    V10 loc8         u:2

***** BB17
STMT00114 (IL   ???...  ???)
N006 (  4,  4) [000424] -A-XG---R---              *  ASG       int   
N005 (  1,  1) [000423] D------N----              +--*  LCL_VAR   int    V39 tmp28        d:2
N004 (  4,  4) [000237] ---XG-------              \--*  IND       int   
N003 (  2,  2) [000566] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000236] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000565] ------------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]

***** BB17
STMT00111 (IL   ???...  ???)
N004 (  5,  5) [000414] ------------              *  JTRUE     void  
N003 (  3,  3) [000413] J------N----              \--*  GE        int   
N001 (  1,  1) [000412] ------------                 +--*  LCL_VAR   int    V39 tmp28        u:2
N002 (  1,  1) [000411] ------------                 \--*  CNS_INT   int    8

------------ BB18 [000..000) -> BB20 (always), preds={BB17} succs={BB20}

***** BB18
STMT00113 (IL   ???...  ???)
N003 (  1,  3) [000421] -A------R---              *  ASG       int   
N002 (  1,  1) [000420] D------N----              +--*  LCL_VAR   int    V38 tmp27        d:4
N001 (  1,  1) [000419] ------------              \--*  LCL_VAR   int    V39 tmp28        u:2 (last use)

------------ BB19 [000..000), preds={BB17} succs={BB20}

***** BB19
STMT00112 (IL   ???...  ???)
N003 (  1,  3) [000417] -A------R---              *  ASG       int   
N002 (  1,  1) [000416] D------N----              +--*  LCL_VAR   int    V38 tmp27        d:3
N001 (  1,  1) [000415] ------------              \--*  CNS_INT   int    8

------------ BB20 [???..???) -> BB16 (cond), preds={BB18,BB19} succs={BB21,BB16}

***** BB20
STMT00121 (IL   ???...  ???)
N005 (  0,  0) [000584] -A------R---              *  ASG       int   
N004 (  0,  0) [000582] D------N----              +--*  LCL_VAR   int    V38 tmp27        d:2
N003 (  0,  0) [000583] ------------              \--*  PHI       int   
N001 (  0,  0) [000600] ------------ pred BB18       +--*  PHI_ARG   int    V38 tmp27        u:4
N002 (  0,  0) [000599] ------------ pred BB19       \--*  PHI_ARG   int    V38 tmp27        u:3

***** BB20
STMT00064 (IL   ???...  ???)
N004 (  5,  5) [000241] ------------              *  JTRUE     void  
N003 (  3,  3) [000240] J------N----              \--*  LT        int   
N001 (  1,  1) [000233] ------------                 +--*  LCL_VAR   int    V10 loc8         u:3
N002 (  1,  1) [000422] ------------                 \--*  LCL_VAR   int    V38 tmp27        u:2 (last use)

------------ BB21 [147..153) (return), preds={BB20} succs={}

***** BB21
STMT00115 (IL 0x147...  ???)
N006 (  4,  4) [000429] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000428] D------N----              +--*  LCL_VAR   ref    V40 tmp29        d:2
N004 (  4,  4) [000250] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000568] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000249] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 (last use)
N002 (  1,  1) [000567] ------------                    \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun]

***** BB21
STMT00068 (IL   ???...  ???)
N005 (  5,  5) [000253] ---XG-------              *  RETURN    ref   
N004 (  4,  4) [000427] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000570] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000426] ------------                    +--*  LCL_VAR   ref    V40 tmp29        u:2 (last use)
N002 (  1,  1) [000569] ------------                    \--*  CNS_INT   long   8 field offset Fseq[_task]

------------ BB22 [0F4..0F8) -> BB24 (cond), preds={} succs={BB23,BB24}

***** BB22
STMT00069 (IL 0x0F4...0x0F6)
N004 (  5,  5) [000257] ------------              *  JTRUE     void  
N003 (  3,  3) [000256] J------N----              \--*  EQ        int   
N001 (  1,  1) [000254] ------------                 +--*  LCL_VAR   ref    V06 loc4         u:2
N002 (  1,  1) [000255] ------------                 \--*  CNS_INT   ref    null

------------ BB23 [0F8..0FF), preds={BB22} succs={BB24}

***** BB23
STMT00071 (IL 0x0F8...0x0FA)
N005 ( 23, 21) [000260] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose
N003 (  1,  1) [000259] ------------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         u:2 (last use)
N004 (  2, 10) [000542] H----------- arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

------------ BB24 [0FF..100) (finret), preds={BB22,BB23} succs={}

***** BB24
STMT00070 (IL 0x0FF...0x0FF)
N001 (  0,  0) [000258] ------------              *  RETFILT   void  

-------------------------------------------------------------------------------------------------------------------

*************** Finishing PHASE Early Value Propagation

*************** Starting PHASE Do value numbering

*************** In fgValueNumber()
optComputeLoopSideEffects botNext is BB11, lnum is 0
optComputeLoopSideEffectsOfBlock BB03, mostNestedLoop 0
optComputeLoopSideEffectsOfBlock BB04, mostNestedLoop 0
optComputeLoopSideEffectsOfBlock BB05, mostNestedLoop 0
optComputeLoopSideEffectsOfBlock BB06, mostNestedLoop 0
optComputeLoopSideEffectsOfBlock BB07, mostNestedLoop 0
optComputeLoopSideEffectsOfBlock BB08, mostNestedLoop 0
optComputeLoopSideEffectsOfBlock BB09, mostNestedLoop 0
optComputeLoopSideEffectsOfBlock BB10, mostNestedLoop 0
optComputeLoopSideEffects botNext is BB21, lnum is 1
optComputeLoopSideEffectsOfBlock BB16, mostNestedLoop 1
optComputeLoopSideEffectsOfBlock BB17, mostNestedLoop 1
optComputeLoopSideEffectsOfBlock BB18, mostNestedLoop 1
optComputeLoopSideEffectsOfBlock BB19, mostNestedLoop 1
optComputeLoopSideEffectsOfBlock BB20, mostNestedLoop 1
Memory Initial Value in BB01 is: $82
The SSA definition for ByrefExposed (#1) at start of BB01 is $82 {InitVal($42)}
The SSA definition for GcHeap (#1) at start of BB01 is $82 {InitVal($42)}

***** BB01, STMT00000(before)
N005 ( 16, 16) [000003] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000002] D------N----              +--*  LCL_VAR   ref    V12 tmp1         d:2
N003 ( 16, 16) [000001] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000000] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

N001 [000438]   ARGPLACE  => $c0 {c0}
N002 [000000]   CNS_INT(h) 0xd1ffab1e method => $100 {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000438] updated to $100 {Hnd const: 0x00000000D1FFAB1E}
N003 [000001]   CALL help => $180 {JitNew($100, $140)}
N004 [000002]   LCL_VAR   V12 tmp1         d:2 => $180 {JitNew($100, $140)}
N005 [000003]   ASG       => $180 {JitNew($100, $140)}

***** BB01, STMT00000(after)
N005 ( 16, 16) [000003] -AC-----R---              *  ASG       ref    $180
N004 (  1,  1) [000002] D------N----              +--*  LCL_VAR   ref    V12 tmp1         d:2 $180
N003 ( 16, 16) [000001] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $180
N002 (  2, 10) [000000] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $100

---------

***** BB01, STMT00002(before)
N003 (  1,  3) [000008] -A------R---              *  ASG       ref   
N002 (  1,  1) [000007] D------N----              +--*  LCL_VAR   ref    V02 loc0         d:2
N001 (  1,  1) [000006] ------------              \--*  LCL_VAR   ref    V12 tmp1         u:2

N001 [000006]   LCL_VAR   V12 tmp1         u:2 => $180 {JitNew($100, $140)}
N002 [000007]   LCL_VAR   V02 loc0         d:2 => $180 {JitNew($100, $140)}
N003 [000008]   ASG       => $180 {JitNew($100, $140)}

***** BB01, STMT00002(after)
N003 (  1,  3) [000008] -A------R---              *  ASG       ref    $180
N002 (  1,  1) [000007] D------N----              +--*  LCL_VAR   ref    V02 loc0         d:2 $180
N001 (  1,  1) [000006] ------------              \--*  LCL_VAR   ref    V12 tmp1         u:2 $180

---------

***** BB01, STMT00003(before)
N006 (  6,  6) [000012] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000011] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000440] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000009] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2
N002 (  1,  1) [000439] ------------              |     \--*  CNS_INT   long   32 field offset Fseq[outputFile]
N005 (  1,  1) [000010] ------------              \--*  LCL_VAR   ref    V01 arg1         u:1 (last use)

N001 [000009]   LCL_VAR   V12 tmp1         u:2 => $180 {JitNew($100, $140)}
N002 [000439]   CNS_INT   32 field offset Fseq[outputFile] => $1c0 {LngCns:  32}
N003 [000440]   ADD       => $200 {ADD($180, $1c0)}
N005 [000010]   LCL_VAR   V01 arg1         u:1 (last use) => $81 {InitVal($41)}
  VNApplySelectors:
    VNForHandle(outputFile) is $101, fieldType is ref
    VNForMapSelect($82, $101):ref returns $181 {$82[$101]}
    VNForMapSelect($181, $180):ref returns $182 {$181[$180]}
    VNForMapStore($181, $180, $81):ref returns $240 {$181[$180 := $81]}
  VNApplySelectorsAssign:
    VNForHandle(outputFile) is $101, fieldType is ref
    VNForMapStore($82, $101, $240):ref returns $241 {$82[$101 := $240]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000012] to VN: $241.
N006 [000012]   ASG       => $VN.Void

***** BB01, STMT00003(after)
N006 (  6,  6) [000012] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000011] D--XG--N----              +--*  IND       ref    $81
N003 (  2,  2) [000440] -------N----              |  \--*  ADD       byref  $200
N001 (  1,  1) [000009] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2 $180
N002 (  1,  1) [000439] ------------              |     \--*  CNS_INT   long   32 field offset Fseq[outputFile] $1c0
N005 (  1,  1) [000010] ------------              \--*  LCL_VAR   ref    V01 arg1         u:1 (last use) $81

---------

***** BB01, STMT00004(before)
N006 (  6,  6) [000016] -A-XG-------              *  ASG       int   
N004 (  4,  4) [000015] D--XG--N----              +--*  IND       int   
N003 (  2,  2) [000442] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000013] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2
N002 (  1,  1) [000441] ------------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]
N005 (  1,  1) [000014] ------------              \--*  CNS_INT   int    0

N001 [000013]   LCL_VAR   V12 tmp1         u:2 => $180 {JitNew($100, $140)}
N002 [000441]   CNS_INT   60 field offset Fseq[analyzerCount] => $1c1 {LngCns:  60}
N003 [000442]   ADD       => $201 {ADD($180, $1c1)}
N005 [000014]   CNS_INT   0 => $40 {IntCns 0}
  VNApplySelectors:
    VNForHandle(analyzerCount) is $102, fieldType is int
      AX2: $102 != $101 ==> select([$241]store($82, $101, $240), $102) ==> select($82, $102).
    VNForMapSelect($241, $102):int returns $280 {$82[$102]}
    VNForMapSelect($280, $180):int returns $281 {$280[$180]}
    VNForMapStore($280, $180, $40):int returns $2c0 {$280[$180 := $40]}
  VNApplySelectorsAssign:
    VNForHandle(analyzerCount) is $102, fieldType is int
    VNForMapStore($241, $102, $2c0):int returns $2c1 {$241[$102 := $2c0]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000016] to VN: $2c1.
N006 [000016]   ASG       => $VN.Void

***** BB01, STMT00004(after)
N006 (  6,  6) [000016] -A-XG-------              *  ASG       int    $VN.Void
N004 (  4,  4) [000015] D--XG--N----              +--*  IND       int    $40
N003 (  2,  2) [000442] -------N----              |  \--*  ADD       byref  $201
N001 (  1,  1) [000013] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2 $180
N002 (  1,  1) [000441] ------------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1
N005 (  1,  1) [000014] ------------              \--*  CNS_INT   int    0 $40

---------

***** BB01, STMT00005(before)
N006 (  6,  6) [000020] -A-XG-------              *  ASG       int   
N004 (  4,  4) [000019] D--XG--N----              +--*  IND       int   
N003 (  2,  2) [000444] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000017] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2
N002 (  1,  1) [000443] ------------              |     \--*  CNS_INT   long   56 field offset Fseq[analyzersFinishedCount]
N005 (  1,  1) [000018] ------------              \--*  CNS_INT   int    0

N001 [000017]   LCL_VAR   V12 tmp1         u:2 => $180 {JitNew($100, $140)}
N002 [000443]   CNS_INT   56 field offset Fseq[analyzersFinishedCount] => $1c2 {LngCns:  56}
N003 [000444]   ADD       => $202 {ADD($180, $1c2)}
N005 [000018]   CNS_INT   0 => $40 {IntCns 0}
  VNApplySelectors:
    VNForHandle(analyzersFinishedCount) is $103, fieldType is int
      AX2: $103 != $102 ==> select([$2c1]store($241, $102, $2c0), $103) ==> select($241, $103).
      AX2: $103 != $101 ==> select([$241]store($82, $101, $240), $103) ==> select($82, $103).
    VNForMapSelect($2c1, $103):int returns $282 {$82[$103]}
    VNForMapSelect($282, $180):int returns $283 {$282[$180]}
    VNForMapStore($282, $180, $40):int returns $2c2 {$282[$180 := $40]}
  VNApplySelectorsAssign:
    VNForHandle(analyzersFinishedCount) is $103, fieldType is int
    VNForMapStore($2c1, $103, $2c2):int returns $2c3 {$2c1[$103 := $2c2]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000020] to VN: $2c3.
N006 [000020]   ASG       => $VN.Void

***** BB01, STMT00005(after)
N006 (  6,  6) [000020] -A-XG-------              *  ASG       int    $VN.Void
N004 (  4,  4) [000019] D--XG--N----              +--*  IND       int    $40
N003 (  2,  2) [000444] -------N----              |  \--*  ADD       byref  $202
N001 (  1,  1) [000017] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2 $180
N002 (  1,  1) [000443] ------------              |     \--*  CNS_INT   long   56 field offset Fseq[analyzersFinishedCount] $1c2
N005 (  1,  1) [000018] ------------              \--*  CNS_INT   int    0 $40

---------

***** BB01, STMT00006(before)
N005 ( 16, 16) [000025] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000024] D------N----              +--*  LCL_VAR   ref    V13 tmp2         d:2
N003 ( 16, 16) [000023] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000022] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

N001 [000445]   ARGPLACE  => $c1 {c1}
N002 [000022]   CNS_INT(h) 0xd1ffab1e token => $104 {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000445] updated to $104 {Hnd const: 0x00000000D1FFAB1E}
N003 [000023]   CALL help => $183 {JitNew($104, $143)}
N004 [000024]   LCL_VAR   V13 tmp2         d:2 => $183 {JitNew($104, $143)}
N005 [000025]   ASG       => $183 {JitNew($104, $143)}

***** BB01, STMT00006(after)
N005 ( 16, 16) [000025] -AC-----R---              *  ASG       ref    $183
N004 (  1,  1) [000024] D------N----              +--*  LCL_VAR   ref    V13 tmp2         d:2 $183
N003 ( 16, 16) [000023] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $183
N002 (  2, 10) [000022] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $104

---------

***** BB01, STMT00074(before)
N005 ( 16, 16) [000269] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000268] D------N----              +--*  LCL_VAR   ref    V30 tmp19        d:2
N003 ( 16, 16) [000267] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000266] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

N001 [000446]   ARGPLACE  => $c2 {c2}
N002 [000266]   CNS_INT(h) 0xd1ffab1e token => $105 {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000446] updated to $105 {Hnd const: 0x00000000D1FFAB1E}
N003 [000267]   CALL help => $184 {JitNew($105, $145)}
N004 [000268]   LCL_VAR   V30 tmp19        d:2 => $184 {JitNew($105, $145)}
N005 [000269]   ASG       => $184 {JitNew($105, $145)}

***** BB01, STMT00074(after)
N005 ( 16, 16) [000269] -AC-----R---              *  ASG       ref    $184
N004 (  1,  1) [000268] D------N----              +--*  LCL_VAR   ref    V30 tmp19        d:2 $184
N003 ( 16, 16) [000267] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $184
N002 (  2, 10) [000266] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $105

---------

***** BB01, STMT00079(before)
N006 (  6,  9) [000283] -A-XGO------              *  ASG       int   
N004 (  4,  4) [000282] V--XGO-N----              +--*  IND       int   
N003 (  2,  2) [000448] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000280] ------------              |     +--*  LCL_VAR   ref    V30 tmp19        u:2
N002 (  1,  1) [000447] ------------              |     \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags]
N005 (  1,  4) [000281] ------------              \--*  CNS_INT   int    0x2000400

N001 [000280]   LCL_VAR   V30 tmp19        u:2 => $184 {JitNew($105, $145)}
N002 [000447]   CNS_INT   52 field offset Fseq[m_stateFlags] => $1c3 {LngCns:  52}
N003 [000448]   ADD       => $203 {ADD($184, $1c3)}
  fgCurMemoryVN[GcHeap] assigned for GTF_IND_VOLATILE - read at [000282] to VN: $147.
N004 [000282]   IND       => $300 {300}
N005 [000281]   CNS_INT   0x2000400 => $43 {IntCns 0x2000400}
  fgCurMemoryVN[GcHeap] assigned for GTF_IND_VOLATILE - store at [000282] to VN: $148.
  VNApplySelectors:
    VNForHandle(m_stateFlags) is $106, fieldType is int
    VNForMapSelect($148, $106):int returns $284 {$148[$106]}
    VNForMapSelect($284, $184):int returns $285 {$284[$184]}
    VNForMapStore($284, $184, $43):int returns $2c4 {$284[$184 := $43]}
  VNApplySelectorsAssign:
    VNForHandle(m_stateFlags) is $106, fieldType is int
    VNForMapStore($148, $106, $2c4):int returns $2c5 {$148[$106 := $2c4]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000283] to VN: $2c5.
N006 [000283]   ASG       => $VN.Void

***** BB01, STMT00079(after)
N006 (  6,  9) [000283] -A-XGO------              *  ASG       int    $VN.Void
N004 (  4,  4) [000282] V--XGO-N----              +--*  IND       int    $43
N003 (  2,  2) [000448] -------N----              |  \--*  ADD       byref  $203
N001 (  1,  1) [000280] ------------              |     +--*  LCL_VAR   ref    V30 tmp19        u:2 $184
N002 (  1,  1) [000447] ------------              |     \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags] $1c3
N005 (  1,  4) [000281] ------------              \--*  CNS_INT   int    0x2000400 $43

---------

***** BB01, STMT00076(before)
N006 (  6,  6) [000274] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000273] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000450] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000265] ------------              |     +--*  LCL_VAR   ref    V13 tmp2         u:2
N002 (  1,  1) [000449] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_task]
N005 (  1,  1) [000272] ------------              \--*  LCL_VAR   ref    V30 tmp19        u:2 (last use)

N001 [000265]   LCL_VAR   V13 tmp2         u:2 => $183 {JitNew($104, $143)}
N002 [000449]   CNS_INT   8 field offset Fseq[_task] => $1c4 {LngCns:  8}
N003 [000450]   ADD       => $204 {ADD($183, $1c4)}
N005 [000272]   LCL_VAR   V30 tmp19        u:2 (last use) => $184 {JitNew($105, $145)}
  VNApplySelectors:
    VNForHandle(_task) is $107, fieldType is ref
      AX2: $107 != $106 ==> select([$2c5]store($148, $106, $2c4), $107) ==> select($148, $107).
    VNForMapSelect($2c5, $107):ref returns $185 {$148[$107]}
    VNForMapSelect($185, $183):ref returns $186 {$185[$183]}
    VNForMapStore($185, $183, $184):ref returns $242 {$185[$183 := $184]}
  VNApplySelectorsAssign:
    VNForHandle(_task) is $107, fieldType is ref
    VNForMapStore($2c5, $107, $242):ref returns $243 {$2c5[$107 := $242]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000274] to VN: $243.
N006 [000274]   ASG       => $VN.Void

***** BB01, STMT00076(after)
N006 (  6,  6) [000274] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000273] D--XG--N----              +--*  IND       ref    $184
N003 (  2,  2) [000450] -------N----              |  \--*  ADD       byref  $204
N001 (  1,  1) [000265] ------------              |     +--*  LCL_VAR   ref    V13 tmp2         u:2 $183
N002 (  1,  1) [000449] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_task] $1c4
N005 (  1,  1) [000272] ------------              \--*  LCL_VAR   ref    V30 tmp19        u:2 (last use) $184

---------

***** BB01, STMT00008(before)
N006 (  6,  6) [000030] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000029] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000452] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000021] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2
N002 (  1,  1) [000451] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun]
N005 (  1,  1) [000028] ------------              \--*  LCL_VAR   ref    V13 tmp2         u:2 (last use)

N001 [000021]   LCL_VAR   V12 tmp1         u:2 => $180 {JitNew($100, $140)}
N002 [000451]   CNS_INT   24 field offset Fseq[allAnalyzersHaveRun] => $1c5 {LngCns:  24}
N003 [000452]   ADD       => $205 {ADD($180, $1c5)}
N005 [000028]   LCL_VAR   V13 tmp2         u:2 (last use) => $183 {JitNew($104, $143)}
  VNApplySelectors:
    VNForHandle(allAnalyzersHaveRun) is $108, fieldType is ref
      AX2: $108 != $107 ==> select([$243]store($2c5, $107, $242), $108) ==> select($2c5, $108).
      AX2: $108 != $106 ==> select([$2c5]store($148, $106, $2c4), $108) ==> select($148, $108).
    VNForMapSelect($243, $108):ref returns $187 {$148[$108]}
    VNForMapSelect($187, $180):ref returns $188 {$187[$180]}
    VNForMapStore($187, $180, $183):ref returns $244 {$187[$180 := $183]}
  VNApplySelectorsAssign:
    VNForHandle(allAnalyzersHaveRun) is $108, fieldType is ref
    VNForMapStore($243, $108, $244):ref returns $245 {$243[$108 := $244]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000030] to VN: $245.
N006 [000030]   ASG       => $VN.Void

***** BB01, STMT00008(after)
N006 (  6,  6) [000030] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000029] D--XG--N----              +--*  IND       ref    $183
N003 (  2,  2) [000452] -------N----              |  \--*  ADD       byref  $205
N001 (  1,  1) [000021] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2 $180
N002 (  1,  1) [000451] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun] $1c5
N005 (  1,  1) [000028] ------------              \--*  LCL_VAR   ref    V13 tmp2         u:2 (last use) $183

---------

***** BB01, STMT00009(before)
N005 ( 16, 16) [000035] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000034] D------N----              +--*  LCL_VAR   ref    V14 tmp3         d:2
N003 ( 16, 16) [000033] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000032] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

N001 [000453]   ARGPLACE  => $c3 {c3}
N002 [000032]   CNS_INT(h) 0xd1ffab1e token => $109 {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000453] updated to $109 {Hnd const: 0x00000000D1FFAB1E}
N003 [000033]   CALL help => $189 {JitNew($109, $149)}
N004 [000034]   LCL_VAR   V14 tmp3         d:2 => $189 {JitNew($109, $149)}
N005 [000035]   ASG       => $189 {JitNew($109, $149)}

***** BB01, STMT00009(after)
N005 ( 16, 16) [000035] -AC-----R---              *  ASG       ref    $189
N004 (  1,  1) [000034] D------N----              +--*  LCL_VAR   ref    V14 tmp3         d:2 $189
N003 ( 16, 16) [000033] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $189
N002 (  2, 10) [000032] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $109

---------

***** BB01, STMT00082(before)
N013 ( 26, 35) [000292] -ACXG---R---              *  ASG       ref   
N012 (  4,  4) [000291] D--XG--N----              +--*  IND       ref   
N011 (  2,  2) [000455] -------N----              |  \--*  ADD       byref 
N009 (  1,  1) [000287] ------------              |     +--*  LCL_VAR   ref    V14 tmp3         u:2
N010 (  1,  1) [000454] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_array]
N008 ( 21, 30) [000300] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 18) [000299] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS
N003 (  2, 10) [000297] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e0b0028
N004 (  1,  1) [000298] ------------ arg1 in rdx     |  \--*  CNS_INT   int    14
N007 (  4, 12) [000295] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000458] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[Value]

N001 [000456]   ARGPLACE  => $c4 {c4}
N002 [000457]   ARGPLACE  => $302 {302}
N003 [000297]   CNS_INT   0x7ffc7e0b0028 => $1c6 {LngCns:  0x7ffc7e0b0028}
N004 [000298]   CNS_INT   14 => $44 {IntCns 14}
VN of ARGPLACE tree [000456] updated to $1c6 {LngCns:  0x7ffc7e0b0028}
VN of ARGPLACE tree [000457] updated to $44 {IntCns 14}
N005 [000299]   CALL help => $381 {norm=$380 {ClassinitSharedDynamicclass($1c6, $44)}, exc=$18a {HelperMultipleExc()}}
N006 [000458]   CNS_INT(h) 0xd1ffab1e static Fseq[Value] => $10a {Hnd const: 0x00000000D1FFAB1E}
N007 [000295]   IND       => <l:$246 {ByrefExposedLoad($45, $10a, $245)}, c:$14b {14b}>
N008 [000300]   COMMA     => <l:$18c {norm=$246 {ByrefExposedLoad($45, $10a, $245)}, exc=$18a {HelperMultipleExc()}}, c:$18b {norm=$14b {14b}, exc=$18a {HelperMultipleExc()}}>
N009 [000287]   LCL_VAR   V14 tmp3         u:2 => $189 {JitNew($109, $149)}
N010 [000454]   CNS_INT   8 field offset Fseq[_array] => $1c4 {LngCns:  8}
N011 [000455]   ADD       => $206 {ADD($189, $1c4)}
  VNApplySelectors:
    VNForHandle(_array) is $10b, fieldType is ref
      AX2: $10b != $108 ==> select([$245]store($243, $108, $244), $10b) ==> select($243, $10b).
      AX2: $10b != $107 ==> select([$243]store($2c5, $107, $242), $10b) ==> select($2c5, $10b).
      AX2: $10b != $106 ==> select([$2c5]store($148, $106, $2c4), $10b) ==> select($148, $10b).
    VNForMapSelect($245, $10b):ref returns $18d {$148[$10b]}
    VNForMapSelect($18d, $189):ref returns $18e {$18d[$189]}
    VNForMapStore($18d, $189, $246):ref returns $247 {$18d[$189 := $246]}
  VNApplySelectorsAssign:
    VNForHandle(_array) is $10b, fieldType is ref
    VNForMapStore($245, $10b, $247):ref returns $248 {$245[$10b := $247]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000292] to VN: $248.
N013 [000292]   ASG       => $VN.Void

***** BB01, STMT00082(after)
N013 ( 26, 35) [000292] -ACXG---R---              *  ASG       ref    $VN.Void
N012 (  4,  4) [000291] D--XG--N----              +--*  IND       ref    $246
N011 (  2,  2) [000455] -------N----              |  \--*  ADD       byref  $206
N009 (  1,  1) [000287] ------------              |     +--*  LCL_VAR   ref    V14 tmp3         u:2 $189
N010 (  1,  1) [000454] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_array] $1c4
N008 ( 21, 30) [000300] --CXG-------              \--*  COMMA     ref    <l:$18c, c:$18b>
N005 ( 17, 18) [000299] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS $381
N003 (  2, 10) [000297] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e0b0028 $1c6
N004 (  1,  1) [000298] ------------ arg1 in rdx     |  \--*  CNS_INT   int    14 $44
N007 (  4, 12) [000295] n---G-------                 \--*  IND       ref    <l:$246, c:$14b>
N006 (  2, 10) [000458] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[Value] $10a

---------

***** BB01, STMT00011(before)
N006 (  6,  6) [000040] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000039] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000460] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000031] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2
N002 (  1,  1) [000459] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers]
N005 (  1,  1) [000038] ------------              \--*  LCL_VAR   ref    V14 tmp3         u:2 (last use)

N001 [000031]   LCL_VAR   V12 tmp1         u:2 => $180 {JitNew($100, $140)}
N002 [000459]   CNS_INT   8 field offset Fseq[queuedAnalyzers] => $1c4 {LngCns:  8}
N003 [000460]   ADD       => $207 {ADD($180, $1c4)}
N005 [000038]   LCL_VAR   V14 tmp3         u:2 (last use) => $189 {JitNew($109, $149)}
  VNApplySelectors:
    VNForHandle(queuedAnalyzers) is $10c, fieldType is ref
      AX2: $10c != $10b ==> select([$248]store($245, $10b, $247), $10c) ==> select($245, $10c).
      AX2: $10c != $108 ==> select([$245]store($243, $108, $244), $10c) ==> select($243, $10c).
      AX2: $10c != $107 ==> select([$243]store($2c5, $107, $242), $10c) ==> select($2c5, $10c).
      AX2: $10c != $106 ==> select([$2c5]store($148, $106, $2c4), $10c) ==> select($148, $10c).
    VNForMapSelect($248, $10c):ref returns $18f {$148[$10c]}
    VNForMapSelect($18f, $180):ref returns $190 {$18f[$180]}
    VNForMapStore($18f, $180, $189):ref returns $249 {$18f[$180 := $189]}
  VNApplySelectorsAssign:
    VNForHandle(queuedAnalyzers) is $10c, fieldType is ref
    VNForMapStore($248, $10c, $249):ref returns $24a {$248[$10c := $249]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000040] to VN: $24a.
N006 [000040]   ASG       => $VN.Void

***** BB01, STMT00011(after)
N006 (  6,  6) [000040] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000039] D--XG--N----              +--*  IND       ref    $189
N003 (  2,  2) [000460] -------N----              |  \--*  ADD       byref  $207
N001 (  1,  1) [000031] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2 $180
N002 (  1,  1) [000459] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers] $1c4
N005 (  1,  1) [000038] ------------              \--*  LCL_VAR   ref    V14 tmp3         u:2 (last use) $189

---------

***** BB01, STMT00012(before)
N006 (  6,  6) [000044] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000043] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000462] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000041] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2
N002 (  1,  1) [000461] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter]
N005 (  1,  1) [000042] ------------              \--*  CNS_INT   ref    null

N001 [000041]   LCL_VAR   V12 tmp1         u:2 => $180 {JitNew($100, $140)}
N002 [000461]   CNS_INT   16 field offset Fseq[progressReporter] => $1c7 {LngCns:  16}
N003 [000462]   ADD       => $208 {ADD($180, $1c7)}
N005 [000042]   CNS_INT   null => $VN.Null
  VNApplySelectors:
    VNForHandle(progressReporter) is $10d, fieldType is ref
      AX2: $10d != $10c ==> select([$24a]store($248, $10c, $249), $10d) ==> select($248, $10d).
      AX2: $10d != $10b ==> select([$248]store($245, $10b, $247), $10d) ==> select($245, $10d).
      AX2: $10d != $108 ==> select([$245]store($243, $108, $244), $10d) ==> select($243, $10d).
      AX2: $10d != $107 ==> select([$243]store($2c5, $107, $242), $10d) ==> select($2c5, $10d).
      AX2: $10d != $106 ==> select([$2c5]store($148, $106, $2c4), $10d) ==> select($148, $10d).
    VNForMapSelect($24a, $10d):ref returns $191 {$148[$10d]}
    VNForMapSelect($191, $180):ref returns $192 {$191[$180]}
    VNForMapStore($191, $180, $0):ref returns $24b {$191[$180 := $VN.Null]}
  VNApplySelectorsAssign:
    VNForHandle(progressReporter) is $10d, fieldType is ref
    VNForMapStore($24a, $10d, $24b):ref returns $24c {$24a[$10d := $24b]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000044] to VN: $24c.
N006 [000044]   ASG       => $VN.Void

***** BB01, STMT00012(after)
N006 (  6,  6) [000044] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000043] D--XG--N----              +--*  IND       ref    $VN.Null
N003 (  2,  2) [000462] -------N----              |  \--*  ADD       byref  $208
N001 (  1,  1) [000041] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2 $180
N002 (  1,  1) [000461] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter] $1c7
N005 (  1,  1) [000042] ------------              \--*  CNS_INT   ref    null $VN.Null

---------

***** BB01, STMT00013(before)
N005 ( 16, 16) [000049] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000048] D------N----              +--*  LCL_VAR   ref    V15 tmp4         d:2
N003 ( 16, 16) [000047] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000046] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

N001 [000463]   ARGPLACE  => $c5 {c5}
N002 [000046]   CNS_INT(h) 0xd1ffab1e token => $10e {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000463] updated to $10e {Hnd const: 0x00000000D1FFAB1E}
N003 [000047]   CALL help => $193 {JitNew($10e, $14c)}
N004 [000048]   LCL_VAR   V15 tmp4         d:2 => $193 {JitNew($10e, $14c)}
N005 [000049]   ASG       => $193 {JitNew($10e, $14c)}

***** BB01, STMT00013(after)
N005 ( 16, 16) [000049] -AC-----R---              *  ASG       ref    $193
N004 (  1,  1) [000048] D------N----              +--*  LCL_VAR   ref    V15 tmp4         d:2 $193
N003 ( 16, 16) [000047] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $193
N002 (  2, 10) [000046] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $10e

---------

***** BB01, STMT00083(before)
N005 ( 16, 10) [000303] --CXG-------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor
N003 (  1,  1) [000050] ------------ this in rcx  +--*  LCL_VAR   ref    V15 tmp4         u:2
N004 (  1,  1) [000302] ------------ arg1 in rdx  \--*  CNS_INT   ref    null

N001 [000464]   ARGPLACE  => $14e {14e}
N002 [000465]   ARGPLACE  => $14f {14f}
N003 [000050]   LCL_VAR   V15 tmp4         u:2 => $193 {JitNew($10e, $14c)}
N004 [000302]   CNS_INT   null => $VN.Null
VN of ARGPLACE tree [000465] updated to $193 {JitNew($10e, $14c)}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000303] to VN: $150.
N005 [000303]   CALL      => $VN.Void

***** BB01, STMT00083(after)
N005 ( 16, 10) [000303] --CXG-------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor $VN.Void
N003 (  1,  1) [000050] ------------ this in rcx  +--*  LCL_VAR   ref    V15 tmp4         u:2 $193
N004 (  1,  1) [000302] ------------ arg1 in rdx  \--*  CNS_INT   ref    null $VN.Null

---------

***** BB01, STMT00015(before)
N006 (  6,  6) [000054] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000053] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000467] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000045] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2 (last use)
N002 (  1,  1) [000466] ------------              |     \--*  CNS_INT   long   40 field offset Fseq[output]
N005 (  1,  1) [000052] ------------              \--*  LCL_VAR   ref    V15 tmp4         u:2 (last use)

N001 [000045]   LCL_VAR   V12 tmp1         u:2 (last use) => $180 {JitNew($100, $140)}
N002 [000466]   CNS_INT   40 field offset Fseq[output] => $1c8 {LngCns:  40}
N003 [000467]   ADD       => $209 {ADD($180, $1c8)}
N005 [000052]   LCL_VAR   V15 tmp4         u:2 (last use) => $193 {JitNew($10e, $14c)}
  VNApplySelectors:
    VNForHandle(output) is $10f, fieldType is ref
    VNForMapSelect($150, $10f):ref returns $194 {$150[$10f]}
    VNForMapSelect($194, $180):ref returns $195 {$194[$180]}
    VNForMapStore($194, $180, $193):ref returns $24d {$194[$180 := $193]}
  VNApplySelectorsAssign:
    VNForHandle(output) is $10f, fieldType is ref
    VNForMapStore($150, $10f, $24d):ref returns $24e {$150[$10f := $24d]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000054] to VN: $24e.
N006 [000054]   ASG       => $VN.Void

***** BB01, STMT00015(after)
N006 (  6,  6) [000054] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000053] D--XG--N----              +--*  IND       ref    $193
N003 (  2,  2) [000467] -------N----              |  \--*  ADD       byref  $209
N001 (  1,  1) [000045] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2 (last use) $180
N002 (  1,  1) [000466] ------------              |     \--*  CNS_INT   long   40 field offset Fseq[output] $1c8
N005 (  1,  1) [000052] ------------              \--*  LCL_VAR   ref    V15 tmp4         u:2 (last use) $193

---------

***** BB01, STMT00086(before)
N003 ( 14,  5) [000316] -ACXG---R---              *  ASG       ref   
N002 (  1,  1) [000315] D------N----              +--*  LCL_VAR   ref    V31 tmp20        d:2
N001 ( 14,  5) [000055] --CXG-------              \--*  CALL      ref    System.Diagnostics.Process.GetCurrentProcess

  fgCurMemoryVN[GcHeap] assigned for CALL at [000055] to VN: $152.
N001 [000055]   CALL      => $151 {151}
N002 [000315]   LCL_VAR   V31 tmp20        d:2 => $151 {151}
N003 [000316]   ASG       => $151 {151}

***** BB01, STMT00086(after)
N003 ( 14,  5) [000316] -ACXG---R---              *  ASG       ref    $151
N002 (  1,  1) [000315] D------N----              +--*  LCL_VAR   ref    V31 tmp20        d:2 $151
N001 ( 14,  5) [000055] --CXG-------              \--*  CALL      ref    System.Diagnostics.Process.GetCurrentProcess $151

---------

***** BB01, STMT00087(before)
N002 (  2,  2) [000314] ---X--------              *  NULLCHECK byte  
N001 (  1,  1) [000313] ------------              \--*  LCL_VAR   ref    V31 tmp20        u:2

N001 [000313]   LCL_VAR   V31 tmp20        u:2 => $151 {151}
N002 [000314]   NULLCHECK => $197 {norm=$3 {3}, exc=$196 {NullPtrExc($151)}}

***** BB01, STMT00087(after)
N002 (  2,  2) [000314] ---X--------              *  NULLCHECK byte   $197
N001 (  1,  1) [000313] ------------              \--*  LCL_VAR   ref    V31 tmp20        u:2 $151

---------

***** BB01, STMT00084(before)
N005 ( 16, 10) [000308] --CXG-------              *  CALL      void   System.Diagnostics.Process.EnsureState
N003 (  1,  1) [000306] ------------ this in rcx  +--*  LCL_VAR   ref    V31 tmp20        u:2
N004 (  1,  1) [000307] ------------ arg1 in rdx  \--*  CNS_INT   int    3

N001 [000468]   ARGPLACE  => $154 {154}
N002 [000469]   ARGPLACE  => $303 {303}
N003 [000306]   LCL_VAR   V31 tmp20        u:2 => $151 {151}
N004 [000307]   CNS_INT   3 => $46 {IntCns 3}
VN of ARGPLACE tree [000469] updated to $151 {151}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000308] to VN: $155.
N005 [000308]   CALL      => $VN.Void

***** BB01, STMT00084(after)
N005 ( 16, 10) [000308] --CXG-------              *  CALL      void   System.Diagnostics.Process.EnsureState $VN.Void
N003 (  1,  1) [000306] ------------ this in rcx  +--*  LCL_VAR   ref    V31 tmp20        u:2 $151
N004 (  1,  1) [000307] ------------ arg1 in rdx  \--*  CNS_INT   int    3 $46

---------

***** BB01, STMT00088(before)
N008 ( 18, 13) [000322] -ACXG---R---              *  ASG       ref   
N007 (  1,  1) [000321] D------N----              +--*  LCL_VAR   ref    V32 tmp21        d:2
N006 ( 18, 13) [000311] --CXG-------              \--*  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule
N005 (  4,  7) [000310] ---XG------- arg0 in rcx     \--*  IND       int   
N004 (  2,  5) [000471] -------N----                    \--*  ADD       byref 
N002 (  1,  1) [000309] ------------                       +--*  LCL_VAR   ref    V31 tmp20        u:2 (last use)
N003 (  1,  4) [000470] ------------                       \--*  CNS_INT   long   200 field offset Fseq[_processId]

N001 [000472]   ARGPLACE  => $304 {304}
N002 [000309]   LCL_VAR   V31 tmp20        u:2 (last use) => $151 {151}
N003 [000470]   CNS_INT   200 field offset Fseq[_processId] => $1c9 {LngCns:  200}
N004 [000471]   ADD       => $20a {ADD($151, $1c9)}
  VNApplySelectors:
    VNForHandle(_processId) is $110, fieldType is int
    VNForMapSelect($155, $110):int returns $286 {$155[$110]}
    VNForMapSelect($286, $151):int returns $287 {$286[$151]}
N005 [000310]   IND       => <l:$289 {norm=$287 {$286[$151]}, exc=$196 {NullPtrExc($151)}}, c:$288 {norm=$305 {305}, exc=$196 {NullPtrExc($151)}}>
VN of ARGPLACE tree [000472] updated to <l:$289 {norm=$287 {$286[$151]}, exc=$196 {NullPtrExc($151)}}, c:$288 {norm=$305 {305}, exc=$196 {NullPtrExc($151)}}>
  fgCurMemoryVN[GcHeap] assigned for CALL at [000311] to VN: $157.
N006 [000311]   CALL      => $156 {156}
N007 [000321]   LCL_VAR   V32 tmp21        d:2 => $156 {156}
N008 [000322]   ASG       => $156 {156}

***** BB01, STMT00088(after)
N008 ( 18, 13) [000322] -ACXG---R---              *  ASG       ref    $156
N007 (  1,  1) [000321] D------N----              +--*  LCL_VAR   ref    V32 tmp21        d:2 $156
N006 ( 18, 13) [000311] --CXG-------              \--*  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule $156
N005 (  4,  7) [000310] ---XG------- arg0 in rcx     \--*  IND       int    <l:$289, c:$288>
N004 (  2,  5) [000471] -------N----                    \--*  ADD       byref  $20a
N002 (  1,  1) [000309] ------------                       +--*  LCL_VAR   ref    V31 tmp20        u:2 (last use) $151
N003 (  1,  4) [000470] ------------                       \--*  CNS_INT   long   200 field offset Fseq[_processId] $1c9

---------

***** BB01, STMT00019(before)
N006 (  4,  4) [000062] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000061] D------N----              +--*  LCL_VAR   ref    V03 loc1         d:2
N004 (  4,  4) [000320] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000474] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000319] ------------                    +--*  LCL_VAR   ref    V32 tmp21        u:2 (last use)
N002 (  1,  1) [000473] ------------                    \--*  CNS_INT   long   40 field offset Fseq[<FileName>k__BackingField]

N001 [000319]   LCL_VAR   V32 tmp21        u:2 (last use) => $156 {156}
N002 [000473]   CNS_INT   40 field offset Fseq[<FileName>k__BackingField] => $1c8 {LngCns:  40}
N003 [000474]   ADD       => $20b {ADD($156, $1c8)}
  VNApplySelectors:
    VNForHandle(<FileName>k__BackingField) is $111, fieldType is ref
    VNForMapSelect($157, $111):ref returns $198 {$157[$111]}
    VNForMapSelect($198, $156):ref returns $199 {$198[$156]}
N004 [000320]   IND       => <l:$19c {norm=$199 {$198[$156]}, exc=$19a {NullPtrExc($156)}}, c:$19b {norm=$159 {159}, exc=$19a {NullPtrExc($156)}}>
N005 [000061]   LCL_VAR   V03 loc1         d:2 => <l:$199 {$198[$156]}, c:$159 {159}>
N006 [000062]   ASG       => <l:$19c {norm=$199 {$198[$156]}, exc=$19a {NullPtrExc($156)}}, c:$19b {norm=$159 {159}, exc=$19a {NullPtrExc($156)}}>

***** BB01, STMT00019(after)
N006 (  4,  4) [000062] -A-XG---R---              *  ASG       ref    <l:$19c, c:$19b>
N005 (  1,  1) [000061] D------N----              +--*  LCL_VAR   ref    V03 loc1         d:2 <l:$199, c:$159>
N004 (  4,  4) [000320] ---XG-------              \--*  IND       ref    <l:$19c, c:$19b>
N003 (  2,  2) [000474] -------N----                 \--*  ADD       byref  $20b
N001 (  1,  1) [000319] ------------                    +--*  LCL_VAR   ref    V32 tmp21        u:2 (last use) $156
N002 (  1,  1) [000473] ------------                    \--*  CNS_INT   long   40 field offset Fseq[<FileName>k__BackingField] $1c8

---------

***** BB01, STMT00021(before)
N016 ( 32, 30) [000069] -ACXG---R---              *  ASG       int   
N015 (  1,  1) [000068] D------N----              +--*  LCL_VAR   int    V04 loc2         d:2
N014 ( 32, 30) [000329] --CXG-------              \--*  GE        int   
N012 ( 27, 28) [000340] --CXG-------                 +--*  CALL      int    System.String.IndexOf
N005 (  1,  1) [000339] ------------ arg4 out+20     |  +--*  CNS_INT   int    5
N007 (  3,  3) [000338] ---X-------- arg3 in r9      |  +--*  ARR_LENGTH int   
N006 (  1,  1) [000337] ------------                 |  |  \--*  LCL_VAR   ref    V03 loc1         u:2
N009 (  4, 12) [000476] #---G------- arg1 in rdx     |  +--*  IND       ref   
N008 (  2, 10) [000475] H-----------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E "dotnet.exe"
N010 (  1,  1) [000063] ------------ this in rcx     |  +--*  LCL_VAR   ref    V03 loc1         u:2
N011 (  1,  1) [000336] ------------ arg2 in r8      |  \--*  CNS_INT   int    0
N013 (  1,  1) [000328] ------------                 \--*  CNS_INT   int    0

N001 [000479]   ARGPLACE  => $15b {15b}
N002 [000478]   ARGPLACE  => $15c {15c}
N003 [000480]   ARGPLACE  => $306 {306}
N004 [000477]   ARGPLACE  => $307 {307}
N005 [000339]   CNS_INT   5 => $47 {IntCns 5}
N006 [000337]   LCL_VAR   V03 loc1         u:2 => <l:$199 {$198[$156]}, c:$159 {159}>
N007 [000338]   ARR_LENGTH => <l:$28b {norm=$3c1 {ARR_LENGTH($199)}, exc=$19e {NullPtrExc($199)}}, c:$28a {norm=$3c0 {ARR_LENGTH($159)}, exc=$19d {NullPtrExc($159)}}>
N008 [000475]   CNS_INT(h) 0xD1FFAB1E "dotnet.exe" => $112 {Hnd const: 0x00000000D1FFAB1E}
    VNForMapSelect($2, $112):ref returns $19f {$VN.ReadOnlyHeap[$112]}
    VNForMapSelect($2, $112):ref returns $19f {$VN.ReadOnlyHeap[$112]}
N009 [000476]   IND       => $19f {$VN.ReadOnlyHeap[$112]}
N010 [000063]   LCL_VAR   V03 loc1         u:2 => <l:$199 {$198[$156]}, c:$159 {159}>
N011 [000336]   CNS_INT   0 => $40 {IntCns 0}
VN of ARGPLACE tree [000478] updated to <l:$199 {$198[$156]}, c:$159 {159}>
VN of ARGPLACE tree [000480] updated to $19f {$VN.ReadOnlyHeap[$112]}
VN of ARGPLACE tree [000477] updated to $40 {IntCns 0}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000340] to VN: $15d.
N012 [000340]   CALL      => $308 {308}
N013 [000328]   CNS_INT   0 => $40 {IntCns 0}
N014 [000329]   GE        => $28c {GE($308, $40)}
N015 [000068]   LCL_VAR   V04 loc2         d:2 => $28c {GE($308, $40)}
N016 [000069]   ASG       => $28c {GE($308, $40)}

***** BB01, STMT00021(after)
N016 ( 32, 30) [000069] -ACXG---R---              *  ASG       int    $28c
N015 (  1,  1) [000068] D------N----              +--*  LCL_VAR   int    V04 loc2         d:2 $28c
N014 ( 32, 30) [000329] --CXG-------              \--*  GE        int    $28c
N012 ( 27, 28) [000340] --CXG-------                 +--*  CALL      int    System.String.IndexOf $308
N005 (  1,  1) [000339] ------------ arg4 out+20     |  +--*  CNS_INT   int    5 $47
N007 (  3,  3) [000338] ---X-------- arg3 in r9      |  +--*  ARR_LENGTH int    <l:$28b, c:$28a>
N006 (  1,  1) [000337] ------------                 |  |  \--*  LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
N009 (  4, 12) [000476] #---G------- arg1 in rdx     |  +--*  IND       ref    $19f
N008 (  2, 10) [000475] H-----------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E "dotnet.exe" $112
N010 (  1,  1) [000063] ------------ this in rcx     |  +--*  LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
N011 (  1,  1) [000336] ------------ arg2 in r8      |  \--*  CNS_INT   int    0 $40
N013 (  1,  1) [000328] ------------                 \--*  CNS_INT   int    0 $40

---------

***** BB01, STMT00023(before)
N015 ( 26, 20) [000075] -ACXG---R---              *  ASG       ref   
N014 (  1,  1) [000074] D------N----              +--*  LCL_VAR   ref    V05 loc3         d:2
N013 ( 26, 20) [000494] -ACXG-------              \--*  COMMA     ref   
N003 ( 14,  5) [000482] -ACXG---R---                 +--*  ASG       ref   
N002 (  1,  1) [000481] D------N----                 |  +--*  LCL_VAR   ref    V41 tmp30        d:2
N001 ( 14,  5) [000070] --CXG-------                 |  \--*  CALL      ref    System.Environment.GetCommandLineArgs
N012 ( 12, 15) [000493] ---XG-------                 \--*  COMMA     ref   
N007 (  8, 11) [000487] ---X--------                    +--*  ARR_BOUNDS_CHECK_Rng void  
N004 (  1,  1) [000072] ------------                    |  +--*  CNS_INT   int    0
N006 (  3,  3) [000486] ---X--------                    |  \--*  ARR_LENGTH int   
N005 (  1,  1) [000483] ------------                    |     \--*  LCL_VAR   ref    V41 tmp30        u:2
N011 (  4,  4) [000073] a---G-------                    \--*  IND       ref   
N010 (  2,  2) [000492] -------N----                       \--*  ADD       byref 
N008 (  1,  1) [000484] ------------                          +--*  LCL_VAR   ref    V41 tmp30        u:2 (last use)
N009 (  1,  1) [000491] ------------                          \--*  CNS_INT   long   16 Fseq[#FirstElem]

  fgCurMemoryVN[GcHeap] assigned for CALL at [000070] to VN: $15f.
N001 [000070]   CALL      => $15e {15e}
N002 [000481]   LCL_VAR   V41 tmp30        d:2 => $15e {15e}
N003 [000482]   ASG       => $15e {15e}
N004 [000072]   CNS_INT   0 => $40 {IntCns 0}
N005 [000483]   LCL_VAR   V41 tmp30        u:2 => $15e {15e}
N006 [000486]   ARR_LENGTH => $28d {norm=$3c2 {ARR_LENGTH($15e)}, exc=$1a0 {NullPtrExc($15e)}}
N007 [000487]   ARR_BOUNDS_CHECK_Rng => $1a5 {norm=$3 {3}, exc=$1a4( {NullPtrExc($15e)},  {IndexOutOfRangeExc($40, $3c2)})}
N008 [000484]   LCL_VAR   V41 tmp30        u:2 (last use) => $15e {15e}
N009 [000491]   CNS_INT   16 Fseq[#FirstElem] => $1c7 {LngCns:  16}
N010 [000492]   ADD       => $20c {ADD($15e, $1c7)}
    VNForHandle(arrElemType: ref) is $113
  Relabeled IND_ARR_INDEX address node [000492] with l:$400:  {PtrToArrElem($113, $15e, $1ca, $0)}
    VNForMapSelect($15f, $113):ref returns $1a6 {$15f[$113]}
    VNForMapSelect($1a6, $15e):ref returns $1a7 {$1a6[$15e]}
    VNForMapSelect($1a7, $1ca):ref returns $1a8 {$1a7[$1ca]}
  hAtArrType $1a6 is MapSelect(curGcHeap($15f), ref[]).
  hAtArrTypeAtArr $1a7 is MapSelect(hAtArrType($1a6), arr=$15e).
  wholeElem $1a8 is MapSelect(hAtArrTypeAtArr($1a7), ind=$1ca).
N011 [000073]   IND       => <l:$1a8 {$1a7[$1ca]}, c:$161 {161}>
N012 [000493]   COMMA     => <l:$1aa {norm=$1a8 {$1a7[$1ca]}, exc=$1a4( {NullPtrExc($15e)},  {IndexOutOfRangeExc($40, $3c2)})}, c:$1a9 {norm=$161 {161}, exc=$1a4( {NullPtrExc($15e)},  {IndexOutOfRangeExc($40, $3c2)})}>
N013 [000494]   COMMA     => <l:$1aa {norm=$1a8 {$1a7[$1ca]}, exc=$1a4( {NullPtrExc($15e)},  {IndexOutOfRangeExc($40, $3c2)})}, c:$1a9 {norm=$161 {161}, exc=$1a4( {NullPtrExc($15e)},  {IndexOutOfRangeExc($40, $3c2)})}>
N014 [000074]   LCL_VAR   V05 loc3         d:2 => <l:$1a8 {$1a7[$1ca]}, c:$161 {161}>
N015 [000075]   ASG       => <l:$1aa {norm=$1a8 {$1a7[$1ca]}, exc=$1a4( {NullPtrExc($15e)},  {IndexOutOfRangeExc($40, $3c2)})}, c:$1a9 {norm=$161 {161}, exc=$1a4( {NullPtrExc($15e)},  {IndexOutOfRangeExc($40, $3c2)})}>

***** BB01, STMT00023(after)
N015 ( 26, 20) [000075] -ACXG---R---              *  ASG       ref    <l:$1aa, c:$1a9>
N014 (  1,  1) [000074] D------N----              +--*  LCL_VAR   ref    V05 loc3         d:2 <l:$1a8, c:$161>
N013 ( 26, 20) [000494] -ACXG-------              \--*  COMMA     ref    <l:$1aa, c:$1a9>
N003 ( 14,  5) [000482] -ACXG---R---                 +--*  ASG       ref    $15e
N002 (  1,  1) [000481] D------N----                 |  +--*  LCL_VAR   ref    V41 tmp30        d:2 $15e
N001 ( 14,  5) [000070] --CXG-------                 |  \--*  CALL      ref    System.Environment.GetCommandLineArgs $15e
N012 ( 12, 15) [000493] ---XG-------                 \--*  COMMA     ref    <l:$1aa, c:$1a9>
N007 (  8, 11) [000487] ---X--------                    +--*  ARR_BOUNDS_CHECK_Rng void   $1a5
N004 (  1,  1) [000072] ------------                    |  +--*  CNS_INT   int    0 $40
N006 (  3,  3) [000486] ---X--------                    |  \--*  ARR_LENGTH int    $28d
N005 (  1,  1) [000483] ------------                    |     \--*  LCL_VAR   ref    V41 tmp30        u:2 $15e
N011 (  4,  4) [000073] a---G-------                    \--*  IND       ref    <l:$1a8, c:$161>
N010 (  2,  2) [000492] -------N----                       \--*  ADD       byref  $400
N008 (  1,  1) [000484] ------------                          +--*  LCL_VAR   ref    V41 tmp30        u:2 (last use) $15e
N009 (  1,  1) [000491] ------------                          \--*  CNS_INT   long   16 Fseq[#FirstElem] $1c7

---------

***** BB01, STMT00024(before)
N007 ( 23, 21) [000079] -ACXG---R---              *  ASG       ref   
N006 (  1,  1) [000078] D------N----              +--*  LCL_VAR   ref    V06 loc4         d:2
N005 ( 23, 21) [000077] --CXG-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator
N003 (  1,  1) [000076] ------------ this in rcx     +--*  LCL_VAR   ref    V00 arg0         u:1 (last use)
N004 (  2, 10) [000495] H----------- arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

N001 [000496]   ARGPLACE  => $163 {163}
N002 [000497]   ARGPLACE  => $c6 {c6}
N003 [000076]   LCL_VAR   V00 arg0         u:1 (last use) => $80 {InitVal($40)}
N004 [000495]   CNS_INT(h) 0xd1ffab1e ftn => $114 {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000497] updated to $80 {InitVal($40)}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000077] to VN: $165.
N005 [000077]   CALLV stub => $164 {164}
N006 [000078]   LCL_VAR   V06 loc4         d:2 => $164 {164}
N007 [000079]   ASG       => $164 {164}

***** BB01, STMT00024(after)
N007 ( 23, 21) [000079] -ACXG---R---              *  ASG       ref    $164
N006 (  1,  1) [000078] D------N----              +--*  LCL_VAR   ref    V06 loc4         d:2 $164
N005 ( 23, 21) [000077] --CXG-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator $164
N003 (  1,  1) [000076] ------------ this in rcx     +--*  LCL_VAR   ref    V00 arg0         u:1 (last use) $80
N004 (  2, 10) [000495] H----------- arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $114

finish(BB01).
   Succ(BB02).
     Not yet completed.
     All preds complete, adding to allDone.
   Succ(BB22).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
       Was necessary.
The SSA definition for ByrefExposed (#2) at start of BB02 is $165 {165}
The SSA definition for GcHeap (#2) at start of BB02 is $165 {165}

***** BB02, STMT00119(before)
N008 ( 27, 25) [000578] --CXG-------              *  JTRUE     void  
N007 ( 25, 23) [000571] J-CXG--N----              \--*  EQ        int   
N005 ( 23, 21) [000572] --CXG-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext
N003 (  1,  1) [000575] ------------ this in rcx     |  +--*  LCL_VAR   ref    V06 loc4         u:2
N004 (  2, 10) [000576] H----------- arg1 in r11     |  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11
N006 (  1,  1) [000577] ------------                 \--*  CNS_INT   int    0

N001 [000573]   ARGPLACE  => $167 {167}
N002 [000574]   ARGPLACE  => $c7 {c7}
N003 [000575]   LCL_VAR   V06 loc4         u:2 => $164 {164}
N004 [000576]   CNS_INT(h) 0xd1ffab1e ftn => $115 {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000574] updated to $164 {164}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000572] to VN: $168.
N005 [000572]   CALLV stub => $30a {30a}
N006 [000577]   CNS_INT   0 => $40 {IntCns 0}
N007 [000571]   EQ        => $28e {EQ($30a, $40)}

***** BB02, STMT00119(after)
N008 ( 27, 25) [000578] --CXG-------              *  JTRUE     void  
N007 ( 25, 23) [000571] J-CXG--N----              \--*  EQ        int    $28e
N005 ( 23, 21) [000572] --CXG-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext $30a
N003 (  1,  1) [000575] ------------ this in rcx     |  +--*  LCL_VAR   ref    V06 loc4         u:2 $164
N004 (  2, 10) [000576] H----------- arg1 in r11     |  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
N006 (  1,  1) [000577] ------------                 \--*  CNS_INT   int    0 $40

finish(BB02).
   Succ(BB03).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
       Was necessary.
   Succ(BB13).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
       Was necessary.
   Succ(BB22).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
Computing GcHeap state for block BB03, entry block for loops 0 to 0:
  Loop 0 has memory havoc effect; heap state is new unique $440.
The SSA definition for GcHeap (#12) at start of BB03 is $440 {440}

***** BB03, STMT00026(before)
N007 ( 23, 21) [000088] -ACXG---R---              *  ASG       ref   
N006 (  1,  1) [000087] D------N----              +--*  LCL_VAR   ref    V07 loc5         d:2
N005 ( 23, 21) [000086] --CXG-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current
N003 (  1,  1) [000085] ------------ this in rcx     +--*  LCL_VAR   ref    V06 loc4         u:2
N004 (  2, 10) [000498] H----------- arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

N001 [000499]   ARGPLACE  => $441 {441}
N002 [000500]   ARGPLACE  => $480 {480}
N003 [000085]   LCL_VAR   V06 loc4         u:2 => $164 {164}
N004 [000498]   CNS_INT(h) 0xd1ffab1e ftn => $116 {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000500] updated to $164 {164}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000086] to VN: $443.
N005 [000086]   CALLV stub => $442 {442}
N006 [000087]   LCL_VAR   V07 loc5         d:2 => $442 {442}
N007 [000088]   ASG       => $442 {442}

***** BB03, STMT00026(after)
N007 ( 23, 21) [000088] -ACXG---R---              *  ASG       ref    $442
N006 (  1,  1) [000087] D------N----              +--*  LCL_VAR   ref    V07 loc5         d:2 $442
N005 ( 23, 21) [000086] --CXG-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current $442
N003 (  1,  1) [000085] ------------ this in rcx     +--*  LCL_VAR   ref    V06 loc4         u:2 $164
N004 (  2, 10) [000498] H----------- arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $116

---------

***** BB03, STMT00027(before)
N005 ( 16, 16) [000092] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000091] D------N----              +--*  LCL_VAR   ref    V16 tmp5         d:2
N003 ( 16, 16) [000090] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000089] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

N001 [000501]   ARGPLACE  => $481 {481}
N002 [000089]   CNS_INT(h) 0xd1ffab1e token => $117 {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000501] updated to $117 {Hnd const: 0x00000000D1FFAB1E}
N003 [000090]   CALL help => $1ab {JitNew($117, $445)}
N004 [000091]   LCL_VAR   V16 tmp5         d:2 => $1ab {JitNew($117, $445)}
N005 [000092]   ASG       => $1ab {JitNew($117, $445)}

***** BB03, STMT00027(after)
N005 ( 16, 16) [000092] -AC-----R---              *  ASG       ref    $1ab
N004 (  1,  1) [000091] D------N----              +--*  LCL_VAR   ref    V16 tmp5         d:2 $1ab
N003 ( 16, 16) [000090] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1ab
N002 (  2, 10) [000089] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $117

---------

***** BB03, STMT00092(before)
N006 (  6,  6) [000347] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000346] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000503] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000096] ------------              |     +--*  LCL_VAR   ref    V16 tmp5         u:2
N002 (  1,  1) [000502] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_fileName]
N005 (  1,  1) [000097] ------------              \--*  LCL_VAR   ref    V03 loc1         u:2

N001 [000096]   LCL_VAR   V16 tmp5         u:2 => $1ab {JitNew($117, $445)}
N002 [000502]   CNS_INT   8 field offset Fseq[_fileName] => $1c4 {LngCns:  8}
N003 [000503]   ADD       => $20d {ADD($1ab, $1c4)}
N005 [000097]   LCL_VAR   V03 loc1         u:2 => <l:$199 {$198[$156]}, c:$159 {159}>
  VNApplySelectors:
    VNForHandle(_fileName) is $118, fieldType is ref
    VNForMapSelect($443, $118):ref returns $1ac {$443[$118]}
    VNForMapSelect($1ac, $1ab):ref returns $1ad {$1ac[$1ab]}
    VNForMapStore($1ac, $1ab, $199):ref returns $24f {$1ac[$1ab := $199]}
  VNApplySelectorsAssign:
    VNForHandle(_fileName) is $118, fieldType is ref
    VNForMapStore($443, $118, $24f):ref returns $250 {$443[$118 := $24f]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000347] to VN: $250.
N006 [000347]   ASG       => $VN.Void

***** BB03, STMT00092(after)
N006 (  6,  6) [000347] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000346] D--XG--N----              +--*  IND       ref    $199
N003 (  2,  2) [000503] -------N----              |  \--*  ADD       byref  $20d
N001 (  1,  1) [000096] ------------              |     +--*  LCL_VAR   ref    V16 tmp5         u:2 $1ab
N002 (  1,  1) [000502] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_fileName] $1c4
N005 (  1,  1) [000097] ------------              \--*  LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>

---------

***** BB03, STMT00031(before)
N003 (  1,  3) [000105] -A------R---              *  ASG       ref   
N002 (  1,  1) [000104] D------N----              +--*  LCL_VAR   ref    V17 tmp6         d:2
N001 (  1,  1) [000095] ------------              \--*  LCL_VAR   ref    V16 tmp5         u:2

N001 [000095]   LCL_VAR   V16 tmp5         u:2 => $1ab {JitNew($117, $445)}
N002 [000104]   LCL_VAR   V17 tmp6         d:2 => $1ab {JitNew($117, $445)}
N003 [000105]   ASG       => $1ab {JitNew($117, $445)}

***** BB03, STMT00031(after)
N003 (  1,  3) [000105] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000104] D------N----              +--*  LCL_VAR   ref    V17 tmp6         d:2 $1ab
N001 (  1,  1) [000095] ------------              \--*  LCL_VAR   ref    V16 tmp5         u:2 $1ab

---------

***** BB03, STMT00032(before)
N003 (  1,  3) [000108] -A------R---              *  ASG       ref   
N002 (  1,  1) [000107] D------N----              +--*  LCL_VAR   ref    V18 tmp7         d:2
N001 (  1,  1) [000099] ------------              \--*  LCL_VAR   ref    V16 tmp5         u:2 (last use)

N001 [000099]   LCL_VAR   V16 tmp5         u:2 (last use) => $1ab {JitNew($117, $445)}
N002 [000107]   LCL_VAR   V18 tmp7         d:2 => $1ab {JitNew($117, $445)}
N003 [000108]   ASG       => $1ab {JitNew($117, $445)}

***** BB03, STMT00032(after)
N003 (  1,  3) [000108] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000107] D------N----              +--*  LCL_VAR   ref    V18 tmp7         d:2 $1ab
N001 (  1,  1) [000099] ------------              \--*  LCL_VAR   ref    V16 tmp5         u:2 (last use) $1ab

---------

***** BB03, STMT00030(before)
N004 (  5,  5) [000103] ------------              *  JTRUE     void  
N003 (  3,  3) [000102] J------N----              \--*  NE        int   
N001 (  1,  1) [000100] ------------                 +--*  LCL_VAR   int    V04 loc2         u:2
N002 (  1,  1) [000101] ------------                 \--*  CNS_INT   int    0

N001 [000100]   LCL_VAR   V04 loc2         u:2 => $28c {GE($308, $40)}
N002 [000101]   CNS_INT   0 => $40 {IntCns 0}
N003 [000102]   NE        => $28f {NE($28c, $40)}

***** BB03, STMT00030(after)
N004 (  5,  5) [000103] ------------              *  JTRUE     void  
N003 (  3,  3) [000102] J------N----              \--*  NE        int    $28f
N001 (  1,  1) [000100] ------------                 +--*  LCL_VAR   int    V04 loc2         u:2 $28c
N002 (  1,  1) [000101] ------------                 \--*  CNS_INT   int    0 $40

finish(BB03).
   Succ(BB04).
     Not yet completed.
     All preds complete, adding to allDone.
   Succ(BB05).
     Not yet completed.
     All preds complete, adding to allDone.
   Succ(BB22).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
The SSA definition for ByrefExposed (#13) at start of BB05 is $250 {$443[$118 := $24f]}
The SSA definition for GcHeap (#13) at start of BB05 is $250 {$443[$118 := $24f]}

***** BB05, STMT00033(before)
N003 (  1,  3) [000119] -A------R---              *  ASG       ref   
N002 (  1,  1) [000118] D------N----              +--*  LCL_VAR   ref    V19 tmp8         d:3
N001 (  1,  1) [000112] ------------              \--*  LCL_VAR   ref    V17 tmp6         u:2 (last use)

N001 [000112]   LCL_VAR   V17 tmp6         u:2 (last use) => $1ab {JitNew($117, $445)}
N002 [000118]   LCL_VAR   V19 tmp8         d:3 => $1ab {JitNew($117, $445)}
N003 [000119]   ASG       => $1ab {JitNew($117, $445)}

***** BB05, STMT00033(after)
N003 (  1,  3) [000119] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000118] D------N----              +--*  LCL_VAR   ref    V19 tmp8         d:3 $1ab
N001 (  1,  1) [000112] ------------              \--*  LCL_VAR   ref    V17 tmp6         u:2 (last use) $1ab

---------

***** BB05, STMT00034(before)
N003 (  1,  3) [000122] -A------R---              *  ASG       ref   
N002 (  1,  1) [000121] D------N----              +--*  LCL_VAR   ref    V20 tmp9         d:3
N001 (  1,  1) [000113] ------------              \--*  LCL_VAR   ref    V18 tmp7         u:2 (last use)

N001 [000113]   LCL_VAR   V18 tmp7         u:2 (last use) => $1ab {JitNew($117, $445)}
N002 [000121]   LCL_VAR   V20 tmp9         d:3 => $1ab {JitNew($117, $445)}
N003 [000122]   ASG       => $1ab {JitNew($117, $445)}

***** BB05, STMT00034(after)
N003 (  1,  3) [000122] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000121] D------N----              +--*  LCL_VAR   ref    V20 tmp9         d:3 $1ab
N001 (  1,  1) [000113] ------------              \--*  LCL_VAR   ref    V18 tmp7         u:2 (last use) $1ab

---------

***** BB05, STMT00035(before)
N010 ( 20, 22) [000125] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000124] D------N----              +--*  LCL_VAR   ref    V21 tmp10        d:3
N008 ( 20, 22) [000117] --CXG-------              \--*  CALL      ref    System.String.Concat
N005 (  4, 12) [000505] #---G------- arg1 in rdx     +--*  IND       ref   
N004 (  2, 10) [000504] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E " "
N006 (  1,  1) [000114] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V05 loc3         u:2
N007 (  1,  1) [000116] ------------ arg2 in r8      \--*  LCL_VAR   ref    V07 loc5         u:2 (last use)

N001 [000507]   ARGPLACE  => $44b {44b}
N002 [000506]   ARGPLACE  => $44c {44c}
N003 [000508]   ARGPLACE  => $44d {44d}
N004 [000504]   CNS_INT(h) 0xD1FFAB1E " " => $119 {Hnd const: 0x00000000D1FFAB1E}
    VNForMapSelect($2, $119):ref returns $1ae {$VN.ReadOnlyHeap[$119]}
    VNForMapSelect($2, $119):ref returns $1ae {$VN.ReadOnlyHeap[$119]}
N005 [000505]   IND       => $1ae {$VN.ReadOnlyHeap[$119]}
N006 [000114]   LCL_VAR   V05 loc3         u:2 => <l:$1a8 {$1a7[$1ca]}, c:$161 {161}>
N007 [000116]   LCL_VAR   V07 loc5         u:2 (last use) => $442 {442}
VN of ARGPLACE tree [000507] updated to <l:$1a8 {$1a7[$1ca]}, c:$161 {161}>
VN of ARGPLACE tree [000506] updated to $1ae {$VN.ReadOnlyHeap[$119]}
VN of ARGPLACE tree [000508] updated to $442 {442}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000117] to VN: $44f.
N008 [000117]   CALL      => $44e {44e}
N009 [000124]   LCL_VAR   V21 tmp10        d:3 => $44e {44e}
N010 [000125]   ASG       => $44e {44e}

***** BB05, STMT00035(after)
N010 ( 20, 22) [000125] -ACXG---R---              *  ASG       ref    $44e
N009 (  1,  1) [000124] D------N----              +--*  LCL_VAR   ref    V21 tmp10        d:3 $44e
N008 ( 20, 22) [000117] --CXG-------              \--*  CALL      ref    System.String.Concat $44e
N005 (  4, 12) [000505] #---G------- arg1 in rdx     +--*  IND       ref    $1ae
N004 (  2, 10) [000504] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E " " $119
N006 (  1,  1) [000114] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V05 loc3         u:2 <l:$1a8, c:$161>
N007 (  1,  1) [000116] ------------ arg2 in r8      \--*  LCL_VAR   ref    V07 loc5         u:2 (last use) $442

finish(BB05).
   Succ(BB06).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
       Was necessary.
   Succ(BB22).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
The SSA definition for ByrefExposed (#13) at start of BB04 is $250 {$443[$118 := $24f]}
The SSA definition for GcHeap (#13) at start of BB04 is $250 {$443[$118 := $24f]}

***** BB04, STMT00053(before)
N003 (  1,  3) [000203] -A------R---              *  ASG       ref   
N002 (  1,  1) [000202] D------N----              +--*  LCL_VAR   ref    V19 tmp8         d:4
N001 (  1,  1) [000110] ------------              \--*  LCL_VAR   ref    V17 tmp6         u:2 (last use)

N001 [000110]   LCL_VAR   V17 tmp6         u:2 (last use) => $1ab {JitNew($117, $445)}
N002 [000202]   LCL_VAR   V19 tmp8         d:4 => $1ab {JitNew($117, $445)}
N003 [000203]   ASG       => $1ab {JitNew($117, $445)}

***** BB04, STMT00053(after)
N003 (  1,  3) [000203] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000202] D------N----              +--*  LCL_VAR   ref    V19 tmp8         d:4 $1ab
N001 (  1,  1) [000110] ------------              \--*  LCL_VAR   ref    V17 tmp6         u:2 (last use) $1ab

---------

***** BB04, STMT00054(before)
N003 (  1,  3) [000206] -A------R---              *  ASG       ref   
N002 (  1,  1) [000205] D------N----              +--*  LCL_VAR   ref    V20 tmp9         d:4
N001 (  1,  1) [000111] ------------              \--*  LCL_VAR   ref    V18 tmp7         u:2 (last use)

N001 [000111]   LCL_VAR   V18 tmp7         u:2 (last use) => $1ab {JitNew($117, $445)}
N002 [000205]   LCL_VAR   V20 tmp9         d:4 => $1ab {JitNew($117, $445)}
N003 [000206]   ASG       => $1ab {JitNew($117, $445)}

***** BB04, STMT00054(after)
N003 (  1,  3) [000206] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000205] D------N----              +--*  LCL_VAR   ref    V20 tmp9         d:4 $1ab
N001 (  1,  1) [000111] ------------              \--*  LCL_VAR   ref    V18 tmp7         u:2 (last use) $1ab

---------

***** BB04, STMT00055(before)
N003 (  1,  3) [000209] -A------R---              *  ASG       ref   
N002 (  1,  1) [000208] D------N----              +--*  LCL_VAR   ref    V21 tmp10        d:4
N001 (  1,  1) [000201] ------------              \--*  LCL_VAR   ref    V07 loc5         u:2 (last use)

N001 [000201]   LCL_VAR   V07 loc5         u:2 (last use) => $442 {442}
N002 [000208]   LCL_VAR   V21 tmp10        d:4 => $442 {442}
N003 [000209]   ASG       => $442 {442}

***** BB04, STMT00055(after)
N003 (  1,  3) [000209] -A------R---              *  ASG       ref    $442
N002 (  1,  1) [000208] D------N----              +--*  LCL_VAR   ref    V21 tmp10        d:4 $442
N001 (  1,  1) [000201] ------------              \--*  LCL_VAR   ref    V07 loc5         u:2 (last use) $442

finish(BB04).
   Succ(BB06).
     Not yet completed.
     All preds complete, adding to allDone.
   Succ(BB22).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
SSA PHI definition: set VN of local 21/2 to $251 {PhiDef($15, $2, $1af)} .
SSA PHI definition: set VN of local 20/2 to $1ab {JitNew($117, $445)} (all same).
SSA PHI definition: set VN of local 19/2 to $1ab {JitNew($117, $445)} (all same).
  Building phi application: $45 = SSA# 13.
  Building phi application: $49 = SSA# 26.
  Building phi application: $1b0 = phi($49, $45).
The SSA definition for GcHeap (#14) at start of BB06 is $1b1 {PhiMemoryDef($11a, $1b0)}

***** BB06, STMT00093(before)
N006 (  6,  6) [000350] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000349] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000510] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000128] ------------              |     +--*  LCL_VAR   ref    V20 tmp9         u:2 (last use)
N002 (  1,  1) [000509] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_arguments]
N005 (  1,  1) [000129] ------------              \--*  LCL_VAR   ref    V21 tmp10        u:2 (last use)

N001 [000128]   LCL_VAR   V20 tmp9         u:2 (last use) => $1ab {JitNew($117, $445)}
N002 [000509]   CNS_INT   16 field offset Fseq[_arguments] => $1c7 {LngCns:  16}
N003 [000510]   ADD       => $20e {ADD($1ab, $1c7)}
N005 [000129]   LCL_VAR   V21 tmp10        u:2 (last use) => $251 {PhiDef($15, $2, $1af)}
  VNApplySelectors:
    VNForHandle(_arguments) is $11b, fieldType is ref
      AX2: $11b != $118 ==> select([$250]store($443, $118, $24f), $11b) ==> select($443, $11b).
    VNForMapSelect($1b1, $11b):ref returns $1b4 {$1b1[$11b]}
    VNForMapSelect($1b4, $1ab):ref returns $1b5 {$1b4[$1ab]}
    VNForMapStore($1b4, $1ab, $251):ref returns $252 {$1b4[$1ab := $251]}
  VNApplySelectorsAssign:
    VNForHandle(_arguments) is $11b, fieldType is ref
    VNForMapStore($1b1, $11b, $252):ref returns $253 {$1b1[$11b := $252]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000350] to VN: $253.
Node [000350] sets GcHeap SSA # 15 to VN $253:  {$1b1[$11b := $252]}
N006 [000350]   ASG       => $VN.Void

***** BB06, STMT00093(after)
N006 (  6,  6) [000350] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000349] D--XG--N----              +--*  IND       ref    $251
N003 (  2,  2) [000510] -------N----              |  \--*  ADD       byref  $20e
N001 (  1,  1) [000128] ------------              |     +--*  LCL_VAR   ref    V20 tmp9         u:2 (last use) $1ab
N002 (  1,  1) [000509] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_arguments] $1c7
N005 (  1,  1) [000129] ------------              \--*  LCL_VAR   ref    V21 tmp10        u:2 (last use) $251

---------

***** BB06, STMT00094(before)
N006 (  7, 10) [000355] -A-XG-------              *  ASG       bool  
N004 (  5,  8) [000354] D--XG--N----              +--*  IND       bool  
N003 (  2,  5) [000512] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000131] ------------              |     +--*  LCL_VAR   ref    V19 tmp8         u:2
N002 (  1,  4) [000511] ------------              |     \--*  CNS_INT   long   130 field offset Fseq[<UseShellExecute>k__BackingField]
N005 (  1,  1) [000353] ------------              \--*  CNS_INT   int    0

N001 [000131]   LCL_VAR   V19 tmp8         u:2 => $1ab {JitNew($117, $445)}
N002 [000511]   CNS_INT   130 field offset Fseq[<UseShellExecute>k__BackingField] => $1cb {LngCns:  130}
N003 [000512]   ADD       => $20f {ADD($1ab, $1cb)}
N005 [000353]   CNS_INT   0 => $40 {IntCns 0}
    VNForCastOper(bool) is $48
  VNApplySelectors:
    VNForHandle(<UseShellExecute>k__BackingField) is $11c, fieldType is bool
      AX2: $11c != $11b ==> select([$253]store($1b1, $11b, $252), $11c) ==> select($1b1, $11c).
      AX2: $11c != $118 ==> select([$250]store($443, $118, $24f), $11c) ==> select($443, $11c).
    VNForMapSelect($253, $11c):bool returns $4c2 {$1b1[$11c]}
    VNForMapSelect($4c2, $1ab):bool returns $4c3 {$4c2[$1ab]}
    VNForMapStore($4c2, $1ab, $40):bool returns $500 {$4c2[$1ab := $40]}
  VNApplySelectorsAssign:
    VNForHandle(<UseShellExecute>k__BackingField) is $11c, fieldType is bool
    VNForMapStore($253, $11c, $500):bool returns $501 {$253[$11c := $500]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000355] to VN: $501.
Node [000355] sets GcHeap SSA # 16 to VN $501:  {$253[$11c := $500]}
N006 [000355]   ASG       => $VN.Void

***** BB06, STMT00094(after)
N006 (  7, 10) [000355] -A-XG-------              *  ASG       bool   $VN.Void
N004 (  5,  8) [000354] D--XG--N----              +--*  IND       bool   $40
N003 (  2,  5) [000512] -------N----              |  \--*  ADD       byref  $20f
N001 (  1,  1) [000131] ------------              |     +--*  LCL_VAR   ref    V19 tmp8         u:2 $1ab
N002 (  1,  4) [000511] ------------              |     \--*  CNS_INT   long   130 field offset Fseq[<UseShellExecute>k__BackingField] $1cb
N005 (  1,  1) [000353] ------------              \--*  CNS_INT   int    0 $40

---------

***** BB06, STMT00040(before)
N006 (  4,  4) [000145] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000144] D------N----              +--*  LCL_VAR   ref    V23 tmp12        d:2
N004 (  4,  4) [000138] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000514] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000137] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000513] ------------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers]

N001 [000137]   LCL_VAR   V02 loc0         u:2 => $180 {JitNew($100, $140)}
N002 [000513]   CNS_INT   8 field offset Fseq[queuedAnalyzers] => $1c4 {LngCns:  8}
N003 [000514]   ADD       => $207 {ADD($180, $1c4)}
  VNApplySelectors:
    VNForHandle(queuedAnalyzers) is $10c, fieldType is ref
      AX2: $10c != $11c ==> select([$501]store($253, $11c, $500), $10c) ==> select($253, $10c).
      AX2: $10c != $11b ==> select([$253]store($1b1, $11b, $252), $10c) ==> select($1b1, $10c).
      AX2: $10c != $118 ==> select([$250]store($443, $118, $24f), $10c) ==> select($443, $10c).
    VNForMapSelect($501, $10c):ref returns $1b8 {$1b1[$10c]}
    VNForMapSelect($1b8, $180):ref returns $1b9 {$1b8[$180]}
N004 [000138]   IND       => <l:$1bc {norm=$1b9 {$1b8[$180]}, exc=$1ba {NullPtrExc($180)}}, c:$1bb {norm=$454 {454}, exc=$1ba {NullPtrExc($180)}}>
N005 [000144]   LCL_VAR   V23 tmp12        d:2 => <l:$1b9 {$1b8[$180]}, c:$454 {454}>
N006 [000145]   ASG       => <l:$1bc {norm=$1b9 {$1b8[$180]}, exc=$1ba {NullPtrExc($180)}}, c:$1bb {norm=$454 {454}, exc=$1ba {NullPtrExc($180)}}>

***** BB06, STMT00040(after)
N006 (  4,  4) [000145] -A-XG---R---              *  ASG       ref    <l:$1bc, c:$1bb>
N005 (  1,  1) [000144] D------N----              +--*  LCL_VAR   ref    V23 tmp12        d:2 <l:$1b9, c:$454>
N004 (  4,  4) [000138] ---XG-------              \--*  IND       ref    <l:$1bc, c:$1bb>
N003 (  2,  2) [000514] -------N----                 \--*  ADD       byref  $207
N001 (  1,  1) [000137] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000513] ------------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers] $1c4

---------

***** BB06, STMT00039(before)
N006 (  4,  4) [000143] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000142] D------N----              +--*  LCL_VAR   ref    V22 tmp11        d:2
N004 (  4,  4) [000141] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000516] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000140] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000515] ------------                    \--*  CNS_INT   long   48 field offset Fseq[<>9__2]

N001 [000140]   LCL_VAR   V02 loc0         u:2 => $180 {JitNew($100, $140)}
N002 [000515]   CNS_INT   48 field offset Fseq[<>9__2] => $1cc {LngCns:  48}
N003 [000516]   ADD       => $210 {ADD($180, $1cc)}
  VNApplySelectors:
    VNForHandle(<>9__2) is $11d, fieldType is ref
      AX2: $11d != $11c ==> select([$501]store($253, $11c, $500), $11d) ==> select($253, $11d).
      AX2: $11d != $11b ==> select([$253]store($1b1, $11b, $252), $11d) ==> select($1b1, $11d).
      AX2: $11d != $118 ==> select([$250]store($443, $118, $24f), $11d) ==> select($443, $11d).
    VNForMapSelect($501, $11d):ref returns $1bf {$1b1[$11d]}
    VNForMapSelect($1bf, $180):ref returns $540 {$1bf[$180]}
N004 [000141]   IND       => <l:$542 {norm=$540 {$1bf[$180]}, exc=$1ba {NullPtrExc($180)}}, c:$541 {norm=$456 {456}, exc=$1ba {NullPtrExc($180)}}>
N005 [000142]   LCL_VAR   V22 tmp11        d:2 => <l:$540 {$1bf[$180]}, c:$456 {456}>
N006 [000143]   ASG       => <l:$542 {norm=$540 {$1bf[$180]}, exc=$1ba {NullPtrExc($180)}}, c:$541 {norm=$456 {456}, exc=$1ba {NullPtrExc($180)}}>

***** BB06, STMT00039(after)
N006 (  4,  4) [000143] -A-XG---R---              *  ASG       ref    <l:$542, c:$541>
N005 (  1,  1) [000142] D------N----              +--*  LCL_VAR   ref    V22 tmp11        d:2 <l:$540, c:$456>
N004 (  4,  4) [000141] ---XG-------              \--*  IND       ref    <l:$542, c:$541>
N003 (  2,  2) [000516] -------N----                 \--*  ADD       byref  $210
N001 (  1,  1) [000140] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000515] ------------                    \--*  CNS_INT   long   48 field offset Fseq[<>9__2] $1cc

---------

***** BB06, STMT00042(before)
N003 (  1,  3) [000153] -A------R---              *  ASG       ref   
N002 (  1,  1) [000152] D------N----              +--*  LCL_VAR   ref    V24 tmp13        d:2
N001 (  1,  1) [000146] ------------              \--*  LCL_VAR   ref    V23 tmp12        u:2 (last use)

N001 [000146]   LCL_VAR   V23 tmp12        u:2 (last use) => <l:$1b9 {$1b8[$180]}, c:$454 {454}>
N002 [000152]   LCL_VAR   V24 tmp13        d:2 => <l:$1b9 {$1b8[$180]}, c:$454 {454}>
N003 [000153]   ASG       => <l:$1b9 {$1b8[$180]}, c:$454 {454}>

***** BB06, STMT00042(after)
N003 (  1,  3) [000153] -A------R---              *  ASG       ref    <l:$1b9, c:$454>
N002 (  1,  1) [000152] D------N----              +--*  LCL_VAR   ref    V24 tmp13        d:2 <l:$1b9, c:$454>
N001 (  1,  1) [000146] ------------              \--*  LCL_VAR   ref    V23 tmp12        u:2 (last use) <l:$1b9, c:$454>

---------

***** BB06, STMT00043(before)
N003 (  1,  3) [000156] -A------R---              *  ASG       ref   
N002 (  1,  1) [000155] D------N----              +--*  LCL_VAR   ref    V25 tmp14        d:2
N001 (  1,  1) [000139] ------------              \--*  LCL_VAR   ref    V19 tmp8         u:2 (last use)

N001 [000139]   LCL_VAR   V19 tmp8         u:2 (last use) => $1ab {JitNew($117, $445)}
N002 [000155]   LCL_VAR   V25 tmp14        d:2 => $1ab {JitNew($117, $445)}
N003 [000156]   ASG       => $1ab {JitNew($117, $445)}

***** BB06, STMT00043(after)
N003 (  1,  3) [000156] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000155] D------N----              +--*  LCL_VAR   ref    V25 tmp14        d:2 $1ab
N001 (  1,  1) [000139] ------------              \--*  LCL_VAR   ref    V19 tmp8         u:2 (last use) $1ab

---------

***** BB06, STMT00044(before)
N003 (  1,  3) [000159] -A------R---              *  ASG       ref   
N002 (  1,  1) [000158] D------N----              +--*  LCL_VAR   ref    V26 tmp15        d:2
N001 (  1,  1) [000147] ------------              \--*  LCL_VAR   ref    V22 tmp11        u:2

N001 [000147]   LCL_VAR   V22 tmp11        u:2 => <l:$540 {$1bf[$180]}, c:$456 {456}>
N002 [000158]   LCL_VAR   V26 tmp15        d:2 => <l:$540 {$1bf[$180]}, c:$456 {456}>
N003 [000159]   ASG       => <l:$540 {$1bf[$180]}, c:$456 {456}>

***** BB06, STMT00044(after)
N003 (  1,  3) [000159] -A------R---              *  ASG       ref    <l:$540, c:$456>
N002 (  1,  1) [000158] D------N----              +--*  LCL_VAR   ref    V26 tmp15        d:2 <l:$540, c:$456>
N001 (  1,  1) [000147] ------------              \--*  LCL_VAR   ref    V22 tmp11        u:2 <l:$540, c:$456>

---------

***** BB06, STMT00041(before)
N004 (  5,  5) [000151] ------------              *  JTRUE     void  
N003 (  3,  3) [000150] J------N----              \--*  NE        int   
N001 (  1,  1) [000148] ------------                 +--*  LCL_VAR   ref    V22 tmp11        u:2 (last use)
N002 (  1,  1) [000149] ------------                 \--*  CNS_INT   ref    null

N001 [000148]   LCL_VAR   V22 tmp11        u:2 (last use) => <l:$540 {$1bf[$180]}, c:$456 {456}>
N002 [000149]   CNS_INT   null => $VN.Null
N003 [000150]   NE        => <l:$291 {NE($540, $0)}, c:$290 {NE($456, $0)}>

***** BB06, STMT00041(after)
N004 (  5,  5) [000151] ------------              *  JTRUE     void  
N003 (  3,  3) [000150] J------N----              \--*  NE        int    <l:$291, c:$290>
N001 (  1,  1) [000148] ------------                 +--*  LCL_VAR   ref    V22 tmp11        u:2 (last use) <l:$540, c:$456>
N002 (  1,  1) [000149] ------------                 \--*  CNS_INT   ref    null $VN.Null

finish(BB06).
   Succ(BB07).
     Not yet completed.
     All preds complete, adding to allDone.
   Succ(BB09).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
       Was necessary.
   Succ(BB22).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
The SSA definition for ByrefExposed (#17) at start of BB07 is $501 {$253[$11c := $500]}
The SSA definition for GcHeap (#17) at start of BB07 is $501 {$253[$11c := $500]}

***** BB07, STMT00048(before)
N005 ( 16, 16) [000184] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000183] D------N----              +--*  LCL_VAR   ref    V28 tmp17        d:2
N003 ( 16, 16) [000182] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000181] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

N001 [000517]   ARGPLACE  => $482 {482}
N002 [000181]   CNS_INT(h) 0xd1ffab1e token => $11e {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000517] updated to $11e {Hnd const: 0x00000000D1FFAB1E}
N003 [000182]   CALL help => $543 {JitNew($11e, $45b)}
N004 [000183]   LCL_VAR   V28 tmp17        d:2 => $543 {JitNew($11e, $45b)}
N005 [000184]   ASG       => $543 {JitNew($11e, $45b)}

***** BB07, STMT00048(after)
N005 ( 16, 16) [000184] -AC-----R---              *  ASG       ref    $543
N004 (  1,  1) [000183] D------N----              +--*  LCL_VAR   ref    V28 tmp17        d:2 $543
N003 ( 16, 16) [000182] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $543
N002 (  2, 10) [000181] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $11e

---------

***** BB07, STMT00095(before)
N004 (  5,  5) [000359] ------------              *  JTRUE     void  
N003 (  3,  3) [000358] J------N----              \--*  EQ        int   
N001 (  1,  1) [000179] ------------                 +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000357] ------------                 \--*  CNS_INT   ref    null

N001 [000179]   LCL_VAR   V02 loc0         u:2 => $180 {JitNew($100, $140)}
N002 [000357]   CNS_INT   null => $VN.Null
N003 [000358]   EQ        => $40 {IntCns 0}

***** BB07, STMT00095(after)
N004 (  5,  5) [000359] ------------              *  JTRUE     void  
N003 (  3,  3) [000358] J------N----              \--*  EQ        int    $40
N001 (  1,  1) [000179] ------------                 +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000357] ------------                 \--*  CNS_INT   ref    null $VN.Null

finish(BB07).
   Succ(BB08).
     Not yet completed.
     All preds complete, adding to allDone.
   Succ(BB12).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
       Was necessary.
   Succ(BB22).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
The SSA definition for ByrefExposed (#17) at start of BB08 is $501 {$253[$11c := $500]}
The SSA definition for GcHeap (#17) at start of BB08 is $501 {$253[$11c := $500]}

***** BB08, STMT00096(before)
N006 (  6,  6) [000362] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000361] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000519] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000185] ------------              |     +--*  LCL_VAR   ref    V28 tmp17        u:2
N002 (  1,  1) [000518] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
N005 (  1,  1) [000360] ------------              \--*  LCL_VAR   ref    V02 loc0         u:2

N001 [000185]   LCL_VAR   V28 tmp17        u:2 => $543 {JitNew($11e, $45b)}
N002 [000518]   CNS_INT   8 field offset Fseq[_target] => $1c4 {LngCns:  8}
N003 [000519]   ADD       => $211 {ADD($1c4, $543)}
N005 [000360]   LCL_VAR   V02 loc0         u:2 => $180 {JitNew($100, $140)}
  VNApplySelectors:
    VNForHandle(_target) is $11f, fieldType is ref
      AX2: $11f != $11c ==> select([$501]store($253, $11c, $500), $11f) ==> select($253, $11f).
      AX2: $11f != $11b ==> select([$253]store($1b1, $11b, $252), $11f) ==> select($1b1, $11f).
      AX2: $11f != $118 ==> select([$250]store($443, $118, $24f), $11f) ==> select($443, $11f).
    VNForMapSelect($501, $11f):ref returns $546 {$1b1[$11f]}
    VNForMapSelect($546, $543):ref returns $547 {$546[$543]}
    VNForMapStore($546, $543, $180):ref returns $254 {$546[$543 := $180]}
  VNApplySelectorsAssign:
    VNForHandle(_target) is $11f, fieldType is ref
    VNForMapStore($501, $11f, $254):ref returns $255 {$501[$11f := $254]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000362] to VN: $255.
Node [000362] sets GcHeap SSA # 22 to VN $255:  {$501[$11f := $254]}
N006 [000362]   ASG       => $VN.Void

***** BB08, STMT00096(after)
N006 (  6,  6) [000362] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000361] D--XG--N----              +--*  IND       ref    $180
N003 (  2,  2) [000519] -------N----              |  \--*  ADD       byref  $211
N001 (  1,  1) [000185] ------------              |     +--*  LCL_VAR   ref    V28 tmp17        u:2 $543
N002 (  1,  1) [000518] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $1c4
N005 (  1,  1) [000360] ------------              \--*  LCL_VAR   ref    V02 loc0         u:2 $180

---------

***** BB08, STMT00097(before)
N006 (  7, 15) [000366] -A-XG-------              *  ASG       long  
N004 (  4,  4) [000365] D--XG--N----              +--*  IND       long  
N003 (  2,  2) [000521] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000363] ------------              |     +--*  LCL_VAR   ref    V28 tmp17        u:2
N002 (  1,  1) [000520] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
N005 (  2, 10) [000180] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

N001 [000363]   LCL_VAR   V28 tmp17        u:2 => $543 {JitNew($11e, $45b)}
N002 [000520]   CNS_INT   24 field offset Fseq[_methodPtr] => $1c5 {LngCns:  24}
N003 [000521]   ADD       => $212 {ADD($1c5, $543)}
N005 [000180]   CNS_INT(h) 0xd1ffab1e ftn => $120 {Hnd const: 0x00000000D1FFAB1E}
  VNApplySelectors:
    VNForHandle(_methodPtr) is $121, fieldType is long
      AX2: $121 != $11f ==> select([$255]store($501, $11f, $254), $121) ==> select($501, $121).
      AX2: $121 != $11c ==> select([$501]store($253, $11c, $500), $121) ==> select($253, $121).
      AX2: $121 != $11b ==> select([$253]store($1b1, $11b, $252), $121) ==> select($1b1, $121).
      AX2: $121 != $118 ==> select([$250]store($443, $118, $24f), $121) ==> select($443, $121).
    VNForMapSelect($255, $121):long returns $384 {$1b1[$121]}
    VNForMapSelect($384, $543):long returns $385 {$384[$543]}
    VNForMapStore($384, $543, $120):long returns $580 {$384[$543 := $120]}
  VNApplySelectorsAssign:
    VNForHandle(_methodPtr) is $121, fieldType is long
    VNForMapStore($255, $121, $580):long returns $581 {$255[$121 := $580]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000366] to VN: $581.
Node [000366] sets GcHeap SSA # 23 to VN $581:  {$255[$121 := $580]}
N006 [000366]   ASG       => $VN.Void

***** BB08, STMT00097(after)
N006 (  7, 15) [000366] -A-XG-------              *  ASG       long   $VN.Void
N004 (  4,  4) [000365] D--XG--N----              +--*  IND       long   $120
N003 (  2,  2) [000521] -------N----              |  \--*  ADD       byref  $212
N001 (  1,  1) [000363] ------------              |     +--*  LCL_VAR   ref    V28 tmp17        u:2 $543
N002 (  1,  1) [000520] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $1c5
N005 (  2, 10) [000180] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $120

---------

***** BB08, STMT00051(before)
N006 (  6,  6) [000192] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000191] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000523] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000178] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000522] ------------              |     \--*  CNS_INT   long   48 field offset Fseq[<>9__2]
N005 (  1,  1) [000187] ------------              \--*  LCL_VAR   ref    V28 tmp17        u:2

N001 [000178]   LCL_VAR   V02 loc0         u:2 => $180 {JitNew($100, $140)}
N002 [000522]   CNS_INT   48 field offset Fseq[<>9__2] => $1cc {LngCns:  48}
N003 [000523]   ADD       => $210 {ADD($180, $1cc)}
N005 [000187]   LCL_VAR   V28 tmp17        u:2 => $543 {JitNew($11e, $45b)}
  VNApplySelectors:
    VNForHandle(<>9__2) is $11d, fieldType is ref
      AX2: $11d != $121 ==> select([$581]store($255, $121, $580), $11d) ==> select($255, $11d).
      AX2: $11d != $11f ==> select([$255]store($501, $11f, $254), $11d) ==> select($501, $11d).
      AX2: $11d != $11c ==> select([$501]store($253, $11c, $500), $11d) ==> select($253, $11d).
      AX2: $11d != $11b ==> select([$253]store($1b1, $11b, $252), $11d) ==> select($1b1, $11d).
    VNForMapSelect($581, $11d):ref returns $1bf {$1b1[$11d]}
    VNForMapSelect($1bf, $180):ref returns $540 {$1bf[$180]}
    VNForMapStore($1bf, $180, $543):ref returns $256 {$1bf[$180 := $543]}
  VNApplySelectorsAssign:
    VNForHandle(<>9__2) is $11d, fieldType is ref
    VNForMapStore($581, $11d, $256):ref returns $257 {$581[$11d := $256]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000192] to VN: $257.
Node [000192] sets GcHeap SSA # 24 to VN $257:  {$581[$11d := $256]}
N006 [000192]   ASG       => $VN.Void

***** BB08, STMT00051(after)
N006 (  6,  6) [000192] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000191] D--XG--N----              +--*  IND       ref    $543
N003 (  2,  2) [000523] -------N----              |  \--*  ADD       byref  $210
N001 (  1,  1) [000178] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000522] ------------              |     \--*  CNS_INT   long   48 field offset Fseq[<>9__2] $1cc
N005 (  1,  1) [000187] ------------              \--*  LCL_VAR   ref    V28 tmp17        u:2 $543

---------

***** BB08, STMT00052(before)
N003 (  1,  3) [000199] -A------R---              *  ASG       ref   
N002 (  1,  1) [000198] D------N----              +--*  LCL_VAR   ref    V26 tmp15        d:4
N001 (  1,  1) [000193] ------------              \--*  LCL_VAR   ref    V28 tmp17        u:2 (last use)

N001 [000193]   LCL_VAR   V28 tmp17        u:2 (last use) => $543 {JitNew($11e, $45b)}
N002 [000198]   LCL_VAR   V26 tmp15        d:4 => $543 {JitNew($11e, $45b)}
N003 [000199]   ASG       => $543 {JitNew($11e, $45b)}

***** BB08, STMT00052(after)
N003 (  1,  3) [000199] -A------R---              *  ASG       ref    $543
N002 (  1,  1) [000198] D------N----              +--*  LCL_VAR   ref    V26 tmp15        d:4 $543
N001 (  1,  1) [000193] ------------              \--*  LCL_VAR   ref    V28 tmp17        u:2 (last use) $543

finish(BB08).
   Succ(BB09).
     Not yet completed.
     All preds complete, adding to allDone.
   Succ(BB22).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
SSA PHI definition: set VN of local 26/3 to $258 {PhiDef($1a, $3, $548)} .
  Building phi application: $4b = SSA# 25.
  Building phi application: $4c = SSA# 17.
  Building phi application: $549 = phi($4c, $4b).
The SSA definition for GcHeap (#20) at start of BB09 is $54a {PhiMemoryDef($122, $549)}

***** BB09, STMT00045(before)
N005 ( 16, 16) [000172] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000171] D------N----              +--*  LCL_VAR   ref    V27 tmp16        d:2
N003 ( 16, 16) [000170] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000169] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

N001 [000524]   ARGPLACE  => $483 {483}
N002 [000169]   CNS_INT(h) 0xd1ffab1e token => $123 {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000524] updated to $123 {Hnd const: 0x00000000D1FFAB1E}
N003 [000170]   CALL help => $54b {JitNew($123, $45e)}
N004 [000171]   LCL_VAR   V27 tmp16        d:2 => $54b {JitNew($123, $45e)}
N005 [000172]   ASG       => $54b {JitNew($123, $45e)}

***** BB09, STMT00045(after)
N005 ( 16, 16) [000172] -AC-----R---              *  ASG       ref    $54b
N004 (  1,  1) [000171] D------N----              +--*  LCL_VAR   ref    V27 tmp16        d:2 $54b
N003 ( 16, 16) [000170] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $54b
N002 (  2, 10) [000169] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $123

---------

***** BB09, STMT00099(before)
N004 (  5,  5) [000371] ------------              *  JTRUE     void  
N003 (  3,  3) [000370] J------N----              \--*  EQ        int   
N001 (  1,  1) [000167] ------------                 +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000369] ------------                 \--*  CNS_INT   ref    null

N001 [000167]   LCL_VAR   V02 loc0         u:2 => $180 {JitNew($100, $140)}
N002 [000369]   CNS_INT   null => $VN.Null
N003 [000370]   EQ        => $40 {IntCns 0}

***** BB09, STMT00099(after)
N004 (  5,  5) [000371] ------------              *  JTRUE     void  
N003 (  3,  3) [000370] J------N----              \--*  EQ        int    $40
N001 (  1,  1) [000167] ------------                 +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000369] ------------                 \--*  CNS_INT   ref    null $VN.Null

finish(BB09).
   Succ(BB10).
     Not yet completed.
     All preds complete, adding to allDone.
   Succ(BB12).
     Not yet completed.
     All preds complete, adding to allDone.
   Succ(BB22).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
  Building phi application: $4c = SSA# 17.
  Building phi application: $4d = SSA# 20.
  Building phi application: $54c = phi($4d, $4c).
The SSA definition for GcHeap (#18) at start of BB12 is $54d {PhiMemoryDef($124, $54c)}

***** BB12, STMT00102(before)
N001 ( 14,  5) [000379] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

  fgCurMemoryVN[GcHeap] assigned for CALL at [000379] to VN: $169.
N001 [000379]   CALL      => $VN.Void

***** BB12, STMT00102(after)
N001 ( 14,  5) [000379] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance $VN.Void

finish(BB12).
   Succ(BB22).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
The SSA definition for ByrefExposed (#20) at start of BB10 is $54a {PhiMemoryDef($122, $549)}
The SSA definition for GcHeap (#20) at start of BB10 is $54a {PhiMemoryDef($122, $549)}

***** BB10, STMT00100(before)
N006 (  6,  6) [000374] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000373] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000526] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000173] ------------              |     +--*  LCL_VAR   ref    V27 tmp16        u:2
N002 (  1,  1) [000525] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
N005 (  1,  1) [000372] ------------              \--*  LCL_VAR   ref    V02 loc0         u:2

N001 [000173]   LCL_VAR   V27 tmp16        u:2 => $54b {JitNew($123, $45e)}
N002 [000525]   CNS_INT   8 field offset Fseq[_target] => $1c4 {LngCns:  8}
N003 [000526]   ADD       => $213 {ADD($1c4, $54b)}
N005 [000372]   LCL_VAR   V02 loc0         u:2 => $180 {JitNew($100, $140)}
  VNApplySelectors:
    VNForHandle(_target) is $11f, fieldType is ref
      AX2: $11f != $11c ==> select([$501]store($253, $11c, $500), $11f) ==> select($253, $11f).
      AX2: $11f != $11b ==> select([$253]store($1b1, $11b, $252), $11f) ==> select($1b1, $11f).
      AX2: $11f != $11d ==> select([$257]store($581, $11d, $256), $11f) ==> select($581, $11f).
      AX2: $11f != $121 ==> select([$581]store($255, $121, $580), $11f) ==> select($255, $11f).
      AX1: select([$501]store($255, $11f, $254), $11f) ==> $254.
    VNForMapSelect($54a, $11f):ref returns $54e {$54a[$11f]}
    VNForMapSelect($54e, $54b):ref returns $54f {$54e[$54b]}
    VNForMapStore($54e, $54b, $180):ref returns $259 {$54e[$54b := $180]}
  VNApplySelectorsAssign:
    VNForHandle(_target) is $11f, fieldType is ref
    VNForMapStore($54a, $11f, $259):ref returns $25a {$54a[$11f := $259]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000374] to VN: $25a.
N006 [000374]   ASG       => $VN.Void

***** BB10, STMT00100(after)
N006 (  6,  6) [000374] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000373] D--XG--N----              +--*  IND       ref    $180
N003 (  2,  2) [000526] -------N----              |  \--*  ADD       byref  $213
N001 (  1,  1) [000173] ------------              |     +--*  LCL_VAR   ref    V27 tmp16        u:2 $54b
N002 (  1,  1) [000525] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $1c4
N005 (  1,  1) [000372] ------------              \--*  LCL_VAR   ref    V02 loc0         u:2 $180

---------

***** BB10, STMT00101(before)
N006 (  7, 15) [000378] -A-XG-------              *  ASG       long  
N004 (  4,  4) [000377] D--XG--N----              +--*  IND       long  
N003 (  2,  2) [000528] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000375] ------------              |     +--*  LCL_VAR   ref    V27 tmp16        u:2
N002 (  1,  1) [000527] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
N005 (  2, 10) [000168] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

N001 [000375]   LCL_VAR   V27 tmp16        u:2 => $54b {JitNew($123, $45e)}
N002 [000527]   CNS_INT   24 field offset Fseq[_methodPtr] => $1c5 {LngCns:  24}
N003 [000528]   ADD       => $214 {ADD($1c5, $54b)}
N005 [000168]   CNS_INT(h) 0xd1ffab1e ftn => $125 {Hnd const: 0x00000000D1FFAB1E}
  VNApplySelectors:
    VNForHandle(_methodPtr) is $121, fieldType is long
      AX2: $121 != $11f ==> select([$25a]store($54a, $11f, $259), $121) ==> select($54a, $121).
      AX2: $121 != $11c ==> select([$501]store($253, $11c, $500), $121) ==> select($253, $121).
      AX2: $121 != $11b ==> select([$253]store($1b1, $11b, $252), $121) ==> select($1b1, $121).
      AX2: $121 != $11d ==> select([$257]store($581, $11d, $256), $121) ==> select($581, $121).
      AX1: select([$255]store($581, $121, $580), $121) ==> $580.
    VNForMapSelect($25a, $121):long returns $386 {$54a[$121]}
    VNForMapSelect($386, $54b):long returns $387 {$386[$54b]}
    VNForMapStore($386, $54b, $125):long returns $582 {$386[$54b := $125]}
  VNApplySelectorsAssign:
    VNForHandle(_methodPtr) is $121, fieldType is long
    VNForMapStore($25a, $121, $582):long returns $583 {$25a[$121 := $582]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000378] to VN: $583.
N006 [000378]   ASG       => $VN.Void

***** BB10, STMT00101(after)
N006 (  7, 15) [000378] -A-XG-------              *  ASG       long   $VN.Void
N004 (  4,  4) [000377] D--XG--N----              +--*  IND       long   $125
N003 (  2,  2) [000528] -------N----              |  \--*  ADD       byref  $214
N001 (  1,  1) [000375] ------------              |     +--*  LCL_VAR   ref    V27 tmp16        u:2 $54b
N002 (  1,  1) [000527] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $1c5
N005 (  2, 10) [000168] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $125

---------

***** BB10, STMT00047(before)
N013 ( 36, 21) [000177] --CXG-------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue
N010 ( 17, 11) [000533] -ACXG---R-L- arg1 SETUP   +--*  ASG       ref   
N009 (  1,  1) [000532] D------N----              |  +--*  LCL_VAR   ref    V42 tmp31        d:2
N008 ( 17, 11) [000176] --CXG-------              |  \--*  CALL      ref    SolutionAnalyzer.IPC.CreateSession
N005 (  1,  1) [000165] ------------ arg0 in rcx  |     +--*  LCL_VAR   ref    V25 tmp14        u:2 (last use)
N006 (  1,  1) [000166] ------------ arg1 in rdx  |     +--*  LCL_VAR   ref    V26 tmp15        u:3 (last use)
N007 (  1,  1) [000175] ------------ arg2 in r8   |     \--*  LCL_VAR   ref    V27 tmp16        u:2 (last use)
N011 (  1,  1) [000534] ------------ arg1 in rdx  +--*  LCL_VAR   ref    V42 tmp31        u:2 (last use)
N012 (  1,  1) [000164] ------------ this in rcx  \--*  LCL_VAR   ref    V24 tmp13        u:2 (last use)

N001 [000535]   ARGPLACE  => $460 {460}
N002 [000529]   ARGPLACE  => $461 {461}
N003 [000530]   ARGPLACE  => $462 {462}
N004 [000531]   ARGPLACE  => $463 {463}
N005 [000165]   LCL_VAR   V25 tmp14        u:2 (last use) => $1ab {JitNew($117, $445)}
N006 [000166]   LCL_VAR   V26 tmp15        u:3 (last use) => $258 {PhiDef($1a, $3, $548)}
N007 [000175]   LCL_VAR   V27 tmp16        u:2 (last use) => $54b {JitNew($123, $45e)}
VN of ARGPLACE tree [000529] updated to $1ab {JitNew($117, $445)}
VN of ARGPLACE tree [000530] updated to $258 {PhiDef($1a, $3, $548)}
VN of ARGPLACE tree [000531] updated to $54b {JitNew($123, $45e)}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000176] to VN: $465.
N008 [000176]   CALL      => $464 {464}
N009 [000532]   LCL_VAR   V42 tmp31        d:2 => $464 {464}
N010 [000533]   ASG       => $464 {464}
N011 [000534]   LCL_VAR   V42 tmp31        u:2 (last use) => $464 {464}
N012 [000164]   LCL_VAR   V24 tmp13        u:2 (last use) => <l:$1b9 {$1b8[$180]}, c:$454 {454}>
  fgCurMemoryVN[GcHeap] assigned for CALL at [000177] to VN: $467.
N013 [000177]   CALL nullcheck => $VN.Void

***** BB10, STMT00047(after)
N013 ( 36, 21) [000177] --CXG-------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue $VN.Void
N010 ( 17, 11) [000533] -ACXG---R-L- arg1 SETUP   +--*  ASG       ref    $464
N009 (  1,  1) [000532] D------N----              |  +--*  LCL_VAR   ref    V42 tmp31        d:2 $464
N008 ( 17, 11) [000176] --CXG-------              |  \--*  CALL      ref    SolutionAnalyzer.IPC.CreateSession $464
N005 (  1,  1) [000165] ------------ arg0 in rcx  |     +--*  LCL_VAR   ref    V25 tmp14        u:2 (last use) $1ab
N006 (  1,  1) [000166] ------------ arg1 in rdx  |     +--*  LCL_VAR   ref    V26 tmp15        u:3 (last use) $258
N007 (  1,  1) [000175] ------------ arg2 in r8   |     \--*  LCL_VAR   ref    V27 tmp16        u:2 (last use) $54b
N011 (  1,  1) [000534] ------------ arg1 in rdx  +--*  LCL_VAR   ref    V42 tmp31        u:2 (last use) $464
N012 (  1,  1) [000164] ------------ this in rcx  \--*  LCL_VAR   ref    V24 tmp13        u:2 (last use) <l:$1b9, c:$454>

---------

***** BB10, STMT00025(before)
N008 ( 27, 25) [000084] --CXG-------              *  JTRUE     void  
N007 ( 25, 23) [000083] J-CXG--N----              \--*  NE        int   
N005 ( 23, 21) [000081] --CXG-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext
N003 (  1,  1) [000080] ------------ this in rcx     |  +--*  LCL_VAR   ref    V06 loc4         u:2
N004 (  2, 10) [000536] H----------- arg1 in r11     |  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11
N006 (  1,  1) [000082] ------------                 \--*  CNS_INT   int    0

N001 [000537]   ARGPLACE  => $468 {468}
N002 [000538]   ARGPLACE  => $484 {484}
N003 [000080]   LCL_VAR   V06 loc4         u:2 => $164 {164}
N004 [000536]   CNS_INT(h) 0xd1ffab1e ftn => $115 {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000538] updated to $164 {164}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000081] to VN: $469.
N005 [000081]   CALLV stub => $5c0 {5c0}
N006 [000082]   CNS_INT   0 => $40 {IntCns 0}
N007 [000083]   NE        => $292 {NE($5c0, $40)}

***** BB10, STMT00025(after)
N008 ( 27, 25) [000084] --CXG-------              *  JTRUE     void  
N007 ( 25, 23) [000083] J-CXG--N----              \--*  NE        int    $292
N005 ( 23, 21) [000081] --CXG-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext $5c0
N003 (  1,  1) [000080] ------------ this in rcx     |  +--*  LCL_VAR   ref    V06 loc4         u:2 $164
N004 (  2, 10) [000536] H----------- arg1 in r11     |  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
N006 (  1,  1) [000082] ------------                 \--*  CNS_INT   int    0 $40

finish(BB10).
   Succ(BB11).
     Not yet completed.
     All preds complete, adding to allDone.
   Succ(BB03).
   Succ(BB22).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
The SSA definition for ByrefExposed (#21) at start of BB11 is $469 {469}
The SSA definition for GcHeap (#21) at start of BB11 is $469 {469}
finish(BB11).
   Succ(BB13).
     Not yet completed.
     All preds complete, adding to allDone.
   Succ(BB22).
     Not yet completed.
     All preds complete, adding to allDone.
  Building phi application: $49 = SSA# 26.
  Building phi application: $4b = SSA# 25.
  Building phi application: $550 = phi($4b, $49).
  Building phi application: $4e = SSA# 24.
  Building phi application: $551 = phi($4e, $550).
  Building phi application: $4f = SSA# 23.
  Building phi application: $552 = phi($4f, $551).
  Building phi application: $50 = SSA# 22.
  Building phi application: $553 = phi($50, $552).
  Building phi application: $51 = SSA# 21.
  Building phi application: $554 = phi($51, $553).
  Building phi application: $4d = SSA# 20.
  Building phi application: $555 = phi($4d, $554).
  Building phi application: $52 = SSA# 19.
  Building phi application: $556 = phi($52, $555).
  Building phi application: $4c = SSA# 17.
  Building phi application: $557 = phi($4c, $556).
  Building phi application: $53 = SSA# 16.
  Building phi application: $558 = phi($53, $557).
  Building phi application: $54 = SSA# 15.
  Building phi application: $559 = phi($54, $558).
  Building phi application: $45 = SSA# 13.
  Building phi application: $55a = phi($45, $559).
  Building phi application: $47 = SSA# 5.
  Building phi application: $55b = phi($47, $55a).
  Building phi application: $4a = SSA# 2.
  Building phi application: $55c = phi($4a, $55b).
The SSA definition for GcHeap (#3) at start of BB22 is $55d {PhiMemoryDef($126, $55c)}

***** BB22, STMT00069(before)
N004 (  5,  5) [000257] ------------              *  JTRUE     void  
N003 (  3,  3) [000256] J------N----              \--*  EQ        int   
N001 (  1,  1) [000254] ------------                 +--*  LCL_VAR   ref    V06 loc4         u:2
N002 (  1,  1) [000255] ------------                 \--*  CNS_INT   ref    null

N001 [000254]   LCL_VAR   V06 loc4         u:2 => $164 {164}
N002 [000255]   CNS_INT   null => $VN.Null
N003 [000256]   EQ        => $293 {EQ($164, $0)}

***** BB22, STMT00069(after)
N004 (  5,  5) [000257] ------------              *  JTRUE     void  
N003 (  3,  3) [000256] J------N----              \--*  EQ        int    $293
N001 (  1,  1) [000254] ------------                 +--*  LCL_VAR   ref    V06 loc4         u:2 $164
N002 (  1,  1) [000255] ------------                 \--*  CNS_INT   ref    null $VN.Null

finish(BB22).
   Succ(BB23).
     Not yet completed.
     All preds complete, adding to allDone.
   Succ(BB24).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
       Was necessary.
The SSA definition for ByrefExposed (#3) at start of BB23 is $55d {PhiMemoryDef($126, $55c)}
The SSA definition for GcHeap (#3) at start of BB23 is $55d {PhiMemoryDef($126, $55c)}

***** BB23, STMT00071(before)
N005 ( 23, 21) [000260] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose
N003 (  1,  1) [000259] ------------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         u:2 (last use)
N004 (  2, 10) [000542] H----------- arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

N001 [000543]   ARGPLACE  => $16a {16a}
N002 [000544]   ARGPLACE  => $c8 {c8}
N003 [000259]   LCL_VAR   V06 loc4         u:2 (last use) => $164 {164}
N004 [000542]   CNS_INT(h) 0xd1ffab1e ftn => $127 {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000544] updated to $164 {164}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000260] to VN: $16b.
N005 [000260]   CALLV stub => $VN.Void

***** BB23, STMT00071(after)
N005 ( 23, 21) [000260] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose $VN.Void
N003 (  1,  1) [000259] ------------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         u:2 (last use) $164
N004 (  2, 10) [000542] H----------- arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127

finish(BB23).
   Succ(BB24).
     Not yet completed.
     All preds complete, adding to allDone.
The SSA definition for ByrefExposed (#3) at start of BB24 is $55d {PhiMemoryDef($126, $55c)}
The SSA definition for GcHeap (#3) at start of BB24 is $55d {PhiMemoryDef($126, $55c)}

***** BB24, STMT00070(before)
N001 (  0,  0) [000258] ------------              *  RETFILT   void  

N001 [000258]   RETFILT   => $600 {600}

***** BB24, STMT00070(after)
N001 (  0,  0) [000258] ------------              *  RETFILT   void   $600

finish(BB24).
  Building phi application: $51 = SSA# 21.
  Building phi application: $47 = SSA# 5.
  Building phi application: $55e = phi($47, $51).
The SSA definition for GcHeap (#6) at start of BB13 is $55f {PhiMemoryDef($128, $55e)}

***** BB13, STMT00116(before)
N004 (  5,  5) [000431] ------------              *  JTRUE     void  
N003 (  3,  3) [000432] J------N----              \--*  EQ        int   
N001 (  1,  1) [000433] ------------                 +--*  LCL_VAR   ref    V06 loc4         u:2
N002 (  1,  1) [000434] ------------                 \--*  CNS_INT   ref    null

N001 [000433]   LCL_VAR   V06 loc4         u:2 => $164 {164}
N002 [000434]   CNS_INT   null => $VN.Null
N003 [000432]   EQ        => $293 {EQ($164, $0)}

***** BB13, STMT00116(after)
N004 (  5,  5) [000431] ------------              *  JTRUE     void  
N003 (  3,  3) [000432] J------N----              \--*  EQ        int    $293
N001 (  1,  1) [000433] ------------                 +--*  LCL_VAR   ref    V06 loc4         u:2 $164
N002 (  1,  1) [000434] ------------                 \--*  CNS_INT   ref    null $VN.Null

finish(BB13).
   Succ(BB14).
     Not yet completed.
     All preds complete, adding to allDone.
   Succ(BB15).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
       Was necessary.
The SSA definition for ByrefExposed (#6) at start of BB14 is $55f {PhiMemoryDef($128, $55e)}
The SSA definition for GcHeap (#6) at start of BB14 is $55f {PhiMemoryDef($128, $55e)}

***** BB14, STMT00117(before)
N005 ( 23, 21) [000435] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose
N003 (  1,  1) [000436] ------------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         u:2 (last use)
N004 (  2, 10) [000539] H----------- arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11

N001 [000540]   ARGPLACE  => $16c {16c}
N002 [000541]   ARGPLACE  => $c9 {c9}
N003 [000436]   LCL_VAR   V06 loc4         u:2 (last use) => $164 {164}
N004 [000539]   CNS_INT(h) 0xd1ffab1e ftn => $127 {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000541] updated to $164 {164}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000435] to VN: $16d.
N005 [000435]   CALLV stub => $VN.Void

***** BB14, STMT00117(after)
N005 ( 23, 21) [000435] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose $VN.Void
N003 (  1,  1) [000436] ------------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         u:2 (last use) $164
N004 (  2, 10) [000539] H----------- arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127

finish(BB14).
   Succ(BB15).
     Not yet completed.
     All preds complete, adding to allDone.
  Building phi application: $55 = SSA# 11.
  Building phi application: $56 = SSA# 6.
  Building phi application: $560 = phi($56, $55).
The SSA definition for GcHeap (#7) at start of BB15 is $561 {PhiMemoryDef($129, $560)}

***** BB15, STMT00103(before)
N006 (  4,  4) [000384] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000383] D------N----              +--*  LCL_VAR   ref    V35 tmp24        d:2
N004 (  4,  4) [000213] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000546] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000212] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000545] ------------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers]

N001 [000212]   LCL_VAR   V02 loc0         u:2 => $180 {JitNew($100, $140)}
N002 [000545]   CNS_INT   8 field offset Fseq[queuedAnalyzers] => $1c4 {LngCns:  8}
N003 [000546]   ADD       => $207 {ADD($180, $1c4)}
  VNApplySelectors:
    VNForHandle(queuedAnalyzers) is $10c, fieldType is ref
    VNForMapSelect($561, $10c):ref returns $566 {$561[$10c]}
    VNForMapSelect($566, $180):ref returns $567 {$566[$180]}
N004 [000213]   IND       => <l:$569 {norm=$567 {$566[$180]}, exc=$1ba {NullPtrExc($180)}}, c:$568 {norm=$16e {16e}, exc=$1ba {NullPtrExc($180)}}>
N005 [000383]   LCL_VAR   V35 tmp24        d:2 => <l:$567 {$566[$180]}, c:$16e {16e}>
N006 [000384]   ASG       => <l:$569 {norm=$567 {$566[$180]}, exc=$1ba {NullPtrExc($180)}}, c:$568 {norm=$16e {16e}, exc=$1ba {NullPtrExc($180)}}>

***** BB15, STMT00103(after)
N006 (  4,  4) [000384] -A-XG---R---              *  ASG       ref    <l:$569, c:$568>
N005 (  1,  1) [000383] D------N----              +--*  LCL_VAR   ref    V35 tmp24        d:2 <l:$567, c:$16e>
N004 (  4,  4) [000213] ---XG-------              \--*  IND       ref    <l:$569, c:$568>
N003 (  2,  2) [000546] -------N----                 \--*  ADD       byref  $207
N001 (  1,  1) [000212] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000545] ------------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers] $1c4

---------

***** BB15, STMT00057(before)
N009 (  9,  9) [000217] -A-XG---R---              *  ASG       int   
N008 (  4,  4) [000216] D--XG--N----              +--*  IND       int   
N007 (  2,  2) [000548] -------N----              |  \--*  ADD       byref 
N005 (  1,  1) [000211] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2
N006 (  1,  1) [000547] ------------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]
N004 (  4,  4) [000382] ---XG-------              \--*  IND       int   
N003 (  2,  2) [000550] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000381] ------------                    +--*  LCL_VAR   ref    V35 tmp24        u:2 (last use)
N002 (  1,  1) [000549] ------------                    \--*  CNS_INT   long   24 field offset Fseq[_size]

N001 [000381]   LCL_VAR   V35 tmp24        u:2 (last use) => <l:$567 {$566[$180]}, c:$16e {16e}>
N002 [000549]   CNS_INT   24 field offset Fseq[_size] => $1c5 {LngCns:  24}
N003 [000550]   ADD       => <l:$216 {ADD($1c5, $567)}, c:$215 {ADD($16e, $1c5)}>
  VNApplySelectors:
    VNForHandle(_size) is $12a, fieldType is int
    VNForMapSelect($561, $12a):int returns $298 {$561[$12a]}
    VNForMapSelect($298, $567):int returns $299 {$298[$567]}
N004 [000382]   IND       => <l:$29b {norm=$299 {$298[$567]}, exc=$56b {NullPtrExc($567)}}, c:$29a {norm=$30b {30b}, exc=$56a {NullPtrExc($16e)}}>
N005 [000211]   LCL_VAR   V02 loc0         u:2 => $180 {JitNew($100, $140)}
N006 [000547]   CNS_INT   60 field offset Fseq[analyzerCount] => $1c1 {LngCns:  60}
N007 [000548]   ADD       => $201 {ADD($180, $1c1)}
  VNApplySelectors:
    VNForHandle(analyzerCount) is $102, fieldType is int
    VNForMapSelect($561, $102):int returns $2a0 {$561[$102]}
    VNForMapSelect($2a0, $180):int returns $2a1 {$2a0[$180]}
    VNForMapStore($2a0, $180, $299):int returns $2c6 {$2a0[$180 := $299]}
  VNApplySelectorsAssign:
    VNForHandle(analyzerCount) is $102, fieldType is int
    VNForMapStore($561, $102, $2c6):int returns $2c7 {$561[$102 := $2c6]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000217] to VN: $2c7.
N009 [000217]   ASG       => $VN.Void

***** BB15, STMT00057(after)
N009 (  9,  9) [000217] -A-XG---R---              *  ASG       int    $VN.Void
N008 (  4,  4) [000216] D--XG--N----              +--*  IND       int    $299
N007 (  2,  2) [000548] -------N----              |  \--*  ADD       byref  $201
N005 (  1,  1) [000211] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N006 (  1,  1) [000547] ------------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1
N004 (  4,  4) [000382] ---XG-------              \--*  IND       int    <l:$29b, c:$29a>
N003 (  2,  2) [000550] -------N----                 \--*  ADD       byref  <l:$216, c:$215>
N001 (  1,  1) [000381] ------------                    +--*  LCL_VAR   ref    V35 tmp24        u:2 (last use) <l:$567, c:$16e>
N002 (  1,  1) [000549] ------------                    \--*  CNS_INT   long   24 field offset Fseq[_size] $1c5

---------

***** BB15, STMT00058(before)
N005 ( 16, 16) [000224] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000223] D------N----              +--*  LCL_VAR   ref    V29 tmp18        d:2
N003 ( 16, 16) [000222] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000221] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

N001 [000551]   ARGPLACE  => $ca {ca}
N002 [000221]   CNS_INT(h) 0xd1ffab1e method => $12b {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000551] updated to $12b {Hnd const: 0x00000000D1FFAB1E}
N003 [000222]   CALL help => $56c {JitNew($12b, $170)}
N004 [000223]   LCL_VAR   V29 tmp18        d:2 => $56c {JitNew($12b, $170)}
N005 [000224]   ASG       => $56c {JitNew($12b, $170)}

***** BB15, STMT00058(after)
N005 ( 16, 16) [000224] -AC-----R---              *  ASG       ref    $56c
N004 (  1,  1) [000223] D------N----              +--*  LCL_VAR   ref    V29 tmp18        d:2 $56c
N003 ( 16, 16) [000222] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $56c
N002 (  2, 10) [000221] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $12b

---------

***** BB15, STMT00109(before)
N006 (  4,  4) [000402] -A-XG---R---              *  ASG       int   
N005 (  1,  1) [000401] D------N----              +--*  LCL_VAR   int    V37 tmp26        d:2
N004 (  4,  4) [000220] ---XG-------              \--*  IND       int   
N003 (  2,  2) [000553] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000219] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000552] ------------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]

N001 [000219]   LCL_VAR   V02 loc0         u:2 => $180 {JitNew($100, $140)}
N002 [000552]   CNS_INT   60 field offset Fseq[analyzerCount] => $1c1 {LngCns:  60}
N003 [000553]   ADD       => $201 {ADD($180, $1c1)}
  VNApplySelectors:
    VNForHandle(analyzerCount) is $102, fieldType is int
      AX1: select([$561]store($2c7, $102, $2c6), $102) ==> $2c6.
    VNForMapSelect($2c7, $102):int returns $2c6 {$2a0[$180 := $299]}
      AX1: select([$2a0]store($2c6, $180, $299), $180) ==> $299.
    VNForMapSelect($2c6, $180):int returns $299 {$298[$567]}
N004 [000220]   IND       => <l:$2a3 {norm=$299 {$298[$567]}, exc=$1ba {NullPtrExc($180)}}, c:$2a2 {norm=$30c {30c}, exc=$1ba {NullPtrExc($180)}}>
N005 [000401]   LCL_VAR   V37 tmp26        d:2 => <l:$299 {$298[$567]}, c:$30c {30c}>
N006 [000402]   ASG       => <l:$2a3 {norm=$299 {$298[$567]}, exc=$1ba {NullPtrExc($180)}}, c:$2a2 {norm=$30c {30c}, exc=$1ba {NullPtrExc($180)}}>

***** BB15, STMT00109(after)
N006 (  4,  4) [000402] -A-XG---R---              *  ASG       int    <l:$2a3, c:$2a2>
N005 (  1,  1) [000401] D------N----              +--*  LCL_VAR   int    V37 tmp26        d:2 <l:$299, c:$30c>
N004 (  4,  4) [000220] ---XG-------              \--*  IND       int    <l:$2a3, c:$2a2>
N003 (  2,  2) [000553] -------N----                 \--*  ADD       byref  $201
N001 (  1,  1) [000219] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000552] ------------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1

---------

***** BB15, STMT00104(before)
N005 ( 16, 16) [000389] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000388] D------N----              +--*  LCL_VAR   ref    V36 tmp25        d:2
N003 ( 16, 16) [000387] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000386] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

N001 [000554]   ARGPLACE  => $cb {cb}
N002 [000386]   CNS_INT(h) 0xd1ffab1e token => $12c {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000554] updated to $12c {Hnd const: 0x00000000D1FFAB1E}
N003 [000387]   CALL help => $56d {JitNew($12c, $172)}
N004 [000388]   LCL_VAR   V36 tmp25        d:2 => $56d {JitNew($12c, $172)}
N005 [000389]   ASG       => $56d {JitNew($12c, $172)}

***** BB15, STMT00104(after)
N005 ( 16, 16) [000389] -AC-----R---              *  ASG       ref    $56d
N004 (  1,  1) [000388] D------N----              +--*  LCL_VAR   ref    V36 tmp25        d:2 $56d
N003 ( 16, 16) [000387] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $56d
N002 (  2, 10) [000386] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $12c

---------

***** BB15, STMT00110(before)
N007 ( 17, 12) [000406] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor
N004 (  1,  1) [000390] ------------ this in rcx  +--*  LCL_VAR   ref    V36 tmp25        u:2
N005 (  1,  1) [000404] ------------ arg1 in rdx  +--*  CNS_INT   int    0
N006 (  1,  1) [000405] ------------ arg2 in r8   \--*  CNS_INT   ref    null

N001 [000555]   ARGPLACE  => $174 {174}
N002 [000556]   ARGPLACE  => $30e {30e}
N003 [000557]   ARGPLACE  => $175 {175}
N004 [000390]   LCL_VAR   V36 tmp25        u:2 => $56d {JitNew($12c, $172)}
N005 [000404]   CNS_INT   0 => $40 {IntCns 0}
N006 [000405]   CNS_INT   null => $VN.Null
VN of ARGPLACE tree [000556] updated to $56d {JitNew($12c, $172)}
VN of ARGPLACE tree [000557] updated to $40 {IntCns 0}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000406] to VN: $176.
N007 [000406]   CALL      => $VN.Void

***** BB15, STMT00110(after)
N007 ( 17, 12) [000406] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor $VN.Void
N004 (  1,  1) [000390] ------------ this in rcx  +--*  LCL_VAR   ref    V36 tmp25        u:2 $56d
N005 (  1,  1) [000404] ------------ arg1 in rdx  +--*  CNS_INT   int    0 $40
N006 (  1,  1) [000405] ------------ arg2 in r8   \--*  CNS_INT   ref    null $VN.Null

---------

***** BB15, STMT00106(before)
N006 (  6,  6) [000394] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000393] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000559] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000225] ------------              |     +--*  LCL_VAR   ref    V29 tmp18        u:2
N002 (  1,  1) [000558] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_workItems]
N005 (  1,  1) [000392] ------------              \--*  LCL_VAR   ref    V36 tmp25        u:2 (last use)

N001 [000225]   LCL_VAR   V29 tmp18        u:2 => $56c {JitNew($12b, $170)}
N002 [000558]   CNS_INT   8 field offset Fseq[_workItems] => $1c4 {LngCns:  8}
N003 [000559]   ADD       => $217 {ADD($1c4, $56c)}
N005 [000392]   LCL_VAR   V36 tmp25        u:2 (last use) => $56d {JitNew($12c, $172)}
  VNApplySelectors:
    VNForHandle(_workItems) is $12d, fieldType is ref
    VNForMapSelect($176, $12d):ref returns $56e {$176[$12d]}
    VNForMapSelect($56e, $56c):ref returns $56f {$56e[$56c]}
    VNForMapStore($56e, $56c, $56d):ref returns $25b {$56e[$56c := $56d]}
  VNApplySelectorsAssign:
    VNForHandle(_workItems) is $12d, fieldType is ref
    VNForMapStore($176, $12d, $25b):ref returns $25c {$176[$12d := $25b]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000394] to VN: $25c.
N006 [000394]   ASG       => $VN.Void

***** BB15, STMT00106(after)
N006 (  6,  6) [000394] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000393] D--XG--N----              +--*  IND       ref    $56d
N003 (  2,  2) [000559] -------N----              |  \--*  ADD       byref  $217
N001 (  1,  1) [000225] ------------              |     +--*  LCL_VAR   ref    V29 tmp18        u:2 $56c
N002 (  1,  1) [000558] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_workItems] $1c4
N005 (  1,  1) [000392] ------------              \--*  LCL_VAR   ref    V36 tmp25        u:2 (last use) $56d

---------

***** BB15, STMT00108(before)
N006 (  6,  6) [000400] -A-XG-------              *  ASG       int   
N004 (  4,  4) [000399] D--XG--N----              +--*  IND       int   
N003 (  2,  2) [000561] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000397] ------------              |     +--*  LCL_VAR   ref    V29 tmp18        u:2
N002 (  1,  1) [000560] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_workItemsToComplete]
N005 (  1,  1) [000398] ------------              \--*  LCL_VAR   int    V37 tmp26        u:2 (last use)

N001 [000397]   LCL_VAR   V29 tmp18        u:2 => $56c {JitNew($12b, $170)}
N002 [000560]   CNS_INT   16 field offset Fseq[_workItemsToComplete] => $1c7 {LngCns:  16}
N003 [000561]   ADD       => $218 {ADD($1c7, $56c)}
N005 [000398]   LCL_VAR   V37 tmp26        u:2 (last use) => <l:$299 {$298[$567]}, c:$30c {30c}>
  VNApplySelectors:
    VNForHandle(_workItemsToComplete) is $12e, fieldType is int
      AX2: $12e != $12d ==> select([$25c]store($176, $12d, $25b), $12e) ==> select($176, $12e).
    VNForMapSelect($25c, $12e):int returns $2a4 {$176[$12e]}
    VNForMapSelect($2a4, $56c):int returns $2a5 {$2a4[$56c]}
    VNForMapStore($2a4, $56c, $299):int returns $2c8 {$2a4[$56c := $299]}
  VNApplySelectorsAssign:
    VNForHandle(_workItemsToComplete) is $12e, fieldType is int
    VNForMapStore($25c, $12e, $2c8):int returns $2c9 {$25c[$12e := $2c8]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000400] to VN: $2c9.
N006 [000400]   ASG       => $VN.Void

***** BB15, STMT00108(after)
N006 (  6,  6) [000400] -A-XG-------              *  ASG       int    $VN.Void
N004 (  4,  4) [000399] D--XG--N----              +--*  IND       int    $299
N003 (  2,  2) [000561] -------N----              |  \--*  ADD       byref  $218
N001 (  1,  1) [000397] ------------              |     +--*  LCL_VAR   ref    V29 tmp18        u:2 $56c
N002 (  1,  1) [000560] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_workItemsToComplete] $1c7
N005 (  1,  1) [000398] ------------              \--*  LCL_VAR   int    V37 tmp26        u:2 (last use) <l:$299, c:$30c>

---------

***** BB15, STMT00060(before)
N006 (  6,  6) [000229] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000228] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000563] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000218] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000562] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter]
N005 (  1,  1) [000227] ------------              \--*  LCL_VAR   ref    V29 tmp18        u:2 (last use)

N001 [000218]   LCL_VAR   V02 loc0         u:2 => $180 {JitNew($100, $140)}
N002 [000562]   CNS_INT   16 field offset Fseq[progressReporter] => $1c7 {LngCns:  16}
N003 [000563]   ADD       => $208 {ADD($180, $1c7)}
N005 [000227]   LCL_VAR   V29 tmp18        u:2 (last use) => $56c {JitNew($12b, $170)}
  VNApplySelectors:
    VNForHandle(progressReporter) is $10d, fieldType is ref
      AX2: $10d != $12e ==> select([$2c9]store($25c, $12e, $2c8), $10d) ==> select($25c, $10d).
      AX2: $10d != $12d ==> select([$25c]store($176, $12d, $25b), $10d) ==> select($176, $10d).
    VNForMapSelect($2c9, $10d):ref returns $570 {$176[$10d]}
    VNForMapSelect($570, $180):ref returns $571 {$570[$180]}
    VNForMapStore($570, $180, $56c):ref returns $25d {$570[$180 := $56c]}
  VNApplySelectorsAssign:
    VNForHandle(progressReporter) is $10d, fieldType is ref
    VNForMapStore($2c9, $10d, $25d):ref returns $25e {$2c9[$10d := $25d]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000229] to VN: $25e.
N006 [000229]   ASG       => $VN.Void

***** BB15, STMT00060(after)
N006 (  6,  6) [000229] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000228] D--XG--N----              +--*  IND       ref    $56c
N003 (  2,  2) [000563] -------N----              |  \--*  ADD       byref  $208
N001 (  1,  1) [000218] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000562] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter] $1c7
N005 (  1,  1) [000227] ------------              \--*  LCL_VAR   ref    V29 tmp18        u:2 (last use) $56c

---------

***** BB15, STMT00061(before)
N003 (  1,  3) [000232] -A------R---              *  ASG       int   
N002 (  1,  1) [000231] D------N----              +--*  LCL_VAR   int    V10 loc8         d:2
N001 (  1,  1) [000230] ------------              \--*  CNS_INT   int    0

N001 [000230]   CNS_INT   0 => $40 {IntCns 0}
N002 [000231]   LCL_VAR   V10 loc8         d:2 => $40 {IntCns 0}
N003 [000232]   ASG       => $40 {IntCns 0}

***** BB15, STMT00061(after)
N003 (  1,  3) [000232] -A------R---              *  ASG       int    $40
N002 (  1,  1) [000231] D------N----              +--*  LCL_VAR   int    V10 loc8         d:2 $40
N001 (  1,  1) [000230] ------------              \--*  CNS_INT   int    0 $40

finish(BB15).
   Succ(BB17).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
       Was necessary.
SSA PHI definition: set VN of local 10/3 to $2ca {PhiDef($a, $3, $548)} .
Computing GcHeap state for block BB17, entry block for loops 1 to 1:
  Loop 1 has memory havoc effect; heap state is new unique $640.
The SSA definition for GcHeap (#9) at start of BB17 is $640 {640}

***** BB17, STMT00114(before)
N006 (  4,  4) [000424] -A-XG---R---              *  ASG       int   
N005 (  1,  1) [000423] D------N----              +--*  LCL_VAR   int    V39 tmp28        d:2
N004 (  4,  4) [000237] ---XG-------              \--*  IND       int   
N003 (  2,  2) [000566] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000236] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2
N002 (  1,  1) [000565] ------------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount]

N001 [000236]   LCL_VAR   V02 loc0         u:2 => $180 {JitNew($100, $140)}
N002 [000565]   CNS_INT   60 field offset Fseq[analyzerCount] => $1c1 {LngCns:  60}
N003 [000566]   ADD       => $201 {ADD($180, $1c1)}
  VNApplySelectors:
    VNForHandle(analyzerCount) is $102, fieldType is int
    VNForMapSelect($640, $102):int returns $2a6 {$640[$102]}
    VNForMapSelect($2a6, $180):int returns $2a7 {$2a6[$180]}
N004 [000237]   IND       => <l:$2a9 {norm=$2a7 {$2a6[$180]}, exc=$1ba {NullPtrExc($180)}}, c:$2a8 {norm=$680 {680}, exc=$1ba {NullPtrExc($180)}}>
N005 [000423]   LCL_VAR   V39 tmp28        d:2 => <l:$2a7 {$2a6[$180]}, c:$680 {680}>
N006 [000424]   ASG       => <l:$2a9 {norm=$2a7 {$2a6[$180]}, exc=$1ba {NullPtrExc($180)}}, c:$2a8 {norm=$680 {680}, exc=$1ba {NullPtrExc($180)}}>

***** BB17, STMT00114(after)
N006 (  4,  4) [000424] -A-XG---R---              *  ASG       int    <l:$2a9, c:$2a8>
N005 (  1,  1) [000423] D------N----              +--*  LCL_VAR   int    V39 tmp28        d:2 <l:$2a7, c:$680>
N004 (  4,  4) [000237] ---XG-------              \--*  IND       int    <l:$2a9, c:$2a8>
N003 (  2,  2) [000566] -------N----                 \--*  ADD       byref  $201
N001 (  1,  1) [000236] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000565] ------------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1

---------

***** BB17, STMT00111(before)
N004 (  5,  5) [000414] ------------              *  JTRUE     void  
N003 (  3,  3) [000413] J------N----              \--*  GE        int   
N001 (  1,  1) [000412] ------------                 +--*  LCL_VAR   int    V39 tmp28        u:2
N002 (  1,  1) [000411] ------------                 \--*  CNS_INT   int    8

N001 [000412]   LCL_VAR   V39 tmp28        u:2 => <l:$2a7 {$2a6[$180]}, c:$680 {680}>
N002 [000411]   CNS_INT   8 => $57 {IntCns 8}
N003 [000413]   GE        => <l:$2ab {GE($2a7, $57)}, c:$2aa {GE($680, $57)}>

***** BB17, STMT00111(after)
N004 (  5,  5) [000414] ------------              *  JTRUE     void  
N003 (  3,  3) [000413] J------N----              \--*  GE        int    <l:$2ab, c:$2aa>
N001 (  1,  1) [000412] ------------                 +--*  LCL_VAR   int    V39 tmp28        u:2 <l:$2a7, c:$680>
N002 (  1,  1) [000411] ------------                 \--*  CNS_INT   int    8 $57

finish(BB17).
   Succ(BB18).
     Not yet completed.
     All preds complete, adding to allDone.
   Succ(BB19).
     Not yet completed.
     All preds complete, adding to allDone.
The SSA definition for ByrefExposed (#9) at start of BB19 is $640 {640}
The SSA definition for GcHeap (#9) at start of BB19 is $640 {640}

***** BB19, STMT00112(before)
N003 (  1,  3) [000417] -A------R---              *  ASG       int   
N002 (  1,  1) [000416] D------N----              +--*  LCL_VAR   int    V38 tmp27        d:3
N001 (  1,  1) [000415] ------------              \--*  CNS_INT   int    8

N001 [000415]   CNS_INT   8 => $57 {IntCns 8}
N002 [000416]   LCL_VAR   V38 tmp27        d:3 => $57 {IntCns 8}
N003 [000417]   ASG       => $57 {IntCns 8}

***** BB19, STMT00112(after)
N003 (  1,  3) [000417] -A------R---              *  ASG       int    $57
N002 (  1,  1) [000416] D------N----              +--*  LCL_VAR   int    V38 tmp27        d:3 $57
N001 (  1,  1) [000415] ------------              \--*  CNS_INT   int    8 $57

finish(BB19).
   Succ(BB20).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
       Was necessary.
The SSA definition for ByrefExposed (#9) at start of BB18 is $640 {640}
The SSA definition for GcHeap (#9) at start of BB18 is $640 {640}

***** BB18, STMT00113(before)
N003 (  1,  3) [000421] -A------R---              *  ASG       int   
N002 (  1,  1) [000420] D------N----              +--*  LCL_VAR   int    V38 tmp27        d:4
N001 (  1,  1) [000419] ------------              \--*  LCL_VAR   int    V39 tmp28        u:2 (last use)

N001 [000419]   LCL_VAR   V39 tmp28        u:2 (last use) => <l:$2a7 {$2a6[$180]}, c:$680 {680}>
N002 [000420]   LCL_VAR   V38 tmp27        d:4 => <l:$2a7 {$2a6[$180]}, c:$680 {680}>
N003 [000421]   ASG       => <l:$2a7 {$2a6[$180]}, c:$680 {680}>

***** BB18, STMT00113(after)
N003 (  1,  3) [000421] -A------R---              *  ASG       int    <l:$2a7, c:$680>
N002 (  1,  1) [000420] D------N----              +--*  LCL_VAR   int    V38 tmp27        d:4 <l:$2a7, c:$680>
N001 (  1,  1) [000419] ------------              \--*  LCL_VAR   int    V39 tmp28        u:2 (last use) <l:$2a7, c:$680>

finish(BB18).
   Succ(BB20).
     Not yet completed.
     All preds complete, adding to allDone.
SSA PHI definition: set VN of local 38/2 to $2cb {PhiDef($26, $2, $1af)} .
The SSA definition for ByrefExposed (#9) at start of BB20 is $640 {640}
The SSA definition for GcHeap (#9) at start of BB20 is $640 {640}

***** BB20, STMT00064(before)
N004 (  5,  5) [000241] ------------              *  JTRUE     void  
N003 (  3,  3) [000240] J------N----              \--*  LT        int   
N001 (  1,  1) [000233] ------------                 +--*  LCL_VAR   int    V10 loc8         u:3
N002 (  1,  1) [000422] ------------                 \--*  LCL_VAR   int    V38 tmp27        u:2 (last use)

N001 [000233]   LCL_VAR   V10 loc8         u:3 => $2ca {PhiDef($a, $3, $548)}
N002 [000422]   LCL_VAR   V38 tmp27        u:2 (last use) => $2cb {PhiDef($26, $2, $1af)}
N003 [000240]   LT        => $2ac {LT($2ca, $2cb)}

***** BB20, STMT00064(after)
N004 (  5,  5) [000241] ------------              *  JTRUE     void  
N003 (  3,  3) [000240] J------N----              \--*  LT        int    $2ac
N001 (  1,  1) [000233] ------------                 +--*  LCL_VAR   int    V10 loc8         u:3 $2ca
N002 (  1,  1) [000422] ------------                 \--*  LCL_VAR   int    V38 tmp27        u:2 (last use) $2cb

finish(BB20).
   Succ(BB21).
     Not yet completed.
     All preds complete, adding to allDone.
   Succ(BB16).
     Not yet completed.
     All preds complete, adding to allDone.
The SSA definition for ByrefExposed (#9) at start of BB16 is $640 {640}
The SSA definition for GcHeap (#9) at start of BB16 is $640 {640}

***** BB16, STMT00065(before)
N003 ( 15,  8) [000243] --CXG-------              *  CALL nullcheck void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0
N002 (  1,  1) [000242] ------------ this in rcx  \--*  LCL_VAR   ref    V02 loc0         u:2

N001 [000564]   ARGPLACE  => $641 {641}
N002 [000242]   LCL_VAR   V02 loc0         u:2 => $180 {JitNew($100, $140)}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000243] to VN: $642.
N003 [000243]   CALL nullcheck => $VN.Void

***** BB16, STMT00065(after)
N003 ( 15,  8) [000243] --CXG-------              *  CALL nullcheck void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0 $VN.Void
N002 (  1,  1) [000242] ------------ this in rcx  \--*  LCL_VAR   ref    V02 loc0         u:2 $180

---------

***** BB16, STMT00066(before)
N005 (  3,  3) [000248] -A------R---              *  ASG       int   
N004 (  1,  1) [000247] D------N----              +--*  LCL_VAR   int    V10 loc8         d:4
N003 (  3,  3) [000246] ------------              \--*  ADD       int   
N001 (  1,  1) [000244] ------------                 +--*  LCL_VAR   int    V10 loc8         u:3 (last use)
N002 (  1,  1) [000245] ------------                 \--*  CNS_INT   int    1

N001 [000244]   LCL_VAR   V10 loc8         u:3 (last use) => $2ca {PhiDef($a, $3, $548)}
N002 [000245]   CNS_INT   1 => $41 {IntCns 1}
N003 [000246]   ADD       => $2ad {ADD($41, $2ca)}
N004 [000247]   LCL_VAR   V10 loc8         d:4 => $2ad {ADD($41, $2ca)}
N005 [000248]   ASG       => $2ad {ADD($41, $2ca)}

***** BB16, STMT00066(after)
N005 (  3,  3) [000248] -A------R---              *  ASG       int    $2ad
N004 (  1,  1) [000247] D------N----              +--*  LCL_VAR   int    V10 loc8         d:4 $2ad
N003 (  3,  3) [000246] ------------              \--*  ADD       int    $2ad
N001 (  1,  1) [000244] ------------                 +--*  LCL_VAR   int    V10 loc8         u:3 (last use) $2ca
N002 (  1,  1) [000245] ------------                 \--*  CNS_INT   int    1 $41

finish(BB16).
   Succ(BB17).
The SSA definition for ByrefExposed (#9) at start of BB21 is $640 {640}
The SSA definition for GcHeap (#9) at start of BB21 is $640 {640}

***** BB21, STMT00115(before)
N006 (  4,  4) [000429] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000428] D------N----              +--*  LCL_VAR   ref    V40 tmp29        d:2
N004 (  4,  4) [000250] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000568] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000249] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 (last use)
N002 (  1,  1) [000567] ------------                    \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun]

N001 [000249]   LCL_VAR   V02 loc0         u:2 (last use) => $180 {JitNew($100, $140)}
N002 [000567]   CNS_INT   24 field offset Fseq[allAnalyzersHaveRun] => $1c5 {LngCns:  24}
N003 [000568]   ADD       => $205 {ADD($180, $1c5)}
  VNApplySelectors:
    VNForHandle(allAnalyzersHaveRun) is $108, fieldType is ref
    VNForMapSelect($640, $108):ref returns $572 {$640[$108]}
    VNForMapSelect($572, $180):ref returns $573 {$572[$180]}
N004 [000250]   IND       => <l:$575 {norm=$573 {$572[$180]}, exc=$1ba {NullPtrExc($180)}}, c:$574 {norm=$177 {177}, exc=$1ba {NullPtrExc($180)}}>
N005 [000428]   LCL_VAR   V40 tmp29        d:2 => <l:$573 {$572[$180]}, c:$177 {177}>
N006 [000429]   ASG       => <l:$575 {norm=$573 {$572[$180]}, exc=$1ba {NullPtrExc($180)}}, c:$574 {norm=$177 {177}, exc=$1ba {NullPtrExc($180)}}>

***** BB21, STMT00115(after)
N006 (  4,  4) [000429] -A-XG---R---              *  ASG       ref    <l:$575, c:$574>
N005 (  1,  1) [000428] D------N----              +--*  LCL_VAR   ref    V40 tmp29        d:2 <l:$573, c:$177>
N004 (  4,  4) [000250] ---XG-------              \--*  IND       ref    <l:$575, c:$574>
N003 (  2,  2) [000568] -------N----                 \--*  ADD       byref  $205
N001 (  1,  1) [000249] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 (last use) $180
N002 (  1,  1) [000567] ------------                    \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun] $1c5

---------

***** BB21, STMT00068(before)
N005 (  5,  5) [000253] ---XG-------              *  RETURN    ref   
N004 (  4,  4) [000427] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000570] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000426] ------------                    +--*  LCL_VAR   ref    V40 tmp29        u:2 (last use)
N002 (  1,  1) [000569] ------------                    \--*  CNS_INT   long   8 field offset Fseq[_task]

N001 [000426]   LCL_VAR   V40 tmp29        u:2 (last use) => <l:$573 {$572[$180]}, c:$177 {177}>
N002 [000569]   CNS_INT   8 field offset Fseq[_task] => $1c4 {LngCns:  8}
N003 [000570]   ADD       => <l:$21a {ADD($1c4, $573)}, c:$219 {ADD($177, $1c4)}>
  VNApplySelectors:
    VNForHandle(_task) is $107, fieldType is ref
    VNForMapSelect($640, $107):ref returns $576 {$640[$107]}
    VNForMapSelect($576, $573):ref returns $577 {$576[$573]}
N004 [000427]   IND       => <l:$57b {norm=$577 {$576[$573]}, exc=$579 {NullPtrExc($573)}}, c:$57a {norm=$179 {179}, exc=$578 {NullPtrExc($177)}}>
N005 [000253]   RETURN    => $17a {17a}

***** BB21, STMT00068(after)
N005 (  5,  5) [000253] ---XG-------              *  RETURN    ref    $17a
N004 (  4,  4) [000427] ---XG-------              \--*  IND       ref    <l:$57b, c:$57a>
N003 (  2,  2) [000570] -------N----                 \--*  ADD       byref  <l:$21a, c:$219>
N001 (  1,  1) [000426] ------------                    +--*  LCL_VAR   ref    V40 tmp29        u:2 (last use) <l:$573, c:$177>
N002 (  1,  1) [000569] ------------                    \--*  CNS_INT   long   8 field offset Fseq[_task] $1c4

finish(BB21).

*************** Finishing PHASE Do value numbering

*************** Starting PHASE Hoist loop code

*************** In optHoistLoopCode()
Blocks/Trees before phase

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB13 ( cond ) T0      try {       keep i try label hascall gcsafe 
BB03 [0002]  2  0    BB02,BB10             4     0 [072..08B)-> BB05 ( cond ) T0                  i Loop label target hascall gcsafe newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  2     0 [08B..08F)-> BB06 (always) T0                  i gcsafe bwd 
BB05 [0004]  1  0    BB03                  2     0 [08F..09C)                 T0                  i label target hascall gcsafe bwd 
BB06 [0005]  2  0    BB04,BB05             4     0 [09C..0BB)-> BB09 ( cond ) T0                  i label target gcsafe bwd 
BB07 [0006]  1  0    BB06                  2     0 [000..0D3)-> BB12 ( cond ) T0                  i hascall gcsafe newobj bwd 
BB08 [0041]  1  0    BB07                  2     0 [000..000)                 T0                  i internal label target gcsafe newobj bwd 
BB09 [0007]  2  0    BB06,BB08             4     0 [000..0E9)-> BB12 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB10 [0045]  1  0    BB09                  4     0 [000..0F2)-> BB03 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB11 [0061]  1  0    BB10                  0.50    [???..???)-> BB13 (always) T0                  internal gcsafe 
BB12 [0044]  2  0    BB07,BB09             0       [000..000)        (throw ) T0      }           i internal rare label target hascall gcsafe bwd 
BB13 [0057]  2       BB02,BB11             1       [0F4..0F8)-> BB15 ( cond )                     keep i label target gcsafe cfb 
BB14 [0058]  1       BB13                  0.50    [0F8..100)                                     i hascall gcsafe 
BB15 [0013]  2       BB13,BB14             1       [100..127)-> BB17 (always)                     i label target hascall gcsafe newobj 
BB16 [0014]  1       BB20                  2     1 [127..133)                                     i Loop label target hascall gcsafe bwd bwd-target 
BB17 [0015]  2       BB15,BB16             8     1 [000..147)-> BB19 ( cond )                     i label target gcsafe bwd 
BB18 [0053]  1       BB17                  2     1 [000..000)-> BB20 (always)                     i internal gcsafe bwd 
BB19 [0054]  1       BB17                  2     1 [000..000)                                     i internal label target gcsafe bwd 
BB20 [0055]  2       BB18,BB19             8     1 [???..???)-> BB16 ( cond )                     internal label target gcsafe bwd 
BB21 [0016]  1       BB20                  1       [147..153)        (return)                     i gcsafe 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB22 [0010]  1     0                       0       [0F4..0F8)-> BB24 ( cond )    H0 F fault {     keep i rare label target flet 
BB23 [0011]  1     0 BB22                  0       [0F8..0FF)                    H0               i rare hascall gcsafe 
BB24 [0012]  2     0 BB22,BB23             0       [0FF..100)        (finret)    H0   }           i rare label target 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..070), preds={} succs={BB02}

***** BB01
STMT00000 (IL 0x000...0x005)
N005 ( 16, 16) [000003] -AC-----R---              *  ASG       ref    $180
N004 (  1,  1) [000002] D------N----              +--*  LCL_VAR   ref    V12 tmp1         d:2 $180
N003 ( 16, 16) [000001] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $180
N002 (  2, 10) [000000] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $100

***** BB01
STMT00002 (IL 0x005...  ???)
N003 (  1,  3) [000008] -A------R---              *  ASG       ref    $180
N002 (  1,  1) [000007] D------N----              +--*  LCL_VAR   ref    V02 loc0         d:2 $180
N001 (  1,  1) [000006] ------------              \--*  LCL_VAR   ref    V12 tmp1         u:2 $180

***** BB01
STMT00003 (IL 0x006...0x008)
N006 (  6,  6) [000012] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000011] D--XG--N----              +--*  IND       ref    $81
N003 (  2,  2) [000440] -------N----              |  \--*  ADD       byref  $200
N001 (  1,  1) [000009] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2 $180
N002 (  1,  1) [000439] ------------              |     \--*  CNS_INT   long   32 field offset Fseq[outputFile] $1c0
N005 (  1,  1) [000010] ------------              \--*  LCL_VAR   ref    V01 arg1         u:1 (last use) $81

***** BB01
STMT00004 (IL 0x00D...0x00F)
N006 (  6,  6) [000016] -A-XG-------              *  ASG       int    $VN.Void
N004 (  4,  4) [000015] D--XG--N----              +--*  IND       int    $40
N003 (  2,  2) [000442] -------N----              |  \--*  ADD       byref  $201
N001 (  1,  1) [000013] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2 $180
N002 (  1,  1) [000441] ------------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1
N005 (  1,  1) [000014] ------------              \--*  CNS_INT   int    0 $40

***** BB01
STMT00005 (IL 0x014...0x016)
N006 (  6,  6) [000020] -A-XG-------              *  ASG       int    $VN.Void
N004 (  4,  4) [000019] D--XG--N----              +--*  IND       int    $40
N003 (  2,  2) [000444] -------N----              |  \--*  ADD       byref  $202
N001 (  1,  1) [000017] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2 $180
N002 (  1,  1) [000443] ------------              |     \--*  CNS_INT   long   56 field offset Fseq[analyzersFinishedCount] $1c2
N005 (  1,  1) [000018] ------------              \--*  CNS_INT   int    0 $40

***** BB01
STMT00006 (IL 0x01B...0x021)
N005 ( 16, 16) [000025] -AC-----R---              *  ASG       ref    $183
N004 (  1,  1) [000024] D------N----              +--*  LCL_VAR   ref    V13 tmp2         d:2 $183
N003 ( 16, 16) [000023] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $183
N002 (  2, 10) [000022] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $104

***** BB01
STMT00074 (IL   ???...  ???)
N005 ( 16, 16) [000269] -AC-----R---              *  ASG       ref    $184
N004 (  1,  1) [000268] D------N----              +--*  LCL_VAR   ref    V30 tmp19        d:2 $184
N003 ( 16, 16) [000267] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $184
N002 (  2, 10) [000266] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $105

***** BB01
STMT00079 (IL   ???...  ???)
N006 (  6,  9) [000283] -A-XGO------              *  ASG       int    $VN.Void
N004 (  4,  4) [000282] V--XGO-N----              +--*  IND       int    $43
N003 (  2,  2) [000448] -------N----              |  \--*  ADD       byref  $203
N001 (  1,  1) [000280] ------------              |     +--*  LCL_VAR   ref    V30 tmp19        u:2 $184
N002 (  1,  1) [000447] ------------              |     \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags] $1c3
N005 (  1,  4) [000281] ------------              \--*  CNS_INT   int    0x2000400 $43

***** BB01
STMT00076 (IL   ???...  ???)
N006 (  6,  6) [000274] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000273] D--XG--N----              +--*  IND       ref    $184
N003 (  2,  2) [000450] -------N----              |  \--*  ADD       byref  $204
N001 (  1,  1) [000265] ------------              |     +--*  LCL_VAR   ref    V13 tmp2         u:2 $183
N002 (  1,  1) [000449] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_task] $1c4
N005 (  1,  1) [000272] ------------              \--*  LCL_VAR   ref    V30 tmp19        u:2 (last use) $184

***** BB01
STMT00008 (IL 0x021...  ???)
N006 (  6,  6) [000030] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000029] D--XG--N----              +--*  IND       ref    $183
N003 (  2,  2) [000452] -------N----              |  \--*  ADD       byref  $205
N001 (  1,  1) [000021] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2 $180
N002 (  1,  1) [000451] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun] $1c5
N005 (  1,  1) [000028] ------------              \--*  LCL_VAR   ref    V13 tmp2         u:2 (last use) $183

***** BB01
STMT00009 (IL 0x026...0x02C)
N005 ( 16, 16) [000035] -AC-----R---              *  ASG       ref    $189
N004 (  1,  1) [000034] D------N----              +--*  LCL_VAR   ref    V14 tmp3         d:2 $189
N003 ( 16, 16) [000033] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $189
N002 (  2, 10) [000032] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $109

***** BB01
STMT00082 (IL   ???...  ???)
N013 ( 26, 35) [000292] -ACXG---R---              *  ASG       ref    $VN.Void
N012 (  4,  4) [000291] D--XG--N----              +--*  IND       ref    $246
N011 (  2,  2) [000455] -------N----              |  \--*  ADD       byref  $206
N009 (  1,  1) [000287] ------------              |     +--*  LCL_VAR   ref    V14 tmp3         u:2 $189
N010 (  1,  1) [000454] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_array] $1c4
N008 ( 21, 30) [000300] --CXG-------              \--*  COMMA     ref    <l:$18c, c:$18b>
N005 ( 17, 18) [000299] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS $381
N003 (  2, 10) [000297] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e0b0028 $1c6
N004 (  1,  1) [000298] ------------ arg1 in rdx     |  \--*  CNS_INT   int    14 $44
N007 (  4, 12) [000295] n---G-------                 \--*  IND       ref    <l:$246, c:$14b>
N006 (  2, 10) [000458] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[Value] $10a

***** BB01
STMT00011 (IL 0x02C...  ???)
N006 (  6,  6) [000040] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000039] D--XG--N----              +--*  IND       ref    $189
N003 (  2,  2) [000460] -------N----              |  \--*  ADD       byref  $207
N001 (  1,  1) [000031] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2 $180
N002 (  1,  1) [000459] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers] $1c4
N005 (  1,  1) [000038] ------------              \--*  LCL_VAR   ref    V14 tmp3         u:2 (last use) $189

***** BB01
STMT00012 (IL 0x031...0x033)
N006 (  6,  6) [000044] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000043] D--XG--N----              +--*  IND       ref    $VN.Null
N003 (  2,  2) [000462] -------N----              |  \--*  ADD       byref  $208
N001 (  1,  1) [000041] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2 $180
N002 (  1,  1) [000461] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter] $1c7
N005 (  1,  1) [000042] ------------              \--*  CNS_INT   ref    null $VN.Null

***** BB01
STMT00013 (IL 0x038...0x03E)
N005 ( 16, 16) [000049] -AC-----R---              *  ASG       ref    $193
N004 (  1,  1) [000048] D------N----              +--*  LCL_VAR   ref    V15 tmp4         d:2 $193
N003 ( 16, 16) [000047] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $193
N002 (  2, 10) [000046] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $10e

***** BB01
STMT00083 (IL   ???...  ???)
N005 ( 16, 10) [000303] --CXG-------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor $VN.Void
N003 (  1,  1) [000050] ------------ this in rcx  +--*  LCL_VAR   ref    V15 tmp4         u:2 $193
N004 (  1,  1) [000302] ------------ arg1 in rdx  \--*  CNS_INT   ref    null $VN.Null

***** BB01
STMT00015 (IL 0x03E...  ???)
N006 (  6,  6) [000054] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000053] D--XG--N----              +--*  IND       ref    $193
N003 (  2,  2) [000467] -------N----              |  \--*  ADD       byref  $209
N001 (  1,  1) [000045] ------------              |     +--*  LCL_VAR   ref    V12 tmp1         u:2 (last use) $180
N002 (  1,  1) [000466] ------------              |     \--*  CNS_INT   long   40 field offset Fseq[output] $1c8
N005 (  1,  1) [000052] ------------              \--*  LCL_VAR   ref    V15 tmp4         u:2 (last use) $193

***** BB01
STMT00086 (IL   ???...  ???)
N003 ( 14,  5) [000316] -ACXG---R---              *  ASG       ref    $151
N002 (  1,  1) [000315] D------N----              +--*  LCL_VAR   ref    V31 tmp20        d:2 $151
N001 ( 14,  5) [000055] --CXG-------              \--*  CALL      ref    System.Diagnostics.Process.GetCurrentProcess $151

***** BB01
STMT00087 (IL   ???...  ???)
N002 (  2,  2) [000314] ---X--------              *  NULLCHECK byte   $197
N001 (  1,  1) [000313] ------------              \--*  LCL_VAR   ref    V31 tmp20        u:2 $151

***** BB01
STMT00084 (IL   ???...  ???)
N005 ( 16, 10) [000308] --CXG-------              *  CALL      void   System.Diagnostics.Process.EnsureState $VN.Void
N003 (  1,  1) [000306] ------------ this in rcx  +--*  LCL_VAR   ref    V31 tmp20        u:2 $151
N004 (  1,  1) [000307] ------------ arg1 in rdx  \--*  CNS_INT   int    3 $46

***** BB01
STMT00088 (IL   ???...  ???)
N008 ( 18, 13) [000322] -ACXG---R---              *  ASG       ref    $156
N007 (  1,  1) [000321] D------N----              +--*  LCL_VAR   ref    V32 tmp21        d:2 $156
N006 ( 18, 13) [000311] --CXG-------              \--*  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule $156
N005 (  4,  7) [000310] ---XG------- arg0 in rcx     \--*  IND       int    <l:$289, c:$288>
N004 (  2,  5) [000471] -------N----                    \--*  ADD       byref  $20a
N002 (  1,  1) [000309] ------------                       +--*  LCL_VAR   ref    V31 tmp20        u:2 (last use) $151
N003 (  1,  4) [000470] ------------                       \--*  CNS_INT   long   200 field offset Fseq[_processId] $1c9

***** BB01
STMT00019 (IL   ???...  ???)
N006 (  4,  4) [000062] -A-XG---R---              *  ASG       ref    <l:$19c, c:$19b>
N005 (  1,  1) [000061] D------N----              +--*  LCL_VAR   ref    V03 loc1         d:2 <l:$199, c:$159>
N004 (  4,  4) [000320] ---XG-------              \--*  IND       ref    <l:$19c, c:$19b>
N003 (  2,  2) [000474] -------N----                 \--*  ADD       byref  $20b
N001 (  1,  1) [000319] ------------                    +--*  LCL_VAR   ref    V32 tmp21        u:2 (last use) $156
N002 (  1,  1) [000473] ------------                    \--*  CNS_INT   long   40 field offset Fseq[<FileName>k__BackingField] $1c8

***** BB01
STMT00021 (IL   ???...  ???)
N016 ( 32, 30) [000069] -ACXG---R---              *  ASG       int    $28c
N015 (  1,  1) [000068] D------N----              +--*  LCL_VAR   int    V04 loc2         d:2 $28c
N014 ( 32, 30) [000329] --CXG-------              \--*  GE        int    $28c
N012 ( 27, 28) [000340] --CXG-------                 +--*  CALL      int    System.String.IndexOf $308
N005 (  1,  1) [000339] ------------ arg4 out+20     |  +--*  CNS_INT   int    5 $47
N007 (  3,  3) [000338] ---X-------- arg3 in r9      |  +--*  ARR_LENGTH int    <l:$28b, c:$28a>
N006 (  1,  1) [000337] ------------                 |  |  \--*  LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
N009 (  4, 12) [000476] #---G------- arg1 in rdx     |  +--*  IND       ref    $19f
N008 (  2, 10) [000475] H-----------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E "dotnet.exe" $112
N010 (  1,  1) [000063] ------------ this in rcx     |  +--*  LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
N011 (  1,  1) [000336] ------------ arg2 in r8      |  \--*  CNS_INT   int    0 $40
N013 (  1,  1) [000328] ------------                 \--*  CNS_INT   int    0 $40

***** BB01
STMT00023 (IL   ???...  ???)
N015 ( 26, 20) [000075] -ACXG---R---              *  ASG       ref    <l:$1aa, c:$1a9>
N014 (  1,  1) [000074] D------N----              +--*  LCL_VAR   ref    V05 loc3         d:2 <l:$1a8, c:$161>
N013 ( 26, 20) [000494] -ACXG-------              \--*  COMMA     ref    <l:$1aa, c:$1a9>
N003 ( 14,  5) [000482] -ACXG---R---                 +--*  ASG       ref    $15e
N002 (  1,  1) [000481] D------N----                 |  +--*  LCL_VAR   ref    V41 tmp30        d:2 $15e
N001 ( 14,  5) [000070] --CXG-------                 |  \--*  CALL      ref    System.Environment.GetCommandLineArgs $15e
N012 ( 12, 15) [000493] ---XG-------                 \--*  COMMA     ref    <l:$1aa, c:$1a9>
N007 (  8, 11) [000487] ---X--------                    +--*  ARR_BOUNDS_CHECK_Rng void   $1a5
N004 (  1,  1) [000072] ------------                    |  +--*  CNS_INT   int    0 $40
N006 (  3,  3) [000486] ---X--------                    |  \--*  ARR_LENGTH int    $28d
N005 (  1,  1) [000483] ------------                    |     \--*  LCL_VAR   ref    V41 tmp30        u:2 $15e
N011 (  4,  4) [000073] a---G-------                    \--*  IND       ref    <l:$1a8, c:$161>
N010 (  2,  2) [000492] -------N----                       \--*  ADD       byref  $400
N008 (  1,  1) [000484] ------------                          +--*  LCL_VAR   ref    V41 tmp30        u:2 (last use) $15e
N009 (  1,  1) [000491] ------------                          \--*  CNS_INT   long   16 Fseq[#FirstElem] $1c7

***** BB01
STMT00024 (IL 0x068...0x06E)
N007 ( 23, 21) [000079] -ACXG---R---              *  ASG       ref    $164
N006 (  1,  1) [000078] D------N----              +--*  LCL_VAR   ref    V06 loc4         d:2 $164
N005 ( 23, 21) [000077] --CXG-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator $164
N003 (  1,  1) [000076] ------------ this in rcx     +--*  LCL_VAR   ref    V00 arg0         u:1 (last use) $80
N004 (  2, 10) [000495] H----------- arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $114

------------ BB02 [070..072) -> BB13 (cond), preds={BB01} succs={BB03,BB13}

***** BB02
STMT00119 (IL 0x0E9...  ???)
N008 ( 27, 25) [000578] --CXG-------              *  JTRUE     void  
N007 ( 25, 23) [000571] J-CXG--N----              \--*  EQ        int    $28e
N005 ( 23, 21) [000572] --CXG-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext $30a
N003 (  1,  1) [000575] ------------ this in rcx     |  +--*  LCL_VAR   ref    V06 loc4         u:2 $164
N004 (  2, 10) [000576] H----------- arg1 in r11     |  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
N006 (  1,  1) [000577] ------------                 \--*  CNS_INT   int    0 $40

------------ BB03 [072..08B) -> BB05 (cond), preds={BB02,BB10} succs={BB04,BB05}

***** BB03
STMT00026 (IL 0x072...0x079)
N007 ( 23, 21) [000088] -ACXG---R---              *  ASG       ref    $442
N006 (  1,  1) [000087] D------N----              +--*  LCL_VAR   ref    V07 loc5         d:2 $442
N005 ( 23, 21) [000086] --CXG-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current $442
N003 (  1,  1) [000085] ------------ this in rcx     +--*  LCL_VAR   ref    V06 loc4         u:2 $164
N004 (  2, 10) [000498] H----------- arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $116

***** BB03
STMT00027 (IL 0x07B...0x089)
N005 ( 16, 16) [000092] -AC-----R---              *  ASG       ref    $1ab
N004 (  1,  1) [000091] D------N----              +--*  LCL_VAR   ref    V16 tmp5         d:2 $1ab
N003 ( 16, 16) [000090] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1ab
N002 (  2, 10) [000089] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $117

***** BB03
STMT00092 (IL 0x080...  ???)
N006 (  6,  6) [000347] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000346] D--XG--N----              +--*  IND       ref    $199
N003 (  2,  2) [000503] -------N----              |  \--*  ADD       byref  $20d
N001 (  1,  1) [000096] ------------              |     +--*  LCL_VAR   ref    V16 tmp5         u:2 $1ab
N002 (  1,  1) [000502] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_fileName] $1c4
N005 (  1,  1) [000097] ------------              \--*  LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>

***** BB03
STMT00031 (IL   ???...0x089)
N003 (  1,  3) [000105] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000104] D------N----              +--*  LCL_VAR   ref    V17 tmp6         d:2 $1ab
N001 (  1,  1) [000095] ------------              \--*  LCL_VAR   ref    V16 tmp5         u:2 $1ab

***** BB03
STMT00032 (IL   ???...  ???)
N003 (  1,  3) [000108] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000107] D------N----              +--*  LCL_VAR   ref    V18 tmp7         d:2 $1ab
N001 (  1,  1) [000099] ------------              \--*  LCL_VAR   ref    V16 tmp5         u:2 (last use) $1ab

***** BB03
STMT00030 (IL 0x087...  ???)
N004 (  5,  5) [000103] ------------              *  JTRUE     void  
N003 (  3,  3) [000102] J------N----              \--*  NE        int    $28f
N001 (  1,  1) [000100] ------------                 +--*  LCL_VAR   int    V04 loc2         u:2 $28c
N002 (  1,  1) [000101] ------------                 \--*  CNS_INT   int    0 $40

------------ BB04 [08B..08F) -> BB06 (always), preds={BB03} succs={BB06}

***** BB04
STMT00053 (IL   ???...0x08D)
N003 (  1,  3) [000203] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000202] D------N----              +--*  LCL_VAR   ref    V19 tmp8         d:4 $1ab
N001 (  1,  1) [000110] ------------              \--*  LCL_VAR   ref    V17 tmp6         u:2 (last use) $1ab

***** BB04
STMT00054 (IL   ???...  ???)
N003 (  1,  3) [000206] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000205] D------N----              +--*  LCL_VAR   ref    V20 tmp9         d:4 $1ab
N001 (  1,  1) [000111] ------------              \--*  LCL_VAR   ref    V18 tmp7         u:2 (last use) $1ab

***** BB04
STMT00055 (IL   ???...  ???)
N003 (  1,  3) [000209] -A------R---              *  ASG       ref    $442
N002 (  1,  1) [000208] D------N----              +--*  LCL_VAR   ref    V21 tmp10        d:4 $442
N001 (  1,  1) [000201] ------------              \--*  LCL_VAR   ref    V07 loc5         u:2 (last use) $442

------------ BB05 [08F..09C), preds={BB03} succs={BB06}

***** BB05
STMT00033 (IL   ???...0x097)
N003 (  1,  3) [000119] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000118] D------N----              +--*  LCL_VAR   ref    V19 tmp8         d:3 $1ab
N001 (  1,  1) [000112] ------------              \--*  LCL_VAR   ref    V17 tmp6         u:2 (last use) $1ab

***** BB05
STMT00034 (IL   ???...  ???)
N003 (  1,  3) [000122] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000121] D------N----              +--*  LCL_VAR   ref    V20 tmp9         d:3 $1ab
N001 (  1,  1) [000113] ------------              \--*  LCL_VAR   ref    V18 tmp7         u:2 (last use) $1ab

***** BB05
STMT00035 (IL   ???...  ???)
N010 ( 20, 22) [000125] -ACXG---R---              *  ASG       ref    $44e
N009 (  1,  1) [000124] D------N----              +--*  LCL_VAR   ref    V21 tmp10        d:3 $44e
N008 ( 20, 22) [000117] --CXG-------              \--*  CALL      ref    System.String.Concat $44e
N005 (  4, 12) [000505] #---G------- arg1 in rdx     +--*  IND       ref    $1ae
N004 (  2, 10) [000504] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E " " $119
N006 (  1,  1) [000114] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V05 loc3         u:2 <l:$1a8, c:$161>
N007 (  1,  1) [000116] ------------ arg2 in r8      \--*  LCL_VAR   ref    V07 loc5         u:2 (last use) $442

------------ BB06 [09C..0BB) -> BB09 (cond), preds={BB04,BB05} succs={BB07,BB09}

***** BB06
STMT00125 (IL   ???...  ???)
N005 (  0,  0) [000596] -A------R---              *  ASG       ref   
N004 (  0,  0) [000594] D------N----              +--*  LCL_VAR   ref    V21 tmp10        d:2
N003 (  0,  0) [000595] ------------              \--*  PHI       ref   
N001 (  0,  0) [000606] ------------ pred BB04       +--*  PHI_ARG   ref    V21 tmp10        u:4 $442
N002 (  0,  0) [000603] ------------ pred BB05       \--*  PHI_ARG   ref    V21 tmp10        u:3 $44e

***** BB06
STMT00124 (IL   ???...  ???)
N005 (  0,  0) [000593] -A------R---              *  ASG       ref   
N004 (  0,  0) [000591] D------N----              +--*  LCL_VAR   ref    V20 tmp9         d:2
N003 (  0,  0) [000592] ------------              \--*  PHI       ref   
N001 (  0,  0) [000607] ------------ pred BB04       +--*  PHI_ARG   ref    V20 tmp9         u:4 $1ab
N002 (  0,  0) [000604] ------------ pred BB05       \--*  PHI_ARG   ref    V20 tmp9         u:3 $1ab

***** BB06
STMT00123 (IL   ???...  ???)
N005 (  0,  0) [000590] -A------R---              *  ASG       ref   
N004 (  0,  0) [000588] D------N----              +--*  LCL_VAR   ref    V19 tmp8         d:2
N003 (  0,  0) [000589] ------------              \--*  PHI       ref   
N001 (  0,  0) [000608] ------------ pred BB04       +--*  PHI_ARG   ref    V19 tmp8         u:4 $1ab
N002 (  0,  0) [000605] ------------ pred BB05       \--*  PHI_ARG   ref    V19 tmp8         u:3 $1ab

***** BB06
STMT00093 (IL   ???...  ???)
N006 (  6,  6) [000350] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000349] D--XG--N----              +--*  IND       ref    $251
N003 (  2,  2) [000510] -------N----              |  \--*  ADD       byref  $20e
N001 (  1,  1) [000128] ------------              |     +--*  LCL_VAR   ref    V20 tmp9         u:2 (last use) $1ab
N002 (  1,  1) [000509] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_arguments] $1c7
N005 (  1,  1) [000129] ------------              \--*  LCL_VAR   ref    V21 tmp10        u:2 (last use) $251

***** BB06
STMT00094 (IL 0x0A1...  ???)
N006 (  7, 10) [000355] -A-XG-------              *  ASG       bool   $VN.Void
N004 (  5,  8) [000354] D--XG--N----              +--*  IND       bool   $40
N003 (  2,  5) [000512] -------N----              |  \--*  ADD       byref  $20f
N001 (  1,  1) [000131] ------------              |     +--*  LCL_VAR   ref    V19 tmp8         u:2 $1ab
N002 (  1,  4) [000511] ------------              |     \--*  CNS_INT   long   130 field offset Fseq[<UseShellExecute>k__BackingField] $1cb
N005 (  1,  1) [000353] ------------              \--*  CNS_INT   int    0 $40

***** BB06
STMT00040 (IL 0x0AA...0x0B9)
N006 (  4,  4) [000145] -A-XG---R---              *  ASG       ref    <l:$1bc, c:$1bb>
N005 (  1,  1) [000144] D------N----              +--*  LCL_VAR   ref    V23 tmp12        d:2 <l:$1b9, c:$454>
N004 (  4,  4) [000138] ---XG-------              \--*  IND       ref    <l:$1bc, c:$1bb>
N003 (  2,  2) [000514] -------N----                 \--*  ADD       byref  $207
N001 (  1,  1) [000137] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000513] ------------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers] $1c4

***** BB06
STMT00039 (IL 0x0AA...  ???)
N006 (  4,  4) [000143] -A-XG---R---              *  ASG       ref    <l:$542, c:$541>
N005 (  1,  1) [000142] D------N----              +--*  LCL_VAR   ref    V22 tmp11        d:2 <l:$540, c:$456>
N004 (  4,  4) [000141] ---XG-------              \--*  IND       ref    <l:$542, c:$541>
N003 (  2,  2) [000516] -------N----                 \--*  ADD       byref  $210
N001 (  1,  1) [000140] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000515] ------------                    \--*  CNS_INT   long   48 field offset Fseq[<>9__2] $1cc

***** BB06
STMT00042 (IL   ???...0x0B9)
N003 (  1,  3) [000153] -A------R---              *  ASG       ref    <l:$1b9, c:$454>
N002 (  1,  1) [000152] D------N----              +--*  LCL_VAR   ref    V24 tmp13        d:2 <l:$1b9, c:$454>
N001 (  1,  1) [000146] ------------              \--*  LCL_VAR   ref    V23 tmp12        u:2 (last use) <l:$1b9, c:$454>

***** BB06
STMT00043 (IL   ???...  ???)
N003 (  1,  3) [000156] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000155] D------N----              +--*  LCL_VAR   ref    V25 tmp14        d:2 $1ab
N001 (  1,  1) [000139] ------------              \--*  LCL_VAR   ref    V19 tmp8         u:2 (last use) $1ab

***** BB06
STMT00044 (IL   ???...  ???)
N003 (  1,  3) [000159] -A------R---              *  ASG       ref    <l:$540, c:$456>
N002 (  1,  1) [000158] D------N----              +--*  LCL_VAR   ref    V26 tmp15        d:2 <l:$540, c:$456>
N001 (  1,  1) [000147] ------------              \--*  LCL_VAR   ref    V22 tmp11        u:2 <l:$540, c:$456>

***** BB06
STMT00041 (IL   ???...  ???)
N004 (  5,  5) [000151] ------------              *  JTRUE     void  
N003 (  3,  3) [000150] J------N----              \--*  NE        int    <l:$291, c:$290>
N001 (  1,  1) [000148] ------------                 +--*  LCL_VAR   ref    V22 tmp11        u:2 (last use) <l:$540, c:$456>
N002 (  1,  1) [000149] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB07 [000..0D3) -> BB12 (cond), preds={BB06} succs={BB08,BB12}

***** BB07
STMT00048 (IL   ???...0x0CA)
N005 ( 16, 16) [000184] -AC-----R---              *  ASG       ref    $543
N004 (  1,  1) [000183] D------N----              +--*  LCL_VAR   ref    V28 tmp17        d:2 $543
N003 ( 16, 16) [000182] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $543
N002 (  2, 10) [000181] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $11e

***** BB07
STMT00095 (IL   ???...  ???)
N004 (  5,  5) [000359] ------------              *  JTRUE     void  
N003 (  3,  3) [000358] J------N----              \--*  EQ        int    $40
N001 (  1,  1) [000179] ------------                 +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000357] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB08 [000..000), preds={BB07} succs={BB09}

***** BB08
STMT00096 (IL   ???...  ???)
N006 (  6,  6) [000362] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000361] D--XG--N----              +--*  IND       ref    $180
N003 (  2,  2) [000519] -------N----              |  \--*  ADD       byref  $211
N001 (  1,  1) [000185] ------------              |     +--*  LCL_VAR   ref    V28 tmp17        u:2 $543
N002 (  1,  1) [000518] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $1c4
N005 (  1,  1) [000360] ------------              \--*  LCL_VAR   ref    V02 loc0         u:2 $180

***** BB08
STMT00097 (IL   ???...  ???)
N006 (  7, 15) [000366] -A-XG-------              *  ASG       long   $VN.Void
N004 (  4,  4) [000365] D--XG--N----              +--*  IND       long   $120
N003 (  2,  2) [000521] -------N----              |  \--*  ADD       byref  $212
N001 (  1,  1) [000363] ------------              |     +--*  LCL_VAR   ref    V28 tmp17        u:2 $543
N002 (  1,  1) [000520] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $1c5
N005 (  2, 10) [000180] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $120

***** BB08
STMT00051 (IL   ???...0x0CC)
N006 (  6,  6) [000192] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000191] D--XG--N----              +--*  IND       ref    $543
N003 (  2,  2) [000523] -------N----              |  \--*  ADD       byref  $210
N001 (  1,  1) [000178] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000522] ------------              |     \--*  CNS_INT   long   48 field offset Fseq[<>9__2] $1cc
N005 (  1,  1) [000187] ------------              \--*  LCL_VAR   ref    V28 tmp17        u:2 $543

***** BB08
STMT00052 (IL   ???...0x0D1)
N003 (  1,  3) [000199] -A------R---              *  ASG       ref    $543
N002 (  1,  1) [000198] D------N----              +--*  LCL_VAR   ref    V26 tmp15        d:4 $543
N001 (  1,  1) [000193] ------------              \--*  LCL_VAR   ref    V28 tmp17        u:2 (last use) $543

------------ BB09 [000..0E9) -> BB12 (cond), preds={BB06,BB08} succs={BB10,BB12}

***** BB09
STMT00122 (IL   ???...  ???)
N005 (  0,  0) [000587] -A------R---              *  ASG       ref   
N004 (  0,  0) [000585] D------N----              +--*  LCL_VAR   ref    V26 tmp15        d:3
N003 (  0,  0) [000586] ------------              \--*  PHI       ref   
N001 (  0,  0) [000602] ------------ pred BB08       +--*  PHI_ARG   ref    V26 tmp15        u:4 $543
N002 (  0,  0) [000601] ------------ pred BB06       \--*  PHI_ARG   ref    V26 tmp15        u:2 <l:$540, c:$456>

***** BB09
STMT00045 (IL   ???...0x0E4)
N005 ( 16, 16) [000172] -AC-----R---              *  ASG       ref    $54b
N004 (  1,  1) [000171] D------N----              +--*  LCL_VAR   ref    V27 tmp16        d:2 $54b
N003 ( 16, 16) [000170] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $54b
N002 (  2, 10) [000169] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $123

***** BB09
STMT00099 (IL   ???...  ???)
N004 (  5,  5) [000371] ------------              *  JTRUE     void  
N003 (  3,  3) [000370] J------N----              \--*  EQ        int    $40
N001 (  1,  1) [000167] ------------                 +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000369] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB10 [000..0F2) -> BB03 (cond), preds={BB09} succs={BB11,BB03}

***** BB10
STMT00100 (IL   ???...  ???)
N006 (  6,  6) [000374] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000373] D--XG--N----              +--*  IND       ref    $180
N003 (  2,  2) [000526] -------N----              |  \--*  ADD       byref  $213
N001 (  1,  1) [000173] ------------              |     +--*  LCL_VAR   ref    V27 tmp16        u:2 $54b
N002 (  1,  1) [000525] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $1c4
N005 (  1,  1) [000372] ------------              \--*  LCL_VAR   ref    V02 loc0         u:2 $180

***** BB10
STMT00101 (IL   ???...  ???)
N006 (  7, 15) [000378] -A-XG-------              *  ASG       long   $VN.Void
N004 (  4,  4) [000377] D--XG--N----              +--*  IND       long   $125
N003 (  2,  2) [000528] -------N----              |  \--*  ADD       byref  $214
N001 (  1,  1) [000375] ------------              |     +--*  LCL_VAR   ref    V27 tmp16        u:2 $54b
N002 (  1,  1) [000527] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $1c5
N005 (  2, 10) [000168] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $125

***** BB10
STMT00047 (IL 0x0DF...  ???)
N013 ( 36, 21) [000177] --CXG-------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue $VN.Void
N010 ( 17, 11) [000533] -ACXG---R-L- arg1 SETUP   +--*  ASG       ref    $464
N009 (  1,  1) [000532] D------N----              |  +--*  LCL_VAR   ref    V42 tmp31        d:2 $464
N008 ( 17, 11) [000176] --CXG-------              |  \--*  CALL      ref    SolutionAnalyzer.IPC.CreateSession $464
N005 (  1,  1) [000165] ------------ arg0 in rcx  |     +--*  LCL_VAR   ref    V25 tmp14        u:2 (last use) $1ab
N006 (  1,  1) [000166] ------------ arg1 in rdx  |     +--*  LCL_VAR   ref    V26 tmp15        u:3 (last use) $258
N007 (  1,  1) [000175] ------------ arg2 in r8   |     \--*  LCL_VAR   ref    V27 tmp16        u:2 (last use) $54b
N011 (  1,  1) [000534] ------------ arg1 in rdx  +--*  LCL_VAR   ref    V42 tmp31        u:2 (last use) $464
N012 (  1,  1) [000164] ------------ this in rcx  \--*  LCL_VAR   ref    V24 tmp13        u:2 (last use) <l:$1b9, c:$454>

***** BB10
STMT00025 (IL 0x0E9...0x0F0)
N008 ( 27, 25) [000084] --CXG-------              *  JTRUE     void  
N007 ( 25, 23) [000083] J-CXG--N----              \--*  NE        int    $292
N005 ( 23, 21) [000081] --CXG-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext $5c0
N003 (  1,  1) [000080] ------------ this in rcx     |  +--*  LCL_VAR   ref    V06 loc4         u:2 $164
N004 (  2, 10) [000536] H----------- arg1 in r11     |  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
N006 (  1,  1) [000082] ------------                 \--*  CNS_INT   int    0 $40

------------ BB11 [???..???) -> BB13 (always), preds={BB10} succs={BB13}

------------ BB12 [000..000) (throw), preds={BB07,BB09} succs={}

***** BB12
STMT00102 (IL   ???...  ???)
N001 ( 14,  5) [000379] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance $VN.Void

------------ BB13 [0F4..0F8) -> BB15 (cond), preds={BB02,BB11} succs={BB14,BB15}

***** BB13
STMT00116 (IL   ???...  ???)
N004 (  5,  5) [000431] ------------              *  JTRUE     void  
N003 (  3,  3) [000432] J------N----              \--*  EQ        int    $293
N001 (  1,  1) [000433] ------------                 +--*  LCL_VAR   ref    V06 loc4         u:2 $164
N002 (  1,  1) [000434] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB14 [0F8..100), preds={BB13} succs={BB15}

***** BB14
STMT00117 (IL   ???...  ???)
N005 ( 23, 21) [000435] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose $VN.Void
N003 (  1,  1) [000436] ------------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         u:2 (last use) $164
N004 (  2, 10) [000539] H----------- arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127

------------ BB15 [100..127) -> BB17 (always), preds={BB13,BB14} succs={BB17}

***** BB15
STMT00103 (IL 0x100...  ???)
N006 (  4,  4) [000384] -A-XG---R---              *  ASG       ref    <l:$569, c:$568>
N005 (  1,  1) [000383] D------N----              +--*  LCL_VAR   ref    V35 tmp24        d:2 <l:$567, c:$16e>
N004 (  4,  4) [000213] ---XG-------              \--*  IND       ref    <l:$569, c:$568>
N003 (  2,  2) [000546] -------N----                 \--*  ADD       byref  $207
N001 (  1,  1) [000212] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000545] ------------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers] $1c4

***** BB15
STMT00057 (IL   ???...  ???)
N009 (  9,  9) [000217] -A-XG---R---              *  ASG       int    $VN.Void
N008 (  4,  4) [000216] D--XG--N----              +--*  IND       int    $299
N007 (  2,  2) [000548] -------N----              |  \--*  ADD       byref  $201
N005 (  1,  1) [000211] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N006 (  1,  1) [000547] ------------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1
N004 (  4,  4) [000382] ---XG-------              \--*  IND       int    <l:$29b, c:$29a>
N003 (  2,  2) [000550] -------N----                 \--*  ADD       byref  <l:$216, c:$215>
N001 (  1,  1) [000381] ------------                    +--*  LCL_VAR   ref    V35 tmp24        u:2 (last use) <l:$567, c:$16e>
N002 (  1,  1) [000549] ------------                    \--*  CNS_INT   long   24 field offset Fseq[_size] $1c5

***** BB15
STMT00058 (IL 0x111...0x11D)
N005 ( 16, 16) [000224] -AC-----R---              *  ASG       ref    $56c
N004 (  1,  1) [000223] D------N----              +--*  LCL_VAR   ref    V29 tmp18        d:2 $56c
N003 ( 16, 16) [000222] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $56c
N002 (  2, 10) [000221] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $12b

***** BB15
STMT00109 (IL   ???...  ???)
N006 (  4,  4) [000402] -A-XG---R---              *  ASG       int    <l:$2a3, c:$2a2>
N005 (  1,  1) [000401] D------N----              +--*  LCL_VAR   int    V37 tmp26        d:2 <l:$299, c:$30c>
N004 (  4,  4) [000220] ---XG-------              \--*  IND       int    <l:$2a3, c:$2a2>
N003 (  2,  2) [000553] -------N----                 \--*  ADD       byref  $201
N001 (  1,  1) [000219] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000552] ------------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1

***** BB15
STMT00104 (IL   ???...  ???)
N005 ( 16, 16) [000389] -AC-----R---              *  ASG       ref    $56d
N004 (  1,  1) [000388] D------N----              +--*  LCL_VAR   ref    V36 tmp25        d:2 $56d
N003 ( 16, 16) [000387] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $56d
N002 (  2, 10) [000386] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $12c

***** BB15
STMT00110 (IL   ???...  ???)
N007 ( 17, 12) [000406] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor $VN.Void
N004 (  1,  1) [000390] ------------ this in rcx  +--*  LCL_VAR   ref    V36 tmp25        u:2 $56d
N005 (  1,  1) [000404] ------------ arg1 in rdx  +--*  CNS_INT   int    0 $40
N006 (  1,  1) [000405] ------------ arg2 in r8   \--*  CNS_INT   ref    null $VN.Null

***** BB15
STMT00106 (IL   ???...  ???)
N006 (  6,  6) [000394] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000393] D--XG--N----              +--*  IND       ref    $56d
N003 (  2,  2) [000559] -------N----              |  \--*  ADD       byref  $217
N001 (  1,  1) [000225] ------------              |     +--*  LCL_VAR   ref    V29 tmp18        u:2 $56c
N002 (  1,  1) [000558] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_workItems] $1c4
N005 (  1,  1) [000392] ------------              \--*  LCL_VAR   ref    V36 tmp25        u:2 (last use) $56d

***** BB15
STMT00108 (IL   ???...  ???)
N006 (  6,  6) [000400] -A-XG-------              *  ASG       int    $VN.Void
N004 (  4,  4) [000399] D--XG--N----              +--*  IND       int    $299
N003 (  2,  2) [000561] -------N----              |  \--*  ADD       byref  $218
N001 (  1,  1) [000397] ------------              |     +--*  LCL_VAR   ref    V29 tmp18        u:2 $56c
N002 (  1,  1) [000560] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_workItemsToComplete] $1c7
N005 (  1,  1) [000398] ------------              \--*  LCL_VAR   int    V37 tmp26        u:2 (last use) <l:$299, c:$30c>

***** BB15
STMT00060 (IL 0x11D...  ???)
N006 (  6,  6) [000229] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000228] D--XG--N----              +--*  IND       ref    $56c
N003 (  2,  2) [000563] -------N----              |  \--*  ADD       byref  $208
N001 (  1,  1) [000218] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000562] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter] $1c7
N005 (  1,  1) [000227] ------------              \--*  LCL_VAR   ref    V29 tmp18        u:2 (last use) $56c

***** BB15
STMT00061 (IL 0x122...0x123)
N003 (  1,  3) [000232] -A------R---              *  ASG       int    $40
N002 (  1,  1) [000231] D------N----              +--*  LCL_VAR   int    V10 loc8         d:2 $40
N001 (  1,  1) [000230] ------------              \--*  CNS_INT   int    0 $40

------------ BB16 [127..133), preds={BB20} succs={BB17}

***** BB16
STMT00065 (IL 0x127...0x131)
N003 ( 15,  8) [000243] --CXG-------              *  CALL nullcheck void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0 $VN.Void
N002 (  1,  1) [000242] ------------ this in rcx  \--*  LCL_VAR   ref    V02 loc0         u:2 $180

***** BB16
STMT00066 (IL 0x12D...  ???)
N005 (  3,  3) [000248] -A------R---              *  ASG       int    $2ad
N004 (  1,  1) [000247] D------N----              +--*  LCL_VAR   int    V10 loc8         d:4 $2ad
N003 (  3,  3) [000246] ------------              \--*  ADD       int    $2ad
N001 (  1,  1) [000244] ------------                 +--*  LCL_VAR   int    V10 loc8         u:3 (last use) $2ca
N002 (  1,  1) [000245] ------------                 \--*  CNS_INT   int    1 $41

------------ BB17 [000..147) -> BB19 (cond), preds={BB15,BB16} succs={BB18,BB19}

***** BB17
STMT00120 (IL   ???...  ???)
N005 (  0,  0) [000581] -A------R---              *  ASG       int   
N004 (  0,  0) [000579] D------N----              +--*  LCL_VAR   int    V10 loc8         d:3
N003 (  0,  0) [000580] ------------              \--*  PHI       int   
N001 (  0,  0) [000598] ------------ pred BB16       +--*  PHI_ARG   int    V10 loc8         u:4
N002 (  0,  0) [000597] ------------ pred BB15       \--*  PHI_ARG   int    V10 loc8         u:2 $40

***** BB17
STMT00114 (IL   ???...  ???)
N006 (  4,  4) [000424] -A-XG---R---              *  ASG       int    <l:$2a9, c:$2a8>
N005 (  1,  1) [000423] D------N----              +--*  LCL_VAR   int    V39 tmp28        d:2 <l:$2a7, c:$680>
N004 (  4,  4) [000237] ---XG-------              \--*  IND       int    <l:$2a9, c:$2a8>
N003 (  2,  2) [000566] -------N----                 \--*  ADD       byref  $201
N001 (  1,  1) [000236] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000565] ------------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1

***** BB17
STMT00111 (IL   ???...  ???)
N004 (  5,  5) [000414] ------------              *  JTRUE     void  
N003 (  3,  3) [000413] J------N----              \--*  GE        int    <l:$2ab, c:$2aa>
N001 (  1,  1) [000412] ------------                 +--*  LCL_VAR   int    V39 tmp28        u:2 <l:$2a7, c:$680>
N002 (  1,  1) [000411] ------------                 \--*  CNS_INT   int    8 $57

------------ BB18 [000..000) -> BB20 (always), preds={BB17} succs={BB20}

***** BB18
STMT00113 (IL   ???...  ???)
N003 (  1,  3) [000421] -A------R---              *  ASG       int    <l:$2a7, c:$680>
N002 (  1,  1) [000420] D------N----              +--*  LCL_VAR   int    V38 tmp27        d:4 <l:$2a7, c:$680>
N001 (  1,  1) [000419] ------------              \--*  LCL_VAR   int    V39 tmp28        u:2 (last use) <l:$2a7, c:$680>

------------ BB19 [000..000), preds={BB17} succs={BB20}

***** BB19
STMT00112 (IL   ???...  ???)
N003 (  1,  3) [000417] -A------R---              *  ASG       int    $57
N002 (  1,  1) [000416] D------N----              +--*  LCL_VAR   int    V38 tmp27        d:3 $57
N001 (  1,  1) [000415] ------------              \--*  CNS_INT   int    8 $57

------------ BB20 [???..???) -> BB16 (cond), preds={BB18,BB19} succs={BB21,BB16}

***** BB20
STMT00121 (IL   ???...  ???)
N005 (  0,  0) [000584] -A------R---              *  ASG       int   
N004 (  0,  0) [000582] D------N----              +--*  LCL_VAR   int    V38 tmp27        d:2
N003 (  0,  0) [000583] ------------              \--*  PHI       int   
N001 (  0,  0) [000600] ------------ pred BB18       +--*  PHI_ARG   int    V38 tmp27        u:4 <l:$2a7, c:$680>
N002 (  0,  0) [000599] ------------ pred BB19       \--*  PHI_ARG   int    V38 tmp27        u:3 $57

***** BB20
STMT00064 (IL   ???...  ???)
N004 (  5,  5) [000241] ------------              *  JTRUE     void  
N003 (  3,  3) [000240] J------N----              \--*  LT        int    $2ac
N001 (  1,  1) [000233] ------------                 +--*  LCL_VAR   int    V10 loc8         u:3 $2ca
N002 (  1,  1) [000422] ------------                 \--*  LCL_VAR   int    V38 tmp27        u:2 (last use) $2cb

------------ BB21 [147..153) (return), preds={BB20} succs={}

***** BB21
STMT00115 (IL 0x147...  ???)
N006 (  4,  4) [000429] -A-XG---R---              *  ASG       ref    <l:$575, c:$574>
N005 (  1,  1) [000428] D------N----              +--*  LCL_VAR   ref    V40 tmp29        d:2 <l:$573, c:$177>
N004 (  4,  4) [000250] ---XG-------              \--*  IND       ref    <l:$575, c:$574>
N003 (  2,  2) [000568] -------N----                 \--*  ADD       byref  $205
N001 (  1,  1) [000249] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 (last use) $180
N002 (  1,  1) [000567] ------------                    \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun] $1c5

***** BB21
STMT00068 (IL   ???...  ???)
N005 (  5,  5) [000253] ---XG-------              *  RETURN    ref    $17a
N004 (  4,  4) [000427] ---XG-------              \--*  IND       ref    <l:$57b, c:$57a>
N003 (  2,  2) [000570] -------N----                 \--*  ADD       byref  <l:$21a, c:$219>
N001 (  1,  1) [000426] ------------                    +--*  LCL_VAR   ref    V40 tmp29        u:2 (last use) <l:$573, c:$177>
N002 (  1,  1) [000569] ------------                    \--*  CNS_INT   long   8 field offset Fseq[_task] $1c4

------------ BB22 [0F4..0F8) -> BB24 (cond), preds={} succs={BB23,BB24}

***** BB22
STMT00069 (IL 0x0F4...0x0F6)
N004 (  5,  5) [000257] ------------              *  JTRUE     void  
N003 (  3,  3) [000256] J------N----              \--*  EQ        int    $293
N001 (  1,  1) [000254] ------------                 +--*  LCL_VAR   ref    V06 loc4         u:2 $164
N002 (  1,  1) [000255] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB23 [0F8..0FF), preds={BB22} succs={BB24}

***** BB23
STMT00071 (IL 0x0F8...0x0FA)
N005 ( 23, 21) [000260] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose $VN.Void
N003 (  1,  1) [000259] ------------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         u:2 (last use) $164
N004 (  2, 10) [000542] H----------- arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127

------------ BB24 [0FF..100) (finret), preds={BB22,BB23} succs={}

***** BB24
STMT00070 (IL 0x0FF...0x0FF)
N001 (  0,  0) [000258] ------------              *  RETFILT   void   $600

-------------------------------------------------------------------------------------------------------------------
optHoistLoopCode for loop L00 <BB03..BB10>:
  Loop body contains a call
  Loop has multiple exits

  USEDEF  (22)={V02 V16 V27 V28 V22 V19 V23 V42 V06 V26 V03 V07 V17 V18 V20 V21 V24 V25 V04 V08 V05 V09}
  INOUT   (16)={V02 V27 V28 V19 V06 V26 V03 V07 V17 V18 V20 V21 V24 V25 V04 V05}
  LOOPVARS(16)={V02 V27 V28 V19 V06 V26 V03 V07 V17 V18 V20 V21 V24 V25 V04 V05}
    optHoistLoopBlocks BB03 (weight=  4   ) of loop L00 <BB03..BB10>, firstBlock is true

*************** Finishing PHASE Hoist loop code

*************** Starting PHASE VN based copy prop
*************** In optVnCopyProp()
Copy Assertion for BB01
  curSsaName stack: { }

							Live vars: {V00 V01} => {V00 V01 V12}
							Live vars: {V00 V01 V12} => {V00 V01 V02 V12}
VN based copy assertion for [000009] V12 @00000180 by [000007] V02 @00000180.
N001 (  1,  1) [000009] ------------              *  LCL_VAR   ref    V12 tmp1         u:2 $180
copy propagated to:
N001 (  1,  1) [000009] ------------              *  LCL_VAR   ref    V02 loc0         u:2 $180
							Live vars: {V00 V01 V02 V12} => {V00 V02 V12}
VN based copy assertion for [000013] V12 @00000180 by [000007] V02 @00000180.
N001 (  1,  1) [000013] ------------              *  LCL_VAR   ref    V12 tmp1         u:2 $180
copy propagated to:
N001 (  1,  1) [000013] ------------              *  LCL_VAR   ref    V02 loc0         u:2 $180
VN based copy assertion for [000017] V12 @00000180 by [000007] V02 @00000180.
N001 (  1,  1) [000017] ------------              *  LCL_VAR   ref    V12 tmp1         u:2 $180
copy propagated to:
N001 (  1,  1) [000017] ------------              *  LCL_VAR   ref    V02 loc0         u:2 $180
							Live vars: {V00 V02 V12} => {V00 V02 V12 V13}
							Live vars: {V00 V02 V12 V13} => {V00 V02 V12 V13 V30}
							Live vars: {V00 V02 V12 V13 V30} => {V00 V02 V12 V13}
VN based copy assertion for [000021] V12 @00000180 by [000007] V02 @00000180.
N001 (  1,  1) [000021] ------------              *  LCL_VAR   ref    V12 tmp1         u:2 $180
copy propagated to:
N001 (  1,  1) [000021] ------------              *  LCL_VAR   ref    V02 loc0         u:2 $180
							Live vars: {V00 V02 V12 V13} => {V00 V02 V12}
							Live vars: {V00 V02 V12} => {V00 V02 V12 V14}
VN based copy assertion for [000031] V12 @00000180 by [000007] V02 @00000180.
N001 (  1,  1) [000031] ------------              *  LCL_VAR   ref    V12 tmp1         u:2 $180
copy propagated to:
N001 (  1,  1) [000031] ------------              *  LCL_VAR   ref    V02 loc0         u:2 $180
							Live vars: {V00 V02 V12 V14} => {V00 V02 V12}
VN based copy assertion for [000041] V12 @00000180 by [000007] V02 @00000180.
N001 (  1,  1) [000041] ------------              *  LCL_VAR   ref    V12 tmp1         u:2 $180
copy propagated to:
N001 (  1,  1) [000041] ------------              *  LCL_VAR   ref    V02 loc0         u:2 $180
							Live vars: {V00 V02 V12} => {V00 V02 V12 V15}
							Live vars: {V00 V02 V12 V15} => {V00 V02 V15}
VN based copy assertion for [000045] V12 @00000180 by [000007] V02 @00000180.
N001 (  1,  1) [000045] ------------              *  LCL_VAR   ref    V12 tmp1         u:2 (last use) $180
copy propagated to:
N001 (  1,  1) [000045] ------------              *  LCL_VAR   ref    V02 loc0         u:2 (last use) $180
							Live vars: {V00 V02 V15} => {V00 V02}
							Live vars: {V00 V02} => {V00 V02 V31}
							Live vars: {V00 V02 V31} => {V00 V02}
							Live vars: {V00 V02} => {V00 V02 V32}
							Live vars: {V00 V02 V32} => {V00 V02}
							Live vars: {V00 V02} => {V00 V02 V03}
							Live vars: {V00 V02 V03} => {V00 V02 V03 V04}
							Live vars: {V00 V02 V03 V04} => {V00 V02 V03 V04 V41}
							Live vars: {V00 V02 V03 V04 V41} => {V00 V02 V03 V04}
							Live vars: {V00 V02 V03 V04} => {V00 V02 V03 V04 V05}
							Live vars: {V00 V02 V03 V04 V05} => {V02 V03 V04 V05}
							Live vars: {V02 V03 V04 V05} => {V02 V03 V04 V05 V06}
Copy Assertion for BB22
  curSsaName stack: { 0-[000076]:V00 1-[000010]:V01 2-[000007]:V02 3-[000061]:V03 4-[000068]:V04 5-[000074]:V05 6-[000078]:V06 30-[000268]:V30 31-[000315]:V31 32-[000321]:V32 12-[000002]:V12 13-[000024]:V13 14-[000034]:V14 15-[000048]:V15 41-[000481]:V41 }

Copy Assertion for BB24
  curSsaName stack: { 0-[000076]:V00 1-[000010]:V01 2-[000007]:V02 3-[000061]:V03 4-[000068]:V04 5-[000074]:V05 6-[000078]:V06 30-[000268]:V30 31-[000315]:V31 32-[000321]:V32 12-[000002]:V12 13-[000024]:V13 14-[000034]:V14 15-[000048]:V15 41-[000481]:V41 }

Copy Assertion for BB23
  curSsaName stack: { 0-[000076]:V00 1-[000010]:V01 2-[000007]:V02 3-[000061]:V03 4-[000068]:V04 5-[000074]:V05 6-[000078]:V06 30-[000268]:V30 31-[000315]:V31 32-[000321]:V32 12-[000002]:V12 13-[000024]:V13 14-[000034]:V14 15-[000048]:V15 41-[000481]:V41 }

							Live vars: {V06} => {}
Copy Assertion for BB02
  curSsaName stack: { 0-[000076]:V00 1-[000010]:V01 2-[000007]:V02 3-[000061]:V03 4-[000068]:V04 5-[000074]:V05 6-[000078]:V06 30-[000268]:V30 31-[000315]:V31 32-[000321]:V32 12-[000002]:V12 13-[000024]:V13 14-[000034]:V14 15-[000048]:V15 41-[000481]:V41 }

Copy Assertion for BB13
  curSsaName stack: { 0-[000076]:V00 1-[000010]:V01 2-[000007]:V02 3-[000061]:V03 4-[000068]:V04 5-[000074]:V05 6-[000078]:V06 30-[000268]:V30 31-[000315]:V31 32-[000321]:V32 12-[000002]:V12 13-[000024]:V13 14-[000034]:V14 15-[000048]:V15 41-[000481]:V41 }

Copy Assertion for BB15
  curSsaName stack: { 0-[000076]:V00 1-[000010]:V01 2-[000007]:V02 3-[000061]:V03 4-[000068]:V04 5-[000074]:V05 6-[000078]:V06 30-[000268]:V30 31-[000315]:V31 32-[000321]:V32 12-[000002]:V12 13-[000024]:V13 14-[000034]:V14 15-[000048]:V15 41-[000481]:V41 }

							Live vars: {V02} => {V02 V35}
							Live vars: {V02 V35} => {V02}
							Live vars: {V02} => {V02 V29}
							Live vars: {V02 V29} => {V02 V29 V37}
							Live vars: {V02 V29 V37} => {V02 V29 V36 V37}
							Live vars: {V02 V29 V36 V37} => {V02 V29 V37}
							Live vars: {V02 V29 V37} => {V02 V29}
							Live vars: {V02 V29} => {V02}
							Live vars: {V02} => {V02 V10}
Copy Assertion for BB17
  curSsaName stack: { 0-[000076]:V00 1-[000010]:V01 2-[000007]:V02 3-[000061]:V03 4-[000068]:V04 5-[000074]:V05 6-[000078]:V06 10-[000231]:V10 12-[000002]:V12 13-[000024]:V13 14-[000034]:V14 15-[000048]:V15 29-[000223]:V29 30-[000268]:V30 31-[000315]:V31 32-[000321]:V32 35-[000383]:V35 36-[000388]:V36 37-[000401]:V37 41-[000481]:V41 }

							Live vars: {V02 V10} => {V02 V10 V39}
Copy Assertion for BB20
  curSsaName stack: { 0-[000076]:V00 1-[000010]:V01 2-[000007]:V02 3-[000061]:V03 4-[000068]:V04 5-[000074]:V05 6-[000078]:V06 10-[000579]:V10 12-[000002]:V12 13-[000024]:V13 14-[000034]:V14 15-[000048]:V15 29-[000223]:V29 30-[000268]:V30 31-[000315]:V31 32-[000321]:V32 35-[000383]:V35 36-[000388]:V36 37-[000401]:V37 39-[000423]:V39 41-[000481]:V41 }

							Live vars: {V02 V10 V38} => {V02 V10}
Copy Assertion for BB21
  curSsaName stack: { 0-[000076]:V00 1-[000010]:V01 2-[000007]:V02 3-[000061]:V03 4-[000068]:V04 5-[000074]:V05 6-[000078]:V06 10-[000579]:V10 12-[000002]:V12 13-[000024]:V13 14-[000034]:V14 15-[000048]:V15 29-[000223]:V29 30-[000268]:V30 31-[000315]:V31 32-[000321]:V32 35-[000383]:V35 36-[000388]:V36 37-[000401]:V37 38-[000582]:V38 39-[000423]:V39 41-[000481]:V41 }

							Live vars: {V02} => {}
							Live vars: {} => {V40}
							Live vars: {V40} => {}
Copy Assertion for BB16
  curSsaName stack: { 0-[000076]:V00 1-[000010]:V01 2-[000007]:V02 3-[000061]:V03 4-[000068]:V04 5-[000074]:V05 6-[000078]:V06 10-[000579]:V10 12-[000002]:V12 13-[000024]:V13 14-[000034]:V14 15-[000048]:V15 29-[000223]:V29 30-[000268]:V30 31-[000315]:V31 32-[000321]:V32 35-[000383]:V35 36-[000388]:V36 37-[000401]:V37 38-[000582]:V38 39-[000423]:V39 41-[000481]:V41 }

							Live vars: {V02 V10} => {V02}
							Live vars: {V02} => {V02 V10}
Copy Assertion for BB19
  curSsaName stack: { 0-[000076]:V00 1-[000010]:V01 2-[000007]:V02 3-[000061]:V03 4-[000068]:V04 5-[000074]:V05 6-[000078]:V06 10-[000579]:V10 12-[000002]:V12 13-[000024]:V13 14-[000034]:V14 15-[000048]:V15 29-[000223]:V29 30-[000268]:V30 31-[000315]:V31 32-[000321]:V32 35-[000383]:V35 36-[000388]:V36 37-[000401]:V37 39-[000423]:V39 41-[000481]:V41 }

							Live vars: {V02 V10} => {V02 V10 V38}
Copy Assertion for BB18
  curSsaName stack: { 0-[000076]:V00 1-[000010]:V01 2-[000007]:V02 3-[000061]:V03 4-[000068]:V04 5-[000074]:V05 6-[000078]:V06 10-[000579]:V10 12-[000002]:V12 13-[000024]:V13 14-[000034]:V14 15-[000048]:V15 29-[000223]:V29 30-[000268]:V30 31-[000315]:V31 32-[000321]:V32 35-[000383]:V35 36-[000388]:V36 37-[000401]:V37 39-[000423]:V39 41-[000481]:V41 }

							Live vars: {V02 V10 V39} => {V02 V10}
							Live vars: {V02 V10} => {V02 V10 V38}
Copy Assertion for BB14
  curSsaName stack: { 0-[000076]:V00 1-[000010]:V01 2-[000007]:V02 3-[000061]:V03 4-[000068]:V04 5-[000074]:V05 6-[000078]:V06 12-[000002]:V12 13-[000024]:V13 14-[000034]:V14 15-[000048]:V15 30-[000268]:V30 31-[000315]:V31 32-[000321]:V32 41-[000481]:V41 }

							Live vars: {V02 V06} => {V02}
Copy Assertion for BB03
  curSsaName stack: { 0-[000076]:V00 1-[000010]:V01 2-[000007]:V02 3-[000061]:V03 4-[000068]:V04 5-[000074]:V05 6-[000078]:V06 12-[000002]:V12 13-[000024]:V13 14-[000034]:V14 15-[000048]:V15 30-[000268]:V30 31-[000315]:V31 32-[000321]:V32 41-[000481]:V41 }

							Live vars: {V02 V03 V04 V05 V06} => {V02 V03 V04 V05 V06 V07}
							Live vars: {V02 V03 V04 V05 V06 V07} => {V02 V03 V04 V05 V06 V07 V16}
							Live vars: {V02 V03 V04 V05 V06 V07 V16} => {V02 V03 V04 V05 V06 V07 V16 V17}
							Live vars: {V02 V03 V04 V05 V06 V07 V16 V17} => {V02 V03 V04 V05 V06 V07 V17}
VN based copy assertion for [000099] V16 @000001AB by [000104] V17 @000001AB.
N001 (  1,  1) [000099] ------------              *  LCL_VAR   ref    V16 tmp5         u:2 (last use) $1ab
copy propagated to:
N001 (  1,  1) [000099] ------------              *  LCL_VAR   ref    V17 tmp6         u:2 (last use) $1ab
							Live vars: {V02 V03 V04 V05 V06 V07 V17} => {V02 V03 V04 V05 V06 V07 V17 V18}
Copy Assertion for BB06
  curSsaName stack: { 0-[000076]:V00 1-[000010]:V01 2-[000007]:V02 3-[000061]:V03 4-[000068]:V04 5-[000074]:V05 6-[000078]:V06 7-[000087]:V07 12-[000002]:V12 13-[000024]:V13 14-[000034]:V14 15-[000048]:V15 16-[000091]:V16 17-[000104]:V17 18-[000107]:V18 30-[000268]:V30 31-[000315]:V31 32-[000321]:V32 41-[000481]:V41 }

							Live vars: {V02 V03 V04 V05 V06 V19 V20 V21} => {V02 V03 V04 V05 V06 V19 V21}
							Live vars: {V02 V03 V04 V05 V06 V19 V21} => {V02 V03 V04 V05 V06 V19}
							Live vars: {V02 V03 V04 V05 V06 V19} => {V02 V03 V04 V05 V06 V19 V23}
							Live vars: {V02 V03 V04 V05 V06 V19 V23} => {V02 V03 V04 V05 V06 V19 V22 V23}
							Live vars: {V02 V03 V04 V05 V06 V19 V22 V23} => {V02 V03 V04 V05 V06 V19 V22}
							Live vars: {V02 V03 V04 V05 V06 V19 V22} => {V02 V03 V04 V05 V06 V19 V22 V24}
							Live vars: {V02 V03 V04 V05 V06 V19 V22 V24} => {V02 V03 V04 V05 V06 V22 V24}
							Live vars: {V02 V03 V04 V05 V06 V22 V24} => {V02 V03 V04 V05 V06 V22 V24 V25}
							Live vars: {V02 V03 V04 V05 V06 V22 V24 V25} => {V02 V03 V04 V05 V06 V22 V24 V25 V26}
							Live vars: {V02 V03 V04 V05 V06 V22 V24 V25 V26} => {V02 V03 V04 V05 V06 V24 V25 V26}
VN based copy assertion for [000148] V22 @00000456 by [000158] V26 @00000456.
N001 (  1,  1) [000148] ------------              *  LCL_VAR   ref    V22 tmp11        u:2 (last use) <l:$540, c:$456>
copy propagated to:
N001 (  1,  1) [000148] ------------              *  LCL_VAR   ref    V26 tmp15        u:2 (last use) <l:$540, c:$456>
Copy Assertion for BB12
  curSsaName stack: { 0-[000076]:V00 1-[000010]:V01 2-[000007]:V02 3-[000061]:V03 4-[000068]:V04 5-[000074]:V05 6-[000078]:V06 7-[000087]:V07 12-[000002]:V12 13-[000024]:V13 14-[000034]:V14 15-[000048]:V15 16-[000091]:V16 17-[000104]:V17 18-[000107]:V18 19-[000588]:V19 20-[000591]:V20 21-[000594]:V21 22-[000142]:V22 23-[000144]:V23 24-[000152]:V24 25-[000155]:V25 26-[000158]:V26 30-[000268]:V30 31-[000315]:V31 32-[000321]:V32 41-[000481]:V41 }

Copy Assertion for BB09
  curSsaName stack: { 0-[000076]:V00 1-[000010]:V01 2-[000007]:V02 3-[000061]:V03 4-[000068]:V04 5-[000074]:V05 6-[000078]:V06 7-[000087]:V07 12-[000002]:V12 13-[000024]:V13 14-[000034]:V14 15-[000048]:V15 16-[000091]:V16 17-[000104]:V17 18-[000107]:V18 19-[000588]:V19 20-[000591]:V20 21-[000594]:V21 22-[000142]:V22 23-[000144]:V23 24-[000152]:V24 25-[000155]:V25 26-[000158]:V26 30-[000268]:V30 31-[000315]:V31 32-[000321]:V32 41-[000481]:V41 }

							Live vars: {V02 V03 V04 V05 V06 V24 V25 V26} => {V02 V03 V04 V05 V06 V24 V25 V26 V27}
Copy Assertion for BB10
  curSsaName stack: { 0-[000076]:V00 1-[000010]:V01 2-[000007]:V02 3-[000061]:V03 4-[000068]:V04 5-[000074]:V05 6-[000078]:V06 7-[000087]:V07 12-[000002]:V12 13-[000024]:V13 14-[000034]:V14 15-[000048]:V15 16-[000091]:V16 17-[000104]:V17 18-[000107]:V18 19-[000588]:V19 20-[000591]:V20 21-[000594]:V21 22-[000142]:V22 23-[000144]:V23 24-[000152]:V24 25-[000155]:V25 26-[000585]:V26 27-[000171]:V27 30-[000268]:V30 31-[000315]:V31 32-[000321]:V32 41-[000481]:V41 }

							Live vars: {V02 V03 V04 V05 V06 V24 V25 V26 V27} => {V02 V03 V04 V05 V06 V24 V26 V27}
							Live vars: {V02 V03 V04 V05 V06 V24 V26 V27} => {V02 V03 V04 V05 V06 V24 V27}
							Live vars: {V02 V03 V04 V05 V06 V24 V27} => {V02 V03 V04 V05 V06 V24}
							Live vars: {V02 V03 V04 V05 V06 V24} => {V02 V03 V04 V05 V06 V24 V42}
							Live vars: {V02 V03 V04 V05 V06 V24 V42} => {V02 V03 V04 V05 V06 V24}
							Live vars: {V02 V03 V04 V05 V06 V24} => {V02 V03 V04 V05 V06}
Copy Assertion for BB11
  curSsaName stack: { 0-[000076]:V00 1-[000010]:V01 2-[000007]:V02 3-[000061]:V03 4-[000068]:V04 5-[000074]:V05 6-[000078]:V06 7-[000087]:V07 12-[000002]:V12 13-[000024]:V13 14-[000034]:V14 15-[000048]:V15 16-[000091]:V16 17-[000104]:V17 18-[000107]:V18 19-[000588]:V19 20-[000591]:V20 21-[000594]:V21 22-[000142]:V22 23-[000144]:V23 24-[000152]:V24 25-[000155]:V25 26-[000585]:V26 27-[000171]:V27 30-[000268]:V30 31-[000315]:V31 32-[000321]:V32 41-[000481]:V41 42-[000532]:V42 }

Copy Assertion for BB07
  curSsaName stack: { 0-[000076]:V00 1-[000010]:V01 2-[000007]:V02 3-[000061]:V03 4-[000068]:V04 5-[000074]:V05 6-[000078]:V06 7-[000087]:V07 12-[000002]:V12 13-[000024]:V13 14-[000034]:V14 15-[000048]:V15 16-[000091]:V16 17-[000104]:V17 18-[000107]:V18 19-[000588]:V19 20-[000591]:V20 21-[000594]:V21 22-[000142]:V22 23-[000144]:V23 24-[000152]:V24 25-[000155]:V25 26-[000158]:V26 30-[000268]:V30 31-[000315]:V31 32-[000321]:V32 41-[000481]:V41 }

							Live vars: {V02 V03 V04 V05 V06 V24 V25} => {V02 V03 V04 V05 V06 V24 V25 V28}
Copy Assertion for BB08
  curSsaName stack: { 0-[000076]:V00 1-[000010]:V01 2-[000007]:V02 3-[000061]:V03 4-[000068]:V04 5-[000074]:V05 6-[000078]:V06 7-[000087]:V07 12-[000002]:V12 13-[000024]:V13 14-[000034]:V14 15-[000048]:V15 16-[000091]:V16 17-[000104]:V17 18-[000107]:V18 19-[000588]:V19 20-[000591]:V20 21-[000594]:V21 22-[000142]:V22 23-[000144]:V23 24-[000152]:V24 25-[000155]:V25 26-[000158]:V26 28-[000183]:V28 30-[000268]:V30 31-[000315]:V31 32-[000321]:V32 41-[000481]:V41 }

							Live vars: {V02 V03 V04 V05 V06 V24 V25 V28} => {V02 V03 V04 V05 V06 V24 V25}
							Live vars: {V02 V03 V04 V05 V06 V24 V25} => {V02 V03 V04 V05 V06 V24 V25 V26}
Copy Assertion for BB05
  curSsaName stack: { 0-[000076]:V00 1-[000010]:V01 2-[000007]:V02 3-[000061]:V03 4-[000068]:V04 5-[000074]:V05 6-[000078]:V06 7-[000087]:V07 12-[000002]:V12 13-[000024]:V13 14-[000034]:V14 15-[000048]:V15 16-[000091]:V16 17-[000104]:V17 18-[000107]:V18 30-[000268]:V30 31-[000315]:V31 32-[000321]:V32 41-[000481]:V41 }

							Live vars: {V02 V03 V04 V05 V06 V07 V17 V18} => {V02 V03 V04 V05 V06 V07 V18}
VN based copy assertion for [000112] V17 @000001AB by [000107] V18 @000001AB.
N001 (  1,  1) [000112] ------------              *  LCL_VAR   ref    V17 tmp6         u:2 (last use) $1ab
copy propagated to:
N001 (  1,  1) [000112] ------------              *  LCL_VAR   ref    V18 tmp7         u:2 (last use) $1ab
							Live vars: {V02 V03 V04 V05 V06 V07 V18} => {V02 V03 V04 V05 V06 V07 V18 V19}
							Live vars: {V02 V03 V04 V05 V06 V07 V18 V19} => {V02 V03 V04 V05 V06 V07 V19}
VN based copy assertion for [000113] V18 @000001AB by [000118] V19 @000001AB.
N001 (  1,  1) [000113] ------------              *  LCL_VAR   ref    V18 tmp7         u:2 (last use) $1ab
copy propagated to:
N001 (  1,  1) [000113] ------------              *  LCL_VAR   ref    V19 tmp8         u:3 (last use) $1ab
							Live vars: {V02 V03 V04 V05 V06 V07 V19} => {V02 V03 V04 V05 V06 V07 V19 V20}
							Live vars: {V02 V03 V04 V05 V06 V07 V19 V20} => {V02 V03 V04 V05 V06 V19 V20}
							Live vars: {V02 V03 V04 V05 V06 V19 V20} => {V02 V03 V04 V05 V06 V19 V20 V21}
Copy Assertion for BB04
  curSsaName stack: { 0-[000076]:V00 1-[000010]:V01 2-[000007]:V02 3-[000061]:V03 4-[000068]:V04 5-[000074]:V05 6-[000078]:V06 7-[000087]:V07 12-[000002]:V12 13-[000024]:V13 14-[000034]:V14 15-[000048]:V15 16-[000091]:V16 17-[000104]:V17 18-[000107]:V18 30-[000268]:V30 31-[000315]:V31 32-[000321]:V32 41-[000481]:V41 }

							Live vars: {V02 V03 V04 V05 V06 V07 V17 V18} => {V02 V03 V04 V05 V06 V07 V18}
VN based copy assertion for [000110] V17 @000001AB by [000107] V18 @000001AB.
N001 (  1,  1) [000110] ------------              *  LCL_VAR   ref    V17 tmp6         u:2 (last use) $1ab
copy propagated to:
N001 (  1,  1) [000110] ------------              *  LCL_VAR   ref    V18 tmp7         u:2 (last use) $1ab
							Live vars: {V02 V03 V04 V05 V06 V07 V18} => {V02 V03 V04 V05 V06 V07 V18 V19}
							Live vars: {V02 V03 V04 V05 V06 V07 V18 V19} => {V02 V03 V04 V05 V06 V07 V19}
VN based copy assertion for [000111] V18 @000001AB by [000202] V19 @000001AB.
N001 (  1,  1) [000111] ------------              *  LCL_VAR   ref    V18 tmp7         u:2 (last use) $1ab
copy propagated to:
N001 (  1,  1) [000111] ------------              *  LCL_VAR   ref    V19 tmp8         u:4 (last use) $1ab
							Live vars: {V02 V03 V04 V05 V06 V07 V19} => {V02 V03 V04 V05 V06 V07 V19 V20}
							Live vars: {V02 V03 V04 V05 V06 V07 V19 V20} => {V02 V03 V04 V05 V06 V19 V20}
							Live vars: {V02 V03 V04 V05 V06 V19 V20} => {V02 V03 V04 V05 V06 V19 V20 V21}

*************** Finishing PHASE VN based copy prop

*************** Starting PHASE Optimize Valnum CSEs

*************** In optOptimizeCSEs()
Blocks/Trees at start of optOptimizeCSE phase

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB13 ( cond ) T0      try {       keep i try label hascall gcsafe 
BB03 [0002]  2  0    BB02,BB10             4     0 [072..08B)-> BB05 ( cond ) T0                  i Loop label target hascall gcsafe newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  2     0 [08B..08F)-> BB06 (always) T0                  i gcsafe bwd 
BB05 [0004]  1  0    BB03                  2     0 [08F..09C)                 T0                  i label target hascall gcsafe bwd 
BB06 [0005]  2  0    BB04,BB05             4     0 [09C..0BB)-> BB09 ( cond ) T0                  i label target gcsafe bwd 
BB07 [0006]  1  0    BB06                  2     0 [000..0D3)-> BB12 ( cond ) T0                  i hascall gcsafe newobj bwd 
BB08 [0041]  1  0    BB07                  2     0 [000..000)                 T0                  i internal label target gcsafe newobj bwd 
BB09 [0007]  2  0    BB06,BB08             4     0 [000..0E9)-> BB12 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB10 [0045]  1  0    BB09                  4     0 [000..0F2)-> BB03 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB11 [0061]  1  0    BB10                  0.50    [???..???)-> BB13 (always) T0                  internal gcsafe 
BB12 [0044]  2  0    BB07,BB09             0       [000..000)        (throw ) T0      }           i internal rare label target hascall gcsafe bwd 
BB13 [0057]  2       BB02,BB11             1       [0F4..0F8)-> BB15 ( cond )                     keep i label target gcsafe cfb 
BB14 [0058]  1       BB13                  0.50    [0F8..100)                                     i hascall gcsafe 
BB15 [0013]  2       BB13,BB14             1       [100..127)-> BB17 (always)                     i label target hascall gcsafe newobj 
BB16 [0014]  1       BB20                  2     1 [127..133)                                     i Loop label target hascall gcsafe bwd bwd-target 
BB17 [0015]  2       BB15,BB16             8     1 [000..147)-> BB19 ( cond )                     i label target gcsafe bwd 
BB18 [0053]  1       BB17                  2     1 [000..000)-> BB20 (always)                     i internal gcsafe bwd 
BB19 [0054]  1       BB17                  2     1 [000..000)                                     i internal label target gcsafe bwd 
BB20 [0055]  2       BB18,BB19             8     1 [???..???)-> BB16 ( cond )                     internal label target gcsafe bwd 
BB21 [0016]  1       BB20                  1       [147..153)        (return)                     i gcsafe 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB22 [0010]  1     0                       0       [0F4..0F8)-> BB24 ( cond )    H0 F fault {     keep i rare label target flet 
BB23 [0011]  1     0 BB22                  0       [0F8..0FF)                    H0               i rare hascall gcsafe 
BB24 [0012]  2     0 BB22,BB23             0       [0FF..100)        (finret)    H0   }           i rare label target 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..070), preds={} succs={BB02}

***** BB01
STMT00000 (IL 0x000...0x005)
N005 ( 16, 16) [000003] -AC-----R---              *  ASG       ref    $180
N004 (  1,  1) [000002] D------N----              +--*  LCL_VAR   ref    V12 tmp1         d:2 $180
N003 ( 16, 16) [000001] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $180
N002 (  2, 10) [000000] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $100

***** BB01
STMT00002 (IL 0x005...  ???)
N003 (  1,  3) [000008] -A------R---              *  ASG       ref    $180
N002 (  1,  1) [000007] D------N----              +--*  LCL_VAR   ref    V02 loc0         d:2 $180
N001 (  1,  1) [000006] ------------              \--*  LCL_VAR   ref    V12 tmp1         u:2 $180

***** BB01
STMT00003 (IL 0x006...0x008)
N006 (  6,  6) [000012] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000011] D--XG--N----              +--*  IND       ref    $81
N003 (  2,  2) [000440] -------N----              |  \--*  ADD       byref  $200
N001 (  1,  1) [000009] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000439] ------------              |     \--*  CNS_INT   long   32 field offset Fseq[outputFile] $1c0
N005 (  1,  1) [000010] ------------              \--*  LCL_VAR   ref    V01 arg1         u:1 (last use) $81

***** BB01
STMT00004 (IL 0x00D...0x00F)
N006 (  6,  6) [000016] -A-XG-------              *  ASG       int    $VN.Void
N004 (  4,  4) [000015] D--XG--N----              +--*  IND       int    $40
N003 (  2,  2) [000442] -------N----              |  \--*  ADD       byref  $201
N001 (  1,  1) [000013] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000441] ------------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1
N005 (  1,  1) [000014] ------------              \--*  CNS_INT   int    0 $40

***** BB01
STMT00005 (IL 0x014...0x016)
N006 (  6,  6) [000020] -A-XG-------              *  ASG       int    $VN.Void
N004 (  4,  4) [000019] D--XG--N----              +--*  IND       int    $40
N003 (  2,  2) [000444] -------N----              |  \--*  ADD       byref  $202
N001 (  1,  1) [000017] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000443] ------------              |     \--*  CNS_INT   long   56 field offset Fseq[analyzersFinishedCount] $1c2
N005 (  1,  1) [000018] ------------              \--*  CNS_INT   int    0 $40

***** BB01
STMT00006 (IL 0x01B...0x021)
N005 ( 16, 16) [000025] -AC-----R---              *  ASG       ref    $183
N004 (  1,  1) [000024] D------N----              +--*  LCL_VAR   ref    V13 tmp2         d:2 $183
N003 ( 16, 16) [000023] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $183
N002 (  2, 10) [000022] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $104

***** BB01
STMT00074 (IL   ???...  ???)
N005 ( 16, 16) [000269] -AC-----R---              *  ASG       ref    $184
N004 (  1,  1) [000268] D------N----              +--*  LCL_VAR   ref    V30 tmp19        d:2 $184
N003 ( 16, 16) [000267] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $184
N002 (  2, 10) [000266] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $105

***** BB01
STMT00079 (IL   ???...  ???)
N006 (  6,  9) [000283] -A-XGO------              *  ASG       int    $VN.Void
N004 (  4,  4) [000282] V--XGO-N----              +--*  IND       int    $43
N003 (  2,  2) [000448] -------N----              |  \--*  ADD       byref  $203
N001 (  1,  1) [000280] ------------              |     +--*  LCL_VAR   ref    V30 tmp19        u:2 $184
N002 (  1,  1) [000447] ------------              |     \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags] $1c3
N005 (  1,  4) [000281] ------------              \--*  CNS_INT   int    0x2000400 $43

***** BB01
STMT00076 (IL   ???...  ???)
N006 (  6,  6) [000274] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000273] D--XG--N----              +--*  IND       ref    $184
N003 (  2,  2) [000450] -------N----              |  \--*  ADD       byref  $204
N001 (  1,  1) [000265] ------------              |     +--*  LCL_VAR   ref    V13 tmp2         u:2 $183
N002 (  1,  1) [000449] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_task] $1c4
N005 (  1,  1) [000272] ------------              \--*  LCL_VAR   ref    V30 tmp19        u:2 (last use) $184

***** BB01
STMT00008 (IL 0x021...  ???)
N006 (  6,  6) [000030] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000029] D--XG--N----              +--*  IND       ref    $183
N003 (  2,  2) [000452] -------N----              |  \--*  ADD       byref  $205
N001 (  1,  1) [000021] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000451] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun] $1c5
N005 (  1,  1) [000028] ------------              \--*  LCL_VAR   ref    V13 tmp2         u:2 (last use) $183

***** BB01
STMT00009 (IL 0x026...0x02C)
N005 ( 16, 16) [000035] -AC-----R---              *  ASG       ref    $189
N004 (  1,  1) [000034] D------N----              +--*  LCL_VAR   ref    V14 tmp3         d:2 $189
N003 ( 16, 16) [000033] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $189
N002 (  2, 10) [000032] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $109

***** BB01
STMT00082 (IL   ???...  ???)
N013 ( 26, 35) [000292] -ACXG---R---              *  ASG       ref    $VN.Void
N012 (  4,  4) [000291] D--XG--N----              +--*  IND       ref    $246
N011 (  2,  2) [000455] -------N----              |  \--*  ADD       byref  $206
N009 (  1,  1) [000287] ------------              |     +--*  LCL_VAR   ref    V14 tmp3         u:2 $189
N010 (  1,  1) [000454] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_array] $1c4
N008 ( 21, 30) [000300] --CXG-------              \--*  COMMA     ref    <l:$18c, c:$18b>
N005 ( 17, 18) [000299] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS $381
N003 (  2, 10) [000297] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e0b0028 $1c6
N004 (  1,  1) [000298] ------------ arg1 in rdx     |  \--*  CNS_INT   int    14 $44
N007 (  4, 12) [000295] n---G-------                 \--*  IND       ref    <l:$246, c:$14b>
N006 (  2, 10) [000458] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[Value] $10a

***** BB01
STMT00011 (IL 0x02C...  ???)
N006 (  6,  6) [000040] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000039] D--XG--N----              +--*  IND       ref    $189
N003 (  2,  2) [000460] -------N----              |  \--*  ADD       byref  $207
N001 (  1,  1) [000031] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000459] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers] $1c4
N005 (  1,  1) [000038] ------------              \--*  LCL_VAR   ref    V14 tmp3         u:2 (last use) $189

***** BB01
STMT00012 (IL 0x031...0x033)
N006 (  6,  6) [000044] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000043] D--XG--N----              +--*  IND       ref    $VN.Null
N003 (  2,  2) [000462] -------N----              |  \--*  ADD       byref  $208
N001 (  1,  1) [000041] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000461] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter] $1c7
N005 (  1,  1) [000042] ------------              \--*  CNS_INT   ref    null $VN.Null

***** BB01
STMT00013 (IL 0x038...0x03E)
N005 ( 16, 16) [000049] -AC-----R---              *  ASG       ref    $193
N004 (  1,  1) [000048] D------N----              +--*  LCL_VAR   ref    V15 tmp4         d:2 $193
N003 ( 16, 16) [000047] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $193
N002 (  2, 10) [000046] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $10e

***** BB01
STMT00083 (IL   ???...  ???)
N005 ( 16, 10) [000303] --CXG-------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor $VN.Void
N003 (  1,  1) [000050] ------------ this in rcx  +--*  LCL_VAR   ref    V15 tmp4         u:2 $193
N004 (  1,  1) [000302] ------------ arg1 in rdx  \--*  CNS_INT   ref    null $VN.Null

***** BB01
STMT00015 (IL 0x03E...  ???)
N006 (  6,  6) [000054] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000053] D--XG--N----              +--*  IND       ref    $193
N003 (  2,  2) [000467] -------N----              |  \--*  ADD       byref  $209
N001 (  1,  1) [000045] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 (last use) $180
N002 (  1,  1) [000466] ------------              |     \--*  CNS_INT   long   40 field offset Fseq[output] $1c8
N005 (  1,  1) [000052] ------------              \--*  LCL_VAR   ref    V15 tmp4         u:2 (last use) $193

***** BB01
STMT00086 (IL   ???...  ???)
N003 ( 14,  5) [000316] -ACXG---R---              *  ASG       ref    $151
N002 (  1,  1) [000315] D------N----              +--*  LCL_VAR   ref    V31 tmp20        d:2 $151
N001 ( 14,  5) [000055] --CXG-------              \--*  CALL      ref    System.Diagnostics.Process.GetCurrentProcess $151

***** BB01
STMT00087 (IL   ???...  ???)
N002 (  2,  2) [000314] ---X--------              *  NULLCHECK byte   $197
N001 (  1,  1) [000313] ------------              \--*  LCL_VAR   ref    V31 tmp20        u:2 $151

***** BB01
STMT00084 (IL   ???...  ???)
N005 ( 16, 10) [000308] --CXG-------              *  CALL      void   System.Diagnostics.Process.EnsureState $VN.Void
N003 (  1,  1) [000306] ------------ this in rcx  +--*  LCL_VAR   ref    V31 tmp20        u:2 $151
N004 (  1,  1) [000307] ------------ arg1 in rdx  \--*  CNS_INT   int    3 $46

***** BB01
STMT00088 (IL   ???...  ???)
N008 ( 18, 13) [000322] -ACXG---R---              *  ASG       ref    $156
N007 (  1,  1) [000321] D------N----              +--*  LCL_VAR   ref    V32 tmp21        d:2 $156
N006 ( 18, 13) [000311] --CXG-------              \--*  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule $156
N005 (  4,  7) [000310] ---XG------- arg0 in rcx     \--*  IND       int    <l:$289, c:$288>
N004 (  2,  5) [000471] -------N----                    \--*  ADD       byref  $20a
N002 (  1,  1) [000309] ------------                       +--*  LCL_VAR   ref    V31 tmp20        u:2 (last use) $151
N003 (  1,  4) [000470] ------------                       \--*  CNS_INT   long   200 field offset Fseq[_processId] $1c9

***** BB01
STMT00019 (IL   ???...  ???)
N006 (  4,  4) [000062] -A-XG---R---              *  ASG       ref    <l:$19c, c:$19b>
N005 (  1,  1) [000061] D------N----              +--*  LCL_VAR   ref    V03 loc1         d:2 <l:$199, c:$159>
N004 (  4,  4) [000320] ---XG-------              \--*  IND       ref    <l:$19c, c:$19b>
N003 (  2,  2) [000474] -------N----                 \--*  ADD       byref  $20b
N001 (  1,  1) [000319] ------------                    +--*  LCL_VAR   ref    V32 tmp21        u:2 (last use) $156
N002 (  1,  1) [000473] ------------                    \--*  CNS_INT   long   40 field offset Fseq[<FileName>k__BackingField] $1c8

***** BB01
STMT00021 (IL   ???...  ???)
N016 ( 32, 30) [000069] -ACXG---R---              *  ASG       int    $28c
N015 (  1,  1) [000068] D------N----              +--*  LCL_VAR   int    V04 loc2         d:2 $28c
N014 ( 32, 30) [000329] --CXG-------              \--*  GE        int    $28c
N012 ( 27, 28) [000340] --CXG-------                 +--*  CALL      int    System.String.IndexOf $308
N005 (  1,  1) [000339] ------------ arg4 out+20     |  +--*  CNS_INT   int    5 $47
N007 (  3,  3) [000338] ---X-------- arg3 in r9      |  +--*  ARR_LENGTH int    <l:$28b, c:$28a>
N006 (  1,  1) [000337] ------------                 |  |  \--*  LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
N009 (  4, 12) [000476] #---G------- arg1 in rdx     |  +--*  IND       ref    $19f
N008 (  2, 10) [000475] H-----------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E "dotnet.exe" $112
N010 (  1,  1) [000063] ------------ this in rcx     |  +--*  LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
N011 (  1,  1) [000336] ------------ arg2 in r8      |  \--*  CNS_INT   int    0 $40
N013 (  1,  1) [000328] ------------                 \--*  CNS_INT   int    0 $40

***** BB01
STMT00023 (IL   ???...  ???)
N015 ( 26, 20) [000075] -ACXG---R---              *  ASG       ref    <l:$1aa, c:$1a9>
N014 (  1,  1) [000074] D------N----              +--*  LCL_VAR   ref    V05 loc3         d:2 <l:$1a8, c:$161>
N013 ( 26, 20) [000494] -ACXG-------              \--*  COMMA     ref    <l:$1aa, c:$1a9>
N003 ( 14,  5) [000482] -ACXG---R---                 +--*  ASG       ref    $15e
N002 (  1,  1) [000481] D------N----                 |  +--*  LCL_VAR   ref    V41 tmp30        d:2 $15e
N001 ( 14,  5) [000070] --CXG-------                 |  \--*  CALL      ref    System.Environment.GetCommandLineArgs $15e
N012 ( 12, 15) [000493] ---XG-------                 \--*  COMMA     ref    <l:$1aa, c:$1a9>
N007 (  8, 11) [000487] ---X--------                    +--*  ARR_BOUNDS_CHECK_Rng void   $1a5
N004 (  1,  1) [000072] ------------                    |  +--*  CNS_INT   int    0 $40
N006 (  3,  3) [000486] ---X--------                    |  \--*  ARR_LENGTH int    $28d
N005 (  1,  1) [000483] ------------                    |     \--*  LCL_VAR   ref    V41 tmp30        u:2 $15e
N011 (  4,  4) [000073] a---G-------                    \--*  IND       ref    <l:$1a8, c:$161>
N010 (  2,  2) [000492] -------N----                       \--*  ADD       byref  $400
N008 (  1,  1) [000484] ------------                          +--*  LCL_VAR   ref    V41 tmp30        u:2 (last use) $15e
N009 (  1,  1) [000491] ------------                          \--*  CNS_INT   long   16 Fseq[#FirstElem] $1c7

***** BB01
STMT00024 (IL 0x068...0x06E)
N007 ( 23, 21) [000079] -ACXG---R---              *  ASG       ref    $164
N006 (  1,  1) [000078] D------N----              +--*  LCL_VAR   ref    V06 loc4         d:2 $164
N005 ( 23, 21) [000077] --CXG-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator $164
N003 (  1,  1) [000076] ------------ this in rcx     +--*  LCL_VAR   ref    V00 arg0         u:1 (last use) $80
N004 (  2, 10) [000495] H----------- arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $114

------------ BB02 [070..072) -> BB13 (cond), preds={BB01} succs={BB03,BB13}

***** BB02
STMT00119 (IL 0x0E9...  ???)
N008 ( 27, 25) [000578] --CXG-------              *  JTRUE     void  
N007 ( 25, 23) [000571] J-CXG--N----              \--*  EQ        int    $28e
N005 ( 23, 21) [000572] --CXG-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext $30a
N003 (  1,  1) [000575] ------------ this in rcx     |  +--*  LCL_VAR   ref    V06 loc4         u:2 $164
N004 (  2, 10) [000576] H----------- arg1 in r11     |  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
N006 (  1,  1) [000577] ------------                 \--*  CNS_INT   int    0 $40

------------ BB03 [072..08B) -> BB05 (cond), preds={BB02,BB10} succs={BB04,BB05}

***** BB03
STMT00026 (IL 0x072...0x079)
N007 ( 23, 21) [000088] -ACXG---R---              *  ASG       ref    $442
N006 (  1,  1) [000087] D------N----              +--*  LCL_VAR   ref    V07 loc5         d:2 $442
N005 ( 23, 21) [000086] --CXG-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current $442
N003 (  1,  1) [000085] ------------ this in rcx     +--*  LCL_VAR   ref    V06 loc4         u:2 $164
N004 (  2, 10) [000498] H----------- arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $116

***** BB03
STMT00027 (IL 0x07B...0x089)
N005 ( 16, 16) [000092] -AC-----R---              *  ASG       ref    $1ab
N004 (  1,  1) [000091] D------N----              +--*  LCL_VAR   ref    V16 tmp5         d:2 $1ab
N003 ( 16, 16) [000090] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1ab
N002 (  2, 10) [000089] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $117

***** BB03
STMT00092 (IL 0x080...  ???)
N006 (  6,  6) [000347] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000346] D--XG--N----              +--*  IND       ref    $199
N003 (  2,  2) [000503] -------N----              |  \--*  ADD       byref  $20d
N001 (  1,  1) [000096] ------------              |     +--*  LCL_VAR   ref    V16 tmp5         u:2 $1ab
N002 (  1,  1) [000502] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_fileName] $1c4
N005 (  1,  1) [000097] ------------              \--*  LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>

***** BB03
STMT00031 (IL   ???...0x089)
N003 (  1,  3) [000105] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000104] D------N----              +--*  LCL_VAR   ref    V17 tmp6         d:2 $1ab
N001 (  1,  1) [000095] ------------              \--*  LCL_VAR   ref    V16 tmp5         u:2 $1ab

***** BB03
STMT00032 (IL   ???...  ???)
N003 (  1,  3) [000108] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000107] D------N----              +--*  LCL_VAR   ref    V18 tmp7         d:2 $1ab
N001 (  1,  1) [000099] ------------              \--*  LCL_VAR   ref    V17 tmp6         u:2 (last use) $1ab

***** BB03
STMT00030 (IL 0x087...  ???)
N004 (  5,  5) [000103] ------------              *  JTRUE     void  
N003 (  3,  3) [000102] J------N----              \--*  NE        int    $28f
N001 (  1,  1) [000100] ------------                 +--*  LCL_VAR   int    V04 loc2         u:2 $28c
N002 (  1,  1) [000101] ------------                 \--*  CNS_INT   int    0 $40

------------ BB04 [08B..08F) -> BB06 (always), preds={BB03} succs={BB06}

***** BB04
STMT00053 (IL   ???...0x08D)
N003 (  1,  3) [000203] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000202] D------N----              +--*  LCL_VAR   ref    V19 tmp8         d:4 $1ab
N001 (  1,  1) [000110] ------------              \--*  LCL_VAR   ref    V18 tmp7         u:2 (last use) $1ab

***** BB04
STMT00054 (IL   ???...  ???)
N003 (  1,  3) [000206] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000205] D------N----              +--*  LCL_VAR   ref    V20 tmp9         d:4 $1ab
N001 (  1,  1) [000111] ------------              \--*  LCL_VAR   ref    V19 tmp8         u:4 (last use) $1ab

***** BB04
STMT00055 (IL   ???...  ???)
N003 (  1,  3) [000209] -A------R---              *  ASG       ref    $442
N002 (  1,  1) [000208] D------N----              +--*  LCL_VAR   ref    V21 tmp10        d:4 $442
N001 (  1,  1) [000201] ------------              \--*  LCL_VAR   ref    V07 loc5         u:2 (last use) $442

------------ BB05 [08F..09C), preds={BB03} succs={BB06}

***** BB05
STMT00033 (IL   ???...0x097)
N003 (  1,  3) [000119] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000118] D------N----              +--*  LCL_VAR   ref    V19 tmp8         d:3 $1ab
N001 (  1,  1) [000112] ------------              \--*  LCL_VAR   ref    V18 tmp7         u:2 (last use) $1ab

***** BB05
STMT00034 (IL   ???...  ???)
N003 (  1,  3) [000122] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000121] D------N----              +--*  LCL_VAR   ref    V20 tmp9         d:3 $1ab
N001 (  1,  1) [000113] ------------              \--*  LCL_VAR   ref    V19 tmp8         u:3 (last use) $1ab

***** BB05
STMT00035 (IL   ???...  ???)
N010 ( 20, 22) [000125] -ACXG---R---              *  ASG       ref    $44e
N009 (  1,  1) [000124] D------N----              +--*  LCL_VAR   ref    V21 tmp10        d:3 $44e
N008 ( 20, 22) [000117] --CXG-------              \--*  CALL      ref    System.String.Concat $44e
N005 (  4, 12) [000505] #---G------- arg1 in rdx     +--*  IND       ref    $1ae
N004 (  2, 10) [000504] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E " " $119
N006 (  1,  1) [000114] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V05 loc3         u:2 <l:$1a8, c:$161>
N007 (  1,  1) [000116] ------------ arg2 in r8      \--*  LCL_VAR   ref    V07 loc5         u:2 (last use) $442

------------ BB06 [09C..0BB) -> BB09 (cond), preds={BB04,BB05} succs={BB07,BB09}

***** BB06
STMT00125 (IL   ???...  ???)
N005 (  0,  0) [000596] -A------R---              *  ASG       ref   
N004 (  0,  0) [000594] D------N----              +--*  LCL_VAR   ref    V21 tmp10        d:2
N003 (  0,  0) [000595] ------------              \--*  PHI       ref   
N001 (  0,  0) [000606] ------------ pred BB04       +--*  PHI_ARG   ref    V21 tmp10        u:4 $442
N002 (  0,  0) [000603] ------------ pred BB05       \--*  PHI_ARG   ref    V21 tmp10        u:3 $44e

***** BB06
STMT00124 (IL   ???...  ???)
N005 (  0,  0) [000593] -A------R---              *  ASG       ref   
N004 (  0,  0) [000591] D------N----              +--*  LCL_VAR   ref    V20 tmp9         d:2
N003 (  0,  0) [000592] ------------              \--*  PHI       ref   
N001 (  0,  0) [000607] ------------ pred BB04       +--*  PHI_ARG   ref    V20 tmp9         u:4 $1ab
N002 (  0,  0) [000604] ------------ pred BB05       \--*  PHI_ARG   ref    V20 tmp9         u:3 $1ab

***** BB06
STMT00123 (IL   ???...  ???)
N005 (  0,  0) [000590] -A------R---              *  ASG       ref   
N004 (  0,  0) [000588] D------N----              +--*  LCL_VAR   ref    V19 tmp8         d:2
N003 (  0,  0) [000589] ------------              \--*  PHI       ref   
N001 (  0,  0) [000608] ------------ pred BB04       +--*  PHI_ARG   ref    V19 tmp8         u:4 $1ab
N002 (  0,  0) [000605] ------------ pred BB05       \--*  PHI_ARG   ref    V19 tmp8         u:3 $1ab

***** BB06
STMT00093 (IL   ???...  ???)
N006 (  6,  6) [000350] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000349] D--XG--N----              +--*  IND       ref    $251
N003 (  2,  2) [000510] -------N----              |  \--*  ADD       byref  $20e
N001 (  1,  1) [000128] ------------              |     +--*  LCL_VAR   ref    V20 tmp9         u:2 (last use) $1ab
N002 (  1,  1) [000509] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_arguments] $1c7
N005 (  1,  1) [000129] ------------              \--*  LCL_VAR   ref    V21 tmp10        u:2 (last use) $251

***** BB06
STMT00094 (IL 0x0A1...  ???)
N006 (  7, 10) [000355] -A-XG-------              *  ASG       bool   $VN.Void
N004 (  5,  8) [000354] D--XG--N----              +--*  IND       bool   $40
N003 (  2,  5) [000512] -------N----              |  \--*  ADD       byref  $20f
N001 (  1,  1) [000131] ------------              |     +--*  LCL_VAR   ref    V19 tmp8         u:2 $1ab
N002 (  1,  4) [000511] ------------              |     \--*  CNS_INT   long   130 field offset Fseq[<UseShellExecute>k__BackingField] $1cb
N005 (  1,  1) [000353] ------------              \--*  CNS_INT   int    0 $40

***** BB06
STMT00040 (IL 0x0AA...0x0B9)
N006 (  4,  4) [000145] -A-XG---R---              *  ASG       ref    <l:$1bc, c:$1bb>
N005 (  1,  1) [000144] D------N----              +--*  LCL_VAR   ref    V23 tmp12        d:2 <l:$1b9, c:$454>
N004 (  4,  4) [000138] ---XG-------              \--*  IND       ref    <l:$1bc, c:$1bb>
N003 (  2,  2) [000514] -------N----                 \--*  ADD       byref  $207
N001 (  1,  1) [000137] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000513] ------------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers] $1c4

***** BB06
STMT00039 (IL 0x0AA...  ???)
N006 (  4,  4) [000143] -A-XG---R---              *  ASG       ref    <l:$542, c:$541>
N005 (  1,  1) [000142] D------N----              +--*  LCL_VAR   ref    V22 tmp11        d:2 <l:$540, c:$456>
N004 (  4,  4) [000141] ---XG-------              \--*  IND       ref    <l:$542, c:$541>
N003 (  2,  2) [000516] -------N----                 \--*  ADD       byref  $210
N001 (  1,  1) [000140] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000515] ------------                    \--*  CNS_INT   long   48 field offset Fseq[<>9__2] $1cc

***** BB06
STMT00042 (IL   ???...0x0B9)
N003 (  1,  3) [000153] -A------R---              *  ASG       ref    <l:$1b9, c:$454>
N002 (  1,  1) [000152] D------N----              +--*  LCL_VAR   ref    V24 tmp13        d:2 <l:$1b9, c:$454>
N001 (  1,  1) [000146] ------------              \--*  LCL_VAR   ref    V23 tmp12        u:2 (last use) <l:$1b9, c:$454>

***** BB06
STMT00043 (IL   ???...  ???)
N003 (  1,  3) [000156] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000155] D------N----              +--*  LCL_VAR   ref    V25 tmp14        d:2 $1ab
N001 (  1,  1) [000139] ------------              \--*  LCL_VAR   ref    V19 tmp8         u:2 (last use) $1ab

***** BB06
STMT00044 (IL   ???...  ???)
N003 (  1,  3) [000159] -A------R---              *  ASG       ref    <l:$540, c:$456>
N002 (  1,  1) [000158] D------N----              +--*  LCL_VAR   ref    V26 tmp15        d:2 <l:$540, c:$456>
N001 (  1,  1) [000147] ------------              \--*  LCL_VAR   ref    V22 tmp11        u:2 <l:$540, c:$456>

***** BB06
STMT00041 (IL   ???...  ???)
N004 (  5,  5) [000151] ------------              *  JTRUE     void  
N003 (  3,  3) [000150] J------N----              \--*  NE        int    <l:$291, c:$290>
N001 (  1,  1) [000148] ------------                 +--*  LCL_VAR   ref    V26 tmp15        u:2 (last use) <l:$540, c:$456>
N002 (  1,  1) [000149] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB07 [000..0D3) -> BB12 (cond), preds={BB06} succs={BB08,BB12}

***** BB07
STMT00048 (IL   ???...0x0CA)
N005 ( 16, 16) [000184] -AC-----R---              *  ASG       ref    $543
N004 (  1,  1) [000183] D------N----              +--*  LCL_VAR   ref    V28 tmp17        d:2 $543
N003 ( 16, 16) [000182] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $543
N002 (  2, 10) [000181] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $11e

***** BB07
STMT00095 (IL   ???...  ???)
N004 (  5,  5) [000359] ------------              *  JTRUE     void  
N003 (  3,  3) [000358] J------N----              \--*  EQ        int    $40
N001 (  1,  1) [000179] ------------                 +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000357] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB08 [000..000), preds={BB07} succs={BB09}

***** BB08
STMT00096 (IL   ???...  ???)
N006 (  6,  6) [000362] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000361] D--XG--N----              +--*  IND       ref    $180
N003 (  2,  2) [000519] -------N----              |  \--*  ADD       byref  $211
N001 (  1,  1) [000185] ------------              |     +--*  LCL_VAR   ref    V28 tmp17        u:2 $543
N002 (  1,  1) [000518] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $1c4
N005 (  1,  1) [000360] ------------              \--*  LCL_VAR   ref    V02 loc0         u:2 $180

***** BB08
STMT00097 (IL   ???...  ???)
N006 (  7, 15) [000366] -A-XG-------              *  ASG       long   $VN.Void
N004 (  4,  4) [000365] D--XG--N----              +--*  IND       long   $120
N003 (  2,  2) [000521] -------N----              |  \--*  ADD       byref  $212
N001 (  1,  1) [000363] ------------              |     +--*  LCL_VAR   ref    V28 tmp17        u:2 $543
N002 (  1,  1) [000520] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $1c5
N005 (  2, 10) [000180] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $120

***** BB08
STMT00051 (IL   ???...0x0CC)
N006 (  6,  6) [000192] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000191] D--XG--N----              +--*  IND       ref    $543
N003 (  2,  2) [000523] -------N----              |  \--*  ADD       byref  $210
N001 (  1,  1) [000178] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000522] ------------              |     \--*  CNS_INT   long   48 field offset Fseq[<>9__2] $1cc
N005 (  1,  1) [000187] ------------              \--*  LCL_VAR   ref    V28 tmp17        u:2 $543

***** BB08
STMT00052 (IL   ???...0x0D1)
N003 (  1,  3) [000199] -A------R---              *  ASG       ref    $543
N002 (  1,  1) [000198] D------N----              +--*  LCL_VAR   ref    V26 tmp15        d:4 $543
N001 (  1,  1) [000193] ------------              \--*  LCL_VAR   ref    V28 tmp17        u:2 (last use) $543

------------ BB09 [000..0E9) -> BB12 (cond), preds={BB06,BB08} succs={BB10,BB12}

***** BB09
STMT00122 (IL   ???...  ???)
N005 (  0,  0) [000587] -A------R---              *  ASG       ref   
N004 (  0,  0) [000585] D------N----              +--*  LCL_VAR   ref    V26 tmp15        d:3
N003 (  0,  0) [000586] ------------              \--*  PHI       ref   
N001 (  0,  0) [000602] ------------ pred BB08       +--*  PHI_ARG   ref    V26 tmp15        u:4 $543
N002 (  0,  0) [000601] ------------ pred BB06       \--*  PHI_ARG   ref    V26 tmp15        u:2 <l:$540, c:$456>

***** BB09
STMT00045 (IL   ???...0x0E4)
N005 ( 16, 16) [000172] -AC-----R---              *  ASG       ref    $54b
N004 (  1,  1) [000171] D------N----              +--*  LCL_VAR   ref    V27 tmp16        d:2 $54b
N003 ( 16, 16) [000170] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $54b
N002 (  2, 10) [000169] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $123

***** BB09
STMT00099 (IL   ???...  ???)
N004 (  5,  5) [000371] ------------              *  JTRUE     void  
N003 (  3,  3) [000370] J------N----              \--*  EQ        int    $40
N001 (  1,  1) [000167] ------------                 +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000369] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB10 [000..0F2) -> BB03 (cond), preds={BB09} succs={BB11,BB03}

***** BB10
STMT00100 (IL   ???...  ???)
N006 (  6,  6) [000374] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000373] D--XG--N----              +--*  IND       ref    $180
N003 (  2,  2) [000526] -------N----              |  \--*  ADD       byref  $213
N001 (  1,  1) [000173] ------------              |     +--*  LCL_VAR   ref    V27 tmp16        u:2 $54b
N002 (  1,  1) [000525] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $1c4
N005 (  1,  1) [000372] ------------              \--*  LCL_VAR   ref    V02 loc0         u:2 $180

***** BB10
STMT00101 (IL   ???...  ???)
N006 (  7, 15) [000378] -A-XG-------              *  ASG       long   $VN.Void
N004 (  4,  4) [000377] D--XG--N----              +--*  IND       long   $125
N003 (  2,  2) [000528] -------N----              |  \--*  ADD       byref  $214
N001 (  1,  1) [000375] ------------              |     +--*  LCL_VAR   ref    V27 tmp16        u:2 $54b
N002 (  1,  1) [000527] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $1c5
N005 (  2, 10) [000168] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $125

***** BB10
STMT00047 (IL 0x0DF...  ???)
N013 ( 36, 21) [000177] --CXG-------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue $VN.Void
N010 ( 17, 11) [000533] -ACXG---R-L- arg1 SETUP   +--*  ASG       ref    $464
N009 (  1,  1) [000532] D------N----              |  +--*  LCL_VAR   ref    V42 tmp31        d:2 $464
N008 ( 17, 11) [000176] --CXG-------              |  \--*  CALL      ref    SolutionAnalyzer.IPC.CreateSession $464
N005 (  1,  1) [000165] ------------ arg0 in rcx  |     +--*  LCL_VAR   ref    V25 tmp14        u:2 (last use) $1ab
N006 (  1,  1) [000166] ------------ arg1 in rdx  |     +--*  LCL_VAR   ref    V26 tmp15        u:3 (last use) $258
N007 (  1,  1) [000175] ------------ arg2 in r8   |     \--*  LCL_VAR   ref    V27 tmp16        u:2 (last use) $54b
N011 (  1,  1) [000534] ------------ arg1 in rdx  +--*  LCL_VAR   ref    V42 tmp31        u:2 (last use) $464
N012 (  1,  1) [000164] ------------ this in rcx  \--*  LCL_VAR   ref    V24 tmp13        u:2 (last use) <l:$1b9, c:$454>

***** BB10
STMT00025 (IL 0x0E9...0x0F0)
N008 ( 27, 25) [000084] --CXG-------              *  JTRUE     void  
N007 ( 25, 23) [000083] J-CXG--N----              \--*  NE        int    $292
N005 ( 23, 21) [000081] --CXG-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext $5c0
N003 (  1,  1) [000080] ------------ this in rcx     |  +--*  LCL_VAR   ref    V06 loc4         u:2 $164
N004 (  2, 10) [000536] H----------- arg1 in r11     |  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
N006 (  1,  1) [000082] ------------                 \--*  CNS_INT   int    0 $40

------------ BB11 [???..???) -> BB13 (always), preds={BB10} succs={BB13}

------------ BB12 [000..000) (throw), preds={BB07,BB09} succs={}

***** BB12
STMT00102 (IL   ???...  ???)
N001 ( 14,  5) [000379] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance $VN.Void

------------ BB13 [0F4..0F8) -> BB15 (cond), preds={BB02,BB11} succs={BB14,BB15}

***** BB13
STMT00116 (IL   ???...  ???)
N004 (  5,  5) [000431] ------------              *  JTRUE     void  
N003 (  3,  3) [000432] J------N----              \--*  EQ        int    $293
N001 (  1,  1) [000433] ------------                 +--*  LCL_VAR   ref    V06 loc4         u:2 $164
N002 (  1,  1) [000434] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB14 [0F8..100), preds={BB13} succs={BB15}

***** BB14
STMT00117 (IL   ???...  ???)
N005 ( 23, 21) [000435] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose $VN.Void
N003 (  1,  1) [000436] ------------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         u:2 (last use) $164
N004 (  2, 10) [000539] H----------- arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127

------------ BB15 [100..127) -> BB17 (always), preds={BB13,BB14} succs={BB17}

***** BB15
STMT00103 (IL 0x100...  ???)
N006 (  4,  4) [000384] -A-XG---R---              *  ASG       ref    <l:$569, c:$568>
N005 (  1,  1) [000383] D------N----              +--*  LCL_VAR   ref    V35 tmp24        d:2 <l:$567, c:$16e>
N004 (  4,  4) [000213] ---XG-------              \--*  IND       ref    <l:$569, c:$568>
N003 (  2,  2) [000546] -------N----                 \--*  ADD       byref  $207
N001 (  1,  1) [000212] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000545] ------------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers] $1c4

***** BB15
STMT00057 (IL   ???...  ???)
N009 (  9,  9) [000217] -A-XG---R---              *  ASG       int    $VN.Void
N008 (  4,  4) [000216] D--XG--N----              +--*  IND       int    $299
N007 (  2,  2) [000548] -------N----              |  \--*  ADD       byref  $201
N005 (  1,  1) [000211] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N006 (  1,  1) [000547] ------------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1
N004 (  4,  4) [000382] ---XG-------              \--*  IND       int    <l:$29b, c:$29a>
N003 (  2,  2) [000550] -------N----                 \--*  ADD       byref  <l:$216, c:$215>
N001 (  1,  1) [000381] ------------                    +--*  LCL_VAR   ref    V35 tmp24        u:2 (last use) <l:$567, c:$16e>
N002 (  1,  1) [000549] ------------                    \--*  CNS_INT   long   24 field offset Fseq[_size] $1c5

***** BB15
STMT00058 (IL 0x111...0x11D)
N005 ( 16, 16) [000224] -AC-----R---              *  ASG       ref    $56c
N004 (  1,  1) [000223] D------N----              +--*  LCL_VAR   ref    V29 tmp18        d:2 $56c
N003 ( 16, 16) [000222] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $56c
N002 (  2, 10) [000221] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $12b

***** BB15
STMT00109 (IL   ???...  ???)
N006 (  4,  4) [000402] -A-XG---R---              *  ASG       int    <l:$2a3, c:$2a2>
N005 (  1,  1) [000401] D------N----              +--*  LCL_VAR   int    V37 tmp26        d:2 <l:$299, c:$30c>
N004 (  4,  4) [000220] ---XG-------              \--*  IND       int    <l:$2a3, c:$2a2>
N003 (  2,  2) [000553] -------N----                 \--*  ADD       byref  $201
N001 (  1,  1) [000219] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000552] ------------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1

***** BB15
STMT00104 (IL   ???...  ???)
N005 ( 16, 16) [000389] -AC-----R---              *  ASG       ref    $56d
N004 (  1,  1) [000388] D------N----              +--*  LCL_VAR   ref    V36 tmp25        d:2 $56d
N003 ( 16, 16) [000387] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $56d
N002 (  2, 10) [000386] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $12c

***** BB15
STMT00110 (IL   ???...  ???)
N007 ( 17, 12) [000406] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor $VN.Void
N004 (  1,  1) [000390] ------------ this in rcx  +--*  LCL_VAR   ref    V36 tmp25        u:2 $56d
N005 (  1,  1) [000404] ------------ arg1 in rdx  +--*  CNS_INT   int    0 $40
N006 (  1,  1) [000405] ------------ arg2 in r8   \--*  CNS_INT   ref    null $VN.Null

***** BB15
STMT00106 (IL   ???...  ???)
N006 (  6,  6) [000394] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000393] D--XG--N----              +--*  IND       ref    $56d
N003 (  2,  2) [000559] -------N----              |  \--*  ADD       byref  $217
N001 (  1,  1) [000225] ------------              |     +--*  LCL_VAR   ref    V29 tmp18        u:2 $56c
N002 (  1,  1) [000558] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_workItems] $1c4
N005 (  1,  1) [000392] ------------              \--*  LCL_VAR   ref    V36 tmp25        u:2 (last use) $56d

***** BB15
STMT00108 (IL   ???...  ???)
N006 (  6,  6) [000400] -A-XG-------              *  ASG       int    $VN.Void
N004 (  4,  4) [000399] D--XG--N----              +--*  IND       int    $299
N003 (  2,  2) [000561] -------N----              |  \--*  ADD       byref  $218
N001 (  1,  1) [000397] ------------              |     +--*  LCL_VAR   ref    V29 tmp18        u:2 $56c
N002 (  1,  1) [000560] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_workItemsToComplete] $1c7
N005 (  1,  1) [000398] ------------              \--*  LCL_VAR   int    V37 tmp26        u:2 (last use) <l:$299, c:$30c>

***** BB15
STMT00060 (IL 0x11D...  ???)
N006 (  6,  6) [000229] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000228] D--XG--N----              +--*  IND       ref    $56c
N003 (  2,  2) [000563] -------N----              |  \--*  ADD       byref  $208
N001 (  1,  1) [000218] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000562] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter] $1c7
N005 (  1,  1) [000227] ------------              \--*  LCL_VAR   ref    V29 tmp18        u:2 (last use) $56c

***** BB15
STMT00061 (IL 0x122...0x123)
N003 (  1,  3) [000232] -A------R---              *  ASG       int    $40
N002 (  1,  1) [000231] D------N----              +--*  LCL_VAR   int    V10 loc8         d:2 $40
N001 (  1,  1) [000230] ------------              \--*  CNS_INT   int    0 $40

------------ BB16 [127..133), preds={BB20} succs={BB17}

***** BB16
STMT00065 (IL 0x127...0x131)
N003 ( 15,  8) [000243] --CXG-------              *  CALL nullcheck void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0 $VN.Void
N002 (  1,  1) [000242] ------------ this in rcx  \--*  LCL_VAR   ref    V02 loc0         u:2 $180

***** BB16
STMT00066 (IL 0x12D...  ???)
N005 (  3,  3) [000248] -A------R---              *  ASG       int    $2ad
N004 (  1,  1) [000247] D------N----              +--*  LCL_VAR   int    V10 loc8         d:4 $2ad
N003 (  3,  3) [000246] ------------              \--*  ADD       int    $2ad
N001 (  1,  1) [000244] ------------                 +--*  LCL_VAR   int    V10 loc8         u:3 (last use) $2ca
N002 (  1,  1) [000245] ------------                 \--*  CNS_INT   int    1 $41

------------ BB17 [000..147) -> BB19 (cond), preds={BB15,BB16} succs={BB18,BB19}

***** BB17
STMT00120 (IL   ???...  ???)
N005 (  0,  0) [000581] -A------R---              *  ASG       int   
N004 (  0,  0) [000579] D------N----              +--*  LCL_VAR   int    V10 loc8         d:3
N003 (  0,  0) [000580] ------------              \--*  PHI       int   
N001 (  0,  0) [000598] ------------ pred BB16       +--*  PHI_ARG   int    V10 loc8         u:4
N002 (  0,  0) [000597] ------------ pred BB15       \--*  PHI_ARG   int    V10 loc8         u:2 $40

***** BB17
STMT00114 (IL   ???...  ???)
N006 (  4,  4) [000424] -A-XG---R---              *  ASG       int    <l:$2a9, c:$2a8>
N005 (  1,  1) [000423] D------N----              +--*  LCL_VAR   int    V39 tmp28        d:2 <l:$2a7, c:$680>
N004 (  4,  4) [000237] ---XG-------              \--*  IND       int    <l:$2a9, c:$2a8>
N003 (  2,  2) [000566] -------N----                 \--*  ADD       byref  $201
N001 (  1,  1) [000236] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000565] ------------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1

***** BB17
STMT00111 (IL   ???...  ???)
N004 (  5,  5) [000414] ------------              *  JTRUE     void  
N003 (  3,  3) [000413] J------N----              \--*  GE        int    <l:$2ab, c:$2aa>
N001 (  1,  1) [000412] ------------                 +--*  LCL_VAR   int    V39 tmp28        u:2 <l:$2a7, c:$680>
N002 (  1,  1) [000411] ------------                 \--*  CNS_INT   int    8 $57

------------ BB18 [000..000) -> BB20 (always), preds={BB17} succs={BB20}

***** BB18
STMT00113 (IL   ???...  ???)
N003 (  1,  3) [000421] -A------R---              *  ASG       int    <l:$2a7, c:$680>
N002 (  1,  1) [000420] D------N----              +--*  LCL_VAR   int    V38 tmp27        d:4 <l:$2a7, c:$680>
N001 (  1,  1) [000419] ------------              \--*  LCL_VAR   int    V39 tmp28        u:2 (last use) <l:$2a7, c:$680>

------------ BB19 [000..000), preds={BB17} succs={BB20}

***** BB19
STMT00112 (IL   ???...  ???)
N003 (  1,  3) [000417] -A------R---              *  ASG       int    $57
N002 (  1,  1) [000416] D------N----              +--*  LCL_VAR   int    V38 tmp27        d:3 $57
N001 (  1,  1) [000415] ------------              \--*  CNS_INT   int    8 $57

------------ BB20 [???..???) -> BB16 (cond), preds={BB18,BB19} succs={BB21,BB16}

***** BB20
STMT00121 (IL   ???...  ???)
N005 (  0,  0) [000584] -A------R---              *  ASG       int   
N004 (  0,  0) [000582] D------N----              +--*  LCL_VAR   int    V38 tmp27        d:2
N003 (  0,  0) [000583] ------------              \--*  PHI       int   
N001 (  0,  0) [000600] ------------ pred BB18       +--*  PHI_ARG   int    V38 tmp27        u:4 <l:$2a7, c:$680>
N002 (  0,  0) [000599] ------------ pred BB19       \--*  PHI_ARG   int    V38 tmp27        u:3 $57

***** BB20
STMT00064 (IL   ???...  ???)
N004 (  5,  5) [000241] ------------              *  JTRUE     void  
N003 (  3,  3) [000240] J------N----              \--*  LT        int    $2ac
N001 (  1,  1) [000233] ------------                 +--*  LCL_VAR   int    V10 loc8         u:3 $2ca
N002 (  1,  1) [000422] ------------                 \--*  LCL_VAR   int    V38 tmp27        u:2 (last use) $2cb

------------ BB21 [147..153) (return), preds={BB20} succs={}

***** BB21
STMT00115 (IL 0x147...  ???)
N006 (  4,  4) [000429] -A-XG---R---              *  ASG       ref    <l:$575, c:$574>
N005 (  1,  1) [000428] D------N----              +--*  LCL_VAR   ref    V40 tmp29        d:2 <l:$573, c:$177>
N004 (  4,  4) [000250] ---XG-------              \--*  IND       ref    <l:$575, c:$574>
N003 (  2,  2) [000568] -------N----                 \--*  ADD       byref  $205
N001 (  1,  1) [000249] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 (last use) $180
N002 (  1,  1) [000567] ------------                    \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun] $1c5

***** BB21
STMT00068 (IL   ???...  ???)
N005 (  5,  5) [000253] ---XG-------              *  RETURN    ref    $17a
N004 (  4,  4) [000427] ---XG-------              \--*  IND       ref    <l:$57b, c:$57a>
N003 (  2,  2) [000570] -------N----                 \--*  ADD       byref  <l:$21a, c:$219>
N001 (  1,  1) [000426] ------------                    +--*  LCL_VAR   ref    V40 tmp29        u:2 (last use) <l:$573, c:$177>
N002 (  1,  1) [000569] ------------                    \--*  CNS_INT   long   8 field offset Fseq[_task] $1c4

------------ BB22 [0F4..0F8) -> BB24 (cond), preds={} succs={BB23,BB24}

***** BB22
STMT00069 (IL 0x0F4...0x0F6)
N004 (  5,  5) [000257] ------------              *  JTRUE     void  
N003 (  3,  3) [000256] J------N----              \--*  EQ        int    $293
N001 (  1,  1) [000254] ------------                 +--*  LCL_VAR   ref    V06 loc4         u:2 $164
N002 (  1,  1) [000255] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB23 [0F8..0FF), preds={BB22} succs={BB24}

***** BB23
STMT00071 (IL 0x0F8...0x0FA)
N005 ( 23, 21) [000260] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose $VN.Void
N003 (  1,  1) [000259] ------------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         u:2 (last use) $164
N004 (  2, 10) [000542] H----------- arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127

------------ BB24 [0FF..100) (finret), preds={BB22,BB23} succs={}

***** BB24
STMT00070 (IL 0x0FF...0x0FF)
N001 (  0,  0) [000258] ------------              *  RETFILT   void   $600

-------------------------------------------------------------------------------------------------------------------

*************** In optOptimizeValnumCSEs()

CSE candidate #01, key=$299 in BB15, [cost= 4, size= 4]: 
N004 (  4,  4) CSE #01 (use)[000220] ---XG-------              *  IND       int    <l:$2a3, c:$2a2>
N003 (  2,  2)              [000553] -------N----              \--*  ADD       byref  $201
N001 (  1,  1)              [000219] ------------                 +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1)              [000552] ------------                 \--*  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1

Blocks that generate CSE def/uses
BB15 cseGen = 0000000000000001

Performing DataFlow for ValnumCSE's
StartMerge BB01
  :: cseOut    = 0000000000000007
EndMerge BB01
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000007, => true
StartMerge BB02
  :: cseOut    = 0000000000000007
Merge BB02 and BB01
  :: cseIn     = 0000000000000007
  :: cseOut    = 0000000000000007
  => cseIn     = 0000000000000000
EndMerge BB02
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000007, => true
StartMerge BB22
  :: cseOut    = 0000000000000007
EndMerge BB22
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000007, => true
StartMerge BB03
  :: cseOut    = 0000000000000007
Merge BB03 and BB02
  :: cseIn     = 0000000000000007
  :: cseOut    = 0000000000000007
  => cseIn     = 0000000000000000
Merge BB03 and BB10
  :: cseIn     = 0000000000000000
  :: cseOut    = 0000000000000007
  => cseIn     = 0000000000000000
EndMerge BB03
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000007, => true
StartMerge BB13
  :: cseOut    = 0000000000000007
Merge BB13 and BB02
  :: cseIn     = 0000000000000007
  :: cseOut    = 0000000000000007
  => cseIn     = 0000000000000000
Merge BB13 and BB11
  :: cseIn     = 0000000000000000
  :: cseOut    = 0000000000000007
  => cseIn     = 0000000000000000
EndMerge BB13
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000007, => true
StartMerge BB22
  :: cseOut    = 0000000000000000
EndMerge BB22
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000000, => false
StartMerge BB23
  :: cseOut    = 0000000000000007
Merge BB23 and BB22
  :: cseIn     = 0000000000000007
  :: cseOut    = 0000000000000007
  => cseIn     = 0000000000000000
EndMerge BB23
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000007, => true
StartMerge BB24
  :: cseOut    = 0000000000000007
Merge BB24 and BB22
  :: cseIn     = 0000000000000007
  :: cseOut    = 0000000000000007
  => cseIn     = 0000000000000000
Merge BB24 and BB23
  :: cseIn     = 0000000000000000
  :: cseOut    = 0000000000000007
  => cseIn     = 0000000000000000
EndMerge BB24
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000007, => true
StartMerge BB04
  :: cseOut    = 0000000000000007
Merge BB04 and BB03
  :: cseIn     = 0000000000000007
  :: cseOut    = 0000000000000007
  => cseIn     = 0000000000000000
EndMerge BB04
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000007, => true
StartMerge BB05
  :: cseOut    = 0000000000000007
Merge BB05 and BB03
  :: cseIn     = 0000000000000007
  :: cseOut    = 0000000000000007
  => cseIn     = 0000000000000000
EndMerge BB05
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000007, => true
StartMerge BB22
  :: cseOut    = 0000000000000000
EndMerge BB22
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000000, => false
StartMerge BB14
  :: cseOut    = 0000000000000007
Merge BB14 and BB13
  :: cseIn     = 0000000000000007
  :: cseOut    = 0000000000000007
  => cseIn     = 0000000000000000
EndMerge BB14
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000007, => true
StartMerge BB15
  :: cseOut    = 0000000000000007
Merge BB15 and BB13
  :: cseIn     = 0000000000000007
  :: cseOut    = 0000000000000007
  => cseIn     = 0000000000000000
Merge BB15 and BB14
  :: cseIn     = 0000000000000000
  :: cseOut    = 0000000000000007
  => cseIn     = 0000000000000000
EndMerge BB15
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000001
  => cseOut    = 0000000000000001
  != preMerge  = 0000000000000007, => true
StartMerge BB24
  :: cseOut    = 0000000000000000
Merge BB24 and BB22
  :: cseIn     = 0000000000000000
  :: cseOut    = 0000000000000000
  => cseIn     = 0000000000000000
Merge BB24 and BB23
  :: cseIn     = 0000000000000000
  :: cseOut    = 0000000000000000
  => cseIn     = 0000000000000000
EndMerge BB24
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000000, => false
StartMerge BB06
  :: cseOut    = 0000000000000007
Merge BB06 and BB04
  :: cseIn     = 0000000000000007
  :: cseOut    = 0000000000000007
  => cseIn     = 0000000000000000
Merge BB06 and BB05
  :: cseIn     = 0000000000000000
  :: cseOut    = 0000000000000007
  => cseIn     = 0000000000000000
EndMerge BB06
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000007, => true
StartMerge BB22
  :: cseOut    = 0000000000000000
EndMerge BB22
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000000, => false
StartMerge BB06
  :: cseOut    = 0000000000000000
Merge BB06 and BB04
  :: cseIn     = 0000000000000000
  :: cseOut    = 0000000000000000
  => cseIn     = 0000000000000000
Merge BB06 and BB05
  :: cseIn     = 0000000000000000
  :: cseOut    = 0000000000000000
  => cseIn     = 0000000000000000
EndMerge BB06
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000000, => false
StartMerge BB22
  :: cseOut    = 0000000000000000
EndMerge BB22
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000000, => false
StartMerge BB15
  :: cseOut    = 0000000000000001
Merge BB15 and BB13
  :: cseIn     = 0000000000000000
  :: cseOut    = 0000000000000001
  => cseIn     = 0000000000000000
Merge BB15 and BB14
  :: cseIn     = 0000000000000000
  :: cseOut    = 0000000000000001
  => cseIn     = 0000000000000000
EndMerge BB15
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000001
  => cseOut    = 0000000000000001
  != preMerge  = 0000000000000001, => false
StartMerge BB17
  :: cseOut    = 0000000000000007
Merge BB17 and BB15
  :: cseIn     = 0000000000000007
  :: cseOut    = 0000000000000007
  => cseIn     = 0000000000000001
Merge BB17 and BB16
  :: cseIn     = 0000000000000001
  :: cseOut    = 0000000000000007
  => cseIn     = 0000000000000001
EndMerge BB17
  :: cseIn     = 0000000000000001
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000001
  != preMerge  = 0000000000000007, => true
StartMerge BB07
  :: cseOut    = 0000000000000007
Merge BB07 and BB06
  :: cseIn     = 0000000000000007
  :: cseOut    = 0000000000000007
  => cseIn     = 0000000000000000
EndMerge BB07
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000007, => true
StartMerge BB09
  :: cseOut    = 0000000000000007
Merge BB09 and BB06
  :: cseIn     = 0000000000000007
  :: cseOut    = 0000000000000007
  => cseIn     = 0000000000000000
Merge BB09 and BB08
  :: cseIn     = 0000000000000000
  :: cseOut    = 0000000000000007
  => cseIn     = 0000000000000000
EndMerge BB09
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000007, => true
StartMerge BB22
  :: cseOut    = 0000000000000000
EndMerge BB22
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000000, => false
StartMerge BB18
  :: cseOut    = 0000000000000007
Merge BB18 and BB17
  :: cseIn     = 0000000000000007
  :: cseOut    = 0000000000000007
  => cseIn     = 0000000000000001
EndMerge BB18
  :: cseIn     = 0000000000000001
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000001
  != preMerge  = 0000000000000007, => true
StartMerge BB19
  :: cseOut    = 0000000000000007
Merge BB19 and BB17
  :: cseIn     = 0000000000000007
  :: cseOut    = 0000000000000007
  => cseIn     = 0000000000000001
EndMerge BB19
  :: cseIn     = 0000000000000001
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000001
  != preMerge  = 0000000000000007, => true
StartMerge BB08
  :: cseOut    = 0000000000000007
Merge BB08 and BB07
  :: cseIn     = 0000000000000007
  :: cseOut    = 0000000000000007
  => cseIn     = 0000000000000000
EndMerge BB08
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000007, => true
StartMerge BB12
  :: cseOut    = 0000000000000007
Merge BB12 and BB07
  :: cseIn     = 0000000000000007
  :: cseOut    = 0000000000000007
  => cseIn     = 0000000000000000
Merge BB12 and BB09
  :: cseIn     = 0000000000000000
  :: cseOut    = 0000000000000007
  => cseIn     = 0000000000000000
EndMerge BB12
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000007, => true
StartMerge BB22
  :: cseOut    = 0000000000000000
EndMerge BB22
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000000, => false
StartMerge BB10
  :: cseOut    = 0000000000000007
Merge BB10 and BB09
  :: cseIn     = 0000000000000007
  :: cseOut    = 0000000000000007
  => cseIn     = 0000000000000000
EndMerge BB10
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000007, => true
StartMerge BB12
  :: cseOut    = 0000000000000000
Merge BB12 and BB07
  :: cseIn     = 0000000000000000
  :: cseOut    = 0000000000000000
  => cseIn     = 0000000000000000
Merge BB12 and BB09
  :: cseIn     = 0000000000000000
  :: cseOut    = 0000000000000000
  => cseIn     = 0000000000000000
EndMerge BB12
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000000, => false
StartMerge BB22
  :: cseOut    = 0000000000000000
EndMerge BB22
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000000, => false
StartMerge BB20
  :: cseOut    = 0000000000000007
Merge BB20 and BB18
  :: cseIn     = 0000000000000007
  :: cseOut    = 0000000000000007
  => cseIn     = 0000000000000001
Merge BB20 and BB19
  :: cseIn     = 0000000000000001
  :: cseOut    = 0000000000000007
  => cseIn     = 0000000000000001
EndMerge BB20
  :: cseIn     = 0000000000000001
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000001
  != preMerge  = 0000000000000007, => true
StartMerge BB20
  :: cseOut    = 0000000000000001
Merge BB20 and BB18
  :: cseIn     = 0000000000000001
  :: cseOut    = 0000000000000001
  => cseIn     = 0000000000000001
Merge BB20 and BB19
  :: cseIn     = 0000000000000001
  :: cseOut    = 0000000000000001
  => cseIn     = 0000000000000001
EndMerge BB20
  :: cseIn     = 0000000000000001
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000001
  != preMerge  = 0000000000000001, => false
StartMerge BB09
  :: cseOut    = 0000000000000000
Merge BB09 and BB06
  :: cseIn     = 0000000000000000
  :: cseOut    = 0000000000000000
  => cseIn     = 0000000000000000
Merge BB09 and BB08
  :: cseIn     = 0000000000000000
  :: cseOut    = 0000000000000000
  => cseIn     = 0000000000000000
EndMerge BB09
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000000, => false
StartMerge BB22
  :: cseOut    = 0000000000000000
EndMerge BB22
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000000, => false
StartMerge BB22
  :: cseOut    = 0000000000000000
EndMerge BB22
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000000, => false
StartMerge BB11
  :: cseOut    = 0000000000000007
Merge BB11 and BB10
  :: cseIn     = 0000000000000007
  :: cseOut    = 0000000000000007
  => cseIn     = 0000000000000000
EndMerge BB11
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000007, => true
StartMerge BB03
  :: cseOut    = 0000000000000000
Merge BB03 and BB02
  :: cseIn     = 0000000000000000
  :: cseOut    = 0000000000000000
  => cseIn     = 0000000000000000
Merge BB03 and BB10
  :: cseIn     = 0000000000000000
  :: cseOut    = 0000000000000000
  => cseIn     = 0000000000000000
EndMerge BB03
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000000, => false
StartMerge BB22
  :: cseOut    = 0000000000000000
EndMerge BB22
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000000, => false
StartMerge BB21
  :: cseOut    = 0000000000000007
Merge BB21 and BB20
  :: cseIn     = 0000000000000007
  :: cseOut    = 0000000000000007
  => cseIn     = 0000000000000001
EndMerge BB21
  :: cseIn     = 0000000000000001
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000001
  != preMerge  = 0000000000000007, => true
StartMerge BB16
  :: cseOut    = 0000000000000007
Merge BB16 and BB20
  :: cseIn     = 0000000000000007
  :: cseOut    = 0000000000000007
  => cseIn     = 0000000000000001
EndMerge BB16
  :: cseIn     = 0000000000000001
  -- cseKill   = 0000000000000001
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000001
  != preMerge  = 0000000000000007, => true
StartMerge BB13
  :: cseOut    = 0000000000000000
Merge BB13 and BB02
  :: cseIn     = 0000000000000000
  :: cseOut    = 0000000000000000
  => cseIn     = 0000000000000000
Merge BB13 and BB11
  :: cseIn     = 0000000000000000
  :: cseOut    = 0000000000000000
  => cseIn     = 0000000000000000
EndMerge BB13
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000000, => false
StartMerge BB22
  :: cseOut    = 0000000000000000
EndMerge BB22
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000000
  != preMerge  = 0000000000000000, => false
StartMerge BB17
  :: cseOut    = 0000000000000001
Merge BB17 and BB15
  :: cseIn     = 0000000000000001
  :: cseOut    = 0000000000000001
  => cseIn     = 0000000000000001
Merge BB17 and BB16
  :: cseIn     = 0000000000000001
  :: cseOut    = 0000000000000001
  => cseIn     = 0000000000000001
EndMerge BB17
  :: cseIn     = 0000000000000001
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000001
  != preMerge  = 0000000000000001, => false

After performing DataFlow for ValnumCSE's
BB01 cseIn  = 0000000000000000, cseGen = 0000000000000000, cseOut = 0000000000000000
BB02 cseIn  = 0000000000000000, cseGen = 0000000000000000, cseOut = 0000000000000000
BB03 cseIn  = 0000000000000000, cseGen = 0000000000000000, cseOut = 0000000000000000
BB04 cseIn  = 0000000000000000, cseGen = 0000000000000000, cseOut = 0000000000000000
BB05 cseIn  = 0000000000000000, cseGen = 0000000000000000, cseOut = 0000000000000000
BB06 cseIn  = 0000000000000000, cseGen = 0000000000000000, cseOut = 0000000000000000
BB07 cseIn  = 0000000000000000, cseGen = 0000000000000000, cseOut = 0000000000000000
BB08 cseIn  = 0000000000000000, cseGen = 0000000000000000, cseOut = 0000000000000000
BB09 cseIn  = 0000000000000000, cseGen = 0000000000000000, cseOut = 0000000000000000
BB10 cseIn  = 0000000000000000, cseGen = 0000000000000000, cseOut = 0000000000000000
BB11 cseIn  = 0000000000000000, cseGen = 0000000000000000, cseOut = 0000000000000000
BB12 cseIn  = 0000000000000000, cseGen = 0000000000000000, cseOut = 0000000000000000
BB13 cseIn  = 0000000000000000, cseGen = 0000000000000000, cseOut = 0000000000000000
BB14 cseIn  = 0000000000000000, cseGen = 0000000000000000, cseOut = 0000000000000000
BB15 cseIn  = 0000000000000000, cseGen = 0000000000000001, cseOut = 0000000000000001
BB16 cseIn  = 0000000000000001, cseGen = 0000000000000000, cseOut = 0000000000000001
BB17 cseIn  = 0000000000000001, cseGen = 0000000000000000, cseOut = 0000000000000001
BB18 cseIn  = 0000000000000001, cseGen = 0000000000000000, cseOut = 0000000000000001
BB19 cseIn  = 0000000000000001, cseGen = 0000000000000000, cseOut = 0000000000000001
BB20 cseIn  = 0000000000000001, cseGen = 0000000000000000, cseOut = 0000000000000001
BB21 cseIn  = 0000000000000001, cseGen = 0000000000000000, cseOut = 0000000000000001
BB22 cseIn  = 0000000000000000, cseGen = 0000000000000000, cseOut = 0000000000000000
BB23 cseIn  = 0000000000000000, cseGen = 0000000000000000, cseOut = 0000000000000000
BB24 cseIn  = 0000000000000000, cseGen = 0000000000000000, cseOut = 0000000000000000

Labeling the CSEs with Use/Def information
BB15 [000382] Def of CSE #01 [weight=1   ]
BB15 [000220] Use of CSE #01 [weight=1   ] *** Now Live Across Call ***
 NO_CSE - This use has an exception set item that isn't contained in the defs!

************ Trees at start of optValnumCSE_Heuristic()

------------ BB01 [000..070), preds={} succs={BB02}

***** BB01
STMT00000 (IL 0x000...0x005)
N005 ( 16, 16)              [000003] -AC-----R---              *  ASG       ref    $180
N004 (  1,  1)              [000002] D------N----              +--*  LCL_VAR   ref    V12 tmp1         d:2 $180
N003 ( 16, 16)              [000001] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $180
N002 (  2, 10)              [000000] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $100

***** BB01
STMT00002 (IL 0x005...  ???)
N003 (  1,  3)              [000008] -A------R---              *  ASG       ref    $180
N002 (  1,  1)              [000007] D------N----              +--*  LCL_VAR   ref    V02 loc0         d:2 $180
N001 (  1,  1)              [000006] ------------              \--*  LCL_VAR   ref    V12 tmp1         u:2 $180

***** BB01
STMT00003 (IL 0x006...0x008)
N006 (  6,  6)              [000012] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4)              [000011] D--XG--N----              +--*  IND       ref    $81
N003 (  2,  2)              [000440] -------N----              |  \--*  ADD       byref  $200
N001 (  1,  1)              [000009] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1)              [000439] ------------              |     \--*  CNS_INT   long   32 field offset Fseq[outputFile] $1c0
N005 (  1,  1)              [000010] ------------              \--*  LCL_VAR   ref    V01 arg1         u:1 (last use) $81

***** BB01
STMT00004 (IL 0x00D...0x00F)
N006 (  6,  6)              [000016] -A-XG-------              *  ASG       int    $VN.Void
N004 (  4,  4)              [000015] D--XG--N----              +--*  IND       int    $40
N003 (  2,  2)              [000442] -------N----              |  \--*  ADD       byref  $201
N001 (  1,  1)              [000013] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1)              [000441] ------------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1
N005 (  1,  1)              [000014] ------------              \--*  CNS_INT   int    0 $40

***** BB01
STMT00005 (IL 0x014...0x016)
N006 (  6,  6)              [000020] -A-XG-------              *  ASG       int    $VN.Void
N004 (  4,  4)              [000019] D--XG--N----              +--*  IND       int    $40
N003 (  2,  2)              [000444] -------N----              |  \--*  ADD       byref  $202
N001 (  1,  1)              [000017] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1)              [000443] ------------              |     \--*  CNS_INT   long   56 field offset Fseq[analyzersFinishedCount] $1c2
N005 (  1,  1)              [000018] ------------              \--*  CNS_INT   int    0 $40

***** BB01
STMT00006 (IL 0x01B...0x021)
N005 ( 16, 16)              [000025] -AC-----R---              *  ASG       ref    $183
N004 (  1,  1)              [000024] D------N----              +--*  LCL_VAR   ref    V13 tmp2         d:2 $183
N003 ( 16, 16)              [000023] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $183
N002 (  2, 10)              [000022] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $104

***** BB01
STMT00074 (IL   ???...  ???)
N005 ( 16, 16)              [000269] -AC-----R---              *  ASG       ref    $184
N004 (  1,  1)              [000268] D------N----              +--*  LCL_VAR   ref    V30 tmp19        d:2 $184
N003 ( 16, 16)              [000267] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $184
N002 (  2, 10)              [000266] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $105

***** BB01
STMT00079 (IL   ???...  ???)
N006 (  6,  9)              [000283] -A-XGO------              *  ASG       int    $VN.Void
N004 (  4,  4)              [000282] V--XGO-N----              +--*  IND       int    $43
N003 (  2,  2)              [000448] -------N----              |  \--*  ADD       byref  $203
N001 (  1,  1)              [000280] ------------              |     +--*  LCL_VAR   ref    V30 tmp19        u:2 $184
N002 (  1,  1)              [000447] ------------              |     \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags] $1c3
N005 (  1,  4)              [000281] ------------              \--*  CNS_INT   int    0x2000400 $43

***** BB01
STMT00076 (IL   ???...  ???)
N006 (  6,  6)              [000274] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4)              [000273] D--XG--N----              +--*  IND       ref    $184
N003 (  2,  2)              [000450] -------N----              |  \--*  ADD       byref  $204
N001 (  1,  1)              [000265] ------------              |     +--*  LCL_VAR   ref    V13 tmp2         u:2 $183
N002 (  1,  1)              [000449] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_task] $1c4
N005 (  1,  1)              [000272] ------------              \--*  LCL_VAR   ref    V30 tmp19        u:2 (last use) $184

***** BB01
STMT00008 (IL 0x021...  ???)
N006 (  6,  6)              [000030] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4)              [000029] D--XG--N----              +--*  IND       ref    $183
N003 (  2,  2)              [000452] -------N----              |  \--*  ADD       byref  $205
N001 (  1,  1)              [000021] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1)              [000451] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun] $1c5
N005 (  1,  1)              [000028] ------------              \--*  LCL_VAR   ref    V13 tmp2         u:2 (last use) $183

***** BB01
STMT00009 (IL 0x026...0x02C)
N005 ( 16, 16)              [000035] -AC-----R---              *  ASG       ref    $189
N004 (  1,  1)              [000034] D------N----              +--*  LCL_VAR   ref    V14 tmp3         d:2 $189
N003 ( 16, 16)              [000033] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $189
N002 (  2, 10)              [000032] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $109

***** BB01
STMT00082 (IL   ???...  ???)
N013 ( 26, 35)              [000292] -ACXG---R---              *  ASG       ref    $VN.Void
N012 (  4,  4)              [000291] D--XG--N----              +--*  IND       ref    $246
N011 (  2,  2)              [000455] -------N----              |  \--*  ADD       byref  $206
N009 (  1,  1)              [000287] ------------              |     +--*  LCL_VAR   ref    V14 tmp3         u:2 $189
N010 (  1,  1)              [000454] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_array] $1c4
N008 ( 21, 30)              [000300] --CXG-------              \--*  COMMA     ref    <l:$18c, c:$18b>
N005 ( 17, 18)              [000299] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS $381
N003 (  2, 10)              [000297] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e0b0028 $1c6
N004 (  1,  1)              [000298] ------------ arg1 in rdx     |  \--*  CNS_INT   int    14 $44
N007 (  4, 12)              [000295] n---G-------                 \--*  IND       ref    <l:$246, c:$14b>
N006 (  2, 10)              [000458] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[Value] $10a

***** BB01
STMT00011 (IL 0x02C...  ???)
N006 (  6,  6)              [000040] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4)              [000039] D--XG--N----              +--*  IND       ref    $189
N003 (  2,  2)              [000460] -------N----              |  \--*  ADD       byref  $207
N001 (  1,  1)              [000031] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1)              [000459] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers] $1c4
N005 (  1,  1)              [000038] ------------              \--*  LCL_VAR   ref    V14 tmp3         u:2 (last use) $189

***** BB01
STMT00012 (IL 0x031...0x033)
N006 (  6,  6)              [000044] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4)              [000043] D--XG--N----              +--*  IND       ref    $VN.Null
N003 (  2,  2)              [000462] -------N----              |  \--*  ADD       byref  $208
N001 (  1,  1)              [000041] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1)              [000461] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter] $1c7
N005 (  1,  1)              [000042] ------------              \--*  CNS_INT   ref    null $VN.Null

***** BB01
STMT00013 (IL 0x038...0x03E)
N005 ( 16, 16)              [000049] -AC-----R---              *  ASG       ref    $193
N004 (  1,  1)              [000048] D------N----              +--*  LCL_VAR   ref    V15 tmp4         d:2 $193
N003 ( 16, 16)              [000047] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $193
N002 (  2, 10)              [000046] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $10e

***** BB01
STMT00083 (IL   ???...  ???)
N005 ( 16, 10)              [000303] --CXG-------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor $VN.Void
N003 (  1,  1)              [000050] ------------ this in rcx  +--*  LCL_VAR   ref    V15 tmp4         u:2 $193
N004 (  1,  1)              [000302] ------------ arg1 in rdx  \--*  CNS_INT   ref    null $VN.Null

***** BB01
STMT00015 (IL 0x03E...  ???)
N006 (  6,  6)              [000054] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4)              [000053] D--XG--N----              +--*  IND       ref    $193
N003 (  2,  2)              [000467] -------N----              |  \--*  ADD       byref  $209
N001 (  1,  1)              [000045] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 (last use) $180
N002 (  1,  1)              [000466] ------------              |     \--*  CNS_INT   long   40 field offset Fseq[output] $1c8
N005 (  1,  1)              [000052] ------------              \--*  LCL_VAR   ref    V15 tmp4         u:2 (last use) $193

***** BB01
STMT00086 (IL   ???...  ???)
N003 ( 14,  5)              [000316] -ACXG---R---              *  ASG       ref    $151
N002 (  1,  1)              [000315] D------N----              +--*  LCL_VAR   ref    V31 tmp20        d:2 $151
N001 ( 14,  5)              [000055] --CXG-------              \--*  CALL      ref    System.Diagnostics.Process.GetCurrentProcess $151

***** BB01
STMT00087 (IL   ???...  ???)
N002 (  2,  2)              [000314] ---X--------              *  NULLCHECK byte   $197
N001 (  1,  1)              [000313] ------------              \--*  LCL_VAR   ref    V31 tmp20        u:2 $151

***** BB01
STMT00084 (IL   ???...  ???)
N005 ( 16, 10)              [000308] --CXG-------              *  CALL      void   System.Diagnostics.Process.EnsureState $VN.Void
N003 (  1,  1)              [000306] ------------ this in rcx  +--*  LCL_VAR   ref    V31 tmp20        u:2 $151
N004 (  1,  1)              [000307] ------------ arg1 in rdx  \--*  CNS_INT   int    3 $46

***** BB01
STMT00088 (IL   ???...  ???)
N008 ( 18, 13)              [000322] -ACXG---R---              *  ASG       ref    $156
N007 (  1,  1)              [000321] D------N----              +--*  LCL_VAR   ref    V32 tmp21        d:2 $156
N006 ( 18, 13)              [000311] --CXG-------              \--*  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule $156
N005 (  4,  7)              [000310] ---XG------- arg0 in rcx     \--*  IND       int    <l:$289, c:$288>
N004 (  2,  5)              [000471] -------N----                    \--*  ADD       byref  $20a
N002 (  1,  1)              [000309] ------------                       +--*  LCL_VAR   ref    V31 tmp20        u:2 (last use) $151
N003 (  1,  4)              [000470] ------------                       \--*  CNS_INT   long   200 field offset Fseq[_processId] $1c9

***** BB01
STMT00019 (IL   ???...  ???)
N006 (  4,  4)              [000062] -A-XG---R---              *  ASG       ref    <l:$19c, c:$19b>
N005 (  1,  1)              [000061] D------N----              +--*  LCL_VAR   ref    V03 loc1         d:2 <l:$199, c:$159>
N004 (  4,  4)              [000320] ---XG-------              \--*  IND       ref    <l:$19c, c:$19b>
N003 (  2,  2)              [000474] -------N----                 \--*  ADD       byref  $20b
N001 (  1,  1)              [000319] ------------                    +--*  LCL_VAR   ref    V32 tmp21        u:2 (last use) $156
N002 (  1,  1)              [000473] ------------                    \--*  CNS_INT   long   40 field offset Fseq[<FileName>k__BackingField] $1c8

***** BB01
STMT00021 (IL   ???...  ???)
N016 ( 32, 30)              [000069] -ACXG---R---              *  ASG       int    $28c
N015 (  1,  1)              [000068] D------N----              +--*  LCL_VAR   int    V04 loc2         d:2 $28c
N014 ( 32, 30)              [000329] --CXG-------              \--*  GE        int    $28c
N012 ( 27, 28)              [000340] --CXG-------                 +--*  CALL      int    System.String.IndexOf $308
N005 (  1,  1)              [000339] ------------ arg4 out+20     |  +--*  CNS_INT   int    5 $47
N007 (  3,  3)              [000338] ---X-------- arg3 in r9      |  +--*  ARR_LENGTH int    <l:$28b, c:$28a>
N006 (  1,  1)              [000337] ------------                 |  |  \--*  LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
N009 (  4, 12)              [000476] #---G------- arg1 in rdx     |  +--*  IND       ref    $19f
N008 (  2, 10)              [000475] H-----------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E "dotnet.exe" $112
N010 (  1,  1)              [000063] ------------ this in rcx     |  +--*  LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
N011 (  1,  1)              [000336] ------------ arg2 in r8      |  \--*  CNS_INT   int    0 $40
N013 (  1,  1)              [000328] ------------                 \--*  CNS_INT   int    0 $40

***** BB01
STMT00023 (IL   ???...  ???)
N015 ( 26, 20)              [000075] -ACXG---R---              *  ASG       ref    <l:$1aa, c:$1a9>
N014 (  1,  1)              [000074] D------N----              +--*  LCL_VAR   ref    V05 loc3         d:2 <l:$1a8, c:$161>
N013 ( 26, 20)              [000494] -ACXG-------              \--*  COMMA     ref    <l:$1aa, c:$1a9>
N003 ( 14,  5)              [000482] -ACXG---R---                 +--*  ASG       ref    $15e
N002 (  1,  1)              [000481] D------N----                 |  +--*  LCL_VAR   ref    V41 tmp30        d:2 $15e
N001 ( 14,  5)              [000070] --CXG-------                 |  \--*  CALL      ref    System.Environment.GetCommandLineArgs $15e
N012 ( 12, 15)              [000493] ---XG-------                 \--*  COMMA     ref    <l:$1aa, c:$1a9>
N007 (  8, 11)              [000487] ---X--------                    +--*  ARR_BOUNDS_CHECK_Rng void   $1a5
N004 (  1,  1)              [000072] ------------                    |  +--*  CNS_INT   int    0 $40
N006 (  3,  3)              [000486] ---X--------                    |  \--*  ARR_LENGTH int    $28d
N005 (  1,  1)              [000483] ------------                    |     \--*  LCL_VAR   ref    V41 tmp30        u:2 $15e
N011 (  4,  4)              [000073] a---G-------                    \--*  IND       ref    <l:$1a8, c:$161>
N010 (  2,  2)              [000492] -------N----                       \--*  ADD       byref  $400
N008 (  1,  1)              [000484] ------------                          +--*  LCL_VAR   ref    V41 tmp30        u:2 (last use) $15e
N009 (  1,  1)              [000491] ------------                          \--*  CNS_INT   long   16 Fseq[#FirstElem] $1c7

***** BB01
STMT00024 (IL 0x068...0x06E)
N007 ( 23, 21)              [000079] -ACXG---R---              *  ASG       ref    $164
N006 (  1,  1)              [000078] D------N----              +--*  LCL_VAR   ref    V06 loc4         d:2 $164
N005 ( 23, 21)              [000077] --CXG-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator $164
N003 (  1,  1)              [000076] ------------ this in rcx     +--*  LCL_VAR   ref    V00 arg0         u:1 (last use) $80
N004 (  2, 10)              [000495] H----------- arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $114

------------ BB02 [070..072) -> BB13 (cond), preds={BB01} succs={BB03,BB13}

***** BB02
STMT00119 (IL 0x0E9...  ???)
N008 ( 27, 25)              [000578] --CXG-------              *  JTRUE     void  
N007 ( 25, 23)              [000571] J-CXG--N----              \--*  EQ        int    $28e
N005 ( 23, 21)              [000572] --CXG-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext $30a
N003 (  1,  1)              [000575] ------------ this in rcx     |  +--*  LCL_VAR   ref    V06 loc4         u:2 $164
N004 (  2, 10)              [000576] H----------- arg1 in r11     |  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
N006 (  1,  1)              [000577] ------------                 \--*  CNS_INT   int    0 $40

------------ BB03 [072..08B) -> BB05 (cond), preds={BB02,BB10} succs={BB04,BB05}

***** BB03
STMT00026 (IL 0x072...0x079)
N007 ( 23, 21)              [000088] -ACXG---R---              *  ASG       ref    $442
N006 (  1,  1)              [000087] D------N----              +--*  LCL_VAR   ref    V07 loc5         d:2 $442
N005 ( 23, 21)              [000086] --CXG-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current $442
N003 (  1,  1)              [000085] ------------ this in rcx     +--*  LCL_VAR   ref    V06 loc4         u:2 $164
N004 (  2, 10)              [000498] H----------- arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $116

***** BB03
STMT00027 (IL 0x07B...0x089)
N005 ( 16, 16)              [000092] -AC-----R---              *  ASG       ref    $1ab
N004 (  1,  1)              [000091] D------N----              +--*  LCL_VAR   ref    V16 tmp5         d:2 $1ab
N003 ( 16, 16)              [000090] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1ab
N002 (  2, 10)              [000089] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $117

***** BB03
STMT00092 (IL 0x080...  ???)
N006 (  6,  6)              [000347] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4)              [000346] D--XG--N----              +--*  IND       ref    $199
N003 (  2,  2)              [000503] -------N----              |  \--*  ADD       byref  $20d
N001 (  1,  1)              [000096] ------------              |     +--*  LCL_VAR   ref    V16 tmp5         u:2 $1ab
N002 (  1,  1)              [000502] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_fileName] $1c4
N005 (  1,  1)              [000097] ------------              \--*  LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>

***** BB03
STMT00031 (IL   ???...0x089)
N003 (  1,  3)              [000105] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1)              [000104] D------N----              +--*  LCL_VAR   ref    V17 tmp6         d:2 $1ab
N001 (  1,  1)              [000095] ------------              \--*  LCL_VAR   ref    V16 tmp5         u:2 $1ab

***** BB03
STMT00032 (IL   ???...  ???)
N003 (  1,  3)              [000108] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1)              [000107] D------N----              +--*  LCL_VAR   ref    V18 tmp7         d:2 $1ab
N001 (  1,  1)              [000099] ------------              \--*  LCL_VAR   ref    V17 tmp6         u:2 (last use) $1ab

***** BB03
STMT00030 (IL 0x087...  ???)
N004 (  5,  5)              [000103] ------------              *  JTRUE     void  
N003 (  3,  3)              [000102] J------N----              \--*  NE        int    $28f
N001 (  1,  1)              [000100] ------------                 +--*  LCL_VAR   int    V04 loc2         u:2 $28c
N002 (  1,  1)              [000101] ------------                 \--*  CNS_INT   int    0 $40

------------ BB04 [08B..08F) -> BB06 (always), preds={BB03} succs={BB06}

***** BB04
STMT00053 (IL   ???...0x08D)
N003 (  1,  3)              [000203] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1)              [000202] D------N----              +--*  LCL_VAR   ref    V19 tmp8         d:4 $1ab
N001 (  1,  1)              [000110] ------------              \--*  LCL_VAR   ref    V18 tmp7         u:2 (last use) $1ab

***** BB04
STMT00054 (IL   ???...  ???)
N003 (  1,  3)              [000206] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1)              [000205] D------N----              +--*  LCL_VAR   ref    V20 tmp9         d:4 $1ab
N001 (  1,  1)              [000111] ------------              \--*  LCL_VAR   ref    V19 tmp8         u:4 (last use) $1ab

***** BB04
STMT00055 (IL   ???...  ???)
N003 (  1,  3)              [000209] -A------R---              *  ASG       ref    $442
N002 (  1,  1)              [000208] D------N----              +--*  LCL_VAR   ref    V21 tmp10        d:4 $442
N001 (  1,  1)              [000201] ------------              \--*  LCL_VAR   ref    V07 loc5         u:2 (last use) $442

------------ BB05 [08F..09C), preds={BB03} succs={BB06}

***** BB05
STMT00033 (IL   ???...0x097)
N003 (  1,  3)              [000119] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1)              [000118] D------N----              +--*  LCL_VAR   ref    V19 tmp8         d:3 $1ab
N001 (  1,  1)              [000112] ------------              \--*  LCL_VAR   ref    V18 tmp7         u:2 (last use) $1ab

***** BB05
STMT00034 (IL   ???...  ???)
N003 (  1,  3)              [000122] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1)              [000121] D------N----              +--*  LCL_VAR   ref    V20 tmp9         d:3 $1ab
N001 (  1,  1)              [000113] ------------              \--*  LCL_VAR   ref    V19 tmp8         u:3 (last use) $1ab

***** BB05
STMT00035 (IL   ???...  ???)
N010 ( 20, 22)              [000125] -ACXG---R---              *  ASG       ref    $44e
N009 (  1,  1)              [000124] D------N----              +--*  LCL_VAR   ref    V21 tmp10        d:3 $44e
N008 ( 20, 22)              [000117] --CXG-------              \--*  CALL      ref    System.String.Concat $44e
N005 (  4, 12)              [000505] #---G------- arg1 in rdx     +--*  IND       ref    $1ae
N004 (  2, 10)              [000504] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E " " $119
N006 (  1,  1)              [000114] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V05 loc3         u:2 <l:$1a8, c:$161>
N007 (  1,  1)              [000116] ------------ arg2 in r8      \--*  LCL_VAR   ref    V07 loc5         u:2 (last use) $442

------------ BB06 [09C..0BB) -> BB09 (cond), preds={BB04,BB05} succs={BB07,BB09}

***** BB06
STMT00125 (IL   ???...  ???)
N005 (  0,  0)              [000596] -A------R---              *  ASG       ref   
N004 (  0,  0)              [000594] D------N----              +--*  LCL_VAR   ref    V21 tmp10        d:2
N003 (  0,  0)              [000595] ------------              \--*  PHI       ref   
N001 (  0,  0)              [000606] ------------ pred BB04       +--*  PHI_ARG   ref    V21 tmp10        u:4 $442
N002 (  0,  0)              [000603] ------------ pred BB05       \--*  PHI_ARG   ref    V21 tmp10        u:3 $44e

***** BB06
STMT00124 (IL   ???...  ???)
N005 (  0,  0)              [000593] -A------R---              *  ASG       ref   
N004 (  0,  0)              [000591] D------N----              +--*  LCL_VAR   ref    V20 tmp9         d:2
N003 (  0,  0)              [000592] ------------              \--*  PHI       ref   
N001 (  0,  0)              [000607] ------------ pred BB04       +--*  PHI_ARG   ref    V20 tmp9         u:4 $1ab
N002 (  0,  0)              [000604] ------------ pred BB05       \--*  PHI_ARG   ref    V20 tmp9         u:3 $1ab

***** BB06
STMT00123 (IL   ???...  ???)
N005 (  0,  0)              [000590] -A------R---              *  ASG       ref   
N004 (  0,  0)              [000588] D------N----              +--*  LCL_VAR   ref    V19 tmp8         d:2
N003 (  0,  0)              [000589] ------------              \--*  PHI       ref   
N001 (  0,  0)              [000608] ------------ pred BB04       +--*  PHI_ARG   ref    V19 tmp8         u:4 $1ab
N002 (  0,  0)              [000605] ------------ pred BB05       \--*  PHI_ARG   ref    V19 tmp8         u:3 $1ab

***** BB06
STMT00093 (IL   ???...  ???)
N006 (  6,  6)              [000350] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4)              [000349] D--XG--N----              +--*  IND       ref    $251
N003 (  2,  2)              [000510] -------N----              |  \--*  ADD       byref  $20e
N001 (  1,  1)              [000128] ------------              |     +--*  LCL_VAR   ref    V20 tmp9         u:2 (last use) $1ab
N002 (  1,  1)              [000509] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_arguments] $1c7
N005 (  1,  1)              [000129] ------------              \--*  LCL_VAR   ref    V21 tmp10        u:2 (last use) $251

***** BB06
STMT00094 (IL 0x0A1...  ???)
N006 (  7, 10)              [000355] -A-XG-------              *  ASG       bool   $VN.Void
N004 (  5,  8)              [000354] D--XG--N----              +--*  IND       bool   $40
N003 (  2,  5)              [000512] -------N----              |  \--*  ADD       byref  $20f
N001 (  1,  1)              [000131] ------------              |     +--*  LCL_VAR   ref    V19 tmp8         u:2 $1ab
N002 (  1,  4)              [000511] ------------              |     \--*  CNS_INT   long   130 field offset Fseq[<UseShellExecute>k__BackingField] $1cb
N005 (  1,  1)              [000353] ------------              \--*  CNS_INT   int    0 $40

***** BB06
STMT00040 (IL 0x0AA...0x0B9)
N006 (  4,  4)              [000145] -A-XG---R---              *  ASG       ref    <l:$1bc, c:$1bb>
N005 (  1,  1)              [000144] D------N----              +--*  LCL_VAR   ref    V23 tmp12        d:2 <l:$1b9, c:$454>
N004 (  4,  4)              [000138] ---XG-------              \--*  IND       ref    <l:$1bc, c:$1bb>
N003 (  2,  2)              [000514] -------N----                 \--*  ADD       byref  $207
N001 (  1,  1)              [000137] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1)              [000513] ------------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers] $1c4

***** BB06
STMT00039 (IL 0x0AA...  ???)
N006 (  4,  4)              [000143] -A-XG---R---              *  ASG       ref    <l:$542, c:$541>
N005 (  1,  1)              [000142] D------N----              +--*  LCL_VAR   ref    V22 tmp11        d:2 <l:$540, c:$456>
N004 (  4,  4)              [000141] ---XG-------              \--*  IND       ref    <l:$542, c:$541>
N003 (  2,  2)              [000516] -------N----                 \--*  ADD       byref  $210
N001 (  1,  1)              [000140] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1)              [000515] ------------                    \--*  CNS_INT   long   48 field offset Fseq[<>9__2] $1cc

***** BB06
STMT00042 (IL   ???...0x0B9)
N003 (  1,  3)              [000153] -A------R---              *  ASG       ref    <l:$1b9, c:$454>
N002 (  1,  1)              [000152] D------N----              +--*  LCL_VAR   ref    V24 tmp13        d:2 <l:$1b9, c:$454>
N001 (  1,  1)              [000146] ------------              \--*  LCL_VAR   ref    V23 tmp12        u:2 (last use) <l:$1b9, c:$454>

***** BB06
STMT00043 (IL   ???...  ???)
N003 (  1,  3)              [000156] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1)              [000155] D------N----              +--*  LCL_VAR   ref    V25 tmp14        d:2 $1ab
N001 (  1,  1)              [000139] ------------              \--*  LCL_VAR   ref    V19 tmp8         u:2 (last use) $1ab

***** BB06
STMT00044 (IL   ???...  ???)
N003 (  1,  3)              [000159] -A------R---              *  ASG       ref    <l:$540, c:$456>
N002 (  1,  1)              [000158] D------N----              +--*  LCL_VAR   ref    V26 tmp15        d:2 <l:$540, c:$456>
N001 (  1,  1)              [000147] ------------              \--*  LCL_VAR   ref    V22 tmp11        u:2 <l:$540, c:$456>

***** BB06
STMT00041 (IL   ???...  ???)
N004 (  5,  5)              [000151] ------------              *  JTRUE     void  
N003 (  3,  3)              [000150] J------N----              \--*  NE        int    <l:$291, c:$290>
N001 (  1,  1)              [000148] ------------                 +--*  LCL_VAR   ref    V26 tmp15        u:2 (last use) <l:$540, c:$456>
N002 (  1,  1)              [000149] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB07 [000..0D3) -> BB12 (cond), preds={BB06} succs={BB08,BB12}

***** BB07
STMT00048 (IL   ???...0x0CA)
N005 ( 16, 16)              [000184] -AC-----R---              *  ASG       ref    $543
N004 (  1,  1)              [000183] D------N----              +--*  LCL_VAR   ref    V28 tmp17        d:2 $543
N003 ( 16, 16)              [000182] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $543
N002 (  2, 10)              [000181] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $11e

***** BB07
STMT00095 (IL   ???...  ???)
N004 (  5,  5)              [000359] ------------              *  JTRUE     void  
N003 (  3,  3)              [000358] J------N----              \--*  EQ        int    $40
N001 (  1,  1)              [000179] ------------                 +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1)              [000357] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB08 [000..000), preds={BB07} succs={BB09}

***** BB08
STMT00096 (IL   ???...  ???)
N006 (  6,  6)              [000362] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4)              [000361] D--XG--N----              +--*  IND       ref    $180
N003 (  2,  2)              [000519] -------N----              |  \--*  ADD       byref  $211
N001 (  1,  1)              [000185] ------------              |     +--*  LCL_VAR   ref    V28 tmp17        u:2 $543
N002 (  1,  1)              [000518] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $1c4
N005 (  1,  1)              [000360] ------------              \--*  LCL_VAR   ref    V02 loc0         u:2 $180

***** BB08
STMT00097 (IL   ???...  ???)
N006 (  7, 15)              [000366] -A-XG-------              *  ASG       long   $VN.Void
N004 (  4,  4)              [000365] D--XG--N----              +--*  IND       long   $120
N003 (  2,  2)              [000521] -------N----              |  \--*  ADD       byref  $212
N001 (  1,  1)              [000363] ------------              |     +--*  LCL_VAR   ref    V28 tmp17        u:2 $543
N002 (  1,  1)              [000520] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $1c5
N005 (  2, 10)              [000180] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $120

***** BB08
STMT00051 (IL   ???...0x0CC)
N006 (  6,  6)              [000192] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4)              [000191] D--XG--N----              +--*  IND       ref    $543
N003 (  2,  2)              [000523] -------N----              |  \--*  ADD       byref  $210
N001 (  1,  1)              [000178] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1)              [000522] ------------              |     \--*  CNS_INT   long   48 field offset Fseq[<>9__2] $1cc
N005 (  1,  1)              [000187] ------------              \--*  LCL_VAR   ref    V28 tmp17        u:2 $543

***** BB08
STMT00052 (IL   ???...0x0D1)
N003 (  1,  3)              [000199] -A------R---              *  ASG       ref    $543
N002 (  1,  1)              [000198] D------N----              +--*  LCL_VAR   ref    V26 tmp15        d:4 $543
N001 (  1,  1)              [000193] ------------              \--*  LCL_VAR   ref    V28 tmp17        u:2 (last use) $543

------------ BB09 [000..0E9) -> BB12 (cond), preds={BB06,BB08} succs={BB10,BB12}

***** BB09
STMT00122 (IL   ???...  ???)
N005 (  0,  0)              [000587] -A------R---              *  ASG       ref   
N004 (  0,  0)              [000585] D------N----              +--*  LCL_VAR   ref    V26 tmp15        d:3
N003 (  0,  0)              [000586] ------------              \--*  PHI       ref   
N001 (  0,  0)              [000602] ------------ pred BB08       +--*  PHI_ARG   ref    V26 tmp15        u:4 $543
N002 (  0,  0)              [000601] ------------ pred BB06       \--*  PHI_ARG   ref    V26 tmp15        u:2 <l:$540, c:$456>

***** BB09
STMT00045 (IL   ???...0x0E4)
N005 ( 16, 16)              [000172] -AC-----R---              *  ASG       ref    $54b
N004 (  1,  1)              [000171] D------N----              +--*  LCL_VAR   ref    V27 tmp16        d:2 $54b
N003 ( 16, 16)              [000170] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $54b
N002 (  2, 10)              [000169] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $123

***** BB09
STMT00099 (IL   ???...  ???)
N004 (  5,  5)              [000371] ------------              *  JTRUE     void  
N003 (  3,  3)              [000370] J------N----              \--*  EQ        int    $40
N001 (  1,  1)              [000167] ------------                 +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1)              [000369] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB10 [000..0F2) -> BB03 (cond), preds={BB09} succs={BB11,BB03}

***** BB10
STMT00100 (IL   ???...  ???)
N006 (  6,  6)              [000374] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4)              [000373] D--XG--N----              +--*  IND       ref    $180
N003 (  2,  2)              [000526] -------N----              |  \--*  ADD       byref  $213
N001 (  1,  1)              [000173] ------------              |     +--*  LCL_VAR   ref    V27 tmp16        u:2 $54b
N002 (  1,  1)              [000525] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $1c4
N005 (  1,  1)              [000372] ------------              \--*  LCL_VAR   ref    V02 loc0         u:2 $180

***** BB10
STMT00101 (IL   ???...  ???)
N006 (  7, 15)              [000378] -A-XG-------              *  ASG       long   $VN.Void
N004 (  4,  4)              [000377] D--XG--N----              +--*  IND       long   $125
N003 (  2,  2)              [000528] -------N----              |  \--*  ADD       byref  $214
N001 (  1,  1)              [000375] ------------              |     +--*  LCL_VAR   ref    V27 tmp16        u:2 $54b
N002 (  1,  1)              [000527] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $1c5
N005 (  2, 10)              [000168] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $125

***** BB10
STMT00047 (IL 0x0DF...  ???)
N013 ( 36, 21)              [000177] --CXG-------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue $VN.Void
N010 ( 17, 11)              [000533] -ACXG---R-L- arg1 SETUP   +--*  ASG       ref    $464
N009 (  1,  1)              [000532] D------N----              |  +--*  LCL_VAR   ref    V42 tmp31        d:2 $464
N008 ( 17, 11)              [000176] --CXG-------              |  \--*  CALL      ref    SolutionAnalyzer.IPC.CreateSession $464
N005 (  1,  1)              [000165] ------------ arg0 in rcx  |     +--*  LCL_VAR   ref    V25 tmp14        u:2 (last use) $1ab
N006 (  1,  1)              [000166] ------------ arg1 in rdx  |     +--*  LCL_VAR   ref    V26 tmp15        u:3 (last use) $258
N007 (  1,  1)              [000175] ------------ arg2 in r8   |     \--*  LCL_VAR   ref    V27 tmp16        u:2 (last use) $54b
N011 (  1,  1)              [000534] ------------ arg1 in rdx  +--*  LCL_VAR   ref    V42 tmp31        u:2 (last use) $464
N012 (  1,  1)              [000164] ------------ this in rcx  \--*  LCL_VAR   ref    V24 tmp13        u:2 (last use) <l:$1b9, c:$454>

***** BB10
STMT00025 (IL 0x0E9...0x0F0)
N008 ( 27, 25)              [000084] --CXG-------              *  JTRUE     void  
N007 ( 25, 23)              [000083] J-CXG--N----              \--*  NE        int    $292
N005 ( 23, 21)              [000081] --CXG-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext $5c0
N003 (  1,  1)              [000080] ------------ this in rcx     |  +--*  LCL_VAR   ref    V06 loc4         u:2 $164
N004 (  2, 10)              [000536] H----------- arg1 in r11     |  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
N006 (  1,  1)              [000082] ------------                 \--*  CNS_INT   int    0 $40

------------ BB11 [???..???) -> BB13 (always), preds={BB10} succs={BB13}

------------ BB12 [000..000) (throw), preds={BB07,BB09} succs={}

***** BB12
STMT00102 (IL   ???...  ???)
N001 ( 14,  5)              [000379] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance $VN.Void

------------ BB13 [0F4..0F8) -> BB15 (cond), preds={BB02,BB11} succs={BB14,BB15}

***** BB13
STMT00116 (IL   ???...  ???)
N004 (  5,  5)              [000431] ------------              *  JTRUE     void  
N003 (  3,  3)              [000432] J------N----              \--*  EQ        int    $293
N001 (  1,  1)              [000433] ------------                 +--*  LCL_VAR   ref    V06 loc4         u:2 $164
N002 (  1,  1)              [000434] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB14 [0F8..100), preds={BB13} succs={BB15}

***** BB14
STMT00117 (IL   ???...  ???)
N005 ( 23, 21)              [000435] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose $VN.Void
N003 (  1,  1)              [000436] ------------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         u:2 (last use) $164
N004 (  2, 10)              [000539] H----------- arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127

------------ BB15 [100..127) -> BB17 (always), preds={BB13,BB14} succs={BB17}

***** BB15
STMT00103 (IL 0x100...  ???)
N006 (  4,  4)              [000384] -A-XG---R---              *  ASG       ref    <l:$569, c:$568>
N005 (  1,  1)              [000383] D------N----              +--*  LCL_VAR   ref    V35 tmp24        d:2 <l:$567, c:$16e>
N004 (  4,  4)              [000213] ---XG-------              \--*  IND       ref    <l:$569, c:$568>
N003 (  2,  2)              [000546] -------N----                 \--*  ADD       byref  $207
N001 (  1,  1)              [000212] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1)              [000545] ------------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers] $1c4

***** BB15
STMT00057 (IL   ???...  ???)
N009 (  9,  9)              [000217] -A-XG---R---              *  ASG       int    $VN.Void
N008 (  4,  4)              [000216] D--XG--N----              +--*  IND       int    $299
N007 (  2,  2)              [000548] -------N----              |  \--*  ADD       byref  $201
N005 (  1,  1)              [000211] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N006 (  1,  1)              [000547] ------------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1
N004 (  4,  4) CSE #01 (def)[000382] ---XG-------              \--*  IND       int    <l:$29b, c:$29a>
N003 (  2,  2)              [000550] -------N----                 \--*  ADD       byref  <l:$216, c:$215>
N001 (  1,  1)              [000381] ------------                    +--*  LCL_VAR   ref    V35 tmp24        u:2 (last use) <l:$567, c:$16e>
N002 (  1,  1)              [000549] ------------                    \--*  CNS_INT   long   24 field offset Fseq[_size] $1c5

***** BB15
STMT00058 (IL 0x111...0x11D)
N005 ( 16, 16)              [000224] -AC-----R---              *  ASG       ref    $56c
N004 (  1,  1)              [000223] D------N----              +--*  LCL_VAR   ref    V29 tmp18        d:2 $56c
N003 ( 16, 16)              [000222] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $56c
N002 (  2, 10)              [000221] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $12b

***** BB15
STMT00109 (IL   ???...  ???)
N006 (  4,  4)              [000402] -A-XG---R---              *  ASG       int    <l:$2a3, c:$2a2>
N005 (  1,  1)              [000401] D------N----              +--*  LCL_VAR   int    V37 tmp26        d:2 <l:$299, c:$30c>
N004 (  4,  4)              [000220] ---XG-------              \--*  IND       int    <l:$2a3, c:$2a2>
N003 (  2,  2)              [000553] -------N----                 \--*  ADD       byref  $201
N001 (  1,  1)              [000219] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1)              [000552] ------------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1

***** BB15
STMT00104 (IL   ???...  ???)
N005 ( 16, 16)              [000389] -AC-----R---              *  ASG       ref    $56d
N004 (  1,  1)              [000388] D------N----              +--*  LCL_VAR   ref    V36 tmp25        d:2 $56d
N003 ( 16, 16)              [000387] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $56d
N002 (  2, 10)              [000386] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $12c

***** BB15
STMT00110 (IL   ???...  ???)
N007 ( 17, 12)              [000406] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor $VN.Void
N004 (  1,  1)              [000390] ------------ this in rcx  +--*  LCL_VAR   ref    V36 tmp25        u:2 $56d
N005 (  1,  1)              [000404] ------------ arg1 in rdx  +--*  CNS_INT   int    0 $40
N006 (  1,  1)              [000405] ------------ arg2 in r8   \--*  CNS_INT   ref    null $VN.Null

***** BB15
STMT00106 (IL   ???...  ???)
N006 (  6,  6)              [000394] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4)              [000393] D--XG--N----              +--*  IND       ref    $56d
N003 (  2,  2)              [000559] -------N----              |  \--*  ADD       byref  $217
N001 (  1,  1)              [000225] ------------              |     +--*  LCL_VAR   ref    V29 tmp18        u:2 $56c
N002 (  1,  1)              [000558] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_workItems] $1c4
N005 (  1,  1)              [000392] ------------              \--*  LCL_VAR   ref    V36 tmp25        u:2 (last use) $56d

***** BB15
STMT00108 (IL   ???...  ???)
N006 (  6,  6)              [000400] -A-XG-------              *  ASG       int    $VN.Void
N004 (  4,  4)              [000399] D--XG--N----              +--*  IND       int    $299
N003 (  2,  2)              [000561] -------N----              |  \--*  ADD       byref  $218
N001 (  1,  1)              [000397] ------------              |     +--*  LCL_VAR   ref    V29 tmp18        u:2 $56c
N002 (  1,  1)              [000560] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_workItemsToComplete] $1c7
N005 (  1,  1)              [000398] ------------              \--*  LCL_VAR   int    V37 tmp26        u:2 (last use) <l:$299, c:$30c>

***** BB15
STMT00060 (IL 0x11D...  ???)
N006 (  6,  6)              [000229] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4)              [000228] D--XG--N----              +--*  IND       ref    $56c
N003 (  2,  2)              [000563] -------N----              |  \--*  ADD       byref  $208
N001 (  1,  1)              [000218] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1)              [000562] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter] $1c7
N005 (  1,  1)              [000227] ------------              \--*  LCL_VAR   ref    V29 tmp18        u:2 (last use) $56c

***** BB15
STMT00061 (IL 0x122...0x123)
N003 (  1,  3)              [000232] -A------R---              *  ASG       int    $40
N002 (  1,  1)              [000231] D------N----              +--*  LCL_VAR   int    V10 loc8         d:2 $40
N001 (  1,  1)              [000230] ------------              \--*  CNS_INT   int    0 $40

------------ BB16 [127..133), preds={BB20} succs={BB17}

***** BB16
STMT00065 (IL 0x127...0x131)
N003 ( 15,  8)              [000243] --CXG-------              *  CALL nullcheck void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0 $VN.Void
N002 (  1,  1)              [000242] ------------ this in rcx  \--*  LCL_VAR   ref    V02 loc0         u:2 $180

***** BB16
STMT00066 (IL 0x12D...  ???)
N005 (  3,  3)              [000248] -A------R---              *  ASG       int    $2ad
N004 (  1,  1)              [000247] D------N----              +--*  LCL_VAR   int    V10 loc8         d:4 $2ad
N003 (  3,  3)              [000246] ------------              \--*  ADD       int    $2ad
N001 (  1,  1)              [000244] ------------                 +--*  LCL_VAR   int    V10 loc8         u:3 (last use) $2ca
N002 (  1,  1)              [000245] ------------                 \--*  CNS_INT   int    1 $41

------------ BB17 [000..147) -> BB19 (cond), preds={BB15,BB16} succs={BB18,BB19}

***** BB17
STMT00120 (IL   ???...  ???)
N005 (  0,  0)              [000581] -A------R---              *  ASG       int   
N004 (  0,  0)              [000579] D------N----              +--*  LCL_VAR   int    V10 loc8         d:3
N003 (  0,  0)              [000580] ------------              \--*  PHI       int   
N001 (  0,  0)              [000598] ------------ pred BB16       +--*  PHI_ARG   int    V10 loc8         u:4
N002 (  0,  0)              [000597] ------------ pred BB15       \--*  PHI_ARG   int    V10 loc8         u:2 $40

***** BB17
STMT00114 (IL   ???...  ???)
N006 (  4,  4)              [000424] -A-XG---R---              *  ASG       int    <l:$2a9, c:$2a8>
N005 (  1,  1)              [000423] D------N----              +--*  LCL_VAR   int    V39 tmp28        d:2 <l:$2a7, c:$680>
N004 (  4,  4)              [000237] ---XG-------              \--*  IND       int    <l:$2a9, c:$2a8>
N003 (  2,  2)              [000566] -------N----                 \--*  ADD       byref  $201
N001 (  1,  1)              [000236] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1)              [000565] ------------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1

***** BB17
STMT00111 (IL   ???...  ???)
N004 (  5,  5)              [000414] ------------              *  JTRUE     void  
N003 (  3,  3)              [000413] J------N----              \--*  GE        int    <l:$2ab, c:$2aa>
N001 (  1,  1)              [000412] ------------                 +--*  LCL_VAR   int    V39 tmp28        u:2 <l:$2a7, c:$680>
N002 (  1,  1)              [000411] ------------                 \--*  CNS_INT   int    8 $57

------------ BB18 [000..000) -> BB20 (always), preds={BB17} succs={BB20}

***** BB18
STMT00113 (IL   ???...  ???)
N003 (  1,  3)              [000421] -A------R---              *  ASG       int    <l:$2a7, c:$680>
N002 (  1,  1)              [000420] D------N----              +--*  LCL_VAR   int    V38 tmp27        d:4 <l:$2a7, c:$680>
N001 (  1,  1)              [000419] ------------              \--*  LCL_VAR   int    V39 tmp28        u:2 (last use) <l:$2a7, c:$680>

------------ BB19 [000..000), preds={BB17} succs={BB20}

***** BB19
STMT00112 (IL   ???...  ???)
N003 (  1,  3)              [000417] -A------R---              *  ASG       int    $57
N002 (  1,  1)              [000416] D------N----              +--*  LCL_VAR   int    V38 tmp27        d:3 $57
N001 (  1,  1)              [000415] ------------              \--*  CNS_INT   int    8 $57

------------ BB20 [???..???) -> BB16 (cond), preds={BB18,BB19} succs={BB21,BB16}

***** BB20
STMT00121 (IL   ???...  ???)
N005 (  0,  0)              [000584] -A------R---              *  ASG       int   
N004 (  0,  0)              [000582] D------N----              +--*  LCL_VAR   int    V38 tmp27        d:2
N003 (  0,  0)              [000583] ------------              \--*  PHI       int   
N001 (  0,  0)              [000600] ------------ pred BB18       +--*  PHI_ARG   int    V38 tmp27        u:4 <l:$2a7, c:$680>
N002 (  0,  0)              [000599] ------------ pred BB19       \--*  PHI_ARG   int    V38 tmp27        u:3 $57

***** BB20
STMT00064 (IL   ???...  ???)
N004 (  5,  5)              [000241] ------------              *  JTRUE     void  
N003 (  3,  3)              [000240] J------N----              \--*  LT        int    $2ac
N001 (  1,  1)              [000233] ------------                 +--*  LCL_VAR   int    V10 loc8         u:3 $2ca
N002 (  1,  1)              [000422] ------------                 \--*  LCL_VAR   int    V38 tmp27        u:2 (last use) $2cb

------------ BB21 [147..153) (return), preds={BB20} succs={}

***** BB21
STMT00115 (IL 0x147...  ???)
N006 (  4,  4)              [000429] -A-XG---R---              *  ASG       ref    <l:$575, c:$574>
N005 (  1,  1)              [000428] D------N----              +--*  LCL_VAR   ref    V40 tmp29        d:2 <l:$573, c:$177>
N004 (  4,  4)              [000250] ---XG-------              \--*  IND       ref    <l:$575, c:$574>
N003 (  2,  2)              [000568] -------N----                 \--*  ADD       byref  $205
N001 (  1,  1)              [000249] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 (last use) $180
N002 (  1,  1)              [000567] ------------                    \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun] $1c5

***** BB21
STMT00068 (IL   ???...  ???)
N005 (  5,  5)              [000253] ---XG-------              *  RETURN    ref    $17a
N004 (  4,  4)              [000427] ---XG-------              \--*  IND       ref    <l:$57b, c:$57a>
N003 (  2,  2)              [000570] -------N----                 \--*  ADD       byref  <l:$21a, c:$219>
N001 (  1,  1)              [000426] ------------                    +--*  LCL_VAR   ref    V40 tmp29        u:2 (last use) <l:$573, c:$177>
N002 (  1,  1)              [000569] ------------                    \--*  CNS_INT   long   8 field offset Fseq[_task] $1c4

------------ BB22 [0F4..0F8) -> BB24 (cond), preds={} succs={BB23,BB24}

***** BB22
STMT00069 (IL 0x0F4...0x0F6)
N004 (  5,  5)              [000257] ------------              *  JTRUE     void  
N003 (  3,  3)              [000256] J------N----              \--*  EQ        int    $293
N001 (  1,  1)              [000254] ------------                 +--*  LCL_VAR   ref    V06 loc4         u:2 $164
N002 (  1,  1)              [000255] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB23 [0F8..0FF), preds={BB22} succs={BB24}

***** BB23
STMT00071 (IL 0x0F8...0x0FA)
N005 ( 23, 21)              [000260] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose $VN.Void
N003 (  1,  1)              [000259] ------------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         u:2 (last use) $164
N004 (  2, 10)              [000542] H----------- arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127

------------ BB24 [0FF..100) (finret), preds={BB22,BB23} succs={}

***** BB24
STMT00070 (IL 0x0FF...0x0FF)
N001 (  0,  0)              [000258] ------------              *  RETFILT   void   $600

-------------------------------------------------------------------------------------------------------------------


Aggressive CSE Promotion cutoff is 1100.000000
Moderate CSE Promotion cutoff is 250.000000
enregCount is 39
Framesize estimate is 0x0084
We have a large frame

Sorted CSE candidates:
CSE #01, {$299, $4  } useCnt=0: [def=100.000000, use=0.000000, cost=  4, call]
        :: N004 (  4,  4) CSE #01 (def)[000382] ---XG-------              *  IND       int    <l:$29b, c:$29a>

Skipped CSE #01 because use count is 0

*************** Finishing PHASE Optimize Valnum CSEs

*************** Starting PHASE Assertion prop
*************** In optAssertionPropMain()
Blocks/Trees at start of phase

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB13 ( cond ) T0      try {       keep i try label hascall gcsafe 
BB03 [0002]  2  0    BB02,BB10             4     0 [072..08B)-> BB05 ( cond ) T0                  i Loop label target hascall gcsafe newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  2     0 [08B..08F)-> BB06 (always) T0                  i gcsafe bwd 
BB05 [0004]  1  0    BB03                  2     0 [08F..09C)                 T0                  i label target hascall gcsafe bwd 
BB06 [0005]  2  0    BB04,BB05             4     0 [09C..0BB)-> BB09 ( cond ) T0                  i label target gcsafe bwd 
BB07 [0006]  1  0    BB06                  2     0 [000..0D3)-> BB12 ( cond ) T0                  i hascall gcsafe newobj bwd 
BB08 [0041]  1  0    BB07                  2     0 [000..000)                 T0                  i internal label target gcsafe newobj bwd 
BB09 [0007]  2  0    BB06,BB08             4     0 [000..0E9)-> BB12 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB10 [0045]  1  0    BB09                  4     0 [000..0F2)-> BB03 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB11 [0061]  1  0    BB10                  0.50    [???..???)-> BB13 (always) T0                  internal gcsafe 
BB12 [0044]  2  0    BB07,BB09             0       [000..000)        (throw ) T0      }           i internal rare label target hascall gcsafe bwd 
BB13 [0057]  2       BB02,BB11             1       [0F4..0F8)-> BB15 ( cond )                     keep i label target gcsafe cfb 
BB14 [0058]  1       BB13                  0.50    [0F8..100)                                     i hascall gcsafe 
BB15 [0013]  2       BB13,BB14             1       [100..127)-> BB17 (always)                     i label target hascall gcsafe newobj 
BB16 [0014]  1       BB20                  2     1 [127..133)                                     i Loop label target hascall gcsafe bwd bwd-target 
BB17 [0015]  2       BB15,BB16             8     1 [000..147)-> BB19 ( cond )                     i label target gcsafe bwd 
BB18 [0053]  1       BB17                  2     1 [000..000)-> BB20 (always)                     i internal gcsafe bwd 
BB19 [0054]  1       BB17                  2     1 [000..000)                                     i internal label target gcsafe bwd 
BB20 [0055]  2       BB18,BB19             8     1 [???..???)-> BB16 ( cond )                     internal label target gcsafe bwd 
BB21 [0016]  1       BB20                  1       [147..153)        (return)                     i gcsafe 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB22 [0010]  1     0                       0       [0F4..0F8)-> BB24 ( cond )    H0 F fault {     keep i rare label target flet 
BB23 [0011]  1     0 BB22                  0       [0F8..0FF)                    H0               i rare hascall gcsafe 
BB24 [0012]  2     0 BB22,BB23             0       [0FF..100)        (finret)    H0   }           i rare label target 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..070), preds={} succs={BB02}

***** BB01
STMT00000 (IL 0x000...0x005)
N005 ( 16, 16) [000003] -AC-----R---              *  ASG       ref    $180
N004 (  1,  1) [000002] D------N----              +--*  LCL_VAR   ref    V12 tmp1         d:2 $180
N003 ( 16, 16) [000001] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $180
N002 (  2, 10) [000000] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $100

***** BB01
STMT00002 (IL 0x005...  ???)
N003 (  1,  3) [000008] -A------R---              *  ASG       ref    $180
N002 (  1,  1) [000007] D------N----              +--*  LCL_VAR   ref    V02 loc0         d:2 $180
N001 (  1,  1) [000006] ------------              \--*  LCL_VAR   ref    V12 tmp1         u:2 $180

***** BB01
STMT00003 (IL 0x006...0x008)
N006 (  6,  6) [000012] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000011] D--XG--N----              +--*  IND       ref    $81
N003 (  2,  2) [000440] -------N----              |  \--*  ADD       byref  $200
N001 (  1,  1) [000009] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000439] ------------              |     \--*  CNS_INT   long   32 field offset Fseq[outputFile] $1c0
N005 (  1,  1) [000010] ------------              \--*  LCL_VAR   ref    V01 arg1         u:1 (last use) $81

***** BB01
STMT00004 (IL 0x00D...0x00F)
N006 (  6,  6) [000016] -A-XG-------              *  ASG       int    $VN.Void
N004 (  4,  4) [000015] D--XG--N----              +--*  IND       int    $40
N003 (  2,  2) [000442] -------N----              |  \--*  ADD       byref  $201
N001 (  1,  1) [000013] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000441] ------------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1
N005 (  1,  1) [000014] ------------              \--*  CNS_INT   int    0 $40

***** BB01
STMT00005 (IL 0x014...0x016)
N006 (  6,  6) [000020] -A-XG-------              *  ASG       int    $VN.Void
N004 (  4,  4) [000019] D--XG--N----              +--*  IND       int    $40
N003 (  2,  2) [000444] -------N----              |  \--*  ADD       byref  $202
N001 (  1,  1) [000017] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000443] ------------              |     \--*  CNS_INT   long   56 field offset Fseq[analyzersFinishedCount] $1c2
N005 (  1,  1) [000018] ------------              \--*  CNS_INT   int    0 $40

***** BB01
STMT00006 (IL 0x01B...0x021)
N005 ( 16, 16) [000025] -AC-----R---              *  ASG       ref    $183
N004 (  1,  1) [000024] D------N----              +--*  LCL_VAR   ref    V13 tmp2         d:2 $183
N003 ( 16, 16) [000023] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $183
N002 (  2, 10) [000022] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $104

***** BB01
STMT00074 (IL   ???...  ???)
N005 ( 16, 16) [000269] -AC-----R---              *  ASG       ref    $184
N004 (  1,  1) [000268] D------N----              +--*  LCL_VAR   ref    V30 tmp19        d:2 $184
N003 ( 16, 16) [000267] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $184
N002 (  2, 10) [000266] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $105

***** BB01
STMT00079 (IL   ???...  ???)
N006 (  6,  9) [000283] -A-XGO------              *  ASG       int    $VN.Void
N004 (  4,  4) [000282] V--XGO-N----              +--*  IND       int    $43
N003 (  2,  2) [000448] -------N----              |  \--*  ADD       byref  $203
N001 (  1,  1) [000280] ------------              |     +--*  LCL_VAR   ref    V30 tmp19        u:2 $184
N002 (  1,  1) [000447] ------------              |     \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags] $1c3
N005 (  1,  4) [000281] ------------              \--*  CNS_INT   int    0x2000400 $43

***** BB01
STMT00076 (IL   ???...  ???)
N006 (  6,  6) [000274] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000273] D--XG--N----              +--*  IND       ref    $184
N003 (  2,  2) [000450] -------N----              |  \--*  ADD       byref  $204
N001 (  1,  1) [000265] ------------              |     +--*  LCL_VAR   ref    V13 tmp2         u:2 $183
N002 (  1,  1) [000449] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_task] $1c4
N005 (  1,  1) [000272] ------------              \--*  LCL_VAR   ref    V30 tmp19        u:2 (last use) $184

***** BB01
STMT00008 (IL 0x021...  ???)
N006 (  6,  6) [000030] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000029] D--XG--N----              +--*  IND       ref    $183
N003 (  2,  2) [000452] -------N----              |  \--*  ADD       byref  $205
N001 (  1,  1) [000021] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000451] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun] $1c5
N005 (  1,  1) [000028] ------------              \--*  LCL_VAR   ref    V13 tmp2         u:2 (last use) $183

***** BB01
STMT00009 (IL 0x026...0x02C)
N005 ( 16, 16) [000035] -AC-----R---              *  ASG       ref    $189
N004 (  1,  1) [000034] D------N----              +--*  LCL_VAR   ref    V14 tmp3         d:2 $189
N003 ( 16, 16) [000033] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $189
N002 (  2, 10) [000032] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $109

***** BB01
STMT00082 (IL   ???...  ???)
N013 ( 26, 35) [000292] -ACXG---R---              *  ASG       ref    $VN.Void
N012 (  4,  4) [000291] D--XG--N----              +--*  IND       ref    $246
N011 (  2,  2) [000455] -------N----              |  \--*  ADD       byref  $206
N009 (  1,  1) [000287] ------------              |     +--*  LCL_VAR   ref    V14 tmp3         u:2 $189
N010 (  1,  1) [000454] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_array] $1c4
N008 ( 21, 30) [000300] --CXG-------              \--*  COMMA     ref    <l:$18c, c:$18b>
N005 ( 17, 18) [000299] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS $381
N003 (  2, 10) [000297] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e0b0028 $1c6
N004 (  1,  1) [000298] ------------ arg1 in rdx     |  \--*  CNS_INT   int    14 $44
N007 (  4, 12) [000295] n---G-------                 \--*  IND       ref    <l:$246, c:$14b>
N006 (  2, 10) [000458] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[Value] $10a

***** BB01
STMT00011 (IL 0x02C...  ???)
N006 (  6,  6) [000040] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000039] D--XG--N----              +--*  IND       ref    $189
N003 (  2,  2) [000460] -------N----              |  \--*  ADD       byref  $207
N001 (  1,  1) [000031] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000459] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers] $1c4
N005 (  1,  1) [000038] ------------              \--*  LCL_VAR   ref    V14 tmp3         u:2 (last use) $189

***** BB01
STMT00012 (IL 0x031...0x033)
N006 (  6,  6) [000044] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000043] D--XG--N----              +--*  IND       ref    $VN.Null
N003 (  2,  2) [000462] -------N----              |  \--*  ADD       byref  $208
N001 (  1,  1) [000041] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000461] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter] $1c7
N005 (  1,  1) [000042] ------------              \--*  CNS_INT   ref    null $VN.Null

***** BB01
STMT00013 (IL 0x038...0x03E)
N005 ( 16, 16) [000049] -AC-----R---              *  ASG       ref    $193
N004 (  1,  1) [000048] D------N----              +--*  LCL_VAR   ref    V15 tmp4         d:2 $193
N003 ( 16, 16) [000047] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $193
N002 (  2, 10) [000046] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $10e

***** BB01
STMT00083 (IL   ???...  ???)
N005 ( 16, 10) [000303] --CXG-------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor $VN.Void
N003 (  1,  1) [000050] ------------ this in rcx  +--*  LCL_VAR   ref    V15 tmp4         u:2 $193
N004 (  1,  1) [000302] ------------ arg1 in rdx  \--*  CNS_INT   ref    null $VN.Null

***** BB01
STMT00015 (IL 0x03E...  ???)
N006 (  6,  6) [000054] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000053] D--XG--N----              +--*  IND       ref    $193
N003 (  2,  2) [000467] -------N----              |  \--*  ADD       byref  $209
N001 (  1,  1) [000045] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 (last use) $180
N002 (  1,  1) [000466] ------------              |     \--*  CNS_INT   long   40 field offset Fseq[output] $1c8
N005 (  1,  1) [000052] ------------              \--*  LCL_VAR   ref    V15 tmp4         u:2 (last use) $193

***** BB01
STMT00086 (IL   ???...  ???)
N003 ( 14,  5) [000316] -ACXG---R---              *  ASG       ref    $151
N002 (  1,  1) [000315] D------N----              +--*  LCL_VAR   ref    V31 tmp20        d:2 $151
N001 ( 14,  5) [000055] --CXG-------              \--*  CALL      ref    System.Diagnostics.Process.GetCurrentProcess $151

***** BB01
STMT00087 (IL   ???...  ???)
N002 (  2,  2) [000314] ---X--------              *  NULLCHECK byte   $197
N001 (  1,  1) [000313] ------------              \--*  LCL_VAR   ref    V31 tmp20        u:2 $151

***** BB01
STMT00084 (IL   ???...  ???)
N005 ( 16, 10) [000308] --CXG-------              *  CALL      void   System.Diagnostics.Process.EnsureState $VN.Void
N003 (  1,  1) [000306] ------------ this in rcx  +--*  LCL_VAR   ref    V31 tmp20        u:2 $151
N004 (  1,  1) [000307] ------------ arg1 in rdx  \--*  CNS_INT   int    3 $46

***** BB01
STMT00088 (IL   ???...  ???)
N008 ( 18, 13) [000322] -ACXG---R---              *  ASG       ref    $156
N007 (  1,  1) [000321] D------N----              +--*  LCL_VAR   ref    V32 tmp21        d:2 $156
N006 ( 18, 13) [000311] --CXG-------              \--*  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule $156
N005 (  4,  7) [000310] ---XG------- arg0 in rcx     \--*  IND       int    <l:$289, c:$288>
N004 (  2,  5) [000471] -------N----                    \--*  ADD       byref  $20a
N002 (  1,  1) [000309] ------------                       +--*  LCL_VAR   ref    V31 tmp20        u:2 (last use) $151
N003 (  1,  4) [000470] ------------                       \--*  CNS_INT   long   200 field offset Fseq[_processId] $1c9

***** BB01
STMT00019 (IL   ???...  ???)
N006 (  4,  4) [000062] -A-XG---R---              *  ASG       ref    <l:$19c, c:$19b>
N005 (  1,  1) [000061] D------N----              +--*  LCL_VAR   ref    V03 loc1         d:2 <l:$199, c:$159>
N004 (  4,  4) [000320] ---XG-------              \--*  IND       ref    <l:$19c, c:$19b>
N003 (  2,  2) [000474] -------N----                 \--*  ADD       byref  $20b
N001 (  1,  1) [000319] ------------                    +--*  LCL_VAR   ref    V32 tmp21        u:2 (last use) $156
N002 (  1,  1) [000473] ------------                    \--*  CNS_INT   long   40 field offset Fseq[<FileName>k__BackingField] $1c8

***** BB01
STMT00021 (IL   ???...  ???)
N016 ( 32, 30) [000069] -ACXG---R---              *  ASG       int    $28c
N015 (  1,  1) [000068] D------N----              +--*  LCL_VAR   int    V04 loc2         d:2 $28c
N014 ( 32, 30) [000329] --CXG-------              \--*  GE        int    $28c
N012 ( 27, 28) [000340] --CXG-------                 +--*  CALL      int    System.String.IndexOf $308
N005 (  1,  1) [000339] ------------ arg4 out+20     |  +--*  CNS_INT   int    5 $47
N007 (  3,  3) [000338] ---X-------- arg3 in r9      |  +--*  ARR_LENGTH int    <l:$28b, c:$28a>
N006 (  1,  1) [000337] ------------                 |  |  \--*  LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
N009 (  4, 12) [000476] #---G------- arg1 in rdx     |  +--*  IND       ref    $19f
N008 (  2, 10) [000475] H-----------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E "dotnet.exe" $112
N010 (  1,  1) [000063] ------------ this in rcx     |  +--*  LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
N011 (  1,  1) [000336] ------------ arg2 in r8      |  \--*  CNS_INT   int    0 $40
N013 (  1,  1) [000328] ------------                 \--*  CNS_INT   int    0 $40

***** BB01
STMT00023 (IL   ???...  ???)
N015 ( 26, 20) [000075] -ACXG---R---              *  ASG       ref    <l:$1aa, c:$1a9>
N014 (  1,  1) [000074] D------N----              +--*  LCL_VAR   ref    V05 loc3         d:2 <l:$1a8, c:$161>
N013 ( 26, 20) [000494] -ACXG-------              \--*  COMMA     ref    <l:$1aa, c:$1a9>
N003 ( 14,  5) [000482] -ACXG---R---                 +--*  ASG       ref    $15e
N002 (  1,  1) [000481] D------N----                 |  +--*  LCL_VAR   ref    V41 tmp30        d:2 $15e
N001 ( 14,  5) [000070] --CXG-------                 |  \--*  CALL      ref    System.Environment.GetCommandLineArgs $15e
N012 ( 12, 15) [000493] ---XG-------                 \--*  COMMA     ref    <l:$1aa, c:$1a9>
N007 (  8, 11) [000487] ---X--------                    +--*  ARR_BOUNDS_CHECK_Rng void   $1a5
N004 (  1,  1) [000072] ------------                    |  +--*  CNS_INT   int    0 $40
N006 (  3,  3) [000486] ---X--------                    |  \--*  ARR_LENGTH int    $28d
N005 (  1,  1) [000483] ------------                    |     \--*  LCL_VAR   ref    V41 tmp30        u:2 $15e
N011 (  4,  4) [000073] a---G-------                    \--*  IND       ref    <l:$1a8, c:$161>
N010 (  2,  2) [000492] -------N----                       \--*  ADD       byref  $400
N008 (  1,  1) [000484] ------------                          +--*  LCL_VAR   ref    V41 tmp30        u:2 (last use) $15e
N009 (  1,  1) [000491] ------------                          \--*  CNS_INT   long   16 Fseq[#FirstElem] $1c7

***** BB01
STMT00024 (IL 0x068...0x06E)
N007 ( 23, 21) [000079] -ACXG---R---              *  ASG       ref    $164
N006 (  1,  1) [000078] D------N----              +--*  LCL_VAR   ref    V06 loc4         d:2 $164
N005 ( 23, 21) [000077] --CXG-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator $164
N003 (  1,  1) [000076] ------------ this in rcx     +--*  LCL_VAR   ref    V00 arg0         u:1 (last use) $80
N004 (  2, 10) [000495] H----------- arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $114

------------ BB02 [070..072) -> BB13 (cond), preds={BB01} succs={BB03,BB13}

***** BB02
STMT00119 (IL 0x0E9...  ???)
N008 ( 27, 25) [000578] --CXG-------              *  JTRUE     void  
N007 ( 25, 23) [000571] J-CXG--N----              \--*  EQ        int    $28e
N005 ( 23, 21) [000572] --CXG-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext $30a
N003 (  1,  1) [000575] ------------ this in rcx     |  +--*  LCL_VAR   ref    V06 loc4         u:2 $164
N004 (  2, 10) [000576] H----------- arg1 in r11     |  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
N006 (  1,  1) [000577] ------------                 \--*  CNS_INT   int    0 $40

------------ BB03 [072..08B) -> BB05 (cond), preds={BB02,BB10} succs={BB04,BB05}

***** BB03
STMT00026 (IL 0x072...0x079)
N007 ( 23, 21) [000088] -ACXG---R---              *  ASG       ref    $442
N006 (  1,  1) [000087] D------N----              +--*  LCL_VAR   ref    V07 loc5         d:2 $442
N005 ( 23, 21) [000086] --CXG-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current $442
N003 (  1,  1) [000085] ------------ this in rcx     +--*  LCL_VAR   ref    V06 loc4         u:2 $164
N004 (  2, 10) [000498] H----------- arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $116

***** BB03
STMT00027 (IL 0x07B...0x089)
N005 ( 16, 16) [000092] -AC-----R---              *  ASG       ref    $1ab
N004 (  1,  1) [000091] D------N----              +--*  LCL_VAR   ref    V16 tmp5         d:2 $1ab
N003 ( 16, 16) [000090] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1ab
N002 (  2, 10) [000089] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $117

***** BB03
STMT00092 (IL 0x080...  ???)
N006 (  6,  6) [000347] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000346] D--XG--N----              +--*  IND       ref    $199
N003 (  2,  2) [000503] -------N----              |  \--*  ADD       byref  $20d
N001 (  1,  1) [000096] ------------              |     +--*  LCL_VAR   ref    V16 tmp5         u:2 $1ab
N002 (  1,  1) [000502] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_fileName] $1c4
N005 (  1,  1) [000097] ------------              \--*  LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>

***** BB03
STMT00031 (IL   ???...0x089)
N003 (  1,  3) [000105] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000104] D------N----              +--*  LCL_VAR   ref    V17 tmp6         d:2 $1ab
N001 (  1,  1) [000095] ------------              \--*  LCL_VAR   ref    V16 tmp5         u:2 $1ab

***** BB03
STMT00032 (IL   ???...  ???)
N003 (  1,  3) [000108] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000107] D------N----              +--*  LCL_VAR   ref    V18 tmp7         d:2 $1ab
N001 (  1,  1) [000099] ------------              \--*  LCL_VAR   ref    V17 tmp6         u:2 (last use) $1ab

***** BB03
STMT00030 (IL 0x087...  ???)
N004 (  5,  5) [000103] ------------              *  JTRUE     void  
N003 (  3,  3) [000102] J------N----              \--*  NE        int    $28f
N001 (  1,  1) [000100] ------------                 +--*  LCL_VAR   int    V04 loc2         u:2 $28c
N002 (  1,  1) [000101] ------------                 \--*  CNS_INT   int    0 $40

------------ BB04 [08B..08F) -> BB06 (always), preds={BB03} succs={BB06}

***** BB04
STMT00053 (IL   ???...0x08D)
N003 (  1,  3) [000203] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000202] D------N----              +--*  LCL_VAR   ref    V19 tmp8         d:4 $1ab
N001 (  1,  1) [000110] ------------              \--*  LCL_VAR   ref    V18 tmp7         u:2 (last use) $1ab

***** BB04
STMT00054 (IL   ???...  ???)
N003 (  1,  3) [000206] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000205] D------N----              +--*  LCL_VAR   ref    V20 tmp9         d:4 $1ab
N001 (  1,  1) [000111] ------------              \--*  LCL_VAR   ref    V19 tmp8         u:4 (last use) $1ab

***** BB04
STMT00055 (IL   ???...  ???)
N003 (  1,  3) [000209] -A------R---              *  ASG       ref    $442
N002 (  1,  1) [000208] D------N----              +--*  LCL_VAR   ref    V21 tmp10        d:4 $442
N001 (  1,  1) [000201] ------------              \--*  LCL_VAR   ref    V07 loc5         u:2 (last use) $442

------------ BB05 [08F..09C), preds={BB03} succs={BB06}

***** BB05
STMT00033 (IL   ???...0x097)
N003 (  1,  3) [000119] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000118] D------N----              +--*  LCL_VAR   ref    V19 tmp8         d:3 $1ab
N001 (  1,  1) [000112] ------------              \--*  LCL_VAR   ref    V18 tmp7         u:2 (last use) $1ab

***** BB05
STMT00034 (IL   ???...  ???)
N003 (  1,  3) [000122] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000121] D------N----              +--*  LCL_VAR   ref    V20 tmp9         d:3 $1ab
N001 (  1,  1) [000113] ------------              \--*  LCL_VAR   ref    V19 tmp8         u:3 (last use) $1ab

***** BB05
STMT00035 (IL   ???...  ???)
N010 ( 20, 22) [000125] -ACXG---R---              *  ASG       ref    $44e
N009 (  1,  1) [000124] D------N----              +--*  LCL_VAR   ref    V21 tmp10        d:3 $44e
N008 ( 20, 22) [000117] --CXG-------              \--*  CALL      ref    System.String.Concat $44e
N005 (  4, 12) [000505] #---G------- arg1 in rdx     +--*  IND       ref    $1ae
N004 (  2, 10) [000504] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E " " $119
N006 (  1,  1) [000114] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V05 loc3         u:2 <l:$1a8, c:$161>
N007 (  1,  1) [000116] ------------ arg2 in r8      \--*  LCL_VAR   ref    V07 loc5         u:2 (last use) $442

------------ BB06 [09C..0BB) -> BB09 (cond), preds={BB04,BB05} succs={BB07,BB09}

***** BB06
STMT00125 (IL   ???...  ???)
N005 (  0,  0) [000596] -A------R---              *  ASG       ref   
N004 (  0,  0) [000594] D------N----              +--*  LCL_VAR   ref    V21 tmp10        d:2
N003 (  0,  0) [000595] ------------              \--*  PHI       ref   
N001 (  0,  0) [000606] ------------ pred BB04       +--*  PHI_ARG   ref    V21 tmp10        u:4 $442
N002 (  0,  0) [000603] ------------ pred BB05       \--*  PHI_ARG   ref    V21 tmp10        u:3 $44e

***** BB06
STMT00124 (IL   ???...  ???)
N005 (  0,  0) [000593] -A------R---              *  ASG       ref   
N004 (  0,  0) [000591] D------N----              +--*  LCL_VAR   ref    V20 tmp9         d:2
N003 (  0,  0) [000592] ------------              \--*  PHI       ref   
N001 (  0,  0) [000607] ------------ pred BB04       +--*  PHI_ARG   ref    V20 tmp9         u:4 $1ab
N002 (  0,  0) [000604] ------------ pred BB05       \--*  PHI_ARG   ref    V20 tmp9         u:3 $1ab

***** BB06
STMT00123 (IL   ???...  ???)
N005 (  0,  0) [000590] -A------R---              *  ASG       ref   
N004 (  0,  0) [000588] D------N----              +--*  LCL_VAR   ref    V19 tmp8         d:2
N003 (  0,  0) [000589] ------------              \--*  PHI       ref   
N001 (  0,  0) [000608] ------------ pred BB04       +--*  PHI_ARG   ref    V19 tmp8         u:4 $1ab
N002 (  0,  0) [000605] ------------ pred BB05       \--*  PHI_ARG   ref    V19 tmp8         u:3 $1ab

***** BB06
STMT00093 (IL   ???...  ???)
N006 (  6,  6) [000350] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000349] D--XG--N----              +--*  IND       ref    $251
N003 (  2,  2) [000510] -------N----              |  \--*  ADD       byref  $20e
N001 (  1,  1) [000128] ------------              |     +--*  LCL_VAR   ref    V20 tmp9         u:2 (last use) $1ab
N002 (  1,  1) [000509] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_arguments] $1c7
N005 (  1,  1) [000129] ------------              \--*  LCL_VAR   ref    V21 tmp10        u:2 (last use) $251

***** BB06
STMT00094 (IL 0x0A1...  ???)
N006 (  7, 10) [000355] -A-XG-------              *  ASG       bool   $VN.Void
N004 (  5,  8) [000354] D--XG--N----              +--*  IND       bool   $40
N003 (  2,  5) [000512] -------N----              |  \--*  ADD       byref  $20f
N001 (  1,  1) [000131] ------------              |     +--*  LCL_VAR   ref    V19 tmp8         u:2 $1ab
N002 (  1,  4) [000511] ------------              |     \--*  CNS_INT   long   130 field offset Fseq[<UseShellExecute>k__BackingField] $1cb
N005 (  1,  1) [000353] ------------              \--*  CNS_INT   int    0 $40

***** BB06
STMT00040 (IL 0x0AA...0x0B9)
N006 (  4,  4) [000145] -A-XG---R---              *  ASG       ref    <l:$1bc, c:$1bb>
N005 (  1,  1) [000144] D------N----              +--*  LCL_VAR   ref    V23 tmp12        d:2 <l:$1b9, c:$454>
N004 (  4,  4) [000138] ---XG-------              \--*  IND       ref    <l:$1bc, c:$1bb>
N003 (  2,  2) [000514] -------N----                 \--*  ADD       byref  $207
N001 (  1,  1) [000137] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000513] ------------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers] $1c4

***** BB06
STMT00039 (IL 0x0AA...  ???)
N006 (  4,  4) [000143] -A-XG---R---              *  ASG       ref    <l:$542, c:$541>
N005 (  1,  1) [000142] D------N----              +--*  LCL_VAR   ref    V22 tmp11        d:2 <l:$540, c:$456>
N004 (  4,  4) [000141] ---XG-------              \--*  IND       ref    <l:$542, c:$541>
N003 (  2,  2) [000516] -------N----                 \--*  ADD       byref  $210
N001 (  1,  1) [000140] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000515] ------------                    \--*  CNS_INT   long   48 field offset Fseq[<>9__2] $1cc

***** BB06
STMT00042 (IL   ???...0x0B9)
N003 (  1,  3) [000153] -A------R---              *  ASG       ref    <l:$1b9, c:$454>
N002 (  1,  1) [000152] D------N----              +--*  LCL_VAR   ref    V24 tmp13        d:2 <l:$1b9, c:$454>
N001 (  1,  1) [000146] ------------              \--*  LCL_VAR   ref    V23 tmp12        u:2 (last use) <l:$1b9, c:$454>

***** BB06
STMT00043 (IL   ???...  ???)
N003 (  1,  3) [000156] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000155] D------N----              +--*  LCL_VAR   ref    V25 tmp14        d:2 $1ab
N001 (  1,  1) [000139] ------------              \--*  LCL_VAR   ref    V19 tmp8         u:2 (last use) $1ab

***** BB06
STMT00044 (IL   ???...  ???)
N003 (  1,  3) [000159] -A------R---              *  ASG       ref    <l:$540, c:$456>
N002 (  1,  1) [000158] D------N----              +--*  LCL_VAR   ref    V26 tmp15        d:2 <l:$540, c:$456>
N001 (  1,  1) [000147] ------------              \--*  LCL_VAR   ref    V22 tmp11        u:2 <l:$540, c:$456>

***** BB06
STMT00041 (IL   ???...  ???)
N004 (  5,  5) [000151] ------------              *  JTRUE     void  
N003 (  3,  3) [000150] J------N----              \--*  NE        int    <l:$291, c:$290>
N001 (  1,  1) [000148] ------------                 +--*  LCL_VAR   ref    V26 tmp15        u:2 (last use) <l:$540, c:$456>
N002 (  1,  1) [000149] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB07 [000..0D3) -> BB12 (cond), preds={BB06} succs={BB08,BB12}

***** BB07
STMT00048 (IL   ???...0x0CA)
N005 ( 16, 16) [000184] -AC-----R---              *  ASG       ref    $543
N004 (  1,  1) [000183] D------N----              +--*  LCL_VAR   ref    V28 tmp17        d:2 $543
N003 ( 16, 16) [000182] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $543
N002 (  2, 10) [000181] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $11e

***** BB07
STMT00095 (IL   ???...  ???)
N004 (  5,  5) [000359] ------------              *  JTRUE     void  
N003 (  3,  3) [000358] J------N----              \--*  EQ        int    $40
N001 (  1,  1) [000179] ------------                 +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000357] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB08 [000..000), preds={BB07} succs={BB09}

***** BB08
STMT00096 (IL   ???...  ???)
N006 (  6,  6) [000362] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000361] D--XG--N----              +--*  IND       ref    $180
N003 (  2,  2) [000519] -------N----              |  \--*  ADD       byref  $211
N001 (  1,  1) [000185] ------------              |     +--*  LCL_VAR   ref    V28 tmp17        u:2 $543
N002 (  1,  1) [000518] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $1c4
N005 (  1,  1) [000360] ------------              \--*  LCL_VAR   ref    V02 loc0         u:2 $180

***** BB08
STMT00097 (IL   ???...  ???)
N006 (  7, 15) [000366] -A-XG-------              *  ASG       long   $VN.Void
N004 (  4,  4) [000365] D--XG--N----              +--*  IND       long   $120
N003 (  2,  2) [000521] -------N----              |  \--*  ADD       byref  $212
N001 (  1,  1) [000363] ------------              |     +--*  LCL_VAR   ref    V28 tmp17        u:2 $543
N002 (  1,  1) [000520] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $1c5
N005 (  2, 10) [000180] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $120

***** BB08
STMT00051 (IL   ???...0x0CC)
N006 (  6,  6) [000192] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000191] D--XG--N----              +--*  IND       ref    $543
N003 (  2,  2) [000523] -------N----              |  \--*  ADD       byref  $210
N001 (  1,  1) [000178] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000522] ------------              |     \--*  CNS_INT   long   48 field offset Fseq[<>9__2] $1cc
N005 (  1,  1) [000187] ------------              \--*  LCL_VAR   ref    V28 tmp17        u:2 $543

***** BB08
STMT00052 (IL   ???...0x0D1)
N003 (  1,  3) [000199] -A------R---              *  ASG       ref    $543
N002 (  1,  1) [000198] D------N----              +--*  LCL_VAR   ref    V26 tmp15        d:4 $543
N001 (  1,  1) [000193] ------------              \--*  LCL_VAR   ref    V28 tmp17        u:2 (last use) $543

------------ BB09 [000..0E9) -> BB12 (cond), preds={BB06,BB08} succs={BB10,BB12}

***** BB09
STMT00122 (IL   ???...  ???)
N005 (  0,  0) [000587] -A------R---              *  ASG       ref   
N004 (  0,  0) [000585] D------N----              +--*  LCL_VAR   ref    V26 tmp15        d:3
N003 (  0,  0) [000586] ------------              \--*  PHI       ref   
N001 (  0,  0) [000602] ------------ pred BB08       +--*  PHI_ARG   ref    V26 tmp15        u:4 $543
N002 (  0,  0) [000601] ------------ pred BB06       \--*  PHI_ARG   ref    V26 tmp15        u:2 <l:$540, c:$456>

***** BB09
STMT00045 (IL   ???...0x0E4)
N005 ( 16, 16) [000172] -AC-----R---              *  ASG       ref    $54b
N004 (  1,  1) [000171] D------N----              +--*  LCL_VAR   ref    V27 tmp16        d:2 $54b
N003 ( 16, 16) [000170] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $54b
N002 (  2, 10) [000169] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $123

***** BB09
STMT00099 (IL   ???...  ???)
N004 (  5,  5) [000371] ------------              *  JTRUE     void  
N003 (  3,  3) [000370] J------N----              \--*  EQ        int    $40
N001 (  1,  1) [000167] ------------                 +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000369] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB10 [000..0F2) -> BB03 (cond), preds={BB09} succs={BB11,BB03}

***** BB10
STMT00100 (IL   ???...  ???)
N006 (  6,  6) [000374] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000373] D--XG--N----              +--*  IND       ref    $180
N003 (  2,  2) [000526] -------N----              |  \--*  ADD       byref  $213
N001 (  1,  1) [000173] ------------              |     +--*  LCL_VAR   ref    V27 tmp16        u:2 $54b
N002 (  1,  1) [000525] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $1c4
N005 (  1,  1) [000372] ------------              \--*  LCL_VAR   ref    V02 loc0         u:2 $180

***** BB10
STMT00101 (IL   ???...  ???)
N006 (  7, 15) [000378] -A-XG-------              *  ASG       long   $VN.Void
N004 (  4,  4) [000377] D--XG--N----              +--*  IND       long   $125
N003 (  2,  2) [000528] -------N----              |  \--*  ADD       byref  $214
N001 (  1,  1) [000375] ------------              |     +--*  LCL_VAR   ref    V27 tmp16        u:2 $54b
N002 (  1,  1) [000527] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $1c5
N005 (  2, 10) [000168] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $125

***** BB10
STMT00047 (IL 0x0DF...  ???)
N013 ( 36, 21) [000177] --CXG-------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue $VN.Void
N010 ( 17, 11) [000533] -ACXG---R-L- arg1 SETUP   +--*  ASG       ref    $464
N009 (  1,  1) [000532] D------N----              |  +--*  LCL_VAR   ref    V42 tmp31        d:2 $464
N008 ( 17, 11) [000176] --CXG-------              |  \--*  CALL      ref    SolutionAnalyzer.IPC.CreateSession $464
N005 (  1,  1) [000165] ------------ arg0 in rcx  |     +--*  LCL_VAR   ref    V25 tmp14        u:2 (last use) $1ab
N006 (  1,  1) [000166] ------------ arg1 in rdx  |     +--*  LCL_VAR   ref    V26 tmp15        u:3 (last use) $258
N007 (  1,  1) [000175] ------------ arg2 in r8   |     \--*  LCL_VAR   ref    V27 tmp16        u:2 (last use) $54b
N011 (  1,  1) [000534] ------------ arg1 in rdx  +--*  LCL_VAR   ref    V42 tmp31        u:2 (last use) $464
N012 (  1,  1) [000164] ------------ this in rcx  \--*  LCL_VAR   ref    V24 tmp13        u:2 (last use) <l:$1b9, c:$454>

***** BB10
STMT00025 (IL 0x0E9...0x0F0)
N008 ( 27, 25) [000084] --CXG-------              *  JTRUE     void  
N007 ( 25, 23) [000083] J-CXG--N----              \--*  NE        int    $292
N005 ( 23, 21) [000081] --CXG-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext $5c0
N003 (  1,  1) [000080] ------------ this in rcx     |  +--*  LCL_VAR   ref    V06 loc4         u:2 $164
N004 (  2, 10) [000536] H----------- arg1 in r11     |  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
N006 (  1,  1) [000082] ------------                 \--*  CNS_INT   int    0 $40

------------ BB11 [???..???) -> BB13 (always), preds={BB10} succs={BB13}

------------ BB12 [000..000) (throw), preds={BB07,BB09} succs={}

***** BB12
STMT00102 (IL   ???...  ???)
N001 ( 14,  5) [000379] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance $VN.Void

------------ BB13 [0F4..0F8) -> BB15 (cond), preds={BB02,BB11} succs={BB14,BB15}

***** BB13
STMT00116 (IL   ???...  ???)
N004 (  5,  5) [000431] ------------              *  JTRUE     void  
N003 (  3,  3) [000432] J------N----              \--*  EQ        int    $293
N001 (  1,  1) [000433] ------------                 +--*  LCL_VAR   ref    V06 loc4         u:2 $164
N002 (  1,  1) [000434] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB14 [0F8..100), preds={BB13} succs={BB15}

***** BB14
STMT00117 (IL   ???...  ???)
N005 ( 23, 21) [000435] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose $VN.Void
N003 (  1,  1) [000436] ------------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         u:2 (last use) $164
N004 (  2, 10) [000539] H----------- arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127

------------ BB15 [100..127) -> BB17 (always), preds={BB13,BB14} succs={BB17}

***** BB15
STMT00103 (IL 0x100...  ???)
N006 (  4,  4) [000384] -A-XG---R---              *  ASG       ref    <l:$569, c:$568>
N005 (  1,  1) [000383] D------N----              +--*  LCL_VAR   ref    V35 tmp24        d:2 <l:$567, c:$16e>
N004 (  4,  4) [000213] ---XG-------              \--*  IND       ref    <l:$569, c:$568>
N003 (  2,  2) [000546] -------N----                 \--*  ADD       byref  $207
N001 (  1,  1) [000212] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000545] ------------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers] $1c4

***** BB15
STMT00057 (IL   ???...  ???)
N009 (  9,  9) [000217] -A-XG---R---              *  ASG       int    $VN.Void
N008 (  4,  4) [000216] D--XG--N----              +--*  IND       int    $299
N007 (  2,  2) [000548] -------N----              |  \--*  ADD       byref  $201
N005 (  1,  1) [000211] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N006 (  1,  1) [000547] ------------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1
N004 (  4,  4) [000382] ---XG-------              \--*  IND       int    <l:$29b, c:$29a>
N003 (  2,  2) [000550] -------N----                 \--*  ADD       byref  <l:$216, c:$215>
N001 (  1,  1) [000381] ------------                    +--*  LCL_VAR   ref    V35 tmp24        u:2 (last use) <l:$567, c:$16e>
N002 (  1,  1) [000549] ------------                    \--*  CNS_INT   long   24 field offset Fseq[_size] $1c5

***** BB15
STMT00058 (IL 0x111...0x11D)
N005 ( 16, 16) [000224] -AC-----R---              *  ASG       ref    $56c
N004 (  1,  1) [000223] D------N----              +--*  LCL_VAR   ref    V29 tmp18        d:2 $56c
N003 ( 16, 16) [000222] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $56c
N002 (  2, 10) [000221] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $12b

***** BB15
STMT00109 (IL   ???...  ???)
N006 (  4,  4) [000402] -A-XG---R---              *  ASG       int    <l:$2a3, c:$2a2>
N005 (  1,  1) [000401] D------N----              +--*  LCL_VAR   int    V37 tmp26        d:2 <l:$299, c:$30c>
N004 (  4,  4) [000220] ---XG-------              \--*  IND       int    <l:$2a3, c:$2a2>
N003 (  2,  2) [000553] -------N----                 \--*  ADD       byref  $201
N001 (  1,  1) [000219] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000552] ------------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1

***** BB15
STMT00104 (IL   ???...  ???)
N005 ( 16, 16) [000389] -AC-----R---              *  ASG       ref    $56d
N004 (  1,  1) [000388] D------N----              +--*  LCL_VAR   ref    V36 tmp25        d:2 $56d
N003 ( 16, 16) [000387] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $56d
N002 (  2, 10) [000386] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $12c

***** BB15
STMT00110 (IL   ???...  ???)
N007 ( 17, 12) [000406] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor $VN.Void
N004 (  1,  1) [000390] ------------ this in rcx  +--*  LCL_VAR   ref    V36 tmp25        u:2 $56d
N005 (  1,  1) [000404] ------------ arg1 in rdx  +--*  CNS_INT   int    0 $40
N006 (  1,  1) [000405] ------------ arg2 in r8   \--*  CNS_INT   ref    null $VN.Null

***** BB15
STMT00106 (IL   ???...  ???)
N006 (  6,  6) [000394] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000393] D--XG--N----              +--*  IND       ref    $56d
N003 (  2,  2) [000559] -------N----              |  \--*  ADD       byref  $217
N001 (  1,  1) [000225] ------------              |     +--*  LCL_VAR   ref    V29 tmp18        u:2 $56c
N002 (  1,  1) [000558] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_workItems] $1c4
N005 (  1,  1) [000392] ------------              \--*  LCL_VAR   ref    V36 tmp25        u:2 (last use) $56d

***** BB15
STMT00108 (IL   ???...  ???)
N006 (  6,  6) [000400] -A-XG-------              *  ASG       int    $VN.Void
N004 (  4,  4) [000399] D--XG--N----              +--*  IND       int    $299
N003 (  2,  2) [000561] -------N----              |  \--*  ADD       byref  $218
N001 (  1,  1) [000397] ------------              |     +--*  LCL_VAR   ref    V29 tmp18        u:2 $56c
N002 (  1,  1) [000560] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_workItemsToComplete] $1c7
N005 (  1,  1) [000398] ------------              \--*  LCL_VAR   int    V37 tmp26        u:2 (last use) <l:$299, c:$30c>

***** BB15
STMT00060 (IL 0x11D...  ???)
N006 (  6,  6) [000229] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000228] D--XG--N----              +--*  IND       ref    $56c
N003 (  2,  2) [000563] -------N----              |  \--*  ADD       byref  $208
N001 (  1,  1) [000218] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000562] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter] $1c7
N005 (  1,  1) [000227] ------------              \--*  LCL_VAR   ref    V29 tmp18        u:2 (last use) $56c

***** BB15
STMT00061 (IL 0x122...0x123)
N003 (  1,  3) [000232] -A------R---              *  ASG       int    $40
N002 (  1,  1) [000231] D------N----              +--*  LCL_VAR   int    V10 loc8         d:2 $40
N001 (  1,  1) [000230] ------------              \--*  CNS_INT   int    0 $40

------------ BB16 [127..133), preds={BB20} succs={BB17}

***** BB16
STMT00065 (IL 0x127...0x131)
N003 ( 15,  8) [000243] --CXG-------              *  CALL nullcheck void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0 $VN.Void
N002 (  1,  1) [000242] ------------ this in rcx  \--*  LCL_VAR   ref    V02 loc0         u:2 $180

***** BB16
STMT00066 (IL 0x12D...  ???)
N005 (  3,  3) [000248] -A------R---              *  ASG       int    $2ad
N004 (  1,  1) [000247] D------N----              +--*  LCL_VAR   int    V10 loc8         d:4 $2ad
N003 (  3,  3) [000246] ------------              \--*  ADD       int    $2ad
N001 (  1,  1) [000244] ------------                 +--*  LCL_VAR   int    V10 loc8         u:3 (last use) $2ca
N002 (  1,  1) [000245] ------------                 \--*  CNS_INT   int    1 $41

------------ BB17 [000..147) -> BB19 (cond), preds={BB15,BB16} succs={BB18,BB19}

***** BB17
STMT00120 (IL   ???...  ???)
N005 (  0,  0) [000581] -A------R---              *  ASG       int   
N004 (  0,  0) [000579] D------N----              +--*  LCL_VAR   int    V10 loc8         d:3
N003 (  0,  0) [000580] ------------              \--*  PHI       int   
N001 (  0,  0) [000598] ------------ pred BB16       +--*  PHI_ARG   int    V10 loc8         u:4
N002 (  0,  0) [000597] ------------ pred BB15       \--*  PHI_ARG   int    V10 loc8         u:2 $40

***** BB17
STMT00114 (IL   ???...  ???)
N006 (  4,  4) [000424] -A-XG---R---              *  ASG       int    <l:$2a9, c:$2a8>
N005 (  1,  1) [000423] D------N----              +--*  LCL_VAR   int    V39 tmp28        d:2 <l:$2a7, c:$680>
N004 (  4,  4) [000237] ---XG-------              \--*  IND       int    <l:$2a9, c:$2a8>
N003 (  2,  2) [000566] -------N----                 \--*  ADD       byref  $201
N001 (  1,  1) [000236] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000565] ------------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1

***** BB17
STMT00111 (IL   ???...  ???)
N004 (  5,  5) [000414] ------------              *  JTRUE     void  
N003 (  3,  3) [000413] J------N----              \--*  GE        int    <l:$2ab, c:$2aa>
N001 (  1,  1) [000412] ------------                 +--*  LCL_VAR   int    V39 tmp28        u:2 <l:$2a7, c:$680>
N002 (  1,  1) [000411] ------------                 \--*  CNS_INT   int    8 $57

------------ BB18 [000..000) -> BB20 (always), preds={BB17} succs={BB20}

***** BB18
STMT00113 (IL   ???...  ???)
N003 (  1,  3) [000421] -A------R---              *  ASG       int    <l:$2a7, c:$680>
N002 (  1,  1) [000420] D------N----              +--*  LCL_VAR   int    V38 tmp27        d:4 <l:$2a7, c:$680>
N001 (  1,  1) [000419] ------------              \--*  LCL_VAR   int    V39 tmp28        u:2 (last use) <l:$2a7, c:$680>

------------ BB19 [000..000), preds={BB17} succs={BB20}

***** BB19
STMT00112 (IL   ???...  ???)
N003 (  1,  3) [000417] -A------R---              *  ASG       int    $57
N002 (  1,  1) [000416] D------N----              +--*  LCL_VAR   int    V38 tmp27        d:3 $57
N001 (  1,  1) [000415] ------------              \--*  CNS_INT   int    8 $57

------------ BB20 [???..???) -> BB16 (cond), preds={BB18,BB19} succs={BB21,BB16}

***** BB20
STMT00121 (IL   ???...  ???)
N005 (  0,  0) [000584] -A------R---              *  ASG       int   
N004 (  0,  0) [000582] D------N----              +--*  LCL_VAR   int    V38 tmp27        d:2
N003 (  0,  0) [000583] ------------              \--*  PHI       int   
N001 (  0,  0) [000600] ------------ pred BB18       +--*  PHI_ARG   int    V38 tmp27        u:4 <l:$2a7, c:$680>
N002 (  0,  0) [000599] ------------ pred BB19       \--*  PHI_ARG   int    V38 tmp27        u:3 $57

***** BB20
STMT00064 (IL   ???...  ???)
N004 (  5,  5) [000241] ------------              *  JTRUE     void  
N003 (  3,  3) [000240] J------N----              \--*  LT        int    $2ac
N001 (  1,  1) [000233] ------------                 +--*  LCL_VAR   int    V10 loc8         u:3 $2ca
N002 (  1,  1) [000422] ------------                 \--*  LCL_VAR   int    V38 tmp27        u:2 (last use) $2cb

------------ BB21 [147..153) (return), preds={BB20} succs={}

***** BB21
STMT00115 (IL 0x147...  ???)
N006 (  4,  4) [000429] -A-XG---R---              *  ASG       ref    <l:$575, c:$574>
N005 (  1,  1) [000428] D------N----              +--*  LCL_VAR   ref    V40 tmp29        d:2 <l:$573, c:$177>
N004 (  4,  4) [000250] ---XG-------              \--*  IND       ref    <l:$575, c:$574>
N003 (  2,  2) [000568] -------N----                 \--*  ADD       byref  $205
N001 (  1,  1) [000249] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 (last use) $180
N002 (  1,  1) [000567] ------------                    \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun] $1c5

***** BB21
STMT00068 (IL   ???...  ???)
N005 (  5,  5) [000253] ---XG-------              *  RETURN    ref    $17a
N004 (  4,  4) [000427] ---XG-------              \--*  IND       ref    <l:$57b, c:$57a>
N003 (  2,  2) [000570] -------N----                 \--*  ADD       byref  <l:$21a, c:$219>
N001 (  1,  1) [000426] ------------                    +--*  LCL_VAR   ref    V40 tmp29        u:2 (last use) <l:$573, c:$177>
N002 (  1,  1) [000569] ------------                    \--*  CNS_INT   long   8 field offset Fseq[_task] $1c4

------------ BB22 [0F4..0F8) -> BB24 (cond), preds={} succs={BB23,BB24}

***** BB22
STMT00069 (IL 0x0F4...0x0F6)
N004 (  5,  5) [000257] ------------              *  JTRUE     void  
N003 (  3,  3) [000256] J------N----              \--*  EQ        int    $293
N001 (  1,  1) [000254] ------------                 +--*  LCL_VAR   ref    V06 loc4         u:2 $164
N002 (  1,  1) [000255] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB23 [0F8..0FF), preds={BB22} succs={BB24}

***** BB23
STMT00071 (IL 0x0F8...0x0FA)
N005 ( 23, 21) [000260] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose $VN.Void
N003 (  1,  1) [000259] ------------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         u:2 (last use) $164
N004 (  2, 10) [000542] H----------- arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127

------------ BB24 [0FF..100) (finret), preds={BB22,BB23} succs={}

***** BB24
STMT00070 (IL 0x0FF...0x0FF)
N001 (  0,  0) [000258] ------------              *  RETFILT   void   $600

-------------------------------------------------------------------------------------------------------------------

VN based non-null prop in BB01:
N004 (  4,  4) [000011] D--XG--N----              *  IND       ref    $81
optVNAssertionPropCurStmt morphed tree:
N006 (  6,  6) [000012] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000011] n---GO-N----              +--*  IND       ref    $81
N003 (  2,  2) [000440] -------N----              |  \--*  ADD       byref  $200
N001 (  1,  1) [000009] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000439] ------------              |     \--*  CNS_INT   long   32 field offset Fseq[outputFile] $1c0
N005 (  1,  1) [000010] ------------              \--*  LCL_VAR   ref    V01 arg1         u:1 (last use) $81

GenTreeNode creates assertion:
N004 (  4,  4) [000011] n---GO-N----              *  IND       ref    $81
In BB01 New Global Constant Assertion: (384, 0) ($180,$0) V02.02 != null index=#01, mask=0000000000000001

VN based non-null prop in BB01:
N004 (  4,  4) [000015] D--XG--N----              *  IND       int    $40
optVNAssertionPropCurStmt morphed tree:
N006 (  6,  6) [000016] -A--GO------              *  ASG       int    $VN.Void
N004 (  4,  4) [000015] n---GO-N----              +--*  IND       int    $40
N003 (  2,  2) [000442] -------N----              |  \--*  ADD       byref  $201
N001 (  1,  1) [000013] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000441] ------------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1
N005 (  1,  1) [000014] ------------              \--*  CNS_INT   int    0 $40


VN based non-null prop in BB01:
N004 (  4,  4) [000019] D--XG--N----              *  IND       int    $40
optVNAssertionPropCurStmt morphed tree:
N006 (  6,  6) [000020] -A--GO------              *  ASG       int    $VN.Void
N004 (  4,  4) [000019] n---GO-N----              +--*  IND       int    $40
N003 (  2,  2) [000444] -------N----              |  \--*  ADD       byref  $202
N001 (  1,  1) [000017] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000443] ------------              |     \--*  CNS_INT   long   56 field offset Fseq[analyzersFinishedCount] $1c2
N005 (  1,  1) [000018] ------------              \--*  CNS_INT   int    0 $40


VN based non-null prop in BB01:
N004 (  4,  4) [000282] V--XGO-N----              *  IND       int    $43
optVNAssertionPropCurStmt morphed tree:
N006 (  6,  9) [000283] -A--GO------              *  ASG       int    $VN.Void
N004 (  4,  4) [000282] V---GO-N----              +--*  IND       int    $43
N003 (  2,  2) [000448] -------N----              |  \--*  ADD       byref  $203
N001 (  1,  1) [000280] ------------              |     +--*  LCL_VAR   ref    V30 tmp19        u:2 $184
N002 (  1,  1) [000447] ------------              |     \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags] $1c3
N005 (  1,  4) [000281] ------------              \--*  CNS_INT   int    0x2000400 $43

GenTreeNode creates assertion:
N004 (  4,  4) [000282] V---GO-N----              *  IND       int    $43
In BB01 New Global Constant Assertion: (388, 0) ($184,$0) V30.02 != null index=#02, mask=0000000000000002

VN based non-null prop in BB01:
N004 (  4,  4) [000273] D--XG--N----              *  IND       ref    $184
optVNAssertionPropCurStmt morphed tree:
N006 (  6,  6) [000274] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000273] n---GO-N----              +--*  IND       ref    $184
N003 (  2,  2) [000450] -------N----              |  \--*  ADD       byref  $204
N001 (  1,  1) [000265] ------------              |     +--*  LCL_VAR   ref    V13 tmp2         u:2 $183
N002 (  1,  1) [000449] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_task] $1c4
N005 (  1,  1) [000272] ------------              \--*  LCL_VAR   ref    V30 tmp19        u:2 (last use) $184

GenTreeNode creates assertion:
N004 (  4,  4) [000273] n---GO-N----              *  IND       ref    $184
In BB01 New Global Constant Assertion: (387, 0) ($183,$0) V13.02 != null index=#03, mask=0000000000000004

VN based non-null prop in BB01:
N004 (  4,  4) [000029] D--XG--N----              *  IND       ref    $183
optVNAssertionPropCurStmt morphed tree:
N006 (  6,  6) [000030] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000029] n---GO-N----              +--*  IND       ref    $183
N003 (  2,  2) [000452] -------N----              |  \--*  ADD       byref  $205
N001 (  1,  1) [000021] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000451] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun] $1c5
N005 (  1,  1) [000028] ------------              \--*  LCL_VAR   ref    V13 tmp2         u:2 (last use) $183


VN based non-null prop in BB01:
N012 (  4,  4) [000291] D--XG--N----              *  IND       ref    $246
ReMorphing args for 299.CALL:
argSlots=2, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32
ArgTable for 299.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 297.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 298.CNS_INT int (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]

optVNAssertionPropCurStmt morphed tree:
N013 ( 26, 35) [000292] -ACXGO--R---              *  ASG       ref    $VN.Void
N012 (  4,  4) [000291] n---GO-N----              +--*  IND       ref    $246
N011 (  2,  2) [000455] -------N----              |  \--*  ADD       byref  $206
N009 (  1,  1) [000287] ------------              |     +--*  LCL_VAR   ref    V14 tmp3         u:2 $189
N010 (  1,  1) [000454] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_array] $1c4
N008 ( 21, 30) [000300] --CXG-------              \--*  COMMA     ref    <l:$18c, c:$18b>
N005 ( 17, 18) [000299] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS $381
N003 (  2, 10) [000297] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e0b0028 $1c6
N004 (  1,  1) [000298] ------------ arg1 in rdx     |  \--*  CNS_INT   int    14 $44
N007 (  4, 12) [000295] n---G-------                 \--*  IND       ref    <l:$246, c:$14b>
N006 (  2, 10) [000458] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[Value] $10a

GenTreeNode creates assertion:
N012 (  4,  4) [000291] n---GO-N----              *  IND       ref    $246
In BB01 New Global Constant Assertion: (393, 0) ($189,$0) V14.02 != null index=#04, mask=0000000000000008

VN based non-null prop in BB01:
N004 (  4,  4) [000039] D--XG--N----              *  IND       ref    $189
optVNAssertionPropCurStmt morphed tree:
N006 (  6,  6) [000040] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000039] n---GO-N----              +--*  IND       ref    $189
N003 (  2,  2) [000460] -------N----              |  \--*  ADD       byref  $207
N001 (  1,  1) [000031] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000459] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers] $1c4
N005 (  1,  1) [000038] ------------              \--*  LCL_VAR   ref    V14 tmp3         u:2 (last use) $189


VN based non-null prop in BB01:
N004 (  4,  4) [000043] D--XG--N----              *  IND       ref    $VN.Null
optVNAssertionPropCurStmt morphed tree:
N006 (  6,  6) [000044] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000043] n---GO-N----              +--*  IND       ref    $VN.Null
N003 (  2,  2) [000462] -------N----              |  \--*  ADD       byref  $208
N001 (  1,  1) [000041] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000461] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter] $1c7
N005 (  1,  1) [000042] ------------              \--*  CNS_INT   ref    null $VN.Null


VN based non-null prop in BB01:
N004 (  4,  4) [000053] D--XG--N----              *  IND       ref    $193
optVNAssertionPropCurStmt morphed tree:
N006 (  6,  6) [000054] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000053] n---GO-N----              +--*  IND       ref    $193
N003 (  2,  2) [000467] -------N----              |  \--*  ADD       byref  $209
N001 (  1,  1) [000045] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 (last use) $180
N002 (  1,  1) [000466] ------------              |     \--*  CNS_INT   long   40 field offset Fseq[output] $1c8
N005 (  1,  1) [000052] ------------              \--*  LCL_VAR   ref    V15 tmp4         u:2 (last use) $193

GenTreeNode creates assertion:
N002 (  2,  2) [000314] ---X--------              *  NULLCHECK byte   $197
In BB01 New Global Constant Assertion: (337, 0) ($151,$0) V31.02 != null index=#05, mask=0000000000000010
GenTreeNode creates assertion:
N004 (  4,  4) [000320] ---XG-------              *  IND       ref    <l:$19c, c:$19b>
In BB01 New Global Constant Assertion: (342, 0) ($156,$0) V32.02 != null index=#06, mask=0000000000000020
GenTreeNode creates assertion:
N007 (  3,  3) [000338] ---X--------              *  ARR_LENGTH int    <l:$28b, c:$28a>
In BB01 New Global Constant Assertion: (345, 0) ($159,$0) V03.02 != null index=#07, mask=0000000000000040
GenTreeNode creates assertion:
N006 (  3,  3) [000486] ---X--------              *  ARR_LENGTH int    $28d
In BB01 New Global Constant Assertion: (350, 0) ($15e,$0) V41.02 != null index=#08, mask=0000000000000080
GenTreeNode creates assertion:
N007 (  8, 11) [000487] ---X--------              *  ARR_BOUNDS_CHECK_Rng void   $1a5
In BB01 New Global ArrBnds  Assertion: (0, 0) ($0,$0) [idx: {IntCns 0};len: {ARR_LENGTH($15e)}] in range  index=#09, mask=0000000000000100
GenTreeNode creates assertion:
N005 ( 23, 21) [000077] --CXG-------              *  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator $164
In BB01 New Global Constant Assertion: (128, 0) ($80,$0) V00.01 != null index=#10, mask=0000000000000200
GenTreeNode creates assertion:
N005 ( 23, 21) [000572] --CXG-------              *  CALLV stub int    System.Collections.IEnumerator.MoveNext $30a
In BB02 New Global Constant Assertion: (356, 0) ($164,$0) V06.02 != null index=#11, mask=0000000000000400

VN based non-null prop in BB03:
N004 (  4,  4) [000346] D--XG--N----              *  IND       ref    $199
optVNAssertionPropCurStmt morphed tree:
N006 (  6,  6) [000347] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000346] n---GO-N----              +--*  IND       ref    $199
N003 (  2,  2) [000503] -------N----              |  \--*  ADD       byref  $20d
N001 (  1,  1) [000096] ------------              |     +--*  LCL_VAR   ref    V16 tmp5         u:2 $1ab
N002 (  1,  1) [000502] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_fileName] $1c4
N005 (  1,  1) [000097] ------------              \--*  LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>

GenTreeNode creates assertion:
N004 (  4,  4) [000346] n---GO-N----              *  IND       ref    $199
In BB03 New Global Constant Assertion: (427, 0) ($1ab,$0) V16.02 != null index=#12, mask=0000000000000800
GenTreeNode creates assertion:
N004 (  5,  5) [000103] ------------              *  JTRUE     void  
In BB03 New Global Constant Assertion: (652, 64) ($28c,$40) Const_Loop_Bnd {GE($308, $40)} is not  {IntCns 0} index=#13, mask=0000000000001000
GenTreeNode creates assertion:
N004 (  5,  5) [000103] ------------              *  JTRUE     void  
In BB03 New Global Constant Assertion: (652, 64) ($28c,$40) Const_Loop_Bnd {GE($308, $40)} is  {IntCns 0} index=#14, mask=0000000000002000

VN based non-null prop in BB06:
N004 (  4,  4) [000349] D--XG--N----              *  IND       ref    $251
optVNAssertionPropCurStmt morphed tree:
N006 (  6,  6) [000350] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000349] n---GO-N----              +--*  IND       ref    $251
N003 (  2,  2) [000510] -------N----              |  \--*  ADD       byref  $20e
N001 (  1,  1) [000128] ------------              |     +--*  LCL_VAR   ref    V20 tmp9         u:2 (last use) $1ab
N002 (  1,  1) [000509] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_arguments] $1c7
N005 (  1,  1) [000129] ------------              \--*  LCL_VAR   ref    V21 tmp10        u:2 (last use) $251


VN based non-null prop in BB06:
N004 (  5,  8) [000354] D--XG--N----              *  IND       bool   $40
optVNAssertionPropCurStmt morphed tree:
N006 (  7, 10) [000355] -A--GO------              *  ASG       bool   $VN.Void
N004 (  5,  8) [000354] n---GO-N----              +--*  IND       bool   $40
N003 (  2,  5) [000512] -------N----              |  \--*  ADD       byref  $20f
N001 (  1,  1) [000131] ------------              |     +--*  LCL_VAR   ref    V19 tmp8         u:2 $1ab
N002 (  1,  4) [000511] ------------              |     \--*  CNS_INT   long   130 field offset Fseq[<UseShellExecute>k__BackingField] $1cb
N005 (  1,  1) [000353] ------------              \--*  CNS_INT   int    0 $40


VN based non-null prop in BB06:
N004 (  4,  4) [000138] ---XG-------              *  IND       ref    <l:$1bc, c:$1bb>
optVNAssertionPropCurStmt morphed tree:
N006 (  4,  4) [000145] -A--GO--R---              *  ASG       ref    <l:$1bc, c:$1bb>
N005 (  1,  1) [000144] D------N----              +--*  LCL_VAR   ref    V23 tmp12        d:2 <l:$1b9, c:$454>
N004 (  4,  4) [000138] n---GO------              \--*  IND       ref    <l:$1bc, c:$1bb>
N003 (  2,  2) [000514] -------N----                 \--*  ADD       byref  $207
N001 (  1,  1) [000137] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000513] ------------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers] $1c4


VN based non-null prop in BB06:
N004 (  4,  4) [000141] ---XG-------              *  IND       ref    <l:$542, c:$541>
optVNAssertionPropCurStmt morphed tree:
N006 (  4,  4) [000143] -A--GO--R---              *  ASG       ref    <l:$542, c:$541>
N005 (  1,  1) [000142] D------N----              +--*  LCL_VAR   ref    V22 tmp11        d:2 <l:$540, c:$456>
N004 (  4,  4) [000141] n---GO------              \--*  IND       ref    <l:$542, c:$541>
N003 (  2,  2) [000516] -------N----                 \--*  ADD       byref  $210
N001 (  1,  1) [000140] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000515] ------------                    \--*  CNS_INT   long   48 field offset Fseq[<>9__2] $1cc

GenTreeNode creates assertion:
N004 (  5,  5) [000151] ------------              *  JTRUE     void  
In BB06 New Global Constant Assertion: (1110, 0) ($456,$0) V26.02 != null index=#15, mask=0000000000004000
GenTreeNode creates assertion:
N004 (  5,  5) [000151] ------------              *  JTRUE     void  
In BB06 New Global Constant Assertion: (1110, 0) ($456,$0) V26.02 == null index=#16, mask=0000000000008000
After constant propagation on [000359]:
STMT00095 (IL   ???...  ???)
N004 (  5,  5) [000359] ------------              *  JTRUE     void  
N003 (  3,  3) [000358] J------N----              \--*  NE        int    $40
               [000609] ------------                 +--*  CNS_INT   int    0 $40
               [000610] ------------                 \--*  CNS_INT   int    0 $40

Folding operator with constant nodes into a constant:
N003 (  3,  3) [000358] J------N----              *  NE        int    $40
               [000609] ------------              +--*  CNS_INT   int    0 $40
               [000610] ------------              \--*  CNS_INT   int    0 $40
Bashed to int constant:
N003 (  3,  3) [000358] ------------              *  CNS_INT   int    0 $40

Removing statement STMT00095 (IL   ???...  ???)
N004 (  5,  5) [000359] ------------              *  JTRUE     void  
N003 (  3,  3) [000358] ------------              \--*  CNS_INT   int    0 $40
 in BB07 as useless:


Conditional folded at BB07
BB07 becomes a BBJ_NONE
optVNAssertionPropCurStmt removed tree:
N004 (  5,  5) [000359] ------------              *  JTRUE     void  
N003 (  3,  3) [000358] ------------              \--*  CNS_INT   int    0 $40


VN based non-null prop in BB08:
N004 (  4,  4) [000361] D--XG--N----              *  IND       ref    $180
optVNAssertionPropCurStmt morphed tree:
N006 (  6,  6) [000362] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000361] n---GO-N----              +--*  IND       ref    $180
N003 (  2,  2) [000519] -------N----              |  \--*  ADD       byref  $211
N001 (  1,  1) [000185] ------------              |     +--*  LCL_VAR   ref    V28 tmp17        u:2 $543
N002 (  1,  1) [000518] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $1c4
N005 (  1,  1) [000360] ------------              \--*  LCL_VAR   ref    V02 loc0         u:2 $180

GenTreeNode creates assertion:
N004 (  4,  4) [000361] n---GO-N----              *  IND       ref    $180
In BB08 New Global Constant Assertion: (1347, 0) ($543,$0) V28.02 != null index=#17, mask=0000000000010000

VN based non-null prop in BB08:
N004 (  4,  4) [000365] D--XG--N----              *  IND       long   $120
optVNAssertionPropCurStmt morphed tree:
N006 (  7, 15) [000366] -A--GO------              *  ASG       long   $VN.Void
N004 (  4,  4) [000365] n---GO-N----              +--*  IND       long   $120
N003 (  2,  2) [000521] -------N----              |  \--*  ADD       byref  $212
N001 (  1,  1) [000363] ------------              |     +--*  LCL_VAR   ref    V28 tmp17        u:2 $543
N002 (  1,  1) [000520] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $1c5
N005 (  2, 10) [000180] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $120


VN based non-null prop in BB08:
N004 (  4,  4) [000191] D--XG--N----              *  IND       ref    $543
optVNAssertionPropCurStmt morphed tree:
N006 (  6,  6) [000192] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000191] n---GO-N----              +--*  IND       ref    $543
N003 (  2,  2) [000523] -------N----              |  \--*  ADD       byref  $210
N001 (  1,  1) [000178] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000522] ------------              |     \--*  CNS_INT   long   48 field offset Fseq[<>9__2] $1cc
N005 (  1,  1) [000187] ------------              \--*  LCL_VAR   ref    V28 tmp17        u:2 $543

After constant propagation on [000371]:
STMT00099 (IL   ???...  ???)
N004 (  5,  5) [000371] ------------              *  JTRUE     void  
N003 (  3,  3) [000370] J------N----              \--*  NE        int    $40
               [000611] ------------                 +--*  CNS_INT   int    0 $40
               [000612] ------------                 \--*  CNS_INT   int    0 $40

Folding operator with constant nodes into a constant:
N003 (  3,  3) [000370] J------N----              *  NE        int    $40
               [000611] ------------              +--*  CNS_INT   int    0 $40
               [000612] ------------              \--*  CNS_INT   int    0 $40
Bashed to int constant:
N003 (  3,  3) [000370] ------------              *  CNS_INT   int    0 $40

Removing statement STMT00099 (IL   ???...  ???)
N004 (  5,  5) [000371] ------------              *  JTRUE     void  
N003 (  3,  3) [000370] ------------              \--*  CNS_INT   int    0 $40
 in BB09 as useless:


Conditional folded at BB09
BB09 becomes a BBJ_NONE
optVNAssertionPropCurStmt removed tree:
N004 (  5,  5) [000371] ------------              *  JTRUE     void  
N003 (  3,  3) [000370] ------------              \--*  CNS_INT   int    0 $40


VN based non-null prop in BB10:
N004 (  4,  4) [000373] D--XG--N----              *  IND       ref    $180
optVNAssertionPropCurStmt morphed tree:
N006 (  6,  6) [000374] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000373] n---GO-N----              +--*  IND       ref    $180
N003 (  2,  2) [000526] -------N----              |  \--*  ADD       byref  $213
N001 (  1,  1) [000173] ------------              |     +--*  LCL_VAR   ref    V27 tmp16        u:2 $54b
N002 (  1,  1) [000525] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $1c4
N005 (  1,  1) [000372] ------------              \--*  LCL_VAR   ref    V02 loc0         u:2 $180

GenTreeNode creates assertion:
N004 (  4,  4) [000373] n---GO-N----              *  IND       ref    $180
In BB10 New Global Constant Assertion: (1355, 0) ($54b,$0) V27.02 != null index=#18, mask=0000000000020000

VN based non-null prop in BB10:
N004 (  4,  4) [000377] D--XG--N----              *  IND       long   $125
optVNAssertionPropCurStmt morphed tree:
N006 (  7, 15) [000378] -A--GO------              *  ASG       long   $VN.Void
N004 (  4,  4) [000377] n---GO-N----              +--*  IND       long   $125
N003 (  2,  2) [000528] -------N----              |  \--*  ADD       byref  $214
N001 (  1,  1) [000375] ------------              |     +--*  LCL_VAR   ref    V27 tmp16        u:2 $54b
N002 (  1,  1) [000527] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $1c5
N005 (  2, 10) [000168] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $125

GenTreeNode creates assertion:
N013 ( 36, 21) [000177] --CXG-------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue $VN.Void
In BB10 New Global Constant Assertion: (1108, 0) ($454,$0) V24.02 != null index=#19, mask=0000000000040000
GenTreeNode creates assertion:
N004 (  5,  5) [000431] ------------              *  JTRUE     void  
In BB13 New Global Constant Assertion: (356, 0) ($164,$0) V06.02 == null index=#20, mask=0000000000080000
GenTreeNode creates assertion:
N004 (  5,  5) [000431] ------------              *  JTRUE     void  
In BB13 New Global Constant Assertion: (356, 0) ($164,$0) V06.02 != null index=#21, mask=0000000000100000

VN based non-null prop in BB15:
N004 (  4,  4) [000213] ---XG-------              *  IND       ref    <l:$569, c:$568>
optVNAssertionPropCurStmt morphed tree:
N006 (  4,  4) [000384] -A--GO--R---              *  ASG       ref    <l:$569, c:$568>
N005 (  1,  1) [000383] D------N----              +--*  LCL_VAR   ref    V35 tmp24        d:2 <l:$567, c:$16e>
N004 (  4,  4) [000213] n---GO------              \--*  IND       ref    <l:$569, c:$568>
N003 (  2,  2) [000546] -------N----                 \--*  ADD       byref  $207
N001 (  1,  1) [000212] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000545] ------------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers] $1c4


VN based non-null prop in BB15:
N008 (  4,  4) [000216] D--XG--N----              *  IND       int    $299
optVNAssertionPropCurStmt morphed tree:
N009 (  9,  9) [000217] -A-XGO--R---              *  ASG       int    $VN.Void
N008 (  4,  4) [000216] n---GO-N----              +--*  IND       int    $299
N007 (  2,  2) [000548] -------N----              |  \--*  ADD       byref  $201
N005 (  1,  1) [000211] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N006 (  1,  1) [000547] ------------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1
N004 (  4,  4) [000382] ---XG-------              \--*  IND       int    <l:$29b, c:$29a>
N003 (  2,  2) [000550] -------N----                 \--*  ADD       byref  <l:$216, c:$215>
N001 (  1,  1) [000381] ------------                    +--*  LCL_VAR   ref    V35 tmp24        u:2 (last use) <l:$567, c:$16e>
N002 (  1,  1) [000549] ------------                    \--*  CNS_INT   long   24 field offset Fseq[_size] $1c5

GenTreeNode creates assertion:
N004 (  4,  4) [000382] ---XG-------              *  IND       int    <l:$29b, c:$29a>
In BB15 New Global Constant Assertion: (366, 0) ($16e,$0) V35.02 != null index=#22, mask=0000000000200000

VN based non-null prop in BB15:
N004 (  4,  4) [000220] ---XG-------              *  IND       int    <l:$2a3, c:$2a2>
optVNAssertionPropCurStmt morphed tree:
N006 (  4,  4) [000402] -A--GO--R---              *  ASG       int    <l:$2a3, c:$2a2>
N005 (  1,  1) [000401] D------N----              +--*  LCL_VAR   int    V37 tmp26        d:2 <l:$299, c:$30c>
N004 (  4,  4) [000220] n---GO------              \--*  IND       int    <l:$2a3, c:$2a2>
N003 (  2,  2) [000553] -------N----                 \--*  ADD       byref  $201
N001 (  1,  1) [000219] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000552] ------------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1


VN based non-null prop in BB15:
N004 (  4,  4) [000393] D--XG--N----              *  IND       ref    $56d
optVNAssertionPropCurStmt morphed tree:
N006 (  6,  6) [000394] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000393] n---GO-N----              +--*  IND       ref    $56d
N003 (  2,  2) [000559] -------N----              |  \--*  ADD       byref  $217
N001 (  1,  1) [000225] ------------              |     +--*  LCL_VAR   ref    V29 tmp18        u:2 $56c
N002 (  1,  1) [000558] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_workItems] $1c4
N005 (  1,  1) [000392] ------------              \--*  LCL_VAR   ref    V36 tmp25        u:2 (last use) $56d

GenTreeNode creates assertion:
N004 (  4,  4) [000393] n---GO-N----              *  IND       ref    $56d
In BB15 New Global Constant Assertion: (1388, 0) ($56c,$0) V29.02 != null index=#23, mask=0000000000400000

VN based non-null prop in BB15:
N004 (  4,  4) [000399] D--XG--N----              *  IND       int    $299
optVNAssertionPropCurStmt morphed tree:
N006 (  6,  6) [000400] -A--GO------              *  ASG       int    $VN.Void
N004 (  4,  4) [000399] n---GO-N----              +--*  IND       int    $299
N003 (  2,  2) [000561] -------N----              |  \--*  ADD       byref  $218
N001 (  1,  1) [000397] ------------              |     +--*  LCL_VAR   ref    V29 tmp18        u:2 $56c
N002 (  1,  1) [000560] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_workItemsToComplete] $1c7
N005 (  1,  1) [000398] ------------              \--*  LCL_VAR   int    V37 tmp26        u:2 (last use) <l:$299, c:$30c>


VN based non-null prop in BB15:
N004 (  4,  4) [000228] D--XG--N----              *  IND       ref    $56c
optVNAssertionPropCurStmt morphed tree:
N006 (  6,  6) [000229] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000228] n---GO-N----              +--*  IND       ref    $56c
N003 (  2,  2) [000563] -------N----              |  \--*  ADD       byref  $208
N001 (  1,  1) [000218] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000562] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter] $1c7
N005 (  1,  1) [000227] ------------              \--*  LCL_VAR   ref    V29 tmp18        u:2 (last use) $56c


VN based non-null prop in BB16:
N003 ( 15,  8) [000243] --CXG-------              *  CALL nullcheck void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0 $VN.Void
ReMorphing args for 243.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32
ArgTable for 243.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 242.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]

optVNAssertionPropCurStmt morphed tree:
N003 ( 15,  8) [000243] --CXG-------              *  CALL      void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0 $VN.Void
N002 (  1,  1) [000242] ------------ this in rcx  \--*  LCL_VAR   ref    V02 loc0         u:2 $180


VN based non-null prop in BB17:
N004 (  4,  4) [000237] ---XG-------              *  IND       int    <l:$2a9, c:$2a8>
optVNAssertionPropCurStmt morphed tree:
N006 (  4,  4) [000424] -A--GO--R---              *  ASG       int    <l:$2a9, c:$2a8>
N005 (  1,  1) [000423] D------N----              +--*  LCL_VAR   int    V39 tmp28        d:2 <l:$2a7, c:$680>
N004 (  4,  4) [000237] n---GO------              \--*  IND       int    <l:$2a9, c:$2a8>
N003 (  2,  2) [000566] -------N----                 \--*  ADD       byref  $201
N001 (  1,  1) [000236] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000565] ------------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1

GenTreeNode creates assertion:
N004 (  5,  5) [000414] ------------              *  JTRUE     void  
In BB17 New Global Constant Assertion: (682, 64) ($2aa,$40) Const_Loop_Bnd {GE($680, $57)} is not  {IntCns 0} index=#24, mask=0000000000800000
GenTreeNode creates assertion:
N004 (  5,  5) [000414] ------------              *  JTRUE     void  
In BB17 New Global Constant Assertion: (682, 64) ($2aa,$40) Const_Loop_Bnd {GE($680, $57)} is  {IntCns 0} index=#25, mask=0000000001000000

VN based non-null prop in BB21:
N004 (  4,  4) [000250] ---XG-------              *  IND       ref    <l:$575, c:$574>
optVNAssertionPropCurStmt morphed tree:
N006 (  4,  4) [000429] -A--GO--R---              *  ASG       ref    <l:$575, c:$574>
N005 (  1,  1) [000428] D------N----              +--*  LCL_VAR   ref    V40 tmp29        d:2 <l:$573, c:$177>
N004 (  4,  4) [000250] n---GO------              \--*  IND       ref    <l:$575, c:$574>
N003 (  2,  2) [000568] -------N----                 \--*  ADD       byref  $205
N001 (  1,  1) [000249] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 (last use) $180
N002 (  1,  1) [000567] ------------                    \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun] $1c5

GenTreeNode creates assertion:
N004 (  4,  4) [000427] ---XG-------              *  IND       ref    <l:$57b, c:$57a>
In BB21 New Global Constant Assertion: (375, 0) ($177,$0) V40.02 != null index=#26, mask=0000000002000000
BB01 valueGen = 00000000000003FF
BB02 valueGen = 0000000000000400 => BB13 valueGen = 0000000000000400,
BB03 valueGen = 0000000000002C00 => BB05 valueGen = 0000000000001C00,
BB04 valueGen = 0000000000000000
BB05 valueGen = 0000000000000000
BB06 valueGen = 0000000000008801 => BB09 valueGen = 0000000000004801,
BB07 valueGen = 0000000000000000
BB08 valueGen = 0000000000010001
BB09 valueGen = 0000000000000000
BB10 valueGen = 0000000000060400 => BB03 valueGen = 0000000000060400,
BB11 valueGen = 0000000000000000
BB12 valueGen = 0000000000000000
BB13 valueGen = 0000000000100000 => BB15 valueGen = 0000000000080000,
BB14 valueGen = 0000000000000400
BB15 valueGen = 0000000000600001
BB16 valueGen = 0000000000000000
BB17 valueGen = 0000000001000001 => BB19 valueGen = 0000000000800001,
BB18 valueGen = 0000000000000000
BB19 valueGen = 0000000000000000
BB20 valueGen = 0000000000000000 => BB16 valueGen = 0000000000000000,
BB21 valueGen = 0000000002000001
BB22 valueGen = 0000000000100000 => BB24 valueGen = 0000000000080000,
BB23 valueGen = 0000000000000400
BB24 valueGen = 0000000000000000
AssertionPropCallback::StartMerge: BB01 in -> 0000000000000000
AssertionPropCallback::EndMerge  : BB01 in -> 0000000000000000

AssertionPropCallback::Changed   : BB01 before out -> 0000000003FFFFFF; after out -> 00000000000003FF;
		jumpDest before out -> 0000000003FFFFFF; jumpDest after out -> 0000000000000000;

AssertionPropCallback::StartMerge: BB02 in -> 0000000003FFFFFF
AssertionPropCallback::Merge     : BB02 in -> 0000000003FFFFFF, predBlock BB01 out -> 00000000000003FF
AssertionPropCallback::EndMerge  : BB02 in -> 00000000000003FF

AssertionPropCallback::Changed   : BB02 before out -> 0000000003FFFFFF; after out -> 00000000000007FF;
		jumpDest before out -> 0000000003FFFFFF; jumpDest after out -> 00000000000007FF;

AssertionPropCallback::StartMerge: BB22 in -> 0000000003FFFFFF
AssertionPropCallback::EndMerge  : BB22 in -> 00000000000003FF

AssertionPropCallback::Changed   : BB22 before out -> 0000000003FFFFFF; after out -> 00000000001003FF;
		jumpDest before out -> 0000000003FFFFFF; jumpDest after out -> 00000000000803FF;

AssertionPropCallback::StartMerge: BB03 in -> 0000000003FFFFFF
AssertionPropCallback::Merge     : BB03 in -> 0000000003FFFFFF, predBlock BB02 out -> 00000000000007FF
AssertionPropCallback::Merge     : BB03 in -> 00000000000007FF, predBlock BB10 out -> 0000000003FFFFFF
AssertionPropCallback::EndMerge  : BB03 in -> 00000000000007FF

AssertionPropCallback::Changed   : BB03 before out -> 0000000003FFFFFF; after out -> 0000000000002FFF;
		jumpDest before out -> 0000000003FFFFFF; jumpDest after out -> 0000000000001FFF;

AssertionPropCallback::StartMerge: BB13 in -> 0000000003FFFFFF
AssertionPropCallback::Merge     : BB13 in -> 0000000003FFFFFF, predBlock BB02 out -> 00000000000007FF
AssertionPropCallback::Merge     : BB13 in -> 00000000000007FF, predBlock BB11 out -> 0000000003FFFFFF
AssertionPropCallback::EndMerge  : BB13 in -> 00000000000007FF

AssertionPropCallback::Changed   : BB13 before out -> 0000000003FFFFFF; after out -> 00000000001007FF;
		jumpDest before out -> 0000000003FFFFFF; jumpDest after out -> 00000000000807FF;

AssertionPropCallback::StartMerge: BB22 in -> 00000000000003FF
AssertionPropCallback::EndMerge  : BB22 in -> 00000000000003FF

AssertionPropCallback::Unchanged  : BB22 out -> 00000000001003FF; 		jumpDest out -> 00000000000803FF

AssertionPropCallback::StartMerge: BB23 in -> 0000000003FFFFFF
AssertionPropCallback::Merge     : BB23 in -> 0000000003FFFFFF, predBlock BB22 out -> 00000000001003FF
AssertionPropCallback::EndMerge  : BB23 in -> 00000000001003FF

AssertionPropCallback::Changed   : BB23 before out -> 0000000003FFFFFF; after out -> 00000000001007FF;
		jumpDest before out -> 0000000003FFFFFF; jumpDest after out -> 00000000001003FF;

AssertionPropCallback::StartMerge: BB24 in -> 0000000003FFFFFF
AssertionPropCallback::Merge     : BB24 in -> 0000000003FFFFFF, predBlock BB22 out -> 00000000001003FF
AssertionPropCallback::Merge     : BB24 in -> 00000000000803FF, predBlock BB23 out -> 00000000001007FF
AssertionPropCallback::EndMerge  : BB24 in -> 00000000000003FF

AssertionPropCallback::Changed   : BB24 before out -> 0000000003FFFFFF; after out -> 00000000000003FF;
		jumpDest before out -> 0000000003FFFFFF; jumpDest after out -> 00000000000003FF;

AssertionPropCallback::StartMerge: BB04 in -> 0000000003FFFFFF
AssertionPropCallback::Merge     : BB04 in -> 0000000003FFFFFF, predBlock BB03 out -> 0000000000002FFF
AssertionPropCallback::EndMerge  : BB04 in -> 0000000000002FFF

AssertionPropCallback::Changed   : BB04 before out -> 0000000003FFFFFF; after out -> 0000000000002FFF;
		jumpDest before out -> 0000000003FFFFFF; jumpDest after out -> 0000000000002FFF;

AssertionPropCallback::StartMerge: BB05 in -> 0000000003FFFFFF
AssertionPropCallback::Merge     : BB05 in -> 0000000003FFFFFF, predBlock BB03 out -> 0000000000002FFF
AssertionPropCallback::EndMerge  : BB05 in -> 0000000000001FFF

AssertionPropCallback::Changed   : BB05 before out -> 0000000003FFFFFF; after out -> 0000000000001FFF;
		jumpDest before out -> 0000000003FFFFFF; jumpDest after out -> 0000000000001FFF;

AssertionPropCallback::StartMerge: BB22 in -> 00000000000003FF
AssertionPropCallback::EndMerge  : BB22 in -> 00000000000003FF

AssertionPropCallback::Unchanged  : BB22 out -> 00000000001003FF; 		jumpDest out -> 00000000000803FF

AssertionPropCallback::StartMerge: BB14 in -> 0000000003FFFFFF
AssertionPropCallback::Merge     : BB14 in -> 0000000003FFFFFF, predBlock BB13 out -> 00000000001007FF
AssertionPropCallback::EndMerge  : BB14 in -> 00000000001007FF

AssertionPropCallback::Changed   : BB14 before out -> 0000000003FFFFFF; after out -> 00000000001007FF;
		jumpDest before out -> 0000000003FFFFFF; jumpDest after out -> 00000000001007FF;

AssertionPropCallback::StartMerge: BB15 in -> 0000000003FFFFFF
AssertionPropCallback::Merge     : BB15 in -> 0000000003FFFFFF, predBlock BB13 out -> 00000000001007FF
AssertionPropCallback::Merge     : BB15 in -> 00000000000807FF, predBlock BB14 out -> 00000000001007FF
AssertionPropCallback::EndMerge  : BB15 in -> 00000000000007FF

AssertionPropCallback::Changed   : BB15 before out -> 0000000003FFFFFF; after out -> 00000000006007FF;
		jumpDest before out -> 0000000003FFFFFF; jumpDest after out -> 00000000000007FF;

AssertionPropCallback::StartMerge: BB24 in -> 00000000000003FF
AssertionPropCallback::Merge     : BB24 in -> 00000000000003FF, predBlock BB22 out -> 00000000001003FF
AssertionPropCallback::Merge     : BB24 in -> 00000000000003FF, predBlock BB23 out -> 00000000001007FF
AssertionPropCallback::EndMerge  : BB24 in -> 00000000000003FF

AssertionPropCallback::Unchanged  : BB24 out -> 00000000000003FF; 		jumpDest out -> 00000000000003FF

AssertionPropCallback::StartMerge: BB06 in -> 0000000003FFFFFF
AssertionPropCallback::Merge     : BB06 in -> 0000000003FFFFFF, predBlock BB04 out -> 0000000000002FFF
AssertionPropCallback::Merge     : BB06 in -> 0000000000002FFF, predBlock BB05 out -> 0000000000001FFF
AssertionPropCallback::EndMerge  : BB06 in -> 0000000000000FFF

AssertionPropCallback::Changed   : BB06 before out -> 0000000003FFFFFF; after out -> 0000000000008FFF;
		jumpDest before out -> 0000000003FFFFFF; jumpDest after out -> 0000000000004FFF;

AssertionPropCallback::StartMerge: BB22 in -> 00000000000003FF
AssertionPropCallback::EndMerge  : BB22 in -> 00000000000003FF

AssertionPropCallback::Unchanged  : BB22 out -> 00000000001003FF; 		jumpDest out -> 00000000000803FF

AssertionPropCallback::StartMerge: BB06 in -> 0000000000000FFF
AssertionPropCallback::Merge     : BB06 in -> 0000000000000FFF, predBlock BB04 out -> 0000000000002FFF
AssertionPropCallback::Merge     : BB06 in -> 0000000000000FFF, predBlock BB05 out -> 0000000000001FFF
AssertionPropCallback::EndMerge  : BB06 in -> 0000000000000FFF

AssertionPropCallback::Unchanged  : BB06 out -> 0000000000008FFF; 		jumpDest out -> 0000000000004FFF

AssertionPropCallback::StartMerge: BB22 in -> 00000000000003FF
AssertionPropCallback::EndMerge  : BB22 in -> 00000000000003FF

AssertionPropCallback::Unchanged  : BB22 out -> 00000000001003FF; 		jumpDest out -> 00000000000803FF

AssertionPropCallback::StartMerge: BB15 in -> 00000000000007FF
AssertionPropCallback::Merge     : BB15 in -> 00000000000007FF, predBlock BB13 out -> 00000000001007FF
AssertionPropCallback::Merge     : BB15 in -> 00000000000007FF, predBlock BB14 out -> 00000000001007FF
AssertionPropCallback::EndMerge  : BB15 in -> 00000000000007FF

AssertionPropCallback::Unchanged  : BB15 out -> 00000000006007FF; 		jumpDest out -> 00000000000007FF

AssertionPropCallback::StartMerge: BB17 in -> 0000000003FFFFFF
AssertionPropCallback::Merge     : BB17 in -> 0000000003FFFFFF, predBlock BB15 out -> 00000000006007FF
AssertionPropCallback::Merge     : BB17 in -> 00000000006007FF, predBlock BB16 out -> 0000000003FFFFFF
AssertionPropCallback::EndMerge  : BB17 in -> 00000000006007FF

AssertionPropCallback::Changed   : BB17 before out -> 0000000003FFFFFF; after out -> 00000000016007FF;
		jumpDest before out -> 0000000003FFFFFF; jumpDest after out -> 0000000000E007FF;

AssertionPropCallback::StartMerge: BB07 in -> 0000000003FFFFFF
AssertionPropCallback::Merge     : BB07 in -> 0000000003FFFFFF, predBlock BB06 out -> 0000000000008FFF
AssertionPropCallback::EndMerge  : BB07 in -> 0000000000008FFF

AssertionPropCallback::Changed   : BB07 before out -> 0000000003FFFFFF; after out -> 0000000000008FFF;
		jumpDest before out -> 0000000003FFFFFF; jumpDest after out -> 0000000000008FFF;

AssertionPropCallback::StartMerge: BB09 in -> 0000000003FFFFFF
AssertionPropCallback::Merge     : BB09 in -> 0000000003FFFFFF, predBlock BB06 out -> 0000000000008FFF
AssertionPropCallback::Merge     : BB09 in -> 0000000000004FFF, predBlock BB08 out -> 0000000003FFFFFF
AssertionPropCallback::EndMerge  : BB09 in -> 0000000000004FFF

AssertionPropCallback::Changed   : BB09 before out -> 0000000003FFFFFF; after out -> 0000000000004FFF;
		jumpDest before out -> 0000000003FFFFFF; jumpDest after out -> 0000000000004FFF;

AssertionPropCallback::StartMerge: BB22 in -> 00000000000003FF
AssertionPropCallback::EndMerge  : BB22 in -> 00000000000003FF

AssertionPropCallback::Unchanged  : BB22 out -> 00000000001003FF; 		jumpDest out -> 00000000000803FF

AssertionPropCallback::StartMerge: BB18 in -> 0000000003FFFFFF
AssertionPropCallback::Merge     : BB18 in -> 0000000003FFFFFF, predBlock BB17 out -> 00000000016007FF
AssertionPropCallback::EndMerge  : BB18 in -> 00000000016007FF

AssertionPropCallback::Changed   : BB18 before out -> 0000000003FFFFFF; after out -> 00000000016007FF;
		jumpDest before out -> 0000000003FFFFFF; jumpDest after out -> 00000000016007FF;

AssertionPropCallback::StartMerge: BB19 in -> 0000000003FFFFFF
AssertionPropCallback::Merge     : BB19 in -> 0000000003FFFFFF, predBlock BB17 out -> 00000000016007FF
AssertionPropCallback::EndMerge  : BB19 in -> 0000000000E007FF

AssertionPropCallback::Changed   : BB19 before out -> 0000000003FFFFFF; after out -> 0000000000E007FF;
		jumpDest before out -> 0000000003FFFFFF; jumpDest after out -> 0000000000E007FF;

AssertionPropCallback::StartMerge: BB08 in -> 0000000003FFFFFF
AssertionPropCallback::Merge     : BB08 in -> 0000000003FFFFFF, predBlock BB07 out -> 0000000000008FFF
AssertionPropCallback::EndMerge  : BB08 in -> 0000000000008FFF

AssertionPropCallback::Changed   : BB08 before out -> 0000000003FFFFFF; after out -> 0000000000018FFF;
		jumpDest before out -> 0000000003FFFFFF; jumpDest after out -> 0000000000008FFF;

AssertionPropCallback::StartMerge: BB22 in -> 00000000000003FF
AssertionPropCallback::EndMerge  : BB22 in -> 00000000000003FF

AssertionPropCallback::Unchanged  : BB22 out -> 00000000001003FF; 		jumpDest out -> 00000000000803FF

AssertionPropCallback::StartMerge: BB10 in -> 0000000003FFFFFF
AssertionPropCallback::Merge     : BB10 in -> 0000000003FFFFFF, predBlock BB09 out -> 0000000000004FFF
AssertionPropCallback::EndMerge  : BB10 in -> 0000000000004FFF

AssertionPropCallback::Changed   : BB10 before out -> 0000000003FFFFFF; after out -> 0000000000064FFF;
		jumpDest before out -> 0000000003FFFFFF; jumpDest after out -> 0000000000064FFF;

AssertionPropCallback::StartMerge: BB22 in -> 00000000000003FF
AssertionPropCallback::EndMerge  : BB22 in -> 00000000000003FF

AssertionPropCallback::Unchanged  : BB22 out -> 00000000001003FF; 		jumpDest out -> 00000000000803FF

AssertionPropCallback::StartMerge: BB20 in -> 0000000003FFFFFF
AssertionPropCallback::Merge     : BB20 in -> 0000000003FFFFFF, predBlock BB18 out -> 00000000016007FF
AssertionPropCallback::Merge     : BB20 in -> 00000000016007FF, predBlock BB19 out -> 0000000000E007FF
AssertionPropCallback::EndMerge  : BB20 in -> 00000000006007FF

AssertionPropCallback::Changed   : BB20 before out -> 0000000003FFFFFF; after out -> 00000000006007FF;
		jumpDest before out -> 0000000003FFFFFF; jumpDest after out -> 00000000006007FF;

AssertionPropCallback::StartMerge: BB20 in -> 00000000006007FF
AssertionPropCallback::Merge     : BB20 in -> 00000000006007FF, predBlock BB18 out -> 00000000016007FF
AssertionPropCallback::Merge     : BB20 in -> 00000000006007FF, predBlock BB19 out -> 0000000000E007FF
AssertionPropCallback::EndMerge  : BB20 in -> 00000000006007FF

AssertionPropCallback::Unchanged  : BB20 out -> 00000000006007FF; 		jumpDest out -> 00000000006007FF

AssertionPropCallback::StartMerge: BB09 in -> 0000000000004FFF
AssertionPropCallback::Merge     : BB09 in -> 0000000000004FFF, predBlock BB06 out -> 0000000000008FFF
AssertionPropCallback::Merge     : BB09 in -> 0000000000004FFF, predBlock BB08 out -> 0000000000018FFF
AssertionPropCallback::EndMerge  : BB09 in -> 0000000000000FFF

AssertionPropCallback::Changed   : BB09 before out -> 0000000000004FFF; after out -> 0000000000000FFF;
		jumpDest before out -> 0000000000004FFF; jumpDest after out -> 0000000000000FFF;

AssertionPropCallback::StartMerge: BB22 in -> 00000000000003FF
AssertionPropCallback::EndMerge  : BB22 in -> 00000000000003FF

AssertionPropCallback::Unchanged  : BB22 out -> 00000000001003FF; 		jumpDest out -> 00000000000803FF

AssertionPropCallback::StartMerge: BB11 in -> 0000000003FFFFFF
AssertionPropCallback::Merge     : BB11 in -> 0000000003FFFFFF, predBlock BB10 out -> 0000000000064FFF
AssertionPropCallback::EndMerge  : BB11 in -> 0000000000064FFF

AssertionPropCallback::Changed   : BB11 before out -> 0000000003FFFFFF; after out -> 0000000000064FFF;
		jumpDest before out -> 0000000003FFFFFF; jumpDest after out -> 0000000000064FFF;

AssertionPropCallback::StartMerge: BB03 in -> 00000000000007FF
AssertionPropCallback::Merge     : BB03 in -> 00000000000007FF, predBlock BB02 out -> 00000000000007FF
AssertionPropCallback::Merge     : BB03 in -> 00000000000007FF, predBlock BB10 out -> 0000000000064FFF
AssertionPropCallback::EndMerge  : BB03 in -> 00000000000007FF

AssertionPropCallback::Unchanged  : BB03 out -> 0000000000002FFF; 		jumpDest out -> 0000000000001FFF

AssertionPropCallback::StartMerge: BB22 in -> 00000000000003FF
AssertionPropCallback::EndMerge  : BB22 in -> 00000000000003FF

AssertionPropCallback::Unchanged  : BB22 out -> 00000000001003FF; 		jumpDest out -> 00000000000803FF

AssertionPropCallback::StartMerge: BB21 in -> 0000000003FFFFFF
AssertionPropCallback::Merge     : BB21 in -> 0000000003FFFFFF, predBlock BB20 out -> 00000000006007FF
AssertionPropCallback::EndMerge  : BB21 in -> 00000000006007FF

AssertionPropCallback::Changed   : BB21 before out -> 0000000003FFFFFF; after out -> 00000000026007FF;
		jumpDest before out -> 0000000003FFFFFF; jumpDest after out -> 00000000006007FF;

AssertionPropCallback::StartMerge: BB16 in -> 0000000003FFFFFF
AssertionPropCallback::Merge     : BB16 in -> 0000000003FFFFFF, predBlock BB20 out -> 00000000006007FF
AssertionPropCallback::EndMerge  : BB16 in -> 00000000006007FF

AssertionPropCallback::Changed   : BB16 before out -> 0000000003FFFFFF; after out -> 00000000006007FF;
		jumpDest before out -> 0000000003FFFFFF; jumpDest after out -> 00000000006007FF;

AssertionPropCallback::StartMerge: BB10 in -> 0000000000004FFF
AssertionPropCallback::Merge     : BB10 in -> 0000000000004FFF, predBlock BB09 out -> 0000000000000FFF
AssertionPropCallback::EndMerge  : BB10 in -> 0000000000000FFF

AssertionPropCallback::Changed   : BB10 before out -> 0000000000064FFF; after out -> 0000000000060FFF;
		jumpDest before out -> 0000000000064FFF; jumpDest after out -> 0000000000060FFF;

AssertionPropCallback::StartMerge: BB22 in -> 00000000000003FF
AssertionPropCallback::EndMerge  : BB22 in -> 00000000000003FF

AssertionPropCallback::Unchanged  : BB22 out -> 00000000001003FF; 		jumpDest out -> 00000000000803FF

AssertionPropCallback::StartMerge: BB13 in -> 00000000000007FF
AssertionPropCallback::Merge     : BB13 in -> 00000000000007FF, predBlock BB02 out -> 00000000000007FF
AssertionPropCallback::Merge     : BB13 in -> 00000000000007FF, predBlock BB11 out -> 0000000000064FFF
AssertionPropCallback::EndMerge  : BB13 in -> 00000000000007FF

AssertionPropCallback::Unchanged  : BB13 out -> 00000000001007FF; 		jumpDest out -> 00000000000807FF

AssertionPropCallback::StartMerge: BB22 in -> 00000000000003FF
AssertionPropCallback::EndMerge  : BB22 in -> 00000000000003FF

AssertionPropCallback::Unchanged  : BB22 out -> 00000000001003FF; 		jumpDest out -> 00000000000803FF

AssertionPropCallback::StartMerge: BB17 in -> 00000000006007FF
AssertionPropCallback::Merge     : BB17 in -> 00000000006007FF, predBlock BB15 out -> 00000000006007FF
AssertionPropCallback::Merge     : BB17 in -> 00000000006007FF, predBlock BB16 out -> 00000000006007FF
AssertionPropCallback::EndMerge  : BB17 in -> 00000000006007FF

AssertionPropCallback::Unchanged  : BB17 out -> 00000000016007FF; 		jumpDest out -> 0000000000E007FF

AssertionPropCallback::StartMerge: BB11 in -> 0000000000064FFF
AssertionPropCallback::Merge     : BB11 in -> 0000000000064FFF, predBlock BB10 out -> 0000000000060FFF
AssertionPropCallback::EndMerge  : BB11 in -> 0000000000060FFF

AssertionPropCallback::Changed   : BB11 before out -> 0000000000064FFF; after out -> 0000000000060FFF;
		jumpDest before out -> 0000000000064FFF; jumpDest after out -> 0000000000060FFF;

AssertionPropCallback::StartMerge: BB03 in -> 00000000000007FF
AssertionPropCallback::Merge     : BB03 in -> 00000000000007FF, predBlock BB02 out -> 00000000000007FF
AssertionPropCallback::Merge     : BB03 in -> 00000000000007FF, predBlock BB10 out -> 0000000000060FFF
AssertionPropCallback::EndMerge  : BB03 in -> 00000000000007FF

AssertionPropCallback::Unchanged  : BB03 out -> 0000000000002FFF; 		jumpDest out -> 0000000000001FFF

AssertionPropCallback::StartMerge: BB22 in -> 00000000000003FF
AssertionPropCallback::EndMerge  : BB22 in -> 00000000000003FF

AssertionPropCallback::Unchanged  : BB22 out -> 00000000001003FF; 		jumpDest out -> 00000000000803FF

AssertionPropCallback::StartMerge: BB13 in -> 00000000000007FF
AssertionPropCallback::Merge     : BB13 in -> 00000000000007FF, predBlock BB02 out -> 00000000000007FF
AssertionPropCallback::Merge     : BB13 in -> 00000000000007FF, predBlock BB11 out -> 0000000000060FFF
AssertionPropCallback::EndMerge  : BB13 in -> 00000000000007FF

AssertionPropCallback::Unchanged  : BB13 out -> 00000000001007FF; 		jumpDest out -> 00000000000807FF

AssertionPropCallback::StartMerge: BB22 in -> 00000000000003FF
AssertionPropCallback::EndMerge  : BB22 in -> 00000000000003FF

AssertionPropCallback::Unchanged  : BB22 out -> 00000000001003FF; 		jumpDest out -> 00000000000803FF



BB01 valueIn  = 0000000000000000 valueOut = 00000000000003FF
BB02 valueIn  = 00000000000003FF valueOut = 00000000000007FF => BB13 valueOut= 00000000000007FF
BB03 valueIn  = 00000000000007FF valueOut = 0000000000002FFF => BB05 valueOut= 0000000000001FFF
BB04 valueIn  = 0000000000002FFF valueOut = 0000000000002FFF
BB05 valueIn  = 0000000000001FFF valueOut = 0000000000001FFF
BB06 valueIn  = 0000000000000FFF valueOut = 0000000000008FFF => BB09 valueOut= 0000000000004FFF
BB07 valueIn  = 0000000000008FFF valueOut = 0000000000008FFF
BB08 valueIn  = 0000000000008FFF valueOut = 0000000000018FFF
BB09 valueIn  = 0000000000000FFF valueOut = 0000000000000FFF
BB10 valueIn  = 0000000000000FFF valueOut = 0000000000060FFF => BB03 valueOut= 0000000000060FFF
BB11 valueIn  = 0000000000060FFF valueOut = 0000000000060FFF
BB12 valueIn  = 0000000003FFFFFF valueOut = 0000000003FFFFFF
BB13 valueIn  = 00000000000007FF valueOut = 00000000001007FF => BB15 valueOut= 00000000000807FF
BB14 valueIn  = 00000000001007FF valueOut = 00000000001007FF
BB15 valueIn  = 00000000000007FF valueOut = 00000000006007FF
BB16 valueIn  = 00000000006007FF valueOut = 00000000006007FF
BB17 valueIn  = 00000000006007FF valueOut = 00000000016007FF => BB19 valueOut= 0000000000E007FF
BB18 valueIn  = 00000000016007FF valueOut = 00000000016007FF
BB19 valueIn  = 0000000000E007FF valueOut = 0000000000E007FF
BB20 valueIn  = 00000000006007FF valueOut = 00000000006007FF => BB16 valueOut= 00000000006007FF
BB21 valueIn  = 00000000006007FF valueOut = 00000000026007FF
BB22 valueIn  = 00000000000003FF valueOut = 00000000001003FF => BB24 valueOut= 00000000000803FF
BB23 valueIn  = 00000000001003FF valueOut = 00000000001007FF
BB24 valueIn  = 00000000000003FF valueOut = 00000000000003FF
Propagating 0000000000000000 assertions for BB01, stmt STMT00000, tree [000438], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00000, tree [000000], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00000, tree [000001], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00000, tree [000002], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00000, tree [000003], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00002, tree [000006], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00002, tree [000007], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00002, tree [000008], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00003, tree [000009], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00003, tree [000439], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00003, tree [000440], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00003, tree [000011], tree -> 1
Propagating 0000000000000001 assertions for BB01, stmt STMT00003, tree [000010], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00003, tree [000012], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00004, tree [000013], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00004, tree [000441], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00004, tree [000442], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00004, tree [000015], tree -> 1
Propagating 0000000000000001 assertions for BB01, stmt STMT00004, tree [000014], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00004, tree [000016], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00005, tree [000017], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00005, tree [000443], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00005, tree [000444], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00005, tree [000019], tree -> 1
Propagating 0000000000000001 assertions for BB01, stmt STMT00005, tree [000018], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00005, tree [000020], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00006, tree [000445], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00006, tree [000022], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00006, tree [000023], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00006, tree [000024], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00006, tree [000025], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00074, tree [000446], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00074, tree [000266], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00074, tree [000267], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00074, tree [000268], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00074, tree [000269], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00079, tree [000280], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00079, tree [000447], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00079, tree [000448], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00079, tree [000282], tree -> 2
Propagating 0000000000000003 assertions for BB01, stmt STMT00079, tree [000281], tree -> 0
Propagating 0000000000000003 assertions for BB01, stmt STMT00079, tree [000283], tree -> 0
Propagating 0000000000000003 assertions for BB01, stmt STMT00076, tree [000265], tree -> 0
Propagating 0000000000000003 assertions for BB01, stmt STMT00076, tree [000449], tree -> 0
Propagating 0000000000000003 assertions for BB01, stmt STMT00076, tree [000450], tree -> 0
Propagating 0000000000000003 assertions for BB01, stmt STMT00076, tree [000273], tree -> 3
Propagating 0000000000000007 assertions for BB01, stmt STMT00076, tree [000272], tree -> 0
Propagating 0000000000000007 assertions for BB01, stmt STMT00076, tree [000274], tree -> 0
Propagating 0000000000000007 assertions for BB01, stmt STMT00008, tree [000021], tree -> 0
Propagating 0000000000000007 assertions for BB01, stmt STMT00008, tree [000451], tree -> 0
Propagating 0000000000000007 assertions for BB01, stmt STMT00008, tree [000452], tree -> 0
Propagating 0000000000000007 assertions for BB01, stmt STMT00008, tree [000029], tree -> 1
Propagating 0000000000000007 assertions for BB01, stmt STMT00008, tree [000028], tree -> 0
Propagating 0000000000000007 assertions for BB01, stmt STMT00008, tree [000030], tree -> 0
Propagating 0000000000000007 assertions for BB01, stmt STMT00009, tree [000453], tree -> 0
Propagating 0000000000000007 assertions for BB01, stmt STMT00009, tree [000032], tree -> 0
Propagating 0000000000000007 assertions for BB01, stmt STMT00009, tree [000033], tree -> 0
Propagating 0000000000000007 assertions for BB01, stmt STMT00009, tree [000034], tree -> 0
Propagating 0000000000000007 assertions for BB01, stmt STMT00009, tree [000035], tree -> 0
Propagating 0000000000000007 assertions for BB01, stmt STMT00082, tree [000456], tree -> 0
Propagating 0000000000000007 assertions for BB01, stmt STMT00082, tree [000457], tree -> 0
Propagating 0000000000000007 assertions for BB01, stmt STMT00082, tree [000297], tree -> 0
Propagating 0000000000000007 assertions for BB01, stmt STMT00082, tree [000298], tree -> 0
Propagating 0000000000000007 assertions for BB01, stmt STMT00082, tree [000299], tree -> 0
Propagating 0000000000000007 assertions for BB01, stmt STMT00082, tree [000458], tree -> 0
Propagating 0000000000000007 assertions for BB01, stmt STMT00082, tree [000295], tree -> 0
Propagating 0000000000000007 assertions for BB01, stmt STMT00082, tree [000300], tree -> 0
Propagating 0000000000000007 assertions for BB01, stmt STMT00082, tree [000287], tree -> 0
Propagating 0000000000000007 assertions for BB01, stmt STMT00082, tree [000454], tree -> 0
Propagating 0000000000000007 assertions for BB01, stmt STMT00082, tree [000455], tree -> 0
Propagating 0000000000000007 assertions for BB01, stmt STMT00082, tree [000291], tree -> 4
Propagating 000000000000000F assertions for BB01, stmt STMT00082, tree [000292], tree -> 0
Propagating 000000000000000F assertions for BB01, stmt STMT00011, tree [000031], tree -> 0
Propagating 000000000000000F assertions for BB01, stmt STMT00011, tree [000459], tree -> 0
Propagating 000000000000000F assertions for BB01, stmt STMT00011, tree [000460], tree -> 0
Propagating 000000000000000F assertions for BB01, stmt STMT00011, tree [000039], tree -> 1
Propagating 000000000000000F assertions for BB01, stmt STMT00011, tree [000038], tree -> 0
Propagating 000000000000000F assertions for BB01, stmt STMT00011, tree [000040], tree -> 0
Propagating 000000000000000F assertions for BB01, stmt STMT00012, tree [000041], tree -> 0
Propagating 000000000000000F assertions for BB01, stmt STMT00012, tree [000461], tree -> 0
Propagating 000000000000000F assertions for BB01, stmt STMT00012, tree [000462], tree -> 0
Propagating 000000000000000F assertions for BB01, stmt STMT00012, tree [000043], tree -> 1
Propagating 000000000000000F assertions for BB01, stmt STMT00012, tree [000042], tree -> 0
Propagating 000000000000000F assertions for BB01, stmt STMT00012, tree [000044], tree -> 0
Propagating 000000000000000F assertions for BB01, stmt STMT00013, tree [000463], tree -> 0
Propagating 000000000000000F assertions for BB01, stmt STMT00013, tree [000046], tree -> 0
Propagating 000000000000000F assertions for BB01, stmt STMT00013, tree [000047], tree -> 0
Propagating 000000000000000F assertions for BB01, stmt STMT00013, tree [000048], tree -> 0
Propagating 000000000000000F assertions for BB01, stmt STMT00013, tree [000049], tree -> 0
Propagating 000000000000000F assertions for BB01, stmt STMT00083, tree [000464], tree -> 0
Propagating 000000000000000F assertions for BB01, stmt STMT00083, tree [000465], tree -> 0
Propagating 000000000000000F assertions for BB01, stmt STMT00083, tree [000050], tree -> 0
Propagating 000000000000000F assertions for BB01, stmt STMT00083, tree [000302], tree -> 0
Propagating 000000000000000F assertions for BB01, stmt STMT00083, tree [000303], tree -> 0
Propagating 000000000000000F assertions for BB01, stmt STMT00015, tree [000045], tree -> 0
Propagating 000000000000000F assertions for BB01, stmt STMT00015, tree [000466], tree -> 0
Propagating 000000000000000F assertions for BB01, stmt STMT00015, tree [000467], tree -> 0
Propagating 000000000000000F assertions for BB01, stmt STMT00015, tree [000053], tree -> 1
Propagating 000000000000000F assertions for BB01, stmt STMT00015, tree [000052], tree -> 0
Propagating 000000000000000F assertions for BB01, stmt STMT00015, tree [000054], tree -> 0
Propagating 000000000000000F assertions for BB01, stmt STMT00086, tree [000055], tree -> 0
Propagating 000000000000000F assertions for BB01, stmt STMT00086, tree [000315], tree -> 0
Propagating 000000000000000F assertions for BB01, stmt STMT00086, tree [000316], tree -> 0
Propagating 000000000000000F assertions for BB01, stmt STMT00087, tree [000313], tree -> 0
Propagating 000000000000000F assertions for BB01, stmt STMT00087, tree [000314], tree -> 5
Propagating 000000000000001F assertions for BB01, stmt STMT00084, tree [000468], tree -> 0
Propagating 000000000000001F assertions for BB01, stmt STMT00084, tree [000469], tree -> 0
Propagating 000000000000001F assertions for BB01, stmt STMT00084, tree [000306], tree -> 0
Propagating 000000000000001F assertions for BB01, stmt STMT00084, tree [000307], tree -> 0
Propagating 000000000000001F assertions for BB01, stmt STMT00084, tree [000308], tree -> 0
Propagating 000000000000001F assertions for BB01, stmt STMT00088, tree [000472], tree -> 0
Propagating 000000000000001F assertions for BB01, stmt STMT00088, tree [000309], tree -> 0
Propagating 000000000000001F assertions for BB01, stmt STMT00088, tree [000470], tree -> 0
Propagating 000000000000001F assertions for BB01, stmt STMT00088, tree [000471], tree -> 0
Propagating 000000000000001F assertions for BB01, stmt STMT00088, tree [000310], tree -> 5

Non-null prop for index #05 in BB01:
N005 (  4,  7) [000310] ---XG-------              *  IND       int    <l:$289, c:$288>
Propagating 000000000000001F assertions for BB01, stmt STMT00088, tree [000311], tree -> 0
Propagating 000000000000001F assertions for BB01, stmt STMT00088, tree [000321], tree -> 0
Propagating 000000000000001F assertions for BB01, stmt STMT00088, tree [000322], tree -> 0
Re-morphing this stmt:
STMT00088 (IL   ???...  ???)
N008 ( 18, 13) [000322] -ACXG---R---              *  ASG       ref    $156
N007 (  1,  1) [000321] D------N----              +--*  LCL_VAR   ref    V32 tmp21        d:2 $156
N006 ( 18, 13) [000311] --CXG-------              \--*  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule $156
N005 (  4,  7) [000310] n---GO------ arg0 in rcx     \--*  IND       int    <l:$289, c:$288>
N004 (  2,  5) [000471] -------N----                    \--*  ADD       byref  $20a
N002 (  1,  1) [000309] ------------                       +--*  LCL_VAR   ref    V31 tmp20        u:2 (last use) $151
N003 (  1,  4) [000470] ------------                       \--*  CNS_INT   long   200 field offset Fseq[_processId] $1c9

ReMorphing args for 311.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32
ArgTable for 311.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 310.IND int (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]

optAssertionPropMain morphed tree:
N008 ( 18, 13) [000322] -ACXGO--R---              *  ASG       ref    $156
N007 (  1,  1) [000321] D------N----              +--*  LCL_VAR   ref    V32 tmp21        d:2 $156
N006 ( 18, 13) [000311] --CXGO------              \--*  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule $156
N005 (  4,  7) [000310] n---GO------ arg0 in rcx     \--*  IND       int    <l:$289, c:$288>
N004 (  2,  5) [000471] -------N----                    \--*  ADD       byref  $20a
N002 (  1,  1) [000309] ------------                       +--*  LCL_VAR   ref    V31 tmp20        u:2 (last use) $151
N003 (  1,  4) [000470] ------------                       \--*  CNS_INT   long   200 field offset Fseq[_processId] $1c9

Propagating 000000000000001F assertions for BB01, stmt STMT00019, tree [000319], tree -> 0
Propagating 000000000000001F assertions for BB01, stmt STMT00019, tree [000473], tree -> 0
Propagating 000000000000001F assertions for BB01, stmt STMT00019, tree [000474], tree -> 0
Propagating 000000000000001F assertions for BB01, stmt STMT00019, tree [000320], tree -> 6
Propagating 000000000000003F assertions for BB01, stmt STMT00019, tree [000061], tree -> 0
Propagating 000000000000003F assertions for BB01, stmt STMT00019, tree [000062], tree -> 0
Propagating 000000000000003F assertions for BB01, stmt STMT00021, tree [000479], tree -> 0
Propagating 000000000000003F assertions for BB01, stmt STMT00021, tree [000478], tree -> 0
Propagating 000000000000003F assertions for BB01, stmt STMT00021, tree [000480], tree -> 0
Propagating 000000000000003F assertions for BB01, stmt STMT00021, tree [000477], tree -> 0
Propagating 000000000000003F assertions for BB01, stmt STMT00021, tree [000339], tree -> 0
Propagating 000000000000003F assertions for BB01, stmt STMT00021, tree [000337], tree -> 0
Propagating 000000000000003F assertions for BB01, stmt STMT00021, tree [000338], tree -> 7
Propagating 000000000000007F assertions for BB01, stmt STMT00021, tree [000475], tree -> 0
Propagating 000000000000007F assertions for BB01, stmt STMT00021, tree [000476], tree -> 0
Propagating 000000000000007F assertions for BB01, stmt STMT00021, tree [000063], tree -> 0
Propagating 000000000000007F assertions for BB01, stmt STMT00021, tree [000336], tree -> 0
Propagating 000000000000007F assertions for BB01, stmt STMT00021, tree [000340], tree -> 0
Propagating 000000000000007F assertions for BB01, stmt STMT00021, tree [000328], tree -> 0
Propagating 000000000000007F assertions for BB01, stmt STMT00021, tree [000329], tree -> 0
Failed to find a suitable dominating compare, so we won't optimize
Propagating 000000000000007F assertions for BB01, stmt STMT00021, tree [000068], tree -> 0
Propagating 000000000000007F assertions for BB01, stmt STMT00021, tree [000069], tree -> 0
Propagating 000000000000007F assertions for BB01, stmt STMT00023, tree [000070], tree -> 0
Propagating 000000000000007F assertions for BB01, stmt STMT00023, tree [000481], tree -> 0
Propagating 000000000000007F assertions for BB01, stmt STMT00023, tree [000482], tree -> 0
Propagating 000000000000007F assertions for BB01, stmt STMT00023, tree [000072], tree -> 0
Propagating 000000000000007F assertions for BB01, stmt STMT00023, tree [000483], tree -> 0
Propagating 000000000000007F assertions for BB01, stmt STMT00023, tree [000486], tree -> 8
Propagating 00000000000000FF assertions for BB01, stmt STMT00023, tree [000487], tree -> 9
Propagating 00000000000001FF assertions for BB01, stmt STMT00023, tree [000484], tree -> 0
Propagating 00000000000001FF assertions for BB01, stmt STMT00023, tree [000491], tree -> 0
Propagating 00000000000001FF assertions for BB01, stmt STMT00023, tree [000492], tree -> 0
Propagating 00000000000001FF assertions for BB01, stmt STMT00023, tree [000073], tree -> 8
Propagating 00000000000001FF assertions for BB01, stmt STMT00023, tree [000493], tree -> 0
Propagating 00000000000001FF assertions for BB01, stmt STMT00023, tree [000494], tree -> 0
Propagating 00000000000001FF assertions for BB01, stmt STMT00023, tree [000074], tree -> 0
Propagating 00000000000001FF assertions for BB01, stmt STMT00023, tree [000075], tree -> 0
Propagating 00000000000001FF assertions for BB01, stmt STMT00024, tree [000496], tree -> 0
Propagating 00000000000001FF assertions for BB01, stmt STMT00024, tree [000497], tree -> 0
Propagating 00000000000001FF assertions for BB01, stmt STMT00024, tree [000076], tree -> 0
Propagating 00000000000001FF assertions for BB01, stmt STMT00024, tree [000495], tree -> 0
Propagating 00000000000001FF assertions for BB01, stmt STMT00024, tree [000077], tree -> 10
Propagating 00000000000003FF assertions for BB01, stmt STMT00024, tree [000078], tree -> 0
Propagating 00000000000003FF assertions for BB01, stmt STMT00024, tree [000079], tree -> 0
Propagating 00000000000003FF assertions for BB02, stmt STMT00119, tree [000573], tree -> 0
Propagating 00000000000003FF assertions for BB02, stmt STMT00119, tree [000574], tree -> 0
Propagating 00000000000003FF assertions for BB02, stmt STMT00119, tree [000575], tree -> 0
Propagating 00000000000003FF assertions for BB02, stmt STMT00119, tree [000576], tree -> 0
Propagating 00000000000003FF assertions for BB02, stmt STMT00119, tree [000572], tree -> 11
Propagating 00000000000007FF assertions for BB02, stmt STMT00119, tree [000577], tree -> 0
Propagating 00000000000007FF assertions for BB02, stmt STMT00119, tree [000571], tree -> 0

VN relop, checking BB02 for redundancy
 ... checking dom BB01
Failed to find a suitable dominating compare, so we won't optimize
Propagating 00000000000007FF assertions for BB02, stmt STMT00119, tree [000578], tree -> 0
Propagating 00000000000007FF assertions for BB03, stmt STMT00026, tree [000499], tree -> 0
Propagating 00000000000007FF assertions for BB03, stmt STMT00026, tree [000500], tree -> 0
Propagating 00000000000007FF assertions for BB03, stmt STMT00026, tree [000085], tree -> 0
Propagating 00000000000007FF assertions for BB03, stmt STMT00026, tree [000498], tree -> 0
Propagating 00000000000007FF assertions for BB03, stmt STMT00026, tree [000086], tree -> 11
Propagating 00000000000007FF assertions for BB03, stmt STMT00026, tree [000087], tree -> 0
Propagating 00000000000007FF assertions for BB03, stmt STMT00026, tree [000088], tree -> 0
Propagating 00000000000007FF assertions for BB03, stmt STMT00027, tree [000501], tree -> 0
Propagating 00000000000007FF assertions for BB03, stmt STMT00027, tree [000089], tree -> 0
Propagating 00000000000007FF assertions for BB03, stmt STMT00027, tree [000090], tree -> 0
Propagating 00000000000007FF assertions for BB03, stmt STMT00027, tree [000091], tree -> 0
Propagating 00000000000007FF assertions for BB03, stmt STMT00027, tree [000092], tree -> 0
Propagating 00000000000007FF assertions for BB03, stmt STMT00092, tree [000096], tree -> 0
Propagating 00000000000007FF assertions for BB03, stmt STMT00092, tree [000502], tree -> 0
Propagating 00000000000007FF assertions for BB03, stmt STMT00092, tree [000503], tree -> 0
Propagating 00000000000007FF assertions for BB03, stmt STMT00092, tree [000346], tree -> 12
Propagating 0000000000000FFF assertions for BB03, stmt STMT00092, tree [000097], tree -> 0
Propagating 0000000000000FFF assertions for BB03, stmt STMT00092, tree [000347], tree -> 0
Propagating 0000000000000FFF assertions for BB03, stmt STMT00031, tree [000095], tree -> 0
Propagating 0000000000000FFF assertions for BB03, stmt STMT00031, tree [000104], tree -> 0
Propagating 0000000000000FFF assertions for BB03, stmt STMT00031, tree [000105], tree -> 0
Propagating 0000000000000FFF assertions for BB03, stmt STMT00032, tree [000099], tree -> 0
Propagating 0000000000000FFF assertions for BB03, stmt STMT00032, tree [000107], tree -> 0
Propagating 0000000000000FFF assertions for BB03, stmt STMT00032, tree [000108], tree -> 0
Propagating 0000000000000FFF assertions for BB03, stmt STMT00030, tree [000100], tree -> 0
Propagating 0000000000000FFF assertions for BB03, stmt STMT00030, tree [000101], tree -> 0
Propagating 0000000000000FFF assertions for BB03, stmt STMT00030, tree [000102], tree -> 0

VN relop, checking BB03 for redundancy
 ... checking dom BB02
 ... checking dom BB01
Failed to find a suitable dominating compare, so we won't optimize
Propagating 0000000000000FFF assertions for BB03, stmt STMT00030, tree [000103], tree -> 13
Propagating 0000000000002FFF assertions for BB04, stmt STMT00053, tree [000110], tree -> 0
Propagating 0000000000002FFF assertions for BB04, stmt STMT00053, tree [000202], tree -> 0
Propagating 0000000000002FFF assertions for BB04, stmt STMT00053, tree [000203], tree -> 0
Propagating 0000000000002FFF assertions for BB04, stmt STMT00054, tree [000111], tree -> 0
Propagating 0000000000002FFF assertions for BB04, stmt STMT00054, tree [000205], tree -> 0
Propagating 0000000000002FFF assertions for BB04, stmt STMT00054, tree [000206], tree -> 0
Propagating 0000000000002FFF assertions for BB04, stmt STMT00055, tree [000201], tree -> 0
Propagating 0000000000002FFF assertions for BB04, stmt STMT00055, tree [000208], tree -> 0
Propagating 0000000000002FFF assertions for BB04, stmt STMT00055, tree [000209], tree -> 0
Propagating 0000000000001FFF assertions for BB05, stmt STMT00033, tree [000112], tree -> 0
Propagating 0000000000001FFF assertions for BB05, stmt STMT00033, tree [000118], tree -> 0
Propagating 0000000000001FFF assertions for BB05, stmt STMT00033, tree [000119], tree -> 0
Propagating 0000000000001FFF assertions for BB05, stmt STMT00034, tree [000113], tree -> 0
Propagating 0000000000001FFF assertions for BB05, stmt STMT00034, tree [000121], tree -> 0
Propagating 0000000000001FFF assertions for BB05, stmt STMT00034, tree [000122], tree -> 0
Propagating 0000000000001FFF assertions for BB05, stmt STMT00035, tree [000507], tree -> 0
Propagating 0000000000001FFF assertions for BB05, stmt STMT00035, tree [000506], tree -> 0
Propagating 0000000000001FFF assertions for BB05, stmt STMT00035, tree [000508], tree -> 0
Propagating 0000000000001FFF assertions for BB05, stmt STMT00035, tree [000504], tree -> 0
Propagating 0000000000001FFF assertions for BB05, stmt STMT00035, tree [000505], tree -> 0
Propagating 0000000000001FFF assertions for BB05, stmt STMT00035, tree [000114], tree -> 0
Propagating 0000000000001FFF assertions for BB05, stmt STMT00035, tree [000116], tree -> 0
Propagating 0000000000001FFF assertions for BB05, stmt STMT00035, tree [000117], tree -> 0
Propagating 0000000000001FFF assertions for BB05, stmt STMT00035, tree [000124], tree -> 0
Propagating 0000000000001FFF assertions for BB05, stmt STMT00035, tree [000125], tree -> 0
Propagating 0000000000000FFF assertions for BB06, stmt STMT00093, tree [000128], tree -> 0
Propagating 0000000000000FFF assertions for BB06, stmt STMT00093, tree [000509], tree -> 0
Propagating 0000000000000FFF assertions for BB06, stmt STMT00093, tree [000510], tree -> 0
Propagating 0000000000000FFF assertions for BB06, stmt STMT00093, tree [000349], tree -> 12
Propagating 0000000000000FFF assertions for BB06, stmt STMT00093, tree [000129], tree -> 0
Propagating 0000000000000FFF assertions for BB06, stmt STMT00093, tree [000350], tree -> 0
Propagating 0000000000000FFF assertions for BB06, stmt STMT00094, tree [000131], tree -> 0
Propagating 0000000000000FFF assertions for BB06, stmt STMT00094, tree [000511], tree -> 0
Propagating 0000000000000FFF assertions for BB06, stmt STMT00094, tree [000512], tree -> 0
Propagating 0000000000000FFF assertions for BB06, stmt STMT00094, tree [000354], tree -> 12
Propagating 0000000000000FFF assertions for BB06, stmt STMT00094, tree [000353], tree -> 0
Propagating 0000000000000FFF assertions for BB06, stmt STMT00094, tree [000355], tree -> 0
Propagating 0000000000000FFF assertions for BB06, stmt STMT00040, tree [000137], tree -> 0
Propagating 0000000000000FFF assertions for BB06, stmt STMT00040, tree [000513], tree -> 0
Propagating 0000000000000FFF assertions for BB06, stmt STMT00040, tree [000514], tree -> 0
Propagating 0000000000000FFF assertions for BB06, stmt STMT00040, tree [000138], tree -> 1
Propagating 0000000000000FFF assertions for BB06, stmt STMT00040, tree [000144], tree -> 0
Propagating 0000000000000FFF assertions for BB06, stmt STMT00040, tree [000145], tree -> 0
Propagating 0000000000000FFF assertions for BB06, stmt STMT00039, tree [000140], tree -> 0
Propagating 0000000000000FFF assertions for BB06, stmt STMT00039, tree [000515], tree -> 0
Propagating 0000000000000FFF assertions for BB06, stmt STMT00039, tree [000516], tree -> 0
Propagating 0000000000000FFF assertions for BB06, stmt STMT00039, tree [000141], tree -> 1
Propagating 0000000000000FFF assertions for BB06, stmt STMT00039, tree [000142], tree -> 0
Propagating 0000000000000FFF assertions for BB06, stmt STMT00039, tree [000143], tree -> 0
Propagating 0000000000000FFF assertions for BB06, stmt STMT00042, tree [000146], tree -> 0
Propagating 0000000000000FFF assertions for BB06, stmt STMT00042, tree [000152], tree -> 0
Propagating 0000000000000FFF assertions for BB06, stmt STMT00042, tree [000153], tree -> 0
Propagating 0000000000000FFF assertions for BB06, stmt STMT00043, tree [000139], tree -> 0
Propagating 0000000000000FFF assertions for BB06, stmt STMT00043, tree [000155], tree -> 0
Propagating 0000000000000FFF assertions for BB06, stmt STMT00043, tree [000156], tree -> 0
Propagating 0000000000000FFF assertions for BB06, stmt STMT00044, tree [000147], tree -> 0
Propagating 0000000000000FFF assertions for BB06, stmt STMT00044, tree [000158], tree -> 0
Propagating 0000000000000FFF assertions for BB06, stmt STMT00044, tree [000159], tree -> 0
Propagating 0000000000000FFF assertions for BB06, stmt STMT00041, tree [000148], tree -> 0
Propagating 0000000000000FFF assertions for BB06, stmt STMT00041, tree [000149], tree -> 0
Propagating 0000000000000FFF assertions for BB06, stmt STMT00041, tree [000150], tree -> 0

VN relop, checking BB06 for redundancy
 ... checking dom BB03
 ... checking dom BB02
 ... checking dom BB01
Failed to find a suitable dominating compare, so we won't optimize
Propagating 0000000000000FFF assertions for BB06, stmt STMT00041, tree [000151], tree -> 15
Propagating 0000000000008FFF assertions for BB07, stmt STMT00048, tree [000517], tree -> 0
Propagating 0000000000008FFF assertions for BB07, stmt STMT00048, tree [000181], tree -> 0
Propagating 0000000000008FFF assertions for BB07, stmt STMT00048, tree [000182], tree -> 0
Propagating 0000000000008FFF assertions for BB07, stmt STMT00048, tree [000183], tree -> 0
Propagating 0000000000008FFF assertions for BB07, stmt STMT00048, tree [000184], tree -> 0
Propagating 0000000000008FFF assertions for BB08, stmt STMT00096, tree [000185], tree -> 0
Propagating 0000000000008FFF assertions for BB08, stmt STMT00096, tree [000518], tree -> 0
Propagating 0000000000008FFF assertions for BB08, stmt STMT00096, tree [000519], tree -> 0
Propagating 0000000000008FFF assertions for BB08, stmt STMT00096, tree [000361], tree -> 17
Propagating 0000000000018FFF assertions for BB08, stmt STMT00096, tree [000360], tree -> 0
Propagating 0000000000018FFF assertions for BB08, stmt STMT00096, tree [000362], tree -> 0
Propagating 0000000000018FFF assertions for BB08, stmt STMT00097, tree [000363], tree -> 0
Propagating 0000000000018FFF assertions for BB08, stmt STMT00097, tree [000520], tree -> 0
Propagating 0000000000018FFF assertions for BB08, stmt STMT00097, tree [000521], tree -> 0
Propagating 0000000000018FFF assertions for BB08, stmt STMT00097, tree [000365], tree -> 17
Propagating 0000000000018FFF assertions for BB08, stmt STMT00097, tree [000180], tree -> 0
Propagating 0000000000018FFF assertions for BB08, stmt STMT00097, tree [000366], tree -> 0
Propagating 0000000000018FFF assertions for BB08, stmt STMT00051, tree [000178], tree -> 0
Propagating 0000000000018FFF assertions for BB08, stmt STMT00051, tree [000522], tree -> 0
Propagating 0000000000018FFF assertions for BB08, stmt STMT00051, tree [000523], tree -> 0
Propagating 0000000000018FFF assertions for BB08, stmt STMT00051, tree [000191], tree -> 1
Propagating 0000000000018FFF assertions for BB08, stmt STMT00051, tree [000187], tree -> 0
Propagating 0000000000018FFF assertions for BB08, stmt STMT00051, tree [000192], tree -> 0
Propagating 0000000000018FFF assertions for BB08, stmt STMT00052, tree [000193], tree -> 0
Propagating 0000000000018FFF assertions for BB08, stmt STMT00052, tree [000198], tree -> 0
Propagating 0000000000018FFF assertions for BB08, stmt STMT00052, tree [000199], tree -> 0
Propagating 0000000000000FFF assertions for BB09, stmt STMT00045, tree [000524], tree -> 0
Propagating 0000000000000FFF assertions for BB09, stmt STMT00045, tree [000169], tree -> 0
Propagating 0000000000000FFF assertions for BB09, stmt STMT00045, tree [000170], tree -> 0
Propagating 0000000000000FFF assertions for BB09, stmt STMT00045, tree [000171], tree -> 0
Propagating 0000000000000FFF assertions for BB09, stmt STMT00045, tree [000172], tree -> 0
Propagating 0000000000000FFF assertions for BB10, stmt STMT00100, tree [000173], tree -> 0
Propagating 0000000000000FFF assertions for BB10, stmt STMT00100, tree [000525], tree -> 0
Propagating 0000000000000FFF assertions for BB10, stmt STMT00100, tree [000526], tree -> 0
Propagating 0000000000000FFF assertions for BB10, stmt STMT00100, tree [000373], tree -> 18
Propagating 0000000000020FFF assertions for BB10, stmt STMT00100, tree [000372], tree -> 0
Propagating 0000000000020FFF assertions for BB10, stmt STMT00100, tree [000374], tree -> 0
Propagating 0000000000020FFF assertions for BB10, stmt STMT00101, tree [000375], tree -> 0
Propagating 0000000000020FFF assertions for BB10, stmt STMT00101, tree [000527], tree -> 0
Propagating 0000000000020FFF assertions for BB10, stmt STMT00101, tree [000528], tree -> 0
Propagating 0000000000020FFF assertions for BB10, stmt STMT00101, tree [000377], tree -> 18
Propagating 0000000000020FFF assertions for BB10, stmt STMT00101, tree [000168], tree -> 0
Propagating 0000000000020FFF assertions for BB10, stmt STMT00101, tree [000378], tree -> 0
Propagating 0000000000020FFF assertions for BB10, stmt STMT00047, tree [000535], tree -> 0
Propagating 0000000000020FFF assertions for BB10, stmt STMT00047, tree [000529], tree -> 0
Propagating 0000000000020FFF assertions for BB10, stmt STMT00047, tree [000530], tree -> 0
Propagating 0000000000020FFF assertions for BB10, stmt STMT00047, tree [000531], tree -> 0
Propagating 0000000000020FFF assertions for BB10, stmt STMT00047, tree [000165], tree -> 0
Propagating 0000000000020FFF assertions for BB10, stmt STMT00047, tree [000166], tree -> 0
Propagating 0000000000020FFF assertions for BB10, stmt STMT00047, tree [000175], tree -> 0
Propagating 0000000000020FFF assertions for BB10, stmt STMT00047, tree [000176], tree -> 0
Propagating 0000000000020FFF assertions for BB10, stmt STMT00047, tree [000532], tree -> 0
Propagating 0000000000020FFF assertions for BB10, stmt STMT00047, tree [000533], tree -> 0
Propagating 0000000000020FFF assertions for BB10, stmt STMT00047, tree [000534], tree -> 0
Propagating 0000000000020FFF assertions for BB10, stmt STMT00047, tree [000164], tree -> 0
Propagating 0000000000020FFF assertions for BB10, stmt STMT00047, tree [000177], tree -> 19
Propagating 0000000000060FFF assertions for BB10, stmt STMT00025, tree [000537], tree -> 0
Propagating 0000000000060FFF assertions for BB10, stmt STMT00025, tree [000538], tree -> 0
Propagating 0000000000060FFF assertions for BB10, stmt STMT00025, tree [000080], tree -> 0
Propagating 0000000000060FFF assertions for BB10, stmt STMT00025, tree [000536], tree -> 0
Propagating 0000000000060FFF assertions for BB10, stmt STMT00025, tree [000081], tree -> 11
Propagating 0000000000060FFF assertions for BB10, stmt STMT00025, tree [000082], tree -> 0
Propagating 0000000000060FFF assertions for BB10, stmt STMT00025, tree [000083], tree -> 0

VN relop, checking BB10 for redundancy
 ... checking dom BB09
 ... checking dom BB06
 ... checking dom BB03
 ... checking dom BB02
 ... checking dom BB01
Failed to find a suitable dominating compare, so we won't optimize
Propagating 0000000000060FFF assertions for BB10, stmt STMT00025, tree [000084], tree -> 0
Propagating 0000000003FFFFFF assertions for BB12, stmt STMT00102, tree [000379], tree -> 0
Propagating 00000000000007FF assertions for BB13, stmt STMT00116, tree [000433], tree -> 0
Propagating 00000000000007FF assertions for BB13, stmt STMT00116, tree [000434], tree -> 0
Propagating 00000000000007FF assertions for BB13, stmt STMT00116, tree [000432], tree -> 0

VN relop, checking BB13 for redundancy
 ... checking dom BB02
 ... checking dom BB01
Failed to find a suitable dominating compare, so we won't optimize

VN relop based constant assertion prop in BB13:
Assertion index=#11: [000433] != null
N003 (  3,  3) [000432] J------N----              *  EQ        int    $293

Folding operator with constant nodes into a constant:
N003 (  3,  3) [000432] J------N----              *  NE        int   
N001 (  1,  1) [000433] ------------              +--*  CNS_INT   ref    null $VN.Null
N002 (  1,  1) [000434] ------------              \--*  CNS_INT   ref    null $VN.Null
Bashed to int constant:
N003 (  3,  3) [000432] ------------              *  CNS_INT   int    0 $40
N003 (  3,  3) [000432] ------------              *  CNS_INT   int    0 $40
Propagating 00000000000007FF assertions for BB13, stmt STMT00116, tree [000431], tree -> 20
Re-morphing this stmt:
STMT00116 (IL   ???...  ???)
N004 (  5,  5) [000431] ------------              *  JTRUE     void  
N003 (  3,  3) [000432] ------------              \--*  CNS_INT   int    0 $40


Removing statement STMT00116 (IL   ???...  ???)
N004 (  5,  5) [000431] ------------              *  JTRUE     void  
N003 (  3,  3) [000432] ------------              \--*  CNS_INT   int    0 $40
 in BB13 as useless:

BB13 becomes empty

Conditional folded at BB13
BB13 becomes a BBJ_NONE
optAssertionPropMain removed tree:
N004 (  5,  5) [000431] ------------              *  JTRUE     void  
N003 (  3,  3) [000432] ------------              \--*  CNS_INT   int    0 $40

Propagating 00000000001007FF assertions for BB14, stmt STMT00117, tree [000540], tree -> 0
Propagating 00000000001007FF assertions for BB14, stmt STMT00117, tree [000541], tree -> 0
Propagating 00000000001007FF assertions for BB14, stmt STMT00117, tree [000436], tree -> 0
Propagating 00000000001007FF assertions for BB14, stmt STMT00117, tree [000539], tree -> 0
Propagating 00000000001007FF assertions for BB14, stmt STMT00117, tree [000435], tree -> 11
Propagating 00000000000007FF assertions for BB15, stmt STMT00103, tree [000212], tree -> 0
Propagating 00000000000007FF assertions for BB15, stmt STMT00103, tree [000545], tree -> 0
Propagating 00000000000007FF assertions for BB15, stmt STMT00103, tree [000546], tree -> 0
Propagating 00000000000007FF assertions for BB15, stmt STMT00103, tree [000213], tree -> 1
Propagating 00000000000007FF assertions for BB15, stmt STMT00103, tree [000383], tree -> 0
Propagating 00000000000007FF assertions for BB15, stmt STMT00103, tree [000384], tree -> 0
Propagating 00000000000007FF assertions for BB15, stmt STMT00057, tree [000381], tree -> 0
Propagating 00000000000007FF assertions for BB15, stmt STMT00057, tree [000549], tree -> 0
Propagating 00000000000007FF assertions for BB15, stmt STMT00057, tree [000550], tree -> 0
Propagating 00000000000007FF assertions for BB15, stmt STMT00057, tree [000382], tree -> 22
Propagating 00000000002007FF assertions for BB15, stmt STMT00057, tree [000211], tree -> 0
Propagating 00000000002007FF assertions for BB15, stmt STMT00057, tree [000547], tree -> 0
Propagating 00000000002007FF assertions for BB15, stmt STMT00057, tree [000548], tree -> 0
Propagating 00000000002007FF assertions for BB15, stmt STMT00057, tree [000216], tree -> 1
Propagating 00000000002007FF assertions for BB15, stmt STMT00057, tree [000217], tree -> 0
Propagating 00000000002007FF assertions for BB15, stmt STMT00058, tree [000551], tree -> 0
Propagating 00000000002007FF assertions for BB15, stmt STMT00058, tree [000221], tree -> 0
Propagating 00000000002007FF assertions for BB15, stmt STMT00058, tree [000222], tree -> 0
Propagating 00000000002007FF assertions for BB15, stmt STMT00058, tree [000223], tree -> 0
Propagating 00000000002007FF assertions for BB15, stmt STMT00058, tree [000224], tree -> 0
Propagating 00000000002007FF assertions for BB15, stmt STMT00109, tree [000219], tree -> 0
Propagating 00000000002007FF assertions for BB15, stmt STMT00109, tree [000552], tree -> 0
Propagating 00000000002007FF assertions for BB15, stmt STMT00109, tree [000553], tree -> 0
Propagating 00000000002007FF assertions for BB15, stmt STMT00109, tree [000220], tree -> 1
Propagating 00000000002007FF assertions for BB15, stmt STMT00109, tree [000401], tree -> 0
Propagating 00000000002007FF assertions for BB15, stmt STMT00109, tree [000402], tree -> 0
Propagating 00000000002007FF assertions for BB15, stmt STMT00104, tree [000554], tree -> 0
Propagating 00000000002007FF assertions for BB15, stmt STMT00104, tree [000386], tree -> 0
Propagating 00000000002007FF assertions for BB15, stmt STMT00104, tree [000387], tree -> 0
Propagating 00000000002007FF assertions for BB15, stmt STMT00104, tree [000388], tree -> 0
Propagating 00000000002007FF assertions for BB15, stmt STMT00104, tree [000389], tree -> 0
Propagating 00000000002007FF assertions for BB15, stmt STMT00110, tree [000555], tree -> 0
Propagating 00000000002007FF assertions for BB15, stmt STMT00110, tree [000556], tree -> 0
Propagating 00000000002007FF assertions for BB15, stmt STMT00110, tree [000557], tree -> 0
Propagating 00000000002007FF assertions for BB15, stmt STMT00110, tree [000390], tree -> 0
Propagating 00000000002007FF assertions for BB15, stmt STMT00110, tree [000404], tree -> 0
Propagating 00000000002007FF assertions for BB15, stmt STMT00110, tree [000405], tree -> 0
Propagating 00000000002007FF assertions for BB15, stmt STMT00110, tree [000406], tree -> 0
Propagating 00000000002007FF assertions for BB15, stmt STMT00106, tree [000225], tree -> 0
Propagating 00000000002007FF assertions for BB15, stmt STMT00106, tree [000558], tree -> 0
Propagating 00000000002007FF assertions for BB15, stmt STMT00106, tree [000559], tree -> 0
Propagating 00000000002007FF assertions for BB15, stmt STMT00106, tree [000393], tree -> 23
Propagating 00000000006007FF assertions for BB15, stmt STMT00106, tree [000392], tree -> 0
Propagating 00000000006007FF assertions for BB15, stmt STMT00106, tree [000394], tree -> 0
Propagating 00000000006007FF assertions for BB15, stmt STMT00108, tree [000397], tree -> 0
Propagating 00000000006007FF assertions for BB15, stmt STMT00108, tree [000560], tree -> 0
Propagating 00000000006007FF assertions for BB15, stmt STMT00108, tree [000561], tree -> 0
Propagating 00000000006007FF assertions for BB15, stmt STMT00108, tree [000399], tree -> 23
Propagating 00000000006007FF assertions for BB15, stmt STMT00108, tree [000398], tree -> 0
Propagating 00000000006007FF assertions for BB15, stmt STMT00108, tree [000400], tree -> 0
Propagating 00000000006007FF assertions for BB15, stmt STMT00060, tree [000218], tree -> 0
Propagating 00000000006007FF assertions for BB15, stmt STMT00060, tree [000562], tree -> 0
Propagating 00000000006007FF assertions for BB15, stmt STMT00060, tree [000563], tree -> 0
Propagating 00000000006007FF assertions for BB15, stmt STMT00060, tree [000228], tree -> 1
Propagating 00000000006007FF assertions for BB15, stmt STMT00060, tree [000227], tree -> 0
Propagating 00000000006007FF assertions for BB15, stmt STMT00060, tree [000229], tree -> 0
Propagating 00000000006007FF assertions for BB15, stmt STMT00061, tree [000230], tree -> 0
Propagating 00000000006007FF assertions for BB15, stmt STMT00061, tree [000231], tree -> 0
Propagating 00000000006007FF assertions for BB15, stmt STMT00061, tree [000232], tree -> 0
Propagating 00000000006007FF assertions for BB16, stmt STMT00065, tree [000564], tree -> 0
Propagating 00000000006007FF assertions for BB16, stmt STMT00065, tree [000242], tree -> 0
Propagating 00000000006007FF assertions for BB16, stmt STMT00065, tree [000243], tree -> 0
Propagating 00000000006007FF assertions for BB16, stmt STMT00066, tree [000244], tree -> 0
Propagating 00000000006007FF assertions for BB16, stmt STMT00066, tree [000245], tree -> 0
Propagating 00000000006007FF assertions for BB16, stmt STMT00066, tree [000246], tree -> 0
Propagating 00000000006007FF assertions for BB16, stmt STMT00066, tree [000247], tree -> 0
Propagating 00000000006007FF assertions for BB16, stmt STMT00066, tree [000248], tree -> 0
Propagating 00000000006007FF assertions for BB17, stmt STMT00114, tree [000236], tree -> 0
Propagating 00000000006007FF assertions for BB17, stmt STMT00114, tree [000565], tree -> 0
Propagating 00000000006007FF assertions for BB17, stmt STMT00114, tree [000566], tree -> 0
Propagating 00000000006007FF assertions for BB17, stmt STMT00114, tree [000237], tree -> 1
Propagating 00000000006007FF assertions for BB17, stmt STMT00114, tree [000423], tree -> 0
Propagating 00000000006007FF assertions for BB17, stmt STMT00114, tree [000424], tree -> 0
Propagating 00000000006007FF assertions for BB17, stmt STMT00111, tree [000412], tree -> 0
Propagating 00000000006007FF assertions for BB17, stmt STMT00111, tree [000411], tree -> 0
Propagating 00000000006007FF assertions for BB17, stmt STMT00111, tree [000413], tree -> 0

VN relop, checking BB17 for redundancy
 ... checking dom BB15
 ... checking dom BB13
 ... checking dom BB02
 ... checking dom BB01
Failed to find a suitable dominating compare, so we won't optimize
Propagating 00000000006007FF assertions for BB17, stmt STMT00111, tree [000414], tree -> 24
Propagating 00000000016007FF assertions for BB18, stmt STMT00113, tree [000419], tree -> 0
Propagating 00000000016007FF assertions for BB18, stmt STMT00113, tree [000420], tree -> 0
Propagating 00000000016007FF assertions for BB18, stmt STMT00113, tree [000421], tree -> 0
Propagating 0000000000E007FF assertions for BB19, stmt STMT00112, tree [000415], tree -> 0
Propagating 0000000000E007FF assertions for BB19, stmt STMT00112, tree [000416], tree -> 0
Propagating 0000000000E007FF assertions for BB19, stmt STMT00112, tree [000417], tree -> 0
Propagating 00000000006007FF assertions for BB20, stmt STMT00064, tree [000233], tree -> 0
Propagating 00000000006007FF assertions for BB20, stmt STMT00064, tree [000422], tree -> 0
Propagating 00000000006007FF assertions for BB20, stmt STMT00064, tree [000240], tree -> 0

VN relop, checking BB20 for redundancy
 ... checking dom BB17
 ... checking dom BB15
 ... checking dom BB13
 ... checking dom BB02
 ... checking dom BB01
Failed to find a suitable dominating compare, so we won't optimize
Propagating 00000000006007FF assertions for BB20, stmt STMT00064, tree [000241], tree -> 0
Propagating 00000000006007FF assertions for BB21, stmt STMT00115, tree [000249], tree -> 0
Propagating 00000000006007FF assertions for BB21, stmt STMT00115, tree [000567], tree -> 0
Propagating 00000000006007FF assertions for BB21, stmt STMT00115, tree [000568], tree -> 0
Propagating 00000000006007FF assertions for BB21, stmt STMT00115, tree [000250], tree -> 1
Propagating 00000000006007FF assertions for BB21, stmt STMT00115, tree [000428], tree -> 0
Propagating 00000000006007FF assertions for BB21, stmt STMT00115, tree [000429], tree -> 0
Propagating 00000000006007FF assertions for BB21, stmt STMT00068, tree [000426], tree -> 0
Propagating 00000000006007FF assertions for BB21, stmt STMT00068, tree [000569], tree -> 0
Propagating 00000000006007FF assertions for BB21, stmt STMT00068, tree [000570], tree -> 0
Propagating 00000000006007FF assertions for BB21, stmt STMT00068, tree [000427], tree -> 26
Propagating 00000000026007FF assertions for BB21, stmt STMT00068, tree [000253], tree -> 0
Propagating 00000000001003FF assertions for BB23, stmt STMT00071, tree [000543], tree -> 0
Propagating 00000000001003FF assertions for BB23, stmt STMT00071, tree [000544], tree -> 0
Propagating 00000000001003FF assertions for BB23, stmt STMT00071, tree [000259], tree -> 0
Propagating 00000000001003FF assertions for BB23, stmt STMT00071, tree [000542], tree -> 0
Propagating 00000000001003FF assertions for BB23, stmt STMT00071, tree [000260], tree -> 11
Propagating 00000000000003FF assertions for BB24, stmt STMT00070, tree [000258], tree -> 0
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Assertion prop

*************** Starting PHASE Optimize index checks
*************** In OptimizeRangeChecks()
Blocks/trees before phase

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB13 ( cond ) T0      try {       keep i try label hascall gcsafe 
BB03 [0002]  2  0    BB02,BB10             4     0 [072..08B)-> BB05 ( cond ) T0                  i Loop label target hascall gcsafe newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  2     0 [08B..08F)-> BB06 (always) T0                  i gcsafe bwd 
BB05 [0004]  1  0    BB03                  2     0 [08F..09C)                 T0                  i label target hascall gcsafe bwd 
BB06 [0005]  2  0    BB04,BB05             4     0 [09C..0BB)-> BB09 ( cond ) T0                  i label target gcsafe bwd 
BB07 [0006]  1  0    BB06                  2     0 [000..0D3)                 T0                  i hascall gcsafe newobj bwd 
BB08 [0041]  1  0    BB07                  2     0 [000..000)                 T0                  i internal label target gcsafe newobj bwd 
BB09 [0007]  2  0    BB06,BB08             4     0 [000..0E9)                 T0                  i label target hascall gcsafe newobj bwd 
BB10 [0045]  1  0    BB09                  4     0 [000..0F2)-> BB03 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB11 [0061]  1  0    BB10                  0.50    [???..???)-> BB13 (always) T0                  internal gcsafe 
BB12 [0044]  0  0                          0       [000..000)        (throw ) T0      }           i internal rare label target hascall gcsafe bwd 
BB13 [0057]  2       BB02,BB11             1       [0F4..0F8)                                     keep i label target gcsafe cfb 
BB14 [0058]  1       BB13                  0.50    [0F8..100)                                     i hascall gcsafe 
BB15 [0013]  1       BB14                  1       [100..127)-> BB17 (always)                     i label target hascall gcsafe newobj 
BB16 [0014]  1       BB20                  2     1 [127..133)                                     i Loop label target hascall gcsafe bwd bwd-target 
BB17 [0015]  2       BB15,BB16             8     1 [000..147)-> BB19 ( cond )                     i label target gcsafe bwd 
BB18 [0053]  1       BB17                  2     1 [000..000)-> BB20 (always)                     i internal gcsafe bwd 
BB19 [0054]  1       BB17                  2     1 [000..000)                                     i internal label target gcsafe bwd 
BB20 [0055]  2       BB18,BB19             8     1 [???..???)-> BB16 ( cond )                     internal label target gcsafe bwd 
BB21 [0016]  1       BB20                  1       [147..153)        (return)                     i gcsafe 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB22 [0010]  1     0                       0       [0F4..0F8)-> BB24 ( cond )    H0 F fault {     keep i rare label target flet 
BB23 [0011]  1     0 BB22                  0       [0F8..0FF)                    H0               i rare hascall gcsafe 
BB24 [0012]  2     0 BB22,BB23             0       [0FF..100)        (finret)    H0   }           i rare label target 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..070), preds={} succs={BB02}

***** BB01
STMT00000 (IL 0x000...0x005)
N005 ( 16, 16) [000003] -AC-----R---              *  ASG       ref    $180
N004 (  1,  1) [000002] D------N----              +--*  LCL_VAR   ref    V12 tmp1         d:2 $180
N003 ( 16, 16) [000001] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $180
N002 (  2, 10) [000000] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $100

***** BB01
STMT00002 (IL 0x005...  ???)
N003 (  1,  3) [000008] -A------R---              *  ASG       ref    $180
N002 (  1,  1) [000007] D------N----              +--*  LCL_VAR   ref    V02 loc0         d:2 $180
N001 (  1,  1) [000006] ------------              \--*  LCL_VAR   ref    V12 tmp1         u:2 $180

***** BB01
STMT00003 (IL 0x006...0x008)
N006 (  6,  6) [000012] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000011] n---GO-N----              +--*  IND       ref    $81
N003 (  2,  2) [000440] -------N----              |  \--*  ADD       byref  $200
N001 (  1,  1) [000009] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000439] ------------              |     \--*  CNS_INT   long   32 field offset Fseq[outputFile] $1c0
N005 (  1,  1) [000010] ------------              \--*  LCL_VAR   ref    V01 arg1         u:1 (last use) $81

***** BB01
STMT00004 (IL 0x00D...0x00F)
N006 (  6,  6) [000016] -A--GO------              *  ASG       int    $VN.Void
N004 (  4,  4) [000015] n---GO-N----              +--*  IND       int    $40
N003 (  2,  2) [000442] -------N----              |  \--*  ADD       byref  $201
N001 (  1,  1) [000013] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000441] ------------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1
N005 (  1,  1) [000014] ------------              \--*  CNS_INT   int    0 $40

***** BB01
STMT00005 (IL 0x014...0x016)
N006 (  6,  6) [000020] -A--GO------              *  ASG       int    $VN.Void
N004 (  4,  4) [000019] n---GO-N----              +--*  IND       int    $40
N003 (  2,  2) [000444] -------N----              |  \--*  ADD       byref  $202
N001 (  1,  1) [000017] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000443] ------------              |     \--*  CNS_INT   long   56 field offset Fseq[analyzersFinishedCount] $1c2
N005 (  1,  1) [000018] ------------              \--*  CNS_INT   int    0 $40

***** BB01
STMT00006 (IL 0x01B...0x021)
N005 ( 16, 16) [000025] -AC-----R---              *  ASG       ref    $183
N004 (  1,  1) [000024] D------N----              +--*  LCL_VAR   ref    V13 tmp2         d:2 $183
N003 ( 16, 16) [000023] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $183
N002 (  2, 10) [000022] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $104

***** BB01
STMT00074 (IL   ???...  ???)
N005 ( 16, 16) [000269] -AC-----R---              *  ASG       ref    $184
N004 (  1,  1) [000268] D------N----              +--*  LCL_VAR   ref    V30 tmp19        d:2 $184
N003 ( 16, 16) [000267] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $184
N002 (  2, 10) [000266] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $105

***** BB01
STMT00079 (IL   ???...  ???)
N006 (  6,  9) [000283] -A--GO------              *  ASG       int    $VN.Void
N004 (  4,  4) [000282] V---GO-N----              +--*  IND       int    $43
N003 (  2,  2) [000448] -------N----              |  \--*  ADD       byref  $203
N001 (  1,  1) [000280] ------------              |     +--*  LCL_VAR   ref    V30 tmp19        u:2 $184
N002 (  1,  1) [000447] ------------              |     \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags] $1c3
N005 (  1,  4) [000281] ------------              \--*  CNS_INT   int    0x2000400 $43

***** BB01
STMT00076 (IL   ???...  ???)
N006 (  6,  6) [000274] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000273] n---GO-N----              +--*  IND       ref    $184
N003 (  2,  2) [000450] -------N----              |  \--*  ADD       byref  $204
N001 (  1,  1) [000265] ------------              |     +--*  LCL_VAR   ref    V13 tmp2         u:2 $183
N002 (  1,  1) [000449] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_task] $1c4
N005 (  1,  1) [000272] ------------              \--*  LCL_VAR   ref    V30 tmp19        u:2 (last use) $184

***** BB01
STMT00008 (IL 0x021...  ???)
N006 (  6,  6) [000030] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000029] n---GO-N----              +--*  IND       ref    $183
N003 (  2,  2) [000452] -------N----              |  \--*  ADD       byref  $205
N001 (  1,  1) [000021] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000451] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun] $1c5
N005 (  1,  1) [000028] ------------              \--*  LCL_VAR   ref    V13 tmp2         u:2 (last use) $183

***** BB01
STMT00009 (IL 0x026...0x02C)
N005 ( 16, 16) [000035] -AC-----R---              *  ASG       ref    $189
N004 (  1,  1) [000034] D------N----              +--*  LCL_VAR   ref    V14 tmp3         d:2 $189
N003 ( 16, 16) [000033] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $189
N002 (  2, 10) [000032] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $109

***** BB01
STMT00082 (IL   ???...  ???)
N013 ( 26, 35) [000292] -ACXGO--R---              *  ASG       ref    $VN.Void
N012 (  4,  4) [000291] n---GO-N----              +--*  IND       ref    $246
N011 (  2,  2) [000455] -------N----              |  \--*  ADD       byref  $206
N009 (  1,  1) [000287] ------------              |     +--*  LCL_VAR   ref    V14 tmp3         u:2 $189
N010 (  1,  1) [000454] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_array] $1c4
N008 ( 21, 30) [000300] --CXG-------              \--*  COMMA     ref    <l:$18c, c:$18b>
N005 ( 17, 18) [000299] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS $381
N003 (  2, 10) [000297] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e0b0028 $1c6
N004 (  1,  1) [000298] ------------ arg1 in rdx     |  \--*  CNS_INT   int    14 $44
N007 (  4, 12) [000295] n---G-------                 \--*  IND       ref    <l:$246, c:$14b>
N006 (  2, 10) [000458] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[Value] $10a

***** BB01
STMT00011 (IL 0x02C...  ???)
N006 (  6,  6) [000040] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000039] n---GO-N----              +--*  IND       ref    $189
N003 (  2,  2) [000460] -------N----              |  \--*  ADD       byref  $207
N001 (  1,  1) [000031] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000459] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers] $1c4
N005 (  1,  1) [000038] ------------              \--*  LCL_VAR   ref    V14 tmp3         u:2 (last use) $189

***** BB01
STMT00012 (IL 0x031...0x033)
N006 (  6,  6) [000044] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000043] n---GO-N----              +--*  IND       ref    $VN.Null
N003 (  2,  2) [000462] -------N----              |  \--*  ADD       byref  $208
N001 (  1,  1) [000041] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000461] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter] $1c7
N005 (  1,  1) [000042] ------------              \--*  CNS_INT   ref    null $VN.Null

***** BB01
STMT00013 (IL 0x038...0x03E)
N005 ( 16, 16) [000049] -AC-----R---              *  ASG       ref    $193
N004 (  1,  1) [000048] D------N----              +--*  LCL_VAR   ref    V15 tmp4         d:2 $193
N003 ( 16, 16) [000047] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $193
N002 (  2, 10) [000046] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $10e

***** BB01
STMT00083 (IL   ???...  ???)
N005 ( 16, 10) [000303] --CXG-------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor $VN.Void
N003 (  1,  1) [000050] ------------ this in rcx  +--*  LCL_VAR   ref    V15 tmp4         u:2 $193
N004 (  1,  1) [000302] ------------ arg1 in rdx  \--*  CNS_INT   ref    null $VN.Null

***** BB01
STMT00015 (IL 0x03E...  ???)
N006 (  6,  6) [000054] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000053] n---GO-N----              +--*  IND       ref    $193
N003 (  2,  2) [000467] -------N----              |  \--*  ADD       byref  $209
N001 (  1,  1) [000045] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 (last use) $180
N002 (  1,  1) [000466] ------------              |     \--*  CNS_INT   long   40 field offset Fseq[output] $1c8
N005 (  1,  1) [000052] ------------              \--*  LCL_VAR   ref    V15 tmp4         u:2 (last use) $193

***** BB01
STMT00086 (IL   ???...  ???)
N003 ( 14,  5) [000316] -ACXG---R---              *  ASG       ref    $151
N002 (  1,  1) [000315] D------N----              +--*  LCL_VAR   ref    V31 tmp20        d:2 $151
N001 ( 14,  5) [000055] --CXG-------              \--*  CALL      ref    System.Diagnostics.Process.GetCurrentProcess $151

***** BB01
STMT00087 (IL   ???...  ???)
N002 (  2,  2) [000314] ---X--------              *  NULLCHECK byte   $197
N001 (  1,  1) [000313] ------------              \--*  LCL_VAR   ref    V31 tmp20        u:2 $151

***** BB01
STMT00084 (IL   ???...  ???)
N005 ( 16, 10) [000308] --CXG-------              *  CALL      void   System.Diagnostics.Process.EnsureState $VN.Void
N003 (  1,  1) [000306] ------------ this in rcx  +--*  LCL_VAR   ref    V31 tmp20        u:2 $151
N004 (  1,  1) [000307] ------------ arg1 in rdx  \--*  CNS_INT   int    3 $46

***** BB01
STMT00088 (IL   ???...  ???)
N008 ( 18, 13) [000322] -ACXGO--R---              *  ASG       ref    $156
N007 (  1,  1) [000321] D------N----              +--*  LCL_VAR   ref    V32 tmp21        d:2 $156
N006 ( 18, 13) [000311] --CXGO------              \--*  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule $156
N005 (  4,  7) [000310] n---GO------ arg0 in rcx     \--*  IND       int    <l:$289, c:$288>
N004 (  2,  5) [000471] -------N----                    \--*  ADD       byref  $20a
N002 (  1,  1) [000309] ------------                       +--*  LCL_VAR   ref    V31 tmp20        u:2 (last use) $151
N003 (  1,  4) [000470] ------------                       \--*  CNS_INT   long   200 field offset Fseq[_processId] $1c9

***** BB01
STMT00019 (IL   ???...  ???)
N006 (  4,  4) [000062] -A-XG---R---              *  ASG       ref    <l:$19c, c:$19b>
N005 (  1,  1) [000061] D------N----              +--*  LCL_VAR   ref    V03 loc1         d:2 <l:$199, c:$159>
N004 (  4,  4) [000320] ---XG-------              \--*  IND       ref    <l:$19c, c:$19b>
N003 (  2,  2) [000474] -------N----                 \--*  ADD       byref  $20b
N001 (  1,  1) [000319] ------------                    +--*  LCL_VAR   ref    V32 tmp21        u:2 (last use) $156
N002 (  1,  1) [000473] ------------                    \--*  CNS_INT   long   40 field offset Fseq[<FileName>k__BackingField] $1c8

***** BB01
STMT00021 (IL   ???...  ???)
N016 ( 32, 30) [000069] -ACXG---R---              *  ASG       int    $28c
N015 (  1,  1) [000068] D------N----              +--*  LCL_VAR   int    V04 loc2         d:2 $28c
N014 ( 32, 30) [000329] --CXG-------              \--*  GE        int    $28c
N012 ( 27, 28) [000340] --CXG-------                 +--*  CALL      int    System.String.IndexOf $308
N005 (  1,  1) [000339] ------------ arg4 out+20     |  +--*  CNS_INT   int    5 $47
N007 (  3,  3) [000338] ---X-------- arg3 in r9      |  +--*  ARR_LENGTH int    <l:$28b, c:$28a>
N006 (  1,  1) [000337] ------------                 |  |  \--*  LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
N009 (  4, 12) [000476] #---G------- arg1 in rdx     |  +--*  IND       ref    $19f
N008 (  2, 10) [000475] H-----------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E "dotnet.exe" $112
N010 (  1,  1) [000063] ------------ this in rcx     |  +--*  LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
N011 (  1,  1) [000336] ------------ arg2 in r8      |  \--*  CNS_INT   int    0 $40
N013 (  1,  1) [000328] ------------                 \--*  CNS_INT   int    0 $40

***** BB01
STMT00023 (IL   ???...  ???)
N015 ( 26, 20) [000075] -ACXG---R---              *  ASG       ref    <l:$1aa, c:$1a9>
N014 (  1,  1) [000074] D------N----              +--*  LCL_VAR   ref    V05 loc3         d:2 <l:$1a8, c:$161>
N013 ( 26, 20) [000494] -ACXG-------              \--*  COMMA     ref    <l:$1aa, c:$1a9>
N003 ( 14,  5) [000482] -ACXG---R---                 +--*  ASG       ref    $15e
N002 (  1,  1) [000481] D------N----                 |  +--*  LCL_VAR   ref    V41 tmp30        d:2 $15e
N001 ( 14,  5) [000070] --CXG-------                 |  \--*  CALL      ref    System.Environment.GetCommandLineArgs $15e
N012 ( 12, 15) [000493] ---XG-------                 \--*  COMMA     ref    <l:$1aa, c:$1a9>
N007 (  8, 11) [000487] ---X--------                    +--*  ARR_BOUNDS_CHECK_Rng void   $1a5
N004 (  1,  1) [000072] ------------                    |  +--*  CNS_INT   int    0 $40
N006 (  3,  3) [000486] ---X--------                    |  \--*  ARR_LENGTH int    $28d
N005 (  1,  1) [000483] ------------                    |     \--*  LCL_VAR   ref    V41 tmp30        u:2 $15e
N011 (  4,  4) [000073] a---G-------                    \--*  IND       ref    <l:$1a8, c:$161>
N010 (  2,  2) [000492] -------N----                       \--*  ADD       byref  $400
N008 (  1,  1) [000484] ------------                          +--*  LCL_VAR   ref    V41 tmp30        u:2 (last use) $15e
N009 (  1,  1) [000491] ------------                          \--*  CNS_INT   long   16 Fseq[#FirstElem] $1c7

***** BB01
STMT00024 (IL 0x068...0x06E)
N007 ( 23, 21) [000079] -ACXG---R---              *  ASG       ref    $164
N006 (  1,  1) [000078] D------N----              +--*  LCL_VAR   ref    V06 loc4         d:2 $164
N005 ( 23, 21) [000077] --CXG-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator $164
N003 (  1,  1) [000076] ------------ this in rcx     +--*  LCL_VAR   ref    V00 arg0         u:1 (last use) $80
N004 (  2, 10) [000495] H----------- arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $114

------------ BB02 [070..072) -> BB13 (cond), preds={BB01} succs={BB03,BB13}

***** BB02
STMT00119 (IL 0x0E9...  ???)
N008 ( 27, 25) [000578] --CXG-------              *  JTRUE     void  
N007 ( 25, 23) [000571] J-CXG--N----              \--*  EQ        int    $28e
N005 ( 23, 21) [000572] --CXG-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext $30a
N003 (  1,  1) [000575] ------------ this in rcx     |  +--*  LCL_VAR   ref    V06 loc4         u:2 $164
N004 (  2, 10) [000576] H----------- arg1 in r11     |  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
N006 (  1,  1) [000577] ------------                 \--*  CNS_INT   int    0 $40

------------ BB03 [072..08B) -> BB05 (cond), preds={BB02,BB10} succs={BB04,BB05}

***** BB03
STMT00026 (IL 0x072...0x079)
N007 ( 23, 21) [000088] -ACXG---R---              *  ASG       ref    $442
N006 (  1,  1) [000087] D------N----              +--*  LCL_VAR   ref    V07 loc5         d:2 $442
N005 ( 23, 21) [000086] --CXG-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current $442
N003 (  1,  1) [000085] ------------ this in rcx     +--*  LCL_VAR   ref    V06 loc4         u:2 $164
N004 (  2, 10) [000498] H----------- arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $116

***** BB03
STMT00027 (IL 0x07B...0x089)
N005 ( 16, 16) [000092] -AC-----R---              *  ASG       ref    $1ab
N004 (  1,  1) [000091] D------N----              +--*  LCL_VAR   ref    V16 tmp5         d:2 $1ab
N003 ( 16, 16) [000090] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1ab
N002 (  2, 10) [000089] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $117

***** BB03
STMT00092 (IL 0x080...  ???)
N006 (  6,  6) [000347] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000346] n---GO-N----              +--*  IND       ref    $199
N003 (  2,  2) [000503] -------N----              |  \--*  ADD       byref  $20d
N001 (  1,  1) [000096] ------------              |     +--*  LCL_VAR   ref    V16 tmp5         u:2 $1ab
N002 (  1,  1) [000502] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_fileName] $1c4
N005 (  1,  1) [000097] ------------              \--*  LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>

***** BB03
STMT00031 (IL   ???...0x089)
N003 (  1,  3) [000105] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000104] D------N----              +--*  LCL_VAR   ref    V17 tmp6         d:2 $1ab
N001 (  1,  1) [000095] ------------              \--*  LCL_VAR   ref    V16 tmp5         u:2 $1ab

***** BB03
STMT00032 (IL   ???...  ???)
N003 (  1,  3) [000108] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000107] D------N----              +--*  LCL_VAR   ref    V18 tmp7         d:2 $1ab
N001 (  1,  1) [000099] ------------              \--*  LCL_VAR   ref    V17 tmp6         u:2 (last use) $1ab

***** BB03
STMT00030 (IL 0x087...  ???)
N004 (  5,  5) [000103] ------------              *  JTRUE     void  
N003 (  3,  3) [000102] J------N----              \--*  NE        int    $28f
N001 (  1,  1) [000100] ------------                 +--*  LCL_VAR   int    V04 loc2         u:2 $28c
N002 (  1,  1) [000101] ------------                 \--*  CNS_INT   int    0 $40

------------ BB04 [08B..08F) -> BB06 (always), preds={BB03} succs={BB06}

***** BB04
STMT00053 (IL   ???...0x08D)
N003 (  1,  3) [000203] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000202] D------N----              +--*  LCL_VAR   ref    V19 tmp8         d:4 $1ab
N001 (  1,  1) [000110] ------------              \--*  LCL_VAR   ref    V18 tmp7         u:2 (last use) $1ab

***** BB04
STMT00054 (IL   ???...  ???)
N003 (  1,  3) [000206] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000205] D------N----              +--*  LCL_VAR   ref    V20 tmp9         d:4 $1ab
N001 (  1,  1) [000111] ------------              \--*  LCL_VAR   ref    V19 tmp8         u:4 (last use) $1ab

***** BB04
STMT00055 (IL   ???...  ???)
N003 (  1,  3) [000209] -A------R---              *  ASG       ref    $442
N002 (  1,  1) [000208] D------N----              +--*  LCL_VAR   ref    V21 tmp10        d:4 $442
N001 (  1,  1) [000201] ------------              \--*  LCL_VAR   ref    V07 loc5         u:2 (last use) $442

------------ BB05 [08F..09C), preds={BB03} succs={BB06}

***** BB05
STMT00033 (IL   ???...0x097)
N003 (  1,  3) [000119] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000118] D------N----              +--*  LCL_VAR   ref    V19 tmp8         d:3 $1ab
N001 (  1,  1) [000112] ------------              \--*  LCL_VAR   ref    V18 tmp7         u:2 (last use) $1ab

***** BB05
STMT00034 (IL   ???...  ???)
N003 (  1,  3) [000122] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000121] D------N----              +--*  LCL_VAR   ref    V20 tmp9         d:3 $1ab
N001 (  1,  1) [000113] ------------              \--*  LCL_VAR   ref    V19 tmp8         u:3 (last use) $1ab

***** BB05
STMT00035 (IL   ???...  ???)
N010 ( 20, 22) [000125] -ACXG---R---              *  ASG       ref    $44e
N009 (  1,  1) [000124] D------N----              +--*  LCL_VAR   ref    V21 tmp10        d:3 $44e
N008 ( 20, 22) [000117] --CXG-------              \--*  CALL      ref    System.String.Concat $44e
N005 (  4, 12) [000505] #---G------- arg1 in rdx     +--*  IND       ref    $1ae
N004 (  2, 10) [000504] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E " " $119
N006 (  1,  1) [000114] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V05 loc3         u:2 <l:$1a8, c:$161>
N007 (  1,  1) [000116] ------------ arg2 in r8      \--*  LCL_VAR   ref    V07 loc5         u:2 (last use) $442

------------ BB06 [09C..0BB) -> BB09 (cond), preds={BB04,BB05} succs={BB07,BB09}

***** BB06
STMT00125 (IL   ???...  ???)
N005 (  0,  0) [000596] -A------R---              *  ASG       ref   
N004 (  0,  0) [000594] D------N----              +--*  LCL_VAR   ref    V21 tmp10        d:2
N003 (  0,  0) [000595] ------------              \--*  PHI       ref   
N001 (  0,  0) [000606] ------------ pred BB04       +--*  PHI_ARG   ref    V21 tmp10        u:4 $442
N002 (  0,  0) [000603] ------------ pred BB05       \--*  PHI_ARG   ref    V21 tmp10        u:3 $44e

***** BB06
STMT00124 (IL   ???...  ???)
N005 (  0,  0) [000593] -A------R---              *  ASG       ref   
N004 (  0,  0) [000591] D------N----              +--*  LCL_VAR   ref    V20 tmp9         d:2
N003 (  0,  0) [000592] ------------              \--*  PHI       ref   
N001 (  0,  0) [000607] ------------ pred BB04       +--*  PHI_ARG   ref    V20 tmp9         u:4 $1ab
N002 (  0,  0) [000604] ------------ pred BB05       \--*  PHI_ARG   ref    V20 tmp9         u:3 $1ab

***** BB06
STMT00123 (IL   ???...  ???)
N005 (  0,  0) [000590] -A------R---              *  ASG       ref   
N004 (  0,  0) [000588] D------N----              +--*  LCL_VAR   ref    V19 tmp8         d:2
N003 (  0,  0) [000589] ------------              \--*  PHI       ref   
N001 (  0,  0) [000608] ------------ pred BB04       +--*  PHI_ARG   ref    V19 tmp8         u:4 $1ab
N002 (  0,  0) [000605] ------------ pred BB05       \--*  PHI_ARG   ref    V19 tmp8         u:3 $1ab

***** BB06
STMT00093 (IL   ???...  ???)
N006 (  6,  6) [000350] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000349] n---GO-N----              +--*  IND       ref    $251
N003 (  2,  2) [000510] -------N----              |  \--*  ADD       byref  $20e
N001 (  1,  1) [000128] ------------              |     +--*  LCL_VAR   ref    V20 tmp9         u:2 (last use) $1ab
N002 (  1,  1) [000509] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_arguments] $1c7
N005 (  1,  1) [000129] ------------              \--*  LCL_VAR   ref    V21 tmp10        u:2 (last use) $251

***** BB06
STMT00094 (IL 0x0A1...  ???)
N006 (  7, 10) [000355] -A--GO------              *  ASG       bool   $VN.Void
N004 (  5,  8) [000354] n---GO-N----              +--*  IND       bool   $40
N003 (  2,  5) [000512] -------N----              |  \--*  ADD       byref  $20f
N001 (  1,  1) [000131] ------------              |     +--*  LCL_VAR   ref    V19 tmp8         u:2 $1ab
N002 (  1,  4) [000511] ------------              |     \--*  CNS_INT   long   130 field offset Fseq[<UseShellExecute>k__BackingField] $1cb
N005 (  1,  1) [000353] ------------              \--*  CNS_INT   int    0 $40

***** BB06
STMT00040 (IL 0x0AA...0x0B9)
N006 (  4,  4) [000145] -A--GO--R---              *  ASG       ref    <l:$1bc, c:$1bb>
N005 (  1,  1) [000144] D------N----              +--*  LCL_VAR   ref    V23 tmp12        d:2 <l:$1b9, c:$454>
N004 (  4,  4) [000138] n---GO------              \--*  IND       ref    <l:$1bc, c:$1bb>
N003 (  2,  2) [000514] -------N----                 \--*  ADD       byref  $207
N001 (  1,  1) [000137] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000513] ------------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers] $1c4

***** BB06
STMT00039 (IL 0x0AA...  ???)
N006 (  4,  4) [000143] -A--GO--R---              *  ASG       ref    <l:$542, c:$541>
N005 (  1,  1) [000142] D------N----              +--*  LCL_VAR   ref    V22 tmp11        d:2 <l:$540, c:$456>
N004 (  4,  4) [000141] n---GO------              \--*  IND       ref    <l:$542, c:$541>
N003 (  2,  2) [000516] -------N----                 \--*  ADD       byref  $210
N001 (  1,  1) [000140] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000515] ------------                    \--*  CNS_INT   long   48 field offset Fseq[<>9__2] $1cc

***** BB06
STMT00042 (IL   ???...0x0B9)
N003 (  1,  3) [000153] -A------R---              *  ASG       ref    <l:$1b9, c:$454>
N002 (  1,  1) [000152] D------N----              +--*  LCL_VAR   ref    V24 tmp13        d:2 <l:$1b9, c:$454>
N001 (  1,  1) [000146] ------------              \--*  LCL_VAR   ref    V23 tmp12        u:2 (last use) <l:$1b9, c:$454>

***** BB06
STMT00043 (IL   ???...  ???)
N003 (  1,  3) [000156] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000155] D------N----              +--*  LCL_VAR   ref    V25 tmp14        d:2 $1ab
N001 (  1,  1) [000139] ------------              \--*  LCL_VAR   ref    V19 tmp8         u:2 (last use) $1ab

***** BB06
STMT00044 (IL   ???...  ???)
N003 (  1,  3) [000159] -A------R---              *  ASG       ref    <l:$540, c:$456>
N002 (  1,  1) [000158] D------N----              +--*  LCL_VAR   ref    V26 tmp15        d:2 <l:$540, c:$456>
N001 (  1,  1) [000147] ------------              \--*  LCL_VAR   ref    V22 tmp11        u:2 <l:$540, c:$456>

***** BB06
STMT00041 (IL   ???...  ???)
N004 (  5,  5) [000151] ------------              *  JTRUE     void  
N003 (  3,  3) [000150] J------N----              \--*  NE        int    <l:$291, c:$290>
N001 (  1,  1) [000148] ------------                 +--*  LCL_VAR   ref    V26 tmp15        u:2 (last use) <l:$540, c:$456>
N002 (  1,  1) [000149] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB07 [000..0D3), preds={BB06} succs={BB08}

***** BB07
STMT00048 (IL   ???...0x0CA)
N005 ( 16, 16) [000184] -AC-----R---              *  ASG       ref    $543
N004 (  1,  1) [000183] D------N----              +--*  LCL_VAR   ref    V28 tmp17        d:2 $543
N003 ( 16, 16) [000182] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $543
N002 (  2, 10) [000181] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $11e

------------ BB08 [000..000), preds={BB07} succs={BB09}

***** BB08
STMT00096 (IL   ???...  ???)
N006 (  6,  6) [000362] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000361] n---GO-N----              +--*  IND       ref    $180
N003 (  2,  2) [000519] -------N----              |  \--*  ADD       byref  $211
N001 (  1,  1) [000185] ------------              |     +--*  LCL_VAR   ref    V28 tmp17        u:2 $543
N002 (  1,  1) [000518] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $1c4
N005 (  1,  1) [000360] ------------              \--*  LCL_VAR   ref    V02 loc0         u:2 $180

***** BB08
STMT00097 (IL   ???...  ???)
N006 (  7, 15) [000366] -A--GO------              *  ASG       long   $VN.Void
N004 (  4,  4) [000365] n---GO-N----              +--*  IND       long   $120
N003 (  2,  2) [000521] -------N----              |  \--*  ADD       byref  $212
N001 (  1,  1) [000363] ------------              |     +--*  LCL_VAR   ref    V28 tmp17        u:2 $543
N002 (  1,  1) [000520] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $1c5
N005 (  2, 10) [000180] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $120

***** BB08
STMT00051 (IL   ???...0x0CC)
N006 (  6,  6) [000192] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000191] n---GO-N----              +--*  IND       ref    $543
N003 (  2,  2) [000523] -------N----              |  \--*  ADD       byref  $210
N001 (  1,  1) [000178] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000522] ------------              |     \--*  CNS_INT   long   48 field offset Fseq[<>9__2] $1cc
N005 (  1,  1) [000187] ------------              \--*  LCL_VAR   ref    V28 tmp17        u:2 $543

***** BB08
STMT00052 (IL   ???...0x0D1)
N003 (  1,  3) [000199] -A------R---              *  ASG       ref    $543
N002 (  1,  1) [000198] D------N----              +--*  LCL_VAR   ref    V26 tmp15        d:4 $543
N001 (  1,  1) [000193] ------------              \--*  LCL_VAR   ref    V28 tmp17        u:2 (last use) $543

------------ BB09 [000..0E9), preds={BB06,BB08} succs={BB10}

***** BB09
STMT00122 (IL   ???...  ???)
N005 (  0,  0) [000587] -A------R---              *  ASG       ref   
N004 (  0,  0) [000585] D------N----              +--*  LCL_VAR   ref    V26 tmp15        d:3
N003 (  0,  0) [000586] ------------              \--*  PHI       ref   
N001 (  0,  0) [000602] ------------ pred BB08       +--*  PHI_ARG   ref    V26 tmp15        u:4 $543
N002 (  0,  0) [000601] ------------ pred BB06       \--*  PHI_ARG   ref    V26 tmp15        u:2 <l:$540, c:$456>

***** BB09
STMT00045 (IL   ???...0x0E4)
N005 ( 16, 16) [000172] -AC-----R---              *  ASG       ref    $54b
N004 (  1,  1) [000171] D------N----              +--*  LCL_VAR   ref    V27 tmp16        d:2 $54b
N003 ( 16, 16) [000170] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $54b
N002 (  2, 10) [000169] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $123

------------ BB10 [000..0F2) -> BB03 (cond), preds={BB09} succs={BB11,BB03}

***** BB10
STMT00100 (IL   ???...  ???)
N006 (  6,  6) [000374] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000373] n---GO-N----              +--*  IND       ref    $180
N003 (  2,  2) [000526] -------N----              |  \--*  ADD       byref  $213
N001 (  1,  1) [000173] ------------              |     +--*  LCL_VAR   ref    V27 tmp16        u:2 $54b
N002 (  1,  1) [000525] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $1c4
N005 (  1,  1) [000372] ------------              \--*  LCL_VAR   ref    V02 loc0         u:2 $180

***** BB10
STMT00101 (IL   ???...  ???)
N006 (  7, 15) [000378] -A--GO------              *  ASG       long   $VN.Void
N004 (  4,  4) [000377] n---GO-N----              +--*  IND       long   $125
N003 (  2,  2) [000528] -------N----              |  \--*  ADD       byref  $214
N001 (  1,  1) [000375] ------------              |     +--*  LCL_VAR   ref    V27 tmp16        u:2 $54b
N002 (  1,  1) [000527] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $1c5
N005 (  2, 10) [000168] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $125

***** BB10
STMT00047 (IL 0x0DF...  ???)
N013 ( 36, 21) [000177] --CXG-------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue $VN.Void
N010 ( 17, 11) [000533] -ACXG---R-L- arg1 SETUP   +--*  ASG       ref    $464
N009 (  1,  1) [000532] D------N----              |  +--*  LCL_VAR   ref    V42 tmp31        d:2 $464
N008 ( 17, 11) [000176] --CXG-------              |  \--*  CALL      ref    SolutionAnalyzer.IPC.CreateSession $464
N005 (  1,  1) [000165] ------------ arg0 in rcx  |     +--*  LCL_VAR   ref    V25 tmp14        u:2 (last use) $1ab
N006 (  1,  1) [000166] ------------ arg1 in rdx  |     +--*  LCL_VAR   ref    V26 tmp15        u:3 (last use) $258
N007 (  1,  1) [000175] ------------ arg2 in r8   |     \--*  LCL_VAR   ref    V27 tmp16        u:2 (last use) $54b
N011 (  1,  1) [000534] ------------ arg1 in rdx  +--*  LCL_VAR   ref    V42 tmp31        u:2 (last use) $464
N012 (  1,  1) [000164] ------------ this in rcx  \--*  LCL_VAR   ref    V24 tmp13        u:2 (last use) <l:$1b9, c:$454>

***** BB10
STMT00025 (IL 0x0E9...0x0F0)
N008 ( 27, 25) [000084] --CXG-------              *  JTRUE     void  
N007 ( 25, 23) [000083] J-CXG--N----              \--*  NE        int    $292
N005 ( 23, 21) [000081] --CXG-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext $5c0
N003 (  1,  1) [000080] ------------ this in rcx     |  +--*  LCL_VAR   ref    V06 loc4         u:2 $164
N004 (  2, 10) [000536] H----------- arg1 in r11     |  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
N006 (  1,  1) [000082] ------------                 \--*  CNS_INT   int    0 $40

------------ BB11 [???..???) -> BB13 (always), preds={BB10} succs={BB13}

------------ BB12 [000..000) (throw), preds={} succs={}

***** BB12
STMT00102 (IL   ???...  ???)
N001 ( 14,  5) [000379] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance $VN.Void

------------ BB13 [0F4..0F8), preds={BB02,BB11} succs={BB14}

------------ BB14 [0F8..100), preds={BB13} succs={BB15}

***** BB14
STMT00117 (IL   ???...  ???)
N005 ( 23, 21) [000435] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose $VN.Void
N003 (  1,  1) [000436] ------------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         u:2 (last use) $164
N004 (  2, 10) [000539] H----------- arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127

------------ BB15 [100..127) -> BB17 (always), preds={BB14} succs={BB17}

***** BB15
STMT00103 (IL 0x100...  ???)
N006 (  4,  4) [000384] -A--GO--R---              *  ASG       ref    <l:$569, c:$568>
N005 (  1,  1) [000383] D------N----              +--*  LCL_VAR   ref    V35 tmp24        d:2 <l:$567, c:$16e>
N004 (  4,  4) [000213] n---GO------              \--*  IND       ref    <l:$569, c:$568>
N003 (  2,  2) [000546] -------N----                 \--*  ADD       byref  $207
N001 (  1,  1) [000212] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000545] ------------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers] $1c4

***** BB15
STMT00057 (IL   ???...  ???)
N009 (  9,  9) [000217] -A-XGO--R---              *  ASG       int    $VN.Void
N008 (  4,  4) [000216] n---GO-N----              +--*  IND       int    $299
N007 (  2,  2) [000548] -------N----              |  \--*  ADD       byref  $201
N005 (  1,  1) [000211] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N006 (  1,  1) [000547] ------------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1
N004 (  4,  4) [000382] ---XG-------              \--*  IND       int    <l:$29b, c:$29a>
N003 (  2,  2) [000550] -------N----                 \--*  ADD       byref  <l:$216, c:$215>
N001 (  1,  1) [000381] ------------                    +--*  LCL_VAR   ref    V35 tmp24        u:2 (last use) <l:$567, c:$16e>
N002 (  1,  1) [000549] ------------                    \--*  CNS_INT   long   24 field offset Fseq[_size] $1c5

***** BB15
STMT00058 (IL 0x111...0x11D)
N005 ( 16, 16) [000224] -AC-----R---              *  ASG       ref    $56c
N004 (  1,  1) [000223] D------N----              +--*  LCL_VAR   ref    V29 tmp18        d:2 $56c
N003 ( 16, 16) [000222] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $56c
N002 (  2, 10) [000221] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $12b

***** BB15
STMT00109 (IL   ???...  ???)
N006 (  4,  4) [000402] -A--GO--R---              *  ASG       int    <l:$2a3, c:$2a2>
N005 (  1,  1) [000401] D------N----              +--*  LCL_VAR   int    V37 tmp26        d:2 <l:$299, c:$30c>
N004 (  4,  4) [000220] n---GO------              \--*  IND       int    <l:$2a3, c:$2a2>
N003 (  2,  2) [000553] -------N----                 \--*  ADD       byref  $201
N001 (  1,  1) [000219] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000552] ------------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1

***** BB15
STMT00104 (IL   ???...  ???)
N005 ( 16, 16) [000389] -AC-----R---              *  ASG       ref    $56d
N004 (  1,  1) [000388] D------N----              +--*  LCL_VAR   ref    V36 tmp25        d:2 $56d
N003 ( 16, 16) [000387] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $56d
N002 (  2, 10) [000386] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $12c

***** BB15
STMT00110 (IL   ???...  ???)
N007 ( 17, 12) [000406] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor $VN.Void
N004 (  1,  1) [000390] ------------ this in rcx  +--*  LCL_VAR   ref    V36 tmp25        u:2 $56d
N005 (  1,  1) [000404] ------------ arg1 in rdx  +--*  CNS_INT   int    0 $40
N006 (  1,  1) [000405] ------------ arg2 in r8   \--*  CNS_INT   ref    null $VN.Null

***** BB15
STMT00106 (IL   ???...  ???)
N006 (  6,  6) [000394] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000393] n---GO-N----              +--*  IND       ref    $56d
N003 (  2,  2) [000559] -------N----              |  \--*  ADD       byref  $217
N001 (  1,  1) [000225] ------------              |     +--*  LCL_VAR   ref    V29 tmp18        u:2 $56c
N002 (  1,  1) [000558] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_workItems] $1c4
N005 (  1,  1) [000392] ------------              \--*  LCL_VAR   ref    V36 tmp25        u:2 (last use) $56d

***** BB15
STMT00108 (IL   ???...  ???)
N006 (  6,  6) [000400] -A--GO------              *  ASG       int    $VN.Void
N004 (  4,  4) [000399] n---GO-N----              +--*  IND       int    $299
N003 (  2,  2) [000561] -------N----              |  \--*  ADD       byref  $218
N001 (  1,  1) [000397] ------------              |     +--*  LCL_VAR   ref    V29 tmp18        u:2 $56c
N002 (  1,  1) [000560] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_workItemsToComplete] $1c7
N005 (  1,  1) [000398] ------------              \--*  LCL_VAR   int    V37 tmp26        u:2 (last use) <l:$299, c:$30c>

***** BB15
STMT00060 (IL 0x11D...  ???)
N006 (  6,  6) [000229] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000228] n---GO-N----              +--*  IND       ref    $56c
N003 (  2,  2) [000563] -------N----              |  \--*  ADD       byref  $208
N001 (  1,  1) [000218] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000562] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter] $1c7
N005 (  1,  1) [000227] ------------              \--*  LCL_VAR   ref    V29 tmp18        u:2 (last use) $56c

***** BB15
STMT00061 (IL 0x122...0x123)
N003 (  1,  3) [000232] -A------R---              *  ASG       int    $40
N002 (  1,  1) [000231] D------N----              +--*  LCL_VAR   int    V10 loc8         d:2 $40
N001 (  1,  1) [000230] ------------              \--*  CNS_INT   int    0 $40

------------ BB16 [127..133), preds={BB20} succs={BB17}

***** BB16
STMT00065 (IL 0x127...0x131)
N003 ( 15,  8) [000243] --CXG-------              *  CALL      void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0 $VN.Void
N002 (  1,  1) [000242] ------------ this in rcx  \--*  LCL_VAR   ref    V02 loc0         u:2 $180

***** BB16
STMT00066 (IL 0x12D...  ???)
N005 (  3,  3) [000248] -A------R---              *  ASG       int    $2ad
N004 (  1,  1) [000247] D------N----              +--*  LCL_VAR   int    V10 loc8         d:4 $2ad
N003 (  3,  3) [000246] ------------              \--*  ADD       int    $2ad
N001 (  1,  1) [000244] ------------                 +--*  LCL_VAR   int    V10 loc8         u:3 (last use) $2ca
N002 (  1,  1) [000245] ------------                 \--*  CNS_INT   int    1 $41

------------ BB17 [000..147) -> BB19 (cond), preds={BB15,BB16} succs={BB18,BB19}

***** BB17
STMT00120 (IL   ???...  ???)
N005 (  0,  0) [000581] -A------R---              *  ASG       int   
N004 (  0,  0) [000579] D------N----              +--*  LCL_VAR   int    V10 loc8         d:3
N003 (  0,  0) [000580] ------------              \--*  PHI       int   
N001 (  0,  0) [000598] ------------ pred BB16       +--*  PHI_ARG   int    V10 loc8         u:4
N002 (  0,  0) [000597] ------------ pred BB15       \--*  PHI_ARG   int    V10 loc8         u:2 $40

***** BB17
STMT00114 (IL   ???...  ???)
N006 (  4,  4) [000424] -A--GO--R---              *  ASG       int    <l:$2a9, c:$2a8>
N005 (  1,  1) [000423] D------N----              +--*  LCL_VAR   int    V39 tmp28        d:2 <l:$2a7, c:$680>
N004 (  4,  4) [000237] n---GO------              \--*  IND       int    <l:$2a9, c:$2a8>
N003 (  2,  2) [000566] -------N----                 \--*  ADD       byref  $201
N001 (  1,  1) [000236] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000565] ------------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1

***** BB17
STMT00111 (IL   ???...  ???)
N004 (  5,  5) [000414] ------------              *  JTRUE     void  
N003 (  3,  3) [000413] J------N----              \--*  GE        int    <l:$2ab, c:$2aa>
N001 (  1,  1) [000412] ------------                 +--*  LCL_VAR   int    V39 tmp28        u:2 <l:$2a7, c:$680>
N002 (  1,  1) [000411] ------------                 \--*  CNS_INT   int    8 $57

------------ BB18 [000..000) -> BB20 (always), preds={BB17} succs={BB20}

***** BB18
STMT00113 (IL   ???...  ???)
N003 (  1,  3) [000421] -A------R---              *  ASG       int    <l:$2a7, c:$680>
N002 (  1,  1) [000420] D------N----              +--*  LCL_VAR   int    V38 tmp27        d:4 <l:$2a7, c:$680>
N001 (  1,  1) [000419] ------------              \--*  LCL_VAR   int    V39 tmp28        u:2 (last use) <l:$2a7, c:$680>

------------ BB19 [000..000), preds={BB17} succs={BB20}

***** BB19
STMT00112 (IL   ???...  ???)
N003 (  1,  3) [000417] -A------R---              *  ASG       int    $57
N002 (  1,  1) [000416] D------N----              +--*  LCL_VAR   int    V38 tmp27        d:3 $57
N001 (  1,  1) [000415] ------------              \--*  CNS_INT   int    8 $57

------------ BB20 [???..???) -> BB16 (cond), preds={BB18,BB19} succs={BB21,BB16}

***** BB20
STMT00121 (IL   ???...  ???)
N005 (  0,  0) [000584] -A------R---              *  ASG       int   
N004 (  0,  0) [000582] D------N----              +--*  LCL_VAR   int    V38 tmp27        d:2
N003 (  0,  0) [000583] ------------              \--*  PHI       int   
N001 (  0,  0) [000600] ------------ pred BB18       +--*  PHI_ARG   int    V38 tmp27        u:4 <l:$2a7, c:$680>
N002 (  0,  0) [000599] ------------ pred BB19       \--*  PHI_ARG   int    V38 tmp27        u:3 $57

***** BB20
STMT00064 (IL   ???...  ???)
N004 (  5,  5) [000241] ------------              *  JTRUE     void  
N003 (  3,  3) [000240] J------N----              \--*  LT        int    $2ac
N001 (  1,  1) [000233] ------------                 +--*  LCL_VAR   int    V10 loc8         u:3 $2ca
N002 (  1,  1) [000422] ------------                 \--*  LCL_VAR   int    V38 tmp27        u:2 (last use) $2cb

------------ BB21 [147..153) (return), preds={BB20} succs={}

***** BB21
STMT00115 (IL 0x147...  ???)
N006 (  4,  4) [000429] -A--GO--R---              *  ASG       ref    <l:$575, c:$574>
N005 (  1,  1) [000428] D------N----              +--*  LCL_VAR   ref    V40 tmp29        d:2 <l:$573, c:$177>
N004 (  4,  4) [000250] n---GO------              \--*  IND       ref    <l:$575, c:$574>
N003 (  2,  2) [000568] -------N----                 \--*  ADD       byref  $205
N001 (  1,  1) [000249] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 (last use) $180
N002 (  1,  1) [000567] ------------                    \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun] $1c5

***** BB21
STMT00068 (IL   ???...  ???)
N005 (  5,  5) [000253] ---XG-------              *  RETURN    ref    $17a
N004 (  4,  4) [000427] ---XG-------              \--*  IND       ref    <l:$57b, c:$57a>
N003 (  2,  2) [000570] -------N----                 \--*  ADD       byref  <l:$21a, c:$219>
N001 (  1,  1) [000426] ------------                    +--*  LCL_VAR   ref    V40 tmp29        u:2 (last use) <l:$573, c:$177>
N002 (  1,  1) [000569] ------------                    \--*  CNS_INT   long   8 field offset Fseq[_task] $1c4

------------ BB22 [0F4..0F8) -> BB24 (cond), preds={} succs={BB23,BB24}

***** BB22
STMT00069 (IL 0x0F4...0x0F6)
N004 (  5,  5) [000257] ------------              *  JTRUE     void  
N003 (  3,  3) [000256] J------N----              \--*  EQ        int    $293
N001 (  1,  1) [000254] ------------                 +--*  LCL_VAR   ref    V06 loc4         u:2 $164
N002 (  1,  1) [000255] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB23 [0F8..0FF), preds={BB22} succs={BB24}

***** BB23
STMT00071 (IL 0x0F8...0x0FA)
N005 ( 23, 21) [000260] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose $VN.Void
N003 (  1,  1) [000259] ------------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         u:2 (last use) $164
N004 (  2, 10) [000542] H----------- arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127

------------ BB24 [0FF..100) (finret), preds={BB22,BB23} succs={}

***** BB24
STMT00070 (IL 0x0FF...0x0FF)
N001 (  0,  0) [000258] ------------              *  RETFILT   void   $600

-------------------------------------------------------------------------------------------------------------------
Looking for array size assertions for: $3c2
ArrSize for lengthVN:3C2 = 0
[RangeCheck::GetRange] BB01N004 (  1,  1) [000072] ------------              *  CNS_INT   int    0 $40
{
   Computed Range [000072] => <0, 0>
}
Does overflow [000072]?
[000072] does not overflow
Range value <0, 0>
[RangeCheck::Widen] BB01, 
[000072]
<0, 0> BetweenBounds <0, [000486]>
$3c2 upper bound is:  {ARR_LENGTH($15e)}
Array size is: 0

*************** Finishing PHASE Optimize index checks

*************** Starting PHASE Update flow graph opt pass

*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB13 ( cond ) T0      try {       keep i try label hascall gcsafe 
BB03 [0002]  2  0    BB02,BB10             4     0 [072..08B)-> BB05 ( cond ) T0                  i Loop label target hascall gcsafe newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  2     0 [08B..08F)-> BB06 (always) T0                  i gcsafe bwd 
BB05 [0004]  1  0    BB03                  2     0 [08F..09C)                 T0                  i label target hascall gcsafe bwd 
BB06 [0005]  2  0    BB04,BB05             4     0 [09C..0BB)-> BB09 ( cond ) T0                  i label target gcsafe bwd 
BB07 [0006]  1  0    BB06                  2     0 [000..0D3)                 T0                  i hascall gcsafe newobj bwd 
BB08 [0041]  1  0    BB07                  2     0 [000..000)                 T0                  i internal label target gcsafe newobj bwd 
BB09 [0007]  2  0    BB06,BB08             4     0 [000..0E9)                 T0                  i label target hascall gcsafe newobj bwd 
BB10 [0045]  1  0    BB09                  4     0 [000..0F2)-> BB03 ( cond ) T0                  i label target hascall gcsafe newobj bwd 
BB11 [0061]  1  0    BB10                  0.50    [???..???)-> BB13 (always) T0                  internal gcsafe 
BB12 [0044]  0  0                          0       [000..000)        (throw ) T0      }           i internal rare label target hascall gcsafe bwd 
BB13 [0057]  2       BB02,BB11             1       [0F4..0F8)                                     keep i label target gcsafe cfb 
BB14 [0058]  1       BB13                  0.50    [0F8..100)                                     i hascall gcsafe 
BB15 [0013]  1       BB14                  1       [100..127)-> BB17 (always)                     i label target hascall gcsafe newobj 
BB16 [0014]  1       BB20                  2     1 [127..133)                                     i Loop label target hascall gcsafe bwd bwd-target 
BB17 [0015]  2       BB15,BB16             8     1 [000..147)-> BB19 ( cond )                     i label target gcsafe bwd 
BB18 [0053]  1       BB17                  2     1 [000..000)-> BB20 (always)                     i internal gcsafe bwd 
BB19 [0054]  1       BB17                  2     1 [000..000)                                     i internal label target gcsafe bwd 
BB20 [0055]  2       BB18,BB19             8     1 [???..???)-> BB16 ( cond )                     internal label target gcsafe bwd 
BB21 [0016]  1       BB20                  1       [147..153)        (return)                     i gcsafe 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB22 [0010]  1     0                       0       [0F4..0F8)-> BB24 ( cond )    H0 F fault {     keep i rare label target flet 
BB23 [0011]  1     0 BB22                  0       [0F8..0FF)                    H0               i rare hascall gcsafe 
BB24 [0012]  2     0 BB22,BB23             0       [0FF..100)        (finret)    H0   }           i rare label target 
-----------------------------------------------------------------------------------------------------------------------------------------


Compacting blocks BB07 and BB08:
*************** In fgDebugCheckBBlist

Compacting blocks BB09 and BB10:
*************** In fgDebugCheckBBlist
fgRemoveBlock BB12

Removing unreachable BB12

Removing statement STMT00102 (IL   ???...  ???)
N001 ( 14,  5) [000379] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance $VN.Void
 in BB12 as useless:

BB12 becomes empty

UpdateLoopsBeforeRemoveBlock Before: L00, from BB03 to BB09 (Head=BB02, Entry=BB03, ExitCnt=3)
UpdateLoopsBeforeRemoveBlock After: L00, from BB03 to BB09 (Head=BB02, Entry=BB03, ExitCnt=3)
UpdateLoopsBeforeRemoveBlock Before: L01, from BB16 to BB20 (Head=BB15, Entry=BB17, ExitCnt=1 at BB20)
UpdateLoopsBeforeRemoveBlock After: L01, from BB16 to BB20 (Head=BB15, Entry=BB17, ExitCnt=1 at BB20)EH#0: New last block of try: BB11

Compacting blocks BB13 and BB14:
*************** In fgDebugCheckBBlist

Compacting blocks BB13 and BB15:
*************** In fgDebugCheckBBlist
fgRemoveBlock BB11
Removing empty BB11

UpdateLoopsBeforeRemoveBlock Before: L00, from BB03 to BB09 (Head=BB02, Entry=BB03, ExitCnt=3)
UpdateLoopsBeforeRemoveBlock After: L00, from BB03 to BB09 (Head=BB02, Entry=BB03, ExitCnt=3)
UpdateLoopsBeforeRemoveBlock Before: L01, from BB16 to BB20 (Head=BB13, Entry=BB17, ExitCnt=1 at BB20)
UpdateLoopsBeforeRemoveBlock After: L01, from BB16 to BB20 (Head=BB13, Entry=BB17, ExitCnt=1 at BB20)EH#0: New last block of try: BB09

After updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB13 ( cond ) T0      try {       keep i try label hascall gcsafe 
BB03 [0002]  2  0    BB02,BB09             4     0 [072..08B)-> BB05 ( cond ) T0                  i Loop label target hascall gcsafe newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  2     0 [08B..08F)-> BB06 (always) T0                  i gcsafe bwd 
BB05 [0004]  1  0    BB03                  2     0 [08F..09C)                 T0                  i label target hascall gcsafe bwd 
BB06 [0005]  2  0    BB04,BB05             4     0 [09C..0BB)-> BB09 ( cond ) T0                  i label target gcsafe bwd 
BB07 [0006]  1  0    BB06                  2     0 [000..0D3)                 T0                  i hascall gcsafe newobj bwd 
BB09 [0007]  2  0    BB06,BB07             4     0 [000..0F2)-> BB03 ( cond ) T0      }           i label target hascall gcsafe newobj bwd 
BB13 [0057]  2       BB02,BB09             1       [0F4..127)-> BB17 (always)                     keep i label target gcsafe newobj cfb 
BB16 [0014]  1       BB20                  2     1 [127..133)                                     i Loop label target hascall gcsafe bwd bwd-target 
BB17 [0015]  2       BB13,BB16             8     1 [000..147)-> BB19 ( cond )                     i label target gcsafe bwd 
BB18 [0053]  1       BB17                  2     1 [000..000)-> BB20 (always)                     i internal gcsafe bwd 
BB19 [0054]  1       BB17                  2     1 [000..000)                                     i internal label target gcsafe bwd 
BB20 [0055]  2       BB18,BB19             8     1 [???..???)-> BB16 ( cond )                     internal label target gcsafe bwd 
BB21 [0016]  1       BB20                  1       [147..153)        (return)                     i gcsafe 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB22 [0010]  1     0                       0       [0F4..0F8)-> BB24 ( cond )    H0 F fault {     keep i rare label target flet 
BB23 [0011]  1     0 BB22                  0       [0F8..0FF)                    H0               i rare hascall gcsafe 
BB24 [0012]  2     0 BB22,BB23             0       [0FF..100)        (finret)    H0   }           i rare label target 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB02..BB09 [070..0F4), Fault   at BB22..BB24 [0F4..100)
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Update flow graph opt pass

*************** Starting PHASE Compute edge weights (2, false)
fgComputeEdgeWeights() found inconsistent profile data, not using the edge weights

*************** Finishing PHASE Compute edge weights (2, false)

*************** Starting PHASE Insert GC Polls

*************** Finishing PHASE Insert GC Polls [no changes]

*************** Starting PHASE Determine first cold block

*************** In fgDetermineFirstColdBlock()
No procedure splitting will be done for this method

*************** Finishing PHASE Determine first cold block
Trees before Rationalize IR

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB13 ( cond ) T0      try {       keep i try label hascall gcsafe 
BB03 [0002]  2  0    BB02,BB09             4     0 [072..08B)-> BB05 ( cond ) T0                  i Loop label target hascall gcsafe newobj bwd bwd-target 
BB04 [0003]  1  0    BB03                  2     0 [08B..08F)-> BB06 (always) T0                  i gcsafe bwd 
BB05 [0004]  1  0    BB03                  2     0 [08F..09C)                 T0                  i label target hascall gcsafe bwd 
BB06 [0005]  2  0    BB04,BB05             4     0 [09C..0BB)-> BB09 ( cond ) T0                  i label target gcsafe bwd 
BB07 [0006]  1  0    BB06                  2     0 [000..0D3)                 T0                  i hascall gcsafe newobj bwd 
BB09 [0007]  2  0    BB06,BB07             4     0 [000..0F2)-> BB03 ( cond ) T0      }           i label target hascall gcsafe newobj bwd 
BB13 [0057]  2       BB02,BB09             1       [0F4..127)-> BB17 (always)                     keep i label target gcsafe newobj cfb 
BB16 [0014]  1       BB20                  2     1 [127..133)                                     i Loop label target hascall gcsafe bwd bwd-target 
BB17 [0015]  2       BB13,BB16             8     1 [000..147)-> BB19 ( cond )                     i label target gcsafe bwd 
BB18 [0053]  1       BB17                  2     1 [000..000)-> BB20 (always)                     i internal gcsafe bwd 
BB19 [0054]  1       BB17                  2     1 [000..000)                                     i internal label target gcsafe bwd 
BB20 [0055]  2       BB18,BB19             8     1 [???..???)-> BB16 ( cond )                     internal label target gcsafe bwd 
BB21 [0016]  1       BB20                  1       [147..153)        (return)                     i gcsafe 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB22 [0010]  1     0                       0       [0F4..0F8)-> BB24 ( cond )    H0 F fault {     keep i rare label target flet 
BB23 [0011]  1     0 BB22                  0       [0F8..0FF)                    H0               i rare hascall gcsafe 
BB24 [0012]  2     0 BB22,BB23             0       [0FF..100)        (finret)    H0   }           i rare label target 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..070), preds={} succs={BB02}

***** BB01
STMT00000 (IL 0x000...0x005)
N005 ( 16, 16) [000003] -AC-----R---              *  ASG       ref    $180
N004 (  1,  1) [000002] D------N----              +--*  LCL_VAR   ref    V12 tmp1         d:2 $180
N003 ( 16, 16) [000001] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $180
N002 (  2, 10) [000000] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $100

***** BB01
STMT00002 (IL 0x005...  ???)
N003 (  1,  3) [000008] -A------R---              *  ASG       ref    $180
N002 (  1,  1) [000007] D------N----              +--*  LCL_VAR   ref    V02 loc0         d:2 $180
N001 (  1,  1) [000006] ------------              \--*  LCL_VAR   ref    V12 tmp1         u:2 $180

***** BB01
STMT00003 (IL 0x006...0x008)
N006 (  6,  6) [000012] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000011] n---GO-N----              +--*  IND       ref    $81
N003 (  2,  2) [000440] -------N----              |  \--*  ADD       byref  $200
N001 (  1,  1) [000009] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000439] ------------              |     \--*  CNS_INT   long   32 field offset Fseq[outputFile] $1c0
N005 (  1,  1) [000010] ------------              \--*  LCL_VAR   ref    V01 arg1         u:1 (last use) $81

***** BB01
STMT00004 (IL 0x00D...0x00F)
N006 (  6,  6) [000016] -A--GO------              *  ASG       int    $VN.Void
N004 (  4,  4) [000015] n---GO-N----              +--*  IND       int    $40
N003 (  2,  2) [000442] -------N----              |  \--*  ADD       byref  $201
N001 (  1,  1) [000013] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000441] ------------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1
N005 (  1,  1) [000014] ------------              \--*  CNS_INT   int    0 $40

***** BB01
STMT00005 (IL 0x014...0x016)
N006 (  6,  6) [000020] -A--GO------              *  ASG       int    $VN.Void
N004 (  4,  4) [000019] n---GO-N----              +--*  IND       int    $40
N003 (  2,  2) [000444] -------N----              |  \--*  ADD       byref  $202
N001 (  1,  1) [000017] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000443] ------------              |     \--*  CNS_INT   long   56 field offset Fseq[analyzersFinishedCount] $1c2
N005 (  1,  1) [000018] ------------              \--*  CNS_INT   int    0 $40

***** BB01
STMT00006 (IL 0x01B...0x021)
N005 ( 16, 16) [000025] -AC-----R---              *  ASG       ref    $183
N004 (  1,  1) [000024] D------N----              +--*  LCL_VAR   ref    V13 tmp2         d:2 $183
N003 ( 16, 16) [000023] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $183
N002 (  2, 10) [000022] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $104

***** BB01
STMT00074 (IL   ???...  ???)
N005 ( 16, 16) [000269] -AC-----R---              *  ASG       ref    $184
N004 (  1,  1) [000268] D------N----              +--*  LCL_VAR   ref    V30 tmp19        d:2 $184
N003 ( 16, 16) [000267] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $184
N002 (  2, 10) [000266] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $105

***** BB01
STMT00079 (IL   ???...  ???)
N006 (  6,  9) [000283] -A--GO------              *  ASG       int    $VN.Void
N004 (  4,  4) [000282] V---GO-N----              +--*  IND       int    $43
N003 (  2,  2) [000448] -------N----              |  \--*  ADD       byref  $203
N001 (  1,  1) [000280] ------------              |     +--*  LCL_VAR   ref    V30 tmp19        u:2 $184
N002 (  1,  1) [000447] ------------              |     \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags] $1c3
N005 (  1,  4) [000281] ------------              \--*  CNS_INT   int    0x2000400 $43

***** BB01
STMT00076 (IL   ???...  ???)
N006 (  6,  6) [000274] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000273] n---GO-N----              +--*  IND       ref    $184
N003 (  2,  2) [000450] -------N----              |  \--*  ADD       byref  $204
N001 (  1,  1) [000265] ------------              |     +--*  LCL_VAR   ref    V13 tmp2         u:2 $183
N002 (  1,  1) [000449] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_task] $1c4
N005 (  1,  1) [000272] ------------              \--*  LCL_VAR   ref    V30 tmp19        u:2 (last use) $184

***** BB01
STMT00008 (IL 0x021...  ???)
N006 (  6,  6) [000030] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000029] n---GO-N----              +--*  IND       ref    $183
N003 (  2,  2) [000452] -------N----              |  \--*  ADD       byref  $205
N001 (  1,  1) [000021] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000451] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun] $1c5
N005 (  1,  1) [000028] ------------              \--*  LCL_VAR   ref    V13 tmp2         u:2 (last use) $183

***** BB01
STMT00009 (IL 0x026...0x02C)
N005 ( 16, 16) [000035] -AC-----R---              *  ASG       ref    $189
N004 (  1,  1) [000034] D------N----              +--*  LCL_VAR   ref    V14 tmp3         d:2 $189
N003 ( 16, 16) [000033] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $189
N002 (  2, 10) [000032] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $109

***** BB01
STMT00082 (IL   ???...  ???)
N013 ( 26, 35) [000292] -ACXGO--R---              *  ASG       ref    $VN.Void
N012 (  4,  4) [000291] n---GO-N----              +--*  IND       ref    $246
N011 (  2,  2) [000455] -------N----              |  \--*  ADD       byref  $206
N009 (  1,  1) [000287] ------------              |     +--*  LCL_VAR   ref    V14 tmp3         u:2 $189
N010 (  1,  1) [000454] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_array] $1c4
N008 ( 21, 30) [000300] --CXG-------              \--*  COMMA     ref    <l:$18c, c:$18b>
N005 ( 17, 18) [000299] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS $381
N003 (  2, 10) [000297] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e0b0028 $1c6
N004 (  1,  1) [000298] ------------ arg1 in rdx     |  \--*  CNS_INT   int    14 $44
N007 (  4, 12) [000295] n---G-------                 \--*  IND       ref    <l:$246, c:$14b>
N006 (  2, 10) [000458] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[Value] $10a

***** BB01
STMT00011 (IL 0x02C...  ???)
N006 (  6,  6) [000040] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000039] n---GO-N----              +--*  IND       ref    $189
N003 (  2,  2) [000460] -------N----              |  \--*  ADD       byref  $207
N001 (  1,  1) [000031] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000459] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers] $1c4
N005 (  1,  1) [000038] ------------              \--*  LCL_VAR   ref    V14 tmp3         u:2 (last use) $189

***** BB01
STMT00012 (IL 0x031...0x033)
N006 (  6,  6) [000044] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000043] n---GO-N----              +--*  IND       ref    $VN.Null
N003 (  2,  2) [000462] -------N----              |  \--*  ADD       byref  $208
N001 (  1,  1) [000041] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000461] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter] $1c7
N005 (  1,  1) [000042] ------------              \--*  CNS_INT   ref    null $VN.Null

***** BB01
STMT00013 (IL 0x038...0x03E)
N005 ( 16, 16) [000049] -AC-----R---              *  ASG       ref    $193
N004 (  1,  1) [000048] D------N----              +--*  LCL_VAR   ref    V15 tmp4         d:2 $193
N003 ( 16, 16) [000047] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $193
N002 (  2, 10) [000046] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $10e

***** BB01
STMT00083 (IL   ???...  ???)
N005 ( 16, 10) [000303] --CXG-------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor $VN.Void
N003 (  1,  1) [000050] ------------ this in rcx  +--*  LCL_VAR   ref    V15 tmp4         u:2 $193
N004 (  1,  1) [000302] ------------ arg1 in rdx  \--*  CNS_INT   ref    null $VN.Null

***** BB01
STMT00015 (IL 0x03E...  ???)
N006 (  6,  6) [000054] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000053] n---GO-N----              +--*  IND       ref    $193
N003 (  2,  2) [000467] -------N----              |  \--*  ADD       byref  $209
N001 (  1,  1) [000045] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 (last use) $180
N002 (  1,  1) [000466] ------------              |     \--*  CNS_INT   long   40 field offset Fseq[output] $1c8
N005 (  1,  1) [000052] ------------              \--*  LCL_VAR   ref    V15 tmp4         u:2 (last use) $193

***** BB01
STMT00086 (IL   ???...  ???)
N003 ( 14,  5) [000316] -ACXG---R---              *  ASG       ref    $151
N002 (  1,  1) [000315] D------N----              +--*  LCL_VAR   ref    V31 tmp20        d:2 $151
N001 ( 14,  5) [000055] --CXG-------              \--*  CALL      ref    System.Diagnostics.Process.GetCurrentProcess $151

***** BB01
STMT00087 (IL   ???...  ???)
N002 (  2,  2) [000314] ---X--------              *  NULLCHECK byte   $197
N001 (  1,  1) [000313] ------------              \--*  LCL_VAR   ref    V31 tmp20        u:2 $151

***** BB01
STMT00084 (IL   ???...  ???)
N005 ( 16, 10) [000308] --CXG-------              *  CALL      void   System.Diagnostics.Process.EnsureState $VN.Void
N003 (  1,  1) [000306] ------------ this in rcx  +--*  LCL_VAR   ref    V31 tmp20        u:2 $151
N004 (  1,  1) [000307] ------------ arg1 in rdx  \--*  CNS_INT   int    3 $46

***** BB01
STMT00088 (IL   ???...  ???)
N008 ( 18, 13) [000322] -ACXGO--R---              *  ASG       ref    $156
N007 (  1,  1) [000321] D------N----              +--*  LCL_VAR   ref    V32 tmp21        d:2 $156
N006 ( 18, 13) [000311] --CXGO------              \--*  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule $156
N005 (  4,  7) [000310] n---GO------ arg0 in rcx     \--*  IND       int    <l:$289, c:$288>
N004 (  2,  5) [000471] -------N----                    \--*  ADD       byref  $20a
N002 (  1,  1) [000309] ------------                       +--*  LCL_VAR   ref    V31 tmp20        u:2 (last use) $151
N003 (  1,  4) [000470] ------------                       \--*  CNS_INT   long   200 field offset Fseq[_processId] $1c9

***** BB01
STMT00019 (IL   ???...  ???)
N006 (  4,  4) [000062] -A-XG---R---              *  ASG       ref    <l:$19c, c:$19b>
N005 (  1,  1) [000061] D------N----              +--*  LCL_VAR   ref    V03 loc1         d:2 <l:$199, c:$159>
N004 (  4,  4) [000320] ---XG-------              \--*  IND       ref    <l:$19c, c:$19b>
N003 (  2,  2) [000474] -------N----                 \--*  ADD       byref  $20b
N001 (  1,  1) [000319] ------------                    +--*  LCL_VAR   ref    V32 tmp21        u:2 (last use) $156
N002 (  1,  1) [000473] ------------                    \--*  CNS_INT   long   40 field offset Fseq[<FileName>k__BackingField] $1c8

***** BB01
STMT00021 (IL   ???...  ???)
N016 ( 32, 30) [000069] -ACXG---R---              *  ASG       int    $28c
N015 (  1,  1) [000068] D------N----              +--*  LCL_VAR   int    V04 loc2         d:2 $28c
N014 ( 32, 30) [000329] --CXG-------              \--*  GE        int    $28c
N012 ( 27, 28) [000340] --CXG-------                 +--*  CALL      int    System.String.IndexOf $308
N005 (  1,  1) [000339] ------------ arg4 out+20     |  +--*  CNS_INT   int    5 $47
N007 (  3,  3) [000338] ---X-------- arg3 in r9      |  +--*  ARR_LENGTH int    <l:$28b, c:$28a>
N006 (  1,  1) [000337] ------------                 |  |  \--*  LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
N009 (  4, 12) [000476] #---G------- arg1 in rdx     |  +--*  IND       ref    $19f
N008 (  2, 10) [000475] H-----------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E "dotnet.exe" $112
N010 (  1,  1) [000063] ------------ this in rcx     |  +--*  LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
N011 (  1,  1) [000336] ------------ arg2 in r8      |  \--*  CNS_INT   int    0 $40
N013 (  1,  1) [000328] ------------                 \--*  CNS_INT   int    0 $40

***** BB01
STMT00023 (IL   ???...  ???)
N015 ( 26, 20) [000075] -ACXG---R---              *  ASG       ref    <l:$1aa, c:$1a9>
N014 (  1,  1) [000074] D------N----              +--*  LCL_VAR   ref    V05 loc3         d:2 <l:$1a8, c:$161>
N013 ( 26, 20) [000494] -ACXG-------              \--*  COMMA     ref    <l:$1aa, c:$1a9>
N003 ( 14,  5) [000482] -ACXG---R---                 +--*  ASG       ref    $15e
N002 (  1,  1) [000481] D------N----                 |  +--*  LCL_VAR   ref    V41 tmp30        d:2 $15e
N001 ( 14,  5) [000070] --CXG-------                 |  \--*  CALL      ref    System.Environment.GetCommandLineArgs $15e
N012 ( 12, 15) [000493] ---XG-------                 \--*  COMMA     ref    <l:$1aa, c:$1a9>
N007 (  8, 11) [000487] ---X--------                    +--*  ARR_BOUNDS_CHECK_Rng void   $1a5
N004 (  1,  1) [000072] ------------                    |  +--*  CNS_INT   int    0 $40
N006 (  3,  3) [000486] ---X--------                    |  \--*  ARR_LENGTH int    $28d
N005 (  1,  1) [000483] ------------                    |     \--*  LCL_VAR   ref    V41 tmp30        u:2 $15e
N011 (  4,  4) [000073] a---G-------                    \--*  IND       ref    <l:$1a8, c:$161>
N010 (  2,  2) [000492] -------N----                       \--*  ADD       byref  $400
N008 (  1,  1) [000484] ------------                          +--*  LCL_VAR   ref    V41 tmp30        u:2 (last use) $15e
N009 (  1,  1) [000491] ------------                          \--*  CNS_INT   long   16 Fseq[#FirstElem] $1c7

***** BB01
STMT00024 (IL 0x068...0x06E)
N007 ( 23, 21) [000079] -ACXG---R---              *  ASG       ref    $164
N006 (  1,  1) [000078] D------N----              +--*  LCL_VAR   ref    V06 loc4         d:2 $164
N005 ( 23, 21) [000077] --CXG-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator $164
N003 (  1,  1) [000076] ------------ this in rcx     +--*  LCL_VAR   ref    V00 arg0         u:1 (last use) $80
N004 (  2, 10) [000495] H----------- arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $114

------------ BB02 [070..072) -> BB13 (cond), preds={BB01} succs={BB03,BB13}

***** BB02
STMT00119 (IL 0x0E9...  ???)
N008 ( 27, 25) [000578] --CXG-------              *  JTRUE     void  
N007 ( 25, 23) [000571] J-CXG--N----              \--*  EQ        int    $28e
N005 ( 23, 21) [000572] --CXG-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext $30a
N003 (  1,  1) [000575] ------------ this in rcx     |  +--*  LCL_VAR   ref    V06 loc4         u:2 $164
N004 (  2, 10) [000576] H----------- arg1 in r11     |  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
N006 (  1,  1) [000577] ------------                 \--*  CNS_INT   int    0 $40

------------ BB03 [072..08B) -> BB05 (cond), preds={BB02,BB09} succs={BB04,BB05}

***** BB03
STMT00026 (IL 0x072...0x079)
N007 ( 23, 21) [000088] -ACXG---R---              *  ASG       ref    $442
N006 (  1,  1) [000087] D------N----              +--*  LCL_VAR   ref    V07 loc5         d:2 $442
N005 ( 23, 21) [000086] --CXG-------              \--*  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current $442
N003 (  1,  1) [000085] ------------ this in rcx     +--*  LCL_VAR   ref    V06 loc4         u:2 $164
N004 (  2, 10) [000498] H----------- arg1 in r11     \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $116

***** BB03
STMT00027 (IL 0x07B...0x089)
N005 ( 16, 16) [000092] -AC-----R---              *  ASG       ref    $1ab
N004 (  1,  1) [000091] D------N----              +--*  LCL_VAR   ref    V16 tmp5         d:2 $1ab
N003 ( 16, 16) [000090] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1ab
N002 (  2, 10) [000089] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $117

***** BB03
STMT00092 (IL 0x080...  ???)
N006 (  6,  6) [000347] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000346] n---GO-N----              +--*  IND       ref    $199
N003 (  2,  2) [000503] -------N----              |  \--*  ADD       byref  $20d
N001 (  1,  1) [000096] ------------              |     +--*  LCL_VAR   ref    V16 tmp5         u:2 $1ab
N002 (  1,  1) [000502] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_fileName] $1c4
N005 (  1,  1) [000097] ------------              \--*  LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>

***** BB03
STMT00031 (IL   ???...0x089)
N003 (  1,  3) [000105] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000104] D------N----              +--*  LCL_VAR   ref    V17 tmp6         d:2 $1ab
N001 (  1,  1) [000095] ------------              \--*  LCL_VAR   ref    V16 tmp5         u:2 $1ab

***** BB03
STMT00032 (IL   ???...  ???)
N003 (  1,  3) [000108] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000107] D------N----              +--*  LCL_VAR   ref    V18 tmp7         d:2 $1ab
N001 (  1,  1) [000099] ------------              \--*  LCL_VAR   ref    V17 tmp6         u:2 (last use) $1ab

***** BB03
STMT00030 (IL 0x087...  ???)
N004 (  5,  5) [000103] ------------              *  JTRUE     void  
N003 (  3,  3) [000102] J------N----              \--*  NE        int    $28f
N001 (  1,  1) [000100] ------------                 +--*  LCL_VAR   int    V04 loc2         u:2 $28c
N002 (  1,  1) [000101] ------------                 \--*  CNS_INT   int    0 $40

------------ BB04 [08B..08F) -> BB06 (always), preds={BB03} succs={BB06}

***** BB04
STMT00053 (IL   ???...0x08D)
N003 (  1,  3) [000203] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000202] D------N----              +--*  LCL_VAR   ref    V19 tmp8         d:4 $1ab
N001 (  1,  1) [000110] ------------              \--*  LCL_VAR   ref    V18 tmp7         u:2 (last use) $1ab

***** BB04
STMT00054 (IL   ???...  ???)
N003 (  1,  3) [000206] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000205] D------N----              +--*  LCL_VAR   ref    V20 tmp9         d:4 $1ab
N001 (  1,  1) [000111] ------------              \--*  LCL_VAR   ref    V19 tmp8         u:4 (last use) $1ab

***** BB04
STMT00055 (IL   ???...  ???)
N003 (  1,  3) [000209] -A------R---              *  ASG       ref    $442
N002 (  1,  1) [000208] D------N----              +--*  LCL_VAR   ref    V21 tmp10        d:4 $442
N001 (  1,  1) [000201] ------------              \--*  LCL_VAR   ref    V07 loc5         u:2 (last use) $442

------------ BB05 [08F..09C), preds={BB03} succs={BB06}

***** BB05
STMT00033 (IL   ???...0x097)
N003 (  1,  3) [000119] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000118] D------N----              +--*  LCL_VAR   ref    V19 tmp8         d:3 $1ab
N001 (  1,  1) [000112] ------------              \--*  LCL_VAR   ref    V18 tmp7         u:2 (last use) $1ab

***** BB05
STMT00034 (IL   ???...  ???)
N003 (  1,  3) [000122] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000121] D------N----              +--*  LCL_VAR   ref    V20 tmp9         d:3 $1ab
N001 (  1,  1) [000113] ------------              \--*  LCL_VAR   ref    V19 tmp8         u:3 (last use) $1ab

***** BB05
STMT00035 (IL   ???...  ???)
N010 ( 20, 22) [000125] -ACXG---R---              *  ASG       ref    $44e
N009 (  1,  1) [000124] D------N----              +--*  LCL_VAR   ref    V21 tmp10        d:3 $44e
N008 ( 20, 22) [000117] --CXG-------              \--*  CALL      ref    System.String.Concat $44e
N005 (  4, 12) [000505] #---G------- arg1 in rdx     +--*  IND       ref    $1ae
N004 (  2, 10) [000504] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E " " $119
N006 (  1,  1) [000114] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V05 loc3         u:2 <l:$1a8, c:$161>
N007 (  1,  1) [000116] ------------ arg2 in r8      \--*  LCL_VAR   ref    V07 loc5         u:2 (last use) $442

------------ BB06 [09C..0BB) -> BB09 (cond), preds={BB04,BB05} succs={BB07,BB09}

***** BB06
STMT00125 (IL   ???...  ???)
N005 (  0,  0) [000596] -A------R---              *  ASG       ref   
N004 (  0,  0) [000594] D------N----              +--*  LCL_VAR   ref    V21 tmp10        d:2
N003 (  0,  0) [000595] ------------              \--*  PHI       ref   
N001 (  0,  0) [000606] ------------ pred BB04       +--*  PHI_ARG   ref    V21 tmp10        u:4 $442
N002 (  0,  0) [000603] ------------ pred BB05       \--*  PHI_ARG   ref    V21 tmp10        u:3 $44e

***** BB06
STMT00124 (IL   ???...  ???)
N005 (  0,  0) [000593] -A------R---              *  ASG       ref   
N004 (  0,  0) [000591] D------N----              +--*  LCL_VAR   ref    V20 tmp9         d:2
N003 (  0,  0) [000592] ------------              \--*  PHI       ref   
N001 (  0,  0) [000607] ------------ pred BB04       +--*  PHI_ARG   ref    V20 tmp9         u:4 $1ab
N002 (  0,  0) [000604] ------------ pred BB05       \--*  PHI_ARG   ref    V20 tmp9         u:3 $1ab

***** BB06
STMT00123 (IL   ???...  ???)
N005 (  0,  0) [000590] -A------R---              *  ASG       ref   
N004 (  0,  0) [000588] D------N----              +--*  LCL_VAR   ref    V19 tmp8         d:2
N003 (  0,  0) [000589] ------------              \--*  PHI       ref   
N001 (  0,  0) [000608] ------------ pred BB04       +--*  PHI_ARG   ref    V19 tmp8         u:4 $1ab
N002 (  0,  0) [000605] ------------ pred BB05       \--*  PHI_ARG   ref    V19 tmp8         u:3 $1ab

***** BB06
STMT00093 (IL   ???...  ???)
N006 (  6,  6) [000350] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000349] n---GO-N----              +--*  IND       ref    $251
N003 (  2,  2) [000510] -------N----              |  \--*  ADD       byref  $20e
N001 (  1,  1) [000128] ------------              |     +--*  LCL_VAR   ref    V20 tmp9         u:2 (last use) $1ab
N002 (  1,  1) [000509] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_arguments] $1c7
N005 (  1,  1) [000129] ------------              \--*  LCL_VAR   ref    V21 tmp10        u:2 (last use) $251

***** BB06
STMT00094 (IL 0x0A1...  ???)
N006 (  7, 10) [000355] -A--GO------              *  ASG       bool   $VN.Void
N004 (  5,  8) [000354] n---GO-N----              +--*  IND       bool   $40
N003 (  2,  5) [000512] -------N----              |  \--*  ADD       byref  $20f
N001 (  1,  1) [000131] ------------              |     +--*  LCL_VAR   ref    V19 tmp8         u:2 $1ab
N002 (  1,  4) [000511] ------------              |     \--*  CNS_INT   long   130 field offset Fseq[<UseShellExecute>k__BackingField] $1cb
N005 (  1,  1) [000353] ------------              \--*  CNS_INT   int    0 $40

***** BB06
STMT00040 (IL 0x0AA...0x0B9)
N006 (  4,  4) [000145] -A--GO--R---              *  ASG       ref    <l:$1bc, c:$1bb>
N005 (  1,  1) [000144] D------N----              +--*  LCL_VAR   ref    V23 tmp12        d:2 <l:$1b9, c:$454>
N004 (  4,  4) [000138] n---GO------              \--*  IND       ref    <l:$1bc, c:$1bb>
N003 (  2,  2) [000514] -------N----                 \--*  ADD       byref  $207
N001 (  1,  1) [000137] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000513] ------------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers] $1c4

***** BB06
STMT00039 (IL 0x0AA...  ???)
N006 (  4,  4) [000143] -A--GO--R---              *  ASG       ref    <l:$542, c:$541>
N005 (  1,  1) [000142] D------N----              +--*  LCL_VAR   ref    V22 tmp11        d:2 <l:$540, c:$456>
N004 (  4,  4) [000141] n---GO------              \--*  IND       ref    <l:$542, c:$541>
N003 (  2,  2) [000516] -------N----                 \--*  ADD       byref  $210
N001 (  1,  1) [000140] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000515] ------------                    \--*  CNS_INT   long   48 field offset Fseq[<>9__2] $1cc

***** BB06
STMT00042 (IL   ???...0x0B9)
N003 (  1,  3) [000153] -A------R---              *  ASG       ref    <l:$1b9, c:$454>
N002 (  1,  1) [000152] D------N----              +--*  LCL_VAR   ref    V24 tmp13        d:2 <l:$1b9, c:$454>
N001 (  1,  1) [000146] ------------              \--*  LCL_VAR   ref    V23 tmp12        u:2 (last use) <l:$1b9, c:$454>

***** BB06
STMT00043 (IL   ???...  ???)
N003 (  1,  3) [000156] -A------R---              *  ASG       ref    $1ab
N002 (  1,  1) [000155] D------N----              +--*  LCL_VAR   ref    V25 tmp14        d:2 $1ab
N001 (  1,  1) [000139] ------------              \--*  LCL_VAR   ref    V19 tmp8         u:2 (last use) $1ab

***** BB06
STMT00044 (IL   ???...  ???)
N003 (  1,  3) [000159] -A------R---              *  ASG       ref    <l:$540, c:$456>
N002 (  1,  1) [000158] D------N----              +--*  LCL_VAR   ref    V26 tmp15        d:2 <l:$540, c:$456>
N001 (  1,  1) [000147] ------------              \--*  LCL_VAR   ref    V22 tmp11        u:2 <l:$540, c:$456>

***** BB06
STMT00041 (IL   ???...  ???)
N004 (  5,  5) [000151] ------------              *  JTRUE     void  
N003 (  3,  3) [000150] J------N----              \--*  NE        int    <l:$291, c:$290>
N001 (  1,  1) [000148] ------------                 +--*  LCL_VAR   ref    V26 tmp15        u:2 (last use) <l:$540, c:$456>
N002 (  1,  1) [000149] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB07 [000..0D3), preds={BB06} succs={BB09}

***** BB07
STMT00048 (IL   ???...0x0CA)
N005 ( 16, 16) [000184] -AC-----R---              *  ASG       ref    $543
N004 (  1,  1) [000183] D------N----              +--*  LCL_VAR   ref    V28 tmp17        d:2 $543
N003 ( 16, 16) [000182] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $543
N002 (  2, 10) [000181] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $11e

***** BB07
STMT00096 (IL   ???...  ???)
N006 (  6,  6) [000362] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000361] n---GO-N----              +--*  IND       ref    $180
N003 (  2,  2) [000519] -------N----              |  \--*  ADD       byref  $211
N001 (  1,  1) [000185] ------------              |     +--*  LCL_VAR   ref    V28 tmp17        u:2 $543
N002 (  1,  1) [000518] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $1c4
N005 (  1,  1) [000360] ------------              \--*  LCL_VAR   ref    V02 loc0         u:2 $180

***** BB07
STMT00097 (IL   ???...  ???)
N006 (  7, 15) [000366] -A--GO------              *  ASG       long   $VN.Void
N004 (  4,  4) [000365] n---GO-N----              +--*  IND       long   $120
N003 (  2,  2) [000521] -------N----              |  \--*  ADD       byref  $212
N001 (  1,  1) [000363] ------------              |     +--*  LCL_VAR   ref    V28 tmp17        u:2 $543
N002 (  1,  1) [000520] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $1c5
N005 (  2, 10) [000180] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $120

***** BB07
STMT00051 (IL   ???...0x0CC)
N006 (  6,  6) [000192] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000191] n---GO-N----              +--*  IND       ref    $543
N003 (  2,  2) [000523] -------N----              |  \--*  ADD       byref  $210
N001 (  1,  1) [000178] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000522] ------------              |     \--*  CNS_INT   long   48 field offset Fseq[<>9__2] $1cc
N005 (  1,  1) [000187] ------------              \--*  LCL_VAR   ref    V28 tmp17        u:2 $543

***** BB07
STMT00052 (IL   ???...0x0D1)
N003 (  1,  3) [000199] -A------R---              *  ASG       ref    $543
N002 (  1,  1) [000198] D------N----              +--*  LCL_VAR   ref    V26 tmp15        d:4 $543
N001 (  1,  1) [000193] ------------              \--*  LCL_VAR   ref    V28 tmp17        u:2 (last use) $543

------------ BB09 [000..0F2) -> BB03 (cond), preds={BB06,BB07} succs={BB13,BB03}

***** BB09
STMT00122 (IL   ???...  ???)
N005 (  0,  0) [000587] -A------R---              *  ASG       ref   
N004 (  0,  0) [000585] D------N----              +--*  LCL_VAR   ref    V26 tmp15        d:3
N003 (  0,  0) [000586] ------------              \--*  PHI       ref   
N001 (  0,  0) [000602] ------------ pred BB08       +--*  PHI_ARG   ref    V26 tmp15        u:4 $543
N002 (  0,  0) [000601] ------------ pred BB06       \--*  PHI_ARG   ref    V26 tmp15        u:2 <l:$540, c:$456>

***** BB09
STMT00045 (IL   ???...0x0E4)
N005 ( 16, 16) [000172] -AC-----R---              *  ASG       ref    $54b
N004 (  1,  1) [000171] D------N----              +--*  LCL_VAR   ref    V27 tmp16        d:2 $54b
N003 ( 16, 16) [000170] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $54b
N002 (  2, 10) [000169] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $123

***** BB09
STMT00100 (IL   ???...  ???)
N006 (  6,  6) [000374] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000373] n---GO-N----              +--*  IND       ref    $180
N003 (  2,  2) [000526] -------N----              |  \--*  ADD       byref  $213
N001 (  1,  1) [000173] ------------              |     +--*  LCL_VAR   ref    V27 tmp16        u:2 $54b
N002 (  1,  1) [000525] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $1c4
N005 (  1,  1) [000372] ------------              \--*  LCL_VAR   ref    V02 loc0         u:2 $180

***** BB09
STMT00101 (IL   ???...  ???)
N006 (  7, 15) [000378] -A--GO------              *  ASG       long   $VN.Void
N004 (  4,  4) [000377] n---GO-N----              +--*  IND       long   $125
N003 (  2,  2) [000528] -------N----              |  \--*  ADD       byref  $214
N001 (  1,  1) [000375] ------------              |     +--*  LCL_VAR   ref    V27 tmp16        u:2 $54b
N002 (  1,  1) [000527] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $1c5
N005 (  2, 10) [000168] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $125

***** BB09
STMT00047 (IL 0x0DF...  ???)
N013 ( 36, 21) [000177] --CXG-------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue $VN.Void
N010 ( 17, 11) [000533] -ACXG---R-L- arg1 SETUP   +--*  ASG       ref    $464
N009 (  1,  1) [000532] D------N----              |  +--*  LCL_VAR   ref    V42 tmp31        d:2 $464
N008 ( 17, 11) [000176] --CXG-------              |  \--*  CALL      ref    SolutionAnalyzer.IPC.CreateSession $464
N005 (  1,  1) [000165] ------------ arg0 in rcx  |     +--*  LCL_VAR   ref    V25 tmp14        u:2 (last use) $1ab
N006 (  1,  1) [000166] ------------ arg1 in rdx  |     +--*  LCL_VAR   ref    V26 tmp15        u:3 (last use) $258
N007 (  1,  1) [000175] ------------ arg2 in r8   |     \--*  LCL_VAR   ref    V27 tmp16        u:2 (last use) $54b
N011 (  1,  1) [000534] ------------ arg1 in rdx  +--*  LCL_VAR   ref    V42 tmp31        u:2 (last use) $464
N012 (  1,  1) [000164] ------------ this in rcx  \--*  LCL_VAR   ref    V24 tmp13        u:2 (last use) <l:$1b9, c:$454>

***** BB09
STMT00025 (IL 0x0E9...0x0F0)
N008 ( 27, 25) [000084] --CXG-------              *  JTRUE     void  
N007 ( 25, 23) [000083] J-CXG--N----              \--*  NE        int    $292
N005 ( 23, 21) [000081] --CXG-------                 +--*  CALLV stub int    System.Collections.IEnumerator.MoveNext $5c0
N003 (  1,  1) [000080] ------------ this in rcx     |  +--*  LCL_VAR   ref    V06 loc4         u:2 $164
N004 (  2, 10) [000536] H----------- arg1 in r11     |  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
N006 (  1,  1) [000082] ------------                 \--*  CNS_INT   int    0 $40

------------ BB13 [0F4..127) -> BB17 (always), preds={BB02,BB09} succs={BB17}

***** BB13
STMT00117 (IL   ???...  ???)
N005 ( 23, 21) [000435] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose $VN.Void
N003 (  1,  1) [000436] ------------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         u:2 (last use) $164
N004 (  2, 10) [000539] H----------- arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127

***** BB13
STMT00103 (IL 0x100...  ???)
N006 (  4,  4) [000384] -A--GO--R---              *  ASG       ref    <l:$569, c:$568>
N005 (  1,  1) [000383] D------N----              +--*  LCL_VAR   ref    V35 tmp24        d:2 <l:$567, c:$16e>
N004 (  4,  4) [000213] n---GO------              \--*  IND       ref    <l:$569, c:$568>
N003 (  2,  2) [000546] -------N----                 \--*  ADD       byref  $207
N001 (  1,  1) [000212] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000545] ------------                    \--*  CNS_INT   long   8 field offset Fseq[queuedAnalyzers] $1c4

***** BB13
STMT00057 (IL   ???...  ???)
N009 (  9,  9) [000217] -A-XGO--R---              *  ASG       int    $VN.Void
N008 (  4,  4) [000216] n---GO-N----              +--*  IND       int    $299
N007 (  2,  2) [000548] -------N----              |  \--*  ADD       byref  $201
N005 (  1,  1) [000211] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N006 (  1,  1) [000547] ------------              |     \--*  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1
N004 (  4,  4) [000382] ---XG-------              \--*  IND       int    <l:$29b, c:$29a>
N003 (  2,  2) [000550] -------N----                 \--*  ADD       byref  <l:$216, c:$215>
N001 (  1,  1) [000381] ------------                    +--*  LCL_VAR   ref    V35 tmp24        u:2 (last use) <l:$567, c:$16e>
N002 (  1,  1) [000549] ------------                    \--*  CNS_INT   long   24 field offset Fseq[_size] $1c5

***** BB13
STMT00058 (IL 0x111...0x11D)
N005 ( 16, 16) [000224] -AC-----R---              *  ASG       ref    $56c
N004 (  1,  1) [000223] D------N----              +--*  LCL_VAR   ref    V29 tmp18        d:2 $56c
N003 ( 16, 16) [000222] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $56c
N002 (  2, 10) [000221] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $12b

***** BB13
STMT00109 (IL   ???...  ???)
N006 (  4,  4) [000402] -A--GO--R---              *  ASG       int    <l:$2a3, c:$2a2>
N005 (  1,  1) [000401] D------N----              +--*  LCL_VAR   int    V37 tmp26        d:2 <l:$299, c:$30c>
N004 (  4,  4) [000220] n---GO------              \--*  IND       int    <l:$2a3, c:$2a2>
N003 (  2,  2) [000553] -------N----                 \--*  ADD       byref  $201
N001 (  1,  1) [000219] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000552] ------------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1

***** BB13
STMT00104 (IL   ???...  ???)
N005 ( 16, 16) [000389] -AC-----R---              *  ASG       ref    $56d
N004 (  1,  1) [000388] D------N----              +--*  LCL_VAR   ref    V36 tmp25        d:2 $56d
N003 ( 16, 16) [000387] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $56d
N002 (  2, 10) [000386] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $12c

***** BB13
STMT00110 (IL   ???...  ???)
N007 ( 17, 12) [000406] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor $VN.Void
N004 (  1,  1) [000390] ------------ this in rcx  +--*  LCL_VAR   ref    V36 tmp25        u:2 $56d
N005 (  1,  1) [000404] ------------ arg1 in rdx  +--*  CNS_INT   int    0 $40
N006 (  1,  1) [000405] ------------ arg2 in r8   \--*  CNS_INT   ref    null $VN.Null

***** BB13
STMT00106 (IL   ???...  ???)
N006 (  6,  6) [000394] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000393] n---GO-N----              +--*  IND       ref    $56d
N003 (  2,  2) [000559] -------N----              |  \--*  ADD       byref  $217
N001 (  1,  1) [000225] ------------              |     +--*  LCL_VAR   ref    V29 tmp18        u:2 $56c
N002 (  1,  1) [000558] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_workItems] $1c4
N005 (  1,  1) [000392] ------------              \--*  LCL_VAR   ref    V36 tmp25        u:2 (last use) $56d

***** BB13
STMT00108 (IL   ???...  ???)
N006 (  6,  6) [000400] -A--GO------              *  ASG       int    $VN.Void
N004 (  4,  4) [000399] n---GO-N----              +--*  IND       int    $299
N003 (  2,  2) [000561] -------N----              |  \--*  ADD       byref  $218
N001 (  1,  1) [000397] ------------              |     +--*  LCL_VAR   ref    V29 tmp18        u:2 $56c
N002 (  1,  1) [000560] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_workItemsToComplete] $1c7
N005 (  1,  1) [000398] ------------              \--*  LCL_VAR   int    V37 tmp26        u:2 (last use) <l:$299, c:$30c>

***** BB13
STMT00060 (IL 0x11D...  ???)
N006 (  6,  6) [000229] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000228] n---GO-N----              +--*  IND       ref    $56c
N003 (  2,  2) [000563] -------N----              |  \--*  ADD       byref  $208
N001 (  1,  1) [000218] ------------              |     +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000562] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[progressReporter] $1c7
N005 (  1,  1) [000227] ------------              \--*  LCL_VAR   ref    V29 tmp18        u:2 (last use) $56c

***** BB13
STMT00061 (IL 0x122...0x123)
N003 (  1,  3) [000232] -A------R---              *  ASG       int    $40
N002 (  1,  1) [000231] D------N----              +--*  LCL_VAR   int    V10 loc8         d:2 $40
N001 (  1,  1) [000230] ------------              \--*  CNS_INT   int    0 $40

------------ BB16 [127..133), preds={BB20} succs={BB17}

***** BB16
STMT00065 (IL 0x127...0x131)
N003 ( 15,  8) [000243] --CXG-------              *  CALL      void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0 $VN.Void
N002 (  1,  1) [000242] ------------ this in rcx  \--*  LCL_VAR   ref    V02 loc0         u:2 $180

***** BB16
STMT00066 (IL 0x12D...  ???)
N005 (  3,  3) [000248] -A------R---              *  ASG       int    $2ad
N004 (  1,  1) [000247] D------N----              +--*  LCL_VAR   int    V10 loc8         d:4 $2ad
N003 (  3,  3) [000246] ------------              \--*  ADD       int    $2ad
N001 (  1,  1) [000244] ------------                 +--*  LCL_VAR   int    V10 loc8         u:3 (last use) $2ca
N002 (  1,  1) [000245] ------------                 \--*  CNS_INT   int    1 $41

------------ BB17 [000..147) -> BB19 (cond), preds={BB13,BB16} succs={BB18,BB19}

***** BB17
STMT00120 (IL   ???...  ???)
N005 (  0,  0) [000581] -A------R---              *  ASG       int   
N004 (  0,  0) [000579] D------N----              +--*  LCL_VAR   int    V10 loc8         d:3
N003 (  0,  0) [000580] ------------              \--*  PHI       int   
N001 (  0,  0) [000598] ------------ pred BB16       +--*  PHI_ARG   int    V10 loc8         u:4
N002 (  0,  0) [000597] ------------ pred BB15       \--*  PHI_ARG   int    V10 loc8         u:2 $40

***** BB17
STMT00114 (IL   ???...  ???)
N006 (  4,  4) [000424] -A--GO--R---              *  ASG       int    <l:$2a9, c:$2a8>
N005 (  1,  1) [000423] D------N----              +--*  LCL_VAR   int    V39 tmp28        d:2 <l:$2a7, c:$680>
N004 (  4,  4) [000237] n---GO------              \--*  IND       int    <l:$2a9, c:$2a8>
N003 (  2,  2) [000566] -------N----                 \--*  ADD       byref  $201
N001 (  1,  1) [000236] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000565] ------------                    \--*  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1

***** BB17
STMT00111 (IL   ???...  ???)
N004 (  5,  5) [000414] ------------              *  JTRUE     void  
N003 (  3,  3) [000413] J------N----              \--*  GE        int    <l:$2ab, c:$2aa>
N001 (  1,  1) [000412] ------------                 +--*  LCL_VAR   int    V39 tmp28        u:2 <l:$2a7, c:$680>
N002 (  1,  1) [000411] ------------                 \--*  CNS_INT   int    8 $57

------------ BB18 [000..000) -> BB20 (always), preds={BB17} succs={BB20}

***** BB18
STMT00113 (IL   ???...  ???)
N003 (  1,  3) [000421] -A------R---              *  ASG       int    <l:$2a7, c:$680>
N002 (  1,  1) [000420] D------N----              +--*  LCL_VAR   int    V38 tmp27        d:4 <l:$2a7, c:$680>
N001 (  1,  1) [000419] ------------              \--*  LCL_VAR   int    V39 tmp28        u:2 (last use) <l:$2a7, c:$680>

------------ BB19 [000..000), preds={BB17} succs={BB20}

***** BB19
STMT00112 (IL   ???...  ???)
N003 (  1,  3) [000417] -A------R---              *  ASG       int    $57
N002 (  1,  1) [000416] D------N----              +--*  LCL_VAR   int    V38 tmp27        d:3 $57
N001 (  1,  1) [000415] ------------              \--*  CNS_INT   int    8 $57

------------ BB20 [???..???) -> BB16 (cond), preds={BB18,BB19} succs={BB21,BB16}

***** BB20
STMT00121 (IL   ???...  ???)
N005 (  0,  0) [000584] -A------R---              *  ASG       int   
N004 (  0,  0) [000582] D------N----              +--*  LCL_VAR   int    V38 tmp27        d:2
N003 (  0,  0) [000583] ------------              \--*  PHI       int   
N001 (  0,  0) [000600] ------------ pred BB18       +--*  PHI_ARG   int    V38 tmp27        u:4 <l:$2a7, c:$680>
N002 (  0,  0) [000599] ------------ pred BB19       \--*  PHI_ARG   int    V38 tmp27        u:3 $57

***** BB20
STMT00064 (IL   ???...  ???)
N004 (  5,  5) [000241] ------------              *  JTRUE     void  
N003 (  3,  3) [000240] J------N----              \--*  LT        int    $2ac
N001 (  1,  1) [000233] ------------                 +--*  LCL_VAR   int    V10 loc8         u:3 $2ca
N002 (  1,  1) [000422] ------------                 \--*  LCL_VAR   int    V38 tmp27        u:2 (last use) $2cb

------------ BB21 [147..153) (return), preds={BB20} succs={}

***** BB21
STMT00115 (IL 0x147...  ???)
N006 (  4,  4) [000429] -A--GO--R---              *  ASG       ref    <l:$575, c:$574>
N005 (  1,  1) [000428] D------N----              +--*  LCL_VAR   ref    V40 tmp29        d:2 <l:$573, c:$177>
N004 (  4,  4) [000250] n---GO------              \--*  IND       ref    <l:$575, c:$574>
N003 (  2,  2) [000568] -------N----                 \--*  ADD       byref  $205
N001 (  1,  1) [000249] ------------                    +--*  LCL_VAR   ref    V02 loc0         u:2 (last use) $180
N002 (  1,  1) [000567] ------------                    \--*  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun] $1c5

***** BB21
STMT00068 (IL   ???...  ???)
N005 (  5,  5) [000253] ---XG-------              *  RETURN    ref    $17a
N004 (  4,  4) [000427] ---XG-------              \--*  IND       ref    <l:$57b, c:$57a>
N003 (  2,  2) [000570] -------N----                 \--*  ADD       byref  <l:$21a, c:$219>
N001 (  1,  1) [000426] ------------                    +--*  LCL_VAR   ref    V40 tmp29        u:2 (last use) <l:$573, c:$177>
N002 (  1,  1) [000569] ------------                    \--*  CNS_INT   long   8 field offset Fseq[_task] $1c4

------------ BB22 [0F4..0F8) -> BB24 (cond), preds={} succs={BB23,BB24}

***** BB22
STMT00069 (IL 0x0F4...0x0F6)
N004 (  5,  5) [000257] ------------              *  JTRUE     void  
N003 (  3,  3) [000256] J------N----              \--*  EQ        int    $293
N001 (  1,  1) [000254] ------------                 +--*  LCL_VAR   ref    V06 loc4         u:2 $164
N002 (  1,  1) [000255] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB23 [0F8..0FF), preds={BB22} succs={BB24}

***** BB23
STMT00071 (IL 0x0F8...0x0FA)
N005 ( 23, 21) [000260] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose $VN.Void
N003 (  1,  1) [000259] ------------ this in rcx  +--*  LCL_VAR   ref    V06 loc4         u:2 (last use) $164
N004 (  2, 10) [000542] H----------- arg1 in r11  \--*  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127

------------ BB24 [0FF..100) (finret), preds={BB22,BB23} succs={}

***** BB24
STMT00070 (IL 0x0FF...0x0FF)
N001 (  0,  0) [000258] ------------              *  RETFILT   void   $600

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Rationalize IR
rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 ( 16, 16) [000003] DAC---------              *  STORE_LCL_VAR ref    V12 tmp1         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  1,  3) [000008] DA----------              *  STORE_LCL_VAR ref    V02 loc0         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 ( 16, 16) [000025] DAC---------              *  STORE_LCL_VAR ref    V13 tmp2         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 ( 16, 16) [000269] DAC---------              *  STORE_LCL_VAR ref    V30 tmp19        d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 ( 16, 16) [000035] DAC---------              *  STORE_LCL_VAR ref    V14 tmp3         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 ( 16, 16) [000049] DAC---------              *  STORE_LCL_VAR ref    V15 tmp4         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 ( 14,  5) [000316] DACXG-------              *  STORE_LCL_VAR ref    V31 tmp20        d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N008 ( 18, 13) [000322] DACXGO------              *  STORE_LCL_VAR ref    V32 tmp21        d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N006 (  4,  4) [000062] DA-XG-------              *  STORE_LCL_VAR ref    V03 loc1         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N016 ( 32, 30) [000069] DACXG-------              *  STORE_LCL_VAR int    V04 loc2         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 ( 14,  5) [000482] DACXG-------              *  STORE_LCL_VAR ref    V41 tmp30        d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N015 ( 26, 20) [000075] DACXG-------              *  STORE_LCL_VAR ref    V05 loc3         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N007 ( 23, 21) [000079] DACXG-------              *  STORE_LCL_VAR ref    V06 loc4         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N007 ( 23, 21) [000088] DACXG-------              *  STORE_LCL_VAR ref    V07 loc5         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 ( 16, 16) [000092] DAC---------              *  STORE_LCL_VAR ref    V16 tmp5         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  1,  3) [000105] DA----------              *  STORE_LCL_VAR ref    V17 tmp6         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  1,  3) [000108] DA----------              *  STORE_LCL_VAR ref    V18 tmp7         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  1,  3) [000203] DA----------              *  STORE_LCL_VAR ref    V19 tmp8         d:4

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  1,  3) [000206] DA----------              *  STORE_LCL_VAR ref    V20 tmp9         d:4

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  1,  3) [000209] DA----------              *  STORE_LCL_VAR ref    V21 tmp10        d:4

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  1,  3) [000119] DA----------              *  STORE_LCL_VAR ref    V19 tmp8         d:3

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  1,  3) [000122] DA----------              *  STORE_LCL_VAR ref    V20 tmp9         d:3

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N010 ( 20, 22) [000125] DACXG-------              *  STORE_LCL_VAR ref    V21 tmp10        d:3

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 (  0,  0) [000596] DA----------              *  STORE_LCL_VAR ref    V21 tmp10        d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 (  0,  0) [000593] DA----------              *  STORE_LCL_VAR ref    V20 tmp9         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 (  0,  0) [000590] DA----------              *  STORE_LCL_VAR ref    V19 tmp8         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N006 (  4,  4) [000145] DA--GO------              *  STORE_LCL_VAR ref    V23 tmp12        d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N006 (  4,  4) [000143] DA--GO------              *  STORE_LCL_VAR ref    V22 tmp11        d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  1,  3) [000153] DA----------              *  STORE_LCL_VAR ref    V24 tmp13        d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  1,  3) [000156] DA----------              *  STORE_LCL_VAR ref    V25 tmp14        d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  1,  3) [000159] DA----------              *  STORE_LCL_VAR ref    V26 tmp15        d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 ( 16, 16) [000184] DAC---------              *  STORE_LCL_VAR ref    V28 tmp17        d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  1,  3) [000199] DA----------              *  STORE_LCL_VAR ref    V26 tmp15        d:4

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 (  0,  0) [000587] DA----------              *  STORE_LCL_VAR ref    V26 tmp15        d:3

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 ( 16, 16) [000172] DAC---------              *  STORE_LCL_VAR ref    V27 tmp16        d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N010 ( 17, 11) [000533] DACXG-----L-              *  STORE_LCL_VAR ref    V42 tmp31        d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N006 (  4,  4) [000384] DA--GO------              *  STORE_LCL_VAR ref    V35 tmp24        d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 ( 16, 16) [000224] DAC---------              *  STORE_LCL_VAR ref    V29 tmp18        d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N006 (  4,  4) [000402] DA--GO------              *  STORE_LCL_VAR int    V37 tmp26        d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 ( 16, 16) [000389] DAC---------              *  STORE_LCL_VAR ref    V36 tmp25        d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  1,  3) [000232] DA----------              *  STORE_LCL_VAR int    V10 loc8         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 (  3,  3) [000248] DA----------              *  STORE_LCL_VAR int    V10 loc8         d:4

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 (  0,  0) [000581] DA----------              *  STORE_LCL_VAR int    V10 loc8         d:3

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N006 (  4,  4) [000424] DA--GO------              *  STORE_LCL_VAR int    V39 tmp28        d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  1,  3) [000421] DA----------              *  STORE_LCL_VAR int    V38 tmp27        d:4

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  1,  3) [000417] DA----------              *  STORE_LCL_VAR int    V38 tmp27        d:3

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 (  0,  0) [000584] DA----------              *  STORE_LCL_VAR int    V38 tmp27        d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N006 (  4,  4) [000429] DA--GO------              *  STORE_LCL_VAR ref    V40 tmp29        d:2


*************** Finishing PHASE Rationalize IR
Trees after Rationalize IR

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck LIR 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB13 ( cond ) T0      try {       keep i try label hascall gcsafe LIR 
BB03 [0002]  2  0    BB02,BB09             4     0 [072..08B)-> BB05 ( cond ) T0                  i Loop label target hascall gcsafe newobj bwd bwd-target LIR 
BB04 [0003]  1  0    BB03                  2     0 [08B..08F)-> BB06 (always) T0                  i gcsafe bwd LIR 
BB05 [0004]  1  0    BB03                  2     0 [08F..09C)                 T0                  i label target hascall gcsafe bwd LIR 
BB06 [0005]  2  0    BB04,BB05             4     0 [09C..0BB)-> BB09 ( cond ) T0                  i label target gcsafe bwd LIR 
BB07 [0006]  1  0    BB06                  2     0 [000..0D3)                 T0                  i hascall gcsafe newobj bwd LIR 
BB09 [0007]  2  0    BB06,BB07             4     0 [000..0F2)-> BB03 ( cond ) T0      }           i label target hascall gcsafe newobj bwd LIR 
BB13 [0057]  2       BB02,BB09             1       [0F4..127)-> BB17 (always)                     keep i label target gcsafe newobj LIR cfb 
BB16 [0014]  1       BB20                  2     1 [127..133)                                     i Loop label target hascall gcsafe bwd bwd-target LIR 
BB17 [0015]  2       BB13,BB16             8     1 [000..147)-> BB19 ( cond )                     i label target gcsafe bwd LIR 
BB18 [0053]  1       BB17                  2     1 [000..000)-> BB20 (always)                     i internal gcsafe bwd LIR 
BB19 [0054]  1       BB17                  2     1 [000..000)                                     i internal label target gcsafe bwd LIR 
BB20 [0055]  2       BB18,BB19             8     1 [???..???)-> BB16 ( cond )                     internal label target gcsafe bwd LIR 
BB21 [0016]  1       BB20                  1       [147..153)        (return)                     i gcsafe LIR 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB22 [0010]  1     0                       0       [0F4..0F8)-> BB24 ( cond )    H0 F fault {     keep i rare label target flet LIR 
BB23 [0011]  1     0 BB22                  0       [0F8..0FF)                    H0               i rare hascall gcsafe LIR 
BB24 [0012]  2     0 BB22,BB23             0       [0FF..100)        (finret)    H0   }           i rare label target LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..070), preds={} succs={BB02}
               [000613] ------------                 IL_OFFSET void   IL offset: 0x0
N002 (  2, 10) [000000] H-----------         t0 =    CNS_INT(h) long   0xd1ffab1e method $100
                                                  /--*  t0     long   arg0 in rcx
N003 ( 16, 16) [000001] --C---------         t1 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $180
                                                  /--*  t1     ref    
N005 ( 16, 16) [000003] DA----------              *  STORE_LCL_VAR ref    V12 tmp1         d:2
               [000614] ------------                 IL_OFFSET void   IL offset: 0x5
N001 (  1,  1) [000006] ------------         t6 =    LCL_VAR   ref    V12 tmp1         u:2 $180
                                                  /--*  t6     ref    
N003 (  1,  3) [000008] DA----------              *  STORE_LCL_VAR ref    V02 loc0         d:2
               [000615] ------------                 IL_OFFSET void   IL offset: 0x6
N001 (  1,  1) [000009] ------------         t9 =    LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000439] ------------       t439 =    CNS_INT   long   32 field offset Fseq[outputFile] $1c0
                                                  /--*  t9     ref    
                                                  +--*  t439   long   
N003 (  2,  2) [000440] -------N----       t440 = *  ADD       byref  $200
N005 (  1,  1) [000010] ------------        t10 =    LCL_VAR   ref    V01 arg1         u:1 (last use) $81
                                                  /--*  t440   byref  
                                                  +--*  t10    ref    
               [000616] -A--GO------              *  STOREIND  ref   
               [000617] ------------                 IL_OFFSET void   IL offset: 0xd
N001 (  1,  1) [000013] ------------        t13 =    LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000441] ------------       t441 =    CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1
                                                  /--*  t13    ref    
                                                  +--*  t441   long   
N003 (  2,  2) [000442] -------N----       t442 = *  ADD       byref  $201
N005 (  1,  1) [000014] ------------        t14 =    CNS_INT   int    0 $40
                                                  /--*  t442   byref  
                                                  +--*  t14    int    
               [000618] -A--GO------              *  STOREIND  int   
               [000619] ------------                 IL_OFFSET void   IL offset: 0x14
N001 (  1,  1) [000017] ------------        t17 =    LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000443] ------------       t443 =    CNS_INT   long   56 field offset Fseq[analyzersFinishedCount] $1c2
                                                  /--*  t17    ref    
                                                  +--*  t443   long   
N003 (  2,  2) [000444] -------N----       t444 = *  ADD       byref  $202
N005 (  1,  1) [000018] ------------        t18 =    CNS_INT   int    0 $40
                                                  /--*  t444   byref  
                                                  +--*  t18    int    
               [000620] -A--GO------              *  STOREIND  int   
               [000621] ------------                 IL_OFFSET void   IL offset: 0x1b
N002 (  2, 10) [000022] H-----------        t22 =    CNS_INT(h) long   0xd1ffab1e token $104
                                                  /--*  t22    long   arg0 in rcx
N003 ( 16, 16) [000023] --C---------        t23 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $183
                                                  /--*  t23    ref    
N005 ( 16, 16) [000025] DA----------              *  STORE_LCL_VAR ref    V13 tmp2         d:2
N002 (  2, 10) [000266] H-----------       t266 =    CNS_INT(h) long   0xd1ffab1e token $105
                                                  /--*  t266   long   arg0 in rcx
N003 ( 16, 16) [000267] --C---------       t267 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $184
                                                  /--*  t267   ref    
N005 ( 16, 16) [000269] DA----------              *  STORE_LCL_VAR ref    V30 tmp19        d:2
N001 (  1,  1) [000280] ------------       t280 =    LCL_VAR   ref    V30 tmp19        u:2 $184
N002 (  1,  1) [000447] ------------       t447 =    CNS_INT   long   52 field offset Fseq[m_stateFlags] $1c3
                                                  /--*  t280   ref    
                                                  +--*  t447   long   
N003 (  2,  2) [000448] -------N----       t448 = *  ADD       byref  $203
N005 (  1,  4) [000281] ------------       t281 =    CNS_INT   int    0x2000400 $43
                                                  /--*  t448   byref  
                                                  +--*  t281   int    
               [000622] -A--GO------              *  STOREIND  int   
N001 (  1,  1) [000265] ------------       t265 =    LCL_VAR   ref    V13 tmp2         u:2 $183
N002 (  1,  1) [000449] ------------       t449 =    CNS_INT   long   8 field offset Fseq[_task] $1c4
                                                  /--*  t265   ref    
                                                  +--*  t449   long   
N003 (  2,  2) [000450] -------N----       t450 = *  ADD       byref  $204
N005 (  1,  1) [000272] ------------       t272 =    LCL_VAR   ref    V30 tmp19        u:2 (last use) $184
                                                  /--*  t450   byref  
                                                  +--*  t272   ref    
               [000623] -A--GO------              *  STOREIND  ref   
               [000624] ------------                 IL_OFFSET void   IL offset: 0x21
N001 (  1,  1) [000021] ------------        t21 =    LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000451] ------------       t451 =    CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun] $1c5
                                                  /--*  t21    ref    
                                                  +--*  t451   long   
N003 (  2,  2) [000452] -------N----       t452 = *  ADD       byref  $205
N005 (  1,  1) [000028] ------------        t28 =    LCL_VAR   ref    V13 tmp2         u:2 (last use) $183
                                                  /--*  t452   byref  
                                                  +--*  t28    ref    
               [000625] -A--GO------              *  STOREIND  ref   
               [000626] ------------                 IL_OFFSET void   IL offset: 0x26
N002 (  2, 10) [000032] H-----------        t32 =    CNS_INT(h) long   0xd1ffab1e token $109
                                                  /--*  t32    long   arg0 in rcx
N003 ( 16, 16) [000033] --C---------        t33 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $189
                                                  /--*  t33    ref    
N005 ( 16, 16) [000035] DA----------              *  STORE_LCL_VAR ref    V14 tmp3         d:2
N003 (  2, 10) [000297] ------------       t297 =    CNS_INT   long   0x7ffc7e0b0028 $1c6
N004 (  1,  1) [000298] ------------       t298 =    CNS_INT   int    14 $44
                                                  /--*  t297   long   arg0 in rcx
                                                  +--*  t298   int    arg1 in rdx
N005 ( 17, 18) [000299] H-CXG-------       t299 = *  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS $381
N006 (  2, 10) [000458] I-----------       t458 =    CNS_INT(h) long   0xd1ffab1e static Fseq[Value] $10a
                                                  /--*  t458   long   
N007 (  4, 12) [000295] n---G-------       t295 = *  IND       ref    <l:$246, c:$14b>
N009 (  1,  1) [000287] ------------       t287 =    LCL_VAR   ref    V14 tmp3         u:2 $189
N010 (  1,  1) [000454] ------------       t454 =    CNS_INT   long   8 field offset Fseq[_array] $1c4
                                                  /--*  t287   ref    
                                                  +--*  t454   long   
N011 (  2,  2) [000455] -------N----       t455 = *  ADD       byref  $206
                                                  /--*  t455   byref  
                                                  +--*  t295   ref    
               [000627] -ACXGO------              *  STOREIND  ref   
               [000628] ------------                 IL_OFFSET void   IL offset: 0x2c
N001 (  1,  1) [000031] ------------        t31 =    LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000459] ------------       t459 =    CNS_INT   long   8 field offset Fseq[queuedAnalyzers] $1c4
                                                  /--*  t31    ref    
                                                  +--*  t459   long   
N003 (  2,  2) [000460] -------N----       t460 = *  ADD       byref  $207
N005 (  1,  1) [000038] ------------        t38 =    LCL_VAR   ref    V14 tmp3         u:2 (last use) $189
                                                  /--*  t460   byref  
                                                  +--*  t38    ref    
               [000629] -A--GO------              *  STOREIND  ref   
               [000630] ------------                 IL_OFFSET void   IL offset: 0x31
N001 (  1,  1) [000041] ------------        t41 =    LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000461] ------------       t461 =    CNS_INT   long   16 field offset Fseq[progressReporter] $1c7
                                                  /--*  t41    ref    
                                                  +--*  t461   long   
N003 (  2,  2) [000462] -------N----       t462 = *  ADD       byref  $208
N005 (  1,  1) [000042] ------------        t42 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t462   byref  
                                                  +--*  t42    ref    
               [000631] -A--GO------              *  STOREIND  ref   
               [000632] ------------                 IL_OFFSET void   IL offset: 0x38
N002 (  2, 10) [000046] H-----------        t46 =    CNS_INT(h) long   0xd1ffab1e token $10e
                                                  /--*  t46    long   arg0 in rcx
N003 ( 16, 16) [000047] --C---------        t47 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $193
                                                  /--*  t47    ref    
N005 ( 16, 16) [000049] DA----------              *  STORE_LCL_VAR ref    V15 tmp4         d:2
N003 (  1,  1) [000050] ------------        t50 =    LCL_VAR   ref    V15 tmp4         u:2 $193
N004 (  1,  1) [000302] ------------       t302 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t50    ref    this in rcx
                                                  +--*  t302   ref    arg1 in rdx
N005 ( 16, 10) [000303] --CXG-------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor $VN.Void
               [000633] ------------                 IL_OFFSET void   IL offset: 0x3e
N001 (  1,  1) [000045] ------------        t45 =    LCL_VAR   ref    V02 loc0         u:2 (last use) $180
N002 (  1,  1) [000466] ------------       t466 =    CNS_INT   long   40 field offset Fseq[output] $1c8
                                                  /--*  t45    ref    
                                                  +--*  t466   long   
N003 (  2,  2) [000467] -------N----       t467 = *  ADD       byref  $209
N005 (  1,  1) [000052] ------------        t52 =    LCL_VAR   ref    V15 tmp4         u:2 (last use) $193
                                                  /--*  t467   byref  
                                                  +--*  t52    ref    
               [000634] -A--GO------              *  STOREIND  ref   
N001 ( 14,  5) [000055] --CXG-------        t55 =    CALL      ref    System.Diagnostics.Process.GetCurrentProcess $151
                                                  /--*  t55    ref    
N003 ( 14,  5) [000316] DA-XG-------              *  STORE_LCL_VAR ref    V31 tmp20        d:2
N001 (  1,  1) [000313] ------------       t313 =    LCL_VAR   ref    V31 tmp20        u:2 $151
                                                  /--*  t313   ref    
N002 (  2,  2) [000314] ---X--------              *  NULLCHECK byte   $197
N003 (  1,  1) [000306] ------------       t306 =    LCL_VAR   ref    V31 tmp20        u:2 $151
N004 (  1,  1) [000307] ------------       t307 =    CNS_INT   int    3 $46
                                                  /--*  t306   ref    this in rcx
                                                  +--*  t307   int    arg1 in rdx
N005 ( 16, 10) [000308] --CXG-------              *  CALL      void   System.Diagnostics.Process.EnsureState $VN.Void
N002 (  1,  1) [000309] ------------       t309 =    LCL_VAR   ref    V31 tmp20        u:2 (last use) $151
N003 (  1,  4) [000470] ------------       t470 =    CNS_INT   long   200 field offset Fseq[_processId] $1c9
                                                  /--*  t309   ref    
                                                  +--*  t470   long   
N004 (  2,  5) [000471] -------N----       t471 = *  ADD       byref  $20a
                                                  /--*  t471   byref  
N005 (  4,  7) [000310] n---GO------       t310 = *  IND       int    <l:$289, c:$288>
                                                  /--*  t310   int    arg0 in rcx
N006 ( 18, 13) [000311] --CXGO------       t311 = *  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule $156
                                                  /--*  t311   ref    
N008 ( 18, 13) [000322] DA-XGO------              *  STORE_LCL_VAR ref    V32 tmp21        d:2
N001 (  1,  1) [000319] ------------       t319 =    LCL_VAR   ref    V32 tmp21        u:2 (last use) $156
N002 (  1,  1) [000473] ------------       t473 =    CNS_INT   long   40 field offset Fseq[<FileName>k__BackingField] $1c8
                                                  /--*  t319   ref    
                                                  +--*  t473   long   
N003 (  2,  2) [000474] -------N----       t474 = *  ADD       byref  $20b
                                                  /--*  t474   byref  
N004 (  4,  4) [000320] ---XG-------       t320 = *  IND       ref    <l:$19c, c:$19b>
                                                  /--*  t320   ref    
N006 (  4,  4) [000062] DA-XG-------              *  STORE_LCL_VAR ref    V03 loc1         d:2
N005 (  1,  1) [000339] ------------       t339 =    CNS_INT   int    5 $47
N006 (  1,  1) [000337] ------------       t337 =    LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
                                                  /--*  t337   ref    
N007 (  3,  3) [000338] ---X--------       t338 = *  ARR_LENGTH int    <l:$28b, c:$28a>
N008 (  2, 10) [000475] H-----------       t475 =    CNS_INT(h) long   0xD1FFAB1E "dotnet.exe" $112
                                                  /--*  t475   long   
N009 (  4, 12) [000476] #---G-------       t476 = *  IND       ref    $19f
N010 (  1,  1) [000063] ------------        t63 =    LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
N011 (  1,  1) [000336] ------------       t336 =    CNS_INT   int    0 $40
                                                  /--*  t339   int    arg4 out+20
                                                  +--*  t338   int    arg3 in r9
                                                  +--*  t476   ref    arg1 in rdx
                                                  +--*  t63    ref    this in rcx
                                                  +--*  t336   int    arg2 in r8
N012 ( 27, 28) [000340] --CXG-------       t340 = *  CALL      int    System.String.IndexOf $308
N013 (  1,  1) [000328] ------------       t328 =    CNS_INT   int    0 $40
                                                  /--*  t340   int    
                                                  +--*  t328   int    
N014 ( 32, 30) [000329] ---XG-------       t329 = *  GE        int    $28c
                                                  /--*  t329   int    
N016 ( 32, 30) [000069] DA-XG-------              *  STORE_LCL_VAR int    V04 loc2         d:2
N001 ( 14,  5) [000070] --CXG-------        t70 =    CALL      ref    System.Environment.GetCommandLineArgs $15e
                                                  /--*  t70    ref    
N003 ( 14,  5) [000482] DA-XG-------              *  STORE_LCL_VAR ref    V41 tmp30        d:2
N004 (  1,  1) [000072] ------------        t72 =    CNS_INT   int    0 $40
N005 (  1,  1) [000483] ------------       t483 =    LCL_VAR   ref    V41 tmp30        u:2 $15e
                                                  /--*  t483   ref    
N006 (  3,  3) [000486] ---X--------       t486 = *  ARR_LENGTH int    $28d
                                                  /--*  t72    int    
                                                  +--*  t486   int    
N007 (  8, 11) [000487] ---X--------              *  ARR_BOUNDS_CHECK_Rng void   $1a5
N008 (  1,  1) [000484] ------------       t484 =    LCL_VAR   ref    V41 tmp30        u:2 (last use) $15e
N009 (  1,  1) [000491] ------------       t491 =    CNS_INT   long   16 Fseq[#FirstElem] $1c7
                                                  /--*  t484   ref    
                                                  +--*  t491   long   
N010 (  2,  2) [000492] -------N----       t492 = *  ADD       byref  $400
                                                  /--*  t492   byref  
N011 (  4,  4) [000073] a---G-------        t73 = *  IND       ref    <l:$1a8, c:$161>
                                                  /--*  t73    ref    
N015 ( 26, 20) [000075] DA-XG-------              *  STORE_LCL_VAR ref    V05 loc3         d:2
               [000635] ------------                 IL_OFFSET void   IL offset: 0x68
N003 (  1,  1) [000076] ------------        t76 =    LCL_VAR   ref    V00 arg0         u:1 (last use) $80
N004 (  2, 10) [000495] H-----------       t495 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $114
                                                  /--*  t76    ref    this in rcx
                                                  +--*  t495   long   arg1 in r11
N005 ( 23, 21) [000077] --CXG-------        t77 = *  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator $164
                                                  /--*  t77    ref    
N007 ( 23, 21) [000079] DA-XG-------              *  STORE_LCL_VAR ref    V06 loc4         d:2

------------ BB02 [070..072) -> BB13 (cond), preds={BB01} succs={BB03,BB13}
               [000636] ------------                 IL_OFFSET void   IL offset: 0xe9
N003 (  1,  1) [000575] ------------       t575 =    LCL_VAR   ref    V06 loc4         u:2 $164
N004 (  2, 10) [000576] H-----------       t576 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
                                                  /--*  t575   ref    this in rcx
                                                  +--*  t576   long   arg1 in r11
N005 ( 23, 21) [000572] --CXG-------       t572 = *  CALLV stub int    System.Collections.IEnumerator.MoveNext $30a
N006 (  1,  1) [000577] ------------       t577 =    CNS_INT   int    0 $40
                                                  /--*  t572   int    
                                                  +--*  t577   int    
N007 ( 25, 23) [000571] J--XG--N----       t571 = *  EQ        int    $28e
                                                  /--*  t571   int    
N008 ( 27, 25) [000578] ---XG-------              *  JTRUE     void  

------------ BB03 [072..08B) -> BB05 (cond), preds={BB02,BB09} succs={BB04,BB05}
               [000637] ------------                 IL_OFFSET void   IL offset: 0x72
N003 (  1,  1) [000085] ------------        t85 =    LCL_VAR   ref    V06 loc4         u:2 $164
N004 (  2, 10) [000498] H-----------       t498 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $116
                                                  /--*  t85    ref    this in rcx
                                                  +--*  t498   long   arg1 in r11
N005 ( 23, 21) [000086] --CXG-------        t86 = *  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current $442
                                                  /--*  t86    ref    
N007 ( 23, 21) [000088] DA-XG-------              *  STORE_LCL_VAR ref    V07 loc5         d:2
               [000638] ------------                 IL_OFFSET void   IL offset: 0x7b
N002 (  2, 10) [000089] H-----------        t89 =    CNS_INT(h) long   0xd1ffab1e token $117
                                                  /--*  t89    long   arg0 in rcx
N003 ( 16, 16) [000090] --C---------        t90 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1ab
                                                  /--*  t90    ref    
N005 ( 16, 16) [000092] DA----------              *  STORE_LCL_VAR ref    V16 tmp5         d:2
               [000639] ------------                 IL_OFFSET void   IL offset: 0x80
N001 (  1,  1) [000096] ------------        t96 =    LCL_VAR   ref    V16 tmp5         u:2 $1ab
N002 (  1,  1) [000502] ------------       t502 =    CNS_INT   long   8 field offset Fseq[_fileName] $1c4
                                                  /--*  t96    ref    
                                                  +--*  t502   long   
N003 (  2,  2) [000503] -------N----       t503 = *  ADD       byref  $20d
N005 (  1,  1) [000097] ------------        t97 =    LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
                                                  /--*  t503   byref  
                                                  +--*  t97    ref    
               [000640] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000095] ------------        t95 =    LCL_VAR   ref    V16 tmp5         u:2 $1ab
                                                  /--*  t95    ref    
N003 (  1,  3) [000105] DA----------              *  STORE_LCL_VAR ref    V17 tmp6         d:2
N001 (  1,  1) [000099] ------------        t99 =    LCL_VAR   ref    V17 tmp6         u:2 (last use) $1ab
                                                  /--*  t99    ref    
N003 (  1,  3) [000108] DA----------              *  STORE_LCL_VAR ref    V18 tmp7         d:2
               [000641] ------------                 IL_OFFSET void   IL offset: 0x87
N001 (  1,  1) [000100] ------------       t100 =    LCL_VAR   int    V04 loc2         u:2 $28c
N002 (  1,  1) [000101] ------------       t101 =    CNS_INT   int    0 $40
                                                  /--*  t100   int    
                                                  +--*  t101   int    
N003 (  3,  3) [000102] J------N----       t102 = *  NE        int    $28f
                                                  /--*  t102   int    
N004 (  5,  5) [000103] ------------              *  JTRUE     void  

------------ BB04 [08B..08F) -> BB06 (always), preds={BB03} succs={BB06}
N001 (  1,  1) [000110] ------------       t110 =    LCL_VAR   ref    V18 tmp7         u:2 (last use) $1ab
                                                  /--*  t110   ref    
N003 (  1,  3) [000203] DA----------              *  STORE_LCL_VAR ref    V19 tmp8         d:4
N001 (  1,  1) [000111] ------------       t111 =    LCL_VAR   ref    V19 tmp8         u:4 (last use) $1ab
                                                  /--*  t111   ref    
N003 (  1,  3) [000206] DA----------              *  STORE_LCL_VAR ref    V20 tmp9         d:4
N001 (  1,  1) [000201] ------------       t201 =    LCL_VAR   ref    V07 loc5         u:2 (last use) $442
                                                  /--*  t201   ref    
N003 (  1,  3) [000209] DA----------              *  STORE_LCL_VAR ref    V21 tmp10        d:4

------------ BB05 [08F..09C), preds={BB03} succs={BB06}
N001 (  1,  1) [000112] ------------       t112 =    LCL_VAR   ref    V18 tmp7         u:2 (last use) $1ab
                                                  /--*  t112   ref    
N003 (  1,  3) [000119] DA----------              *  STORE_LCL_VAR ref    V19 tmp8         d:3
N001 (  1,  1) [000113] ------------       t113 =    LCL_VAR   ref    V19 tmp8         u:3 (last use) $1ab
                                                  /--*  t113   ref    
N003 (  1,  3) [000122] DA----------              *  STORE_LCL_VAR ref    V20 tmp9         d:3
N004 (  2, 10) [000504] H-----------       t504 =    CNS_INT(h) long   0xD1FFAB1E " " $119
                                                  /--*  t504   long   
N005 (  4, 12) [000505] #---G-------       t505 = *  IND       ref    $1ae
N006 (  1,  1) [000114] ------------       t114 =    LCL_VAR   ref    V05 loc3         u:2 <l:$1a8, c:$161>
N007 (  1,  1) [000116] ------------       t116 =    LCL_VAR   ref    V07 loc5         u:2 (last use) $442
                                                  /--*  t505   ref    arg1 in rdx
                                                  +--*  t114   ref    arg0 in rcx
                                                  +--*  t116   ref    arg2 in r8
N008 ( 20, 22) [000117] --CXG-------       t117 = *  CALL      ref    System.String.Concat $44e
                                                  /--*  t117   ref    
N010 ( 20, 22) [000125] DA-XG-------              *  STORE_LCL_VAR ref    V21 tmp10        d:3

------------ BB06 [09C..0BB) -> BB09 (cond), preds={BB04,BB05} succs={BB07,BB09}
N001 (  0,  0) [000606] ------------       t606 =    PHI_ARG   ref    V21 tmp10        u:4 $442
N002 (  0,  0) [000603] ------------       t603 =    PHI_ARG   ref    V21 tmp10        u:3 $44e
                                                  /--*  t606   ref    
                                                  +--*  t603   ref    
N003 (  0,  0) [000595] ------------       t595 = *  PHI       ref   
                                                  /--*  t595   ref    
N005 (  0,  0) [000596] DA----------              *  STORE_LCL_VAR ref    V21 tmp10        d:2
N001 (  0,  0) [000607] ------------       t607 =    PHI_ARG   ref    V20 tmp9         u:4 $1ab
N002 (  0,  0) [000604] ------------       t604 =    PHI_ARG   ref    V20 tmp9         u:3 $1ab
                                                  /--*  t607   ref    
                                                  +--*  t604   ref    
N003 (  0,  0) [000592] ------------       t592 = *  PHI       ref   
                                                  /--*  t592   ref    
N005 (  0,  0) [000593] DA----------              *  STORE_LCL_VAR ref    V20 tmp9         d:2
N001 (  0,  0) [000608] ------------       t608 =    PHI_ARG   ref    V19 tmp8         u:4 $1ab
N002 (  0,  0) [000605] ------------       t605 =    PHI_ARG   ref    V19 tmp8         u:3 $1ab
                                                  /--*  t608   ref    
                                                  +--*  t605   ref    
N003 (  0,  0) [000589] ------------       t589 = *  PHI       ref   
                                                  /--*  t589   ref    
N005 (  0,  0) [000590] DA----------              *  STORE_LCL_VAR ref    V19 tmp8         d:2
N001 (  1,  1) [000128] ------------       t128 =    LCL_VAR   ref    V20 tmp9         u:2 (last use) $1ab
N002 (  1,  1) [000509] ------------       t509 =    CNS_INT   long   16 field offset Fseq[_arguments] $1c7
                                                  /--*  t128   ref    
                                                  +--*  t509   long   
N003 (  2,  2) [000510] -------N----       t510 = *  ADD       byref  $20e
N005 (  1,  1) [000129] ------------       t129 =    LCL_VAR   ref    V21 tmp10        u:2 (last use) $251
                                                  /--*  t510   byref  
                                                  +--*  t129   ref    
               [000642] -A--GO------              *  STOREIND  ref   
               [000643] ------------                 IL_OFFSET void   IL offset: 0xa1
N001 (  1,  1) [000131] ------------       t131 =    LCL_VAR   ref    V19 tmp8         u:2 $1ab
N002 (  1,  4) [000511] ------------       t511 =    CNS_INT   long   130 field offset Fseq[<UseShellExecute>k__BackingField] $1cb
                                                  /--*  t131   ref    
                                                  +--*  t511   long   
N003 (  2,  5) [000512] -------N----       t512 = *  ADD       byref  $20f
N005 (  1,  1) [000353] ------------       t353 =    CNS_INT   int    0 $40
                                                  /--*  t512   byref  
                                                  +--*  t353   int    
               [000644] -A--GO------              *  STOREIND  bool  
               [000645] ------------                 IL_OFFSET void   IL offset: 0xaa
N001 (  1,  1) [000137] ------------       t137 =    LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000513] ------------       t513 =    CNS_INT   long   8 field offset Fseq[queuedAnalyzers] $1c4
                                                  /--*  t137   ref    
                                                  +--*  t513   long   
N003 (  2,  2) [000514] -------N----       t514 = *  ADD       byref  $207
                                                  /--*  t514   byref  
N004 (  4,  4) [000138] n---GO------       t138 = *  IND       ref    <l:$1bc, c:$1bb>
                                                  /--*  t138   ref    
N006 (  4,  4) [000145] DA--GO------              *  STORE_LCL_VAR ref    V23 tmp12        d:2
               [000646] ------------                 IL_OFFSET void   IL offset: 0xaa
N001 (  1,  1) [000140] ------------       t140 =    LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000515] ------------       t515 =    CNS_INT   long   48 field offset Fseq[<>9__2] $1cc
                                                  /--*  t140   ref    
                                                  +--*  t515   long   
N003 (  2,  2) [000516] -------N----       t516 = *  ADD       byref  $210
                                                  /--*  t516   byref  
N004 (  4,  4) [000141] n---GO------       t141 = *  IND       ref    <l:$542, c:$541>
                                                  /--*  t141   ref    
N006 (  4,  4) [000143] DA--GO------              *  STORE_LCL_VAR ref    V22 tmp11        d:2
N001 (  1,  1) [000146] ------------       t146 =    LCL_VAR   ref    V23 tmp12        u:2 (last use) <l:$1b9, c:$454>
                                                  /--*  t146   ref    
N003 (  1,  3) [000153] DA----------              *  STORE_LCL_VAR ref    V24 tmp13        d:2
N001 (  1,  1) [000139] ------------       t139 =    LCL_VAR   ref    V19 tmp8         u:2 (last use) $1ab
                                                  /--*  t139   ref    
N003 (  1,  3) [000156] DA----------              *  STORE_LCL_VAR ref    V25 tmp14        d:2
N001 (  1,  1) [000147] ------------       t147 =    LCL_VAR   ref    V22 tmp11        u:2 <l:$540, c:$456>
                                                  /--*  t147   ref    
N003 (  1,  3) [000159] DA----------              *  STORE_LCL_VAR ref    V26 tmp15        d:2
N001 (  1,  1) [000148] ------------       t148 =    LCL_VAR   ref    V26 tmp15        u:2 (last use) <l:$540, c:$456>
N002 (  1,  1) [000149] ------------       t149 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t148   ref    
                                                  +--*  t149   ref    
N003 (  3,  3) [000150] J------N----       t150 = *  NE        int    <l:$291, c:$290>
                                                  /--*  t150   int    
N004 (  5,  5) [000151] ------------              *  JTRUE     void  

------------ BB07 [000..0D3), preds={BB06} succs={BB09}
N002 (  2, 10) [000181] H-----------       t181 =    CNS_INT(h) long   0xd1ffab1e token $11e
                                                  /--*  t181   long   arg0 in rcx
N003 ( 16, 16) [000182] --C---------       t182 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $543
                                                  /--*  t182   ref    
N005 ( 16, 16) [000184] DA----------              *  STORE_LCL_VAR ref    V28 tmp17        d:2
N001 (  1,  1) [000185] ------------       t185 =    LCL_VAR   ref    V28 tmp17        u:2 $543
N002 (  1,  1) [000518] ------------       t518 =    CNS_INT   long   8 field offset Fseq[_target] $1c4
                                                  /--*  t185   ref    
                                                  +--*  t518   long   
N003 (  2,  2) [000519] -------N----       t519 = *  ADD       byref  $211
N005 (  1,  1) [000360] ------------       t360 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t519   byref  
                                                  +--*  t360   ref    
               [000647] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000363] ------------       t363 =    LCL_VAR   ref    V28 tmp17        u:2 $543
N002 (  1,  1) [000520] ------------       t520 =    CNS_INT   long   24 field offset Fseq[_methodPtr] $1c5
                                                  /--*  t363   ref    
                                                  +--*  t520   long   
N003 (  2,  2) [000521] -------N----       t521 = *  ADD       byref  $212
N005 (  2, 10) [000180] H-----------       t180 =    CNS_INT(h) long   0xd1ffab1e ftn $120
                                                  /--*  t521   byref  
                                                  +--*  t180   long   
               [000648] -A--GO------              *  STOREIND  long  
N001 (  1,  1) [000178] ------------       t178 =    LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000522] ------------       t522 =    CNS_INT   long   48 field offset Fseq[<>9__2] $1cc
                                                  /--*  t178   ref    
                                                  +--*  t522   long   
N003 (  2,  2) [000523] -------N----       t523 = *  ADD       byref  $210
N005 (  1,  1) [000187] ------------       t187 =    LCL_VAR   ref    V28 tmp17        u:2 $543
                                                  /--*  t523   byref  
                                                  +--*  t187   ref    
               [000649] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000193] ------------       t193 =    LCL_VAR   ref    V28 tmp17        u:2 (last use) $543
                                                  /--*  t193   ref    
N003 (  1,  3) [000199] DA----------              *  STORE_LCL_VAR ref    V26 tmp15        d:4

------------ BB09 [000..0F2) -> BB03 (cond), preds={BB06,BB07} succs={BB13,BB03}
N001 (  0,  0) [000602] ------------       t602 =    PHI_ARG   ref    V26 tmp15        u:4 $543
N002 (  0,  0) [000601] ------------       t601 =    PHI_ARG   ref    V26 tmp15        u:2 <l:$540, c:$456>
                                                  /--*  t602   ref    
                                                  +--*  t601   ref    
N003 (  0,  0) [000586] ------------       t586 = *  PHI       ref   
                                                  /--*  t586   ref    
N005 (  0,  0) [000587] DA----------              *  STORE_LCL_VAR ref    V26 tmp15        d:3
N002 (  2, 10) [000169] H-----------       t169 =    CNS_INT(h) long   0xd1ffab1e token $123
                                                  /--*  t169   long   arg0 in rcx
N003 ( 16, 16) [000170] --C---------       t170 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $54b
                                                  /--*  t170   ref    
N005 ( 16, 16) [000172] DA----------              *  STORE_LCL_VAR ref    V27 tmp16        d:2
N001 (  1,  1) [000173] ------------       t173 =    LCL_VAR   ref    V27 tmp16        u:2 $54b
N002 (  1,  1) [000525] ------------       t525 =    CNS_INT   long   8 field offset Fseq[_target] $1c4
                                                  /--*  t173   ref    
                                                  +--*  t525   long   
N003 (  2,  2) [000526] -------N----       t526 = *  ADD       byref  $213
N005 (  1,  1) [000372] ------------       t372 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t526   byref  
                                                  +--*  t372   ref    
               [000650] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000375] ------------       t375 =    LCL_VAR   ref    V27 tmp16        u:2 $54b
N002 (  1,  1) [000527] ------------       t527 =    CNS_INT   long   24 field offset Fseq[_methodPtr] $1c5
                                                  /--*  t375   ref    
                                                  +--*  t527   long   
N003 (  2,  2) [000528] -------N----       t528 = *  ADD       byref  $214
N005 (  2, 10) [000168] H-----------       t168 =    CNS_INT(h) long   0xd1ffab1e ftn $125
                                                  /--*  t528   byref  
                                                  +--*  t168   long   
               [000651] -A--GO------              *  STOREIND  long  
               [000652] ------------                 IL_OFFSET void   IL offset: 0xdf
N005 (  1,  1) [000165] ------------       t165 =    LCL_VAR   ref    V25 tmp14        u:2 (last use) $1ab
N006 (  1,  1) [000166] ------------       t166 =    LCL_VAR   ref    V26 tmp15        u:3 (last use) $258
N007 (  1,  1) [000175] ------------       t175 =    LCL_VAR   ref    V27 tmp16        u:2 (last use) $54b
                                                  /--*  t165   ref    arg0 in rcx
                                                  +--*  t166   ref    arg1 in rdx
                                                  +--*  t175   ref    arg2 in r8
N008 ( 17, 11) [000176] --CXG-------       t176 = *  CALL      ref    SolutionAnalyzer.IPC.CreateSession $464
                                                  /--*  t176   ref    
N010 ( 17, 11) [000533] DA-XG-----L-              *  STORE_LCL_VAR ref    V42 tmp31        d:2
N011 (  1,  1) [000534] ------------       t534 =    LCL_VAR   ref    V42 tmp31        u:2 (last use) $464
N012 (  1,  1) [000164] ------------       t164 =    LCL_VAR   ref    V24 tmp13        u:2 (last use) <l:$1b9, c:$454>
                                                  /--*  t534   ref    arg1 in rdx
                                                  +--*  t164   ref    this in rcx
N013 ( 36, 21) [000177] --CXG-------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue $VN.Void
               [000653] ------------                 IL_OFFSET void   IL offset: 0xe9
N003 (  1,  1) [000080] ------------        t80 =    LCL_VAR   ref    V06 loc4         u:2 $164
N004 (  2, 10) [000536] H-----------       t536 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
                                                  /--*  t80    ref    this in rcx
                                                  +--*  t536   long   arg1 in r11
N005 ( 23, 21) [000081] --CXG-------        t81 = *  CALLV stub int    System.Collections.IEnumerator.MoveNext $5c0
N006 (  1,  1) [000082] ------------        t82 =    CNS_INT   int    0 $40
                                                  /--*  t81    int    
                                                  +--*  t82    int    
N007 ( 25, 23) [000083] J--XG--N----        t83 = *  NE        int    $292
                                                  /--*  t83    int    
N008 ( 27, 25) [000084] ---XG-------              *  JTRUE     void  

------------ BB13 [0F4..127) -> BB17 (always), preds={BB02,BB09} succs={BB17}
N003 (  1,  1) [000436] ------------       t436 =    LCL_VAR   ref    V06 loc4         u:2 (last use) $164
N004 (  2, 10) [000539] H-----------       t539 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127
                                                  /--*  t436   ref    this in rcx
                                                  +--*  t539   long   arg1 in r11
N005 ( 23, 21) [000435] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose $VN.Void
               [000654] ------------                 IL_OFFSET void   IL offset: 0x100
N001 (  1,  1) [000212] ------------       t212 =    LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000545] ------------       t545 =    CNS_INT   long   8 field offset Fseq[queuedAnalyzers] $1c4
                                                  /--*  t212   ref    
                                                  +--*  t545   long   
N003 (  2,  2) [000546] -------N----       t546 = *  ADD       byref  $207
                                                  /--*  t546   byref  
N004 (  4,  4) [000213] n---GO------       t213 = *  IND       ref    <l:$569, c:$568>
                                                  /--*  t213   ref    
N006 (  4,  4) [000384] DA--GO------              *  STORE_LCL_VAR ref    V35 tmp24        d:2
N001 (  1,  1) [000381] ------------       t381 =    LCL_VAR   ref    V35 tmp24        u:2 (last use) <l:$567, c:$16e>
N002 (  1,  1) [000549] ------------       t549 =    CNS_INT   long   24 field offset Fseq[_size] $1c5
                                                  /--*  t381   ref    
                                                  +--*  t549   long   
N003 (  2,  2) [000550] -------N----       t550 = *  ADD       byref  <l:$216, c:$215>
                                                  /--*  t550   byref  
N004 (  4,  4) [000382] ---XG-------       t382 = *  IND       int    <l:$29b, c:$29a>
N005 (  1,  1) [000211] ------------       t211 =    LCL_VAR   ref    V02 loc0         u:2 $180
N006 (  1,  1) [000547] ------------       t547 =    CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1
                                                  /--*  t211   ref    
                                                  +--*  t547   long   
N007 (  2,  2) [000548] -------N----       t548 = *  ADD       byref  $201
                                                  /--*  t548   byref  
                                                  +--*  t382   int    
               [000655] -A-XGO------              *  STOREIND  int   
               [000656] ------------                 IL_OFFSET void   IL offset: 0x111
N002 (  2, 10) [000221] H-----------       t221 =    CNS_INT(h) long   0xd1ffab1e method $12b
                                                  /--*  t221   long   arg0 in rcx
N003 ( 16, 16) [000222] --C---------       t222 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $56c
                                                  /--*  t222   ref    
N005 ( 16, 16) [000224] DA----------              *  STORE_LCL_VAR ref    V29 tmp18        d:2
N001 (  1,  1) [000219] ------------       t219 =    LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000552] ------------       t552 =    CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1
                                                  /--*  t219   ref    
                                                  +--*  t552   long   
N003 (  2,  2) [000553] -------N----       t553 = *  ADD       byref  $201
                                                  /--*  t553   byref  
N004 (  4,  4) [000220] n---GO------       t220 = *  IND       int    <l:$2a3, c:$2a2>
                                                  /--*  t220   int    
N006 (  4,  4) [000402] DA--GO------              *  STORE_LCL_VAR int    V37 tmp26        d:2
N002 (  2, 10) [000386] H-----------       t386 =    CNS_INT(h) long   0xd1ffab1e token $12c
                                                  /--*  t386   long   arg0 in rcx
N003 ( 16, 16) [000387] --C---------       t387 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $56d
                                                  /--*  t387   ref    
N005 ( 16, 16) [000389] DA----------              *  STORE_LCL_VAR ref    V36 tmp25        d:2
N004 (  1,  1) [000390] ------------       t390 =    LCL_VAR   ref    V36 tmp25        u:2 $56d
N005 (  1,  1) [000404] ------------       t404 =    CNS_INT   int    0 $40
N006 (  1,  1) [000405] ------------       t405 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t390   ref    this in rcx
                                                  +--*  t404   int    arg1 in rdx
                                                  +--*  t405   ref    arg2 in r8
N007 ( 17, 12) [000406] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor $VN.Void
N001 (  1,  1) [000225] ------------       t225 =    LCL_VAR   ref    V29 tmp18        u:2 $56c
N002 (  1,  1) [000558] ------------       t558 =    CNS_INT   long   8 field offset Fseq[_workItems] $1c4
                                                  /--*  t225   ref    
                                                  +--*  t558   long   
N003 (  2,  2) [000559] -------N----       t559 = *  ADD       byref  $217
N005 (  1,  1) [000392] ------------       t392 =    LCL_VAR   ref    V36 tmp25        u:2 (last use) $56d
                                                  /--*  t559   byref  
                                                  +--*  t392   ref    
               [000657] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000397] ------------       t397 =    LCL_VAR   ref    V29 tmp18        u:2 $56c
N002 (  1,  1) [000560] ------------       t560 =    CNS_INT   long   16 field offset Fseq[_workItemsToComplete] $1c7
                                                  /--*  t397   ref    
                                                  +--*  t560   long   
N003 (  2,  2) [000561] -------N----       t561 = *  ADD       byref  $218
N005 (  1,  1) [000398] ------------       t398 =    LCL_VAR   int    V37 tmp26        u:2 (last use) <l:$299, c:$30c>
                                                  /--*  t561   byref  
                                                  +--*  t398   int    
               [000658] -A--GO------              *  STOREIND  int   
               [000659] ------------                 IL_OFFSET void   IL offset: 0x11d
N001 (  1,  1) [000218] ------------       t218 =    LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000562] ------------       t562 =    CNS_INT   long   16 field offset Fseq[progressReporter] $1c7
                                                  /--*  t218   ref    
                                                  +--*  t562   long   
N003 (  2,  2) [000563] -------N----       t563 = *  ADD       byref  $208
N005 (  1,  1) [000227] ------------       t227 =    LCL_VAR   ref    V29 tmp18        u:2 (last use) $56c
                                                  /--*  t563   byref  
                                                  +--*  t227   ref    
               [000660] -A--GO------              *  STOREIND  ref   
               [000661] ------------                 IL_OFFSET void   IL offset: 0x122
N001 (  1,  1) [000230] ------------       t230 =    CNS_INT   int    0 $40
                                                  /--*  t230   int    
N003 (  1,  3) [000232] DA----------              *  STORE_LCL_VAR int    V10 loc8         d:2

------------ BB16 [127..133), preds={BB20} succs={BB17}
               [000662] ------------                 IL_OFFSET void   IL offset: 0x127
N002 (  1,  1) [000242] ------------       t242 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t242   ref    this in rcx
N003 ( 15,  8) [000243] --CXG-------              *  CALL      void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0 $VN.Void
               [000663] ------------                 IL_OFFSET void   IL offset: 0x12d
N001 (  1,  1) [000244] ------------       t244 =    LCL_VAR   int    V10 loc8         u:3 (last use) $2ca
N002 (  1,  1) [000245] ------------       t245 =    CNS_INT   int    1 $41
                                                  /--*  t244   int    
                                                  +--*  t245   int    
N003 (  3,  3) [000246] ------------       t246 = *  ADD       int    $2ad
                                                  /--*  t246   int    
N005 (  3,  3) [000248] DA----------              *  STORE_LCL_VAR int    V10 loc8         d:4

------------ BB17 [000..147) -> BB19 (cond), preds={BB13,BB16} succs={BB18,BB19}
N001 (  0,  0) [000598] ------------       t598 =    PHI_ARG   int    V10 loc8         u:4
N002 (  0,  0) [000597] ------------       t597 =    PHI_ARG   int    V10 loc8         u:2 $40
                                                  /--*  t598   int    
                                                  +--*  t597   int    
N003 (  0,  0) [000580] ------------       t580 = *  PHI       int   
                                                  /--*  t580   int    
N005 (  0,  0) [000581] DA----------              *  STORE_LCL_VAR int    V10 loc8         d:3
N001 (  1,  1) [000236] ------------       t236 =    LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000565] ------------       t565 =    CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1
                                                  /--*  t236   ref    
                                                  +--*  t565   long   
N003 (  2,  2) [000566] -------N----       t566 = *  ADD       byref  $201
                                                  /--*  t566   byref  
N004 (  4,  4) [000237] n---GO------       t237 = *  IND       int    <l:$2a9, c:$2a8>
                                                  /--*  t237   int    
N006 (  4,  4) [000424] DA--GO------              *  STORE_LCL_VAR int    V39 tmp28        d:2
N001 (  1,  1) [000412] ------------       t412 =    LCL_VAR   int    V39 tmp28        u:2 <l:$2a7, c:$680>
N002 (  1,  1) [000411] ------------       t411 =    CNS_INT   int    8 $57
                                                  /--*  t412   int    
                                                  +--*  t411   int    
N003 (  3,  3) [000413] J------N----       t413 = *  GE        int    <l:$2ab, c:$2aa>
                                                  /--*  t413   int    
N004 (  5,  5) [000414] ------------              *  JTRUE     void  

------------ BB18 [000..000) -> BB20 (always), preds={BB17} succs={BB20}
N001 (  1,  1) [000419] ------------       t419 =    LCL_VAR   int    V39 tmp28        u:2 (last use) <l:$2a7, c:$680>
                                                  /--*  t419   int    
N003 (  1,  3) [000421] DA----------              *  STORE_LCL_VAR int    V38 tmp27        d:4

------------ BB19 [000..000), preds={BB17} succs={BB20}
N001 (  1,  1) [000415] ------------       t415 =    CNS_INT   int    8 $57
                                                  /--*  t415   int    
N003 (  1,  3) [000417] DA----------              *  STORE_LCL_VAR int    V38 tmp27        d:3

------------ BB20 [???..???) -> BB16 (cond), preds={BB18,BB19} succs={BB21,BB16}
N001 (  0,  0) [000600] ------------       t600 =    PHI_ARG   int    V38 tmp27        u:4 <l:$2a7, c:$680>
N002 (  0,  0) [000599] ------------       t599 =    PHI_ARG   int    V38 tmp27        u:3 $57
                                                  /--*  t600   int    
                                                  +--*  t599   int    
N003 (  0,  0) [000583] ------------       t583 = *  PHI       int   
                                                  /--*  t583   int    
N005 (  0,  0) [000584] DA----------              *  STORE_LCL_VAR int    V38 tmp27        d:2
N001 (  1,  1) [000233] ------------       t233 =    LCL_VAR   int    V10 loc8         u:3 $2ca
N002 (  1,  1) [000422] ------------       t422 =    LCL_VAR   int    V38 tmp27        u:2 (last use) $2cb
                                                  /--*  t233   int    
                                                  +--*  t422   int    
N003 (  3,  3) [000240] J------N----       t240 = *  LT        int    $2ac
                                                  /--*  t240   int    
N004 (  5,  5) [000241] ------------              *  JTRUE     void  

------------ BB21 [147..153) (return), preds={BB20} succs={}
               [000664] ------------                 IL_OFFSET void   IL offset: 0x147
N001 (  1,  1) [000249] ------------       t249 =    LCL_VAR   ref    V02 loc0         u:2 (last use) $180
N002 (  1,  1) [000567] ------------       t567 =    CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun] $1c5
                                                  /--*  t249   ref    
                                                  +--*  t567   long   
N003 (  2,  2) [000568] -------N----       t568 = *  ADD       byref  $205
                                                  /--*  t568   byref  
N004 (  4,  4) [000250] n---GO------       t250 = *  IND       ref    <l:$575, c:$574>
                                                  /--*  t250   ref    
N006 (  4,  4) [000429] DA--GO------              *  STORE_LCL_VAR ref    V40 tmp29        d:2
N001 (  1,  1) [000426] ------------       t426 =    LCL_VAR   ref    V40 tmp29        u:2 (last use) <l:$573, c:$177>
N002 (  1,  1) [000569] ------------       t569 =    CNS_INT   long   8 field offset Fseq[_task] $1c4
                                                  /--*  t426   ref    
                                                  +--*  t569   long   
N003 (  2,  2) [000570] -------N----       t570 = *  ADD       byref  <l:$21a, c:$219>
                                                  /--*  t570   byref  
N004 (  4,  4) [000427] ---XG-------       t427 = *  IND       ref    <l:$57b, c:$57a>
                                                  /--*  t427   ref    
N005 (  5,  5) [000253] ---XG-------              *  RETURN    ref    $17a

------------ BB22 [0F4..0F8) -> BB24 (cond), preds={} succs={BB23,BB24}
               [000665] ------------                 IL_OFFSET void   IL offset: 0xf4
N001 (  1,  1) [000254] ------------       t254 =    LCL_VAR   ref    V06 loc4         u:2 $164
N002 (  1,  1) [000255] ------------       t255 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t254   ref    
                                                  +--*  t255   ref    
N003 (  3,  3) [000256] J------N----       t256 = *  EQ        int    $293
                                                  /--*  t256   int    
N004 (  5,  5) [000257] ------------              *  JTRUE     void  

------------ BB23 [0F8..0FF), preds={BB22} succs={BB24}
               [000666] ------------                 IL_OFFSET void   IL offset: 0xf8
N003 (  1,  1) [000259] ------------       t259 =    LCL_VAR   ref    V06 loc4         u:2 (last use) $164
N004 (  2, 10) [000542] H-----------       t542 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127
                                                  /--*  t259   ref    this in rcx
                                                  +--*  t542   long   arg1 in r11
N005 ( 23, 21) [000260] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose $VN.Void

------------ BB24 [0FF..100) (finret), preds={BB22,BB23} succs={}
               [000667] ------------                 IL_OFFSET void   IL offset: 0xff
N001 (  0,  0) [000258] ------------                 RETFILT   void   $600

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist

*************** Starting PHASE Do 'simple' lowering
Bumping outgoingArgSpaceSize to 32 for call [000001]
outgoingArgSpaceSize 32 sufficient for call [000023], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000267], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000033], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000299], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000047], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000303], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000055], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000308], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000311], which needs 32
Bumping outgoingArgSpaceSize to 40 for call [000340]
outgoingArgSpaceSize 40 sufficient for call [000070], which needs 32
*** Computing fgRngChkTarget for block BB01
fgNewBBinRegion(jumpKind=3, tryIndex=0, hndIndex=0, putInFilter=false, runRarely=true, insertAtEnd=true): inserting after BB21
New Basic Block BB25 [0062] created.

fgAddCodeRef - Add BB in non-EH region for RNGCHK_FAIL, new block BB25 [0062]
Initializing arg info for 672.CALL:
ArgTable for 672.CALL after fgInitArgInfo:

Morphing args for 672.CALL:
argSlots=0, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32
ArgTable for 672.CALL after fgMorphArgs:

outgoingArgSpaceSize 40 sufficient for call [000077], which needs 32
outgoingArgSpaceSize 40 sufficient for call [000572], which needs 32
outgoingArgSpaceSize 40 sufficient for call [000086], which needs 32
outgoingArgSpaceSize 40 sufficient for call [000090], which needs 32
outgoingArgSpaceSize 40 sufficient for call [000117], which needs 32
outgoingArgSpaceSize 40 sufficient for call [000182], which needs 32
outgoingArgSpaceSize 40 sufficient for call [000170], which needs 32
outgoingArgSpaceSize 40 sufficient for call [000176], which needs 32
outgoingArgSpaceSize 40 sufficient for call [000177], which needs 32
outgoingArgSpaceSize 40 sufficient for call [000081], which needs 32
outgoingArgSpaceSize 40 sufficient for call [000435], which needs 32
outgoingArgSpaceSize 40 sufficient for call [000222], which needs 32
outgoingArgSpaceSize 40 sufficient for call [000387], which needs 32
outgoingArgSpaceSize 40 sufficient for call [000406], which needs 32
outgoingArgSpaceSize 40 sufficient for call [000243], which needs 32
outgoingArgSpaceSize 40 sufficient for call [000672], which needs 32
outgoingArgSpaceSize 40 sufficient for call [000260], which needs 32

After fgSimpleLowering() added some RngChk throw blocks
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck LIR 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB13 ( cond ) T0      try {       keep i try label hascall gcsafe LIR 
BB03 [0002]  2  0    BB02,BB09             4     0 [072..08B)-> BB05 ( cond ) T0                  i Loop label target hascall gcsafe newobj bwd bwd-target LIR 
BB04 [0003]  1  0    BB03                  2     0 [08B..08F)-> BB06 (always) T0                  i gcsafe bwd LIR 
BB05 [0004]  1  0    BB03                  2     0 [08F..09C)                 T0                  i label target hascall gcsafe bwd LIR 
BB06 [0005]  2  0    BB04,BB05             4     0 [09C..0BB)-> BB09 ( cond ) T0                  i label target gcsafe bwd LIR 
BB07 [0006]  1  0    BB06                  2     0 [000..0D3)                 T0                  i hascall gcsafe newobj bwd LIR 
BB09 [0007]  2  0    BB06,BB07             4     0 [000..0F2)-> BB03 ( cond ) T0      }           i label target hascall gcsafe newobj bwd LIR 
BB13 [0057]  2       BB02,BB09             1       [0F4..127)-> BB17 (always)                     keep i label target gcsafe newobj LIR cfb 
BB16 [0014]  1       BB20                  2     1 [127..133)                                     i Loop label target hascall gcsafe bwd bwd-target LIR 
BB17 [0015]  2       BB13,BB16             8     1 [000..147)-> BB19 ( cond )                     i label target gcsafe bwd LIR 
BB18 [0053]  1       BB17                  2     1 [000..000)-> BB20 (always)                     i internal gcsafe bwd LIR 
BB19 [0054]  1       BB17                  2     1 [000..000)                                     i internal label target gcsafe bwd LIR 
BB20 [0055]  2       BB18,BB19             8     1 [???..???)-> BB16 ( cond )                     internal label target gcsafe bwd LIR 
BB21 [0016]  1       BB20                  1       [147..153)        (return)                     i gcsafe LIR 
BB25 [0062]  0                             0       [???..???)        (throw )                     keep i internal rare label target LIR 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB22 [0010]  1     0                       0       [0F4..0F8)-> BB24 ( cond )    H0 F fault {     keep i rare label target flet LIR 
BB23 [0011]  1     0 BB22                  0       [0F8..0FF)                    H0               i rare hascall gcsafe LIR 
BB24 [0012]  2     0 BB22,BB23             0       [0FF..100)        (finret)    H0   }           i rare label target LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table
index  eTry, eHnd
  0  ::            - Try at BB02..BB09 [070..0F4), Fault   at BB22..BB24 [0F4..100)


*************** Finishing PHASE Do 'simple' lowering
*************** In fgDebugCheckBBlist
Trees before Lowering nodeinfo

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck LIR 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB13 ( cond ) T0      try {       keep i try label hascall gcsafe LIR 
BB03 [0002]  2  0    BB02,BB09             4     0 [072..08B)-> BB05 ( cond ) T0                  i Loop label target hascall gcsafe newobj bwd bwd-target LIR 
BB04 [0003]  1  0    BB03                  2     0 [08B..08F)-> BB06 (always) T0                  i gcsafe bwd LIR 
BB05 [0004]  1  0    BB03                  2     0 [08F..09C)                 T0                  i label target hascall gcsafe bwd LIR 
BB06 [0005]  2  0    BB04,BB05             4     0 [09C..0BB)-> BB09 ( cond ) T0                  i label target gcsafe bwd LIR 
BB07 [0006]  1  0    BB06                  2     0 [000..0D3)                 T0                  i hascall gcsafe newobj bwd LIR 
BB09 [0007]  2  0    BB06,BB07             4     0 [000..0F2)-> BB03 ( cond ) T0      }           i label target hascall gcsafe newobj bwd LIR 
BB13 [0057]  2       BB02,BB09             1       [0F4..127)-> BB17 (always)                     keep i label target gcsafe newobj LIR cfb 
BB16 [0014]  1       BB20                  2     1 [127..133)                                     i Loop label target hascall gcsafe bwd bwd-target LIR 
BB17 [0015]  2       BB13,BB16             8     1 [000..147)-> BB19 ( cond )                     i label target gcsafe bwd LIR 
BB18 [0053]  1       BB17                  2     1 [000..000)-> BB20 (always)                     i internal gcsafe bwd LIR 
BB19 [0054]  1       BB17                  2     1 [000..000)                                     i internal label target gcsafe bwd LIR 
BB20 [0055]  2       BB18,BB19             8     1 [???..???)-> BB16 ( cond )                     internal label target gcsafe bwd LIR 
BB21 [0016]  1       BB20                  1       [147..153)        (return)                     i gcsafe LIR 
BB25 [0062]  0                             0       [???..???)        (throw )                     keep i internal rare label target LIR 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB22 [0010]  1     0                       0       [0F4..0F8)-> BB24 ( cond )    H0 F fault {     keep i rare label target flet LIR 
BB23 [0011]  1     0 BB22                  0       [0F8..0FF)                    H0               i rare hascall gcsafe LIR 
BB24 [0012]  2     0 BB22,BB23             0       [0FF..100)        (finret)    H0   }           i rare label target LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..070), preds={} succs={BB02}
               [000613] ------------                 IL_OFFSET void   IL offset: 0x0
N002 (  2, 10) [000000] H-----------         t0 =    CNS_INT(h) long   0xd1ffab1e method $100
                                                  /--*  t0     long   arg0 in rcx
N003 ( 16, 16) [000001] --C---------         t1 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $180
                                                  /--*  t1     ref    
N005 ( 16, 16) [000003] DA----------              *  STORE_LCL_VAR ref    V12 tmp1         d:2
               [000614] ------------                 IL_OFFSET void   IL offset: 0x5
N001 (  1,  1) [000006] ------------         t6 =    LCL_VAR   ref    V12 tmp1         u:2 $180
                                                  /--*  t6     ref    
N003 (  1,  3) [000008] DA----------              *  STORE_LCL_VAR ref    V02 loc0         d:2
               [000615] ------------                 IL_OFFSET void   IL offset: 0x6
N001 (  1,  1) [000009] ------------         t9 =    LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000439] ------------       t439 =    CNS_INT   long   32 field offset Fseq[outputFile] $1c0
                                                  /--*  t9     ref    
                                                  +--*  t439   long   
N003 (  2,  2) [000440] -------N----       t440 = *  ADD       byref  $200
N005 (  1,  1) [000010] ------------        t10 =    LCL_VAR   ref    V01 arg1         u:1 (last use) $81
                                                  /--*  t440   byref  
                                                  +--*  t10    ref    
               [000616] -A--GO------              *  STOREIND  ref   
               [000617] ------------                 IL_OFFSET void   IL offset: 0xd
N001 (  1,  1) [000013] ------------        t13 =    LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000441] ------------       t441 =    CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1
                                                  /--*  t13    ref    
                                                  +--*  t441   long   
N003 (  2,  2) [000442] -------N----       t442 = *  ADD       byref  $201
N005 (  1,  1) [000014] ------------        t14 =    CNS_INT   int    0 $40
                                                  /--*  t442   byref  
                                                  +--*  t14    int    
               [000618] -A--GO------              *  STOREIND  int   
               [000619] ------------                 IL_OFFSET void   IL offset: 0x14
N001 (  1,  1) [000017] ------------        t17 =    LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000443] ------------       t443 =    CNS_INT   long   56 field offset Fseq[analyzersFinishedCount] $1c2
                                                  /--*  t17    ref    
                                                  +--*  t443   long   
N003 (  2,  2) [000444] -------N----       t444 = *  ADD       byref  $202
N005 (  1,  1) [000018] ------------        t18 =    CNS_INT   int    0 $40
                                                  /--*  t444   byref  
                                                  +--*  t18    int    
               [000620] -A--GO------              *  STOREIND  int   
               [000621] ------------                 IL_OFFSET void   IL offset: 0x1b
N002 (  2, 10) [000022] H-----------        t22 =    CNS_INT(h) long   0xd1ffab1e token $104
                                                  /--*  t22    long   arg0 in rcx
N003 ( 16, 16) [000023] --C---------        t23 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $183
                                                  /--*  t23    ref    
N005 ( 16, 16) [000025] DA----------              *  STORE_LCL_VAR ref    V13 tmp2         d:2
N002 (  2, 10) [000266] H-----------       t266 =    CNS_INT(h) long   0xd1ffab1e token $105
                                                  /--*  t266   long   arg0 in rcx
N003 ( 16, 16) [000267] --C---------       t267 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $184
                                                  /--*  t267   ref    
N005 ( 16, 16) [000269] DA----------              *  STORE_LCL_VAR ref    V30 tmp19        d:2
N001 (  1,  1) [000280] ------------       t280 =    LCL_VAR   ref    V30 tmp19        u:2 $184
N002 (  1,  1) [000447] ------------       t447 =    CNS_INT   long   52 field offset Fseq[m_stateFlags] $1c3
                                                  /--*  t280   ref    
                                                  +--*  t447   long   
N003 (  2,  2) [000448] -------N----       t448 = *  ADD       byref  $203
N005 (  1,  4) [000281] ------------       t281 =    CNS_INT   int    0x2000400 $43
                                                  /--*  t448   byref  
                                                  +--*  t281   int    
               [000622] -A--GO------              *  STOREIND  int   
N001 (  1,  1) [000265] ------------       t265 =    LCL_VAR   ref    V13 tmp2         u:2 $183
N002 (  1,  1) [000449] ------------       t449 =    CNS_INT   long   8 field offset Fseq[_task] $1c4
                                                  /--*  t265   ref    
                                                  +--*  t449   long   
N003 (  2,  2) [000450] -------N----       t450 = *  ADD       byref  $204
N005 (  1,  1) [000272] ------------       t272 =    LCL_VAR   ref    V30 tmp19        u:2 (last use) $184
                                                  /--*  t450   byref  
                                                  +--*  t272   ref    
               [000623] -A--GO------              *  STOREIND  ref   
               [000624] ------------                 IL_OFFSET void   IL offset: 0x21
N001 (  1,  1) [000021] ------------        t21 =    LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000451] ------------       t451 =    CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun] $1c5
                                                  /--*  t21    ref    
                                                  +--*  t451   long   
N003 (  2,  2) [000452] -------N----       t452 = *  ADD       byref  $205
N005 (  1,  1) [000028] ------------        t28 =    LCL_VAR   ref    V13 tmp2         u:2 (last use) $183
                                                  /--*  t452   byref  
                                                  +--*  t28    ref    
               [000625] -A--GO------              *  STOREIND  ref   
               [000626] ------------                 IL_OFFSET void   IL offset: 0x26
N002 (  2, 10) [000032] H-----------        t32 =    CNS_INT(h) long   0xd1ffab1e token $109
                                                  /--*  t32    long   arg0 in rcx
N003 ( 16, 16) [000033] --C---------        t33 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $189
                                                  /--*  t33    ref    
N005 ( 16, 16) [000035] DA----------              *  STORE_LCL_VAR ref    V14 tmp3         d:2
N003 (  2, 10) [000297] ------------       t297 =    CNS_INT   long   0x7ffc7e0b0028 $1c6
N004 (  1,  1) [000298] ------------       t298 =    CNS_INT   int    14 $44
                                                  /--*  t297   long   arg0 in rcx
                                                  +--*  t298   int    arg1 in rdx
N005 ( 17, 18) [000299] H-CXG-------       t299 = *  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS $381
N006 (  2, 10) [000458] I-----------       t458 =    CNS_INT(h) long   0xd1ffab1e static Fseq[Value] $10a
                                                  /--*  t458   long   
N007 (  4, 12) [000295] n---G-------       t295 = *  IND       ref    <l:$246, c:$14b>
N009 (  1,  1) [000287] ------------       t287 =    LCL_VAR   ref    V14 tmp3         u:2 $189
N010 (  1,  1) [000454] ------------       t454 =    CNS_INT   long   8 field offset Fseq[_array] $1c4
                                                  /--*  t287   ref    
                                                  +--*  t454   long   
N011 (  2,  2) [000455] -------N----       t455 = *  ADD       byref  $206
                                                  /--*  t455   byref  
                                                  +--*  t295   ref    
               [000627] -ACXGO------              *  STOREIND  ref   
               [000628] ------------                 IL_OFFSET void   IL offset: 0x2c
N001 (  1,  1) [000031] ------------        t31 =    LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000459] ------------       t459 =    CNS_INT   long   8 field offset Fseq[queuedAnalyzers] $1c4
                                                  /--*  t31    ref    
                                                  +--*  t459   long   
N003 (  2,  2) [000460] -------N----       t460 = *  ADD       byref  $207
N005 (  1,  1) [000038] ------------        t38 =    LCL_VAR   ref    V14 tmp3         u:2 (last use) $189
                                                  /--*  t460   byref  
                                                  +--*  t38    ref    
               [000629] -A--GO------              *  STOREIND  ref   
               [000630] ------------                 IL_OFFSET void   IL offset: 0x31
N001 (  1,  1) [000041] ------------        t41 =    LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000461] ------------       t461 =    CNS_INT   long   16 field offset Fseq[progressReporter] $1c7
                                                  /--*  t41    ref    
                                                  +--*  t461   long   
N003 (  2,  2) [000462] -------N----       t462 = *  ADD       byref  $208
N005 (  1,  1) [000042] ------------        t42 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t462   byref  
                                                  +--*  t42    ref    
               [000631] -A--GO------              *  STOREIND  ref   
               [000632] ------------                 IL_OFFSET void   IL offset: 0x38
N002 (  2, 10) [000046] H-----------        t46 =    CNS_INT(h) long   0xd1ffab1e token $10e
                                                  /--*  t46    long   arg0 in rcx
N003 ( 16, 16) [000047] --C---------        t47 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $193
                                                  /--*  t47    ref    
N005 ( 16, 16) [000049] DA----------              *  STORE_LCL_VAR ref    V15 tmp4         d:2
N003 (  1,  1) [000050] ------------        t50 =    LCL_VAR   ref    V15 tmp4         u:2 $193
N004 (  1,  1) [000302] ------------       t302 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t50    ref    this in rcx
                                                  +--*  t302   ref    arg1 in rdx
N005 ( 16, 10) [000303] --CXG-------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor $VN.Void
               [000633] ------------                 IL_OFFSET void   IL offset: 0x3e
N001 (  1,  1) [000045] ------------        t45 =    LCL_VAR   ref    V02 loc0         u:2 (last use) $180
N002 (  1,  1) [000466] ------------       t466 =    CNS_INT   long   40 field offset Fseq[output] $1c8
                                                  /--*  t45    ref    
                                                  +--*  t466   long   
N003 (  2,  2) [000467] -------N----       t467 = *  ADD       byref  $209
N005 (  1,  1) [000052] ------------        t52 =    LCL_VAR   ref    V15 tmp4         u:2 (last use) $193
                                                  /--*  t467   byref  
                                                  +--*  t52    ref    
               [000634] -A--GO------              *  STOREIND  ref   
N001 ( 14,  5) [000055] --CXG-------        t55 =    CALL      ref    System.Diagnostics.Process.GetCurrentProcess $151
                                                  /--*  t55    ref    
N003 ( 14,  5) [000316] DA-XG-------              *  STORE_LCL_VAR ref    V31 tmp20        d:2
N001 (  1,  1) [000313] ------------       t313 =    LCL_VAR   ref    V31 tmp20        u:2 $151
                                                  /--*  t313   ref    
N002 (  2,  2) [000314] ---X--------              *  NULLCHECK byte   $197
N003 (  1,  1) [000306] ------------       t306 =    LCL_VAR   ref    V31 tmp20        u:2 $151
N004 (  1,  1) [000307] ------------       t307 =    CNS_INT   int    3 $46
                                                  /--*  t306   ref    this in rcx
                                                  +--*  t307   int    arg1 in rdx
N005 ( 16, 10) [000308] --CXG-------              *  CALL      void   System.Diagnostics.Process.EnsureState $VN.Void
N002 (  1,  1) [000309] ------------       t309 =    LCL_VAR   ref    V31 tmp20        u:2 (last use) $151
N003 (  1,  4) [000470] ------------       t470 =    CNS_INT   long   200 field offset Fseq[_processId] $1c9
                                                  /--*  t309   ref    
                                                  +--*  t470   long   
N004 (  2,  5) [000471] -------N----       t471 = *  ADD       byref  $20a
                                                  /--*  t471   byref  
N005 (  4,  7) [000310] n---GO------       t310 = *  IND       int    <l:$289, c:$288>
                                                  /--*  t310   int    arg0 in rcx
N006 ( 18, 13) [000311] --CXGO------       t311 = *  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule $156
                                                  /--*  t311   ref    
N008 ( 18, 13) [000322] DA-XGO------              *  STORE_LCL_VAR ref    V32 tmp21        d:2
N001 (  1,  1) [000319] ------------       t319 =    LCL_VAR   ref    V32 tmp21        u:2 (last use) $156
N002 (  1,  1) [000473] ------------       t473 =    CNS_INT   long   40 field offset Fseq[<FileName>k__BackingField] $1c8
                                                  /--*  t319   ref    
                                                  +--*  t473   long   
N003 (  2,  2) [000474] -------N----       t474 = *  ADD       byref  $20b
                                                  /--*  t474   byref  
N004 (  4,  4) [000320] ---XG-------       t320 = *  IND       ref    <l:$19c, c:$19b>
                                                  /--*  t320   ref    
N006 (  4,  4) [000062] DA-XG-------              *  STORE_LCL_VAR ref    V03 loc1         d:2
N005 (  1,  1) [000339] ------------       t339 =    CNS_INT   int    5 $47
N006 (  1,  1) [000337] ------------       t337 =    LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
               [000668] ------------       t668 =    CNS_INT   long   8
                                                  /--*  t337   ref    
                                                  +--*  t668   long   
               [000669] ------------       t669 = *  ADD       ref   
                                                  /--*  t669   ref    
N007 (  3,  3) [000338] ---X--------       t338 = *  IND       int    <l:$28b, c:$28a>
N008 (  2, 10) [000475] H-----------       t475 =    CNS_INT(h) long   0xD1FFAB1E "dotnet.exe" $112
                                                  /--*  t475   long   
N009 (  4, 12) [000476] #---G-------       t476 = *  IND       ref    $19f
N010 (  1,  1) [000063] ------------        t63 =    LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
N011 (  1,  1) [000336] ------------       t336 =    CNS_INT   int    0 $40
                                                  /--*  t339   int    arg4 out+20
                                                  +--*  t338   int    arg3 in r9
                                                  +--*  t476   ref    arg1 in rdx
                                                  +--*  t63    ref    this in rcx
                                                  +--*  t336   int    arg2 in r8
N012 ( 27, 28) [000340] --CXG-------       t340 = *  CALL      int    System.String.IndexOf $308
N013 (  1,  1) [000328] ------------       t328 =    CNS_INT   int    0 $40
                                                  /--*  t340   int    
                                                  +--*  t328   int    
N014 ( 32, 30) [000329] ---XG-------       t329 = *  GE        int    $28c
                                                  /--*  t329   int    
N016 ( 32, 30) [000069] DA-XG-------              *  STORE_LCL_VAR int    V04 loc2         d:2
N001 ( 14,  5) [000070] --CXG-------        t70 =    CALL      ref    System.Environment.GetCommandLineArgs $15e
                                                  /--*  t70    ref    
N003 ( 14,  5) [000482] DA-XG-------              *  STORE_LCL_VAR ref    V41 tmp30        d:2
N004 (  1,  1) [000072] ------------        t72 =    CNS_INT   int    0 $40
N005 (  1,  1) [000483] ------------       t483 =    LCL_VAR   ref    V41 tmp30        u:2 $15e
               [000670] ------------       t670 =    CNS_INT   long   8
                                                  /--*  t483   ref    
                                                  +--*  t670   long   
               [000671] ------------       t671 = *  ADD       ref   
                                                  /--*  t671   ref    
N006 (  3,  3) [000486] ---X--------       t486 = *  IND       int    $28d
                                                  /--*  t72    int    
                                                  +--*  t486   int    
N007 (  8, 11) [000487] ---X--------              *  ARR_BOUNDS_CHECK_Rng void   $1a5
N008 (  1,  1) [000484] ------------       t484 =    LCL_VAR   ref    V41 tmp30        u:2 (last use) $15e
N009 (  1,  1) [000491] ------------       t491 =    CNS_INT   long   16 Fseq[#FirstElem] $1c7
                                                  /--*  t484   ref    
                                                  +--*  t491   long   
N010 (  2,  2) [000492] -------N----       t492 = *  ADD       byref  $400
                                                  /--*  t492   byref  
N011 (  4,  4) [000073] a---G-------        t73 = *  IND       ref    <l:$1a8, c:$161>
                                                  /--*  t73    ref    
N015 ( 26, 20) [000075] DA-XG-------              *  STORE_LCL_VAR ref    V05 loc3         d:2
               [000635] ------------                 IL_OFFSET void   IL offset: 0x68
N003 (  1,  1) [000076] ------------        t76 =    LCL_VAR   ref    V00 arg0         u:1 (last use) $80
N004 (  2, 10) [000495] H-----------       t495 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $114
                                                  /--*  t76    ref    this in rcx
                                                  +--*  t495   long   arg1 in r11
N005 ( 23, 21) [000077] --CXG-------        t77 = *  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator $164
                                                  /--*  t77    ref    
N007 ( 23, 21) [000079] DA-XG-------              *  STORE_LCL_VAR ref    V06 loc4         d:2

------------ BB02 [070..072) -> BB13 (cond), preds={BB01} succs={BB03,BB13}
               [000636] ------------                 IL_OFFSET void   IL offset: 0xe9
N003 (  1,  1) [000575] ------------       t575 =    LCL_VAR   ref    V06 loc4         u:2 $164
N004 (  2, 10) [000576] H-----------       t576 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
                                                  /--*  t575   ref    this in rcx
                                                  +--*  t576   long   arg1 in r11
N005 ( 23, 21) [000572] --CXG-------       t572 = *  CALLV stub int    System.Collections.IEnumerator.MoveNext $30a
N006 (  1,  1) [000577] ------------       t577 =    CNS_INT   int    0 $40
                                                  /--*  t572   int    
                                                  +--*  t577   int    
N007 ( 25, 23) [000571] J--XG--N----       t571 = *  EQ        int    $28e
                                                  /--*  t571   int    
N008 ( 27, 25) [000578] ---XG-------              *  JTRUE     void  

------------ BB03 [072..08B) -> BB05 (cond), preds={BB02,BB09} succs={BB04,BB05}
               [000637] ------------                 IL_OFFSET void   IL offset: 0x72
N003 (  1,  1) [000085] ------------        t85 =    LCL_VAR   ref    V06 loc4         u:2 $164
N004 (  2, 10) [000498] H-----------       t498 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $116
                                                  /--*  t85    ref    this in rcx
                                                  +--*  t498   long   arg1 in r11
N005 ( 23, 21) [000086] --CXG-------        t86 = *  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current $442
                                                  /--*  t86    ref    
N007 ( 23, 21) [000088] DA-XG-------              *  STORE_LCL_VAR ref    V07 loc5         d:2
               [000638] ------------                 IL_OFFSET void   IL offset: 0x7b
N002 (  2, 10) [000089] H-----------        t89 =    CNS_INT(h) long   0xd1ffab1e token $117
                                                  /--*  t89    long   arg0 in rcx
N003 ( 16, 16) [000090] --C---------        t90 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1ab
                                                  /--*  t90    ref    
N005 ( 16, 16) [000092] DA----------              *  STORE_LCL_VAR ref    V16 tmp5         d:2
               [000639] ------------                 IL_OFFSET void   IL offset: 0x80
N001 (  1,  1) [000096] ------------        t96 =    LCL_VAR   ref    V16 tmp5         u:2 $1ab
N002 (  1,  1) [000502] ------------       t502 =    CNS_INT   long   8 field offset Fseq[_fileName] $1c4
                                                  /--*  t96    ref    
                                                  +--*  t502   long   
N003 (  2,  2) [000503] -------N----       t503 = *  ADD       byref  $20d
N005 (  1,  1) [000097] ------------        t97 =    LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
                                                  /--*  t503   byref  
                                                  +--*  t97    ref    
               [000640] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000095] ------------        t95 =    LCL_VAR   ref    V16 tmp5         u:2 $1ab
                                                  /--*  t95    ref    
N003 (  1,  3) [000105] DA----------              *  STORE_LCL_VAR ref    V17 tmp6         d:2
N001 (  1,  1) [000099] ------------        t99 =    LCL_VAR   ref    V17 tmp6         u:2 (last use) $1ab
                                                  /--*  t99    ref    
N003 (  1,  3) [000108] DA----------              *  STORE_LCL_VAR ref    V18 tmp7         d:2
               [000641] ------------                 IL_OFFSET void   IL offset: 0x87
N001 (  1,  1) [000100] ------------       t100 =    LCL_VAR   int    V04 loc2         u:2 $28c
N002 (  1,  1) [000101] ------------       t101 =    CNS_INT   int    0 $40
                                                  /--*  t100   int    
                                                  +--*  t101   int    
N003 (  3,  3) [000102] J------N----       t102 = *  NE        int    $28f
                                                  /--*  t102   int    
N004 (  5,  5) [000103] ------------              *  JTRUE     void  

------------ BB04 [08B..08F) -> BB06 (always), preds={BB03} succs={BB06}
N001 (  1,  1) [000110] ------------       t110 =    LCL_VAR   ref    V18 tmp7         u:2 (last use) $1ab
                                                  /--*  t110   ref    
N003 (  1,  3) [000203] DA----------              *  STORE_LCL_VAR ref    V19 tmp8         d:4
N001 (  1,  1) [000111] ------------       t111 =    LCL_VAR   ref    V19 tmp8         u:4 (last use) $1ab
                                                  /--*  t111   ref    
N003 (  1,  3) [000206] DA----------              *  STORE_LCL_VAR ref    V20 tmp9         d:4
N001 (  1,  1) [000201] ------------       t201 =    LCL_VAR   ref    V07 loc5         u:2 (last use) $442
                                                  /--*  t201   ref    
N003 (  1,  3) [000209] DA----------              *  STORE_LCL_VAR ref    V21 tmp10        d:4

------------ BB05 [08F..09C), preds={BB03} succs={BB06}
N001 (  1,  1) [000112] ------------       t112 =    LCL_VAR   ref    V18 tmp7         u:2 (last use) $1ab
                                                  /--*  t112   ref    
N003 (  1,  3) [000119] DA----------              *  STORE_LCL_VAR ref    V19 tmp8         d:3
N001 (  1,  1) [000113] ------------       t113 =    LCL_VAR   ref    V19 tmp8         u:3 (last use) $1ab
                                                  /--*  t113   ref    
N003 (  1,  3) [000122] DA----------              *  STORE_LCL_VAR ref    V20 tmp9         d:3
N004 (  2, 10) [000504] H-----------       t504 =    CNS_INT(h) long   0xD1FFAB1E " " $119
                                                  /--*  t504   long   
N005 (  4, 12) [000505] #---G-------       t505 = *  IND       ref    $1ae
N006 (  1,  1) [000114] ------------       t114 =    LCL_VAR   ref    V05 loc3         u:2 <l:$1a8, c:$161>
N007 (  1,  1) [000116] ------------       t116 =    LCL_VAR   ref    V07 loc5         u:2 (last use) $442
                                                  /--*  t505   ref    arg1 in rdx
                                                  +--*  t114   ref    arg0 in rcx
                                                  +--*  t116   ref    arg2 in r8
N008 ( 20, 22) [000117] --CXG-------       t117 = *  CALL      ref    System.String.Concat $44e
                                                  /--*  t117   ref    
N010 ( 20, 22) [000125] DA-XG-------              *  STORE_LCL_VAR ref    V21 tmp10        d:3

------------ BB06 [09C..0BB) -> BB09 (cond), preds={BB04,BB05} succs={BB07,BB09}
N001 (  0,  0) [000606] ------------       t606 =    PHI_ARG   ref    V21 tmp10        u:4 $442
N002 (  0,  0) [000603] ------------       t603 =    PHI_ARG   ref    V21 tmp10        u:3 $44e
                                                  /--*  t606   ref    
                                                  +--*  t603   ref    
N003 (  0,  0) [000595] ------------       t595 = *  PHI       ref   
                                                  /--*  t595   ref    
N005 (  0,  0) [000596] DA----------              *  STORE_LCL_VAR ref    V21 tmp10        d:2
N001 (  0,  0) [000607] ------------       t607 =    PHI_ARG   ref    V20 tmp9         u:4 $1ab
N002 (  0,  0) [000604] ------------       t604 =    PHI_ARG   ref    V20 tmp9         u:3 $1ab
                                                  /--*  t607   ref    
                                                  +--*  t604   ref    
N003 (  0,  0) [000592] ------------       t592 = *  PHI       ref   
                                                  /--*  t592   ref    
N005 (  0,  0) [000593] DA----------              *  STORE_LCL_VAR ref    V20 tmp9         d:2
N001 (  0,  0) [000608] ------------       t608 =    PHI_ARG   ref    V19 tmp8         u:4 $1ab
N002 (  0,  0) [000605] ------------       t605 =    PHI_ARG   ref    V19 tmp8         u:3 $1ab
                                                  /--*  t608   ref    
                                                  +--*  t605   ref    
N003 (  0,  0) [000589] ------------       t589 = *  PHI       ref   
                                                  /--*  t589   ref    
N005 (  0,  0) [000590] DA----------              *  STORE_LCL_VAR ref    V19 tmp8         d:2
N001 (  1,  1) [000128] ------------       t128 =    LCL_VAR   ref    V20 tmp9         u:2 (last use) $1ab
N002 (  1,  1) [000509] ------------       t509 =    CNS_INT   long   16 field offset Fseq[_arguments] $1c7
                                                  /--*  t128   ref    
                                                  +--*  t509   long   
N003 (  2,  2) [000510] -------N----       t510 = *  ADD       byref  $20e
N005 (  1,  1) [000129] ------------       t129 =    LCL_VAR   ref    V21 tmp10        u:2 (last use) $251
                                                  /--*  t510   byref  
                                                  +--*  t129   ref    
               [000642] -A--GO------              *  STOREIND  ref   
               [000643] ------------                 IL_OFFSET void   IL offset: 0xa1
N001 (  1,  1) [000131] ------------       t131 =    LCL_VAR   ref    V19 tmp8         u:2 $1ab
N002 (  1,  4) [000511] ------------       t511 =    CNS_INT   long   130 field offset Fseq[<UseShellExecute>k__BackingField] $1cb
                                                  /--*  t131   ref    
                                                  +--*  t511   long   
N003 (  2,  5) [000512] -------N----       t512 = *  ADD       byref  $20f
N005 (  1,  1) [000353] ------------       t353 =    CNS_INT   int    0 $40
                                                  /--*  t512   byref  
                                                  +--*  t353   int    
               [000644] -A--GO------              *  STOREIND  bool  
               [000645] ------------                 IL_OFFSET void   IL offset: 0xaa
N001 (  1,  1) [000137] ------------       t137 =    LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000513] ------------       t513 =    CNS_INT   long   8 field offset Fseq[queuedAnalyzers] $1c4
                                                  /--*  t137   ref    
                                                  +--*  t513   long   
N003 (  2,  2) [000514] -------N----       t514 = *  ADD       byref  $207
                                                  /--*  t514   byref  
N004 (  4,  4) [000138] n---GO------       t138 = *  IND       ref    <l:$1bc, c:$1bb>
                                                  /--*  t138   ref    
N006 (  4,  4) [000145] DA--GO------              *  STORE_LCL_VAR ref    V23 tmp12        d:2
               [000646] ------------                 IL_OFFSET void   IL offset: 0xaa
N001 (  1,  1) [000140] ------------       t140 =    LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000515] ------------       t515 =    CNS_INT   long   48 field offset Fseq[<>9__2] $1cc
                                                  /--*  t140   ref    
                                                  +--*  t515   long   
N003 (  2,  2) [000516] -------N----       t516 = *  ADD       byref  $210
                                                  /--*  t516   byref  
N004 (  4,  4) [000141] n---GO------       t141 = *  IND       ref    <l:$542, c:$541>
                                                  /--*  t141   ref    
N006 (  4,  4) [000143] DA--GO------              *  STORE_LCL_VAR ref    V22 tmp11        d:2
N001 (  1,  1) [000146] ------------       t146 =    LCL_VAR   ref    V23 tmp12        u:2 (last use) <l:$1b9, c:$454>
                                                  /--*  t146   ref    
N003 (  1,  3) [000153] DA----------              *  STORE_LCL_VAR ref    V24 tmp13        d:2
N001 (  1,  1) [000139] ------------       t139 =    LCL_VAR   ref    V19 tmp8         u:2 (last use) $1ab
                                                  /--*  t139   ref    
N003 (  1,  3) [000156] DA----------              *  STORE_LCL_VAR ref    V25 tmp14        d:2
N001 (  1,  1) [000147] ------------       t147 =    LCL_VAR   ref    V22 tmp11        u:2 <l:$540, c:$456>
                                                  /--*  t147   ref    
N003 (  1,  3) [000159] DA----------              *  STORE_LCL_VAR ref    V26 tmp15        d:2
N001 (  1,  1) [000148] ------------       t148 =    LCL_VAR   ref    V26 tmp15        u:2 (last use) <l:$540, c:$456>
N002 (  1,  1) [000149] ------------       t149 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t148   ref    
                                                  +--*  t149   ref    
N003 (  3,  3) [000150] J------N----       t150 = *  NE        int    <l:$291, c:$290>
                                                  /--*  t150   int    
N004 (  5,  5) [000151] ------------              *  JTRUE     void  

------------ BB07 [000..0D3), preds={BB06} succs={BB09}
N002 (  2, 10) [000181] H-----------       t181 =    CNS_INT(h) long   0xd1ffab1e token $11e
                                                  /--*  t181   long   arg0 in rcx
N003 ( 16, 16) [000182] --C---------       t182 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $543
                                                  /--*  t182   ref    
N005 ( 16, 16) [000184] DA----------              *  STORE_LCL_VAR ref    V28 tmp17        d:2
N001 (  1,  1) [000185] ------------       t185 =    LCL_VAR   ref    V28 tmp17        u:2 $543
N002 (  1,  1) [000518] ------------       t518 =    CNS_INT   long   8 field offset Fseq[_target] $1c4
                                                  /--*  t185   ref    
                                                  +--*  t518   long   
N003 (  2,  2) [000519] -------N----       t519 = *  ADD       byref  $211
N005 (  1,  1) [000360] ------------       t360 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t519   byref  
                                                  +--*  t360   ref    
               [000647] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000363] ------------       t363 =    LCL_VAR   ref    V28 tmp17        u:2 $543
N002 (  1,  1) [000520] ------------       t520 =    CNS_INT   long   24 field offset Fseq[_methodPtr] $1c5
                                                  /--*  t363   ref    
                                                  +--*  t520   long   
N003 (  2,  2) [000521] -------N----       t521 = *  ADD       byref  $212
N005 (  2, 10) [000180] H-----------       t180 =    CNS_INT(h) long   0xd1ffab1e ftn $120
                                                  /--*  t521   byref  
                                                  +--*  t180   long   
               [000648] -A--GO------              *  STOREIND  long  
N001 (  1,  1) [000178] ------------       t178 =    LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000522] ------------       t522 =    CNS_INT   long   48 field offset Fseq[<>9__2] $1cc
                                                  /--*  t178   ref    
                                                  +--*  t522   long   
N003 (  2,  2) [000523] -------N----       t523 = *  ADD       byref  $210
N005 (  1,  1) [000187] ------------       t187 =    LCL_VAR   ref    V28 tmp17        u:2 $543
                                                  /--*  t523   byref  
                                                  +--*  t187   ref    
               [000649] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000193] ------------       t193 =    LCL_VAR   ref    V28 tmp17        u:2 (last use) $543
                                                  /--*  t193   ref    
N003 (  1,  3) [000199] DA----------              *  STORE_LCL_VAR ref    V26 tmp15        d:4

------------ BB09 [000..0F2) -> BB03 (cond), preds={BB06,BB07} succs={BB13,BB03}
N001 (  0,  0) [000602] ------------       t602 =    PHI_ARG   ref    V26 tmp15        u:4 $543
N002 (  0,  0) [000601] ------------       t601 =    PHI_ARG   ref    V26 tmp15        u:2 <l:$540, c:$456>
                                                  /--*  t602   ref    
                                                  +--*  t601   ref    
N003 (  0,  0) [000586] ------------       t586 = *  PHI       ref   
                                                  /--*  t586   ref    
N005 (  0,  0) [000587] DA----------              *  STORE_LCL_VAR ref    V26 tmp15        d:3
N002 (  2, 10) [000169] H-----------       t169 =    CNS_INT(h) long   0xd1ffab1e token $123
                                                  /--*  t169   long   arg0 in rcx
N003 ( 16, 16) [000170] --C---------       t170 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $54b
                                                  /--*  t170   ref    
N005 ( 16, 16) [000172] DA----------              *  STORE_LCL_VAR ref    V27 tmp16        d:2
N001 (  1,  1) [000173] ------------       t173 =    LCL_VAR   ref    V27 tmp16        u:2 $54b
N002 (  1,  1) [000525] ------------       t525 =    CNS_INT   long   8 field offset Fseq[_target] $1c4
                                                  /--*  t173   ref    
                                                  +--*  t525   long   
N003 (  2,  2) [000526] -------N----       t526 = *  ADD       byref  $213
N005 (  1,  1) [000372] ------------       t372 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t526   byref  
                                                  +--*  t372   ref    
               [000650] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000375] ------------       t375 =    LCL_VAR   ref    V27 tmp16        u:2 $54b
N002 (  1,  1) [000527] ------------       t527 =    CNS_INT   long   24 field offset Fseq[_methodPtr] $1c5
                                                  /--*  t375   ref    
                                                  +--*  t527   long   
N003 (  2,  2) [000528] -------N----       t528 = *  ADD       byref  $214
N005 (  2, 10) [000168] H-----------       t168 =    CNS_INT(h) long   0xd1ffab1e ftn $125
                                                  /--*  t528   byref  
                                                  +--*  t168   long   
               [000651] -A--GO------              *  STOREIND  long  
               [000652] ------------                 IL_OFFSET void   IL offset: 0xdf
N005 (  1,  1) [000165] ------------       t165 =    LCL_VAR   ref    V25 tmp14        u:2 (last use) $1ab
N006 (  1,  1) [000166] ------------       t166 =    LCL_VAR   ref    V26 tmp15        u:3 (last use) $258
N007 (  1,  1) [000175] ------------       t175 =    LCL_VAR   ref    V27 tmp16        u:2 (last use) $54b
                                                  /--*  t165   ref    arg0 in rcx
                                                  +--*  t166   ref    arg1 in rdx
                                                  +--*  t175   ref    arg2 in r8
N008 ( 17, 11) [000176] --CXG-------       t176 = *  CALL      ref    SolutionAnalyzer.IPC.CreateSession $464
                                                  /--*  t176   ref    
N010 ( 17, 11) [000533] DA-XG-----L-              *  STORE_LCL_VAR ref    V42 tmp31        d:2
N011 (  1,  1) [000534] ------------       t534 =    LCL_VAR   ref    V42 tmp31        u:2 (last use) $464
N012 (  1,  1) [000164] ------------       t164 =    LCL_VAR   ref    V24 tmp13        u:2 (last use) <l:$1b9, c:$454>
                                                  /--*  t534   ref    arg1 in rdx
                                                  +--*  t164   ref    this in rcx
N013 ( 36, 21) [000177] --CXG-------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue $VN.Void
               [000653] ------------                 IL_OFFSET void   IL offset: 0xe9
N003 (  1,  1) [000080] ------------        t80 =    LCL_VAR   ref    V06 loc4         u:2 $164
N004 (  2, 10) [000536] H-----------       t536 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
                                                  /--*  t80    ref    this in rcx
                                                  +--*  t536   long   arg1 in r11
N005 ( 23, 21) [000081] --CXG-------        t81 = *  CALLV stub int    System.Collections.IEnumerator.MoveNext $5c0
N006 (  1,  1) [000082] ------------        t82 =    CNS_INT   int    0 $40
                                                  /--*  t81    int    
                                                  +--*  t82    int    
N007 ( 25, 23) [000083] J--XG--N----        t83 = *  NE        int    $292
                                                  /--*  t83    int    
N008 ( 27, 25) [000084] ---XG-------              *  JTRUE     void  

------------ BB13 [0F4..127) -> BB17 (always), preds={BB02,BB09} succs={BB17}
N003 (  1,  1) [000436] ------------       t436 =    LCL_VAR   ref    V06 loc4         u:2 (last use) $164
N004 (  2, 10) [000539] H-----------       t539 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127
                                                  /--*  t436   ref    this in rcx
                                                  +--*  t539   long   arg1 in r11
N005 ( 23, 21) [000435] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose $VN.Void
               [000654] ------------                 IL_OFFSET void   IL offset: 0x100
N001 (  1,  1) [000212] ------------       t212 =    LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000545] ------------       t545 =    CNS_INT   long   8 field offset Fseq[queuedAnalyzers] $1c4
                                                  /--*  t212   ref    
                                                  +--*  t545   long   
N003 (  2,  2) [000546] -------N----       t546 = *  ADD       byref  $207
                                                  /--*  t546   byref  
N004 (  4,  4) [000213] n---GO------       t213 = *  IND       ref    <l:$569, c:$568>
                                                  /--*  t213   ref    
N006 (  4,  4) [000384] DA--GO------              *  STORE_LCL_VAR ref    V35 tmp24        d:2
N001 (  1,  1) [000381] ------------       t381 =    LCL_VAR   ref    V35 tmp24        u:2 (last use) <l:$567, c:$16e>
N002 (  1,  1) [000549] ------------       t549 =    CNS_INT   long   24 field offset Fseq[_size] $1c5
                                                  /--*  t381   ref    
                                                  +--*  t549   long   
N003 (  2,  2) [000550] -------N----       t550 = *  ADD       byref  <l:$216, c:$215>
                                                  /--*  t550   byref  
N004 (  4,  4) [000382] ---XG-------       t382 = *  IND       int    <l:$29b, c:$29a>
N005 (  1,  1) [000211] ------------       t211 =    LCL_VAR   ref    V02 loc0         u:2 $180
N006 (  1,  1) [000547] ------------       t547 =    CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1
                                                  /--*  t211   ref    
                                                  +--*  t547   long   
N007 (  2,  2) [000548] -------N----       t548 = *  ADD       byref  $201
                                                  /--*  t548   byref  
                                                  +--*  t382   int    
               [000655] -A-XGO------              *  STOREIND  int   
               [000656] ------------                 IL_OFFSET void   IL offset: 0x111
N002 (  2, 10) [000221] H-----------       t221 =    CNS_INT(h) long   0xd1ffab1e method $12b
                                                  /--*  t221   long   arg0 in rcx
N003 ( 16, 16) [000222] --C---------       t222 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $56c
                                                  /--*  t222   ref    
N005 ( 16, 16) [000224] DA----------              *  STORE_LCL_VAR ref    V29 tmp18        d:2
N001 (  1,  1) [000219] ------------       t219 =    LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000552] ------------       t552 =    CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1
                                                  /--*  t219   ref    
                                                  +--*  t552   long   
N003 (  2,  2) [000553] -------N----       t553 = *  ADD       byref  $201
                                                  /--*  t553   byref  
N004 (  4,  4) [000220] n---GO------       t220 = *  IND       int    <l:$2a3, c:$2a2>
                                                  /--*  t220   int    
N006 (  4,  4) [000402] DA--GO------              *  STORE_LCL_VAR int    V37 tmp26        d:2
N002 (  2, 10) [000386] H-----------       t386 =    CNS_INT(h) long   0xd1ffab1e token $12c
                                                  /--*  t386   long   arg0 in rcx
N003 ( 16, 16) [000387] --C---------       t387 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $56d
                                                  /--*  t387   ref    
N005 ( 16, 16) [000389] DA----------              *  STORE_LCL_VAR ref    V36 tmp25        d:2
N004 (  1,  1) [000390] ------------       t390 =    LCL_VAR   ref    V36 tmp25        u:2 $56d
N005 (  1,  1) [000404] ------------       t404 =    CNS_INT   int    0 $40
N006 (  1,  1) [000405] ------------       t405 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t390   ref    this in rcx
                                                  +--*  t404   int    arg1 in rdx
                                                  +--*  t405   ref    arg2 in r8
N007 ( 17, 12) [000406] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor $VN.Void
N001 (  1,  1) [000225] ------------       t225 =    LCL_VAR   ref    V29 tmp18        u:2 $56c
N002 (  1,  1) [000558] ------------       t558 =    CNS_INT   long   8 field offset Fseq[_workItems] $1c4
                                                  /--*  t225   ref    
                                                  +--*  t558   long   
N003 (  2,  2) [000559] -------N----       t559 = *  ADD       byref  $217
N005 (  1,  1) [000392] ------------       t392 =    LCL_VAR   ref    V36 tmp25        u:2 (last use) $56d
                                                  /--*  t559   byref  
                                                  +--*  t392   ref    
               [000657] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000397] ------------       t397 =    LCL_VAR   ref    V29 tmp18        u:2 $56c
N002 (  1,  1) [000560] ------------       t560 =    CNS_INT   long   16 field offset Fseq[_workItemsToComplete] $1c7
                                                  /--*  t397   ref    
                                                  +--*  t560   long   
N003 (  2,  2) [000561] -------N----       t561 = *  ADD       byref  $218
N005 (  1,  1) [000398] ------------       t398 =    LCL_VAR   int    V37 tmp26        u:2 (last use) <l:$299, c:$30c>
                                                  /--*  t561   byref  
                                                  +--*  t398   int    
               [000658] -A--GO------              *  STOREIND  int   
               [000659] ------------                 IL_OFFSET void   IL offset: 0x11d
N001 (  1,  1) [000218] ------------       t218 =    LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000562] ------------       t562 =    CNS_INT   long   16 field offset Fseq[progressReporter] $1c7
                                                  /--*  t218   ref    
                                                  +--*  t562   long   
N003 (  2,  2) [000563] -------N----       t563 = *  ADD       byref  $208
N005 (  1,  1) [000227] ------------       t227 =    LCL_VAR   ref    V29 tmp18        u:2 (last use) $56c
                                                  /--*  t563   byref  
                                                  +--*  t227   ref    
               [000660] -A--GO------              *  STOREIND  ref   
               [000661] ------------                 IL_OFFSET void   IL offset: 0x122
N001 (  1,  1) [000230] ------------       t230 =    CNS_INT   int    0 $40
                                                  /--*  t230   int    
N003 (  1,  3) [000232] DA----------              *  STORE_LCL_VAR int    V10 loc8         d:2

------------ BB16 [127..133), preds={BB20} succs={BB17}
               [000662] ------------                 IL_OFFSET void   IL offset: 0x127
N002 (  1,  1) [000242] ------------       t242 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t242   ref    this in rcx
N003 ( 15,  8) [000243] --CXG-------              *  CALL      void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0 $VN.Void
               [000663] ------------                 IL_OFFSET void   IL offset: 0x12d
N001 (  1,  1) [000244] ------------       t244 =    LCL_VAR   int    V10 loc8         u:3 (last use) $2ca
N002 (  1,  1) [000245] ------------       t245 =    CNS_INT   int    1 $41
                                                  /--*  t244   int    
                                                  +--*  t245   int    
N003 (  3,  3) [000246] ------------       t246 = *  ADD       int    $2ad
                                                  /--*  t246   int    
N005 (  3,  3) [000248] DA----------              *  STORE_LCL_VAR int    V10 loc8         d:4

------------ BB17 [000..147) -> BB19 (cond), preds={BB13,BB16} succs={BB18,BB19}
N001 (  0,  0) [000598] ------------       t598 =    PHI_ARG   int    V10 loc8         u:4
N002 (  0,  0) [000597] ------------       t597 =    PHI_ARG   int    V10 loc8         u:2 $40
                                                  /--*  t598   int    
                                                  +--*  t597   int    
N003 (  0,  0) [000580] ------------       t580 = *  PHI       int   
                                                  /--*  t580   int    
N005 (  0,  0) [000581] DA----------              *  STORE_LCL_VAR int    V10 loc8         d:3
N001 (  1,  1) [000236] ------------       t236 =    LCL_VAR   ref    V02 loc0         u:2 $180
N002 (  1,  1) [000565] ------------       t565 =    CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1
                                                  /--*  t236   ref    
                                                  +--*  t565   long   
N003 (  2,  2) [000566] -------N----       t566 = *  ADD       byref  $201
                                                  /--*  t566   byref  
N004 (  4,  4) [000237] n---GO------       t237 = *  IND       int    <l:$2a9, c:$2a8>
                                                  /--*  t237   int    
N006 (  4,  4) [000424] DA--GO------              *  STORE_LCL_VAR int    V39 tmp28        d:2
N001 (  1,  1) [000412] ------------       t412 =    LCL_VAR   int    V39 tmp28        u:2 <l:$2a7, c:$680>
N002 (  1,  1) [000411] ------------       t411 =    CNS_INT   int    8 $57
                                                  /--*  t412   int    
                                                  +--*  t411   int    
N003 (  3,  3) [000413] J------N----       t413 = *  GE        int    <l:$2ab, c:$2aa>
                                                  /--*  t413   int    
N004 (  5,  5) [000414] ------------              *  JTRUE     void  

------------ BB18 [000..000) -> BB20 (always), preds={BB17} succs={BB20}
N001 (  1,  1) [000419] ------------       t419 =    LCL_VAR   int    V39 tmp28        u:2 (last use) <l:$2a7, c:$680>
                                                  /--*  t419   int    
N003 (  1,  3) [000421] DA----------              *  STORE_LCL_VAR int    V38 tmp27        d:4

------------ BB19 [000..000), preds={BB17} succs={BB20}
N001 (  1,  1) [000415] ------------       t415 =    CNS_INT   int    8 $57
                                                  /--*  t415   int    
N003 (  1,  3) [000417] DA----------              *  STORE_LCL_VAR int    V38 tmp27        d:3

------------ BB20 [???..???) -> BB16 (cond), preds={BB18,BB19} succs={BB21,BB16}
N001 (  0,  0) [000600] ------------       t600 =    PHI_ARG   int    V38 tmp27        u:4 <l:$2a7, c:$680>
N002 (  0,  0) [000599] ------------       t599 =    PHI_ARG   int    V38 tmp27        u:3 $57
                                                  /--*  t600   int    
                                                  +--*  t599   int    
N003 (  0,  0) [000583] ------------       t583 = *  PHI       int   
                                                  /--*  t583   int    
N005 (  0,  0) [000584] DA----------              *  STORE_LCL_VAR int    V38 tmp27        d:2
N001 (  1,  1) [000233] ------------       t233 =    LCL_VAR   int    V10 loc8         u:3 $2ca
N002 (  1,  1) [000422] ------------       t422 =    LCL_VAR   int    V38 tmp27        u:2 (last use) $2cb
                                                  /--*  t233   int    
                                                  +--*  t422   int    
N003 (  3,  3) [000240] J------N----       t240 = *  LT        int    $2ac
                                                  /--*  t240   int    
N004 (  5,  5) [000241] ------------              *  JTRUE     void  

------------ BB21 [147..153) (return), preds={BB20} succs={}
               [000664] ------------                 IL_OFFSET void   IL offset: 0x147
N001 (  1,  1) [000249] ------------       t249 =    LCL_VAR   ref    V02 loc0         u:2 (last use) $180
N002 (  1,  1) [000567] ------------       t567 =    CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun] $1c5
                                                  /--*  t249   ref    
                                                  +--*  t567   long   
N003 (  2,  2) [000568] -------N----       t568 = *  ADD       byref  $205
                                                  /--*  t568   byref  
N004 (  4,  4) [000250] n---GO------       t250 = *  IND       ref    <l:$575, c:$574>
                                                  /--*  t250   ref    
N006 (  4,  4) [000429] DA--GO------              *  STORE_LCL_VAR ref    V40 tmp29        d:2
N001 (  1,  1) [000426] ------------       t426 =    LCL_VAR   ref    V40 tmp29        u:2 (last use) <l:$573, c:$177>
N002 (  1,  1) [000569] ------------       t569 =    CNS_INT   long   8 field offset Fseq[_task] $1c4
                                                  /--*  t426   ref    
                                                  +--*  t569   long   
N003 (  2,  2) [000570] -------N----       t570 = *  ADD       byref  <l:$21a, c:$219>
                                                  /--*  t570   byref  
N004 (  4,  4) [000427] ---XG-------       t427 = *  IND       ref    <l:$57b, c:$57a>
                                                  /--*  t427   ref    
N005 (  5,  5) [000253] ---XG-------              *  RETURN    ref    $17a

------------ BB25 [???..???) (throw), preds={} succs={}
N001 ( 14,  5) [000672] --CXG-------                 CALL help void   HELPER.CORINFO_HELP_RNGCHKFAIL

------------ BB22 [0F4..0F8) -> BB24 (cond), preds={} succs={BB23,BB24}
               [000665] ------------                 IL_OFFSET void   IL offset: 0xf4
N001 (  1,  1) [000254] ------------       t254 =    LCL_VAR   ref    V06 loc4         u:2 $164
N002 (  1,  1) [000255] ------------       t255 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t254   ref    
                                                  +--*  t255   ref    
N003 (  3,  3) [000256] J------N----       t256 = *  EQ        int    $293
                                                  /--*  t256   int    
N004 (  5,  5) [000257] ------------              *  JTRUE     void  

------------ BB23 [0F8..0FF), preds={BB22} succs={BB24}
               [000666] ------------                 IL_OFFSET void   IL offset: 0xf8
N003 (  1,  1) [000259] ------------       t259 =    LCL_VAR   ref    V06 loc4         u:2 (last use) $164
N004 (  2, 10) [000542] H-----------       t542 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127
                                                  /--*  t259   ref    this in rcx
                                                  +--*  t542   long   arg1 in r11
N005 ( 23, 21) [000260] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose $VN.Void

------------ BB24 [0FF..100) (finret), preds={BB22,BB23} succs={}
               [000667] ------------                 IL_OFFSET void   IL offset: 0xff
N001 (  0,  0) [000258] ------------                 RETFILT   void   $600

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Lowering nodeinfo
lowering call (before):
N002 (  2, 10) [000000] H-----------         t0 =    CNS_INT(h) long   0xd1ffab1e method $100
                                                  /--*  t0     long   arg0 in rcx
N003 ( 16, 16) [000001] --C---------         t1 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $180

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000438] ----------L-              *  ARGPLACE  long   $100

late:
======
lowering arg : N002 (  2, 10) [000000] H-----------              *  CNS_INT(h) long   0xd1ffab1e method $100
new node is :                [000673] ------------              *  PUTARG_REG long   REG rcx

lowering call (after):
N002 (  2, 10) [000000] H-----------         t0 =    CNS_INT(h) long   0xd1ffab1e method $100
                                                  /--*  t0     long   
               [000673] ------------       t673 = *  PUTARG_REG long   REG rcx
                                                  /--*  t673   long   arg0 in rcx
N003 ( 16, 16) [000001] --C---------         t1 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $180

lowering store lcl var/field (before):
N002 (  2, 10) [000000] H-----------         t0 =    CNS_INT(h) long   0xd1ffab1e method $100
                                                  /--*  t0     long   
               [000673] ------------       t673 = *  PUTARG_REG long   REG rcx
                                                  /--*  t673   long   arg0 in rcx
N003 ( 16, 16) [000001] --C---------         t1 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $180
                                                  /--*  t1     ref    
N005 ( 16, 16) [000003] DA----------              *  STORE_LCL_VAR ref    V12 tmp1         d:2

lowering store lcl var/field (after):
N002 (  2, 10) [000000] H-----------         t0 =    CNS_INT(h) long   0xd1ffab1e method $100
                                                  /--*  t0     long   
               [000673] ------------       t673 = *  PUTARG_REG long   REG rcx
                                                  /--*  t673   long   arg0 in rcx
N003 ( 16, 16) [000001] --C---------         t1 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $180
                                                  /--*  t1     ref    
N005 ( 16, 16) [000003] DA----------              *  STORE_LCL_VAR ref    V12 tmp1         d:2

lowering store lcl var/field (before):
N001 (  1,  1) [000006] ------------         t6 =    LCL_VAR   ref    V12 tmp1         u:2 $180
                                                  /--*  t6     ref    
N003 (  1,  3) [000008] DA----------              *  STORE_LCL_VAR ref    V02 loc0         d:2

lowering store lcl var/field (after):
N001 (  1,  1) [000006] ------------         t6 =    LCL_VAR   ref    V12 tmp1         u:2 $180
                                                  /--*  t6     ref    
N003 (  1,  3) [000008] DA----------              *  STORE_LCL_VAR ref    V02 loc0         d:2

Addressing mode:
  Base
    N001 (  1,  1) [000009] ------------              *  LCL_VAR   ref    V02 loc0         u:2 $180
  + 32
Removing unused node:
  N002 (  1,  1) [000439] -c----------              *  CNS_INT   long   32 field offset Fseq[outputFile] $1c0
New addressing mode node:
  N003 (  2,  2) [000440] ------------              *  LEA(b+32) byref 

Addressing mode:
  Base
    N001 (  1,  1) [000013] ------------              *  LCL_VAR   ref    V02 loc0         u:2 $180
  + 60
Removing unused node:
  N002 (  1,  1) [000441] -c----------              *  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1
New addressing mode node:
  N003 (  2,  2) [000442] ------------              *  LEA(b+60) byref 

Lower of StoreInd didn't mark the node as self contained for reason: 4
N001 (  1,  1) [000013] ------------        t13 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t13    ref    
N003 (  2,  2) [000442] ------------       t442 = *  LEA(b+60) byref 
N005 (  1,  1) [000014] ------------        t14 =    CNS_INT   int    0 $40
                                                  /--*  t442   byref  
                                                  +--*  t14    int    
               [000618] -A--GO------              *  STOREIND  int   
Addressing mode:
  Base
    N001 (  1,  1) [000017] ------------              *  LCL_VAR   ref    V02 loc0         u:2 $180
  + 56
Removing unused node:
  N002 (  1,  1) [000443] -c----------              *  CNS_INT   long   56 field offset Fseq[analyzersFinishedCount] $1c2
New addressing mode node:
  N003 (  2,  2) [000444] ------------              *  LEA(b+56) byref 

Lower of StoreInd didn't mark the node as self contained for reason: 4
N001 (  1,  1) [000017] ------------        t17 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t17    ref    
N003 (  2,  2) [000444] ------------       t444 = *  LEA(b+56) byref 
N005 (  1,  1) [000018] ------------        t18 =    CNS_INT   int    0 $40
                                                  /--*  t444   byref  
                                                  +--*  t18    int    
               [000620] -A--GO------              *  STOREIND  int   
lowering call (before):
N002 (  2, 10) [000022] H-----------        t22 =    CNS_INT(h) long   0xd1ffab1e token $104
                                                  /--*  t22    long   arg0 in rcx
N003 ( 16, 16) [000023] --C---------        t23 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $183

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000445] ----------L-              *  ARGPLACE  long   $104

late:
======
lowering arg : N002 (  2, 10) [000022] H-----------              *  CNS_INT(h) long   0xd1ffab1e token $104
new node is :                [000674] ------------              *  PUTARG_REG long   REG rcx

lowering call (after):
N002 (  2, 10) [000022] H-----------        t22 =    CNS_INT(h) long   0xd1ffab1e token $104
                                                  /--*  t22    long   
               [000674] ------------       t674 = *  PUTARG_REG long   REG rcx
                                                  /--*  t674   long   arg0 in rcx
N003 ( 16, 16) [000023] --C---------        t23 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $183

lowering store lcl var/field (before):
N002 (  2, 10) [000022] H-----------        t22 =    CNS_INT(h) long   0xd1ffab1e token $104
                                                  /--*  t22    long   
               [000674] ------------       t674 = *  PUTARG_REG long   REG rcx
                                                  /--*  t674   long   arg0 in rcx
N003 ( 16, 16) [000023] --C---------        t23 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $183
                                                  /--*  t23    ref    
N005 ( 16, 16) [000025] DA----------              *  STORE_LCL_VAR ref    V13 tmp2         d:2

lowering store lcl var/field (after):
N002 (  2, 10) [000022] H-----------        t22 =    CNS_INT(h) long   0xd1ffab1e token $104
                                                  /--*  t22    long   
               [000674] ------------       t674 = *  PUTARG_REG long   REG rcx
                                                  /--*  t674   long   arg0 in rcx
N003 ( 16, 16) [000023] --C---------        t23 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $183
                                                  /--*  t23    ref    
N005 ( 16, 16) [000025] DA----------              *  STORE_LCL_VAR ref    V13 tmp2         d:2

lowering call (before):
N002 (  2, 10) [000266] H-----------       t266 =    CNS_INT(h) long   0xd1ffab1e token $105
                                                  /--*  t266   long   arg0 in rcx
N003 ( 16, 16) [000267] --C---------       t267 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $184

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000446] ----------L-              *  ARGPLACE  long   $105

late:
======
lowering arg : N002 (  2, 10) [000266] H-----------              *  CNS_INT(h) long   0xd1ffab1e token $105
new node is :                [000675] ------------              *  PUTARG_REG long   REG rcx

lowering call (after):
N002 (  2, 10) [000266] H-----------       t266 =    CNS_INT(h) long   0xd1ffab1e token $105
                                                  /--*  t266   long   
               [000675] ------------       t675 = *  PUTARG_REG long   REG rcx
                                                  /--*  t675   long   arg0 in rcx
N003 ( 16, 16) [000267] --C---------       t267 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $184

lowering store lcl var/field (before):
N002 (  2, 10) [000266] H-----------       t266 =    CNS_INT(h) long   0xd1ffab1e token $105
                                                  /--*  t266   long   
               [000675] ------------       t675 = *  PUTARG_REG long   REG rcx
                                                  /--*  t675   long   arg0 in rcx
N003 ( 16, 16) [000267] --C---------       t267 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $184
                                                  /--*  t267   ref    
N005 ( 16, 16) [000269] DA----------              *  STORE_LCL_VAR ref    V30 tmp19        d:2

lowering store lcl var/field (after):
N002 (  2, 10) [000266] H-----------       t266 =    CNS_INT(h) long   0xd1ffab1e token $105
                                                  /--*  t266   long   
               [000675] ------------       t675 = *  PUTARG_REG long   REG rcx
                                                  /--*  t675   long   arg0 in rcx
N003 ( 16, 16) [000267] --C---------       t267 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $184
                                                  /--*  t267   ref    
N005 ( 16, 16) [000269] DA----------              *  STORE_LCL_VAR ref    V30 tmp19        d:2

Addressing mode:
  Base
    N001 (  1,  1) [000280] ------------              *  LCL_VAR   ref    V30 tmp19        u:2 $184
  + 52
Removing unused node:
  N002 (  1,  1) [000447] -c----------              *  CNS_INT   long   52 field offset Fseq[m_stateFlags] $1c3
New addressing mode node:
  N003 (  2,  2) [000448] ------------              *  LEA(b+52) byref 

Lower of StoreInd didn't mark the node as self contained for reason: 4
N001 (  1,  1) [000280] ------------       t280 =    LCL_VAR   ref    V30 tmp19        u:2 $184
                                                  /--*  t280   ref    
N003 (  2,  2) [000448] ------------       t448 = *  LEA(b+52) byref 
N005 (  1,  4) [000281] ------------       t281 =    CNS_INT   int    0x2000400 $43
                                                  /--*  t448   byref  
                                                  +--*  t281   int    
               [000622] -A--GO------              *  STOREIND  int   
Addressing mode:
  Base
    N001 (  1,  1) [000265] ------------              *  LCL_VAR   ref    V13 tmp2         u:2 $183
  + 8
Removing unused node:
  N002 (  1,  1) [000449] -c----------              *  CNS_INT   long   8 field offset Fseq[_task] $1c4
New addressing mode node:
  N003 (  2,  2) [000450] ------------              *  LEA(b+8)  byref 

Addressing mode:
  Base
    N001 (  1,  1) [000021] ------------              *  LCL_VAR   ref    V02 loc0         u:2 $180
  + 24
Removing unused node:
  N002 (  1,  1) [000451] -c----------              *  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun] $1c5
New addressing mode node:
  N003 (  2,  2) [000452] ------------              *  LEA(b+24) byref 

lowering call (before):
N002 (  2, 10) [000032] H-----------        t32 =    CNS_INT(h) long   0xd1ffab1e token $109
                                                  /--*  t32    long   arg0 in rcx
N003 ( 16, 16) [000033] --C---------        t33 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $189

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000453] ----------L-              *  ARGPLACE  long   $109

late:
======
lowering arg : N002 (  2, 10) [000032] H-----------              *  CNS_INT(h) long   0xd1ffab1e token $109
new node is :                [000676] ------------              *  PUTARG_REG long   REG rcx

lowering call (after):
N002 (  2, 10) [000032] H-----------        t32 =    CNS_INT(h) long   0xd1ffab1e token $109
                                                  /--*  t32    long   
               [000676] ------------       t676 = *  PUTARG_REG long   REG rcx
                                                  /--*  t676   long   arg0 in rcx
N003 ( 16, 16) [000033] --C---------        t33 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $189

lowering store lcl var/field (before):
N002 (  2, 10) [000032] H-----------        t32 =    CNS_INT(h) long   0xd1ffab1e token $109
                                                  /--*  t32    long   
               [000676] ------------       t676 = *  PUTARG_REG long   REG rcx
                                                  /--*  t676   long   arg0 in rcx
N003 ( 16, 16) [000033] --C---------        t33 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $189
                                                  /--*  t33    ref    
N005 ( 16, 16) [000035] DA----------              *  STORE_LCL_VAR ref    V14 tmp3         d:2

lowering store lcl var/field (after):
N002 (  2, 10) [000032] H-----------        t32 =    CNS_INT(h) long   0xd1ffab1e token $109
                                                  /--*  t32    long   
               [000676] ------------       t676 = *  PUTARG_REG long   REG rcx
                                                  /--*  t676   long   arg0 in rcx
N003 ( 16, 16) [000033] --C---------        t33 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $189
                                                  /--*  t33    ref    
N005 ( 16, 16) [000035] DA----------              *  STORE_LCL_VAR ref    V14 tmp3         d:2

lowering call (before):
N003 (  2, 10) [000297] ------------       t297 =    CNS_INT   long   0x7ffc7e0b0028 $1c6
N004 (  1,  1) [000298] ------------       t298 =    CNS_INT   int    14 $44
                                                  /--*  t297   long   arg0 in rcx
                                                  +--*  t298   int    arg1 in rdx
N005 ( 17, 18) [000299] H-CXG-------       t299 = *  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS $381

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000456] ----------L-              *  ARGPLACE  long   $1c6
lowering arg : N002 (  0,  0) [000457] ----------L-              *  ARGPLACE  int    $44

late:
======
lowering arg : N003 (  2, 10) [000297] ------------              *  CNS_INT   long   0x7ffc7e0b0028 $1c6
new node is :                [000677] ------------              *  PUTARG_REG long   REG rcx

lowering arg : N004 (  1,  1) [000298] ------------              *  CNS_INT   int    14 $44
new node is :                [000678] ------------              *  PUTARG_REG int    REG rdx

lowering call (after):
N003 (  2, 10) [000297] ------------       t297 =    CNS_INT   long   0x7ffc7e0b0028 $1c6
                                                  /--*  t297   long   
               [000677] ------------       t677 = *  PUTARG_REG long   REG rcx
N004 (  1,  1) [000298] ------------       t298 =    CNS_INT   int    14 $44
                                                  /--*  t298   int    
               [000678] ------------       t678 = *  PUTARG_REG int    REG rdx
                                                  /--*  t677   long   arg0 in rcx
                                                  +--*  t678   int    arg1 in rdx
N005 ( 17, 18) [000299] H-CXG-------       t299 = *  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS $381

Addressing mode:
  Base
    N009 (  1,  1) [000287] ------------              *  LCL_VAR   ref    V14 tmp3         u:2 $189
  + 8
Removing unused node:
  N010 (  1,  1) [000454] -c----------              *  CNS_INT   long   8 field offset Fseq[_array] $1c4
New addressing mode node:
  N011 (  2,  2) [000455] ------------              *  LEA(b+8)  byref 

Addressing mode:
  Base
    N001 (  1,  1) [000031] ------------              *  LCL_VAR   ref    V02 loc0         u:2 $180
  + 8
Removing unused node:
  N002 (  1,  1) [000459] -c----------              *  CNS_INT   long   8 field offset Fseq[queuedAnalyzers] $1c4
New addressing mode node:
  N003 (  2,  2) [000460] ------------              *  LEA(b+8)  byref 

Addressing mode:
  Base
    N001 (  1,  1) [000041] ------------              *  LCL_VAR   ref    V02 loc0         u:2 $180
  + 16
Removing unused node:
  N002 (  1,  1) [000461] -c----------              *  CNS_INT   long   16 field offset Fseq[progressReporter] $1c7
New addressing mode node:
  N003 (  2,  2) [000462] ------------              *  LEA(b+16) byref 

Lower of StoreInd didn't mark the node as self contained for reason: 4
N001 (  1,  1) [000041] ------------        t41 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t41    ref    
N003 (  2,  2) [000462] ------------       t462 = *  LEA(b+16) byref 
N005 (  1,  1) [000042] ------------        t42 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t462   byref  
                                                  +--*  t42    ref    
               [000631] -A--GO------              *  STOREIND  ref   
lowering call (before):
N002 (  2, 10) [000046] H-----------        t46 =    CNS_INT(h) long   0xd1ffab1e token $10e
                                                  /--*  t46    long   arg0 in rcx
N003 ( 16, 16) [000047] --C---------        t47 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $193

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000463] ----------L-              *  ARGPLACE  long   $10e

late:
======
lowering arg : N002 (  2, 10) [000046] H-----------              *  CNS_INT(h) long   0xd1ffab1e token $10e
new node is :                [000679] ------------              *  PUTARG_REG long   REG rcx

lowering call (after):
N002 (  2, 10) [000046] H-----------        t46 =    CNS_INT(h) long   0xd1ffab1e token $10e
                                                  /--*  t46    long   
               [000679] ------------       t679 = *  PUTARG_REG long   REG rcx
                                                  /--*  t679   long   arg0 in rcx
N003 ( 16, 16) [000047] --C---------        t47 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $193

lowering store lcl var/field (before):
N002 (  2, 10) [000046] H-----------        t46 =    CNS_INT(h) long   0xd1ffab1e token $10e
                                                  /--*  t46    long   
               [000679] ------------       t679 = *  PUTARG_REG long   REG rcx
                                                  /--*  t679   long   arg0 in rcx
N003 ( 16, 16) [000047] --C---------        t47 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $193
                                                  /--*  t47    ref    
N005 ( 16, 16) [000049] DA----------              *  STORE_LCL_VAR ref    V15 tmp4         d:2

lowering store lcl var/field (after):
N002 (  2, 10) [000046] H-----------        t46 =    CNS_INT(h) long   0xd1ffab1e token $10e
                                                  /--*  t46    long   
               [000679] ------------       t679 = *  PUTARG_REG long   REG rcx
                                                  /--*  t679   long   arg0 in rcx
N003 ( 16, 16) [000047] --C---------        t47 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $193
                                                  /--*  t47    ref    
N005 ( 16, 16) [000049] DA----------              *  STORE_LCL_VAR ref    V15 tmp4         d:2

lowering call (before):
N003 (  1,  1) [000050] ------------        t50 =    LCL_VAR   ref    V15 tmp4         u:2 $193
N004 (  1,  1) [000302] ------------       t302 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t50    ref    this in rcx
                                                  +--*  t302   ref    arg1 in rdx
N005 ( 16, 10) [000303] --CXG-------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor $VN.Void

objp:
======
lowering arg : N001 (  0,  0) [000464] ----------L-              *  ARGPLACE  ref    $14e

args:
======
lowering arg : N002 (  0,  0) [000465] ----------L-              *  ARGPLACE  ref    $193

late:
======
lowering arg : N003 (  1,  1) [000050] ------------              *  LCL_VAR   ref    V15 tmp4         u:2 $193
new node is :                [000680] ------------              *  PUTARG_REG ref    REG rcx

lowering arg : N004 (  1,  1) [000302] ------------              *  CNS_INT   ref    null $VN.Null
new node is :                [000681] ------------              *  PUTARG_REG ref    REG rdx

lowering call (after):
N003 (  1,  1) [000050] ------------        t50 =    LCL_VAR   ref    V15 tmp4         u:2 $193
                                                  /--*  t50    ref    
               [000680] ------------       t680 = *  PUTARG_REG ref    REG rcx
N004 (  1,  1) [000302] ------------       t302 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t302   ref    
               [000681] ------------       t681 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t680   ref    this in rcx
                                                  +--*  t681   ref    arg1 in rdx
N005 ( 16, 10) [000303] --CXG-------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor $VN.Void

Addressing mode:
  Base
    N001 (  1,  1) [000045] ------------              *  LCL_VAR   ref    V02 loc0         u:2 (last use) $180
  + 40
Removing unused node:
  N002 (  1,  1) [000466] -c----------              *  CNS_INT   long   40 field offset Fseq[output] $1c8
New addressing mode node:
  N003 (  2,  2) [000467] ------------              *  LEA(b+40) byref 

lowering call (before):
N001 ( 14,  5) [000055] --CXG-------        t55 =    CALL      ref    System.Diagnostics.Process.GetCurrentProcess $151

objp:
======

args:
======

late:
======
lowering call (after):
N001 ( 14,  5) [000055] --CXG-------        t55 =    CALL      ref    System.Diagnostics.Process.GetCurrentProcess $151

lowering store lcl var/field (before):
N001 ( 14,  5) [000055] --CXG-------        t55 =    CALL      ref    System.Diagnostics.Process.GetCurrentProcess $151
                                                  /--*  t55    ref    
N003 ( 14,  5) [000316] DA-XG-------              *  STORE_LCL_VAR ref    V31 tmp20        d:2

lowering store lcl var/field (after):
N001 ( 14,  5) [000055] --CXG-------        t55 =    CALL      ref    System.Diagnostics.Process.GetCurrentProcess $151
                                                  /--*  t55    ref    
N003 ( 14,  5) [000316] DA-XG-------              *  STORE_LCL_VAR ref    V31 tmp20        d:2

lowering call (before):
N003 (  1,  1) [000306] ------------       t306 =    LCL_VAR   ref    V31 tmp20        u:2 $151
N004 (  1,  1) [000307] ------------       t307 =    CNS_INT   int    3 $46
                                                  /--*  t306   ref    this in rcx
                                                  +--*  t307   int    arg1 in rdx
N005 ( 16, 10) [000308] --CXG-------              *  CALL      void   System.Diagnostics.Process.EnsureState $VN.Void

objp:
======
lowering arg : N001 (  0,  0) [000468] ----------L-              *  ARGPLACE  ref    $154

args:
======
lowering arg : N002 (  0,  0) [000469] ----------L-              *  ARGPLACE  int    $151

late:
======
lowering arg : N003 (  1,  1) [000306] ------------              *  LCL_VAR   ref    V31 tmp20        u:2 $151
new node is :                [000682] ------------              *  PUTARG_REG ref    REG rcx

lowering arg : N004 (  1,  1) [000307] ------------              *  CNS_INT   int    3 $46
new node is :                [000683] ------------              *  PUTARG_REG int    REG rdx

lowering call (after):
N003 (  1,  1) [000306] ------------       t306 =    LCL_VAR   ref    V31 tmp20        u:2 $151
                                                  /--*  t306   ref    
               [000682] ------------       t682 = *  PUTARG_REG ref    REG rcx
N004 (  1,  1) [000307] ------------       t307 =    CNS_INT   int    3 $46
                                                  /--*  t307   int    
               [000683] ------------       t683 = *  PUTARG_REG int    REG rdx
                                                  /--*  t682   ref    this in rcx
                                                  +--*  t683   int    arg1 in rdx
N005 ( 16, 10) [000308] --CXG-------              *  CALL      void   System.Diagnostics.Process.EnsureState $VN.Void

Addressing mode:
  Base
    N002 (  1,  1) [000309] ------------              *  LCL_VAR   ref    V31 tmp20        u:2 (last use) $151
  + 200
Removing unused node:
  N003 (  1,  4) [000470] -c----------              *  CNS_INT   long   200 field offset Fseq[_processId] $1c9
New addressing mode node:
  N004 (  2,  5) [000471] ------------              *  LEA(b+200) byref 

lowering call (before):
N002 (  1,  1) [000309] ------------       t309 =    LCL_VAR   ref    V31 tmp20        u:2 (last use) $151
                                                  /--*  t309   ref    
N004 (  2,  5) [000471] -c----------       t471 = *  LEA(b+200) byref 
                                                  /--*  t471   byref  
N005 (  4,  7) [000310] n---GO------       t310 = *  IND       int    <l:$289, c:$288>
                                                  /--*  t310   int    arg0 in rcx
N006 ( 18, 13) [000311] --CXGO------       t311 = *  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule $156

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000472] ----------L-              *  ARGPLACE  int    <l:$289, c:$288>

late:
======
lowering arg : N005 (  4,  7) [000310] n---GO------              *  IND       int    <l:$289, c:$288>
new node is :                [000684] ----GO------              *  PUTARG_REG int    REG rcx

lowering call (after):
N002 (  1,  1) [000309] ------------       t309 =    LCL_VAR   ref    V31 tmp20        u:2 (last use) $151
                                                  /--*  t309   ref    
N004 (  2,  5) [000471] -c----------       t471 = *  LEA(b+200) byref 
                                                  /--*  t471   byref  
N005 (  4,  7) [000310] n---GO------       t310 = *  IND       int    <l:$289, c:$288>
                                                  /--*  t310   int    
               [000684] ----GO------       t684 = *  PUTARG_REG int    REG rcx
                                                  /--*  t684   int    arg0 in rcx
N006 ( 18, 13) [000311] --CXGO------       t311 = *  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule $156

lowering store lcl var/field (before):
N002 (  1,  1) [000309] ------------       t309 =    LCL_VAR   ref    V31 tmp20        u:2 (last use) $151
                                                  /--*  t309   ref    
N004 (  2,  5) [000471] -c----------       t471 = *  LEA(b+200) byref 
                                                  /--*  t471   byref  
N005 (  4,  7) [000310] n---GO------       t310 = *  IND       int    <l:$289, c:$288>
                                                  /--*  t310   int    
               [000684] ----GO------       t684 = *  PUTARG_REG int    REG rcx
                                                  /--*  t684   int    arg0 in rcx
N006 ( 18, 13) [000311] --CXGO------       t311 = *  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule $156
                                                  /--*  t311   ref    
N008 ( 18, 13) [000322] DA-XGO------              *  STORE_LCL_VAR ref    V32 tmp21        d:2

lowering store lcl var/field (after):
N002 (  1,  1) [000309] ------------       t309 =    LCL_VAR   ref    V31 tmp20        u:2 (last use) $151
                                                  /--*  t309   ref    
N004 (  2,  5) [000471] -c----------       t471 = *  LEA(b+200) byref 
                                                  /--*  t471   byref  
N005 (  4,  7) [000310] n---GO------       t310 = *  IND       int    <l:$289, c:$288>
                                                  /--*  t310   int    
               [000684] ----GO------       t684 = *  PUTARG_REG int    REG rcx
                                                  /--*  t684   int    arg0 in rcx
N006 ( 18, 13) [000311] --CXGO------       t311 = *  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule $156
                                                  /--*  t311   ref    
N008 ( 18, 13) [000322] DA-XGO------              *  STORE_LCL_VAR ref    V32 tmp21        d:2

Addressing mode:
  Base
    N001 (  1,  1) [000319] ------------              *  LCL_VAR   ref    V32 tmp21        u:2 (last use) $156
  + 40
Removing unused node:
  N002 (  1,  1) [000473] -c----------              *  CNS_INT   long   40 field offset Fseq[<FileName>k__BackingField] $1c8
New addressing mode node:
  N003 (  2,  2) [000474] ------------              *  LEA(b+40) byref 

lowering store lcl var/field (before):
N001 (  1,  1) [000319] ------------       t319 =    LCL_VAR   ref    V32 tmp21        u:2 (last use) $156
                                                  /--*  t319   ref    
N003 (  2,  2) [000474] -c----------       t474 = *  LEA(b+40) byref 
                                                  /--*  t474   byref  
N004 (  4,  4) [000320] ---XG-------       t320 = *  IND       ref    <l:$19c, c:$19b>
                                                  /--*  t320   ref    
N006 (  4,  4) [000062] DA-XG-------              *  STORE_LCL_VAR ref    V03 loc1         d:2

lowering store lcl var/field (after):
N001 (  1,  1) [000319] ------------       t319 =    LCL_VAR   ref    V32 tmp21        u:2 (last use) $156
                                                  /--*  t319   ref    
N003 (  2,  2) [000474] -c----------       t474 = *  LEA(b+40) byref 
                                                  /--*  t474   byref  
N004 (  4,  4) [000320] ---XG-------       t320 = *  IND       ref    <l:$19c, c:$19b>
                                                  /--*  t320   ref    
N006 (  4,  4) [000062] DA-XG-------              *  STORE_LCL_VAR ref    V03 loc1         d:2

Addressing mode:
  Base
    N006 (  1,  1) [000337] ------------              *  LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
  + 8
Removing unused node:
                 [000668] -c----------              *  CNS_INT   long   8
New addressing mode node:
                 [000669] ------------              *  LEA(b+8)  ref   

lowering call (before):
N005 (  1,  1) [000339] ------------       t339 =    CNS_INT   int    5 $47
N006 (  1,  1) [000337] ------------       t337 =    LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
                                                  /--*  t337   ref    
               [000669] -c----------       t669 = *  LEA(b+8)  ref   
                                                  /--*  t669   ref    
N007 (  3,  3) [000338] ---X--------       t338 = *  IND       int    <l:$28b, c:$28a>
N008 (  2, 10) [000475] H-----------       t475 =    CNS_INT(h) long   0xD1FFAB1E "dotnet.exe" $112
                                                  /--*  t475   long   
N009 (  4, 12) [000476] #---G-------       t476 = *  IND       ref    $19f
N010 (  1,  1) [000063] ------------        t63 =    LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
N011 (  1,  1) [000336] ------------       t336 =    CNS_INT   int    0 $40
                                                  /--*  t339   int    arg4 out+20
                                                  +--*  t338   int    arg3 in r9
                                                  +--*  t476   ref    arg1 in rdx
                                                  +--*  t63    ref    this in rcx
                                                  +--*  t336   int    arg2 in r8
N012 ( 27, 28) [000340] --CXG-------       t340 = *  CALL      int    System.String.IndexOf $308

objp:
======
lowering arg : N001 (  0,  0) [000479] ----------L-              *  ARGPLACE  ref    $15b

args:
======
lowering arg : N002 (  0,  0) [000478] ----------L-              *  ARGPLACE  ref    <l:$199, c:$159>
lowering arg : N003 (  0,  0) [000480] ----------L-              *  ARGPLACE  int    $19f
lowering arg : N004 (  0,  0) [000477] ----------L-              *  ARGPLACE  int    $40
lowering arg : N005 (  1,  1) [000339] ------------              *  CNS_INT   int    5 $47
new node is :                [000685] ------------              *  PUTARG_STK [+0x20] void  


late:
======
lowering arg : N007 (  3,  3) [000338] ---X--------              *  IND       int    <l:$28b, c:$28a>
new node is :                [000686] ---X--------              *  PUTARG_REG int    REG r9

lowering arg : N009 (  4, 12) [000476] #---G-------              *  IND       ref    $19f
new node is :                [000687] ----G-------              *  PUTARG_REG ref    REG rdx

lowering arg : N010 (  1,  1) [000063] ------------              *  LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
new node is :                [000688] ------------              *  PUTARG_REG ref    REG rcx

lowering arg : N011 (  1,  1) [000336] ------------              *  CNS_INT   int    0 $40
new node is :                [000689] ------------              *  PUTARG_REG int    REG r8

lowering call (after):
N005 (  1,  1) [000339] -c----------       t339 =    CNS_INT   int    5 $47
                                                  /--*  t339   int    
               [000685] ------------              *  PUTARG_STK [+0x20] void  
N006 (  1,  1) [000337] ------------       t337 =    LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
                                                  /--*  t337   ref    
               [000669] -c----------       t669 = *  LEA(b+8)  ref   
                                                  /--*  t669   ref    
N007 (  3,  3) [000338] ---X--------       t338 = *  IND       int    <l:$28b, c:$28a>
                                                  /--*  t338   int    
               [000686] ---X--------       t686 = *  PUTARG_REG int    REG r9
N008 (  2, 10) [000475] H-----------       t475 =    CNS_INT(h) long   0xD1FFAB1E "dotnet.exe" $112
                                                  /--*  t475   long   
N009 (  4, 12) [000476] #---G-------       t476 = *  IND       ref    $19f
                                                  /--*  t476   ref    
               [000687] ----G-------       t687 = *  PUTARG_REG ref    REG rdx
N010 (  1,  1) [000063] ------------        t63 =    LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
                                                  /--*  t63    ref    
               [000688] ------------       t688 = *  PUTARG_REG ref    REG rcx
N011 (  1,  1) [000336] ------------       t336 =    CNS_INT   int    0 $40
                                                  /--*  t336   int    
               [000689] ------------       t689 = *  PUTARG_REG int    REG r8
                                                  /--*  t686   int    arg3 in r9
                                                  +--*  t687   ref    arg1 in rdx
                                                  +--*  t688   ref    this in rcx
                                                  +--*  t689   int    arg2 in r8
N012 ( 27, 28) [000340] --CXG-------       t340 = *  CALL      int    System.String.IndexOf $308

lowering store lcl var/field (before):
N005 (  1,  1) [000339] -c----------       t339 =    CNS_INT   int    5 $47
                                                  /--*  t339   int    
               [000685] ------------              *  PUTARG_STK [+0x20] void  
N006 (  1,  1) [000337] ------------       t337 =    LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
                                                  /--*  t337   ref    
               [000669] -c----------       t669 = *  LEA(b+8)  ref   
                                                  /--*  t669   ref    
N007 (  3,  3) [000338] ---X--------       t338 = *  IND       int    <l:$28b, c:$28a>
                                                  /--*  t338   int    
               [000686] ---X--------       t686 = *  PUTARG_REG int    REG r9
N008 (  2, 10) [000475] H-----------       t475 =    CNS_INT(h) long   0xD1FFAB1E "dotnet.exe" $112
                                                  /--*  t475   long   
N009 (  4, 12) [000476] #---G-------       t476 = *  IND       ref    $19f
                                                  /--*  t476   ref    
               [000687] ----G-------       t687 = *  PUTARG_REG ref    REG rdx
N010 (  1,  1) [000063] ------------        t63 =    LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
                                                  /--*  t63    ref    
               [000688] ------------       t688 = *  PUTARG_REG ref    REG rcx
N011 (  1,  1) [000336] ------------       t336 =    CNS_INT   int    0 $40
                                                  /--*  t336   int    
               [000689] ------------       t689 = *  PUTARG_REG int    REG r8
                                                  /--*  t686   int    arg3 in r9
                                                  +--*  t687   ref    arg1 in rdx
                                                  +--*  t688   ref    this in rcx
                                                  +--*  t689   int    arg2 in r8
N012 ( 27, 28) [000340] --CXG-------       t340 = *  CALL      int    System.String.IndexOf $308
N013 (  1,  1) [000328] -c----------       t328 =    CNS_INT   int    0 $40
                                                  /--*  t340   int    
                                                  +--*  t328   int    
N014 ( 32, 30) [000329] ---XG-------       t329 = *  GE        int    $28c
                                                  /--*  t329   int    
N016 ( 32, 30) [000069] DA-XG-------              *  STORE_LCL_VAR int    V04 loc2         d:2

lowering store lcl var/field (after):
N005 (  1,  1) [000339] -c----------       t339 =    CNS_INT   int    5 $47
                                                  /--*  t339   int    
               [000685] ------------              *  PUTARG_STK [+0x20] void  
N006 (  1,  1) [000337] ------------       t337 =    LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
                                                  /--*  t337   ref    
               [000669] -c----------       t669 = *  LEA(b+8)  ref   
                                                  /--*  t669   ref    
N007 (  3,  3) [000338] ---X--------       t338 = *  IND       int    <l:$28b, c:$28a>
                                                  /--*  t338   int    
               [000686] ---X--------       t686 = *  PUTARG_REG int    REG r9
N008 (  2, 10) [000475] H-----------       t475 =    CNS_INT(h) long   0xD1FFAB1E "dotnet.exe" $112
                                                  /--*  t475   long   
N009 (  4, 12) [000476] #---G-------       t476 = *  IND       ref    $19f
                                                  /--*  t476   ref    
               [000687] ----G-------       t687 = *  PUTARG_REG ref    REG rdx
N010 (  1,  1) [000063] ------------        t63 =    LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
                                                  /--*  t63    ref    
               [000688] ------------       t688 = *  PUTARG_REG ref    REG rcx
N011 (  1,  1) [000336] ------------       t336 =    CNS_INT   int    0 $40
                                                  /--*  t336   int    
               [000689] ------------       t689 = *  PUTARG_REG int    REG r8
                                                  /--*  t686   int    arg3 in r9
                                                  +--*  t687   ref    arg1 in rdx
                                                  +--*  t688   ref    this in rcx
                                                  +--*  t689   int    arg2 in r8
N012 ( 27, 28) [000340] --CXG-------       t340 = *  CALL      int    System.String.IndexOf $308
N013 (  1,  1) [000328] -c----------       t328 =    CNS_INT   int    0 $40
                                                  /--*  t340   int    
                                                  +--*  t328   int    
N014 ( 32, 30) [000329] ---XG-------       t329 = *  GE        int    $28c
                                                  /--*  t329   int    
N016 ( 32, 30) [000069] DA-XG-------              *  STORE_LCL_VAR int    V04 loc2         d:2

lowering call (before):
N001 ( 14,  5) [000070] --CXG-------        t70 =    CALL      ref    System.Environment.GetCommandLineArgs $15e

objp:
======

args:
======

late:
======
lowering call (after):
N001 ( 14,  5) [000070] --CXG-------        t70 =    CALL      ref    System.Environment.GetCommandLineArgs $15e

lowering store lcl var/field (before):
N001 ( 14,  5) [000070] --CXG-------        t70 =    CALL      ref    System.Environment.GetCommandLineArgs $15e
                                                  /--*  t70    ref    
N003 ( 14,  5) [000482] DA-XG-------              *  STORE_LCL_VAR ref    V41 tmp30        d:2

lowering store lcl var/field (after):
N001 ( 14,  5) [000070] --CXG-------        t70 =    CALL      ref    System.Environment.GetCommandLineArgs $15e
                                                  /--*  t70    ref    
N003 ( 14,  5) [000482] DA-XG-------              *  STORE_LCL_VAR ref    V41 tmp30        d:2

Addressing mode:
  Base
    N005 (  1,  1) [000483] ------------              *  LCL_VAR   ref    V41 tmp30        u:2 $15e
  + 8
Removing unused node:
                 [000670] -c----------              *  CNS_INT   long   8
New addressing mode node:
                 [000671] ------------              *  LEA(b+8)  ref   

Addressing mode:
  Base
    N008 (  1,  1) [000484] ------------              *  LCL_VAR   ref    V41 tmp30        u:2 (last use) $15e
  + 16
Removing unused node:
  N009 (  1,  1) [000491] -c----------              *  CNS_INT   long   16 Fseq[#FirstElem] $1c7
New addressing mode node:
  N010 (  2,  2) [000492] ------------              *  LEA(b+16) byref 

lowering store lcl var/field (before):
N008 (  1,  1) [000484] ------------       t484 =    LCL_VAR   ref    V41 tmp30        u:2 (last use) $15e
                                                  /--*  t484   ref    
N010 (  2,  2) [000492] -c----------       t492 = *  LEA(b+16) byref 
                                                  /--*  t492   byref  
N011 (  4,  4) [000073] a---G-------        t73 = *  IND       ref    <l:$1a8, c:$161>
                                                  /--*  t73    ref    
N015 ( 26, 20) [000075] DA-XG-------              *  STORE_LCL_VAR ref    V05 loc3         d:2

lowering store lcl var/field (after):
N008 (  1,  1) [000484] ------------       t484 =    LCL_VAR   ref    V41 tmp30        u:2 (last use) $15e
                                                  /--*  t484   ref    
N010 (  2,  2) [000492] -c----------       t492 = *  LEA(b+16) byref 
                                                  /--*  t492   byref  
N011 (  4,  4) [000073] a---G-------        t73 = *  IND       ref    <l:$1a8, c:$161>
                                                  /--*  t73    ref    
N015 ( 26, 20) [000075] DA-XG-------              *  STORE_LCL_VAR ref    V05 loc3         d:2

lowering call (before):
N003 (  1,  1) [000076] ------------        t76 =    LCL_VAR   ref    V00 arg0         u:1 (last use) $80
N004 (  2, 10) [000495] H-----------       t495 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $114
                                                  /--*  t76    ref    this in rcx
                                                  +--*  t495   long   arg1 in r11
N005 ( 23, 21) [000077] --CXG-------        t77 = *  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator $164

objp:
======
lowering arg : N001 (  0,  0) [000496] ----------L-              *  ARGPLACE  ref    $163

args:
======
lowering arg : N002 (  0,  0) [000497] ----------L-              *  ARGPLACE  long   $80

late:
======
lowering arg : N003 (  1,  1) [000076] ------------              *  LCL_VAR   ref    V00 arg0         u:1 (last use) $80
new node is :                [000690] ------------              *  PUTARG_REG ref    REG rcx

lowering arg : N004 (  2, 10) [000495] H-----------              *  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $114
new node is :                [000691] ------------              *  PUTARG_REG long   REG r11

results of lowering call:
N001 (  2, 10) [000692] H-----------       t692 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t692   long   
N002 (  4, 12) [000693] ------------       t693 = *  IND       long  
lowering call (after):
N003 (  1,  1) [000076] ------------        t76 =    LCL_VAR   ref    V00 arg0         u:1 (last use) $80
                                                  /--*  t76    ref    
               [000690] ------------       t690 = *  PUTARG_REG ref    REG rcx
N004 (  2, 10) [000495] H-----------       t495 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $114
                                                  /--*  t495   long   
               [000691] ------------       t691 = *  PUTARG_REG long   REG r11
N001 (  2, 10) [000692] Hc----------       t692 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t692   long   
N002 (  4, 12) [000693] -c----------       t693 = *  IND       long   REG NA
                                                  /--*  t690   ref    this in rcx
                                                  +--*  t691   long   arg1 in r11
                                                  +--*  t693   long   control expr
N005 ( 23, 21) [000077] --CXG-------        t77 = *  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator $164

lowering store lcl var/field (before):
N003 (  1,  1) [000076] ------------        t76 =    LCL_VAR   ref    V00 arg0         u:1 (last use) $80
                                                  /--*  t76    ref    
               [000690] ------------       t690 = *  PUTARG_REG ref    REG rcx
N004 (  2, 10) [000495] H-----------       t495 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $114
                                                  /--*  t495   long   
               [000691] ------------       t691 = *  PUTARG_REG long   REG r11
N001 (  2, 10) [000692] Hc----------       t692 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t692   long   
N002 (  4, 12) [000693] -c----------       t693 = *  IND       long   REG NA
                                                  /--*  t690   ref    this in rcx
                                                  +--*  t691   long   arg1 in r11
                                                  +--*  t693   long   control expr
N005 ( 23, 21) [000077] --CXG-------        t77 = *  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator $164
                                                  /--*  t77    ref    
N007 ( 23, 21) [000079] DA-XG-------              *  STORE_LCL_VAR ref    V06 loc4         d:2

lowering store lcl var/field (after):
N003 (  1,  1) [000076] ------------        t76 =    LCL_VAR   ref    V00 arg0         u:1 (last use) $80
                                                  /--*  t76    ref    
               [000690] ------------       t690 = *  PUTARG_REG ref    REG rcx
N004 (  2, 10) [000495] H-----------       t495 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $114
                                                  /--*  t495   long   
               [000691] ------------       t691 = *  PUTARG_REG long   REG r11
N001 (  2, 10) [000692] Hc----------       t692 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t692   long   
N002 (  4, 12) [000693] -c----------       t693 = *  IND       long   REG NA
                                                  /--*  t690   ref    this in rcx
                                                  +--*  t691   long   arg1 in r11
                                                  +--*  t693   long   control expr
N005 ( 23, 21) [000077] --CXG-------        t77 = *  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator $164
                                                  /--*  t77    ref    
N007 ( 23, 21) [000079] DA-XG-------              *  STORE_LCL_VAR ref    V06 loc4         d:2

lowering call (before):
N003 (  1,  1) [000575] ------------       t575 =    LCL_VAR   ref    V06 loc4         u:2 $164
N004 (  2, 10) [000576] H-----------       t576 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
                                                  /--*  t575   ref    this in rcx
                                                  +--*  t576   long   arg1 in r11
N005 ( 23, 21) [000572] --CXG-------       t572 = *  CALLV stub int    System.Collections.IEnumerator.MoveNext $30a

objp:
======
lowering arg : N001 (  0,  0) [000573] ----------L-              *  ARGPLACE  ref    $167

args:
======
lowering arg : N002 (  0,  0) [000574] ----------L-              *  ARGPLACE  long   $164

late:
======
lowering arg : N003 (  1,  1) [000575] ------------              *  LCL_VAR   ref    V06 loc4         u:2 $164
new node is :                [000694] ------------              *  PUTARG_REG ref    REG rcx

lowering arg : N004 (  2, 10) [000576] H-----------              *  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
new node is :                [000695] ------------              *  PUTARG_REG long   REG r11

results of lowering call:
N001 (  2, 10) [000696] H-----------       t696 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t696   long   
N002 (  4, 12) [000697] ------------       t697 = *  IND       long  
lowering call (after):
N003 (  1,  1) [000575] ------------       t575 =    LCL_VAR   ref    V06 loc4         u:2 $164
                                                  /--*  t575   ref    
               [000694] ------------       t694 = *  PUTARG_REG ref    REG rcx
N004 (  2, 10) [000576] H-----------       t576 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
                                                  /--*  t576   long   
               [000695] ------------       t695 = *  PUTARG_REG long   REG r11
N001 (  2, 10) [000696] Hc----------       t696 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t696   long   
N002 (  4, 12) [000697] -c----------       t697 = *  IND       long   REG NA
                                                  /--*  t694   ref    this in rcx
                                                  +--*  t695   long   arg1 in r11
                                                  +--*  t697   long   control expr
N005 ( 23, 21) [000572] --CXG-------       t572 = *  CALLV stub int    System.Collections.IEnumerator.MoveNext $30a

lowering call (before):
N003 (  1,  1) [000085] ------------        t85 =    LCL_VAR   ref    V06 loc4         u:2 $164
N004 (  2, 10) [000498] H-----------       t498 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $116
                                                  /--*  t85    ref    this in rcx
                                                  +--*  t498   long   arg1 in r11
N005 ( 23, 21) [000086] --CXG-------        t86 = *  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current $442

objp:
======
lowering arg : N001 (  0,  0) [000499] ----------L-              *  ARGPLACE  ref    $441

args:
======
lowering arg : N002 (  0,  0) [000500] ----------L-              *  ARGPLACE  long   $164

late:
======
lowering arg : N003 (  1,  1) [000085] ------------              *  LCL_VAR   ref    V06 loc4         u:2 $164
new node is :                [000698] ------------              *  PUTARG_REG ref    REG rcx

lowering arg : N004 (  2, 10) [000498] H-----------              *  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $116
new node is :                [000699] ------------              *  PUTARG_REG long   REG r11

results of lowering call:
N001 (  2, 10) [000700] H-----------       t700 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t700   long   
N002 (  4, 12) [000701] ------------       t701 = *  IND       long  
lowering call (after):
N003 (  1,  1) [000085] ------------        t85 =    LCL_VAR   ref    V06 loc4         u:2 $164
                                                  /--*  t85    ref    
               [000698] ------------       t698 = *  PUTARG_REG ref    REG rcx
N004 (  2, 10) [000498] H-----------       t498 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $116
                                                  /--*  t498   long   
               [000699] ------------       t699 = *  PUTARG_REG long   REG r11
N001 (  2, 10) [000700] Hc----------       t700 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t700   long   
N002 (  4, 12) [000701] -c----------       t701 = *  IND       long   REG NA
                                                  /--*  t698   ref    this in rcx
                                                  +--*  t699   long   arg1 in r11
                                                  +--*  t701   long   control expr
N005 ( 23, 21) [000086] --CXG-------        t86 = *  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current $442

lowering store lcl var/field (before):
N003 (  1,  1) [000085] ------------        t85 =    LCL_VAR   ref    V06 loc4         u:2 $164
                                                  /--*  t85    ref    
               [000698] ------------       t698 = *  PUTARG_REG ref    REG rcx
N004 (  2, 10) [000498] H-----------       t498 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $116
                                                  /--*  t498   long   
               [000699] ------------       t699 = *  PUTARG_REG long   REG r11
N001 (  2, 10) [000700] Hc----------       t700 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t700   long   
N002 (  4, 12) [000701] -c----------       t701 = *  IND       long   REG NA
                                                  /--*  t698   ref    this in rcx
                                                  +--*  t699   long   arg1 in r11
                                                  +--*  t701   long   control expr
N005 ( 23, 21) [000086] --CXG-------        t86 = *  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current $442
                                                  /--*  t86    ref    
N007 ( 23, 21) [000088] DA-XG-------              *  STORE_LCL_VAR ref    V07 loc5         d:2

lowering store lcl var/field (after):
N003 (  1,  1) [000085] ------------        t85 =    LCL_VAR   ref    V06 loc4         u:2 $164
                                                  /--*  t85    ref    
               [000698] ------------       t698 = *  PUTARG_REG ref    REG rcx
N004 (  2, 10) [000498] H-----------       t498 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $116
                                                  /--*  t498   long   
               [000699] ------------       t699 = *  PUTARG_REG long   REG r11
N001 (  2, 10) [000700] Hc----------       t700 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t700   long   
N002 (  4, 12) [000701] -c----------       t701 = *  IND       long   REG NA
                                                  /--*  t698   ref    this in rcx
                                                  +--*  t699   long   arg1 in r11
                                                  +--*  t701   long   control expr
N005 ( 23, 21) [000086] --CXG-------        t86 = *  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current $442
                                                  /--*  t86    ref    
N007 ( 23, 21) [000088] DA-XG-------              *  STORE_LCL_VAR ref    V07 loc5         d:2

lowering call (before):
N002 (  2, 10) [000089] H-----------        t89 =    CNS_INT(h) long   0xd1ffab1e token $117
                                                  /--*  t89    long   arg0 in rcx
N003 ( 16, 16) [000090] --C---------        t90 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1ab

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000501] ----------L-              *  ARGPLACE  long   $117

late:
======
lowering arg : N002 (  2, 10) [000089] H-----------              *  CNS_INT(h) long   0xd1ffab1e token $117
new node is :                [000702] ------------              *  PUTARG_REG long   REG rcx

lowering call (after):
N002 (  2, 10) [000089] H-----------        t89 =    CNS_INT(h) long   0xd1ffab1e token $117
                                                  /--*  t89    long   
               [000702] ------------       t702 = *  PUTARG_REG long   REG rcx
                                                  /--*  t702   long   arg0 in rcx
N003 ( 16, 16) [000090] --C---------        t90 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1ab

lowering store lcl var/field (before):
N002 (  2, 10) [000089] H-----------        t89 =    CNS_INT(h) long   0xd1ffab1e token $117
                                                  /--*  t89    long   
               [000702] ------------       t702 = *  PUTARG_REG long   REG rcx
                                                  /--*  t702   long   arg0 in rcx
N003 ( 16, 16) [000090] --C---------        t90 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1ab
                                                  /--*  t90    ref    
N005 ( 16, 16) [000092] DA----------              *  STORE_LCL_VAR ref    V16 tmp5         d:2

lowering store lcl var/field (after):
N002 (  2, 10) [000089] H-----------        t89 =    CNS_INT(h) long   0xd1ffab1e token $117
                                                  /--*  t89    long   
               [000702] ------------       t702 = *  PUTARG_REG long   REG rcx
                                                  /--*  t702   long   arg0 in rcx
N003 ( 16, 16) [000090] --C---------        t90 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1ab
                                                  /--*  t90    ref    
N005 ( 16, 16) [000092] DA----------              *  STORE_LCL_VAR ref    V16 tmp5         d:2

Addressing mode:
  Base
    N001 (  1,  1) [000096] ------------              *  LCL_VAR   ref    V16 tmp5         u:2 $1ab
  + 8
Removing unused node:
  N002 (  1,  1) [000502] -c----------              *  CNS_INT   long   8 field offset Fseq[_fileName] $1c4
New addressing mode node:
  N003 (  2,  2) [000503] ------------              *  LEA(b+8)  byref 

lowering store lcl var/field (before):
N001 (  1,  1) [000095] ------------        t95 =    LCL_VAR   ref    V16 tmp5         u:2 $1ab
                                                  /--*  t95    ref    
N003 (  1,  3) [000105] DA----------              *  STORE_LCL_VAR ref    V17 tmp6         d:2

lowering store lcl var/field (after):
N001 (  1,  1) [000095] ------------        t95 =    LCL_VAR   ref    V16 tmp5         u:2 $1ab
                                                  /--*  t95    ref    
N003 (  1,  3) [000105] DA----------              *  STORE_LCL_VAR ref    V17 tmp6         d:2

lowering store lcl var/field (before):
N001 (  1,  1) [000099] ------------        t99 =    LCL_VAR   ref    V17 tmp6         u:2 (last use) $1ab
                                                  /--*  t99    ref    
N003 (  1,  3) [000108] DA----------              *  STORE_LCL_VAR ref    V18 tmp7         d:2

lowering store lcl var/field (after):
N001 (  1,  1) [000099] ------------        t99 =    LCL_VAR   ref    V17 tmp6         u:2 (last use) $1ab
                                                  /--*  t99    ref    
N003 (  1,  3) [000108] DA----------              *  STORE_LCL_VAR ref    V18 tmp7         d:2

lowering store lcl var/field (before):
N001 (  1,  1) [000110] ------------       t110 =    LCL_VAR   ref    V18 tmp7         u:2 (last use) $1ab
                                                  /--*  t110   ref    
N003 (  1,  3) [000203] DA----------              *  STORE_LCL_VAR ref    V19 tmp8         d:4

lowering store lcl var/field (after):
N001 (  1,  1) [000110] ------------       t110 =    LCL_VAR   ref    V18 tmp7         u:2 (last use) $1ab
                                                  /--*  t110   ref    
N003 (  1,  3) [000203] DA----------              *  STORE_LCL_VAR ref    V19 tmp8         d:4

lowering store lcl var/field (before):
N001 (  1,  1) [000111] ------------       t111 =    LCL_VAR   ref    V19 tmp8         u:4 (last use) $1ab
                                                  /--*  t111   ref    
N003 (  1,  3) [000206] DA----------              *  STORE_LCL_VAR ref    V20 tmp9         d:4

lowering store lcl var/field (after):
N001 (  1,  1) [000111] ------------       t111 =    LCL_VAR   ref    V19 tmp8         u:4 (last use) $1ab
                                                  /--*  t111   ref    
N003 (  1,  3) [000206] DA----------              *  STORE_LCL_VAR ref    V20 tmp9         d:4

lowering store lcl var/field (before):
N001 (  1,  1) [000201] ------------       t201 =    LCL_VAR   ref    V07 loc5         u:2 (last use) $442
                                                  /--*  t201   ref    
N003 (  1,  3) [000209] DA----------              *  STORE_LCL_VAR ref    V21 tmp10        d:4

lowering store lcl var/field (after):
N001 (  1,  1) [000201] ------------       t201 =    LCL_VAR   ref    V07 loc5         u:2 (last use) $442
                                                  /--*  t201   ref    
N003 (  1,  3) [000209] DA----------              *  STORE_LCL_VAR ref    V21 tmp10        d:4

lowering store lcl var/field (before):
N001 (  1,  1) [000112] ------------       t112 =    LCL_VAR   ref    V18 tmp7         u:2 (last use) $1ab
                                                  /--*  t112   ref    
N003 (  1,  3) [000119] DA----------              *  STORE_LCL_VAR ref    V19 tmp8         d:3

lowering store lcl var/field (after):
N001 (  1,  1) [000112] ------------       t112 =    LCL_VAR   ref    V18 tmp7         u:2 (last use) $1ab
                                                  /--*  t112   ref    
N003 (  1,  3) [000119] DA----------              *  STORE_LCL_VAR ref    V19 tmp8         d:3

lowering store lcl var/field (before):
N001 (  1,  1) [000113] ------------       t113 =    LCL_VAR   ref    V19 tmp8         u:3 (last use) $1ab
                                                  /--*  t113   ref    
N003 (  1,  3) [000122] DA----------              *  STORE_LCL_VAR ref    V20 tmp9         d:3

lowering store lcl var/field (after):
N001 (  1,  1) [000113] ------------       t113 =    LCL_VAR   ref    V19 tmp8         u:3 (last use) $1ab
                                                  /--*  t113   ref    
N003 (  1,  3) [000122] DA----------              *  STORE_LCL_VAR ref    V20 tmp9         d:3

lowering call (before):
N004 (  2, 10) [000504] H-----------       t504 =    CNS_INT(h) long   0xD1FFAB1E " " $119
                                                  /--*  t504   long   
N005 (  4, 12) [000505] #---G-------       t505 = *  IND       ref    $1ae
N006 (  1,  1) [000114] ------------       t114 =    LCL_VAR   ref    V05 loc3         u:2 <l:$1a8, c:$161>
N007 (  1,  1) [000116] ------------       t116 =    LCL_VAR   ref    V07 loc5         u:2 (last use) $442
                                                  /--*  t505   ref    arg1 in rdx
                                                  +--*  t114   ref    arg0 in rcx
                                                  +--*  t116   ref    arg2 in r8
N008 ( 20, 22) [000117] --CXG-------       t117 = *  CALL      ref    System.String.Concat $44e

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000507] ----------L-              *  ARGPLACE  ref    <l:$1a8, c:$161>
lowering arg : N002 (  0,  0) [000506] ----------L-              *  ARGPLACE  ref    $1ae
lowering arg : N003 (  0,  0) [000508] ----------L-              *  ARGPLACE  ref    $442

late:
======
lowering arg : N005 (  4, 12) [000505] #---G-------              *  IND       ref    $1ae
new node is :                [000703] ----G-------              *  PUTARG_REG ref    REG rdx

lowering arg : N006 (  1,  1) [000114] ------------              *  LCL_VAR   ref    V05 loc3         u:2 <l:$1a8, c:$161>
new node is :                [000704] ------------              *  PUTARG_REG ref    REG rcx

lowering arg : N007 (  1,  1) [000116] ------------              *  LCL_VAR   ref    V07 loc5         u:2 (last use) $442
new node is :                [000705] ------------              *  PUTARG_REG ref    REG r8

lowering call (after):
N004 (  2, 10) [000504] H-----------       t504 =    CNS_INT(h) long   0xD1FFAB1E " " $119
                                                  /--*  t504   long   
N005 (  4, 12) [000505] #---G-------       t505 = *  IND       ref    $1ae
                                                  /--*  t505   ref    
               [000703] ----G-------       t703 = *  PUTARG_REG ref    REG rdx
N006 (  1,  1) [000114] ------------       t114 =    LCL_VAR   ref    V05 loc3         u:2 <l:$1a8, c:$161>
                                                  /--*  t114   ref    
               [000704] ------------       t704 = *  PUTARG_REG ref    REG rcx
N007 (  1,  1) [000116] ------------       t116 =    LCL_VAR   ref    V07 loc5         u:2 (last use) $442
                                                  /--*  t116   ref    
               [000705] ------------       t705 = *  PUTARG_REG ref    REG r8
                                                  /--*  t703   ref    arg1 in rdx
                                                  +--*  t704   ref    arg0 in rcx
                                                  +--*  t705   ref    arg2 in r8
N008 ( 20, 22) [000117] --CXG-------       t117 = *  CALL      ref    System.String.Concat $44e

lowering store lcl var/field (before):
N004 (  2, 10) [000504] H-----------       t504 =    CNS_INT(h) long   0xD1FFAB1E " " $119
                                                  /--*  t504   long   
N005 (  4, 12) [000505] #---G-------       t505 = *  IND       ref    $1ae
                                                  /--*  t505   ref    
               [000703] ----G-------       t703 = *  PUTARG_REG ref    REG rdx
N006 (  1,  1) [000114] ------------       t114 =    LCL_VAR   ref    V05 loc3         u:2 <l:$1a8, c:$161>
                                                  /--*  t114   ref    
               [000704] ------------       t704 = *  PUTARG_REG ref    REG rcx
N007 (  1,  1) [000116] ------------       t116 =    LCL_VAR   ref    V07 loc5         u:2 (last use) $442
                                                  /--*  t116   ref    
               [000705] ------------       t705 = *  PUTARG_REG ref    REG r8
                                                  /--*  t703   ref    arg1 in rdx
                                                  +--*  t704   ref    arg0 in rcx
                                                  +--*  t705   ref    arg2 in r8
N008 ( 20, 22) [000117] --CXG-------       t117 = *  CALL      ref    System.String.Concat $44e
                                                  /--*  t117   ref    
N010 ( 20, 22) [000125] DA-XG-------              *  STORE_LCL_VAR ref    V21 tmp10        d:3

lowering store lcl var/field (after):
N004 (  2, 10) [000504] H-----------       t504 =    CNS_INT(h) long   0xD1FFAB1E " " $119
                                                  /--*  t504   long   
N005 (  4, 12) [000505] #---G-------       t505 = *  IND       ref    $1ae
                                                  /--*  t505   ref    
               [000703] ----G-------       t703 = *  PUTARG_REG ref    REG rdx
N006 (  1,  1) [000114] ------------       t114 =    LCL_VAR   ref    V05 loc3         u:2 <l:$1a8, c:$161>
                                                  /--*  t114   ref    
               [000704] ------------       t704 = *  PUTARG_REG ref    REG rcx
N007 (  1,  1) [000116] ------------       t116 =    LCL_VAR   ref    V07 loc5         u:2 (last use) $442
                                                  /--*  t116   ref    
               [000705] ------------       t705 = *  PUTARG_REG ref    REG r8
                                                  /--*  t703   ref    arg1 in rdx
                                                  +--*  t704   ref    arg0 in rcx
                                                  +--*  t705   ref    arg2 in r8
N008 ( 20, 22) [000117] --CXG-------       t117 = *  CALL      ref    System.String.Concat $44e
                                                  /--*  t117   ref    
N010 ( 20, 22) [000125] DA-XG-------              *  STORE_LCL_VAR ref    V21 tmp10        d:3

lowering store lcl var/field (before):
N001 (  0,  0) [000606] ------------       t606 =    PHI_ARG   ref    V21 tmp10        u:4 $442
N002 (  0,  0) [000603] ------------       t603 =    PHI_ARG   ref    V21 tmp10        u:3 $44e
                                                  /--*  t606   ref    
                                                  +--*  t603   ref    
N003 (  0,  0) [000595] ------------       t595 = *  PHI       ref   
                                                  /--*  t595   ref    
N005 (  0,  0) [000596] DA----------              *  STORE_LCL_VAR ref    V21 tmp10        d:2

lowering store lcl var/field (after):
N001 (  0,  0) [000606] ------------       t606 =    PHI_ARG   ref    V21 tmp10        u:4 $442
N002 (  0,  0) [000603] ------------       t603 =    PHI_ARG   ref    V21 tmp10        u:3 $44e
                                                  /--*  t606   ref    
                                                  +--*  t603   ref    
N003 (  0,  0) [000595] ------------       t595 = *  PHI       ref   
                                                  /--*  t595   ref    
N005 (  0,  0) [000596] DA----------              *  STORE_LCL_VAR ref    V21 tmp10        d:2

lowering store lcl var/field (before):
N001 (  0,  0) [000607] ------------       t607 =    PHI_ARG   ref    V20 tmp9         u:4 $1ab
N002 (  0,  0) [000604] ------------       t604 =    PHI_ARG   ref    V20 tmp9         u:3 $1ab
                                                  /--*  t607   ref    
                                                  +--*  t604   ref    
N003 (  0,  0) [000592] ------------       t592 = *  PHI       ref   
                                                  /--*  t592   ref    
N005 (  0,  0) [000593] DA----------              *  STORE_LCL_VAR ref    V20 tmp9         d:2

lowering store lcl var/field (after):
N001 (  0,  0) [000607] ------------       t607 =    PHI_ARG   ref    V20 tmp9         u:4 $1ab
N002 (  0,  0) [000604] ------------       t604 =    PHI_ARG   ref    V20 tmp9         u:3 $1ab
                                                  /--*  t607   ref    
                                                  +--*  t604   ref    
N003 (  0,  0) [000592] ------------       t592 = *  PHI       ref   
                                                  /--*  t592   ref    
N005 (  0,  0) [000593] DA----------              *  STORE_LCL_VAR ref    V20 tmp9         d:2

lowering store lcl var/field (before):
N001 (  0,  0) [000608] ------------       t608 =    PHI_ARG   ref    V19 tmp8         u:4 $1ab
N002 (  0,  0) [000605] ------------       t605 =    PHI_ARG   ref    V19 tmp8         u:3 $1ab
                                                  /--*  t608   ref    
                                                  +--*  t605   ref    
N003 (  0,  0) [000589] ------------       t589 = *  PHI       ref   
                                                  /--*  t589   ref    
N005 (  0,  0) [000590] DA----------              *  STORE_LCL_VAR ref    V19 tmp8         d:2

lowering store lcl var/field (after):
N001 (  0,  0) [000608] ------------       t608 =    PHI_ARG   ref    V19 tmp8         u:4 $1ab
N002 (  0,  0) [000605] ------------       t605 =    PHI_ARG   ref    V19 tmp8         u:3 $1ab
                                                  /--*  t608   ref    
                                                  +--*  t605   ref    
N003 (  0,  0) [000589] ------------       t589 = *  PHI       ref   
                                                  /--*  t589   ref    
N005 (  0,  0) [000590] DA----------              *  STORE_LCL_VAR ref    V19 tmp8         d:2

Addressing mode:
  Base
    N001 (  1,  1) [000128] ------------              *  LCL_VAR   ref    V20 tmp9         u:2 (last use) $1ab
  + 16
Removing unused node:
  N002 (  1,  1) [000509] -c----------              *  CNS_INT   long   16 field offset Fseq[_arguments] $1c7
New addressing mode node:
  N003 (  2,  2) [000510] ------------              *  LEA(b+16) byref 

Addressing mode:
  Base
    N001 (  1,  1) [000131] ------------              *  LCL_VAR   ref    V19 tmp8         u:2 $1ab
  + 130
Removing unused node:
  N002 (  1,  4) [000511] -c----------              *  CNS_INT   long   130 field offset Fseq[<UseShellExecute>k__BackingField] $1cb
New addressing mode node:
  N003 (  2,  5) [000512] ------------              *  LEA(b+130) byref 

Lower of StoreInd didn't mark the node as self contained for reason: 4
N001 (  1,  1) [000131] ------------       t131 =    LCL_VAR   ref    V19 tmp8         u:2 $1ab
                                                  /--*  t131   ref    
N003 (  2,  5) [000512] ------------       t512 = *  LEA(b+130) byref 
N005 (  1,  1) [000353] ------------       t353 =    CNS_INT   int    0 $40
                                                  /--*  t512   byref  
                                                  +--*  t353   int    
               [000644] -A--GO------              *  STOREIND  bool  
Addressing mode:
  Base
    N001 (  1,  1) [000137] ------------              *  LCL_VAR   ref    V02 loc0         u:2 $180
  + 8
Removing unused node:
  N002 (  1,  1) [000513] -c----------              *  CNS_INT   long   8 field offset Fseq[queuedAnalyzers] $1c4
New addressing mode node:
  N003 (  2,  2) [000514] ------------              *  LEA(b+8)  byref 

lowering store lcl var/field (before):
N001 (  1,  1) [000137] ------------       t137 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t137   ref    
N003 (  2,  2) [000514] -c----------       t514 = *  LEA(b+8)  byref 
                                                  /--*  t514   byref  
N004 (  4,  4) [000138] n---GO------       t138 = *  IND       ref    <l:$1bc, c:$1bb>
                                                  /--*  t138   ref    
N006 (  4,  4) [000145] DA--GO------              *  STORE_LCL_VAR ref    V23 tmp12        d:2

lowering store lcl var/field (after):
N001 (  1,  1) [000137] ------------       t137 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t137   ref    
N003 (  2,  2) [000514] -c----------       t514 = *  LEA(b+8)  byref 
                                                  /--*  t514   byref  
N004 (  4,  4) [000138] n---GO------       t138 = *  IND       ref    <l:$1bc, c:$1bb>
                                                  /--*  t138   ref    
N006 (  4,  4) [000145] DA--GO------              *  STORE_LCL_VAR ref    V23 tmp12        d:2

Addressing mode:
  Base
    N001 (  1,  1) [000140] ------------              *  LCL_VAR   ref    V02 loc0         u:2 $180
  + 48
Removing unused node:
  N002 (  1,  1) [000515] -c----------              *  CNS_INT   long   48 field offset Fseq[<>9__2] $1cc
New addressing mode node:
  N003 (  2,  2) [000516] ------------              *  LEA(b+48) byref 

lowering store lcl var/field (before):
N001 (  1,  1) [000140] ------------       t140 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t140   ref    
N003 (  2,  2) [000516] -c----------       t516 = *  LEA(b+48) byref 
                                                  /--*  t516   byref  
N004 (  4,  4) [000141] n---GO------       t141 = *  IND       ref    <l:$542, c:$541>
                                                  /--*  t141   ref    
N006 (  4,  4) [000143] DA--GO------              *  STORE_LCL_VAR ref    V22 tmp11        d:2

lowering store lcl var/field (after):
N001 (  1,  1) [000140] ------------       t140 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t140   ref    
N003 (  2,  2) [000516] -c----------       t516 = *  LEA(b+48) byref 
                                                  /--*  t516   byref  
N004 (  4,  4) [000141] n---GO------       t141 = *  IND       ref    <l:$542, c:$541>
                                                  /--*  t141   ref    
N006 (  4,  4) [000143] DA--GO------              *  STORE_LCL_VAR ref    V22 tmp11        d:2

lowering store lcl var/field (before):
N001 (  1,  1) [000146] ------------       t146 =    LCL_VAR   ref    V23 tmp12        u:2 (last use) <l:$1b9, c:$454>
                                                  /--*  t146   ref    
N003 (  1,  3) [000153] DA----------              *  STORE_LCL_VAR ref    V24 tmp13        d:2

lowering store lcl var/field (after):
N001 (  1,  1) [000146] ------------       t146 =    LCL_VAR   ref    V23 tmp12        u:2 (last use) <l:$1b9, c:$454>
                                                  /--*  t146   ref    
N003 (  1,  3) [000153] DA----------              *  STORE_LCL_VAR ref    V24 tmp13        d:2

lowering store lcl var/field (before):
N001 (  1,  1) [000139] ------------       t139 =    LCL_VAR   ref    V19 tmp8         u:2 (last use) $1ab
                                                  /--*  t139   ref    
N003 (  1,  3) [000156] DA----------              *  STORE_LCL_VAR ref    V25 tmp14        d:2

lowering store lcl var/field (after):
N001 (  1,  1) [000139] ------------       t139 =    LCL_VAR   ref    V19 tmp8         u:2 (last use) $1ab
                                                  /--*  t139   ref    
N003 (  1,  3) [000156] DA----------              *  STORE_LCL_VAR ref    V25 tmp14        d:2

lowering store lcl var/field (before):
N001 (  1,  1) [000147] ------------       t147 =    LCL_VAR   ref    V22 tmp11        u:2 <l:$540, c:$456>
                                                  /--*  t147   ref    
N003 (  1,  3) [000159] DA----------              *  STORE_LCL_VAR ref    V26 tmp15        d:2

lowering store lcl var/field (after):
N001 (  1,  1) [000147] ------------       t147 =    LCL_VAR   ref    V22 tmp11        u:2 <l:$540, c:$456>
                                                  /--*  t147   ref    
N003 (  1,  3) [000159] DA----------              *  STORE_LCL_VAR ref    V26 tmp15        d:2

lowering call (before):
N002 (  2, 10) [000181] H-----------       t181 =    CNS_INT(h) long   0xd1ffab1e token $11e
                                                  /--*  t181   long   arg0 in rcx
N003 ( 16, 16) [000182] --C---------       t182 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $543

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000517] ----------L-              *  ARGPLACE  long   $11e

late:
======
lowering arg : N002 (  2, 10) [000181] H-----------              *  CNS_INT(h) long   0xd1ffab1e token $11e
new node is :                [000706] ------------              *  PUTARG_REG long   REG rcx

lowering call (after):
N002 (  2, 10) [000181] H-----------       t181 =    CNS_INT(h) long   0xd1ffab1e token $11e
                                                  /--*  t181   long   
               [000706] ------------       t706 = *  PUTARG_REG long   REG rcx
                                                  /--*  t706   long   arg0 in rcx
N003 ( 16, 16) [000182] --C---------       t182 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $543

lowering store lcl var/field (before):
N002 (  2, 10) [000181] H-----------       t181 =    CNS_INT(h) long   0xd1ffab1e token $11e
                                                  /--*  t181   long   
               [000706] ------------       t706 = *  PUTARG_REG long   REG rcx
                                                  /--*  t706   long   arg0 in rcx
N003 ( 16, 16) [000182] --C---------       t182 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $543
                                                  /--*  t182   ref    
N005 ( 16, 16) [000184] DA----------              *  STORE_LCL_VAR ref    V28 tmp17        d:2

lowering store lcl var/field (after):
N002 (  2, 10) [000181] H-----------       t181 =    CNS_INT(h) long   0xd1ffab1e token $11e
                                                  /--*  t181   long   
               [000706] ------------       t706 = *  PUTARG_REG long   REG rcx
                                                  /--*  t706   long   arg0 in rcx
N003 ( 16, 16) [000182] --C---------       t182 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $543
                                                  /--*  t182   ref    
N005 ( 16, 16) [000184] DA----------              *  STORE_LCL_VAR ref    V28 tmp17        d:2

Addressing mode:
  Base
    N001 (  1,  1) [000185] ------------              *  LCL_VAR   ref    V28 tmp17        u:2 $543
  + 8
Removing unused node:
  N002 (  1,  1) [000518] -c----------              *  CNS_INT   long   8 field offset Fseq[_target] $1c4
New addressing mode node:
  N003 (  2,  2) [000519] ------------              *  LEA(b+8)  byref 

Addressing mode:
  Base
    N001 (  1,  1) [000363] ------------              *  LCL_VAR   ref    V28 tmp17        u:2 $543
  + 24
Removing unused node:
  N002 (  1,  1) [000520] -c----------              *  CNS_INT   long   24 field offset Fseq[_methodPtr] $1c5
New addressing mode node:
  N003 (  2,  2) [000521] ------------              *  LEA(b+24) byref 

Lower of StoreInd didn't mark the node as self contained for reason: 4
N001 (  1,  1) [000363] ------------       t363 =    LCL_VAR   ref    V28 tmp17        u:2 $543
                                                  /--*  t363   ref    
N003 (  2,  2) [000521] ------------       t521 = *  LEA(b+24) byref 
N005 (  2, 10) [000180] H-----------       t180 =    CNS_INT(h) long   0xd1ffab1e ftn $120
                                                  /--*  t521   byref  
                                                  +--*  t180   long   
               [000648] -A--GO------              *  STOREIND  long  
Addressing mode:
  Base
    N001 (  1,  1) [000178] ------------              *  LCL_VAR   ref    V02 loc0         u:2 $180
  + 48
Removing unused node:
  N002 (  1,  1) [000522] -c----------              *  CNS_INT   long   48 field offset Fseq[<>9__2] $1cc
New addressing mode node:
  N003 (  2,  2) [000523] ------------              *  LEA(b+48) byref 

lowering store lcl var/field (before):
N001 (  1,  1) [000193] ------------       t193 =    LCL_VAR   ref    V28 tmp17        u:2 (last use) $543
                                                  /--*  t193   ref    
N003 (  1,  3) [000199] DA----------              *  STORE_LCL_VAR ref    V26 tmp15        d:4

lowering store lcl var/field (after):
N001 (  1,  1) [000193] ------------       t193 =    LCL_VAR   ref    V28 tmp17        u:2 (last use) $543
                                                  /--*  t193   ref    
N003 (  1,  3) [000199] DA----------              *  STORE_LCL_VAR ref    V26 tmp15        d:4

lowering store lcl var/field (before):
N001 (  0,  0) [000602] ------------       t602 =    PHI_ARG   ref    V26 tmp15        u:4 $543
N002 (  0,  0) [000601] ------------       t601 =    PHI_ARG   ref    V26 tmp15        u:2 <l:$540, c:$456>
                                                  /--*  t602   ref    
                                                  +--*  t601   ref    
N003 (  0,  0) [000586] ------------       t586 = *  PHI       ref   
                                                  /--*  t586   ref    
N005 (  0,  0) [000587] DA----------              *  STORE_LCL_VAR ref    V26 tmp15        d:3

lowering store lcl var/field (after):
N001 (  0,  0) [000602] ------------       t602 =    PHI_ARG   ref    V26 tmp15        u:4 $543
N002 (  0,  0) [000601] ------------       t601 =    PHI_ARG   ref    V26 tmp15        u:2 <l:$540, c:$456>
                                                  /--*  t602   ref    
                                                  +--*  t601   ref    
N003 (  0,  0) [000586] ------------       t586 = *  PHI       ref   
                                                  /--*  t586   ref    
N005 (  0,  0) [000587] DA----------              *  STORE_LCL_VAR ref    V26 tmp15        d:3

lowering call (before):
N002 (  2, 10) [000169] H-----------       t169 =    CNS_INT(h) long   0xd1ffab1e token $123
                                                  /--*  t169   long   arg0 in rcx
N003 ( 16, 16) [000170] --C---------       t170 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $54b

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000524] ----------L-              *  ARGPLACE  long   $123

late:
======
lowering arg : N002 (  2, 10) [000169] H-----------              *  CNS_INT(h) long   0xd1ffab1e token $123
new node is :                [000707] ------------              *  PUTARG_REG long   REG rcx

lowering call (after):
N002 (  2, 10) [000169] H-----------       t169 =    CNS_INT(h) long   0xd1ffab1e token $123
                                                  /--*  t169   long   
               [000707] ------------       t707 = *  PUTARG_REG long   REG rcx
                                                  /--*  t707   long   arg0 in rcx
N003 ( 16, 16) [000170] --C---------       t170 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $54b

lowering store lcl var/field (before):
N002 (  2, 10) [000169] H-----------       t169 =    CNS_INT(h) long   0xd1ffab1e token $123
                                                  /--*  t169   long   
               [000707] ------------       t707 = *  PUTARG_REG long   REG rcx
                                                  /--*  t707   long   arg0 in rcx
N003 ( 16, 16) [000170] --C---------       t170 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $54b
                                                  /--*  t170   ref    
N005 ( 16, 16) [000172] DA----------              *  STORE_LCL_VAR ref    V27 tmp16        d:2

lowering store lcl var/field (after):
N002 (  2, 10) [000169] H-----------       t169 =    CNS_INT(h) long   0xd1ffab1e token $123
                                                  /--*  t169   long   
               [000707] ------------       t707 = *  PUTARG_REG long   REG rcx
                                                  /--*  t707   long   arg0 in rcx
N003 ( 16, 16) [000170] --C---------       t170 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $54b
                                                  /--*  t170   ref    
N005 ( 16, 16) [000172] DA----------              *  STORE_LCL_VAR ref    V27 tmp16        d:2

Addressing mode:
  Base
    N001 (  1,  1) [000173] ------------              *  LCL_VAR   ref    V27 tmp16        u:2 $54b
  + 8
Removing unused node:
  N002 (  1,  1) [000525] -c----------              *  CNS_INT   long   8 field offset Fseq[_target] $1c4
New addressing mode node:
  N003 (  2,  2) [000526] ------------              *  LEA(b+8)  byref 

Addressing mode:
  Base
    N001 (  1,  1) [000375] ------------              *  LCL_VAR   ref    V27 tmp16        u:2 $54b
  + 24
Removing unused node:
  N002 (  1,  1) [000527] -c----------              *  CNS_INT   long   24 field offset Fseq[_methodPtr] $1c5
New addressing mode node:
  N003 (  2,  2) [000528] ------------              *  LEA(b+24) byref 

Lower of StoreInd didn't mark the node as self contained for reason: 4
N001 (  1,  1) [000375] ------------       t375 =    LCL_VAR   ref    V27 tmp16        u:2 $54b
                                                  /--*  t375   ref    
N003 (  2,  2) [000528] ------------       t528 = *  LEA(b+24) byref 
N005 (  2, 10) [000168] H-----------       t168 =    CNS_INT(h) long   0xd1ffab1e ftn $125
                                                  /--*  t528   byref  
                                                  +--*  t168   long   
               [000651] -A--GO------              *  STOREIND  long  
lowering call (before):
N005 (  1,  1) [000165] ------------       t165 =    LCL_VAR   ref    V25 tmp14        u:2 (last use) $1ab
N006 (  1,  1) [000166] ------------       t166 =    LCL_VAR   ref    V26 tmp15        u:3 (last use) $258
N007 (  1,  1) [000175] ------------       t175 =    LCL_VAR   ref    V27 tmp16        u:2 (last use) $54b
                                                  /--*  t165   ref    arg0 in rcx
                                                  +--*  t166   ref    arg1 in rdx
                                                  +--*  t175   ref    arg2 in r8
N008 ( 17, 11) [000176] --CXG-------       t176 = *  CALL      ref    SolutionAnalyzer.IPC.CreateSession $464

objp:
======

args:
======
lowering arg : N002 (  0,  0) [000529] ----------L-              *  ARGPLACE  ref    $1ab
lowering arg : N003 (  0,  0) [000530] ----------L-              *  ARGPLACE  ref    $258
lowering arg : N004 (  0,  0) [000531] ----------L-              *  ARGPLACE  ref    $54b

late:
======
lowering arg : N005 (  1,  1) [000165] ------------              *  LCL_VAR   ref    V25 tmp14        u:2 (last use) $1ab
new node is :                [000708] ------------              *  PUTARG_REG ref    REG rcx

lowering arg : N006 (  1,  1) [000166] ------------              *  LCL_VAR   ref    V26 tmp15        u:3 (last use) $258
new node is :                [000709] ------------              *  PUTARG_REG ref    REG rdx

lowering arg : N007 (  1,  1) [000175] ------------              *  LCL_VAR   ref    V27 tmp16        u:2 (last use) $54b
new node is :                [000710] ------------              *  PUTARG_REG ref    REG r8

lowering call (after):
N005 (  1,  1) [000165] ------------       t165 =    LCL_VAR   ref    V25 tmp14        u:2 (last use) $1ab
                                                  /--*  t165   ref    
               [000708] ------------       t708 = *  PUTARG_REG ref    REG rcx
N006 (  1,  1) [000166] ------------       t166 =    LCL_VAR   ref    V26 tmp15        u:3 (last use) $258
                                                  /--*  t166   ref    
               [000709] ------------       t709 = *  PUTARG_REG ref    REG rdx
N007 (  1,  1) [000175] ------------       t175 =    LCL_VAR   ref    V27 tmp16        u:2 (last use) $54b
                                                  /--*  t175   ref    
               [000710] ------------       t710 = *  PUTARG_REG ref    REG r8
                                                  /--*  t708   ref    arg0 in rcx
                                                  +--*  t709   ref    arg1 in rdx
                                                  +--*  t710   ref    arg2 in r8
N008 ( 17, 11) [000176] --CXG-------       t176 = *  CALL      ref    SolutionAnalyzer.IPC.CreateSession $464

lowering store lcl var/field (before):
N005 (  1,  1) [000165] ------------       t165 =    LCL_VAR   ref    V25 tmp14        u:2 (last use) $1ab
                                                  /--*  t165   ref    
               [000708] ------------       t708 = *  PUTARG_REG ref    REG rcx
N006 (  1,  1) [000166] ------------       t166 =    LCL_VAR   ref    V26 tmp15        u:3 (last use) $258
                                                  /--*  t166   ref    
               [000709] ------------       t709 = *  PUTARG_REG ref    REG rdx
N007 (  1,  1) [000175] ------------       t175 =    LCL_VAR   ref    V27 tmp16        u:2 (last use) $54b
                                                  /--*  t175   ref    
               [000710] ------------       t710 = *  PUTARG_REG ref    REG r8
                                                  /--*  t708   ref    arg0 in rcx
                                                  +--*  t709   ref    arg1 in rdx
                                                  +--*  t710   ref    arg2 in r8
N008 ( 17, 11) [000176] --CXG-------       t176 = *  CALL      ref    SolutionAnalyzer.IPC.CreateSession $464
                                                  /--*  t176   ref    
N010 ( 17, 11) [000533] DA-XG-----L-              *  STORE_LCL_VAR ref    V42 tmp31        d:2

lowering store lcl var/field (after):
N005 (  1,  1) [000165] ------------       t165 =    LCL_VAR   ref    V25 tmp14        u:2 (last use) $1ab
                                                  /--*  t165   ref    
               [000708] ------------       t708 = *  PUTARG_REG ref    REG rcx
N006 (  1,  1) [000166] ------------       t166 =    LCL_VAR   ref    V26 tmp15        u:3 (last use) $258
                                                  /--*  t166   ref    
               [000709] ------------       t709 = *  PUTARG_REG ref    REG rdx
N007 (  1,  1) [000175] ------------       t175 =    LCL_VAR   ref    V27 tmp16        u:2 (last use) $54b
                                                  /--*  t175   ref    
               [000710] ------------       t710 = *  PUTARG_REG ref    REG r8
                                                  /--*  t708   ref    arg0 in rcx
                                                  +--*  t709   ref    arg1 in rdx
                                                  +--*  t710   ref    arg2 in r8
N008 ( 17, 11) [000176] --CXG-------       t176 = *  CALL      ref    SolutionAnalyzer.IPC.CreateSession $464
                                                  /--*  t176   ref    
N010 ( 17, 11) [000533] DA-XG-----L-              *  STORE_LCL_VAR ref    V42 tmp31        d:2

lowering call (before):
N005 (  1,  1) [000165] ------------       t165 =    LCL_VAR   ref    V25 tmp14        u:2 (last use) $1ab
                                                  /--*  t165   ref    
               [000708] ------------       t708 = *  PUTARG_REG ref    REG rcx
N006 (  1,  1) [000166] ------------       t166 =    LCL_VAR   ref    V26 tmp15        u:3 (last use) $258
                                                  /--*  t166   ref    
               [000709] ------------       t709 = *  PUTARG_REG ref    REG rdx
N007 (  1,  1) [000175] ------------       t175 =    LCL_VAR   ref    V27 tmp16        u:2 (last use) $54b
                                                  /--*  t175   ref    
               [000710] ------------       t710 = *  PUTARG_REG ref    REG r8
                                                  /--*  t708   ref    arg0 in rcx
                                                  +--*  t709   ref    arg1 in rdx
                                                  +--*  t710   ref    arg2 in r8
N008 ( 17, 11) [000176] --CXG-------       t176 = *  CALL      ref    SolutionAnalyzer.IPC.CreateSession $464
                                                  /--*  t176   ref    
N010 ( 17, 11) [000533] DA-XG-----L-              *  STORE_LCL_VAR ref    V42 tmp31        d:2
N011 (  1,  1) [000534] ------------       t534 =    LCL_VAR   ref    V42 tmp31        u:2 (last use) $464
N012 (  1,  1) [000164] ------------       t164 =    LCL_VAR   ref    V24 tmp13        u:2 (last use) <l:$1b9, c:$454>
                                                  /--*  t534   ref    arg1 in rdx
                                                  +--*  t164   ref    this in rcx
N013 ( 36, 21) [000177] --CXG-------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue $VN.Void

objp:
======
lowering arg : N001 (  0,  0) [000535] ----------L-              *  ARGPLACE  ref    $460

args:
======
lowering arg : N010 ( 17, 11) [000533] DA-XG-----L-              *  STORE_LCL_VAR ref    V42 tmp31        d:2

late:
======
lowering arg : N011 (  1,  1) [000534] ------------              *  LCL_VAR   ref    V42 tmp31        u:2 (last use) $464
new node is :                [000711] ------------              *  PUTARG_REG ref    REG rdx

lowering arg : N012 (  1,  1) [000164] ------------              *  LCL_VAR   ref    V24 tmp13        u:2 (last use) <l:$1b9, c:$454>
new node is :                [000712] ------------              *  PUTARG_REG ref    REG rcx

lowering call (after):
N005 (  1,  1) [000165] ------------       t165 =    LCL_VAR   ref    V25 tmp14        u:2 (last use) $1ab
                                                  /--*  t165   ref    
               [000708] ------------       t708 = *  PUTARG_REG ref    REG rcx
N006 (  1,  1) [000166] ------------       t166 =    LCL_VAR   ref    V26 tmp15        u:3 (last use) $258
                                                  /--*  t166   ref    
               [000709] ------------       t709 = *  PUTARG_REG ref    REG rdx
N007 (  1,  1) [000175] ------------       t175 =    LCL_VAR   ref    V27 tmp16        u:2 (last use) $54b
                                                  /--*  t175   ref    
               [000710] ------------       t710 = *  PUTARG_REG ref    REG r8
                                                  /--*  t708   ref    arg0 in rcx
                                                  +--*  t709   ref    arg1 in rdx
                                                  +--*  t710   ref    arg2 in r8
N008 ( 17, 11) [000176] --CXG-------       t176 = *  CALL      ref    SolutionAnalyzer.IPC.CreateSession $464
                                                  /--*  t176   ref    
N010 ( 17, 11) [000533] DA-XG-----L-              *  STORE_LCL_VAR ref    V42 tmp31        d:2
N011 (  1,  1) [000534] ------------       t534 =    LCL_VAR   ref    V42 tmp31        u:2 (last use) $464
                                                  /--*  t534   ref    
               [000711] ------------       t711 = *  PUTARG_REG ref    REG rdx
N012 (  1,  1) [000164] ------------       t164 =    LCL_VAR   ref    V24 tmp13        u:2 (last use) <l:$1b9, c:$454>
                                                  /--*  t164   ref    
               [000712] ------------       t712 = *  PUTARG_REG ref    REG rcx
                                                  /--*  t711   ref    arg1 in rdx
                                                  +--*  t712   ref    this in rcx
N013 ( 36, 21) [000177] --CXG-------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue $VN.Void

lowering call (before):
N003 (  1,  1) [000080] ------------        t80 =    LCL_VAR   ref    V06 loc4         u:2 $164
N004 (  2, 10) [000536] H-----------       t536 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
                                                  /--*  t80    ref    this in rcx
                                                  +--*  t536   long   arg1 in r11
N005 ( 23, 21) [000081] --CXG-------        t81 = *  CALLV stub int    System.Collections.IEnumerator.MoveNext $5c0

objp:
======
lowering arg : N001 (  0,  0) [000537] ----------L-              *  ARGPLACE  ref    $468

args:
======
lowering arg : N002 (  0,  0) [000538] ----------L-              *  ARGPLACE  long   $164

late:
======
lowering arg : N003 (  1,  1) [000080] ------------              *  LCL_VAR   ref    V06 loc4         u:2 $164
new node is :                [000713] ------------              *  PUTARG_REG ref    REG rcx

lowering arg : N004 (  2, 10) [000536] H-----------              *  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
new node is :                [000714] ------------              *  PUTARG_REG long   REG r11

results of lowering call:
N001 (  2, 10) [000715] H-----------       t715 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t715   long   
N002 (  4, 12) [000716] ------------       t716 = *  IND       long  
lowering call (after):
N003 (  1,  1) [000080] ------------        t80 =    LCL_VAR   ref    V06 loc4         u:2 $164
                                                  /--*  t80    ref    
               [000713] ------------       t713 = *  PUTARG_REG ref    REG rcx
N004 (  2, 10) [000536] H-----------       t536 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
                                                  /--*  t536   long   
               [000714] ------------       t714 = *  PUTARG_REG long   REG r11
N001 (  2, 10) [000715] Hc----------       t715 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t715   long   
N002 (  4, 12) [000716] -c----------       t716 = *  IND       long   REG NA
                                                  /--*  t713   ref    this in rcx
                                                  +--*  t714   long   arg1 in r11
                                                  +--*  t716   long   control expr
N005 ( 23, 21) [000081] --CXG-------        t81 = *  CALLV stub int    System.Collections.IEnumerator.MoveNext $5c0

lowering call (before):
N003 (  1,  1) [000436] ------------       t436 =    LCL_VAR   ref    V06 loc4         u:2 (last use) $164
N004 (  2, 10) [000539] H-----------       t539 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127
                                                  /--*  t436   ref    this in rcx
                                                  +--*  t539   long   arg1 in r11
N005 ( 23, 21) [000435] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose $VN.Void

objp:
======
lowering arg : N001 (  0,  0) [000540] ----------L-              *  ARGPLACE  ref    $16c

args:
======
lowering arg : N002 (  0,  0) [000541] ----------L-              *  ARGPLACE  long   $164

late:
======
lowering arg : N003 (  1,  1) [000436] ------------              *  LCL_VAR   ref    V06 loc4         u:2 (last use) $164
new node is :                [000717] ------------              *  PUTARG_REG ref    REG rcx

lowering arg : N004 (  2, 10) [000539] H-----------              *  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127
new node is :                [000718] ------------              *  PUTARG_REG long   REG r11

results of lowering call:
N001 (  2, 10) [000719] H-----------       t719 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t719   long   
N002 (  4, 12) [000720] ------------       t720 = *  IND       long  
lowering call (after):
N003 (  1,  1) [000436] ------------       t436 =    LCL_VAR   ref    V06 loc4         u:2 (last use) $164
                                                  /--*  t436   ref    
               [000717] ------------       t717 = *  PUTARG_REG ref    REG rcx
N004 (  2, 10) [000539] H-----------       t539 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127
                                                  /--*  t539   long   
               [000718] ------------       t718 = *  PUTARG_REG long   REG r11
N001 (  2, 10) [000719] Hc----------       t719 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t719   long   
N002 (  4, 12) [000720] -c----------       t720 = *  IND       long   REG NA
                                                  /--*  t717   ref    this in rcx
                                                  +--*  t718   long   arg1 in r11
                                                  +--*  t720   long   control expr
N005 ( 23, 21) [000435] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose $VN.Void

Addressing mode:
  Base
    N001 (  1,  1) [000212] ------------              *  LCL_VAR   ref    V02 loc0         u:2 $180
  + 8
Removing unused node:
  N002 (  1,  1) [000545] -c----------              *  CNS_INT   long   8 field offset Fseq[queuedAnalyzers] $1c4
New addressing mode node:
  N003 (  2,  2) [000546] ------------              *  LEA(b+8)  byref 

lowering store lcl var/field (before):
N001 (  1,  1) [000212] ------------       t212 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t212   ref    
N003 (  2,  2) [000546] -c----------       t546 = *  LEA(b+8)  byref 
                                                  /--*  t546   byref  
N004 (  4,  4) [000213] n---GO------       t213 = *  IND       ref    <l:$569, c:$568>
                                                  /--*  t213   ref    
N006 (  4,  4) [000384] DA--GO------              *  STORE_LCL_VAR ref    V35 tmp24        d:2

lowering store lcl var/field (after):
N001 (  1,  1) [000212] ------------       t212 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t212   ref    
N003 (  2,  2) [000546] -c----------       t546 = *  LEA(b+8)  byref 
                                                  /--*  t546   byref  
N004 (  4,  4) [000213] n---GO------       t213 = *  IND       ref    <l:$569, c:$568>
                                                  /--*  t213   ref    
N006 (  4,  4) [000384] DA--GO------              *  STORE_LCL_VAR ref    V35 tmp24        d:2

Addressing mode:
  Base
    N001 (  1,  1) [000381] ------------              *  LCL_VAR   ref    V35 tmp24        u:2 (last use) <l:$567, c:$16e>
  + 24
Removing unused node:
  N002 (  1,  1) [000549] -c----------              *  CNS_INT   long   24 field offset Fseq[_size] $1c5
New addressing mode node:
  N003 (  2,  2) [000550] ------------              *  LEA(b+24) byref 

Addressing mode:
  Base
    N005 (  1,  1) [000211] ------------              *  LCL_VAR   ref    V02 loc0         u:2 $180
  + 60
Removing unused node:
  N006 (  1,  1) [000547] -c----------              *  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1
New addressing mode node:
  N007 (  2,  2) [000548] ------------              *  LEA(b+60) byref 

Lower of StoreInd didn't mark the node as self contained for reason: 4
N001 (  1,  1) [000381] ------------       t381 =    LCL_VAR   ref    V35 tmp24        u:2 (last use) <l:$567, c:$16e>
                                                  /--*  t381   ref    
N003 (  2,  2) [000550] -c----------       t550 = *  LEA(b+24) byref 
                                                  /--*  t550   byref  
N004 (  4,  4) [000382] ---XG-------       t382 = *  IND       int    <l:$29b, c:$29a>
N005 (  1,  1) [000211] ------------       t211 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t211   ref    
N007 (  2,  2) [000548] ------------       t548 = *  LEA(b+60) byref 
                                                  /--*  t548   byref  
                                                  +--*  t382   int    
               [000655] -A-XGO------              *  STOREIND  int   
lowering call (before):
N002 (  2, 10) [000221] H-----------       t221 =    CNS_INT(h) long   0xd1ffab1e method $12b
                                                  /--*  t221   long   arg0 in rcx
N003 ( 16, 16) [000222] --C---------       t222 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $56c

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000551] ----------L-              *  ARGPLACE  long   $12b

late:
======
lowering arg : N002 (  2, 10) [000221] H-----------              *  CNS_INT(h) long   0xd1ffab1e method $12b
new node is :                [000721] ------------              *  PUTARG_REG long   REG rcx

lowering call (after):
N002 (  2, 10) [000221] H-----------       t221 =    CNS_INT(h) long   0xd1ffab1e method $12b
                                                  /--*  t221   long   
               [000721] ------------       t721 = *  PUTARG_REG long   REG rcx
                                                  /--*  t721   long   arg0 in rcx
N003 ( 16, 16) [000222] --C---------       t222 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $56c

lowering store lcl var/field (before):
N002 (  2, 10) [000221] H-----------       t221 =    CNS_INT(h) long   0xd1ffab1e method $12b
                                                  /--*  t221   long   
               [000721] ------------       t721 = *  PUTARG_REG long   REG rcx
                                                  /--*  t721   long   arg0 in rcx
N003 ( 16, 16) [000222] --C---------       t222 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $56c
                                                  /--*  t222   ref    
N005 ( 16, 16) [000224] DA----------              *  STORE_LCL_VAR ref    V29 tmp18        d:2

lowering store lcl var/field (after):
N002 (  2, 10) [000221] H-----------       t221 =    CNS_INT(h) long   0xd1ffab1e method $12b
                                                  /--*  t221   long   
               [000721] ------------       t721 = *  PUTARG_REG long   REG rcx
                                                  /--*  t721   long   arg0 in rcx
N003 ( 16, 16) [000222] --C---------       t222 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $56c
                                                  /--*  t222   ref    
N005 ( 16, 16) [000224] DA----------              *  STORE_LCL_VAR ref    V29 tmp18        d:2

Addressing mode:
  Base
    N001 (  1,  1) [000219] ------------              *  LCL_VAR   ref    V02 loc0         u:2 $180
  + 60
Removing unused node:
  N002 (  1,  1) [000552] -c----------              *  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1
New addressing mode node:
  N003 (  2,  2) [000553] ------------              *  LEA(b+60) byref 

lowering store lcl var/field (before):
N001 (  1,  1) [000219] ------------       t219 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t219   ref    
N003 (  2,  2) [000553] -c----------       t553 = *  LEA(b+60) byref 
                                                  /--*  t553   byref  
N004 (  4,  4) [000220] n---GO------       t220 = *  IND       int    <l:$2a3, c:$2a2>
                                                  /--*  t220   int    
N006 (  4,  4) [000402] DA--GO------              *  STORE_LCL_VAR int    V37 tmp26        d:2

lowering store lcl var/field (after):
N001 (  1,  1) [000219] ------------       t219 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t219   ref    
N003 (  2,  2) [000553] -c----------       t553 = *  LEA(b+60) byref 
                                                  /--*  t553   byref  
N004 (  4,  4) [000220] n---GO------       t220 = *  IND       int    <l:$2a3, c:$2a2>
                                                  /--*  t220   int    
N006 (  4,  4) [000402] DA--GO------              *  STORE_LCL_VAR int    V37 tmp26        d:2

lowering call (before):
N002 (  2, 10) [000386] H-----------       t386 =    CNS_INT(h) long   0xd1ffab1e token $12c
                                                  /--*  t386   long   arg0 in rcx
N003 ( 16, 16) [000387] --C---------       t387 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $56d

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000554] ----------L-              *  ARGPLACE  long   $12c

late:
======
lowering arg : N002 (  2, 10) [000386] H-----------              *  CNS_INT(h) long   0xd1ffab1e token $12c
new node is :                [000722] ------------              *  PUTARG_REG long   REG rcx

lowering call (after):
N002 (  2, 10) [000386] H-----------       t386 =    CNS_INT(h) long   0xd1ffab1e token $12c
                                                  /--*  t386   long   
               [000722] ------------       t722 = *  PUTARG_REG long   REG rcx
                                                  /--*  t722   long   arg0 in rcx
N003 ( 16, 16) [000387] --C---------       t387 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $56d

lowering store lcl var/field (before):
N002 (  2, 10) [000386] H-----------       t386 =    CNS_INT(h) long   0xd1ffab1e token $12c
                                                  /--*  t386   long   
               [000722] ------------       t722 = *  PUTARG_REG long   REG rcx
                                                  /--*  t722   long   arg0 in rcx
N003 ( 16, 16) [000387] --C---------       t387 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $56d
                                                  /--*  t387   ref    
N005 ( 16, 16) [000389] DA----------              *  STORE_LCL_VAR ref    V36 tmp25        d:2

lowering store lcl var/field (after):
N002 (  2, 10) [000386] H-----------       t386 =    CNS_INT(h) long   0xd1ffab1e token $12c
                                                  /--*  t386   long   
               [000722] ------------       t722 = *  PUTARG_REG long   REG rcx
                                                  /--*  t722   long   arg0 in rcx
N003 ( 16, 16) [000387] --C---------       t387 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $56d
                                                  /--*  t387   ref    
N005 ( 16, 16) [000389] DA----------              *  STORE_LCL_VAR ref    V36 tmp25        d:2

lowering call (before):
N004 (  1,  1) [000390] ------------       t390 =    LCL_VAR   ref    V36 tmp25        u:2 $56d
N005 (  1,  1) [000404] ------------       t404 =    CNS_INT   int    0 $40
N006 (  1,  1) [000405] ------------       t405 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t390   ref    this in rcx
                                                  +--*  t404   int    arg1 in rdx
                                                  +--*  t405   ref    arg2 in r8
N007 ( 17, 12) [000406] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor $VN.Void

objp:
======
lowering arg : N001 (  0,  0) [000555] ----------L-              *  ARGPLACE  ref    $174

args:
======
lowering arg : N002 (  0,  0) [000556] ----------L-              *  ARGPLACE  int    $56d
lowering arg : N003 (  0,  0) [000557] ----------L-              *  ARGPLACE  ref    $40

late:
======
lowering arg : N004 (  1,  1) [000390] ------------              *  LCL_VAR   ref    V36 tmp25        u:2 $56d
new node is :                [000723] ------------              *  PUTARG_REG ref    REG rcx

lowering arg : N005 (  1,  1) [000404] ------------              *  CNS_INT   int    0 $40
new node is :                [000724] ------------              *  PUTARG_REG int    REG rdx

lowering arg : N006 (  1,  1) [000405] ------------              *  CNS_INT   ref    null $VN.Null
new node is :                [000725] ------------              *  PUTARG_REG ref    REG r8

lowering call (after):
N004 (  1,  1) [000390] ------------       t390 =    LCL_VAR   ref    V36 tmp25        u:2 $56d
                                                  /--*  t390   ref    
               [000723] ------------       t723 = *  PUTARG_REG ref    REG rcx
N005 (  1,  1) [000404] ------------       t404 =    CNS_INT   int    0 $40
                                                  /--*  t404   int    
               [000724] ------------       t724 = *  PUTARG_REG int    REG rdx
N006 (  1,  1) [000405] ------------       t405 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t405   ref    
               [000725] ------------       t725 = *  PUTARG_REG ref    REG r8
                                                  /--*  t723   ref    this in rcx
                                                  +--*  t724   int    arg1 in rdx
                                                  +--*  t725   ref    arg2 in r8
N007 ( 17, 12) [000406] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor $VN.Void

Addressing mode:
  Base
    N001 (  1,  1) [000225] ------------              *  LCL_VAR   ref    V29 tmp18        u:2 $56c
  + 8
Removing unused node:
  N002 (  1,  1) [000558] -c----------              *  CNS_INT   long   8 field offset Fseq[_workItems] $1c4
New addressing mode node:
  N003 (  2,  2) [000559] ------------              *  LEA(b+8)  byref 

Addressing mode:
  Base
    N001 (  1,  1) [000397] ------------              *  LCL_VAR   ref    V29 tmp18        u:2 $56c
  + 16
Removing unused node:
  N002 (  1,  1) [000560] -c----------              *  CNS_INT   long   16 field offset Fseq[_workItemsToComplete] $1c7
New addressing mode node:
  N003 (  2,  2) [000561] ------------              *  LEA(b+16) byref 

Lower of StoreInd didn't mark the node as self contained for reason: 4
N001 (  1,  1) [000397] ------------       t397 =    LCL_VAR   ref    V29 tmp18        u:2 $56c
                                                  /--*  t397   ref    
N003 (  2,  2) [000561] ------------       t561 = *  LEA(b+16) byref 
N005 (  1,  1) [000398] ------------       t398 =    LCL_VAR   int    V37 tmp26        u:2 (last use) <l:$299, c:$30c>
                                                  /--*  t561   byref  
                                                  +--*  t398   int    
               [000658] -A--GO------              *  STOREIND  int   
Addressing mode:
  Base
    N001 (  1,  1) [000218] ------------              *  LCL_VAR   ref    V02 loc0         u:2 $180
  + 16
Removing unused node:
  N002 (  1,  1) [000562] -c----------              *  CNS_INT   long   16 field offset Fseq[progressReporter] $1c7
New addressing mode node:
  N003 (  2,  2) [000563] ------------              *  LEA(b+16) byref 

lowering store lcl var/field (before):
N001 (  1,  1) [000230] ------------       t230 =    CNS_INT   int    0 $40
                                                  /--*  t230   int    
N003 (  1,  3) [000232] DA----------              *  STORE_LCL_VAR int    V10 loc8         d:2

lowering store lcl var/field (after):
N001 (  1,  1) [000230] ------------       t230 =    CNS_INT   int    0 $40
                                                  /--*  t230   int    
N003 (  1,  3) [000232] DA----------              *  STORE_LCL_VAR int    V10 loc8         d:2

lowering call (before):
N002 (  1,  1) [000242] ------------       t242 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t242   ref    this in rcx
N003 ( 15,  8) [000243] --CXG-------              *  CALL      void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0 $VN.Void

objp:
======
lowering arg : N001 (  0,  0) [000564] ----------L-              *  ARGPLACE  ref    $641

args:
======

late:
======
lowering arg : N002 (  1,  1) [000242] ------------              *  LCL_VAR   ref    V02 loc0         u:2 $180
new node is :                [000726] ------------              *  PUTARG_REG ref    REG rcx

lowering call (after):
N002 (  1,  1) [000242] ------------       t242 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t242   ref    
               [000726] ------------       t726 = *  PUTARG_REG ref    REG rcx
                                                  /--*  t726   ref    this in rcx
N003 ( 15,  8) [000243] --CXG-------              *  CALL      void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0 $VN.Void

lowering store lcl var/field (before):
N001 (  1,  1) [000244] ------------       t244 =    LCL_VAR   int    V10 loc8         u:3 (last use) $2ca
N002 (  1,  1) [000245] -c----------       t245 =    CNS_INT   int    1 $41
                                                  /--*  t244   int    
                                                  +--*  t245   int    
N003 (  3,  3) [000246] ------------       t246 = *  ADD       int    $2ad
                                                  /--*  t246   int    
N005 (  3,  3) [000248] DA----------              *  STORE_LCL_VAR int    V10 loc8         d:4

lowering store lcl var/field (after):
N001 (  1,  1) [000244] ------------       t244 =    LCL_VAR   int    V10 loc8         u:3 (last use) $2ca
N002 (  1,  1) [000245] -c----------       t245 =    CNS_INT   int    1 $41
                                                  /--*  t244   int    
                                                  +--*  t245   int    
N003 (  3,  3) [000246] ------------       t246 = *  ADD       int    $2ad
                                                  /--*  t246   int    
N005 (  3,  3) [000248] DA----------              *  STORE_LCL_VAR int    V10 loc8         d:4

lowering store lcl var/field (before):
N001 (  0,  0) [000598] ------------       t598 =    PHI_ARG   int    V10 loc8         u:4
N002 (  0,  0) [000597] ------------       t597 =    PHI_ARG   int    V10 loc8         u:2 $40
                                                  /--*  t598   int    
                                                  +--*  t597   int    
N003 (  0,  0) [000580] ------------       t580 = *  PHI       int   
                                                  /--*  t580   int    
N005 (  0,  0) [000581] DA----------              *  STORE_LCL_VAR int    V10 loc8         d:3

lowering store lcl var/field (after):
N001 (  0,  0) [000598] ------------       t598 =    PHI_ARG   int    V10 loc8         u:4
N002 (  0,  0) [000597] ------------       t597 =    PHI_ARG   int    V10 loc8         u:2 $40
                                                  /--*  t598   int    
                                                  +--*  t597   int    
N003 (  0,  0) [000580] ------------       t580 = *  PHI       int   
                                                  /--*  t580   int    
N005 (  0,  0) [000581] DA----------              *  STORE_LCL_VAR int    V10 loc8         d:3

Addressing mode:
  Base
    N001 (  1,  1) [000236] ------------              *  LCL_VAR   ref    V02 loc0         u:2 $180
  + 60
Removing unused node:
  N002 (  1,  1) [000565] -c----------              *  CNS_INT   long   60 field offset Fseq[analyzerCount] $1c1
New addressing mode node:
  N003 (  2,  2) [000566] ------------              *  LEA(b+60) byref 

lowering store lcl var/field (before):
N001 (  1,  1) [000236] ------------       t236 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t236   ref    
N003 (  2,  2) [000566] -c----------       t566 = *  LEA(b+60) byref 
                                                  /--*  t566   byref  
N004 (  4,  4) [000237] n---GO------       t237 = *  IND       int    <l:$2a9, c:$2a8>
                                                  /--*  t237   int    
N006 (  4,  4) [000424] DA--GO------              *  STORE_LCL_VAR int    V39 tmp28        d:2

lowering store lcl var/field (after):
N001 (  1,  1) [000236] ------------       t236 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t236   ref    
N003 (  2,  2) [000566] -c----------       t566 = *  LEA(b+60) byref 
                                                  /--*  t566   byref  
N004 (  4,  4) [000237] n---GO------       t237 = *  IND       int    <l:$2a9, c:$2a8>
                                                  /--*  t237   int    
N006 (  4,  4) [000424] DA--GO------              *  STORE_LCL_VAR int    V39 tmp28        d:2

lowering store lcl var/field (before):
N001 (  1,  1) [000419] ------------       t419 =    LCL_VAR   int    V39 tmp28        u:2 (last use) <l:$2a7, c:$680>
                                                  /--*  t419   int    
N003 (  1,  3) [000421] DA----------              *  STORE_LCL_VAR int    V38 tmp27        d:4

lowering store lcl var/field (after):
N001 (  1,  1) [000419] ------------       t419 =    LCL_VAR   int    V39 tmp28        u:2 (last use) <l:$2a7, c:$680>
                                                  /--*  t419   int    
N003 (  1,  3) [000421] DA----------              *  STORE_LCL_VAR int    V38 tmp27        d:4

lowering store lcl var/field (before):
N001 (  1,  1) [000415] ------------       t415 =    CNS_INT   int    8 $57
                                                  /--*  t415   int    
N003 (  1,  3) [000417] DA----------              *  STORE_LCL_VAR int    V38 tmp27        d:3

lowering store lcl var/field (after):
N001 (  1,  1) [000415] -c----------       t415 =    CNS_INT   int    8 $57
                                                  /--*  t415   int    
N003 (  1,  3) [000417] DA----------              *  STORE_LCL_VAR int    V38 tmp27        d:3

lowering store lcl var/field (before):
N001 (  0,  0) [000600] ------------       t600 =    PHI_ARG   int    V38 tmp27        u:4 <l:$2a7, c:$680>
N002 (  0,  0) [000599] ------------       t599 =    PHI_ARG   int    V38 tmp27        u:3 $57
                                                  /--*  t600   int    
                                                  +--*  t599   int    
N003 (  0,  0) [000583] ------------       t583 = *  PHI       int   
                                                  /--*  t583   int    
N005 (  0,  0) [000584] DA----------              *  STORE_LCL_VAR int    V38 tmp27        d:2

lowering store lcl var/field (after):
N001 (  0,  0) [000600] ------------       t600 =    PHI_ARG   int    V38 tmp27        u:4 <l:$2a7, c:$680>
N002 (  0,  0) [000599] ------------       t599 =    PHI_ARG   int    V38 tmp27        u:3 $57
                                                  /--*  t600   int    
                                                  +--*  t599   int    
N003 (  0,  0) [000583] ------------       t583 = *  PHI       int   
                                                  /--*  t583   int    
N005 (  0,  0) [000584] DA----------              *  STORE_LCL_VAR int    V38 tmp27        d:2

Addressing mode:
  Base
    N001 (  1,  1) [000249] ------------              *  LCL_VAR   ref    V02 loc0         u:2 (last use) $180
  + 24
Removing unused node:
  N002 (  1,  1) [000567] -c----------              *  CNS_INT   long   24 field offset Fseq[allAnalyzersHaveRun] $1c5
New addressing mode node:
  N003 (  2,  2) [000568] ------------              *  LEA(b+24) byref 

lowering store lcl var/field (before):
N001 (  1,  1) [000249] ------------       t249 =    LCL_VAR   ref    V02 loc0         u:2 (last use) $180
                                                  /--*  t249   ref    
N003 (  2,  2) [000568] -c----------       t568 = *  LEA(b+24) byref 
                                                  /--*  t568   byref  
N004 (  4,  4) [000250] n---GO------       t250 = *  IND       ref    <l:$575, c:$574>
                                                  /--*  t250   ref    
N006 (  4,  4) [000429] DA--GO------              *  STORE_LCL_VAR ref    V40 tmp29        d:2

lowering store lcl var/field (after):
N001 (  1,  1) [000249] ------------       t249 =    LCL_VAR   ref    V02 loc0         u:2 (last use) $180
                                                  /--*  t249   ref    
N003 (  2,  2) [000568] -c----------       t568 = *  LEA(b+24) byref 
                                                  /--*  t568   byref  
N004 (  4,  4) [000250] n---GO------       t250 = *  IND       ref    <l:$575, c:$574>
                                                  /--*  t250   ref    
N006 (  4,  4) [000429] DA--GO------              *  STORE_LCL_VAR ref    V40 tmp29        d:2

Addressing mode:
  Base
    N001 (  1,  1) [000426] ------------              *  LCL_VAR   ref    V40 tmp29        u:2 (last use) <l:$573, c:$177>
  + 8
Removing unused node:
  N002 (  1,  1) [000569] -c----------              *  CNS_INT   long   8 field offset Fseq[_task] $1c4
New addressing mode node:
  N003 (  2,  2) [000570] ------------              *  LEA(b+8)  byref 

lowering GT_RETURN
N005 (  5,  5) [000253] ---XG-------              *  RETURN    ref    $17a
============lowering call (before):
N001 ( 14,  5) [000672] --CXG-------                 CALL help void   HELPER.CORINFO_HELP_RNGCHKFAIL

objp:
======

args:
======

late:
======
lowering call (after):
N001 ( 14,  5) [000672] --CXG-------                 CALL help void   HELPER.CORINFO_HELP_RNGCHKFAIL

lowering call (before):
N003 (  1,  1) [000259] ------------       t259 =    LCL_VAR   ref    V06 loc4         u:2 (last use) $164
N004 (  2, 10) [000542] H-----------       t542 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127
                                                  /--*  t259   ref    this in rcx
                                                  +--*  t542   long   arg1 in r11
N005 ( 23, 21) [000260] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose $VN.Void

objp:
======
lowering arg : N001 (  0,  0) [000543] ----------L-              *  ARGPLACE  ref    $16a

args:
======
lowering arg : N002 (  0,  0) [000544] ----------L-              *  ARGPLACE  long   $164

late:
======
lowering arg : N003 (  1,  1) [000259] ------------              *  LCL_VAR   ref    V06 loc4         u:2 (last use) $164
new node is :                [000727] ------------              *  PUTARG_REG ref    REG rcx

lowering arg : N004 (  2, 10) [000542] H-----------              *  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127
new node is :                [000728] ------------              *  PUTARG_REG long   REG r11

results of lowering call:
N001 (  2, 10) [000729] H-----------       t729 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t729   long   
N002 (  4, 12) [000730] ------------       t730 = *  IND       long  
lowering call (after):
N003 (  1,  1) [000259] ------------       t259 =    LCL_VAR   ref    V06 loc4         u:2 (last use) $164
                                                  /--*  t259   ref    
               [000727] ------------       t727 = *  PUTARG_REG ref    REG rcx
N004 (  2, 10) [000542] H-----------       t542 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127
                                                  /--*  t542   long   
               [000728] ------------       t728 = *  PUTARG_REG long   REG r11
N001 (  2, 10) [000729] Hc----------       t729 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t729   long   
N002 (  4, 12) [000730] -c----------       t730 = *  IND       long   REG NA
                                                  /--*  t727   ref    this in rcx
                                                  +--*  t728   long   arg1 in r11
                                                  +--*  t730   long   control expr
N005 ( 23, 21) [000260] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose $VN.Void

Lower has completed modifying nodes.

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck LIR 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB13 ( cond ) T0      try {       keep i try label hascall gcsafe LIR 
BB03 [0002]  2  0    BB02,BB09             4     0 [072..08B)-> BB05 ( cond ) T0                  i Loop label target hascall gcsafe newobj bwd bwd-target LIR 
BB04 [0003]  1  0    BB03                  2     0 [08B..08F)-> BB06 (always) T0                  i gcsafe bwd LIR 
BB05 [0004]  1  0    BB03                  2     0 [08F..09C)                 T0                  i label target hascall gcsafe bwd LIR 
BB06 [0005]  2  0    BB04,BB05             4     0 [09C..0BB)-> BB09 ( cond ) T0                  i label target gcsafe bwd LIR 
BB07 [0006]  1  0    BB06                  2     0 [000..0D3)                 T0                  i hascall gcsafe newobj bwd LIR 
BB09 [0007]  2  0    BB06,BB07             4     0 [000..0F2)-> BB03 ( cond ) T0      }           i label target hascall gcsafe newobj bwd LIR 
BB13 [0057]  2       BB02,BB09             1       [0F4..127)-> BB17 (always)                     keep i label target gcsafe newobj LIR cfb 
BB16 [0014]  1       BB20                  2     1 [127..133)                                     i Loop label target hascall gcsafe bwd bwd-target LIR 
BB17 [0015]  2       BB13,BB16             8     1 [000..147)-> BB19 ( cond )                     i label target gcsafe bwd LIR 
BB18 [0053]  1       BB17                  2     1 [000..000)-> BB20 (always)                     i internal gcsafe bwd LIR 
BB19 [0054]  1       BB17                  2     1 [000..000)                                     i internal label target gcsafe bwd LIR 
BB20 [0055]  2       BB18,BB19             8     1 [???..???)-> BB16 ( cond )                     internal label target gcsafe bwd LIR 
BB21 [0016]  1       BB20                  1       [147..153)        (return)                     i gcsafe LIR 
BB25 [0062]  0                             0       [???..???)        (throw )                     keep i internal rare label target LIR 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB22 [0010]  1     0                       0       [0F4..0F8)-> BB24 ( cond )    H0 F fault {     keep i rare label target flet LIR 
BB23 [0011]  1     0 BB22                  0       [0F8..0FF)                    H0               i rare hascall gcsafe LIR 
BB24 [0012]  2     0 BB22,BB23             0       [0FF..100)        (finret)    H0   }           i rare label target LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..070), preds={} succs={BB02}
               [000613] ------------                 IL_OFFSET void   IL offset: 0x0
N002 (  2, 10) [000000] H-----------         t0 =    CNS_INT(h) long   0xd1ffab1e method $100
                                                  /--*  t0     long   
               [000673] ------------       t673 = *  PUTARG_REG long   REG rcx
                                                  /--*  t673   long   arg0 in rcx
N003 ( 16, 16) [000001] --C---------         t1 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $180
                                                  /--*  t1     ref    
N005 ( 16, 16) [000003] DA----------              *  STORE_LCL_VAR ref    V12 tmp1         d:2
               [000614] ------------                 IL_OFFSET void   IL offset: 0x5
N001 (  1,  1) [000006] ------------         t6 =    LCL_VAR   ref    V12 tmp1         u:2 $180
                                                  /--*  t6     ref    
N003 (  1,  3) [000008] DA----------              *  STORE_LCL_VAR ref    V02 loc0         d:2
               [000615] ------------                 IL_OFFSET void   IL offset: 0x6
N001 (  1,  1) [000009] ------------         t9 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t9     ref    
N003 (  2,  2) [000440] ------------       t440 = *  LEA(b+32) byref 
N005 (  1,  1) [000010] ------------        t10 =    LCL_VAR   ref    V01 arg1         u:1 (last use) $81
                                                  /--*  t440   byref  
                                                  +--*  t10    ref    
               [000616] -A--GO------              *  STOREIND  ref   
               [000617] ------------                 IL_OFFSET void   IL offset: 0xd
N001 (  1,  1) [000013] ------------        t13 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t13    ref    
N003 (  2,  2) [000442] -c----------       t442 = *  LEA(b+60) byref 
N005 (  1,  1) [000014] ------------        t14 =    CNS_INT   int    0 $40
                                                  /--*  t442   byref  
                                                  +--*  t14    int    
               [000618] -A--GO------              *  STOREIND  int   
               [000619] ------------                 IL_OFFSET void   IL offset: 0x14
N001 (  1,  1) [000017] ------------        t17 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t17    ref    
N003 (  2,  2) [000444] -c----------       t444 = *  LEA(b+56) byref 
N005 (  1,  1) [000018] ------------        t18 =    CNS_INT   int    0 $40
                                                  /--*  t444   byref  
                                                  +--*  t18    int    
               [000620] -A--GO------              *  STOREIND  int   
               [000621] ------------                 IL_OFFSET void   IL offset: 0x1b
N002 (  2, 10) [000022] H-----------        t22 =    CNS_INT(h) long   0xd1ffab1e token $104
                                                  /--*  t22    long   
               [000674] ------------       t674 = *  PUTARG_REG long   REG rcx
                                                  /--*  t674   long   arg0 in rcx
N003 ( 16, 16) [000023] --C---------        t23 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $183
                                                  /--*  t23    ref    
N005 ( 16, 16) [000025] DA----------              *  STORE_LCL_VAR ref    V13 tmp2         d:2
N002 (  2, 10) [000266] H-----------       t266 =    CNS_INT(h) long   0xd1ffab1e token $105
                                                  /--*  t266   long   
               [000675] ------------       t675 = *  PUTARG_REG long   REG rcx
                                                  /--*  t675   long   arg0 in rcx
N003 ( 16, 16) [000267] --C---------       t267 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $184
                                                  /--*  t267   ref    
N005 ( 16, 16) [000269] DA----------              *  STORE_LCL_VAR ref    V30 tmp19        d:2
N001 (  1,  1) [000280] ------------       t280 =    LCL_VAR   ref    V30 tmp19        u:2 $184
                                                  /--*  t280   ref    
N003 (  2,  2) [000448] -c----------       t448 = *  LEA(b+52) byref 
N005 (  1,  4) [000281] -c----------       t281 =    CNS_INT   int    0x2000400 $43
                                                  /--*  t448   byref  
                                                  +--*  t281   int    
               [000622] -A--GO------              *  STOREIND  int   
N001 (  1,  1) [000265] ------------       t265 =    LCL_VAR   ref    V13 tmp2         u:2 $183
                                                  /--*  t265   ref    
N003 (  2,  2) [000450] ------------       t450 = *  LEA(b+8)  byref 
N005 (  1,  1) [000272] ------------       t272 =    LCL_VAR   ref    V30 tmp19        u:2 (last use) $184
                                                  /--*  t450   byref  
                                                  +--*  t272   ref    
               [000623] -A--GO------              *  STOREIND  ref   
               [000624] ------------                 IL_OFFSET void   IL offset: 0x21
N001 (  1,  1) [000021] ------------        t21 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t21    ref    
N003 (  2,  2) [000452] ------------       t452 = *  LEA(b+24) byref 
N005 (  1,  1) [000028] ------------        t28 =    LCL_VAR   ref    V13 tmp2         u:2 (last use) $183
                                                  /--*  t452   byref  
                                                  +--*  t28    ref    
               [000625] -A--GO------              *  STOREIND  ref   
               [000626] ------------                 IL_OFFSET void   IL offset: 0x26
N002 (  2, 10) [000032] H-----------        t32 =    CNS_INT(h) long   0xd1ffab1e token $109
                                                  /--*  t32    long   
               [000676] ------------       t676 = *  PUTARG_REG long   REG rcx
                                                  /--*  t676   long   arg0 in rcx
N003 ( 16, 16) [000033] --C---------        t33 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $189
                                                  /--*  t33    ref    
N005 ( 16, 16) [000035] DA----------              *  STORE_LCL_VAR ref    V14 tmp3         d:2
N003 (  2, 10) [000297] ------------       t297 =    CNS_INT   long   0x7ffc7e0b0028 $1c6
                                                  /--*  t297   long   
               [000677] ------------       t677 = *  PUTARG_REG long   REG rcx
N004 (  1,  1) [000298] ------------       t298 =    CNS_INT   int    14 $44
                                                  /--*  t298   int    
               [000678] ------------       t678 = *  PUTARG_REG int    REG rdx
                                                  /--*  t677   long   arg0 in rcx
                                                  +--*  t678   int    arg1 in rdx
N005 ( 17, 18) [000299] H-CXG-------       t299 = *  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS $381
N006 (  2, 10) [000458] I-----------       t458 =    CNS_INT(h) long   0xd1ffab1e static Fseq[Value] $10a
                                                  /--*  t458   long   
N007 (  4, 12) [000295] n---G-------       t295 = *  IND       ref    <l:$246, c:$14b>
N009 (  1,  1) [000287] ------------       t287 =    LCL_VAR   ref    V14 tmp3         u:2 $189
                                                  /--*  t287   ref    
N011 (  2,  2) [000455] ------------       t455 = *  LEA(b+8)  byref 
                                                  /--*  t455   byref  
                                                  +--*  t295   ref    
               [000627] -ACXGO------              *  STOREIND  ref   
               [000628] ------------                 IL_OFFSET void   IL offset: 0x2c
N001 (  1,  1) [000031] ------------        t31 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t31    ref    
N003 (  2,  2) [000460] ------------       t460 = *  LEA(b+8)  byref 
N005 (  1,  1) [000038] ------------        t38 =    LCL_VAR   ref    V14 tmp3         u:2 (last use) $189
                                                  /--*  t460   byref  
                                                  +--*  t38    ref    
               [000629] -A--GO------              *  STOREIND  ref   
               [000630] ------------                 IL_OFFSET void   IL offset: 0x31
N001 (  1,  1) [000041] ------------        t41 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t41    ref    
N003 (  2,  2) [000462] -c----------       t462 = *  LEA(b+16) byref 
N005 (  1,  1) [000042] ------------        t42 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t462   byref  
                                                  +--*  t42    ref    
               [000631] -A--GO------              *  STOREIND  ref   
               [000632] ------------                 IL_OFFSET void   IL offset: 0x38
N002 (  2, 10) [000046] H-----------        t46 =    CNS_INT(h) long   0xd1ffab1e token $10e
                                                  /--*  t46    long   
               [000679] ------------       t679 = *  PUTARG_REG long   REG rcx
                                                  /--*  t679   long   arg0 in rcx
N003 ( 16, 16) [000047] --C---------        t47 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $193
                                                  /--*  t47    ref    
N005 ( 16, 16) [000049] DA----------              *  STORE_LCL_VAR ref    V15 tmp4         d:2
N003 (  1,  1) [000050] ------------        t50 =    LCL_VAR   ref    V15 tmp4         u:2 $193
                                                  /--*  t50    ref    
               [000680] ------------       t680 = *  PUTARG_REG ref    REG rcx
N004 (  1,  1) [000302] ------------       t302 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t302   ref    
               [000681] ------------       t681 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t680   ref    this in rcx
                                                  +--*  t681   ref    arg1 in rdx
N005 ( 16, 10) [000303] --CXG-------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor $VN.Void
               [000633] ------------                 IL_OFFSET void   IL offset: 0x3e
N001 (  1,  1) [000045] ------------        t45 =    LCL_VAR   ref    V02 loc0         u:2 (last use) $180
                                                  /--*  t45    ref    
N003 (  2,  2) [000467] ------------       t467 = *  LEA(b+40) byref 
N005 (  1,  1) [000052] ------------        t52 =    LCL_VAR   ref    V15 tmp4         u:2 (last use) $193
                                                  /--*  t467   byref  
                                                  +--*  t52    ref    
               [000634] -A--GO------              *  STOREIND  ref   
N001 ( 14,  5) [000055] --CXG-------        t55 =    CALL      ref    System.Diagnostics.Process.GetCurrentProcess $151
                                                  /--*  t55    ref    
N003 ( 14,  5) [000316] DA-XG-------              *  STORE_LCL_VAR ref    V31 tmp20        d:2
N001 (  1,  1) [000313] ------------       t313 =    LCL_VAR   ref    V31 tmp20        u:2 $151
                                                  /--*  t313   ref    
N002 (  2,  2) [000314] ---X--------              *  NULLCHECK int    $197
N003 (  1,  1) [000306] ------------       t306 =    LCL_VAR   ref    V31 tmp20        u:2 $151
                                                  /--*  t306   ref    
               [000682] ------------       t682 = *  PUTARG_REG ref    REG rcx
N004 (  1,  1) [000307] ------------       t307 =    CNS_INT   int    3 $46
                                                  /--*  t307   int    
               [000683] ------------       t683 = *  PUTARG_REG int    REG rdx
                                                  /--*  t682   ref    this in rcx
                                                  +--*  t683   int    arg1 in rdx
N005 ( 16, 10) [000308] --CXG-------              *  CALL      void   System.Diagnostics.Process.EnsureState $VN.Void
N002 (  1,  1) [000309] ------------       t309 =    LCL_VAR   ref    V31 tmp20        u:2 (last use) $151
                                                  /--*  t309   ref    
N004 (  2,  5) [000471] -c----------       t471 = *  LEA(b+200) byref 
                                                  /--*  t471   byref  
N005 (  4,  7) [000310] n---GO------       t310 = *  IND       int    <l:$289, c:$288>
                                                  /--*  t310   int    
               [000684] ----GO------       t684 = *  PUTARG_REG int    REG rcx
                                                  /--*  t684   int    arg0 in rcx
N006 ( 18, 13) [000311] --CXGO------       t311 = *  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule $156
                                                  /--*  t311   ref    
N008 ( 18, 13) [000322] DA-XGO------              *  STORE_LCL_VAR ref    V32 tmp21        d:2
N001 (  1,  1) [000319] ------------       t319 =    LCL_VAR   ref    V32 tmp21        u:2 (last use) $156
                                                  /--*  t319   ref    
N003 (  2,  2) [000474] -c----------       t474 = *  LEA(b+40) byref 
                                                  /--*  t474   byref  
N004 (  4,  4) [000320] ---XG-------       t320 = *  IND       ref    <l:$19c, c:$19b>
                                                  /--*  t320   ref    
N006 (  4,  4) [000062] DA-XG-------              *  STORE_LCL_VAR ref    V03 loc1         d:2
N005 (  1,  1) [000339] -c----------       t339 =    CNS_INT   int    5 $47
                                                  /--*  t339   int    
               [000685] ------------              *  PUTARG_STK [+0x20] void  
N006 (  1,  1) [000337] ------------       t337 =    LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
                                                  /--*  t337   ref    
               [000669] -c----------       t669 = *  LEA(b+8)  ref   
                                                  /--*  t669   ref    
N007 (  3,  3) [000338] ---X--------       t338 = *  IND       int    <l:$28b, c:$28a>
                                                  /--*  t338   int    
               [000686] ---X--------       t686 = *  PUTARG_REG int    REG r9
N008 (  2, 10) [000475] H-----------       t475 =    CNS_INT(h) long   0xD1FFAB1E "dotnet.exe" $112
                                                  /--*  t475   long   
N009 (  4, 12) [000476] #---G-------       t476 = *  IND       ref    $19f
                                                  /--*  t476   ref    
               [000687] ----G-------       t687 = *  PUTARG_REG ref    REG rdx
N010 (  1,  1) [000063] ------------        t63 =    LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
                                                  /--*  t63    ref    
               [000688] ------------       t688 = *  PUTARG_REG ref    REG rcx
N011 (  1,  1) [000336] ------------       t336 =    CNS_INT   int    0 $40
                                                  /--*  t336   int    
               [000689] ------------       t689 = *  PUTARG_REG int    REG r8
                                                  /--*  t686   int    arg3 in r9
                                                  +--*  t687   ref    arg1 in rdx
                                                  +--*  t688   ref    this in rcx
                                                  +--*  t689   int    arg2 in r8
N012 ( 27, 28) [000340] --CXG-------       t340 = *  CALL      int    System.String.IndexOf $308
N013 (  1,  1) [000328] -c----------       t328 =    CNS_INT   int    0 $40
                                                  /--*  t340   int    
                                                  +--*  t328   int    
N014 ( 32, 30) [000329] ---XG-------       t329 = *  GE        int    $28c
                                                  /--*  t329   int    
N016 ( 32, 30) [000069] DA-XG-------              *  STORE_LCL_VAR int    V04 loc2         d:2
N001 ( 14,  5) [000070] --CXG-------        t70 =    CALL      ref    System.Environment.GetCommandLineArgs $15e
                                                  /--*  t70    ref    
N003 ( 14,  5) [000482] DA-XG-------              *  STORE_LCL_VAR ref    V41 tmp30        d:2
N004 (  1,  1) [000072] -c----------        t72 =    CNS_INT   int    0 $40
N005 (  1,  1) [000483] ------------       t483 =    LCL_VAR   ref    V41 tmp30        u:2 $15e
                                                  /--*  t483   ref    
               [000671] -c----------       t671 = *  LEA(b+8)  ref   
                                                  /--*  t671   ref    
N006 (  3,  3) [000486] -c-X--------       t486 = *  IND       int    $28d
                                                  /--*  t72    int    
                                                  +--*  t486   int    
N007 (  8, 11) [000487] ---X--------              *  ARR_BOUNDS_CHECK_Rng void   $1a5
N008 (  1,  1) [000484] ------------       t484 =    LCL_VAR   ref    V41 tmp30        u:2 (last use) $15e
                                                  /--*  t484   ref    
N010 (  2,  2) [000492] -c----------       t492 = *  LEA(b+16) byref 
                                                  /--*  t492   byref  
N011 (  4,  4) [000073] a---G-------        t73 = *  IND       ref    <l:$1a8, c:$161>
                                                  /--*  t73    ref    
N015 ( 26, 20) [000075] DA-XG-------              *  STORE_LCL_VAR ref    V05 loc3         d:2
               [000635] ------------                 IL_OFFSET void   IL offset: 0x68
N003 (  1,  1) [000076] ------------        t76 =    LCL_VAR   ref    V00 arg0         u:1 (last use) $80
                                                  /--*  t76    ref    
               [000690] ------------       t690 = *  PUTARG_REG ref    REG rcx
N004 (  2, 10) [000495] H-----------       t495 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $114
                                                  /--*  t495   long   
               [000691] ------------       t691 = *  PUTARG_REG long   REG r11
N001 (  2, 10) [000692] Hc----------       t692 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t692   long   
N002 (  4, 12) [000693] -c----------       t693 = *  IND       long   REG NA
                                                  /--*  t690   ref    this in rcx
                                                  +--*  t691   long   arg1 in r11
                                                  +--*  t693   long   control expr
N005 ( 23, 21) [000077] --CXG-------        t77 = *  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator $164
                                                  /--*  t77    ref    
N007 ( 23, 21) [000079] DA-XG-------              *  STORE_LCL_VAR ref    V06 loc4         d:2

------------ BB02 [070..072) -> BB13 (cond), preds={BB01} succs={BB03,BB13}
               [000636] ------------                 IL_OFFSET void   IL offset: 0xe9
N003 (  1,  1) [000575] ------------       t575 =    LCL_VAR   ref    V06 loc4         u:2 $164
                                                  /--*  t575   ref    
               [000694] ------------       t694 = *  PUTARG_REG ref    REG rcx
N004 (  2, 10) [000576] H-----------       t576 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
                                                  /--*  t576   long   
               [000695] ------------       t695 = *  PUTARG_REG long   REG r11
N001 (  2, 10) [000696] Hc----------       t696 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t696   long   
N002 (  4, 12) [000697] -c----------       t697 = *  IND       long   REG NA
                                                  /--*  t694   ref    this in rcx
                                                  +--*  t695   long   arg1 in r11
                                                  +--*  t697   long   control expr
N005 ( 23, 21) [000572] --CXG-------       t572 = *  CALLV stub int    System.Collections.IEnumerator.MoveNext $30a
N006 (  1,  1) [000577] -c----------       t577 =    CNS_INT   int    0 $40
                                                  /--*  t572   int    
                                                  +--*  t577   int    
N007 ( 25, 23) [000571] J--XG--N----              *  EQ        void   $28e
N008 ( 27, 25) [000578] ---XG-------              *  JTRUE     void  

------------ BB03 [072..08B) -> BB05 (cond), preds={BB02,BB09} succs={BB04,BB05}
               [000637] ------------                 IL_OFFSET void   IL offset: 0x72
N003 (  1,  1) [000085] ------------        t85 =    LCL_VAR   ref    V06 loc4         u:2 $164
                                                  /--*  t85    ref    
               [000698] ------------       t698 = *  PUTARG_REG ref    REG rcx
N004 (  2, 10) [000498] H-----------       t498 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $116
                                                  /--*  t498   long   
               [000699] ------------       t699 = *  PUTARG_REG long   REG r11
N001 (  2, 10) [000700] Hc----------       t700 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t700   long   
N002 (  4, 12) [000701] -c----------       t701 = *  IND       long   REG NA
                                                  /--*  t698   ref    this in rcx
                                                  +--*  t699   long   arg1 in r11
                                                  +--*  t701   long   control expr
N005 ( 23, 21) [000086] --CXG-------        t86 = *  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current $442
                                                  /--*  t86    ref    
N007 ( 23, 21) [000088] DA-XG-------              *  STORE_LCL_VAR ref    V07 loc5         d:2
               [000638] ------------                 IL_OFFSET void   IL offset: 0x7b
N002 (  2, 10) [000089] H-----------        t89 =    CNS_INT(h) long   0xd1ffab1e token $117
                                                  /--*  t89    long   
               [000702] ------------       t702 = *  PUTARG_REG long   REG rcx
                                                  /--*  t702   long   arg0 in rcx
N003 ( 16, 16) [000090] --C---------        t90 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1ab
                                                  /--*  t90    ref    
N005 ( 16, 16) [000092] DA----------              *  STORE_LCL_VAR ref    V16 tmp5         d:2
               [000639] ------------                 IL_OFFSET void   IL offset: 0x80
N001 (  1,  1) [000096] ------------        t96 =    LCL_VAR   ref    V16 tmp5         u:2 $1ab
                                                  /--*  t96    ref    
N003 (  2,  2) [000503] ------------       t503 = *  LEA(b+8)  byref 
N005 (  1,  1) [000097] ------------        t97 =    LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
                                                  /--*  t503   byref  
                                                  +--*  t97    ref    
               [000640] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000095] ------------        t95 =    LCL_VAR   ref    V16 tmp5         u:2 $1ab
                                                  /--*  t95    ref    
N003 (  1,  3) [000105] DA----------              *  STORE_LCL_VAR ref    V17 tmp6         d:2
N001 (  1,  1) [000099] ------------        t99 =    LCL_VAR   ref    V17 tmp6         u:2 (last use) $1ab
                                                  /--*  t99    ref    
N003 (  1,  3) [000108] DA----------              *  STORE_LCL_VAR ref    V18 tmp7         d:2
               [000641] ------------                 IL_OFFSET void   IL offset: 0x87
N001 (  1,  1) [000100] ------------       t100 =    LCL_VAR   int    V04 loc2         u:2 $28c
N002 (  1,  1) [000101] -c----------       t101 =    CNS_INT   int    0 $40
                                                  /--*  t100   int    
                                                  +--*  t101   int    
N003 (  3,  3) [000102] J------N----              *  NE        void   $28f
N004 (  5,  5) [000103] ------------              *  JTRUE     void  

------------ BB04 [08B..08F) -> BB06 (always), preds={BB03} succs={BB06}
N001 (  1,  1) [000110] ------------       t110 =    LCL_VAR   ref    V18 tmp7         u:2 (last use) $1ab
                                                  /--*  t110   ref    
N003 (  1,  3) [000203] DA----------              *  STORE_LCL_VAR ref    V19 tmp8         d:4
N001 (  1,  1) [000111] ------------       t111 =    LCL_VAR   ref    V19 tmp8         u:4 (last use) $1ab
                                                  /--*  t111   ref    
N003 (  1,  3) [000206] DA----------              *  STORE_LCL_VAR ref    V20 tmp9         d:4
N001 (  1,  1) [000201] ------------       t201 =    LCL_VAR   ref    V07 loc5         u:2 (last use) $442
                                                  /--*  t201   ref    
N003 (  1,  3) [000209] DA----------              *  STORE_LCL_VAR ref    V21 tmp10        d:4

------------ BB05 [08F..09C), preds={BB03} succs={BB06}
N001 (  1,  1) [000112] ------------       t112 =    LCL_VAR   ref    V18 tmp7         u:2 (last use) $1ab
                                                  /--*  t112   ref    
N003 (  1,  3) [000119] DA----------              *  STORE_LCL_VAR ref    V19 tmp8         d:3
N001 (  1,  1) [000113] ------------       t113 =    LCL_VAR   ref    V19 tmp8         u:3 (last use) $1ab
                                                  /--*  t113   ref    
N003 (  1,  3) [000122] DA----------              *  STORE_LCL_VAR ref    V20 tmp9         d:3
N004 (  2, 10) [000504] H-----------       t504 =    CNS_INT(h) long   0xD1FFAB1E " " $119
                                                  /--*  t504   long   
N005 (  4, 12) [000505] #---G-------       t505 = *  IND       ref    $1ae
                                                  /--*  t505   ref    
               [000703] ----G-------       t703 = *  PUTARG_REG ref    REG rdx
N006 (  1,  1) [000114] ------------       t114 =    LCL_VAR   ref    V05 loc3         u:2 <l:$1a8, c:$161>
                                                  /--*  t114   ref    
               [000704] ------------       t704 = *  PUTARG_REG ref    REG rcx
N007 (  1,  1) [000116] ------------       t116 =    LCL_VAR   ref    V07 loc5         u:2 (last use) $442
                                                  /--*  t116   ref    
               [000705] ------------       t705 = *  PUTARG_REG ref    REG r8
                                                  /--*  t703   ref    arg1 in rdx
                                                  +--*  t704   ref    arg0 in rcx
                                                  +--*  t705   ref    arg2 in r8
N008 ( 20, 22) [000117] --CXG-------       t117 = *  CALL      ref    System.String.Concat $44e
                                                  /--*  t117   ref    
N010 ( 20, 22) [000125] DA-XG-------              *  STORE_LCL_VAR ref    V21 tmp10        d:3

------------ BB06 [09C..0BB) -> BB09 (cond), preds={BB04,BB05} succs={BB07,BB09}
N001 (  0,  0) [000606] ------------       t606 =    PHI_ARG   ref    V21 tmp10        u:4 $442
N002 (  0,  0) [000603] ------------       t603 =    PHI_ARG   ref    V21 tmp10        u:3 $44e
                                                  /--*  t606   ref    
                                                  +--*  t603   ref    
N003 (  0,  0) [000595] ------------       t595 = *  PHI       ref   
                                                  /--*  t595   ref    
N005 (  0,  0) [000596] DA----------              *  STORE_LCL_VAR ref    V21 tmp10        d:2
N001 (  0,  0) [000607] ------------       t607 =    PHI_ARG   ref    V20 tmp9         u:4 $1ab
N002 (  0,  0) [000604] ------------       t604 =    PHI_ARG   ref    V20 tmp9         u:3 $1ab
                                                  /--*  t607   ref    
                                                  +--*  t604   ref    
N003 (  0,  0) [000592] ------------       t592 = *  PHI       ref   
                                                  /--*  t592   ref    
N005 (  0,  0) [000593] DA----------              *  STORE_LCL_VAR ref    V20 tmp9         d:2
N001 (  0,  0) [000608] ------------       t608 =    PHI_ARG   ref    V19 tmp8         u:4 $1ab
N002 (  0,  0) [000605] ------------       t605 =    PHI_ARG   ref    V19 tmp8         u:3 $1ab
                                                  /--*  t608   ref    
                                                  +--*  t605   ref    
N003 (  0,  0) [000589] ------------       t589 = *  PHI       ref   
                                                  /--*  t589   ref    
N005 (  0,  0) [000590] DA----------              *  STORE_LCL_VAR ref    V19 tmp8         d:2
N001 (  1,  1) [000128] ------------       t128 =    LCL_VAR   ref    V20 tmp9         u:2 (last use) $1ab
                                                  /--*  t128   ref    
N003 (  2,  2) [000510] ------------       t510 = *  LEA(b+16) byref 
N005 (  1,  1) [000129] ------------       t129 =    LCL_VAR   ref    V21 tmp10        u:2 (last use) $251
                                                  /--*  t510   byref  
                                                  +--*  t129   ref    
               [000642] -A--GO------              *  STOREIND  ref   
               [000643] ------------                 IL_OFFSET void   IL offset: 0xa1
N001 (  1,  1) [000131] ------------       t131 =    LCL_VAR   ref    V19 tmp8         u:2 $1ab
                                                  /--*  t131   ref    
N003 (  2,  5) [000512] -c----------       t512 = *  LEA(b+130) byref 
N005 (  1,  1) [000353] -c----------       t353 =    CNS_INT   int    0 $40
                                                  /--*  t512   byref  
                                                  +--*  t353   int    
               [000644] -A--GO------              *  STOREIND  bool  
               [000645] ------------                 IL_OFFSET void   IL offset: 0xaa
N001 (  1,  1) [000137] ------------       t137 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t137   ref    
N003 (  2,  2) [000514] -c----------       t514 = *  LEA(b+8)  byref 
                                                  /--*  t514   byref  
N004 (  4,  4) [000138] n---GO------       t138 = *  IND       ref    <l:$1bc, c:$1bb>
                                                  /--*  t138   ref    
N006 (  4,  4) [000145] DA--GO------              *  STORE_LCL_VAR ref    V23 tmp12        d:2
               [000646] ------------                 IL_OFFSET void   IL offset: 0xaa
N001 (  1,  1) [000140] ------------       t140 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t140   ref    
N003 (  2,  2) [000516] -c----------       t516 = *  LEA(b+48) byref 
                                                  /--*  t516   byref  
N004 (  4,  4) [000141] n---GO------       t141 = *  IND       ref    <l:$542, c:$541>
                                                  /--*  t141   ref    
N006 (  4,  4) [000143] DA--GO------              *  STORE_LCL_VAR ref    V22 tmp11        d:2
N001 (  1,  1) [000146] ------------       t146 =    LCL_VAR   ref    V23 tmp12        u:2 (last use) <l:$1b9, c:$454>
                                                  /--*  t146   ref    
N003 (  1,  3) [000153] DA----------              *  STORE_LCL_VAR ref    V24 tmp13        d:2
N001 (  1,  1) [000139] ------------       t139 =    LCL_VAR   ref    V19 tmp8         u:2 (last use) $1ab
                                                  /--*  t139   ref    
N003 (  1,  3) [000156] DA----------              *  STORE_LCL_VAR ref    V25 tmp14        d:2
N001 (  1,  1) [000147] ------------       t147 =    LCL_VAR   ref    V22 tmp11        u:2 <l:$540, c:$456>
                                                  /--*  t147   ref    
N003 (  1,  3) [000159] DA----------              *  STORE_LCL_VAR ref    V26 tmp15        d:2
N001 (  1,  1) [000148] ------------       t148 =    LCL_VAR   ref    V26 tmp15        u:2 (last use) <l:$540, c:$456>
N002 (  1,  1) [000149] -c----------       t149 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t148   ref    
                                                  +--*  t149   ref    
N003 (  3,  3) [000150] J------N----              *  NE        void   <l:$291, c:$290>
N004 (  5,  5) [000151] ------------              *  JTRUE     void  

------------ BB07 [000..0D3), preds={BB06} succs={BB09}
N002 (  2, 10) [000181] H-----------       t181 =    CNS_INT(h) long   0xd1ffab1e token $11e
                                                  /--*  t181   long   
               [000706] ------------       t706 = *  PUTARG_REG long   REG rcx
                                                  /--*  t706   long   arg0 in rcx
N003 ( 16, 16) [000182] --C---------       t182 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $543
                                                  /--*  t182   ref    
N005 ( 16, 16) [000184] DA----------              *  STORE_LCL_VAR ref    V28 tmp17        d:2
N001 (  1,  1) [000185] ------------       t185 =    LCL_VAR   ref    V28 tmp17        u:2 $543
                                                  /--*  t185   ref    
N003 (  2,  2) [000519] ------------       t519 = *  LEA(b+8)  byref 
N005 (  1,  1) [000360] ------------       t360 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t519   byref  
                                                  +--*  t360   ref    
               [000647] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000363] ------------       t363 =    LCL_VAR   ref    V28 tmp17        u:2 $543
                                                  /--*  t363   ref    
N003 (  2,  2) [000521] -c----------       t521 = *  LEA(b+24) byref 
N005 (  2, 10) [000180] H-----------       t180 =    CNS_INT(h) long   0xd1ffab1e ftn $120
                                                  /--*  t521   byref  
                                                  +--*  t180   long   
               [000648] -A--GO------              *  STOREIND  long  
N001 (  1,  1) [000178] ------------       t178 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t178   ref    
N003 (  2,  2) [000523] ------------       t523 = *  LEA(b+48) byref 
N005 (  1,  1) [000187] ------------       t187 =    LCL_VAR   ref    V28 tmp17        u:2 $543
                                                  /--*  t523   byref  
                                                  +--*  t187   ref    
               [000649] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000193] ------------       t193 =    LCL_VAR   ref    V28 tmp17        u:2 (last use) $543
                                                  /--*  t193   ref    
N003 (  1,  3) [000199] DA----------              *  STORE_LCL_VAR ref    V26 tmp15        d:4

------------ BB09 [000..0F2) -> BB03 (cond), preds={BB06,BB07} succs={BB13,BB03}
N001 (  0,  0) [000602] ------------       t602 =    PHI_ARG   ref    V26 tmp15        u:4 $543
N002 (  0,  0) [000601] ------------       t601 =    PHI_ARG   ref    V26 tmp15        u:2 <l:$540, c:$456>
                                                  /--*  t602   ref    
                                                  +--*  t601   ref    
N003 (  0,  0) [000586] ------------       t586 = *  PHI       ref   
                                                  /--*  t586   ref    
N005 (  0,  0) [000587] DA----------              *  STORE_LCL_VAR ref    V26 tmp15        d:3
N002 (  2, 10) [000169] H-----------       t169 =    CNS_INT(h) long   0xd1ffab1e token $123
                                                  /--*  t169   long   
               [000707] ------------       t707 = *  PUTARG_REG long   REG rcx
                                                  /--*  t707   long   arg0 in rcx
N003 ( 16, 16) [000170] --C---------       t170 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $54b
                                                  /--*  t170   ref    
N005 ( 16, 16) [000172] DA----------              *  STORE_LCL_VAR ref    V27 tmp16        d:2
N001 (  1,  1) [000173] ------------       t173 =    LCL_VAR   ref    V27 tmp16        u:2 $54b
                                                  /--*  t173   ref    
N003 (  2,  2) [000526] ------------       t526 = *  LEA(b+8)  byref 
N005 (  1,  1) [000372] ------------       t372 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t526   byref  
                                                  +--*  t372   ref    
               [000650] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000375] ------------       t375 =    LCL_VAR   ref    V27 tmp16        u:2 $54b
                                                  /--*  t375   ref    
N003 (  2,  2) [000528] -c----------       t528 = *  LEA(b+24) byref 
N005 (  2, 10) [000168] H-----------       t168 =    CNS_INT(h) long   0xd1ffab1e ftn $125
                                                  /--*  t528   byref  
                                                  +--*  t168   long   
               [000651] -A--GO------              *  STOREIND  long  
               [000652] ------------                 IL_OFFSET void   IL offset: 0xdf
N005 (  1,  1) [000165] ------------       t165 =    LCL_VAR   ref    V25 tmp14        u:2 (last use) $1ab
                                                  /--*  t165   ref    
               [000708] ------------       t708 = *  PUTARG_REG ref    REG rcx
N006 (  1,  1) [000166] ------------       t166 =    LCL_VAR   ref    V26 tmp15        u:3 (last use) $258
                                                  /--*  t166   ref    
               [000709] ------------       t709 = *  PUTARG_REG ref    REG rdx
N007 (  1,  1) [000175] ------------       t175 =    LCL_VAR   ref    V27 tmp16        u:2 (last use) $54b
                                                  /--*  t175   ref    
               [000710] ------------       t710 = *  PUTARG_REG ref    REG r8
                                                  /--*  t708   ref    arg0 in rcx
                                                  +--*  t709   ref    arg1 in rdx
                                                  +--*  t710   ref    arg2 in r8
N008 ( 17, 11) [000176] --CXG-------       t176 = *  CALL      ref    SolutionAnalyzer.IPC.CreateSession $464
                                                  /--*  t176   ref    
N010 ( 17, 11) [000533] DA-XG-----L-              *  STORE_LCL_VAR ref    V42 tmp31        d:2
N011 (  1,  1) [000534] ------------       t534 =    LCL_VAR   ref    V42 tmp31        u:2 (last use) $464
                                                  /--*  t534   ref    
               [000711] ------------       t711 = *  PUTARG_REG ref    REG rdx
N012 (  1,  1) [000164] ------------       t164 =    LCL_VAR   ref    V24 tmp13        u:2 (last use) <l:$1b9, c:$454>
                                                  /--*  t164   ref    
               [000712] ------------       t712 = *  PUTARG_REG ref    REG rcx
                                                  /--*  t711   ref    arg1 in rdx
                                                  +--*  t712   ref    this in rcx
N013 ( 36, 21) [000177] --CXG-------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue $VN.Void
               [000653] ------------                 IL_OFFSET void   IL offset: 0xe9
N003 (  1,  1) [000080] ------------        t80 =    LCL_VAR   ref    V06 loc4         u:2 $164
                                                  /--*  t80    ref    
               [000713] ------------       t713 = *  PUTARG_REG ref    REG rcx
N004 (  2, 10) [000536] H-----------       t536 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
                                                  /--*  t536   long   
               [000714] ------------       t714 = *  PUTARG_REG long   REG r11
N001 (  2, 10) [000715] Hc----------       t715 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t715   long   
N002 (  4, 12) [000716] -c----------       t716 = *  IND       long   REG NA
                                                  /--*  t713   ref    this in rcx
                                                  +--*  t714   long   arg1 in r11
                                                  +--*  t716   long   control expr
N005 ( 23, 21) [000081] --CXG-------        t81 = *  CALLV stub int    System.Collections.IEnumerator.MoveNext $5c0
N006 (  1,  1) [000082] -c----------        t82 =    CNS_INT   int    0 $40
                                                  /--*  t81    int    
                                                  +--*  t82    int    
N007 ( 25, 23) [000083] J--XG--N----              *  NE        void   $292
N008 ( 27, 25) [000084] ---XG-------              *  JTRUE     void  

------------ BB13 [0F4..127) -> BB17 (always), preds={BB02,BB09} succs={BB17}
N003 (  1,  1) [000436] ------------       t436 =    LCL_VAR   ref    V06 loc4         u:2 (last use) $164
                                                  /--*  t436   ref    
               [000717] ------------       t717 = *  PUTARG_REG ref    REG rcx
N004 (  2, 10) [000539] H-----------       t539 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127
                                                  /--*  t539   long   
               [000718] ------------       t718 = *  PUTARG_REG long   REG r11
N001 (  2, 10) [000719] Hc----------       t719 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t719   long   
N002 (  4, 12) [000720] -c----------       t720 = *  IND       long   REG NA
                                                  /--*  t717   ref    this in rcx
                                                  +--*  t718   long   arg1 in r11
                                                  +--*  t720   long   control expr
N005 ( 23, 21) [000435] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose $VN.Void
               [000654] ------------                 IL_OFFSET void   IL offset: 0x100
N001 (  1,  1) [000212] ------------       t212 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t212   ref    
N003 (  2,  2) [000546] -c----------       t546 = *  LEA(b+8)  byref 
                                                  /--*  t546   byref  
N004 (  4,  4) [000213] n---GO------       t213 = *  IND       ref    <l:$569, c:$568>
                                                  /--*  t213   ref    
N006 (  4,  4) [000384] DA--GO------              *  STORE_LCL_VAR ref    V35 tmp24        d:2
N001 (  1,  1) [000381] ------------       t381 =    LCL_VAR   ref    V35 tmp24        u:2 (last use) <l:$567, c:$16e>
                                                  /--*  t381   ref    
N003 (  2,  2) [000550] -c----------       t550 = *  LEA(b+24) byref 
                                                  /--*  t550   byref  
N004 (  4,  4) [000382] ---XG-------       t382 = *  IND       int    <l:$29b, c:$29a>
N005 (  1,  1) [000211] ------------       t211 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t211   ref    
N007 (  2,  2) [000548] -c----------       t548 = *  LEA(b+60) byref 
                                                  /--*  t548   byref  
                                                  +--*  t382   int    
               [000655] -A-XGO------              *  STOREIND  int   
               [000656] ------------                 IL_OFFSET void   IL offset: 0x111
N002 (  2, 10) [000221] H-----------       t221 =    CNS_INT(h) long   0xd1ffab1e method $12b
                                                  /--*  t221   long   
               [000721] ------------       t721 = *  PUTARG_REG long   REG rcx
                                                  /--*  t721   long   arg0 in rcx
N003 ( 16, 16) [000222] --C---------       t222 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $56c
                                                  /--*  t222   ref    
N005 ( 16, 16) [000224] DA----------              *  STORE_LCL_VAR ref    V29 tmp18        d:2
N001 (  1,  1) [000219] ------------       t219 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t219   ref    
N003 (  2,  2) [000553] -c----------       t553 = *  LEA(b+60) byref 
                                                  /--*  t553   byref  
N004 (  4,  4) [000220] n---GO------       t220 = *  IND       int    <l:$2a3, c:$2a2>
                                                  /--*  t220   int    
N006 (  4,  4) [000402] DA--GO------              *  STORE_LCL_VAR int    V37 tmp26        d:2
N002 (  2, 10) [000386] H-----------       t386 =    CNS_INT(h) long   0xd1ffab1e token $12c
                                                  /--*  t386   long   
               [000722] ------------       t722 = *  PUTARG_REG long   REG rcx
                                                  /--*  t722   long   arg0 in rcx
N003 ( 16, 16) [000387] --C---------       t387 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $56d
                                                  /--*  t387   ref    
N005 ( 16, 16) [000389] DA----------              *  STORE_LCL_VAR ref    V36 tmp25        d:2
N004 (  1,  1) [000390] ------------       t390 =    LCL_VAR   ref    V36 tmp25        u:2 $56d
                                                  /--*  t390   ref    
               [000723] ------------       t723 = *  PUTARG_REG ref    REG rcx
N005 (  1,  1) [000404] ------------       t404 =    CNS_INT   int    0 $40
                                                  /--*  t404   int    
               [000724] ------------       t724 = *  PUTARG_REG int    REG rdx
N006 (  1,  1) [000405] ------------       t405 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t405   ref    
               [000725] ------------       t725 = *  PUTARG_REG ref    REG r8
                                                  /--*  t723   ref    this in rcx
                                                  +--*  t724   int    arg1 in rdx
                                                  +--*  t725   ref    arg2 in r8
N007 ( 17, 12) [000406] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor $VN.Void
N001 (  1,  1) [000225] ------------       t225 =    LCL_VAR   ref    V29 tmp18        u:2 $56c
                                                  /--*  t225   ref    
N003 (  2,  2) [000559] ------------       t559 = *  LEA(b+8)  byref 
N005 (  1,  1) [000392] ------------       t392 =    LCL_VAR   ref    V36 tmp25        u:2 (last use) $56d
                                                  /--*  t559   byref  
                                                  +--*  t392   ref    
               [000657] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000397] ------------       t397 =    LCL_VAR   ref    V29 tmp18        u:2 $56c
                                                  /--*  t397   ref    
N003 (  2,  2) [000561] -c----------       t561 = *  LEA(b+16) byref 
N005 (  1,  1) [000398] ------------       t398 =    LCL_VAR   int    V37 tmp26        u:2 (last use) <l:$299, c:$30c>
                                                  /--*  t561   byref  
                                                  +--*  t398   int    
               [000658] -A--GO------              *  STOREIND  int   
               [000659] ------------                 IL_OFFSET void   IL offset: 0x11d
N001 (  1,  1) [000218] ------------       t218 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t218   ref    
N003 (  2,  2) [000563] ------------       t563 = *  LEA(b+16) byref 
N005 (  1,  1) [000227] ------------       t227 =    LCL_VAR   ref    V29 tmp18        u:2 (last use) $56c
                                                  /--*  t563   byref  
                                                  +--*  t227   ref    
               [000660] -A--GO------              *  STOREIND  ref   
               [000661] ------------                 IL_OFFSET void   IL offset: 0x122
N001 (  1,  1) [000230] ------------       t230 =    CNS_INT   int    0 $40
                                                  /--*  t230   int    
N003 (  1,  3) [000232] DA----------              *  STORE_LCL_VAR int    V10 loc8         d:2

------------ BB16 [127..133), preds={BB20} succs={BB17}
               [000662] ------------                 IL_OFFSET void   IL offset: 0x127
N002 (  1,  1) [000242] ------------       t242 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t242   ref    
               [000726] ------------       t726 = *  PUTARG_REG ref    REG rcx
                                                  /--*  t726   ref    this in rcx
N003 ( 15,  8) [000243] --CXG-------              *  CALL      void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0 $VN.Void
               [000663] ------------                 IL_OFFSET void   IL offset: 0x12d
N001 (  1,  1) [000244] ------------       t244 =    LCL_VAR   int    V10 loc8         u:3 (last use) $2ca
N002 (  1,  1) [000245] -c----------       t245 =    CNS_INT   int    1 $41
                                                  /--*  t244   int    
                                                  +--*  t245   int    
N003 (  3,  3) [000246] ------------       t246 = *  ADD       int    $2ad
                                                  /--*  t246   int    
N005 (  3,  3) [000248] DA----------              *  STORE_LCL_VAR int    V10 loc8         d:4

------------ BB17 [000..147) -> BB19 (cond), preds={BB13,BB16} succs={BB18,BB19}
N001 (  0,  0) [000598] ------------       t598 =    PHI_ARG   int    V10 loc8         u:4
N002 (  0,  0) [000597] ------------       t597 =    PHI_ARG   int    V10 loc8         u:2 $40
                                                  /--*  t598   int    
                                                  +--*  t597   int    
N003 (  0,  0) [000580] ------------       t580 = *  PHI       int   
                                                  /--*  t580   int    
N005 (  0,  0) [000581] DA----------              *  STORE_LCL_VAR int    V10 loc8         d:3
N001 (  1,  1) [000236] ------------       t236 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t236   ref    
N003 (  2,  2) [000566] -c----------       t566 = *  LEA(b+60) byref 
                                                  /--*  t566   byref  
N004 (  4,  4) [000237] n---GO------       t237 = *  IND       int    <l:$2a9, c:$2a8>
                                                  /--*  t237   int    
N006 (  4,  4) [000424] DA--GO------              *  STORE_LCL_VAR int    V39 tmp28        d:2
N001 (  1,  1) [000412] ------------       t412 =    LCL_VAR   int    V39 tmp28        u:2 <l:$2a7, c:$680>
N002 (  1,  1) [000411] -c----------       t411 =    CNS_INT   int    8 $57
                                                  /--*  t412   int    
                                                  +--*  t411   int    
N003 (  3,  3) [000413] J------N----              *  GE        void   <l:$2ab, c:$2aa>
N004 (  5,  5) [000414] ------------              *  JTRUE     void  

------------ BB18 [000..000) -> BB20 (always), preds={BB17} succs={BB20}
N001 (  1,  1) [000419] ------------       t419 =    LCL_VAR   int    V39 tmp28        u:2 (last use) <l:$2a7, c:$680>
                                                  /--*  t419   int    
N003 (  1,  3) [000421] DA----------              *  STORE_LCL_VAR int    V38 tmp27        d:4

------------ BB19 [000..000), preds={BB17} succs={BB20}
N001 (  1,  1) [000415] -c----------       t415 =    CNS_INT   int    8 $57
                                                  /--*  t415   int    
N003 (  1,  3) [000417] DA----------              *  STORE_LCL_VAR int    V38 tmp27        d:3

------------ BB20 [???..???) -> BB16 (cond), preds={BB18,BB19} succs={BB21,BB16}
N001 (  0,  0) [000600] ------------       t600 =    PHI_ARG   int    V38 tmp27        u:4 <l:$2a7, c:$680>
N002 (  0,  0) [000599] ------------       t599 =    PHI_ARG   int    V38 tmp27        u:3 $57
                                                  /--*  t600   int    
                                                  +--*  t599   int    
N003 (  0,  0) [000583] ------------       t583 = *  PHI       int   
                                                  /--*  t583   int    
N005 (  0,  0) [000584] DA----------              *  STORE_LCL_VAR int    V38 tmp27        d:2
N001 (  1,  1) [000233] ------------       t233 =    LCL_VAR   int    V10 loc8         u:3 $2ca
N002 (  1,  1) [000422] ------------       t422 =    LCL_VAR   int    V38 tmp27        u:2 (last use) $2cb
                                                  /--*  t233   int    
                                                  +--*  t422   int    
N003 (  3,  3) [000240] J------N----              *  LT        void   $2ac
N004 (  5,  5) [000241] ------------              *  JTRUE     void  

------------ BB21 [147..153) (return), preds={BB20} succs={}
               [000664] ------------                 IL_OFFSET void   IL offset: 0x147
N001 (  1,  1) [000249] ------------       t249 =    LCL_VAR   ref    V02 loc0         u:2 (last use) $180
                                                  /--*  t249   ref    
N003 (  2,  2) [000568] -c----------       t568 = *  LEA(b+24) byref 
                                                  /--*  t568   byref  
N004 (  4,  4) [000250] n---GO------       t250 = *  IND       ref    <l:$575, c:$574>
                                                  /--*  t250   ref    
N006 (  4,  4) [000429] DA--GO------              *  STORE_LCL_VAR ref    V40 tmp29        d:2
N001 (  1,  1) [000426] ------------       t426 =    LCL_VAR   ref    V40 tmp29        u:2 (last use) <l:$573, c:$177>
                                                  /--*  t426   ref    
N003 (  2,  2) [000570] -c----------       t570 = *  LEA(b+8)  byref 
                                                  /--*  t570   byref  
N004 (  4,  4) [000427] ---XG-------       t427 = *  IND       ref    <l:$57b, c:$57a>
                                                  /--*  t427   ref    
N005 (  5,  5) [000253] ---XG-------              *  RETURN    ref    $17a

------------ BB25 [???..???) (throw), preds={} succs={}
N001 ( 14,  5) [000672] --CXG-------                 CALL help void   HELPER.CORINFO_HELP_RNGCHKFAIL

------------ BB22 [0F4..0F8) -> BB24 (cond), preds={} succs={BB23,BB24}
               [000665] ------------                 IL_OFFSET void   IL offset: 0xf4
N001 (  1,  1) [000254] -c----------       t254 =    LCL_VAR   ref    V06 loc4         u:2 $164
N002 (  1,  1) [000255] -c----------       t255 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t254   ref    
                                                  +--*  t255   ref    
N003 (  3,  3) [000256] J------N----              *  EQ        void   $293
N004 (  5,  5) [000257] ------------              *  JTRUE     void  

------------ BB23 [0F8..0FF), preds={BB22} succs={BB24}
               [000666] ------------                 IL_OFFSET void   IL offset: 0xf8
N003 (  1,  1) [000259] ------------       t259 =    LCL_VAR   ref    V06 loc4         u:2 (last use) $164
                                                  /--*  t259   ref    
               [000727] ------------       t727 = *  PUTARG_REG ref    REG rcx
N004 (  2, 10) [000542] H-----------       t542 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127
                                                  /--*  t542   long   
               [000728] ------------       t728 = *  PUTARG_REG long   REG r11
N001 (  2, 10) [000729] Hc----------       t729 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t729   long   
N002 (  4, 12) [000730] -c----------       t730 = *  IND       long   REG NA
                                                  /--*  t727   ref    this in rcx
                                                  +--*  t728   long   arg1 in r11
                                                  +--*  t730   long   control expr
N005 ( 23, 21) [000260] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose $VN.Void

------------ BB24 [0FF..100) (finret), preds={BB22,BB23} succs={}
               [000667] ------------                 IL_OFFSET void   IL offset: 0xff
N001 (  0,  0) [000258] ------------                 RETFILT   void   $600

-------------------------------------------------------------------------------------------------------------------

*** lvaComputeRefCounts ***

*** lvaComputeRefCounts -- explicit counts ***
New refCnts for V12: refCnt =  1, refCntWtd = 2   
New refCnts for V12: refCnt =  2, refCntWtd = 4   
New refCnts for V02: refCnt =  1, refCntWtd = 1   
New refCnts for V02: refCnt =  2, refCntWtd = 2   
New refCnts for V01: refCnt =  1, refCntWtd = 1   
New refCnts for V02: refCnt =  3, refCntWtd = 3   
New refCnts for V02: refCnt =  4, refCntWtd = 4   
New refCnts for V13: refCnt =  1, refCntWtd = 2   
New refCnts for V30: refCnt =  1, refCntWtd = 2   
New refCnts for V30: refCnt =  2, refCntWtd = 4   
New refCnts for V13: refCnt =  2, refCntWtd = 4   
New refCnts for V30: refCnt =  3, refCntWtd = 6   
New refCnts for V02: refCnt =  5, refCntWtd = 5   
New refCnts for V13: refCnt =  3, refCntWtd = 6   
New refCnts for V14: refCnt =  1, refCntWtd = 2   
New refCnts for V14: refCnt =  2, refCntWtd = 4   
New refCnts for V02: refCnt =  6, refCntWtd = 6   
New refCnts for V14: refCnt =  3, refCntWtd = 6   
New refCnts for V02: refCnt =  7, refCntWtd = 7   
New refCnts for V15: refCnt =  1, refCntWtd = 2   
New refCnts for V15: refCnt =  2, refCntWtd = 4   
New refCnts for V02: refCnt =  8, refCntWtd = 8   
New refCnts for V15: refCnt =  3, refCntWtd = 6   
New refCnts for V31: refCnt =  1, refCntWtd = 2   
New refCnts for V31: refCnt =  2, refCntWtd = 4   
New refCnts for V31: refCnt =  3, refCntWtd = 6   
New refCnts for V31: refCnt =  4, refCntWtd = 8   
New refCnts for V32: refCnt =  1, refCntWtd = 2   
New refCnts for V32: refCnt =  2, refCntWtd = 4   
New refCnts for V03: refCnt =  1, refCntWtd = 1   
New refCnts for V03: refCnt =  2, refCntWtd = 2   
New refCnts for V03: refCnt =  3, refCntWtd = 3   
New refCnts for V04: refCnt =  1, refCntWtd = 1   
New refCnts for V41: refCnt =  1, refCntWtd = 2   
New refCnts for V41: refCnt =  2, refCntWtd = 4   
New refCnts for V41: refCnt =  3, refCntWtd = 6   
New refCnts for V05: refCnt =  1, refCntWtd = 1   
New refCnts for V00: refCnt =  1, refCntWtd = 1   
New refCnts for V06: refCnt =  1, refCntWtd = 1   
New refCnts for V06: refCnt =  2, refCntWtd = 2   
New refCnts for V06: refCnt =  3, refCntWtd = 6   
New refCnts for V07: refCnt =  1, refCntWtd = 4   
New refCnts for V16: refCnt =  1, refCntWtd = 8   
New refCnts for V16: refCnt =  2, refCntWtd = 16   
New refCnts for V03: refCnt =  4, refCntWtd = 7   
New refCnts for V16: refCnt =  3, refCntWtd = 24   
New refCnts for V17: refCnt =  1, refCntWtd = 4   
New refCnts for V17: refCnt =  2, refCntWtd = 8   
New refCnts for V18: refCnt =  1, refCntWtd = 4   
New refCnts for V04: refCnt =  2, refCntWtd = 5   
New refCnts for V18: refCnt =  2, refCntWtd = 6   
New refCnts for V19: refCnt =  1, refCntWtd = 2   
New refCnts for V19: refCnt =  2, refCntWtd = 4   
New refCnts for V20: refCnt =  1, refCntWtd = 2   
New refCnts for V07: refCnt =  2, refCntWtd = 6   
New refCnts for V21: refCnt =  1, refCntWtd = 2   
New refCnts for V18: refCnt =  3, refCntWtd = 8   
New refCnts for V19: refCnt =  3, refCntWtd = 6   
New refCnts for V19: refCnt =  4, refCntWtd = 8   
New refCnts for V20: refCnt =  2, refCntWtd = 4   
New refCnts for V05: refCnt =  2, refCntWtd = 3   
New refCnts for V07: refCnt =  3, refCntWtd = 8   
New refCnts for V21: refCnt =  2, refCntWtd = 4   
New refCnts for V20: refCnt =  3, refCntWtd = 8   
New refCnts for V21: refCnt =  3, refCntWtd = 8   
New refCnts for V19: refCnt =  5, refCntWtd = 12   
New refCnts for V02: refCnt =  9, refCntWtd = 12   
New refCnts for V23: refCnt =  1, refCntWtd = 8   
New refCnts for V02: refCnt = 10, refCntWtd = 16   
New refCnts for V22: refCnt =  1, refCntWtd = 8   
New refCnts for V23: refCnt =  2, refCntWtd = 16   
New refCnts for V24: refCnt =  1, refCntWtd = 4   
New refCnts for V19: refCnt =  6, refCntWtd = 16   
New refCnts for V25: refCnt =  1, refCntWtd = 4   
New refCnts for V22: refCnt =  2, refCntWtd = 16   
New refCnts for V26: refCnt =  1, refCntWtd = 4   
New refCnts for V26: refCnt =  2, refCntWtd = 8   
New refCnts for V28: refCnt =  1, refCntWtd = 4   
New refCnts for V28: refCnt =  2, refCntWtd = 8   
New refCnts for V02: refCnt = 11, refCntWtd = 18   
New refCnts for V28: refCnt =  3, refCntWtd = 12   
New refCnts for V02: refCnt = 12, refCntWtd = 20   
New refCnts for V28: refCnt =  4, refCntWtd = 16   
New refCnts for V28: refCnt =  5, refCntWtd = 20   
New refCnts for V26: refCnt =  3, refCntWtd = 10   
New refCnts for V27: refCnt =  1, refCntWtd = 8   
New refCnts for V27: refCnt =  2, refCntWtd = 16   
New refCnts for V02: refCnt = 13, refCntWtd = 24   
New refCnts for V27: refCnt =  3, refCntWtd = 24   
New refCnts for V25: refCnt =  2, refCntWtd = 8   
New refCnts for V26: refCnt =  4, refCntWtd = 14   
New refCnts for V27: refCnt =  4, refCntWtd = 32   
New refCnts for V42: refCnt =  1, refCntWtd = 8   
New refCnts for V42: refCnt =  2, refCntWtd = 16   
New refCnts for V24: refCnt =  2, refCntWtd = 8   
New refCnts for V06: refCnt =  4, refCntWtd = 10   
New refCnts for V06: refCnt =  5, refCntWtd = 11   
New refCnts for V02: refCnt = 14, refCntWtd = 25   
New refCnts for V35: refCnt =  1, refCntWtd = 2   
New refCnts for V35: refCnt =  2, refCntWtd = 4   
New refCnts for V02: refCnt = 15, refCntWtd = 26   
New refCnts for V29: refCnt =  1, refCntWtd = 2   
New refCnts for V02: refCnt = 16, refCntWtd = 27   
New refCnts for V37: refCnt =  1, refCntWtd = 2   
New refCnts for V36: refCnt =  1, refCntWtd = 2   
New refCnts for V36: refCnt =  2, refCntWtd = 4   
New refCnts for V29: refCnt =  2, refCntWtd = 4   
New refCnts for V36: refCnt =  3, refCntWtd = 6   
New refCnts for V29: refCnt =  3, refCntWtd = 6   
New refCnts for V37: refCnt =  2, refCntWtd = 4   
New refCnts for V02: refCnt = 17, refCntWtd = 28   
New refCnts for V29: refCnt =  4, refCntWtd = 8   
New refCnts for V10: refCnt =  1, refCntWtd = 1   
New refCnts for V02: refCnt = 18, refCntWtd = 30   
New refCnts for V10: refCnt =  2, refCntWtd = 3   
New refCnts for V10: refCnt =  3, refCntWtd = 5   
New refCnts for V02: refCnt = 19, refCntWtd = 38   
New refCnts for V39: refCnt =  1, refCntWtd = 16   
New refCnts for V39: refCnt =  2, refCntWtd = 32   
New refCnts for V39: refCnt =  3, refCntWtd = 36   
New refCnts for V38: refCnt =  1, refCntWtd = 2   
New refCnts for V38: refCnt =  2, refCntWtd = 4   
New refCnts for V10: refCnt =  4, refCntWtd = 13   
New refCnts for V38: refCnt =  3, refCntWtd = 12   
New refCnts for V02: refCnt = 20, refCntWtd = 39   
New refCnts for V40: refCnt =  1, refCntWtd = 2   
New refCnts for V40: refCnt =  2, refCntWtd = 4   
New refCnts for V06: refCnt =  6, refCntWtd = 11   
New refCnts for V06: refCnt =  7, refCntWtd = 11   

*** lvaComputeRefCounts -- implicit counts ***
New refCnts for V00: refCnt =  2, refCntWtd = 2   
New refCnts for V00: refCnt =  3, refCntWtd = 3   
New refCnts for V01: refCnt =  2, refCntWtd = 2   
New refCnts for V01: refCnt =  3, refCntWtd = 3   
*************** In fgLocalVarLiveness()
; Initial local variable assignments
;
;  V00 arg0              ref  class-hnd
;  V01 arg1              ref  class-hnd
;  V02 loc0              ref  class-hnd exact
;  V03 loc1              ref  class-hnd
;  V04 loc2             bool 
;  V05 loc3              ref  class-hnd
;  V06 loc4              ref  EH do-not-enreg[] class-hnd EH-live
;  V07 loc5              ref  class-hnd
;  V08 loc6              ref  class-hnd
;  V09 loc7              ref  class-hnd exact
;  V10 loc8              int 
;  V11 OutArgs        lclBlk <40>  "OutgoingArgSpace"
;  V12 tmp1              ref  class-hnd exact "NewObj constructor temp"
;  V13 tmp2              ref  class-hnd exact "NewObj constructor temp"
;  V14 tmp3              ref  class-hnd exact "NewObj constructor temp"
;  V15 tmp4              ref  class-hnd exact "NewObj constructor temp"
;  V16 tmp5              ref  class-hnd exact "NewObj constructor temp"
;  V17 tmp6              ref 
;  V18 tmp7              ref 
;  V19 tmp8              ref 
;  V20 tmp9              ref 
;  V21 tmp10             ref 
;  V22 tmp11             ref  class-hnd "dup spill"
;  V23 tmp12             ref  class-hnd "impAppendStmt"
;  V24 tmp13             ref 
;  V25 tmp14             ref 
;  V26 tmp15             ref 
;  V27 tmp16             ref  class-hnd exact "NewObj constructor temp"
;  V28 tmp17             ref  class-hnd exact "NewObj constructor temp"
;  V29 tmp18             ref  class-hnd exact "NewObj constructor temp"
;  V30 tmp19             ref  class-hnd exact "NewObj constructor temp"
;  V31 tmp20             ref  class-hnd "Inlining Arg"
;  V32 tmp21             ref  class-hnd "Inlining Arg"
;  V33 tmp22            long  "Inlining Arg"
;  V34 tmp23            long  "Inlining Arg"
;  V35 tmp24             ref  class-hnd "Inlining Arg"
;  V36 tmp25             ref  class-hnd exact "NewObj constructor temp"
;  V37 tmp26             int  "Inlining Arg"
;  V38 tmp27             int  "Inline return value spill temp"
;  V39 tmp28             int  "Inlining Arg"
;  V40 tmp29             ref  class-hnd "Inlining Arg"
;  V41 tmp30             ref  "arr expr"
;  V42 tmp31             ref  "argument with side effect"
;  V43 PSPSym           long  do-not-enreg[X] addr-exposed "PSPSym"
In fgLocalVarLivenessInit
Tracked variable (38 out of 44) table:
V02 loc0          [   ref]: refCnt =   20, refCntWtd =  39   
V39 tmp28         [   int]: refCnt =    3, refCntWtd =  36   
V27 tmp16         [   ref]: refCnt =    4, refCntWtd =  32   
V16 tmp5          [   ref]: refCnt =    3, refCntWtd =  24   
V28 tmp17         [   ref]: refCnt =    5, refCntWtd =  20   
V19 tmp8          [   ref]: refCnt =    6, refCntWtd =  16   
V22 tmp11         [   ref]: refCnt =    2, refCntWtd =  16   
V23 tmp12         [   ref]: refCnt =    2, refCntWtd =  16   
V42 tmp31         [   ref]: refCnt =    2, refCntWtd =  16   
V26 tmp15         [   ref]: refCnt =    4, refCntWtd =  14   
V10 loc8          [   int]: refCnt =    4, refCntWtd =  13   
V38 tmp27         [   int]: refCnt =    3, refCntWtd =  12   
V06 loc4          [   ref]: refCnt =    7, refCntWtd =  11   
V29 tmp18         [   ref]: refCnt =    4, refCntWtd =   8   
V31 tmp20         [   ref]: refCnt =    4, refCntWtd =   8   
V07 loc5          [   ref]: refCnt =    3, refCntWtd =   8   
V18 tmp7          [   ref]: refCnt =    3, refCntWtd =   8   
V20 tmp9          [   ref]: refCnt =    3, refCntWtd =   8   
V21 tmp10         [   ref]: refCnt =    3, refCntWtd =   8   
V17 tmp6          [   ref]: refCnt =    2, refCntWtd =   8   
V24 tmp13         [   ref]: refCnt =    2, refCntWtd =   8   
V25 tmp14         [   ref]: refCnt =    2, refCntWtd =   8   
V03 loc1          [   ref]: refCnt =    4, refCntWtd =   7   
V13 tmp2          [   ref]: refCnt =    3, refCntWtd =   6   
V14 tmp3          [   ref]: refCnt =    3, refCntWtd =   6   
V15 tmp4          [   ref]: refCnt =    3, refCntWtd =   6   
V30 tmp19         [   ref]: refCnt =    3, refCntWtd =   6   
V36 tmp25         [   ref]: refCnt =    3, refCntWtd =   6   
V41 tmp30         [   ref]: refCnt =    3, refCntWtd =   6   
V00 arg0          [   ref]: refCnt =    3, refCntWtd =   3   
V01 arg1          [   ref]: refCnt =    3, refCntWtd =   3   
V04 loc2          [  bool]: refCnt =    2, refCntWtd =   5   
V12 tmp1          [   ref]: refCnt =    2, refCntWtd =   4   
V32 tmp21         [   ref]: refCnt =    2, refCntWtd =   4   
V35 tmp24         [   ref]: refCnt =    2, refCntWtd =   4   
V40 tmp29         [   ref]: refCnt =    2, refCntWtd =   4   
V37 tmp26         [   int]: refCnt =    2, refCntWtd =   4   
V05 loc3          [   ref]: refCnt =    2, refCntWtd =   3   

*************** In fgPerBlockLocalVarLiveness()
BB01 USE(2)={                                    V00 V01                } + ByrefExposed + GcHeap
     DEF(13)={V02 V06 V31 V03 V13 V14 V15 V30 V41         V04 V12 V32 V05} + ByrefExposed* + GcHeap*

BB02 USE(1)={V06} + ByrefExposed + GcHeap
     DEF(0)={   } + ByrefExposed* + GcHeap*

BB03 USE(3)={    V06             V03 V04} + ByrefExposed + GcHeap
     DEF(4)={V16     V07 V18 V17        } + ByrefExposed* + GcHeap*

BB04 USE(2)={    V07 V18        }
     DEF(3)={V19         V20 V21}

BB05 USE(3)={    V07 V18         V05} + ByrefExposed + GcHeap
     DEF(3)={V19         V20 V21    } + ByrefExposed* + GcHeap*

BB06 USE(4)={V02 V19             V20 V21        } + ByrefExposed + GcHeap
     DEF(5)={        V22 V23 V26         V24 V25}

BB07 USE(1)={V02        }
     DEF(2)={    V28 V26}

BB09 USE(5)={V02         V26 V06 V24 V25} + ByrefExposed + GcHeap
     DEF(2)={    V27 V42                } + ByrefExposed* + GcHeap*

BB13 USE(2)={V02     V06                } + ByrefExposed + GcHeap
     DEF(5)={    V10     V29 V36 V35 V37} + ByrefExposed* + GcHeap*

BB16 USE(2)={V02 V10} + ByrefExposed + GcHeap
     DEF(1)={    V10} + ByrefExposed* + GcHeap*

BB17 USE(1)={V02    } + ByrefExposed + GcHeap
     DEF(1)={    V39}

BB18 USE(1)={V39    }
     DEF(1)={    V38}

BB19 USE(0)={   }
     DEF(1)={V38}

BB20 USE(2)={V10 V38}
     DEF(0)={       }

BB21 USE(1)={V02    } + ByrefExposed + GcHeap
     DEF(1)={    V40}

BB25 USE(0)={}
     DEF(0)={}

BB22 USE(1)={V06}
     DEF(0)={   }

BB23 USE(1)={V06} + ByrefExposed + GcHeap
     DEF(0)={   } + ByrefExposed* + GcHeap*

BB24 USE(0)={}
     DEF(0)={}

** Memory liveness computed, GcHeap states and ByrefExposed states match
*************** In fgInterBlockLocalVarLiveness()

BB liveness after fgLiveVarAnalysis():

BB01 IN (2)={            V00 V01        } + ByrefExposed + GcHeap
     OUT(5)={V02 V06 V03         V04 V05} + ByrefExposed + GcHeap

BB02 IN (5)={V02 V06 V03 V04 V05} + ByrefExposed + GcHeap
     OUT(5)={V02 V06 V03 V04 V05} + ByrefExposed + GcHeap

BB03 IN (5)={V02 V06         V03 V04 V05} + ByrefExposed + GcHeap
     OUT(7)={V02 V06 V07 V18 V03 V04 V05} + ByrefExposed + GcHeap

BB04 IN (7)={V02     V06 V07 V18         V03 V04 V05} + ByrefExposed + GcHeap
     OUT(8)={V02 V19 V06         V20 V21 V03 V04 V05} + ByrefExposed + GcHeap

BB05 IN (7)={V02     V06 V07 V18         V03 V04 V05} + ByrefExposed + GcHeap
     OUT(8)={V02 V19 V06         V20 V21 V03 V04 V05} + ByrefExposed + GcHeap

BB06 IN (8)={V02 V19     V06 V20 V21         V03 V04 V05} + ByrefExposed + GcHeap
     OUT(8)={V02     V26 V06         V24 V25 V03 V04 V05} + ByrefExposed + GcHeap

BB07 IN (7)={V02     V06 V24 V25 V03 V04 V05} + ByrefExposed + GcHeap
     OUT(8)={V02 V26 V06 V24 V25 V03 V04 V05} + ByrefExposed + GcHeap

BB09 IN (8)={V02 V26 V06 V24 V25 V03 V04 V05} + ByrefExposed + GcHeap
     OUT(5)={V02     V06         V03 V04 V05} + ByrefExposed + GcHeap

BB13 IN (2)={V02     V06} + ByrefExposed + GcHeap
     OUT(2)={V02 V10    } + ByrefExposed + GcHeap

BB16 IN (2)={V02 V10} + ByrefExposed + GcHeap
     OUT(2)={V02 V10} + ByrefExposed + GcHeap

BB17 IN (2)={V02     V10} + ByrefExposed + GcHeap
     OUT(3)={V02 V39 V10} + ByrefExposed + GcHeap

BB18 IN (3)={V02 V39 V10    } + ByrefExposed + GcHeap
     OUT(3)={V02     V10 V38} + ByrefExposed + GcHeap

BB19 IN (2)={V02 V10    } + ByrefExposed + GcHeap
     OUT(3)={V02 V10 V38} + ByrefExposed + GcHeap

BB20 IN (3)={V02 V10 V38} + ByrefExposed + GcHeap
     OUT(2)={V02 V10    } + ByrefExposed + GcHeap

BB21 IN (1)={V02} + ByrefExposed + GcHeap
     OUT(0)={   }

BB25 IN (0)={}
     OUT(0)={}

BB22 IN (1)={V06} + ByrefExposed + GcHeap
     OUT(1)={V06} + ByrefExposed + GcHeap

BB23 IN (1)={V06} + ByrefExposed + GcHeap
     OUT(0)={   }

BB24 IN (0)={}
     OUT(0)={}


Local V06 should not be enregistered because: live in/out of a handler

*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck LIR 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB13 ( cond ) T0      try {       keep i try label hascall gcsafe LIR 
BB03 [0002]  2  0    BB02,BB09             4     0 [072..08B)-> BB05 ( cond ) T0                  i Loop label target hascall gcsafe newobj bwd bwd-target LIR 
BB04 [0003]  1  0    BB03                  2     0 [08B..08F)-> BB06 (always) T0                  i gcsafe bwd LIR 
BB05 [0004]  1  0    BB03                  2     0 [08F..09C)                 T0                  i label target hascall gcsafe bwd LIR 
BB06 [0005]  2  0    BB04,BB05             4     0 [09C..0BB)-> BB09 ( cond ) T0                  i label target gcsafe bwd LIR 
BB07 [0006]  1  0    BB06                  2     0 [000..0D3)                 T0                  i hascall gcsafe newobj bwd LIR 
BB09 [0007]  2  0    BB06,BB07             4     0 [000..0F2)-> BB03 ( cond ) T0      }           i label target hascall gcsafe newobj bwd LIR 
BB13 [0057]  2       BB02,BB09             1       [0F4..127)-> BB17 (always)                     keep i label target gcsafe newobj LIR cfb 
BB16 [0014]  1       BB20                  2     1 [127..133)                                     i Loop label target hascall gcsafe bwd bwd-target LIR 
BB17 [0015]  2       BB13,BB16             8     1 [000..147)-> BB19 ( cond )                     i label target gcsafe bwd LIR 
BB18 [0053]  1       BB17                  2     1 [000..000)-> BB20 (always)                     i internal gcsafe bwd LIR 
BB19 [0054]  1       BB17                  2     1 [000..000)                                     i internal label target gcsafe bwd LIR 
BB20 [0055]  2       BB18,BB19             8     1 [???..???)-> BB16 ( cond )                     internal label target gcsafe bwd LIR 
BB21 [0016]  1       BB20                  1       [147..153)        (return)                     i gcsafe LIR 
BB25 [0062]  0                             0       [???..???)        (throw )                     keep i internal rare label target LIR 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB22 [0010]  1     0                       0       [0F4..0F8)-> BB24 ( cond )    H0 F fault {     keep i rare label target flet LIR 
BB23 [0011]  1     0 BB22                  0       [0F8..0FF)                    H0               i rare hascall gcsafe LIR 
BB24 [0012]  2     0 BB22,BB23             0       [0FF..100)        (finret)    H0   }           i rare label target LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist

*** lvaComputeRefCounts ***

*** lvaComputeRefCounts -- explicit counts ***
New refCnts for V12: refCnt =  1, refCntWtd = 2   
New refCnts for V12: refCnt =  2, refCntWtd = 4   
New refCnts for V02: refCnt =  1, refCntWtd = 1   
New refCnts for V02: refCnt =  2, refCntWtd = 2   
New refCnts for V01: refCnt =  1, refCntWtd = 1   
New refCnts for V02: refCnt =  3, refCntWtd = 3   
New refCnts for V02: refCnt =  4, refCntWtd = 4   
New refCnts for V13: refCnt =  1, refCntWtd = 2   
New refCnts for V30: refCnt =  1, refCntWtd = 2   
New refCnts for V30: refCnt =  2, refCntWtd = 4   
New refCnts for V13: refCnt =  2, refCntWtd = 4   
New refCnts for V30: refCnt =  3, refCntWtd = 6   
New refCnts for V02: refCnt =  5, refCntWtd = 5   
New refCnts for V13: refCnt =  3, refCntWtd = 6   
New refCnts for V14: refCnt =  1, refCntWtd = 2   
New refCnts for V14: refCnt =  2, refCntWtd = 4   
New refCnts for V02: refCnt =  6, refCntWtd = 6   
New refCnts for V14: refCnt =  3, refCntWtd = 6   
New refCnts for V02: refCnt =  7, refCntWtd = 7   
New refCnts for V15: refCnt =  1, refCntWtd = 2   
New refCnts for V15: refCnt =  2, refCntWtd = 4   
New refCnts for V02: refCnt =  8, refCntWtd = 8   
New refCnts for V15: refCnt =  3, refCntWtd = 6   
New refCnts for V31: refCnt =  1, refCntWtd = 2   
New refCnts for V31: refCnt =  2, refCntWtd = 4   
New refCnts for V31: refCnt =  3, refCntWtd = 6   
New refCnts for V31: refCnt =  4, refCntWtd = 8   
New refCnts for V32: refCnt =  1, refCntWtd = 2   
New refCnts for V32: refCnt =  2, refCntWtd = 4   
New refCnts for V03: refCnt =  1, refCntWtd = 1   
New refCnts for V03: refCnt =  2, refCntWtd = 2   
New refCnts for V03: refCnt =  3, refCntWtd = 3   
New refCnts for V04: refCnt =  1, refCntWtd = 1   
New refCnts for V41: refCnt =  1, refCntWtd = 2   
New refCnts for V41: refCnt =  2, refCntWtd = 4   
New refCnts for V41: refCnt =  3, refCntWtd = 6   
New refCnts for V05: refCnt =  1, refCntWtd = 1   
New refCnts for V00: refCnt =  1, refCntWtd = 1   
New refCnts for V06: refCnt =  1, refCntWtd = 1   
New refCnts for V06: refCnt =  2, refCntWtd = 2   
New refCnts for V06: refCnt =  3, refCntWtd = 6   
New refCnts for V07: refCnt =  1, refCntWtd = 4   
New refCnts for V16: refCnt =  1, refCntWtd = 8   
New refCnts for V16: refCnt =  2, refCntWtd = 16   
New refCnts for V03: refCnt =  4, refCntWtd = 7   
New refCnts for V16: refCnt =  3, refCntWtd = 24   
New refCnts for V17: refCnt =  1, refCntWtd = 4   
New refCnts for V17: refCnt =  2, refCntWtd = 8   
New refCnts for V18: refCnt =  1, refCntWtd = 4   
New refCnts for V04: refCnt =  2, refCntWtd = 5   
New refCnts for V18: refCnt =  2, refCntWtd = 6   
New refCnts for V19: refCnt =  1, refCntWtd = 2   
New refCnts for V19: refCnt =  2, refCntWtd = 4   
New refCnts for V20: refCnt =  1, refCntWtd = 2   
New refCnts for V07: refCnt =  2, refCntWtd = 6   
New refCnts for V21: refCnt =  1, refCntWtd = 2   
New refCnts for V18: refCnt =  3, refCntWtd = 8   
New refCnts for V19: refCnt =  3, refCntWtd = 6   
New refCnts for V19: refCnt =  4, refCntWtd = 8   
New refCnts for V20: refCnt =  2, refCntWtd = 4   
New refCnts for V05: refCnt =  2, refCntWtd = 3   
New refCnts for V07: refCnt =  3, refCntWtd = 8   
New refCnts for V21: refCnt =  2, refCntWtd = 4   
New refCnts for V20: refCnt =  3, refCntWtd = 8   
New refCnts for V21: refCnt =  3, refCntWtd = 8   
New refCnts for V19: refCnt =  5, refCntWtd = 12   
New refCnts for V02: refCnt =  9, refCntWtd = 12   
New refCnts for V23: refCnt =  1, refCntWtd = 8   
New refCnts for V02: refCnt = 10, refCntWtd = 16   
New refCnts for V22: refCnt =  1, refCntWtd = 8   
New refCnts for V23: refCnt =  2, refCntWtd = 16   
New refCnts for V24: refCnt =  1, refCntWtd = 4   
New refCnts for V19: refCnt =  6, refCntWtd = 16   
New refCnts for V25: refCnt =  1, refCntWtd = 4   
New refCnts for V22: refCnt =  2, refCntWtd = 16   
New refCnts for V26: refCnt =  1, refCntWtd = 4   
New refCnts for V26: refCnt =  2, refCntWtd = 8   
New refCnts for V28: refCnt =  1, refCntWtd = 4   
New refCnts for V28: refCnt =  2, refCntWtd = 8   
New refCnts for V02: refCnt = 11, refCntWtd = 18   
New refCnts for V28: refCnt =  3, refCntWtd = 12   
New refCnts for V02: refCnt = 12, refCntWtd = 20   
New refCnts for V28: refCnt =  4, refCntWtd = 16   
New refCnts for V28: refCnt =  5, refCntWtd = 20   
New refCnts for V26: refCnt =  3, refCntWtd = 10   
New refCnts for V27: refCnt =  1, refCntWtd = 8   
New refCnts for V27: refCnt =  2, refCntWtd = 16   
New refCnts for V02: refCnt = 13, refCntWtd = 24   
New refCnts for V27: refCnt =  3, refCntWtd = 24   
New refCnts for V25: refCnt =  2, refCntWtd = 8   
New refCnts for V26: refCnt =  4, refCntWtd = 14   
New refCnts for V27: refCnt =  4, refCntWtd = 32   
New refCnts for V42: refCnt =  1, refCntWtd = 8   
New refCnts for V42: refCnt =  2, refCntWtd = 16   
New refCnts for V24: refCnt =  2, refCntWtd = 8   
New refCnts for V06: refCnt =  4, refCntWtd = 10   
New refCnts for V06: refCnt =  5, refCntWtd = 11   
New refCnts for V02: refCnt = 14, refCntWtd = 25   
New refCnts for V35: refCnt =  1, refCntWtd = 2   
New refCnts for V35: refCnt =  2, refCntWtd = 4   
New refCnts for V02: refCnt = 15, refCntWtd = 26   
New refCnts for V29: refCnt =  1, refCntWtd = 2   
New refCnts for V02: refCnt = 16, refCntWtd = 27   
New refCnts for V37: refCnt =  1, refCntWtd = 2   
New refCnts for V36: refCnt =  1, refCntWtd = 2   
New refCnts for V36: refCnt =  2, refCntWtd = 4   
New refCnts for V29: refCnt =  2, refCntWtd = 4   
New refCnts for V36: refCnt =  3, refCntWtd = 6   
New refCnts for V29: refCnt =  3, refCntWtd = 6   
New refCnts for V37: refCnt =  2, refCntWtd = 4   
New refCnts for V02: refCnt = 17, refCntWtd = 28   
New refCnts for V29: refCnt =  4, refCntWtd = 8   
New refCnts for V10: refCnt =  1, refCntWtd = 1   
New refCnts for V02: refCnt = 18, refCntWtd = 30   
New refCnts for V10: refCnt =  2, refCntWtd = 3   
New refCnts for V10: refCnt =  3, refCntWtd = 5   
New refCnts for V02: refCnt = 19, refCntWtd = 38   
New refCnts for V39: refCnt =  1, refCntWtd = 16   
New refCnts for V39: refCnt =  2, refCntWtd = 32   
New refCnts for V39: refCnt =  3, refCntWtd = 36   
New refCnts for V38: refCnt =  1, refCntWtd = 2   
New refCnts for V38: refCnt =  2, refCntWtd = 4   
New refCnts for V10: refCnt =  4, refCntWtd = 13   
New refCnts for V38: refCnt =  3, refCntWtd = 12   
New refCnts for V02: refCnt = 20, refCntWtd = 39   
New refCnts for V40: refCnt =  1, refCntWtd = 2   
New refCnts for V40: refCnt =  2, refCntWtd = 4   
New refCnts for V06: refCnt =  6, refCntWtd = 11   
New refCnts for V06: refCnt =  7, refCntWtd = 11   

*** lvaComputeRefCounts -- implicit counts ***
New refCnts for V00: refCnt =  2, refCntWtd = 2   
New refCnts for V00: refCnt =  3, refCntWtd = 3   
New refCnts for V01: refCnt =  2, refCntWtd = 2   
New refCnts for V01: refCnt =  3, refCntWtd = 3   

*************** Finishing PHASE Lowering nodeinfo
Trees after Lowering nodeinfo

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck LIR 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB13 ( cond ) T0      try {       keep i try label hascall gcsafe LIR 
BB03 [0002]  2  0    BB02,BB09             4     0 [072..08B)-> BB05 ( cond ) T0                  i Loop label target hascall gcsafe newobj bwd bwd-target LIR 
BB04 [0003]  1  0    BB03                  2     0 [08B..08F)-> BB06 (always) T0                  i gcsafe bwd LIR 
BB05 [0004]  1  0    BB03                  2     0 [08F..09C)                 T0                  i label target hascall gcsafe bwd LIR 
BB06 [0005]  2  0    BB04,BB05             4     0 [09C..0BB)-> BB09 ( cond ) T0                  i label target gcsafe bwd LIR 
BB07 [0006]  1  0    BB06                  2     0 [000..0D3)                 T0                  i hascall gcsafe newobj bwd LIR 
BB09 [0007]  2  0    BB06,BB07             4     0 [000..0F2)-> BB03 ( cond ) T0      }           i label target hascall gcsafe newobj bwd LIR 
BB13 [0057]  2       BB02,BB09             1       [0F4..127)-> BB17 (always)                     keep i label target gcsafe newobj LIR cfb 
BB16 [0014]  1       BB20                  2     1 [127..133)                                     i Loop label target hascall gcsafe bwd bwd-target LIR 
BB17 [0015]  2       BB13,BB16             8     1 [000..147)-> BB19 ( cond )                     i label target gcsafe bwd LIR 
BB18 [0053]  1       BB17                  2     1 [000..000)-> BB20 (always)                     i internal gcsafe bwd LIR 
BB19 [0054]  1       BB17                  2     1 [000..000)                                     i internal label target gcsafe bwd LIR 
BB20 [0055]  2       BB18,BB19             8     1 [???..???)-> BB16 ( cond )                     internal label target gcsafe bwd LIR 
BB21 [0016]  1       BB20                  1       [147..153)        (return)                     i gcsafe LIR 
BB25 [0062]  0                             0       [???..???)        (throw )                     keep i internal rare label target LIR 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB22 [0010]  1     0                       0       [0F4..0F8)-> BB24 ( cond )    H0 F fault {     keep i rare label target flet LIR 
BB23 [0011]  1     0 BB22                  0       [0F8..0FF)                    H0               i rare hascall gcsafe LIR 
BB24 [0012]  2     0 BB22,BB23             0       [0FF..100)        (finret)    H0   }           i rare label target LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..070), preds={} succs={BB02}
               [000613] ------------                 IL_OFFSET void   IL offset: 0x0
N002 (  2, 10) [000000] H-----------         t0 =    CNS_INT(h) long   0xd1ffab1e method $100
                                                  /--*  t0     long   
               [000673] ------------       t673 = *  PUTARG_REG long   REG rcx
                                                  /--*  t673   long   arg0 in rcx
N003 ( 16, 16) [000001] --C---------         t1 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $180
                                                  /--*  t1     ref    
N005 ( 16, 16) [000003] DA----------              *  STORE_LCL_VAR ref    V12 tmp1         d:2
               [000614] ------------                 IL_OFFSET void   IL offset: 0x5
N001 (  1,  1) [000006] ------------         t6 =    LCL_VAR   ref    V12 tmp1         u:2 (last use) $180
                                                  /--*  t6     ref    
N003 (  1,  3) [000008] DA----------              *  STORE_LCL_VAR ref    V02 loc0         d:2
               [000615] ------------                 IL_OFFSET void   IL offset: 0x6
N001 (  1,  1) [000009] ------------         t9 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t9     ref    
N003 (  2,  2) [000440] ------------       t440 = *  LEA(b+32) byref 
N005 (  1,  1) [000010] ------------        t10 =    LCL_VAR   ref    V01 arg1         u:1 (last use) $81
                                                  /--*  t440   byref  
                                                  +--*  t10    ref    
               [000616] -A--GO------              *  STOREIND  ref   
               [000617] ------------                 IL_OFFSET void   IL offset: 0xd
N001 (  1,  1) [000013] ------------        t13 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t13    ref    
N003 (  2,  2) [000442] -c----------       t442 = *  LEA(b+60) byref 
N005 (  1,  1) [000014] ------------        t14 =    CNS_INT   int    0 $40
                                                  /--*  t442   byref  
                                                  +--*  t14    int    
               [000618] -A--GO------              *  STOREIND  int   
               [000619] ------------                 IL_OFFSET void   IL offset: 0x14
N001 (  1,  1) [000017] ------------        t17 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t17    ref    
N003 (  2,  2) [000444] -c----------       t444 = *  LEA(b+56) byref 
N005 (  1,  1) [000018] ------------        t18 =    CNS_INT   int    0 $40
                                                  /--*  t444   byref  
                                                  +--*  t18    int    
               [000620] -A--GO------              *  STOREIND  int   
               [000621] ------------                 IL_OFFSET void   IL offset: 0x1b
N002 (  2, 10) [000022] H-----------        t22 =    CNS_INT(h) long   0xd1ffab1e token $104
                                                  /--*  t22    long   
               [000674] ------------       t674 = *  PUTARG_REG long   REG rcx
                                                  /--*  t674   long   arg0 in rcx
N003 ( 16, 16) [000023] --C---------        t23 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $183
                                                  /--*  t23    ref    
N005 ( 16, 16) [000025] DA----------              *  STORE_LCL_VAR ref    V13 tmp2         d:2
N002 (  2, 10) [000266] H-----------       t266 =    CNS_INT(h) long   0xd1ffab1e token $105
                                                  /--*  t266   long   
               [000675] ------------       t675 = *  PUTARG_REG long   REG rcx
                                                  /--*  t675   long   arg0 in rcx
N003 ( 16, 16) [000267] --C---------       t267 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $184
                                                  /--*  t267   ref    
N005 ( 16, 16) [000269] DA----------              *  STORE_LCL_VAR ref    V30 tmp19        d:2
N001 (  1,  1) [000280] ------------       t280 =    LCL_VAR   ref    V30 tmp19        u:2 $184
                                                  /--*  t280   ref    
N003 (  2,  2) [000448] -c----------       t448 = *  LEA(b+52) byref 
N005 (  1,  4) [000281] -c----------       t281 =    CNS_INT   int    0x2000400 $43
                                                  /--*  t448   byref  
                                                  +--*  t281   int    
               [000622] -A--GO------              *  STOREIND  int   
N001 (  1,  1) [000265] ------------       t265 =    LCL_VAR   ref    V13 tmp2         u:2 $183
                                                  /--*  t265   ref    
N003 (  2,  2) [000450] ------------       t450 = *  LEA(b+8)  byref 
N005 (  1,  1) [000272] ------------       t272 =    LCL_VAR   ref    V30 tmp19        u:2 (last use) $184
                                                  /--*  t450   byref  
                                                  +--*  t272   ref    
               [000623] -A--GO------              *  STOREIND  ref   
               [000624] ------------                 IL_OFFSET void   IL offset: 0x21
N001 (  1,  1) [000021] ------------        t21 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t21    ref    
N003 (  2,  2) [000452] ------------       t452 = *  LEA(b+24) byref 
N005 (  1,  1) [000028] ------------        t28 =    LCL_VAR   ref    V13 tmp2         u:2 (last use) $183
                                                  /--*  t452   byref  
                                                  +--*  t28    ref    
               [000625] -A--GO------              *  STOREIND  ref   
               [000626] ------------                 IL_OFFSET void   IL offset: 0x26
N002 (  2, 10) [000032] H-----------        t32 =    CNS_INT(h) long   0xd1ffab1e token $109
                                                  /--*  t32    long   
               [000676] ------------       t676 = *  PUTARG_REG long   REG rcx
                                                  /--*  t676   long   arg0 in rcx
N003 ( 16, 16) [000033] --C---------        t33 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $189
                                                  /--*  t33    ref    
N005 ( 16, 16) [000035] DA----------              *  STORE_LCL_VAR ref    V14 tmp3         d:2
N003 (  2, 10) [000297] ------------       t297 =    CNS_INT   long   0x7ffc7e0b0028 $1c6
                                                  /--*  t297   long   
               [000677] ------------       t677 = *  PUTARG_REG long   REG rcx
N004 (  1,  1) [000298] ------------       t298 =    CNS_INT   int    14 $44
                                                  /--*  t298   int    
               [000678] ------------       t678 = *  PUTARG_REG int    REG rdx
                                                  /--*  t677   long   arg0 in rcx
                                                  +--*  t678   int    arg1 in rdx
N005 ( 17, 18) [000299] H-CXG-------       t299 = *  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS $381
N006 (  2, 10) [000458] I-----------       t458 =    CNS_INT(h) long   0xd1ffab1e static Fseq[Value] $10a
                                                  /--*  t458   long   
N007 (  4, 12) [000295] n---G-------       t295 = *  IND       ref    <l:$246, c:$14b>
N009 (  1,  1) [000287] ------------       t287 =    LCL_VAR   ref    V14 tmp3         u:2 $189
                                                  /--*  t287   ref    
N011 (  2,  2) [000455] ------------       t455 = *  LEA(b+8)  byref 
                                                  /--*  t455   byref  
                                                  +--*  t295   ref    
               [000627] -ACXGO------              *  STOREIND  ref   
               [000628] ------------                 IL_OFFSET void   IL offset: 0x2c
N001 (  1,  1) [000031] ------------        t31 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t31    ref    
N003 (  2,  2) [000460] ------------       t460 = *  LEA(b+8)  byref 
N005 (  1,  1) [000038] ------------        t38 =    LCL_VAR   ref    V14 tmp3         u:2 (last use) $189
                                                  /--*  t460   byref  
                                                  +--*  t38    ref    
               [000629] -A--GO------              *  STOREIND  ref   
               [000630] ------------                 IL_OFFSET void   IL offset: 0x31
N001 (  1,  1) [000041] ------------        t41 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t41    ref    
N003 (  2,  2) [000462] -c----------       t462 = *  LEA(b+16) byref 
N005 (  1,  1) [000042] ------------        t42 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t462   byref  
                                                  +--*  t42    ref    
               [000631] -A--GO------              *  STOREIND  ref   
               [000632] ------------                 IL_OFFSET void   IL offset: 0x38
N002 (  2, 10) [000046] H-----------        t46 =    CNS_INT(h) long   0xd1ffab1e token $10e
                                                  /--*  t46    long   
               [000679] ------------       t679 = *  PUTARG_REG long   REG rcx
                                                  /--*  t679   long   arg0 in rcx
N003 ( 16, 16) [000047] --C---------        t47 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $193
                                                  /--*  t47    ref    
N005 ( 16, 16) [000049] DA----------              *  STORE_LCL_VAR ref    V15 tmp4         d:2
N003 (  1,  1) [000050] ------------        t50 =    LCL_VAR   ref    V15 tmp4         u:2 $193
                                                  /--*  t50    ref    
               [000680] ------------       t680 = *  PUTARG_REG ref    REG rcx
N004 (  1,  1) [000302] ------------       t302 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t302   ref    
               [000681] ------------       t681 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t680   ref    this in rcx
                                                  +--*  t681   ref    arg1 in rdx
N005 ( 16, 10) [000303] --CXG-------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor $VN.Void
               [000633] ------------                 IL_OFFSET void   IL offset: 0x3e
N001 (  1,  1) [000045] ------------        t45 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t45    ref    
N003 (  2,  2) [000467] ------------       t467 = *  LEA(b+40) byref 
N005 (  1,  1) [000052] ------------        t52 =    LCL_VAR   ref    V15 tmp4         u:2 (last use) $193
                                                  /--*  t467   byref  
                                                  +--*  t52    ref    
               [000634] -A--GO------              *  STOREIND  ref   
N001 ( 14,  5) [000055] --CXG-------        t55 =    CALL      ref    System.Diagnostics.Process.GetCurrentProcess $151
                                                  /--*  t55    ref    
N003 ( 14,  5) [000316] DA-XG-------              *  STORE_LCL_VAR ref    V31 tmp20        d:2
N001 (  1,  1) [000313] ------------       t313 =    LCL_VAR   ref    V31 tmp20        u:2 $151
                                                  /--*  t313   ref    
N002 (  2,  2) [000314] ---X--------              *  NULLCHECK int    $197
N003 (  1,  1) [000306] ------------       t306 =    LCL_VAR   ref    V31 tmp20        u:2 $151
                                                  /--*  t306   ref    
               [000682] ------------       t682 = *  PUTARG_REG ref    REG rcx
N004 (  1,  1) [000307] ------------       t307 =    CNS_INT   int    3 $46
                                                  /--*  t307   int    
               [000683] ------------       t683 = *  PUTARG_REG int    REG rdx
                                                  /--*  t682   ref    this in rcx
                                                  +--*  t683   int    arg1 in rdx
N005 ( 16, 10) [000308] --CXG-------              *  CALL      void   System.Diagnostics.Process.EnsureState $VN.Void
N002 (  1,  1) [000309] ------------       t309 =    LCL_VAR   ref    V31 tmp20        u:2 (last use) $151
                                                  /--*  t309   ref    
N004 (  2,  5) [000471] -c----------       t471 = *  LEA(b+200) byref 
                                                  /--*  t471   byref  
N005 (  4,  7) [000310] n---GO------       t310 = *  IND       int    <l:$289, c:$288>
                                                  /--*  t310   int    
               [000684] ----GO------       t684 = *  PUTARG_REG int    REG rcx
                                                  /--*  t684   int    arg0 in rcx
N006 ( 18, 13) [000311] --CXGO------       t311 = *  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule $156
                                                  /--*  t311   ref    
N008 ( 18, 13) [000322] DA-XGO------              *  STORE_LCL_VAR ref    V32 tmp21        d:2
N001 (  1,  1) [000319] ------------       t319 =    LCL_VAR   ref    V32 tmp21        u:2 (last use) $156
                                                  /--*  t319   ref    
N003 (  2,  2) [000474] -c----------       t474 = *  LEA(b+40) byref 
                                                  /--*  t474   byref  
N004 (  4,  4) [000320] ---XG-------       t320 = *  IND       ref    <l:$19c, c:$19b>
                                                  /--*  t320   ref    
N006 (  4,  4) [000062] DA-XG-------              *  STORE_LCL_VAR ref    V03 loc1         d:2
N005 (  1,  1) [000339] -c----------       t339 =    CNS_INT   int    5 $47
                                                  /--*  t339   int    
               [000685] ------------              *  PUTARG_STK [+0x20] void  
N006 (  1,  1) [000337] ------------       t337 =    LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
                                                  /--*  t337   ref    
               [000669] -c----------       t669 = *  LEA(b+8)  ref   
                                                  /--*  t669   ref    
N007 (  3,  3) [000338] ---X--------       t338 = *  IND       int    <l:$28b, c:$28a>
                                                  /--*  t338   int    
               [000686] ---X--------       t686 = *  PUTARG_REG int    REG r9
N008 (  2, 10) [000475] H-----------       t475 =    CNS_INT(h) long   0xD1FFAB1E "dotnet.exe" $112
                                                  /--*  t475   long   
N009 (  4, 12) [000476] #---G-------       t476 = *  IND       ref    $19f
                                                  /--*  t476   ref    
               [000687] ----G-------       t687 = *  PUTARG_REG ref    REG rdx
N010 (  1,  1) [000063] ------------        t63 =    LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
                                                  /--*  t63    ref    
               [000688] ------------       t688 = *  PUTARG_REG ref    REG rcx
N011 (  1,  1) [000336] ------------       t336 =    CNS_INT   int    0 $40
                                                  /--*  t336   int    
               [000689] ------------       t689 = *  PUTARG_REG int    REG r8
                                                  /--*  t686   int    arg3 in r9
                                                  +--*  t687   ref    arg1 in rdx
                                                  +--*  t688   ref    this in rcx
                                                  +--*  t689   int    arg2 in r8
N012 ( 27, 28) [000340] --CXG-------       t340 = *  CALL      int    System.String.IndexOf $308
N013 (  1,  1) [000328] -c----------       t328 =    CNS_INT   int    0 $40
                                                  /--*  t340   int    
                                                  +--*  t328   int    
N014 ( 32, 30) [000329] ---XG-------       t329 = *  GE        int    $28c
                                                  /--*  t329   int    
N016 ( 32, 30) [000069] DA-XG-------              *  STORE_LCL_VAR int    V04 loc2         d:2
N001 ( 14,  5) [000070] --CXG-------        t70 =    CALL      ref    System.Environment.GetCommandLineArgs $15e
                                                  /--*  t70    ref    
N003 ( 14,  5) [000482] DA-XG-------              *  STORE_LCL_VAR ref    V41 tmp30        d:2
N004 (  1,  1) [000072] -c----------        t72 =    CNS_INT   int    0 $40
N005 (  1,  1) [000483] ------------       t483 =    LCL_VAR   ref    V41 tmp30        u:2 $15e
                                                  /--*  t483   ref    
               [000671] -c----------       t671 = *  LEA(b+8)  ref   
                                                  /--*  t671   ref    
N006 (  3,  3) [000486] -c-X--------       t486 = *  IND       int    $28d
                                                  /--*  t72    int    
                                                  +--*  t486   int    
N007 (  8, 11) [000487] ---X--------              *  ARR_BOUNDS_CHECK_Rng void   $1a5
N008 (  1,  1) [000484] ------------       t484 =    LCL_VAR   ref    V41 tmp30        u:2 (last use) $15e
                                                  /--*  t484   ref    
N010 (  2,  2) [000492] -c----------       t492 = *  LEA(b+16) byref 
                                                  /--*  t492   byref  
N011 (  4,  4) [000073] a---G-------        t73 = *  IND       ref    <l:$1a8, c:$161>
                                                  /--*  t73    ref    
N015 ( 26, 20) [000075] DA-XG-------              *  STORE_LCL_VAR ref    V05 loc3         d:2
               [000635] ------------                 IL_OFFSET void   IL offset: 0x68
N003 (  1,  1) [000076] ------------        t76 =    LCL_VAR   ref    V00 arg0         u:1 (last use) $80
                                                  /--*  t76    ref    
               [000690] ------------       t690 = *  PUTARG_REG ref    REG rcx
N004 (  2, 10) [000495] H-----------       t495 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $114
                                                  /--*  t495   long   
               [000691] ------------       t691 = *  PUTARG_REG long   REG r11
N001 (  2, 10) [000692] Hc----------       t692 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t692   long   
N002 (  4, 12) [000693] -c----------       t693 = *  IND       long   REG NA
                                                  /--*  t690   ref    this in rcx
                                                  +--*  t691   long   arg1 in r11
                                                  +--*  t693   long   control expr
N005 ( 23, 21) [000077] --CXG-------        t77 = *  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator $164
                                                  /--*  t77    ref    
N007 ( 23, 21) [000079] DA-XG-------              *  STORE_LCL_VAR ref    V06 loc4         d:2

------------ BB02 [070..072) -> BB13 (cond), preds={BB01} succs={BB03,BB13}
               [000636] ------------                 IL_OFFSET void   IL offset: 0xe9
N003 (  1,  1) [000575] ------------       t575 =    LCL_VAR   ref    V06 loc4         u:2 $164
                                                  /--*  t575   ref    
               [000694] ------------       t694 = *  PUTARG_REG ref    REG rcx
N004 (  2, 10) [000576] H-----------       t576 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
                                                  /--*  t576   long   
               [000695] ------------       t695 = *  PUTARG_REG long   REG r11
N001 (  2, 10) [000696] Hc----------       t696 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t696   long   
N002 (  4, 12) [000697] -c----------       t697 = *  IND       long   REG NA
                                                  /--*  t694   ref    this in rcx
                                                  +--*  t695   long   arg1 in r11
                                                  +--*  t697   long   control expr
N005 ( 23, 21) [000572] --CXG-------       t572 = *  CALLV stub int    System.Collections.IEnumerator.MoveNext $30a
N006 (  1,  1) [000577] -c----------       t577 =    CNS_INT   int    0 $40
                                                  /--*  t572   int    
                                                  +--*  t577   int    
N007 ( 25, 23) [000571] J--XG--N----              *  EQ        void   $28e
N008 ( 27, 25) [000578] ---XG-------              *  JTRUE     void  

------------ BB03 [072..08B) -> BB05 (cond), preds={BB02,BB09} succs={BB04,BB05}
               [000637] ------------                 IL_OFFSET void   IL offset: 0x72
N003 (  1,  1) [000085] ------------        t85 =    LCL_VAR   ref    V06 loc4         u:2 $164
                                                  /--*  t85    ref    
               [000698] ------------       t698 = *  PUTARG_REG ref    REG rcx
N004 (  2, 10) [000498] H-----------       t498 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $116
                                                  /--*  t498   long   
               [000699] ------------       t699 = *  PUTARG_REG long   REG r11
N001 (  2, 10) [000700] Hc----------       t700 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t700   long   
N002 (  4, 12) [000701] -c----------       t701 = *  IND       long   REG NA
                                                  /--*  t698   ref    this in rcx
                                                  +--*  t699   long   arg1 in r11
                                                  +--*  t701   long   control expr
N005 ( 23, 21) [000086] --CXG-------        t86 = *  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current $442
                                                  /--*  t86    ref    
N007 ( 23, 21) [000088] DA-XG-------              *  STORE_LCL_VAR ref    V07 loc5         d:2
               [000638] ------------                 IL_OFFSET void   IL offset: 0x7b
N002 (  2, 10) [000089] H-----------        t89 =    CNS_INT(h) long   0xd1ffab1e token $117
                                                  /--*  t89    long   
               [000702] ------------       t702 = *  PUTARG_REG long   REG rcx
                                                  /--*  t702   long   arg0 in rcx
N003 ( 16, 16) [000090] --C---------        t90 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1ab
                                                  /--*  t90    ref    
N005 ( 16, 16) [000092] DA----------              *  STORE_LCL_VAR ref    V16 tmp5         d:2
               [000639] ------------                 IL_OFFSET void   IL offset: 0x80
N001 (  1,  1) [000096] ------------        t96 =    LCL_VAR   ref    V16 tmp5         u:2 $1ab
                                                  /--*  t96    ref    
N003 (  2,  2) [000503] ------------       t503 = *  LEA(b+8)  byref 
N005 (  1,  1) [000097] ------------        t97 =    LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
                                                  /--*  t503   byref  
                                                  +--*  t97    ref    
               [000640] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000095] ------------        t95 =    LCL_VAR   ref    V16 tmp5         u:2 (last use) $1ab
                                                  /--*  t95    ref    
N003 (  1,  3) [000105] DA----------              *  STORE_LCL_VAR ref    V17 tmp6         d:2
N001 (  1,  1) [000099] ------------        t99 =    LCL_VAR   ref    V17 tmp6         u:2 (last use) $1ab
                                                  /--*  t99    ref    
N003 (  1,  3) [000108] DA----------              *  STORE_LCL_VAR ref    V18 tmp7         d:2
               [000641] ------------                 IL_OFFSET void   IL offset: 0x87
N001 (  1,  1) [000100] ------------       t100 =    LCL_VAR   int    V04 loc2         u:2 $28c
N002 (  1,  1) [000101] -c----------       t101 =    CNS_INT   int    0 $40
                                                  /--*  t100   int    
                                                  +--*  t101   int    
N003 (  3,  3) [000102] J------N----              *  NE        void   $28f
N004 (  5,  5) [000103] ------------              *  JTRUE     void  

------------ BB04 [08B..08F) -> BB06 (always), preds={BB03} succs={BB06}
N001 (  1,  1) [000110] ------------       t110 =    LCL_VAR   ref    V18 tmp7         u:2 (last use) $1ab
                                                  /--*  t110   ref    
N003 (  1,  3) [000203] DA----------              *  STORE_LCL_VAR ref    V19 tmp8         d:4
N001 (  1,  1) [000111] ------------       t111 =    LCL_VAR   ref    V19 tmp8         u:4 $1ab
                                                  /--*  t111   ref    
N003 (  1,  3) [000206] DA----------              *  STORE_LCL_VAR ref    V20 tmp9         d:4
N001 (  1,  1) [000201] ------------       t201 =    LCL_VAR   ref    V07 loc5         u:2 (last use) $442
                                                  /--*  t201   ref    
N003 (  1,  3) [000209] DA----------              *  STORE_LCL_VAR ref    V21 tmp10        d:4

------------ BB05 [08F..09C), preds={BB03} succs={BB06}
N001 (  1,  1) [000112] ------------       t112 =    LCL_VAR   ref    V18 tmp7         u:2 (last use) $1ab
                                                  /--*  t112   ref    
N003 (  1,  3) [000119] DA----------              *  STORE_LCL_VAR ref    V19 tmp8         d:3
N001 (  1,  1) [000113] ------------       t113 =    LCL_VAR   ref    V19 tmp8         u:3 $1ab
                                                  /--*  t113   ref    
N003 (  1,  3) [000122] DA----------              *  STORE_LCL_VAR ref    V20 tmp9         d:3
N004 (  2, 10) [000504] H-----------       t504 =    CNS_INT(h) long   0xD1FFAB1E " " $119
                                                  /--*  t504   long   
N005 (  4, 12) [000505] #---G-------       t505 = *  IND       ref    $1ae
                                                  /--*  t505   ref    
               [000703] ----G-------       t703 = *  PUTARG_REG ref    REG rdx
N006 (  1,  1) [000114] ------------       t114 =    LCL_VAR   ref    V05 loc3         u:2 <l:$1a8, c:$161>
                                                  /--*  t114   ref    
               [000704] ------------       t704 = *  PUTARG_REG ref    REG rcx
N007 (  1,  1) [000116] ------------       t116 =    LCL_VAR   ref    V07 loc5         u:2 (last use) $442
                                                  /--*  t116   ref    
               [000705] ------------       t705 = *  PUTARG_REG ref    REG r8
                                                  /--*  t703   ref    arg1 in rdx
                                                  +--*  t704   ref    arg0 in rcx
                                                  +--*  t705   ref    arg2 in r8
N008 ( 20, 22) [000117] --CXG-------       t117 = *  CALL      ref    System.String.Concat $44e
                                                  /--*  t117   ref    
N010 ( 20, 22) [000125] DA-XG-------              *  STORE_LCL_VAR ref    V21 tmp10        d:3

------------ BB06 [09C..0BB) -> BB09 (cond), preds={BB04,BB05} succs={BB07,BB09}
N001 (  0,  0) [000606] ------------       t606 =    PHI_ARG   ref    V21 tmp10        u:4 $442
N002 (  0,  0) [000603] ------------       t603 =    PHI_ARG   ref    V21 tmp10        u:3 $44e
                                                  /--*  t606   ref    
                                                  +--*  t603   ref    
N003 (  0,  0) [000595] ------------       t595 = *  PHI       ref   
                                                  /--*  t595   ref    
N005 (  0,  0) [000596] DA----------              *  STORE_LCL_VAR ref    V21 tmp10        d:2
N001 (  0,  0) [000607] ------------       t607 =    PHI_ARG   ref    V20 tmp9         u:4 $1ab
N002 (  0,  0) [000604] ------------       t604 =    PHI_ARG   ref    V20 tmp9         u:3 $1ab
                                                  /--*  t607   ref    
                                                  +--*  t604   ref    
N003 (  0,  0) [000592] ------------       t592 = *  PHI       ref   
                                                  /--*  t592   ref    
N005 (  0,  0) [000593] DA----------              *  STORE_LCL_VAR ref    V20 tmp9         d:2
N001 (  0,  0) [000608] ------------       t608 =    PHI_ARG   ref    V19 tmp8         u:4 $1ab
N002 (  0,  0) [000605] ------------       t605 =    PHI_ARG   ref    V19 tmp8         u:3 $1ab
                                                  /--*  t608   ref    
                                                  +--*  t605   ref    
N003 (  0,  0) [000589] ------------       t589 = *  PHI       ref   
                                                  /--*  t589   ref    
N005 (  0,  0) [000590] DA----------              *  STORE_LCL_VAR ref    V19 tmp8         d:2
N001 (  1,  1) [000128] ------------       t128 =    LCL_VAR   ref    V20 tmp9         u:2 (last use) $1ab
                                                  /--*  t128   ref    
N003 (  2,  2) [000510] ------------       t510 = *  LEA(b+16) byref 
N005 (  1,  1) [000129] ------------       t129 =    LCL_VAR   ref    V21 tmp10        u:2 (last use) $251
                                                  /--*  t510   byref  
                                                  +--*  t129   ref    
               [000642] -A--GO------              *  STOREIND  ref   
               [000643] ------------                 IL_OFFSET void   IL offset: 0xa1
N001 (  1,  1) [000131] ------------       t131 =    LCL_VAR   ref    V19 tmp8         u:2 $1ab
                                                  /--*  t131   ref    
N003 (  2,  5) [000512] -c----------       t512 = *  LEA(b+130) byref 
N005 (  1,  1) [000353] -c----------       t353 =    CNS_INT   int    0 $40
                                                  /--*  t512   byref  
                                                  +--*  t353   int    
               [000644] -A--GO------              *  STOREIND  bool  
               [000645] ------------                 IL_OFFSET void   IL offset: 0xaa
N001 (  1,  1) [000137] ------------       t137 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t137   ref    
N003 (  2,  2) [000514] -c----------       t514 = *  LEA(b+8)  byref 
                                                  /--*  t514   byref  
N004 (  4,  4) [000138] n---GO------       t138 = *  IND       ref    <l:$1bc, c:$1bb>
                                                  /--*  t138   ref    
N006 (  4,  4) [000145] DA--GO------              *  STORE_LCL_VAR ref    V23 tmp12        d:2
               [000646] ------------                 IL_OFFSET void   IL offset: 0xaa
N001 (  1,  1) [000140] ------------       t140 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t140   ref    
N003 (  2,  2) [000516] -c----------       t516 = *  LEA(b+48) byref 
                                                  /--*  t516   byref  
N004 (  4,  4) [000141] n---GO------       t141 = *  IND       ref    <l:$542, c:$541>
                                                  /--*  t141   ref    
N006 (  4,  4) [000143] DA--GO------              *  STORE_LCL_VAR ref    V22 tmp11        d:2
N001 (  1,  1) [000146] ------------       t146 =    LCL_VAR   ref    V23 tmp12        u:2 (last use) <l:$1b9, c:$454>
                                                  /--*  t146   ref    
N003 (  1,  3) [000153] DA----------              *  STORE_LCL_VAR ref    V24 tmp13        d:2
N001 (  1,  1) [000139] ------------       t139 =    LCL_VAR   ref    V19 tmp8         u:2 (last use) $1ab
                                                  /--*  t139   ref    
N003 (  1,  3) [000156] DA----------              *  STORE_LCL_VAR ref    V25 tmp14        d:2
N001 (  1,  1) [000147] ------------       t147 =    LCL_VAR   ref    V22 tmp11        u:2 (last use) <l:$540, c:$456>
                                                  /--*  t147   ref    
N003 (  1,  3) [000159] DA----------              *  STORE_LCL_VAR ref    V26 tmp15        d:2
N001 (  1,  1) [000148] ------------       t148 =    LCL_VAR   ref    V26 tmp15        u:2 <l:$540, c:$456>
N002 (  1,  1) [000149] -c----------       t149 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t148   ref    
                                                  +--*  t149   ref    
N003 (  3,  3) [000150] J------N----              *  NE        void   <l:$291, c:$290>
N004 (  5,  5) [000151] ------------              *  JTRUE     void  

------------ BB07 [000..0D3), preds={BB06} succs={BB09}
N002 (  2, 10) [000181] H-----------       t181 =    CNS_INT(h) long   0xd1ffab1e token $11e
                                                  /--*  t181   long   
               [000706] ------------       t706 = *  PUTARG_REG long   REG rcx
                                                  /--*  t706   long   arg0 in rcx
N003 ( 16, 16) [000182] --C---------       t182 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $543
                                                  /--*  t182   ref    
N005 ( 16, 16) [000184] DA----------              *  STORE_LCL_VAR ref    V28 tmp17        d:2
N001 (  1,  1) [000185] ------------       t185 =    LCL_VAR   ref    V28 tmp17        u:2 $543
                                                  /--*  t185   ref    
N003 (  2,  2) [000519] ------------       t519 = *  LEA(b+8)  byref 
N005 (  1,  1) [000360] ------------       t360 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t519   byref  
                                                  +--*  t360   ref    
               [000647] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000363] ------------       t363 =    LCL_VAR   ref    V28 tmp17        u:2 $543
                                                  /--*  t363   ref    
N003 (  2,  2) [000521] -c----------       t521 = *  LEA(b+24) byref 
N005 (  2, 10) [000180] H-----------       t180 =    CNS_INT(h) long   0xd1ffab1e ftn $120
                                                  /--*  t521   byref  
                                                  +--*  t180   long   
               [000648] -A--GO------              *  STOREIND  long  
N001 (  1,  1) [000178] ------------       t178 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t178   ref    
N003 (  2,  2) [000523] ------------       t523 = *  LEA(b+48) byref 
N005 (  1,  1) [000187] ------------       t187 =    LCL_VAR   ref    V28 tmp17        u:2 $543
                                                  /--*  t523   byref  
                                                  +--*  t187   ref    
               [000649] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000193] ------------       t193 =    LCL_VAR   ref    V28 tmp17        u:2 (last use) $543
                                                  /--*  t193   ref    
N003 (  1,  3) [000199] DA----------              *  STORE_LCL_VAR ref    V26 tmp15        d:4

------------ BB09 [000..0F2) -> BB03 (cond), preds={BB06,BB07} succs={BB13,BB03}
N001 (  0,  0) [000602] ------------       t602 =    PHI_ARG   ref    V26 tmp15        u:4 $543
N002 (  0,  0) [000601] ------------       t601 =    PHI_ARG   ref    V26 tmp15        u:2 <l:$540, c:$456>
                                                  /--*  t602   ref    
                                                  +--*  t601   ref    
N003 (  0,  0) [000586] ------------       t586 = *  PHI       ref   
                                                  /--*  t586   ref    
N005 (  0,  0) [000587] DA----------              *  STORE_LCL_VAR ref    V26 tmp15        d:3
N002 (  2, 10) [000169] H-----------       t169 =    CNS_INT(h) long   0xd1ffab1e token $123
                                                  /--*  t169   long   
               [000707] ------------       t707 = *  PUTARG_REG long   REG rcx
                                                  /--*  t707   long   arg0 in rcx
N003 ( 16, 16) [000170] --C---------       t170 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $54b
                                                  /--*  t170   ref    
N005 ( 16, 16) [000172] DA----------              *  STORE_LCL_VAR ref    V27 tmp16        d:2
N001 (  1,  1) [000173] ------------       t173 =    LCL_VAR   ref    V27 tmp16        u:2 $54b
                                                  /--*  t173   ref    
N003 (  2,  2) [000526] ------------       t526 = *  LEA(b+8)  byref 
N005 (  1,  1) [000372] ------------       t372 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t526   byref  
                                                  +--*  t372   ref    
               [000650] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000375] ------------       t375 =    LCL_VAR   ref    V27 tmp16        u:2 $54b
                                                  /--*  t375   ref    
N003 (  2,  2) [000528] -c----------       t528 = *  LEA(b+24) byref 
N005 (  2, 10) [000168] H-----------       t168 =    CNS_INT(h) long   0xd1ffab1e ftn $125
                                                  /--*  t528   byref  
                                                  +--*  t168   long   
               [000651] -A--GO------              *  STOREIND  long  
               [000652] ------------                 IL_OFFSET void   IL offset: 0xdf
N005 (  1,  1) [000165] ------------       t165 =    LCL_VAR   ref    V25 tmp14        u:2 (last use) $1ab
                                                  /--*  t165   ref    
               [000708] ------------       t708 = *  PUTARG_REG ref    REG rcx
N006 (  1,  1) [000166] ------------       t166 =    LCL_VAR   ref    V26 tmp15        u:3 (last use) $258
                                                  /--*  t166   ref    
               [000709] ------------       t709 = *  PUTARG_REG ref    REG rdx
N007 (  1,  1) [000175] ------------       t175 =    LCL_VAR   ref    V27 tmp16        u:2 (last use) $54b
                                                  /--*  t175   ref    
               [000710] ------------       t710 = *  PUTARG_REG ref    REG r8
                                                  /--*  t708   ref    arg0 in rcx
                                                  +--*  t709   ref    arg1 in rdx
                                                  +--*  t710   ref    arg2 in r8
N008 ( 17, 11) [000176] --CXG-------       t176 = *  CALL      ref    SolutionAnalyzer.IPC.CreateSession $464
                                                  /--*  t176   ref    
N010 ( 17, 11) [000533] DA-XG-----L-              *  STORE_LCL_VAR ref    V42 tmp31        d:2
N011 (  1,  1) [000534] ------------       t534 =    LCL_VAR   ref    V42 tmp31        u:2 (last use) $464
                                                  /--*  t534   ref    
               [000711] ------------       t711 = *  PUTARG_REG ref    REG rdx
N012 (  1,  1) [000164] ------------       t164 =    LCL_VAR   ref    V24 tmp13        u:2 (last use) <l:$1b9, c:$454>
                                                  /--*  t164   ref    
               [000712] ------------       t712 = *  PUTARG_REG ref    REG rcx
                                                  /--*  t711   ref    arg1 in rdx
                                                  +--*  t712   ref    this in rcx
N013 ( 36, 21) [000177] --CXG-------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue $VN.Void
               [000653] ------------                 IL_OFFSET void   IL offset: 0xe9
N003 (  1,  1) [000080] ------------        t80 =    LCL_VAR   ref    V06 loc4         u:2 $164
                                                  /--*  t80    ref    
               [000713] ------------       t713 = *  PUTARG_REG ref    REG rcx
N004 (  2, 10) [000536] H-----------       t536 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
                                                  /--*  t536   long   
               [000714] ------------       t714 = *  PUTARG_REG long   REG r11
N001 (  2, 10) [000715] Hc----------       t715 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t715   long   
N002 (  4, 12) [000716] -c----------       t716 = *  IND       long   REG NA
                                                  /--*  t713   ref    this in rcx
                                                  +--*  t714   long   arg1 in r11
                                                  +--*  t716   long   control expr
N005 ( 23, 21) [000081] --CXG-------        t81 = *  CALLV stub int    System.Collections.IEnumerator.MoveNext $5c0
N006 (  1,  1) [000082] -c----------        t82 =    CNS_INT   int    0 $40
                                                  /--*  t81    int    
                                                  +--*  t82    int    
N007 ( 25, 23) [000083] J--XG--N----              *  NE        void   $292
N008 ( 27, 25) [000084] ---XG-------              *  JTRUE     void  

------------ BB13 [0F4..127) -> BB17 (always), preds={BB02,BB09} succs={BB17}
N003 (  1,  1) [000436] ------------       t436 =    LCL_VAR   ref    V06 loc4         u:2 (last use) $164
                                                  /--*  t436   ref    
               [000717] ------------       t717 = *  PUTARG_REG ref    REG rcx
N004 (  2, 10) [000539] H-----------       t539 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127
                                                  /--*  t539   long   
               [000718] ------------       t718 = *  PUTARG_REG long   REG r11
N001 (  2, 10) [000719] Hc----------       t719 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t719   long   
N002 (  4, 12) [000720] -c----------       t720 = *  IND       long   REG NA
                                                  /--*  t717   ref    this in rcx
                                                  +--*  t718   long   arg1 in r11
                                                  +--*  t720   long   control expr
N005 ( 23, 21) [000435] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose $VN.Void
               [000654] ------------                 IL_OFFSET void   IL offset: 0x100
N001 (  1,  1) [000212] ------------       t212 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t212   ref    
N003 (  2,  2) [000546] -c----------       t546 = *  LEA(b+8)  byref 
                                                  /--*  t546   byref  
N004 (  4,  4) [000213] n---GO------       t213 = *  IND       ref    <l:$569, c:$568>
                                                  /--*  t213   ref    
N006 (  4,  4) [000384] DA--GO------              *  STORE_LCL_VAR ref    V35 tmp24        d:2
N001 (  1,  1) [000381] ------------       t381 =    LCL_VAR   ref    V35 tmp24        u:2 (last use) <l:$567, c:$16e>
                                                  /--*  t381   ref    
N003 (  2,  2) [000550] -c----------       t550 = *  LEA(b+24) byref 
                                                  /--*  t550   byref  
N004 (  4,  4) [000382] ---XG-------       t382 = *  IND       int    <l:$29b, c:$29a>
N005 (  1,  1) [000211] ------------       t211 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t211   ref    
N007 (  2,  2) [000548] -c----------       t548 = *  LEA(b+60) byref 
                                                  /--*  t548   byref  
                                                  +--*  t382   int    
               [000655] -A-XGO------              *  STOREIND  int   
               [000656] ------------                 IL_OFFSET void   IL offset: 0x111
N002 (  2, 10) [000221] H-----------       t221 =    CNS_INT(h) long   0xd1ffab1e method $12b
                                                  /--*  t221   long   
               [000721] ------------       t721 = *  PUTARG_REG long   REG rcx
                                                  /--*  t721   long   arg0 in rcx
N003 ( 16, 16) [000222] --C---------       t222 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $56c
                                                  /--*  t222   ref    
N005 ( 16, 16) [000224] DA----------              *  STORE_LCL_VAR ref    V29 tmp18        d:2
N001 (  1,  1) [000219] ------------       t219 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t219   ref    
N003 (  2,  2) [000553] -c----------       t553 = *  LEA(b+60) byref 
                                                  /--*  t553   byref  
N004 (  4,  4) [000220] n---GO------       t220 = *  IND       int    <l:$2a3, c:$2a2>
                                                  /--*  t220   int    
N006 (  4,  4) [000402] DA--GO------              *  STORE_LCL_VAR int    V37 tmp26        d:2
N002 (  2, 10) [000386] H-----------       t386 =    CNS_INT(h) long   0xd1ffab1e token $12c
                                                  /--*  t386   long   
               [000722] ------------       t722 = *  PUTARG_REG long   REG rcx
                                                  /--*  t722   long   arg0 in rcx
N003 ( 16, 16) [000387] --C---------       t387 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $56d
                                                  /--*  t387   ref    
N005 ( 16, 16) [000389] DA----------              *  STORE_LCL_VAR ref    V36 tmp25        d:2
N004 (  1,  1) [000390] ------------       t390 =    LCL_VAR   ref    V36 tmp25        u:2 $56d
                                                  /--*  t390   ref    
               [000723] ------------       t723 = *  PUTARG_REG ref    REG rcx
N005 (  1,  1) [000404] ------------       t404 =    CNS_INT   int    0 $40
                                                  /--*  t404   int    
               [000724] ------------       t724 = *  PUTARG_REG int    REG rdx
N006 (  1,  1) [000405] ------------       t405 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t405   ref    
               [000725] ------------       t725 = *  PUTARG_REG ref    REG r8
                                                  /--*  t723   ref    this in rcx
                                                  +--*  t724   int    arg1 in rdx
                                                  +--*  t725   ref    arg2 in r8
N007 ( 17, 12) [000406] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor $VN.Void
N001 (  1,  1) [000225] ------------       t225 =    LCL_VAR   ref    V29 tmp18        u:2 $56c
                                                  /--*  t225   ref    
N003 (  2,  2) [000559] ------------       t559 = *  LEA(b+8)  byref 
N005 (  1,  1) [000392] ------------       t392 =    LCL_VAR   ref    V36 tmp25        u:2 (last use) $56d
                                                  /--*  t559   byref  
                                                  +--*  t392   ref    
               [000657] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000397] ------------       t397 =    LCL_VAR   ref    V29 tmp18        u:2 $56c
                                                  /--*  t397   ref    
N003 (  2,  2) [000561] -c----------       t561 = *  LEA(b+16) byref 
N005 (  1,  1) [000398] ------------       t398 =    LCL_VAR   int    V37 tmp26        u:2 (last use) <l:$299, c:$30c>
                                                  /--*  t561   byref  
                                                  +--*  t398   int    
               [000658] -A--GO------              *  STOREIND  int   
               [000659] ------------                 IL_OFFSET void   IL offset: 0x11d
N001 (  1,  1) [000218] ------------       t218 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t218   ref    
N003 (  2,  2) [000563] ------------       t563 = *  LEA(b+16) byref 
N005 (  1,  1) [000227] ------------       t227 =    LCL_VAR   ref    V29 tmp18        u:2 (last use) $56c
                                                  /--*  t563   byref  
                                                  +--*  t227   ref    
               [000660] -A--GO------              *  STOREIND  ref   
               [000661] ------------                 IL_OFFSET void   IL offset: 0x122
N001 (  1,  1) [000230] ------------       t230 =    CNS_INT   int    0 $40
                                                  /--*  t230   int    
N003 (  1,  3) [000232] DA----------              *  STORE_LCL_VAR int    V10 loc8         d:2

------------ BB16 [127..133), preds={BB20} succs={BB17}
               [000662] ------------                 IL_OFFSET void   IL offset: 0x127
N002 (  1,  1) [000242] ------------       t242 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t242   ref    
               [000726] ------------       t726 = *  PUTARG_REG ref    REG rcx
                                                  /--*  t726   ref    this in rcx
N003 ( 15,  8) [000243] --CXG-------              *  CALL      void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0 $VN.Void
               [000663] ------------                 IL_OFFSET void   IL offset: 0x12d
N001 (  1,  1) [000244] ------------       t244 =    LCL_VAR   int    V10 loc8         u:3 (last use) $2ca
N002 (  1,  1) [000245] -c----------       t245 =    CNS_INT   int    1 $41
                                                  /--*  t244   int    
                                                  +--*  t245   int    
N003 (  3,  3) [000246] ------------       t246 = *  ADD       int    $2ad
                                                  /--*  t246   int    
N005 (  3,  3) [000248] DA----------              *  STORE_LCL_VAR int    V10 loc8         d:4

------------ BB17 [000..147) -> BB19 (cond), preds={BB13,BB16} succs={BB18,BB19}
N001 (  0,  0) [000598] ------------       t598 =    PHI_ARG   int    V10 loc8         u:4
N002 (  0,  0) [000597] ------------       t597 =    PHI_ARG   int    V10 loc8         u:2 $40
                                                  /--*  t598   int    
                                                  +--*  t597   int    
N003 (  0,  0) [000580] ------------       t580 = *  PHI       int   
                                                  /--*  t580   int    
N005 (  0,  0) [000581] DA----------              *  STORE_LCL_VAR int    V10 loc8         d:3
N001 (  1,  1) [000236] ------------       t236 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t236   ref    
N003 (  2,  2) [000566] -c----------       t566 = *  LEA(b+60) byref 
                                                  /--*  t566   byref  
N004 (  4,  4) [000237] n---GO------       t237 = *  IND       int    <l:$2a9, c:$2a8>
                                                  /--*  t237   int    
N006 (  4,  4) [000424] DA--GO------              *  STORE_LCL_VAR int    V39 tmp28        d:2
N001 (  1,  1) [000412] ------------       t412 =    LCL_VAR   int    V39 tmp28        u:2 <l:$2a7, c:$680>
N002 (  1,  1) [000411] -c----------       t411 =    CNS_INT   int    8 $57
                                                  /--*  t412   int    
                                                  +--*  t411   int    
N003 (  3,  3) [000413] J------N----              *  GE        void   <l:$2ab, c:$2aa>
N004 (  5,  5) [000414] ------------              *  JTRUE     void  

------------ BB18 [000..000) -> BB20 (always), preds={BB17} succs={BB20}
N001 (  1,  1) [000419] ------------       t419 =    LCL_VAR   int    V39 tmp28        u:2 (last use) <l:$2a7, c:$680>
                                                  /--*  t419   int    
N003 (  1,  3) [000421] DA----------              *  STORE_LCL_VAR int    V38 tmp27        d:4

------------ BB19 [000..000), preds={BB17} succs={BB20}
N001 (  1,  1) [000415] -c----------       t415 =    CNS_INT   int    8 $57
                                                  /--*  t415   int    
N003 (  1,  3) [000417] DA----------              *  STORE_LCL_VAR int    V38 tmp27        d:3

------------ BB20 [???..???) -> BB16 (cond), preds={BB18,BB19} succs={BB21,BB16}
N001 (  0,  0) [000600] ------------       t600 =    PHI_ARG   int    V38 tmp27        u:4 <l:$2a7, c:$680>
N002 (  0,  0) [000599] ------------       t599 =    PHI_ARG   int    V38 tmp27        u:3 $57
                                                  /--*  t600   int    
                                                  +--*  t599   int    
N003 (  0,  0) [000583] ------------       t583 = *  PHI       int   
                                                  /--*  t583   int    
N005 (  0,  0) [000584] DA----------              *  STORE_LCL_VAR int    V38 tmp27        d:2
N001 (  1,  1) [000233] ------------       t233 =    LCL_VAR   int    V10 loc8         u:3 $2ca
N002 (  1,  1) [000422] ------------       t422 =    LCL_VAR   int    V38 tmp27        u:2 (last use) $2cb
                                                  /--*  t233   int    
                                                  +--*  t422   int    
N003 (  3,  3) [000240] J------N----              *  LT        void   $2ac
N004 (  5,  5) [000241] ------------              *  JTRUE     void  

------------ BB21 [147..153) (return), preds={BB20} succs={}
               [000664] ------------                 IL_OFFSET void   IL offset: 0x147
N001 (  1,  1) [000249] ------------       t249 =    LCL_VAR   ref    V02 loc0         u:2 (last use) $180
                                                  /--*  t249   ref    
N003 (  2,  2) [000568] -c----------       t568 = *  LEA(b+24) byref 
                                                  /--*  t568   byref  
N004 (  4,  4) [000250] n---GO------       t250 = *  IND       ref    <l:$575, c:$574>
                                                  /--*  t250   ref    
N006 (  4,  4) [000429] DA--GO------              *  STORE_LCL_VAR ref    V40 tmp29        d:2
N001 (  1,  1) [000426] ------------       t426 =    LCL_VAR   ref    V40 tmp29        u:2 (last use) <l:$573, c:$177>
                                                  /--*  t426   ref    
N003 (  2,  2) [000570] -c----------       t570 = *  LEA(b+8)  byref 
                                                  /--*  t570   byref  
N004 (  4,  4) [000427] ---XG-------       t427 = *  IND       ref    <l:$57b, c:$57a>
                                                  /--*  t427   ref    
N005 (  5,  5) [000253] ---XG-------              *  RETURN    ref    $17a

------------ BB25 [???..???) (throw), preds={} succs={}
N001 ( 14,  5) [000672] --CXG-------                 CALL help void   HELPER.CORINFO_HELP_RNGCHKFAIL

------------ BB22 [0F4..0F8) -> BB24 (cond), preds={} succs={BB23,BB24}
               [000665] ------------                 IL_OFFSET void   IL offset: 0xf4
N001 (  1,  1) [000254] -c----------       t254 =    LCL_VAR   ref    V06 loc4         u:2 $164
N002 (  1,  1) [000255] -c----------       t255 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t254   ref    
                                                  +--*  t255   ref    
N003 (  3,  3) [000256] J------N----              *  EQ        void   $293
N004 (  5,  5) [000257] ------------              *  JTRUE     void  

------------ BB23 [0F8..0FF), preds={BB22} succs={BB24}
               [000666] ------------                 IL_OFFSET void   IL offset: 0xf8
N003 (  1,  1) [000259] ------------       t259 =    LCL_VAR   ref    V06 loc4         u:2 (last use) $164
                                                  /--*  t259   ref    
               [000727] ------------       t727 = *  PUTARG_REG ref    REG rcx
N004 (  2, 10) [000542] H-----------       t542 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127
                                                  /--*  t542   long   
               [000728] ------------       t728 = *  PUTARG_REG long   REG r11
N001 (  2, 10) [000729] Hc----------       t729 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t729   long   
N002 (  4, 12) [000730] -c----------       t730 = *  IND       long   REG NA
                                                  /--*  t727   ref    this in rcx
                                                  +--*  t728   long   arg1 in r11
                                                  +--*  t730   long   control expr
N005 ( 23, 21) [000260] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose $VN.Void

------------ BB24 [0FF..100) (finret), preds={BB22,BB23} succs={}
               [000667] ------------                 IL_OFFSET void   IL offset: 0xff
N001 (  0,  0) [000258] ------------                 RETFILT   void   $600

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Trees before Calculate stack level slots

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck LIR 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB13 ( cond ) T0      try {       keep i try label hascall gcsafe LIR 
BB03 [0002]  2  0    BB02,BB09             4     0 [072..08B)-> BB05 ( cond ) T0                  i Loop label target hascall gcsafe newobj bwd bwd-target LIR 
BB04 [0003]  1  0    BB03                  2     0 [08B..08F)-> BB06 (always) T0                  i gcsafe bwd LIR 
BB05 [0004]  1  0    BB03                  2     0 [08F..09C)                 T0                  i label target hascall gcsafe bwd LIR 
BB06 [0005]  2  0    BB04,BB05             4     0 [09C..0BB)-> BB09 ( cond ) T0                  i label target gcsafe bwd LIR 
BB07 [0006]  1  0    BB06                  2     0 [000..0D3)                 T0                  i hascall gcsafe newobj bwd LIR 
BB09 [0007]  2  0    BB06,BB07             4     0 [000..0F2)-> BB03 ( cond ) T0      }           i label target hascall gcsafe newobj bwd LIR 
BB13 [0057]  2       BB02,BB09             1       [0F4..127)-> BB17 (always)                     keep i label target gcsafe newobj LIR cfb 
BB16 [0014]  1       BB20                  2     1 [127..133)                                     i Loop label target hascall gcsafe bwd bwd-target LIR 
BB17 [0015]  2       BB13,BB16             8     1 [000..147)-> BB19 ( cond )                     i label target gcsafe bwd LIR 
BB18 [0053]  1       BB17                  2     1 [000..000)-> BB20 (always)                     i internal gcsafe bwd LIR 
BB19 [0054]  1       BB17                  2     1 [000..000)                                     i internal label target gcsafe bwd LIR 
BB20 [0055]  2       BB18,BB19             8     1 [???..???)-> BB16 ( cond )                     internal label target gcsafe bwd LIR 
BB21 [0016]  1       BB20                  1       [147..153)        (return)                     i gcsafe LIR 
BB25 [0062]  0                             0       [???..???)        (throw )                     keep i internal rare label target LIR 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB22 [0010]  1     0                       0       [0F4..0F8)-> BB24 ( cond )    H0 F fault {     keep i rare label target flet LIR 
BB23 [0011]  1     0 BB22                  0       [0F8..0FF)                    H0               i rare hascall gcsafe LIR 
BB24 [0012]  2     0 BB22,BB23             0       [0FF..100)        (finret)    H0   }           i rare label target LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..070), preds={} succs={BB02}
               [000613] ------------                 IL_OFFSET void   IL offset: 0x0
N002 (  2, 10) [000000] H-----------         t0 =    CNS_INT(h) long   0xd1ffab1e method $100
                                                  /--*  t0     long   
               [000673] ------------       t673 = *  PUTARG_REG long   REG rcx
                                                  /--*  t673   long   arg0 in rcx
N003 ( 16, 16) [000001] --C---------         t1 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $180
                                                  /--*  t1     ref    
N005 ( 16, 16) [000003] DA----------              *  STORE_LCL_VAR ref    V12 tmp1         d:2
               [000614] ------------                 IL_OFFSET void   IL offset: 0x5
N001 (  1,  1) [000006] ------------         t6 =    LCL_VAR   ref    V12 tmp1         u:2 (last use) $180
                                                  /--*  t6     ref    
N003 (  1,  3) [000008] DA----------              *  STORE_LCL_VAR ref    V02 loc0         d:2
               [000615] ------------                 IL_OFFSET void   IL offset: 0x6
N001 (  1,  1) [000009] ------------         t9 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t9     ref    
N003 (  2,  2) [000440] ------------       t440 = *  LEA(b+32) byref 
N005 (  1,  1) [000010] ------------        t10 =    LCL_VAR   ref    V01 arg1         u:1 (last use) $81
                                                  /--*  t440   byref  
                                                  +--*  t10    ref    
               [000616] -A--GO------              *  STOREIND  ref   
               [000617] ------------                 IL_OFFSET void   IL offset: 0xd
N001 (  1,  1) [000013] ------------        t13 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t13    ref    
N003 (  2,  2) [000442] -c----------       t442 = *  LEA(b+60) byref 
N005 (  1,  1) [000014] ------------        t14 =    CNS_INT   int    0 $40
                                                  /--*  t442   byref  
                                                  +--*  t14    int    
               [000618] -A--GO------              *  STOREIND  int   
               [000619] ------------                 IL_OFFSET void   IL offset: 0x14
N001 (  1,  1) [000017] ------------        t17 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t17    ref    
N003 (  2,  2) [000444] -c----------       t444 = *  LEA(b+56) byref 
N005 (  1,  1) [000018] ------------        t18 =    CNS_INT   int    0 $40
                                                  /--*  t444   byref  
                                                  +--*  t18    int    
               [000620] -A--GO------              *  STOREIND  int   
               [000621] ------------                 IL_OFFSET void   IL offset: 0x1b
N002 (  2, 10) [000022] H-----------        t22 =    CNS_INT(h) long   0xd1ffab1e token $104
                                                  /--*  t22    long   
               [000674] ------------       t674 = *  PUTARG_REG long   REG rcx
                                                  /--*  t674   long   arg0 in rcx
N003 ( 16, 16) [000023] --C---------        t23 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $183
                                                  /--*  t23    ref    
N005 ( 16, 16) [000025] DA----------              *  STORE_LCL_VAR ref    V13 tmp2         d:2
N002 (  2, 10) [000266] H-----------       t266 =    CNS_INT(h) long   0xd1ffab1e token $105
                                                  /--*  t266   long   
               [000675] ------------       t675 = *  PUTARG_REG long   REG rcx
                                                  /--*  t675   long   arg0 in rcx
N003 ( 16, 16) [000267] --C---------       t267 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $184
                                                  /--*  t267   ref    
N005 ( 16, 16) [000269] DA----------              *  STORE_LCL_VAR ref    V30 tmp19        d:2
N001 (  1,  1) [000280] ------------       t280 =    LCL_VAR   ref    V30 tmp19        u:2 $184
                                                  /--*  t280   ref    
N003 (  2,  2) [000448] -c----------       t448 = *  LEA(b+52) byref 
N005 (  1,  4) [000281] -c----------       t281 =    CNS_INT   int    0x2000400 $43
                                                  /--*  t448   byref  
                                                  +--*  t281   int    
               [000622] -A--GO------              *  STOREIND  int   
N001 (  1,  1) [000265] ------------       t265 =    LCL_VAR   ref    V13 tmp2         u:2 $183
                                                  /--*  t265   ref    
N003 (  2,  2) [000450] ------------       t450 = *  LEA(b+8)  byref 
N005 (  1,  1) [000272] ------------       t272 =    LCL_VAR   ref    V30 tmp19        u:2 (last use) $184
                                                  /--*  t450   byref  
                                                  +--*  t272   ref    
               [000623] -A--GO------              *  STOREIND  ref   
               [000624] ------------                 IL_OFFSET void   IL offset: 0x21
N001 (  1,  1) [000021] ------------        t21 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t21    ref    
N003 (  2,  2) [000452] ------------       t452 = *  LEA(b+24) byref 
N005 (  1,  1) [000028] ------------        t28 =    LCL_VAR   ref    V13 tmp2         u:2 (last use) $183
                                                  /--*  t452   byref  
                                                  +--*  t28    ref    
               [000625] -A--GO------              *  STOREIND  ref   
               [000626] ------------                 IL_OFFSET void   IL offset: 0x26
N002 (  2, 10) [000032] H-----------        t32 =    CNS_INT(h) long   0xd1ffab1e token $109
                                                  /--*  t32    long   
               [000676] ------------       t676 = *  PUTARG_REG long   REG rcx
                                                  /--*  t676   long   arg0 in rcx
N003 ( 16, 16) [000033] --C---------        t33 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $189
                                                  /--*  t33    ref    
N005 ( 16, 16) [000035] DA----------              *  STORE_LCL_VAR ref    V14 tmp3         d:2
N003 (  2, 10) [000297] ------------       t297 =    CNS_INT   long   0x7ffc7e0b0028 $1c6
                                                  /--*  t297   long   
               [000677] ------------       t677 = *  PUTARG_REG long   REG rcx
N004 (  1,  1) [000298] ------------       t298 =    CNS_INT   int    14 $44
                                                  /--*  t298   int    
               [000678] ------------       t678 = *  PUTARG_REG int    REG rdx
                                                  /--*  t677   long   arg0 in rcx
                                                  +--*  t678   int    arg1 in rdx
N005 ( 17, 18) [000299] H-CXG-------       t299 = *  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS $381
N006 (  2, 10) [000458] I-----------       t458 =    CNS_INT(h) long   0xd1ffab1e static Fseq[Value] $10a
                                                  /--*  t458   long   
N007 (  4, 12) [000295] n---G-------       t295 = *  IND       ref    <l:$246, c:$14b>
N009 (  1,  1) [000287] ------------       t287 =    LCL_VAR   ref    V14 tmp3         u:2 $189
                                                  /--*  t287   ref    
N011 (  2,  2) [000455] ------------       t455 = *  LEA(b+8)  byref 
                                                  /--*  t455   byref  
                                                  +--*  t295   ref    
               [000627] -ACXGO------              *  STOREIND  ref   
               [000628] ------------                 IL_OFFSET void   IL offset: 0x2c
N001 (  1,  1) [000031] ------------        t31 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t31    ref    
N003 (  2,  2) [000460] ------------       t460 = *  LEA(b+8)  byref 
N005 (  1,  1) [000038] ------------        t38 =    LCL_VAR   ref    V14 tmp3         u:2 (last use) $189
                                                  /--*  t460   byref  
                                                  +--*  t38    ref    
               [000629] -A--GO------              *  STOREIND  ref   
               [000630] ------------                 IL_OFFSET void   IL offset: 0x31
N001 (  1,  1) [000041] ------------        t41 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t41    ref    
N003 (  2,  2) [000462] -c----------       t462 = *  LEA(b+16) byref 
N005 (  1,  1) [000042] ------------        t42 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t462   byref  
                                                  +--*  t42    ref    
               [000631] -A--GO------              *  STOREIND  ref   
               [000632] ------------                 IL_OFFSET void   IL offset: 0x38
N002 (  2, 10) [000046] H-----------        t46 =    CNS_INT(h) long   0xd1ffab1e token $10e
                                                  /--*  t46    long   
               [000679] ------------       t679 = *  PUTARG_REG long   REG rcx
                                                  /--*  t679   long   arg0 in rcx
N003 ( 16, 16) [000047] --C---------        t47 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $193
                                                  /--*  t47    ref    
N005 ( 16, 16) [000049] DA----------              *  STORE_LCL_VAR ref    V15 tmp4         d:2
N003 (  1,  1) [000050] ------------        t50 =    LCL_VAR   ref    V15 tmp4         u:2 $193
                                                  /--*  t50    ref    
               [000680] ------------       t680 = *  PUTARG_REG ref    REG rcx
N004 (  1,  1) [000302] ------------       t302 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t302   ref    
               [000681] ------------       t681 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t680   ref    this in rcx
                                                  +--*  t681   ref    arg1 in rdx
N005 ( 16, 10) [000303] --CXG-------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor $VN.Void
               [000633] ------------                 IL_OFFSET void   IL offset: 0x3e
N001 (  1,  1) [000045] ------------        t45 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t45    ref    
N003 (  2,  2) [000467] ------------       t467 = *  LEA(b+40) byref 
N005 (  1,  1) [000052] ------------        t52 =    LCL_VAR   ref    V15 tmp4         u:2 (last use) $193
                                                  /--*  t467   byref  
                                                  +--*  t52    ref    
               [000634] -A--GO------              *  STOREIND  ref   
N001 ( 14,  5) [000055] --CXG-------        t55 =    CALL      ref    System.Diagnostics.Process.GetCurrentProcess $151
                                                  /--*  t55    ref    
N003 ( 14,  5) [000316] DA-XG-------              *  STORE_LCL_VAR ref    V31 tmp20        d:2
N001 (  1,  1) [000313] ------------       t313 =    LCL_VAR   ref    V31 tmp20        u:2 $151
                                                  /--*  t313   ref    
N002 (  2,  2) [000314] ---X--------              *  NULLCHECK int    $197
N003 (  1,  1) [000306] ------------       t306 =    LCL_VAR   ref    V31 tmp20        u:2 $151
                                                  /--*  t306   ref    
               [000682] ------------       t682 = *  PUTARG_REG ref    REG rcx
N004 (  1,  1) [000307] ------------       t307 =    CNS_INT   int    3 $46
                                                  /--*  t307   int    
               [000683] ------------       t683 = *  PUTARG_REG int    REG rdx
                                                  /--*  t682   ref    this in rcx
                                                  +--*  t683   int    arg1 in rdx
N005 ( 16, 10) [000308] --CXG-------              *  CALL      void   System.Diagnostics.Process.EnsureState $VN.Void
N002 (  1,  1) [000309] ------------       t309 =    LCL_VAR   ref    V31 tmp20        u:2 (last use) $151
                                                  /--*  t309   ref    
N004 (  2,  5) [000471] -c----------       t471 = *  LEA(b+200) byref 
                                                  /--*  t471   byref  
N005 (  4,  7) [000310] n---GO------       t310 = *  IND       int    <l:$289, c:$288>
                                                  /--*  t310   int    
               [000684] ----GO------       t684 = *  PUTARG_REG int    REG rcx
                                                  /--*  t684   int    arg0 in rcx
N006 ( 18, 13) [000311] --CXGO------       t311 = *  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule $156
                                                  /--*  t311   ref    
N008 ( 18, 13) [000322] DA-XGO------              *  STORE_LCL_VAR ref    V32 tmp21        d:2
N001 (  1,  1) [000319] ------------       t319 =    LCL_VAR   ref    V32 tmp21        u:2 (last use) $156
                                                  /--*  t319   ref    
N003 (  2,  2) [000474] -c----------       t474 = *  LEA(b+40) byref 
                                                  /--*  t474   byref  
N004 (  4,  4) [000320] ---XG-------       t320 = *  IND       ref    <l:$19c, c:$19b>
                                                  /--*  t320   ref    
N006 (  4,  4) [000062] DA-XG-------              *  STORE_LCL_VAR ref    V03 loc1         d:2
N005 (  1,  1) [000339] -c----------       t339 =    CNS_INT   int    5 $47
                                                  /--*  t339   int    
               [000685] ------------              *  PUTARG_STK [+0x20] void  
N006 (  1,  1) [000337] ------------       t337 =    LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
                                                  /--*  t337   ref    
               [000669] -c----------       t669 = *  LEA(b+8)  ref   
                                                  /--*  t669   ref    
N007 (  3,  3) [000338] ---X--------       t338 = *  IND       int    <l:$28b, c:$28a>
                                                  /--*  t338   int    
               [000686] ---X--------       t686 = *  PUTARG_REG int    REG r9
N008 (  2, 10) [000475] H-----------       t475 =    CNS_INT(h) long   0xD1FFAB1E "dotnet.exe" $112
                                                  /--*  t475   long   
N009 (  4, 12) [000476] #---G-------       t476 = *  IND       ref    $19f
                                                  /--*  t476   ref    
               [000687] ----G-------       t687 = *  PUTARG_REG ref    REG rdx
N010 (  1,  1) [000063] ------------        t63 =    LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
                                                  /--*  t63    ref    
               [000688] ------------       t688 = *  PUTARG_REG ref    REG rcx
N011 (  1,  1) [000336] ------------       t336 =    CNS_INT   int    0 $40
                                                  /--*  t336   int    
               [000689] ------------       t689 = *  PUTARG_REG int    REG r8
                                                  /--*  t686   int    arg3 in r9
                                                  +--*  t687   ref    arg1 in rdx
                                                  +--*  t688   ref    this in rcx
                                                  +--*  t689   int    arg2 in r8
N012 ( 27, 28) [000340] --CXG-------       t340 = *  CALL      int    System.String.IndexOf $308
N013 (  1,  1) [000328] -c----------       t328 =    CNS_INT   int    0 $40
                                                  /--*  t340   int    
                                                  +--*  t328   int    
N014 ( 32, 30) [000329] ---XG-------       t329 = *  GE        int    $28c
                                                  /--*  t329   int    
N016 ( 32, 30) [000069] DA-XG-------              *  STORE_LCL_VAR int    V04 loc2         d:2
N001 ( 14,  5) [000070] --CXG-------        t70 =    CALL      ref    System.Environment.GetCommandLineArgs $15e
                                                  /--*  t70    ref    
N003 ( 14,  5) [000482] DA-XG-------              *  STORE_LCL_VAR ref    V41 tmp30        d:2
N004 (  1,  1) [000072] -c----------        t72 =    CNS_INT   int    0 $40
N005 (  1,  1) [000483] ------------       t483 =    LCL_VAR   ref    V41 tmp30        u:2 $15e
                                                  /--*  t483   ref    
               [000671] -c----------       t671 = *  LEA(b+8)  ref   
                                                  /--*  t671   ref    
N006 (  3,  3) [000486] -c-X--------       t486 = *  IND       int    $28d
                                                  /--*  t72    int    
                                                  +--*  t486   int    
N007 (  8, 11) [000487] ---X--------              *  ARR_BOUNDS_CHECK_Rng void   $1a5
N008 (  1,  1) [000484] ------------       t484 =    LCL_VAR   ref    V41 tmp30        u:2 (last use) $15e
                                                  /--*  t484   ref    
N010 (  2,  2) [000492] -c----------       t492 = *  LEA(b+16) byref 
                                                  /--*  t492   byref  
N011 (  4,  4) [000073] a---G-------        t73 = *  IND       ref    <l:$1a8, c:$161>
                                                  /--*  t73    ref    
N015 ( 26, 20) [000075] DA-XG-------              *  STORE_LCL_VAR ref    V05 loc3         d:2
               [000635] ------------                 IL_OFFSET void   IL offset: 0x68
N003 (  1,  1) [000076] ------------        t76 =    LCL_VAR   ref    V00 arg0         u:1 (last use) $80
                                                  /--*  t76    ref    
               [000690] ------------       t690 = *  PUTARG_REG ref    REG rcx
N004 (  2, 10) [000495] H-----------       t495 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $114
                                                  /--*  t495   long   
               [000691] ------------       t691 = *  PUTARG_REG long   REG r11
N001 (  2, 10) [000692] Hc----------       t692 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t692   long   
N002 (  4, 12) [000693] -c----------       t693 = *  IND       long   REG NA
                                                  /--*  t690   ref    this in rcx
                                                  +--*  t691   long   arg1 in r11
                                                  +--*  t693   long   control expr
N005 ( 23, 21) [000077] --CXG-------        t77 = *  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator $164
                                                  /--*  t77    ref    
N007 ( 23, 21) [000079] DA-XG-------              *  STORE_LCL_VAR ref    V06 loc4         d:2

------------ BB02 [070..072) -> BB13 (cond), preds={BB01} succs={BB03,BB13}
               [000636] ------------                 IL_OFFSET void   IL offset: 0xe9
N003 (  1,  1) [000575] ------------       t575 =    LCL_VAR   ref    V06 loc4         u:2 $164
                                                  /--*  t575   ref    
               [000694] ------------       t694 = *  PUTARG_REG ref    REG rcx
N004 (  2, 10) [000576] H-----------       t576 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
                                                  /--*  t576   long   
               [000695] ------------       t695 = *  PUTARG_REG long   REG r11
N001 (  2, 10) [000696] Hc----------       t696 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t696   long   
N002 (  4, 12) [000697] -c----------       t697 = *  IND       long   REG NA
                                                  /--*  t694   ref    this in rcx
                                                  +--*  t695   long   arg1 in r11
                                                  +--*  t697   long   control expr
N005 ( 23, 21) [000572] --CXG-------       t572 = *  CALLV stub int    System.Collections.IEnumerator.MoveNext $30a
N006 (  1,  1) [000577] -c----------       t577 =    CNS_INT   int    0 $40
                                                  /--*  t572   int    
                                                  +--*  t577   int    
N007 ( 25, 23) [000571] J--XG--N----              *  EQ        void   $28e
N008 ( 27, 25) [000578] ---XG-------              *  JTRUE     void  

------------ BB03 [072..08B) -> BB05 (cond), preds={BB02,BB09} succs={BB04,BB05}
               [000637] ------------                 IL_OFFSET void   IL offset: 0x72
N003 (  1,  1) [000085] ------------        t85 =    LCL_VAR   ref    V06 loc4         u:2 $164
                                                  /--*  t85    ref    
               [000698] ------------       t698 = *  PUTARG_REG ref    REG rcx
N004 (  2, 10) [000498] H-----------       t498 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $116
                                                  /--*  t498   long   
               [000699] ------------       t699 = *  PUTARG_REG long   REG r11
N001 (  2, 10) [000700] Hc----------       t700 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t700   long   
N002 (  4, 12) [000701] -c----------       t701 = *  IND       long   REG NA
                                                  /--*  t698   ref    this in rcx
                                                  +--*  t699   long   arg1 in r11
                                                  +--*  t701   long   control expr
N005 ( 23, 21) [000086] --CXG-------        t86 = *  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current $442
                                                  /--*  t86    ref    
N007 ( 23, 21) [000088] DA-XG-------              *  STORE_LCL_VAR ref    V07 loc5         d:2
               [000638] ------------                 IL_OFFSET void   IL offset: 0x7b
N002 (  2, 10) [000089] H-----------        t89 =    CNS_INT(h) long   0xd1ffab1e token $117
                                                  /--*  t89    long   
               [000702] ------------       t702 = *  PUTARG_REG long   REG rcx
                                                  /--*  t702   long   arg0 in rcx
N003 ( 16, 16) [000090] --C---------        t90 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1ab
                                                  /--*  t90    ref    
N005 ( 16, 16) [000092] DA----------              *  STORE_LCL_VAR ref    V16 tmp5         d:2
               [000639] ------------                 IL_OFFSET void   IL offset: 0x80
N001 (  1,  1) [000096] ------------        t96 =    LCL_VAR   ref    V16 tmp5         u:2 $1ab
                                                  /--*  t96    ref    
N003 (  2,  2) [000503] ------------       t503 = *  LEA(b+8)  byref 
N005 (  1,  1) [000097] ------------        t97 =    LCL_VAR   ref    V03 loc1         u:2 <l:$199, c:$159>
                                                  /--*  t503   byref  
                                                  +--*  t97    ref    
               [000640] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000095] ------------        t95 =    LCL_VAR   ref    V16 tmp5         u:2 (last use) $1ab
                                                  /--*  t95    ref    
N003 (  1,  3) [000105] DA----------              *  STORE_LCL_VAR ref    V17 tmp6         d:2
N001 (  1,  1) [000099] ------------        t99 =    LCL_VAR   ref    V17 tmp6         u:2 (last use) $1ab
                                                  /--*  t99    ref    
N003 (  1,  3) [000108] DA----------              *  STORE_LCL_VAR ref    V18 tmp7         d:2
               [000641] ------------                 IL_OFFSET void   IL offset: 0x87
N001 (  1,  1) [000100] ------------       t100 =    LCL_VAR   int    V04 loc2         u:2 $28c
N002 (  1,  1) [000101] -c----------       t101 =    CNS_INT   int    0 $40
                                                  /--*  t100   int    
                                                  +--*  t101   int    
N003 (  3,  3) [000102] J------N----              *  NE        void   $28f
N004 (  5,  5) [000103] ------------              *  JTRUE     void  

------------ BB04 [08B..08F) -> BB06 (always), preds={BB03} succs={BB06}
N001 (  1,  1) [000110] ------------       t110 =    LCL_VAR   ref    V18 tmp7         u:2 (last use) $1ab
                                                  /--*  t110   ref    
N003 (  1,  3) [000203] DA----------              *  STORE_LCL_VAR ref    V19 tmp8         d:4
N001 (  1,  1) [000111] ------------       t111 =    LCL_VAR   ref    V19 tmp8         u:4 $1ab
                                                  /--*  t111   ref    
N003 (  1,  3) [000206] DA----------              *  STORE_LCL_VAR ref    V20 tmp9         d:4
N001 (  1,  1) [000201] ------------       t201 =    LCL_VAR   ref    V07 loc5         u:2 (last use) $442
                                                  /--*  t201   ref    
N003 (  1,  3) [000209] DA----------              *  STORE_LCL_VAR ref    V21 tmp10        d:4

------------ BB05 [08F..09C), preds={BB03} succs={BB06}
N001 (  1,  1) [000112] ------------       t112 =    LCL_VAR   ref    V18 tmp7         u:2 (last use) $1ab
                                                  /--*  t112   ref    
N003 (  1,  3) [000119] DA----------              *  STORE_LCL_VAR ref    V19 tmp8         d:3
N001 (  1,  1) [000113] ------------       t113 =    LCL_VAR   ref    V19 tmp8         u:3 $1ab
                                                  /--*  t113   ref    
N003 (  1,  3) [000122] DA----------              *  STORE_LCL_VAR ref    V20 tmp9         d:3
N004 (  2, 10) [000504] H-----------       t504 =    CNS_INT(h) long   0xD1FFAB1E " " $119
                                                  /--*  t504   long   
N005 (  4, 12) [000505] #---G-------       t505 = *  IND       ref    $1ae
                                                  /--*  t505   ref    
               [000703] ----G-------       t703 = *  PUTARG_REG ref    REG rdx
N006 (  1,  1) [000114] ------------       t114 =    LCL_VAR   ref    V05 loc3         u:2 <l:$1a8, c:$161>
                                                  /--*  t114   ref    
               [000704] ------------       t704 = *  PUTARG_REG ref    REG rcx
N007 (  1,  1) [000116] ------------       t116 =    LCL_VAR   ref    V07 loc5         u:2 (last use) $442
                                                  /--*  t116   ref    
               [000705] ------------       t705 = *  PUTARG_REG ref    REG r8
                                                  /--*  t703   ref    arg1 in rdx
                                                  +--*  t704   ref    arg0 in rcx
                                                  +--*  t705   ref    arg2 in r8
N008 ( 20, 22) [000117] --CXG-------       t117 = *  CALL      ref    System.String.Concat $44e
                                                  /--*  t117   ref    
N010 ( 20, 22) [000125] DA-XG-------              *  STORE_LCL_VAR ref    V21 tmp10        d:3

------------ BB06 [09C..0BB) -> BB09 (cond), preds={BB04,BB05} succs={BB07,BB09}
N001 (  0,  0) [000606] ------------       t606 =    PHI_ARG   ref    V21 tmp10        u:4 $442
N002 (  0,  0) [000603] ------------       t603 =    PHI_ARG   ref    V21 tmp10        u:3 $44e
                                                  /--*  t606   ref    
                                                  +--*  t603   ref    
N003 (  0,  0) [000595] ------------       t595 = *  PHI       ref   
                                                  /--*  t595   ref    
N005 (  0,  0) [000596] DA----------              *  STORE_LCL_VAR ref    V21 tmp10        d:2
N001 (  0,  0) [000607] ------------       t607 =    PHI_ARG   ref    V20 tmp9         u:4 $1ab
N002 (  0,  0) [000604] ------------       t604 =    PHI_ARG   ref    V20 tmp9         u:3 $1ab
                                                  /--*  t607   ref    
                                                  +--*  t604   ref    
N003 (  0,  0) [000592] ------------       t592 = *  PHI       ref   
                                                  /--*  t592   ref    
N005 (  0,  0) [000593] DA----------              *  STORE_LCL_VAR ref    V20 tmp9         d:2
N001 (  0,  0) [000608] ------------       t608 =    PHI_ARG   ref    V19 tmp8         u:4 $1ab
N002 (  0,  0) [000605] ------------       t605 =    PHI_ARG   ref    V19 tmp8         u:3 $1ab
                                                  /--*  t608   ref    
                                                  +--*  t605   ref    
N003 (  0,  0) [000589] ------------       t589 = *  PHI       ref   
                                                  /--*  t589   ref    
N005 (  0,  0) [000590] DA----------              *  STORE_LCL_VAR ref    V19 tmp8         d:2
N001 (  1,  1) [000128] ------------       t128 =    LCL_VAR   ref    V20 tmp9         u:2 (last use) $1ab
                                                  /--*  t128   ref    
N003 (  2,  2) [000510] ------------       t510 = *  LEA(b+16) byref 
N005 (  1,  1) [000129] ------------       t129 =    LCL_VAR   ref    V21 tmp10        u:2 (last use) $251
                                                  /--*  t510   byref  
                                                  +--*  t129   ref    
               [000642] -A--GO------              *  STOREIND  ref   
               [000643] ------------                 IL_OFFSET void   IL offset: 0xa1
N001 (  1,  1) [000131] ------------       t131 =    LCL_VAR   ref    V19 tmp8         u:2 $1ab
                                                  /--*  t131   ref    
N003 (  2,  5) [000512] -c----------       t512 = *  LEA(b+130) byref 
N005 (  1,  1) [000353] -c----------       t353 =    CNS_INT   int    0 $40
                                                  /--*  t512   byref  
                                                  +--*  t353   int    
               [000644] -A--GO------              *  STOREIND  bool  
               [000645] ------------                 IL_OFFSET void   IL offset: 0xaa
N001 (  1,  1) [000137] ------------       t137 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t137   ref    
N003 (  2,  2) [000514] -c----------       t514 = *  LEA(b+8)  byref 
                                                  /--*  t514   byref  
N004 (  4,  4) [000138] n---GO------       t138 = *  IND       ref    <l:$1bc, c:$1bb>
                                                  /--*  t138   ref    
N006 (  4,  4) [000145] DA--GO------              *  STORE_LCL_VAR ref    V23 tmp12        d:2
               [000646] ------------                 IL_OFFSET void   IL offset: 0xaa
N001 (  1,  1) [000140] ------------       t140 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t140   ref    
N003 (  2,  2) [000516] -c----------       t516 = *  LEA(b+48) byref 
                                                  /--*  t516   byref  
N004 (  4,  4) [000141] n---GO------       t141 = *  IND       ref    <l:$542, c:$541>
                                                  /--*  t141   ref    
N006 (  4,  4) [000143] DA--GO------              *  STORE_LCL_VAR ref    V22 tmp11        d:2
N001 (  1,  1) [000146] ------------       t146 =    LCL_VAR   ref    V23 tmp12        u:2 (last use) <l:$1b9, c:$454>
                                                  /--*  t146   ref    
N003 (  1,  3) [000153] DA----------              *  STORE_LCL_VAR ref    V24 tmp13        d:2
N001 (  1,  1) [000139] ------------       t139 =    LCL_VAR   ref    V19 tmp8         u:2 (last use) $1ab
                                                  /--*  t139   ref    
N003 (  1,  3) [000156] DA----------              *  STORE_LCL_VAR ref    V25 tmp14        d:2
N001 (  1,  1) [000147] ------------       t147 =    LCL_VAR   ref    V22 tmp11        u:2 (last use) <l:$540, c:$456>
                                                  /--*  t147   ref    
N003 (  1,  3) [000159] DA----------              *  STORE_LCL_VAR ref    V26 tmp15        d:2
N001 (  1,  1) [000148] ------------       t148 =    LCL_VAR   ref    V26 tmp15        u:2 <l:$540, c:$456>
N002 (  1,  1) [000149] -c----------       t149 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t148   ref    
                                                  +--*  t149   ref    
N003 (  3,  3) [000150] J------N----              *  NE        void   <l:$291, c:$290>
N004 (  5,  5) [000151] ------------              *  JTRUE     void  

------------ BB07 [000..0D3), preds={BB06} succs={BB09}
N002 (  2, 10) [000181] H-----------       t181 =    CNS_INT(h) long   0xd1ffab1e token $11e
                                                  /--*  t181   long   
               [000706] ------------       t706 = *  PUTARG_REG long   REG rcx
                                                  /--*  t706   long   arg0 in rcx
N003 ( 16, 16) [000182] --C---------       t182 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $543
                                                  /--*  t182   ref    
N005 ( 16, 16) [000184] DA----------              *  STORE_LCL_VAR ref    V28 tmp17        d:2
N001 (  1,  1) [000185] ------------       t185 =    LCL_VAR   ref    V28 tmp17        u:2 $543
                                                  /--*  t185   ref    
N003 (  2,  2) [000519] ------------       t519 = *  LEA(b+8)  byref 
N005 (  1,  1) [000360] ------------       t360 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t519   byref  
                                                  +--*  t360   ref    
               [000647] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000363] ------------       t363 =    LCL_VAR   ref    V28 tmp17        u:2 $543
                                                  /--*  t363   ref    
N003 (  2,  2) [000521] -c----------       t521 = *  LEA(b+24) byref 
N005 (  2, 10) [000180] H-----------       t180 =    CNS_INT(h) long   0xd1ffab1e ftn $120
                                                  /--*  t521   byref  
                                                  +--*  t180   long   
               [000648] -A--GO------              *  STOREIND  long  
N001 (  1,  1) [000178] ------------       t178 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t178   ref    
N003 (  2,  2) [000523] ------------       t523 = *  LEA(b+48) byref 
N005 (  1,  1) [000187] ------------       t187 =    LCL_VAR   ref    V28 tmp17        u:2 $543
                                                  /--*  t523   byref  
                                                  +--*  t187   ref    
               [000649] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000193] ------------       t193 =    LCL_VAR   ref    V28 tmp17        u:2 (last use) $543
                                                  /--*  t193   ref    
N003 (  1,  3) [000199] DA----------              *  STORE_LCL_VAR ref    V26 tmp15        d:4

------------ BB09 [000..0F2) -> BB03 (cond), preds={BB06,BB07} succs={BB13,BB03}
N001 (  0,  0) [000602] ------------       t602 =    PHI_ARG   ref    V26 tmp15        u:4 $543
N002 (  0,  0) [000601] ------------       t601 =    PHI_ARG   ref    V26 tmp15        u:2 <l:$540, c:$456>
                                                  /--*  t602   ref    
                                                  +--*  t601   ref    
N003 (  0,  0) [000586] ------------       t586 = *  PHI       ref   
                                                  /--*  t586   ref    
N005 (  0,  0) [000587] DA----------              *  STORE_LCL_VAR ref    V26 tmp15        d:3
N002 (  2, 10) [000169] H-----------       t169 =    CNS_INT(h) long   0xd1ffab1e token $123
                                                  /--*  t169   long   
               [000707] ------------       t707 = *  PUTARG_REG long   REG rcx
                                                  /--*  t707   long   arg0 in rcx
N003 ( 16, 16) [000170] --C---------       t170 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $54b
                                                  /--*  t170   ref    
N005 ( 16, 16) [000172] DA----------              *  STORE_LCL_VAR ref    V27 tmp16        d:2
N001 (  1,  1) [000173] ------------       t173 =    LCL_VAR   ref    V27 tmp16        u:2 $54b
                                                  /--*  t173   ref    
N003 (  2,  2) [000526] ------------       t526 = *  LEA(b+8)  byref 
N005 (  1,  1) [000372] ------------       t372 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t526   byref  
                                                  +--*  t372   ref    
               [000650] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000375] ------------       t375 =    LCL_VAR   ref    V27 tmp16        u:2 $54b
                                                  /--*  t375   ref    
N003 (  2,  2) [000528] -c----------       t528 = *  LEA(b+24) byref 
N005 (  2, 10) [000168] H-----------       t168 =    CNS_INT(h) long   0xd1ffab1e ftn $125
                                                  /--*  t528   byref  
                                                  +--*  t168   long   
               [000651] -A--GO------              *  STOREIND  long  
               [000652] ------------                 IL_OFFSET void   IL offset: 0xdf
N005 (  1,  1) [000165] ------------       t165 =    LCL_VAR   ref    V25 tmp14        u:2 (last use) $1ab
                                                  /--*  t165   ref    
               [000708] ------------       t708 = *  PUTARG_REG ref    REG rcx
N006 (  1,  1) [000166] ------------       t166 =    LCL_VAR   ref    V26 tmp15        u:3 (last use) $258
                                                  /--*  t166   ref    
               [000709] ------------       t709 = *  PUTARG_REG ref    REG rdx
N007 (  1,  1) [000175] ------------       t175 =    LCL_VAR   ref    V27 tmp16        u:2 (last use) $54b
                                                  /--*  t175   ref    
               [000710] ------------       t710 = *  PUTARG_REG ref    REG r8
                                                  /--*  t708   ref    arg0 in rcx
                                                  +--*  t709   ref    arg1 in rdx
                                                  +--*  t710   ref    arg2 in r8
N008 ( 17, 11) [000176] --CXG-------       t176 = *  CALL      ref    SolutionAnalyzer.IPC.CreateSession $464
                                                  /--*  t176   ref    
N010 ( 17, 11) [000533] DA-XG-----L-              *  STORE_LCL_VAR ref    V42 tmp31        d:2
N011 (  1,  1) [000534] ------------       t534 =    LCL_VAR   ref    V42 tmp31        u:2 (last use) $464
                                                  /--*  t534   ref    
               [000711] ------------       t711 = *  PUTARG_REG ref    REG rdx
N012 (  1,  1) [000164] ------------       t164 =    LCL_VAR   ref    V24 tmp13        u:2 (last use) <l:$1b9, c:$454>
                                                  /--*  t164   ref    
               [000712] ------------       t712 = *  PUTARG_REG ref    REG rcx
                                                  /--*  t711   ref    arg1 in rdx
                                                  +--*  t712   ref    this in rcx
N013 ( 36, 21) [000177] --CXG-------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue $VN.Void
               [000653] ------------                 IL_OFFSET void   IL offset: 0xe9
N003 (  1,  1) [000080] ------------        t80 =    LCL_VAR   ref    V06 loc4         u:2 $164
                                                  /--*  t80    ref    
               [000713] ------------       t713 = *  PUTARG_REG ref    REG rcx
N004 (  2, 10) [000536] H-----------       t536 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
                                                  /--*  t536   long   
               [000714] ------------       t714 = *  PUTARG_REG long   REG r11
N001 (  2, 10) [000715] Hc----------       t715 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t715   long   
N002 (  4, 12) [000716] -c----------       t716 = *  IND       long   REG NA
                                                  /--*  t713   ref    this in rcx
                                                  +--*  t714   long   arg1 in r11
                                                  +--*  t716   long   control expr
N005 ( 23, 21) [000081] --CXG-------        t81 = *  CALLV stub int    System.Collections.IEnumerator.MoveNext $5c0
N006 (  1,  1) [000082] -c----------        t82 =    CNS_INT   int    0 $40
                                                  /--*  t81    int    
                                                  +--*  t82    int    
N007 ( 25, 23) [000083] J--XG--N----              *  NE        void   $292
N008 ( 27, 25) [000084] ---XG-------              *  JTRUE     void  

------------ BB13 [0F4..127) -> BB17 (always), preds={BB02,BB09} succs={BB17}
N003 (  1,  1) [000436] ------------       t436 =    LCL_VAR   ref    V06 loc4         u:2 (last use) $164
                                                  /--*  t436   ref    
               [000717] ------------       t717 = *  PUTARG_REG ref    REG rcx
N004 (  2, 10) [000539] H-----------       t539 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127
                                                  /--*  t539   long   
               [000718] ------------       t718 = *  PUTARG_REG long   REG r11
N001 (  2, 10) [000719] Hc----------       t719 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t719   long   
N002 (  4, 12) [000720] -c----------       t720 = *  IND       long   REG NA
                                                  /--*  t717   ref    this in rcx
                                                  +--*  t718   long   arg1 in r11
                                                  +--*  t720   long   control expr
N005 ( 23, 21) [000435] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose $VN.Void
               [000654] ------------                 IL_OFFSET void   IL offset: 0x100
N001 (  1,  1) [000212] ------------       t212 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t212   ref    
N003 (  2,  2) [000546] -c----------       t546 = *  LEA(b+8)  byref 
                                                  /--*  t546   byref  
N004 (  4,  4) [000213] n---GO------       t213 = *  IND       ref    <l:$569, c:$568>
                                                  /--*  t213   ref    
N006 (  4,  4) [000384] DA--GO------              *  STORE_LCL_VAR ref    V35 tmp24        d:2
N001 (  1,  1) [000381] ------------       t381 =    LCL_VAR   ref    V35 tmp24        u:2 (last use) <l:$567, c:$16e>
                                                  /--*  t381   ref    
N003 (  2,  2) [000550] -c----------       t550 = *  LEA(b+24) byref 
                                                  /--*  t550   byref  
N004 (  4,  4) [000382] ---XG-------       t382 = *  IND       int    <l:$29b, c:$29a>
N005 (  1,  1) [000211] ------------       t211 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t211   ref    
N007 (  2,  2) [000548] -c----------       t548 = *  LEA(b+60) byref 
                                                  /--*  t548   byref  
                                                  +--*  t382   int    
               [000655] -A-XGO------              *  STOREIND  int   
               [000656] ------------                 IL_OFFSET void   IL offset: 0x111
N002 (  2, 10) [000221] H-----------       t221 =    CNS_INT(h) long   0xd1ffab1e method $12b
                                                  /--*  t221   long   
               [000721] ------------       t721 = *  PUTARG_REG long   REG rcx
                                                  /--*  t721   long   arg0 in rcx
N003 ( 16, 16) [000222] --C---------       t222 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $56c
                                                  /--*  t222   ref    
N005 ( 16, 16) [000224] DA----------              *  STORE_LCL_VAR ref    V29 tmp18        d:2
N001 (  1,  1) [000219] ------------       t219 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t219   ref    
N003 (  2,  2) [000553] -c----------       t553 = *  LEA(b+60) byref 
                                                  /--*  t553   byref  
N004 (  4,  4) [000220] n---GO------       t220 = *  IND       int    <l:$2a3, c:$2a2>
                                                  /--*  t220   int    
N006 (  4,  4) [000402] DA--GO------              *  STORE_LCL_VAR int    V37 tmp26        d:2
N002 (  2, 10) [000386] H-----------       t386 =    CNS_INT(h) long   0xd1ffab1e token $12c
                                                  /--*  t386   long   
               [000722] ------------       t722 = *  PUTARG_REG long   REG rcx
                                                  /--*  t722   long   arg0 in rcx
N003 ( 16, 16) [000387] --C---------       t387 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $56d
                                                  /--*  t387   ref    
N005 ( 16, 16) [000389] DA----------              *  STORE_LCL_VAR ref    V36 tmp25        d:2
N004 (  1,  1) [000390] ------------       t390 =    LCL_VAR   ref    V36 tmp25        u:2 $56d
                                                  /--*  t390   ref    
               [000723] ------------       t723 = *  PUTARG_REG ref    REG rcx
N005 (  1,  1) [000404] ------------       t404 =    CNS_INT   int    0 $40
                                                  /--*  t404   int    
               [000724] ------------       t724 = *  PUTARG_REG int    REG rdx
N006 (  1,  1) [000405] ------------       t405 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t405   ref    
               [000725] ------------       t725 = *  PUTARG_REG ref    REG r8
                                                  /--*  t723   ref    this in rcx
                                                  +--*  t724   int    arg1 in rdx
                                                  +--*  t725   ref    arg2 in r8
N007 ( 17, 12) [000406] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor $VN.Void
N001 (  1,  1) [000225] ------------       t225 =    LCL_VAR   ref    V29 tmp18        u:2 $56c
                                                  /--*  t225   ref    
N003 (  2,  2) [000559] ------------       t559 = *  LEA(b+8)  byref 
N005 (  1,  1) [000392] ------------       t392 =    LCL_VAR   ref    V36 tmp25        u:2 (last use) $56d
                                                  /--*  t559   byref  
                                                  +--*  t392   ref    
               [000657] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000397] ------------       t397 =    LCL_VAR   ref    V29 tmp18        u:2 $56c
                                                  /--*  t397   ref    
N003 (  2,  2) [000561] -c----------       t561 = *  LEA(b+16) byref 
N005 (  1,  1) [000398] ------------       t398 =    LCL_VAR   int    V37 tmp26        u:2 (last use) <l:$299, c:$30c>
                                                  /--*  t561   byref  
                                                  +--*  t398   int    
               [000658] -A--GO------              *  STOREIND  int   
               [000659] ------------                 IL_OFFSET void   IL offset: 0x11d
N001 (  1,  1) [000218] ------------       t218 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t218   ref    
N003 (  2,  2) [000563] ------------       t563 = *  LEA(b+16) byref 
N005 (  1,  1) [000227] ------------       t227 =    LCL_VAR   ref    V29 tmp18        u:2 (last use) $56c
                                                  /--*  t563   byref  
                                                  +--*  t227   ref    
               [000660] -A--GO------              *  STOREIND  ref   
               [000661] ------------                 IL_OFFSET void   IL offset: 0x122
N001 (  1,  1) [000230] ------------       t230 =    CNS_INT   int    0 $40
                                                  /--*  t230   int    
N003 (  1,  3) [000232] DA----------              *  STORE_LCL_VAR int    V10 loc8         d:2

------------ BB16 [127..133), preds={BB20} succs={BB17}
               [000662] ------------                 IL_OFFSET void   IL offset: 0x127
N002 (  1,  1) [000242] ------------       t242 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t242   ref    
               [000726] ------------       t726 = *  PUTARG_REG ref    REG rcx
                                                  /--*  t726   ref    this in rcx
N003 ( 15,  8) [000243] --CXG-------              *  CALL      void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0 $VN.Void
               [000663] ------------                 IL_OFFSET void   IL offset: 0x12d
N001 (  1,  1) [000244] ------------       t244 =    LCL_VAR   int    V10 loc8         u:3 (last use) $2ca
N002 (  1,  1) [000245] -c----------       t245 =    CNS_INT   int    1 $41
                                                  /--*  t244   int    
                                                  +--*  t245   int    
N003 (  3,  3) [000246] ------------       t246 = *  ADD       int    $2ad
                                                  /--*  t246   int    
N005 (  3,  3) [000248] DA----------              *  STORE_LCL_VAR int    V10 loc8         d:4

------------ BB17 [000..147) -> BB19 (cond), preds={BB13,BB16} succs={BB18,BB19}
N001 (  0,  0) [000598] ------------       t598 =    PHI_ARG   int    V10 loc8         u:4
N002 (  0,  0) [000597] ------------       t597 =    PHI_ARG   int    V10 loc8         u:2 $40
                                                  /--*  t598   int    
                                                  +--*  t597   int    
N003 (  0,  0) [000580] ------------       t580 = *  PHI       int   
                                                  /--*  t580   int    
N005 (  0,  0) [000581] DA----------              *  STORE_LCL_VAR int    V10 loc8         d:3
N001 (  1,  1) [000236] ------------       t236 =    LCL_VAR   ref    V02 loc0         u:2 $180
                                                  /--*  t236   ref    
N003 (  2,  2) [000566] -c----------       t566 = *  LEA(b+60) byref 
                                                  /--*  t566   byref  
N004 (  4,  4) [000237] n---GO------       t237 = *  IND       int    <l:$2a9, c:$2a8>
                                                  /--*  t237   int    
N006 (  4,  4) [000424] DA--GO------              *  STORE_LCL_VAR int    V39 tmp28        d:2
N001 (  1,  1) [000412] ------------       t412 =    LCL_VAR   int    V39 tmp28        u:2 <l:$2a7, c:$680>
N002 (  1,  1) [000411] -c----------       t411 =    CNS_INT   int    8 $57
                                                  /--*  t412   int    
                                                  +--*  t411   int    
N003 (  3,  3) [000413] J------N----              *  GE        void   <l:$2ab, c:$2aa>
N004 (  5,  5) [000414] ------------              *  JTRUE     void  

------------ BB18 [000..000) -> BB20 (always), preds={BB17} succs={BB20}
N001 (  1,  1) [000419] ------------       t419 =    LCL_VAR   int    V39 tmp28        u:2 (last use) <l:$2a7, c:$680>
                                                  /--*  t419   int    
N003 (  1,  3) [000421] DA----------              *  STORE_LCL_VAR int    V38 tmp27        d:4

------------ BB19 [000..000), preds={BB17} succs={BB20}
N001 (  1,  1) [000415] -c----------       t415 =    CNS_INT   int    8 $57
                                                  /--*  t415   int    
N003 (  1,  3) [000417] DA----------              *  STORE_LCL_VAR int    V38 tmp27        d:3

------------ BB20 [???..???) -> BB16 (cond), preds={BB18,BB19} succs={BB21,BB16}
N001 (  0,  0) [000600] ------------       t600 =    PHI_ARG   int    V38 tmp27        u:4 <l:$2a7, c:$680>
N002 (  0,  0) [000599] ------------       t599 =    PHI_ARG   int    V38 tmp27        u:3 $57
                                                  /--*  t600   int    
                                                  +--*  t599   int    
N003 (  0,  0) [000583] ------------       t583 = *  PHI       int   
                                                  /--*  t583   int    
N005 (  0,  0) [000584] DA----------              *  STORE_LCL_VAR int    V38 tmp27        d:2
N001 (  1,  1) [000233] ------------       t233 =    LCL_VAR   int    V10 loc8         u:3 $2ca
N002 (  1,  1) [000422] ------------       t422 =    LCL_VAR   int    V38 tmp27        u:2 (last use) $2cb
                                                  /--*  t233   int    
                                                  +--*  t422   int    
N003 (  3,  3) [000240] J------N----              *  LT        void   $2ac
N004 (  5,  5) [000241] ------------              *  JTRUE     void  

------------ BB21 [147..153) (return), preds={BB20} succs={}
               [000664] ------------                 IL_OFFSET void   IL offset: 0x147
N001 (  1,  1) [000249] ------------       t249 =    LCL_VAR   ref    V02 loc0         u:2 (last use) $180
                                                  /--*  t249   ref    
N003 (  2,  2) [000568] -c----------       t568 = *  LEA(b+24) byref 
                                                  /--*  t568   byref  
N004 (  4,  4) [000250] n---GO------       t250 = *  IND       ref    <l:$575, c:$574>
                                                  /--*  t250   ref    
N006 (  4,  4) [000429] DA--GO------              *  STORE_LCL_VAR ref    V40 tmp29        d:2
N001 (  1,  1) [000426] ------------       t426 =    LCL_VAR   ref    V40 tmp29        u:2 (last use) <l:$573, c:$177>
                                                  /--*  t426   ref    
N003 (  2,  2) [000570] -c----------       t570 = *  LEA(b+8)  byref 
                                                  /--*  t570   byref  
N004 (  4,  4) [000427] ---XG-------       t427 = *  IND       ref    <l:$57b, c:$57a>
                                                  /--*  t427   ref    
N005 (  5,  5) [000253] ---XG-------              *  RETURN    ref    $17a

------------ BB25 [???..???) (throw), preds={} succs={}
N001 ( 14,  5) [000672] --CXG-------                 CALL help void   HELPER.CORINFO_HELP_RNGCHKFAIL

------------ BB22 [0F4..0F8) -> BB24 (cond), preds={} succs={BB23,BB24}
               [000665] ------------                 IL_OFFSET void   IL offset: 0xf4
N001 (  1,  1) [000254] -c----------       t254 =    LCL_VAR   ref    V06 loc4         u:2 $164
N002 (  1,  1) [000255] -c----------       t255 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t254   ref    
                                                  +--*  t255   ref    
N003 (  3,  3) [000256] J------N----              *  EQ        void   $293
N004 (  5,  5) [000257] ------------              *  JTRUE     void  

------------ BB23 [0F8..0FF), preds={BB22} succs={BB24}
               [000666] ------------                 IL_OFFSET void   IL offset: 0xf8
N003 (  1,  1) [000259] ------------       t259 =    LCL_VAR   ref    V06 loc4         u:2 (last use) $164
                                                  /--*  t259   ref    
               [000727] ------------       t727 = *  PUTARG_REG ref    REG rcx
N004 (  2, 10) [000542] H-----------       t542 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127
                                                  /--*  t542   long   
               [000728] ------------       t728 = *  PUTARG_REG long   REG r11
N001 (  2, 10) [000729] Hc----------       t729 =    CNS_INT(h) long   0xd1ffab1e ftn
                                                  /--*  t729   long   
N002 (  4, 12) [000730] -c----------       t730 = *  IND       long   REG NA
                                                  /--*  t727   ref    this in rcx
                                                  +--*  t728   long   arg1 in r11
                                                  +--*  t730   long   control expr
N005 ( 23, 21) [000260] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose $VN.Void

------------ BB24 [0FF..100) (finret), preds={BB22,BB23} succs={}
               [000667] ------------                 IL_OFFSET void   IL offset: 0xff
N001 (  0,  0) [000258] ------------                 RETFILT   void   $600

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Calculate stack level slots

*************** Finishing PHASE Calculate stack level slots [no changes]

*************** Starting PHASE Linear scan register alloc
Clearing modified regs.

buildIntervals ========

-----------------
LIVENESS:
-----------------
BB01 use def in out
{V00 V01}
{V02 V03 V04 V05 V06 V12 V13 V14 V15 V30 V31 V32 V41}
{V00 V01}
{V02 V03 V04 V05 V06}
BB02 use def in out
{V06}
{}
{V02 V03 V04 V05 V06}
{V02 V03 V04 V05 V06}
BB03 use def in out
{V03 V04 V06}
{V07 V16 V17 V18}
{V02 V03 V04 V05 V06}
{V02 V03 V04 V05 V06 V07 V18}
BB04 use def in out
{V07 V18}
{V19 V20 V21}
{V02 V03 V04 V05 V06 V07 V18}
{V02 V03 V04 V05 V06 V19 V20 V21}
BB05 use def in out
{V05 V07 V18}
{V19 V20 V21}
{V02 V03 V04 V05 V06 V07 V18}
{V02 V03 V04 V05 V06 V19 V20 V21}
BB06 use def in out
{V02 V19 V20 V21}
{V22 V23 V24 V25 V26}
{V02 V03 V04 V05 V06 V19 V20 V21}
{V02 V03 V04 V05 V06 V24 V25 V26}
BB07 use def in out
{V02}
{V26 V28}
{V02 V03 V04 V05 V06 V24 V25}
{V02 V03 V04 V05 V06 V24 V25 V26}
BB09 use def in out
{V02 V06 V24 V25 V26}
{V27 V42}
{V02 V03 V04 V05 V06 V24 V25 V26}
{V02 V03 V04 V05 V06}
BB13 use def in out
{V02 V06}
{V10 V29 V35 V36 V37}
{V02 V06}
{V02 V10}
BB16 use def in out
{V02 V10}
{V10}
{V02 V10}
{V02 V10}
BB17 use def in out
{V02}
{V39}
{V02 V10}
{V02 V10 V39}
BB18 use def in out
{V39}
{V38}
{V02 V10 V39}
{V02 V10 V38}
BB19 use def in out
{}
{V38}
{V02 V10}
{V02 V10 V38}
BB20 use def in out
{V10 V38}
{}
{V02 V10 V38}
{V02 V10}
BB21 use def in out
{V02}
{V40}
{V02}
{}
BB25 use def in out
{}
{}
{}
{}
BB22 use def in out
{V06}
{}
{V06}
{V06}
BB23 use def in out
{V06}
{}
{V06}
{}
BB24 use def in out
{}
{}
{}
{}
EH Vars: {V06}
Finally Vars: {}

Interval  0: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  0: (V00) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  1: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  1: (V01) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  2: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  2: (V02) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  3: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  3: (V03) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  4: int RefPositions {} physReg:NA Preferences=[allInt]
  Interval  4: (V04) int RefPositions {} physReg:NA Preferences=[allInt]
Interval  5: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  5: (V05) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  6: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  6: (V07) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  7: int RefPositions {} physReg:NA Preferences=[allInt]
  Interval  7: (V10) int RefPositions {} physReg:NA Preferences=[allInt]
Interval  8: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  8: (V12) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  9: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  9: (V13) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 10: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 10: (V14) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 11: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 11: (V15) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 12: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 12: (V16) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 13: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 13: (V17) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 14: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 14: (V18) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 15: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 15: (V19) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 16: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 16: (V20) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 17: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 17: (V21) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 18: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 18: (V22) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 19: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 19: (V23) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 20: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 20: (V24) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 21: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 21: (V25) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 22: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 22: (V26) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 23: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 23: (V27) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 24: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 24: (V28) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 25: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 25: (V29) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 26: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 26: (V30) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 27: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 27: (V31) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 28: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 28: (V32) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 29: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 29: (V35) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 30: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 30: (V36) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 31: int RefPositions {} physReg:NA Preferences=[allInt]
  Interval 31: (V37) int RefPositions {} physReg:NA Preferences=[allInt]
Interval 32: int RefPositions {} physReg:NA Preferences=[allInt]
  Interval 32: (V38) int RefPositions {} physReg:NA Preferences=[allInt]
Interval 33: int RefPositions {} physReg:NA Preferences=[allInt]
  Interval 33: (V39) int RefPositions {} physReg:NA Preferences=[allInt]
Interval 34: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 34: (V40) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 35: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 35: (V41) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 36: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 36: (V42) ref RefPositions {} physReg:NA Preferences=[allInt]

FP callee save candidate vars: None

floatVarCount = 0; hasLoops = 1, singleExit = 1
TUPLE STYLE DUMP BEFORE LSRA

New BlockSet epoch 5, # of blocks (including unused BB00): 26, bitset array size: 1 (short)
LSRA Block Sequence: BB01(  1   ) 
BB02(  1   ) 
BB03(  4   ) 
BB04(  2   ) 
BB05(  2   ) 
BB06(  4   ) 
BB07(  2   ) 
BB09(  4   ) 
BB13(  1   ) 
BB17(  8   ) 
BB18(  2   ) 
BB19(  2   ) 
BB20(  8   ) 
BB16(  2   ) 
BB21(  1   ) 
BB22(  0   )  EH-in
BB23(  0   ) 
BB24(  0   )  EH-out
BB25(  0   ) 

BB01 [000..070), preds={} succs={BB02}
=====
  N000.                    IL_OFFSET IL offset: 0x0
  N002. t0              =  CNS_INT(h) 0xd1ffab1e method
  N000. t673            =  PUTARG_REG; t0
  N003. t1              =  CALL help; t673
  N005.                    V12(t3); t1
  N000.                    IL_OFFSET IL offset: 0x5
  N001.                    V12(t6*)
  N003.                    V02(t8); t6*
  N000.                    IL_OFFSET IL offset: 0x6
  N001.                    V02(t9)
  N003. t440            =  LEA(b+32); t9
  N005.                    V01(t10*)
  N000.                    STOREIND ; t440,t10*
  N000.                    IL_OFFSET IL offset: 0xd
  N001.                    V02(t13)
  N003. t442            =  LEA(b+60); t13
  N005. t14             =  CNS_INT   0
  N000.                    STOREIND ; t442,t14
  N000.                    IL_OFFSET IL offset: 0x14
  N001.                    V02(t17)
  N003. t444            =  LEA(b+56); t17
  N005. t18             =  CNS_INT   0
  N000.                    STOREIND ; t444,t18
  N000.                    IL_OFFSET IL offset: 0x1b
  N002. t22             =  CNS_INT(h) 0xd1ffab1e token
  N000. t674            =  PUTARG_REG; t22
  N003. t23             =  CALL help; t674
  N005.                    V13(t25); t23
  N002. t266            =  CNS_INT(h) 0xd1ffab1e token
  N000. t675            =  PUTARG_REG; t266
  N003. t267            =  CALL help; t675
  N005.                    V30(t269); t267
  N001.                    V30(t280)
  N003. t448            =  LEA(b+52); t280
  N005.                    CNS_INT   0x2000400
  N000.                    STOREIND ; t448
  N001.                    V13(t265)
  N003. t450            =  LEA(b+8) ; t265
  N005.                    V30(t272*)
  N000.                    STOREIND ; t450,t272*
  N000.                    IL_OFFSET IL offset: 0x21
  N001.                    V02(t21)
  N003. t452            =  LEA(b+24); t21
  N005.                    V13(t28*)
  N000.                    STOREIND ; t452,t28*
  N000.                    IL_OFFSET IL offset: 0x26
  N002. t32             =  CNS_INT(h) 0xd1ffab1e token
  N000. t676            =  PUTARG_REG; t32
  N003. t33             =  CALL help; t676
  N005.                    V14(t35); t33
  N003. t297            =  CNS_INT   0x7ffc7e0b0028
  N000. t677            =  PUTARG_REG; t297
  N004. t298            =  CNS_INT   14
  N000. t678            =  PUTARG_REG; t298
  N005.                    CALL help; t677,t678
  N006. t458            =  CNS_INT(h) 0xd1ffab1e static Fseq[Value]
  N007. t295            =  IND      ; t458
  N009.                    V14(t287)
  N011. t455            =  LEA(b+8) ; t287
  N000.                    STOREIND ; t455,t295
  N000.                    IL_OFFSET IL offset: 0x2c
  N001.                    V02(t31)
  N003. t460            =  LEA(b+8) ; t31
  N005.                    V14(t38*)
  N000.                    STOREIND ; t460,t38*
  N000.                    IL_OFFSET IL offset: 0x31
  N001.                    V02(t41)
  N003. t462            =  LEA(b+16); t41
  N005. t42             =  CNS_INT   null
  N000.                    STOREIND ; t462,t42
  N000.                    IL_OFFSET IL offset: 0x38
  N002. t46             =  CNS_INT(h) 0xd1ffab1e token
  N000. t679            =  PUTARG_REG; t46
  N003. t47             =  CALL help; t679
  N005.                    V15(t49); t47
  N003.                    V15(t50)
  N000. t680            =  PUTARG_REG; t50
  N004. t302            =  CNS_INT   null
  N000. t681            =  PUTARG_REG; t302
  N005.                    CALL     ; t680,t681
  N000.                    IL_OFFSET IL offset: 0x3e
  N001.                    V02(t45)
  N003. t467            =  LEA(b+40); t45
  N005.                    V15(t52*)
  N000.                    STOREIND ; t467,t52*
  N001. t55             =  CALL     
  N003.                    V31(t316); t55
  N001.                    V31(t313)
  N002.                    NULLCHECK; t313
  N003.                    V31(t306)
  N000. t682            =  PUTARG_REG; t306
  N004. t307            =  CNS_INT   3
  N000. t683            =  PUTARG_REG; t307
  N005.                    CALL     ; t682,t683
  N002.                    V31(t309*)
  N004. t471            =  LEA(b+200); t309*
  N005. t310            =  IND      ; t471
  N000. t684            =  PUTARG_REG; t310
  N006. t311            =  CALL     ; t684
  N008.                    V32(t322); t311
  N001.                    V32(t319*)
  N003. t474            =  LEA(b+40); t319*
  N004. t320            =  IND      ; t474
  N006.                    V03(t62); t320
  N005.                    CNS_INT   5
  N000.                    PUTARG_STK [+0x20]
  N006.                    V03(t337)
  N000. t669            =  LEA(b+8) ; t337
  N007. t338            =  IND      ; t669
  N000. t686            =  PUTARG_REG; t338
  N008. t475            =  CNS_INT(h) 0xD1FFAB1E "dotnet.exe"
  N009. t476            =  IND      ; t475
  N000. t687            =  PUTARG_REG; t476
  N010.                    V03(t63)
  N000. t688            =  PUTARG_REG; t63
  N011. t336            =  CNS_INT   0
  N000. t689            =  PUTARG_REG; t336
  N012. t340            =  CALL     ; t686,t687,t688,t689
  N013.                    CNS_INT   0
  N014. t329            =  GE       ; t340
  N016.                    V04(t69); t329
  N001. t70             =  CALL     
  N003.                    V41(t482); t70
  N004.                    CNS_INT   0
  N005.                    V41(t483)
  N000. t671            =  LEA(b+8) ; t483
  N006. t486            =  IND      ; t671
  N007.                    ARR_BOUNDS_CHECK_Rng; t486
  N008.                    V41(t484*)
  N010. t492            =  LEA(b+16); t484*
  N011. t73             =  IND      ; t492
  N015.                    V05(t75); t73
  N000.                    IL_OFFSET IL offset: 0x68
  N003.                    V00(t76*)
  N000. t690            =  PUTARG_REG; t76*
  N004. t495            =  CNS_INT(h) 0xd1ffab1e ftn
  N000. t691            =  PUTARG_REG; t495
  N001.                    CNS_INT(h) 0xd1ffab1e ftn
  N002.                    IND      
  N005. t77             =  CALLV stub; t690,t691
  N007.                    V06 MEM; t77

BB02 [070..072) -> BB13 (cond), preds={BB01} succs={BB03,BB13}
=====
  N000.                    IL_OFFSET IL offset: 0xe9
  N003. t575            =  V06 MEM
  N000. t694            =  PUTARG_REG; t575
  N004. t576            =  CNS_INT(h) 0xd1ffab1e ftn
  N000. t695            =  PUTARG_REG; t576
  N001.                    CNS_INT(h) 0xd1ffab1e ftn
  N002.                    IND      
  N005. t572            =  CALLV stub; t694,t695
  N006.                    CNS_INT   0
  N007.                    EQ       ; t572
  N008.                    JTRUE    

BB03 [072..08B) -> BB05 (cond), preds={BB02,BB09} succs={BB04,BB05}
=====
  N000.                    IL_OFFSET IL offset: 0x72
  N003. t85             =  V06 MEM
  N000. t698            =  PUTARG_REG; t85
  N004. t498            =  CNS_INT(h) 0xd1ffab1e ftn
  N000. t699            =  PUTARG_REG; t498
  N001.                    CNS_INT(h) 0xd1ffab1e ftn
  N002.                    IND      
  N005. t86             =  CALLV stub; t698,t699
  N007.                    V07(t88); t86
  N000.                    IL_OFFSET IL offset: 0x7b
  N002. t89             =  CNS_INT(h) 0xd1ffab1e token
  N000. t702            =  PUTARG_REG; t89
  N003. t90             =  CALL help; t702
  N005.                    V16(t92); t90
  N000.                    IL_OFFSET IL offset: 0x80
  N001.                    V16(t96)
  N003. t503            =  LEA(b+8) ; t96
  N005.                    V03(t97)
  N000.                    STOREIND ; t503,t97
  N001.                    V16(t95*)
  N003.                    V17(t105); t95*
  N001.                    V17(t99*)
  N003.                    V18(t108); t99*
  N000.                    IL_OFFSET IL offset: 0x87
  N001.                    V04(t100)
  N002.                    CNS_INT   0
  N003.                    NE       ; t100
  N004.                    JTRUE    

BB04 [08B..08F) -> BB06 (always), preds={BB03} succs={BB06}
=====
  N001.                    V18(t110*)
  N003.                    V19(t203); t110*
  N001.                    V19(t111)
  N003.                    V20(t206); t111
  N001.                    V07(t201*)
  N003.                    V21(t209); t201*

BB05 [08F..09C), preds={BB03} succs={BB06}
=====
  N001.                    V18(t112*)
  N003.                    V19(t119); t112*
  N001.                    V19(t113)
  N003.                    V20(t122); t113
  N004. t504            =  CNS_INT(h) 0xD1FFAB1E " "
  N005. t505            =  IND      ; t504
  N000. t703            =  PUTARG_REG; t505
  N006.                    V05(t114)
  N000. t704            =  PUTARG_REG; t114
  N007.                    V07(t116*)
  N000. t705            =  PUTARG_REG; t116*
  N008. t117            =  CALL     ; t703,t704,t705
  N010.                    V21(t125); t117

BB06 [09C..0BB) -> BB09 (cond), preds={BB04,BB05} succs={BB07,BB09}
=====
  N001.                    V20(t128*)
  N003. t510            =  LEA(b+16); t128*
  N005.                    V21(t129*)
  N000.                    STOREIND ; t510,t129*
  N000.                    IL_OFFSET IL offset: 0xa1
  N001.                    V19(t131)
  N003. t512            =  LEA(b+130); t131
  N005.                    CNS_INT   0
  N000.                    STOREIND ; t512
  N000.                    IL_OFFSET IL offset: 0xaa
  N001.                    V02(t137)
  N003. t514            =  LEA(b+8) ; t137
  N004. t138            =  IND      ; t514
  N006.                    V23(t145); t138
  N000.                    IL_OFFSET IL offset: 0xaa
  N001.                    V02(t140)
  N003. t516            =  LEA(b+48); t140
  N004. t141            =  IND      ; t516
  N006.                    V22(t143); t141
  N001.                    V23(t146*)
  N003.                    V24(t153); t146*
  N001.                    V19(t139*)
  N003.                    V25(t156); t139*
  N001.                    V22(t147*)
  N003.                    V26(t159); t147*
  N001.                    V26(t148)
  N002.                    CNS_INT   null
  N003.                    NE       ; t148
  N004.                    JTRUE    

BB07 [000..0D3), preds={BB06} succs={BB09}
=====
  N002. t181            =  CNS_INT(h) 0xd1ffab1e token
  N000. t706            =  PUTARG_REG; t181
  N003. t182            =  CALL help; t706
  N005.                    V28(t184); t182
  N001.                    V28(t185)
  N003. t519            =  LEA(b+8) ; t185
  N005.                    V02(t360)
  N000.                    STOREIND ; t519,t360
  N001.                    V28(t363)
  N003. t521            =  LEA(b+24); t363
  N005. t180            =  CNS_INT(h) 0xd1ffab1e ftn
  N000.                    STOREIND ; t521,t180
  N001.                    V02(t178)
  N003. t523            =  LEA(b+48); t178
  N005.                    V28(t187)
  N000.                    STOREIND ; t523,t187
  N001.                    V28(t193*)
  N003.                    V26(t199); t193*

BB09 [000..0F2) -> BB03 (cond), preds={BB06,BB07} succs={BB13,BB03}
=====
  N002. t169            =  CNS_INT(h) 0xd1ffab1e token
  N000. t707            =  PUTARG_REG; t169
  N003. t170            =  CALL help; t707
  N005.                    V27(t172); t170
  N001.                    V27(t173)
  N003. t526            =  LEA(b+8) ; t173
  N005.                    V02(t372)
  N000.                    STOREIND ; t526,t372
  N001.                    V27(t375)
  N003. t528            =  LEA(b+24); t375
  N005. t168            =  CNS_INT(h) 0xd1ffab1e ftn
  N000.                    STOREIND ; t528,t168
  N000.                    IL_OFFSET IL offset: 0xdf
  N005.                    V25(t165*)
  N000. t708            =  PUTARG_REG; t165*
  N006.                    V26(t166*)
  N000. t709            =  PUTARG_REG; t166*
  N007.                    V27(t175*)
  N000. t710            =  PUTARG_REG; t175*
  N008. t176            =  CALL     ; t708,t709,t710
  N010.                    V42(t533); t176
  N011.                    V42(t534*)
  N000. t711            =  PUTARG_REG; t534*
  N012.                    V24(t164*)
  N000. t712            =  PUTARG_REG; t164*
  N013.                    CALL nullcheck; t711,t712
  N000.                    IL_OFFSET IL offset: 0xe9
  N003. t80             =  V06 MEM
  N000. t713            =  PUTARG_REG; t80
  N004. t536            =  CNS_INT(h) 0xd1ffab1e ftn
  N000. t714            =  PUTARG_REG; t536
  N001.                    CNS_INT(h) 0xd1ffab1e ftn
  N002.                    IND      
  N005. t81             =  CALLV stub; t713,t714
  N006.                    CNS_INT   0
  N007.                    NE       ; t81
  N008.                    JTRUE    

BB13 [0F4..127) -> BB17 (always), preds={BB02,BB09} succs={BB17}
=====
  N003. t436*           =  V06 MEM
  N000. t717            =  PUTARG_REG; t436*
  N004. t539            =  CNS_INT(h) 0xd1ffab1e ftn
  N000. t718            =  PUTARG_REG; t539
  N001.                    CNS_INT(h) 0xd1ffab1e ftn
  N002.                    IND      
  N005.                    CALLV stub; t717,t718
  N000.                    IL_OFFSET IL offset: 0x100
  N001.                    V02(t212)
  N003. t546            =  LEA(b+8) ; t212
  N004. t213            =  IND      ; t546
  N006.                    V35(t384); t213
  N001.                    V35(t381*)
  N003. t550            =  LEA(b+24); t381*
  N004. t382            =  IND      ; t550
  N005.                    V02(t211)
  N007. t548            =  LEA(b+60); t211
  N000.                    STOREIND ; t548,t382
  N000.                    IL_OFFSET IL offset: 0x111
  N002. t221            =  CNS_INT(h) 0xd1ffab1e method
  N000. t721            =  PUTARG_REG; t221
  N003. t222            =  CALL help; t721
  N005.                    V29(t224); t222
  N001.                    V02(t219)
  N003. t553            =  LEA(b+60); t219
  N004. t220            =  IND      ; t553
  N006.                    V37(t402); t220
  N002. t386            =  CNS_INT(h) 0xd1ffab1e token
  N000. t722            =  PUTARG_REG; t386
  N003. t387            =  CALL help; t722
  N005.                    V36(t389); t387
  N004.                    V36(t390)
  N000. t723            =  PUTARG_REG; t390
  N005. t404            =  CNS_INT   0
  N000. t724            =  PUTARG_REG; t404
  N006. t405            =  CNS_INT   null
  N000. t725            =  PUTARG_REG; t405
  N007.                    CALL     ; t723,t724,t725
  N001.                    V29(t225)
  N003. t559            =  LEA(b+8) ; t225
  N005.                    V36(t392*)
  N000.                    STOREIND ; t559,t392*
  N001.                    V29(t397)
  N003. t561            =  LEA(b+16); t397
  N005.                    V37(t398*)
  N000.                    STOREIND ; t561,t398*
  N000.                    IL_OFFSET IL offset: 0x11d
  N001.                    V02(t218)
  N003. t563            =  LEA(b+16); t218
  N005.                    V29(t227*)
  N000.                    STOREIND ; t563,t227*
  N000.                    IL_OFFSET IL offset: 0x122
  N001. t230            =  CNS_INT   0
  N003.                    V10(t232); t230

BB17 [000..147) -> BB19 (cond), preds={BB13,BB16} succs={BB18,BB19}
=====
  N001.                    V02(t236)
  N003. t566            =  LEA(b+60); t236
  N004. t237            =  IND      ; t566
  N006.                    V39(t424); t237
  N001.                    V39(t412)
  N002.                    CNS_INT   8
  N003.                    GE       ; t412
  N004.                    JTRUE    

BB18 [000..000) -> BB20 (always), preds={BB17} succs={BB20}
=====
  N001.                    V39(t419*)
  N003.                    V38(t421); t419*

BB19 [000..000), preds={BB17} succs={BB20}
=====
  N001.                    CNS_INT   8
  N003.                    V38(t417)

BB20 [???..???) -> BB16 (cond), preds={BB18,BB19} succs={BB21,BB16}
=====
  N001.                    V10(t233)
  N002.                    V38(t422*)
  N003.                    LT       ; t233,t422*
  N004.                    JTRUE    

BB16 [127..133), preds={BB20} succs={BB17}
=====
  N000.                    IL_OFFSET IL offset: 0x127
  N002.                    V02(t242)
  N000. t726            =  PUTARG_REG; t242
  N003.                    CALL     ; t726
  N000.                    IL_OFFSET IL offset: 0x12d
  N001.                    V10(t244*)
  N002.                    CNS_INT   1
  N003. t246            =  ADD      ; t244*
  N005.                    V10(t248); t246

BB21 [147..153) (return), preds={BB20} succs={}
=====
  N000.                    IL_OFFSET IL offset: 0x147
  N001.                    V02(t249*)
  N003. t568            =  LEA(b+24); t249*
  N004. t250            =  IND      ; t568
  N006.                    V40(t429); t250
  N001.                    V40(t426*)
  N003. t570            =  LEA(b+8) ; t426*
  N004. t427            =  IND      ; t570
  N005.                    RETURN   ; t427

BB22 [0F4..0F8) -> BB24 (cond), preds={} succs={BB23,BB24}
=====
  N000.                    IL_OFFSET IL offset: 0xf4
  N001.                    V06 MEM
  N002.                    CNS_INT   null
  N003.                    EQ       
  N004.                    JTRUE    

BB23 [0F8..0FF), preds={BB22} succs={BB24}
=====
  N000.                    IL_OFFSET IL offset: 0xf8
  N003. t259*           =  V06 MEM
  N000. t727            =  PUTARG_REG; t259*
  N004. t542            =  CNS_INT(h) 0xd1ffab1e ftn
  N000. t728            =  PUTARG_REG; t542
  N001.                    CNS_INT(h) 0xd1ffab1e ftn
  N002.                    IND      
  N005.                    CALLV stub; t727,t728

BB24 [0FF..100) (finret), preds={BB22,BB23} succs={}
=====
  N000.                    IL_OFFSET IL offset: 0xff
  N001.                    RETFILT  

BB25 [???..???) (throw), preds={} succs={}
=====
  N001.                    CALL help




buildIntervals second part ========
Int arg V00 in reg rcx
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00>  BB00 regmask=[rcx] minReg=1 fixed>
Int arg V01 in reg rdx
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V01>  BB00 regmask=[rdx] minReg=1 fixed>

NEW BLOCK BB01
<RefPosition #2   @1   RefTypeBB  BB01 regmask=[] minReg=1>

DefList: {  }
N003 (???,???) [000613] ------------              *  IL_OFFSET void   IL offset: 0x0 REG NA

DefList: {  }
N005 (  2, 10) [000000] H-----------              *  CNS_INT(h) long   0xd1ffab1e method REG NA $100
Interval 37: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #3   @6   RefTypeDef <Ivl:37> CNS_INT BB01 regmask=[allIntButFP] minReg=1>

DefList: { N005.t0. CNS_INT }
N007 (???,???) [000673] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #4   @7   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #5   @7   RefTypeUse <Ivl:37>  BB01 regmask=[rcx] minReg=1 last fixed>
Interval 38: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #6   @8   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #7   @8   RefTypeDef <Ivl:38> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>

DefList: { N007.t673. PUTARG_REG }
N009 ( 16, 16) [000001] --C---------              *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG NA $180
<RefPosition #8   @9   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #9   @9   RefTypeUse <Ivl:38>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #10  @10  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #11  @10  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #12  @10  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #13  @10  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #14  @10  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #15  @10  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #16  @10  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
Interval 39: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #17  @10  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #18  @10  RefTypeDef <Ivl:39> CALL BB01 regmask=[rax] minReg=1 fixed>

DefList: { N009.t1. CALL }
N011 ( 16, 16) [000003] DA----------              *  STORE_LCL_VAR ref    V12 tmp1         d:2 NA REG NA
<RefPosition #19  @11  RefTypeUse <Ivl:39>  BB01 regmask=[allIntButFP] minReg=1 last>
Assigning related <V12/L8> to <I39>
<RefPosition #20  @12  RefTypeDef <Ivl:8 V12> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N013 (???,???) [000614] ------------              *  IL_OFFSET void   IL offset: 0x5 REG NA

DefList: {  }
N015 (  1,  1) [000006] ------------              *  LCL_VAR   ref    V12 tmp1         u:2 NA (last use) REG NA $180

DefList: {  }
N017 (  1,  3) [000008] DA----------              *  STORE_LCL_VAR ref    V02 loc0         d:2 NA REG NA
<RefPosition #21  @17  RefTypeUse <Ivl:8 V12> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>
Assigning related <V02/L2> to <V12/L8>
<RefPosition #22  @18  RefTypeDef <Ivl:2 V02> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N019 (???,???) [000615] ------------              *  IL_OFFSET void   IL offset: 0x6 REG NA

DefList: {  }
N021 (  1,  1) [000009] ------------              *  LCL_VAR   ref    V02 loc0         u:2 NA REG NA $180

DefList: {  }
N023 (  2,  2) [000440] ------------              *  LEA(b+32) byref  REG NA
<RefPosition #23  @23  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>
Interval 40: byref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #24  @24  RefTypeDef <Ivl:40> LEA BB01 regmask=[allIntButFP] minReg=1>

DefList: { N023.t440. LEA }
N025 (  1,  1) [000010] ------------              *  LCL_VAR   ref    V01 arg1         u:1 NA (last use) REG NA $81

DefList: { N023.t440. LEA }
N027 (???,???) [000616] -A--GO------              *  STOREIND  ref    REG NA
<RefPosition #25  @27  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #26  @27  RefTypeUse <Ivl:40>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #27  @27  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #28  @27  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #29  @28  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #30  @28  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #31  @28  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #32  @28  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #33  @28  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #34  @28  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #35  @28  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
<RefPosition #36  @28  RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1>
<RefPosition #37  @28  RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1>
<RefPosition #38  @28  RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1>
<RefPosition #39  @28  RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1>
<RefPosition #40  @28  RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1>
<RefPosition #41  @28  RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1>

DefList: {  }
N029 (???,???) [000617] ------------              *  IL_OFFSET void   IL offset: 0xd REG NA

DefList: {  }
N031 (  1,  1) [000013] ------------              *  LCL_VAR   ref    V02 loc0         u:2 NA REG NA $180

DefList: {  }
N033 (  2,  2) [000442] -c----------              *  LEA(b+60) byref  REG NA
Contained
DefList: {  }
N035 (  1,  1) [000014] ------------              *  CNS_INT   int    0 REG NA $40
Interval 41: int RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #42  @36  RefTypeDef <Ivl:41> CNS_INT BB01 regmask=[allIntButFP] minReg=1>

DefList: { N035.t14. CNS_INT }
N037 (???,???) [000618] -A--GO------              *  STOREIND  int    REG NA
<RefPosition #43  @37  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #44  @37  RefTypeUse <Ivl:41>  BB01 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N039 (???,???) [000619] ------------              *  IL_OFFSET void   IL offset: 0x14 REG NA

DefList: {  }
N041 (  1,  1) [000017] ------------              *  LCL_VAR   ref    V02 loc0         u:2 NA REG NA $180

DefList: {  }
N043 (  2,  2) [000444] -c----------              *  LEA(b+56) byref  REG NA
Contained
DefList: {  }
N045 (  1,  1) [000018] ------------              *  CNS_INT   int    0 REG NA $40
Interval 42: int RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #45  @46  RefTypeDef <Ivl:42> CNS_INT BB01 regmask=[allIntButFP] minReg=1>

DefList: { N045.t18. CNS_INT }
N047 (???,???) [000620] -A--GO------              *  STOREIND  int    REG NA
<RefPosition #46  @47  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #47  @47  RefTypeUse <Ivl:42>  BB01 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N049 (???,???) [000621] ------------              *  IL_OFFSET void   IL offset: 0x1b REG NA

DefList: {  }
N051 (  2, 10) [000022] H-----------              *  CNS_INT(h) long   0xd1ffab1e token REG NA $104
Interval 43: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #48  @52  RefTypeDef <Ivl:43> CNS_INT BB01 regmask=[allIntButFP] minReg=1>

DefList: { N051.t22. CNS_INT }
N053 (???,???) [000674] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #49  @53  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #50  @53  RefTypeUse <Ivl:43>  BB01 regmask=[rcx] minReg=1 last fixed>
Interval 44: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #51  @54  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #52  @54  RefTypeDef <Ivl:44> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>

DefList: { N053.t674. PUTARG_REG }
N055 ( 16, 16) [000023] --C---------              *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG NA $183
<RefPosition #53  @55  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #54  @55  RefTypeUse <Ivl:44>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #55  @56  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #56  @56  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #57  @56  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #58  @56  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #59  @56  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #60  @56  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #61  @56  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
Interval 45: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #62  @56  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #63  @56  RefTypeDef <Ivl:45> CALL BB01 regmask=[rax] minReg=1 fixed>

DefList: { N055.t23. CALL }
N057 ( 16, 16) [000025] DA----------              *  STORE_LCL_VAR ref    V13 tmp2         d:2 NA REG NA
<RefPosition #64  @57  RefTypeUse <Ivl:45>  BB01 regmask=[allIntButFP] minReg=1 last>
Assigning related <V13/L9> to <I45>
<RefPosition #65  @58  RefTypeDef <Ivl:9 V13> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N059 (  2, 10) [000266] H-----------              *  CNS_INT(h) long   0xd1ffab1e token REG NA $105
Interval 46: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #66  @60  RefTypeDef <Ivl:46> CNS_INT BB01 regmask=[allIntButFP] minReg=1>

DefList: { N059.t266. CNS_INT }
N061 (???,???) [000675] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #67  @61  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #68  @61  RefTypeUse <Ivl:46>  BB01 regmask=[rcx] minReg=1 last fixed>
Interval 47: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #69  @62  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #70  @62  RefTypeDef <Ivl:47> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>

DefList: { N061.t675. PUTARG_REG }
N063 ( 16, 16) [000267] --C---------              *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG NA $184
<RefPosition #71  @63  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #72  @63  RefTypeUse <Ivl:47>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #73  @64  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #74  @64  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #75  @64  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #76  @64  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #77  @64  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #78  @64  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #79  @64  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
Interval 48: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #80  @64  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #81  @64  RefTypeDef <Ivl:48> CALL BB01 regmask=[rax] minReg=1 fixed>

DefList: { N063.t267. CALL }
N065 ( 16, 16) [000269] DA----------              *  STORE_LCL_VAR ref    V30 tmp19        d:2 NA REG NA
<RefPosition #82  @65  RefTypeUse <Ivl:48>  BB01 regmask=[allIntButFP] minReg=1 last>
Assigning related <V30/L26> to <I48>
<RefPosition #83  @66  RefTypeDef <Ivl:26 V30> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N067 (  1,  1) [000280] ------------              *  LCL_VAR   ref    V30 tmp19        u:2 NA REG NA $184

DefList: {  }
N069 (  2,  2) [000448] -c----------              *  LEA(b+52) byref  REG NA
Contained
DefList: {  }
N071 (  1,  4) [000281] -c----------              *  CNS_INT   int    0x2000400 REG NA $43
Contained
DefList: {  }
N073 (???,???) [000622] -A--GO------              *  STOREIND  int    REG NA
<RefPosition #84  @73  RefTypeUse <Ivl:26 V30> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N075 (  1,  1) [000265] ------------              *  LCL_VAR   ref    V13 tmp2         u:2 NA REG NA $183

DefList: {  }
N077 (  2,  2) [000450] ------------              *  LEA(b+8)  byref  REG NA
<RefPosition #85  @77  RefTypeUse <Ivl:9 V13> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>
Interval 49: byref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #86  @78  RefTypeDef <Ivl:49> LEA BB01 regmask=[allIntButFP] minReg=1>

DefList: { N077.t450. LEA }
N079 (  1,  1) [000272] ------------              *  LCL_VAR   ref    V30 tmp19        u:2 NA (last use) REG NA $184

DefList: { N077.t450. LEA }
N081 (???,???) [000623] -A--GO------              *  STOREIND  ref    REG NA
<RefPosition #87  @81  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #88  @81  RefTypeUse <Ivl:49>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #89  @81  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #90  @81  RefTypeUse <Ivl:26 V30> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #91  @82  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #92  @82  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #93  @82  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #94  @82  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #95  @82  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #96  @82  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #97  @82  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
<RefPosition #98  @82  RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1>
<RefPosition #99  @82  RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1>
<RefPosition #100 @82  RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1>
<RefPosition #101 @82  RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1>
<RefPosition #102 @82  RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1>
<RefPosition #103 @82  RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1>

DefList: {  }
N083 (???,???) [000624] ------------              *  IL_OFFSET void   IL offset: 0x21 REG NA

DefList: {  }
N085 (  1,  1) [000021] ------------              *  LCL_VAR   ref    V02 loc0         u:2 NA REG NA $180

DefList: {  }
N087 (  2,  2) [000452] ------------              *  LEA(b+24) byref  REG NA
<RefPosition #104 @87  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>
Interval 50: byref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #105 @88  RefTypeDef <Ivl:50> LEA BB01 regmask=[allIntButFP] minReg=1>

DefList: { N087.t452. LEA }
N089 (  1,  1) [000028] ------------              *  LCL_VAR   ref    V13 tmp2         u:2 NA (last use) REG NA $183

DefList: { N087.t452. LEA }
N091 (???,???) [000625] -A--GO------              *  STOREIND  ref    REG NA
<RefPosition #106 @91  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #107 @91  RefTypeUse <Ivl:50>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #108 @91  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #109 @91  RefTypeUse <Ivl:9 V13> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #110 @92  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #111 @92  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #112 @92  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #113 @92  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #114 @92  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #115 @92  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #116 @92  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
<RefPosition #117 @92  RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1>
<RefPosition #118 @92  RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1>
<RefPosition #119 @92  RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1>
<RefPosition #120 @92  RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1>
<RefPosition #121 @92  RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1>
<RefPosition #122 @92  RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1>

DefList: {  }
N093 (???,???) [000626] ------------              *  IL_OFFSET void   IL offset: 0x26 REG NA

DefList: {  }
N095 (  2, 10) [000032] H-----------              *  CNS_INT(h) long   0xd1ffab1e token REG NA $109
Interval 51: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #123 @96  RefTypeDef <Ivl:51> CNS_INT BB01 regmask=[allIntButFP] minReg=1>

DefList: { N095.t32. CNS_INT }
N097 (???,???) [000676] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #124 @97  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #125 @97  RefTypeUse <Ivl:51>  BB01 regmask=[rcx] minReg=1 last fixed>
Interval 52: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #126 @98  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #127 @98  RefTypeDef <Ivl:52> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>

DefList: { N097.t676. PUTARG_REG }
N099 ( 16, 16) [000033] --C---------              *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG NA $189
<RefPosition #128 @99  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #129 @99  RefTypeUse <Ivl:52>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #130 @100 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #131 @100 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #132 @100 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #133 @100 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #134 @100 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #135 @100 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #136 @100 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
Interval 53: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #137 @100 RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #138 @100 RefTypeDef <Ivl:53> CALL BB01 regmask=[rax] minReg=1 fixed>

DefList: { N099.t33. CALL }
N101 ( 16, 16) [000035] DA----------              *  STORE_LCL_VAR ref    V14 tmp3         d:2 NA REG NA
<RefPosition #139 @101 RefTypeUse <Ivl:53>  BB01 regmask=[allIntButFP] minReg=1 last>
Assigning related <V14/L10> to <I53>
<RefPosition #140 @102 RefTypeDef <Ivl:10 V14> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N103 (  2, 10) [000297] ------------              *  CNS_INT   long   0x7ffc7e0b0028 REG NA $1c6
Interval 54: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #141 @104 RefTypeDef <Ivl:54> CNS_INT BB01 regmask=[allIntButFP] minReg=1>

DefList: { N103.t297. CNS_INT }
N105 (???,???) [000677] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #142 @105 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #143 @105 RefTypeUse <Ivl:54>  BB01 regmask=[rcx] minReg=1 last fixed>
Interval 55: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #144 @106 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #145 @106 RefTypeDef <Ivl:55> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>

DefList: { N105.t677. PUTARG_REG }
N107 (  1,  1) [000298] ------------              *  CNS_INT   int    14 REG NA $44
Interval 56: int RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #146 @108 RefTypeDef <Ivl:56> CNS_INT BB01 regmask=[allIntButFP] minReg=1>

DefList: { N105.t677. PUTARG_REG; N107.t298. CNS_INT }
N109 (???,???) [000678] ------------              *  PUTARG_REG int    REG rdx
<RefPosition #147 @109 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #148 @109 RefTypeUse <Ivl:56>  BB01 regmask=[rdx] minReg=1 last fixed>
Interval 57: int RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #149 @110 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #150 @110 RefTypeDef <Ivl:57> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>

DefList: { N105.t677. PUTARG_REG; N109.t678. PUTARG_REG }
N111 ( 17, 18) [000299] H-CXG-------              *  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS REG NA $381
<RefPosition #151 @111 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #152 @111 RefTypeUse <Ivl:55>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #153 @111 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #154 @111 RefTypeUse <Ivl:57>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #155 @112 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #156 @112 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #157 @112 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #158 @112 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #159 @112 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #160 @112 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #161 @112 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
Interval 58: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #162 @112 RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #163 @112 RefTypeDef <Ivl:58> CALL BB01 regmask=[rax] minReg=1 fixed>

DefList: {  }
N113 (  2, 10) [000458] I-----------              *  CNS_INT(h) long   0xd1ffab1e static Fseq[Value] REG NA $10a
Interval 59: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #164 @114 RefTypeDef <Ivl:59> CNS_INT BB01 regmask=[allIntButFP] minReg=1>

DefList: { N113.t458. CNS_INT }
N115 (  4, 12) [000295] n---G-------              *  IND       ref    REG NA <l:$246, c:$14b>
<RefPosition #165 @115 RefTypeUse <Ivl:59>  BB01 regmask=[allIntButFP] minReg=1 last>
Interval 60: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #166 @116 RefTypeDef <Ivl:60> IND BB01 regmask=[allIntButFP] minReg=1>

DefList: { N115.t295. IND }
N117 (  1,  1) [000287] ------------              *  LCL_VAR   ref    V14 tmp3         u:2 NA REG NA $189

DefList: { N115.t295. IND }
N119 (  2,  2) [000455] ------------              *  LEA(b+8)  byref  REG NA
<RefPosition #167 @119 RefTypeUse <Ivl:10 V14> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>
Interval 61: byref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #168 @120 RefTypeDef <Ivl:61> LEA BB01 regmask=[allIntButFP] minReg=1>

DefList: { N115.t295. IND; N119.t455. LEA }
N121 (???,???) [000627] -ACXGO------              *  STOREIND  ref    REG NA
<RefPosition #169 @121 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #170 @121 RefTypeUse <Ivl:61>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #171 @121 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #172 @121 RefTypeUse <Ivl:60>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #173 @122 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #174 @122 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #175 @122 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #176 @122 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #177 @122 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #178 @122 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #179 @122 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
<RefPosition #180 @122 RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1>
<RefPosition #181 @122 RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1>
<RefPosition #182 @122 RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1>
<RefPosition #183 @122 RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1>
<RefPosition #184 @122 RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1>
<RefPosition #185 @122 RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1>

DefList: {  }
N123 (???,???) [000628] ------------              *  IL_OFFSET void   IL offset: 0x2c REG NA

DefList: {  }
N125 (  1,  1) [000031] ------------              *  LCL_VAR   ref    V02 loc0         u:2 NA REG NA $180

DefList: {  }
N127 (  2,  2) [000460] ------------              *  LEA(b+8)  byref  REG NA
<RefPosition #186 @127 RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>
Interval 62: byref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #187 @128 RefTypeDef <Ivl:62> LEA BB01 regmask=[allIntButFP] minReg=1>

DefList: { N127.t460. LEA }
N129 (  1,  1) [000038] ------------              *  LCL_VAR   ref    V14 tmp3         u:2 NA (last use) REG NA $189

DefList: { N127.t460. LEA }
N131 (???,???) [000629] -A--GO------              *  STOREIND  ref    REG NA
<RefPosition #188 @131 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #189 @131 RefTypeUse <Ivl:62>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #190 @131 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #191 @131 RefTypeUse <Ivl:10 V14> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #192 @132 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #193 @132 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #194 @132 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #195 @132 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #196 @132 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #197 @132 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #198 @132 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
<RefPosition #199 @132 RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1>
<RefPosition #200 @132 RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1>
<RefPosition #201 @132 RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1>
<RefPosition #202 @132 RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1>
<RefPosition #203 @132 RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1>
<RefPosition #204 @132 RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1>

DefList: {  }
N133 (???,???) [000630] ------------              *  IL_OFFSET void   IL offset: 0x31 REG NA

DefList: {  }
N135 (  1,  1) [000041] ------------              *  LCL_VAR   ref    V02 loc0         u:2 NA REG NA $180

DefList: {  }
N137 (  2,  2) [000462] -c----------              *  LEA(b+16) byref  REG NA
Contained
DefList: {  }
N139 (  1,  1) [000042] ------------              *  CNS_INT   ref    null REG NA $VN.Null
Interval 63: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #205 @140 RefTypeDef <Ivl:63> CNS_INT BB01 regmask=[allIntButFP] minReg=1>

DefList: { N139.t42. CNS_INT }
N141 (???,???) [000631] -A--GO------              *  STOREIND  ref    REG NA
<RefPosition #206 @141 RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #207 @141 RefTypeUse <Ivl:63>  BB01 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N143 (???,???) [000632] ------------              *  IL_OFFSET void   IL offset: 0x38 REG NA

DefList: {  }
N145 (  2, 10) [000046] H-----------              *  CNS_INT(h) long   0xd1ffab1e token REG NA $10e
Interval 64: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #208 @146 RefTypeDef <Ivl:64> CNS_INT BB01 regmask=[allIntButFP] minReg=1>

DefList: { N145.t46. CNS_INT }
N147 (???,???) [000679] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #209 @147 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #210 @147 RefTypeUse <Ivl:64>  BB01 regmask=[rcx] minReg=1 last fixed>
Interval 65: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #211 @148 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #212 @148 RefTypeDef <Ivl:65> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>

DefList: { N147.t679. PUTARG_REG }
N149 ( 16, 16) [000047] --C---------              *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG NA $193
<RefPosition #213 @149 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #214 @149 RefTypeUse <Ivl:65>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #215 @150 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #216 @150 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #217 @150 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #218 @150 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #219 @150 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #220 @150 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #221 @150 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
Interval 66: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #222 @150 RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #223 @150 RefTypeDef <Ivl:66> CALL BB01 regmask=[rax] minReg=1 fixed>

DefList: { N149.t47. CALL }
N151 ( 16, 16) [000049] DA----------              *  STORE_LCL_VAR ref    V15 tmp4         d:2 NA REG NA
<RefPosition #224 @151 RefTypeUse <Ivl:66>  BB01 regmask=[allIntButFP] minReg=1 last>
Assigning related <V15/L11> to <I66>
<RefPosition #225 @152 RefTypeDef <Ivl:11 V15> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N153 (  1,  1) [000050] ------------              *  LCL_VAR   ref    V15 tmp4         u:2 NA REG NA $193

DefList: {  }
N155 (???,???) [000680] ------------              *  PUTARG_REG ref    REG rcx
<RefPosition #226 @155 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #227 @155 RefTypeUse <Ivl:11 V15> LCL_VAR BB01 regmask=[rcx] minReg=1 last fixed>
Setting putarg_reg as a pass-through of a non-last use lclVar
Interval 67: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #228 @156 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #229 @156 RefTypeDef <Ivl:67> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
Assigning related <V15/L11> to <I67>

DefList: { N155.t680. PUTARG_REG }
N157 (  1,  1) [000302] ------------              *  CNS_INT   ref    null REG NA $VN.Null
Interval 68: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #230 @158 RefTypeDef <Ivl:68> CNS_INT BB01 regmask=[allIntButFP] minReg=1>

DefList: { N155.t680. PUTARG_REG; N157.t302. CNS_INT }
N159 (???,???) [000681] ------------              *  PUTARG_REG ref    REG rdx
<RefPosition #231 @159 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #232 @159 RefTypeUse <Ivl:68>  BB01 regmask=[rdx] minReg=1 last fixed>
Interval 69: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #233 @160 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #234 @160 RefTypeDef <Ivl:69> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>

DefList: { N155.t680. PUTARG_REG; N159.t681. PUTARG_REG }
N161 ( 16, 10) [000303] --CXG-------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor REG NA $VN.Void
<RefPosition #235 @161 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #236 @161 RefTypeUse <Ivl:67>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #237 @161 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #238 @161 RefTypeUse <Ivl:69>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #239 @162 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #240 @162 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #241 @162 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #242 @162 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #243 @162 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #244 @162 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #245 @162 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>

DefList: {  }
N163 (???,???) [000633] ------------              *  IL_OFFSET void   IL offset: 0x3e REG NA

DefList: {  }
N165 (  1,  1) [000045] ------------              *  LCL_VAR   ref    V02 loc0         u:2 NA REG NA $180

DefList: {  }
N167 (  2,  2) [000467] ------------              *  LEA(b+40) byref  REG NA
<RefPosition #246 @167 RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>
Interval 70: byref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #247 @168 RefTypeDef <Ivl:70> LEA BB01 regmask=[allIntButFP] minReg=1>

DefList: { N167.t467. LEA }
N169 (  1,  1) [000052] ------------              *  LCL_VAR   ref    V15 tmp4         u:2 NA (last use) REG NA $193

DefList: { N167.t467. LEA }
N171 (???,???) [000634] -A--GO------              *  STOREIND  ref    REG NA
<RefPosition #248 @171 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #249 @171 RefTypeUse <Ivl:70>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #250 @171 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #251 @171 RefTypeUse <Ivl:11 V15> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #252 @172 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #253 @172 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #254 @172 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #255 @172 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #256 @172 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #257 @172 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #258 @172 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
<RefPosition #259 @172 RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1>
<RefPosition #260 @172 RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1>
<RefPosition #261 @172 RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1>
<RefPosition #262 @172 RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1>
<RefPosition #263 @172 RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1>
<RefPosition #264 @172 RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1>

DefList: {  }
N173 ( 14,  5) [000055] --CXG-------              *  CALL      ref    System.Diagnostics.Process.GetCurrentProcess REG NA $151
<RefPosition #265 @174 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #266 @174 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #267 @174 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #268 @174 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #269 @174 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #270 @174 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #271 @174 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
Interval 71: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #272 @174 RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #273 @174 RefTypeDef <Ivl:71> CALL BB01 regmask=[rax] minReg=1 fixed>

DefList: { N173.t55. CALL }
N175 ( 14,  5) [000316] DA-XG-------              *  STORE_LCL_VAR ref    V31 tmp20        d:2 NA REG NA
<RefPosition #274 @175 RefTypeUse <Ivl:71>  BB01 regmask=[allIntButFP] minReg=1 last>
Assigning related <V31/L27> to <I71>
<RefPosition #275 @176 RefTypeDef <Ivl:27 V31> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N177 (  1,  1) [000313] ------------              *  LCL_VAR   ref    V31 tmp20        u:2 NA REG NA $151

DefList: {  }
N179 (  2,  2) [000314] ---X--------              *  NULLCHECK int    REG NA $197
<RefPosition #276 @179 RefTypeUse <Ivl:27 V31> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N181 (  1,  1) [000306] ------------              *  LCL_VAR   ref    V31 tmp20        u:2 NA REG NA $151

DefList: {  }
N183 (???,???) [000682] ------------              *  PUTARG_REG ref    REG rcx
<RefPosition #277 @183 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #278 @183 RefTypeUse <Ivl:27 V31> LCL_VAR BB01 regmask=[rcx] minReg=1 last fixed>
Setting putarg_reg as a pass-through of a non-last use lclVar
Interval 72: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #279 @184 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #280 @184 RefTypeDef <Ivl:72> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
Assigning related <V31/L27> to <I72>

DefList: { N183.t682. PUTARG_REG }
N185 (  1,  1) [000307] ------------              *  CNS_INT   int    3 REG NA $46
Interval 73: int RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #281 @186 RefTypeDef <Ivl:73> CNS_INT BB01 regmask=[allIntButFP] minReg=1>

DefList: { N183.t682. PUTARG_REG; N185.t307. CNS_INT }
N187 (???,???) [000683] ------------              *  PUTARG_REG int    REG rdx
<RefPosition #282 @187 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #283 @187 RefTypeUse <Ivl:73>  BB01 regmask=[rdx] minReg=1 last fixed>
Interval 74: int RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #284 @188 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #285 @188 RefTypeDef <Ivl:74> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>

DefList: { N183.t682. PUTARG_REG; N187.t683. PUTARG_REG }
N189 ( 16, 10) [000308] --CXG-------              *  CALL      void   System.Diagnostics.Process.EnsureState REG NA $VN.Void
<RefPosition #286 @189 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #287 @189 RefTypeUse <Ivl:72>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #288 @189 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #289 @189 RefTypeUse <Ivl:74>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #290 @190 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #291 @190 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #292 @190 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #293 @190 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #294 @190 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #295 @190 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #296 @190 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>

DefList: {  }
N191 (  1,  1) [000309] ------------              *  LCL_VAR   ref    V31 tmp20        u:2 NA (last use) REG NA $151

DefList: {  }
N193 (  2,  5) [000471] -c----------              *  LEA(b+200) byref  REG NA
Contained
DefList: {  }
N195 (  4,  7) [000310] n---GO------              *  IND       int    REG NA <l:$289, c:$288>
<RefPosition #297 @195 RefTypeUse <Ivl:27 V31> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>
Interval 75: int RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #298 @196 RefTypeDef <Ivl:75> IND BB01 regmask=[allIntButFP] minReg=1>

DefList: { N195.t310. IND }
N197 (???,???) [000684] ----GO------              *  PUTARG_REG int    REG rcx
<RefPosition #299 @197 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #300 @197 RefTypeUse <Ivl:75>  BB01 regmask=[rcx] minReg=1 last fixed>
Interval 76: int RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #301 @198 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #302 @198 RefTypeDef <Ivl:76> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>

DefList: { N197.t684. PUTARG_REG }
N199 ( 18, 13) [000311] --CXGO------              *  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule REG NA $156
<RefPosition #303 @199 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #304 @199 RefTypeUse <Ivl:76>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #305 @200 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #306 @200 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #307 @200 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #308 @200 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #309 @200 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #310 @200 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #311 @200 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
Interval 77: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #312 @200 RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #313 @200 RefTypeDef <Ivl:77> CALL BB01 regmask=[rax] minReg=1 fixed>

DefList: { N199.t311. CALL }
N201 ( 18, 13) [000322] DA-XGO------              *  STORE_LCL_VAR ref    V32 tmp21        d:2 NA REG NA
<RefPosition #314 @201 RefTypeUse <Ivl:77>  BB01 regmask=[allIntButFP] minReg=1 last>
Assigning related <V32/L28> to <I77>
<RefPosition #315 @202 RefTypeDef <Ivl:28 V32> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N203 (  1,  1) [000319] ------------              *  LCL_VAR   ref    V32 tmp21        u:2 NA (last use) REG NA $156

DefList: {  }
N205 (  2,  2) [000474] -c----------              *  LEA(b+40) byref  REG NA
Contained
DefList: {  }
N207 (  4,  4) [000320] ---XG-------              *  IND       ref    REG NA <l:$19c, c:$19b>
<RefPosition #316 @207 RefTypeUse <Ivl:28 V32> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>
Interval 78: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #317 @208 RefTypeDef <Ivl:78> IND BB01 regmask=[allIntButFP] minReg=1>

DefList: { N207.t320. IND }
N209 (  4,  4) [000062] DA-XG-------              *  STORE_LCL_VAR ref    V03 loc1         d:2 NA REG NA
<RefPosition #318 @209 RefTypeUse <Ivl:78>  BB01 regmask=[allIntButFP] minReg=1 last>
Assigning related <V03/L3> to <I78>
<RefPosition #319 @210 RefTypeDef <Ivl:3 V03> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N211 (  1,  1) [000339] -c----------              *  CNS_INT   int    5 REG NA $47
Contained
DefList: {  }
N213 (???,???) [000685] ------------              *  PUTARG_STK [+0x20] void   REG NA

DefList: {  }
N215 (  1,  1) [000337] ------------              *  LCL_VAR   ref    V03 loc1         u:2 NA REG NA <l:$199, c:$159>

DefList: {  }
N217 (???,???) [000669] -c----------              *  LEA(b+8)  ref    REG NA
Contained
DefList: {  }
N219 (  3,  3) [000338] ---X--------              *  IND       int    REG NA <l:$28b, c:$28a>
<RefPosition #320 @219 RefTypeUse <Ivl:3 V03> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>
Interval 79: int RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #321 @220 RefTypeDef <Ivl:79> IND BB01 regmask=[allIntButFP] minReg=1>

DefList: { N219.t338. IND }
N221 (???,???) [000686] ---X--------              *  PUTARG_REG int    REG r9
<RefPosition #322 @221 RefTypeFixedReg <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #323 @221 RefTypeUse <Ivl:79>  BB01 regmask=[r9] minReg=1 last fixed>
Interval 80: int RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #324 @222 RefTypeFixedReg <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #325 @222 RefTypeDef <Ivl:80> PUTARG_REG BB01 regmask=[r9] minReg=1 fixed>

DefList: { N221.t686. PUTARG_REG }
N223 (  2, 10) [000475] H-----------              *  CNS_INT(h) long   0xD1FFAB1E "dotnet.exe" REG NA $112
Interval 81: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #326 @224 RefTypeDef <Ivl:81> CNS_INT BB01 regmask=[allIntButFP] minReg=1>

DefList: { N221.t686. PUTARG_REG; N223.t475. CNS_INT }
N225 (  4, 12) [000476] #---G-------              *  IND       ref    REG NA $19f
<RefPosition #327 @225 RefTypeUse <Ivl:81>  BB01 regmask=[allIntButFP] minReg=1 last>
Interval 82: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #328 @226 RefTypeDef <Ivl:82> IND BB01 regmask=[allIntButFP] minReg=1>

DefList: { N221.t686. PUTARG_REG; N225.t476. IND }
N227 (???,???) [000687] ----G-------              *  PUTARG_REG ref    REG rdx
<RefPosition #329 @227 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #330 @227 RefTypeUse <Ivl:82>  BB01 regmask=[rdx] minReg=1 last fixed>
Interval 83: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #331 @228 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #332 @228 RefTypeDef <Ivl:83> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>

DefList: { N221.t686. PUTARG_REG; N227.t687. PUTARG_REG }
N229 (  1,  1) [000063] ------------              *  LCL_VAR   ref    V03 loc1         u:2 NA REG NA <l:$199, c:$159>

DefList: { N221.t686. PUTARG_REG; N227.t687. PUTARG_REG }
N231 (???,???) [000688] ------------              *  PUTARG_REG ref    REG rcx
<RefPosition #333 @231 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #334 @231 RefTypeUse <Ivl:3 V03> LCL_VAR BB01 regmask=[rcx] minReg=1 last fixed>
Setting putarg_reg as a pass-through of a non-last use lclVar
Interval 84: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #335 @232 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #336 @232 RefTypeDef <Ivl:84> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
Assigning related <V03/L3> to <I84>

DefList: { N221.t686. PUTARG_REG; N227.t687. PUTARG_REG; N231.t688. PUTARG_REG }
N233 (  1,  1) [000336] ------------              *  CNS_INT   int    0 REG NA $40
Interval 85: int RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #337 @234 RefTypeDef <Ivl:85> CNS_INT BB01 regmask=[allIntButFP] minReg=1>

DefList: { N221.t686. PUTARG_REG; N227.t687. PUTARG_REG; N231.t688. PUTARG_REG; N233.t336. CNS_INT }
N235 (???,???) [000689] ------------              *  PUTARG_REG int    REG r8
<RefPosition #338 @235 RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #339 @235 RefTypeUse <Ivl:85>  BB01 regmask=[r8] minReg=1 last fixed>
Interval 86: int RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #340 @236 RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #341 @236 RefTypeDef <Ivl:86> PUTARG_REG BB01 regmask=[r8] minReg=1 fixed>

DefList: { N221.t686. PUTARG_REG; N227.t687. PUTARG_REG; N231.t688. PUTARG_REG; N235.t689. PUTARG_REG }
N237 ( 27, 28) [000340] --CXG-------              *  CALL      int    System.String.IndexOf REG NA $308
<RefPosition #342 @237 RefTypeFixedReg <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #343 @237 RefTypeUse <Ivl:80>  BB01 regmask=[r9] minReg=1 last fixed>
<RefPosition #344 @237 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #345 @237 RefTypeUse <Ivl:83>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #346 @237 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #347 @237 RefTypeUse <Ivl:84>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #348 @237 RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #349 @237 RefTypeUse <Ivl:86>  BB01 regmask=[r8] minReg=1 last fixed>
<RefPosition #350 @238 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #351 @238 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #352 @238 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #353 @238 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #354 @238 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #355 @238 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #356 @238 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
Interval 87: int RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #357 @238 RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #358 @238 RefTypeDef <Ivl:87> CALL BB01 regmask=[rax] minReg=1 fixed>

DefList: { N237.t340. CALL }
N239 (  1,  1) [000328] -c----------              *  CNS_INT   int    0 REG NA $40
Contained
DefList: { N237.t340. CALL }
N241 ( 32, 30) [000329] ---XG-------              *  GE        int    REG NA $28c
<RefPosition #359 @241 RefTypeUse <Ivl:87>  BB01 regmask=[allIntButFP] minReg=1 last>
Interval 88: int RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #360 @242 RefTypeDef <Ivl:88> GE BB01 regmask=[allIntButFP] minReg=1>

DefList: { N241.t329. GE }
N243 ( 32, 30) [000069] DA-XG-------              *  STORE_LCL_VAR int    V04 loc2         d:2 NA REG NA
<RefPosition #361 @243 RefTypeUse <Ivl:88>  BB01 regmask=[allIntButFP] minReg=1 last>
Assigning related <V04/L4> to <I88>
<RefPosition #362 @244 RefTypeDef <Ivl:4 V04> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N245 ( 14,  5) [000070] --CXG-------              *  CALL      ref    System.Environment.GetCommandLineArgs REG NA $15e
<RefPosition #363 @246 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #364 @246 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #365 @246 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #366 @246 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #367 @246 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #368 @246 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #369 @246 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
Interval 89: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #370 @246 RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #371 @246 RefTypeDef <Ivl:89> CALL BB01 regmask=[rax] minReg=1 fixed>

DefList: { N245.t70. CALL }
N247 ( 14,  5) [000482] DA-XG-------              *  STORE_LCL_VAR ref    V41 tmp30        d:2 NA REG NA
<RefPosition #372 @247 RefTypeUse <Ivl:89>  BB01 regmask=[allIntButFP] minReg=1 last>
Assigning related <V41/L35> to <I89>
<RefPosition #373 @248 RefTypeDef <Ivl:35 V41> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N249 (  1,  1) [000072] -c----------              *  CNS_INT   int    0 REG NA $40
Contained
DefList: {  }
N251 (  1,  1) [000483] ------------              *  LCL_VAR   ref    V41 tmp30        u:2 NA REG NA $15e

DefList: {  }
N253 (???,???) [000671] -c----------              *  LEA(b+8)  ref    REG NA
Contained
DefList: {  }
N255 (  3,  3) [000486] -c-X--------              *  IND       int    REG NA $28d
Contained
DefList: {  }
N257 (  8, 11) [000487] ---X--------              *  ARR_BOUNDS_CHECK_Rng void   REG NA $1a5
<RefPosition #374 @257 RefTypeUse <Ivl:35 V41> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N259 (  1,  1) [000484] ------------              *  LCL_VAR   ref    V41 tmp30        u:2 NA (last use) REG NA $15e

DefList: {  }
N261 (  2,  2) [000492] -c----------              *  LEA(b+16) byref  REG NA
Contained
DefList: {  }
N263 (  4,  4) [000073] a---G-------              *  IND       ref    REG NA <l:$1a8, c:$161>
<RefPosition #375 @263 RefTypeUse <Ivl:35 V41> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>
Interval 90: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #376 @264 RefTypeDef <Ivl:90> IND BB01 regmask=[allIntButFP] minReg=1>

DefList: { N263.t73. IND }
N265 ( 26, 20) [000075] DA-XG-------              *  STORE_LCL_VAR ref    V05 loc3         d:2 NA REG NA
<RefPosition #377 @265 RefTypeUse <Ivl:90>  BB01 regmask=[allIntButFP] minReg=1 last>
Assigning related <V05/L5> to <I90>
<RefPosition #378 @266 RefTypeDef <Ivl:5 V05> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N267 (???,???) [000635] ------------              *  IL_OFFSET void   IL offset: 0x68 REG NA

DefList: {  }
N269 (  1,  1) [000076] ------------              *  LCL_VAR   ref    V00 arg0         u:1 NA (last use) REG NA $80

DefList: {  }
N271 (???,???) [000690] ------------              *  PUTARG_REG ref    REG rcx
<RefPosition #379 @271 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #380 @271 RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rcx] minReg=1 last fixed>
Interval 91: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #381 @272 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #382 @272 RefTypeDef <Ivl:91> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>

DefList: { N271.t690. PUTARG_REG }
N273 (  2, 10) [000495] H-----------              *  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $114
Interval 92: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #383 @274 RefTypeFixedReg <Reg:r11>  BB01 regmask=[r11] minReg=1>
<RefPosition #384 @274 RefTypeDef <Ivl:92> CNS_INT BB01 regmask=[r11] minReg=1 fixed>

DefList: { N271.t690. PUTARG_REG; N273.t495. CNS_INT }
N275 (???,???) [000691] ------------              *  PUTARG_REG long   REG r11
<RefPosition #385 @275 RefTypeFixedReg <Reg:r11>  BB01 regmask=[r11] minReg=1>
<RefPosition #386 @275 RefTypeUse <Ivl:92>  BB01 regmask=[r11] minReg=1 last fixed>
Interval 93: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #387 @276 RefTypeFixedReg <Reg:r11>  BB01 regmask=[r11] minReg=1>
<RefPosition #388 @276 RefTypeDef <Ivl:93> PUTARG_REG BB01 regmask=[r11] minReg=1 fixed>

DefList: { N271.t690. PUTARG_REG; N275.t691. PUTARG_REG }
N277 (  2, 10) [000692] Hc----------              *  CNS_INT(h) long   0xd1ffab1e ftn REG NA
Contained
DefList: { N271.t690. PUTARG_REG; N275.t691. PUTARG_REG }
N279 (  4, 12) [000693] -c----------              *  IND       long   REG NA
Contained
DefList: { N271.t690. PUTARG_REG; N275.t691. PUTARG_REG }
N281 ( 23, 21) [000077] --CXG-------              *  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator REG NA $164
<RefPosition #389 @281 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #390 @281 RefTypeUse <Ivl:91>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #391 @281 RefTypeFixedReg <Reg:r11>  BB01 regmask=[r11] minReg=1>
<RefPosition #392 @281 RefTypeUse <Ivl:93>  BB01 regmask=[r11] minReg=1 last fixed>
<RefPosition #393 @282 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #394 @282 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #395 @282 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #396 @282 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #397 @282 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #398 @282 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #399 @282 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
Interval 94: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #400 @282 RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #401 @282 RefTypeDef <Ivl:94> CALL BB01 regmask=[rax] minReg=1 fixed>

DefList: { N281.t77. CALL }
N283 ( 23, 21) [000079] DA-XG-------              *  STORE_LCL_VAR ref    V06 loc4         d:2 NA REG NA
<RefPosition #402 @283 RefTypeUse <Ivl:94>  BB01 regmask=[allIntButFP] minReg=1 last>



CHECKING LAST USES for BB01, liveout={V02 V03 V04 V05 V06}
==============================
use: {V00 V01}
def: {V02 V03 V04 V05 V06 V12 V13 V14 V15 V30 V31 V32 V41}

NEW BLOCK BB02


Setting BB01 as the predecessor for determining incoming variable registers of BB02
<RefPosition #403 @285 RefTypeBB  BB02 regmask=[] minReg=1>

DefList: {  }
N287 (???,???) [000636] ------------              *  IL_OFFSET void   IL offset: 0xe9 REG NA

DefList: {  }
N289 (  1,  1) [000575] ------------              *  LCL_VAR   ref    V06 loc4         u:2 NA REG NA $164
Interval 95: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #404 @290 RefTypeDef <Ivl:95> LCL_VAR BB02 regmask=[allIntButFP] minReg=1>

DefList: { N289.t575. LCL_VAR }
N291 (???,???) [000694] ------------              *  PUTARG_REG ref    REG rcx
<RefPosition #405 @291 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #406 @291 RefTypeUse <Ivl:95>  BB02 regmask=[rcx] minReg=1 last fixed>
Interval 96: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #407 @292 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #408 @292 RefTypeDef <Ivl:96> PUTARG_REG BB02 regmask=[rcx] minReg=1 fixed>

DefList: { N291.t694. PUTARG_REG }
N293 (  2, 10) [000576] H-----------              *  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
Interval 97: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #409 @294 RefTypeFixedReg <Reg:r11>  BB02 regmask=[r11] minReg=1>
<RefPosition #410 @294 RefTypeDef <Ivl:97> CNS_INT BB02 regmask=[r11] minReg=1 fixed>

DefList: { N291.t694. PUTARG_REG; N293.t576. CNS_INT }
N295 (???,???) [000695] ------------              *  PUTARG_REG long   REG r11
<RefPosition #411 @295 RefTypeFixedReg <Reg:r11>  BB02 regmask=[r11] minReg=1>
<RefPosition #412 @295 RefTypeUse <Ivl:97>  BB02 regmask=[r11] minReg=1 last fixed>
Interval 98: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #413 @296 RefTypeFixedReg <Reg:r11>  BB02 regmask=[r11] minReg=1>
<RefPosition #414 @296 RefTypeDef <Ivl:98> PUTARG_REG BB02 regmask=[r11] minReg=1 fixed>

DefList: { N291.t694. PUTARG_REG; N295.t695. PUTARG_REG }
N297 (  2, 10) [000696] Hc----------              *  CNS_INT(h) long   0xd1ffab1e ftn REG NA
Contained
DefList: { N291.t694. PUTARG_REG; N295.t695. PUTARG_REG }
N299 (  4, 12) [000697] -c----------              *  IND       long   REG NA
Contained
DefList: { N291.t694. PUTARG_REG; N295.t695. PUTARG_REG }
N301 ( 23, 21) [000572] --CXG-------              *  CALLV stub int    System.Collections.IEnumerator.MoveNext REG NA $30a
<RefPosition #415 @301 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #416 @301 RefTypeUse <Ivl:96>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #417 @301 RefTypeFixedReg <Reg:r11>  BB02 regmask=[r11] minReg=1>
<RefPosition #418 @301 RefTypeUse <Ivl:98>  BB02 regmask=[r11] minReg=1 last fixed>
<RefPosition #419 @302 RefTypeKill <Reg:rax>  BB02 regmask=[rax] minReg=1>
<RefPosition #420 @302 RefTypeKill <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #421 @302 RefTypeKill <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #422 @302 RefTypeKill <Reg:r8 >  BB02 regmask=[r8] minReg=1>
<RefPosition #423 @302 RefTypeKill <Reg:r9 >  BB02 regmask=[r9] minReg=1>
<RefPosition #424 @302 RefTypeKill <Reg:r10>  BB02 regmask=[r10] minReg=1>
<RefPosition #425 @302 RefTypeKill <Reg:r11>  BB02 regmask=[r11] minReg=1>
Interval 99: int RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #426 @302 RefTypeFixedReg <Reg:rax>  BB02 regmask=[rax] minReg=1>
<RefPosition #427 @302 RefTypeDef <Ivl:99> CALL BB02 regmask=[rax] minReg=1 fixed>

DefList: { N301.t572. CALL }
N303 (  1,  1) [000577] -c----------              *  CNS_INT   int    0 REG NA $40
Contained
DefList: { N301.t572. CALL }
N305 ( 25, 23) [000571] J--XG--N----              *  EQ        void   REG NA $28e
<RefPosition #428 @305 RefTypeUse <Ivl:99>  BB02 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N307 ( 27, 25) [000578] ---XG-------              *  JTRUE     void   REG NA



CHECKING LAST USES for BB02, liveout={V02 V03 V04 V05 V06}
==============================
use: {V06}
def: {}

NEW BLOCK BB03


Setting BB02 as the predecessor for determining incoming variable registers of BB03
<RefPosition #429 @309 RefTypeBB  BB03 regmask=[] minReg=1>

DefList: {  }
N311 (???,???) [000637] ------------              *  IL_OFFSET void   IL offset: 0x72 REG NA

DefList: {  }
N313 (  1,  1) [000085] ------------              *  LCL_VAR   ref    V06 loc4         u:2 NA REG NA $164
Interval 100: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #430 @314 RefTypeDef <Ivl:100> LCL_VAR BB03 regmask=[allIntButFP] minReg=1>

DefList: { N313.t85. LCL_VAR }
N315 (???,???) [000698] ------------              *  PUTARG_REG ref    REG rcx
<RefPosition #431 @315 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #432 @315 RefTypeUse <Ivl:100>  BB03 regmask=[rcx] minReg=1 last fixed>
Interval 101: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #433 @316 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #434 @316 RefTypeDef <Ivl:101> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>

DefList: { N315.t698. PUTARG_REG }
N317 (  2, 10) [000498] H-----------              *  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $116
Interval 102: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #435 @318 RefTypeFixedReg <Reg:r11>  BB03 regmask=[r11] minReg=1>
<RefPosition #436 @318 RefTypeDef <Ivl:102> CNS_INT BB03 regmask=[r11] minReg=1 fixed>

DefList: { N315.t698. PUTARG_REG; N317.t498. CNS_INT }
N319 (???,???) [000699] ------------              *  PUTARG_REG long   REG r11
<RefPosition #437 @319 RefTypeFixedReg <Reg:r11>  BB03 regmask=[r11] minReg=1>
<RefPosition #438 @319 RefTypeUse <Ivl:102>  BB03 regmask=[r11] minReg=1 last fixed>
Interval 103: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #439 @320 RefTypeFixedReg <Reg:r11>  BB03 regmask=[r11] minReg=1>
<RefPosition #440 @320 RefTypeDef <Ivl:103> PUTARG_REG BB03 regmask=[r11] minReg=1 fixed>

DefList: { N315.t698. PUTARG_REG; N319.t699. PUTARG_REG }
N321 (  2, 10) [000700] Hc----------              *  CNS_INT(h) long   0xd1ffab1e ftn REG NA
Contained
DefList: { N315.t698. PUTARG_REG; N319.t699. PUTARG_REG }
N323 (  4, 12) [000701] -c----------              *  IND       long   REG NA
Contained
DefList: { N315.t698. PUTARG_REG; N319.t699. PUTARG_REG }
N325 ( 23, 21) [000086] --CXG-------              *  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current REG NA $442
<RefPosition #441 @325 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #442 @325 RefTypeUse <Ivl:101>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #443 @325 RefTypeFixedReg <Reg:r11>  BB03 regmask=[r11] minReg=1>
<RefPosition #444 @325 RefTypeUse <Ivl:103>  BB03 regmask=[r11] minReg=1 last fixed>
<RefPosition #445 @326 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #446 @326 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #447 @326 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #448 @326 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #449 @326 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1>
<RefPosition #450 @326 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1>
<RefPosition #451 @326 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1>
Interval 104: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #452 @326 RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #453 @326 RefTypeDef <Ivl:104> CALL BB03 regmask=[rax] minReg=1 fixed>

DefList: { N325.t86. CALL }
N327 ( 23, 21) [000088] DA-XG-------              *  STORE_LCL_VAR ref    V07 loc5         d:2 NA REG NA
<RefPosition #454 @327 RefTypeUse <Ivl:104>  BB03 regmask=[allIntButFP] minReg=1 last>
Assigning related <V07/L6> to <I104>
<RefPosition #455 @328 RefTypeDef <Ivl:6 V07> STORE_LCL_VAR BB03 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N329 (???,???) [000638] ------------              *  IL_OFFSET void   IL offset: 0x7b REG NA

DefList: {  }
N331 (  2, 10) [000089] H-----------              *  CNS_INT(h) long   0xd1ffab1e token REG NA $117
Interval 105: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #456 @332 RefTypeDef <Ivl:105> CNS_INT BB03 regmask=[allIntButFP] minReg=1>

DefList: { N331.t89. CNS_INT }
N333 (???,???) [000702] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #457 @333 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #458 @333 RefTypeUse <Ivl:105>  BB03 regmask=[rcx] minReg=1 last fixed>
Interval 106: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #459 @334 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #460 @334 RefTypeDef <Ivl:106> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>

DefList: { N333.t702. PUTARG_REG }
N335 ( 16, 16) [000090] --C---------              *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG NA $1ab
<RefPosition #461 @335 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #462 @335 RefTypeUse <Ivl:106>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #463 @336 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #464 @336 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #465 @336 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #466 @336 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #467 @336 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1>
<RefPosition #468 @336 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1>
<RefPosition #469 @336 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1>
Interval 107: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #470 @336 RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #471 @336 RefTypeDef <Ivl:107> CALL BB03 regmask=[rax] minReg=1 fixed>

DefList: { N335.t90. CALL }
N337 ( 16, 16) [000092] DA----------              *  STORE_LCL_VAR ref    V16 tmp5         d:2 NA REG NA
<RefPosition #472 @337 RefTypeUse <Ivl:107>  BB03 regmask=[allIntButFP] minReg=1 last>
Assigning related <V16/L12> to <I107>
<RefPosition #473 @338 RefTypeDef <Ivl:12 V16> STORE_LCL_VAR BB03 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N339 (???,???) [000639] ------------              *  IL_OFFSET void   IL offset: 0x80 REG NA

DefList: {  }
N341 (  1,  1) [000096] ------------              *  LCL_VAR   ref    V16 tmp5         u:2 NA REG NA $1ab

DefList: {  }
N343 (  2,  2) [000503] ------------              *  LEA(b+8)  byref  REG NA
<RefPosition #474 @343 RefTypeUse <Ivl:12 V16> LCL_VAR BB03 regmask=[allIntButFP] minReg=1 last>
Interval 108: byref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #475 @344 RefTypeDef <Ivl:108> LEA BB03 regmask=[allIntButFP] minReg=1>

DefList: { N343.t503. LEA }
N345 (  1,  1) [000097] ------------              *  LCL_VAR   ref    V03 loc1         u:2 NA REG NA <l:$199, c:$159>

DefList: { N343.t503. LEA }
N347 (???,???) [000640] -A--GO------              *  STOREIND  ref    REG NA
<RefPosition #476 @347 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #477 @347 RefTypeUse <Ivl:108>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #478 @347 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #479 @347 RefTypeUse <Ivl:3 V03> LCL_VAR BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #480 @348 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #481 @348 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #482 @348 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #483 @348 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #484 @348 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1>
<RefPosition #485 @348 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1>
<RefPosition #486 @348 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1>
<RefPosition #487 @348 RefTypeKill <Reg:mm0>  BB03 regmask=[mm0] minReg=1>
<RefPosition #488 @348 RefTypeKill <Reg:mm1>  BB03 regmask=[mm1] minReg=1>
<RefPosition #489 @348 RefTypeKill <Reg:mm2>  BB03 regmask=[mm2] minReg=1>
<RefPosition #490 @348 RefTypeKill <Reg:mm3>  BB03 regmask=[mm3] minReg=1>
<RefPosition #491 @348 RefTypeKill <Reg:mm4>  BB03 regmask=[mm4] minReg=1>
<RefPosition #492 @348 RefTypeKill <Reg:mm5>  BB03 regmask=[mm5] minReg=1>

DefList: {  }
N349 (  1,  1) [000095] ------------              *  LCL_VAR   ref    V16 tmp5         u:2 NA (last use) REG NA $1ab

DefList: {  }
N351 (  1,  3) [000105] DA----------              *  STORE_LCL_VAR ref    V17 tmp6         d:2 NA REG NA
<RefPosition #493 @351 RefTypeUse <Ivl:12 V16> LCL_VAR BB03 regmask=[allIntButFP] minReg=1 last>
Assigning related <V17/L13> to <V16/L12>
<RefPosition #494 @352 RefTypeDef <Ivl:13 V17> STORE_LCL_VAR BB03 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N353 (  1,  1) [000099] ------------              *  LCL_VAR   ref    V17 tmp6         u:2 NA (last use) REG NA $1ab

DefList: {  }
N355 (  1,  3) [000108] DA----------              *  STORE_LCL_VAR ref    V18 tmp7         d:2 NA REG NA
<RefPosition #495 @355 RefTypeUse <Ivl:13 V17> LCL_VAR BB03 regmask=[allIntButFP] minReg=1 last>
Assigning related <V18/L14> to <V17/L13>
<RefPosition #496 @356 RefTypeDef <Ivl:14 V18> STORE_LCL_VAR BB03 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N357 (???,???) [000641] ------------              *  IL_OFFSET void   IL offset: 0x87 REG NA

DefList: {  }
N359 (  1,  1) [000100] ------------              *  LCL_VAR   int    V04 loc2         u:2 NA REG NA $28c

DefList: {  }
N361 (  1,  1) [000101] -c----------              *  CNS_INT   int    0 REG NA $40
Contained
DefList: {  }
N363 (  3,  3) [000102] J------N----              *  NE        void   REG NA $28f
<RefPosition #497 @363 RefTypeUse <Ivl:4 V04> LCL_VAR BB03 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N365 (  5,  5) [000103] ------------              *  JTRUE     void   REG NA



CHECKING LAST USES for BB03, liveout={V02 V03 V04 V05 V06 V07 V18}
==============================
use: {V03 V04 V06}
def: {V07 V16 V17 V18}

NEW BLOCK BB04


Setting BB03 as the predecessor for determining incoming variable registers of BB04
<RefPosition #498 @367 RefTypeBB  BB04 regmask=[] minReg=1>

DefList: {  }
N369 (  1,  1) [000110] ------------              *  LCL_VAR   ref    V18 tmp7         u:2 NA (last use) REG NA $1ab

DefList: {  }
N371 (  1,  3) [000203] DA----------              *  STORE_LCL_VAR ref    V19 tmp8         d:4 NA REG NA
<RefPosition #499 @371 RefTypeUse <Ivl:14 V18> LCL_VAR BB04 regmask=[allIntButFP] minReg=1 last>
Assigning related <V19/L15> to <V18/L14>
<RefPosition #500 @372 RefTypeDef <Ivl:15 V19> STORE_LCL_VAR BB04 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N373 (  1,  1) [000111] ------------              *  LCL_VAR   ref    V19 tmp8         u:4 NA REG NA $1ab

DefList: {  }
N375 (  1,  3) [000206] DA----------              *  STORE_LCL_VAR ref    V20 tmp9         d:4 NA REG NA
<RefPosition #501 @375 RefTypeUse <Ivl:15 V19> LCL_VAR BB04 regmask=[allIntButFP] minReg=1 last>
<RefPosition #502 @376 RefTypeDef <Ivl:16 V20> STORE_LCL_VAR BB04 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N377 (  1,  1) [000201] ------------              *  LCL_VAR   ref    V07 loc5         u:2 NA (last use) REG NA $442

DefList: {  }
N379 (  1,  3) [000209] DA----------              *  STORE_LCL_VAR ref    V21 tmp10        d:4 NA REG NA
<RefPosition #503 @379 RefTypeUse <Ivl:6 V07> LCL_VAR BB04 regmask=[allIntButFP] minReg=1 last>
Assigning related <V21/L17> to <V07/L6>
<RefPosition #504 @380 RefTypeDef <Ivl:17 V21> STORE_LCL_VAR BB04 regmask=[allIntButFP] minReg=1 last>



CHECKING LAST USES for BB04, liveout={V02 V03 V04 V05 V06 V19 V20 V21}
==============================
use: {V07 V18}
def: {V19 V20 V21}

NEW BLOCK BB05


Setting BB03 as the predecessor for determining incoming variable registers of BB05
<RefPosition #505 @381 RefTypeBB  BB05 regmask=[] minReg=1>

DefList: {  }
N383 (  1,  1) [000112] ------------              *  LCL_VAR   ref    V18 tmp7         u:2 NA (last use) REG NA $1ab

DefList: {  }
N385 (  1,  3) [000119] DA----------              *  STORE_LCL_VAR ref    V19 tmp8         d:3 NA REG NA
<RefPosition #506 @385 RefTypeUse <Ivl:14 V18> LCL_VAR BB05 regmask=[allIntButFP] minReg=1 last>
<RefPosition #507 @386 RefTypeDef <Ivl:15 V19> STORE_LCL_VAR BB05 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N387 (  1,  1) [000113] ------------              *  LCL_VAR   ref    V19 tmp8         u:3 NA REG NA $1ab

DefList: {  }
N389 (  1,  3) [000122] DA----------              *  STORE_LCL_VAR ref    V20 tmp9         d:3 NA REG NA
<RefPosition #508 @389 RefTypeUse <Ivl:15 V19> LCL_VAR BB05 regmask=[allIntButFP] minReg=1 last>
<RefPosition #509 @390 RefTypeDef <Ivl:16 V20> STORE_LCL_VAR BB05 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N391 (  2, 10) [000504] H-----------              *  CNS_INT(h) long   0xD1FFAB1E " " REG NA $119
Interval 109: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #510 @392 RefTypeDef <Ivl:109> CNS_INT BB05 regmask=[allIntButFP] minReg=1>

DefList: { N391.t504. CNS_INT }
N393 (  4, 12) [000505] #---G-------              *  IND       ref    REG NA $1ae
<RefPosition #511 @393 RefTypeUse <Ivl:109>  BB05 regmask=[allIntButFP] minReg=1 last>
Interval 110: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #512 @394 RefTypeDef <Ivl:110> IND BB05 regmask=[allIntButFP] minReg=1>

DefList: { N393.t505. IND }
N395 (???,???) [000703] ----G-------              *  PUTARG_REG ref    REG rdx
<RefPosition #513 @395 RefTypeFixedReg <Reg:rdx>  BB05 regmask=[rdx] minReg=1>
<RefPosition #514 @395 RefTypeUse <Ivl:110>  BB05 regmask=[rdx] minReg=1 last fixed>
Interval 111: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #515 @396 RefTypeFixedReg <Reg:rdx>  BB05 regmask=[rdx] minReg=1>
<RefPosition #516 @396 RefTypeDef <Ivl:111> PUTARG_REG BB05 regmask=[rdx] minReg=1 fixed>

DefList: { N395.t703. PUTARG_REG }
N397 (  1,  1) [000114] ------------              *  LCL_VAR   ref    V05 loc3         u:2 NA REG NA <l:$1a8, c:$161>

DefList: { N395.t703. PUTARG_REG }
N399 (???,???) [000704] ------------              *  PUTARG_REG ref    REG rcx
<RefPosition #517 @399 RefTypeFixedReg <Reg:rcx>  BB05 regmask=[rcx] minReg=1>
<RefPosition #518 @399 RefTypeUse <Ivl:5 V05> LCL_VAR BB05 regmask=[rcx] minReg=1 last fixed>
Setting putarg_reg as a pass-through of a non-last use lclVar
Interval 112: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #519 @400 RefTypeFixedReg <Reg:rcx>  BB05 regmask=[rcx] minReg=1>
<RefPosition #520 @400 RefTypeDef <Ivl:112> PUTARG_REG BB05 regmask=[rcx] minReg=1 fixed>
Assigning related <V05/L5> to <I112>

DefList: { N395.t703. PUTARG_REG; N399.t704. PUTARG_REG }
N401 (  1,  1) [000116] ------------              *  LCL_VAR   ref    V07 loc5         u:2 NA (last use) REG NA $442

DefList: { N395.t703. PUTARG_REG; N399.t704. PUTARG_REG }
N403 (???,???) [000705] ------------              *  PUTARG_REG ref    REG r8
<RefPosition #521 @403 RefTypeFixedReg <Reg:r8 >  BB05 regmask=[r8] minReg=1>
<RefPosition #522 @403 RefTypeUse <Ivl:6 V07> LCL_VAR BB05 regmask=[r8] minReg=1 last fixed>
Interval 113: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #523 @404 RefTypeFixedReg <Reg:r8 >  BB05 regmask=[r8] minReg=1>
<RefPosition #524 @404 RefTypeDef <Ivl:113> PUTARG_REG BB05 regmask=[r8] minReg=1 fixed>

DefList: { N395.t703. PUTARG_REG; N399.t704. PUTARG_REG; N403.t705. PUTARG_REG }
N405 ( 20, 22) [000117] --CXG-------              *  CALL      ref    System.String.Concat REG NA $44e
<RefPosition #525 @405 RefTypeFixedReg <Reg:rdx>  BB05 regmask=[rdx] minReg=1>
<RefPosition #526 @405 RefTypeUse <Ivl:111>  BB05 regmask=[rdx] minReg=1 last fixed>
<RefPosition #527 @405 RefTypeFixedReg <Reg:rcx>  BB05 regmask=[rcx] minReg=1>
<RefPosition #528 @405 RefTypeUse <Ivl:112>  BB05 regmask=[rcx] minReg=1 last fixed>
<RefPosition #529 @405 RefTypeFixedReg <Reg:r8 >  BB05 regmask=[r8] minReg=1>
<RefPosition #530 @405 RefTypeUse <Ivl:113>  BB05 regmask=[r8] minReg=1 last fixed>
<RefPosition #531 @406 RefTypeKill <Reg:rax>  BB05 regmask=[rax] minReg=1>
<RefPosition #532 @406 RefTypeKill <Reg:rcx>  BB05 regmask=[rcx] minReg=1>
<RefPosition #533 @406 RefTypeKill <Reg:rdx>  BB05 regmask=[rdx] minReg=1>
<RefPosition #534 @406 RefTypeKill <Reg:r8 >  BB05 regmask=[r8] minReg=1>
<RefPosition #535 @406 RefTypeKill <Reg:r9 >  BB05 regmask=[r9] minReg=1>
<RefPosition #536 @406 RefTypeKill <Reg:r10>  BB05 regmask=[r10] minReg=1>
<RefPosition #537 @406 RefTypeKill <Reg:r11>  BB05 regmask=[r11] minReg=1>
Interval 114: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #538 @406 RefTypeFixedReg <Reg:rax>  BB05 regmask=[rax] minReg=1>
<RefPosition #539 @406 RefTypeDef <Ivl:114> CALL BB05 regmask=[rax] minReg=1 fixed>

DefList: { N405.t117. CALL }
N407 ( 20, 22) [000125] DA-XG-------              *  STORE_LCL_VAR ref    V21 tmp10        d:3 NA REG NA
<RefPosition #540 @407 RefTypeUse <Ivl:114>  BB05 regmask=[allIntButFP] minReg=1 last>
Assigning related <V21/L17> to <I114>
<RefPosition #541 @408 RefTypeDef <Ivl:17 V21> STORE_LCL_VAR BB05 regmask=[allIntButFP] minReg=1 last>



CHECKING LAST USES for BB05, liveout={V02 V03 V04 V05 V06 V19 V20 V21}
==============================
use: {V05 V07 V18}
def: {V19 V20 V21}

NEW BLOCK BB06


Setting BB04 as the predecessor for determining incoming variable registers of BB06
<RefPosition #542 @409 RefTypeBB  BB06 regmask=[] minReg=1>

DefList: {  }
N411 (  1,  1) [000128] ------------              *  LCL_VAR   ref    V20 tmp9         u:2 NA (last use) REG NA $1ab

DefList: {  }
N413 (  2,  2) [000510] ------------              *  LEA(b+16) byref  REG NA
<RefPosition #543 @413 RefTypeUse <Ivl:16 V20> LCL_VAR BB06 regmask=[allIntButFP] minReg=1 last>
Interval 115: byref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #544 @414 RefTypeDef <Ivl:115> LEA BB06 regmask=[allIntButFP] minReg=1>

DefList: { N413.t510. LEA }
N415 (  1,  1) [000129] ------------              *  LCL_VAR   ref    V21 tmp10        u:2 NA (last use) REG NA $251

DefList: { N413.t510. LEA }
N417 (???,???) [000642] -A--GO------              *  STOREIND  ref    REG NA
<RefPosition #545 @417 RefTypeFixedReg <Reg:rcx>  BB06 regmask=[rcx] minReg=1>
<RefPosition #546 @417 RefTypeUse <Ivl:115>  BB06 regmask=[rcx] minReg=1 last fixed>
<RefPosition #547 @417 RefTypeFixedReg <Reg:rdx>  BB06 regmask=[rdx] minReg=1>
<RefPosition #548 @417 RefTypeUse <Ivl:17 V21> LCL_VAR BB06 regmask=[rdx] minReg=1 last fixed>
<RefPosition #549 @418 RefTypeKill <Reg:rax>  BB06 regmask=[rax] minReg=1>
<RefPosition #550 @418 RefTypeKill <Reg:rcx>  BB06 regmask=[rcx] minReg=1>
<RefPosition #551 @418 RefTypeKill <Reg:rdx>  BB06 regmask=[rdx] minReg=1>
<RefPosition #552 @418 RefTypeKill <Reg:r8 >  BB06 regmask=[r8] minReg=1>
<RefPosition #553 @418 RefTypeKill <Reg:r9 >  BB06 regmask=[r9] minReg=1>
<RefPosition #554 @418 RefTypeKill <Reg:r10>  BB06 regmask=[r10] minReg=1>
<RefPosition #555 @418 RefTypeKill <Reg:r11>  BB06 regmask=[r11] minReg=1>
<RefPosition #556 @418 RefTypeKill <Reg:mm0>  BB06 regmask=[mm0] minReg=1>
<RefPosition #557 @418 RefTypeKill <Reg:mm1>  BB06 regmask=[mm1] minReg=1>
<RefPosition #558 @418 RefTypeKill <Reg:mm2>  BB06 regmask=[mm2] minReg=1>
<RefPosition #559 @418 RefTypeKill <Reg:mm3>  BB06 regmask=[mm3] minReg=1>
<RefPosition #560 @418 RefTypeKill <Reg:mm4>  BB06 regmask=[mm4] minReg=1>
<RefPosition #561 @418 RefTypeKill <Reg:mm5>  BB06 regmask=[mm5] minReg=1>

DefList: {  }
N419 (???,???) [000643] ------------              *  IL_OFFSET void   IL offset: 0xa1 REG NA

DefList: {  }
N421 (  1,  1) [000131] ------------              *  LCL_VAR   ref    V19 tmp8         u:2 NA REG NA $1ab

DefList: {  }
N423 (  2,  5) [000512] -c----------              *  LEA(b+130) byref  REG NA
Contained
DefList: {  }
N425 (  1,  1) [000353] -c----------              *  CNS_INT   int    0 REG NA $40
Contained
DefList: {  }
N427 (???,???) [000644] -A--GO------              *  STOREIND  bool   REG NA
<RefPosition #562 @427 RefTypeUse <Ivl:15 V19> LCL_VAR BB06 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N429 (???,???) [000645] ------------              *  IL_OFFSET void   IL offset: 0xaa REG NA

DefList: {  }
N431 (  1,  1) [000137] ------------              *  LCL_VAR   ref    V02 loc0         u:2 NA REG NA $180

DefList: {  }
N433 (  2,  2) [000514] -c----------              *  LEA(b+8)  byref  REG NA
Contained
DefList: {  }
N435 (  4,  4) [000138] n---GO------              *  IND       ref    REG NA <l:$1bc, c:$1bb>
<RefPosition #563 @435 RefTypeUse <Ivl:2 V02> LCL_VAR BB06 regmask=[allIntButFP] minReg=1 last>
Interval 116: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #564 @436 RefTypeDef <Ivl:116> IND BB06 regmask=[allIntButFP] minReg=1>

DefList: { N435.t138. IND }
N437 (  4,  4) [000145] DA--GO------              *  STORE_LCL_VAR ref    V23 tmp12        d:2 NA REG NA
<RefPosition #565 @437 RefTypeUse <Ivl:116>  BB06 regmask=[allIntButFP] minReg=1 last>
Assigning related <V23/L19> to <I116>
<RefPosition #566 @438 RefTypeDef <Ivl:19 V23> STORE_LCL_VAR BB06 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N439 (???,???) [000646] ------------              *  IL_OFFSET void   IL offset: 0xaa REG NA

DefList: {  }
N441 (  1,  1) [000140] ------------              *  LCL_VAR   ref    V02 loc0         u:2 NA REG NA $180

DefList: {  }
N443 (  2,  2) [000516] -c----------              *  LEA(b+48) byref  REG NA
Contained
DefList: {  }
N445 (  4,  4) [000141] n---GO------              *  IND       ref    REG NA <l:$542, c:$541>
<RefPosition #567 @445 RefTypeUse <Ivl:2 V02> LCL_VAR BB06 regmask=[allIntButFP] minReg=1 last>
Interval 117: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #568 @446 RefTypeDef <Ivl:117> IND BB06 regmask=[allIntButFP] minReg=1>

DefList: { N445.t141. IND }
N447 (  4,  4) [000143] DA--GO------              *  STORE_LCL_VAR ref    V22 tmp11        d:2 NA REG NA
<RefPosition #569 @447 RefTypeUse <Ivl:117>  BB06 regmask=[allIntButFP] minReg=1 last>
Assigning related <V22/L18> to <I117>
<RefPosition #570 @448 RefTypeDef <Ivl:18 V22> STORE_LCL_VAR BB06 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N449 (  1,  1) [000146] ------------              *  LCL_VAR   ref    V23 tmp12        u:2 NA (last use) REG NA <l:$1b9, c:$454>

DefList: {  }
N451 (  1,  3) [000153] DA----------              *  STORE_LCL_VAR ref    V24 tmp13        d:2 NA REG NA
<RefPosition #571 @451 RefTypeUse <Ivl:19 V23> LCL_VAR BB06 regmask=[allIntButFP] minReg=1 last>
Assigning related <V24/L20> to <V23/L19>
<RefPosition #572 @452 RefTypeDef <Ivl:20 V24> STORE_LCL_VAR BB06 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N453 (  1,  1) [000139] ------------              *  LCL_VAR   ref    V19 tmp8         u:2 NA (last use) REG NA $1ab

DefList: {  }
N455 (  1,  3) [000156] DA----------              *  STORE_LCL_VAR ref    V25 tmp14        d:2 NA REG NA
<RefPosition #573 @455 RefTypeUse <Ivl:15 V19> LCL_VAR BB06 regmask=[allIntButFP] minReg=1 last>
Assigning related <V25/L21> to <V19/L15>
<RefPosition #574 @456 RefTypeDef <Ivl:21 V25> STORE_LCL_VAR BB06 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N457 (  1,  1) [000147] ------------              *  LCL_VAR   ref    V22 tmp11        u:2 NA (last use) REG NA <l:$540, c:$456>

DefList: {  }
N459 (  1,  3) [000159] DA----------              *  STORE_LCL_VAR ref    V26 tmp15        d:2 NA REG NA
<RefPosition #575 @459 RefTypeUse <Ivl:18 V22> LCL_VAR BB06 regmask=[allIntButFP] minReg=1 last>
Assigning related <V26/L22> to <V22/L18>
<RefPosition #576 @460 RefTypeDef <Ivl:22 V26> STORE_LCL_VAR BB06 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N461 (  1,  1) [000148] ------------              *  LCL_VAR   ref    V26 tmp15        u:2 NA REG NA <l:$540, c:$456>

DefList: {  }
N463 (  1,  1) [000149] -c----------              *  CNS_INT   ref    null REG NA $VN.Null
Contained
DefList: {  }
N465 (  3,  3) [000150] J------N----              *  NE        void   REG NA <l:$291, c:$290>
<RefPosition #577 @465 RefTypeUse <Ivl:22 V26> LCL_VAR BB06 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N467 (  5,  5) [000151] ------------              *  JTRUE     void   REG NA



CHECKING LAST USES for BB06, liveout={V02 V03 V04 V05 V06 V24 V25 V26}
==============================
use: {V02 V19 V20 V21}
def: {V22 V23 V24 V25 V26}

NEW BLOCK BB07


Setting BB06 as the predecessor for determining incoming variable registers of BB07
<RefPosition #578 @469 RefTypeBB  BB07 regmask=[] minReg=1>

DefList: {  }
N471 (  2, 10) [000181] H-----------              *  CNS_INT(h) long   0xd1ffab1e token REG NA $11e
Interval 118: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #579 @472 RefTypeDef <Ivl:118> CNS_INT BB07 regmask=[allIntButFP] minReg=1>

DefList: { N471.t181. CNS_INT }
N473 (???,???) [000706] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #580 @473 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #581 @473 RefTypeUse <Ivl:118>  BB07 regmask=[rcx] minReg=1 last fixed>
Interval 119: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #582 @474 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #583 @474 RefTypeDef <Ivl:119> PUTARG_REG BB07 regmask=[rcx] minReg=1 fixed>

DefList: { N473.t706. PUTARG_REG }
N475 ( 16, 16) [000182] --C---------              *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG NA $543
<RefPosition #584 @475 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #585 @475 RefTypeUse <Ivl:119>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #586 @476 RefTypeKill <Reg:rax>  BB07 regmask=[rax] minReg=1>
<RefPosition #587 @476 RefTypeKill <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #588 @476 RefTypeKill <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #589 @476 RefTypeKill <Reg:r8 >  BB07 regmask=[r8] minReg=1>
<RefPosition #590 @476 RefTypeKill <Reg:r9 >  BB07 regmask=[r9] minReg=1>
<RefPosition #591 @476 RefTypeKill <Reg:r10>  BB07 regmask=[r10] minReg=1>
<RefPosition #592 @476 RefTypeKill <Reg:r11>  BB07 regmask=[r11] minReg=1>
Interval 120: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #593 @476 RefTypeFixedReg <Reg:rax>  BB07 regmask=[rax] minReg=1>
<RefPosition #594 @476 RefTypeDef <Ivl:120> CALL BB07 regmask=[rax] minReg=1 fixed>

DefList: { N475.t182. CALL }
N477 ( 16, 16) [000184] DA----------              *  STORE_LCL_VAR ref    V28 tmp17        d:2 NA REG NA
<RefPosition #595 @477 RefTypeUse <Ivl:120>  BB07 regmask=[allIntButFP] minReg=1 last>
Assigning related <V28/L24> to <I120>
<RefPosition #596 @478 RefTypeDef <Ivl:24 V28> STORE_LCL_VAR BB07 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N479 (  1,  1) [000185] ------------              *  LCL_VAR   ref    V28 tmp17        u:2 NA REG NA $543

DefList: {  }
N481 (  2,  2) [000519] ------------              *  LEA(b+8)  byref  REG NA
<RefPosition #597 @481 RefTypeUse <Ivl:24 V28> LCL_VAR BB07 regmask=[allIntButFP] minReg=1 last>
Interval 121: byref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #598 @482 RefTypeDef <Ivl:121> LEA BB07 regmask=[allIntButFP] minReg=1>

DefList: { N481.t519. LEA }
N483 (  1,  1) [000360] ------------              *  LCL_VAR   ref    V02 loc0         u:2 NA REG NA $180

DefList: { N481.t519. LEA }
N485 (???,???) [000647] -A--GO------              *  STOREIND  ref    REG NA
<RefPosition #599 @485 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #600 @485 RefTypeUse <Ivl:121>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #601 @485 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #602 @485 RefTypeUse <Ivl:2 V02> LCL_VAR BB07 regmask=[rdx] minReg=1 last fixed>
<RefPosition #603 @486 RefTypeKill <Reg:rax>  BB07 regmask=[rax] minReg=1>
<RefPosition #604 @486 RefTypeKill <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #605 @486 RefTypeKill <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #606 @486 RefTypeKill <Reg:r8 >  BB07 regmask=[r8] minReg=1>
<RefPosition #607 @486 RefTypeKill <Reg:r9 >  BB07 regmask=[r9] minReg=1>
<RefPosition #608 @486 RefTypeKill <Reg:r10>  BB07 regmask=[r10] minReg=1>
<RefPosition #609 @486 RefTypeKill <Reg:r11>  BB07 regmask=[r11] minReg=1>
<RefPosition #610 @486 RefTypeKill <Reg:mm0>  BB07 regmask=[mm0] minReg=1>
<RefPosition #611 @486 RefTypeKill <Reg:mm1>  BB07 regmask=[mm1] minReg=1>
<RefPosition #612 @486 RefTypeKill <Reg:mm2>  BB07 regmask=[mm2] minReg=1>
<RefPosition #613 @486 RefTypeKill <Reg:mm3>  BB07 regmask=[mm3] minReg=1>
<RefPosition #614 @486 RefTypeKill <Reg:mm4>  BB07 regmask=[mm4] minReg=1>
<RefPosition #615 @486 RefTypeKill <Reg:mm5>  BB07 regmask=[mm5] minReg=1>

DefList: {  }
N487 (  1,  1) [000363] ------------              *  LCL_VAR   ref    V28 tmp17        u:2 NA REG NA $543

DefList: {  }
N489 (  2,  2) [000521] -c----------              *  LEA(b+24) byref  REG NA
Contained
DefList: {  }
N491 (  2, 10) [000180] H-----------              *  CNS_INT(h) long   0xd1ffab1e ftn REG NA $120
Interval 122: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #616 @492 RefTypeDef <Ivl:122> CNS_INT BB07 regmask=[allIntButFP] minReg=1>

DefList: { N491.t180. CNS_INT }
N493 (???,???) [000648] -A--GO------              *  STOREIND  long   REG NA
<RefPosition #617 @493 RefTypeUse <Ivl:24 V28> LCL_VAR BB07 regmask=[allIntButFP] minReg=1 last>
<RefPosition #618 @493 RefTypeUse <Ivl:122>  BB07 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N495 (  1,  1) [000178] ------------              *  LCL_VAR   ref    V02 loc0         u:2 NA REG NA $180

DefList: {  }
N497 (  2,  2) [000523] ------------              *  LEA(b+48) byref  REG NA
<RefPosition #619 @497 RefTypeUse <Ivl:2 V02> LCL_VAR BB07 regmask=[allIntButFP] minReg=1 last>
Interval 123: byref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #620 @498 RefTypeDef <Ivl:123> LEA BB07 regmask=[allIntButFP] minReg=1>

DefList: { N497.t523. LEA }
N499 (  1,  1) [000187] ------------              *  LCL_VAR   ref    V28 tmp17        u:2 NA REG NA $543

DefList: { N497.t523. LEA }
N501 (???,???) [000649] -A--GO------              *  STOREIND  ref    REG NA
<RefPosition #621 @501 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #622 @501 RefTypeUse <Ivl:123>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #623 @501 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #624 @501 RefTypeUse <Ivl:24 V28> LCL_VAR BB07 regmask=[rdx] minReg=1 last fixed>
<RefPosition #625 @502 RefTypeKill <Reg:rax>  BB07 regmask=[rax] minReg=1>
<RefPosition #626 @502 RefTypeKill <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #627 @502 RefTypeKill <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #628 @502 RefTypeKill <Reg:r8 >  BB07 regmask=[r8] minReg=1>
<RefPosition #629 @502 RefTypeKill <Reg:r9 >  BB07 regmask=[r9] minReg=1>
<RefPosition #630 @502 RefTypeKill <Reg:r10>  BB07 regmask=[r10] minReg=1>
<RefPosition #631 @502 RefTypeKill <Reg:r11>  BB07 regmask=[r11] minReg=1>
<RefPosition #632 @502 RefTypeKill <Reg:mm0>  BB07 regmask=[mm0] minReg=1>
<RefPosition #633 @502 RefTypeKill <Reg:mm1>  BB07 regmask=[mm1] minReg=1>
<RefPosition #634 @502 RefTypeKill <Reg:mm2>  BB07 regmask=[mm2] minReg=1>
<RefPosition #635 @502 RefTypeKill <Reg:mm3>  BB07 regmask=[mm3] minReg=1>
<RefPosition #636 @502 RefTypeKill <Reg:mm4>  BB07 regmask=[mm4] minReg=1>
<RefPosition #637 @502 RefTypeKill <Reg:mm5>  BB07 regmask=[mm5] minReg=1>

DefList: {  }
N503 (  1,  1) [000193] ------------              *  LCL_VAR   ref    V28 tmp17        u:2 NA (last use) REG NA $543

DefList: {  }
N505 (  1,  3) [000199] DA----------              *  STORE_LCL_VAR ref    V26 tmp15        d:4 NA REG NA
<RefPosition #638 @505 RefTypeUse <Ivl:24 V28> LCL_VAR BB07 regmask=[allIntButFP] minReg=1 last>
Assigning related <V26/L22> to <V28/L24>
<RefPosition #639 @506 RefTypeDef <Ivl:22 V26> STORE_LCL_VAR BB07 regmask=[allIntButFP] minReg=1 last>



CHECKING LAST USES for BB07, liveout={V02 V03 V04 V05 V06 V24 V25 V26}
==============================
use: {V02}
def: {V26 V28}

NEW BLOCK BB09


Setting BB06 as the predecessor for determining incoming variable registers of BB09
<RefPosition #640 @507 RefTypeBB  BB09 regmask=[] minReg=1>

DefList: {  }
N509 (  2, 10) [000169] H-----------              *  CNS_INT(h) long   0xd1ffab1e token REG NA $123
Interval 124: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #641 @510 RefTypeDef <Ivl:124> CNS_INT BB09 regmask=[allIntButFP] minReg=1>

DefList: { N509.t169. CNS_INT }
N511 (???,???) [000707] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #642 @511 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #643 @511 RefTypeUse <Ivl:124>  BB09 regmask=[rcx] minReg=1 last fixed>
Interval 125: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #644 @512 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #645 @512 RefTypeDef <Ivl:125> PUTARG_REG BB09 regmask=[rcx] minReg=1 fixed>

DefList: { N511.t707. PUTARG_REG }
N513 ( 16, 16) [000170] --C---------              *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG NA $54b
<RefPosition #646 @513 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #647 @513 RefTypeUse <Ivl:125>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #648 @514 RefTypeKill <Reg:rax>  BB09 regmask=[rax] minReg=1>
<RefPosition #649 @514 RefTypeKill <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #650 @514 RefTypeKill <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #651 @514 RefTypeKill <Reg:r8 >  BB09 regmask=[r8] minReg=1>
<RefPosition #652 @514 RefTypeKill <Reg:r9 >  BB09 regmask=[r9] minReg=1>
<RefPosition #653 @514 RefTypeKill <Reg:r10>  BB09 regmask=[r10] minReg=1>
<RefPosition #654 @514 RefTypeKill <Reg:r11>  BB09 regmask=[r11] minReg=1>
Interval 126: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #655 @514 RefTypeFixedReg <Reg:rax>  BB09 regmask=[rax] minReg=1>
<RefPosition #656 @514 RefTypeDef <Ivl:126> CALL BB09 regmask=[rax] minReg=1 fixed>

DefList: { N513.t170. CALL }
N515 ( 16, 16) [000172] DA----------              *  STORE_LCL_VAR ref    V27 tmp16        d:2 NA REG NA
<RefPosition #657 @515 RefTypeUse <Ivl:126>  BB09 regmask=[allIntButFP] minReg=1 last>
Assigning related <V27/L23> to <I126>
<RefPosition #658 @516 RefTypeDef <Ivl:23 V27> STORE_LCL_VAR BB09 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N517 (  1,  1) [000173] ------------              *  LCL_VAR   ref    V27 tmp16        u:2 NA REG NA $54b

DefList: {  }
N519 (  2,  2) [000526] ------------              *  LEA(b+8)  byref  REG NA
<RefPosition #659 @519 RefTypeUse <Ivl:23 V27> LCL_VAR BB09 regmask=[allIntButFP] minReg=1 last>
Interval 127: byref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #660 @520 RefTypeDef <Ivl:127> LEA BB09 regmask=[allIntButFP] minReg=1>

DefList: { N519.t526. LEA }
N521 (  1,  1) [000372] ------------              *  LCL_VAR   ref    V02 loc0         u:2 NA REG NA $180

DefList: { N519.t526. LEA }
N523 (???,???) [000650] -A--GO------              *  STOREIND  ref    REG NA
<RefPosition #661 @523 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #662 @523 RefTypeUse <Ivl:127>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #663 @523 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #664 @523 RefTypeUse <Ivl:2 V02> LCL_VAR BB09 regmask=[rdx] minReg=1 last fixed>
<RefPosition #665 @524 RefTypeKill <Reg:rax>  BB09 regmask=[rax] minReg=1>
<RefPosition #666 @524 RefTypeKill <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #667 @524 RefTypeKill <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #668 @524 RefTypeKill <Reg:r8 >  BB09 regmask=[r8] minReg=1>
<RefPosition #669 @524 RefTypeKill <Reg:r9 >  BB09 regmask=[r9] minReg=1>
<RefPosition #670 @524 RefTypeKill <Reg:r10>  BB09 regmask=[r10] minReg=1>
<RefPosition #671 @524 RefTypeKill <Reg:r11>  BB09 regmask=[r11] minReg=1>
<RefPosition #672 @524 RefTypeKill <Reg:mm0>  BB09 regmask=[mm0] minReg=1>
<RefPosition #673 @524 RefTypeKill <Reg:mm1>  BB09 regmask=[mm1] minReg=1>
<RefPosition #674 @524 RefTypeKill <Reg:mm2>  BB09 regmask=[mm2] minReg=1>
<RefPosition #675 @524 RefTypeKill <Reg:mm3>  BB09 regmask=[mm3] minReg=1>
<RefPosition #676 @524 RefTypeKill <Reg:mm4>  BB09 regmask=[mm4] minReg=1>
<RefPosition #677 @524 RefTypeKill <Reg:mm5>  BB09 regmask=[mm5] minReg=1>

DefList: {  }
N525 (  1,  1) [000375] ------------              *  LCL_VAR   ref    V27 tmp16        u:2 NA REG NA $54b

DefList: {  }
N527 (  2,  2) [000528] -c----------              *  LEA(b+24) byref  REG NA
Contained
DefList: {  }
N529 (  2, 10) [000168] H-----------              *  CNS_INT(h) long   0xd1ffab1e ftn REG NA $125
Interval 128: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #678 @530 RefTypeDef <Ivl:128> CNS_INT BB09 regmask=[allIntButFP] minReg=1>

DefList: { N529.t168. CNS_INT }
N531 (???,???) [000651] -A--GO------              *  STOREIND  long   REG NA
<RefPosition #679 @531 RefTypeUse <Ivl:23 V27> LCL_VAR BB09 regmask=[allIntButFP] minReg=1 last>
<RefPosition #680 @531 RefTypeUse <Ivl:128>  BB09 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N533 (???,???) [000652] ------------              *  IL_OFFSET void   IL offset: 0xdf REG NA

DefList: {  }
N535 (  1,  1) [000165] ------------              *  LCL_VAR   ref    V25 tmp14        u:2 NA (last use) REG NA $1ab

DefList: {  }
N537 (???,???) [000708] ------------              *  PUTARG_REG ref    REG rcx
<RefPosition #681 @537 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #682 @537 RefTypeUse <Ivl:21 V25> LCL_VAR BB09 regmask=[rcx] minReg=1 last fixed>
Interval 129: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #683 @538 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #684 @538 RefTypeDef <Ivl:129> PUTARG_REG BB09 regmask=[rcx] minReg=1 fixed>

DefList: { N537.t708. PUTARG_REG }
N539 (  1,  1) [000166] ------------              *  LCL_VAR   ref    V26 tmp15        u:3 NA (last use) REG NA $258

DefList: { N537.t708. PUTARG_REG }
N541 (???,???) [000709] ------------              *  PUTARG_REG ref    REG rdx
<RefPosition #685 @541 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #686 @541 RefTypeUse <Ivl:22 V26> LCL_VAR BB09 regmask=[rdx] minReg=1 last fixed>
Interval 130: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #687 @542 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #688 @542 RefTypeDef <Ivl:130> PUTARG_REG BB09 regmask=[rdx] minReg=1 fixed>

DefList: { N537.t708. PUTARG_REG; N541.t709. PUTARG_REG }
N543 (  1,  1) [000175] ------------              *  LCL_VAR   ref    V27 tmp16        u:2 NA (last use) REG NA $54b

DefList: { N537.t708. PUTARG_REG; N541.t709. PUTARG_REG }
N545 (???,???) [000710] ------------              *  PUTARG_REG ref    REG r8
<RefPosition #689 @545 RefTypeFixedReg <Reg:r8 >  BB09 regmask=[r8] minReg=1>
<RefPosition #690 @545 RefTypeUse <Ivl:23 V27> LCL_VAR BB09 regmask=[r8] minReg=1 last fixed>
Interval 131: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #691 @546 RefTypeFixedReg <Reg:r8 >  BB09 regmask=[r8] minReg=1>
<RefPosition #692 @546 RefTypeDef <Ivl:131> PUTARG_REG BB09 regmask=[r8] minReg=1 fixed>

DefList: { N537.t708. PUTARG_REG; N541.t709. PUTARG_REG; N545.t710. PUTARG_REG }
N547 ( 17, 11) [000176] --CXG-------              *  CALL      ref    SolutionAnalyzer.IPC.CreateSession REG NA $464
<RefPosition #693 @547 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #694 @547 RefTypeUse <Ivl:129>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #695 @547 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #696 @547 RefTypeUse <Ivl:130>  BB09 regmask=[rdx] minReg=1 last fixed>
<RefPosition #697 @547 RefTypeFixedReg <Reg:r8 >  BB09 regmask=[r8] minReg=1>
<RefPosition #698 @547 RefTypeUse <Ivl:131>  BB09 regmask=[r8] minReg=1 last fixed>
<RefPosition #699 @548 RefTypeKill <Reg:rax>  BB09 regmask=[rax] minReg=1>
<RefPosition #700 @548 RefTypeKill <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #701 @548 RefTypeKill <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #702 @548 RefTypeKill <Reg:r8 >  BB09 regmask=[r8] minReg=1>
<RefPosition #703 @548 RefTypeKill <Reg:r9 >  BB09 regmask=[r9] minReg=1>
<RefPosition #704 @548 RefTypeKill <Reg:r10>  BB09 regmask=[r10] minReg=1>
<RefPosition #705 @548 RefTypeKill <Reg:r11>  BB09 regmask=[r11] minReg=1>
Interval 132: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #706 @548 RefTypeFixedReg <Reg:rax>  BB09 regmask=[rax] minReg=1>
<RefPosition #707 @548 RefTypeDef <Ivl:132> CALL BB09 regmask=[rax] minReg=1 fixed>

DefList: { N547.t176. CALL }
N549 ( 17, 11) [000533] DA-XG-----L-              *  STORE_LCL_VAR ref    V42 tmp31        d:2 NA REG NA
<RefPosition #708 @549 RefTypeUse <Ivl:132>  BB09 regmask=[allIntButFP] minReg=1 last>
Assigning related <V42/L36> to <I132>
<RefPosition #709 @550 RefTypeDef <Ivl:36 V42> STORE_LCL_VAR BB09 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N551 (  1,  1) [000534] ------------              *  LCL_VAR   ref    V42 tmp31        u:2 NA (last use) REG NA $464

DefList: {  }
N553 (???,???) [000711] ------------              *  PUTARG_REG ref    REG rdx
<RefPosition #710 @553 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #711 @553 RefTypeUse <Ivl:36 V42> LCL_VAR BB09 regmask=[rdx] minReg=1 last fixed>
Interval 133: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #712 @554 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #713 @554 RefTypeDef <Ivl:133> PUTARG_REG BB09 regmask=[rdx] minReg=1 fixed>

DefList: { N553.t711. PUTARG_REG }
N555 (  1,  1) [000164] ------------              *  LCL_VAR   ref    V24 tmp13        u:2 NA (last use) REG NA <l:$1b9, c:$454>

DefList: { N553.t711. PUTARG_REG }
N557 (???,???) [000712] ------------              *  PUTARG_REG ref    REG rcx
<RefPosition #714 @557 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #715 @557 RefTypeUse <Ivl:20 V24> LCL_VAR BB09 regmask=[rcx] minReg=1 last fixed>
Interval 134: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #716 @558 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #717 @558 RefTypeDef <Ivl:134> PUTARG_REG BB09 regmask=[rcx] minReg=1 fixed>

DefList: { N553.t711. PUTARG_REG; N557.t712. PUTARG_REG }
N559 ( 36, 21) [000177] --CXG-------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue REG NA $VN.Void
<RefPosition #718 @559 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #719 @559 RefTypeUse <Ivl:133>  BB09 regmask=[rdx] minReg=1 last fixed>
<RefPosition #720 @559 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #721 @559 RefTypeUse <Ivl:134>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #722 @560 RefTypeKill <Reg:rax>  BB09 regmask=[rax] minReg=1>
<RefPosition #723 @560 RefTypeKill <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #724 @560 RefTypeKill <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #725 @560 RefTypeKill <Reg:r8 >  BB09 regmask=[r8] minReg=1>
<RefPosition #726 @560 RefTypeKill <Reg:r9 >  BB09 regmask=[r9] minReg=1>
<RefPosition #727 @560 RefTypeKill <Reg:r10>  BB09 regmask=[r10] minReg=1>
<RefPosition #728 @560 RefTypeKill <Reg:r11>  BB09 regmask=[r11] minReg=1>

DefList: {  }
N561 (???,???) [000653] ------------              *  IL_OFFSET void   IL offset: 0xe9 REG NA

DefList: {  }
N563 (  1,  1) [000080] ------------              *  LCL_VAR   ref    V06 loc4         u:2 NA REG NA $164
Interval 135: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #729 @564 RefTypeDef <Ivl:135> LCL_VAR BB09 regmask=[allIntButFP] minReg=1>

DefList: { N563.t80. LCL_VAR }
N565 (???,???) [000713] ------------              *  PUTARG_REG ref    REG rcx
<RefPosition #730 @565 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #731 @565 RefTypeUse <Ivl:135>  BB09 regmask=[rcx] minReg=1 last fixed>
Interval 136: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #732 @566 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #733 @566 RefTypeDef <Ivl:136> PUTARG_REG BB09 regmask=[rcx] minReg=1 fixed>

DefList: { N565.t713. PUTARG_REG }
N567 (  2, 10) [000536] H-----------              *  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
Interval 137: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #734 @568 RefTypeFixedReg <Reg:r11>  BB09 regmask=[r11] minReg=1>
<RefPosition #735 @568 RefTypeDef <Ivl:137> CNS_INT BB09 regmask=[r11] minReg=1 fixed>

DefList: { N565.t713. PUTARG_REG; N567.t536. CNS_INT }
N569 (???,???) [000714] ------------              *  PUTARG_REG long   REG r11
<RefPosition #736 @569 RefTypeFixedReg <Reg:r11>  BB09 regmask=[r11] minReg=1>
<RefPosition #737 @569 RefTypeUse <Ivl:137>  BB09 regmask=[r11] minReg=1 last fixed>
Interval 138: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #738 @570 RefTypeFixedReg <Reg:r11>  BB09 regmask=[r11] minReg=1>
<RefPosition #739 @570 RefTypeDef <Ivl:138> PUTARG_REG BB09 regmask=[r11] minReg=1 fixed>

DefList: { N565.t713. PUTARG_REG; N569.t714. PUTARG_REG }
N571 (  2, 10) [000715] Hc----------              *  CNS_INT(h) long   0xd1ffab1e ftn REG NA
Contained
DefList: { N565.t713. PUTARG_REG; N569.t714. PUTARG_REG }
N573 (  4, 12) [000716] -c----------              *  IND       long   REG NA
Contained
DefList: { N565.t713. PUTARG_REG; N569.t714. PUTARG_REG }
N575 ( 23, 21) [000081] --CXG-------              *  CALLV stub int    System.Collections.IEnumerator.MoveNext REG NA $5c0
<RefPosition #740 @575 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #741 @575 RefTypeUse <Ivl:136>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #742 @575 RefTypeFixedReg <Reg:r11>  BB09 regmask=[r11] minReg=1>
<RefPosition #743 @575 RefTypeUse <Ivl:138>  BB09 regmask=[r11] minReg=1 last fixed>
<RefPosition #744 @576 RefTypeKill <Reg:rax>  BB09 regmask=[rax] minReg=1>
<RefPosition #745 @576 RefTypeKill <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #746 @576 RefTypeKill <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #747 @576 RefTypeKill <Reg:r8 >  BB09 regmask=[r8] minReg=1>
<RefPosition #748 @576 RefTypeKill <Reg:r9 >  BB09 regmask=[r9] minReg=1>
<RefPosition #749 @576 RefTypeKill <Reg:r10>  BB09 regmask=[r10] minReg=1>
<RefPosition #750 @576 RefTypeKill <Reg:r11>  BB09 regmask=[r11] minReg=1>
Interval 139: int RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #751 @576 RefTypeFixedReg <Reg:rax>  BB09 regmask=[rax] minReg=1>
<RefPosition #752 @576 RefTypeDef <Ivl:139> CALL BB09 regmask=[rax] minReg=1 fixed>

DefList: { N575.t81. CALL }
N577 (  1,  1) [000082] -c----------              *  CNS_INT   int    0 REG NA $40
Contained
DefList: { N575.t81. CALL }
N579 ( 25, 23) [000083] J--XG--N----              *  NE        void   REG NA $292
<RefPosition #753 @579 RefTypeUse <Ivl:139>  BB09 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N581 ( 27, 25) [000084] ---XG-------              *  JTRUE     void   REG NA

Exposed uses:<RefPosition #754 @583 RefTypeExpUse <Ivl:3 V03>  BB09 regmask=[allIntButFP] minReg=1>
 V03<RefPosition #755 @583 RefTypeExpUse <Ivl:4 V04>  BB09 regmask=[allIntButFP] minReg=1>
 V04<RefPosition #756 @583 RefTypeExpUse <Ivl:5 V05>  BB09 regmask=[allIntButFP] minReg=1>
 V05


CHECKING LAST USES for BB09, liveout={V02 V03 V04 V05 V06}
==============================
use: {V02 V06 V24 V25 V26}
def: {V27 V42}

NEW BLOCK BB13


Setting BB09 as the predecessor for determining incoming variable registers of BB13
<RefPosition #757 @583 RefTypeBB  BB13 regmask=[] minReg=1>

DefList: {  }
N585 (  1,  1) [000436] ------------              *  LCL_VAR   ref    V06 loc4         u:2 NA (last use) REG NA $164
Interval 140: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #758 @586 RefTypeDef <Ivl:140> LCL_VAR BB13 regmask=[allIntButFP] minReg=1>

DefList: { N585.t436. LCL_VAR }
N587 (???,???) [000717] ------------              *  PUTARG_REG ref    REG rcx
<RefPosition #759 @587 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #760 @587 RefTypeUse <Ivl:140>  BB13 regmask=[rcx] minReg=1 last fixed>
Interval 141: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #761 @588 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #762 @588 RefTypeDef <Ivl:141> PUTARG_REG BB13 regmask=[rcx] minReg=1 fixed>

DefList: { N587.t717. PUTARG_REG }
N589 (  2, 10) [000539] H-----------              *  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127
Interval 142: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #763 @590 RefTypeFixedReg <Reg:r11>  BB13 regmask=[r11] minReg=1>
<RefPosition #764 @590 RefTypeDef <Ivl:142> CNS_INT BB13 regmask=[r11] minReg=1 fixed>

DefList: { N587.t717. PUTARG_REG; N589.t539. CNS_INT }
N591 (???,???) [000718] ------------              *  PUTARG_REG long   REG r11
<RefPosition #765 @591 RefTypeFixedReg <Reg:r11>  BB13 regmask=[r11] minReg=1>
<RefPosition #766 @591 RefTypeUse <Ivl:142>  BB13 regmask=[r11] minReg=1 last fixed>
Interval 143: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #767 @592 RefTypeFixedReg <Reg:r11>  BB13 regmask=[r11] minReg=1>
<RefPosition #768 @592 RefTypeDef <Ivl:143> PUTARG_REG BB13 regmask=[r11] minReg=1 fixed>

DefList: { N587.t717. PUTARG_REG; N591.t718. PUTARG_REG }
N593 (  2, 10) [000719] Hc----------              *  CNS_INT(h) long   0xd1ffab1e ftn REG NA
Contained
DefList: { N587.t717. PUTARG_REG; N591.t718. PUTARG_REG }
N595 (  4, 12) [000720] -c----------              *  IND       long   REG NA
Contained
DefList: { N587.t717. PUTARG_REG; N591.t718. PUTARG_REG }
N597 ( 23, 21) [000435] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose REG NA $VN.Void
<RefPosition #769 @597 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #770 @597 RefTypeUse <Ivl:141>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #771 @597 RefTypeFixedReg <Reg:r11>  BB13 regmask=[r11] minReg=1>
<RefPosition #772 @597 RefTypeUse <Ivl:143>  BB13 regmask=[r11] minReg=1 last fixed>
<RefPosition #773 @598 RefTypeKill <Reg:rax>  BB13 regmask=[rax] minReg=1>
<RefPosition #774 @598 RefTypeKill <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #775 @598 RefTypeKill <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #776 @598 RefTypeKill <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #777 @598 RefTypeKill <Reg:r9 >  BB13 regmask=[r9] minReg=1>
<RefPosition #778 @598 RefTypeKill <Reg:r10>  BB13 regmask=[r10] minReg=1>
<RefPosition #779 @598 RefTypeKill <Reg:r11>  BB13 regmask=[r11] minReg=1>

DefList: {  }
N599 (???,???) [000654] ------------              *  IL_OFFSET void   IL offset: 0x100 REG NA

DefList: {  }
N601 (  1,  1) [000212] ------------              *  LCL_VAR   ref    V02 loc0         u:2 NA REG NA $180

DefList: {  }
N603 (  2,  2) [000546] -c----------              *  LEA(b+8)  byref  REG NA
Contained
DefList: {  }
N605 (  4,  4) [000213] n---GO------              *  IND       ref    REG NA <l:$569, c:$568>
<RefPosition #780 @605 RefTypeUse <Ivl:2 V02> LCL_VAR BB13 regmask=[allIntButFP] minReg=1 last>
Interval 144: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #781 @606 RefTypeDef <Ivl:144> IND BB13 regmask=[allIntButFP] minReg=1>

DefList: { N605.t213. IND }
N607 (  4,  4) [000384] DA--GO------              *  STORE_LCL_VAR ref    V35 tmp24        d:2 NA REG NA
<RefPosition #782 @607 RefTypeUse <Ivl:144>  BB13 regmask=[allIntButFP] minReg=1 last>
Assigning related <V35/L29> to <I144>
<RefPosition #783 @608 RefTypeDef <Ivl:29 V35> STORE_LCL_VAR BB13 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N609 (  1,  1) [000381] ------------              *  LCL_VAR   ref    V35 tmp24        u:2 NA (last use) REG NA <l:$567, c:$16e>

DefList: {  }
N611 (  2,  2) [000550] -c----------              *  LEA(b+24) byref  REG NA
Contained
DefList: {  }
N613 (  4,  4) [000382] ---XG-------              *  IND       int    REG NA <l:$29b, c:$29a>
<RefPosition #784 @613 RefTypeUse <Ivl:29 V35> LCL_VAR BB13 regmask=[allIntButFP] minReg=1 last>
Interval 145: int RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #785 @614 RefTypeDef <Ivl:145> IND BB13 regmask=[allIntButFP] minReg=1>

DefList: { N613.t382. IND }
N615 (  1,  1) [000211] ------------              *  LCL_VAR   ref    V02 loc0         u:2 NA REG NA $180

DefList: { N613.t382. IND }
N617 (  2,  2) [000548] -c----------              *  LEA(b+60) byref  REG NA
Contained
DefList: { N613.t382. IND }
N619 (???,???) [000655] -A-XGO------              *  STOREIND  int    REG NA
<RefPosition #786 @619 RefTypeUse <Ivl:2 V02> LCL_VAR BB13 regmask=[allIntButFP] minReg=1 last>
<RefPosition #787 @619 RefTypeUse <Ivl:145>  BB13 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N621 (???,???) [000656] ------------              *  IL_OFFSET void   IL offset: 0x111 REG NA

DefList: {  }
N623 (  2, 10) [000221] H-----------              *  CNS_INT(h) long   0xd1ffab1e method REG NA $12b
Interval 146: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #788 @624 RefTypeDef <Ivl:146> CNS_INT BB13 regmask=[allIntButFP] minReg=1>

DefList: { N623.t221. CNS_INT }
N625 (???,???) [000721] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #789 @625 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #790 @625 RefTypeUse <Ivl:146>  BB13 regmask=[rcx] minReg=1 last fixed>
Interval 147: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #791 @626 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #792 @626 RefTypeDef <Ivl:147> PUTARG_REG BB13 regmask=[rcx] minReg=1 fixed>

DefList: { N625.t721. PUTARG_REG }
N627 ( 16, 16) [000222] --C---------              *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG NA $56c
<RefPosition #793 @627 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #794 @627 RefTypeUse <Ivl:147>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #795 @628 RefTypeKill <Reg:rax>  BB13 regmask=[rax] minReg=1>
<RefPosition #796 @628 RefTypeKill <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #797 @628 RefTypeKill <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #798 @628 RefTypeKill <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #799 @628 RefTypeKill <Reg:r9 >  BB13 regmask=[r9] minReg=1>
<RefPosition #800 @628 RefTypeKill <Reg:r10>  BB13 regmask=[r10] minReg=1>
<RefPosition #801 @628 RefTypeKill <Reg:r11>  BB13 regmask=[r11] minReg=1>
Interval 148: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #802 @628 RefTypeFixedReg <Reg:rax>  BB13 regmask=[rax] minReg=1>
<RefPosition #803 @628 RefTypeDef <Ivl:148> CALL BB13 regmask=[rax] minReg=1 fixed>

DefList: { N627.t222. CALL }
N629 ( 16, 16) [000224] DA----------              *  STORE_LCL_VAR ref    V29 tmp18        d:2 NA REG NA
<RefPosition #804 @629 RefTypeUse <Ivl:148>  BB13 regmask=[allIntButFP] minReg=1 last>
Assigning related <V29/L25> to <I148>
<RefPosition #805 @630 RefTypeDef <Ivl:25 V29> STORE_LCL_VAR BB13 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N631 (  1,  1) [000219] ------------              *  LCL_VAR   ref    V02 loc0         u:2 NA REG NA $180

DefList: {  }
N633 (  2,  2) [000553] -c----------              *  LEA(b+60) byref  REG NA
Contained
DefList: {  }
N635 (  4,  4) [000220] n---GO------              *  IND       int    REG NA <l:$2a3, c:$2a2>
<RefPosition #806 @635 RefTypeUse <Ivl:2 V02> LCL_VAR BB13 regmask=[allIntButFP] minReg=1 last>
Interval 149: int RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #807 @636 RefTypeDef <Ivl:149> IND BB13 regmask=[allIntButFP] minReg=1>

DefList: { N635.t220. IND }
N637 (  4,  4) [000402] DA--GO------              *  STORE_LCL_VAR int    V37 tmp26        d:2 NA REG NA
<RefPosition #808 @637 RefTypeUse <Ivl:149>  BB13 regmask=[allIntButFP] minReg=1 last>
Assigning related <V37/L31> to <I149>
<RefPosition #809 @638 RefTypeDef <Ivl:31 V37> STORE_LCL_VAR BB13 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N639 (  2, 10) [000386] H-----------              *  CNS_INT(h) long   0xd1ffab1e token REG NA $12c
Interval 150: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #810 @640 RefTypeDef <Ivl:150> CNS_INT BB13 regmask=[allIntButFP] minReg=1>

DefList: { N639.t386. CNS_INT }
N641 (???,???) [000722] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #811 @641 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #812 @641 RefTypeUse <Ivl:150>  BB13 regmask=[rcx] minReg=1 last fixed>
Interval 151: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #813 @642 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #814 @642 RefTypeDef <Ivl:151> PUTARG_REG BB13 regmask=[rcx] minReg=1 fixed>

DefList: { N641.t722. PUTARG_REG }
N643 ( 16, 16) [000387] --C---------              *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG NA $56d
<RefPosition #815 @643 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #816 @643 RefTypeUse <Ivl:151>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #817 @644 RefTypeKill <Reg:rax>  BB13 regmask=[rax] minReg=1>
<RefPosition #818 @644 RefTypeKill <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #819 @644 RefTypeKill <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #820 @644 RefTypeKill <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #821 @644 RefTypeKill <Reg:r9 >  BB13 regmask=[r9] minReg=1>
<RefPosition #822 @644 RefTypeKill <Reg:r10>  BB13 regmask=[r10] minReg=1>
<RefPosition #823 @644 RefTypeKill <Reg:r11>  BB13 regmask=[r11] minReg=1>
Interval 152: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #824 @644 RefTypeFixedReg <Reg:rax>  BB13 regmask=[rax] minReg=1>
<RefPosition #825 @644 RefTypeDef <Ivl:152> CALL BB13 regmask=[rax] minReg=1 fixed>

DefList: { N643.t387. CALL }
N645 ( 16, 16) [000389] DA----------              *  STORE_LCL_VAR ref    V36 tmp25        d:2 NA REG NA
<RefPosition #826 @645 RefTypeUse <Ivl:152>  BB13 regmask=[allIntButFP] minReg=1 last>
Assigning related <V36/L30> to <I152>
<RefPosition #827 @646 RefTypeDef <Ivl:30 V36> STORE_LCL_VAR BB13 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N647 (  1,  1) [000390] ------------              *  LCL_VAR   ref    V36 tmp25        u:2 NA REG NA $56d

DefList: {  }
N649 (???,???) [000723] ------------              *  PUTARG_REG ref    REG rcx
<RefPosition #828 @649 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #829 @649 RefTypeUse <Ivl:30 V36> LCL_VAR BB13 regmask=[rcx] minReg=1 last fixed>
Setting putarg_reg as a pass-through of a non-last use lclVar
Interval 153: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #830 @650 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #831 @650 RefTypeDef <Ivl:153> PUTARG_REG BB13 regmask=[rcx] minReg=1 fixed>
Assigning related <V36/L30> to <I153>

DefList: { N649.t723. PUTARG_REG }
N651 (  1,  1) [000404] ------------              *  CNS_INT   int    0 REG NA $40
Interval 154: int RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #832 @652 RefTypeDef <Ivl:154> CNS_INT BB13 regmask=[allIntButFP] minReg=1>

DefList: { N649.t723. PUTARG_REG; N651.t404. CNS_INT }
N653 (???,???) [000724] ------------              *  PUTARG_REG int    REG rdx
<RefPosition #833 @653 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #834 @653 RefTypeUse <Ivl:154>  BB13 regmask=[rdx] minReg=1 last fixed>
Interval 155: int RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #835 @654 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #836 @654 RefTypeDef <Ivl:155> PUTARG_REG BB13 regmask=[rdx] minReg=1 fixed>

DefList: { N649.t723. PUTARG_REG; N653.t724. PUTARG_REG }
N655 (  1,  1) [000405] ------------              *  CNS_INT   ref    null REG NA $VN.Null
Interval 156: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #837 @656 RefTypeDef <Ivl:156> CNS_INT BB13 regmask=[allIntButFP] minReg=1>

DefList: { N649.t723. PUTARG_REG; N653.t724. PUTARG_REG; N655.t405. CNS_INT }
N657 (???,???) [000725] ------------              *  PUTARG_REG ref    REG r8
<RefPosition #838 @657 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #839 @657 RefTypeUse <Ivl:156>  BB13 regmask=[r8] minReg=1 last fixed>
Interval 157: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #840 @658 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #841 @658 RefTypeDef <Ivl:157> PUTARG_REG BB13 regmask=[r8] minReg=1 fixed>

DefList: { N649.t723. PUTARG_REG; N653.t724. PUTARG_REG; N657.t725. PUTARG_REG }
N659 ( 17, 12) [000406] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor REG NA $VN.Void
<RefPosition #842 @659 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #843 @659 RefTypeUse <Ivl:153>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #844 @659 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #845 @659 RefTypeUse <Ivl:155>  BB13 regmask=[rdx] minReg=1 last fixed>
<RefPosition #846 @659 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #847 @659 RefTypeUse <Ivl:157>  BB13 regmask=[r8] minReg=1 last fixed>
<RefPosition #848 @660 RefTypeKill <Reg:rax>  BB13 regmask=[rax] minReg=1>
<RefPosition #849 @660 RefTypeKill <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #850 @660 RefTypeKill <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #851 @660 RefTypeKill <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #852 @660 RefTypeKill <Reg:r9 >  BB13 regmask=[r9] minReg=1>
<RefPosition #853 @660 RefTypeKill <Reg:r10>  BB13 regmask=[r10] minReg=1>
<RefPosition #854 @660 RefTypeKill <Reg:r11>  BB13 regmask=[r11] minReg=1>

DefList: {  }
N661 (  1,  1) [000225] ------------              *  LCL_VAR   ref    V29 tmp18        u:2 NA REG NA $56c

DefList: {  }
N663 (  2,  2) [000559] ------------              *  LEA(b+8)  byref  REG NA
<RefPosition #855 @663 RefTypeUse <Ivl:25 V29> LCL_VAR BB13 regmask=[allIntButFP] minReg=1 last>
Interval 158: byref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #856 @664 RefTypeDef <Ivl:158> LEA BB13 regmask=[allIntButFP] minReg=1>

DefList: { N663.t559. LEA }
N665 (  1,  1) [000392] ------------              *  LCL_VAR   ref    V36 tmp25        u:2 NA (last use) REG NA $56d

DefList: { N663.t559. LEA }
N667 (???,???) [000657] -A--GO------              *  STOREIND  ref    REG NA
<RefPosition #857 @667 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #858 @667 RefTypeUse <Ivl:158>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #859 @667 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #860 @667 RefTypeUse <Ivl:30 V36> LCL_VAR BB13 regmask=[rdx] minReg=1 last fixed>
<RefPosition #861 @668 RefTypeKill <Reg:rax>  BB13 regmask=[rax] minReg=1>
<RefPosition #862 @668 RefTypeKill <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #863 @668 RefTypeKill <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #864 @668 RefTypeKill <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #865 @668 RefTypeKill <Reg:r9 >  BB13 regmask=[r9] minReg=1>
<RefPosition #866 @668 RefTypeKill <Reg:r10>  BB13 regmask=[r10] minReg=1>
<RefPosition #867 @668 RefTypeKill <Reg:r11>  BB13 regmask=[r11] minReg=1>
<RefPosition #868 @668 RefTypeKill <Reg:mm0>  BB13 regmask=[mm0] minReg=1>
<RefPosition #869 @668 RefTypeKill <Reg:mm1>  BB13 regmask=[mm1] minReg=1>
<RefPosition #870 @668 RefTypeKill <Reg:mm2>  BB13 regmask=[mm2] minReg=1>
<RefPosition #871 @668 RefTypeKill <Reg:mm3>  BB13 regmask=[mm3] minReg=1>
<RefPosition #872 @668 RefTypeKill <Reg:mm4>  BB13 regmask=[mm4] minReg=1>
<RefPosition #873 @668 RefTypeKill <Reg:mm5>  BB13 regmask=[mm5] minReg=1>

DefList: {  }
N669 (  1,  1) [000397] ------------              *  LCL_VAR   ref    V29 tmp18        u:2 NA REG NA $56c

DefList: {  }
N671 (  2,  2) [000561] -c----------              *  LEA(b+16) byref  REG NA
Contained
DefList: {  }
N673 (  1,  1) [000398] ------------              *  LCL_VAR   int    V37 tmp26        u:2 NA (last use) REG NA <l:$299, c:$30c>

DefList: {  }
N675 (???,???) [000658] -A--GO------              *  STOREIND  int    REG NA
<RefPosition #874 @675 RefTypeUse <Ivl:25 V29> LCL_VAR BB13 regmask=[allIntButFP] minReg=1 last>
<RefPosition #875 @675 RefTypeUse <Ivl:31 V37> LCL_VAR BB13 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N677 (???,???) [000659] ------------              *  IL_OFFSET void   IL offset: 0x11d REG NA

DefList: {  }
N679 (  1,  1) [000218] ------------              *  LCL_VAR   ref    V02 loc0         u:2 NA REG NA $180

DefList: {  }
N681 (  2,  2) [000563] ------------              *  LEA(b+16) byref  REG NA
<RefPosition #876 @681 RefTypeUse <Ivl:2 V02> LCL_VAR BB13 regmask=[allIntButFP] minReg=1 last>
Interval 159: byref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #877 @682 RefTypeDef <Ivl:159> LEA BB13 regmask=[allIntButFP] minReg=1>

DefList: { N681.t563. LEA }
N683 (  1,  1) [000227] ------------              *  LCL_VAR   ref    V29 tmp18        u:2 NA (last use) REG NA $56c

DefList: { N681.t563. LEA }
N685 (???,???) [000660] -A--GO------              *  STOREIND  ref    REG NA
<RefPosition #878 @685 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #879 @685 RefTypeUse <Ivl:159>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #880 @685 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #881 @685 RefTypeUse <Ivl:25 V29> LCL_VAR BB13 regmask=[rdx] minReg=1 last fixed>
<RefPosition #882 @686 RefTypeKill <Reg:rax>  BB13 regmask=[rax] minReg=1>
<RefPosition #883 @686 RefTypeKill <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #884 @686 RefTypeKill <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #885 @686 RefTypeKill <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #886 @686 RefTypeKill <Reg:r9 >  BB13 regmask=[r9] minReg=1>
<RefPosition #887 @686 RefTypeKill <Reg:r10>  BB13 regmask=[r10] minReg=1>
<RefPosition #888 @686 RefTypeKill <Reg:r11>  BB13 regmask=[r11] minReg=1>
<RefPosition #889 @686 RefTypeKill <Reg:mm0>  BB13 regmask=[mm0] minReg=1>
<RefPosition #890 @686 RefTypeKill <Reg:mm1>  BB13 regmask=[mm1] minReg=1>
<RefPosition #891 @686 RefTypeKill <Reg:mm2>  BB13 regmask=[mm2] minReg=1>
<RefPosition #892 @686 RefTypeKill <Reg:mm3>  BB13 regmask=[mm3] minReg=1>
<RefPosition #893 @686 RefTypeKill <Reg:mm4>  BB13 regmask=[mm4] minReg=1>
<RefPosition #894 @686 RefTypeKill <Reg:mm5>  BB13 regmask=[mm5] minReg=1>

DefList: {  }
N687 (???,???) [000661] ------------              *  IL_OFFSET void   IL offset: 0x122 REG NA

DefList: {  }
N689 (  1,  1) [000230] ------------              *  CNS_INT   int    0 REG NA $40
Interval 160: int RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #895 @690 RefTypeDef <Ivl:160> CNS_INT BB13 regmask=[allIntButFP] minReg=1>

DefList: { N689.t230. CNS_INT }
N691 (  1,  3) [000232] DA----------              *  STORE_LCL_VAR int    V10 loc8         d:2 NA REG NA
<RefPosition #896 @691 RefTypeUse <Ivl:160>  BB13 regmask=[allIntButFP] minReg=1 last>
Assigning related <V10/L7> to <I160>
<RefPosition #897 @692 RefTypeDef <Ivl:7 V10> STORE_LCL_VAR BB13 regmask=[allIntButFP] minReg=1 last>



CHECKING LAST USES for BB13, liveout={V02 V10}
==============================
use: {V02 V06}
def: {V10 V29 V35 V36 V37}

NEW BLOCK BB17


Setting BB13 as the predecessor for determining incoming variable registers of BB17
<RefPosition #898 @693 RefTypeBB  BB17 regmask=[] minReg=1>

DefList: {  }
N695 (  1,  1) [000236] ------------              *  LCL_VAR   ref    V02 loc0         u:2 NA REG NA $180

DefList: {  }
N697 (  2,  2) [000566] -c----------              *  LEA(b+60) byref  REG NA
Contained
DefList: {  }
N699 (  4,  4) [000237] n---GO------              *  IND       int    REG NA <l:$2a9, c:$2a8>
<RefPosition #899 @699 RefTypeUse <Ivl:2 V02> LCL_VAR BB17 regmask=[allIntButFP] minReg=1 last>
Interval 161: int RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #900 @700 RefTypeDef <Ivl:161> IND BB17 regmask=[allIntButFP] minReg=1>

DefList: { N699.t237. IND }
N701 (  4,  4) [000424] DA--GO------              *  STORE_LCL_VAR int    V39 tmp28        d:2 NA REG NA
<RefPosition #901 @701 RefTypeUse <Ivl:161>  BB17 regmask=[allIntButFP] minReg=1 last>
Assigning related <V39/L33> to <I161>
<RefPosition #902 @702 RefTypeDef <Ivl:33 V39> STORE_LCL_VAR BB17 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N703 (  1,  1) [000412] ------------              *  LCL_VAR   int    V39 tmp28        u:2 NA REG NA <l:$2a7, c:$680>

DefList: {  }
N705 (  1,  1) [000411] -c----------              *  CNS_INT   int    8 REG NA $57
Contained
DefList: {  }
N707 (  3,  3) [000413] J------N----              *  GE        void   REG NA <l:$2ab, c:$2aa>
<RefPosition #903 @707 RefTypeUse <Ivl:33 V39> LCL_VAR BB17 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N709 (  5,  5) [000414] ------------              *  JTRUE     void   REG NA



CHECKING LAST USES for BB17, liveout={V02 V10 V39}
==============================
use: {V02}
def: {V39}

NEW BLOCK BB18


Setting BB17 as the predecessor for determining incoming variable registers of BB18
<RefPosition #904 @711 RefTypeBB  BB18 regmask=[] minReg=1>

DefList: {  }
N713 (  1,  1) [000419] ------------              *  LCL_VAR   int    V39 tmp28        u:2 NA (last use) REG NA <l:$2a7, c:$680>

DefList: {  }
N715 (  1,  3) [000421] DA----------              *  STORE_LCL_VAR int    V38 tmp27        d:4 NA REG NA
<RefPosition #905 @715 RefTypeUse <Ivl:33 V39> LCL_VAR BB18 regmask=[allIntButFP] minReg=1 last>
Assigning related <V38/L32> to <V39/L33>
<RefPosition #906 @716 RefTypeDef <Ivl:32 V38> STORE_LCL_VAR BB18 regmask=[allIntButFP] minReg=1 last>



CHECKING LAST USES for BB18, liveout={V02 V10 V38}
==============================
use: {V39}
def: {V38}

NEW BLOCK BB19


Setting BB17 as the predecessor for determining incoming variable registers of BB19
<RefPosition #907 @717 RefTypeBB  BB19 regmask=[] minReg=1>

DefList: {  }
N719 (  1,  1) [000415] -c----------              *  CNS_INT   int    8 REG NA $57
Contained
DefList: {  }
N721 (  1,  3) [000417] DA----------              *  STORE_LCL_VAR int    V38 tmp27        d:3 NA REG NA
<RefPosition #908 @722 RefTypeDef <Ivl:32 V38> STORE_LCL_VAR BB19 regmask=[allIntButFP] minReg=1 last>



CHECKING LAST USES for BB19, liveout={V02 V10 V38}
==============================
use: {}
def: {V38}

NEW BLOCK BB20


Setting BB18 as the predecessor for determining incoming variable registers of BB20
<RefPosition #909 @723 RefTypeBB  BB20 regmask=[] minReg=1>

DefList: {  }
N725 (  1,  1) [000233] ------------              *  LCL_VAR   int    V10 loc8         u:3 NA REG NA $2ca

DefList: {  }
N727 (  1,  1) [000422] ------------              *  LCL_VAR   int    V38 tmp27        u:2 NA (last use) REG NA $2cb

DefList: {  }
N729 (  3,  3) [000240] J------N----              *  LT        void   REG NA $2ac
<RefPosition #910 @729 RefTypeUse <Ivl:7 V10> LCL_VAR BB20 regmask=[allIntButFP] minReg=1 last>
<RefPosition #911 @729 RefTypeUse <Ivl:32 V38> LCL_VAR BB20 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N731 (  5,  5) [000241] ------------              *  JTRUE     void   REG NA



CHECKING LAST USES for BB20, liveout={V02 V10}
==============================
use: {V10 V38}
def: {}

NEW BLOCK BB16


Setting BB20 as the predecessor for determining incoming variable registers of BB16
<RefPosition #912 @733 RefTypeBB  BB16 regmask=[] minReg=1>

DefList: {  }
N735 (???,???) [000662] ------------              *  IL_OFFSET void   IL offset: 0x127 REG NA

DefList: {  }
N737 (  1,  1) [000242] ------------              *  LCL_VAR   ref    V02 loc0         u:2 NA REG NA $180

DefList: {  }
N739 (???,???) [000726] ------------              *  PUTARG_REG ref    REG rcx
<RefPosition #913 @739 RefTypeFixedReg <Reg:rcx>  BB16 regmask=[rcx] minReg=1>
<RefPosition #914 @739 RefTypeUse <Ivl:2 V02> LCL_VAR BB16 regmask=[rcx] minReg=1 last fixed>
Setting putarg_reg as a pass-through of a non-last use lclVar
Interval 162: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #915 @740 RefTypeFixedReg <Reg:rcx>  BB16 regmask=[rcx] minReg=1>
<RefPosition #916 @740 RefTypeDef <Ivl:162> PUTARG_REG BB16 regmask=[rcx] minReg=1 fixed>
Assigning related <V02/L2> to <I162>

DefList: { N739.t726. PUTARG_REG }
N741 ( 15,  8) [000243] --CXG-------              *  CALL      void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0 REG NA $VN.Void
<RefPosition #917 @741 RefTypeFixedReg <Reg:rcx>  BB16 regmask=[rcx] minReg=1>
<RefPosition #918 @741 RefTypeUse <Ivl:162>  BB16 regmask=[rcx] minReg=1 last fixed>
<RefPosition #919 @742 RefTypeKill <Reg:rax>  BB16 regmask=[rax] minReg=1>
<RefPosition #920 @742 RefTypeKill <Reg:rcx>  BB16 regmask=[rcx] minReg=1>
<RefPosition #921 @742 RefTypeKill <Reg:rdx>  BB16 regmask=[rdx] minReg=1>
<RefPosition #922 @742 RefTypeKill <Reg:r8 >  BB16 regmask=[r8] minReg=1>
<RefPosition #923 @742 RefTypeKill <Reg:r9 >  BB16 regmask=[r9] minReg=1>
<RefPosition #924 @742 RefTypeKill <Reg:r10>  BB16 regmask=[r10] minReg=1>
<RefPosition #925 @742 RefTypeKill <Reg:r11>  BB16 regmask=[r11] minReg=1>

DefList: {  }
N743 (???,???) [000663] ------------              *  IL_OFFSET void   IL offset: 0x12d REG NA

DefList: {  }
N745 (  1,  1) [000244] ------------              *  LCL_VAR   int    V10 loc8         u:3 NA (last use) REG NA $2ca

DefList: {  }
N747 (  1,  1) [000245] -c----------              *  CNS_INT   int    1 REG NA $41
Contained
DefList: {  }
N749 (  3,  3) [000246] ------------              *  ADD       int    REG NA $2ad
<RefPosition #926 @749 RefTypeUse <Ivl:7 V10> LCL_VAR BB16 regmask=[allIntButFP] minReg=1 last>
Interval 163: int RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #927 @750 RefTypeDef <Ivl:163> ADD BB16 regmask=[allIntButFP] minReg=1>
Assigning related <I163> to <V10/L7>

DefList: { N749.t246. ADD }
N751 (  3,  3) [000248] DA----------              *  STORE_LCL_VAR int    V10 loc8         d:4 NA REG NA
<RefPosition #928 @751 RefTypeUse <Ivl:163>  BB16 regmask=[allIntButFP] minReg=1 last>
Assigning related <V10/L7> to <I163>
<RefPosition #929 @752 RefTypeDef <Ivl:7 V10> STORE_LCL_VAR BB16 regmask=[allIntButFP] minReg=1 last>

Exposed uses:<RefPosition #930 @753 RefTypeExpUse <Ivl:7 V10>  BB16 regmask=[allIntButFP] minReg=1>
 V10


CHECKING LAST USES for BB16, liveout={V02 V10}
==============================
use: {V02 V10}
def: {V10}

NEW BLOCK BB21


Setting BB20 as the predecessor for determining incoming variable registers of BB21
<RefPosition #931 @753 RefTypeBB  BB21 regmask=[] minReg=1>

DefList: {  }
N755 (???,???) [000664] ------------              *  IL_OFFSET void   IL offset: 0x147 REG NA

DefList: {  }
N757 (  1,  1) [000249] ------------              *  LCL_VAR   ref    V02 loc0         u:2 NA (last use) REG NA $180

DefList: {  }
N759 (  2,  2) [000568] -c----------              *  LEA(b+24) byref  REG NA
Contained
DefList: {  }
N761 (  4,  4) [000250] n---GO------              *  IND       ref    REG NA <l:$575, c:$574>
<RefPosition #932 @761 RefTypeUse <Ivl:2 V02> LCL_VAR BB21 regmask=[allIntButFP] minReg=1 last>
Interval 164: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #933 @762 RefTypeDef <Ivl:164> IND BB21 regmask=[allIntButFP] minReg=1>

DefList: { N761.t250. IND }
N763 (  4,  4) [000429] DA--GO------              *  STORE_LCL_VAR ref    V40 tmp29        d:2 NA REG NA
<RefPosition #934 @763 RefTypeUse <Ivl:164>  BB21 regmask=[allIntButFP] minReg=1 last>
Assigning related <V40/L34> to <I164>
<RefPosition #935 @764 RefTypeDef <Ivl:34 V40> STORE_LCL_VAR BB21 regmask=[allIntButFP] minReg=1 last>

DefList: {  }
N765 (  1,  1) [000426] ------------              *  LCL_VAR   ref    V40 tmp29        u:2 NA (last use) REG NA <l:$573, c:$177>

DefList: {  }
N767 (  2,  2) [000570] -c----------              *  LEA(b+8)  byref  REG NA
Contained
DefList: {  }
N769 (  4,  4) [000427] ---XG-------              *  IND       ref    REG NA <l:$57b, c:$57a>
<RefPosition #936 @769 RefTypeUse <Ivl:34 V40> LCL_VAR BB21 regmask=[allIntButFP] minReg=1 last>
Interval 165: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #937 @770 RefTypeDef <Ivl:165> IND BB21 regmask=[allIntButFP] minReg=1>

DefList: { N769.t427. IND }
N771 (  5,  5) [000253] ---XG-------              *  RETURN    ref    REG NA $17a
<RefPosition #938 @771 RefTypeFixedReg <Reg:rax>  BB21 regmask=[rax] minReg=1>
<RefPosition #939 @771 RefTypeUse <Ivl:165>  BB21 regmask=[rax] minReg=1 last fixed>



CHECKING LAST USES for BB21, liveout={}
==============================
use: {V02}
def: {V40}

NEW BLOCK BB22


Incoming EH boundary; <RefPosition #940 @773 RefTypeBB  BB22 regmask=[] minReg=1>

firstColdLoc = 775
DefList: {  }
N775 (???,???) [000665] ------------              *  IL_OFFSET void   IL offset: 0xf4 REG NA

DefList: {  }
N777 (  1,  1) [000254] -c----------              *  LCL_VAR   ref    V06 loc4         u:2 NA REG NA $164
Contained
DefList: {  }
N779 (  1,  1) [000255] -c----------              *  CNS_INT   ref    null REG NA $VN.Null
Contained
DefList: {  }
N781 (  3,  3) [000256] J------N----              *  EQ        void   REG NA $293

DefList: {  }
N783 (  5,  5) [000257] ------------              *  JTRUE     void   REG NA



CHECKING LAST USES for BB22, liveout={V06}
==============================
use: {V06}
def: {}

NEW BLOCK BB23


Setting BB22 as the predecessor for determining incoming variable registers of BB23
<RefPosition #941 @785 RefTypeBB  BB23 regmask=[] minReg=1>

DefList: {  }
N787 (???,???) [000666] ------------              *  IL_OFFSET void   IL offset: 0xf8 REG NA

DefList: {  }
N789 (  1,  1) [000259] ------------              *  LCL_VAR   ref    V06 loc4         u:2 NA (last use) REG NA $164
Interval 166: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #942 @790 RefTypeDef <Ivl:166> LCL_VAR BB23 regmask=[allIntButFP] minReg=1>

DefList: { N789.t259. LCL_VAR }
N791 (???,???) [000727] ------------              *  PUTARG_REG ref    REG rcx
<RefPosition #943 @791 RefTypeFixedReg <Reg:rcx>  BB23 regmask=[rcx] minReg=1>
<RefPosition #944 @791 RefTypeUse <Ivl:166>  BB23 regmask=[rcx] minReg=1 last fixed>
Interval 167: ref RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #945 @792 RefTypeFixedReg <Reg:rcx>  BB23 regmask=[rcx] minReg=1>
<RefPosition #946 @792 RefTypeDef <Ivl:167> PUTARG_REG BB23 regmask=[rcx] minReg=1 fixed>

DefList: { N791.t727. PUTARG_REG }
N793 (  2, 10) [000542] H-----------              *  CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127
Interval 168: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #947 @794 RefTypeFixedReg <Reg:r11>  BB23 regmask=[r11] minReg=1>
<RefPosition #948 @794 RefTypeDef <Ivl:168> CNS_INT BB23 regmask=[r11] minReg=1 fixed>

DefList: { N791.t727. PUTARG_REG; N793.t542. CNS_INT }
N795 (???,???) [000728] ------------              *  PUTARG_REG long   REG r11
<RefPosition #949 @795 RefTypeFixedReg <Reg:r11>  BB23 regmask=[r11] minReg=1>
<RefPosition #950 @795 RefTypeUse <Ivl:168>  BB23 regmask=[r11] minReg=1 last fixed>
Interval 169: long RefPositions {} physReg:NA Preferences=[allIntButFP]
<RefPosition #951 @796 RefTypeFixedReg <Reg:r11>  BB23 regmask=[r11] minReg=1>
<RefPosition #952 @796 RefTypeDef <Ivl:169> PUTARG_REG BB23 regmask=[r11] minReg=1 fixed>

DefList: { N791.t727. PUTARG_REG; N795.t728. PUTARG_REG }
N797 (  2, 10) [000729] Hc----------              *  CNS_INT(h) long   0xd1ffab1e ftn REG NA
Contained
DefList: { N791.t727. PUTARG_REG; N795.t728. PUTARG_REG }
N799 (  4, 12) [000730] -c----------              *  IND       long   REG NA
Contained
DefList: { N791.t727. PUTARG_REG; N795.t728. PUTARG_REG }
N801 ( 23, 21) [000260] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose REG NA $VN.Void
<RefPosition #953 @801 RefTypeFixedReg <Reg:rcx>  BB23 regmask=[rcx] minReg=1>
<RefPosition #954 @801 RefTypeUse <Ivl:167>  BB23 regmask=[rcx] minReg=1 last fixed>
<RefPosition #955 @801 RefTypeFixedReg <Reg:r11>  BB23 regmask=[r11] minReg=1>
<RefPosition #956 @801 RefTypeUse <Ivl:169>  BB23 regmask=[r11] minReg=1 last fixed>
<RefPosition #957 @802 RefTypeKill <Reg:rax>  BB23 regmask=[rax] minReg=1>
<RefPosition #958 @802 RefTypeKill <Reg:rcx>  BB23 regmask=[rcx] minReg=1>
<RefPosition #959 @802 RefTypeKill <Reg:rdx>  BB23 regmask=[rdx] minReg=1>
<RefPosition #960 @802 RefTypeKill <Reg:r8 >  BB23 regmask=[r8] minReg=1>
<RefPosition #961 @802 RefTypeKill <Reg:r9 >  BB23 regmask=[r9] minReg=1>
<RefPosition #962 @802 RefTypeKill <Reg:r10>  BB23 regmask=[r10] minReg=1>
<RefPosition #963 @802 RefTypeKill <Reg:r11>  BB23 regmask=[r11] minReg=1>



CHECKING LAST USES for BB23, liveout={}
==============================
use: {V06}
def: {}

NEW BLOCK BB24


Setting BB22 as the predecessor for determining incoming variable registers of BB24
<RefPosition #964 @803 RefTypeBB  BB24 regmask=[] minReg=1>

DefList: {  }
N805 (???,???) [000667] ------------              *  IL_OFFSET void   IL offset: 0xff REG NA

DefList: {  }
N807 (  0,  0) [000258] ------------              *  RETFILT   void   REG NA $600



CHECKING LAST USES for BB24, liveout={}
==============================
use: {}
def: {}

NEW BLOCK BB25


No predecessor; 

Setting BB24 as the predecessor for determining incoming variable registers of BB25
<RefPosition #965 @809 RefTypeBB  BB25 regmask=[] minReg=1>

DefList: {  }
N811 ( 14,  5) [000672] --CXG-------              *  CALL help void   HELPER.CORINFO_HELP_RNGCHKFAIL REG NA
<RefPosition #966 @812 RefTypeKill <Reg:rax>  BB25 regmask=[rax] minReg=1>
<RefPosition #967 @812 RefTypeKill <Reg:rcx>  BB25 regmask=[rcx] minReg=1>
<RefPosition #968 @812 RefTypeKill <Reg:rdx>  BB25 regmask=[rdx] minReg=1>
<RefPosition #969 @812 RefTypeKill <Reg:r8 >  BB25 regmask=[r8] minReg=1>
<RefPosition #970 @812 RefTypeKill <Reg:r9 >  BB25 regmask=[r9] minReg=1>
<RefPosition #971 @812 RefTypeKill <Reg:r10>  BB25 regmask=[r10] minReg=1>
<RefPosition #972 @812 RefTypeKill <Reg:r11>  BB25 regmask=[r11] minReg=1>



CHECKING LAST USES for BB25, liveout={}
==============================
use: {}
def: {}

Linear scan intervals BEFORE VALIDATING INTERVALS:
Interval  0: (V00) ref RefPositions {#0@0 #380@271} physReg:rcx Preferences=[rbx rsi rdi r12-r15]
Interval  1: (V01) ref RefPositions {#1@0 #28@27} physReg:rdx Preferences=[rbx rsi rdi r12-r15]
Interval  2: (V02) ref RefPositions {#22@18 #23@23 #43@37 #46@47 #104@87 #186@127 #206@141 #246@167 #563@435 #567@445 #602@485 #619@497 #664@523 #780@605 #786@619 #806@635 #876@681 #899@699 #914@739 #932@761} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval  3: (V03) ref RefPositions {#319@210 #320@219 #334@231 #479@347 #754@583} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval  4: (V04) int RefPositions {#362@244 #497@363 #755@583} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval  5: (V05) ref RefPositions {#378@266 #518@399 #756@583} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval  6: (V07) ref RefPositions {#455@328 #503@379 #522@403} physReg:NA Preferences=[rbx rsi rdi r12-r15] RelatedInterval <V21/L17>
Interval  7: (V10) int RefPositions {#897@692 #910@729 #926@749 #929@752 #930@753} physReg:NA Preferences=[rbx rsi rdi r12-r15] RelatedInterval <I163>
Interval  8: (V12) ref RefPositions {#20@12 #21@17} physReg:NA Preferences=[allIntButFP] RelatedInterval <V02/L2>
Interval  9: (V13) ref RefPositions {#65@58 #85@77 #109@91} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 10: (V14) ref RefPositions {#140@102 #167@119 #191@131} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 11: (V15) ref RefPositions {#225@152 #227@155 #251@171} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 12: (V16) ref RefPositions {#473@338 #474@343 #493@351} physReg:NA Preferences=[rbx rsi rdi r12-r15] RelatedInterval <V17/L13>
Interval 13: (V17) ref RefPositions {#494@352 #495@355} physReg:NA Preferences=[allIntButFP] RelatedInterval <V18/L14>
Interval 14: (V18) ref RefPositions {#496@356 #499@371 #506@385} physReg:NA Preferences=[allIntButFP] RelatedInterval <V19/L15>
Interval 15: (V19) ref RefPositions {#500@372 #501@375 #507@386 #508@389 #562@427 #573@455} physReg:NA Preferences=[rbx rsi rdi r12-r15] RelatedInterval <V25/L21>
Interval 16: (V20) ref RefPositions {#502@376 #509@390 #543@413} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 17: (V21) ref RefPositions {#504@380 #541@408 #548@417} physReg:NA Preferences=[rdx]
Interval 18: (V22) ref RefPositions {#570@448 #575@459} physReg:NA Preferences=[allIntButFP] RelatedInterval <V26/L22>
Interval 19: (V23) ref RefPositions {#566@438 #571@451} physReg:NA Preferences=[allIntButFP] RelatedInterval <V24/L20>
Interval 20: (V24) ref RefPositions {#572@452 #715@557} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 21: (V25) ref RefPositions {#574@456 #682@537} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 22: (V26) ref RefPositions {#576@460 #577@465 #639@506 #686@541} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 23: (V27) ref RefPositions {#658@516 #659@519 #679@531 #690@545} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 24: (V28) ref RefPositions {#596@478 #597@481 #617@493 #624@501 #638@505} physReg:NA Preferences=[rbx rsi rdi r12-r15] RelatedInterval <V26/L22>
Interval 25: (V29) ref RefPositions {#805@630 #855@663 #874@675 #881@685} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 26: (V30) ref RefPositions {#83@66 #84@73 #90@81} physReg:NA Preferences=[rdx]
Interval 27: (V31) ref RefPositions {#275@176 #276@179 #278@183 #297@195} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 28: (V32) ref RefPositions {#315@202 #316@207} physReg:NA Preferences=[allIntButFP]
Interval 29: (V35) ref RefPositions {#783@608 #784@613} physReg:NA Preferences=[allIntButFP]
Interval 30: (V36) ref RefPositions {#827@646 #829@649 #860@667} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 31: (V37) int RefPositions {#809@638 #875@675} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 32: (V38) int RefPositions {#906@716 #908@722 #911@729} physReg:NA Preferences=[allIntButFP]
Interval 33: (V39) int RefPositions {#902@702 #903@707 #905@715} physReg:NA Preferences=[allIntButFP] RelatedInterval <V38/L32>
Interval 34: (V40) ref RefPositions {#935@764 #936@769} physReg:NA Preferences=[allIntButFP]
Interval 35: (V41) ref RefPositions {#373@248 #374@257 #375@263} physReg:NA Preferences=[allIntButFP]
Interval 36: (V42) ref RefPositions {#709@550 #711@553} physReg:NA Preferences=[rdx]
Interval 37: long (constant) RefPositions {#3@6 #5@7} physReg:NA Preferences=[rcx]
Interval 38: long RefPositions {#7@8 #9@9} physReg:NA Preferences=[rcx]
Interval 39: ref RefPositions {#18@10 #19@11} physReg:NA Preferences=[rax] RelatedInterval <V12/L8>
Interval 40: byref RefPositions {#24@24 #26@27} physReg:NA Preferences=[rcx]
Interval 41: int (constant) RefPositions {#42@36 #44@37} physReg:NA Preferences=[allIntButFP]
Interval 42: int (constant) RefPositions {#45@46 #47@47} physReg:NA Preferences=[allIntButFP]
Interval 43: long (constant) RefPositions {#48@52 #50@53} physReg:NA Preferences=[rcx]
Interval 44: long RefPositions {#52@54 #54@55} physReg:NA Preferences=[rcx]
Interval 45: ref RefPositions {#63@56 #64@57} physReg:NA Preferences=[rax] RelatedInterval <V13/L9>
Interval 46: long (constant) RefPositions {#66@60 #68@61} physReg:NA Preferences=[rcx]
Interval 47: long RefPositions {#70@62 #72@63} physReg:NA Preferences=[rcx]
Interval 48: ref RefPositions {#81@64 #82@65} physReg:NA Preferences=[rax] RelatedInterval <V30/L26>
Interval 49: byref RefPositions {#86@78 #88@81} physReg:NA Preferences=[rcx]
Interval 50: byref RefPositions {#105@88 #107@91} physReg:NA Preferences=[rcx]
Interval 51: long (constant) RefPositions {#123@96 #125@97} physReg:NA Preferences=[rcx]
Interval 52: long RefPositions {#127@98 #129@99} physReg:NA Preferences=[rcx]
Interval 53: ref RefPositions {#138@100 #139@101} physReg:NA Preferences=[rax] RelatedInterval <V14/L10>
Interval 54: long (constant) RefPositions {#141@104 #143@105} physReg:NA Preferences=[rcx]
Interval 55: long RefPositions {#145@106 #152@111} physReg:NA Preferences=[rcx]
Interval 56: int (constant) RefPositions {#146@108 #148@109} physReg:NA Preferences=[rdx]
Interval 57: int RefPositions {#150@110 #154@111} physReg:NA Preferences=[rdx]
Interval 58: long RefPositions {#163@112} physReg:NA Preferences=[rax]
Interval 59: long (constant) RefPositions {#164@114 #165@115} physReg:NA Preferences=[allIntButFP]
Interval 60: ref RefPositions {#166@116 #172@121} physReg:NA Preferences=[rdx]
Interval 61: byref RefPositions {#168@120 #170@121} physReg:NA Preferences=[rcx]
Interval 62: byref RefPositions {#187@128 #189@131} physReg:NA Preferences=[rcx]
Interval 63: ref (constant) RefPositions {#205@140 #207@141} physReg:NA Preferences=[allIntButFP]
Interval 64: long (constant) RefPositions {#208@146 #210@147} physReg:NA Preferences=[rcx]
Interval 65: long RefPositions {#212@148 #214@149} physReg:NA Preferences=[rcx]
Interval 66: ref RefPositions {#223@150 #224@151} physReg:NA Preferences=[rax] RelatedInterval <V15/L11>
Interval 67: ref (specialPutArg) RefPositions {#229@156 #236@161} physReg:NA Preferences=[rcx] RelatedInterval <V15/L11>
Interval 68: ref (constant) RefPositions {#230@158 #232@159} physReg:NA Preferences=[rdx]
Interval 69: ref RefPositions {#234@160 #238@161} physReg:NA Preferences=[rdx]
Interval 70: byref RefPositions {#247@168 #249@171} physReg:NA Preferences=[rcx]
Interval 71: ref RefPositions {#273@174 #274@175} physReg:NA Preferences=[rax] RelatedInterval <V31/L27>
Interval 72: ref (specialPutArg) RefPositions {#280@184 #287@189} physReg:NA Preferences=[rcx] RelatedInterval <V31/L27>
Interval 73: int (constant) RefPositions {#281@186 #283@187} physReg:NA Preferences=[rdx]
Interval 74: int RefPositions {#285@188 #289@189} physReg:NA Preferences=[rdx]
Interval 75: int RefPositions {#298@196 #300@197} physReg:NA Preferences=[rcx]
Interval 76: int RefPositions {#302@198 #304@199} physReg:NA Preferences=[rcx]
Interval 77: ref RefPositions {#313@200 #314@201} physReg:NA Preferences=[rax] RelatedInterval <V32/L28>
Interval 78: ref RefPositions {#317@208 #318@209} physReg:NA Preferences=[allIntButFP] RelatedInterval <V03/L3>
Interval 79: int RefPositions {#321@220 #323@221} physReg:NA Preferences=[r9]
Interval 80: int RefPositions {#325@222 #343@237} physReg:NA Preferences=[r9]
Interval 81: long (constant) RefPositions {#326@224 #327@225} physReg:NA Preferences=[allIntButFP]
Interval 82: ref RefPositions {#328@226 #330@227} physReg:NA Preferences=[rdx]
Interval 83: ref RefPositions {#332@228 #345@237} physReg:NA Preferences=[rdx]
Interval 84: ref (specialPutArg) RefPositions {#336@232 #347@237} physReg:NA Preferences=[rcx] RelatedInterval <V03/L3>
Interval 85: int (constant) RefPositions {#337@234 #339@235} physReg:NA Preferences=[r8]
Interval 86: int RefPositions {#341@236 #349@237} physReg:NA Preferences=[r8]
Interval 87: int RefPositions {#358@238 #359@241} physReg:NA Preferences=[rax]
Interval 88: int RefPositions {#360@242 #361@243} physReg:NA Preferences=[allIntButFP] RelatedInterval <V04/L4>
Interval 89: ref RefPositions {#371@246 #372@247} physReg:NA Preferences=[rax] RelatedInterval <V41/L35>
Interval 90: ref RefPositions {#376@264 #377@265} physReg:NA Preferences=[allIntButFP] RelatedInterval <V05/L5>
Interval 91: ref RefPositions {#382@272 #390@281} physReg:NA Preferences=[rcx]
Interval 92: long (constant) RefPositions {#384@274 #386@275} physReg:NA Preferences=[r11]
Interval 93: long RefPositions {#388@276 #392@281} physReg:NA Preferences=[r11]
Interval 94: ref RefPositions {#401@282 #402@283} physReg:NA Preferences=[rax]
Interval 95: ref RefPositions {#404@290 #406@291} physReg:NA Preferences=[rcx]
Interval 96: ref RefPositions {#408@292 #416@301} physReg:NA Preferences=[rcx]
Interval 97: long (constant) RefPositions {#410@294 #412@295} physReg:NA Preferences=[r11]
Interval 98: long RefPositions {#414@296 #418@301} physReg:NA Preferences=[r11]
Interval 99: int RefPositions {#427@302 #428@305} physReg:NA Preferences=[rax]
Interval 100: ref RefPositions {#430@314 #432@315} physReg:NA Preferences=[rcx]
Interval 101: ref RefPositions {#434@316 #442@325} physReg:NA Preferences=[rcx]
Interval 102: long (constant) RefPositions {#436@318 #438@319} physReg:NA Preferences=[r11]
Interval 103: long RefPositions {#440@320 #444@325} physReg:NA Preferences=[r11]
Interval 104: ref RefPositions {#453@326 #454@327} physReg:NA Preferences=[rax] RelatedInterval <V07/L6>
Interval 105: long (constant) RefPositions {#456@332 #458@333} physReg:NA Preferences=[rcx]
Interval 106: long RefPositions {#460@334 #462@335} physReg:NA Preferences=[rcx]
Interval 107: ref RefPositions {#471@336 #472@337} physReg:NA Preferences=[rax] RelatedInterval <V16/L12>
Interval 108: byref RefPositions {#475@344 #477@347} physReg:NA Preferences=[rcx]
Interval 109: long (constant) RefPositions {#510@392 #511@393} physReg:NA Preferences=[allIntButFP]
Interval 110: ref RefPositions {#512@394 #514@395} physReg:NA Preferences=[rdx]
Interval 111: ref RefPositions {#516@396 #526@405} physReg:NA Preferences=[rdx]
Interval 112: ref (specialPutArg) RefPositions {#520@400 #528@405} physReg:NA Preferences=[rcx] RelatedInterval <V05/L5>
Interval 113: ref RefPositions {#524@404 #530@405} physReg:NA Preferences=[r8]
Interval 114: ref RefPositions {#539@406 #540@407} physReg:NA Preferences=[rax] RelatedInterval <V21/L17>
Interval 115: byref RefPositions {#544@414 #546@417} physReg:NA Preferences=[rcx]
Interval 116: ref RefPositions {#564@436 #565@437} physReg:NA Preferences=[allIntButFP] RelatedInterval <V23/L19>
Interval 117: ref RefPositions {#568@446 #569@447} physReg:NA Preferences=[allIntButFP] RelatedInterval <V22/L18>
Interval 118: long (constant) RefPositions {#579@472 #581@473} physReg:NA Preferences=[rcx]
Interval 119: long RefPositions {#583@474 #585@475} physReg:NA Preferences=[rcx]
Interval 120: ref RefPositions {#594@476 #595@477} physReg:NA Preferences=[rax] RelatedInterval <V28/L24>
Interval 121: byref RefPositions {#598@482 #600@485} physReg:NA Preferences=[rcx]
Interval 122: long (constant) RefPositions {#616@492 #618@493} physReg:NA Preferences=[allIntButFP]
Interval 123: byref RefPositions {#620@498 #622@501} physReg:NA Preferences=[rcx]
Interval 124: long (constant) RefPositions {#641@510 #643@511} physReg:NA Preferences=[rcx]
Interval 125: long RefPositions {#645@512 #647@513} physReg:NA Preferences=[rcx]
Interval 126: ref RefPositions {#656@514 #657@515} physReg:NA Preferences=[rax] RelatedInterval <V27/L23>
Interval 127: byref RefPositions {#660@520 #662@523} physReg:NA Preferences=[rcx]
Interval 128: long (constant) RefPositions {#678@530 #680@531} physReg:NA Preferences=[allIntButFP]
Interval 129: ref RefPositions {#684@538 #694@547} physReg:NA Preferences=[rcx]
Interval 130: ref RefPositions {#688@542 #696@547} physReg:NA Preferences=[rdx]
Interval 131: ref RefPositions {#692@546 #698@547} physReg:NA Preferences=[r8]
Interval 132: ref RefPositions {#707@548 #708@549} physReg:NA Preferences=[rax] RelatedInterval <V42/L36>
Interval 133: ref RefPositions {#713@554 #719@559} physReg:NA Preferences=[rdx]
Interval 134: ref RefPositions {#717@558 #721@559} physReg:NA Preferences=[rcx]
Interval 135: ref RefPositions {#729@564 #731@565} physReg:NA Preferences=[rcx]
Interval 136: ref RefPositions {#733@566 #741@575} physReg:NA Preferences=[rcx]
Interval 137: long (constant) RefPositions {#735@568 #737@569} physReg:NA Preferences=[r11]
Interval 138: long RefPositions {#739@570 #743@575} physReg:NA Preferences=[r11]
Interval 139: int RefPositions {#752@576 #753@579} physReg:NA Preferences=[rax]
Interval 140: ref RefPositions {#758@586 #760@587} physReg:NA Preferences=[rcx]
Interval 141: ref RefPositions {#762@588 #770@597} physReg:NA Preferences=[rcx]
Interval 142: long (constant) RefPositions {#764@590 #766@591} physReg:NA Preferences=[r11]
Interval 143: long RefPositions {#768@592 #772@597} physReg:NA Preferences=[r11]
Interval 144: ref RefPositions {#781@606 #782@607} physReg:NA Preferences=[allIntButFP] RelatedInterval <V35/L29>
Interval 145: int RefPositions {#785@614 #787@619} physReg:NA Preferences=[allIntButFP]
Interval 146: long (constant) RefPositions {#788@624 #790@625} physReg:NA Preferences=[rcx]
Interval 147: long RefPositions {#792@626 #794@627} physReg:NA Preferences=[rcx]
Interval 148: ref RefPositions {#803@628 #804@629} physReg:NA Preferences=[rax] RelatedInterval <V29/L25>
Interval 149: int RefPositions {#807@636 #808@637} physReg:NA Preferences=[allIntButFP] RelatedInterval <V37/L31>
Interval 150: long (constant) RefPositions {#810@640 #812@641} physReg:NA Preferences=[rcx]
Interval 151: long RefPositions {#814@642 #816@643} physReg:NA Preferences=[rcx]
Interval 152: ref RefPositions {#825@644 #826@645} physReg:NA Preferences=[rax] RelatedInterval <V36/L30>
Interval 153: ref (specialPutArg) RefPositions {#831@650 #843@659} physReg:NA Preferences=[rcx] RelatedInterval <V36/L30>
Interval 154: int (constant) RefPositions {#832@652 #834@653} physReg:NA Preferences=[rdx]
Interval 155: int RefPositions {#836@654 #845@659} physReg:NA Preferences=[rdx]
Interval 156: ref (constant) RefPositions {#837@656 #839@657} physReg:NA Preferences=[r8]
Interval 157: ref RefPositions {#841@658 #847@659} physReg:NA Preferences=[r8]
Interval 158: byref RefPositions {#856@664 #858@667} physReg:NA Preferences=[rcx]
Interval 159: byref RefPositions {#877@682 #879@685} physReg:NA Preferences=[rcx]
Interval 160: int (constant) RefPositions {#895@690 #896@691} physReg:NA Preferences=[allIntButFP] RelatedInterval <V10/L7>
Interval 161: int RefPositions {#900@700 #901@701} physReg:NA Preferences=[allIntButFP] RelatedInterval <V39/L33>
Interval 162: ref (specialPutArg) RefPositions {#916@740 #918@741} physReg:NA Preferences=[rcx] RelatedInterval <V02/L2>
Interval 163: int RefPositions {#927@750 #928@751} physReg:NA Preferences=[allIntButFP] RelatedInterval <V10/L7>
Interval 164: ref RefPositions {#933@762 #934@763} physReg:NA Preferences=[allIntButFP] RelatedInterval <V40/L34>
Interval 165: ref RefPositions {#937@770 #939@771} physReg:NA Preferences=[rax]
Interval 166: ref RefPositions {#942@790 #944@791} physReg:NA Preferences=[rcx]
Interval 167: ref RefPositions {#946@792 #954@801} physReg:NA Preferences=[rcx]
Interval 168: long (constant) RefPositions {#948@794 #950@795} physReg:NA Preferences=[r11]
Interval 169: long RefPositions {#952@796 #956@801} physReg:NA Preferences=[r11]

------------
REFPOSITIONS BEFORE VALIDATING INTERVALS: 
------------
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00>  BB00 regmask=[rcx] minReg=1 fixed regOptional>
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V01>  BB00 regmask=[rdx] minReg=1 fixed regOptional>
<RefPosition #2   @1   RefTypeBB  BB01 regmask=[] minReg=1>
<RefPosition #3   @6   RefTypeDef <Ivl:37> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #4   @7   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #5   @7   RefTypeUse <Ivl:37>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #6   @8   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #7   @8   RefTypeDef <Ivl:38> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #8   @9   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #9   @9   RefTypeUse <Ivl:38>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #10  @10  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #11  @10  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #12  @10  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #13  @10  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #14  @10  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #15  @10  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #16  @10  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #17  @10  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #18  @10  RefTypeDef <Ivl:39> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #19  @11  RefTypeUse <Ivl:39>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #20  @12  RefTypeDef <Ivl:8 V12> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #21  @17  RefTypeUse <Ivl:8 V12> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #22  @18  RefTypeDef <Ivl:2 V02> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #23  @23  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #24  @24  RefTypeDef <Ivl:40> LEA BB01 regmask=[rcx] minReg=1>
<RefPosition #25  @27  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #26  @27  RefTypeUse <Ivl:40>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #27  @27  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #28  @27  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #29  @28  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #30  @28  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #31  @28  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #32  @28  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #33  @28  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #34  @28  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #35  @28  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #36  @28  RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1 last>
<RefPosition #37  @28  RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1 last>
<RefPosition #38  @28  RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1 last>
<RefPosition #39  @28  RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1 last>
<RefPosition #40  @28  RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1 last>
<RefPosition #41  @28  RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1 last>
<RefPosition #42  @36  RefTypeDef <Ivl:41> CNS_INT BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #43  @37  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #44  @37  RefTypeUse <Ivl:41>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #45  @46  RefTypeDef <Ivl:42> CNS_INT BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #46  @47  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #47  @47  RefTypeUse <Ivl:42>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #48  @52  RefTypeDef <Ivl:43> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #49  @53  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #50  @53  RefTypeUse <Ivl:43>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #51  @54  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #52  @54  RefTypeDef <Ivl:44> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #53  @55  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #54  @55  RefTypeUse <Ivl:44>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #55  @56  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #56  @56  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #57  @56  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #58  @56  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #59  @56  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #60  @56  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #61  @56  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #62  @56  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #63  @56  RefTypeDef <Ivl:45> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #64  @57  RefTypeUse <Ivl:45>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #65  @58  RefTypeDef <Ivl:9 V13> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #66  @60  RefTypeDef <Ivl:46> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #67  @61  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #68  @61  RefTypeUse <Ivl:46>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #69  @62  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #70  @62  RefTypeDef <Ivl:47> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #71  @63  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #72  @63  RefTypeUse <Ivl:47>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #73  @64  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #74  @64  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #75  @64  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #76  @64  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #77  @64  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #78  @64  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #79  @64  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #80  @64  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #81  @64  RefTypeDef <Ivl:48> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #82  @65  RefTypeUse <Ivl:48>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #83  @66  RefTypeDef <Ivl:26 V30> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #84  @73  RefTypeUse <Ivl:26 V30> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #85  @77  RefTypeUse <Ivl:9 V13> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #86  @78  RefTypeDef <Ivl:49> LEA BB01 regmask=[rcx] minReg=1>
<RefPosition #87  @81  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #88  @81  RefTypeUse <Ivl:49>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #89  @81  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #90  @81  RefTypeUse <Ivl:26 V30> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #91  @82  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #92  @82  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #93  @82  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #94  @82  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #95  @82  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #96  @82  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #97  @82  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #98  @82  RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1 last>
<RefPosition #99  @82  RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1 last>
<RefPosition #100 @82  RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1 last>
<RefPosition #101 @82  RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1 last>
<RefPosition #102 @82  RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1 last>
<RefPosition #103 @82  RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1 last>
<RefPosition #104 @87  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #105 @88  RefTypeDef <Ivl:50> LEA BB01 regmask=[rcx] minReg=1>
<RefPosition #106 @91  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #107 @91  RefTypeUse <Ivl:50>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #108 @91  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #109 @91  RefTypeUse <Ivl:9 V13> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #110 @92  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #111 @92  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #112 @92  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #113 @92  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #114 @92  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #115 @92  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #116 @92  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #117 @92  RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1 last>
<RefPosition #118 @92  RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1 last>
<RefPosition #119 @92  RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1 last>
<RefPosition #120 @92  RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1 last>
<RefPosition #121 @92  RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1 last>
<RefPosition #122 @92  RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1 last>
<RefPosition #123 @96  RefTypeDef <Ivl:51> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #124 @97  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #125 @97  RefTypeUse <Ivl:51>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #126 @98  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #127 @98  RefTypeDef <Ivl:52> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #128 @99  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #129 @99  RefTypeUse <Ivl:52>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #130 @100 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #131 @100 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #132 @100 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #133 @100 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #134 @100 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #135 @100 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #136 @100 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #137 @100 RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #138 @100 RefTypeDef <Ivl:53> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #139 @101 RefTypeUse <Ivl:53>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #140 @102 RefTypeDef <Ivl:10 V14> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #141 @104 RefTypeDef <Ivl:54> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #142 @105 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #143 @105 RefTypeUse <Ivl:54>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #144 @106 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #145 @106 RefTypeDef <Ivl:55> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #146 @108 RefTypeDef <Ivl:56> CNS_INT BB01 regmask=[rdx] minReg=1>
<RefPosition #147 @109 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #148 @109 RefTypeUse <Ivl:56>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #149 @110 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #150 @110 RefTypeDef <Ivl:57> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>
<RefPosition #151 @111 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #152 @111 RefTypeUse <Ivl:55>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #153 @111 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #154 @111 RefTypeUse <Ivl:57>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #155 @112 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #156 @112 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #157 @112 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #158 @112 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #159 @112 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #160 @112 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #161 @112 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #162 @112 RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #163 @112 RefTypeDef <Ivl:58> CALL BB01 regmask=[rax] minReg=1 last fixed local>
<RefPosition #164 @114 RefTypeDef <Ivl:59> CNS_INT BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #165 @115 RefTypeUse <Ivl:59>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #166 @116 RefTypeDef <Ivl:60> IND BB01 regmask=[rdx] minReg=1>
<RefPosition #167 @119 RefTypeUse <Ivl:10 V14> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #168 @120 RefTypeDef <Ivl:61> LEA BB01 regmask=[rcx] minReg=1>
<RefPosition #169 @121 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #170 @121 RefTypeUse <Ivl:61>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #171 @121 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #172 @121 RefTypeUse <Ivl:60>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #173 @122 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #174 @122 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #175 @122 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #176 @122 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #177 @122 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #178 @122 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #179 @122 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #180 @122 RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1 last>
<RefPosition #181 @122 RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1 last>
<RefPosition #182 @122 RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1 last>
<RefPosition #183 @122 RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1 last>
<RefPosition #184 @122 RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1 last>
<RefPosition #185 @122 RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1 last>
<RefPosition #186 @127 RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #187 @128 RefTypeDef <Ivl:62> LEA BB01 regmask=[rcx] minReg=1>
<RefPosition #188 @131 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #189 @131 RefTypeUse <Ivl:62>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #190 @131 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #191 @131 RefTypeUse <Ivl:10 V14> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #192 @132 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #193 @132 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #194 @132 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #195 @132 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #196 @132 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #197 @132 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #198 @132 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #199 @132 RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1 last>
<RefPosition #200 @132 RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1 last>
<RefPosition #201 @132 RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1 last>
<RefPosition #202 @132 RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1 last>
<RefPosition #203 @132 RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1 last>
<RefPosition #204 @132 RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1 last>
<RefPosition #205 @140 RefTypeDef <Ivl:63> CNS_INT BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #206 @141 RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #207 @141 RefTypeUse <Ivl:63>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #208 @146 RefTypeDef <Ivl:64> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #209 @147 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #210 @147 RefTypeUse <Ivl:64>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #211 @148 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #212 @148 RefTypeDef <Ivl:65> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #213 @149 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #214 @149 RefTypeUse <Ivl:65>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #215 @150 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #216 @150 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #217 @150 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #218 @150 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #219 @150 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #220 @150 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #221 @150 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #222 @150 RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #223 @150 RefTypeDef <Ivl:66> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #224 @151 RefTypeUse <Ivl:66>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #225 @152 RefTypeDef <Ivl:11 V15> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #226 @155 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #227 @155 RefTypeUse <Ivl:11 V15> LCL_VAR BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #228 @156 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #229 @156 RefTypeDef <Ivl:67> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #230 @158 RefTypeDef <Ivl:68> CNS_INT BB01 regmask=[rdx] minReg=1>
<RefPosition #231 @159 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #232 @159 RefTypeUse <Ivl:68>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #233 @160 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #234 @160 RefTypeDef <Ivl:69> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>
<RefPosition #235 @161 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #236 @161 RefTypeUse <Ivl:67>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #237 @161 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #238 @161 RefTypeUse <Ivl:69>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #239 @162 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #240 @162 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #241 @162 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #242 @162 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #243 @162 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #244 @162 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #245 @162 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #246 @167 RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #247 @168 RefTypeDef <Ivl:70> LEA BB01 regmask=[rcx] minReg=1>
<RefPosition #248 @171 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #249 @171 RefTypeUse <Ivl:70>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #250 @171 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #251 @171 RefTypeUse <Ivl:11 V15> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #252 @172 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #253 @172 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #254 @172 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #255 @172 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #256 @172 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #257 @172 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #258 @172 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #259 @172 RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1 last>
<RefPosition #260 @172 RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1 last>
<RefPosition #261 @172 RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1 last>
<RefPosition #262 @172 RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1 last>
<RefPosition #263 @172 RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1 last>
<RefPosition #264 @172 RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1 last>
<RefPosition #265 @174 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #266 @174 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #267 @174 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #268 @174 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #269 @174 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #270 @174 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #271 @174 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #272 @174 RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #273 @174 RefTypeDef <Ivl:71> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #274 @175 RefTypeUse <Ivl:71>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #275 @176 RefTypeDef <Ivl:27 V31> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #276 @179 RefTypeUse <Ivl:27 V31> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #277 @183 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #278 @183 RefTypeUse <Ivl:27 V31> LCL_VAR BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #279 @184 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #280 @184 RefTypeDef <Ivl:72> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #281 @186 RefTypeDef <Ivl:73> CNS_INT BB01 regmask=[rdx] minReg=1>
<RefPosition #282 @187 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #283 @187 RefTypeUse <Ivl:73>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #284 @188 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #285 @188 RefTypeDef <Ivl:74> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>
<RefPosition #286 @189 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #287 @189 RefTypeUse <Ivl:72>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #288 @189 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #289 @189 RefTypeUse <Ivl:74>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #290 @190 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #291 @190 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #292 @190 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #293 @190 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #294 @190 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #295 @190 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #296 @190 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #297 @195 RefTypeUse <Ivl:27 V31> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #298 @196 RefTypeDef <Ivl:75> IND BB01 regmask=[rcx] minReg=1>
<RefPosition #299 @197 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #300 @197 RefTypeUse <Ivl:75>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #301 @198 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #302 @198 RefTypeDef <Ivl:76> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #303 @199 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #304 @199 RefTypeUse <Ivl:76>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #305 @200 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #306 @200 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #307 @200 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #308 @200 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #309 @200 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #310 @200 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #311 @200 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #312 @200 RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #313 @200 RefTypeDef <Ivl:77> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #314 @201 RefTypeUse <Ivl:77>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #315 @202 RefTypeDef <Ivl:28 V32> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #316 @207 RefTypeUse <Ivl:28 V32> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #317 @208 RefTypeDef <Ivl:78> IND BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #318 @209 RefTypeUse <Ivl:78>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #319 @210 RefTypeDef <Ivl:3 V03> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #320 @219 RefTypeUse <Ivl:3 V03> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #321 @220 RefTypeDef <Ivl:79> IND BB01 regmask=[r9] minReg=1>
<RefPosition #322 @221 RefTypeFixedReg <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #323 @221 RefTypeUse <Ivl:79>  BB01 regmask=[r9] minReg=1 last fixed>
<RefPosition #324 @222 RefTypeFixedReg <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #325 @222 RefTypeDef <Ivl:80> PUTARG_REG BB01 regmask=[r9] minReg=1 fixed>
<RefPosition #326 @224 RefTypeDef <Ivl:81> CNS_INT BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #327 @225 RefTypeUse <Ivl:81>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #328 @226 RefTypeDef <Ivl:82> IND BB01 regmask=[rdx] minReg=1>
<RefPosition #329 @227 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #330 @227 RefTypeUse <Ivl:82>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #331 @228 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #332 @228 RefTypeDef <Ivl:83> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>
<RefPosition #333 @231 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #334 @231 RefTypeUse <Ivl:3 V03> LCL_VAR BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #335 @232 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #336 @232 RefTypeDef <Ivl:84> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #337 @234 RefTypeDef <Ivl:85> CNS_INT BB01 regmask=[r8] minReg=1>
<RefPosition #338 @235 RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #339 @235 RefTypeUse <Ivl:85>  BB01 regmask=[r8] minReg=1 last fixed>
<RefPosition #340 @236 RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #341 @236 RefTypeDef <Ivl:86> PUTARG_REG BB01 regmask=[r8] minReg=1 fixed>
<RefPosition #342 @237 RefTypeFixedReg <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #343 @237 RefTypeUse <Ivl:80>  BB01 regmask=[r9] minReg=1 last fixed>
<RefPosition #344 @237 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #345 @237 RefTypeUse <Ivl:83>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #346 @237 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #347 @237 RefTypeUse <Ivl:84>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #348 @237 RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #349 @237 RefTypeUse <Ivl:86>  BB01 regmask=[r8] minReg=1 last fixed>
<RefPosition #350 @238 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #351 @238 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #352 @238 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #353 @238 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #354 @238 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #355 @238 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #356 @238 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #357 @238 RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #358 @238 RefTypeDef <Ivl:87> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #359 @241 RefTypeUse <Ivl:87>  BB01 regmask=[allIntButFP] minReg=1 last regOptional>
<RefPosition #360 @242 RefTypeDef <Ivl:88> GE BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #361 @243 RefTypeUse <Ivl:88>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #362 @244 RefTypeDef <Ivl:4 V04> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #363 @246 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #364 @246 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #365 @246 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #366 @246 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #367 @246 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #368 @246 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #369 @246 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #370 @246 RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #371 @246 RefTypeDef <Ivl:89> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #372 @247 RefTypeUse <Ivl:89>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #373 @248 RefTypeDef <Ivl:35 V41> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #374 @257 RefTypeUse <Ivl:35 V41> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #375 @263 RefTypeUse <Ivl:35 V41> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #376 @264 RefTypeDef <Ivl:90> IND BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #377 @265 RefTypeUse <Ivl:90>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #378 @266 RefTypeDef <Ivl:5 V05> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #379 @271 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #380 @271 RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #381 @272 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #382 @272 RefTypeDef <Ivl:91> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #383 @274 RefTypeFixedReg <Reg:r11>  BB01 regmask=[r11] minReg=1>
<RefPosition #384 @274 RefTypeDef <Ivl:92> CNS_INT BB01 regmask=[r11] minReg=1 fixed>
<RefPosition #385 @275 RefTypeFixedReg <Reg:r11>  BB01 regmask=[r11] minReg=1>
<RefPosition #386 @275 RefTypeUse <Ivl:92>  BB01 regmask=[r11] minReg=1 last fixed>
<RefPosition #387 @276 RefTypeFixedReg <Reg:r11>  BB01 regmask=[r11] minReg=1>
<RefPosition #388 @276 RefTypeDef <Ivl:93> PUTARG_REG BB01 regmask=[r11] minReg=1 fixed>
<RefPosition #389 @281 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #390 @281 RefTypeUse <Ivl:91>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #391 @281 RefTypeFixedReg <Reg:r11>  BB01 regmask=[r11] minReg=1>
<RefPosition #392 @281 RefTypeUse <Ivl:93>  BB01 regmask=[r11] minReg=1 last fixed>
<RefPosition #393 @282 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #394 @282 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #395 @282 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #396 @282 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #397 @282 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #398 @282 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #399 @282 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #400 @282 RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #401 @282 RefTypeDef <Ivl:94> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #402 @283 RefTypeUse <Ivl:94>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #403 @285 RefTypeBB  BB02 regmask=[] minReg=1>
<RefPosition #404 @290 RefTypeDef <Ivl:95> LCL_VAR BB02 regmask=[rcx] minReg=1>
<RefPosition #405 @291 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #406 @291 RefTypeUse <Ivl:95>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #407 @292 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #408 @292 RefTypeDef <Ivl:96> PUTARG_REG BB02 regmask=[rcx] minReg=1 fixed>
<RefPosition #409 @294 RefTypeFixedReg <Reg:r11>  BB02 regmask=[r11] minReg=1>
<RefPosition #410 @294 RefTypeDef <Ivl:97> CNS_INT BB02 regmask=[r11] minReg=1 fixed>
<RefPosition #411 @295 RefTypeFixedReg <Reg:r11>  BB02 regmask=[r11] minReg=1>
<RefPosition #412 @295 RefTypeUse <Ivl:97>  BB02 regmask=[r11] minReg=1 last fixed>
<RefPosition #413 @296 RefTypeFixedReg <Reg:r11>  BB02 regmask=[r11] minReg=1>
<RefPosition #414 @296 RefTypeDef <Ivl:98> PUTARG_REG BB02 regmask=[r11] minReg=1 fixed>
<RefPosition #415 @301 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #416 @301 RefTypeUse <Ivl:96>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #417 @301 RefTypeFixedReg <Reg:r11>  BB02 regmask=[r11] minReg=1>
<RefPosition #418 @301 RefTypeUse <Ivl:98>  BB02 regmask=[r11] minReg=1 last fixed>
<RefPosition #419 @302 RefTypeKill <Reg:rax>  BB02 regmask=[rax] minReg=1 last>
<RefPosition #420 @302 RefTypeKill <Reg:rcx>  BB02 regmask=[rcx] minReg=1 last>
<RefPosition #421 @302 RefTypeKill <Reg:rdx>  BB02 regmask=[rdx] minReg=1 last>
<RefPosition #422 @302 RefTypeKill <Reg:r8 >  BB02 regmask=[r8] minReg=1 last>
<RefPosition #423 @302 RefTypeKill <Reg:r9 >  BB02 regmask=[r9] minReg=1 last>
<RefPosition #424 @302 RefTypeKill <Reg:r10>  BB02 regmask=[r10] minReg=1 last>
<RefPosition #425 @302 RefTypeKill <Reg:r11>  BB02 regmask=[r11] minReg=1 last>
<RefPosition #426 @302 RefTypeFixedReg <Reg:rax>  BB02 regmask=[rax] minReg=1>
<RefPosition #427 @302 RefTypeDef <Ivl:99> CALL BB02 regmask=[rax] minReg=1 fixed>
<RefPosition #428 @305 RefTypeUse <Ivl:99>  BB02 regmask=[allIntButFP] minReg=1 last regOptional>
<RefPosition #429 @309 RefTypeBB  BB03 regmask=[] minReg=1>
<RefPosition #430 @314 RefTypeDef <Ivl:100> LCL_VAR BB03 regmask=[rcx] minReg=1>
<RefPosition #431 @315 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #432 @315 RefTypeUse <Ivl:100>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #433 @316 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #434 @316 RefTypeDef <Ivl:101> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>
<RefPosition #435 @318 RefTypeFixedReg <Reg:r11>  BB03 regmask=[r11] minReg=1>
<RefPosition #436 @318 RefTypeDef <Ivl:102> CNS_INT BB03 regmask=[r11] minReg=1 fixed>
<RefPosition #437 @319 RefTypeFixedReg <Reg:r11>  BB03 regmask=[r11] minReg=1>
<RefPosition #438 @319 RefTypeUse <Ivl:102>  BB03 regmask=[r11] minReg=1 last fixed>
<RefPosition #439 @320 RefTypeFixedReg <Reg:r11>  BB03 regmask=[r11] minReg=1>
<RefPosition #440 @320 RefTypeDef <Ivl:103> PUTARG_REG BB03 regmask=[r11] minReg=1 fixed>
<RefPosition #441 @325 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #442 @325 RefTypeUse <Ivl:101>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #443 @325 RefTypeFixedReg <Reg:r11>  BB03 regmask=[r11] minReg=1>
<RefPosition #444 @325 RefTypeUse <Ivl:103>  BB03 regmask=[r11] minReg=1 last fixed>
<RefPosition #445 @326 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #446 @326 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #447 @326 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #448 @326 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #449 @326 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #450 @326 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #451 @326 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #452 @326 RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #453 @326 RefTypeDef <Ivl:104> CALL BB03 regmask=[rax] minReg=1 fixed>
<RefPosition #454 @327 RefTypeUse <Ivl:104>  BB03 regmask=[allIntButFP] minReg=1 last>
<RefPosition #455 @328 RefTypeDef <Ivl:6 V07> STORE_LCL_VAR BB03 regmask=[allIntButFP] minReg=1>
<RefPosition #456 @332 RefTypeDef <Ivl:105> CNS_INT BB03 regmask=[rcx] minReg=1>
<RefPosition #457 @333 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #458 @333 RefTypeUse <Ivl:105>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #459 @334 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #460 @334 RefTypeDef <Ivl:106> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>
<RefPosition #461 @335 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #462 @335 RefTypeUse <Ivl:106>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #463 @336 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #464 @336 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #465 @336 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #466 @336 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #467 @336 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #468 @336 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #469 @336 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #470 @336 RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #471 @336 RefTypeDef <Ivl:107> CALL BB03 regmask=[rax] minReg=1 fixed>
<RefPosition #472 @337 RefTypeUse <Ivl:107>  BB03 regmask=[allIntButFP] minReg=1 last>
<RefPosition #473 @338 RefTypeDef <Ivl:12 V16> STORE_LCL_VAR BB03 regmask=[allIntButFP] minReg=1>
<RefPosition #474 @343 RefTypeUse <Ivl:12 V16> LCL_VAR BB03 regmask=[allIntButFP] minReg=1>
<RefPosition #475 @344 RefTypeDef <Ivl:108> LEA BB03 regmask=[rcx] minReg=1>
<RefPosition #476 @347 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #477 @347 RefTypeUse <Ivl:108>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #478 @347 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #479 @347 RefTypeUse <Ivl:3 V03> LCL_VAR BB03 regmask=[rdx] minReg=1 fixed>
<RefPosition #480 @348 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #481 @348 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #482 @348 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #483 @348 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #484 @348 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #485 @348 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #486 @348 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #487 @348 RefTypeKill <Reg:mm0>  BB03 regmask=[mm0] minReg=1 last>
<RefPosition #488 @348 RefTypeKill <Reg:mm1>  BB03 regmask=[mm1] minReg=1 last>
<RefPosition #489 @348 RefTypeKill <Reg:mm2>  BB03 regmask=[mm2] minReg=1 last>
<RefPosition #490 @348 RefTypeKill <Reg:mm3>  BB03 regmask=[mm3] minReg=1 last>
<RefPosition #491 @348 RefTypeKill <Reg:mm4>  BB03 regmask=[mm4] minReg=1 last>
<RefPosition #492 @348 RefTypeKill <Reg:mm5>  BB03 regmask=[mm5] minReg=1 last>
<RefPosition #493 @351 RefTypeUse <Ivl:12 V16> LCL_VAR BB03 regmask=[allIntButFP] minReg=1 last>
<RefPosition #494 @352 RefTypeDef <Ivl:13 V17> STORE_LCL_VAR BB03 regmask=[allIntButFP] minReg=1>
<RefPosition #495 @355 RefTypeUse <Ivl:13 V17> LCL_VAR BB03 regmask=[allIntButFP] minReg=1 last>
<RefPosition #496 @356 RefTypeDef <Ivl:14 V18> STORE_LCL_VAR BB03 regmask=[allIntButFP] minReg=1>
<RefPosition #497 @363 RefTypeUse <Ivl:4 V04> LCL_VAR BB03 regmask=[allIntButFP] minReg=1 regOptional>
<RefPosition #498 @367 RefTypeBB  BB04 regmask=[] minReg=1>
<RefPosition #499 @371 RefTypeUse <Ivl:14 V18> LCL_VAR BB04 regmask=[allIntButFP] minReg=1 last>
<RefPosition #500 @372 RefTypeDef <Ivl:15 V19> STORE_LCL_VAR BB04 regmask=[allIntButFP] minReg=1>
<RefPosition #501 @375 RefTypeUse <Ivl:15 V19> LCL_VAR BB04 regmask=[allIntButFP] minReg=1>
<RefPosition #502 @376 RefTypeDef <Ivl:16 V20> STORE_LCL_VAR BB04 regmask=[allIntButFP] minReg=1>
<RefPosition #503 @379 RefTypeUse <Ivl:6 V07> LCL_VAR BB04 regmask=[allIntButFP] minReg=1 last>
<RefPosition #504 @380 RefTypeDef <Ivl:17 V21> STORE_LCL_VAR BB04 regmask=[allIntButFP] minReg=1>
<RefPosition #505 @381 RefTypeBB  BB05 regmask=[] minReg=1>
<RefPosition #506 @385 RefTypeUse <Ivl:14 V18> LCL_VAR BB05 regmask=[allIntButFP] minReg=1 last>
<RefPosition #507 @386 RefTypeDef <Ivl:15 V19> STORE_LCL_VAR BB05 regmask=[allIntButFP] minReg=1>
<RefPosition #508 @389 RefTypeUse <Ivl:15 V19> LCL_VAR BB05 regmask=[allIntButFP] minReg=1>
<RefPosition #509 @390 RefTypeDef <Ivl:16 V20> STORE_LCL_VAR BB05 regmask=[allIntButFP] minReg=1>
<RefPosition #510 @392 RefTypeDef <Ivl:109> CNS_INT BB05 regmask=[allIntButFP] minReg=1>
<RefPosition #511 @393 RefTypeUse <Ivl:109>  BB05 regmask=[allIntButFP] minReg=1 last>
<RefPosition #512 @394 RefTypeDef <Ivl:110> IND BB05 regmask=[rdx] minReg=1>
<RefPosition #513 @395 RefTypeFixedReg <Reg:rdx>  BB05 regmask=[rdx] minReg=1>
<RefPosition #514 @395 RefTypeUse <Ivl:110>  BB05 regmask=[rdx] minReg=1 last fixed>
<RefPosition #515 @396 RefTypeFixedReg <Reg:rdx>  BB05 regmask=[rdx] minReg=1>
<RefPosition #516 @396 RefTypeDef <Ivl:111> PUTARG_REG BB05 regmask=[rdx] minReg=1 fixed>
<RefPosition #517 @399 RefTypeFixedReg <Reg:rcx>  BB05 regmask=[rcx] minReg=1>
<RefPosition #518 @399 RefTypeUse <Ivl:5 V05> LCL_VAR BB05 regmask=[rcx] minReg=1 fixed>
<RefPosition #519 @400 RefTypeFixedReg <Reg:rcx>  BB05 regmask=[rcx] minReg=1>
<RefPosition #520 @400 RefTypeDef <Ivl:112> PUTARG_REG BB05 regmask=[rcx] minReg=1 fixed>
<RefPosition #521 @403 RefTypeFixedReg <Reg:r8 >  BB05 regmask=[r8] minReg=1>
<RefPosition #522 @403 RefTypeUse <Ivl:6 V07> LCL_VAR BB05 regmask=[r8] minReg=1 last fixed>
<RefPosition #523 @404 RefTypeFixedReg <Reg:r8 >  BB05 regmask=[r8] minReg=1>
<RefPosition #524 @404 RefTypeDef <Ivl:113> PUTARG_REG BB05 regmask=[r8] minReg=1 fixed>
<RefPosition #525 @405 RefTypeFixedReg <Reg:rdx>  BB05 regmask=[rdx] minReg=1>
<RefPosition #526 @405 RefTypeUse <Ivl:111>  BB05 regmask=[rdx] minReg=1 last fixed>
<RefPosition #527 @405 RefTypeFixedReg <Reg:rcx>  BB05 regmask=[rcx] minReg=1>
<RefPosition #528 @405 RefTypeUse <Ivl:112>  BB05 regmask=[rcx] minReg=1 last fixed>
<RefPosition #529 @405 RefTypeFixedReg <Reg:r8 >  BB05 regmask=[r8] minReg=1>
<RefPosition #530 @405 RefTypeUse <Ivl:113>  BB05 regmask=[r8] minReg=1 last fixed>
<RefPosition #531 @406 RefTypeKill <Reg:rax>  BB05 regmask=[rax] minReg=1 last>
<RefPosition #532 @406 RefTypeKill <Reg:rcx>  BB05 regmask=[rcx] minReg=1 last>
<RefPosition #533 @406 RefTypeKill <Reg:rdx>  BB05 regmask=[rdx] minReg=1 last>
<RefPosition #534 @406 RefTypeKill <Reg:r8 >  BB05 regmask=[r8] minReg=1 last>
<RefPosition #535 @406 RefTypeKill <Reg:r9 >  BB05 regmask=[r9] minReg=1 last>
<RefPosition #536 @406 RefTypeKill <Reg:r10>  BB05 regmask=[r10] minReg=1 last>
<RefPosition #537 @406 RefTypeKill <Reg:r11>  BB05 regmask=[r11] minReg=1 last>
<RefPosition #538 @406 RefTypeFixedReg <Reg:rax>  BB05 regmask=[rax] minReg=1>
<RefPosition #539 @406 RefTypeDef <Ivl:114> CALL BB05 regmask=[rax] minReg=1 fixed>
<RefPosition #540 @407 RefTypeUse <Ivl:114>  BB05 regmask=[allIntButFP] minReg=1 last>
<RefPosition #541 @408 RefTypeDef <Ivl:17 V21> STORE_LCL_VAR BB05 regmask=[allIntButFP] minReg=1>
<RefPosition #542 @409 RefTypeBB  BB06 regmask=[] minReg=1>
<RefPosition #543 @413 RefTypeUse <Ivl:16 V20> LCL_VAR BB06 regmask=[allIntButFP] minReg=1 last>
<RefPosition #544 @414 RefTypeDef <Ivl:115> LEA BB06 regmask=[rcx] minReg=1>
<RefPosition #545 @417 RefTypeFixedReg <Reg:rcx>  BB06 regmask=[rcx] minReg=1>
<RefPosition #546 @417 RefTypeUse <Ivl:115>  BB06 regmask=[rcx] minReg=1 last fixed>
<RefPosition #547 @417 RefTypeFixedReg <Reg:rdx>  BB06 regmask=[rdx] minReg=1>
<RefPosition #548 @417 RefTypeUse <Ivl:17 V21> LCL_VAR BB06 regmask=[rdx] minReg=1 last fixed>
<RefPosition #549 @418 RefTypeKill <Reg:rax>  BB06 regmask=[rax] minReg=1 last>
<RefPosition #550 @418 RefTypeKill <Reg:rcx>  BB06 regmask=[rcx] minReg=1 last>
<RefPosition #551 @418 RefTypeKill <Reg:rdx>  BB06 regmask=[rdx] minReg=1 last>
<RefPosition #552 @418 RefTypeKill <Reg:r8 >  BB06 regmask=[r8] minReg=1 last>
<RefPosition #553 @418 RefTypeKill <Reg:r9 >  BB06 regmask=[r9] minReg=1 last>
<RefPosition #554 @418 RefTypeKill <Reg:r10>  BB06 regmask=[r10] minReg=1 last>
<RefPosition #555 @418 RefTypeKill <Reg:r11>  BB06 regmask=[r11] minReg=1 last>
<RefPosition #556 @418 RefTypeKill <Reg:mm0>  BB06 regmask=[mm0] minReg=1 last>
<RefPosition #557 @418 RefTypeKill <Reg:mm1>  BB06 regmask=[mm1] minReg=1 last>
<RefPosition #558 @418 RefTypeKill <Reg:mm2>  BB06 regmask=[mm2] minReg=1 last>
<RefPosition #559 @418 RefTypeKill <Reg:mm3>  BB06 regmask=[mm3] minReg=1 last>
<RefPosition #560 @418 RefTypeKill <Reg:mm4>  BB06 regmask=[mm4] minReg=1 last>
<RefPosition #561 @418 RefTypeKill <Reg:mm5>  BB06 regmask=[mm5] minReg=1 last>
<RefPosition #562 @427 RefTypeUse <Ivl:15 V19> LCL_VAR BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #563 @435 RefTypeUse <Ivl:2 V02> LCL_VAR BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #564 @436 RefTypeDef <Ivl:116> IND BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #565 @437 RefTypeUse <Ivl:116>  BB06 regmask=[allIntButFP] minReg=1 last>
<RefPosition #566 @438 RefTypeDef <Ivl:19 V23> STORE_LCL_VAR BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #567 @445 RefTypeUse <Ivl:2 V02> LCL_VAR BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #568 @446 RefTypeDef <Ivl:117> IND BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #569 @447 RefTypeUse <Ivl:117>  BB06 regmask=[allIntButFP] minReg=1 last>
<RefPosition #570 @448 RefTypeDef <Ivl:18 V22> STORE_LCL_VAR BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #571 @451 RefTypeUse <Ivl:19 V23> LCL_VAR BB06 regmask=[allIntButFP] minReg=1 last>
<RefPosition #572 @452 RefTypeDef <Ivl:20 V24> STORE_LCL_VAR BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #573 @455 RefTypeUse <Ivl:15 V19> LCL_VAR BB06 regmask=[allIntButFP] minReg=1 last>
<RefPosition #574 @456 RefTypeDef <Ivl:21 V25> STORE_LCL_VAR BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #575 @459 RefTypeUse <Ivl:18 V22> LCL_VAR BB06 regmask=[allIntButFP] minReg=1 last>
<RefPosition #576 @460 RefTypeDef <Ivl:22 V26> STORE_LCL_VAR BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #577 @465 RefTypeUse <Ivl:22 V26> LCL_VAR BB06 regmask=[allIntButFP] minReg=1 regOptional>
<RefPosition #578 @469 RefTypeBB  BB07 regmask=[] minReg=1>
<RefPosition #579 @472 RefTypeDef <Ivl:118> CNS_INT BB07 regmask=[rcx] minReg=1>
<RefPosition #580 @473 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #581 @473 RefTypeUse <Ivl:118>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #582 @474 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #583 @474 RefTypeDef <Ivl:119> PUTARG_REG BB07 regmask=[rcx] minReg=1 fixed>
<RefPosition #584 @475 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #585 @475 RefTypeUse <Ivl:119>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #586 @476 RefTypeKill <Reg:rax>  BB07 regmask=[rax] minReg=1 last>
<RefPosition #587 @476 RefTypeKill <Reg:rcx>  BB07 regmask=[rcx] minReg=1 last>
<RefPosition #588 @476 RefTypeKill <Reg:rdx>  BB07 regmask=[rdx] minReg=1 last>
<RefPosition #589 @476 RefTypeKill <Reg:r8 >  BB07 regmask=[r8] minReg=1 last>
<RefPosition #590 @476 RefTypeKill <Reg:r9 >  BB07 regmask=[r9] minReg=1 last>
<RefPosition #591 @476 RefTypeKill <Reg:r10>  BB07 regmask=[r10] minReg=1 last>
<RefPosition #592 @476 RefTypeKill <Reg:r11>  BB07 regmask=[r11] minReg=1 last>
<RefPosition #593 @476 RefTypeFixedReg <Reg:rax>  BB07 regmask=[rax] minReg=1>
<RefPosition #594 @476 RefTypeDef <Ivl:120> CALL BB07 regmask=[rax] minReg=1 fixed>
<RefPosition #595 @477 RefTypeUse <Ivl:120>  BB07 regmask=[allIntButFP] minReg=1 last>
<RefPosition #596 @478 RefTypeDef <Ivl:24 V28> STORE_LCL_VAR BB07 regmask=[allIntButFP] minReg=1>
<RefPosition #597 @481 RefTypeUse <Ivl:24 V28> LCL_VAR BB07 regmask=[allIntButFP] minReg=1>
<RefPosition #598 @482 RefTypeDef <Ivl:121> LEA BB07 regmask=[rcx] minReg=1>
<RefPosition #599 @485 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #600 @485 RefTypeUse <Ivl:121>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #601 @485 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #602 @485 RefTypeUse <Ivl:2 V02> LCL_VAR BB07 regmask=[rdx] minReg=1 fixed>
<RefPosition #603 @486 RefTypeKill <Reg:rax>  BB07 regmask=[rax] minReg=1 last>
<RefPosition #604 @486 RefTypeKill <Reg:rcx>  BB07 regmask=[rcx] minReg=1 last>
<RefPosition #605 @486 RefTypeKill <Reg:rdx>  BB07 regmask=[rdx] minReg=1 last>
<RefPosition #606 @486 RefTypeKill <Reg:r8 >  BB07 regmask=[r8] minReg=1 last>
<RefPosition #607 @486 RefTypeKill <Reg:r9 >  BB07 regmask=[r9] minReg=1 last>
<RefPosition #608 @486 RefTypeKill <Reg:r10>  BB07 regmask=[r10] minReg=1 last>
<RefPosition #609 @486 RefTypeKill <Reg:r11>  BB07 regmask=[r11] minReg=1 last>
<RefPosition #610 @486 RefTypeKill <Reg:mm0>  BB07 regmask=[mm0] minReg=1 last>
<RefPosition #611 @486 RefTypeKill <Reg:mm1>  BB07 regmask=[mm1] minReg=1 last>
<RefPosition #612 @486 RefTypeKill <Reg:mm2>  BB07 regmask=[mm2] minReg=1 last>
<RefPosition #613 @486 RefTypeKill <Reg:mm3>  BB07 regmask=[mm3] minReg=1 last>
<RefPosition #614 @486 RefTypeKill <Reg:mm4>  BB07 regmask=[mm4] minReg=1 last>
<RefPosition #615 @486 RefTypeKill <Reg:mm5>  BB07 regmask=[mm5] minReg=1 last>
<RefPosition #616 @492 RefTypeDef <Ivl:122> CNS_INT BB07 regmask=[allIntButFP] minReg=1>
<RefPosition #617 @493 RefTypeUse <Ivl:24 V28> LCL_VAR BB07 regmask=[allIntButFP] minReg=1>
<RefPosition #618 @493 RefTypeUse <Ivl:122>  BB07 regmask=[allIntButFP] minReg=1 last>
<RefPosition #619 @497 RefTypeUse <Ivl:2 V02> LCL_VAR BB07 regmask=[allIntButFP] minReg=1>
<RefPosition #620 @498 RefTypeDef <Ivl:123> LEA BB07 regmask=[rcx] minReg=1>
<RefPosition #621 @501 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #622 @501 RefTypeUse <Ivl:123>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #623 @501 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #624 @501 RefTypeUse <Ivl:24 V28> LCL_VAR BB07 regmask=[rdx] minReg=1 fixed>
<RefPosition #625 @502 RefTypeKill <Reg:rax>  BB07 regmask=[rax] minReg=1 last>
<RefPosition #626 @502 RefTypeKill <Reg:rcx>  BB07 regmask=[rcx] minReg=1 last>
<RefPosition #627 @502 RefTypeKill <Reg:rdx>  BB07 regmask=[rdx] minReg=1 last>
<RefPosition #628 @502 RefTypeKill <Reg:r8 >  BB07 regmask=[r8] minReg=1 last>
<RefPosition #629 @502 RefTypeKill <Reg:r9 >  BB07 regmask=[r9] minReg=1 last>
<RefPosition #630 @502 RefTypeKill <Reg:r10>  BB07 regmask=[r10] minReg=1 last>
<RefPosition #631 @502 RefTypeKill <Reg:r11>  BB07 regmask=[r11] minReg=1 last>
<RefPosition #632 @502 RefTypeKill <Reg:mm0>  BB07 regmask=[mm0] minReg=1 last>
<RefPosition #633 @502 RefTypeKill <Reg:mm1>  BB07 regmask=[mm1] minReg=1 last>
<RefPosition #634 @502 RefTypeKill <Reg:mm2>  BB07 regmask=[mm2] minReg=1 last>
<RefPosition #635 @502 RefTypeKill <Reg:mm3>  BB07 regmask=[mm3] minReg=1 last>
<RefPosition #636 @502 RefTypeKill <Reg:mm4>  BB07 regmask=[mm4] minReg=1 last>
<RefPosition #637 @502 RefTypeKill <Reg:mm5>  BB07 regmask=[mm5] minReg=1 last>
<RefPosition #638 @505 RefTypeUse <Ivl:24 V28> LCL_VAR BB07 regmask=[allIntButFP] minReg=1 last>
<RefPosition #639 @506 RefTypeDef <Ivl:22 V26> STORE_LCL_VAR BB07 regmask=[allIntButFP] minReg=1>
<RefPosition #640 @507 RefTypeBB  BB09 regmask=[] minReg=1>
<RefPosition #641 @510 RefTypeDef <Ivl:124> CNS_INT BB09 regmask=[rcx] minReg=1>
<RefPosition #642 @511 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #643 @511 RefTypeUse <Ivl:124>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #644 @512 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #645 @512 RefTypeDef <Ivl:125> PUTARG_REG BB09 regmask=[rcx] minReg=1 fixed>
<RefPosition #646 @513 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #647 @513 RefTypeUse <Ivl:125>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #648 @514 RefTypeKill <Reg:rax>  BB09 regmask=[rax] minReg=1 last>
<RefPosition #649 @514 RefTypeKill <Reg:rcx>  BB09 regmask=[rcx] minReg=1 last>
<RefPosition #650 @514 RefTypeKill <Reg:rdx>  BB09 regmask=[rdx] minReg=1 last>
<RefPosition #651 @514 RefTypeKill <Reg:r8 >  BB09 regmask=[r8] minReg=1 last>
<RefPosition #652 @514 RefTypeKill <Reg:r9 >  BB09 regmask=[r9] minReg=1 last>
<RefPosition #653 @514 RefTypeKill <Reg:r10>  BB09 regmask=[r10] minReg=1 last>
<RefPosition #654 @514 RefTypeKill <Reg:r11>  BB09 regmask=[r11] minReg=1 last>
<RefPosition #655 @514 RefTypeFixedReg <Reg:rax>  BB09 regmask=[rax] minReg=1>
<RefPosition #656 @514 RefTypeDef <Ivl:126> CALL BB09 regmask=[rax] minReg=1 fixed>
<RefPosition #657 @515 RefTypeUse <Ivl:126>  BB09 regmask=[allIntButFP] minReg=1 last>
<RefPosition #658 @516 RefTypeDef <Ivl:23 V27> STORE_LCL_VAR BB09 regmask=[allIntButFP] minReg=1>
<RefPosition #659 @519 RefTypeUse <Ivl:23 V27> LCL_VAR BB09 regmask=[allIntButFP] minReg=1>
<RefPosition #660 @520 RefTypeDef <Ivl:127> LEA BB09 regmask=[rcx] minReg=1>
<RefPosition #661 @523 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #662 @523 RefTypeUse <Ivl:127>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #663 @523 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #664 @523 RefTypeUse <Ivl:2 V02> LCL_VAR BB09 regmask=[rdx] minReg=1 fixed>
<RefPosition #665 @524 RefTypeKill <Reg:rax>  BB09 regmask=[rax] minReg=1 last>
<RefPosition #666 @524 RefTypeKill <Reg:rcx>  BB09 regmask=[rcx] minReg=1 last>
<RefPosition #667 @524 RefTypeKill <Reg:rdx>  BB09 regmask=[rdx] minReg=1 last>
<RefPosition #668 @524 RefTypeKill <Reg:r8 >  BB09 regmask=[r8] minReg=1 last>
<RefPosition #669 @524 RefTypeKill <Reg:r9 >  BB09 regmask=[r9] minReg=1 last>
<RefPosition #670 @524 RefTypeKill <Reg:r10>  BB09 regmask=[r10] minReg=1 last>
<RefPosition #671 @524 RefTypeKill <Reg:r11>  BB09 regmask=[r11] minReg=1 last>
<RefPosition #672 @524 RefTypeKill <Reg:mm0>  BB09 regmask=[mm0] minReg=1 last>
<RefPosition #673 @524 RefTypeKill <Reg:mm1>  BB09 regmask=[mm1] minReg=1 last>
<RefPosition #674 @524 RefTypeKill <Reg:mm2>  BB09 regmask=[mm2] minReg=1 last>
<RefPosition #675 @524 RefTypeKill <Reg:mm3>  BB09 regmask=[mm3] minReg=1 last>
<RefPosition #676 @524 RefTypeKill <Reg:mm4>  BB09 regmask=[mm4] minReg=1 last>
<RefPosition #677 @524 RefTypeKill <Reg:mm5>  BB09 regmask=[mm5] minReg=1 last>
<RefPosition #678 @530 RefTypeDef <Ivl:128> CNS_INT BB09 regmask=[allIntButFP] minReg=1>
<RefPosition #679 @531 RefTypeUse <Ivl:23 V27> LCL_VAR BB09 regmask=[allIntButFP] minReg=1>
<RefPosition #680 @531 RefTypeUse <Ivl:128>  BB09 regmask=[allIntButFP] minReg=1 last>
<RefPosition #681 @537 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #682 @537 RefTypeUse <Ivl:21 V25> LCL_VAR BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #683 @538 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #684 @538 RefTypeDef <Ivl:129> PUTARG_REG BB09 regmask=[rcx] minReg=1 fixed>
<RefPosition #685 @541 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #686 @541 RefTypeUse <Ivl:22 V26> LCL_VAR BB09 regmask=[rdx] minReg=1 last fixed>
<RefPosition #687 @542 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #688 @542 RefTypeDef <Ivl:130> PUTARG_REG BB09 regmask=[rdx] minReg=1 fixed>
<RefPosition #689 @545 RefTypeFixedReg <Reg:r8 >  BB09 regmask=[r8] minReg=1>
<RefPosition #690 @545 RefTypeUse <Ivl:23 V27> LCL_VAR BB09 regmask=[r8] minReg=1 last fixed>
<RefPosition #691 @546 RefTypeFixedReg <Reg:r8 >  BB09 regmask=[r8] minReg=1>
<RefPosition #692 @546 RefTypeDef <Ivl:131> PUTARG_REG BB09 regmask=[r8] minReg=1 fixed>
<RefPosition #693 @547 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #694 @547 RefTypeUse <Ivl:129>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #695 @547 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #696 @547 RefTypeUse <Ivl:130>  BB09 regmask=[rdx] minReg=1 last fixed>
<RefPosition #697 @547 RefTypeFixedReg <Reg:r8 >  BB09 regmask=[r8] minReg=1>
<RefPosition #698 @547 RefTypeUse <Ivl:131>  BB09 regmask=[r8] minReg=1 last fixed>
<RefPosition #699 @548 RefTypeKill <Reg:rax>  BB09 regmask=[rax] minReg=1 last>
<RefPosition #700 @548 RefTypeKill <Reg:rcx>  BB09 regmask=[rcx] minReg=1 last>
<RefPosition #701 @548 RefTypeKill <Reg:rdx>  BB09 regmask=[rdx] minReg=1 last>
<RefPosition #702 @548 RefTypeKill <Reg:r8 >  BB09 regmask=[r8] minReg=1 last>
<RefPosition #703 @548 RefTypeKill <Reg:r9 >  BB09 regmask=[r9] minReg=1 last>
<RefPosition #704 @548 RefTypeKill <Reg:r10>  BB09 regmask=[r10] minReg=1 last>
<RefPosition #705 @548 RefTypeKill <Reg:r11>  BB09 regmask=[r11] minReg=1 last>
<RefPosition #706 @548 RefTypeFixedReg <Reg:rax>  BB09 regmask=[rax] minReg=1>
<RefPosition #707 @548 RefTypeDef <Ivl:132> CALL BB09 regmask=[rax] minReg=1 fixed>
<RefPosition #708 @549 RefTypeUse <Ivl:132>  BB09 regmask=[allIntButFP] minReg=1 last>
<RefPosition #709 @550 RefTypeDef <Ivl:36 V42> STORE_LCL_VAR BB09 regmask=[allIntButFP] minReg=1>
<RefPosition #710 @553 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #711 @553 RefTypeUse <Ivl:36 V42> LCL_VAR BB09 regmask=[rdx] minReg=1 last fixed>
<RefPosition #712 @554 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #713 @554 RefTypeDef <Ivl:133> PUTARG_REG BB09 regmask=[rdx] minReg=1 fixed>
<RefPosition #714 @557 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #715 @557 RefTypeUse <Ivl:20 V24> LCL_VAR BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #716 @558 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #717 @558 RefTypeDef <Ivl:134> PUTARG_REG BB09 regmask=[rcx] minReg=1 fixed>
<RefPosition #718 @559 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #719 @559 RefTypeUse <Ivl:133>  BB09 regmask=[rdx] minReg=1 last fixed>
<RefPosition #720 @559 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #721 @559 RefTypeUse <Ivl:134>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #722 @560 RefTypeKill <Reg:rax>  BB09 regmask=[rax] minReg=1 last>
<RefPosition #723 @560 RefTypeKill <Reg:rcx>  BB09 regmask=[rcx] minReg=1 last>
<RefPosition #724 @560 RefTypeKill <Reg:rdx>  BB09 regmask=[rdx] minReg=1 last>
<RefPosition #725 @560 RefTypeKill <Reg:r8 >  BB09 regmask=[r8] minReg=1 last>
<RefPosition #726 @560 RefTypeKill <Reg:r9 >  BB09 regmask=[r9] minReg=1 last>
<RefPosition #727 @560 RefTypeKill <Reg:r10>  BB09 regmask=[r10] minReg=1 last>
<RefPosition #728 @560 RefTypeKill <Reg:r11>  BB09 regmask=[r11] minReg=1 last>
<RefPosition #729 @564 RefTypeDef <Ivl:135> LCL_VAR BB09 regmask=[rcx] minReg=1>
<RefPosition #730 @565 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #731 @565 RefTypeUse <Ivl:135>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #732 @566 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #733 @566 RefTypeDef <Ivl:136> PUTARG_REG BB09 regmask=[rcx] minReg=1 fixed>
<RefPosition #734 @568 RefTypeFixedReg <Reg:r11>  BB09 regmask=[r11] minReg=1>
<RefPosition #735 @568 RefTypeDef <Ivl:137> CNS_INT BB09 regmask=[r11] minReg=1 fixed>
<RefPosition #736 @569 RefTypeFixedReg <Reg:r11>  BB09 regmask=[r11] minReg=1>
<RefPosition #737 @569 RefTypeUse <Ivl:137>  BB09 regmask=[r11] minReg=1 last fixed>
<RefPosition #738 @570 RefTypeFixedReg <Reg:r11>  BB09 regmask=[r11] minReg=1>
<RefPosition #739 @570 RefTypeDef <Ivl:138> PUTARG_REG BB09 regmask=[r11] minReg=1 fixed>
<RefPosition #740 @575 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #741 @575 RefTypeUse <Ivl:136>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #742 @575 RefTypeFixedReg <Reg:r11>  BB09 regmask=[r11] minReg=1>
<RefPosition #743 @575 RefTypeUse <Ivl:138>  BB09 regmask=[r11] minReg=1 last fixed>
<RefPosition #744 @576 RefTypeKill <Reg:rax>  BB09 regmask=[rax] minReg=1 last>
<RefPosition #745 @576 RefTypeKill <Reg:rcx>  BB09 regmask=[rcx] minReg=1 last>
<RefPosition #746 @576 RefTypeKill <Reg:rdx>  BB09 regmask=[rdx] minReg=1 last>
<RefPosition #747 @576 RefTypeKill <Reg:r8 >  BB09 regmask=[r8] minReg=1 last>
<RefPosition #748 @576 RefTypeKill <Reg:r9 >  BB09 regmask=[r9] minReg=1 last>
<RefPosition #749 @576 RefTypeKill <Reg:r10>  BB09 regmask=[r10] minReg=1 last>
<RefPosition #750 @576 RefTypeKill <Reg:r11>  BB09 regmask=[r11] minReg=1 last>
<RefPosition #751 @576 RefTypeFixedReg <Reg:rax>  BB09 regmask=[rax] minReg=1>
<RefPosition #752 @576 RefTypeDef <Ivl:139> CALL BB09 regmask=[rax] minReg=1 fixed>
<RefPosition #753 @579 RefTypeUse <Ivl:139>  BB09 regmask=[allIntButFP] minReg=1 last regOptional>
<RefPosition #754 @583 RefTypeExpUse <Ivl:3 V03>  BB09 regmask=[allIntButFP] minReg=1 regOptional>
<RefPosition #755 @583 RefTypeExpUse <Ivl:4 V04>  BB09 regmask=[allIntButFP] minReg=1 regOptional>
<RefPosition #756 @583 RefTypeExpUse <Ivl:5 V05>  BB09 regmask=[allIntButFP] minReg=1 regOptional>
<RefPosition #757 @583 RefTypeBB  BB13 regmask=[] minReg=1>
<RefPosition #758 @586 RefTypeDef <Ivl:140> LCL_VAR BB13 regmask=[rcx] minReg=1>
<RefPosition #759 @587 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #760 @587 RefTypeUse <Ivl:140>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #761 @588 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #762 @588 RefTypeDef <Ivl:141> PUTARG_REG BB13 regmask=[rcx] minReg=1 fixed>
<RefPosition #763 @590 RefTypeFixedReg <Reg:r11>  BB13 regmask=[r11] minReg=1>
<RefPosition #764 @590 RefTypeDef <Ivl:142> CNS_INT BB13 regmask=[r11] minReg=1 fixed>
<RefPosition #765 @591 RefTypeFixedReg <Reg:r11>  BB13 regmask=[r11] minReg=1>
<RefPosition #766 @591 RefTypeUse <Ivl:142>  BB13 regmask=[r11] minReg=1 last fixed>
<RefPosition #767 @592 RefTypeFixedReg <Reg:r11>  BB13 regmask=[r11] minReg=1>
<RefPosition #768 @592 RefTypeDef <Ivl:143> PUTARG_REG BB13 regmask=[r11] minReg=1 fixed>
<RefPosition #769 @597 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #770 @597 RefTypeUse <Ivl:141>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #771 @597 RefTypeFixedReg <Reg:r11>  BB13 regmask=[r11] minReg=1>
<RefPosition #772 @597 RefTypeUse <Ivl:143>  BB13 regmask=[r11] minReg=1 last fixed>
<RefPosition #773 @598 RefTypeKill <Reg:rax>  BB13 regmask=[rax] minReg=1 last>
<RefPosition #774 @598 RefTypeKill <Reg:rcx>  BB13 regmask=[rcx] minReg=1 last>
<RefPosition #775 @598 RefTypeKill <Reg:rdx>  BB13 regmask=[rdx] minReg=1 last>
<RefPosition #776 @598 RefTypeKill <Reg:r8 >  BB13 regmask=[r8] minReg=1 last>
<RefPosition #777 @598 RefTypeKill <Reg:r9 >  BB13 regmask=[r9] minReg=1 last>
<RefPosition #778 @598 RefTypeKill <Reg:r10>  BB13 regmask=[r10] minReg=1 last>
<RefPosition #779 @598 RefTypeKill <Reg:r11>  BB13 regmask=[r11] minReg=1 last>
<RefPosition #780 @605 RefTypeUse <Ivl:2 V02> LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #781 @606 RefTypeDef <Ivl:144> IND BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #782 @607 RefTypeUse <Ivl:144>  BB13 regmask=[allIntButFP] minReg=1 last>
<RefPosition #783 @608 RefTypeDef <Ivl:29 V35> STORE_LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #784 @613 RefTypeUse <Ivl:29 V35> LCL_VAR BB13 regmask=[allIntButFP] minReg=1 last>
<RefPosition #785 @614 RefTypeDef <Ivl:145> IND BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #786 @619 RefTypeUse <Ivl:2 V02> LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #787 @619 RefTypeUse <Ivl:145>  BB13 regmask=[allIntButFP] minReg=1 last>
<RefPosition #788 @624 RefTypeDef <Ivl:146> CNS_INT BB13 regmask=[rcx] minReg=1>
<RefPosition #789 @625 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #790 @625 RefTypeUse <Ivl:146>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #791 @626 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #792 @626 RefTypeDef <Ivl:147> PUTARG_REG BB13 regmask=[rcx] minReg=1 fixed>
<RefPosition #793 @627 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #794 @627 RefTypeUse <Ivl:147>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #795 @628 RefTypeKill <Reg:rax>  BB13 regmask=[rax] minReg=1 last>
<RefPosition #796 @628 RefTypeKill <Reg:rcx>  BB13 regmask=[rcx] minReg=1 last>
<RefPosition #797 @628 RefTypeKill <Reg:rdx>  BB13 regmask=[rdx] minReg=1 last>
<RefPosition #798 @628 RefTypeKill <Reg:r8 >  BB13 regmask=[r8] minReg=1 last>
<RefPosition #799 @628 RefTypeKill <Reg:r9 >  BB13 regmask=[r9] minReg=1 last>
<RefPosition #800 @628 RefTypeKill <Reg:r10>  BB13 regmask=[r10] minReg=1 last>
<RefPosition #801 @628 RefTypeKill <Reg:r11>  BB13 regmask=[r11] minReg=1 last>
<RefPosition #802 @628 RefTypeFixedReg <Reg:rax>  BB13 regmask=[rax] minReg=1>
<RefPosition #803 @628 RefTypeDef <Ivl:148> CALL BB13 regmask=[rax] minReg=1 fixed>
<RefPosition #804 @629 RefTypeUse <Ivl:148>  BB13 regmask=[allIntButFP] minReg=1 last>
<RefPosition #805 @630 RefTypeDef <Ivl:25 V29> STORE_LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #806 @635 RefTypeUse <Ivl:2 V02> LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #807 @636 RefTypeDef <Ivl:149> IND BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #808 @637 RefTypeUse <Ivl:149>  BB13 regmask=[allIntButFP] minReg=1 last>
<RefPosition #809 @638 RefTypeDef <Ivl:31 V37> STORE_LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #810 @640 RefTypeDef <Ivl:150> CNS_INT BB13 regmask=[rcx] minReg=1>
<RefPosition #811 @641 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #812 @641 RefTypeUse <Ivl:150>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #813 @642 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #814 @642 RefTypeDef <Ivl:151> PUTARG_REG BB13 regmask=[rcx] minReg=1 fixed>
<RefPosition #815 @643 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #816 @643 RefTypeUse <Ivl:151>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #817 @644 RefTypeKill <Reg:rax>  BB13 regmask=[rax] minReg=1 last>
<RefPosition #818 @644 RefTypeKill <Reg:rcx>  BB13 regmask=[rcx] minReg=1 last>
<RefPosition #819 @644 RefTypeKill <Reg:rdx>  BB13 regmask=[rdx] minReg=1 last>
<RefPosition #820 @644 RefTypeKill <Reg:r8 >  BB13 regmask=[r8] minReg=1 last>
<RefPosition #821 @644 RefTypeKill <Reg:r9 >  BB13 regmask=[r9] minReg=1 last>
<RefPosition #822 @644 RefTypeKill <Reg:r10>  BB13 regmask=[r10] minReg=1 last>
<RefPosition #823 @644 RefTypeKill <Reg:r11>  BB13 regmask=[r11] minReg=1 last>
<RefPosition #824 @644 RefTypeFixedReg <Reg:rax>  BB13 regmask=[rax] minReg=1>
<RefPosition #825 @644 RefTypeDef <Ivl:152> CALL BB13 regmask=[rax] minReg=1 fixed>
<RefPosition #826 @645 RefTypeUse <Ivl:152>  BB13 regmask=[allIntButFP] minReg=1 last>
<RefPosition #827 @646 RefTypeDef <Ivl:30 V36> STORE_LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #828 @649 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #829 @649 RefTypeUse <Ivl:30 V36> LCL_VAR BB13 regmask=[rcx] minReg=1 fixed>
<RefPosition #830 @650 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #831 @650 RefTypeDef <Ivl:153> PUTARG_REG BB13 regmask=[rcx] minReg=1 fixed>
<RefPosition #832 @652 RefTypeDef <Ivl:154> CNS_INT BB13 regmask=[rdx] minReg=1>
<RefPosition #833 @653 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #834 @653 RefTypeUse <Ivl:154>  BB13 regmask=[rdx] minReg=1 last fixed>
<RefPosition #835 @654 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #836 @654 RefTypeDef <Ivl:155> PUTARG_REG BB13 regmask=[rdx] minReg=1 fixed>
<RefPosition #837 @656 RefTypeDef <Ivl:156> CNS_INT BB13 regmask=[r8] minReg=1>
<RefPosition #838 @657 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #839 @657 RefTypeUse <Ivl:156>  BB13 regmask=[r8] minReg=1 last fixed>
<RefPosition #840 @658 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #841 @658 RefTypeDef <Ivl:157> PUTARG_REG BB13 regmask=[r8] minReg=1 fixed>
<RefPosition #842 @659 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #843 @659 RefTypeUse <Ivl:153>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #844 @659 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #845 @659 RefTypeUse <Ivl:155>  BB13 regmask=[rdx] minReg=1 last fixed>
<RefPosition #846 @659 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #847 @659 RefTypeUse <Ivl:157>  BB13 regmask=[r8] minReg=1 last fixed>
<RefPosition #848 @660 RefTypeKill <Reg:rax>  BB13 regmask=[rax] minReg=1 last>
<RefPosition #849 @660 RefTypeKill <Reg:rcx>  BB13 regmask=[rcx] minReg=1 last>
<RefPosition #850 @660 RefTypeKill <Reg:rdx>  BB13 regmask=[rdx] minReg=1 last>
<RefPosition #851 @660 RefTypeKill <Reg:r8 >  BB13 regmask=[r8] minReg=1 last>
<RefPosition #852 @660 RefTypeKill <Reg:r9 >  BB13 regmask=[r9] minReg=1 last>
<RefPosition #853 @660 RefTypeKill <Reg:r10>  BB13 regmask=[r10] minReg=1 last>
<RefPosition #854 @660 RefTypeKill <Reg:r11>  BB13 regmask=[r11] minReg=1 last>
<RefPosition #855 @663 RefTypeUse <Ivl:25 V29> LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #856 @664 RefTypeDef <Ivl:158> LEA BB13 regmask=[rcx] minReg=1>
<RefPosition #857 @667 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #858 @667 RefTypeUse <Ivl:158>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #859 @667 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #860 @667 RefTypeUse <Ivl:30 V36> LCL_VAR BB13 regmask=[rdx] minReg=1 last fixed>
<RefPosition #861 @668 RefTypeKill <Reg:rax>  BB13 regmask=[rax] minReg=1 last>
<RefPosition #862 @668 RefTypeKill <Reg:rcx>  BB13 regmask=[rcx] minReg=1 last>
<RefPosition #863 @668 RefTypeKill <Reg:rdx>  BB13 regmask=[rdx] minReg=1 last>
<RefPosition #864 @668 RefTypeKill <Reg:r8 >  BB13 regmask=[r8] minReg=1 last>
<RefPosition #865 @668 RefTypeKill <Reg:r9 >  BB13 regmask=[r9] minReg=1 last>
<RefPosition #866 @668 RefTypeKill <Reg:r10>  BB13 regmask=[r10] minReg=1 last>
<RefPosition #867 @668 RefTypeKill <Reg:r11>  BB13 regmask=[r11] minReg=1 last>
<RefPosition #868 @668 RefTypeKill <Reg:mm0>  BB13 regmask=[mm0] minReg=1 last>
<RefPosition #869 @668 RefTypeKill <Reg:mm1>  BB13 regmask=[mm1] minReg=1 last>
<RefPosition #870 @668 RefTypeKill <Reg:mm2>  BB13 regmask=[mm2] minReg=1 last>
<RefPosition #871 @668 RefTypeKill <Reg:mm3>  BB13 regmask=[mm3] minReg=1 last>
<RefPosition #872 @668 RefTypeKill <Reg:mm4>  BB13 regmask=[mm4] minReg=1 last>
<RefPosition #873 @668 RefTypeKill <Reg:mm5>  BB13 regmask=[mm5] minReg=1 last>
<RefPosition #874 @675 RefTypeUse <Ivl:25 V29> LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #875 @675 RefTypeUse <Ivl:31 V37> LCL_VAR BB13 regmask=[allIntButFP] minReg=1 last>
<RefPosition #876 @681 RefTypeUse <Ivl:2 V02> LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #877 @682 RefTypeDef <Ivl:159> LEA BB13 regmask=[rcx] minReg=1>
<RefPosition #878 @685 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #879 @685 RefTypeUse <Ivl:159>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #880 @685 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #881 @685 RefTypeUse <Ivl:25 V29> LCL_VAR BB13 regmask=[rdx] minReg=1 last fixed>
<RefPosition #882 @686 RefTypeKill <Reg:rax>  BB13 regmask=[rax] minReg=1 last>
<RefPosition #883 @686 RefTypeKill <Reg:rcx>  BB13 regmask=[rcx] minReg=1 last>
<RefPosition #884 @686 RefTypeKill <Reg:rdx>  BB13 regmask=[rdx] minReg=1 last>
<RefPosition #885 @686 RefTypeKill <Reg:r8 >  BB13 regmask=[r8] minReg=1 last>
<RefPosition #886 @686 RefTypeKill <Reg:r9 >  BB13 regmask=[r9] minReg=1 last>
<RefPosition #887 @686 RefTypeKill <Reg:r10>  BB13 regmask=[r10] minReg=1 last>
<RefPosition #888 @686 RefTypeKill <Reg:r11>  BB13 regmask=[r11] minReg=1 last>
<RefPosition #889 @686 RefTypeKill <Reg:mm0>  BB13 regmask=[mm0] minReg=1 last>
<RefPosition #890 @686 RefTypeKill <Reg:mm1>  BB13 regmask=[mm1] minReg=1 last>
<RefPosition #891 @686 RefTypeKill <Reg:mm2>  BB13 regmask=[mm2] minReg=1 last>
<RefPosition #892 @686 RefTypeKill <Reg:mm3>  BB13 regmask=[mm3] minReg=1 last>
<RefPosition #893 @686 RefTypeKill <Reg:mm4>  BB13 regmask=[mm4] minReg=1 last>
<RefPosition #894 @686 RefTypeKill <Reg:mm5>  BB13 regmask=[mm5] minReg=1 last>
<RefPosition #895 @690 RefTypeDef <Ivl:160> CNS_INT BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #896 @691 RefTypeUse <Ivl:160>  BB13 regmask=[allIntButFP] minReg=1 last>
<RefPosition #897 @692 RefTypeDef <Ivl:7 V10> STORE_LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #898 @693 RefTypeBB  BB17 regmask=[] minReg=1>
<RefPosition #899 @699 RefTypeUse <Ivl:2 V02> LCL_VAR BB17 regmask=[allIntButFP] minReg=1>
<RefPosition #900 @700 RefTypeDef <Ivl:161> IND BB17 regmask=[allIntButFP] minReg=1>
<RefPosition #901 @701 RefTypeUse <Ivl:161>  BB17 regmask=[allIntButFP] minReg=1 last>
<RefPosition #902 @702 RefTypeDef <Ivl:33 V39> STORE_LCL_VAR BB17 regmask=[allIntButFP] minReg=1>
<RefPosition #903 @707 RefTypeUse <Ivl:33 V39> LCL_VAR BB17 regmask=[allIntButFP] minReg=1 regOptional>
<RefPosition #904 @711 RefTypeBB  BB18 regmask=[] minReg=1>
<RefPosition #905 @715 RefTypeUse <Ivl:33 V39> LCL_VAR BB18 regmask=[allIntButFP] minReg=1 last>
<RefPosition #906 @716 RefTypeDef <Ivl:32 V38> STORE_LCL_VAR BB18 regmask=[allIntButFP] minReg=1>
<RefPosition #907 @717 RefTypeBB  BB19 regmask=[] minReg=1>
<RefPosition #908 @722 RefTypeDef <Ivl:32 V38> STORE_LCL_VAR BB19 regmask=[allIntButFP] minReg=1>
<RefPosition #909 @723 RefTypeBB  BB20 regmask=[] minReg=1>
<RefPosition #910 @729 RefTypeUse <Ivl:7 V10> LCL_VAR BB20 regmask=[allIntButFP] minReg=1>
<RefPosition #911 @729 RefTypeUse <Ivl:32 V38> LCL_VAR BB20 regmask=[allIntButFP] minReg=1 last regOptional>
<RefPosition #912 @733 RefTypeBB  BB16 regmask=[] minReg=1>
<RefPosition #913 @739 RefTypeFixedReg <Reg:rcx>  BB16 regmask=[rcx] minReg=1>
<RefPosition #914 @739 RefTypeUse <Ivl:2 V02> LCL_VAR BB16 regmask=[rcx] minReg=1 fixed>
<RefPosition #915 @740 RefTypeFixedReg <Reg:rcx>  BB16 regmask=[rcx] minReg=1>
<RefPosition #916 @740 RefTypeDef <Ivl:162> PUTARG_REG BB16 regmask=[rcx] minReg=1 fixed>
<RefPosition #917 @741 RefTypeFixedReg <Reg:rcx>  BB16 regmask=[rcx] minReg=1>
<RefPosition #918 @741 RefTypeUse <Ivl:162>  BB16 regmask=[rcx] minReg=1 last fixed>
<RefPosition #919 @742 RefTypeKill <Reg:rax>  BB16 regmask=[rax] minReg=1 last>
<RefPosition #920 @742 RefTypeKill <Reg:rcx>  BB16 regmask=[rcx] minReg=1 last>
<RefPosition #921 @742 RefTypeKill <Reg:rdx>  BB16 regmask=[rdx] minReg=1 last>
<RefPosition #922 @742 RefTypeKill <Reg:r8 >  BB16 regmask=[r8] minReg=1 last>
<RefPosition #923 @742 RefTypeKill <Reg:r9 >  BB16 regmask=[r9] minReg=1 last>
<RefPosition #924 @742 RefTypeKill <Reg:r10>  BB16 regmask=[r10] minReg=1 last>
<RefPosition #925 @742 RefTypeKill <Reg:r11>  BB16 regmask=[r11] minReg=1 last>
<RefPosition #926 @749 RefTypeUse <Ivl:7 V10> LCL_VAR BB16 regmask=[allIntButFP] minReg=1 last>
<RefPosition #927 @750 RefTypeDef <Ivl:163> ADD BB16 regmask=[allIntButFP] minReg=1>
<RefPosition #928 @751 RefTypeUse <Ivl:163>  BB16 regmask=[allIntButFP] minReg=1 last>
<RefPosition #929 @752 RefTypeDef <Ivl:7 V10> STORE_LCL_VAR BB16 regmask=[allIntButFP] minReg=1>
<RefPosition #930 @753 RefTypeExpUse <Ivl:7 V10>  BB16 regmask=[allIntButFP] minReg=1 regOptional>
<RefPosition #931 @753 RefTypeBB  BB21 regmask=[] minReg=1>
<RefPosition #932 @761 RefTypeUse <Ivl:2 V02> LCL_VAR BB21 regmask=[allIntButFP] minReg=1 last>
<RefPosition #933 @762 RefTypeDef <Ivl:164> IND BB21 regmask=[allIntButFP] minReg=1>
<RefPosition #934 @763 RefTypeUse <Ivl:164>  BB21 regmask=[allIntButFP] minReg=1 last>
<RefPosition #935 @764 RefTypeDef <Ivl:34 V40> STORE_LCL_VAR BB21 regmask=[allIntButFP] minReg=1>
<RefPosition #936 @769 RefTypeUse <Ivl:34 V40> LCL_VAR BB21 regmask=[allIntButFP] minReg=1 last>
<RefPosition #937 @770 RefTypeDef <Ivl:165> IND BB21 regmask=[rax] minReg=1>
<RefPosition #938 @771 RefTypeFixedReg <Reg:rax>  BB21 regmask=[rax] minReg=1>
<RefPosition #939 @771 RefTypeUse <Ivl:165>  BB21 regmask=[rax] minReg=1 last fixed>
<RefPosition #940 @773 RefTypeBB  BB22 regmask=[] minReg=1>
<RefPosition #941 @785 RefTypeBB  BB23 regmask=[] minReg=1>
<RefPosition #942 @790 RefTypeDef <Ivl:166> LCL_VAR BB23 regmask=[rcx] minReg=1>
<RefPosition #943 @791 RefTypeFixedReg <Reg:rcx>  BB23 regmask=[rcx] minReg=1>
<RefPosition #944 @791 RefTypeUse <Ivl:166>  BB23 regmask=[rcx] minReg=1 last fixed>
<RefPosition #945 @792 RefTypeFixedReg <Reg:rcx>  BB23 regmask=[rcx] minReg=1>
<RefPosition #946 @792 RefTypeDef <Ivl:167> PUTARG_REG BB23 regmask=[rcx] minReg=1 fixed>
<RefPosition #947 @794 RefTypeFixedReg <Reg:r11>  BB23 regmask=[r11] minReg=1>
<RefPosition #948 @794 RefTypeDef <Ivl:168> CNS_INT BB23 regmask=[r11] minReg=1 fixed>
<RefPosition #949 @795 RefTypeFixedReg <Reg:r11>  BB23 regmask=[r11] minReg=1>
<RefPosition #950 @795 RefTypeUse <Ivl:168>  BB23 regmask=[r11] minReg=1 last fixed>
<RefPosition #951 @796 RefTypeFixedReg <Reg:r11>  BB23 regmask=[r11] minReg=1>
<RefPosition #952 @796 RefTypeDef <Ivl:169> PUTARG_REG BB23 regmask=[r11] minReg=1 fixed>
<RefPosition #953 @801 RefTypeFixedReg <Reg:rcx>  BB23 regmask=[rcx] minReg=1>
<RefPosition #954 @801 RefTypeUse <Ivl:167>  BB23 regmask=[rcx] minReg=1 last fixed>
<RefPosition #955 @801 RefTypeFixedReg <Reg:r11>  BB23 regmask=[r11] minReg=1>
<RefPosition #956 @801 RefTypeUse <Ivl:169>  BB23 regmask=[r11] minReg=1 last fixed>
<RefPosition #957 @802 RefTypeKill <Reg:rax>  BB23 regmask=[rax] minReg=1 last>
<RefPosition #958 @802 RefTypeKill <Reg:rcx>  BB23 regmask=[rcx] minReg=1 last>
<RefPosition #959 @802 RefTypeKill <Reg:rdx>  BB23 regmask=[rdx] minReg=1 last>
<RefPosition #960 @802 RefTypeKill <Reg:r8 >  BB23 regmask=[r8] minReg=1 last>
<RefPosition #961 @802 RefTypeKill <Reg:r9 >  BB23 regmask=[r9] minReg=1 last>
<RefPosition #962 @802 RefTypeKill <Reg:r10>  BB23 regmask=[r10] minReg=1 last>
<RefPosition #963 @802 RefTypeKill <Reg:r11>  BB23 regmask=[r11] minReg=1 last>
<RefPosition #964 @803 RefTypeBB  BB24 regmask=[] minReg=1>
<RefPosition #965 @809 RefTypeBB  BB25 regmask=[] minReg=1>
<RefPosition #966 @812 RefTypeKill <Reg:rax>  BB25 regmask=[rax] minReg=1 last>
<RefPosition #967 @812 RefTypeKill <Reg:rcx>  BB25 regmask=[rcx] minReg=1 last>
<RefPosition #968 @812 RefTypeKill <Reg:rdx>  BB25 regmask=[rdx] minReg=1 last>
<RefPosition #969 @812 RefTypeKill <Reg:r8 >  BB25 regmask=[r8] minReg=1 last>
<RefPosition #970 @812 RefTypeKill <Reg:r9 >  BB25 regmask=[r9] minReg=1 last>
<RefPosition #971 @812 RefTypeKill <Reg:r10>  BB25 regmask=[r10] minReg=1 last>
<RefPosition #972 @812 RefTypeKill <Reg:r11>  BB25 regmask=[r11] minReg=1 last>
-----------------
<RefPosition #22  @18  RefTypeDef <Ivl:2 V02> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #23  @23  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #43  @37  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #46  @47  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #104 @87  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #186 @127 RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #206 @141 RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #246 @167 RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #563 @435 RefTypeUse <Ivl:2 V02> LCL_VAR BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #567 @445 RefTypeUse <Ivl:2 V02> LCL_VAR BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #602 @485 RefTypeUse <Ivl:2 V02> LCL_VAR BB07 regmask=[rdx] minReg=1 fixed>
<RefPosition #619 @497 RefTypeUse <Ivl:2 V02> LCL_VAR BB07 regmask=[allIntButFP] minReg=1>
<RefPosition #664 @523 RefTypeUse <Ivl:2 V02> LCL_VAR BB09 regmask=[rdx] minReg=1 fixed>
<RefPosition #780 @605 RefTypeUse <Ivl:2 V02> LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #786 @619 RefTypeUse <Ivl:2 V02> LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #806 @635 RefTypeUse <Ivl:2 V02> LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #876 @681 RefTypeUse <Ivl:2 V02> LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #899 @699 RefTypeUse <Ivl:2 V02> LCL_VAR BB17 regmask=[allIntButFP] minReg=1>
<RefPosition #914 @739 RefTypeUse <Ivl:2 V02> LCL_VAR BB16 regmask=[rcx] minReg=1 fixed>
<RefPosition #932 @761 RefTypeUse <Ivl:2 V02> LCL_VAR BB21 regmask=[allIntButFP] minReg=1 last>
-----------------
<RefPosition #902 @702 RefTypeDef <Ivl:33 V39> STORE_LCL_VAR BB17 regmask=[allIntButFP] minReg=1>
<RefPosition #903 @707 RefTypeUse <Ivl:33 V39> LCL_VAR BB17 regmask=[allIntButFP] minReg=1 regOptional>
<RefPosition #905 @715 RefTypeUse <Ivl:33 V39> LCL_VAR BB18 regmask=[allIntButFP] minReg=1 last>
-----------------
<RefPosition #658 @516 RefTypeDef <Ivl:23 V27> STORE_LCL_VAR BB09 regmask=[allIntButFP] minReg=1>
<RefPosition #659 @519 RefTypeUse <Ivl:23 V27> LCL_VAR BB09 regmask=[allIntButFP] minReg=1>
<RefPosition #679 @531 RefTypeUse <Ivl:23 V27> LCL_VAR BB09 regmask=[allIntButFP] minReg=1>
<RefPosition #690 @545 RefTypeUse <Ivl:23 V27> LCL_VAR BB09 regmask=[r8] minReg=1 last fixed>
-----------------
<RefPosition #473 @338 RefTypeDef <Ivl:12 V16> STORE_LCL_VAR BB03 regmask=[allIntButFP] minReg=1>
<RefPosition #474 @343 RefTypeUse <Ivl:12 V16> LCL_VAR BB03 regmask=[allIntButFP] minReg=1>
<RefPosition #493 @351 RefTypeUse <Ivl:12 V16> LCL_VAR BB03 regmask=[allIntButFP] minReg=1 last>
-----------------
<RefPosition #596 @478 RefTypeDef <Ivl:24 V28> STORE_LCL_VAR BB07 regmask=[allIntButFP] minReg=1>
<RefPosition #597 @481 RefTypeUse <Ivl:24 V28> LCL_VAR BB07 regmask=[allIntButFP] minReg=1>
<RefPosition #617 @493 RefTypeUse <Ivl:24 V28> LCL_VAR BB07 regmask=[allIntButFP] minReg=1>
<RefPosition #624 @501 RefTypeUse <Ivl:24 V28> LCL_VAR BB07 regmask=[rdx] minReg=1 fixed>
<RefPosition #638 @505 RefTypeUse <Ivl:24 V28> LCL_VAR BB07 regmask=[allIntButFP] minReg=1 last>
-----------------
<RefPosition #500 @372 RefTypeDef <Ivl:15 V19> STORE_LCL_VAR BB04 regmask=[allIntButFP] minReg=1>
<RefPosition #501 @375 RefTypeUse <Ivl:15 V19> LCL_VAR BB04 regmask=[allIntButFP] minReg=1>
<RefPosition #507 @386 RefTypeDef <Ivl:15 V19> STORE_LCL_VAR BB05 regmask=[allIntButFP] minReg=1>
<RefPosition #508 @389 RefTypeUse <Ivl:15 V19> LCL_VAR BB05 regmask=[allIntButFP] minReg=1>
<RefPosition #562 @427 RefTypeUse <Ivl:15 V19> LCL_VAR BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #573 @455 RefTypeUse <Ivl:15 V19> LCL_VAR BB06 regmask=[allIntButFP] minReg=1 last>
-----------------
<RefPosition #570 @448 RefTypeDef <Ivl:18 V22> STORE_LCL_VAR BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #575 @459 RefTypeUse <Ivl:18 V22> LCL_VAR BB06 regmask=[allIntButFP] minReg=1 last>
-----------------
<RefPosition #566 @438 RefTypeDef <Ivl:19 V23> STORE_LCL_VAR BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #571 @451 RefTypeUse <Ivl:19 V23> LCL_VAR BB06 regmask=[allIntButFP] minReg=1 last>
-----------------
<RefPosition #709 @550 RefTypeDef <Ivl:36 V42> STORE_LCL_VAR BB09 regmask=[allIntButFP] minReg=1>
<RefPosition #711 @553 RefTypeUse <Ivl:36 V42> LCL_VAR BB09 regmask=[rdx] minReg=1 last fixed>
-----------------
<RefPosition #576 @460 RefTypeDef <Ivl:22 V26> STORE_LCL_VAR BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #577 @465 RefTypeUse <Ivl:22 V26> LCL_VAR BB06 regmask=[allIntButFP] minReg=1 regOptional>
<RefPosition #639 @506 RefTypeDef <Ivl:22 V26> STORE_LCL_VAR BB07 regmask=[allIntButFP] minReg=1>
<RefPosition #686 @541 RefTypeUse <Ivl:22 V26> LCL_VAR BB09 regmask=[rdx] minReg=1 last fixed>
-----------------
<RefPosition #897 @692 RefTypeDef <Ivl:7 V10> STORE_LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #910 @729 RefTypeUse <Ivl:7 V10> LCL_VAR BB20 regmask=[allIntButFP] minReg=1>
<RefPosition #926 @749 RefTypeUse <Ivl:7 V10> LCL_VAR BB16 regmask=[allIntButFP] minReg=1 last>
<RefPosition #929 @752 RefTypeDef <Ivl:7 V10> STORE_LCL_VAR BB16 regmask=[allIntButFP] minReg=1>
<RefPosition #930 @753 RefTypeExpUse <Ivl:7 V10>  BB16 regmask=[allIntButFP] minReg=1 regOptional>
-----------------
<RefPosition #906 @716 RefTypeDef <Ivl:32 V38> STORE_LCL_VAR BB18 regmask=[allIntButFP] minReg=1>
<RefPosition #908 @722 RefTypeDef <Ivl:32 V38> STORE_LCL_VAR BB19 regmask=[allIntButFP] minReg=1>
<RefPosition #911 @729 RefTypeUse <Ivl:32 V38> LCL_VAR BB20 regmask=[allIntButFP] minReg=1 last regOptional>
-----------------
<RefPosition #805 @630 RefTypeDef <Ivl:25 V29> STORE_LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #855 @663 RefTypeUse <Ivl:25 V29> LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #874 @675 RefTypeUse <Ivl:25 V29> LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #881 @685 RefTypeUse <Ivl:25 V29> LCL_VAR BB13 regmask=[rdx] minReg=1 last fixed>
-----------------
<RefPosition #275 @176 RefTypeDef <Ivl:27 V31> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #276 @179 RefTypeUse <Ivl:27 V31> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #278 @183 RefTypeUse <Ivl:27 V31> LCL_VAR BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #297 @195 RefTypeUse <Ivl:27 V31> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>
-----------------
<RefPosition #455 @328 RefTypeDef <Ivl:6 V07> STORE_LCL_VAR BB03 regmask=[allIntButFP] minReg=1>
<RefPosition #503 @379 RefTypeUse <Ivl:6 V07> LCL_VAR BB04 regmask=[allIntButFP] minReg=1 last>
<RefPosition #522 @403 RefTypeUse <Ivl:6 V07> LCL_VAR BB05 regmask=[r8] minReg=1 last fixed>
ExecuteAnalyzers: LocalVar V07: undefined use at 403
-----------------
<RefPosition #496 @356 RefTypeDef <Ivl:14 V18> STORE_LCL_VAR BB03 regmask=[allIntButFP] minReg=1>
<RefPosition #499 @371 RefTypeUse <Ivl:14 V18> LCL_VAR BB04 regmask=[allIntButFP] minReg=1 last>
<RefPosition #506 @385 RefTypeUse <Ivl:14 V18> LCL_VAR BB05 regmask=[allIntButFP] minReg=1 last>
ExecuteAnalyzers: LocalVar V18: undefined use at 385
-----------------
<RefPosition #502 @376 RefTypeDef <Ivl:16 V20> STORE_LCL_VAR BB04 regmask=[allIntButFP] minReg=1>
<RefPosition #509 @390 RefTypeDef <Ivl:16 V20> STORE_LCL_VAR BB05 regmask=[allIntButFP] minReg=1>
<RefPosition #543 @413 RefTypeUse <Ivl:16 V20> LCL_VAR BB06 regmask=[allIntButFP] minReg=1 last>
-----------------
<RefPosition #504 @380 RefTypeDef <Ivl:17 V21> STORE_LCL_VAR BB04 regmask=[allIntButFP] minReg=1>
<RefPosition #541 @408 RefTypeDef <Ivl:17 V21> STORE_LCL_VAR BB05 regmask=[allIntButFP] minReg=1>
<RefPosition #548 @417 RefTypeUse <Ivl:17 V21> LCL_VAR BB06 regmask=[rdx] minReg=1 last fixed>
-----------------
<RefPosition #494 @352 RefTypeDef <Ivl:13 V17> STORE_LCL_VAR BB03 regmask=[allIntButFP] minReg=1>
<RefPosition #495 @355 RefTypeUse <Ivl:13 V17> LCL_VAR BB03 regmask=[allIntButFP] minReg=1 last>
-----------------
<RefPosition #572 @452 RefTypeDef <Ivl:20 V24> STORE_LCL_VAR BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #715 @557 RefTypeUse <Ivl:20 V24> LCL_VAR BB09 regmask=[rcx] minReg=1 last fixed>
-----------------
<RefPosition #574 @456 RefTypeDef <Ivl:21 V25> STORE_LCL_VAR BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #682 @537 RefTypeUse <Ivl:21 V25> LCL_VAR BB09 regmask=[rcx] minReg=1 last fixed>
-----------------
<RefPosition #319 @210 RefTypeDef <Ivl:3 V03> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #320 @219 RefTypeUse <Ivl:3 V03> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #334 @231 RefTypeUse <Ivl:3 V03> LCL_VAR BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #479 @347 RefTypeUse <Ivl:3 V03> LCL_VAR BB03 regmask=[rdx] minReg=1 fixed>
<RefPosition #754 @583 RefTypeExpUse <Ivl:3 V03>  BB09 regmask=[allIntButFP] minReg=1 regOptional>
-----------------
<RefPosition #65  @58  RefTypeDef <Ivl:9 V13> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #85  @77  RefTypeUse <Ivl:9 V13> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #109 @91  RefTypeUse <Ivl:9 V13> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
-----------------
<RefPosition #140 @102 RefTypeDef <Ivl:10 V14> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #167 @119 RefTypeUse <Ivl:10 V14> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #191 @131 RefTypeUse <Ivl:10 V14> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
-----------------
<RefPosition #225 @152 RefTypeDef <Ivl:11 V15> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #227 @155 RefTypeUse <Ivl:11 V15> LCL_VAR BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #251 @171 RefTypeUse <Ivl:11 V15> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
-----------------
<RefPosition #83  @66  RefTypeDef <Ivl:26 V30> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #84  @73  RefTypeUse <Ivl:26 V30> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #90  @81  RefTypeUse <Ivl:26 V30> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
-----------------
<RefPosition #827 @646 RefTypeDef <Ivl:30 V36> STORE_LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #829 @649 RefTypeUse <Ivl:30 V36> LCL_VAR BB13 regmask=[rcx] minReg=1 fixed>
<RefPosition #860 @667 RefTypeUse <Ivl:30 V36> LCL_VAR BB13 regmask=[rdx] minReg=1 last fixed>
-----------------
<RefPosition #373 @248 RefTypeDef <Ivl:35 V41> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #374 @257 RefTypeUse <Ivl:35 V41> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #375 @263 RefTypeUse <Ivl:35 V41> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>
-----------------
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00>  BB00 regmask=[rcx] minReg=1 fixed regOptional>
<RefPosition #380 @271 RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rcx] minReg=1 last fixed>
-----------------
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V01>  BB00 regmask=[rdx] minReg=1 fixed regOptional>
<RefPosition #28  @27  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
-----------------
<RefPosition #362 @244 RefTypeDef <Ivl:4 V04> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #497 @363 RefTypeUse <Ivl:4 V04> LCL_VAR BB03 regmask=[allIntButFP] minReg=1 regOptional>
<RefPosition #755 @583 RefTypeExpUse <Ivl:4 V04>  BB09 regmask=[allIntButFP] minReg=1 regOptional>
-----------------
<RefPosition #20  @12  RefTypeDef <Ivl:8 V12> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #21  @17  RefTypeUse <Ivl:8 V12> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>
-----------------
<RefPosition #315 @202 RefTypeDef <Ivl:28 V32> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #316 @207 RefTypeUse <Ivl:28 V32> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>
-----------------
<RefPosition #783 @608 RefTypeDef <Ivl:29 V35> STORE_LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #784 @613 RefTypeUse <Ivl:29 V35> LCL_VAR BB13 regmask=[allIntButFP] minReg=1 last>
-----------------
<RefPosition #935 @764 RefTypeDef <Ivl:34 V40> STORE_LCL_VAR BB21 regmask=[allIntButFP] minReg=1>
<RefPosition #936 @769 RefTypeUse <Ivl:34 V40> LCL_VAR BB21 regmask=[allIntButFP] minReg=1 last>
-----------------
<RefPosition #809 @638 RefTypeDef <Ivl:31 V37> STORE_LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #875 @675 RefTypeUse <Ivl:31 V37> LCL_VAR BB13 regmask=[allIntButFP] minReg=1 last>
-----------------
<RefPosition #378 @266 RefTypeDef <Ivl:5 V05> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #518 @399 RefTypeUse <Ivl:5 V05> LCL_VAR BB05 regmask=[rcx] minReg=1 fixed>
<RefPosition #756 @583 RefTypeExpUse <Ivl:5 V05>  BB09 regmask=[allIntButFP] minReg=1 regOptional>
TUPLE STYLE DUMP WITH REF POSITIONS
Incoming Parameters:  V00 V01
BB01 [000..070), preds={} succs={BB02}
=====
  N003.                    IL_OFFSET IL offset: 0x0
  N005.                    CNS_INT(h) 0xd1ffab1e method
        Def:<I37>(#3)
  N007.                    PUTARG_REG
                               Use:<I37>(#5) Fixed:rcx(#4) *
        Def:<I38>(#7) rcx
  N009.                    CALL help
                               Use:<I38>(#9) Fixed:rcx(#8) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I39>(#18) rax Pref:<V12/L8>
  N011.                    V12(L8)
                               Use:<I39>(#19) *
        Def:<V12/L8>(#20) Pref:<V02/L2>
  N013.                    IL_OFFSET IL offset: 0x5
  N015.                    V12(L8)
  N017.                    V02(L2)
                               Use:<V12/L8>(#21) *
        Def:<V02/L2>(#22)
  N019.                    IL_OFFSET IL offset: 0x6
  N021.                    V02(L2)
  N023.                    LEA(b+32)
                               Use:<V02/L2>(#23)
        Def:<I40>(#24)
  N025.                    V01(L1)
  N027.                    STOREIND 
                               Use:<I40>(#26) Fixed:rcx(#25) *
                               Use:<V01/L1>(#28) Fixed:rdx(#27) *
        Kill: rax rcx rdx r8 r9 r10 r11 mm0 mm1 mm2 mm3 mm4 mm5 
  N029.                    IL_OFFSET IL offset: 0xd
  N031.                    V02(L2)
  N033.                    LEA(b+60)
  N035.                    CNS_INT   0
        Def:<I41>(#42)
  N037.                    STOREIND 
                               Use:<V02/L2>(#43)
                               Use:<I41>(#44) *
  N039.                    IL_OFFSET IL offset: 0x14
  N041.                    V02(L2)
  N043.                    LEA(b+56)
  N045.                    CNS_INT   0
        Def:<I42>(#45)
  N047.                    STOREIND 
                               Use:<V02/L2>(#46)
                               Use:<I42>(#47) *
  N049.                    IL_OFFSET IL offset: 0x1b
  N051.                    CNS_INT(h) 0xd1ffab1e token
        Def:<I43>(#48)
  N053.                    PUTARG_REG
                               Use:<I43>(#50) Fixed:rcx(#49) *
        Def:<I44>(#52) rcx
  N055.                    CALL help
                               Use:<I44>(#54) Fixed:rcx(#53) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I45>(#63) rax Pref:<V13/L9>
  N057.                    V13(L9)
                               Use:<I45>(#64) *
        Def:<V13/L9>(#65)
  N059.                    CNS_INT(h) 0xd1ffab1e token
        Def:<I46>(#66)
  N061.                    PUTARG_REG
                               Use:<I46>(#68) Fixed:rcx(#67) *
        Def:<I47>(#70) rcx
  N063.                    CALL help
                               Use:<I47>(#72) Fixed:rcx(#71) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I48>(#81) rax Pref:<V30/L26>
  N065.                    V30(L26)
                               Use:<I48>(#82) *
        Def:<V30/L26>(#83)
  N067.                    V30(L26)
  N069.                    LEA(b+52)
  N071.                    CNS_INT   0x2000400
  N073.                    STOREIND 
                               Use:<V30/L26>(#84)
  N075.                    V13(L9)
  N077.                    LEA(b+8) 
                               Use:<V13/L9>(#85)
        Def:<I49>(#86)
  N079.                    V30(L26)
  N081.                    STOREIND 
                               Use:<I49>(#88) Fixed:rcx(#87) *
                               Use:<V30/L26>(#90) Fixed:rdx(#89) *
        Kill: rax rcx rdx r8 r9 r10 r11 mm0 mm1 mm2 mm3 mm4 mm5 
  N083.                    IL_OFFSET IL offset: 0x21
  N085.                    V02(L2)
  N087.                    LEA(b+24)
                               Use:<V02/L2>(#104)
        Def:<I50>(#105)
  N089.                    V13(L9)
  N091.                    STOREIND 
                               Use:<I50>(#107) Fixed:rcx(#106) *
                               Use:<V13/L9>(#109) Fixed:rdx(#108) *
        Kill: rax rcx rdx r8 r9 r10 r11 mm0 mm1 mm2 mm3 mm4 mm5 
  N093.                    IL_OFFSET IL offset: 0x26
  N095.                    CNS_INT(h) 0xd1ffab1e token
        Def:<I51>(#123)
  N097.                    PUTARG_REG
                               Use:<I51>(#125) Fixed:rcx(#124) *
        Def:<I52>(#127) rcx
  N099.                    CALL help
                               Use:<I52>(#129) Fixed:rcx(#128) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I53>(#138) rax Pref:<V14/L10>
  N101.                    V14(L10)
                               Use:<I53>(#139) *
        Def:<V14/L10>(#140)
  N103.                    CNS_INT   0x7ffc7e0b0028
        Def:<I54>(#141)
  N105.                    PUTARG_REG
                               Use:<I54>(#143) Fixed:rcx(#142) *
        Def:<I55>(#145) rcx
  N107.                    CNS_INT   14
        Def:<I56>(#146)
  N109.                    PUTARG_REG
                               Use:<I56>(#148) Fixed:rdx(#147) *
        Def:<I57>(#150) rdx
  N111.                    CALL help
                               Use:<I55>(#152) Fixed:rcx(#151) *
                               Use:<I57>(#154) Fixed:rdx(#153) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I58>(#163) rax LocalDefUse *
  N113.                    CNS_INT(h) 0xd1ffab1e static Fseq[Value]
        Def:<I59>(#164)
  N115.                    IND      
                               Use:<I59>(#165) *
        Def:<I60>(#166)
  N117.                    V14(L10)
  N119.                    LEA(b+8) 
                               Use:<V14/L10>(#167)
        Def:<I61>(#168)
  N121.                    STOREIND 
                               Use:<I61>(#170) Fixed:rcx(#169) *
                               Use:<I60>(#172) Fixed:rdx(#171) *
        Kill: rax rcx rdx r8 r9 r10 r11 mm0 mm1 mm2 mm3 mm4 mm5 
  N123.                    IL_OFFSET IL offset: 0x2c
  N125.                    V02(L2)
  N127.                    LEA(b+8) 
                               Use:<V02/L2>(#186)
        Def:<I62>(#187)
  N129.                    V14(L10)
  N131.                    STOREIND 
                               Use:<I62>(#189) Fixed:rcx(#188) *
                               Use:<V14/L10>(#191) Fixed:rdx(#190) *
        Kill: rax rcx rdx r8 r9 r10 r11 mm0 mm1 mm2 mm3 mm4 mm5 
  N133.                    IL_OFFSET IL offset: 0x31
  N135.                    V02(L2)
  N137.                    LEA(b+16)
  N139.                    CNS_INT   null
        Def:<I63>(#205)
  N141.                    STOREIND 
                               Use:<V02/L2>(#206)
                               Use:<I63>(#207) *
  N143.                    IL_OFFSET IL offset: 0x38
  N145.                    CNS_INT(h) 0xd1ffab1e token
        Def:<I64>(#208)
  N147.                    PUTARG_REG
                               Use:<I64>(#210) Fixed:rcx(#209) *
        Def:<I65>(#212) rcx
  N149.                    CALL help
                               Use:<I65>(#214) Fixed:rcx(#213) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I66>(#223) rax Pref:<V15/L11>
  N151.                    V15(L11)
                               Use:<I66>(#224) *
        Def:<V15/L11>(#225)
  N153.                    V15(L11)
  N155.                    PUTARG_REG
                               Use:<V15/L11>(#227) Fixed:rcx(#226)
        Def:<I67>(#229) rcx Pref:<V15/L11>
  N157.                    CNS_INT   null
        Def:<I68>(#230)
  N159.                    PUTARG_REG
                               Use:<I68>(#232) Fixed:rdx(#231) *
        Def:<I69>(#234) rdx
  N161.                    CALL     
                               Use:<I67>(#236) Fixed:rcx(#235) *
                               Use:<I69>(#238) Fixed:rdx(#237) *
        Kill: rax rcx rdx r8 r9 r10 r11 
  N163.                    IL_OFFSET IL offset: 0x3e
  N165.                    V02(L2)
  N167.                    LEA(b+40)
                               Use:<V02/L2>(#246)
        Def:<I70>(#247)
  N169.                    V15(L11)
  N171.                    STOREIND 
                               Use:<I70>(#249) Fixed:rcx(#248) *
                               Use:<V15/L11>(#251) Fixed:rdx(#250) *
        Kill: rax rcx rdx r8 r9 r10 r11 mm0 mm1 mm2 mm3 mm4 mm5 
  N173.                    CALL     
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I71>(#273) rax Pref:<V31/L27>
  N175.                    V31(L27)
                               Use:<I71>(#274) *
        Def:<V31/L27>(#275)
  N177.                    V31(L27)
  N179.                    NULLCHECK
                               Use:<V31/L27>(#276)
  N181.                    V31(L27)
  N183.                    PUTARG_REG
                               Use:<V31/L27>(#278) Fixed:rcx(#277)
        Def:<I72>(#280) rcx Pref:<V31/L27>
  N185.                    CNS_INT   3
        Def:<I73>(#281)
  N187.                    PUTARG_REG
                               Use:<I73>(#283) Fixed:rdx(#282) *
        Def:<I74>(#285) rdx
  N189.                    CALL     
                               Use:<I72>(#287) Fixed:rcx(#286) *
                               Use:<I74>(#289) Fixed:rdx(#288) *
        Kill: rax rcx rdx r8 r9 r10 r11 
  N191.                    V31(L27)
  N193.                    LEA(b+200)
  N195.                    IND      
                               Use:<V31/L27>(#297) *
        Def:<I75>(#298)
  N197.                    PUTARG_REG
                               Use:<I75>(#300) Fixed:rcx(#299) *
        Def:<I76>(#302) rcx
  N199.                    CALL     
                               Use:<I76>(#304) Fixed:rcx(#303) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I77>(#313) rax Pref:<V32/L28>
  N201.                    V32(L28)
                               Use:<I77>(#314) *
        Def:<V32/L28>(#315)
  N203.                    V32(L28)
  N205.                    LEA(b+40)
  N207.                    IND      
                               Use:<V32/L28>(#316) *
        Def:<I78>(#317) Pref:<V03/L3>
  N209.                    V03(L3)
                               Use:<I78>(#318) *
        Def:<V03/L3>(#319)
  N211.                    CNS_INT   5
  N213.                    PUTARG_STK [+0x20]
  N215.                    V03(L3)
  N217.                    LEA(b+8) 
  N219.                    IND      
                               Use:<V03/L3>(#320)
        Def:<I79>(#321)
  N221.                    PUTARG_REG
                               Use:<I79>(#323) Fixed:r9(#322) *
        Def:<I80>(#325) r9
  N223.                    CNS_INT(h) 0xD1FFAB1E "dotnet.exe"
        Def:<I81>(#326)
  N225.                    IND      
                               Use:<I81>(#327) *
        Def:<I82>(#328)
  N227.                    PUTARG_REG
                               Use:<I82>(#330) Fixed:rdx(#329) *
        Def:<I83>(#332) rdx
  N229.                    V03(L3)
  N231.                    PUTARG_REG
                               Use:<V03/L3>(#334) Fixed:rcx(#333)
        Def:<I84>(#336) rcx Pref:<V03/L3>
  N233.                    CNS_INT   0
        Def:<I85>(#337)
  N235.                    PUTARG_REG
                               Use:<I85>(#339) Fixed:r8(#338) *
        Def:<I86>(#341) r8
  N237.                    CALL     
                               Use:<I80>(#343) Fixed:r9(#342) *
                               Use:<I83>(#345) Fixed:rdx(#344) *
                               Use:<I84>(#347) Fixed:rcx(#346) *
                               Use:<I86>(#349) Fixed:r8(#348) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I87>(#358) rax
  N239.                    CNS_INT   0
  N241.                    GE       
                               Use:<I87>(#359) *
        Def:<I88>(#360) Pref:<V04/L4>
  N243.                    V04(L4)
                               Use:<I88>(#361) *
        Def:<V04/L4>(#362)
  N245.                    CALL     
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I89>(#371) rax Pref:<V41/L35>
  N247.                    V41(L35)
                               Use:<I89>(#372) *
        Def:<V41/L35>(#373)
  N249.                    CNS_INT   0
  N251.                    V41(L35)
  N253.                    LEA(b+8) 
  N255.                    IND      
  N257.                    ARR_BOUNDS_CHECK_Rng
                               Use:<V41/L35>(#374)
  N259.                    V41(L35)
  N261.                    LEA(b+16)
  N263.                    IND      
                               Use:<V41/L35>(#375) *
        Def:<I90>(#376) Pref:<V05/L5>
  N265.                    V05(L5)
                               Use:<I90>(#377) *
        Def:<V05/L5>(#378)
  N267.                    IL_OFFSET IL offset: 0x68
  N269.                    V00(L0)
  N271.                    PUTARG_REG
                               Use:<V00/L0>(#380) Fixed:rcx(#379) *
        Def:<I91>(#382) rcx
  N273.                    CNS_INT(h) 0xd1ffab1e ftn
        Def:<I92>(#384) r11
  N275.                    PUTARG_REG
                               Use:<I92>(#386) Fixed:r11(#385) *
        Def:<I93>(#388) r11
  N277.                    CNS_INT(h) 0xd1ffab1e ftn
  N279.                    IND      
  N281.                    CALLV stub
                               Use:<I91>(#390) Fixed:rcx(#389) *
                               Use:<I93>(#392) Fixed:r11(#391) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I94>(#401) rax
  N283.                    V06 MEM
                               Use:<I94>(#402) *

BB02 [070..072) -> BB13 (cond), preds={BB01} succs={BB03,BB13}
=====
  N287.                    IL_OFFSET IL offset: 0xe9
  N289.                    V06 MEM
        Def:<I95>(#404)
  N291.                    PUTARG_REG
                               Use:<I95>(#406) Fixed:rcx(#405) *
        Def:<I96>(#408) rcx
  N293.                    CNS_INT(h) 0xd1ffab1e ftn
        Def:<I97>(#410) r11
  N295.                    PUTARG_REG
                               Use:<I97>(#412) Fixed:r11(#411) *
        Def:<I98>(#414) r11
  N297.                    CNS_INT(h) 0xd1ffab1e ftn
  N299.                    IND      
  N301.                    CALLV stub
                               Use:<I96>(#416) Fixed:rcx(#415) *
                               Use:<I98>(#418) Fixed:r11(#417) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I99>(#427) rax
  N303.                    CNS_INT   0
  N305.                    EQ       
                               Use:<I99>(#428) *
  N307.                    JTRUE    

BB03 [072..08B) -> BB05 (cond), preds={BB02,BB09} succs={BB04,BB05}
=====
  N311.                    IL_OFFSET IL offset: 0x72
  N313.                    V06 MEM
        Def:<I100>(#430)
  N315.                    PUTARG_REG
                               Use:<I100>(#432) Fixed:rcx(#431) *
        Def:<I101>(#434) rcx
  N317.                    CNS_INT(h) 0xd1ffab1e ftn
        Def:<I102>(#436) r11
  N319.                    PUTARG_REG
                               Use:<I102>(#438) Fixed:r11(#437) *
        Def:<I103>(#440) r11
  N321.                    CNS_INT(h) 0xd1ffab1e ftn
  N323.                    IND      
  N325.                    CALLV stub
                               Use:<I101>(#442) Fixed:rcx(#441) *
                               Use:<I103>(#444) Fixed:r11(#443) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I104>(#453) rax Pref:<V07/L6>
  N327.                    V07(L6)
                               Use:<I104>(#454) *
        Def:<V07/L6>(#455) Pref:<V21/L17>
  N329.                    IL_OFFSET IL offset: 0x7b
  N331.                    CNS_INT(h) 0xd1ffab1e token
        Def:<I105>(#456)
  N333.                    PUTARG_REG
                               Use:<I105>(#458) Fixed:rcx(#457) *
        Def:<I106>(#460) rcx
  N335.                    CALL help
                               Use:<I106>(#462) Fixed:rcx(#461) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I107>(#471) rax Pref:<V16/L12>
  N337.                    V16(L12)
                               Use:<I107>(#472) *
        Def:<V16/L12>(#473) Pref:<V17/L13>
  N339.                    IL_OFFSET IL offset: 0x80
  N341.                    V16(L12)
  N343.                    LEA(b+8) 
                               Use:<V16/L12>(#474)
        Def:<I108>(#475)
  N345.                    V03(L3)
  N347.                    STOREIND 
                               Use:<I108>(#477) Fixed:rcx(#476) *
                               Use:<V03/L3>(#479) Fixed:rdx(#478)
        Kill: rax rcx rdx r8 r9 r10 r11 mm0 mm1 mm2 mm3 mm4 mm5 
  N349.                    V16(L12)
  N351.                    V17(L13)
                               Use:<V16/L12>(#493) *
        Def:<V17/L13>(#494) Pref:<V18/L14>
  N353.                    V17(L13)
  N355.                    V18(L14)
                               Use:<V17/L13>(#495) *
        Def:<V18/L14>(#496) Pref:<V19/L15>
  N357.                    IL_OFFSET IL offset: 0x87
  N359.                    V04(L4)
  N361.                    CNS_INT   0
  N363.                    NE       
                               Use:<V04/L4>(#497)
  N365.                    JTRUE    

BB04 [08B..08F) -> BB06 (always), preds={BB03} succs={BB06}
=====
  N369.                    V18(L14)
  N371.                    V19(L15)
                               Use:<V18/L14>(#499) *
        Def:<V19/L15>(#500) Pref:<V25/L21>
  N373.                    V19(L15)
  N375.                    V20(L16)
                               Use:<V19/L15>(#501)
        Def:<V20/L16>(#502)
  N377.                    V07(L6)
  N379.                    V21(L17)
                               Use:<V07/L6>(#503) *
        Def:<V21/L17>(#504)

BB05 [08F..09C), preds={BB03} succs={BB06}
=====
  N383.                    V18(L14)
  N385.                    V19(L15)
                               Use:<V18/L14>(#506) *
        Def:<V19/L15>(#507) Pref:<V25/L21>
  N387.                    V19(L15)
  N389.                    V20(L16)
                               Use:<V19/L15>(#508)
        Def:<V20/L16>(#509)
  N391.                    CNS_INT(h) 0xD1FFAB1E " "
        Def:<I109>(#510)
  N393.                    IND      
                               Use:<I109>(#511) *
        Def:<I110>(#512)
  N395.                    PUTARG_REG
                               Use:<I110>(#514) Fixed:rdx(#513) *
        Def:<I111>(#516) rdx
  N397.                    V05(L5)
  N399.                    PUTARG_REG
                               Use:<V05/L5>(#518) Fixed:rcx(#517)
        Def:<I112>(#520) rcx Pref:<V05/L5>
  N401.                    V07(L6)
  N403.                    PUTARG_REG
                               Use:<V07/L6>(#522) Fixed:r8(#521) *
        Def:<I113>(#524) r8
  N405.                    CALL     
                               Use:<I111>(#526) Fixed:rdx(#525) *
                               Use:<I112>(#528) Fixed:rcx(#527) *
                               Use:<I113>(#530) Fixed:r8(#529) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I114>(#539) rax Pref:<V21/L17>
  N407.                    V21(L17)
                               Use:<I114>(#540) *
        Def:<V21/L17>(#541)

BB06 [09C..0BB) -> BB09 (cond), preds={BB04,BB05} succs={BB07,BB09}
=====
  N411.                    V20(L16)
  N413.                    LEA(b+16)
                               Use:<V20/L16>(#543) *
        Def:<I115>(#544)
  N415.                    V21(L17)
  N417.                    STOREIND 
                               Use:<I115>(#546) Fixed:rcx(#545) *
                               Use:<V21/L17>(#548) Fixed:rdx(#547) *
        Kill: rax rcx rdx r8 r9 r10 r11 mm0 mm1 mm2 mm3 mm4 mm5 
  N419.                    IL_OFFSET IL offset: 0xa1
  N421.                    V19(L15)
  N423.                    LEA(b+130)
  N425.                    CNS_INT   0
  N427.                    STOREIND 
                               Use:<V19/L15>(#562)
  N429.                    IL_OFFSET IL offset: 0xaa
  N431.                    V02(L2)
  N433.                    LEA(b+8) 
  N435.                    IND      
                               Use:<V02/L2>(#563)
        Def:<I116>(#564) Pref:<V23/L19>
  N437.                    V23(L19)
                               Use:<I116>(#565) *
        Def:<V23/L19>(#566) Pref:<V24/L20>
  N439.                    IL_OFFSET IL offset: 0xaa
  N441.                    V02(L2)
  N443.                    LEA(b+48)
  N445.                    IND      
                               Use:<V02/L2>(#567)
        Def:<I117>(#568) Pref:<V22/L18>
  N447.                    V22(L18)
                               Use:<I117>(#569) *
        Def:<V22/L18>(#570) Pref:<V26/L22>
  N449.                    V23(L19)
  N451.                    V24(L20)
                               Use:<V23/L19>(#571) *
        Def:<V24/L20>(#572)
  N453.                    V19(L15)
  N455.                    V25(L21)
                               Use:<V19/L15>(#573) *
        Def:<V25/L21>(#574)
  N457.                    V22(L18)
  N459.                    V26(L22)
                               Use:<V22/L18>(#575) *
        Def:<V26/L22>(#576)
  N461.                    V26(L22)
  N463.                    CNS_INT   null
  N465.                    NE       
                               Use:<V26/L22>(#577)
  N467.                    JTRUE    

BB07 [000..0D3), preds={BB06} succs={BB09}
=====
  N471.                    CNS_INT(h) 0xd1ffab1e token
        Def:<I118>(#579)
  N473.                    PUTARG_REG
                               Use:<I118>(#581) Fixed:rcx(#580) *
        Def:<I119>(#583) rcx
  N475.                    CALL help
                               Use:<I119>(#585) Fixed:rcx(#584) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I120>(#594) rax Pref:<V28/L24>
  N477.                    V28(L24)
                               Use:<I120>(#595) *
        Def:<V28/L24>(#596) Pref:<V26/L22>
  N479.                    V28(L24)
  N481.                    LEA(b+8) 
                               Use:<V28/L24>(#597)
        Def:<I121>(#598)
  N483.                    V02(L2)
  N485.                    STOREIND 
                               Use:<I121>(#600) Fixed:rcx(#599) *
                               Use:<V02/L2>(#602) Fixed:rdx(#601)
        Kill: rax rcx rdx r8 r9 r10 r11 mm0 mm1 mm2 mm3 mm4 mm5 
  N487.                    V28(L24)
  N489.                    LEA(b+24)
  N491.                    CNS_INT(h) 0xd1ffab1e ftn
        Def:<I122>(#616)
  N493.                    STOREIND 
                               Use:<V28/L24>(#617)
                               Use:<I122>(#618) *
  N495.                    V02(L2)
  N497.                    LEA(b+48)
                               Use:<V02/L2>(#619)
        Def:<I123>(#620)
  N499.                    V28(L24)
  N501.                    STOREIND 
                               Use:<I123>(#622) Fixed:rcx(#621) *
                               Use:<V28/L24>(#624) Fixed:rdx(#623)
        Kill: rax rcx rdx r8 r9 r10 r11 mm0 mm1 mm2 mm3 mm4 mm5 
  N503.                    V28(L24)
  N505.                    V26(L22)
                               Use:<V28/L24>(#638) *
        Def:<V26/L22>(#639)

BB09 [000..0F2) -> BB03 (cond), preds={BB06,BB07} succs={BB13,BB03}
=====
  N509.                    CNS_INT(h) 0xd1ffab1e token
        Def:<I124>(#641)
  N511.                    PUTARG_REG
                               Use:<I124>(#643) Fixed:rcx(#642) *
        Def:<I125>(#645) rcx
  N513.                    CALL help
                               Use:<I125>(#647) Fixed:rcx(#646) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I126>(#656) rax Pref:<V27/L23>
  N515.                    V27(L23)
                               Use:<I126>(#657) *
        Def:<V27/L23>(#658)
  N517.                    V27(L23)
  N519.                    LEA(b+8) 
                               Use:<V27/L23>(#659)
        Def:<I127>(#660)
  N521.                    V02(L2)
  N523.                    STOREIND 
                               Use:<I127>(#662) Fixed:rcx(#661) *
                               Use:<V02/L2>(#664) Fixed:rdx(#663)
        Kill: rax rcx rdx r8 r9 r10 r11 mm0 mm1 mm2 mm3 mm4 mm5 
  N525.                    V27(L23)
  N527.                    LEA(b+24)
  N529.                    CNS_INT(h) 0xd1ffab1e ftn
        Def:<I128>(#678)
  N531.                    STOREIND 
                               Use:<V27/L23>(#679)
                               Use:<I128>(#680) *
  N533.                    IL_OFFSET IL offset: 0xdf
  N535.                    V25(L21)
  N537.                    PUTARG_REG
                               Use:<V25/L21>(#682) Fixed:rcx(#681) *
        Def:<I129>(#684) rcx
  N539.                    V26(L22)
  N541.                    PUTARG_REG
                               Use:<V26/L22>(#686) Fixed:rdx(#685) *
        Def:<I130>(#688) rdx
  N543.                    V27(L23)
  N545.                    PUTARG_REG
                               Use:<V27/L23>(#690) Fixed:r8(#689) *
        Def:<I131>(#692) r8
  N547.                    CALL     
                               Use:<I129>(#694) Fixed:rcx(#693) *
                               Use:<I130>(#696) Fixed:rdx(#695) *
                               Use:<I131>(#698) Fixed:r8(#697) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I132>(#707) rax Pref:<V42/L36>
  N549.                    V42(L36)
                               Use:<I132>(#708) *
        Def:<V42/L36>(#709)
  N551.                    V42(L36)
  N553.                    PUTARG_REG
                               Use:<V42/L36>(#711) Fixed:rdx(#710) *
        Def:<I133>(#713) rdx
  N555.                    V24(L20)
  N557.                    PUTARG_REG
                               Use:<V24/L20>(#715) Fixed:rcx(#714) *
        Def:<I134>(#717) rcx
  N559.                    CALL nullcheck
                               Use:<I133>(#719) Fixed:rdx(#718) *
                               Use:<I134>(#721) Fixed:rcx(#720) *
        Kill: rax rcx rdx r8 r9 r10 r11 
  N561.                    IL_OFFSET IL offset: 0xe9
  N563.                    V06 MEM
        Def:<I135>(#729)
  N565.                    PUTARG_REG
                               Use:<I135>(#731) Fixed:rcx(#730) *
        Def:<I136>(#733) rcx
  N567.                    CNS_INT(h) 0xd1ffab1e ftn
        Def:<I137>(#735) r11
  N569.                    PUTARG_REG
                               Use:<I137>(#737) Fixed:r11(#736) *
        Def:<I138>(#739) r11
  N571.                    CNS_INT(h) 0xd1ffab1e ftn
  N573.                    IND      
  N575.                    CALLV stub
                               Use:<I136>(#741) Fixed:rcx(#740) *
                               Use:<I138>(#743) Fixed:r11(#742) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I139>(#752) rax
  N577.                    CNS_INT   0
  N579.                    NE       
                               Use:<I139>(#753) *
  N581.                    JTRUE    

  Exposed use of V03 at #754
  Exposed use of V04 at #755
  Exposed use of V05 at #756
BB13 [0F4..127) -> BB17 (always), preds={BB02,BB09} succs={BB17}
=====
  N585.                    V06 MEM
        Def:<I140>(#758)
  N587.                    PUTARG_REG
                               Use:<I140>(#760) Fixed:rcx(#759) *
        Def:<I141>(#762) rcx
  N589.                    CNS_INT(h) 0xd1ffab1e ftn
        Def:<I142>(#764) r11
  N591.                    PUTARG_REG
                               Use:<I142>(#766) Fixed:r11(#765) *
        Def:<I143>(#768) r11
  N593.                    CNS_INT(h) 0xd1ffab1e ftn
  N595.                    IND      
  N597.                    CALLV stub
                               Use:<I141>(#770) Fixed:rcx(#769) *
                               Use:<I143>(#772) Fixed:r11(#771) *
        Kill: rax rcx rdx r8 r9 r10 r11 
  N599.                    IL_OFFSET IL offset: 0x100
  N601.                    V02(L2)
  N603.                    LEA(b+8) 
  N605.                    IND      
                               Use:<V02/L2>(#780)
        Def:<I144>(#781) Pref:<V35/L29>
  N607.                    V35(L29)
                               Use:<I144>(#782) *
        Def:<V35/L29>(#783)
  N609.                    V35(L29)
  N611.                    LEA(b+24)
  N613.                    IND      
                               Use:<V35/L29>(#784) *
        Def:<I145>(#785)
  N615.                    V02(L2)
  N617.                    LEA(b+60)
  N619.                    STOREIND 
                               Use:<V02/L2>(#786)
                               Use:<I145>(#787) *
  N621.                    IL_OFFSET IL offset: 0x111
  N623.                    CNS_INT(h) 0xd1ffab1e method
        Def:<I146>(#788)
  N625.                    PUTARG_REG
                               Use:<I146>(#790) Fixed:rcx(#789) *
        Def:<I147>(#792) rcx
  N627.                    CALL help
                               Use:<I147>(#794) Fixed:rcx(#793) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I148>(#803) rax Pref:<V29/L25>
  N629.                    V29(L25)
                               Use:<I148>(#804) *
        Def:<V29/L25>(#805)
  N631.                    V02(L2)
  N633.                    LEA(b+60)
  N635.                    IND      
                               Use:<V02/L2>(#806)
        Def:<I149>(#807) Pref:<V37/L31>
  N637.                    V37(L31)
                               Use:<I149>(#808) *
        Def:<V37/L31>(#809)
  N639.                    CNS_INT(h) 0xd1ffab1e token
        Def:<I150>(#810)
  N641.                    PUTARG_REG
                               Use:<I150>(#812) Fixed:rcx(#811) *
        Def:<I151>(#814) rcx
  N643.                    CALL help
                               Use:<I151>(#816) Fixed:rcx(#815) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I152>(#825) rax Pref:<V36/L30>
  N645.                    V36(L30)
                               Use:<I152>(#826) *
        Def:<V36/L30>(#827)
  N647.                    V36(L30)
  N649.                    PUTARG_REG
                               Use:<V36/L30>(#829) Fixed:rcx(#828)
        Def:<I153>(#831) rcx Pref:<V36/L30>
  N651.                    CNS_INT   0
        Def:<I154>(#832)
  N653.                    PUTARG_REG
                               Use:<I154>(#834) Fixed:rdx(#833) *
        Def:<I155>(#836) rdx
  N655.                    CNS_INT   null
        Def:<I156>(#837)
  N657.                    PUTARG_REG
                               Use:<I156>(#839) Fixed:r8(#838) *
        Def:<I157>(#841) r8
  N659.                    CALL     
                               Use:<I153>(#843) Fixed:rcx(#842) *
                               Use:<I155>(#845) Fixed:rdx(#844) *
                               Use:<I157>(#847) Fixed:r8(#846) *
        Kill: rax rcx rdx r8 r9 r10 r11 
  N661.                    V29(L25)
  N663.                    LEA(b+8) 
                               Use:<V29/L25>(#855)
        Def:<I158>(#856)
  N665.                    V36(L30)
  N667.                    STOREIND 
                               Use:<I158>(#858) Fixed:rcx(#857) *
                               Use:<V36/L30>(#860) Fixed:rdx(#859) *
        Kill: rax rcx rdx r8 r9 r10 r11 mm0 mm1 mm2 mm3 mm4 mm5 
  N669.                    V29(L25)
  N671.                    LEA(b+16)
  N673.                    V37(L31)
  N675.                    STOREIND 
                               Use:<V29/L25>(#874)
                               Use:<V37/L31>(#875) *
  N677.                    IL_OFFSET IL offset: 0x11d
  N679.                    V02(L2)
  N681.                    LEA(b+16)
                               Use:<V02/L2>(#876)
        Def:<I159>(#877)
  N683.                    V29(L25)
  N685.                    STOREIND 
                               Use:<I159>(#879) Fixed:rcx(#878) *
                               Use:<V29/L25>(#881) Fixed:rdx(#880) *
        Kill: rax rcx rdx r8 r9 r10 r11 mm0 mm1 mm2 mm3 mm4 mm5 
  N687.                    IL_OFFSET IL offset: 0x122
  N689.                    CNS_INT   0
        Def:<I160>(#895) Pref:<V10/L7>
  N691.                    V10(L7)
                               Use:<I160>(#896) *
        Def:<V10/L7>(#897) Pref:<I163>

BB17 [000..147) -> BB19 (cond), preds={BB13,BB16} succs={BB18,BB19}
=====
  N695.                    V02(L2)
  N697.                    LEA(b+60)
  N699.                    IND      
                               Use:<V02/L2>(#899)
        Def:<I161>(#900) Pref:<V39/L33>
  N701.                    V39(L33)
                               Use:<I161>(#901) *
        Def:<V39/L33>(#902) Pref:<V38/L32>
  N703.                    V39(L33)
  N705.                    CNS_INT   8
  N707.                    GE       
                               Use:<V39/L33>(#903)
  N709.                    JTRUE    

BB18 [000..000) -> BB20 (always), preds={BB17} succs={BB20}
=====
  N713.                    V39(L33)
  N715.                    V38(L32)
                               Use:<V39/L33>(#905) *
        Def:<V38/L32>(#906)

BB19 [000..000), preds={BB17} succs={BB20}
=====
  N719.                    CNS_INT   8
  N721.                    V38(L32)
        Def:<V38/L32>(#908)

BB20 [???..???) -> BB16 (cond), preds={BB18,BB19} succs={BB21,BB16}
=====
  N725.                    V10(L7)
  N727.                    V38(L32)
  N729.                    LT       
                               Use:<V10/L7>(#910)
                               Use:<V38/L32>(#911) *
  N731.                    JTRUE    

BB16 [127..133), preds={BB20} succs={BB17}
=====
  N735.                    IL_OFFSET IL offset: 0x127
  N737.                    V02(L2)
  N739.                    PUTARG_REG
                               Use:<V02/L2>(#914) Fixed:rcx(#913)
        Def:<I162>(#916) rcx Pref:<V02/L2>
  N741.                    CALL     
                               Use:<I162>(#918) Fixed:rcx(#917) *
        Kill: rax rcx rdx r8 r9 r10 r11 
  N743.                    IL_OFFSET IL offset: 0x12d
  N745.                    V10(L7)
  N747.                    CNS_INT   1
  N749.                    ADD      
                               Use:<V10/L7>(#926) *
        Def:<I163>(#927) Pref:<V10/L7>
  N751.                    V10(L7)
                               Use:<I163>(#928) *
        Def:<V10/L7>(#929) Pref:<I163>

  Exposed use of V10 at #930
BB21 [147..153) (return), preds={BB20} succs={}
=====
  N755.                    IL_OFFSET IL offset: 0x147
  N757.                    V02(L2)
  N759.                    LEA(b+24)
  N761.                    IND      
                               Use:<V02/L2>(#932) *
        Def:<I164>(#933) Pref:<V40/L34>
  N763.                    V40(L34)
                               Use:<I164>(#934) *
        Def:<V40/L34>(#935)
  N765.                    V40(L34)
  N767.                    LEA(b+8) 
  N769.                    IND      
                               Use:<V40/L34>(#936) *
        Def:<I165>(#937)
  N771.                    RETURN   
                               Use:<I165>(#939) Fixed:rax(#938) *

BB22 [0F4..0F8) -> BB24 (cond), preds={} succs={BB23,BB24}
=====
  N775.                    IL_OFFSET IL offset: 0xf4
  N777.                    V06 MEM
  N779.                    CNS_INT   null
  N781.                    EQ       
  N783.                    JTRUE    

BB23 [0F8..0FF), preds={BB22} succs={BB24}
=====
  N787.                    IL_OFFSET IL offset: 0xf8
  N789.                    V06 MEM
        Def:<I166>(#942)
  N791.                    PUTARG_REG
                               Use:<I166>(#944) Fixed:rcx(#943) *
        Def:<I167>(#946) rcx
  N793.                    CNS_INT(h) 0xd1ffab1e ftn
        Def:<I168>(#948) r11
  N795.                    PUTARG_REG
                               Use:<I168>(#950) Fixed:r11(#949) *
        Def:<I169>(#952) r11
  N797.                    CNS_INT(h) 0xd1ffab1e ftn
  N799.                    IND      
  N801.                    CALLV stub
                               Use:<I167>(#954) Fixed:rcx(#953) *
                               Use:<I169>(#956) Fixed:r11(#955) *
        Kill: rax rcx rdx r8 r9 r10 r11 

BB24 [0FF..100) (finret), preds={BB22,BB23} succs={}
=====
  N805.                    IL_OFFSET IL offset: 0xff
  N807.                    RETFILT  

BB25 [???..???) (throw), preds={} succs={}
=====
  N811.                    CALL help
        Kill: rax rcx rdx r8 r9 r10 r11 




Linear scan intervals after buildIntervals:
Interval  0: (V00) ref RefPositions {#0@0 #380@271} physReg:rcx Preferences=[rbx rsi rdi r12-r15]
Interval  1: (V01) ref RefPositions {#1@0 #28@27} physReg:rdx Preferences=[rbx rsi rdi r12-r15]
Interval  2: (V02) ref RefPositions {#22@18 #23@23 #43@37 #46@47 #104@87 #186@127 #206@141 #246@167 #563@435 #567@445 #602@485 #619@497 #664@523 #780@605 #786@619 #806@635 #876@681 #899@699 #914@739 #932@761} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval  3: (V03) ref RefPositions {#319@210 #320@219 #334@231 #479@347 #754@583} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval  4: (V04) int RefPositions {#362@244 #497@363 #755@583} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval  5: (V05) ref RefPositions {#378@266 #518@399 #756@583} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval  6: (V07) ref RefPositions {#455@328 #503@379 #522@403} physReg:NA Preferences=[rbx rsi rdi r12-r15] RelatedInterval <V21/L17>
Interval  7: (V10) int RefPositions {#897@692 #910@729 #926@749 #929@752 #930@753} physReg:NA Preferences=[rbx rsi rdi r12-r15] RelatedInterval <I163>
Interval  8: (V12) ref RefPositions {#20@12 #21@17} physReg:NA Preferences=[allIntButFP] RelatedInterval <V02/L2>
Interval  9: (V13) ref RefPositions {#65@58 #85@77 #109@91} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 10: (V14) ref RefPositions {#140@102 #167@119 #191@131} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 11: (V15) ref RefPositions {#225@152 #227@155 #251@171} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 12: (V16) ref RefPositions {#473@338 #474@343 #493@351} physReg:NA Preferences=[rbx rsi rdi r12-r15] RelatedInterval <V17/L13>
Interval 13: (V17) ref RefPositions {#494@352 #495@355} physReg:NA Preferences=[allIntButFP] RelatedInterval <V18/L14>
Interval 14: (V18) ref RefPositions {#496@356 #499@371 #506@385} physReg:NA Preferences=[allIntButFP] RelatedInterval <V19/L15>
Interval 15: (V19) ref RefPositions {#500@372 #501@375 #507@386 #508@389 #562@427 #573@455} physReg:NA Preferences=[rbx rsi rdi r12-r15] RelatedInterval <V25/L21>
Interval 16: (V20) ref RefPositions {#502@376 #509@390 #543@413} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 17: (V21) ref RefPositions {#504@380 #541@408 #548@417} physReg:NA Preferences=[rdx]
Interval 18: (V22) ref RefPositions {#570@448 #575@459} physReg:NA Preferences=[allIntButFP] RelatedInterval <V26/L22>
Interval 19: (V23) ref RefPositions {#566@438 #571@451} physReg:NA Preferences=[allIntButFP] RelatedInterval <V24/L20>
Interval 20: (V24) ref RefPositions {#572@452 #715@557} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 21: (V25) ref RefPositions {#574@456 #682@537} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 22: (V26) ref RefPositions {#576@460 #577@465 #639@506 #686@541} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 23: (V27) ref RefPositions {#658@516 #659@519 #679@531 #690@545} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 24: (V28) ref RefPositions {#596@478 #597@481 #617@493 #624@501 #638@505} physReg:NA Preferences=[rbx rsi rdi r12-r15] RelatedInterval <V26/L22>
Interval 25: (V29) ref RefPositions {#805@630 #855@663 #874@675 #881@685} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 26: (V30) ref RefPositions {#83@66 #84@73 #90@81} physReg:NA Preferences=[rdx]
Interval 27: (V31) ref RefPositions {#275@176 #276@179 #278@183 #297@195} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 28: (V32) ref RefPositions {#315@202 #316@207} physReg:NA Preferences=[allIntButFP]
Interval 29: (V35) ref RefPositions {#783@608 #784@613} physReg:NA Preferences=[allIntButFP]
Interval 30: (V36) ref RefPositions {#827@646 #829@649 #860@667} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 31: (V37) int RefPositions {#809@638 #875@675} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 32: (V38) int RefPositions {#906@716 #908@722 #911@729} physReg:NA Preferences=[allIntButFP]
Interval 33: (V39) int RefPositions {#902@702 #903@707 #905@715} physReg:NA Preferences=[allIntButFP] RelatedInterval <V38/L32>
Interval 34: (V40) ref RefPositions {#935@764 #936@769} physReg:NA Preferences=[allIntButFP]
Interval 35: (V41) ref RefPositions {#373@248 #374@257 #375@263} physReg:NA Preferences=[allIntButFP]
Interval 36: (V42) ref RefPositions {#709@550 #711@553} physReg:NA Preferences=[rdx]
Interval 37: long (constant) RefPositions {#3@6 #5@7} physReg:NA Preferences=[rcx]
Interval 38: long RefPositions {#7@8 #9@9} physReg:NA Preferences=[rcx]
Interval 39: ref RefPositions {#18@10 #19@11} physReg:NA Preferences=[rax] RelatedInterval <V12/L8>
Interval 40: byref RefPositions {#24@24 #26@27} physReg:NA Preferences=[rcx]
Interval 41: int (constant) RefPositions {#42@36 #44@37} physReg:NA Preferences=[allIntButFP]
Interval 42: int (constant) RefPositions {#45@46 #47@47} physReg:NA Preferences=[allIntButFP]
Interval 43: long (constant) RefPositions {#48@52 #50@53} physReg:NA Preferences=[rcx]
Interval 44: long RefPositions {#52@54 #54@55} physReg:NA Preferences=[rcx]
Interval 45: ref RefPositions {#63@56 #64@57} physReg:NA Preferences=[rax] RelatedInterval <V13/L9>
Interval 46: long (constant) RefPositions {#66@60 #68@61} physReg:NA Preferences=[rcx]
Interval 47: long RefPositions {#70@62 #72@63} physReg:NA Preferences=[rcx]
Interval 48: ref RefPositions {#81@64 #82@65} physReg:NA Preferences=[rax] RelatedInterval <V30/L26>
Interval 49: byref RefPositions {#86@78 #88@81} physReg:NA Preferences=[rcx]
Interval 50: byref RefPositions {#105@88 #107@91} physReg:NA Preferences=[rcx]
Interval 51: long (constant) RefPositions {#123@96 #125@97} physReg:NA Preferences=[rcx]
Interval 52: long RefPositions {#127@98 #129@99} physReg:NA Preferences=[rcx]
Interval 53: ref RefPositions {#138@100 #139@101} physReg:NA Preferences=[rax] RelatedInterval <V14/L10>
Interval 54: long (constant) RefPositions {#141@104 #143@105} physReg:NA Preferences=[rcx]
Interval 55: long RefPositions {#145@106 #152@111} physReg:NA Preferences=[rcx]
Interval 56: int (constant) RefPositions {#146@108 #148@109} physReg:NA Preferences=[rdx]
Interval 57: int RefPositions {#150@110 #154@111} physReg:NA Preferences=[rdx]
Interval 58: long RefPositions {#163@112} physReg:NA Preferences=[rax]
Interval 59: long (constant) RefPositions {#164@114 #165@115} physReg:NA Preferences=[allIntButFP]
Interval 60: ref RefPositions {#166@116 #172@121} physReg:NA Preferences=[rdx]
Interval 61: byref RefPositions {#168@120 #170@121} physReg:NA Preferences=[rcx]
Interval 62: byref RefPositions {#187@128 #189@131} physReg:NA Preferences=[rcx]
Interval 63: ref (constant) RefPositions {#205@140 #207@141} physReg:NA Preferences=[allIntButFP]
Interval 64: long (constant) RefPositions {#208@146 #210@147} physReg:NA Preferences=[rcx]
Interval 65: long RefPositions {#212@148 #214@149} physReg:NA Preferences=[rcx]
Interval 66: ref RefPositions {#223@150 #224@151} physReg:NA Preferences=[rax] RelatedInterval <V15/L11>
Interval 67: ref (specialPutArg) RefPositions {#229@156 #236@161} physReg:NA Preferences=[rcx] RelatedInterval <V15/L11>
Interval 68: ref (constant) RefPositions {#230@158 #232@159} physReg:NA Preferences=[rdx]
Interval 69: ref RefPositions {#234@160 #238@161} physReg:NA Preferences=[rdx]
Interval 70: byref RefPositions {#247@168 #249@171} physReg:NA Preferences=[rcx]
Interval 71: ref RefPositions {#273@174 #274@175} physReg:NA Preferences=[rax] RelatedInterval <V31/L27>
Interval 72: ref (specialPutArg) RefPositions {#280@184 #287@189} physReg:NA Preferences=[rcx] RelatedInterval <V31/L27>
Interval 73: int (constant) RefPositions {#281@186 #283@187} physReg:NA Preferences=[rdx]
Interval 74: int RefPositions {#285@188 #289@189} physReg:NA Preferences=[rdx]
Interval 75: int RefPositions {#298@196 #300@197} physReg:NA Preferences=[rcx]
Interval 76: int RefPositions {#302@198 #304@199} physReg:NA Preferences=[rcx]
Interval 77: ref RefPositions {#313@200 #314@201} physReg:NA Preferences=[rax] RelatedInterval <V32/L28>
Interval 78: ref RefPositions {#317@208 #318@209} physReg:NA Preferences=[allIntButFP] RelatedInterval <V03/L3>
Interval 79: int RefPositions {#321@220 #323@221} physReg:NA Preferences=[r9]
Interval 80: int RefPositions {#325@222 #343@237} physReg:NA Preferences=[r9]
Interval 81: long (constant) RefPositions {#326@224 #327@225} physReg:NA Preferences=[allIntButFP]
Interval 82: ref RefPositions {#328@226 #330@227} physReg:NA Preferences=[rdx]
Interval 83: ref RefPositions {#332@228 #345@237} physReg:NA Preferences=[rdx]
Interval 84: ref (specialPutArg) RefPositions {#336@232 #347@237} physReg:NA Preferences=[rcx] RelatedInterval <V03/L3>
Interval 85: int (constant) RefPositions {#337@234 #339@235} physReg:NA Preferences=[r8]
Interval 86: int RefPositions {#341@236 #349@237} physReg:NA Preferences=[r8]
Interval 87: int RefPositions {#358@238 #359@241} physReg:NA Preferences=[rax]
Interval 88: int RefPositions {#360@242 #361@243} physReg:NA Preferences=[allIntButFP] RelatedInterval <V04/L4>
Interval 89: ref RefPositions {#371@246 #372@247} physReg:NA Preferences=[rax] RelatedInterval <V41/L35>
Interval 90: ref RefPositions {#376@264 #377@265} physReg:NA Preferences=[allIntButFP] RelatedInterval <V05/L5>
Interval 91: ref RefPositions {#382@272 #390@281} physReg:NA Preferences=[rcx]
Interval 92: long (constant) RefPositions {#384@274 #386@275} physReg:NA Preferences=[r11]
Interval 93: long RefPositions {#388@276 #392@281} physReg:NA Preferences=[r11]
Interval 94: ref RefPositions {#401@282 #402@283} physReg:NA Preferences=[rax]
Interval 95: ref RefPositions {#404@290 #406@291} physReg:NA Preferences=[rcx]
Interval 96: ref RefPositions {#408@292 #416@301} physReg:NA Preferences=[rcx]
Interval 97: long (constant) RefPositions {#410@294 #412@295} physReg:NA Preferences=[r11]
Interval 98: long RefPositions {#414@296 #418@301} physReg:NA Preferences=[r11]
Interval 99: int RefPositions {#427@302 #428@305} physReg:NA Preferences=[rax]
Interval 100: ref RefPositions {#430@314 #432@315} physReg:NA Preferences=[rcx]
Interval 101: ref RefPositions {#434@316 #442@325} physReg:NA Preferences=[rcx]
Interval 102: long (constant) RefPositions {#436@318 #438@319} physReg:NA Preferences=[r11]
Interval 103: long RefPositions {#440@320 #444@325} physReg:NA Preferences=[r11]
Interval 104: ref RefPositions {#453@326 #454@327} physReg:NA Preferences=[rax] RelatedInterval <V07/L6>
Interval 105: long (constant) RefPositions {#456@332 #458@333} physReg:NA Preferences=[rcx]
Interval 106: long RefPositions {#460@334 #462@335} physReg:NA Preferences=[rcx]
Interval 107: ref RefPositions {#471@336 #472@337} physReg:NA Preferences=[rax] RelatedInterval <V16/L12>
Interval 108: byref RefPositions {#475@344 #477@347} physReg:NA Preferences=[rcx]
Interval 109: long (constant) RefPositions {#510@392 #511@393} physReg:NA Preferences=[allIntButFP]
Interval 110: ref RefPositions {#512@394 #514@395} physReg:NA Preferences=[rdx]
Interval 111: ref RefPositions {#516@396 #526@405} physReg:NA Preferences=[rdx]
Interval 112: ref (specialPutArg) RefPositions {#520@400 #528@405} physReg:NA Preferences=[rcx] RelatedInterval <V05/L5>
Interval 113: ref RefPositions {#524@404 #530@405} physReg:NA Preferences=[r8]
Interval 114: ref RefPositions {#539@406 #540@407} physReg:NA Preferences=[rax] RelatedInterval <V21/L17>
Interval 115: byref RefPositions {#544@414 #546@417} physReg:NA Preferences=[rcx]
Interval 116: ref RefPositions {#564@436 #565@437} physReg:NA Preferences=[allIntButFP] RelatedInterval <V23/L19>
Interval 117: ref RefPositions {#568@446 #569@447} physReg:NA Preferences=[allIntButFP] RelatedInterval <V22/L18>
Interval 118: long (constant) RefPositions {#579@472 #581@473} physReg:NA Preferences=[rcx]
Interval 119: long RefPositions {#583@474 #585@475} physReg:NA Preferences=[rcx]
Interval 120: ref RefPositions {#594@476 #595@477} physReg:NA Preferences=[rax] RelatedInterval <V28/L24>
Interval 121: byref RefPositions {#598@482 #600@485} physReg:NA Preferences=[rcx]
Interval 122: long (constant) RefPositions {#616@492 #618@493} physReg:NA Preferences=[allIntButFP]
Interval 123: byref RefPositions {#620@498 #622@501} physReg:NA Preferences=[rcx]
Interval 124: long (constant) RefPositions {#641@510 #643@511} physReg:NA Preferences=[rcx]
Interval 125: long RefPositions {#645@512 #647@513} physReg:NA Preferences=[rcx]
Interval 126: ref RefPositions {#656@514 #657@515} physReg:NA Preferences=[rax] RelatedInterval <V27/L23>
Interval 127: byref RefPositions {#660@520 #662@523} physReg:NA Preferences=[rcx]
Interval 128: long (constant) RefPositions {#678@530 #680@531} physReg:NA Preferences=[allIntButFP]
Interval 129: ref RefPositions {#684@538 #694@547} physReg:NA Preferences=[rcx]
Interval 130: ref RefPositions {#688@542 #696@547} physReg:NA Preferences=[rdx]
Interval 131: ref RefPositions {#692@546 #698@547} physReg:NA Preferences=[r8]
Interval 132: ref RefPositions {#707@548 #708@549} physReg:NA Preferences=[rax] RelatedInterval <V42/L36>
Interval 133: ref RefPositions {#713@554 #719@559} physReg:NA Preferences=[rdx]
Interval 134: ref RefPositions {#717@558 #721@559} physReg:NA Preferences=[rcx]
Interval 135: ref RefPositions {#729@564 #731@565} physReg:NA Preferences=[rcx]
Interval 136: ref RefPositions {#733@566 #741@575} physReg:NA Preferences=[rcx]
Interval 137: long (constant) RefPositions {#735@568 #737@569} physReg:NA Preferences=[r11]
Interval 138: long RefPositions {#739@570 #743@575} physReg:NA Preferences=[r11]
Interval 139: int RefPositions {#752@576 #753@579} physReg:NA Preferences=[rax]
Interval 140: ref RefPositions {#758@586 #760@587} physReg:NA Preferences=[rcx]
Interval 141: ref RefPositions {#762@588 #770@597} physReg:NA Preferences=[rcx]
Interval 142: long (constant) RefPositions {#764@590 #766@591} physReg:NA Preferences=[r11]
Interval 143: long RefPositions {#768@592 #772@597} physReg:NA Preferences=[r11]
Interval 144: ref RefPositions {#781@606 #782@607} physReg:NA Preferences=[allIntButFP] RelatedInterval <V35/L29>
Interval 145: int RefPositions {#785@614 #787@619} physReg:NA Preferences=[allIntButFP]
Interval 146: long (constant) RefPositions {#788@624 #790@625} physReg:NA Preferences=[rcx]
Interval 147: long RefPositions {#792@626 #794@627} physReg:NA Preferences=[rcx]
Interval 148: ref RefPositions {#803@628 #804@629} physReg:NA Preferences=[rax] RelatedInterval <V29/L25>
Interval 149: int RefPositions {#807@636 #808@637} physReg:NA Preferences=[allIntButFP] RelatedInterval <V37/L31>
Interval 150: long (constant) RefPositions {#810@640 #812@641} physReg:NA Preferences=[rcx]
Interval 151: long RefPositions {#814@642 #816@643} physReg:NA Preferences=[rcx]
Interval 152: ref RefPositions {#825@644 #826@645} physReg:NA Preferences=[rax] RelatedInterval <V36/L30>
Interval 153: ref (specialPutArg) RefPositions {#831@650 #843@659} physReg:NA Preferences=[rcx] RelatedInterval <V36/L30>
Interval 154: int (constant) RefPositions {#832@652 #834@653} physReg:NA Preferences=[rdx]
Interval 155: int RefPositions {#836@654 #845@659} physReg:NA Preferences=[rdx]
Interval 156: ref (constant) RefPositions {#837@656 #839@657} physReg:NA Preferences=[r8]
Interval 157: ref RefPositions {#841@658 #847@659} physReg:NA Preferences=[r8]
Interval 158: byref RefPositions {#856@664 #858@667} physReg:NA Preferences=[rcx]
Interval 159: byref RefPositions {#877@682 #879@685} physReg:NA Preferences=[rcx]
Interval 160: int (constant) RefPositions {#895@690 #896@691} physReg:NA Preferences=[allIntButFP] RelatedInterval <V10/L7>
Interval 161: int RefPositions {#900@700 #901@701} physReg:NA Preferences=[allIntButFP] RelatedInterval <V39/L33>
Interval 162: ref (specialPutArg) RefPositions {#916@740 #918@741} physReg:NA Preferences=[rcx] RelatedInterval <V02/L2>
Interval 163: int RefPositions {#927@750 #928@751} physReg:NA Preferences=[allIntButFP] RelatedInterval <V10/L7>
Interval 164: ref RefPositions {#933@762 #934@763} physReg:NA Preferences=[allIntButFP] RelatedInterval <V40/L34>
Interval 165: ref RefPositions {#937@770 #939@771} physReg:NA Preferences=[rax]
Interval 166: ref RefPositions {#942@790 #944@791} physReg:NA Preferences=[rcx]
Interval 167: ref RefPositions {#946@792 #954@801} physReg:NA Preferences=[rcx]
Interval 168: long (constant) RefPositions {#948@794 #950@795} physReg:NA Preferences=[r11]
Interval 169: long RefPositions {#952@796 #956@801} physReg:NA Preferences=[r11]

*************** In LinearScan::allocateRegisters()

Linear scan intervals before allocateRegisters:
Interval  0: (V00) ref RefPositions {#0@0 #380@271} physReg:rcx Preferences=[rbx rsi rdi r12-r15]
Interval  1: (V01) ref RefPositions {#1@0 #28@27} physReg:rdx Preferences=[rbx rsi rdi r12-r15]
Interval  2: (V02) ref RefPositions {#22@18 #23@23 #43@37 #46@47 #104@87 #186@127 #206@141 #246@167 #563@435 #567@445 #602@485 #619@497 #664@523 #780@605 #786@619 #806@635 #876@681 #899@699 #914@739 #932@761} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval  3: (V03) ref RefPositions {#319@210 #320@219 #334@231 #479@347 #754@583} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval  4: (V04) int RefPositions {#362@244 #497@363 #755@583} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval  5: (V05) ref RefPositions {#378@266 #518@399 #756@583} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval  6: (V07) ref RefPositions {#455@328 #503@379 #522@403} physReg:NA Preferences=[rbx rsi rdi r12-r15] RelatedInterval <V21/L17>
Interval  7: (V10) int RefPositions {#897@692 #910@729 #926@749 #929@752 #930@753} physReg:NA Preferences=[rbx rsi rdi r12-r15] RelatedInterval <I163>
Interval  8: (V12) ref RefPositions {#20@12 #21@17} physReg:NA Preferences=[allIntButFP] RelatedInterval <V02/L2>
Interval  9: (V13) ref RefPositions {#65@58 #85@77 #109@91} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 10: (V14) ref RefPositions {#140@102 #167@119 #191@131} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 11: (V15) ref RefPositions {#225@152 #227@155 #251@171} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 12: (V16) ref RefPositions {#473@338 #474@343 #493@351} physReg:NA Preferences=[rbx rsi rdi r12-r15] RelatedInterval <V17/L13>
Interval 13: (V17) ref RefPositions {#494@352 #495@355} physReg:NA Preferences=[allIntButFP] RelatedInterval <V18/L14>
Interval 14: (V18) ref RefPositions {#496@356 #499@371 #506@385} physReg:NA Preferences=[allIntButFP] RelatedInterval <V19/L15>
Interval 15: (V19) ref RefPositions {#500@372 #501@375 #507@386 #508@389 #562@427 #573@455} physReg:NA Preferences=[rbx rsi rdi r12-r15] RelatedInterval <V25/L21>
Interval 16: (V20) ref RefPositions {#502@376 #509@390 #543@413} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 17: (V21) ref RefPositions {#504@380 #541@408 #548@417} physReg:NA Preferences=[rdx]
Interval 18: (V22) ref RefPositions {#570@448 #575@459} physReg:NA Preferences=[allIntButFP] RelatedInterval <V26/L22>
Interval 19: (V23) ref RefPositions {#566@438 #571@451} physReg:NA Preferences=[allIntButFP] RelatedInterval <V24/L20>
Interval 20: (V24) ref RefPositions {#572@452 #715@557} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 21: (V25) ref RefPositions {#574@456 #682@537} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 22: (V26) ref RefPositions {#576@460 #577@465 #639@506 #686@541} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 23: (V27) ref RefPositions {#658@516 #659@519 #679@531 #690@545} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 24: (V28) ref RefPositions {#596@478 #597@481 #617@493 #624@501 #638@505} physReg:NA Preferences=[rbx rsi rdi r12-r15] RelatedInterval <V26/L22>
Interval 25: (V29) ref RefPositions {#805@630 #855@663 #874@675 #881@685} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 26: (V30) ref RefPositions {#83@66 #84@73 #90@81} physReg:NA Preferences=[rdx]
Interval 27: (V31) ref RefPositions {#275@176 #276@179 #278@183 #297@195} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 28: (V32) ref RefPositions {#315@202 #316@207} physReg:NA Preferences=[allIntButFP]
Interval 29: (V35) ref RefPositions {#783@608 #784@613} physReg:NA Preferences=[allIntButFP]
Interval 30: (V36) ref RefPositions {#827@646 #829@649 #860@667} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 31: (V37) int RefPositions {#809@638 #875@675} physReg:NA Preferences=[rbx rsi rdi r12-r15]
Interval 32: (V38) int RefPositions {#906@716 #908@722 #911@729} physReg:NA Preferences=[allIntButFP]
Interval 33: (V39) int RefPositions {#902@702 #903@707 #905@715} physReg:NA Preferences=[allIntButFP] RelatedInterval <V38/L32>
Interval 34: (V40) ref RefPositions {#935@764 #936@769} physReg:NA Preferences=[allIntButFP]
Interval 35: (V41) ref RefPositions {#373@248 #374@257 #375@263} physReg:NA Preferences=[allIntButFP]
Interval 36: (V42) ref RefPositions {#709@550 #711@553} physReg:NA Preferences=[rdx]
Interval 37: long (constant) RefPositions {#3@6 #5@7} physReg:NA Preferences=[rcx]
Interval 38: long RefPositions {#7@8 #9@9} physReg:NA Preferences=[rcx]
Interval 39: ref RefPositions {#18@10 #19@11} physReg:NA Preferences=[rax] RelatedInterval <V12/L8>
Interval 40: byref RefPositions {#24@24 #26@27} physReg:NA Preferences=[rcx]
Interval 41: int (constant) RefPositions {#42@36 #44@37} physReg:NA Preferences=[allIntButFP]
Interval 42: int (constant) RefPositions {#45@46 #47@47} physReg:NA Preferences=[allIntButFP]
Interval 43: long (constant) RefPositions {#48@52 #50@53} physReg:NA Preferences=[rcx]
Interval 44: long RefPositions {#52@54 #54@55} physReg:NA Preferences=[rcx]
Interval 45: ref RefPositions {#63@56 #64@57} physReg:NA Preferences=[rax] RelatedInterval <V13/L9>
Interval 46: long (constant) RefPositions {#66@60 #68@61} physReg:NA Preferences=[rcx]
Interval 47: long RefPositions {#70@62 #72@63} physReg:NA Preferences=[rcx]
Interval 48: ref RefPositions {#81@64 #82@65} physReg:NA Preferences=[rax] RelatedInterval <V30/L26>
Interval 49: byref RefPositions {#86@78 #88@81} physReg:NA Preferences=[rcx]
Interval 50: byref RefPositions {#105@88 #107@91} physReg:NA Preferences=[rcx]
Interval 51: long (constant) RefPositions {#123@96 #125@97} physReg:NA Preferences=[rcx]
Interval 52: long RefPositions {#127@98 #129@99} physReg:NA Preferences=[rcx]
Interval 53: ref RefPositions {#138@100 #139@101} physReg:NA Preferences=[rax] RelatedInterval <V14/L10>
Interval 54: long (constant) RefPositions {#141@104 #143@105} physReg:NA Preferences=[rcx]
Interval 55: long RefPositions {#145@106 #152@111} physReg:NA Preferences=[rcx]
Interval 56: int (constant) RefPositions {#146@108 #148@109} physReg:NA Preferences=[rdx]
Interval 57: int RefPositions {#150@110 #154@111} physReg:NA Preferences=[rdx]
Interval 58: long RefPositions {#163@112} physReg:NA Preferences=[rax]
Interval 59: long (constant) RefPositions {#164@114 #165@115} physReg:NA Preferences=[allIntButFP]
Interval 60: ref RefPositions {#166@116 #172@121} physReg:NA Preferences=[rdx]
Interval 61: byref RefPositions {#168@120 #170@121} physReg:NA Preferences=[rcx]
Interval 62: byref RefPositions {#187@128 #189@131} physReg:NA Preferences=[rcx]
Interval 63: ref (constant) RefPositions {#205@140 #207@141} physReg:NA Preferences=[allIntButFP]
Interval 64: long (constant) RefPositions {#208@146 #210@147} physReg:NA Preferences=[rcx]
Interval 65: long RefPositions {#212@148 #214@149} physReg:NA Preferences=[rcx]
Interval 66: ref RefPositions {#223@150 #224@151} physReg:NA Preferences=[rax] RelatedInterval <V15/L11>
Interval 67: ref (specialPutArg) RefPositions {#229@156 #236@161} physReg:NA Preferences=[rcx] RelatedInterval <V15/L11>
Interval 68: ref (constant) RefPositions {#230@158 #232@159} physReg:NA Preferences=[rdx]
Interval 69: ref RefPositions {#234@160 #238@161} physReg:NA Preferences=[rdx]
Interval 70: byref RefPositions {#247@168 #249@171} physReg:NA Preferences=[rcx]
Interval 71: ref RefPositions {#273@174 #274@175} physReg:NA Preferences=[rax] RelatedInterval <V31/L27>
Interval 72: ref (specialPutArg) RefPositions {#280@184 #287@189} physReg:NA Preferences=[rcx] RelatedInterval <V31/L27>
Interval 73: int (constant) RefPositions {#281@186 #283@187} physReg:NA Preferences=[rdx]
Interval 74: int RefPositions {#285@188 #289@189} physReg:NA Preferences=[rdx]
Interval 75: int RefPositions {#298@196 #300@197} physReg:NA Preferences=[rcx]
Interval 76: int RefPositions {#302@198 #304@199} physReg:NA Preferences=[rcx]
Interval 77: ref RefPositions {#313@200 #314@201} physReg:NA Preferences=[rax] RelatedInterval <V32/L28>
Interval 78: ref RefPositions {#317@208 #318@209} physReg:NA Preferences=[allIntButFP] RelatedInterval <V03/L3>
Interval 79: int RefPositions {#321@220 #323@221} physReg:NA Preferences=[r9]
Interval 80: int RefPositions {#325@222 #343@237} physReg:NA Preferences=[r9]
Interval 81: long (constant) RefPositions {#326@224 #327@225} physReg:NA Preferences=[allIntButFP]
Interval 82: ref RefPositions {#328@226 #330@227} physReg:NA Preferences=[rdx]
Interval 83: ref RefPositions {#332@228 #345@237} physReg:NA Preferences=[rdx]
Interval 84: ref (specialPutArg) RefPositions {#336@232 #347@237} physReg:NA Preferences=[rcx] RelatedInterval <V03/L3>
Interval 85: int (constant) RefPositions {#337@234 #339@235} physReg:NA Preferences=[r8]
Interval 86: int RefPositions {#341@236 #349@237} physReg:NA Preferences=[r8]
Interval 87: int RefPositions {#358@238 #359@241} physReg:NA Preferences=[rax]
Interval 88: int RefPositions {#360@242 #361@243} physReg:NA Preferences=[allIntButFP] RelatedInterval <V04/L4>
Interval 89: ref RefPositions {#371@246 #372@247} physReg:NA Preferences=[rax] RelatedInterval <V41/L35>
Interval 90: ref RefPositions {#376@264 #377@265} physReg:NA Preferences=[allIntButFP] RelatedInterval <V05/L5>
Interval 91: ref RefPositions {#382@272 #390@281} physReg:NA Preferences=[rcx]
Interval 92: long (constant) RefPositions {#384@274 #386@275} physReg:NA Preferences=[r11]
Interval 93: long RefPositions {#388@276 #392@281} physReg:NA Preferences=[r11]
Interval 94: ref RefPositions {#401@282 #402@283} physReg:NA Preferences=[rax]
Interval 95: ref RefPositions {#404@290 #406@291} physReg:NA Preferences=[rcx]
Interval 96: ref RefPositions {#408@292 #416@301} physReg:NA Preferences=[rcx]
Interval 97: long (constant) RefPositions {#410@294 #412@295} physReg:NA Preferences=[r11]
Interval 98: long RefPositions {#414@296 #418@301} physReg:NA Preferences=[r11]
Interval 99: int RefPositions {#427@302 #428@305} physReg:NA Preferences=[rax]
Interval 100: ref RefPositions {#430@314 #432@315} physReg:NA Preferences=[rcx]
Interval 101: ref RefPositions {#434@316 #442@325} physReg:NA Preferences=[rcx]
Interval 102: long (constant) RefPositions {#436@318 #438@319} physReg:NA Preferences=[r11]
Interval 103: long RefPositions {#440@320 #444@325} physReg:NA Preferences=[r11]
Interval 104: ref RefPositions {#453@326 #454@327} physReg:NA Preferences=[rax] RelatedInterval <V07/L6>
Interval 105: long (constant) RefPositions {#456@332 #458@333} physReg:NA Preferences=[rcx]
Interval 106: long RefPositions {#460@334 #462@335} physReg:NA Preferences=[rcx]
Interval 107: ref RefPositions {#471@336 #472@337} physReg:NA Preferences=[rax] RelatedInterval <V16/L12>
Interval 108: byref RefPositions {#475@344 #477@347} physReg:NA Preferences=[rcx]
Interval 109: long (constant) RefPositions {#510@392 #511@393} physReg:NA Preferences=[allIntButFP]
Interval 110: ref RefPositions {#512@394 #514@395} physReg:NA Preferences=[rdx]
Interval 111: ref RefPositions {#516@396 #526@405} physReg:NA Preferences=[rdx]
Interval 112: ref (specialPutArg) RefPositions {#520@400 #528@405} physReg:NA Preferences=[rcx] RelatedInterval <V05/L5>
Interval 113: ref RefPositions {#524@404 #530@405} physReg:NA Preferences=[r8]
Interval 114: ref RefPositions {#539@406 #540@407} physReg:NA Preferences=[rax] RelatedInterval <V21/L17>
Interval 115: byref RefPositions {#544@414 #546@417} physReg:NA Preferences=[rcx]
Interval 116: ref RefPositions {#564@436 #565@437} physReg:NA Preferences=[allIntButFP] RelatedInterval <V23/L19>
Interval 117: ref RefPositions {#568@446 #569@447} physReg:NA Preferences=[allIntButFP] RelatedInterval <V22/L18>
Interval 118: long (constant) RefPositions {#579@472 #581@473} physReg:NA Preferences=[rcx]
Interval 119: long RefPositions {#583@474 #585@475} physReg:NA Preferences=[rcx]
Interval 120: ref RefPositions {#594@476 #595@477} physReg:NA Preferences=[rax] RelatedInterval <V28/L24>
Interval 121: byref RefPositions {#598@482 #600@485} physReg:NA Preferences=[rcx]
Interval 122: long (constant) RefPositions {#616@492 #618@493} physReg:NA Preferences=[allIntButFP]
Interval 123: byref RefPositions {#620@498 #622@501} physReg:NA Preferences=[rcx]
Interval 124: long (constant) RefPositions {#641@510 #643@511} physReg:NA Preferences=[rcx]
Interval 125: long RefPositions {#645@512 #647@513} physReg:NA Preferences=[rcx]
Interval 126: ref RefPositions {#656@514 #657@515} physReg:NA Preferences=[rax] RelatedInterval <V27/L23>
Interval 127: byref RefPositions {#660@520 #662@523} physReg:NA Preferences=[rcx]
Interval 128: long (constant) RefPositions {#678@530 #680@531} physReg:NA Preferences=[allIntButFP]
Interval 129: ref RefPositions {#684@538 #694@547} physReg:NA Preferences=[rcx]
Interval 130: ref RefPositions {#688@542 #696@547} physReg:NA Preferences=[rdx]
Interval 131: ref RefPositions {#692@546 #698@547} physReg:NA Preferences=[r8]
Interval 132: ref RefPositions {#707@548 #708@549} physReg:NA Preferences=[rax] RelatedInterval <V42/L36>
Interval 133: ref RefPositions {#713@554 #719@559} physReg:NA Preferences=[rdx]
Interval 134: ref RefPositions {#717@558 #721@559} physReg:NA Preferences=[rcx]
Interval 135: ref RefPositions {#729@564 #731@565} physReg:NA Preferences=[rcx]
Interval 136: ref RefPositions {#733@566 #741@575} physReg:NA Preferences=[rcx]
Interval 137: long (constant) RefPositions {#735@568 #737@569} physReg:NA Preferences=[r11]
Interval 138: long RefPositions {#739@570 #743@575} physReg:NA Preferences=[r11]
Interval 139: int RefPositions {#752@576 #753@579} physReg:NA Preferences=[rax]
Interval 140: ref RefPositions {#758@586 #760@587} physReg:NA Preferences=[rcx]
Interval 141: ref RefPositions {#762@588 #770@597} physReg:NA Preferences=[rcx]
Interval 142: long (constant) RefPositions {#764@590 #766@591} physReg:NA Preferences=[r11]
Interval 143: long RefPositions {#768@592 #772@597} physReg:NA Preferences=[r11]
Interval 144: ref RefPositions {#781@606 #782@607} physReg:NA Preferences=[allIntButFP] RelatedInterval <V35/L29>
Interval 145: int RefPositions {#785@614 #787@619} physReg:NA Preferences=[allIntButFP]
Interval 146: long (constant) RefPositions {#788@624 #790@625} physReg:NA Preferences=[rcx]
Interval 147: long RefPositions {#792@626 #794@627} physReg:NA Preferences=[rcx]
Interval 148: ref RefPositions {#803@628 #804@629} physReg:NA Preferences=[rax] RelatedInterval <V29/L25>
Interval 149: int RefPositions {#807@636 #808@637} physReg:NA Preferences=[allIntButFP] RelatedInterval <V37/L31>
Interval 150: long (constant) RefPositions {#810@640 #812@641} physReg:NA Preferences=[rcx]
Interval 151: long RefPositions {#814@642 #816@643} physReg:NA Preferences=[rcx]
Interval 152: ref RefPositions {#825@644 #826@645} physReg:NA Preferences=[rax] RelatedInterval <V36/L30>
Interval 153: ref (specialPutArg) RefPositions {#831@650 #843@659} physReg:NA Preferences=[rcx] RelatedInterval <V36/L30>
Interval 154: int (constant) RefPositions {#832@652 #834@653} physReg:NA Preferences=[rdx]
Interval 155: int RefPositions {#836@654 #845@659} physReg:NA Preferences=[rdx]
Interval 156: ref (constant) RefPositions {#837@656 #839@657} physReg:NA Preferences=[r8]
Interval 157: ref RefPositions {#841@658 #847@659} physReg:NA Preferences=[r8]
Interval 158: byref RefPositions {#856@664 #858@667} physReg:NA Preferences=[rcx]
Interval 159: byref RefPositions {#877@682 #879@685} physReg:NA Preferences=[rcx]
Interval 160: int (constant) RefPositions {#895@690 #896@691} physReg:NA Preferences=[allIntButFP] RelatedInterval <V10/L7>
Interval 161: int RefPositions {#900@700 #901@701} physReg:NA Preferences=[allIntButFP] RelatedInterval <V39/L33>
Interval 162: ref (specialPutArg) RefPositions {#916@740 #918@741} physReg:NA Preferences=[rcx] RelatedInterval <V02/L2>
Interval 163: int RefPositions {#927@750 #928@751} physReg:NA Preferences=[allIntButFP] RelatedInterval <V10/L7>
Interval 164: ref RefPositions {#933@762 #934@763} physReg:NA Preferences=[allIntButFP] RelatedInterval <V40/L34>
Interval 165: ref RefPositions {#937@770 #939@771} physReg:NA Preferences=[rax]
Interval 166: ref RefPositions {#942@790 #944@791} physReg:NA Preferences=[rcx]
Interval 167: ref RefPositions {#946@792 #954@801} physReg:NA Preferences=[rcx]
Interval 168: long (constant) RefPositions {#948@794 #950@795} physReg:NA Preferences=[r11]
Interval 169: long RefPositions {#952@796 #956@801} physReg:NA Preferences=[r11]

------------
REFPOSITIONS BEFORE ALLOCATION: 
------------
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00>  BB00 regmask=[rcx] minReg=1 fixed regOptional>
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V01>  BB00 regmask=[rdx] minReg=1 fixed regOptional>
<RefPosition #2   @1   RefTypeBB  BB01 regmask=[] minReg=1>
<RefPosition #3   @6   RefTypeDef <Ivl:37> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #4   @7   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #5   @7   RefTypeUse <Ivl:37>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #6   @8   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #7   @8   RefTypeDef <Ivl:38> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #8   @9   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #9   @9   RefTypeUse <Ivl:38>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #10  @10  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #11  @10  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #12  @10  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #13  @10  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #14  @10  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #15  @10  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #16  @10  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #17  @10  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #18  @10  RefTypeDef <Ivl:39> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #19  @11  RefTypeUse <Ivl:39>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #20  @12  RefTypeDef <Ivl:8 V12> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #21  @17  RefTypeUse <Ivl:8 V12> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #22  @18  RefTypeDef <Ivl:2 V02> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #23  @23  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #24  @24  RefTypeDef <Ivl:40> LEA BB01 regmask=[rcx] minReg=1>
<RefPosition #25  @27  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #26  @27  RefTypeUse <Ivl:40>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #27  @27  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #28  @27  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #29  @28  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #30  @28  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #31  @28  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #32  @28  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #33  @28  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #34  @28  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #35  @28  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #36  @28  RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1 last>
<RefPosition #37  @28  RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1 last>
<RefPosition #38  @28  RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1 last>
<RefPosition #39  @28  RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1 last>
<RefPosition #40  @28  RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1 last>
<RefPosition #41  @28  RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1 last>
<RefPosition #42  @36  RefTypeDef <Ivl:41> CNS_INT BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #43  @37  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #44  @37  RefTypeUse <Ivl:41>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #45  @46  RefTypeDef <Ivl:42> CNS_INT BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #46  @47  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #47  @47  RefTypeUse <Ivl:42>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #48  @52  RefTypeDef <Ivl:43> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #49  @53  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #50  @53  RefTypeUse <Ivl:43>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #51  @54  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #52  @54  RefTypeDef <Ivl:44> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #53  @55  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #54  @55  RefTypeUse <Ivl:44>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #55  @56  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #56  @56  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #57  @56  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #58  @56  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #59  @56  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #60  @56  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #61  @56  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #62  @56  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #63  @56  RefTypeDef <Ivl:45> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #64  @57  RefTypeUse <Ivl:45>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #65  @58  RefTypeDef <Ivl:9 V13> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #66  @60  RefTypeDef <Ivl:46> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #67  @61  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #68  @61  RefTypeUse <Ivl:46>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #69  @62  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #70  @62  RefTypeDef <Ivl:47> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #71  @63  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #72  @63  RefTypeUse <Ivl:47>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #73  @64  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #74  @64  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #75  @64  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #76  @64  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #77  @64  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #78  @64  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #79  @64  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #80  @64  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #81  @64  RefTypeDef <Ivl:48> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #82  @65  RefTypeUse <Ivl:48>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #83  @66  RefTypeDef <Ivl:26 V30> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #84  @73  RefTypeUse <Ivl:26 V30> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #85  @77  RefTypeUse <Ivl:9 V13> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #86  @78  RefTypeDef <Ivl:49> LEA BB01 regmask=[rcx] minReg=1>
<RefPosition #87  @81  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #88  @81  RefTypeUse <Ivl:49>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #89  @81  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #90  @81  RefTypeUse <Ivl:26 V30> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #91  @82  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #92  @82  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #93  @82  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #94  @82  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #95  @82  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #96  @82  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #97  @82  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #98  @82  RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1 last>
<RefPosition #99  @82  RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1 last>
<RefPosition #100 @82  RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1 last>
<RefPosition #101 @82  RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1 last>
<RefPosition #102 @82  RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1 last>
<RefPosition #103 @82  RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1 last>
<RefPosition #104 @87  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #105 @88  RefTypeDef <Ivl:50> LEA BB01 regmask=[rcx] minReg=1>
<RefPosition #106 @91  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #107 @91  RefTypeUse <Ivl:50>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #108 @91  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #109 @91  RefTypeUse <Ivl:9 V13> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #110 @92  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #111 @92  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #112 @92  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #113 @92  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #114 @92  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #115 @92  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #116 @92  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #117 @92  RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1 last>
<RefPosition #118 @92  RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1 last>
<RefPosition #119 @92  RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1 last>
<RefPosition #120 @92  RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1 last>
<RefPosition #121 @92  RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1 last>
<RefPosition #122 @92  RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1 last>
<RefPosition #123 @96  RefTypeDef <Ivl:51> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #124 @97  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #125 @97  RefTypeUse <Ivl:51>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #126 @98  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #127 @98  RefTypeDef <Ivl:52> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #128 @99  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #129 @99  RefTypeUse <Ivl:52>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #130 @100 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #131 @100 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #132 @100 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #133 @100 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #134 @100 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #135 @100 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #136 @100 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #137 @100 RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #138 @100 RefTypeDef <Ivl:53> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #139 @101 RefTypeUse <Ivl:53>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #140 @102 RefTypeDef <Ivl:10 V14> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #141 @104 RefTypeDef <Ivl:54> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #142 @105 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #143 @105 RefTypeUse <Ivl:54>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #144 @106 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #145 @106 RefTypeDef <Ivl:55> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #146 @108 RefTypeDef <Ivl:56> CNS_INT BB01 regmask=[rdx] minReg=1>
<RefPosition #147 @109 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #148 @109 RefTypeUse <Ivl:56>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #149 @110 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #150 @110 RefTypeDef <Ivl:57> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>
<RefPosition #151 @111 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #152 @111 RefTypeUse <Ivl:55>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #153 @111 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #154 @111 RefTypeUse <Ivl:57>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #155 @112 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #156 @112 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #157 @112 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #158 @112 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #159 @112 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #160 @112 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #161 @112 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #162 @112 RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #163 @112 RefTypeDef <Ivl:58> CALL BB01 regmask=[rax] minReg=1 last fixed local>
<RefPosition #164 @114 RefTypeDef <Ivl:59> CNS_INT BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #165 @115 RefTypeUse <Ivl:59>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #166 @116 RefTypeDef <Ivl:60> IND BB01 regmask=[rdx] minReg=1>
<RefPosition #167 @119 RefTypeUse <Ivl:10 V14> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #168 @120 RefTypeDef <Ivl:61> LEA BB01 regmask=[rcx] minReg=1>
<RefPosition #169 @121 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #170 @121 RefTypeUse <Ivl:61>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #171 @121 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #172 @121 RefTypeUse <Ivl:60>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #173 @122 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #174 @122 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #175 @122 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #176 @122 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #177 @122 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #178 @122 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #179 @122 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #180 @122 RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1 last>
<RefPosition #181 @122 RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1 last>
<RefPosition #182 @122 RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1 last>
<RefPosition #183 @122 RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1 last>
<RefPosition #184 @122 RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1 last>
<RefPosition #185 @122 RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1 last>
<RefPosition #186 @127 RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #187 @128 RefTypeDef <Ivl:62> LEA BB01 regmask=[rcx] minReg=1>
<RefPosition #188 @131 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #189 @131 RefTypeUse <Ivl:62>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #190 @131 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #191 @131 RefTypeUse <Ivl:10 V14> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #192 @132 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #193 @132 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #194 @132 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #195 @132 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #196 @132 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #197 @132 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #198 @132 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #199 @132 RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1 last>
<RefPosition #200 @132 RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1 last>
<RefPosition #201 @132 RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1 last>
<RefPosition #202 @132 RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1 last>
<RefPosition #203 @132 RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1 last>
<RefPosition #204 @132 RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1 last>
<RefPosition #205 @140 RefTypeDef <Ivl:63> CNS_INT BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #206 @141 RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #207 @141 RefTypeUse <Ivl:63>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #208 @146 RefTypeDef <Ivl:64> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #209 @147 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #210 @147 RefTypeUse <Ivl:64>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #211 @148 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #212 @148 RefTypeDef <Ivl:65> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #213 @149 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #214 @149 RefTypeUse <Ivl:65>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #215 @150 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #216 @150 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #217 @150 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #218 @150 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #219 @150 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #220 @150 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #221 @150 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #222 @150 RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #223 @150 RefTypeDef <Ivl:66> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #224 @151 RefTypeUse <Ivl:66>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #225 @152 RefTypeDef <Ivl:11 V15> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #226 @155 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #227 @155 RefTypeUse <Ivl:11 V15> LCL_VAR BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #228 @156 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #229 @156 RefTypeDef <Ivl:67> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #230 @158 RefTypeDef <Ivl:68> CNS_INT BB01 regmask=[rdx] minReg=1>
<RefPosition #231 @159 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #232 @159 RefTypeUse <Ivl:68>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #233 @160 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #234 @160 RefTypeDef <Ivl:69> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>
<RefPosition #235 @161 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #236 @161 RefTypeUse <Ivl:67>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #237 @161 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #238 @161 RefTypeUse <Ivl:69>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #239 @162 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #240 @162 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #241 @162 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #242 @162 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #243 @162 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #244 @162 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #245 @162 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #246 @167 RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #247 @168 RefTypeDef <Ivl:70> LEA BB01 regmask=[rcx] minReg=1>
<RefPosition #248 @171 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #249 @171 RefTypeUse <Ivl:70>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #250 @171 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #251 @171 RefTypeUse <Ivl:11 V15> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #252 @172 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #253 @172 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #254 @172 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #255 @172 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #256 @172 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #257 @172 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #258 @172 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #259 @172 RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1 last>
<RefPosition #260 @172 RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1 last>
<RefPosition #261 @172 RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1 last>
<RefPosition #262 @172 RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1 last>
<RefPosition #263 @172 RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1 last>
<RefPosition #264 @172 RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1 last>
<RefPosition #265 @174 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #266 @174 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #267 @174 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #268 @174 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #269 @174 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #270 @174 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #271 @174 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #272 @174 RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #273 @174 RefTypeDef <Ivl:71> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #274 @175 RefTypeUse <Ivl:71>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #275 @176 RefTypeDef <Ivl:27 V31> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #276 @179 RefTypeUse <Ivl:27 V31> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #277 @183 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #278 @183 RefTypeUse <Ivl:27 V31> LCL_VAR BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #279 @184 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #280 @184 RefTypeDef <Ivl:72> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #281 @186 RefTypeDef <Ivl:73> CNS_INT BB01 regmask=[rdx] minReg=1>
<RefPosition #282 @187 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #283 @187 RefTypeUse <Ivl:73>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #284 @188 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #285 @188 RefTypeDef <Ivl:74> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>
<RefPosition #286 @189 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #287 @189 RefTypeUse <Ivl:72>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #288 @189 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #289 @189 RefTypeUse <Ivl:74>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #290 @190 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #291 @190 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #292 @190 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #293 @190 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #294 @190 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #295 @190 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #296 @190 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #297 @195 RefTypeUse <Ivl:27 V31> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #298 @196 RefTypeDef <Ivl:75> IND BB01 regmask=[rcx] minReg=1>
<RefPosition #299 @197 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #300 @197 RefTypeUse <Ivl:75>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #301 @198 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #302 @198 RefTypeDef <Ivl:76> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #303 @199 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #304 @199 RefTypeUse <Ivl:76>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #305 @200 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #306 @200 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #307 @200 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #308 @200 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #309 @200 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #310 @200 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #311 @200 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #312 @200 RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #313 @200 RefTypeDef <Ivl:77> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #314 @201 RefTypeUse <Ivl:77>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #315 @202 RefTypeDef <Ivl:28 V32> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #316 @207 RefTypeUse <Ivl:28 V32> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #317 @208 RefTypeDef <Ivl:78> IND BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #318 @209 RefTypeUse <Ivl:78>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #319 @210 RefTypeDef <Ivl:3 V03> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #320 @219 RefTypeUse <Ivl:3 V03> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #321 @220 RefTypeDef <Ivl:79> IND BB01 regmask=[r9] minReg=1>
<RefPosition #322 @221 RefTypeFixedReg <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #323 @221 RefTypeUse <Ivl:79>  BB01 regmask=[r9] minReg=1 last fixed>
<RefPosition #324 @222 RefTypeFixedReg <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #325 @222 RefTypeDef <Ivl:80> PUTARG_REG BB01 regmask=[r9] minReg=1 fixed>
<RefPosition #326 @224 RefTypeDef <Ivl:81> CNS_INT BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #327 @225 RefTypeUse <Ivl:81>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #328 @226 RefTypeDef <Ivl:82> IND BB01 regmask=[rdx] minReg=1>
<RefPosition #329 @227 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #330 @227 RefTypeUse <Ivl:82>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #331 @228 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #332 @228 RefTypeDef <Ivl:83> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>
<RefPosition #333 @231 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #334 @231 RefTypeUse <Ivl:3 V03> LCL_VAR BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #335 @232 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #336 @232 RefTypeDef <Ivl:84> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #337 @234 RefTypeDef <Ivl:85> CNS_INT BB01 regmask=[r8] minReg=1>
<RefPosition #338 @235 RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #339 @235 RefTypeUse <Ivl:85>  BB01 regmask=[r8] minReg=1 last fixed>
<RefPosition #340 @236 RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #341 @236 RefTypeDef <Ivl:86> PUTARG_REG BB01 regmask=[r8] minReg=1 fixed>
<RefPosition #342 @237 RefTypeFixedReg <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #343 @237 RefTypeUse <Ivl:80>  BB01 regmask=[r9] minReg=1 last fixed>
<RefPosition #344 @237 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #345 @237 RefTypeUse <Ivl:83>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #346 @237 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #347 @237 RefTypeUse <Ivl:84>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #348 @237 RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #349 @237 RefTypeUse <Ivl:86>  BB01 regmask=[r8] minReg=1 last fixed>
<RefPosition #350 @238 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #351 @238 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #352 @238 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #353 @238 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #354 @238 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #355 @238 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #356 @238 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #357 @238 RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #358 @238 RefTypeDef <Ivl:87> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #359 @241 RefTypeUse <Ivl:87>  BB01 regmask=[allIntButFP] minReg=1 last regOptional>
<RefPosition #360 @242 RefTypeDef <Ivl:88> GE BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #361 @243 RefTypeUse <Ivl:88>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #362 @244 RefTypeDef <Ivl:4 V04> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #363 @246 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #364 @246 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #365 @246 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #366 @246 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #367 @246 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #368 @246 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #369 @246 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #370 @246 RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #371 @246 RefTypeDef <Ivl:89> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #372 @247 RefTypeUse <Ivl:89>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #373 @248 RefTypeDef <Ivl:35 V41> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #374 @257 RefTypeUse <Ivl:35 V41> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #375 @263 RefTypeUse <Ivl:35 V41> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #376 @264 RefTypeDef <Ivl:90> IND BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #377 @265 RefTypeUse <Ivl:90>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #378 @266 RefTypeDef <Ivl:5 V05> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #379 @271 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #380 @271 RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #381 @272 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #382 @272 RefTypeDef <Ivl:91> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #383 @274 RefTypeFixedReg <Reg:r11>  BB01 regmask=[r11] minReg=1>
<RefPosition #384 @274 RefTypeDef <Ivl:92> CNS_INT BB01 regmask=[r11] minReg=1 fixed>
<RefPosition #385 @275 RefTypeFixedReg <Reg:r11>  BB01 regmask=[r11] minReg=1>
<RefPosition #386 @275 RefTypeUse <Ivl:92>  BB01 regmask=[r11] minReg=1 last fixed>
<RefPosition #387 @276 RefTypeFixedReg <Reg:r11>  BB01 regmask=[r11] minReg=1>
<RefPosition #388 @276 RefTypeDef <Ivl:93> PUTARG_REG BB01 regmask=[r11] minReg=1 fixed>
<RefPosition #389 @281 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #390 @281 RefTypeUse <Ivl:91>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #391 @281 RefTypeFixedReg <Reg:r11>  BB01 regmask=[r11] minReg=1>
<RefPosition #392 @281 RefTypeUse <Ivl:93>  BB01 regmask=[r11] minReg=1 last fixed>
<RefPosition #393 @282 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #394 @282 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #395 @282 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #396 @282 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #397 @282 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #398 @282 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #399 @282 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #400 @282 RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #401 @282 RefTypeDef <Ivl:94> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #402 @283 RefTypeUse <Ivl:94>  BB01 regmask=[allIntButFP] minReg=1 last>
<RefPosition #403 @285 RefTypeBB  BB02 regmask=[] minReg=1>
<RefPosition #404 @290 RefTypeDef <Ivl:95> LCL_VAR BB02 regmask=[rcx] minReg=1>
<RefPosition #405 @291 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #406 @291 RefTypeUse <Ivl:95>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #407 @292 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #408 @292 RefTypeDef <Ivl:96> PUTARG_REG BB02 regmask=[rcx] minReg=1 fixed>
<RefPosition #409 @294 RefTypeFixedReg <Reg:r11>  BB02 regmask=[r11] minReg=1>
<RefPosition #410 @294 RefTypeDef <Ivl:97> CNS_INT BB02 regmask=[r11] minReg=1 fixed>
<RefPosition #411 @295 RefTypeFixedReg <Reg:r11>  BB02 regmask=[r11] minReg=1>
<RefPosition #412 @295 RefTypeUse <Ivl:97>  BB02 regmask=[r11] minReg=1 last fixed>
<RefPosition #413 @296 RefTypeFixedReg <Reg:r11>  BB02 regmask=[r11] minReg=1>
<RefPosition #414 @296 RefTypeDef <Ivl:98> PUTARG_REG BB02 regmask=[r11] minReg=1 fixed>
<RefPosition #415 @301 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #416 @301 RefTypeUse <Ivl:96>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #417 @301 RefTypeFixedReg <Reg:r11>  BB02 regmask=[r11] minReg=1>
<RefPosition #418 @301 RefTypeUse <Ivl:98>  BB02 regmask=[r11] minReg=1 last fixed>
<RefPosition #419 @302 RefTypeKill <Reg:rax>  BB02 regmask=[rax] minReg=1 last>
<RefPosition #420 @302 RefTypeKill <Reg:rcx>  BB02 regmask=[rcx] minReg=1 last>
<RefPosition #421 @302 RefTypeKill <Reg:rdx>  BB02 regmask=[rdx] minReg=1 last>
<RefPosition #422 @302 RefTypeKill <Reg:r8 >  BB02 regmask=[r8] minReg=1 last>
<RefPosition #423 @302 RefTypeKill <Reg:r9 >  BB02 regmask=[r9] minReg=1 last>
<RefPosition #424 @302 RefTypeKill <Reg:r10>  BB02 regmask=[r10] minReg=1 last>
<RefPosition #425 @302 RefTypeKill <Reg:r11>  BB02 regmask=[r11] minReg=1 last>
<RefPosition #426 @302 RefTypeFixedReg <Reg:rax>  BB02 regmask=[rax] minReg=1>
<RefPosition #427 @302 RefTypeDef <Ivl:99> CALL BB02 regmask=[rax] minReg=1 fixed>
<RefPosition #428 @305 RefTypeUse <Ivl:99>  BB02 regmask=[allIntButFP] minReg=1 last regOptional>
<RefPosition #429 @309 RefTypeBB  BB03 regmask=[] minReg=1>
<RefPosition #430 @314 RefTypeDef <Ivl:100> LCL_VAR BB03 regmask=[rcx] minReg=1>
<RefPosition #431 @315 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #432 @315 RefTypeUse <Ivl:100>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #433 @316 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #434 @316 RefTypeDef <Ivl:101> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>
<RefPosition #435 @318 RefTypeFixedReg <Reg:r11>  BB03 regmask=[r11] minReg=1>
<RefPosition #436 @318 RefTypeDef <Ivl:102> CNS_INT BB03 regmask=[r11] minReg=1 fixed>
<RefPosition #437 @319 RefTypeFixedReg <Reg:r11>  BB03 regmask=[r11] minReg=1>
<RefPosition #438 @319 RefTypeUse <Ivl:102>  BB03 regmask=[r11] minReg=1 last fixed>
<RefPosition #439 @320 RefTypeFixedReg <Reg:r11>  BB03 regmask=[r11] minReg=1>
<RefPosition #440 @320 RefTypeDef <Ivl:103> PUTARG_REG BB03 regmask=[r11] minReg=1 fixed>
<RefPosition #441 @325 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #442 @325 RefTypeUse <Ivl:101>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #443 @325 RefTypeFixedReg <Reg:r11>  BB03 regmask=[r11] minReg=1>
<RefPosition #444 @325 RefTypeUse <Ivl:103>  BB03 regmask=[r11] minReg=1 last fixed>
<RefPosition #445 @326 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #446 @326 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #447 @326 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #448 @326 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #449 @326 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #450 @326 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #451 @326 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #452 @326 RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #453 @326 RefTypeDef <Ivl:104> CALL BB03 regmask=[rax] minReg=1 fixed>
<RefPosition #454 @327 RefTypeUse <Ivl:104>  BB03 regmask=[allIntButFP] minReg=1 last>
<RefPosition #455 @328 RefTypeDef <Ivl:6 V07> STORE_LCL_VAR BB03 regmask=[allIntButFP] minReg=1>
<RefPosition #456 @332 RefTypeDef <Ivl:105> CNS_INT BB03 regmask=[rcx] minReg=1>
<RefPosition #457 @333 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #458 @333 RefTypeUse <Ivl:105>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #459 @334 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #460 @334 RefTypeDef <Ivl:106> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>
<RefPosition #461 @335 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #462 @335 RefTypeUse <Ivl:106>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #463 @336 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #464 @336 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #465 @336 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #466 @336 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #467 @336 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #468 @336 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #469 @336 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #470 @336 RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #471 @336 RefTypeDef <Ivl:107> CALL BB03 regmask=[rax] minReg=1 fixed>
<RefPosition #472 @337 RefTypeUse <Ivl:107>  BB03 regmask=[allIntButFP] minReg=1 last>
<RefPosition #473 @338 RefTypeDef <Ivl:12 V16> STORE_LCL_VAR BB03 regmask=[allIntButFP] minReg=1>
<RefPosition #474 @343 RefTypeUse <Ivl:12 V16> LCL_VAR BB03 regmask=[allIntButFP] minReg=1>
<RefPosition #475 @344 RefTypeDef <Ivl:108> LEA BB03 regmask=[rcx] minReg=1>
<RefPosition #476 @347 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #477 @347 RefTypeUse <Ivl:108>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #478 @347 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #479 @347 RefTypeUse <Ivl:3 V03> LCL_VAR BB03 regmask=[rdx] minReg=1 fixed>
<RefPosition #480 @348 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #481 @348 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #482 @348 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #483 @348 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #484 @348 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #485 @348 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #486 @348 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #487 @348 RefTypeKill <Reg:mm0>  BB03 regmask=[mm0] minReg=1 last>
<RefPosition #488 @348 RefTypeKill <Reg:mm1>  BB03 regmask=[mm1] minReg=1 last>
<RefPosition #489 @348 RefTypeKill <Reg:mm2>  BB03 regmask=[mm2] minReg=1 last>
<RefPosition #490 @348 RefTypeKill <Reg:mm3>  BB03 regmask=[mm3] minReg=1 last>
<RefPosition #491 @348 RefTypeKill <Reg:mm4>  BB03 regmask=[mm4] minReg=1 last>
<RefPosition #492 @348 RefTypeKill <Reg:mm5>  BB03 regmask=[mm5] minReg=1 last>
<RefPosition #493 @351 RefTypeUse <Ivl:12 V16> LCL_VAR BB03 regmask=[allIntButFP] minReg=1 last>
<RefPosition #494 @352 RefTypeDef <Ivl:13 V17> STORE_LCL_VAR BB03 regmask=[allIntButFP] minReg=1>
<RefPosition #495 @355 RefTypeUse <Ivl:13 V17> LCL_VAR BB03 regmask=[allIntButFP] minReg=1 last>
<RefPosition #496 @356 RefTypeDef <Ivl:14 V18> STORE_LCL_VAR BB03 regmask=[allIntButFP] minReg=1>
<RefPosition #497 @363 RefTypeUse <Ivl:4 V04> LCL_VAR BB03 regmask=[allIntButFP] minReg=1 regOptional>
<RefPosition #498 @367 RefTypeBB  BB04 regmask=[] minReg=1>
<RefPosition #499 @371 RefTypeUse <Ivl:14 V18> LCL_VAR BB04 regmask=[allIntButFP] minReg=1 last>
<RefPosition #500 @372 RefTypeDef <Ivl:15 V19> STORE_LCL_VAR BB04 regmask=[allIntButFP] minReg=1>
<RefPosition #501 @375 RefTypeUse <Ivl:15 V19> LCL_VAR BB04 regmask=[allIntButFP] minReg=1>
<RefPosition #502 @376 RefTypeDef <Ivl:16 V20> STORE_LCL_VAR BB04 regmask=[allIntButFP] minReg=1>
<RefPosition #503 @379 RefTypeUse <Ivl:6 V07> LCL_VAR BB04 regmask=[allIntButFP] minReg=1 last>
<RefPosition #504 @380 RefTypeDef <Ivl:17 V21> STORE_LCL_VAR BB04 regmask=[allIntButFP] minReg=1>
<RefPosition #505 @381 RefTypeBB  BB05 regmask=[] minReg=1>
<RefPosition #506 @385 RefTypeUse <Ivl:14 V18> LCL_VAR BB05 regmask=[allIntButFP] minReg=1 last>
<RefPosition #507 @386 RefTypeDef <Ivl:15 V19> STORE_LCL_VAR BB05 regmask=[allIntButFP] minReg=1>
<RefPosition #508 @389 RefTypeUse <Ivl:15 V19> LCL_VAR BB05 regmask=[allIntButFP] minReg=1>
<RefPosition #509 @390 RefTypeDef <Ivl:16 V20> STORE_LCL_VAR BB05 regmask=[allIntButFP] minReg=1>
<RefPosition #510 @392 RefTypeDef <Ivl:109> CNS_INT BB05 regmask=[allIntButFP] minReg=1>
<RefPosition #511 @393 RefTypeUse <Ivl:109>  BB05 regmask=[allIntButFP] minReg=1 last>
<RefPosition #512 @394 RefTypeDef <Ivl:110> IND BB05 regmask=[rdx] minReg=1>
<RefPosition #513 @395 RefTypeFixedReg <Reg:rdx>  BB05 regmask=[rdx] minReg=1>
<RefPosition #514 @395 RefTypeUse <Ivl:110>  BB05 regmask=[rdx] minReg=1 last fixed>
<RefPosition #515 @396 RefTypeFixedReg <Reg:rdx>  BB05 regmask=[rdx] minReg=1>
<RefPosition #516 @396 RefTypeDef <Ivl:111> PUTARG_REG BB05 regmask=[rdx] minReg=1 fixed>
<RefPosition #517 @399 RefTypeFixedReg <Reg:rcx>  BB05 regmask=[rcx] minReg=1>
<RefPosition #518 @399 RefTypeUse <Ivl:5 V05> LCL_VAR BB05 regmask=[rcx] minReg=1 fixed>
<RefPosition #519 @400 RefTypeFixedReg <Reg:rcx>  BB05 regmask=[rcx] minReg=1>
<RefPosition #520 @400 RefTypeDef <Ivl:112> PUTARG_REG BB05 regmask=[rcx] minReg=1 fixed>
<RefPosition #521 @403 RefTypeFixedReg <Reg:r8 >  BB05 regmask=[r8] minReg=1>
<RefPosition #522 @403 RefTypeUse <Ivl:6 V07> LCL_VAR BB05 regmask=[r8] minReg=1 last fixed>
<RefPosition #523 @404 RefTypeFixedReg <Reg:r8 >  BB05 regmask=[r8] minReg=1>
<RefPosition #524 @404 RefTypeDef <Ivl:113> PUTARG_REG BB05 regmask=[r8] minReg=1 fixed>
<RefPosition #525 @405 RefTypeFixedReg <Reg:rdx>  BB05 regmask=[rdx] minReg=1>
<RefPosition #526 @405 RefTypeUse <Ivl:111>  BB05 regmask=[rdx] minReg=1 last fixed>
<RefPosition #527 @405 RefTypeFixedReg <Reg:rcx>  BB05 regmask=[rcx] minReg=1>
<RefPosition #528 @405 RefTypeUse <Ivl:112>  BB05 regmask=[rcx] minReg=1 last fixed>
<RefPosition #529 @405 RefTypeFixedReg <Reg:r8 >  BB05 regmask=[r8] minReg=1>
<RefPosition #530 @405 RefTypeUse <Ivl:113>  BB05 regmask=[r8] minReg=1 last fixed>
<RefPosition #531 @406 RefTypeKill <Reg:rax>  BB05 regmask=[rax] minReg=1 last>
<RefPosition #532 @406 RefTypeKill <Reg:rcx>  BB05 regmask=[rcx] minReg=1 last>
<RefPosition #533 @406 RefTypeKill <Reg:rdx>  BB05 regmask=[rdx] minReg=1 last>
<RefPosition #534 @406 RefTypeKill <Reg:r8 >  BB05 regmask=[r8] minReg=1 last>
<RefPosition #535 @406 RefTypeKill <Reg:r9 >  BB05 regmask=[r9] minReg=1 last>
<RefPosition #536 @406 RefTypeKill <Reg:r10>  BB05 regmask=[r10] minReg=1 last>
<RefPosition #537 @406 RefTypeKill <Reg:r11>  BB05 regmask=[r11] minReg=1 last>
<RefPosition #538 @406 RefTypeFixedReg <Reg:rax>  BB05 regmask=[rax] minReg=1>
<RefPosition #539 @406 RefTypeDef <Ivl:114> CALL BB05 regmask=[rax] minReg=1 fixed>
<RefPosition #540 @407 RefTypeUse <Ivl:114>  BB05 regmask=[allIntButFP] minReg=1 last>
<RefPosition #541 @408 RefTypeDef <Ivl:17 V21> STORE_LCL_VAR BB05 regmask=[allIntButFP] minReg=1>
<RefPosition #542 @409 RefTypeBB  BB06 regmask=[] minReg=1>
<RefPosition #543 @413 RefTypeUse <Ivl:16 V20> LCL_VAR BB06 regmask=[allIntButFP] minReg=1 last>
<RefPosition #544 @414 RefTypeDef <Ivl:115> LEA BB06 regmask=[rcx] minReg=1>
<RefPosition #545 @417 RefTypeFixedReg <Reg:rcx>  BB06 regmask=[rcx] minReg=1>
<RefPosition #546 @417 RefTypeUse <Ivl:115>  BB06 regmask=[rcx] minReg=1 last fixed>
<RefPosition #547 @417 RefTypeFixedReg <Reg:rdx>  BB06 regmask=[rdx] minReg=1>
<RefPosition #548 @417 RefTypeUse <Ivl:17 V21> LCL_VAR BB06 regmask=[rdx] minReg=1 last fixed>
<RefPosition #549 @418 RefTypeKill <Reg:rax>  BB06 regmask=[rax] minReg=1 last>
<RefPosition #550 @418 RefTypeKill <Reg:rcx>  BB06 regmask=[rcx] minReg=1 last>
<RefPosition #551 @418 RefTypeKill <Reg:rdx>  BB06 regmask=[rdx] minReg=1 last>
<RefPosition #552 @418 RefTypeKill <Reg:r8 >  BB06 regmask=[r8] minReg=1 last>
<RefPosition #553 @418 RefTypeKill <Reg:r9 >  BB06 regmask=[r9] minReg=1 last>
<RefPosition #554 @418 RefTypeKill <Reg:r10>  BB06 regmask=[r10] minReg=1 last>
<RefPosition #555 @418 RefTypeKill <Reg:r11>  BB06 regmask=[r11] minReg=1 last>
<RefPosition #556 @418 RefTypeKill <Reg:mm0>  BB06 regmask=[mm0] minReg=1 last>
<RefPosition #557 @418 RefTypeKill <Reg:mm1>  BB06 regmask=[mm1] minReg=1 last>
<RefPosition #558 @418 RefTypeKill <Reg:mm2>  BB06 regmask=[mm2] minReg=1 last>
<RefPosition #559 @418 RefTypeKill <Reg:mm3>  BB06 regmask=[mm3] minReg=1 last>
<RefPosition #560 @418 RefTypeKill <Reg:mm4>  BB06 regmask=[mm4] minReg=1 last>
<RefPosition #561 @418 RefTypeKill <Reg:mm5>  BB06 regmask=[mm5] minReg=1 last>
<RefPosition #562 @427 RefTypeUse <Ivl:15 V19> LCL_VAR BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #563 @435 RefTypeUse <Ivl:2 V02> LCL_VAR BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #564 @436 RefTypeDef <Ivl:116> IND BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #565 @437 RefTypeUse <Ivl:116>  BB06 regmask=[allIntButFP] minReg=1 last>
<RefPosition #566 @438 RefTypeDef <Ivl:19 V23> STORE_LCL_VAR BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #567 @445 RefTypeUse <Ivl:2 V02> LCL_VAR BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #568 @446 RefTypeDef <Ivl:117> IND BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #569 @447 RefTypeUse <Ivl:117>  BB06 regmask=[allIntButFP] minReg=1 last>
<RefPosition #570 @448 RefTypeDef <Ivl:18 V22> STORE_LCL_VAR BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #571 @451 RefTypeUse <Ivl:19 V23> LCL_VAR BB06 regmask=[allIntButFP] minReg=1 last>
<RefPosition #572 @452 RefTypeDef <Ivl:20 V24> STORE_LCL_VAR BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #573 @455 RefTypeUse <Ivl:15 V19> LCL_VAR BB06 regmask=[allIntButFP] minReg=1 last>
<RefPosition #574 @456 RefTypeDef <Ivl:21 V25> STORE_LCL_VAR BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #575 @459 RefTypeUse <Ivl:18 V22> LCL_VAR BB06 regmask=[allIntButFP] minReg=1 last>
<RefPosition #576 @460 RefTypeDef <Ivl:22 V26> STORE_LCL_VAR BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #577 @465 RefTypeUse <Ivl:22 V26> LCL_VAR BB06 regmask=[allIntButFP] minReg=1 regOptional>
<RefPosition #578 @469 RefTypeBB  BB07 regmask=[] minReg=1>
<RefPosition #579 @472 RefTypeDef <Ivl:118> CNS_INT BB07 regmask=[rcx] minReg=1>
<RefPosition #580 @473 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #581 @473 RefTypeUse <Ivl:118>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #582 @474 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #583 @474 RefTypeDef <Ivl:119> PUTARG_REG BB07 regmask=[rcx] minReg=1 fixed>
<RefPosition #584 @475 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #585 @475 RefTypeUse <Ivl:119>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #586 @476 RefTypeKill <Reg:rax>  BB07 regmask=[rax] minReg=1 last>
<RefPosition #587 @476 RefTypeKill <Reg:rcx>  BB07 regmask=[rcx] minReg=1 last>
<RefPosition #588 @476 RefTypeKill <Reg:rdx>  BB07 regmask=[rdx] minReg=1 last>
<RefPosition #589 @476 RefTypeKill <Reg:r8 >  BB07 regmask=[r8] minReg=1 last>
<RefPosition #590 @476 RefTypeKill <Reg:r9 >  BB07 regmask=[r9] minReg=1 last>
<RefPosition #591 @476 RefTypeKill <Reg:r10>  BB07 regmask=[r10] minReg=1 last>
<RefPosition #592 @476 RefTypeKill <Reg:r11>  BB07 regmask=[r11] minReg=1 last>
<RefPosition #593 @476 RefTypeFixedReg <Reg:rax>  BB07 regmask=[rax] minReg=1>
<RefPosition #594 @476 RefTypeDef <Ivl:120> CALL BB07 regmask=[rax] minReg=1 fixed>
<RefPosition #595 @477 RefTypeUse <Ivl:120>  BB07 regmask=[allIntButFP] minReg=1 last>
<RefPosition #596 @478 RefTypeDef <Ivl:24 V28> STORE_LCL_VAR BB07 regmask=[allIntButFP] minReg=1>
<RefPosition #597 @481 RefTypeUse <Ivl:24 V28> LCL_VAR BB07 regmask=[allIntButFP] minReg=1>
<RefPosition #598 @482 RefTypeDef <Ivl:121> LEA BB07 regmask=[rcx] minReg=1>
<RefPosition #599 @485 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #600 @485 RefTypeUse <Ivl:121>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #601 @485 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #602 @485 RefTypeUse <Ivl:2 V02> LCL_VAR BB07 regmask=[rdx] minReg=1 fixed>
<RefPosition #603 @486 RefTypeKill <Reg:rax>  BB07 regmask=[rax] minReg=1 last>
<RefPosition #604 @486 RefTypeKill <Reg:rcx>  BB07 regmask=[rcx] minReg=1 last>
<RefPosition #605 @486 RefTypeKill <Reg:rdx>  BB07 regmask=[rdx] minReg=1 last>
<RefPosition #606 @486 RefTypeKill <Reg:r8 >  BB07 regmask=[r8] minReg=1 last>
<RefPosition #607 @486 RefTypeKill <Reg:r9 >  BB07 regmask=[r9] minReg=1 last>
<RefPosition #608 @486 RefTypeKill <Reg:r10>  BB07 regmask=[r10] minReg=1 last>
<RefPosition #609 @486 RefTypeKill <Reg:r11>  BB07 regmask=[r11] minReg=1 last>
<RefPosition #610 @486 RefTypeKill <Reg:mm0>  BB07 regmask=[mm0] minReg=1 last>
<RefPosition #611 @486 RefTypeKill <Reg:mm1>  BB07 regmask=[mm1] minReg=1 last>
<RefPosition #612 @486 RefTypeKill <Reg:mm2>  BB07 regmask=[mm2] minReg=1 last>
<RefPosition #613 @486 RefTypeKill <Reg:mm3>  BB07 regmask=[mm3] minReg=1 last>
<RefPosition #614 @486 RefTypeKill <Reg:mm4>  BB07 regmask=[mm4] minReg=1 last>
<RefPosition #615 @486 RefTypeKill <Reg:mm5>  BB07 regmask=[mm5] minReg=1 last>
<RefPosition #616 @492 RefTypeDef <Ivl:122> CNS_INT BB07 regmask=[allIntButFP] minReg=1>
<RefPosition #617 @493 RefTypeUse <Ivl:24 V28> LCL_VAR BB07 regmask=[allIntButFP] minReg=1>
<RefPosition #618 @493 RefTypeUse <Ivl:122>  BB07 regmask=[allIntButFP] minReg=1 last>
<RefPosition #619 @497 RefTypeUse <Ivl:2 V02> LCL_VAR BB07 regmask=[allIntButFP] minReg=1>
<RefPosition #620 @498 RefTypeDef <Ivl:123> LEA BB07 regmask=[rcx] minReg=1>
<RefPosition #621 @501 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #622 @501 RefTypeUse <Ivl:123>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #623 @501 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #624 @501 RefTypeUse <Ivl:24 V28> LCL_VAR BB07 regmask=[rdx] minReg=1 fixed>
<RefPosition #625 @502 RefTypeKill <Reg:rax>  BB07 regmask=[rax] minReg=1 last>
<RefPosition #626 @502 RefTypeKill <Reg:rcx>  BB07 regmask=[rcx] minReg=1 last>
<RefPosition #627 @502 RefTypeKill <Reg:rdx>  BB07 regmask=[rdx] minReg=1 last>
<RefPosition #628 @502 RefTypeKill <Reg:r8 >  BB07 regmask=[r8] minReg=1 last>
<RefPosition #629 @502 RefTypeKill <Reg:r9 >  BB07 regmask=[r9] minReg=1 last>
<RefPosition #630 @502 RefTypeKill <Reg:r10>  BB07 regmask=[r10] minReg=1 last>
<RefPosition #631 @502 RefTypeKill <Reg:r11>  BB07 regmask=[r11] minReg=1 last>
<RefPosition #632 @502 RefTypeKill <Reg:mm0>  BB07 regmask=[mm0] minReg=1 last>
<RefPosition #633 @502 RefTypeKill <Reg:mm1>  BB07 regmask=[mm1] minReg=1 last>
<RefPosition #634 @502 RefTypeKill <Reg:mm2>  BB07 regmask=[mm2] minReg=1 last>
<RefPosition #635 @502 RefTypeKill <Reg:mm3>  BB07 regmask=[mm3] minReg=1 last>
<RefPosition #636 @502 RefTypeKill <Reg:mm4>  BB07 regmask=[mm4] minReg=1 last>
<RefPosition #637 @502 RefTypeKill <Reg:mm5>  BB07 regmask=[mm5] minReg=1 last>
<RefPosition #638 @505 RefTypeUse <Ivl:24 V28> LCL_VAR BB07 regmask=[allIntButFP] minReg=1 last>
<RefPosition #639 @506 RefTypeDef <Ivl:22 V26> STORE_LCL_VAR BB07 regmask=[allIntButFP] minReg=1>
<RefPosition #640 @507 RefTypeBB  BB09 regmask=[] minReg=1>
<RefPosition #641 @510 RefTypeDef <Ivl:124> CNS_INT BB09 regmask=[rcx] minReg=1>
<RefPosition #642 @511 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #643 @511 RefTypeUse <Ivl:124>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #644 @512 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #645 @512 RefTypeDef <Ivl:125> PUTARG_REG BB09 regmask=[rcx] minReg=1 fixed>
<RefPosition #646 @513 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #647 @513 RefTypeUse <Ivl:125>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #648 @514 RefTypeKill <Reg:rax>  BB09 regmask=[rax] minReg=1 last>
<RefPosition #649 @514 RefTypeKill <Reg:rcx>  BB09 regmask=[rcx] minReg=1 last>
<RefPosition #650 @514 RefTypeKill <Reg:rdx>  BB09 regmask=[rdx] minReg=1 last>
<RefPosition #651 @514 RefTypeKill <Reg:r8 >  BB09 regmask=[r8] minReg=1 last>
<RefPosition #652 @514 RefTypeKill <Reg:r9 >  BB09 regmask=[r9] minReg=1 last>
<RefPosition #653 @514 RefTypeKill <Reg:r10>  BB09 regmask=[r10] minReg=1 last>
<RefPosition #654 @514 RefTypeKill <Reg:r11>  BB09 regmask=[r11] minReg=1 last>
<RefPosition #655 @514 RefTypeFixedReg <Reg:rax>  BB09 regmask=[rax] minReg=1>
<RefPosition #656 @514 RefTypeDef <Ivl:126> CALL BB09 regmask=[rax] minReg=1 fixed>
<RefPosition #657 @515 RefTypeUse <Ivl:126>  BB09 regmask=[allIntButFP] minReg=1 last>
<RefPosition #658 @516 RefTypeDef <Ivl:23 V27> STORE_LCL_VAR BB09 regmask=[allIntButFP] minReg=1>
<RefPosition #659 @519 RefTypeUse <Ivl:23 V27> LCL_VAR BB09 regmask=[allIntButFP] minReg=1>
<RefPosition #660 @520 RefTypeDef <Ivl:127> LEA BB09 regmask=[rcx] minReg=1>
<RefPosition #661 @523 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #662 @523 RefTypeUse <Ivl:127>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #663 @523 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #664 @523 RefTypeUse <Ivl:2 V02> LCL_VAR BB09 regmask=[rdx] minReg=1 fixed>
<RefPosition #665 @524 RefTypeKill <Reg:rax>  BB09 regmask=[rax] minReg=1 last>
<RefPosition #666 @524 RefTypeKill <Reg:rcx>  BB09 regmask=[rcx] minReg=1 last>
<RefPosition #667 @524 RefTypeKill <Reg:rdx>  BB09 regmask=[rdx] minReg=1 last>
<RefPosition #668 @524 RefTypeKill <Reg:r8 >  BB09 regmask=[r8] minReg=1 last>
<RefPosition #669 @524 RefTypeKill <Reg:r9 >  BB09 regmask=[r9] minReg=1 last>
<RefPosition #670 @524 RefTypeKill <Reg:r10>  BB09 regmask=[r10] minReg=1 last>
<RefPosition #671 @524 RefTypeKill <Reg:r11>  BB09 regmask=[r11] minReg=1 last>
<RefPosition #672 @524 RefTypeKill <Reg:mm0>  BB09 regmask=[mm0] minReg=1 last>
<RefPosition #673 @524 RefTypeKill <Reg:mm1>  BB09 regmask=[mm1] minReg=1 last>
<RefPosition #674 @524 RefTypeKill <Reg:mm2>  BB09 regmask=[mm2] minReg=1 last>
<RefPosition #675 @524 RefTypeKill <Reg:mm3>  BB09 regmask=[mm3] minReg=1 last>
<RefPosition #676 @524 RefTypeKill <Reg:mm4>  BB09 regmask=[mm4] minReg=1 last>
<RefPosition #677 @524 RefTypeKill <Reg:mm5>  BB09 regmask=[mm5] minReg=1 last>
<RefPosition #678 @530 RefTypeDef <Ivl:128> CNS_INT BB09 regmask=[allIntButFP] minReg=1>
<RefPosition #679 @531 RefTypeUse <Ivl:23 V27> LCL_VAR BB09 regmask=[allIntButFP] minReg=1>
<RefPosition #680 @531 RefTypeUse <Ivl:128>  BB09 regmask=[allIntButFP] minReg=1 last>
<RefPosition #681 @537 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #682 @537 RefTypeUse <Ivl:21 V25> LCL_VAR BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #683 @538 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #684 @538 RefTypeDef <Ivl:129> PUTARG_REG BB09 regmask=[rcx] minReg=1 fixed>
<RefPosition #685 @541 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #686 @541 RefTypeUse <Ivl:22 V26> LCL_VAR BB09 regmask=[rdx] minReg=1 last fixed>
<RefPosition #687 @542 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #688 @542 RefTypeDef <Ivl:130> PUTARG_REG BB09 regmask=[rdx] minReg=1 fixed>
<RefPosition #689 @545 RefTypeFixedReg <Reg:r8 >  BB09 regmask=[r8] minReg=1>
<RefPosition #690 @545 RefTypeUse <Ivl:23 V27> LCL_VAR BB09 regmask=[r8] minReg=1 last fixed>
<RefPosition #691 @546 RefTypeFixedReg <Reg:r8 >  BB09 regmask=[r8] minReg=1>
<RefPosition #692 @546 RefTypeDef <Ivl:131> PUTARG_REG BB09 regmask=[r8] minReg=1 fixed>
<RefPosition #693 @547 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #694 @547 RefTypeUse <Ivl:129>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #695 @547 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #696 @547 RefTypeUse <Ivl:130>  BB09 regmask=[rdx] minReg=1 last fixed>
<RefPosition #697 @547 RefTypeFixedReg <Reg:r8 >  BB09 regmask=[r8] minReg=1>
<RefPosition #698 @547 RefTypeUse <Ivl:131>  BB09 regmask=[r8] minReg=1 last fixed>
<RefPosition #699 @548 RefTypeKill <Reg:rax>  BB09 regmask=[rax] minReg=1 last>
<RefPosition #700 @548 RefTypeKill <Reg:rcx>  BB09 regmask=[rcx] minReg=1 last>
<RefPosition #701 @548 RefTypeKill <Reg:rdx>  BB09 regmask=[rdx] minReg=1 last>
<RefPosition #702 @548 RefTypeKill <Reg:r8 >  BB09 regmask=[r8] minReg=1 last>
<RefPosition #703 @548 RefTypeKill <Reg:r9 >  BB09 regmask=[r9] minReg=1 last>
<RefPosition #704 @548 RefTypeKill <Reg:r10>  BB09 regmask=[r10] minReg=1 last>
<RefPosition #705 @548 RefTypeKill <Reg:r11>  BB09 regmask=[r11] minReg=1 last>
<RefPosition #706 @548 RefTypeFixedReg <Reg:rax>  BB09 regmask=[rax] minReg=1>
<RefPosition #707 @548 RefTypeDef <Ivl:132> CALL BB09 regmask=[rax] minReg=1 fixed>
<RefPosition #708 @549 RefTypeUse <Ivl:132>  BB09 regmask=[allIntButFP] minReg=1 last>
<RefPosition #709 @550 RefTypeDef <Ivl:36 V42> STORE_LCL_VAR BB09 regmask=[allIntButFP] minReg=1>
<RefPosition #710 @553 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #711 @553 RefTypeUse <Ivl:36 V42> LCL_VAR BB09 regmask=[rdx] minReg=1 last fixed>
<RefPosition #712 @554 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #713 @554 RefTypeDef <Ivl:133> PUTARG_REG BB09 regmask=[rdx] minReg=1 fixed>
<RefPosition #714 @557 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #715 @557 RefTypeUse <Ivl:20 V24> LCL_VAR BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #716 @558 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #717 @558 RefTypeDef <Ivl:134> PUTARG_REG BB09 regmask=[rcx] minReg=1 fixed>
<RefPosition #718 @559 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #719 @559 RefTypeUse <Ivl:133>  BB09 regmask=[rdx] minReg=1 last fixed>
<RefPosition #720 @559 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #721 @559 RefTypeUse <Ivl:134>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #722 @560 RefTypeKill <Reg:rax>  BB09 regmask=[rax] minReg=1 last>
<RefPosition #723 @560 RefTypeKill <Reg:rcx>  BB09 regmask=[rcx] minReg=1 last>
<RefPosition #724 @560 RefTypeKill <Reg:rdx>  BB09 regmask=[rdx] minReg=1 last>
<RefPosition #725 @560 RefTypeKill <Reg:r8 >  BB09 regmask=[r8] minReg=1 last>
<RefPosition #726 @560 RefTypeKill <Reg:r9 >  BB09 regmask=[r9] minReg=1 last>
<RefPosition #727 @560 RefTypeKill <Reg:r10>  BB09 regmask=[r10] minReg=1 last>
<RefPosition #728 @560 RefTypeKill <Reg:r11>  BB09 regmask=[r11] minReg=1 last>
<RefPosition #729 @564 RefTypeDef <Ivl:135> LCL_VAR BB09 regmask=[rcx] minReg=1>
<RefPosition #730 @565 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #731 @565 RefTypeUse <Ivl:135>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #732 @566 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #733 @566 RefTypeDef <Ivl:136> PUTARG_REG BB09 regmask=[rcx] minReg=1 fixed>
<RefPosition #734 @568 RefTypeFixedReg <Reg:r11>  BB09 regmask=[r11] minReg=1>
<RefPosition #735 @568 RefTypeDef <Ivl:137> CNS_INT BB09 regmask=[r11] minReg=1 fixed>
<RefPosition #736 @569 RefTypeFixedReg <Reg:r11>  BB09 regmask=[r11] minReg=1>
<RefPosition #737 @569 RefTypeUse <Ivl:137>  BB09 regmask=[r11] minReg=1 last fixed>
<RefPosition #738 @570 RefTypeFixedReg <Reg:r11>  BB09 regmask=[r11] minReg=1>
<RefPosition #739 @570 RefTypeDef <Ivl:138> PUTARG_REG BB09 regmask=[r11] minReg=1 fixed>
<RefPosition #740 @575 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #741 @575 RefTypeUse <Ivl:136>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #742 @575 RefTypeFixedReg <Reg:r11>  BB09 regmask=[r11] minReg=1>
<RefPosition #743 @575 RefTypeUse <Ivl:138>  BB09 regmask=[r11] minReg=1 last fixed>
<RefPosition #744 @576 RefTypeKill <Reg:rax>  BB09 regmask=[rax] minReg=1 last>
<RefPosition #745 @576 RefTypeKill <Reg:rcx>  BB09 regmask=[rcx] minReg=1 last>
<RefPosition #746 @576 RefTypeKill <Reg:rdx>  BB09 regmask=[rdx] minReg=1 last>
<RefPosition #747 @576 RefTypeKill <Reg:r8 >  BB09 regmask=[r8] minReg=1 last>
<RefPosition #748 @576 RefTypeKill <Reg:r9 >  BB09 regmask=[r9] minReg=1 last>
<RefPosition #749 @576 RefTypeKill <Reg:r10>  BB09 regmask=[r10] minReg=1 last>
<RefPosition #750 @576 RefTypeKill <Reg:r11>  BB09 regmask=[r11] minReg=1 last>
<RefPosition #751 @576 RefTypeFixedReg <Reg:rax>  BB09 regmask=[rax] minReg=1>
<RefPosition #752 @576 RefTypeDef <Ivl:139> CALL BB09 regmask=[rax] minReg=1 fixed>
<RefPosition #753 @579 RefTypeUse <Ivl:139>  BB09 regmask=[allIntButFP] minReg=1 last regOptional>
<RefPosition #754 @583 RefTypeExpUse <Ivl:3 V03>  BB09 regmask=[allIntButFP] minReg=1 regOptional>
<RefPosition #755 @583 RefTypeExpUse <Ivl:4 V04>  BB09 regmask=[allIntButFP] minReg=1 regOptional>
<RefPosition #756 @583 RefTypeExpUse <Ivl:5 V05>  BB09 regmask=[allIntButFP] minReg=1 regOptional>
<RefPosition #757 @583 RefTypeBB  BB13 regmask=[] minReg=1>
<RefPosition #758 @586 RefTypeDef <Ivl:140> LCL_VAR BB13 regmask=[rcx] minReg=1>
<RefPosition #759 @587 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #760 @587 RefTypeUse <Ivl:140>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #761 @588 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #762 @588 RefTypeDef <Ivl:141> PUTARG_REG BB13 regmask=[rcx] minReg=1 fixed>
<RefPosition #763 @590 RefTypeFixedReg <Reg:r11>  BB13 regmask=[r11] minReg=1>
<RefPosition #764 @590 RefTypeDef <Ivl:142> CNS_INT BB13 regmask=[r11] minReg=1 fixed>
<RefPosition #765 @591 RefTypeFixedReg <Reg:r11>  BB13 regmask=[r11] minReg=1>
<RefPosition #766 @591 RefTypeUse <Ivl:142>  BB13 regmask=[r11] minReg=1 last fixed>
<RefPosition #767 @592 RefTypeFixedReg <Reg:r11>  BB13 regmask=[r11] minReg=1>
<RefPosition #768 @592 RefTypeDef <Ivl:143> PUTARG_REG BB13 regmask=[r11] minReg=1 fixed>
<RefPosition #769 @597 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #770 @597 RefTypeUse <Ivl:141>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #771 @597 RefTypeFixedReg <Reg:r11>  BB13 regmask=[r11] minReg=1>
<RefPosition #772 @597 RefTypeUse <Ivl:143>  BB13 regmask=[r11] minReg=1 last fixed>
<RefPosition #773 @598 RefTypeKill <Reg:rax>  BB13 regmask=[rax] minReg=1 last>
<RefPosition #774 @598 RefTypeKill <Reg:rcx>  BB13 regmask=[rcx] minReg=1 last>
<RefPosition #775 @598 RefTypeKill <Reg:rdx>  BB13 regmask=[rdx] minReg=1 last>
<RefPosition #776 @598 RefTypeKill <Reg:r8 >  BB13 regmask=[r8] minReg=1 last>
<RefPosition #777 @598 RefTypeKill <Reg:r9 >  BB13 regmask=[r9] minReg=1 last>
<RefPosition #778 @598 RefTypeKill <Reg:r10>  BB13 regmask=[r10] minReg=1 last>
<RefPosition #779 @598 RefTypeKill <Reg:r11>  BB13 regmask=[r11] minReg=1 last>
<RefPosition #780 @605 RefTypeUse <Ivl:2 V02> LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #781 @606 RefTypeDef <Ivl:144> IND BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #782 @607 RefTypeUse <Ivl:144>  BB13 regmask=[allIntButFP] minReg=1 last>
<RefPosition #783 @608 RefTypeDef <Ivl:29 V35> STORE_LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #784 @613 RefTypeUse <Ivl:29 V35> LCL_VAR BB13 regmask=[allIntButFP] minReg=1 last>
<RefPosition #785 @614 RefTypeDef <Ivl:145> IND BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #786 @619 RefTypeUse <Ivl:2 V02> LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #787 @619 RefTypeUse <Ivl:145>  BB13 regmask=[allIntButFP] minReg=1 last>
<RefPosition #788 @624 RefTypeDef <Ivl:146> CNS_INT BB13 regmask=[rcx] minReg=1>
<RefPosition #789 @625 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #790 @625 RefTypeUse <Ivl:146>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #791 @626 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #792 @626 RefTypeDef <Ivl:147> PUTARG_REG BB13 regmask=[rcx] minReg=1 fixed>
<RefPosition #793 @627 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #794 @627 RefTypeUse <Ivl:147>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #795 @628 RefTypeKill <Reg:rax>  BB13 regmask=[rax] minReg=1 last>
<RefPosition #796 @628 RefTypeKill <Reg:rcx>  BB13 regmask=[rcx] minReg=1 last>
<RefPosition #797 @628 RefTypeKill <Reg:rdx>  BB13 regmask=[rdx] minReg=1 last>
<RefPosition #798 @628 RefTypeKill <Reg:r8 >  BB13 regmask=[r8] minReg=1 last>
<RefPosition #799 @628 RefTypeKill <Reg:r9 >  BB13 regmask=[r9] minReg=1 last>
<RefPosition #800 @628 RefTypeKill <Reg:r10>  BB13 regmask=[r10] minReg=1 last>
<RefPosition #801 @628 RefTypeKill <Reg:r11>  BB13 regmask=[r11] minReg=1 last>
<RefPosition #802 @628 RefTypeFixedReg <Reg:rax>  BB13 regmask=[rax] minReg=1>
<RefPosition #803 @628 RefTypeDef <Ivl:148> CALL BB13 regmask=[rax] minReg=1 fixed>
<RefPosition #804 @629 RefTypeUse <Ivl:148>  BB13 regmask=[allIntButFP] minReg=1 last>
<RefPosition #805 @630 RefTypeDef <Ivl:25 V29> STORE_LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #806 @635 RefTypeUse <Ivl:2 V02> LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #807 @636 RefTypeDef <Ivl:149> IND BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #808 @637 RefTypeUse <Ivl:149>  BB13 regmask=[allIntButFP] minReg=1 last>
<RefPosition #809 @638 RefTypeDef <Ivl:31 V37> STORE_LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #810 @640 RefTypeDef <Ivl:150> CNS_INT BB13 regmask=[rcx] minReg=1>
<RefPosition #811 @641 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #812 @641 RefTypeUse <Ivl:150>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #813 @642 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #814 @642 RefTypeDef <Ivl:151> PUTARG_REG BB13 regmask=[rcx] minReg=1 fixed>
<RefPosition #815 @643 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #816 @643 RefTypeUse <Ivl:151>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #817 @644 RefTypeKill <Reg:rax>  BB13 regmask=[rax] minReg=1 last>
<RefPosition #818 @644 RefTypeKill <Reg:rcx>  BB13 regmask=[rcx] minReg=1 last>
<RefPosition #819 @644 RefTypeKill <Reg:rdx>  BB13 regmask=[rdx] minReg=1 last>
<RefPosition #820 @644 RefTypeKill <Reg:r8 >  BB13 regmask=[r8] minReg=1 last>
<RefPosition #821 @644 RefTypeKill <Reg:r9 >  BB13 regmask=[r9] minReg=1 last>
<RefPosition #822 @644 RefTypeKill <Reg:r10>  BB13 regmask=[r10] minReg=1 last>
<RefPosition #823 @644 RefTypeKill <Reg:r11>  BB13 regmask=[r11] minReg=1 last>
<RefPosition #824 @644 RefTypeFixedReg <Reg:rax>  BB13 regmask=[rax] minReg=1>
<RefPosition #825 @644 RefTypeDef <Ivl:152> CALL BB13 regmask=[rax] minReg=1 fixed>
<RefPosition #826 @645 RefTypeUse <Ivl:152>  BB13 regmask=[allIntButFP] minReg=1 last>
<RefPosition #827 @646 RefTypeDef <Ivl:30 V36> STORE_LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #828 @649 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #829 @649 RefTypeUse <Ivl:30 V36> LCL_VAR BB13 regmask=[rcx] minReg=1 fixed>
<RefPosition #830 @650 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #831 @650 RefTypeDef <Ivl:153> PUTARG_REG BB13 regmask=[rcx] minReg=1 fixed>
<RefPosition #832 @652 RefTypeDef <Ivl:154> CNS_INT BB13 regmask=[rdx] minReg=1>
<RefPosition #833 @653 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #834 @653 RefTypeUse <Ivl:154>  BB13 regmask=[rdx] minReg=1 last fixed>
<RefPosition #835 @654 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #836 @654 RefTypeDef <Ivl:155> PUTARG_REG BB13 regmask=[rdx] minReg=1 fixed>
<RefPosition #837 @656 RefTypeDef <Ivl:156> CNS_INT BB13 regmask=[r8] minReg=1>
<RefPosition #838 @657 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #839 @657 RefTypeUse <Ivl:156>  BB13 regmask=[r8] minReg=1 last fixed>
<RefPosition #840 @658 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #841 @658 RefTypeDef <Ivl:157> PUTARG_REG BB13 regmask=[r8] minReg=1 fixed>
<RefPosition #842 @659 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #843 @659 RefTypeUse <Ivl:153>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #844 @659 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #845 @659 RefTypeUse <Ivl:155>  BB13 regmask=[rdx] minReg=1 last fixed>
<RefPosition #846 @659 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #847 @659 RefTypeUse <Ivl:157>  BB13 regmask=[r8] minReg=1 last fixed>
<RefPosition #848 @660 RefTypeKill <Reg:rax>  BB13 regmask=[rax] minReg=1 last>
<RefPosition #849 @660 RefTypeKill <Reg:rcx>  BB13 regmask=[rcx] minReg=1 last>
<RefPosition #850 @660 RefTypeKill <Reg:rdx>  BB13 regmask=[rdx] minReg=1 last>
<RefPosition #851 @660 RefTypeKill <Reg:r8 >  BB13 regmask=[r8] minReg=1 last>
<RefPosition #852 @660 RefTypeKill <Reg:r9 >  BB13 regmask=[r9] minReg=1 last>
<RefPosition #853 @660 RefTypeKill <Reg:r10>  BB13 regmask=[r10] minReg=1 last>
<RefPosition #854 @660 RefTypeKill <Reg:r11>  BB13 regmask=[r11] minReg=1 last>
<RefPosition #855 @663 RefTypeUse <Ivl:25 V29> LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #856 @664 RefTypeDef <Ivl:158> LEA BB13 regmask=[rcx] minReg=1>
<RefPosition #857 @667 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #858 @667 RefTypeUse <Ivl:158>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #859 @667 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #860 @667 RefTypeUse <Ivl:30 V36> LCL_VAR BB13 regmask=[rdx] minReg=1 last fixed>
<RefPosition #861 @668 RefTypeKill <Reg:rax>  BB13 regmask=[rax] minReg=1 last>
<RefPosition #862 @668 RefTypeKill <Reg:rcx>  BB13 regmask=[rcx] minReg=1 last>
<RefPosition #863 @668 RefTypeKill <Reg:rdx>  BB13 regmask=[rdx] minReg=1 last>
<RefPosition #864 @668 RefTypeKill <Reg:r8 >  BB13 regmask=[r8] minReg=1 last>
<RefPosition #865 @668 RefTypeKill <Reg:r9 >  BB13 regmask=[r9] minReg=1 last>
<RefPosition #866 @668 RefTypeKill <Reg:r10>  BB13 regmask=[r10] minReg=1 last>
<RefPosition #867 @668 RefTypeKill <Reg:r11>  BB13 regmask=[r11] minReg=1 last>
<RefPosition #868 @668 RefTypeKill <Reg:mm0>  BB13 regmask=[mm0] minReg=1 last>
<RefPosition #869 @668 RefTypeKill <Reg:mm1>  BB13 regmask=[mm1] minReg=1 last>
<RefPosition #870 @668 RefTypeKill <Reg:mm2>  BB13 regmask=[mm2] minReg=1 last>
<RefPosition #871 @668 RefTypeKill <Reg:mm3>  BB13 regmask=[mm3] minReg=1 last>
<RefPosition #872 @668 RefTypeKill <Reg:mm4>  BB13 regmask=[mm4] minReg=1 last>
<RefPosition #873 @668 RefTypeKill <Reg:mm5>  BB13 regmask=[mm5] minReg=1 last>
<RefPosition #874 @675 RefTypeUse <Ivl:25 V29> LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #875 @675 RefTypeUse <Ivl:31 V37> LCL_VAR BB13 regmask=[allIntButFP] minReg=1 last>
<RefPosition #876 @681 RefTypeUse <Ivl:2 V02> LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #877 @682 RefTypeDef <Ivl:159> LEA BB13 regmask=[rcx] minReg=1>
<RefPosition #878 @685 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #879 @685 RefTypeUse <Ivl:159>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #880 @685 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #881 @685 RefTypeUse <Ivl:25 V29> LCL_VAR BB13 regmask=[rdx] minReg=1 last fixed>
<RefPosition #882 @686 RefTypeKill <Reg:rax>  BB13 regmask=[rax] minReg=1 last>
<RefPosition #883 @686 RefTypeKill <Reg:rcx>  BB13 regmask=[rcx] minReg=1 last>
<RefPosition #884 @686 RefTypeKill <Reg:rdx>  BB13 regmask=[rdx] minReg=1 last>
<RefPosition #885 @686 RefTypeKill <Reg:r8 >  BB13 regmask=[r8] minReg=1 last>
<RefPosition #886 @686 RefTypeKill <Reg:r9 >  BB13 regmask=[r9] minReg=1 last>
<RefPosition #887 @686 RefTypeKill <Reg:r10>  BB13 regmask=[r10] minReg=1 last>
<RefPosition #888 @686 RefTypeKill <Reg:r11>  BB13 regmask=[r11] minReg=1 last>
<RefPosition #889 @686 RefTypeKill <Reg:mm0>  BB13 regmask=[mm0] minReg=1 last>
<RefPosition #890 @686 RefTypeKill <Reg:mm1>  BB13 regmask=[mm1] minReg=1 last>
<RefPosition #891 @686 RefTypeKill <Reg:mm2>  BB13 regmask=[mm2] minReg=1 last>
<RefPosition #892 @686 RefTypeKill <Reg:mm3>  BB13 regmask=[mm3] minReg=1 last>
<RefPosition #893 @686 RefTypeKill <Reg:mm4>  BB13 regmask=[mm4] minReg=1 last>
<RefPosition #894 @686 RefTypeKill <Reg:mm5>  BB13 regmask=[mm5] minReg=1 last>
<RefPosition #895 @690 RefTypeDef <Ivl:160> CNS_INT BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #896 @691 RefTypeUse <Ivl:160>  BB13 regmask=[allIntButFP] minReg=1 last>
<RefPosition #897 @692 RefTypeDef <Ivl:7 V10> STORE_LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #898 @693 RefTypeBB  BB17 regmask=[] minReg=1>
<RefPosition #899 @699 RefTypeUse <Ivl:2 V02> LCL_VAR BB17 regmask=[allIntButFP] minReg=1>
<RefPosition #900 @700 RefTypeDef <Ivl:161> IND BB17 regmask=[allIntButFP] minReg=1>
<RefPosition #901 @701 RefTypeUse <Ivl:161>  BB17 regmask=[allIntButFP] minReg=1 last>
<RefPosition #902 @702 RefTypeDef <Ivl:33 V39> STORE_LCL_VAR BB17 regmask=[allIntButFP] minReg=1>
<RefPosition #903 @707 RefTypeUse <Ivl:33 V39> LCL_VAR BB17 regmask=[allIntButFP] minReg=1 regOptional>
<RefPosition #904 @711 RefTypeBB  BB18 regmask=[] minReg=1>
<RefPosition #905 @715 RefTypeUse <Ivl:33 V39> LCL_VAR BB18 regmask=[allIntButFP] minReg=1 last>
<RefPosition #906 @716 RefTypeDef <Ivl:32 V38> STORE_LCL_VAR BB18 regmask=[allIntButFP] minReg=1>
<RefPosition #907 @717 RefTypeBB  BB19 regmask=[] minReg=1>
<RefPosition #908 @722 RefTypeDef <Ivl:32 V38> STORE_LCL_VAR BB19 regmask=[allIntButFP] minReg=1>
<RefPosition #909 @723 RefTypeBB  BB20 regmask=[] minReg=1>
<RefPosition #910 @729 RefTypeUse <Ivl:7 V10> LCL_VAR BB20 regmask=[allIntButFP] minReg=1>
<RefPosition #911 @729 RefTypeUse <Ivl:32 V38> LCL_VAR BB20 regmask=[allIntButFP] minReg=1 last regOptional>
<RefPosition #912 @733 RefTypeBB  BB16 regmask=[] minReg=1>
<RefPosition #913 @739 RefTypeFixedReg <Reg:rcx>  BB16 regmask=[rcx] minReg=1>
<RefPosition #914 @739 RefTypeUse <Ivl:2 V02> LCL_VAR BB16 regmask=[rcx] minReg=1 fixed>
<RefPosition #915 @740 RefTypeFixedReg <Reg:rcx>  BB16 regmask=[rcx] minReg=1>
<RefPosition #916 @740 RefTypeDef <Ivl:162> PUTARG_REG BB16 regmask=[rcx] minReg=1 fixed>
<RefPosition #917 @741 RefTypeFixedReg <Reg:rcx>  BB16 regmask=[rcx] minReg=1>
<RefPosition #918 @741 RefTypeUse <Ivl:162>  BB16 regmask=[rcx] minReg=1 last fixed>
<RefPosition #919 @742 RefTypeKill <Reg:rax>  BB16 regmask=[rax] minReg=1 last>
<RefPosition #920 @742 RefTypeKill <Reg:rcx>  BB16 regmask=[rcx] minReg=1 last>
<RefPosition #921 @742 RefTypeKill <Reg:rdx>  BB16 regmask=[rdx] minReg=1 last>
<RefPosition #922 @742 RefTypeKill <Reg:r8 >  BB16 regmask=[r8] minReg=1 last>
<RefPosition #923 @742 RefTypeKill <Reg:r9 >  BB16 regmask=[r9] minReg=1 last>
<RefPosition #924 @742 RefTypeKill <Reg:r10>  BB16 regmask=[r10] minReg=1 last>
<RefPosition #925 @742 RefTypeKill <Reg:r11>  BB16 regmask=[r11] minReg=1 last>
<RefPosition #926 @749 RefTypeUse <Ivl:7 V10> LCL_VAR BB16 regmask=[allIntButFP] minReg=1 last>
<RefPosition #927 @750 RefTypeDef <Ivl:163> ADD BB16 regmask=[allIntButFP] minReg=1>
<RefPosition #928 @751 RefTypeUse <Ivl:163>  BB16 regmask=[allIntButFP] minReg=1 last>
<RefPosition #929 @752 RefTypeDef <Ivl:7 V10> STORE_LCL_VAR BB16 regmask=[allIntButFP] minReg=1>
<RefPosition #930 @753 RefTypeExpUse <Ivl:7 V10>  BB16 regmask=[allIntButFP] minReg=1 regOptional>
<RefPosition #931 @753 RefTypeBB  BB21 regmask=[] minReg=1>
<RefPosition #932 @761 RefTypeUse <Ivl:2 V02> LCL_VAR BB21 regmask=[allIntButFP] minReg=1 last>
<RefPosition #933 @762 RefTypeDef <Ivl:164> IND BB21 regmask=[allIntButFP] minReg=1>
<RefPosition #934 @763 RefTypeUse <Ivl:164>  BB21 regmask=[allIntButFP] minReg=1 last>
<RefPosition #935 @764 RefTypeDef <Ivl:34 V40> STORE_LCL_VAR BB21 regmask=[allIntButFP] minReg=1>
<RefPosition #936 @769 RefTypeUse <Ivl:34 V40> LCL_VAR BB21 regmask=[allIntButFP] minReg=1 last>
<RefPosition #937 @770 RefTypeDef <Ivl:165> IND BB21 regmask=[rax] minReg=1>
<RefPosition #938 @771 RefTypeFixedReg <Reg:rax>  BB21 regmask=[rax] minReg=1>
<RefPosition #939 @771 RefTypeUse <Ivl:165>  BB21 regmask=[rax] minReg=1 last fixed>
<RefPosition #940 @773 RefTypeBB  BB22 regmask=[] minReg=1>
<RefPosition #941 @785 RefTypeBB  BB23 regmask=[] minReg=1>
<RefPosition #942 @790 RefTypeDef <Ivl:166> LCL_VAR BB23 regmask=[rcx] minReg=1>
<RefPosition #943 @791 RefTypeFixedReg <Reg:rcx>  BB23 regmask=[rcx] minReg=1>
<RefPosition #944 @791 RefTypeUse <Ivl:166>  BB23 regmask=[rcx] minReg=1 last fixed>
<RefPosition #945 @792 RefTypeFixedReg <Reg:rcx>  BB23 regmask=[rcx] minReg=1>
<RefPosition #946 @792 RefTypeDef <Ivl:167> PUTARG_REG BB23 regmask=[rcx] minReg=1 fixed>
<RefPosition #947 @794 RefTypeFixedReg <Reg:r11>  BB23 regmask=[r11] minReg=1>
<RefPosition #948 @794 RefTypeDef <Ivl:168> CNS_INT BB23 regmask=[r11] minReg=1 fixed>
<RefPosition #949 @795 RefTypeFixedReg <Reg:r11>  BB23 regmask=[r11] minReg=1>
<RefPosition #950 @795 RefTypeUse <Ivl:168>  BB23 regmask=[r11] minReg=1 last fixed>
<RefPosition #951 @796 RefTypeFixedReg <Reg:r11>  BB23 regmask=[r11] minReg=1>
<RefPosition #952 @796 RefTypeDef <Ivl:169> PUTARG_REG BB23 regmask=[r11] minReg=1 fixed>
<RefPosition #953 @801 RefTypeFixedReg <Reg:rcx>  BB23 regmask=[rcx] minReg=1>
<RefPosition #954 @801 RefTypeUse <Ivl:167>  BB23 regmask=[rcx] minReg=1 last fixed>
<RefPosition #955 @801 RefTypeFixedReg <Reg:r11>  BB23 regmask=[r11] minReg=1>
<RefPosition #956 @801 RefTypeUse <Ivl:169>  BB23 regmask=[r11] minReg=1 last fixed>
<RefPosition #957 @802 RefTypeKill <Reg:rax>  BB23 regmask=[rax] minReg=1 last>
<RefPosition #958 @802 RefTypeKill <Reg:rcx>  BB23 regmask=[rcx] minReg=1 last>
<RefPosition #959 @802 RefTypeKill <Reg:rdx>  BB23 regmask=[rdx] minReg=1 last>
<RefPosition #960 @802 RefTypeKill <Reg:r8 >  BB23 regmask=[r8] minReg=1 last>
<RefPosition #961 @802 RefTypeKill <Reg:r9 >  BB23 regmask=[r9] minReg=1 last>
<RefPosition #962 @802 RefTypeKill <Reg:r10>  BB23 regmask=[r10] minReg=1 last>
<RefPosition #963 @802 RefTypeKill <Reg:r11>  BB23 regmask=[r11] minReg=1 last>
<RefPosition #964 @803 RefTypeBB  BB24 regmask=[] minReg=1>
<RefPosition #965 @809 RefTypeBB  BB25 regmask=[] minReg=1>
<RefPosition #966 @812 RefTypeKill <Reg:rax>  BB25 regmask=[rax] minReg=1 last>
<RefPosition #967 @812 RefTypeKill <Reg:rcx>  BB25 regmask=[rcx] minReg=1 last>
<RefPosition #968 @812 RefTypeKill <Reg:rdx>  BB25 regmask=[rdx] minReg=1 last>
<RefPosition #969 @812 RefTypeKill <Reg:r8 >  BB25 regmask=[r8] minReg=1 last>
<RefPosition #970 @812 RefTypeKill <Reg:r9 >  BB25 regmask=[r9] minReg=1 last>
<RefPosition #971 @812 RefTypeKill <Reg:r10>  BB25 regmask=[r10] minReg=1 last>
<RefPosition #972 @812 RefTypeKill <Reg:r11>  BB25 regmask=[r11] minReg=1 last>

VAR REFPOSITIONS BEFORE ALLOCATION
--- V00  (Interval 0)
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00>  BB00 regmask=[rcx] minReg=1 fixed regOptional>
<RefPosition #380 @271 RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rcx] minReg=1 last fixed>
--- V01  (Interval 1)
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V01>  BB00 regmask=[rdx] minReg=1 fixed regOptional>
<RefPosition #28  @27  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
--- V02  (Interval 2)
<RefPosition #22  @18  RefTypeDef <Ivl:2 V02> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #23  @23  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #43  @37  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #46  @47  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #104 @87  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #186 @127 RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #206 @141 RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #246 @167 RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #563 @435 RefTypeUse <Ivl:2 V02> LCL_VAR BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #567 @445 RefTypeUse <Ivl:2 V02> LCL_VAR BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #602 @485 RefTypeUse <Ivl:2 V02> LCL_VAR BB07 regmask=[rdx] minReg=1 fixed>
<RefPosition #619 @497 RefTypeUse <Ivl:2 V02> LCL_VAR BB07 regmask=[allIntButFP] minReg=1>
<RefPosition #664 @523 RefTypeUse <Ivl:2 V02> LCL_VAR BB09 regmask=[rdx] minReg=1 fixed>
<RefPosition #780 @605 RefTypeUse <Ivl:2 V02> LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #786 @619 RefTypeUse <Ivl:2 V02> LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #806 @635 RefTypeUse <Ivl:2 V02> LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #876 @681 RefTypeUse <Ivl:2 V02> LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #899 @699 RefTypeUse <Ivl:2 V02> LCL_VAR BB17 regmask=[allIntButFP] minReg=1>
<RefPosition #914 @739 RefTypeUse <Ivl:2 V02> LCL_VAR BB16 regmask=[rcx] minReg=1 fixed>
<RefPosition #932 @761 RefTypeUse <Ivl:2 V02> LCL_VAR BB21 regmask=[allIntButFP] minReg=1 last>
--- V03  (Interval 3)
<RefPosition #319 @210 RefTypeDef <Ivl:3 V03> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #320 @219 RefTypeUse <Ivl:3 V03> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #334 @231 RefTypeUse <Ivl:3 V03> LCL_VAR BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #479 @347 RefTypeUse <Ivl:3 V03> LCL_VAR BB03 regmask=[rdx] minReg=1 fixed>
<RefPosition #754 @583 RefTypeExpUse <Ivl:3 V03>  BB09 regmask=[allIntButFP] minReg=1 regOptional>
--- V04  (Interval 4)
<RefPosition #362 @244 RefTypeDef <Ivl:4 V04> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #497 @363 RefTypeUse <Ivl:4 V04> LCL_VAR BB03 regmask=[allIntButFP] minReg=1 regOptional>
<RefPosition #755 @583 RefTypeExpUse <Ivl:4 V04>  BB09 regmask=[allIntButFP] minReg=1 regOptional>
--- V05  (Interval 5)
<RefPosition #378 @266 RefTypeDef <Ivl:5 V05> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #518 @399 RefTypeUse <Ivl:5 V05> LCL_VAR BB05 regmask=[rcx] minReg=1 fixed>
<RefPosition #756 @583 RefTypeExpUse <Ivl:5 V05>  BB09 regmask=[allIntButFP] minReg=1 regOptional>
--- V06
--- V07  (Interval 6)
<RefPosition #455 @328 RefTypeDef <Ivl:6 V07> STORE_LCL_VAR BB03 regmask=[allIntButFP] minReg=1>
<RefPosition #503 @379 RefTypeUse <Ivl:6 V07> LCL_VAR BB04 regmask=[allIntButFP] minReg=1 last>
<RefPosition #522 @403 RefTypeUse <Ivl:6 V07> LCL_VAR BB05 regmask=[r8] minReg=1 last fixed>
--- V08
--- V09
--- V10  (Interval 7)
<RefPosition #897 @692 RefTypeDef <Ivl:7 V10> STORE_LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #910 @729 RefTypeUse <Ivl:7 V10> LCL_VAR BB20 regmask=[allIntButFP] minReg=1>
<RefPosition #926 @749 RefTypeUse <Ivl:7 V10> LCL_VAR BB16 regmask=[allIntButFP] minReg=1 last>
<RefPosition #929 @752 RefTypeDef <Ivl:7 V10> STORE_LCL_VAR BB16 regmask=[allIntButFP] minReg=1>
<RefPosition #930 @753 RefTypeExpUse <Ivl:7 V10>  BB16 regmask=[allIntButFP] minReg=1 regOptional>
--- V11
--- V12  (Interval 8)
<RefPosition #20  @12  RefTypeDef <Ivl:8 V12> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #21  @17  RefTypeUse <Ivl:8 V12> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>
--- V13  (Interval 9)
<RefPosition #65  @58  RefTypeDef <Ivl:9 V13> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #85  @77  RefTypeUse <Ivl:9 V13> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #109 @91  RefTypeUse <Ivl:9 V13> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
--- V14  (Interval 10)
<RefPosition #140 @102 RefTypeDef <Ivl:10 V14> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #167 @119 RefTypeUse <Ivl:10 V14> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #191 @131 RefTypeUse <Ivl:10 V14> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
--- V15  (Interval 11)
<RefPosition #225 @152 RefTypeDef <Ivl:11 V15> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #227 @155 RefTypeUse <Ivl:11 V15> LCL_VAR BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #251 @171 RefTypeUse <Ivl:11 V15> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
--- V16  (Interval 12)
<RefPosition #473 @338 RefTypeDef <Ivl:12 V16> STORE_LCL_VAR BB03 regmask=[allIntButFP] minReg=1>
<RefPosition #474 @343 RefTypeUse <Ivl:12 V16> LCL_VAR BB03 regmask=[allIntButFP] minReg=1>
<RefPosition #493 @351 RefTypeUse <Ivl:12 V16> LCL_VAR BB03 regmask=[allIntButFP] minReg=1 last>
--- V17  (Interval 13)
<RefPosition #494 @352 RefTypeDef <Ivl:13 V17> STORE_LCL_VAR BB03 regmask=[allIntButFP] minReg=1>
<RefPosition #495 @355 RefTypeUse <Ivl:13 V17> LCL_VAR BB03 regmask=[allIntButFP] minReg=1 last>
--- V18  (Interval 14)
<RefPosition #496 @356 RefTypeDef <Ivl:14 V18> STORE_LCL_VAR BB03 regmask=[allIntButFP] minReg=1>
<RefPosition #499 @371 RefTypeUse <Ivl:14 V18> LCL_VAR BB04 regmask=[allIntButFP] minReg=1 last>
<RefPosition #506 @385 RefTypeUse <Ivl:14 V18> LCL_VAR BB05 regmask=[allIntButFP] minReg=1 last>
--- V19  (Interval 15)
<RefPosition #500 @372 RefTypeDef <Ivl:15 V19> STORE_LCL_VAR BB04 regmask=[allIntButFP] minReg=1>
<RefPosition #501 @375 RefTypeUse <Ivl:15 V19> LCL_VAR BB04 regmask=[allIntButFP] minReg=1>
<RefPosition #507 @386 RefTypeDef <Ivl:15 V19> STORE_LCL_VAR BB05 regmask=[allIntButFP] minReg=1>
<RefPosition #508 @389 RefTypeUse <Ivl:15 V19> LCL_VAR BB05 regmask=[allIntButFP] minReg=1>
<RefPosition #562 @427 RefTypeUse <Ivl:15 V19> LCL_VAR BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #573 @455 RefTypeUse <Ivl:15 V19> LCL_VAR BB06 regmask=[allIntButFP] minReg=1 last>
--- V20  (Interval 16)
<RefPosition #502 @376 RefTypeDef <Ivl:16 V20> STORE_LCL_VAR BB04 regmask=[allIntButFP] minReg=1>
<RefPosition #509 @390 RefTypeDef <Ivl:16 V20> STORE_LCL_VAR BB05 regmask=[allIntButFP] minReg=1>
<RefPosition #543 @413 RefTypeUse <Ivl:16 V20> LCL_VAR BB06 regmask=[allIntButFP] minReg=1 last>
--- V21  (Interval 17)
<RefPosition #504 @380 RefTypeDef <Ivl:17 V21> STORE_LCL_VAR BB04 regmask=[allIntButFP] minReg=1>
<RefPosition #541 @408 RefTypeDef <Ivl:17 V21> STORE_LCL_VAR BB05 regmask=[allIntButFP] minReg=1>
<RefPosition #548 @417 RefTypeUse <Ivl:17 V21> LCL_VAR BB06 regmask=[rdx] minReg=1 last fixed>
--- V22  (Interval 18)
<RefPosition #570 @448 RefTypeDef <Ivl:18 V22> STORE_LCL_VAR BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #575 @459 RefTypeUse <Ivl:18 V22> LCL_VAR BB06 regmask=[allIntButFP] minReg=1 last>
--- V23  (Interval 19)
<RefPosition #566 @438 RefTypeDef <Ivl:19 V23> STORE_LCL_VAR BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #571 @451 RefTypeUse <Ivl:19 V23> LCL_VAR BB06 regmask=[allIntButFP] minReg=1 last>
--- V24  (Interval 20)
<RefPosition #572 @452 RefTypeDef <Ivl:20 V24> STORE_LCL_VAR BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #715 @557 RefTypeUse <Ivl:20 V24> LCL_VAR BB09 regmask=[rcx] minReg=1 last fixed>
--- V25  (Interval 21)
<RefPosition #574 @456 RefTypeDef <Ivl:21 V25> STORE_LCL_VAR BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #682 @537 RefTypeUse <Ivl:21 V25> LCL_VAR BB09 regmask=[rcx] minReg=1 last fixed>
--- V26  (Interval 22)
<RefPosition #576 @460 RefTypeDef <Ivl:22 V26> STORE_LCL_VAR BB06 regmask=[allIntButFP] minReg=1>
<RefPosition #577 @465 RefTypeUse <Ivl:22 V26> LCL_VAR BB06 regmask=[allIntButFP] minReg=1 regOptional>
<RefPosition #639 @506 RefTypeDef <Ivl:22 V26> STORE_LCL_VAR BB07 regmask=[allIntButFP] minReg=1>
<RefPosition #686 @541 RefTypeUse <Ivl:22 V26> LCL_VAR BB09 regmask=[rdx] minReg=1 last fixed>
--- V27  (Interval 23)
<RefPosition #658 @516 RefTypeDef <Ivl:23 V27> STORE_LCL_VAR BB09 regmask=[allIntButFP] minReg=1>
<RefPosition #659 @519 RefTypeUse <Ivl:23 V27> LCL_VAR BB09 regmask=[allIntButFP] minReg=1>
<RefPosition #679 @531 RefTypeUse <Ivl:23 V27> LCL_VAR BB09 regmask=[allIntButFP] minReg=1>
<RefPosition #690 @545 RefTypeUse <Ivl:23 V27> LCL_VAR BB09 regmask=[r8] minReg=1 last fixed>
--- V28  (Interval 24)
<RefPosition #596 @478 RefTypeDef <Ivl:24 V28> STORE_LCL_VAR BB07 regmask=[allIntButFP] minReg=1>
<RefPosition #597 @481 RefTypeUse <Ivl:24 V28> LCL_VAR BB07 regmask=[allIntButFP] minReg=1>
<RefPosition #617 @493 RefTypeUse <Ivl:24 V28> LCL_VAR BB07 regmask=[allIntButFP] minReg=1>
<RefPosition #624 @501 RefTypeUse <Ivl:24 V28> LCL_VAR BB07 regmask=[rdx] minReg=1 fixed>
<RefPosition #638 @505 RefTypeUse <Ivl:24 V28> LCL_VAR BB07 regmask=[allIntButFP] minReg=1 last>
--- V29  (Interval 25)
<RefPosition #805 @630 RefTypeDef <Ivl:25 V29> STORE_LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #855 @663 RefTypeUse <Ivl:25 V29> LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #874 @675 RefTypeUse <Ivl:25 V29> LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #881 @685 RefTypeUse <Ivl:25 V29> LCL_VAR BB13 regmask=[rdx] minReg=1 last fixed>
--- V30  (Interval 26)
<RefPosition #83  @66  RefTypeDef <Ivl:26 V30> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #84  @73  RefTypeUse <Ivl:26 V30> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #90  @81  RefTypeUse <Ivl:26 V30> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
--- V31  (Interval 27)
<RefPosition #275 @176 RefTypeDef <Ivl:27 V31> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #276 @179 RefTypeUse <Ivl:27 V31> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #278 @183 RefTypeUse <Ivl:27 V31> LCL_VAR BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #297 @195 RefTypeUse <Ivl:27 V31> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>
--- V32  (Interval 28)
<RefPosition #315 @202 RefTypeDef <Ivl:28 V32> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #316 @207 RefTypeUse <Ivl:28 V32> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>
--- V33
--- V34
--- V35  (Interval 29)
<RefPosition #783 @608 RefTypeDef <Ivl:29 V35> STORE_LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #784 @613 RefTypeUse <Ivl:29 V35> LCL_VAR BB13 regmask=[allIntButFP] minReg=1 last>
--- V36  (Interval 30)
<RefPosition #827 @646 RefTypeDef <Ivl:30 V36> STORE_LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #829 @649 RefTypeUse <Ivl:30 V36> LCL_VAR BB13 regmask=[rcx] minReg=1 fixed>
<RefPosition #860 @667 RefTypeUse <Ivl:30 V36> LCL_VAR BB13 regmask=[rdx] minReg=1 last fixed>
--- V37  (Interval 31)
<RefPosition #809 @638 RefTypeDef <Ivl:31 V37> STORE_LCL_VAR BB13 regmask=[allIntButFP] minReg=1>
<RefPosition #875 @675 RefTypeUse <Ivl:31 V37> LCL_VAR BB13 regmask=[allIntButFP] minReg=1 last>
--- V38  (Interval 32)
<RefPosition #906 @716 RefTypeDef <Ivl:32 V38> STORE_LCL_VAR BB18 regmask=[allIntButFP] minReg=1>
<RefPosition #908 @722 RefTypeDef <Ivl:32 V38> STORE_LCL_VAR BB19 regmask=[allIntButFP] minReg=1>
<RefPosition #911 @729 RefTypeUse <Ivl:32 V38> LCL_VAR BB20 regmask=[allIntButFP] minReg=1 last regOptional>
--- V39  (Interval 33)
<RefPosition #902 @702 RefTypeDef <Ivl:33 V39> STORE_LCL_VAR BB17 regmask=[allIntButFP] minReg=1>
<RefPosition #903 @707 RefTypeUse <Ivl:33 V39> LCL_VAR BB17 regmask=[allIntButFP] minReg=1 regOptional>
<RefPosition #905 @715 RefTypeUse <Ivl:33 V39> LCL_VAR BB18 regmask=[allIntButFP] minReg=1 last>
--- V40  (Interval 34)
<RefPosition #935 @764 RefTypeDef <Ivl:34 V40> STORE_LCL_VAR BB21 regmask=[allIntButFP] minReg=1>
<RefPosition #936 @769 RefTypeUse <Ivl:34 V40> LCL_VAR BB21 regmask=[allIntButFP] minReg=1 last>
--- V41  (Interval 35)
<RefPosition #373 @248 RefTypeDef <Ivl:35 V41> STORE_LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #374 @257 RefTypeUse <Ivl:35 V41> LCL_VAR BB01 regmask=[allIntButFP] minReg=1>
<RefPosition #375 @263 RefTypeUse <Ivl:35 V41> LCL_VAR BB01 regmask=[allIntButFP] minReg=1 last>
--- V42  (Interval 36)
<RefPosition #709 @550 RefTypeDef <Ivl:36 V42> STORE_LCL_VAR BB09 regmask=[allIntButFP] minReg=1>
<RefPosition #711 @553 RefTypeUse <Ivl:36 V42> LCL_VAR BB09 regmask=[rdx] minReg=1 last fixed>
--- V43



Allocating Registers
--------------------
The following table has one or more rows for each RefPosition that is handled during allocation.
The first column provides the basic information about the RefPosition, with its type (e.g. Def,
Use, Fixd) followed by a '*' if it is a last use, and a 'D' if it is delayRegFree, and then the
action taken during allocation (e.g. Alloc a new register, or Keep an existing one).
The subsequent columns show the Interval occupying each register, if any, followed by 'a' if it is
active, a 'p' if it is a large vector that has been partially spilled, and 'i'if it is inactive.
Columns are only printed up to the last modifed register, which may increase during allocation,
in which case additional columns will appear.  
Registers which are not marked modified have ---- in their column.

---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+
                                 |     |V0  a|V1  a|     |     |     |     |     |     |
  0.#0   V0    Parm   Alloc rsi  |     |     |V1  a|     |     |V0  a|     |     |     |
  0.#1   V1    Parm   Alloc rdi  |     |     |     |     |     |V0  a|V1  a|     |     |
  1.#2   BB1  PredBB0            |     |     |     |     |     |V0  a|V1  a|     |     |
  6.#3   C37   Def    Alloc rcx  |     |C37 a|     |     |     |V0  a|V1  a|     |     |
  7.#4   rcx   Fixd   Keep  rcx  |     |C37 a|     |     |     |V0  a|V1  a|     |     |
  7.#5   C37   Use *  Keep  rcx  |     |C37 a|     |     |     |V0  a|V1  a|     |     |
  8.#6   rcx   Fixd   Keep  rcx  |     |     |     |     |     |V0  a|V1  a|     |     |
  8.#7   I38   Def    Alloc rcx  |     |I38 a|     |     |     |V0  a|V1  a|     |     |
  9.#8   rcx   Fixd   Keep  rcx  |     |I38 a|     |     |     |V0  a|V1  a|     |     |
  9.#9   I38   Use *  Keep  rcx  |     |I38 a|     |     |     |V0  a|V1  a|     |     |
 10.#10  rax   Kill   Keep  rax  |     |     |     |     |     |V0  a|V1  a|     |     |
 10.#11  rcx   Kill   Keep  rcx  |     |     |     |     |     |V0  a|V1  a|     |     |
 10.#12  rdx   Kill   Keep  rdx  |     |     |     |     |     |V0  a|V1  a|     |     |
 10.#13  r8    Kill   Keep  r8   |     |     |     |     |     |V0  a|V1  a|     |     |
 10.#14  r9    Kill   Keep  r9   |     |     |     |     |     |V0  a|V1  a|     |     |
 10.#15  r10   Kill   Keep  r10  |     |     |     |     |     |V0  a|V1  a|     |     |
 10.#16  r11   Kill   Keep  r11  |     |     |     |     |     |V0  a|V1  a|     |     |
 10.#17  rax   Fixd   Keep  rax  |     |     |     |     |     |V0  a|V1  a|     |     |
 10.#18  I39   Def    Alloc rax  |I39 a|     |     |     |     |V0  a|V1  a|     |     |
 11.#19  I39   Use *  Keep  rax  |I39 a|     |     |     |     |V0  a|V1  a|     |     |
 12.#20  V12   Def    Alloc rbx  |     |     |     |V12 a|     |V0  a|V1  a|     |     |
 17.#21  V12   Use *  Keep  rbx  |     |     |     |V12 a|     |V0  a|V1  a|     |     |
 18.#22  V2    Def    Alloc rbx  |     |     |     |V2  a|     |V0  a|V1  a|     |     |
 23.#23  V2    Use    Keep  rbx  |     |     |     |V2  a|     |V0  a|V1  a|     |     |
 24.#24  I40   Def    Alloc rcx  |     |I40 a|     |V2  a|     |V0  a|V1  a|     |     |
 27.#25  rcx   Fixd   Keep  rcx  |     |I40 a|     |V2  a|     |V0  a|V1  a|     |     |
 27.#26  I40   Use *  Keep  rcx  |     |I40 a|     |V2  a|     |V0  a|V1  a|     |     |
 27.#27  rdx   Fixd   Keep  rdx  |     |I40 a|     |V2  a|     |V0  a|V1  a|     |     |
 27.#28  V1    Use *  Copy  rdx  |     |I40 a|V1  a|V2  a|     |V0  a|V1  a|     |     |
 28.#29  rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|     |     |     |
 28.#30  rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|     |     |     |
 28.#31  rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|     |     |     |
 28.#32  r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|     |     |     |
 28.#33  r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|     |     |     |
 28.#34  r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|     |     |     |
 28.#35  r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|     |     |     |
 28.#36  mm0   Kill   Keep  mm0  |     |     |     |V2  a|     |V0  a|     |     |     |
 28.#37  mm1   Kill   Keep  mm1  |     |     |     |V2  a|     |V0  a|     |     |     |
 28.#38  mm2   Kill   Keep  mm2  |     |     |     |V2  a|     |V0  a|     |     |     |
 28.#39  mm3   Kill   Keep  mm3  |     |     |     |V2  a|     |V0  a|     |     |     |
 28.#40  mm4   Kill   Keep  mm4  |     |     |     |V2  a|     |V0  a|     |     |     |
 28.#41  mm5   Kill   Keep  mm5  |     |     |     |V2  a|     |V0  a|     |     |     |
 36.#42  C41   Def    Alloc rcx  |     |C41 a|     |V2  a|     |V0  a|     |     |     |
 37.#43  V2    Use    Keep  rbx  |     |C41 a|     |V2  a|     |V0  a|     |     |     |
 37.#44  C41   Use *  Keep  rcx  |     |C41 a|     |V2  a|     |V0  a|     |     |     |
 46.#45  C42   Def    Reuse rcx  |     |C42 a|     |V2  a|     |V0  a|     |     |     |
 47.#46  V2    Use    Keep  rbx  |     |C42 a|     |V2  a|     |V0  a|     |     |     |
 47.#47  C42   Use *  Keep  rcx  |     |C42 a|     |V2  a|     |V0  a|     |     |     |
 52.#48  C43   Def    Alloc rcx  |     |C43 a|     |V2  a|     |V0  a|     |     |     |
 53.#49  rcx   Fixd   Keep  rcx  |     |C43 a|     |V2  a|     |V0  a|     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+
 53.#50  C43   Use *  Keep  rcx  |     |C43 a|     |V2  a|     |V0  a|     |     |     |
 54.#51  rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V0  a|     |     |     |
 54.#52  I44   Def    Alloc rcx  |     |I44 a|     |V2  a|     |V0  a|     |     |     |
 55.#53  rcx   Fixd   Keep  rcx  |     |I44 a|     |V2  a|     |V0  a|     |     |     |
 55.#54  I44   Use *  Keep  rcx  |     |I44 a|     |V2  a|     |V0  a|     |     |     |
 56.#55  rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|     |     |     |
 56.#56  rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|     |     |     |
 56.#57  rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|     |     |     |
 56.#58  r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|     |     |     |
 56.#59  r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|     |     |     |
 56.#60  r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|     |     |     |
 56.#61  r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|     |     |     |
 56.#62  rax   Fixd   Keep  rax  |     |     |     |V2  a|     |V0  a|     |     |     |
 56.#63  I45   Def    Alloc rax  |I45 a|     |     |V2  a|     |V0  a|     |     |     |
 57.#64  I45   Use *  Keep  rax  |I45 a|     |     |V2  a|     |V0  a|     |     |     |
 58.#65  V13   Def    Alloc rdi  |     |     |     |V2  a|     |V0  a|V13 a|     |     |
 60.#66  C46   Def    Alloc rcx  |     |C46 a|     |V2  a|     |V0  a|V13 a|     |     |
 61.#67  rcx   Fixd   Keep  rcx  |     |C46 a|     |V2  a|     |V0  a|V13 a|     |     |
 61.#68  C46   Use *  Keep  rcx  |     |C46 a|     |V2  a|     |V0  a|V13 a|     |     |
 62.#69  rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V0  a|V13 a|     |     |
 62.#70  I47   Def    Alloc rcx  |     |I47 a|     |V2  a|     |V0  a|V13 a|     |     |
 63.#71  rcx   Fixd   Keep  rcx  |     |I47 a|     |V2  a|     |V0  a|V13 a|     |     |
 63.#72  I47   Use *  Keep  rcx  |     |I47 a|     |V2  a|     |V0  a|V13 a|     |     |
 64.#73  rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|V13 a|     |     |
 64.#74  rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|V13 a|     |     |
 64.#75  rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|V13 a|     |     |
 64.#76  r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|V13 a|     |     |
 64.#77  r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|V13 a|     |     |
 64.#78  r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|V13 a|     |     |
 64.#79  r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|V13 a|     |     |
 64.#80  rax   Fixd   Keep  rax  |     |     |     |V2  a|     |V0  a|V13 a|     |     |
 64.#81  I48   Def    Alloc rax  |I48 a|     |     |V2  a|     |V0  a|V13 a|     |     |
 65.#82  I48   Use *  Keep  rax  |I48 a|     |     |V2  a|     |V0  a|V13 a|     |     |
 66.#83  V30   Def    Alloc rax  |V30 a|     |     |V2  a|     |V0  a|V13 a|     |     |
 73.#84  V30   Use    Keep  rax  |V30 a|     |     |V2  a|     |V0  a|V13 a|     |     |
 77.#85  V13   Use    Keep  rdi  |V30 a|     |     |V2  a|     |V0  a|V13 a|     |     |
 78.#86  I49   Def    Alloc rcx  |V30 a|I49 a|     |V2  a|     |V0  a|V13 a|     |     |
 81.#87  rcx   Fixd   Keep  rcx  |V30 a|I49 a|     |V2  a|     |V0  a|V13 a|     |     |
 81.#88  I49   Use *  Keep  rcx  |V30 a|I49 a|     |V2  a|     |V0  a|V13 a|     |     |
 81.#89  rdx   Fixd   Keep  rdx  |V30 a|I49 a|     |V2  a|     |V0  a|V13 a|     |     |
 81.#90  V30   Use *  Copy  rdx  |V30 a|I49 a|V30 a|V2  a|     |V0  a|V13 a|     |     |
 82.#91  rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|V13 a|     |     |
 82.#92  rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|V13 a|     |     |
 82.#93  rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|V13 a|     |     |
 82.#94  r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|V13 a|     |     |
 82.#95  r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|V13 a|     |     |
 82.#96  r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|V13 a|     |     |
 82.#97  r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|V13 a|     |     |
 82.#98  mm0   Kill   Keep  mm0  |     |     |     |V2  a|     |V0  a|V13 a|     |     |
 82.#99  mm1   Kill   Keep  mm1  |     |     |     |V2  a|     |V0  a|V13 a|     |     |
 82.#100 mm2   Kill   Keep  mm2  |     |     |     |V2  a|     |V0  a|V13 a|     |     |
 82.#101 mm3   Kill   Keep  mm3  |     |     |     |V2  a|     |V0  a|V13 a|     |     |
 82.#102 mm4   Kill   Keep  mm4  |     |     |     |V2  a|     |V0  a|V13 a|     |     |
 82.#103 mm5   Kill   Keep  mm5  |     |     |     |V2  a|     |V0  a|V13 a|     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+
 87.#104 V2    Use    Keep  rbx  |     |     |     |V2  a|     |V0  a|V13 a|     |     |
 88.#105 I50   Def    Alloc rcx  |     |I50 a|     |V2  a|     |V0  a|V13 a|     |     |
 91.#106 rcx   Fixd   Keep  rcx  |     |I50 a|     |V2  a|     |V0  a|V13 a|     |     |
 91.#107 I50   Use *  Keep  rcx  |     |I50 a|     |V2  a|     |V0  a|V13 a|     |     |
 91.#108 rdx   Fixd   Keep  rdx  |     |I50 a|     |V2  a|     |V0  a|V13 a|     |     |
 91.#109 V13   Use *  Copy  rdx  |     |I50 a|V13 a|V2  a|     |V0  a|V13 a|     |     |
 92.#110 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|     |     |     |
 92.#111 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|     |     |     |
 92.#112 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|     |     |     |
 92.#113 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|     |     |     |
 92.#114 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|     |     |     |
 92.#115 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|     |     |     |
 92.#116 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|     |     |     |
 92.#117 mm0   Kill   Keep  mm0  |     |     |     |V2  a|     |V0  a|     |     |     |
 92.#118 mm1   Kill   Keep  mm1  |     |     |     |V2  a|     |V0  a|     |     |     |
 92.#119 mm2   Kill   Keep  mm2  |     |     |     |V2  a|     |V0  a|     |     |     |
 92.#120 mm3   Kill   Keep  mm3  |     |     |     |V2  a|     |V0  a|     |     |     |
 92.#121 mm4   Kill   Keep  mm4  |     |     |     |V2  a|     |V0  a|     |     |     |
 92.#122 mm5   Kill   Keep  mm5  |     |     |     |V2  a|     |V0  a|     |     |     |
 96.#123 C51   Def    Alloc rcx  |     |C51 a|     |V2  a|     |V0  a|     |     |     |
 97.#124 rcx   Fixd   Keep  rcx  |     |C51 a|     |V2  a|     |V0  a|     |     |     |
 97.#125 C51   Use *  Keep  rcx  |     |C51 a|     |V2  a|     |V0  a|     |     |     |
 98.#126 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V0  a|     |     |     |
 98.#127 I52   Def    Alloc rcx  |     |I52 a|     |V2  a|     |V0  a|     |     |     |
 99.#128 rcx   Fixd   Keep  rcx  |     |I52 a|     |V2  a|     |V0  a|     |     |     |
 99.#129 I52   Use *  Keep  rcx  |     |I52 a|     |V2  a|     |V0  a|     |     |     |
100.#130 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|     |     |     |
100.#131 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|     |     |     |
100.#132 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|     |     |     |
100.#133 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|     |     |     |
100.#134 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|     |     |     |
100.#135 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|     |     |     |
100.#136 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|     |     |     |
100.#137 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |V0  a|     |     |     |
100.#138 I53   Def    Alloc rax  |I53 a|     |     |V2  a|     |V0  a|     |     |     |
101.#139 I53   Use *  Keep  rax  |I53 a|     |     |V2  a|     |V0  a|     |     |     |
102.#140 V14   Def    Alloc rdi  |     |     |     |V2  a|     |V0  a|V14 a|     |     |
104.#141 C54   Def    Alloc rcx  |     |C54 a|     |V2  a|     |V0  a|V14 a|     |     |
105.#142 rcx   Fixd   Keep  rcx  |     |C54 a|     |V2  a|     |V0  a|V14 a|     |     |
105.#143 C54   Use *  Keep  rcx  |     |C54 a|     |V2  a|     |V0  a|V14 a|     |     |
106.#144 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V0  a|V14 a|     |     |
106.#145 I55   Def    Alloc rcx  |     |I55 a|     |V2  a|     |V0  a|V14 a|     |     |
108.#146 C56   Def    Alloc rdx  |     |I55 a|C56 a|V2  a|     |V0  a|V14 a|     |     |
109.#147 rdx   Fixd   Keep  rdx  |     |I55 a|C56 a|V2  a|     |V0  a|V14 a|     |     |
109.#148 C56   Use *  Keep  rdx  |     |I55 a|C56 a|V2  a|     |V0  a|V14 a|     |     |
110.#149 rdx   Fixd   Keep  rdx  |     |I55 a|     |V2  a|     |V0  a|V14 a|     |     |
110.#150 I57   Def    Alloc rdx  |     |I55 a|I57 a|V2  a|     |V0  a|V14 a|     |     |
111.#151 rcx   Fixd   Keep  rcx  |     |I55 a|I57 a|V2  a|     |V0  a|V14 a|     |     |
111.#152 I55   Use *  Keep  rcx  |     |I55 a|I57 a|V2  a|     |V0  a|V14 a|     |     |
111.#153 rdx   Fixd   Keep  rdx  |     |I55 a|I57 a|V2  a|     |V0  a|V14 a|     |     |
111.#154 I57   Use *  Keep  rdx  |     |I55 a|I57 a|V2  a|     |V0  a|V14 a|     |     |
112.#155 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|V14 a|     |     |
112.#156 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|V14 a|     |     |
112.#157 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|V14 a|     |     |
112.#158 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|V14 a|     |     |
112.#159 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|V14 a|     |     |
112.#160 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|V14 a|     |     |
112.#161 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|V14 a|     |     |
112.#162 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |V0  a|V14 a|     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+
112.#163 I58   Def *  Alloc rax  |I58 a|     |     |V2  a|     |V0  a|V14 a|     |     |
114.#164 C59   Def    Alloc rdx  |     |     |C59 a|V2  a|     |V0  a|V14 a|     |     |
115.#165 C59   Use *  Keep  rdx  |     |     |C59 a|V2  a|     |V0  a|V14 a|     |     |
116.#166 I60   Def    Alloc rdx  |     |     |I60 a|V2  a|     |V0  a|V14 a|     |     |
119.#167 V14   Use    Keep  rdi  |     |     |I60 a|V2  a|     |V0  a|V14 a|     |     |
120.#168 I61   Def    Alloc rcx  |     |I61 a|I60 a|V2  a|     |V0  a|V14 a|     |     |
121.#169 rcx   Fixd   Keep  rcx  |     |I61 a|I60 a|V2  a|     |V0  a|V14 a|     |     |
121.#170 I61   Use *  Keep  rcx  |     |I61 a|I60 a|V2  a|     |V0  a|V14 a|     |     |
121.#171 rdx   Fixd   Keep  rdx  |     |I61 a|I60 a|V2  a|     |V0  a|V14 a|     |     |
121.#172 I60   Use *  Keep  rdx  |     |I61 a|I60 a|V2  a|     |V0  a|V14 a|     |     |
122.#173 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|V14 a|     |     |
122.#174 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|V14 a|     |     |
122.#175 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|V14 a|     |     |
122.#176 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|V14 a|     |     |
122.#177 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|V14 a|     |     |
122.#178 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|V14 a|     |     |
122.#179 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|V14 a|     |     |
122.#180 mm0   Kill   Keep  mm0  |     |     |     |V2  a|     |V0  a|V14 a|     |     |
122.#181 mm1   Kill   Keep  mm1  |     |     |     |V2  a|     |V0  a|V14 a|     |     |
122.#182 mm2   Kill   Keep  mm2  |     |     |     |V2  a|     |V0  a|V14 a|     |     |
122.#183 mm3   Kill   Keep  mm3  |     |     |     |V2  a|     |V0  a|V14 a|     |     |
122.#184 mm4   Kill   Keep  mm4  |     |     |     |V2  a|     |V0  a|V14 a|     |     |
122.#185 mm5   Kill   Keep  mm5  |     |     |     |V2  a|     |V0  a|V14 a|     |     |
127.#186 V2    Use    Keep  rbx  |     |     |     |V2  a|     |V0  a|V14 a|     |     |
128.#187 I62   Def    Alloc rcx  |     |I62 a|     |V2  a|     |V0  a|V14 a|     |     |
131.#188 rcx   Fixd   Keep  rcx  |     |I62 a|     |V2  a|     |V0  a|V14 a|     |     |
131.#189 I62   Use *  Keep  rcx  |     |I62 a|     |V2  a|     |V0  a|V14 a|     |     |
131.#190 rdx   Fixd   Keep  rdx  |     |I62 a|     |V2  a|     |V0  a|V14 a|     |     |
131.#191 V14   Use *  Copy  rdx  |     |I62 a|V14 a|V2  a|     |V0  a|V14 a|     |     |
132.#192 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|     |     |     |
132.#193 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|     |     |     |
132.#194 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|     |     |     |
132.#195 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|     |     |     |
132.#196 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|     |     |     |
132.#197 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|     |     |     |
132.#198 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|     |     |     |
132.#199 mm0   Kill   Keep  mm0  |     |     |     |V2  a|     |V0  a|     |     |     |
132.#200 mm1   Kill   Keep  mm1  |     |     |     |V2  a|     |V0  a|     |     |     |
132.#201 mm2   Kill   Keep  mm2  |     |     |     |V2  a|     |V0  a|     |     |     |
132.#202 mm3   Kill   Keep  mm3  |     |     |     |V2  a|     |V0  a|     |     |     |
132.#203 mm4   Kill   Keep  mm4  |     |     |     |V2  a|     |V0  a|     |     |     |
132.#204 mm5   Kill   Keep  mm5  |     |     |     |V2  a|     |V0  a|     |     |     |
140.#205 C63   Def    Alloc rcx  |     |C63 a|     |V2  a|     |V0  a|     |     |     |
141.#206 V2    Use    Keep  rbx  |     |C63 a|     |V2  a|     |V0  a|     |     |     |
141.#207 C63   Use *  Keep  rcx  |     |C63 a|     |V2  a|     |V0  a|     |     |     |
146.#208 C64   Def    Alloc rcx  |     |C64 a|     |V2  a|     |V0  a|     |     |     |
147.#209 rcx   Fixd   Keep  rcx  |     |C64 a|     |V2  a|     |V0  a|     |     |     |
147.#210 C64   Use *  Keep  rcx  |     |C64 a|     |V2  a|     |V0  a|     |     |     |
148.#211 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V0  a|     |     |     |
148.#212 I65   Def    Alloc rcx  |     |I65 a|     |V2  a|     |V0  a|     |     |     |
149.#213 rcx   Fixd   Keep  rcx  |     |I65 a|     |V2  a|     |V0  a|     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+
149.#214 I65   Use *  Keep  rcx  |     |I65 a|     |V2  a|     |V0  a|     |     |     |
150.#215 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|     |     |     |
150.#216 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|     |     |     |
150.#217 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|     |     |     |
150.#218 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|     |     |     |
150.#219 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|     |     |     |
150.#220 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|     |     |     |
150.#221 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|     |     |     |
150.#222 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |V0  a|     |     |     |
150.#223 I66   Def    Alloc rax  |I66 a|     |     |V2  a|     |V0  a|     |     |     |
151.#224 I66   Use *  Keep  rax  |I66 a|     |     |V2  a|     |V0  a|     |     |     |
152.#225 V15   Def    Alloc rdi  |     |     |     |V2  a|     |V0  a|V15 a|     |     |
155.#226 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V0  a|V15 a|     |     |
155.#227 V15   Use    Copy  rcx  |     |V15 a|     |V2  a|     |V0  a|V15 a|     |     |
156.#228 rcx   Fixd   Keep  rcx  |     |V15 a|     |V2  a|     |V0  a|V15 a|     |     |
156.#229 I67   Def    Alloc rcx  |     |I67 a|     |V2  a|     |V0  a|V15 a|     |     |
158.#230 C68   Def    Alloc rdx  |     |I67 a|C68 a|V2  a|     |V0  a|V15 a|     |     |
159.#231 rdx   Fixd   Keep  rdx  |     |I67 a|C68 a|V2  a|     |V0  a|V15 a|     |     |
159.#232 C68   Use *  Keep  rdx  |     |I67 a|C68 a|V2  a|     |V0  a|V15 a|     |     |
160.#233 rdx   Fixd   Keep  rdx  |     |I67 a|     |V2  a|     |V0  a|V15 a|     |     |
160.#234 I69   Def    Alloc rdx  |     |I67 a|I69 a|V2  a|     |V0  a|V15 a|     |     |
161.#235 rcx   Fixd   Keep  rcx  |     |I67 a|I69 a|V2  a|     |V0  a|V15 a|     |     |
161.#236 I67   Use *  Keep  rcx  |     |I67 a|I69 a|V2  a|     |V0  a|V15 a|     |     |
161.#237 rdx   Fixd   Keep  rdx  |     |I67 a|I69 a|V2  a|     |V0  a|V15 a|     |     |
161.#238 I69   Use *  Keep  rdx  |     |I67 a|I69 a|V2  a|     |V0  a|V15 a|     |     |
162.#239 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|V15 a|     |     |
162.#240 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|V15 a|     |     |
162.#241 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|V15 a|     |     |
162.#242 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|V15 a|     |     |
162.#243 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|V15 a|     |     |
162.#244 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|V15 a|     |     |
162.#245 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|V15 a|     |     |
167.#246 V2    Use    Keep  rbx  |     |     |     |V2  a|     |V0  a|V15 a|     |     |
168.#247 I70   Def    Alloc rcx  |     |I70 a|     |V2  a|     |V0  a|V15 a|     |     |
171.#248 rcx   Fixd   Keep  rcx  |     |I70 a|     |V2  a|     |V0  a|V15 a|     |     |
171.#249 I70   Use *  Keep  rcx  |     |I70 a|     |V2  a|     |V0  a|V15 a|     |     |
171.#250 rdx   Fixd   Keep  rdx  |     |I70 a|     |V2  a|     |V0  a|V15 a|     |     |
171.#251 V15   Use *  Copy  rdx  |     |I70 a|V15 a|V2  a|     |V0  a|V15 a|     |     |
172.#252 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|     |     |     |
172.#253 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|     |     |     |
172.#254 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|     |     |     |
172.#255 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|     |     |     |
172.#256 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|     |     |     |
172.#257 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|     |     |     |
172.#258 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|     |     |     |
172.#259 mm0   Kill   Keep  mm0  |     |     |     |V2  a|     |V0  a|     |     |     |
172.#260 mm1   Kill   Keep  mm1  |     |     |     |V2  a|     |V0  a|     |     |     |
172.#261 mm2   Kill   Keep  mm2  |     |     |     |V2  a|     |V0  a|     |     |     |
172.#262 mm3   Kill   Keep  mm3  |     |     |     |V2  a|     |V0  a|     |     |     |
172.#263 mm4   Kill   Keep  mm4  |     |     |     |V2  a|     |V0  a|     |     |     |
172.#264 mm5   Kill   Keep  mm5  |     |     |     |V2  a|     |V0  a|     |     |     |
174.#265 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|     |     |     |
174.#266 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|     |     |     |
174.#267 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|     |     |     |
174.#268 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|     |     |     |
174.#269 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|     |     |     |
174.#270 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|     |     |     |
174.#271 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|     |     |     |
174.#272 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |V0  a|     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+
174.#273 I71   Def    Alloc rax  |I71 a|     |     |V2  a|     |V0  a|     |     |     |
175.#274 I71   Use *  Keep  rax  |I71 a|     |     |V2  a|     |V0  a|     |     |     |
176.#275 V31   Def    Alloc rdi  |     |     |     |V2  a|     |V0  a|V31 a|     |     |
179.#276 V31   Use    Keep  rdi  |     |     |     |V2  a|     |V0  a|V31 a|     |     |
183.#277 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V0  a|V31 a|     |     |
183.#278 V31   Use    Copy  rcx  |     |V31 a|     |V2  a|     |V0  a|V31 a|     |     |
184.#279 rcx   Fixd   Keep  rcx  |     |V31 a|     |V2  a|     |V0  a|V31 a|     |     |
184.#280 I72   Def    Alloc rcx  |     |I72 a|     |V2  a|     |V0  a|V31 a|     |     |
186.#281 C73   Def    Alloc rdx  |     |I72 a|C73 a|V2  a|     |V0  a|V31 a|     |     |
187.#282 rdx   Fixd   Keep  rdx  |     |I72 a|C73 a|V2  a|     |V0  a|V31 a|     |     |
187.#283 C73   Use *  Keep  rdx  |     |I72 a|C73 a|V2  a|     |V0  a|V31 a|     |     |
188.#284 rdx   Fixd   Keep  rdx  |     |I72 a|     |V2  a|     |V0  a|V31 a|     |     |
188.#285 I74   Def    Alloc rdx  |     |I72 a|I74 a|V2  a|     |V0  a|V31 a|     |     |
189.#286 rcx   Fixd   Keep  rcx  |     |I72 a|I74 a|V2  a|     |V0  a|V31 a|     |     |
189.#287 I72   Use *  Keep  rcx  |     |I72 a|I74 a|V2  a|     |V0  a|V31 a|     |     |
189.#288 rdx   Fixd   Keep  rdx  |     |I72 a|I74 a|V2  a|     |V0  a|V31 a|     |     |
189.#289 I74   Use *  Keep  rdx  |     |I72 a|I74 a|V2  a|     |V0  a|V31 a|     |     |
190.#290 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|V31 a|     |     |
190.#291 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|V31 a|     |     |
190.#292 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|V31 a|     |     |
190.#293 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|V31 a|     |     |
190.#294 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|V31 a|     |     |
190.#295 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|V31 a|     |     |
190.#296 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|V31 a|     |     |
195.#297 V31   Use *  Keep  rdi  |     |     |     |V2  a|     |V0  a|V31 a|     |     |
196.#298 I75   Def    Alloc rcx  |     |I75 a|     |V2  a|     |V0  a|     |     |     |
197.#299 rcx   Fixd   Keep  rcx  |     |I75 a|     |V2  a|     |V0  a|     |     |     |
197.#300 I75   Use *  Keep  rcx  |     |I75 a|     |V2  a|     |V0  a|     |     |     |
198.#301 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V0  a|     |     |     |
198.#302 I76   Def    Alloc rcx  |     |I76 a|     |V2  a|     |V0  a|     |     |     |
199.#303 rcx   Fixd   Keep  rcx  |     |I76 a|     |V2  a|     |V0  a|     |     |     |
199.#304 I76   Use *  Keep  rcx  |     |I76 a|     |V2  a|     |V0  a|     |     |     |
200.#305 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|     |     |     |
200.#306 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|     |     |     |
200.#307 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|     |     |     |
200.#308 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|     |     |     |
200.#309 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|     |     |     |
200.#310 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|     |     |     |
200.#311 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|     |     |     |
200.#312 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |V0  a|     |     |     |
200.#313 I77   Def    Alloc rax  |I77 a|     |     |V2  a|     |V0  a|     |     |     |
201.#314 I77   Use *  Keep  rax  |I77 a|     |     |V2  a|     |V0  a|     |     |     |
202.#315 V32   Def    Alloc rax  |V32 a|     |     |V2  a|     |V0  a|     |     |     |
207.#316 V32   Use *  Keep  rax  |V32 a|     |     |V2  a|     |V0  a|     |     |     |
208.#317 I78   Def    Alloc rdi  |     |     |     |V2  a|     |V0  a|I78 a|     |     |
209.#318 I78   Use *  Keep  rdi  |     |     |     |V2  a|     |V0  a|I78 a|     |     |
210.#319 V3    Def    Alloc rdi  |     |     |     |V2  a|     |V0  a|V3  a|     |     |
219.#320 V3    Use    Keep  rdi  |     |     |     |V2  a|     |V0  a|V3  a|     |     |
220.#321 I79   Def    Alloc r9   |     |     |     |V2  a|     |V0  a|V3  a|     |I79 a|
221.#322 r9    Fixd   Keep  r9   |     |     |     |V2  a|     |V0  a|V3  a|     |I79 a|
221.#323 I79   Use *  Keep  r9   |     |     |     |V2  a|     |V0  a|V3  a|     |I79 a|
222.#324 r9    Fixd   Keep  r9   |     |     |     |V2  a|     |V0  a|V3  a|     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+
222.#325 I80   Def    Alloc r9   |     |     |     |V2  a|     |V0  a|V3  a|     |I80 a|
224.#326 C81   Def    Alloc rdx  |     |     |C81 a|V2  a|     |V0  a|V3  a|     |I80 a|
225.#327 C81   Use *  Keep  rdx  |     |     |C81 a|V2  a|     |V0  a|V3  a|     |I80 a|
226.#328 I82   Def    Alloc rdx  |     |     |I82 a|V2  a|     |V0  a|V3  a|     |I80 a|
227.#329 rdx   Fixd   Keep  rdx  |     |     |I82 a|V2  a|     |V0  a|V3  a|     |I80 a|
227.#330 I82   Use *  Keep  rdx  |     |     |I82 a|V2  a|     |V0  a|V3  a|     |I80 a|
228.#331 rdx   Fixd   Keep  rdx  |     |     |     |V2  a|     |V0  a|V3  a|     |I80 a|
228.#332 I83   Def    Alloc rdx  |     |     |I83 a|V2  a|     |V0  a|V3  a|     |I80 a|
231.#333 rcx   Fixd   Keep  rcx  |     |     |I83 a|V2  a|     |V0  a|V3  a|     |I80 a|
231.#334 V3    Use    Copy  rcx  |     |V3  a|I83 a|V2  a|     |V0  a|V3  a|     |I80 a|
232.#335 rcx   Fixd   Keep  rcx  |     |V3  a|I83 a|V2  a|     |V0  a|V3  a|     |I80 a|
232.#336 I84   Def    Alloc rcx  |     |I84 a|I83 a|V2  a|     |V0  a|V3  a|     |I80 a|
234.#337 C85   Def    Alloc r8   |     |I84 a|I83 a|V2  a|     |V0  a|V3  a|C85 a|I80 a|
235.#338 r8    Fixd   Keep  r8   |     |I84 a|I83 a|V2  a|     |V0  a|V3  a|C85 a|I80 a|
235.#339 C85   Use *  Keep  r8   |     |I84 a|I83 a|V2  a|     |V0  a|V3  a|C85 a|I80 a|
236.#340 r8    Fixd   Keep  r8   |     |I84 a|I83 a|V2  a|     |V0  a|V3  a|     |I80 a|
236.#341 I86   Def    Alloc r8   |     |I84 a|I83 a|V2  a|     |V0  a|V3  a|I86 a|I80 a|
237.#342 r9    Fixd   Keep  r9   |     |I84 a|I83 a|V2  a|     |V0  a|V3  a|I86 a|I80 a|
237.#343 I80   Use *  Keep  r9   |     |I84 a|I83 a|V2  a|     |V0  a|V3  a|I86 a|I80 a|
237.#344 rdx   Fixd   Keep  rdx  |     |I84 a|I83 a|V2  a|     |V0  a|V3  a|I86 a|I80 a|
237.#345 I83   Use *  Keep  rdx  |     |I84 a|I83 a|V2  a|     |V0  a|V3  a|I86 a|I80 a|
237.#346 rcx   Fixd   Keep  rcx  |     |I84 a|I83 a|V2  a|     |V0  a|V3  a|I86 a|I80 a|
237.#347 I84   Use *  Keep  rcx  |     |I84 a|I83 a|V2  a|     |V0  a|V3  a|I86 a|I80 a|
237.#348 r8    Fixd   Keep  r8   |     |I84 a|I83 a|V2  a|     |V0  a|V3  a|I86 a|I80 a|
237.#349 I86   Use *  Keep  r8   |     |I84 a|I83 a|V2  a|     |V0  a|V3  a|I86 a|I80 a|
238.#350 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|V3  a|     |     |
238.#351 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|V3  a|     |     |
238.#352 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|V3  a|     |     |
238.#353 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|V3  a|     |     |
238.#354 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|V3  a|     |     |
238.#355 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|V3  a|     |     |
238.#356 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|V3  a|     |     |
238.#357 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |V0  a|V3  a|     |     |
238.#358 I87   Def    Alloc rax  |I87 a|     |     |V2  a|     |V0  a|V3  a|     |     |
241.#359 I87   Use *  Keep  rax  |I87 a|     |     |V2  a|     |V0  a|V3  a|     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r14  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
242.#360 I88   Def    Alloc r14  |     |     |     |V2  a|     |V0  a|V3  a|     |     |I88 a|
243.#361 I88   Use *  Keep  r14  |     |     |     |V2  a|     |V0  a|V3  a|     |     |I88 a|
244.#362 V4    Def    Alloc r14  |     |     |     |V2  a|     |V0  a|V3  a|     |     |V4  a|
246.#363 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|V3  a|     |     |V4  a|
246.#364 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|V3  a|     |     |V4  a|
246.#365 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|V3  a|     |     |V4  a|
246.#366 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|V3  a|     |     |V4  a|
246.#367 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|V3  a|     |     |V4  a|
246.#368 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|V3  a|     |     |V4  a|
246.#369 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|V3  a|     |     |V4  a|
246.#370 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |V0  a|V3  a|     |     |V4  a|
246.#371 I89   Def    Alloc rax  |I89 a|     |     |V2  a|     |V0  a|V3  a|     |     |V4  a|
247.#372 I89   Use *  Keep  rax  |I89 a|     |     |V2  a|     |V0  a|V3  a|     |     |V4  a|
248.#373 V41   Def    Alloc rax  |V41 a|     |     |V2  a|     |V0  a|V3  a|     |     |V4  a|
257.#374 V41   Use    Keep  rax  |V41 a|     |     |V2  a|     |V0  a|V3  a|     |     |V4  a|
263.#375 V41   Use *  Keep  rax  |V41 a|     |     |V2  a|     |V0  a|V3  a|     |     |V4  a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
264.#376 I90   Def    Alloc r15  |     |     |     |V2  a|     |V0  a|V3  a|     |     |V4  a|I90 a|
265.#377 I90   Use *  Keep  r15  |     |     |     |V2  a|     |V0  a|V3  a|     |     |V4  a|I90 a|
266.#378 V5    Def    Alloc r15  |     |     |     |V2  a|     |V0  a|V3  a|     |     |V4  a|V5  a|
271.#379 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V0  a|V3  a|     |     |V4  a|V5  a|
271.#380 V0    Use *  Copy  rcx  |     |V0  a|     |V2  a|     |V0  a|V3  a|     |     |V4  a|V5  a|
272.#381 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |     |V3  a|     |     |V4  a|V5  a|
272.#382 I91   Def    Alloc rcx  |     |I91 a|     |V2  a|     |     |V3  a|     |     |V4  a|V5  a|
274.#383 r11   Fixd   Keep  r11  |     |I91 a|     |V2  a|     |     |V3  a|     |     |V4  a|V5  a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
274.#384 C92   Def    Alloc r11  |     |I91 a|     |V2  a|     |     |V3  a|     |     |C92 a|V4  a|V5  a|
275.#385 r11   Fixd   Keep  r11  |     |I91 a|     |V2  a|     |     |V3  a|     |     |C92 a|V4  a|V5  a|
275.#386 C92   Use *  Keep  r11  |     |I91 a|     |V2  a|     |     |V3  a|     |     |C92 a|V4  a|V5  a|
276.#387 r11   Fixd   Keep  r11  |     |I91 a|     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
276.#388 I93   Def    Alloc r11  |     |I91 a|     |V2  a|     |     |V3  a|     |     |I93 a|V4  a|V5  a|
281.#389 rcx   Fixd   Keep  rcx  |     |I91 a|     |V2  a|     |     |V3  a|     |     |I93 a|V4  a|V5  a|
281.#390 I91   Use *  Keep  rcx  |     |I91 a|     |V2  a|     |     |V3  a|     |     |I93 a|V4  a|V5  a|
281.#391 r11   Fixd   Keep  r11  |     |I91 a|     |V2  a|     |     |V3  a|     |     |I93 a|V4  a|V5  a|
281.#392 I93   Use *  Keep  r11  |     |I91 a|     |V2  a|     |     |V3  a|     |     |I93 a|V4  a|V5  a|
282.#393 rax   Kill   Keep  rax  |     |     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
282.#394 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
282.#395 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
282.#396 r8    Kill   Keep  r8   |     |     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
282.#397 r9    Kill   Keep  r9   |     |     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
282.#398 r10   Kill   Keep  r10  |     |     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
282.#399 r11   Kill   Keep  r11  |     |     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
282.#400 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
282.#401 I94   Def    Alloc rax  |I94 a|     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
283.#402 I94   Use *  Keep  rax  |I94 a|     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
285.#403 BB2  PredBB1            |     |     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
290.#404 I95   Def    Alloc rcx  |     |I95 a|     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
291.#405 rcx   Fixd   Keep  rcx  |     |I95 a|     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
291.#406 I95   Use *  Keep  rcx  |     |I95 a|     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
292.#407 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
292.#408 I96   Def    Alloc rcx  |     |I96 a|     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
294.#409 r11   Fixd   Keep  r11  |     |I96 a|     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
294.#410 C97   Def    Alloc r11  |     |I96 a|     |V2  a|     |     |V3  a|     |     |C97 a|V4  a|V5  a|
295.#411 r11   Fixd   Keep  r11  |     |I96 a|     |V2  a|     |     |V3  a|     |     |C97 a|V4  a|V5  a|
295.#412 C97   Use *  Keep  r11  |     |I96 a|     |V2  a|     |     |V3  a|     |     |C97 a|V4  a|V5  a|
296.#413 r11   Fixd   Keep  r11  |     |I96 a|     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
296.#414 I98   Def    Alloc r11  |     |I96 a|     |V2  a|     |     |V3  a|     |     |I98 a|V4  a|V5  a|
301.#415 rcx   Fixd   Keep  rcx  |     |I96 a|     |V2  a|     |     |V3  a|     |     |I98 a|V4  a|V5  a|
301.#416 I96   Use *  Keep  rcx  |     |I96 a|     |V2  a|     |     |V3  a|     |     |I98 a|V4  a|V5  a|
301.#417 r11   Fixd   Keep  r11  |     |I96 a|     |V2  a|     |     |V3  a|     |     |I98 a|V4  a|V5  a|
301.#418 I98   Use *  Keep  r11  |     |I96 a|     |V2  a|     |     |V3  a|     |     |I98 a|V4  a|V5  a|
302.#419 rax   Kill   Keep  rax  |     |     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
302.#420 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
302.#421 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
302.#422 r8    Kill   Keep  r8   |     |     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
302.#423 r9    Kill   Keep  r9   |     |     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
302.#424 r10   Kill   Keep  r10  |     |     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
302.#425 r11   Kill   Keep  r11  |     |     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
302.#426 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
302.#427 I99   Def    Alloc rax  |I99 a|     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
305.#428 I99   Use *  Keep  rax  |I99 a|     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
309.#429 BB3  PredBB2            |     |     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
314.#430 I100  Def    Alloc rcx  |     |I100a|     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
315.#431 rcx   Fixd   Keep  rcx  |     |I100a|     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
315.#432 I100  Use *  Keep  rcx  |     |I100a|     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
316.#433 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
316.#434 I101  Def    Alloc rcx  |     |I101a|     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
318.#435 r11   Fixd   Keep  r11  |     |I101a|     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
318.#436 C102  Def    Alloc r11  |     |I101a|     |V2  a|     |     |V3  a|     |     |C102a|V4  a|V5  a|
319.#437 r11   Fixd   Keep  r11  |     |I101a|     |V2  a|     |     |V3  a|     |     |C102a|V4  a|V5  a|
319.#438 C102  Use *  Keep  r11  |     |I101a|     |V2  a|     |     |V3  a|     |     |C102a|V4  a|V5  a|
320.#439 r11   Fixd   Keep  r11  |     |I101a|     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
320.#440 I103  Def    Alloc r11  |     |I101a|     |V2  a|     |     |V3  a|     |     |I103a|V4  a|V5  a|
325.#441 rcx   Fixd   Keep  rcx  |     |I101a|     |V2  a|     |     |V3  a|     |     |I103a|V4  a|V5  a|
325.#442 I101  Use *  Keep  rcx  |     |I101a|     |V2  a|     |     |V3  a|     |     |I103a|V4  a|V5  a|
325.#443 r11   Fixd   Keep  r11  |     |I101a|     |V2  a|     |     |V3  a|     |     |I103a|V4  a|V5  a|
325.#444 I103  Use *  Keep  r11  |     |I101a|     |V2  a|     |     |V3  a|     |     |I103a|V4  a|V5  a|
326.#445 rax   Kill   Keep  rax  |     |     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
326.#446 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
326.#447 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
326.#448 r8    Kill   Keep  r8   |     |     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
326.#449 r9    Kill   Keep  r9   |     |     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
326.#450 r10   Kill   Keep  r10  |     |     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
326.#451 r11   Kill   Keep  r11  |     |     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
326.#452 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
326.#453 I104  Def    Alloc rax  |I104a|     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
327.#454 I104  Use *  Keep  rax  |I104a|     |     |V2  a|     |     |V3  a|     |     |     |V4  a|V5  a|
328.#455 V7    Def    Alloc rsi  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V4  a|V5  a|
332.#456 C105  Def    Alloc rcx  |     |C105a|     |V2  a|     |V7  a|V3  a|     |     |     |V4  a|V5  a|
333.#457 rcx   Fixd   Keep  rcx  |     |C105a|     |V2  a|     |V7  a|V3  a|     |     |     |V4  a|V5  a|
333.#458 C105  Use *  Keep  rcx  |     |C105a|     |V2  a|     |V7  a|V3  a|     |     |     |V4  a|V5  a|
334.#459 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V4  a|V5  a|
334.#460 I106  Def    Alloc rcx  |     |I106a|     |V2  a|     |V7  a|V3  a|     |     |     |V4  a|V5  a|
335.#461 rcx   Fixd   Keep  rcx  |     |I106a|     |V2  a|     |V7  a|V3  a|     |     |     |V4  a|V5  a|
335.#462 I106  Use *  Keep  rcx  |     |I106a|     |V2  a|     |V7  a|V3  a|     |     |     |V4  a|V5  a|
336.#463 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V4  a|V5  a|
336.#464 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V4  a|V5  a|
336.#465 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V4  a|V5  a|
336.#466 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V4  a|V5  a|
336.#467 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V4  a|V5  a|
336.#468 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V4  a|V5  a|
336.#469 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V4  a|V5  a|
336.#470 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V4  a|V5  a|
336.#471 I107  Def    Alloc rax  |I107a|     |     |V2  a|     |V7  a|V3  a|     |     |     |V4  a|V5  a|
337.#472 I107  Use *  Keep  rax  |I107a|     |     |V2  a|     |V7  a|V3  a|     |     |     |V4  a|V5  a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
338.#473 V16   Def    Alloc r12  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|V4  a|V5  a|
343.#474 V16   Use    Keep  r12  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|V4  a|V5  a|
344.#475 I108  Def    Alloc rcx  |     |I108a|     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|V4  a|V5  a|
347.#476 rcx   Fixd   Keep  rcx  |     |I108a|     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|V4  a|V5  a|
347.#477 I108  Use *  Keep  rcx  |     |I108a|     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|V4  a|V5  a|
347.#478 rdx   Fixd   Keep  rdx  |     |I108a|     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|V4  a|V5  a|
347.#479 V3    Use    Copy  rdx  |     |I108a|V3  a|V2  a|     |V7  a|V3  a|     |     |     |V16 a|V4  a|V5  a|
348.#480 rax   Kill   Keep  rax  |     |     |V3  a|V2  a|     |V7  a|V3  a|     |     |     |V16 a|V4  a|V5  a|
348.#481 rcx   Kill   Keep  rcx  |     |     |V3  a|V2  a|     |V7  a|V3  a|     |     |     |V16 a|V4  a|V5  a|
348.#482 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|V4  a|V5  a|
348.#483 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|V4  a|V5  a|
348.#484 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|V4  a|V5  a|
348.#485 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|V4  a|V5  a|
348.#486 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|V4  a|V5  a|
348.#487 mm0   Kill   Keep  mm0  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|V4  a|V5  a|
348.#488 mm1   Kill   Keep  mm1  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|V4  a|V5  a|
348.#489 mm2   Kill   Keep  mm2  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|V4  a|V5  a|
348.#490 mm3   Kill   Keep  mm3  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|V4  a|V5  a|
348.#491 mm4   Kill   Keep  mm4  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|V4  a|V5  a|
348.#492 mm5   Kill   Keep  mm5  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|V4  a|V5  a|
351.#493 V16   Use *  Keep  r12  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|V4  a|V5  a|
352.#494 V17   Def    Alloc r12  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V17 a|V4  a|V5  a|
355.#495 V17   Use *  Keep  r12  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V17 a|V4  a|V5  a|
356.#496 V18   Def    Alloc r12  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V18 a|V4  a|V5  a|
363.#497 V4    Use    Keep  r14  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V18 a|V4  a|V5  a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
367.#498 BB4  PredBB3            |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V18 a|V4  a|V5  a|
371.#499 V18   Use *  Keep  r12  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V18 i|V4  a|V5  a|
372.#500 V19   Def    Alloc r12  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V19 a|V4  a|V5  a|
375.#501 V19   Use    Keep  r12  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V19 a|V4  a|V5  a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
376.#502 V20   Def    Alloc r13  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
379.#503 V7    Use *  Keep  rsi  |     |     |     |V2  a|     |V7  i|V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
380.#504 V21   Def    Alloc rdx  |     |     |V21 a|V2  a|     |V7  i|V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
381.#505 BB5  PredBB3            |     |     |V21 i|V2  a|     |V7  a|V3  a|     |     |     |V18 a|V20 i|V4  a|V5  a|
385.#506 V18   Use *  Keep  r12  |     |     |V21 i|V2  a|     |V7  a|V3  a|     |     |     |V18 a|V20 i|V4  a|V5  a|
386.#507 V19   Def    Alloc r12  |     |     |V21 i|V2  a|     |V7  a|V3  a|     |     |     |V19 a|V20 i|V4  a|V5  a|
389.#508 V19   Use    Keep  r12  |     |     |V21 i|V2  a|     |V7  a|V3  a|     |     |     |V19 a|V20 i|V4  a|V5  a|
390.#509 V20   Def    Keep  r13  |     |     |V21 i|V2  a|     |V7  a|V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
392.#510 C109  Def    Alloc rdx  |     |     |C109a|V2  a|     |V7  a|V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
393.#511 C109  Use *  Keep  rdx  |     |     |C109a|V2  a|     |V7  a|V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
394.#512 I110  Def    Restr rdx  |     |     |V21 i|V2  a|     |V7  a|V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
                      Alloc rdx  |     |     |I110a|V2  a|     |V7  a|V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
395.#513 rdx   Fixd   Keep  rdx  |     |     |I110a|V2  a|     |V7  a|V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
395.#514 I110  Use *  Keep  rdx  |     |     |I110a|V2  a|     |V7  a|V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
396.#515 rdx   Fixd   Keep  rdx  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
396.#516 I111  Def    Alloc rdx  |     |     |I111a|V2  a|     |V7  a|V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
399.#517 rcx   Fixd   Keep  rcx  |     |     |I111a|V2  a|     |V7  a|V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
399.#518 V5    Use    Copy  rcx  |     |V5  a|I111a|V2  a|     |V7  a|V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
400.#519 rcx   Fixd   Keep  rcx  |     |V5  a|I111a|V2  a|     |V7  a|V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
400.#520 I112  Def    Alloc rcx  |     |I112a|I111a|V2  a|     |V7  a|V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
403.#521 r8    Fixd   Keep  r8   |     |I112a|I111a|V2  a|     |V7  a|V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
403.#522 V7    Use *  Copy  r8   |     |I112a|I111a|V2  a|     |V7  a|V3  a|V7  a|     |     |V19 a|V20 a|V4  a|V5  a|
404.#523 r8    Fixd   Keep  r8   |     |I112a|I111a|V2  a|     |     |V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
404.#524 I113  Def    Alloc r8   |     |I112a|I111a|V2  a|     |     |V3  a|I113a|     |     |V19 a|V20 a|V4  a|V5  a|
405.#525 rdx   Fixd   Keep  rdx  |     |I112a|I111a|V2  a|     |     |V3  a|I113a|     |     |V19 a|V20 a|V4  a|V5  a|
405.#526 I111  Use *  Keep  rdx  |     |I112a|I111a|V2  a|     |     |V3  a|I113a|     |     |V19 a|V20 a|V4  a|V5  a|
405.#527 rcx   Fixd   Keep  rcx  |     |I112a|I111a|V2  a|     |     |V3  a|I113a|     |     |V19 a|V20 a|V4  a|V5  a|
405.#528 I112  Use *  Keep  rcx  |     |I112a|I111a|V2  a|     |     |V3  a|I113a|     |     |V19 a|V20 a|V4  a|V5  a|
405.#529 r8    Fixd   Keep  r8   |     |I112a|I111a|V2  a|     |     |V3  a|I113a|     |     |V19 a|V20 a|V4  a|V5  a|
405.#530 I113  Use *  Keep  r8   |     |I112a|I111a|V2  a|     |     |V3  a|I113a|     |     |V19 a|V20 a|V4  a|V5  a|
406.#531 rax   Kill   Keep  rax  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
406.#532 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
406.#533 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
406.#534 r8    Kill   Keep  r8   |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
406.#535 r9    Kill   Keep  r9   |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
406.#536 r10   Kill   Keep  r10  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
406.#537 r11   Kill   Keep  r11  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
406.#538 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
406.#539 I114  Def    Alloc rax  |I114a|     |     |V2  a|     |     |V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
407.#540 I114  Use *  Keep  rax  |I114a|     |     |V2  a|     |     |V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
408.#541 V21   Def    Alloc rdx  |     |     |V21 a|V2  a|     |     |V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
409.#542 BB6  PredBB4            |     |     |V21 a|V2  a|     |     |V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
413.#543 V20   Use *  Keep  r13  |     |     |V21 a|V2  a|     |     |V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
414.#544 I115  Def    Alloc rcx  |     |I115a|V21 a|V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
417.#545 rcx   Fixd   Keep  rcx  |     |I115a|V21 a|V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
417.#546 I115  Use *  Keep  rcx  |     |I115a|V21 a|V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
417.#547 rdx   Fixd   Keep  rdx  |     |I115a|V21 a|V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
417.#548 V21   Use *  Keep  rdx  |     |I115a|V21 a|V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
418.#549 rax   Kill   Keep  rax  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
418.#550 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
418.#551 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
418.#552 r8    Kill   Keep  r8   |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
418.#553 r9    Kill   Keep  r9   |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
418.#554 r10   Kill   Keep  r10  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
418.#555 r11   Kill   Keep  r11  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
418.#556 mm0   Kill   Keep  mm0  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
418.#557 mm1   Kill   Keep  mm1  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
418.#558 mm2   Kill   Keep  mm2  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
418.#559 mm3   Kill   Keep  mm3  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
418.#560 mm4   Kill   Keep  mm4  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
418.#561 mm5   Kill   Keep  mm5  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
427.#562 V19   Use    Keep  r12  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
435.#563 V2    Use    Keep  rbx  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
436.#564 I116  Def    Alloc rsi  |     |     |     |V2  a|     |I116a|V3  a|     |     |     |V19 a|     |V4  a|V5  a|
437.#565 I116  Use *  Keep  rsi  |     |     |     |V2  a|     |I116a|V3  a|     |     |     |V19 a|     |V4  a|V5  a|
438.#566 V23   Def    Alloc rsi  |     |     |     |V2  a|     |V23 a|V3  a|     |     |     |V19 a|     |V4  a|V5  a|
445.#567 V2    Use    Keep  rbx  |     |     |     |V2  a|     |V23 a|V3  a|     |     |     |V19 a|     |V4  a|V5  a|
446.#568 I117  Def    Alloc r13  |     |     |     |V2  a|     |V23 a|V3  a|     |     |     |V19 a|I117a|V4  a|V5  a|
447.#569 I117  Use *  Keep  r13  |     |     |     |V2  a|     |V23 a|V3  a|     |     |     |V19 a|I117a|V4  a|V5  a|
448.#570 V22   Def    Alloc r13  |     |     |     |V2  a|     |V23 a|V3  a|     |     |     |V19 a|V22 a|V4  a|V5  a|
451.#571 V23   Use *  Keep  rsi  |     |     |     |V2  a|     |V23 a|V3  a|     |     |     |V19 a|V22 a|V4  a|V5  a|
452.#572 V24   Def    Alloc rsi  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V19 a|V22 a|V4  a|V5  a|
455.#573 V19   Use *  Keep  r12  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V19 a|V22 a|V4  a|V5  a|
456.#574 V25   Def    Alloc r12  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V22 a|V4  a|V5  a|
459.#575 V22   Use *  Keep  r13  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V22 a|V4  a|V5  a|
460.#576 V26   Def    Alloc r13  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
465.#577 V26   Use    Keep  r13  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
469.#578 BB7  PredBB6            |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 i|V4  a|V5  a|
472.#579 C118  Def    Alloc rcx  |     |C118a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 i|V4  a|V5  a|
473.#580 rcx   Fixd   Keep  rcx  |     |C118a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 i|V4  a|V5  a|
473.#581 C118  Use *  Keep  rcx  |     |C118a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 i|V4  a|V5  a|
474.#582 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 i|V4  a|V5  a|
474.#583 I119  Def    Alloc rcx  |     |I119a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 i|V4  a|V5  a|
475.#584 rcx   Fixd   Keep  rcx  |     |I119a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 i|V4  a|V5  a|
475.#585 I119  Use *  Keep  rcx  |     |I119a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 i|V4  a|V5  a|
476.#586 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 i|V4  a|V5  a|
476.#587 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 i|V4  a|V5  a|
476.#588 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 i|V4  a|V5  a|
476.#589 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 i|V4  a|V5  a|
476.#590 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 i|V4  a|V5  a|
476.#591 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 i|V4  a|V5  a|
476.#592 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 i|V4  a|V5  a|
476.#593 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 i|V4  a|V5  a|
476.#594 I120  Def    Alloc rax  |I120a|     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 i|V4  a|V5  a|
477.#595 I120  Use *  Keep  rax  |I120a|     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 i|V4  a|V5  a|
478.#596 V28   Def    Alloc r13  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
481.#597 V28   Use    Keep  r13  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
482.#598 I121  Def    Alloc rcx  |     |I121a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
485.#599 rcx   Fixd   Keep  rcx  |     |I121a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
485.#600 I121  Use *  Keep  rcx  |     |I121a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
485.#601 rdx   Fixd   Keep  rdx  |     |I121a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
485.#602 V2    Use    Copy  rdx  |     |I121a|V2  a|V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
486.#603 rax   Kill   Keep  rax  |     |     |V2  a|V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
486.#604 rcx   Kill   Keep  rcx  |     |     |V2  a|V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
486.#605 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
486.#606 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
486.#607 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
486.#608 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
486.#609 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
486.#610 mm0   Kill   Keep  mm0  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
486.#611 mm1   Kill   Keep  mm1  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
486.#612 mm2   Kill   Keep  mm2  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
486.#613 mm3   Kill   Keep  mm3  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
486.#614 mm4   Kill   Keep  mm4  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
486.#615 mm5   Kill   Keep  mm5  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
492.#616 C122  Def    Alloc rdx  |     |     |C122a|V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
493.#617 V28   Use    Keep  r13  |     |     |C122a|V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
493.#618 C122  Use *  Keep  rdx  |     |     |C122a|V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
497.#619 V2    Use    Keep  rbx  |     |     |C122i|V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
498.#620 I123  Def    Alloc rcx  |     |I123a|C122i|V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
501.#621 rcx   Fixd   Keep  rcx  |     |I123a|C122i|V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
501.#622 I123  Use *  Keep  rcx  |     |I123a|C122i|V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
501.#623 rdx   Fixd   Keep  rdx  |     |I123a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
501.#624 V28   Use    Copy  rdx  |     |I123a|V28 a|V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
502.#625 rax   Kill   Keep  rax  |     |     |V28 a|V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
502.#626 rcx   Kill   Keep  rcx  |     |     |V28 a|V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
502.#627 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
502.#628 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
502.#629 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
502.#630 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
502.#631 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
502.#632 mm0   Kill   Keep  mm0  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
502.#633 mm1   Kill   Keep  mm1  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
502.#634 mm2   Kill   Keep  mm2  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
502.#635 mm3   Kill   Keep  mm3  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
502.#636 mm4   Kill   Keep  mm4  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
502.#637 mm5   Kill   Keep  mm5  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
505.#638 V28   Use *  Keep  r13  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
                      Restr r13  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 i|V4  a|V5  a|
506.#639 V26   Def    Alloc r13  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
507.#640 BB9  PredBB6            |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
510.#641 C124  Def    Alloc rcx  |     |C124a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
511.#642 rcx   Fixd   Keep  rcx  |     |C124a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
511.#643 C124  Use *  Keep  rcx  |     |C124a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
512.#644 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
512.#645 I125  Def    Alloc rcx  |     |I125a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
513.#646 rcx   Fixd   Keep  rcx  |     |I125a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
513.#647 I125  Use *  Keep  rcx  |     |I125a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
514.#648 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
514.#649 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
514.#650 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
514.#651 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
514.#652 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
514.#653 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
514.#654 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
514.#655 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
514.#656 I126  Def    Alloc rax  |I126a|     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
515.#657 I126  Use *  Keep  rax  |I126a|     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
516.#658 V27   Def    Alloc rax  |V27 a|     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
519.#659 V27   Use    Keep  rax  |V27 a|     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
520.#660 I127  Def    Alloc rcx  |V27 a|I127a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
523.#661 rcx   Fixd   Keep  rcx  |V27 a|I127a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
523.#662 I127  Use *  Keep  rcx  |V27 a|I127a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
523.#663 rdx   Fixd   Keep  rdx  |V27 a|I127a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
523.#664 V2    Use    Copy  rdx  |V27 a|I127a|V2  a|V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
524.#665 rax   Kill   Spill rax  |     |     |V2  a|V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
                      Keep  rax  |     |     |V2  a|V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
524.#666 rcx   Kill   Keep  rcx  |     |     |V2  a|V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
524.#667 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
524.#668 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
524.#669 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
524.#670 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
524.#671 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
524.#672 mm0   Kill   Keep  mm0  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
524.#673 mm1   Kill   Keep  mm1  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
524.#674 mm2   Kill   Keep  mm2  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
524.#675 mm3   Kill   Keep  mm3  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
524.#676 mm4   Kill   Keep  mm4  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
524.#677 mm5   Kill   Keep  mm5  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
530.#678 C128  Def    Alloc rcx  |     |C128a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
531.#679 V27   Use    ReLod NA   |     |C128a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
                      Alloc r8   |     |C128a|     |V2  a|     |V24 a|V3  a|V27 a|     |     |V25 a|V26 a|V4  a|V5  a|
531.#680 C128  Use *  Keep  rcx  |     |C128a|     |V2  a|     |V24 a|V3  a|V27 a|     |     |V25 a|V26 a|V4  a|V5  a|
537.#681 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V24 a|V3  a|V27 a|     |     |V25 a|V26 a|V4  a|V5  a|
537.#682 V25   Use *  Copy  rcx  |     |V25 a|     |V2  a|     |V24 a|V3  a|V27 a|     |     |V25 a|V26 a|V4  a|V5  a|
538.#683 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V24 a|V3  a|V27 a|     |     |     |V26 a|V4  a|V5  a|
538.#684 I129  Def    Alloc rcx  |     |I129a|     |V2  a|     |V24 a|V3  a|V27 a|     |     |     |V26 a|V4  a|V5  a|
541.#685 rdx   Fixd   Keep  rdx  |     |I129a|     |V2  a|     |V24 a|V3  a|V27 a|     |     |     |V26 a|V4  a|V5  a|
541.#686 V26   Use *  Copy  rdx  |     |I129a|V26 a|V2  a|     |V24 a|V3  a|V27 a|     |     |     |V26 a|V4  a|V5  a|
542.#687 rdx   Fixd   Keep  rdx  |     |I129a|     |V2  a|     |V24 a|V3  a|V27 a|     |     |     |     |V4  a|V5  a|
542.#688 I130  Def    Alloc rdx  |     |I129a|I130a|V2  a|     |V24 a|V3  a|V27 a|     |     |     |     |V4  a|V5  a|
545.#689 r8    Fixd   Keep  r8   |     |I129a|I130a|V2  a|     |V24 a|V3  a|V27 a|     |     |     |     |V4  a|V5  a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
545.#690 V27   Use *  Keep  r8   |     |I129a|I130a|V2  a|     |V24 a|V3  a|V27 a|     |     |     |     |V4  a|V5  a|
546.#691 r8    Fixd   Keep  r8   |     |I129a|I130a|V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
546.#692 I131  Def    Alloc r8   |     |I129a|I130a|V2  a|     |V24 a|V3  a|I131a|     |     |     |     |V4  a|V5  a|
547.#693 rcx   Fixd   Keep  rcx  |     |I129a|I130a|V2  a|     |V24 a|V3  a|I131a|     |     |     |     |V4  a|V5  a|
547.#694 I129  Use *  Keep  rcx  |     |I129a|I130a|V2  a|     |V24 a|V3  a|I131a|     |     |     |     |V4  a|V5  a|
547.#695 rdx   Fixd   Keep  rdx  |     |I129a|I130a|V2  a|     |V24 a|V3  a|I131a|     |     |     |     |V4  a|V5  a|
547.#696 I130  Use *  Keep  rdx  |     |I129a|I130a|V2  a|     |V24 a|V3  a|I131a|     |     |     |     |V4  a|V5  a|
547.#697 r8    Fixd   Keep  r8   |     |I129a|I130a|V2  a|     |V24 a|V3  a|I131a|     |     |     |     |V4  a|V5  a|
547.#698 I131  Use *  Keep  r8   |     |I129a|I130a|V2  a|     |V24 a|V3  a|I131a|     |     |     |     |V4  a|V5  a|
548.#699 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
548.#700 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
548.#701 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
548.#702 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
548.#703 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
548.#704 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
548.#705 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
548.#706 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
548.#707 I132  Def    Alloc rax  |I132a|     |     |V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
549.#708 I132  Use *  Keep  rax  |I132a|     |     |V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
550.#709 V42   Def    Alloc rdx  |     |     |V42 a|V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
553.#710 rdx   Fixd   Keep  rdx  |     |     |V42 a|V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
553.#711 V42   Use *  Keep  rdx  |     |     |V42 a|V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
554.#712 rdx   Fixd   Keep  rdx  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
554.#713 I133  Def    Alloc rdx  |     |     |I133a|V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
557.#714 rcx   Fixd   Keep  rcx  |     |     |I133a|V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
557.#715 V24   Use *  Copy  rcx  |     |V24 a|I133a|V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
558.#716 rcx   Fixd   Keep  rcx  |     |     |I133a|V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
558.#717 I134  Def    Alloc rcx  |     |I134a|I133a|V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
559.#718 rdx   Fixd   Keep  rdx  |     |I134a|I133a|V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
559.#719 I133  Use *  Keep  rdx  |     |I134a|I133a|V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
559.#720 rcx   Fixd   Keep  rcx  |     |I134a|I133a|V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
559.#721 I134  Use *  Keep  rcx  |     |I134a|I133a|V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
560.#722 rax   Kill   Keep  rax  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
560.#723 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
560.#724 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
560.#725 r8    Kill   Keep  r8   |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
560.#726 r9    Kill   Keep  r9   |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
560.#727 r10   Kill   Keep  r10  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
560.#728 r11   Kill   Keep  r11  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
564.#729 I135  Def    Alloc rcx  |     |I135a|     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
565.#730 rcx   Fixd   Keep  rcx  |     |I135a|     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
565.#731 I135  Use *  Keep  rcx  |     |I135a|     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
566.#732 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
566.#733 I136  Def    Alloc rcx  |     |I136a|     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
568.#734 r11   Fixd   Keep  r11  |     |I136a|     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
568.#735 C137  Def    Alloc r11  |     |I136a|     |V2  a|     |     |V3  a|     |     |C137a|     |     |V4  a|V5  a|
569.#736 r11   Fixd   Keep  r11  |     |I136a|     |V2  a|     |     |V3  a|     |     |C137a|     |     |V4  a|V5  a|
569.#737 C137  Use *  Keep  r11  |     |I136a|     |V2  a|     |     |V3  a|     |     |C137a|     |     |V4  a|V5  a|
570.#738 r11   Fixd   Keep  r11  |     |I136a|     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
570.#739 I138  Def    Alloc r11  |     |I136a|     |V2  a|     |     |V3  a|     |     |I138a|     |     |V4  a|V5  a|
575.#740 rcx   Fixd   Keep  rcx  |     |I136a|     |V2  a|     |     |V3  a|     |     |I138a|     |     |V4  a|V5  a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
575.#741 I136  Use *  Keep  rcx  |     |I136a|     |V2  a|     |     |V3  a|     |     |I138a|     |     |V4  a|V5  a|
575.#742 r11   Fixd   Keep  r11  |     |I136a|     |V2  a|     |     |V3  a|     |     |I138a|     |     |V4  a|V5  a|
575.#743 I138  Use *  Keep  r11  |     |I136a|     |V2  a|     |     |V3  a|     |     |I138a|     |     |V4  a|V5  a|
576.#744 rax   Kill   Keep  rax  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
576.#745 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
576.#746 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
576.#747 r8    Kill   Keep  r8   |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
576.#748 r9    Kill   Keep  r9   |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
576.#749 r10   Kill   Keep  r10  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
576.#750 r11   Kill   Keep  r11  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
576.#751 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
576.#752 I139  Def    Alloc rax  |I139a|     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
579.#753 I139  Use *  Keep  rax  |I139a|     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
583.#754 V3    ExpU   Keep  NA   |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
583.#755 V4    ExpU   Keep  NA   |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
583.#756 V5    ExpU   Keep  NA   |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
583.#757 BB13 PredBB9            |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
586.#758 I140  Def    Alloc rcx  |     |I140a|     |V2  a|     |     |     |     |     |     |     |     |     |     |
587.#759 rcx   Fixd   Keep  rcx  |     |I140a|     |V2  a|     |     |     |     |     |     |     |     |     |     |
587.#760 I140  Use *  Keep  rcx  |     |I140a|     |V2  a|     |     |     |     |     |     |     |     |     |     |
588.#761 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
588.#762 I141  Def    Alloc rcx  |     |I141a|     |V2  a|     |     |     |     |     |     |     |     |     |     |
590.#763 r11   Fixd   Keep  r11  |     |I141a|     |V2  a|     |     |     |     |     |     |     |     |     |     |
590.#764 C142  Def    Alloc r11  |     |I141a|     |V2  a|     |     |     |     |     |C142a|     |     |     |     |
591.#765 r11   Fixd   Keep  r11  |     |I141a|     |V2  a|     |     |     |     |     |C142a|     |     |     |     |
591.#766 C142  Use *  Keep  r11  |     |I141a|     |V2  a|     |     |     |     |     |C142a|     |     |     |     |
592.#767 r11   Fixd   Keep  r11  |     |I141a|     |V2  a|     |     |     |     |     |     |     |     |     |     |
592.#768 I143  Def    Alloc r11  |     |I141a|     |V2  a|     |     |     |     |     |I143a|     |     |     |     |
597.#769 rcx   Fixd   Keep  rcx  |     |I141a|     |V2  a|     |     |     |     |     |I143a|     |     |     |     |
597.#770 I141  Use *  Keep  rcx  |     |I141a|     |V2  a|     |     |     |     |     |I143a|     |     |     |     |
597.#771 r11   Fixd   Keep  r11  |     |I141a|     |V2  a|     |     |     |     |     |I143a|     |     |     |     |
597.#772 I143  Use *  Keep  r11  |     |I141a|     |V2  a|     |     |     |     |     |I143a|     |     |     |     |
598.#773 rax   Kill   Keep  rax  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
598.#774 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
598.#775 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
598.#776 r8    Kill   Keep  r8   |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
598.#777 r9    Kill   Keep  r9   |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
598.#778 r10   Kill   Keep  r10  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
598.#779 r11   Kill   Keep  r11  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
605.#780 V2    Use    Keep  rbx  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
606.#781 I144  Def    Alloc rcx  |     |I144a|     |V2  a|     |     |     |     |     |     |     |     |     |     |
607.#782 I144  Use *  Keep  rcx  |     |I144a|     |V2  a|     |     |     |     |     |     |     |     |     |     |
608.#783 V35   Def    Alloc rcx  |     |V35 a|     |V2  a|     |     |     |     |     |     |     |     |     |     |
613.#784 V35   Use *  Keep  rcx  |     |V35 a|     |V2  a|     |     |     |     |     |     |     |     |     |     |
614.#785 I145  Def    Alloc rcx  |     |I145a|     |V2  a|     |     |     |     |     |     |     |     |     |     |
619.#786 V2    Use    Keep  rbx  |     |I145a|     |V2  a|     |     |     |     |     |     |     |     |     |     |
619.#787 I145  Use *  Keep  rcx  |     |I145a|     |V2  a|     |     |     |     |     |     |     |     |     |     |
624.#788 C146  Def    Alloc rcx  |     |C146a|     |V2  a|     |     |     |     |     |     |     |     |     |     |
625.#789 rcx   Fixd   Keep  rcx  |     |C146a|     |V2  a|     |     |     |     |     |     |     |     |     |     |
625.#790 C146  Use *  Keep  rcx  |     |C146a|     |V2  a|     |     |     |     |     |     |     |     |     |     |
626.#791 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
626.#792 I147  Def    Alloc rcx  |     |I147a|     |V2  a|     |     |     |     |     |     |     |     |     |     |
627.#793 rcx   Fixd   Keep  rcx  |     |I147a|     |V2  a|     |     |     |     |     |     |     |     |     |     |
627.#794 I147  Use *  Keep  rcx  |     |I147a|     |V2  a|     |     |     |     |     |     |     |     |     |     |
628.#795 rax   Kill   Keep  rax  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
628.#796 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
628.#797 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
628.#798 r8    Kill   Keep  r8   |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
628.#799 r9    Kill   Keep  r9   |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
628.#800 r10   Kill   Keep  r10  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
628.#801 r11   Kill   Keep  r11  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
628.#802 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
628.#803 I148  Def    Alloc rax  |I148a|     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
629.#804 I148  Use *  Keep  rax  |I148a|     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
630.#805 V29   Def    Alloc rsi  |     |     |     |V2  a|     |V29 a|     |     |     |     |     |     |     |     |
635.#806 V2    Use    Keep  rbx  |     |     |     |V2  a|     |V29 a|     |     |     |     |     |     |     |     |
636.#807 I149  Def    Alloc rdi  |     |     |     |V2  a|     |V29 a|I149a|     |     |     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
637.#808 I149  Use *  Keep  rdi  |     |     |     |V2  a|     |V29 a|I149a|     |     |     |     |     |     |     |
638.#809 V37   Def    Alloc rdi  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
640.#810 C150  Def    Alloc rcx  |     |C150a|     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
641.#811 rcx   Fixd   Keep  rcx  |     |C150a|     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
641.#812 C150  Use *  Keep  rcx  |     |C150a|     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
642.#813 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
642.#814 I151  Def    Alloc rcx  |     |I151a|     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
643.#815 rcx   Fixd   Keep  rcx  |     |I151a|     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
643.#816 I151  Use *  Keep  rcx  |     |I151a|     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
644.#817 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
644.#818 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
644.#819 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
644.#820 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
644.#821 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
644.#822 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
644.#823 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
644.#824 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
644.#825 I152  Def    Alloc rax  |I152a|     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
645.#826 I152  Use *  Keep  rax  |I152a|     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
646.#827 V36   Def    Alloc r14  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
649.#828 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
649.#829 V36   Use    Copy  rcx  |     |V36 a|     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
650.#830 rcx   Fixd   Keep  rcx  |     |V36 a|     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
650.#831 I153  Def    Alloc rcx  |     |I153a|     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
652.#832 C154  Def    Alloc rdx  |     |I153a|C154a|V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
653.#833 rdx   Fixd   Keep  rdx  |     |I153a|C154a|V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
653.#834 C154  Use *  Keep  rdx  |     |I153a|C154a|V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
654.#835 rdx   Fixd   Keep  rdx  |     |I153a|     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
654.#836 I155  Def    Alloc rdx  |     |I153a|I155a|V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
656.#837 C156  Def    Alloc r8   |     |I153a|I155a|V2  a|     |V29 a|V37 a|C156a|     |     |     |     |V36 a|     |
657.#838 r8    Fixd   Keep  r8   |     |I153a|I155a|V2  a|     |V29 a|V37 a|C156a|     |     |     |     |V36 a|     |
657.#839 C156  Use *  Keep  r8   |     |I153a|I155a|V2  a|     |V29 a|V37 a|C156a|     |     |     |     |V36 a|     |
658.#840 r8    Fixd   Keep  r8   |     |I153a|I155a|V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
658.#841 I157  Def    Alloc r8   |     |I153a|I155a|V2  a|     |V29 a|V37 a|I157a|     |     |     |     |V36 a|     |
659.#842 rcx   Fixd   Keep  rcx  |     |I153a|I155a|V2  a|     |V29 a|V37 a|I157a|     |     |     |     |V36 a|     |
659.#843 I153  Use *  Keep  rcx  |     |I153a|I155a|V2  a|     |V29 a|V37 a|I157a|     |     |     |     |V36 a|     |
659.#844 rdx   Fixd   Keep  rdx  |     |I153a|I155a|V2  a|     |V29 a|V37 a|I157a|     |     |     |     |V36 a|     |
659.#845 I155  Use *  Keep  rdx  |     |I153a|I155a|V2  a|     |V29 a|V37 a|I157a|     |     |     |     |V36 a|     |
659.#846 r8    Fixd   Keep  r8   |     |I153a|I155a|V2  a|     |V29 a|V37 a|I157a|     |     |     |     |V36 a|     |
659.#847 I157  Use *  Keep  r8   |     |I153a|I155a|V2  a|     |V29 a|V37 a|I157a|     |     |     |     |V36 a|     |
660.#848 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
660.#849 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
660.#850 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
660.#851 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
660.#852 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
660.#853 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
660.#854 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
663.#855 V29   Use    Keep  rsi  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
664.#856 I158  Def    Alloc rcx  |     |I158a|     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
667.#857 rcx   Fixd   Keep  rcx  |     |I158a|     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
667.#858 I158  Use *  Keep  rcx  |     |I158a|     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
667.#859 rdx   Fixd   Keep  rdx  |     |I158a|     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
667.#860 V36   Use *  Copy  rdx  |     |I158a|V36 a|V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
668.#861 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
668.#862 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
668.#863 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
668.#864 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
668.#865 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
668.#866 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
668.#867 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
668.#868 mm0   Kill   Keep  mm0  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
668.#869 mm1   Kill   Keep  mm1  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
668.#870 mm2   Kill   Keep  mm2  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
668.#871 mm3   Kill   Keep  mm3  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
668.#872 mm4   Kill   Keep  mm4  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
668.#873 mm5   Kill   Keep  mm5  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
675.#874 V29   Use    Keep  rsi  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
675.#875 V37   Use *  Keep  rdi  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
681.#876 V2    Use    Keep  rbx  |     |     |     |V2  a|     |V29 a|     |     |     |     |     |     |     |     |
682.#877 I159  Def    Alloc rcx  |     |I159a|     |V2  a|     |V29 a|     |     |     |     |     |     |     |     |
685.#878 rcx   Fixd   Keep  rcx  |     |I159a|     |V2  a|     |V29 a|     |     |     |     |     |     |     |     |
685.#879 I159  Use *  Keep  rcx  |     |I159a|     |V2  a|     |V29 a|     |     |     |     |     |     |     |     |
685.#880 rdx   Fixd   Keep  rdx  |     |I159a|     |V2  a|     |V29 a|     |     |     |     |     |     |     |     |
685.#881 V29   Use *  Copy  rdx  |     |I159a|V29 a|V2  a|     |V29 a|     |     |     |     |     |     |     |     |
686.#882 rax   Kill   Keep  rax  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
686.#883 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
686.#884 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
686.#885 r8    Kill   Keep  r8   |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
686.#886 r9    Kill   Keep  r9   |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
686.#887 r10   Kill   Keep  r10  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
686.#888 r11   Kill   Keep  r11  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
686.#889 mm0   Kill   Keep  mm0  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
686.#890 mm1   Kill   Keep  mm1  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
686.#891 mm2   Kill   Keep  mm2  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
686.#892 mm3   Kill   Keep  mm3  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
686.#893 mm4   Kill   Keep  mm4  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
686.#894 mm5   Kill   Keep  mm5  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
690.#895 C160  Def    Alloc rsi  |     |     |     |V2  a|     |C160a|     |     |     |     |     |     |     |     |
691.#896 C160  Use *  Keep  rsi  |     |     |     |V2  a|     |C160a|     |     |     |     |     |     |     |     |
692.#897 V10   Def    Alloc rsi  |     |     |     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
693.#898 BB17 PredBB13           |     |     |     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
699.#899 V2    Use    Keep  rbx  |     |     |     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
700.#900 I161  Def    Alloc rcx  |     |I161a|     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
701.#901 I161  Use *  Keep  rcx  |     |I161a|     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
702.#902 V39   Def    Alloc rcx  |     |V39 a|     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
707.#903 V39   Use    Keep  rcx  |     |V39 a|     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
711.#904 BB18 PredBB17           |     |V39 a|     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
715.#905 V39   Use *  Keep  rcx  |     |V39 a|     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
716.#906 V38   Def    Alloc rcx  |     |V38 a|     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
717.#907 BB19 PredBB17           |     |V38 i|     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
722.#908 V38   Def    Keep  rcx  |     |V38 a|     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
723.#909 BB20 PredBB18           |     |V38 a|     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
729.#910 V10   Use    Keep  rsi  |     |V38 a|     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
729.#911 V38   Use *  Keep  rcx  |     |V38 a|     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
733.#912 BB16 PredBB20           |     |     |     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
739.#913 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
739.#914 V2    Use    Copy  rcx  |     |V2  a|     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
740.#915 rcx   Fixd   Keep  rcx  |     |V2  a|     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
740.#916 I162  Def    Alloc rcx  |     |I162a|     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
741.#917 rcx   Fixd   Keep  rcx  |     |I162a|     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
741.#918 I162  Use *  Keep  rcx  |     |I162a|     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
742.#919 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
742.#920 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
742.#921 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
742.#922 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
742.#923 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
742.#924 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
742.#925 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
749.#926 V10   Use *  Keep  rsi  |     |     |     |V2  a|     |V10 i|     |     |     |     |     |     |     |     |
750.#927 I163  Def    Alloc rsi  |     |     |     |V2  a|     |I163a|     |     |     |     |     |     |     |     |
751.#928 I163  Use *  Keep  rsi  |     |     |     |V2  a|     |I163a|     |     |     |     |     |     |     |     |
                      Restr rsi  |     |     |     |V2  a|     |V10 i|     |     |     |     |     |     |     |     |
752.#929 V10   Def    Alloc rsi  |     |     |     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
753.#930 V10   ExpU   Keep  NA   |     |     |     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
753.#931 BB21 PredBB20           |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
761.#932 V2    Use *  Keep  rbx  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
762.#933 I164  Def    Alloc rax  |I164a|     |     |     |     |     |     |     |     |     |     |     |     |     |
763.#934 I164  Use *  Keep  rax  |I164a|     |     |     |     |     |     |     |     |     |     |     |     |     |
764.#935 V40   Def    Alloc rax  |V40 a|     |     |     |     |     |     |     |     |     |     |     |     |     |
769.#936 V40   Use *  Keep  rax  |V40 a|     |     |     |     |     |     |     |     |     |     |     |     |     |
770.#937 I165  Def    Alloc rax  |I165a|     |     |     |     |     |     |     |     |     |     |     |     |     |
771.#938 rax   Fixd   Keep  rax  |I165a|     |     |     |     |     |     |     |     |     |     |     |     |     |
771.#939 I165  Use *  Keep  rax  |I165a|     |     |     |     |     |     |     |     |     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
773.#940 BB22 PredBB0            |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
785.#941 BB23 PredBB22           |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
790.#942 I166  Def    Alloc rcx  |     |I166a|     |     |     |     |     |     |     |     |     |     |     |     |
791.#943 rcx   Fixd   Keep  rcx  |     |I166a|     |     |     |     |     |     |     |     |     |     |     |     |
791.#944 I166  Use *  Keep  rcx  |     |I166a|     |     |     |     |     |     |     |     |     |     |     |     |
792.#945 rcx   Fixd   Keep  rcx  |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
792.#946 I167  Def    Alloc rcx  |     |I167a|     |     |     |     |     |     |     |     |     |     |     |     |
794.#947 r11   Fixd   Keep  r11  |     |I167a|     |     |     |     |     |     |     |     |     |     |     |     |
794.#948 C168  Def    Alloc r11  |     |I167a|     |     |     |     |     |     |     |C168a|     |     |     |     |
795.#949 r11   Fixd   Keep  r11  |     |I167a|     |     |     |     |     |     |     |C168a|     |     |     |     |
795.#950 C168  Use *  Keep  r11  |     |I167a|     |     |     |     |     |     |     |C168a|     |     |     |     |
796.#951 r11   Fixd   Keep  r11  |     |I167a|     |     |     |     |     |     |     |     |     |     |     |     |
796.#952 I169  Def    Alloc r11  |     |I167a|     |     |     |     |     |     |     |I169a|     |     |     |     |
801.#953 rcx   Fixd   Keep  rcx  |     |I167a|     |     |     |     |     |     |     |I169a|     |     |     |     |
801.#954 I167  Use *  Keep  rcx  |     |I167a|     |     |     |     |     |     |     |I169a|     |     |     |     |
801.#955 r11   Fixd   Keep  r11  |     |I167a|     |     |     |     |     |     |     |I169a|     |     |     |     |
801.#956 I169  Use *  Keep  r11  |     |I167a|     |     |     |     |     |     |     |I169a|     |     |     |     |
802.#957 rax   Kill   Keep  rax  |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
802.#958 rcx   Kill   Keep  rcx  |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
802.#959 rdx   Kill   Keep  rdx  |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
802.#960 r8    Kill   Keep  r8   |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
802.#961 r9    Kill   Keep  r9   |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
802.#962 r10   Kill   Keep  r10  |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
802.#963 r11   Kill   Keep  r11  |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
803.#964 BB24 PredBB22           |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
809.#965 BB25 PredBB24           |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
812.#966 rax   Kill   Keep  rax  |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
812.#967 rcx   Kill   Keep  rcx  |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
812.#968 rdx   Kill   Keep  rdx  |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
812.#969 r8    Kill   Keep  r8   |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
812.#970 r9    Kill   Keep  r9   |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
812.#971 r10   Kill   Keep  r10  |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
812.#972 r11   Kill   Keep  r11  |     |     |     |     |     |     |     |     |     |     |     |     |     |     |

------------
REFPOSITIONS AFTER ALLOCATION: 
------------
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00>  BB00 regmask=[rsi] minReg=1 regOptional>
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V01>  BB00 regmask=[rdi] minReg=1 regOptional>
<RefPosition #2   @1   RefTypeBB  BB01 regmask=[] minReg=1>
<RefPosition #3   @6   RefTypeDef <Ivl:37> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #4   @7   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #5   @7   RefTypeUse <Ivl:37>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #6   @8   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #7   @8   RefTypeDef <Ivl:38> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #8   @9   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #9   @9   RefTypeUse <Ivl:38>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #10  @10  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #11  @10  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #12  @10  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #13  @10  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #14  @10  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #15  @10  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #16  @10  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #17  @10  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #18  @10  RefTypeDef <Ivl:39> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #19  @11  RefTypeUse <Ivl:39>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #20  @12  RefTypeDef <Ivl:8 V12> STORE_LCL_VAR BB01 regmask=[rbx] minReg=1>
<RefPosition #21  @17  RefTypeUse <Ivl:8 V12> LCL_VAR BB01 regmask=[rbx] minReg=1 last>
<RefPosition #22  @18  RefTypeDef <Ivl:2 V02> STORE_LCL_VAR BB01 regmask=[rbx] minReg=1>
<RefPosition #23  @23  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[rbx] minReg=1>
<RefPosition #24  @24  RefTypeDef <Ivl:40> LEA BB01 regmask=[rcx] minReg=1>
<RefPosition #25  @27  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #26  @27  RefTypeUse <Ivl:40>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #27  @27  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #28  @27  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[rdx] minReg=1 last copy fixed>
<RefPosition #29  @28  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #30  @28  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #31  @28  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #32  @28  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #33  @28  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #34  @28  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #35  @28  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #36  @28  RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1 last>
<RefPosition #37  @28  RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1 last>
<RefPosition #38  @28  RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1 last>
<RefPosition #39  @28  RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1 last>
<RefPosition #40  @28  RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1 last>
<RefPosition #41  @28  RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1 last>
<RefPosition #42  @36  RefTypeDef <Ivl:41> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #43  @37  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[rbx] minReg=1>
<RefPosition #44  @37  RefTypeUse <Ivl:41>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #45  @46  RefTypeDef <Ivl:42> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #46  @47  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[rbx] minReg=1>
<RefPosition #47  @47  RefTypeUse <Ivl:42>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #48  @52  RefTypeDef <Ivl:43> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #49  @53  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #50  @53  RefTypeUse <Ivl:43>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #51  @54  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #52  @54  RefTypeDef <Ivl:44> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #53  @55  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #54  @55  RefTypeUse <Ivl:44>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #55  @56  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #56  @56  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #57  @56  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #58  @56  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #59  @56  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #60  @56  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #61  @56  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #62  @56  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #63  @56  RefTypeDef <Ivl:45> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #64  @57  RefTypeUse <Ivl:45>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #65  @58  RefTypeDef <Ivl:9 V13> STORE_LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #66  @60  RefTypeDef <Ivl:46> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #67  @61  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #68  @61  RefTypeUse <Ivl:46>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #69  @62  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #70  @62  RefTypeDef <Ivl:47> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #71  @63  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #72  @63  RefTypeUse <Ivl:47>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #73  @64  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #74  @64  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #75  @64  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #76  @64  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #77  @64  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #78  @64  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #79  @64  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #80  @64  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #81  @64  RefTypeDef <Ivl:48> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #82  @65  RefTypeUse <Ivl:48>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #83  @66  RefTypeDef <Ivl:26 V30> STORE_LCL_VAR BB01 regmask=[rax] minReg=1>
<RefPosition #84  @73  RefTypeUse <Ivl:26 V30> LCL_VAR BB01 regmask=[rax] minReg=1>
<RefPosition #85  @77  RefTypeUse <Ivl:9 V13> LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #86  @78  RefTypeDef <Ivl:49> LEA BB01 regmask=[rcx] minReg=1>
<RefPosition #87  @81  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #88  @81  RefTypeUse <Ivl:49>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #89  @81  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #90  @81  RefTypeUse <Ivl:26 V30> LCL_VAR BB01 regmask=[rdx] minReg=1 last copy fixed>
<RefPosition #91  @82  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #92  @82  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #93  @82  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #94  @82  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #95  @82  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #96  @82  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #97  @82  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #98  @82  RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1 last>
<RefPosition #99  @82  RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1 last>
<RefPosition #100 @82  RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1 last>
<RefPosition #101 @82  RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1 last>
<RefPosition #102 @82  RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1 last>
<RefPosition #103 @82  RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1 last>
<RefPosition #104 @87  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[rbx] minReg=1>
<RefPosition #105 @88  RefTypeDef <Ivl:50> LEA BB01 regmask=[rcx] minReg=1>
<RefPosition #106 @91  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #107 @91  RefTypeUse <Ivl:50>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #108 @91  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #109 @91  RefTypeUse <Ivl:9 V13> LCL_VAR BB01 regmask=[rdx] minReg=1 last copy fixed>
<RefPosition #110 @92  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #111 @92  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #112 @92  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #113 @92  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #114 @92  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #115 @92  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #116 @92  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #117 @92  RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1 last>
<RefPosition #118 @92  RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1 last>
<RefPosition #119 @92  RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1 last>
<RefPosition #120 @92  RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1 last>
<RefPosition #121 @92  RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1 last>
<RefPosition #122 @92  RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1 last>
<RefPosition #123 @96  RefTypeDef <Ivl:51> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #124 @97  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #125 @97  RefTypeUse <Ivl:51>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #126 @98  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #127 @98  RefTypeDef <Ivl:52> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #128 @99  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #129 @99  RefTypeUse <Ivl:52>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #130 @100 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #131 @100 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #132 @100 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #133 @100 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #134 @100 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #135 @100 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #136 @100 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #137 @100 RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #138 @100 RefTypeDef <Ivl:53> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #139 @101 RefTypeUse <Ivl:53>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #140 @102 RefTypeDef <Ivl:10 V14> STORE_LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #141 @104 RefTypeDef <Ivl:54> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #142 @105 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #143 @105 RefTypeUse <Ivl:54>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #144 @106 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #145 @106 RefTypeDef <Ivl:55> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #146 @108 RefTypeDef <Ivl:56> CNS_INT BB01 regmask=[rdx] minReg=1>
<RefPosition #147 @109 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #148 @109 RefTypeUse <Ivl:56>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #149 @110 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #150 @110 RefTypeDef <Ivl:57> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>
<RefPosition #151 @111 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #152 @111 RefTypeUse <Ivl:55>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #153 @111 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #154 @111 RefTypeUse <Ivl:57>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #155 @112 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #156 @112 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #157 @112 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #158 @112 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #159 @112 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #160 @112 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #161 @112 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #162 @112 RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #163 @112 RefTypeDef <Ivl:58> CALL BB01 regmask=[rax] minReg=1 last fixed local>
<RefPosition #164 @114 RefTypeDef <Ivl:59> CNS_INT BB01 regmask=[rdx] minReg=1>
<RefPosition #165 @115 RefTypeUse <Ivl:59>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #166 @116 RefTypeDef <Ivl:60> IND BB01 regmask=[rdx] minReg=1>
<RefPosition #167 @119 RefTypeUse <Ivl:10 V14> LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #168 @120 RefTypeDef <Ivl:61> LEA BB01 regmask=[rcx] minReg=1>
<RefPosition #169 @121 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #170 @121 RefTypeUse <Ivl:61>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #171 @121 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #172 @121 RefTypeUse <Ivl:60>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #173 @122 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #174 @122 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #175 @122 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #176 @122 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #177 @122 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #178 @122 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #179 @122 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #180 @122 RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1 last>
<RefPosition #181 @122 RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1 last>
<RefPosition #182 @122 RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1 last>
<RefPosition #183 @122 RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1 last>
<RefPosition #184 @122 RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1 last>
<RefPosition #185 @122 RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1 last>
<RefPosition #186 @127 RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[rbx] minReg=1>
<RefPosition #187 @128 RefTypeDef <Ivl:62> LEA BB01 regmask=[rcx] minReg=1>
<RefPosition #188 @131 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #189 @131 RefTypeUse <Ivl:62>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #190 @131 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #191 @131 RefTypeUse <Ivl:10 V14> LCL_VAR BB01 regmask=[rdx] minReg=1 last copy fixed>
<RefPosition #192 @132 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #193 @132 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #194 @132 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #195 @132 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #196 @132 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #197 @132 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #198 @132 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #199 @132 RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1 last>
<RefPosition #200 @132 RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1 last>
<RefPosition #201 @132 RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1 last>
<RefPosition #202 @132 RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1 last>
<RefPosition #203 @132 RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1 last>
<RefPosition #204 @132 RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1 last>
<RefPosition #205 @140 RefTypeDef <Ivl:63> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #206 @141 RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[rbx] minReg=1>
<RefPosition #207 @141 RefTypeUse <Ivl:63>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #208 @146 RefTypeDef <Ivl:64> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #209 @147 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #210 @147 RefTypeUse <Ivl:64>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #211 @148 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #212 @148 RefTypeDef <Ivl:65> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #213 @149 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #214 @149 RefTypeUse <Ivl:65>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #215 @150 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #216 @150 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #217 @150 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #218 @150 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #219 @150 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #220 @150 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #221 @150 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #222 @150 RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #223 @150 RefTypeDef <Ivl:66> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #224 @151 RefTypeUse <Ivl:66>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #225 @152 RefTypeDef <Ivl:11 V15> STORE_LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #226 @155 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #227 @155 RefTypeUse <Ivl:11 V15> LCL_VAR BB01 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #228 @156 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #229 @156 RefTypeDef <Ivl:67> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #230 @158 RefTypeDef <Ivl:68> CNS_INT BB01 regmask=[rdx] minReg=1>
<RefPosition #231 @159 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #232 @159 RefTypeUse <Ivl:68>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #233 @160 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #234 @160 RefTypeDef <Ivl:69> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>
<RefPosition #235 @161 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #236 @161 RefTypeUse <Ivl:67>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #237 @161 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #238 @161 RefTypeUse <Ivl:69>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #239 @162 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #240 @162 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #241 @162 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #242 @162 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #243 @162 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #244 @162 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #245 @162 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #246 @167 RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[rbx] minReg=1>
<RefPosition #247 @168 RefTypeDef <Ivl:70> LEA BB01 regmask=[rcx] minReg=1>
<RefPosition #248 @171 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #249 @171 RefTypeUse <Ivl:70>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #250 @171 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #251 @171 RefTypeUse <Ivl:11 V15> LCL_VAR BB01 regmask=[rdx] minReg=1 last copy fixed>
<RefPosition #252 @172 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #253 @172 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #254 @172 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #255 @172 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #256 @172 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #257 @172 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #258 @172 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #259 @172 RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1 last>
<RefPosition #260 @172 RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1 last>
<RefPosition #261 @172 RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1 last>
<RefPosition #262 @172 RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1 last>
<RefPosition #263 @172 RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1 last>
<RefPosition #264 @172 RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1 last>
<RefPosition #265 @174 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #266 @174 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #267 @174 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #268 @174 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #269 @174 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #270 @174 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #271 @174 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #272 @174 RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #273 @174 RefTypeDef <Ivl:71> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #274 @175 RefTypeUse <Ivl:71>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #275 @176 RefTypeDef <Ivl:27 V31> STORE_LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #276 @179 RefTypeUse <Ivl:27 V31> LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #277 @183 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #278 @183 RefTypeUse <Ivl:27 V31> LCL_VAR BB01 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #279 @184 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #280 @184 RefTypeDef <Ivl:72> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #281 @186 RefTypeDef <Ivl:73> CNS_INT BB01 regmask=[rdx] minReg=1>
<RefPosition #282 @187 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #283 @187 RefTypeUse <Ivl:73>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #284 @188 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #285 @188 RefTypeDef <Ivl:74> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>
<RefPosition #286 @189 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #287 @189 RefTypeUse <Ivl:72>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #288 @189 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #289 @189 RefTypeUse <Ivl:74>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #290 @190 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #291 @190 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #292 @190 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #293 @190 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #294 @190 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #295 @190 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #296 @190 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #297 @195 RefTypeUse <Ivl:27 V31> LCL_VAR BB01 regmask=[rdi] minReg=1 last>
<RefPosition #298 @196 RefTypeDef <Ivl:75> IND BB01 regmask=[rcx] minReg=1>
<RefPosition #299 @197 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #300 @197 RefTypeUse <Ivl:75>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #301 @198 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #302 @198 RefTypeDef <Ivl:76> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #303 @199 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #304 @199 RefTypeUse <Ivl:76>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #305 @200 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #306 @200 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #307 @200 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #308 @200 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #309 @200 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #310 @200 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #311 @200 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #312 @200 RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #313 @200 RefTypeDef <Ivl:77> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #314 @201 RefTypeUse <Ivl:77>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #315 @202 RefTypeDef <Ivl:28 V32> STORE_LCL_VAR BB01 regmask=[rax] minReg=1>
<RefPosition #316 @207 RefTypeUse <Ivl:28 V32> LCL_VAR BB01 regmask=[rax] minReg=1 last>
<RefPosition #317 @208 RefTypeDef <Ivl:78> IND BB01 regmask=[rdi] minReg=1>
<RefPosition #318 @209 RefTypeUse <Ivl:78>  BB01 regmask=[rdi] minReg=1 last>
<RefPosition #319 @210 RefTypeDef <Ivl:3 V03> STORE_LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #320 @219 RefTypeUse <Ivl:3 V03> LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #321 @220 RefTypeDef <Ivl:79> IND BB01 regmask=[r9] minReg=1>
<RefPosition #322 @221 RefTypeFixedReg <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #323 @221 RefTypeUse <Ivl:79>  BB01 regmask=[r9] minReg=1 last fixed>
<RefPosition #324 @222 RefTypeFixedReg <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #325 @222 RefTypeDef <Ivl:80> PUTARG_REG BB01 regmask=[r9] minReg=1 fixed>
<RefPosition #326 @224 RefTypeDef <Ivl:81> CNS_INT BB01 regmask=[rdx] minReg=1>
<RefPosition #327 @225 RefTypeUse <Ivl:81>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #328 @226 RefTypeDef <Ivl:82> IND BB01 regmask=[rdx] minReg=1>
<RefPosition #329 @227 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #330 @227 RefTypeUse <Ivl:82>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #331 @228 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #332 @228 RefTypeDef <Ivl:83> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>
<RefPosition #333 @231 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #334 @231 RefTypeUse <Ivl:3 V03> LCL_VAR BB01 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #335 @232 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #336 @232 RefTypeDef <Ivl:84> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #337 @234 RefTypeDef <Ivl:85> CNS_INT BB01 regmask=[r8] minReg=1>
<RefPosition #338 @235 RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #339 @235 RefTypeUse <Ivl:85>  BB01 regmask=[r8] minReg=1 last fixed>
<RefPosition #340 @236 RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #341 @236 RefTypeDef <Ivl:86> PUTARG_REG BB01 regmask=[r8] minReg=1 fixed>
<RefPosition #342 @237 RefTypeFixedReg <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #343 @237 RefTypeUse <Ivl:80>  BB01 regmask=[r9] minReg=1 last fixed>
<RefPosition #344 @237 RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #345 @237 RefTypeUse <Ivl:83>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #346 @237 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #347 @237 RefTypeUse <Ivl:84>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #348 @237 RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #349 @237 RefTypeUse <Ivl:86>  BB01 regmask=[r8] minReg=1 last fixed>
<RefPosition #350 @238 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #351 @238 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #352 @238 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #353 @238 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #354 @238 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #355 @238 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #356 @238 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #357 @238 RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #358 @238 RefTypeDef <Ivl:87> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #359 @241 RefTypeUse <Ivl:87>  BB01 regmask=[rax] minReg=1 last regOptional>
<RefPosition #360 @242 RefTypeDef <Ivl:88> GE BB01 regmask=[r14] minReg=1>
<RefPosition #361 @243 RefTypeUse <Ivl:88>  BB01 regmask=[r14] minReg=1 last>
<RefPosition #362 @244 RefTypeDef <Ivl:4 V04> STORE_LCL_VAR BB01 regmask=[r14] minReg=1>
<RefPosition #363 @246 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #364 @246 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #365 @246 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #366 @246 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #367 @246 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #368 @246 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #369 @246 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #370 @246 RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #371 @246 RefTypeDef <Ivl:89> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #372 @247 RefTypeUse <Ivl:89>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #373 @248 RefTypeDef <Ivl:35 V41> STORE_LCL_VAR BB01 regmask=[rax] minReg=1>
<RefPosition #374 @257 RefTypeUse <Ivl:35 V41> LCL_VAR BB01 regmask=[rax] minReg=1>
<RefPosition #375 @263 RefTypeUse <Ivl:35 V41> LCL_VAR BB01 regmask=[rax] minReg=1 last>
<RefPosition #376 @264 RefTypeDef <Ivl:90> IND BB01 regmask=[r15] minReg=1>
<RefPosition #377 @265 RefTypeUse <Ivl:90>  BB01 regmask=[r15] minReg=1 last>
<RefPosition #378 @266 RefTypeDef <Ivl:5 V05> STORE_LCL_VAR BB01 regmask=[r15] minReg=1>
<RefPosition #379 @271 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #380 @271 RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rcx] minReg=1 last copy fixed>
<RefPosition #381 @272 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #382 @272 RefTypeDef <Ivl:91> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #383 @274 RefTypeFixedReg <Reg:r11>  BB01 regmask=[r11] minReg=1>
<RefPosition #384 @274 RefTypeDef <Ivl:92> CNS_INT BB01 regmask=[r11] minReg=1 fixed>
<RefPosition #385 @275 RefTypeFixedReg <Reg:r11>  BB01 regmask=[r11] minReg=1>
<RefPosition #386 @275 RefTypeUse <Ivl:92>  BB01 regmask=[r11] minReg=1 last fixed>
<RefPosition #387 @276 RefTypeFixedReg <Reg:r11>  BB01 regmask=[r11] minReg=1>
<RefPosition #388 @276 RefTypeDef <Ivl:93> PUTARG_REG BB01 regmask=[r11] minReg=1 fixed>
<RefPosition #389 @281 RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #390 @281 RefTypeUse <Ivl:91>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #391 @281 RefTypeFixedReg <Reg:r11>  BB01 regmask=[r11] minReg=1>
<RefPosition #392 @281 RefTypeUse <Ivl:93>  BB01 regmask=[r11] minReg=1 last fixed>
<RefPosition #393 @282 RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #394 @282 RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #395 @282 RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #396 @282 RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #397 @282 RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #398 @282 RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #399 @282 RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #400 @282 RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #401 @282 RefTypeDef <Ivl:94> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #402 @283 RefTypeUse <Ivl:94>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #403 @285 RefTypeBB  BB02 regmask=[] minReg=1>
<RefPosition #404 @290 RefTypeDef <Ivl:95> LCL_VAR BB02 regmask=[rcx] minReg=1>
<RefPosition #405 @291 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #406 @291 RefTypeUse <Ivl:95>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #407 @292 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #408 @292 RefTypeDef <Ivl:96> PUTARG_REG BB02 regmask=[rcx] minReg=1 fixed>
<RefPosition #409 @294 RefTypeFixedReg <Reg:r11>  BB02 regmask=[r11] minReg=1>
<RefPosition #410 @294 RefTypeDef <Ivl:97> CNS_INT BB02 regmask=[r11] minReg=1 fixed>
<RefPosition #411 @295 RefTypeFixedReg <Reg:r11>  BB02 regmask=[r11] minReg=1>
<RefPosition #412 @295 RefTypeUse <Ivl:97>  BB02 regmask=[r11] minReg=1 last fixed>
<RefPosition #413 @296 RefTypeFixedReg <Reg:r11>  BB02 regmask=[r11] minReg=1>
<RefPosition #414 @296 RefTypeDef <Ivl:98> PUTARG_REG BB02 regmask=[r11] minReg=1 fixed>
<RefPosition #415 @301 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #416 @301 RefTypeUse <Ivl:96>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #417 @301 RefTypeFixedReg <Reg:r11>  BB02 regmask=[r11] minReg=1>
<RefPosition #418 @301 RefTypeUse <Ivl:98>  BB02 regmask=[r11] minReg=1 last fixed>
<RefPosition #419 @302 RefTypeKill <Reg:rax>  BB02 regmask=[rax] minReg=1 last>
<RefPosition #420 @302 RefTypeKill <Reg:rcx>  BB02 regmask=[rcx] minReg=1 last>
<RefPosition #421 @302 RefTypeKill <Reg:rdx>  BB02 regmask=[rdx] minReg=1 last>
<RefPosition #422 @302 RefTypeKill <Reg:r8 >  BB02 regmask=[r8] minReg=1 last>
<RefPosition #423 @302 RefTypeKill <Reg:r9 >  BB02 regmask=[r9] minReg=1 last>
<RefPosition #424 @302 RefTypeKill <Reg:r10>  BB02 regmask=[r10] minReg=1 last>
<RefPosition #425 @302 RefTypeKill <Reg:r11>  BB02 regmask=[r11] minReg=1 last>
<RefPosition #426 @302 RefTypeFixedReg <Reg:rax>  BB02 regmask=[rax] minReg=1>
<RefPosition #427 @302 RefTypeDef <Ivl:99> CALL BB02 regmask=[rax] minReg=1 fixed>
<RefPosition #428 @305 RefTypeUse <Ivl:99>  BB02 regmask=[rax] minReg=1 last regOptional>
<RefPosition #429 @309 RefTypeBB  BB03 regmask=[] minReg=1>
<RefPosition #430 @314 RefTypeDef <Ivl:100> LCL_VAR BB03 regmask=[rcx] minReg=1>
<RefPosition #431 @315 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #432 @315 RefTypeUse <Ivl:100>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #433 @316 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #434 @316 RefTypeDef <Ivl:101> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>
<RefPosition #435 @318 RefTypeFixedReg <Reg:r11>  BB03 regmask=[r11] minReg=1>
<RefPosition #436 @318 RefTypeDef <Ivl:102> CNS_INT BB03 regmask=[r11] minReg=1 fixed>
<RefPosition #437 @319 RefTypeFixedReg <Reg:r11>  BB03 regmask=[r11] minReg=1>
<RefPosition #438 @319 RefTypeUse <Ivl:102>  BB03 regmask=[r11] minReg=1 last fixed>
<RefPosition #439 @320 RefTypeFixedReg <Reg:r11>  BB03 regmask=[r11] minReg=1>
<RefPosition #440 @320 RefTypeDef <Ivl:103> PUTARG_REG BB03 regmask=[r11] minReg=1 fixed>
<RefPosition #441 @325 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #442 @325 RefTypeUse <Ivl:101>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #443 @325 RefTypeFixedReg <Reg:r11>  BB03 regmask=[r11] minReg=1>
<RefPosition #444 @325 RefTypeUse <Ivl:103>  BB03 regmask=[r11] minReg=1 last fixed>
<RefPosition #445 @326 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #446 @326 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #447 @326 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #448 @326 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #449 @326 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #450 @326 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #451 @326 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #452 @326 RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #453 @326 RefTypeDef <Ivl:104> CALL BB03 regmask=[rax] minReg=1 fixed>
<RefPosition #454 @327 RefTypeUse <Ivl:104>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #455 @328 RefTypeDef <Ivl:6 V07> STORE_LCL_VAR BB03 regmask=[rsi] minReg=1>
<RefPosition #456 @332 RefTypeDef <Ivl:105> CNS_INT BB03 regmask=[rcx] minReg=1>
<RefPosition #457 @333 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #458 @333 RefTypeUse <Ivl:105>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #459 @334 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #460 @334 RefTypeDef <Ivl:106> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>
<RefPosition #461 @335 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #462 @335 RefTypeUse <Ivl:106>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #463 @336 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #464 @336 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #465 @336 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #466 @336 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #467 @336 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #468 @336 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #469 @336 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #470 @336 RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #471 @336 RefTypeDef <Ivl:107> CALL BB03 regmask=[rax] minReg=1 fixed>
<RefPosition #472 @337 RefTypeUse <Ivl:107>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #473 @338 RefTypeDef <Ivl:12 V16> STORE_LCL_VAR BB03 regmask=[r12] minReg=1>
<RefPosition #474 @343 RefTypeUse <Ivl:12 V16> LCL_VAR BB03 regmask=[r12] minReg=1>
<RefPosition #475 @344 RefTypeDef <Ivl:108> LEA BB03 regmask=[rcx] minReg=1>
<RefPosition #476 @347 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #477 @347 RefTypeUse <Ivl:108>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #478 @347 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #479 @347 RefTypeUse <Ivl:3 V03> LCL_VAR BB03 regmask=[rdx] minReg=1 copy fixed>
<RefPosition #480 @348 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #481 @348 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #482 @348 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #483 @348 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #484 @348 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #485 @348 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #486 @348 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #487 @348 RefTypeKill <Reg:mm0>  BB03 regmask=[mm0] minReg=1 last>
<RefPosition #488 @348 RefTypeKill <Reg:mm1>  BB03 regmask=[mm1] minReg=1 last>
<RefPosition #489 @348 RefTypeKill <Reg:mm2>  BB03 regmask=[mm2] minReg=1 last>
<RefPosition #490 @348 RefTypeKill <Reg:mm3>  BB03 regmask=[mm3] minReg=1 last>
<RefPosition #491 @348 RefTypeKill <Reg:mm4>  BB03 regmask=[mm4] minReg=1 last>
<RefPosition #492 @348 RefTypeKill <Reg:mm5>  BB03 regmask=[mm5] minReg=1 last>
<RefPosition #493 @351 RefTypeUse <Ivl:12 V16> LCL_VAR BB03 regmask=[r12] minReg=1 last>
<RefPosition #494 @352 RefTypeDef <Ivl:13 V17> STORE_LCL_VAR BB03 regmask=[r12] minReg=1>
<RefPosition #495 @355 RefTypeUse <Ivl:13 V17> LCL_VAR BB03 regmask=[r12] minReg=1 last>
<RefPosition #496 @356 RefTypeDef <Ivl:14 V18> STORE_LCL_VAR BB03 regmask=[r12] minReg=1>
<RefPosition #497 @363 RefTypeUse <Ivl:4 V04> LCL_VAR BB03 regmask=[r14] minReg=1 regOptional>
<RefPosition #498 @367 RefTypeBB  BB04 regmask=[] minReg=1>
<RefPosition #499 @371 RefTypeUse <Ivl:14 V18> LCL_VAR BB04 regmask=[r12] minReg=1 last>
<RefPosition #500 @372 RefTypeDef <Ivl:15 V19> STORE_LCL_VAR BB04 regmask=[r12] minReg=1>
<RefPosition #501 @375 RefTypeUse <Ivl:15 V19> LCL_VAR BB04 regmask=[r12] minReg=1>
<RefPosition #502 @376 RefTypeDef <Ivl:16 V20> STORE_LCL_VAR BB04 regmask=[r13] minReg=1>
<RefPosition #503 @379 RefTypeUse <Ivl:6 V07> LCL_VAR BB04 regmask=[rsi] minReg=1 last>
<RefPosition #504 @380 RefTypeDef <Ivl:17 V21> STORE_LCL_VAR BB04 regmask=[rdx] minReg=1>
<RefPosition #505 @381 RefTypeBB  BB05 regmask=[] minReg=1>
<RefPosition #506 @385 RefTypeUse <Ivl:14 V18> LCL_VAR BB05 regmask=[r12] minReg=1 last>
<RefPosition #507 @386 RefTypeDef <Ivl:15 V19> STORE_LCL_VAR BB05 regmask=[r12] minReg=1>
<RefPosition #508 @389 RefTypeUse <Ivl:15 V19> LCL_VAR BB05 regmask=[r12] minReg=1>
<RefPosition #509 @390 RefTypeDef <Ivl:16 V20> STORE_LCL_VAR BB05 regmask=[r13] minReg=1>
<RefPosition #510 @392 RefTypeDef <Ivl:109> CNS_INT BB05 regmask=[rdx] minReg=1>
<RefPosition #511 @393 RefTypeUse <Ivl:109>  BB05 regmask=[rdx] minReg=1 last>
<RefPosition #512 @394 RefTypeDef <Ivl:110> IND BB05 regmask=[rdx] minReg=1>
<RefPosition #513 @395 RefTypeFixedReg <Reg:rdx>  BB05 regmask=[rdx] minReg=1>
<RefPosition #514 @395 RefTypeUse <Ivl:110>  BB05 regmask=[rdx] minReg=1 last fixed>
<RefPosition #515 @396 RefTypeFixedReg <Reg:rdx>  BB05 regmask=[rdx] minReg=1>
<RefPosition #516 @396 RefTypeDef <Ivl:111> PUTARG_REG BB05 regmask=[rdx] minReg=1 fixed>
<RefPosition #517 @399 RefTypeFixedReg <Reg:rcx>  BB05 regmask=[rcx] minReg=1>
<RefPosition #518 @399 RefTypeUse <Ivl:5 V05> LCL_VAR BB05 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #519 @400 RefTypeFixedReg <Reg:rcx>  BB05 regmask=[rcx] minReg=1>
<RefPosition #520 @400 RefTypeDef <Ivl:112> PUTARG_REG BB05 regmask=[rcx] minReg=1 fixed>
<RefPosition #521 @403 RefTypeFixedReg <Reg:r8 >  BB05 regmask=[r8] minReg=1>
<RefPosition #522 @403 RefTypeUse <Ivl:6 V07> LCL_VAR BB05 regmask=[r8] minReg=1 last copy fixed>
<RefPosition #523 @404 RefTypeFixedReg <Reg:r8 >  BB05 regmask=[r8] minReg=1>
<RefPosition #524 @404 RefTypeDef <Ivl:113> PUTARG_REG BB05 regmask=[r8] minReg=1 fixed>
<RefPosition #525 @405 RefTypeFixedReg <Reg:rdx>  BB05 regmask=[rdx] minReg=1>
<RefPosition #526 @405 RefTypeUse <Ivl:111>  BB05 regmask=[rdx] minReg=1 last fixed>
<RefPosition #527 @405 RefTypeFixedReg <Reg:rcx>  BB05 regmask=[rcx] minReg=1>
<RefPosition #528 @405 RefTypeUse <Ivl:112>  BB05 regmask=[rcx] minReg=1 last fixed>
<RefPosition #529 @405 RefTypeFixedReg <Reg:r8 >  BB05 regmask=[r8] minReg=1>
<RefPosition #530 @405 RefTypeUse <Ivl:113>  BB05 regmask=[r8] minReg=1 last fixed>
<RefPosition #531 @406 RefTypeKill <Reg:rax>  BB05 regmask=[rax] minReg=1 last>
<RefPosition #532 @406 RefTypeKill <Reg:rcx>  BB05 regmask=[rcx] minReg=1 last>
<RefPosition #533 @406 RefTypeKill <Reg:rdx>  BB05 regmask=[rdx] minReg=1 last>
<RefPosition #534 @406 RefTypeKill <Reg:r8 >  BB05 regmask=[r8] minReg=1 last>
<RefPosition #535 @406 RefTypeKill <Reg:r9 >  BB05 regmask=[r9] minReg=1 last>
<RefPosition #536 @406 RefTypeKill <Reg:r10>  BB05 regmask=[r10] minReg=1 last>
<RefPosition #537 @406 RefTypeKill <Reg:r11>  BB05 regmask=[r11] minReg=1 last>
<RefPosition #538 @406 RefTypeFixedReg <Reg:rax>  BB05 regmask=[rax] minReg=1>
<RefPosition #539 @406 RefTypeDef <Ivl:114> CALL BB05 regmask=[rax] minReg=1 fixed>
<RefPosition #540 @407 RefTypeUse <Ivl:114>  BB05 regmask=[rax] minReg=1 last>
<RefPosition #541 @408 RefTypeDef <Ivl:17 V21> STORE_LCL_VAR BB05 regmask=[rdx] minReg=1>
<RefPosition #542 @409 RefTypeBB  BB06 regmask=[] minReg=1>
<RefPosition #543 @413 RefTypeUse <Ivl:16 V20> LCL_VAR BB06 regmask=[r13] minReg=1 last>
<RefPosition #544 @414 RefTypeDef <Ivl:115> LEA BB06 regmask=[rcx] minReg=1>
<RefPosition #545 @417 RefTypeFixedReg <Reg:rcx>  BB06 regmask=[rcx] minReg=1>
<RefPosition #546 @417 RefTypeUse <Ivl:115>  BB06 regmask=[rcx] minReg=1 last fixed>
<RefPosition #547 @417 RefTypeFixedReg <Reg:rdx>  BB06 regmask=[rdx] minReg=1>
<RefPosition #548 @417 RefTypeUse <Ivl:17 V21> LCL_VAR BB06 regmask=[rdx] minReg=1 last fixed>
<RefPosition #549 @418 RefTypeKill <Reg:rax>  BB06 regmask=[rax] minReg=1 last>
<RefPosition #550 @418 RefTypeKill <Reg:rcx>  BB06 regmask=[rcx] minReg=1 last>
<RefPosition #551 @418 RefTypeKill <Reg:rdx>  BB06 regmask=[rdx] minReg=1 last>
<RefPosition #552 @418 RefTypeKill <Reg:r8 >  BB06 regmask=[r8] minReg=1 last>
<RefPosition #553 @418 RefTypeKill <Reg:r9 >  BB06 regmask=[r9] minReg=1 last>
<RefPosition #554 @418 RefTypeKill <Reg:r10>  BB06 regmask=[r10] minReg=1 last>
<RefPosition #555 @418 RefTypeKill <Reg:r11>  BB06 regmask=[r11] minReg=1 last>
<RefPosition #556 @418 RefTypeKill <Reg:mm0>  BB06 regmask=[mm0] minReg=1 last>
<RefPosition #557 @418 RefTypeKill <Reg:mm1>  BB06 regmask=[mm1] minReg=1 last>
<RefPosition #558 @418 RefTypeKill <Reg:mm2>  BB06 regmask=[mm2] minReg=1 last>
<RefPosition #559 @418 RefTypeKill <Reg:mm3>  BB06 regmask=[mm3] minReg=1 last>
<RefPosition #560 @418 RefTypeKill <Reg:mm4>  BB06 regmask=[mm4] minReg=1 last>
<RefPosition #561 @418 RefTypeKill <Reg:mm5>  BB06 regmask=[mm5] minReg=1 last>
<RefPosition #562 @427 RefTypeUse <Ivl:15 V19> LCL_VAR BB06 regmask=[r12] minReg=1>
<RefPosition #563 @435 RefTypeUse <Ivl:2 V02> LCL_VAR BB06 regmask=[rbx] minReg=1>
<RefPosition #564 @436 RefTypeDef <Ivl:116> IND BB06 regmask=[rsi] minReg=1>
<RefPosition #565 @437 RefTypeUse <Ivl:116>  BB06 regmask=[rsi] minReg=1 last>
<RefPosition #566 @438 RefTypeDef <Ivl:19 V23> STORE_LCL_VAR BB06 regmask=[rsi] minReg=1>
<RefPosition #567 @445 RefTypeUse <Ivl:2 V02> LCL_VAR BB06 regmask=[rbx] minReg=1>
<RefPosition #568 @446 RefTypeDef <Ivl:117> IND BB06 regmask=[r13] minReg=1>
<RefPosition #569 @447 RefTypeUse <Ivl:117>  BB06 regmask=[r13] minReg=1 last>
<RefPosition #570 @448 RefTypeDef <Ivl:18 V22> STORE_LCL_VAR BB06 regmask=[r13] minReg=1>
<RefPosition #571 @451 RefTypeUse <Ivl:19 V23> LCL_VAR BB06 regmask=[rsi] minReg=1 last>
<RefPosition #572 @452 RefTypeDef <Ivl:20 V24> STORE_LCL_VAR BB06 regmask=[rsi] minReg=1>
<RefPosition #573 @455 RefTypeUse <Ivl:15 V19> LCL_VAR BB06 regmask=[r12] minReg=1 last>
<RefPosition #574 @456 RefTypeDef <Ivl:21 V25> STORE_LCL_VAR BB06 regmask=[r12] minReg=1>
<RefPosition #575 @459 RefTypeUse <Ivl:18 V22> LCL_VAR BB06 regmask=[r13] minReg=1 last>
<RefPosition #576 @460 RefTypeDef <Ivl:22 V26> STORE_LCL_VAR BB06 regmask=[r13] minReg=1>
<RefPosition #577 @465 RefTypeUse <Ivl:22 V26> LCL_VAR BB06 regmask=[r13] minReg=1 regOptional>
<RefPosition #578 @469 RefTypeBB  BB07 regmask=[] minReg=1>
<RefPosition #579 @472 RefTypeDef <Ivl:118> CNS_INT BB07 regmask=[rcx] minReg=1>
<RefPosition #580 @473 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #581 @473 RefTypeUse <Ivl:118>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #582 @474 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #583 @474 RefTypeDef <Ivl:119> PUTARG_REG BB07 regmask=[rcx] minReg=1 fixed>
<RefPosition #584 @475 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #585 @475 RefTypeUse <Ivl:119>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #586 @476 RefTypeKill <Reg:rax>  BB07 regmask=[rax] minReg=1 last>
<RefPosition #587 @476 RefTypeKill <Reg:rcx>  BB07 regmask=[rcx] minReg=1 last>
<RefPosition #588 @476 RefTypeKill <Reg:rdx>  BB07 regmask=[rdx] minReg=1 last>
<RefPosition #589 @476 RefTypeKill <Reg:r8 >  BB07 regmask=[r8] minReg=1 last>
<RefPosition #590 @476 RefTypeKill <Reg:r9 >  BB07 regmask=[r9] minReg=1 last>
<RefPosition #591 @476 RefTypeKill <Reg:r10>  BB07 regmask=[r10] minReg=1 last>
<RefPosition #592 @476 RefTypeKill <Reg:r11>  BB07 regmask=[r11] minReg=1 last>
<RefPosition #593 @476 RefTypeFixedReg <Reg:rax>  BB07 regmask=[rax] minReg=1>
<RefPosition #594 @476 RefTypeDef <Ivl:120> CALL BB07 regmask=[rax] minReg=1 fixed>
<RefPosition #595 @477 RefTypeUse <Ivl:120>  BB07 regmask=[rax] minReg=1 last>
<RefPosition #596 @478 RefTypeDef <Ivl:24 V28> STORE_LCL_VAR BB07 regmask=[r13] minReg=1>
<RefPosition #597 @481 RefTypeUse <Ivl:24 V28> LCL_VAR BB07 regmask=[r13] minReg=1>
<RefPosition #598 @482 RefTypeDef <Ivl:121> LEA BB07 regmask=[rcx] minReg=1>
<RefPosition #599 @485 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #600 @485 RefTypeUse <Ivl:121>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #601 @485 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #602 @485 RefTypeUse <Ivl:2 V02> LCL_VAR BB07 regmask=[rdx] minReg=1 copy fixed>
<RefPosition #603 @486 RefTypeKill <Reg:rax>  BB07 regmask=[rax] minReg=1 last>
<RefPosition #604 @486 RefTypeKill <Reg:rcx>  BB07 regmask=[rcx] minReg=1 last>
<RefPosition #605 @486 RefTypeKill <Reg:rdx>  BB07 regmask=[rdx] minReg=1 last>
<RefPosition #606 @486 RefTypeKill <Reg:r8 >  BB07 regmask=[r8] minReg=1 last>
<RefPosition #607 @486 RefTypeKill <Reg:r9 >  BB07 regmask=[r9] minReg=1 last>
<RefPosition #608 @486 RefTypeKill <Reg:r10>  BB07 regmask=[r10] minReg=1 last>
<RefPosition #609 @486 RefTypeKill <Reg:r11>  BB07 regmask=[r11] minReg=1 last>
<RefPosition #610 @486 RefTypeKill <Reg:mm0>  BB07 regmask=[mm0] minReg=1 last>
<RefPosition #611 @486 RefTypeKill <Reg:mm1>  BB07 regmask=[mm1] minReg=1 last>
<RefPosition #612 @486 RefTypeKill <Reg:mm2>  BB07 regmask=[mm2] minReg=1 last>
<RefPosition #613 @486 RefTypeKill <Reg:mm3>  BB07 regmask=[mm3] minReg=1 last>
<RefPosition #614 @486 RefTypeKill <Reg:mm4>  BB07 regmask=[mm4] minReg=1 last>
<RefPosition #615 @486 RefTypeKill <Reg:mm5>  BB07 regmask=[mm5] minReg=1 last>
<RefPosition #616 @492 RefTypeDef <Ivl:122> CNS_INT BB07 regmask=[rdx] minReg=1>
<RefPosition #617 @493 RefTypeUse <Ivl:24 V28> LCL_VAR BB07 regmask=[r13] minReg=1>
<RefPosition #618 @493 RefTypeUse <Ivl:122>  BB07 regmask=[rdx] minReg=1 last>
<RefPosition #619 @497 RefTypeUse <Ivl:2 V02> LCL_VAR BB07 regmask=[rbx] minReg=1>
<RefPosition #620 @498 RefTypeDef <Ivl:123> LEA BB07 regmask=[rcx] minReg=1>
<RefPosition #621 @501 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #622 @501 RefTypeUse <Ivl:123>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #623 @501 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #624 @501 RefTypeUse <Ivl:24 V28> LCL_VAR BB07 regmask=[rdx] minReg=1 copy fixed>
<RefPosition #625 @502 RefTypeKill <Reg:rax>  BB07 regmask=[rax] minReg=1 last>
<RefPosition #626 @502 RefTypeKill <Reg:rcx>  BB07 regmask=[rcx] minReg=1 last>
<RefPosition #627 @502 RefTypeKill <Reg:rdx>  BB07 regmask=[rdx] minReg=1 last>
<RefPosition #628 @502 RefTypeKill <Reg:r8 >  BB07 regmask=[r8] minReg=1 last>
<RefPosition #629 @502 RefTypeKill <Reg:r9 >  BB07 regmask=[r9] minReg=1 last>
<RefPosition #630 @502 RefTypeKill <Reg:r10>  BB07 regmask=[r10] minReg=1 last>
<RefPosition #631 @502 RefTypeKill <Reg:r11>  BB07 regmask=[r11] minReg=1 last>
<RefPosition #632 @502 RefTypeKill <Reg:mm0>  BB07 regmask=[mm0] minReg=1 last>
<RefPosition #633 @502 RefTypeKill <Reg:mm1>  BB07 regmask=[mm1] minReg=1 last>
<RefPosition #634 @502 RefTypeKill <Reg:mm2>  BB07 regmask=[mm2] minReg=1 last>
<RefPosition #635 @502 RefTypeKill <Reg:mm3>  BB07 regmask=[mm3] minReg=1 last>
<RefPosition #636 @502 RefTypeKill <Reg:mm4>  BB07 regmask=[mm4] minReg=1 last>
<RefPosition #637 @502 RefTypeKill <Reg:mm5>  BB07 regmask=[mm5] minReg=1 last>
<RefPosition #638 @505 RefTypeUse <Ivl:24 V28> LCL_VAR BB07 regmask=[r13] minReg=1 last>
<RefPosition #639 @506 RefTypeDef <Ivl:22 V26> STORE_LCL_VAR BB07 regmask=[r13] minReg=1>
<RefPosition #640 @507 RefTypeBB  BB09 regmask=[] minReg=1>
<RefPosition #641 @510 RefTypeDef <Ivl:124> CNS_INT BB09 regmask=[rcx] minReg=1>
<RefPosition #642 @511 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #643 @511 RefTypeUse <Ivl:124>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #644 @512 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #645 @512 RefTypeDef <Ivl:125> PUTARG_REG BB09 regmask=[rcx] minReg=1 fixed>
<RefPosition #646 @513 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #647 @513 RefTypeUse <Ivl:125>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #648 @514 RefTypeKill <Reg:rax>  BB09 regmask=[rax] minReg=1 last>
<RefPosition #649 @514 RefTypeKill <Reg:rcx>  BB09 regmask=[rcx] minReg=1 last>
<RefPosition #650 @514 RefTypeKill <Reg:rdx>  BB09 regmask=[rdx] minReg=1 last>
<RefPosition #651 @514 RefTypeKill <Reg:r8 >  BB09 regmask=[r8] minReg=1 last>
<RefPosition #652 @514 RefTypeKill <Reg:r9 >  BB09 regmask=[r9] minReg=1 last>
<RefPosition #653 @514 RefTypeKill <Reg:r10>  BB09 regmask=[r10] minReg=1 last>
<RefPosition #654 @514 RefTypeKill <Reg:r11>  BB09 regmask=[r11] minReg=1 last>
<RefPosition #655 @514 RefTypeFixedReg <Reg:rax>  BB09 regmask=[rax] minReg=1>
<RefPosition #656 @514 RefTypeDef <Ivl:126> CALL BB09 regmask=[rax] minReg=1 fixed>
<RefPosition #657 @515 RefTypeUse <Ivl:126>  BB09 regmask=[rax] minReg=1 last>
<RefPosition #658 @516 RefTypeDef <Ivl:23 V27> STORE_LCL_VAR BB09 regmask=[rax] minReg=1>
<RefPosition #659 @519 RefTypeUse <Ivl:23 V27> LCL_VAR BB09 regmask=[rax] minReg=1 spillAfter>
<RefPosition #660 @520 RefTypeDef <Ivl:127> LEA BB09 regmask=[rcx] minReg=1>
<RefPosition #661 @523 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #662 @523 RefTypeUse <Ivl:127>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #663 @523 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #664 @523 RefTypeUse <Ivl:2 V02> LCL_VAR BB09 regmask=[rdx] minReg=1 copy fixed>
<RefPosition #665 @524 RefTypeKill <Reg:rax>  BB09 regmask=[rax] minReg=1 last>
<RefPosition #666 @524 RefTypeKill <Reg:rcx>  BB09 regmask=[rcx] minReg=1 last>
<RefPosition #667 @524 RefTypeKill <Reg:rdx>  BB09 regmask=[rdx] minReg=1 last>
<RefPosition #668 @524 RefTypeKill <Reg:r8 >  BB09 regmask=[r8] minReg=1 last>
<RefPosition #669 @524 RefTypeKill <Reg:r9 >  BB09 regmask=[r9] minReg=1 last>
<RefPosition #670 @524 RefTypeKill <Reg:r10>  BB09 regmask=[r10] minReg=1 last>
<RefPosition #671 @524 RefTypeKill <Reg:r11>  BB09 regmask=[r11] minReg=1 last>
<RefPosition #672 @524 RefTypeKill <Reg:mm0>  BB09 regmask=[mm0] minReg=1 last>
<RefPosition #673 @524 RefTypeKill <Reg:mm1>  BB09 regmask=[mm1] minReg=1 last>
<RefPosition #674 @524 RefTypeKill <Reg:mm2>  BB09 regmask=[mm2] minReg=1 last>
<RefPosition #675 @524 RefTypeKill <Reg:mm3>  BB09 regmask=[mm3] minReg=1 last>
<RefPosition #676 @524 RefTypeKill <Reg:mm4>  BB09 regmask=[mm4] minReg=1 last>
<RefPosition #677 @524 RefTypeKill <Reg:mm5>  BB09 regmask=[mm5] minReg=1 last>
<RefPosition #678 @530 RefTypeDef <Ivl:128> CNS_INT BB09 regmask=[rcx] minReg=1>
<RefPosition #679 @531 RefTypeUse <Ivl:23 V27> LCL_VAR BB09 regmask=[r8] minReg=1 reload>
<RefPosition #680 @531 RefTypeUse <Ivl:128>  BB09 regmask=[rcx] minReg=1 last>
<RefPosition #681 @537 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #682 @537 RefTypeUse <Ivl:21 V25> LCL_VAR BB09 regmask=[rcx] minReg=1 last copy fixed>
<RefPosition #683 @538 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #684 @538 RefTypeDef <Ivl:129> PUTARG_REG BB09 regmask=[rcx] minReg=1 fixed>
<RefPosition #685 @541 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #686 @541 RefTypeUse <Ivl:22 V26> LCL_VAR BB09 regmask=[rdx] minReg=1 last copy fixed>
<RefPosition #687 @542 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #688 @542 RefTypeDef <Ivl:130> PUTARG_REG BB09 regmask=[rdx] minReg=1 fixed>
<RefPosition #689 @545 RefTypeFixedReg <Reg:r8 >  BB09 regmask=[r8] minReg=1>
<RefPosition #690 @545 RefTypeUse <Ivl:23 V27> LCL_VAR BB09 regmask=[r8] minReg=1 last fixed>
<RefPosition #691 @546 RefTypeFixedReg <Reg:r8 >  BB09 regmask=[r8] minReg=1>
<RefPosition #692 @546 RefTypeDef <Ivl:131> PUTARG_REG BB09 regmask=[r8] minReg=1 fixed>
<RefPosition #693 @547 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #694 @547 RefTypeUse <Ivl:129>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #695 @547 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #696 @547 RefTypeUse <Ivl:130>  BB09 regmask=[rdx] minReg=1 last fixed>
<RefPosition #697 @547 RefTypeFixedReg <Reg:r8 >  BB09 regmask=[r8] minReg=1>
<RefPosition #698 @547 RefTypeUse <Ivl:131>  BB09 regmask=[r8] minReg=1 last fixed>
<RefPosition #699 @548 RefTypeKill <Reg:rax>  BB09 regmask=[rax] minReg=1 last>
<RefPosition #700 @548 RefTypeKill <Reg:rcx>  BB09 regmask=[rcx] minReg=1 last>
<RefPosition #701 @548 RefTypeKill <Reg:rdx>  BB09 regmask=[rdx] minReg=1 last>
<RefPosition #702 @548 RefTypeKill <Reg:r8 >  BB09 regmask=[r8] minReg=1 last>
<RefPosition #703 @548 RefTypeKill <Reg:r9 >  BB09 regmask=[r9] minReg=1 last>
<RefPosition #704 @548 RefTypeKill <Reg:r10>  BB09 regmask=[r10] minReg=1 last>
<RefPosition #705 @548 RefTypeKill <Reg:r11>  BB09 regmask=[r11] minReg=1 last>
<RefPosition #706 @548 RefTypeFixedReg <Reg:rax>  BB09 regmask=[rax] minReg=1>
<RefPosition #707 @548 RefTypeDef <Ivl:132> CALL BB09 regmask=[rax] minReg=1 fixed>
<RefPosition #708 @549 RefTypeUse <Ivl:132>  BB09 regmask=[rax] minReg=1 last>
<RefPosition #709 @550 RefTypeDef <Ivl:36 V42> STORE_LCL_VAR BB09 regmask=[rdx] minReg=1>
<RefPosition #710 @553 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #711 @553 RefTypeUse <Ivl:36 V42> LCL_VAR BB09 regmask=[rdx] minReg=1 last fixed>
<RefPosition #712 @554 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #713 @554 RefTypeDef <Ivl:133> PUTARG_REG BB09 regmask=[rdx] minReg=1 fixed>
<RefPosition #714 @557 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #715 @557 RefTypeUse <Ivl:20 V24> LCL_VAR BB09 regmask=[rcx] minReg=1 last copy fixed>
<RefPosition #716 @558 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #717 @558 RefTypeDef <Ivl:134> PUTARG_REG BB09 regmask=[rcx] minReg=1 fixed>
<RefPosition #718 @559 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #719 @559 RefTypeUse <Ivl:133>  BB09 regmask=[rdx] minReg=1 last fixed>
<RefPosition #720 @559 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #721 @559 RefTypeUse <Ivl:134>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #722 @560 RefTypeKill <Reg:rax>  BB09 regmask=[rax] minReg=1 last>
<RefPosition #723 @560 RefTypeKill <Reg:rcx>  BB09 regmask=[rcx] minReg=1 last>
<RefPosition #724 @560 RefTypeKill <Reg:rdx>  BB09 regmask=[rdx] minReg=1 last>
<RefPosition #725 @560 RefTypeKill <Reg:r8 >  BB09 regmask=[r8] minReg=1 last>
<RefPosition #726 @560 RefTypeKill <Reg:r9 >  BB09 regmask=[r9] minReg=1 last>
<RefPosition #727 @560 RefTypeKill <Reg:r10>  BB09 regmask=[r10] minReg=1 last>
<RefPosition #728 @560 RefTypeKill <Reg:r11>  BB09 regmask=[r11] minReg=1 last>
<RefPosition #729 @564 RefTypeDef <Ivl:135> LCL_VAR BB09 regmask=[rcx] minReg=1>
<RefPosition #730 @565 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #731 @565 RefTypeUse <Ivl:135>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #732 @566 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #733 @566 RefTypeDef <Ivl:136> PUTARG_REG BB09 regmask=[rcx] minReg=1 fixed>
<RefPosition #734 @568 RefTypeFixedReg <Reg:r11>  BB09 regmask=[r11] minReg=1>
<RefPosition #735 @568 RefTypeDef <Ivl:137> CNS_INT BB09 regmask=[r11] minReg=1 fixed>
<RefPosition #736 @569 RefTypeFixedReg <Reg:r11>  BB09 regmask=[r11] minReg=1>
<RefPosition #737 @569 RefTypeUse <Ivl:137>  BB09 regmask=[r11] minReg=1 last fixed>
<RefPosition #738 @570 RefTypeFixedReg <Reg:r11>  BB09 regmask=[r11] minReg=1>
<RefPosition #739 @570 RefTypeDef <Ivl:138> PUTARG_REG BB09 regmask=[r11] minReg=1 fixed>
<RefPosition #740 @575 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #741 @575 RefTypeUse <Ivl:136>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #742 @575 RefTypeFixedReg <Reg:r11>  BB09 regmask=[r11] minReg=1>
<RefPosition #743 @575 RefTypeUse <Ivl:138>  BB09 regmask=[r11] minReg=1 last fixed>
<RefPosition #744 @576 RefTypeKill <Reg:rax>  BB09 regmask=[rax] minReg=1 last>
<RefPosition #745 @576 RefTypeKill <Reg:rcx>  BB09 regmask=[rcx] minReg=1 last>
<RefPosition #746 @576 RefTypeKill <Reg:rdx>  BB09 regmask=[rdx] minReg=1 last>
<RefPosition #747 @576 RefTypeKill <Reg:r8 >  BB09 regmask=[r8] minReg=1 last>
<RefPosition #748 @576 RefTypeKill <Reg:r9 >  BB09 regmask=[r9] minReg=1 last>
<RefPosition #749 @576 RefTypeKill <Reg:r10>  BB09 regmask=[r10] minReg=1 last>
<RefPosition #750 @576 RefTypeKill <Reg:r11>  BB09 regmask=[r11] minReg=1 last>
<RefPosition #751 @576 RefTypeFixedReg <Reg:rax>  BB09 regmask=[rax] minReg=1>
<RefPosition #752 @576 RefTypeDef <Ivl:139> CALL BB09 regmask=[rax] minReg=1 fixed>
<RefPosition #753 @579 RefTypeUse <Ivl:139>  BB09 regmask=[rax] minReg=1 last regOptional>
<RefPosition #754 @583 RefTypeExpUse <Ivl:3 V03>  BB09 regmask=[allIntButFP] minReg=1 regOptional>
<RefPosition #755 @583 RefTypeExpUse <Ivl:4 V04>  BB09 regmask=[allIntButFP] minReg=1 regOptional>
<RefPosition #756 @583 RefTypeExpUse <Ivl:5 V05>  BB09 regmask=[allIntButFP] minReg=1 regOptional>
<RefPosition #757 @583 RefTypeBB  BB13 regmask=[] minReg=1>
<RefPosition #758 @586 RefTypeDef <Ivl:140> LCL_VAR BB13 regmask=[rcx] minReg=1>
<RefPosition #759 @587 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #760 @587 RefTypeUse <Ivl:140>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #761 @588 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #762 @588 RefTypeDef <Ivl:141> PUTARG_REG BB13 regmask=[rcx] minReg=1 fixed>
<RefPosition #763 @590 RefTypeFixedReg <Reg:r11>  BB13 regmask=[r11] minReg=1>
<RefPosition #764 @590 RefTypeDef <Ivl:142> CNS_INT BB13 regmask=[r11] minReg=1 fixed>
<RefPosition #765 @591 RefTypeFixedReg <Reg:r11>  BB13 regmask=[r11] minReg=1>
<RefPosition #766 @591 RefTypeUse <Ivl:142>  BB13 regmask=[r11] minReg=1 last fixed>
<RefPosition #767 @592 RefTypeFixedReg <Reg:r11>  BB13 regmask=[r11] minReg=1>
<RefPosition #768 @592 RefTypeDef <Ivl:143> PUTARG_REG BB13 regmask=[r11] minReg=1 fixed>
<RefPosition #769 @597 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #770 @597 RefTypeUse <Ivl:141>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #771 @597 RefTypeFixedReg <Reg:r11>  BB13 regmask=[r11] minReg=1>
<RefPosition #772 @597 RefTypeUse <Ivl:143>  BB13 regmask=[r11] minReg=1 last fixed>
<RefPosition #773 @598 RefTypeKill <Reg:rax>  BB13 regmask=[rax] minReg=1 last>
<RefPosition #774 @598 RefTypeKill <Reg:rcx>  BB13 regmask=[rcx] minReg=1 last>
<RefPosition #775 @598 RefTypeKill <Reg:rdx>  BB13 regmask=[rdx] minReg=1 last>
<RefPosition #776 @598 RefTypeKill <Reg:r8 >  BB13 regmask=[r8] minReg=1 last>
<RefPosition #777 @598 RefTypeKill <Reg:r9 >  BB13 regmask=[r9] minReg=1 last>
<RefPosition #778 @598 RefTypeKill <Reg:r10>  BB13 regmask=[r10] minReg=1 last>
<RefPosition #779 @598 RefTypeKill <Reg:r11>  BB13 regmask=[r11] minReg=1 last>
<RefPosition #780 @605 RefTypeUse <Ivl:2 V02> LCL_VAR BB13 regmask=[rbx] minReg=1>
<RefPosition #781 @606 RefTypeDef <Ivl:144> IND BB13 regmask=[rcx] minReg=1>
<RefPosition #782 @607 RefTypeUse <Ivl:144>  BB13 regmask=[rcx] minReg=1 last>
<RefPosition #783 @608 RefTypeDef <Ivl:29 V35> STORE_LCL_VAR BB13 regmask=[rcx] minReg=1>
<RefPosition #784 @613 RefTypeUse <Ivl:29 V35> LCL_VAR BB13 regmask=[rcx] minReg=1 last>
<RefPosition #785 @614 RefTypeDef <Ivl:145> IND BB13 regmask=[rcx] minReg=1>
<RefPosition #786 @619 RefTypeUse <Ivl:2 V02> LCL_VAR BB13 regmask=[rbx] minReg=1>
<RefPosition #787 @619 RefTypeUse <Ivl:145>  BB13 regmask=[rcx] minReg=1 last>
<RefPosition #788 @624 RefTypeDef <Ivl:146> CNS_INT BB13 regmask=[rcx] minReg=1>
<RefPosition #789 @625 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #790 @625 RefTypeUse <Ivl:146>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #791 @626 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #792 @626 RefTypeDef <Ivl:147> PUTARG_REG BB13 regmask=[rcx] minReg=1 fixed>
<RefPosition #793 @627 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #794 @627 RefTypeUse <Ivl:147>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #795 @628 RefTypeKill <Reg:rax>  BB13 regmask=[rax] minReg=1 last>
<RefPosition #796 @628 RefTypeKill <Reg:rcx>  BB13 regmask=[rcx] minReg=1 last>
<RefPosition #797 @628 RefTypeKill <Reg:rdx>  BB13 regmask=[rdx] minReg=1 last>
<RefPosition #798 @628 RefTypeKill <Reg:r8 >  BB13 regmask=[r8] minReg=1 last>
<RefPosition #799 @628 RefTypeKill <Reg:r9 >  BB13 regmask=[r9] minReg=1 last>
<RefPosition #800 @628 RefTypeKill <Reg:r10>  BB13 regmask=[r10] minReg=1 last>
<RefPosition #801 @628 RefTypeKill <Reg:r11>  BB13 regmask=[r11] minReg=1 last>
<RefPosition #802 @628 RefTypeFixedReg <Reg:rax>  BB13 regmask=[rax] minReg=1>
<RefPosition #803 @628 RefTypeDef <Ivl:148> CALL BB13 regmask=[rax] minReg=1 fixed>
<RefPosition #804 @629 RefTypeUse <Ivl:148>  BB13 regmask=[rax] minReg=1 last>
<RefPosition #805 @630 RefTypeDef <Ivl:25 V29> STORE_LCL_VAR BB13 regmask=[rsi] minReg=1>
<RefPosition #806 @635 RefTypeUse <Ivl:2 V02> LCL_VAR BB13 regmask=[rbx] minReg=1>
<RefPosition #807 @636 RefTypeDef <Ivl:149> IND BB13 regmask=[rdi] minReg=1>
<RefPosition #808 @637 RefTypeUse <Ivl:149>  BB13 regmask=[rdi] minReg=1 last>
<RefPosition #809 @638 RefTypeDef <Ivl:31 V37> STORE_LCL_VAR BB13 regmask=[rdi] minReg=1>
<RefPosition #810 @640 RefTypeDef <Ivl:150> CNS_INT BB13 regmask=[rcx] minReg=1>
<RefPosition #811 @641 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #812 @641 RefTypeUse <Ivl:150>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #813 @642 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #814 @642 RefTypeDef <Ivl:151> PUTARG_REG BB13 regmask=[rcx] minReg=1 fixed>
<RefPosition #815 @643 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #816 @643 RefTypeUse <Ivl:151>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #817 @644 RefTypeKill <Reg:rax>  BB13 regmask=[rax] minReg=1 last>
<RefPosition #818 @644 RefTypeKill <Reg:rcx>  BB13 regmask=[rcx] minReg=1 last>
<RefPosition #819 @644 RefTypeKill <Reg:rdx>  BB13 regmask=[rdx] minReg=1 last>
<RefPosition #820 @644 RefTypeKill <Reg:r8 >  BB13 regmask=[r8] minReg=1 last>
<RefPosition #821 @644 RefTypeKill <Reg:r9 >  BB13 regmask=[r9] minReg=1 last>
<RefPosition #822 @644 RefTypeKill <Reg:r10>  BB13 regmask=[r10] minReg=1 last>
<RefPosition #823 @644 RefTypeKill <Reg:r11>  BB13 regmask=[r11] minReg=1 last>
<RefPosition #824 @644 RefTypeFixedReg <Reg:rax>  BB13 regmask=[rax] minReg=1>
<RefPosition #825 @644 RefTypeDef <Ivl:152> CALL BB13 regmask=[rax] minReg=1 fixed>
<RefPosition #826 @645 RefTypeUse <Ivl:152>  BB13 regmask=[rax] minReg=1 last>
<RefPosition #827 @646 RefTypeDef <Ivl:30 V36> STORE_LCL_VAR BB13 regmask=[r14] minReg=1>
<RefPosition #828 @649 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #829 @649 RefTypeUse <Ivl:30 V36> LCL_VAR BB13 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #830 @650 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #831 @650 RefTypeDef <Ivl:153> PUTARG_REG BB13 regmask=[rcx] minReg=1 fixed>
<RefPosition #832 @652 RefTypeDef <Ivl:154> CNS_INT BB13 regmask=[rdx] minReg=1>
<RefPosition #833 @653 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #834 @653 RefTypeUse <Ivl:154>  BB13 regmask=[rdx] minReg=1 last fixed>
<RefPosition #835 @654 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #836 @654 RefTypeDef <Ivl:155> PUTARG_REG BB13 regmask=[rdx] minReg=1 fixed>
<RefPosition #837 @656 RefTypeDef <Ivl:156> CNS_INT BB13 regmask=[r8] minReg=1>
<RefPosition #838 @657 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #839 @657 RefTypeUse <Ivl:156>  BB13 regmask=[r8] minReg=1 last fixed>
<RefPosition #840 @658 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #841 @658 RefTypeDef <Ivl:157> PUTARG_REG BB13 regmask=[r8] minReg=1 fixed>
<RefPosition #842 @659 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #843 @659 RefTypeUse <Ivl:153>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #844 @659 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #845 @659 RefTypeUse <Ivl:155>  BB13 regmask=[rdx] minReg=1 last fixed>
<RefPosition #846 @659 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #847 @659 RefTypeUse <Ivl:157>  BB13 regmask=[r8] minReg=1 last fixed>
<RefPosition #848 @660 RefTypeKill <Reg:rax>  BB13 regmask=[rax] minReg=1 last>
<RefPosition #849 @660 RefTypeKill <Reg:rcx>  BB13 regmask=[rcx] minReg=1 last>
<RefPosition #850 @660 RefTypeKill <Reg:rdx>  BB13 regmask=[rdx] minReg=1 last>
<RefPosition #851 @660 RefTypeKill <Reg:r8 >  BB13 regmask=[r8] minReg=1 last>
<RefPosition #852 @660 RefTypeKill <Reg:r9 >  BB13 regmask=[r9] minReg=1 last>
<RefPosition #853 @660 RefTypeKill <Reg:r10>  BB13 regmask=[r10] minReg=1 last>
<RefPosition #854 @660 RefTypeKill <Reg:r11>  BB13 regmask=[r11] minReg=1 last>
<RefPosition #855 @663 RefTypeUse <Ivl:25 V29> LCL_VAR BB13 regmask=[rsi] minReg=1>
<RefPosition #856 @664 RefTypeDef <Ivl:158> LEA BB13 regmask=[rcx] minReg=1>
<RefPosition #857 @667 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #858 @667 RefTypeUse <Ivl:158>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #859 @667 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #860 @667 RefTypeUse <Ivl:30 V36> LCL_VAR BB13 regmask=[rdx] minReg=1 last copy fixed>
<RefPosition #861 @668 RefTypeKill <Reg:rax>  BB13 regmask=[rax] minReg=1 last>
<RefPosition #862 @668 RefTypeKill <Reg:rcx>  BB13 regmask=[rcx] minReg=1 last>
<RefPosition #863 @668 RefTypeKill <Reg:rdx>  BB13 regmask=[rdx] minReg=1 last>
<RefPosition #864 @668 RefTypeKill <Reg:r8 >  BB13 regmask=[r8] minReg=1 last>
<RefPosition #865 @668 RefTypeKill <Reg:r9 >  BB13 regmask=[r9] minReg=1 last>
<RefPosition #866 @668 RefTypeKill <Reg:r10>  BB13 regmask=[r10] minReg=1 last>
<RefPosition #867 @668 RefTypeKill <Reg:r11>  BB13 regmask=[r11] minReg=1 last>
<RefPosition #868 @668 RefTypeKill <Reg:mm0>  BB13 regmask=[mm0] minReg=1 last>
<RefPosition #869 @668 RefTypeKill <Reg:mm1>  BB13 regmask=[mm1] minReg=1 last>
<RefPosition #870 @668 RefTypeKill <Reg:mm2>  BB13 regmask=[mm2] minReg=1 last>
<RefPosition #871 @668 RefTypeKill <Reg:mm3>  BB13 regmask=[mm3] minReg=1 last>
<RefPosition #872 @668 RefTypeKill <Reg:mm4>  BB13 regmask=[mm4] minReg=1 last>
<RefPosition #873 @668 RefTypeKill <Reg:mm5>  BB13 regmask=[mm5] minReg=1 last>
<RefPosition #874 @675 RefTypeUse <Ivl:25 V29> LCL_VAR BB13 regmask=[rsi] minReg=1>
<RefPosition #875 @675 RefTypeUse <Ivl:31 V37> LCL_VAR BB13 regmask=[rdi] minReg=1 last>
<RefPosition #876 @681 RefTypeUse <Ivl:2 V02> LCL_VAR BB13 regmask=[rbx] minReg=1>
<RefPosition #877 @682 RefTypeDef <Ivl:159> LEA BB13 regmask=[rcx] minReg=1>
<RefPosition #878 @685 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #879 @685 RefTypeUse <Ivl:159>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #880 @685 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #881 @685 RefTypeUse <Ivl:25 V29> LCL_VAR BB13 regmask=[rdx] minReg=1 last copy fixed>
<RefPosition #882 @686 RefTypeKill <Reg:rax>  BB13 regmask=[rax] minReg=1 last>
<RefPosition #883 @686 RefTypeKill <Reg:rcx>  BB13 regmask=[rcx] minReg=1 last>
<RefPosition #884 @686 RefTypeKill <Reg:rdx>  BB13 regmask=[rdx] minReg=1 last>
<RefPosition #885 @686 RefTypeKill <Reg:r8 >  BB13 regmask=[r8] minReg=1 last>
<RefPosition #886 @686 RefTypeKill <Reg:r9 >  BB13 regmask=[r9] minReg=1 last>
<RefPosition #887 @686 RefTypeKill <Reg:r10>  BB13 regmask=[r10] minReg=1 last>
<RefPosition #888 @686 RefTypeKill <Reg:r11>  BB13 regmask=[r11] minReg=1 last>
<RefPosition #889 @686 RefTypeKill <Reg:mm0>  BB13 regmask=[mm0] minReg=1 last>
<RefPosition #890 @686 RefTypeKill <Reg:mm1>  BB13 regmask=[mm1] minReg=1 last>
<RefPosition #891 @686 RefTypeKill <Reg:mm2>  BB13 regmask=[mm2] minReg=1 last>
<RefPosition #892 @686 RefTypeKill <Reg:mm3>  BB13 regmask=[mm3] minReg=1 last>
<RefPosition #893 @686 RefTypeKill <Reg:mm4>  BB13 regmask=[mm4] minReg=1 last>
<RefPosition #894 @686 RefTypeKill <Reg:mm5>  BB13 regmask=[mm5] minReg=1 last>
<RefPosition #895 @690 RefTypeDef <Ivl:160> CNS_INT BB13 regmask=[rsi] minReg=1>
<RefPosition #896 @691 RefTypeUse <Ivl:160>  BB13 regmask=[rsi] minReg=1 last>
<RefPosition #897 @692 RefTypeDef <Ivl:7 V10> STORE_LCL_VAR BB13 regmask=[rsi] minReg=1>
<RefPosition #898 @693 RefTypeBB  BB17 regmask=[] minReg=1>
<RefPosition #899 @699 RefTypeUse <Ivl:2 V02> LCL_VAR BB17 regmask=[rbx] minReg=1>
<RefPosition #900 @700 RefTypeDef <Ivl:161> IND BB17 regmask=[rcx] minReg=1>
<RefPosition #901 @701 RefTypeUse <Ivl:161>  BB17 regmask=[rcx] minReg=1 last>
<RefPosition #902 @702 RefTypeDef <Ivl:33 V39> STORE_LCL_VAR BB17 regmask=[rcx] minReg=1>
<RefPosition #903 @707 RefTypeUse <Ivl:33 V39> LCL_VAR BB17 regmask=[rcx] minReg=1 regOptional>
<RefPosition #904 @711 RefTypeBB  BB18 regmask=[] minReg=1>
<RefPosition #905 @715 RefTypeUse <Ivl:33 V39> LCL_VAR BB18 regmask=[rcx] minReg=1 last>
<RefPosition #906 @716 RefTypeDef <Ivl:32 V38> STORE_LCL_VAR BB18 regmask=[rcx] minReg=1>
<RefPosition #907 @717 RefTypeBB  BB19 regmask=[] minReg=1>
<RefPosition #908 @722 RefTypeDef <Ivl:32 V38> STORE_LCL_VAR BB19 regmask=[rcx] minReg=1>
<RefPosition #909 @723 RefTypeBB  BB20 regmask=[] minReg=1>
<RefPosition #910 @729 RefTypeUse <Ivl:7 V10> LCL_VAR BB20 regmask=[rsi] minReg=1>
<RefPosition #911 @729 RefTypeUse <Ivl:32 V38> LCL_VAR BB20 regmask=[rcx] minReg=1 last regOptional>
<RefPosition #912 @733 RefTypeBB  BB16 regmask=[] minReg=1>
<RefPosition #913 @739 RefTypeFixedReg <Reg:rcx>  BB16 regmask=[rcx] minReg=1>
<RefPosition #914 @739 RefTypeUse <Ivl:2 V02> LCL_VAR BB16 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #915 @740 RefTypeFixedReg <Reg:rcx>  BB16 regmask=[rcx] minReg=1>
<RefPosition #916 @740 RefTypeDef <Ivl:162> PUTARG_REG BB16 regmask=[rcx] minReg=1 fixed>
<RefPosition #917 @741 RefTypeFixedReg <Reg:rcx>  BB16 regmask=[rcx] minReg=1>
<RefPosition #918 @741 RefTypeUse <Ivl:162>  BB16 regmask=[rcx] minReg=1 last fixed>
<RefPosition #919 @742 RefTypeKill <Reg:rax>  BB16 regmask=[rax] minReg=1 last>
<RefPosition #920 @742 RefTypeKill <Reg:rcx>  BB16 regmask=[rcx] minReg=1 last>
<RefPosition #921 @742 RefTypeKill <Reg:rdx>  BB16 regmask=[rdx] minReg=1 last>
<RefPosition #922 @742 RefTypeKill <Reg:r8 >  BB16 regmask=[r8] minReg=1 last>
<RefPosition #923 @742 RefTypeKill <Reg:r9 >  BB16 regmask=[r9] minReg=1 last>
<RefPosition #924 @742 RefTypeKill <Reg:r10>  BB16 regmask=[r10] minReg=1 last>
<RefPosition #925 @742 RefTypeKill <Reg:r11>  BB16 regmask=[r11] minReg=1 last>
<RefPosition #926 @749 RefTypeUse <Ivl:7 V10> LCL_VAR BB16 regmask=[rsi] minReg=1 last>
<RefPosition #927 @750 RefTypeDef <Ivl:163> ADD BB16 regmask=[rsi] minReg=1>
<RefPosition #928 @751 RefTypeUse <Ivl:163>  BB16 regmask=[rsi] minReg=1 last>
<RefPosition #929 @752 RefTypeDef <Ivl:7 V10> STORE_LCL_VAR BB16 regmask=[rsi] minReg=1>
<RefPosition #930 @753 RefTypeExpUse <Ivl:7 V10>  BB16 regmask=[allIntButFP] minReg=1 regOptional>
<RefPosition #931 @753 RefTypeBB  BB21 regmask=[] minReg=1>
<RefPosition #932 @761 RefTypeUse <Ivl:2 V02> LCL_VAR BB21 regmask=[rbx] minReg=1 last>
<RefPosition #933 @762 RefTypeDef <Ivl:164> IND BB21 regmask=[rax] minReg=1>
<RefPosition #934 @763 RefTypeUse <Ivl:164>  BB21 regmask=[rax] minReg=1 last>
<RefPosition #935 @764 RefTypeDef <Ivl:34 V40> STORE_LCL_VAR BB21 regmask=[rax] minReg=1>
<RefPosition #936 @769 RefTypeUse <Ivl:34 V40> LCL_VAR BB21 regmask=[rax] minReg=1 last>
<RefPosition #937 @770 RefTypeDef <Ivl:165> IND BB21 regmask=[rax] minReg=1>
<RefPosition #938 @771 RefTypeFixedReg <Reg:rax>  BB21 regmask=[rax] minReg=1>
<RefPosition #939 @771 RefTypeUse <Ivl:165>  BB21 regmask=[rax] minReg=1 last fixed>
<RefPosition #940 @773 RefTypeBB  BB22 regmask=[] minReg=1>
<RefPosition #941 @785 RefTypeBB  BB23 regmask=[] minReg=1>
<RefPosition #942 @790 RefTypeDef <Ivl:166> LCL_VAR BB23 regmask=[rcx] minReg=1>
<RefPosition #943 @791 RefTypeFixedReg <Reg:rcx>  BB23 regmask=[rcx] minReg=1>
<RefPosition #944 @791 RefTypeUse <Ivl:166>  BB23 regmask=[rcx] minReg=1 last fixed>
<RefPosition #945 @792 RefTypeFixedReg <Reg:rcx>  BB23 regmask=[rcx] minReg=1>
<RefPosition #946 @792 RefTypeDef <Ivl:167> PUTARG_REG BB23 regmask=[rcx] minReg=1 fixed>
<RefPosition #947 @794 RefTypeFixedReg <Reg:r11>  BB23 regmask=[r11] minReg=1>
<RefPosition #948 @794 RefTypeDef <Ivl:168> CNS_INT BB23 regmask=[r11] minReg=1 fixed>
<RefPosition #949 @795 RefTypeFixedReg <Reg:r11>  BB23 regmask=[r11] minReg=1>
<RefPosition #950 @795 RefTypeUse <Ivl:168>  BB23 regmask=[r11] minReg=1 last fixed>
<RefPosition #951 @796 RefTypeFixedReg <Reg:r11>  BB23 regmask=[r11] minReg=1>
<RefPosition #952 @796 RefTypeDef <Ivl:169> PUTARG_REG BB23 regmask=[r11] minReg=1 fixed>
<RefPosition #953 @801 RefTypeFixedReg <Reg:rcx>  BB23 regmask=[rcx] minReg=1>
<RefPosition #954 @801 RefTypeUse <Ivl:167>  BB23 regmask=[rcx] minReg=1 last fixed>
<RefPosition #955 @801 RefTypeFixedReg <Reg:r11>  BB23 regmask=[r11] minReg=1>
<RefPosition #956 @801 RefTypeUse <Ivl:169>  BB23 regmask=[r11] minReg=1 last fixed>
<RefPosition #957 @802 RefTypeKill <Reg:rax>  BB23 regmask=[rax] minReg=1 last>
<RefPosition #958 @802 RefTypeKill <Reg:rcx>  BB23 regmask=[rcx] minReg=1 last>
<RefPosition #959 @802 RefTypeKill <Reg:rdx>  BB23 regmask=[rdx] minReg=1 last>
<RefPosition #960 @802 RefTypeKill <Reg:r8 >  BB23 regmask=[r8] minReg=1 last>
<RefPosition #961 @802 RefTypeKill <Reg:r9 >  BB23 regmask=[r9] minReg=1 last>
<RefPosition #962 @802 RefTypeKill <Reg:r10>  BB23 regmask=[r10] minReg=1 last>
<RefPosition #963 @802 RefTypeKill <Reg:r11>  BB23 regmask=[r11] minReg=1 last>
<RefPosition #964 @803 RefTypeBB  BB24 regmask=[] minReg=1>
<RefPosition #965 @809 RefTypeBB  BB25 regmask=[] minReg=1>
<RefPosition #966 @812 RefTypeKill <Reg:rax>  BB25 regmask=[rax] minReg=1 last>
<RefPosition #967 @812 RefTypeKill <Reg:rcx>  BB25 regmask=[rcx] minReg=1 last>
<RefPosition #968 @812 RefTypeKill <Reg:rdx>  BB25 regmask=[rdx] minReg=1 last>
<RefPosition #969 @812 RefTypeKill <Reg:r8 >  BB25 regmask=[r8] minReg=1 last>
<RefPosition #970 @812 RefTypeKill <Reg:r9 >  BB25 regmask=[r9] minReg=1 last>
<RefPosition #971 @812 RefTypeKill <Reg:r10>  BB25 regmask=[r10] minReg=1 last>
<RefPosition #972 @812 RefTypeKill <Reg:r11>  BB25 regmask=[r11] minReg=1 last>

VAR REFPOSITIONS AFTER ALLOCATION
--- V00  (Interval 0)
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00>  BB00 regmask=[rsi] minReg=1 regOptional>
<RefPosition #380 @271 RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rcx] minReg=1 last copy fixed>
--- V01  (Interval 1)
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V01>  BB00 regmask=[rdi] minReg=1 regOptional>
<RefPosition #28  @27  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[rdx] minReg=1 last copy fixed>
--- V02  (Interval 2)
<RefPosition #22  @18  RefTypeDef <Ivl:2 V02> STORE_LCL_VAR BB01 regmask=[rbx] minReg=1>
<RefPosition #23  @23  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[rbx] minReg=1>
<RefPosition #43  @37  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[rbx] minReg=1>
<RefPosition #46  @47  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[rbx] minReg=1>
<RefPosition #104 @87  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[rbx] minReg=1>
<RefPosition #186 @127 RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[rbx] minReg=1>
<RefPosition #206 @141 RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[rbx] minReg=1>
<RefPosition #246 @167 RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[rbx] minReg=1>
<RefPosition #563 @435 RefTypeUse <Ivl:2 V02> LCL_VAR BB06 regmask=[rbx] minReg=1>
<RefPosition #567 @445 RefTypeUse <Ivl:2 V02> LCL_VAR BB06 regmask=[rbx] minReg=1>
<RefPosition #602 @485 RefTypeUse <Ivl:2 V02> LCL_VAR BB07 regmask=[rdx] minReg=1 copy fixed>
<RefPosition #619 @497 RefTypeUse <Ivl:2 V02> LCL_VAR BB07 regmask=[rbx] minReg=1>
<RefPosition #664 @523 RefTypeUse <Ivl:2 V02> LCL_VAR BB09 regmask=[rdx] minReg=1 copy fixed>
<RefPosition #780 @605 RefTypeUse <Ivl:2 V02> LCL_VAR BB13 regmask=[rbx] minReg=1>
<RefPosition #786 @619 RefTypeUse <Ivl:2 V02> LCL_VAR BB13 regmask=[rbx] minReg=1>
<RefPosition #806 @635 RefTypeUse <Ivl:2 V02> LCL_VAR BB13 regmask=[rbx] minReg=1>
<RefPosition #876 @681 RefTypeUse <Ivl:2 V02> LCL_VAR BB13 regmask=[rbx] minReg=1>
<RefPosition #899 @699 RefTypeUse <Ivl:2 V02> LCL_VAR BB17 regmask=[rbx] minReg=1>
<RefPosition #914 @739 RefTypeUse <Ivl:2 V02> LCL_VAR BB16 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #932 @761 RefTypeUse <Ivl:2 V02> LCL_VAR BB21 regmask=[rbx] minReg=1 last>
--- V03  (Interval 3)
<RefPosition #319 @210 RefTypeDef <Ivl:3 V03> STORE_LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #320 @219 RefTypeUse <Ivl:3 V03> LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #334 @231 RefTypeUse <Ivl:3 V03> LCL_VAR BB01 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #479 @347 RefTypeUse <Ivl:3 V03> LCL_VAR BB03 regmask=[rdx] minReg=1 copy fixed>
<RefPosition #754 @583 RefTypeExpUse <Ivl:3 V03>  BB09 regmask=[allIntButFP] minReg=1 regOptional>
--- V04  (Interval 4)
<RefPosition #362 @244 RefTypeDef <Ivl:4 V04> STORE_LCL_VAR BB01 regmask=[r14] minReg=1>
<RefPosition #497 @363 RefTypeUse <Ivl:4 V04> LCL_VAR BB03 regmask=[r14] minReg=1 regOptional>
<RefPosition #755 @583 RefTypeExpUse <Ivl:4 V04>  BB09 regmask=[allIntButFP] minReg=1 regOptional>
--- V05  (Interval 5)
<RefPosition #378 @266 RefTypeDef <Ivl:5 V05> STORE_LCL_VAR BB01 regmask=[r15] minReg=1>
<RefPosition #518 @399 RefTypeUse <Ivl:5 V05> LCL_VAR BB05 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #756 @583 RefTypeExpUse <Ivl:5 V05>  BB09 regmask=[allIntButFP] minReg=1 regOptional>
--- V06
--- V07  (Interval 6)
<RefPosition #455 @328 RefTypeDef <Ivl:6 V07> STORE_LCL_VAR BB03 regmask=[rsi] minReg=1>
<RefPosition #503 @379 RefTypeUse <Ivl:6 V07> LCL_VAR BB04 regmask=[rsi] minReg=1 last>
<RefPosition #522 @403 RefTypeUse <Ivl:6 V07> LCL_VAR BB05 regmask=[r8] minReg=1 last copy fixed>
--- V08
--- V09
--- V10  (Interval 7)
<RefPosition #897 @692 RefTypeDef <Ivl:7 V10> STORE_LCL_VAR BB13 regmask=[rsi] minReg=1>
<RefPosition #910 @729 RefTypeUse <Ivl:7 V10> LCL_VAR BB20 regmask=[rsi] minReg=1>
<RefPosition #926 @749 RefTypeUse <Ivl:7 V10> LCL_VAR BB16 regmask=[rsi] minReg=1 last>
<RefPosition #929 @752 RefTypeDef <Ivl:7 V10> STORE_LCL_VAR BB16 regmask=[rsi] minReg=1>
<RefPosition #930 @753 RefTypeExpUse <Ivl:7 V10>  BB16 regmask=[allIntButFP] minReg=1 regOptional>
--- V11
--- V12  (Interval 8)
<RefPosition #20  @12  RefTypeDef <Ivl:8 V12> STORE_LCL_VAR BB01 regmask=[rbx] minReg=1>
<RefPosition #21  @17  RefTypeUse <Ivl:8 V12> LCL_VAR BB01 regmask=[rbx] minReg=1 last>
--- V13  (Interval 9)
<RefPosition #65  @58  RefTypeDef <Ivl:9 V13> STORE_LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #85  @77  RefTypeUse <Ivl:9 V13> LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #109 @91  RefTypeUse <Ivl:9 V13> LCL_VAR BB01 regmask=[rdx] minReg=1 last copy fixed>
--- V14  (Interval 10)
<RefPosition #140 @102 RefTypeDef <Ivl:10 V14> STORE_LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #167 @119 RefTypeUse <Ivl:10 V14> LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #191 @131 RefTypeUse <Ivl:10 V14> LCL_VAR BB01 regmask=[rdx] minReg=1 last copy fixed>
--- V15  (Interval 11)
<RefPosition #225 @152 RefTypeDef <Ivl:11 V15> STORE_LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #227 @155 RefTypeUse <Ivl:11 V15> LCL_VAR BB01 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #251 @171 RefTypeUse <Ivl:11 V15> LCL_VAR BB01 regmask=[rdx] minReg=1 last copy fixed>
--- V16  (Interval 12)
<RefPosition #473 @338 RefTypeDef <Ivl:12 V16> STORE_LCL_VAR BB03 regmask=[r12] minReg=1>
<RefPosition #474 @343 RefTypeUse <Ivl:12 V16> LCL_VAR BB03 regmask=[r12] minReg=1>
<RefPosition #493 @351 RefTypeUse <Ivl:12 V16> LCL_VAR BB03 regmask=[r12] minReg=1 last>
--- V17  (Interval 13)
<RefPosition #494 @352 RefTypeDef <Ivl:13 V17> STORE_LCL_VAR BB03 regmask=[r12] minReg=1>
<RefPosition #495 @355 RefTypeUse <Ivl:13 V17> LCL_VAR BB03 regmask=[r12] minReg=1 last>
--- V18  (Interval 14)
<RefPosition #496 @356 RefTypeDef <Ivl:14 V18> STORE_LCL_VAR BB03 regmask=[r12] minReg=1>
<RefPosition #499 @371 RefTypeUse <Ivl:14 V18> LCL_VAR BB04 regmask=[r12] minReg=1 last>
<RefPosition #506 @385 RefTypeUse <Ivl:14 V18> LCL_VAR BB05 regmask=[r12] minReg=1 last>
--- V19  (Interval 15)
<RefPosition #500 @372 RefTypeDef <Ivl:15 V19> STORE_LCL_VAR BB04 regmask=[r12] minReg=1>
<RefPosition #501 @375 RefTypeUse <Ivl:15 V19> LCL_VAR BB04 regmask=[r12] minReg=1>
<RefPosition #507 @386 RefTypeDef <Ivl:15 V19> STORE_LCL_VAR BB05 regmask=[r12] minReg=1>
<RefPosition #508 @389 RefTypeUse <Ivl:15 V19> LCL_VAR BB05 regmask=[r12] minReg=1>
<RefPosition #562 @427 RefTypeUse <Ivl:15 V19> LCL_VAR BB06 regmask=[r12] minReg=1>
<RefPosition #573 @455 RefTypeUse <Ivl:15 V19> LCL_VAR BB06 regmask=[r12] minReg=1 last>
--- V20  (Interval 16)
<RefPosition #502 @376 RefTypeDef <Ivl:16 V20> STORE_LCL_VAR BB04 regmask=[r13] minReg=1>
<RefPosition #509 @390 RefTypeDef <Ivl:16 V20> STORE_LCL_VAR BB05 regmask=[r13] minReg=1>
<RefPosition #543 @413 RefTypeUse <Ivl:16 V20> LCL_VAR BB06 regmask=[r13] minReg=1 last>
--- V21  (Interval 17)
<RefPosition #504 @380 RefTypeDef <Ivl:17 V21> STORE_LCL_VAR BB04 regmask=[rdx] minReg=1>
<RefPosition #541 @408 RefTypeDef <Ivl:17 V21> STORE_LCL_VAR BB05 regmask=[rdx] minReg=1>
<RefPosition #548 @417 RefTypeUse <Ivl:17 V21> LCL_VAR BB06 regmask=[rdx] minReg=1 last fixed>
--- V22  (Interval 18)
<RefPosition #570 @448 RefTypeDef <Ivl:18 V22> STORE_LCL_VAR BB06 regmask=[r13] minReg=1>
<RefPosition #575 @459 RefTypeUse <Ivl:18 V22> LCL_VAR BB06 regmask=[r13] minReg=1 last>
--- V23  (Interval 19)
<RefPosition #566 @438 RefTypeDef <Ivl:19 V23> STORE_LCL_VAR BB06 regmask=[rsi] minReg=1>
<RefPosition #571 @451 RefTypeUse <Ivl:19 V23> LCL_VAR BB06 regmask=[rsi] minReg=1 last>
--- V24  (Interval 20)
<RefPosition #572 @452 RefTypeDef <Ivl:20 V24> STORE_LCL_VAR BB06 regmask=[rsi] minReg=1>
<RefPosition #715 @557 RefTypeUse <Ivl:20 V24> LCL_VAR BB09 regmask=[rcx] minReg=1 last copy fixed>
--- V25  (Interval 21)
<RefPosition #574 @456 RefTypeDef <Ivl:21 V25> STORE_LCL_VAR BB06 regmask=[r12] minReg=1>
<RefPosition #682 @537 RefTypeUse <Ivl:21 V25> LCL_VAR BB09 regmask=[rcx] minReg=1 last copy fixed>
--- V26  (Interval 22)
<RefPosition #576 @460 RefTypeDef <Ivl:22 V26> STORE_LCL_VAR BB06 regmask=[r13] minReg=1>
<RefPosition #577 @465 RefTypeUse <Ivl:22 V26> LCL_VAR BB06 regmask=[r13] minReg=1 regOptional>
<RefPosition #639 @506 RefTypeDef <Ivl:22 V26> STORE_LCL_VAR BB07 regmask=[r13] minReg=1>
<RefPosition #686 @541 RefTypeUse <Ivl:22 V26> LCL_VAR BB09 regmask=[rdx] minReg=1 last copy fixed>
--- V27  (Interval 23)
<RefPosition #658 @516 RefTypeDef <Ivl:23 V27> STORE_LCL_VAR BB09 regmask=[rax] minReg=1>
<RefPosition #659 @519 RefTypeUse <Ivl:23 V27> LCL_VAR BB09 regmask=[rax] minReg=1 spillAfter>
<RefPosition #679 @531 RefTypeUse <Ivl:23 V27> LCL_VAR BB09 regmask=[r8] minReg=1 reload>
<RefPosition #690 @545 RefTypeUse <Ivl:23 V27> LCL_VAR BB09 regmask=[r8] minReg=1 last fixed>
--- V28  (Interval 24)
<RefPosition #596 @478 RefTypeDef <Ivl:24 V28> STORE_LCL_VAR BB07 regmask=[r13] minReg=1>
<RefPosition #597 @481 RefTypeUse <Ivl:24 V28> LCL_VAR BB07 regmask=[r13] minReg=1>
<RefPosition #617 @493 RefTypeUse <Ivl:24 V28> LCL_VAR BB07 regmask=[r13] minReg=1>
<RefPosition #624 @501 RefTypeUse <Ivl:24 V28> LCL_VAR BB07 regmask=[rdx] minReg=1 copy fixed>
<RefPosition #638 @505 RefTypeUse <Ivl:24 V28> LCL_VAR BB07 regmask=[r13] minReg=1 last>
--- V29  (Interval 25)
<RefPosition #805 @630 RefTypeDef <Ivl:25 V29> STORE_LCL_VAR BB13 regmask=[rsi] minReg=1>
<RefPosition #855 @663 RefTypeUse <Ivl:25 V29> LCL_VAR BB13 regmask=[rsi] minReg=1>
<RefPosition #874 @675 RefTypeUse <Ivl:25 V29> LCL_VAR BB13 regmask=[rsi] minReg=1>
<RefPosition #881 @685 RefTypeUse <Ivl:25 V29> LCL_VAR BB13 regmask=[rdx] minReg=1 last copy fixed>
--- V30  (Interval 26)
<RefPosition #83  @66  RefTypeDef <Ivl:26 V30> STORE_LCL_VAR BB01 regmask=[rax] minReg=1>
<RefPosition #84  @73  RefTypeUse <Ivl:26 V30> LCL_VAR BB01 regmask=[rax] minReg=1>
<RefPosition #90  @81  RefTypeUse <Ivl:26 V30> LCL_VAR BB01 regmask=[rdx] minReg=1 last copy fixed>
--- V31  (Interval 27)
<RefPosition #275 @176 RefTypeDef <Ivl:27 V31> STORE_LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #276 @179 RefTypeUse <Ivl:27 V31> LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #278 @183 RefTypeUse <Ivl:27 V31> LCL_VAR BB01 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #297 @195 RefTypeUse <Ivl:27 V31> LCL_VAR BB01 regmask=[rdi] minReg=1 last>
--- V32  (Interval 28)
<RefPosition #315 @202 RefTypeDef <Ivl:28 V32> STORE_LCL_VAR BB01 regmask=[rax] minReg=1>
<RefPosition #316 @207 RefTypeUse <Ivl:28 V32> LCL_VAR BB01 regmask=[rax] minReg=1 last>
--- V33
--- V34
--- V35  (Interval 29)
<RefPosition #783 @608 RefTypeDef <Ivl:29 V35> STORE_LCL_VAR BB13 regmask=[rcx] minReg=1>
<RefPosition #784 @613 RefTypeUse <Ivl:29 V35> LCL_VAR BB13 regmask=[rcx] minReg=1 last>
--- V36  (Interval 30)
<RefPosition #827 @646 RefTypeDef <Ivl:30 V36> STORE_LCL_VAR BB13 regmask=[r14] minReg=1>
<RefPosition #829 @649 RefTypeUse <Ivl:30 V36> LCL_VAR BB13 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #860 @667 RefTypeUse <Ivl:30 V36> LCL_VAR BB13 regmask=[rdx] minReg=1 last copy fixed>
--- V37  (Interval 31)
<RefPosition #809 @638 RefTypeDef <Ivl:31 V37> STORE_LCL_VAR BB13 regmask=[rdi] minReg=1>
<RefPosition #875 @675 RefTypeUse <Ivl:31 V37> LCL_VAR BB13 regmask=[rdi] minReg=1 last>
--- V38  (Interval 32)
<RefPosition #906 @716 RefTypeDef <Ivl:32 V38> STORE_LCL_VAR BB18 regmask=[rcx] minReg=1>
<RefPosition #908 @722 RefTypeDef <Ivl:32 V38> STORE_LCL_VAR BB19 regmask=[rcx] minReg=1>
<RefPosition #911 @729 RefTypeUse <Ivl:32 V38> LCL_VAR BB20 regmask=[rcx] minReg=1 last regOptional>
--- V39  (Interval 33)
<RefPosition #902 @702 RefTypeDef <Ivl:33 V39> STORE_LCL_VAR BB17 regmask=[rcx] minReg=1>
<RefPosition #903 @707 RefTypeUse <Ivl:33 V39> LCL_VAR BB17 regmask=[rcx] minReg=1 regOptional>
<RefPosition #905 @715 RefTypeUse <Ivl:33 V39> LCL_VAR BB18 regmask=[rcx] minReg=1 last>
--- V40  (Interval 34)
<RefPosition #935 @764 RefTypeDef <Ivl:34 V40> STORE_LCL_VAR BB21 regmask=[rax] minReg=1>
<RefPosition #936 @769 RefTypeUse <Ivl:34 V40> LCL_VAR BB21 regmask=[rax] minReg=1 last>
--- V41  (Interval 35)
<RefPosition #373 @248 RefTypeDef <Ivl:35 V41> STORE_LCL_VAR BB01 regmask=[rax] minReg=1>
<RefPosition #374 @257 RefTypeUse <Ivl:35 V41> LCL_VAR BB01 regmask=[rax] minReg=1>
<RefPosition #375 @263 RefTypeUse <Ivl:35 V41> LCL_VAR BB01 regmask=[rax] minReg=1 last>
--- V42  (Interval 36)
<RefPosition #709 @550 RefTypeDef <Ivl:36 V42> STORE_LCL_VAR BB09 regmask=[rdx] minReg=1>
<RefPosition #711 @553 RefTypeUse <Ivl:36 V42> LCL_VAR BB09 regmask=[rdx] minReg=1 last fixed>
--- V43

Active intervals at end of allocation:

-----------------------
RESOLVING BB BOUNDARIES
-----------------------
Resolution Candidates: {V00 V01 V02 V03 V04 V05 V07 V10 V18 V19 V20 V21 V24 V25 V26 V38 V39}
Has Critical Edges

Prior to Resolution

BB01
use def in out
{V00 V01}
{V02 V03 V04 V05 V06 V12 V13 V14 V15 V30 V31 V32 V41}
{V00 V01}
{V02 V03 V04 V05 V06}
Var=Reg beg of BB01: V00=rsi V01=rdi 
Var=Reg end of BB01: V02=rbx V03=rdi V04=r14 V05=r15 

BB02
use def in out
{V06}
{}
{V02 V03 V04 V05 V06}
{V02 V03 V04 V05 V06}
Var=Reg beg of BB02: V02=rbx V03=rdi V04=r14 V05=r15 
Var=Reg end of BB02: V02=rbx V03=rdi V04=r14 V05=r15 

BB03
use def in out
{V03 V04 V06}
{V07 V16 V17 V18}
{V02 V03 V04 V05 V06}
{V02 V03 V04 V05 V06 V07 V18}
Var=Reg beg of BB03: V02=rbx V03=rdi V04=r14 V05=r15 
Var=Reg end of BB03: V02=rbx V07=rsi V18=r12 V03=rdi V04=r14 V05=r15 

BB04
use def in out
{V07 V18}
{V19 V20 V21}
{V02 V03 V04 V05 V06 V07 V18}
{V02 V03 V04 V05 V06 V19 V20 V21}
Var=Reg beg of BB04: V02=rbx V07=rsi V18=r12 V03=rdi V04=r14 V05=r15 
Var=Reg end of BB04: V02=rbx V19=r12 V20=r13 V21=rdx V03=rdi V04=r14 V05=r15 

BB05
use def in out
{V05 V07 V18}
{V19 V20 V21}
{V02 V03 V04 V05 V06 V07 V18}
{V02 V03 V04 V05 V06 V19 V20 V21}
Var=Reg beg of BB05: V02=rbx V07=rsi V18=r12 V03=rdi V04=r14 V05=r15 
Var=Reg end of BB05: V02=rbx V19=r12 V20=r13 V21=rdx V03=rdi V04=r14 V05=r15 

BB06
use def in out
{V02 V19 V20 V21}
{V22 V23 V24 V25 V26}
{V02 V03 V04 V05 V06 V19 V20 V21}
{V02 V03 V04 V05 V06 V24 V25 V26}
Var=Reg beg of BB06: V02=rbx V19=r12 V20=r13 V21=rdx V03=rdi V04=r14 V05=r15 
Var=Reg end of BB06: V02=rbx V26=r13 V24=rsi V25=r12 V03=rdi V04=r14 V05=r15 

BB07
use def in out
{V02}
{V26 V28}
{V02 V03 V04 V05 V06 V24 V25}
{V02 V03 V04 V05 V06 V24 V25 V26}
Var=Reg beg of BB07: V02=rbx V24=rsi V25=r12 V03=rdi V04=r14 V05=r15 
Var=Reg end of BB07: V02=rbx V26=r13 V24=rsi V25=r12 V03=rdi V04=r14 V05=r15 

BB09
use def in out
{V02 V06 V24 V25 V26}
{V27 V42}
{V02 V03 V04 V05 V06 V24 V25 V26}
{V02 V03 V04 V05 V06}
Var=Reg beg of BB09: V02=rbx V26=r13 V24=rsi V25=r12 V03=rdi V04=r14 V05=r15 
Var=Reg end of BB09: V02=rbx V03=rdi V04=r14 V05=r15 

BB13
use def in out
{V02 V06}
{V10 V29 V35 V36 V37}
{V02 V06}
{V02 V10}
Var=Reg beg of BB13: V02=rbx 
Var=Reg end of BB13: V02=rbx V10=rsi 

BB16
use def in out
{V02 V10}
{V10}
{V02 V10}
{V02 V10}
Var=Reg beg of BB16: V02=rbx V10=rsi 
Var=Reg end of BB16: V02=rbx V10=rsi 

BB17
use def in out
{V02}
{V39}
{V02 V10}
{V02 V10 V39}
Var=Reg beg of BB17: V02=rbx V10=rsi 
Var=Reg end of BB17: V02=rbx V39=rcx V10=rsi 

BB18
use def in out
{V39}
{V38}
{V02 V10 V39}
{V02 V10 V38}
Var=Reg beg of BB18: V02=rbx V39=rcx V10=rsi 
Var=Reg end of BB18: V02=rbx V10=rsi V38=rcx 

BB19
use def in out
{}
{V38}
{V02 V10}
{V02 V10 V38}
Var=Reg beg of BB19: V02=rbx V10=rsi 
Var=Reg end of BB19: V02=rbx V10=rsi V38=rcx 

BB20
use def in out
{V10 V38}
{}
{V02 V10 V38}
{V02 V10}
Var=Reg beg of BB20: V02=rbx V10=rsi V38=rcx 
Var=Reg end of BB20: V02=rbx V10=rsi 

BB21
use def in out
{V02}
{V40}
{V02}
{}
Var=Reg beg of BB21: V02=rbx 
Var=Reg end of BB21: none

BB25
use def in out
{}
{}
{}
{}
Var=Reg beg of BB25: none
Var=Reg end of BB25: none

BB22  EH flow in
use def in out
{V06}
{}
{V06}
{V06}
Var=Reg beg of BB22: none
Var=Reg end of BB22: none

BB23
use def in out
{V06}
{}
{V06}
{}
Var=Reg beg of BB23: none
Var=Reg end of BB23: none

BB24  EH flow out
use def in out
{}
{}
{}
{}
Var=Reg beg of BB24: none
Var=Reg end of BB24: none


RESOLVING EDGES
  Set V00 argument initial register to rsi
  Set V01 argument initial register to rdi
Trees after linear scan register allocator (LSRA)

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck LIR 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB13 ( cond ) T0      try {       keep i try label hascall gcsafe LIR 
BB03 [0002]  2  0    BB02,BB09             4     0 [072..08B)-> BB05 ( cond ) T0                  i Loop label target hascall gcsafe newobj bwd bwd-target LIR 
BB04 [0003]  1  0    BB03                  2     0 [08B..08F)-> BB06 (always) T0                  i gcsafe bwd LIR 
BB05 [0004]  1  0    BB03                  2     0 [08F..09C)                 T0                  i label target hascall gcsafe bwd LIR 
BB06 [0005]  2  0    BB04,BB05             4     0 [09C..0BB)-> BB09 ( cond ) T0                  i label target gcsafe bwd LIR 
BB07 [0006]  1  0    BB06                  2     0 [000..0D3)                 T0                  i hascall gcsafe newobj bwd LIR 
BB09 [0007]  2  0    BB06,BB07             4     0 [000..0F2)-> BB03 ( cond ) T0      }           i label target hascall gcsafe newobj bwd LIR 
BB13 [0057]  2       BB02,BB09             1       [0F4..127)-> BB17 (always)                     keep i label target gcsafe newobj LIR cfb 
BB16 [0014]  1       BB20                  2     1 [127..133)                                     i Loop label target hascall gcsafe bwd bwd-target LIR 
BB17 [0015]  2       BB13,BB16             8     1 [000..147)-> BB19 ( cond )                     i label target gcsafe bwd LIR 
BB18 [0053]  1       BB17                  2     1 [000..000)-> BB20 (always)                     i internal gcsafe bwd LIR 
BB19 [0054]  1       BB17                  2     1 [000..000)                                     i internal label target gcsafe bwd LIR 
BB20 [0055]  2       BB18,BB19             8     1 [???..???)-> BB16 ( cond )                     internal label target gcsafe bwd LIR 
BB21 [0016]  1       BB20                  1       [147..153)        (return)                     i gcsafe LIR 
BB25 [0062]  0                             0       [???..???)        (throw )                     keep i internal rare label target LIR 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB22 [0010]  1     0                       0       [0F4..0F8)-> BB24 ( cond )    H0 F fault {     keep i rare label target flet LIR 
BB23 [0011]  1     0 BB22                  0       [0F8..0FF)                    H0               i rare hascall gcsafe LIR 
BB24 [0012]  2     0 BB22,BB23             0       [0FF..100)        (finret)    H0   }           i rare label target LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..070), preds={} succs={BB02}
N003 (???,???) [000613] ------------                 IL_OFFSET void   IL offset: 0x0 REG NA
N005 (  2, 10) [000000] H-----------         t0 =    CNS_INT(h) long   0xd1ffab1e method REG rcx $100
                                                  /--*  t0     long   
N007 (???,???) [000673] ------------       t673 = *  PUTARG_REG long   REG rcx
                                                  /--*  t673   long   arg0 in rcx
N009 ( 16, 16) [000001] --C---------         t1 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $180
                                                  /--*  t1     ref    
N011 ( 16, 16) [000003] DA----------              *  STORE_LCL_VAR ref    V12 tmp1         d:2 rbx REG rbx
N013 (???,???) [000614] ------------                 IL_OFFSET void   IL offset: 0x5 REG NA
N015 (  1,  1) [000006] ------------         t6 =    LCL_VAR   ref    V12 tmp1         u:2 rbx (last use) REG rbx $180
                                                  /--*  t6     ref    
N017 (  1,  3) [000008] DA----------              *  STORE_LCL_VAR ref    V02 loc0         d:2 rbx REG rbx
N019 (???,???) [000615] ------------                 IL_OFFSET void   IL offset: 0x6 REG NA
N021 (  1,  1) [000009] ------------         t9 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                  /--*  t9     ref    
N023 (  2,  2) [000440] ------------       t440 = *  LEA(b+32) byref  REG rcx
N025 (  1,  1) [000010] ------------        t10 =    LCL_VAR   ref    V01 arg1         u:1 rdi (last use) REG rdi $81
                                                  /--*  t440   byref  
                                                  +--*  t10    ref    
N027 (???,???) [000616] -A--GO------              *  STOREIND  ref    REG NA
N029 (???,???) [000617] ------------                 IL_OFFSET void   IL offset: 0xd REG NA
N031 (  1,  1) [000013] ------------        t13 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                  /--*  t13    ref    
N033 (  2,  2) [000442] -c----------       t442 = *  LEA(b+60) byref  REG NA
N035 (  1,  1) [000014] ------------        t14 =    CNS_INT   int    0 REG rcx $40
                                                  /--*  t442   byref  
                                                  +--*  t14    int    
N037 (???,???) [000618] -A--GO------              *  STOREIND  int    REG NA
N039 (???,???) [000619] ------------                 IL_OFFSET void   IL offset: 0x14 REG NA
N041 (  1,  1) [000017] ------------        t17 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                  /--*  t17    ref    
N043 (  2,  2) [000444] -c----------       t444 = *  LEA(b+56) byref  REG NA
N045 (  1,  1) [000018] ------------        t18 =    CNS_INT   int    0 reuse reg val REG rcx $40
                                                  /--*  t444   byref  
                                                  +--*  t18    int    
N047 (???,???) [000620] -A--GO------              *  STOREIND  int    REG NA
N049 (???,???) [000621] ------------                 IL_OFFSET void   IL offset: 0x1b REG NA
N051 (  2, 10) [000022] H-----------        t22 =    CNS_INT(h) long   0xd1ffab1e token REG rcx $104
                                                  /--*  t22    long   
N053 (???,???) [000674] ------------       t674 = *  PUTARG_REG long   REG rcx
                                                  /--*  t674   long   arg0 in rcx
N055 ( 16, 16) [000023] --C---------        t23 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $183
                                                  /--*  t23    ref    
N057 ( 16, 16) [000025] DA----------              *  STORE_LCL_VAR ref    V13 tmp2         d:2 rdi REG rdi
N059 (  2, 10) [000266] H-----------       t266 =    CNS_INT(h) long   0xd1ffab1e token REG rcx $105
                                                  /--*  t266   long   
N061 (???,???) [000675] ------------       t675 = *  PUTARG_REG long   REG rcx
                                                  /--*  t675   long   arg0 in rcx
N063 ( 16, 16) [000267] --C---------       t267 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $184
                                                  /--*  t267   ref    
N065 ( 16, 16) [000269] DA----------              *  STORE_LCL_VAR ref    V30 tmp19        d:2 rax REG rax
N067 (  1,  1) [000280] ------------       t280 =    LCL_VAR   ref    V30 tmp19        u:2 rax REG rax $184
                                                  /--*  t280   ref    
N069 (  2,  2) [000448] -c----------       t448 = *  LEA(b+52) byref  REG NA
N071 (  1,  4) [000281] -c----------       t281 =    CNS_INT   int    0x2000400 REG NA $43
                                                  /--*  t448   byref  
                                                  +--*  t281   int    
N073 (???,???) [000622] -A--GO------              *  STOREIND  int    REG NA
N075 (  1,  1) [000265] ------------       t265 =    LCL_VAR   ref    V13 tmp2         u:2 rdi REG rdi $183
                                                  /--*  t265   ref    
N077 (  2,  2) [000450] ------------       t450 = *  LEA(b+8)  byref  REG rcx
N079 (  1,  1) [000272] ------------       t272 =    LCL_VAR   ref    V30 tmp19        u:2 rax (last use) REG rax $184
                                                  /--*  t450   byref  
                                                  +--*  t272   ref    
N081 (???,???) [000623] -A--GO------              *  STOREIND  ref    REG NA
N083 (???,???) [000624] ------------                 IL_OFFSET void   IL offset: 0x21 REG NA
N085 (  1,  1) [000021] ------------        t21 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                  /--*  t21    ref    
N087 (  2,  2) [000452] ------------       t452 = *  LEA(b+24) byref  REG rcx
N089 (  1,  1) [000028] ------------        t28 =    LCL_VAR   ref    V13 tmp2         u:2 rdi (last use) REG rdi $183
                                                  /--*  t452   byref  
                                                  +--*  t28    ref    
N091 (???,???) [000625] -A--GO------              *  STOREIND  ref    REG NA
N093 (???,???) [000626] ------------                 IL_OFFSET void   IL offset: 0x26 REG NA
N095 (  2, 10) [000032] H-----------        t32 =    CNS_INT(h) long   0xd1ffab1e token REG rcx $109
                                                  /--*  t32    long   
N097 (???,???) [000676] ------------       t676 = *  PUTARG_REG long   REG rcx
                                                  /--*  t676   long   arg0 in rcx
N099 ( 16, 16) [000033] --C---------        t33 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $189
                                                  /--*  t33    ref    
N101 ( 16, 16) [000035] DA----------              *  STORE_LCL_VAR ref    V14 tmp3         d:2 rdi REG rdi
N103 (  2, 10) [000297] ------------       t297 =    CNS_INT   long   0x7ffc7e0b0028 REG rcx $1c6
                                                  /--*  t297   long   
N105 (???,???) [000677] ------------       t677 = *  PUTARG_REG long   REG rcx
N107 (  1,  1) [000298] ------------       t298 =    CNS_INT   int    14 REG rdx $44
                                                  /--*  t298   int    
N109 (???,???) [000678] ------------       t678 = *  PUTARG_REG int    REG rdx
                                                  /--*  t677   long   arg0 in rcx
                                                  +--*  t678   int    arg1 in rdx
N111 ( 17, 18) [000299] H-CXG-------       t299 = *  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS REG rax $381
N113 (  2, 10) [000458] I-----------       t458 =    CNS_INT(h) long   0xd1ffab1e static Fseq[Value] REG rdx $10a
                                                  /--*  t458   long   
N115 (  4, 12) [000295] n---G-------       t295 = *  IND       ref    REG rdx <l:$246, c:$14b>
N117 (  1,  1) [000287] ------------       t287 =    LCL_VAR   ref    V14 tmp3         u:2 rdi REG rdi $189
                                                  /--*  t287   ref    
N119 (  2,  2) [000455] ------------       t455 = *  LEA(b+8)  byref  REG rcx
                                                  /--*  t455   byref  
                                                  +--*  t295   ref    
N121 (???,???) [000627] -ACXGO------              *  STOREIND  ref    REG NA
N123 (???,???) [000628] ------------                 IL_OFFSET void   IL offset: 0x2c REG NA
N125 (  1,  1) [000031] ------------        t31 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                  /--*  t31    ref    
N127 (  2,  2) [000460] ------------       t460 = *  LEA(b+8)  byref  REG rcx
N129 (  1,  1) [000038] ------------        t38 =    LCL_VAR   ref    V14 tmp3         u:2 rdi (last use) REG rdi $189
                                                  /--*  t460   byref  
                                                  +--*  t38    ref    
N131 (???,???) [000629] -A--GO------              *  STOREIND  ref    REG NA
N133 (???,???) [000630] ------------                 IL_OFFSET void   IL offset: 0x31 REG NA
N135 (  1,  1) [000041] ------------        t41 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                  /--*  t41    ref    
N137 (  2,  2) [000462] -c----------       t462 = *  LEA(b+16) byref  REG NA
N139 (  1,  1) [000042] ------------        t42 =    CNS_INT   ref    null REG rcx $VN.Null
                                                  /--*  t462   byref  
                                                  +--*  t42    ref    
N141 (???,???) [000631] -A--GO------              *  STOREIND  ref    REG NA
N143 (???,???) [000632] ------------                 IL_OFFSET void   IL offset: 0x38 REG NA
N145 (  2, 10) [000046] H-----------        t46 =    CNS_INT(h) long   0xd1ffab1e token REG rcx $10e
                                                  /--*  t46    long   
N147 (???,???) [000679] ------------       t679 = *  PUTARG_REG long   REG rcx
                                                  /--*  t679   long   arg0 in rcx
N149 ( 16, 16) [000047] --C---------        t47 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $193
                                                  /--*  t47    ref    
N151 ( 16, 16) [000049] DA----------              *  STORE_LCL_VAR ref    V15 tmp4         d:2 rdi REG rdi
N153 (  1,  1) [000050] ------------        t50 =    LCL_VAR   ref    V15 tmp4         u:2 rdi REG rdi $193
                                                  /--*  t50    ref    
N155 (???,???) [000680] ------------       t680 = *  PUTARG_REG ref    REG rcx
N157 (  1,  1) [000302] ------------       t302 =    CNS_INT   ref    null REG rdx $VN.Null
                                                  /--*  t302   ref    
N159 (???,???) [000681] ------------       t681 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t680   ref    this in rcx
                                                  +--*  t681   ref    arg1 in rdx
N161 ( 16, 10) [000303] --CXG-------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor REG NA $VN.Void
N163 (???,???) [000633] ------------                 IL_OFFSET void   IL offset: 0x3e REG NA
N165 (  1,  1) [000045] ------------        t45 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                  /--*  t45    ref    
N167 (  2,  2) [000467] ------------       t467 = *  LEA(b+40) byref  REG rcx
N169 (  1,  1) [000052] ------------        t52 =    LCL_VAR   ref    V15 tmp4         u:2 rdi (last use) REG rdi $193
                                                  /--*  t467   byref  
                                                  +--*  t52    ref    
N171 (???,???) [000634] -A--GO------              *  STOREIND  ref    REG NA
N173 ( 14,  5) [000055] --CXG-------        t55 =    CALL      ref    System.Diagnostics.Process.GetCurrentProcess REG rax $151
                                                  /--*  t55    ref    
N175 ( 14,  5) [000316] DA-XG-------              *  STORE_LCL_VAR ref    V31 tmp20        d:2 rdi REG rdi
N177 (  1,  1) [000313] ------------       t313 =    LCL_VAR   ref    V31 tmp20        u:2 rdi REG rdi $151
                                                  /--*  t313   ref    
N179 (  2,  2) [000314] ---X--------              *  NULLCHECK int    REG NA $197
N181 (  1,  1) [000306] ------------       t306 =    LCL_VAR   ref    V31 tmp20        u:2 rdi REG rdi $151
                                                  /--*  t306   ref    
N183 (???,???) [000682] ------------       t682 = *  PUTARG_REG ref    REG rcx
N185 (  1,  1) [000307] ------------       t307 =    CNS_INT   int    3 REG rdx $46
                                                  /--*  t307   int    
N187 (???,???) [000683] ------------       t683 = *  PUTARG_REG int    REG rdx
                                                  /--*  t682   ref    this in rcx
                                                  +--*  t683   int    arg1 in rdx
N189 ( 16, 10) [000308] --CXG-------              *  CALL      void   System.Diagnostics.Process.EnsureState REG NA $VN.Void
N191 (  1,  1) [000309] ------------       t309 =    LCL_VAR   ref    V31 tmp20        u:2 rdi (last use) REG rdi $151
                                                  /--*  t309   ref    
N193 (  2,  5) [000471] -c----------       t471 = *  LEA(b+200) byref  REG NA
                                                  /--*  t471   byref  
N195 (  4,  7) [000310] n---GO------       t310 = *  IND       int    REG rcx <l:$289, c:$288>
                                                  /--*  t310   int    
N197 (???,???) [000684] ----GO------       t684 = *  PUTARG_REG int    REG rcx
                                                  /--*  t684   int    arg0 in rcx
N199 ( 18, 13) [000311] --CXGO------       t311 = *  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule REG rax $156
                                                  /--*  t311   ref    
N201 ( 18, 13) [000322] DA-XGO------              *  STORE_LCL_VAR ref    V32 tmp21        d:2 rax REG rax
N203 (  1,  1) [000319] ------------       t319 =    LCL_VAR   ref    V32 tmp21        u:2 rax (last use) REG rax $156
                                                  /--*  t319   ref    
N205 (  2,  2) [000474] -c----------       t474 = *  LEA(b+40) byref  REG NA
                                                  /--*  t474   byref  
N207 (  4,  4) [000320] ---XG-------       t320 = *  IND       ref    REG rdi <l:$19c, c:$19b>
                                                  /--*  t320   ref    
N209 (  4,  4) [000062] DA-XG-------              *  STORE_LCL_VAR ref    V03 loc1         d:2 rdi REG rdi
N211 (  1,  1) [000339] -c----------       t339 =    CNS_INT   int    5 REG NA $47
                                                  /--*  t339   int    
N213 (???,???) [000685] ------------              *  PUTARG_STK [+0x20] void   REG NA
N215 (  1,  1) [000337] ------------       t337 =    LCL_VAR   ref    V03 loc1         u:2 rdi REG rdi <l:$199, c:$159>
                                                  /--*  t337   ref    
N217 (???,???) [000669] -c----------       t669 = *  LEA(b+8)  ref    REG NA
                                                  /--*  t669   ref    
N219 (  3,  3) [000338] ---X--------       t338 = *  IND       int    REG r9 <l:$28b, c:$28a>
                                                  /--*  t338   int    
N221 (???,???) [000686] ---X--------       t686 = *  PUTARG_REG int    REG r9
N223 (  2, 10) [000475] H-----------       t475 =    CNS_INT(h) long   0xD1FFAB1E "dotnet.exe" REG rdx $112
                                                  /--*  t475   long   
N225 (  4, 12) [000476] #---G-------       t476 = *  IND       ref    REG rdx $19f
                                                  /--*  t476   ref    
N227 (???,???) [000687] ----G-------       t687 = *  PUTARG_REG ref    REG rdx
N229 (  1,  1) [000063] ------------        t63 =    LCL_VAR   ref    V03 loc1         u:2 rdi REG rdi <l:$199, c:$159>
                                                  /--*  t63    ref    
N231 (???,???) [000688] ------------       t688 = *  PUTARG_REG ref    REG rcx
N233 (  1,  1) [000336] ------------       t336 =    CNS_INT   int    0 REG r8 $40
                                                  /--*  t336   int    
N235 (???,???) [000689] ------------       t689 = *  PUTARG_REG int    REG r8
                                                  /--*  t686   int    arg3 in r9
                                                  +--*  t687   ref    arg1 in rdx
                                                  +--*  t688   ref    this in rcx
                                                  +--*  t689   int    arg2 in r8
N237 ( 27, 28) [000340] --CXG-------       t340 = *  CALL      int    System.String.IndexOf REG rax $308
N239 (  1,  1) [000328] -c----------       t328 =    CNS_INT   int    0 REG NA $40
                                                  /--*  t340   int    
                                                  +--*  t328   int    
N241 ( 32, 30) [000329] ---XG-------       t329 = *  GE        int    REG r14 $28c
                                                  /--*  t329   int    
N243 ( 32, 30) [000069] DA-XG-------              *  STORE_LCL_VAR int    V04 loc2         d:2 r14 REG r14
N245 ( 14,  5) [000070] --CXG-------        t70 =    CALL      ref    System.Environment.GetCommandLineArgs REG rax $15e
                                                  /--*  t70    ref    
N247 ( 14,  5) [000482] DA-XG-------              *  STORE_LCL_VAR ref    V41 tmp30        d:2 rax REG rax
N249 (  1,  1) [000072] -c----------        t72 =    CNS_INT   int    0 REG NA $40
N251 (  1,  1) [000483] ------------       t483 =    LCL_VAR   ref    V41 tmp30        u:2 rax REG rax $15e
                                                  /--*  t483   ref    
N253 (???,???) [000671] -c----------       t671 = *  LEA(b+8)  ref    REG NA
                                                  /--*  t671   ref    
N255 (  3,  3) [000486] -c-X--------       t486 = *  IND       int    REG NA $28d
                                                  /--*  t72    int    
                                                  +--*  t486   int    
N257 (  8, 11) [000487] ---X--------              *  ARR_BOUNDS_CHECK_Rng void   REG NA $1a5
N259 (  1,  1) [000484] ------------       t484 =    LCL_VAR   ref    V41 tmp30        u:2 rax (last use) REG rax $15e
                                                  /--*  t484   ref    
N261 (  2,  2) [000492] -c----------       t492 = *  LEA(b+16) byref  REG NA
                                                  /--*  t492   byref  
N263 (  4,  4) [000073] a---G-------        t73 = *  IND       ref    REG r15 <l:$1a8, c:$161>
                                                  /--*  t73    ref    
N265 ( 26, 20) [000075] DA-XG-------              *  STORE_LCL_VAR ref    V05 loc3         d:2 r15 REG r15
N267 (???,???) [000635] ------------                 IL_OFFSET void   IL offset: 0x68 REG NA
N269 (  1,  1) [000076] ------------        t76 =    LCL_VAR   ref    V00 arg0         u:1 rsi (last use) REG rsi $80
                                                  /--*  t76    ref    
N271 (???,???) [000690] ------------       t690 = *  PUTARG_REG ref    REG rcx
N273 (  2, 10) [000495] H-----------       t495 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $114
                                                  /--*  t495   long   
N275 (???,???) [000691] ------------       t691 = *  PUTARG_REG long   REG r11
N277 (  2, 10) [000692] Hc----------       t692 =    CNS_INT(h) long   0xd1ffab1e ftn REG NA
                                                  /--*  t692   long   
N279 (  4, 12) [000693] -c----------       t693 = *  IND       long   REG NA
                                                  /--*  t690   ref    this in rcx
                                                  +--*  t691   long   arg1 in r11
                                                  +--*  t693   long   control expr
N281 ( 23, 21) [000077] --CXG-------        t77 = *  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator REG rax $164
                                                  /--*  t77    ref    
N283 ( 23, 21) [000079] DA-XG-------              *  STORE_LCL_VAR ref    V06 loc4         d:2 NA REG NA

------------ BB02 [070..072) -> BB13 (cond), preds={BB01} succs={BB03,BB13}
N287 (???,???) [000636] ------------                 IL_OFFSET void   IL offset: 0xe9 REG NA
N289 (  1,  1) [000575] ------------       t575 =    LCL_VAR   ref    V06 loc4         u:2 rcx REG rcx $164
                                                  /--*  t575   ref    
N291 (???,???) [000694] ------------       t694 = *  PUTARG_REG ref    REG rcx
N293 (  2, 10) [000576] H-----------       t576 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
                                                  /--*  t576   long   
N295 (???,???) [000695] ------------       t695 = *  PUTARG_REG long   REG r11
N297 (  2, 10) [000696] Hc----------       t696 =    CNS_INT(h) long   0xd1ffab1e ftn REG NA
                                                  /--*  t696   long   
N299 (  4, 12) [000697] -c----------       t697 = *  IND       long   REG NA
                                                  /--*  t694   ref    this in rcx
                                                  +--*  t695   long   arg1 in r11
                                                  +--*  t697   long   control expr
N301 ( 23, 21) [000572] --CXG-------       t572 = *  CALLV stub int    System.Collections.IEnumerator.MoveNext REG rax $30a
N303 (  1,  1) [000577] -c----------       t577 =    CNS_INT   int    0 REG NA $40
                                                  /--*  t572   int    
                                                  +--*  t577   int    
N305 ( 25, 23) [000571] J--XG--N----              *  EQ        void   REG NA $28e
N307 ( 27, 25) [000578] ---XG-------              *  JTRUE     void   REG NA

------------ BB03 [072..08B) -> BB05 (cond), preds={BB02,BB09} succs={BB04,BB05}
N311 (???,???) [000637] ------------                 IL_OFFSET void   IL offset: 0x72 REG NA
N313 (  1,  1) [000085] ------------        t85 =    LCL_VAR   ref    V06 loc4         u:2 rcx REG rcx $164
                                                  /--*  t85    ref    
N315 (???,???) [000698] ------------       t698 = *  PUTARG_REG ref    REG rcx
N317 (  2, 10) [000498] H-----------       t498 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $116
                                                  /--*  t498   long   
N319 (???,???) [000699] ------------       t699 = *  PUTARG_REG long   REG r11
N321 (  2, 10) [000700] Hc----------       t700 =    CNS_INT(h) long   0xd1ffab1e ftn REG NA
                                                  /--*  t700   long   
N323 (  4, 12) [000701] -c----------       t701 = *  IND       long   REG NA
                                                  /--*  t698   ref    this in rcx
                                                  +--*  t699   long   arg1 in r11
                                                  +--*  t701   long   control expr
N325 ( 23, 21) [000086] --CXG-------        t86 = *  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current REG rax $442
                                                  /--*  t86    ref    
N327 ( 23, 21) [000088] DA-XG-------              *  STORE_LCL_VAR ref    V07 loc5         d:2 rsi REG rsi
N329 (???,???) [000638] ------------                 IL_OFFSET void   IL offset: 0x7b REG NA
N331 (  2, 10) [000089] H-----------        t89 =    CNS_INT(h) long   0xd1ffab1e token REG rcx $117
                                                  /--*  t89    long   
N333 (???,???) [000702] ------------       t702 = *  PUTARG_REG long   REG rcx
                                                  /--*  t702   long   arg0 in rcx
N335 ( 16, 16) [000090] --C---------        t90 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $1ab
                                                  /--*  t90    ref    
N337 ( 16, 16) [000092] DA----------              *  STORE_LCL_VAR ref    V16 tmp5         d:2 r12 REG r12
N339 (???,???) [000639] ------------                 IL_OFFSET void   IL offset: 0x80 REG NA
N341 (  1,  1) [000096] ------------        t96 =    LCL_VAR   ref    V16 tmp5         u:2 r12 REG r12 $1ab
                                                  /--*  t96    ref    
N343 (  2,  2) [000503] ------------       t503 = *  LEA(b+8)  byref  REG rcx
N345 (  1,  1) [000097] ------------        t97 =    LCL_VAR   ref    V03 loc1         u:2 rdi REG rdi <l:$199, c:$159>
                                                  /--*  t503   byref  
                                                  +--*  t97    ref    
N347 (???,???) [000640] -A--GO------              *  STOREIND  ref    REG NA
N349 (  1,  1) [000095] ------------        t95 =    LCL_VAR   ref    V16 tmp5         u:2 r12 (last use) REG r12 $1ab
                                                  /--*  t95    ref    
N351 (  1,  3) [000105] DA----------              *  STORE_LCL_VAR ref    V17 tmp6         d:2 r12 REG r12
N353 (  1,  1) [000099] ------------        t99 =    LCL_VAR   ref    V17 tmp6         u:2 r12 (last use) REG r12 $1ab
                                                  /--*  t99    ref    
N355 (  1,  3) [000108] DA----------              *  STORE_LCL_VAR ref    V18 tmp7         d:2 r12 REG r12
N357 (???,???) [000641] ------------                 IL_OFFSET void   IL offset: 0x87 REG NA
N359 (  1,  1) [000100] ------------       t100 =    LCL_VAR   int    V04 loc2         u:2 r14 REG r14 $28c
N361 (  1,  1) [000101] -c----------       t101 =    CNS_INT   int    0 REG NA $40
                                                  /--*  t100   int    
                                                  +--*  t101   int    
N363 (  3,  3) [000102] J------N----              *  NE        void   REG NA $28f
N365 (  5,  5) [000103] ------------              *  JTRUE     void   REG NA

------------ BB04 [08B..08F) -> BB06 (always), preds={BB03} succs={BB06}
N369 (  1,  1) [000110] ------------       t110 =    LCL_VAR   ref    V18 tmp7         u:2 r12 (last use) REG r12 $1ab
                                                  /--*  t110   ref    
N371 (  1,  3) [000203] DA----------              *  STORE_LCL_VAR ref    V19 tmp8         d:4 r12 REG r12
N373 (  1,  1) [000111] ------------       t111 =    LCL_VAR   ref    V19 tmp8         u:4 r12 REG r12 $1ab
                                                  /--*  t111   ref    
N375 (  1,  3) [000206] DA----------              *  STORE_LCL_VAR ref    V20 tmp9         d:4 r13 REG r13
N377 (  1,  1) [000201] ------------       t201 =    LCL_VAR   ref    V07 loc5         u:2 rsi (last use) REG rsi $442
                                                  /--*  t201   ref    
N379 (  1,  3) [000209] DA----------              *  STORE_LCL_VAR ref    V21 tmp10        d:4 rdx REG rdx

------------ BB05 [08F..09C), preds={BB03} succs={BB06}
N383 (  1,  1) [000112] ------------       t112 =    LCL_VAR   ref    V18 tmp7         u:2 r12 (last use) REG r12 $1ab
                                                  /--*  t112   ref    
N385 (  1,  3) [000119] DA----------              *  STORE_LCL_VAR ref    V19 tmp8         d:3 r12 REG r12
N387 (  1,  1) [000113] ------------       t113 =    LCL_VAR   ref    V19 tmp8         u:3 r12 REG r12 $1ab
                                                  /--*  t113   ref    
N389 (  1,  3) [000122] DA----------              *  STORE_LCL_VAR ref    V20 tmp9         d:3 r13 REG r13
N391 (  2, 10) [000504] H-----------       t504 =    CNS_INT(h) long   0xD1FFAB1E " " REG rdx $119
                                                  /--*  t504   long   
N393 (  4, 12) [000505] #---G-------       t505 = *  IND       ref    REG rdx $1ae
                                                  /--*  t505   ref    
N395 (???,???) [000703] ----G-------       t703 = *  PUTARG_REG ref    REG rdx
N397 (  1,  1) [000114] ------------       t114 =    LCL_VAR   ref    V05 loc3         u:2 r15 REG r15 <l:$1a8, c:$161>
                                                  /--*  t114   ref    
N399 (???,???) [000704] ------------       t704 = *  PUTARG_REG ref    REG rcx
N401 (  1,  1) [000116] ------------       t116 =    LCL_VAR   ref    V07 loc5         u:2 rsi (last use) REG rsi $442
                                                  /--*  t116   ref    
N403 (???,???) [000705] ------------       t705 = *  PUTARG_REG ref    REG r8
                                                  /--*  t703   ref    arg1 in rdx
                                                  +--*  t704   ref    arg0 in rcx
                                                  +--*  t705   ref    arg2 in r8
N405 ( 20, 22) [000117] --CXG-------       t117 = *  CALL      ref    System.String.Concat REG rax $44e
                                                  /--*  t117   ref    
N407 ( 20, 22) [000125] DA-XG-------              *  STORE_LCL_VAR ref    V21 tmp10        d:3 rdx REG rdx

------------ BB06 [09C..0BB) -> BB09 (cond), preds={BB04,BB05} succs={BB07,BB09}
N001 (  0,  0) [000606] ------------       t606 =    PHI_ARG   ref    V21 tmp10        u:4 rdx $442
N002 (  0,  0) [000603] ------------       t603 =    PHI_ARG   ref    V21 tmp10        u:3 rdx $44e
                                                  /--*  t606   ref    
                                                  +--*  t603   ref    
N003 (  0,  0) [000595] ------------       t595 = *  PHI       ref   
                                                  /--*  t595   ref    
N005 (  0,  0) [000596] DA----------              *  STORE_LCL_VAR ref    V21 tmp10        d:2 rdx
N001 (  0,  0) [000607] ------------       t607 =    PHI_ARG   ref    V20 tmp9         u:4 r13 $1ab
N002 (  0,  0) [000604] ------------       t604 =    PHI_ARG   ref    V20 tmp9         u:3 r13 $1ab
                                                  /--*  t607   ref    
                                                  +--*  t604   ref    
N003 (  0,  0) [000592] ------------       t592 = *  PHI       ref   
                                                  /--*  t592   ref    
N005 (  0,  0) [000593] DA----------              *  STORE_LCL_VAR ref    V20 tmp9         d:2 r13
N001 (  0,  0) [000608] ------------       t608 =    PHI_ARG   ref    V19 tmp8         u:4 r12 $1ab
N002 (  0,  0) [000605] ------------       t605 =    PHI_ARG   ref    V19 tmp8         u:3 r12 $1ab
                                                  /--*  t608   ref    
                                                  +--*  t605   ref    
N003 (  0,  0) [000589] ------------       t589 = *  PHI       ref   
                                                  /--*  t589   ref    
N005 (  0,  0) [000590] DA----------              *  STORE_LCL_VAR ref    V19 tmp8         d:2 r12
N411 (  1,  1) [000128] ------------       t128 =    LCL_VAR   ref    V20 tmp9         u:2 r13 (last use) REG r13 $1ab
                                                  /--*  t128   ref    
N413 (  2,  2) [000510] ------------       t510 = *  LEA(b+16) byref  REG rcx
N415 (  1,  1) [000129] ------------       t129 =    LCL_VAR   ref    V21 tmp10        u:2 rdx (last use) REG rdx $251
                                                  /--*  t510   byref  
                                                  +--*  t129   ref    
N417 (???,???) [000642] -A--GO------              *  STOREIND  ref    REG NA
N419 (???,???) [000643] ------------                 IL_OFFSET void   IL offset: 0xa1 REG NA
N421 (  1,  1) [000131] ------------       t131 =    LCL_VAR   ref    V19 tmp8         u:2 r12 REG r12 $1ab
                                                  /--*  t131   ref    
N423 (  2,  5) [000512] -c----------       t512 = *  LEA(b+130) byref  REG NA
N425 (  1,  1) [000353] -c----------       t353 =    CNS_INT   int    0 REG NA $40
                                                  /--*  t512   byref  
                                                  +--*  t353   int    
N427 (???,???) [000644] -A--GO------              *  STOREIND  bool   REG NA
N429 (???,???) [000645] ------------                 IL_OFFSET void   IL offset: 0xaa REG NA
N431 (  1,  1) [000137] ------------       t137 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                  /--*  t137   ref    
N433 (  2,  2) [000514] -c----------       t514 = *  LEA(b+8)  byref  REG NA
                                                  /--*  t514   byref  
N435 (  4,  4) [000138] n---GO------       t138 = *  IND       ref    REG rsi <l:$1bc, c:$1bb>
                                                  /--*  t138   ref    
N437 (  4,  4) [000145] DA--GO------              *  STORE_LCL_VAR ref    V23 tmp12        d:2 rsi REG rsi
N439 (???,???) [000646] ------------                 IL_OFFSET void   IL offset: 0xaa REG NA
N441 (  1,  1) [000140] ------------       t140 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                  /--*  t140   ref    
N443 (  2,  2) [000516] -c----------       t516 = *  LEA(b+48) byref  REG NA
                                                  /--*  t516   byref  
N445 (  4,  4) [000141] n---GO------       t141 = *  IND       ref    REG r13 <l:$542, c:$541>
                                                  /--*  t141   ref    
N447 (  4,  4) [000143] DA--GO------              *  STORE_LCL_VAR ref    V22 tmp11        d:2 r13 REG r13
N449 (  1,  1) [000146] ------------       t146 =    LCL_VAR   ref    V23 tmp12        u:2 rsi (last use) REG rsi <l:$1b9, c:$454>
                                                  /--*  t146   ref    
N451 (  1,  3) [000153] DA----------              *  STORE_LCL_VAR ref    V24 tmp13        d:2 rsi REG rsi
N453 (  1,  1) [000139] ------------       t139 =    LCL_VAR   ref    V19 tmp8         u:2 r12 (last use) REG r12 $1ab
                                                  /--*  t139   ref    
N455 (  1,  3) [000156] DA----------              *  STORE_LCL_VAR ref    V25 tmp14        d:2 r12 REG r12
N457 (  1,  1) [000147] ------------       t147 =    LCL_VAR   ref    V22 tmp11        u:2 r13 (last use) REG r13 <l:$540, c:$456>
                                                  /--*  t147   ref    
N459 (  1,  3) [000159] DA----------              *  STORE_LCL_VAR ref    V26 tmp15        d:2 r13 REG r13
N461 (  1,  1) [000148] ------------       t148 =    LCL_VAR   ref    V26 tmp15        u:2 r13 REG r13 <l:$540, c:$456>
N463 (  1,  1) [000149] -c----------       t149 =    CNS_INT   ref    null REG NA $VN.Null
                                                  /--*  t148   ref    
                                                  +--*  t149   ref    
N465 (  3,  3) [000150] J------N----              *  NE        void   REG NA <l:$291, c:$290>
N467 (  5,  5) [000151] ------------              *  JTRUE     void   REG NA

------------ BB07 [000..0D3), preds={BB06} succs={BB09}
N471 (  2, 10) [000181] H-----------       t181 =    CNS_INT(h) long   0xd1ffab1e token REG rcx $11e
                                                  /--*  t181   long   
N473 (???,???) [000706] ------------       t706 = *  PUTARG_REG long   REG rcx
                                                  /--*  t706   long   arg0 in rcx
N475 ( 16, 16) [000182] --C---------       t182 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $543
                                                  /--*  t182   ref    
N477 ( 16, 16) [000184] DA----------              *  STORE_LCL_VAR ref    V28 tmp17        d:2 r13 REG r13
N479 (  1,  1) [000185] ------------       t185 =    LCL_VAR   ref    V28 tmp17        u:2 r13 REG r13 $543
                                                  /--*  t185   ref    
N481 (  2,  2) [000519] ------------       t519 = *  LEA(b+8)  byref  REG rcx
N483 (  1,  1) [000360] ------------       t360 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                  /--*  t519   byref  
                                                  +--*  t360   ref    
N485 (???,???) [000647] -A--GO------              *  STOREIND  ref    REG NA
N487 (  1,  1) [000363] ------------       t363 =    LCL_VAR   ref    V28 tmp17        u:2 r13 REG r13 $543
                                                  /--*  t363   ref    
N489 (  2,  2) [000521] -c----------       t521 = *  LEA(b+24) byref  REG NA
N491 (  2, 10) [000180] H-----------       t180 =    CNS_INT(h) long   0xd1ffab1e ftn REG rdx $120
                                                  /--*  t521   byref  
                                                  +--*  t180   long   
N493 (???,???) [000648] -A--GO------              *  STOREIND  long   REG NA
N495 (  1,  1) [000178] ------------       t178 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                  /--*  t178   ref    
N497 (  2,  2) [000523] ------------       t523 = *  LEA(b+48) byref  REG rcx
N499 (  1,  1) [000187] ------------       t187 =    LCL_VAR   ref    V28 tmp17        u:2 r13 REG r13 $543
                                                  /--*  t523   byref  
                                                  +--*  t187   ref    
N501 (???,???) [000649] -A--GO------              *  STOREIND  ref    REG NA
N503 (  1,  1) [000193] ------------       t193 =    LCL_VAR   ref    V28 tmp17        u:2 r13 (last use) REG r13 $543
                                                  /--*  t193   ref    
N505 (  1,  3) [000199] DA----------              *  STORE_LCL_VAR ref    V26 tmp15        d:4 r13 REG r13

------------ BB09 [000..0F2) -> BB03 (cond), preds={BB06,BB07} succs={BB13,BB03}
N001 (  0,  0) [000602] ------------       t602 =    PHI_ARG   ref    V26 tmp15        u:4 r13 $543
N002 (  0,  0) [000601] ------------       t601 =    PHI_ARG   ref    V26 tmp15        u:2 r13 <l:$540, c:$456>
                                                  /--*  t602   ref    
                                                  +--*  t601   ref    
N003 (  0,  0) [000586] ------------       t586 = *  PHI       ref   
                                                  /--*  t586   ref    
N005 (  0,  0) [000587] DA----------              *  STORE_LCL_VAR ref    V26 tmp15        d:3 r13
N509 (  2, 10) [000169] H-----------       t169 =    CNS_INT(h) long   0xd1ffab1e token REG rcx $123
                                                  /--*  t169   long   
N511 (???,???) [000707] ------------       t707 = *  PUTARG_REG long   REG rcx
                                                  /--*  t707   long   arg0 in rcx
N513 ( 16, 16) [000170] --C---------       t170 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $54b
                                                  /--*  t170   ref    
N515 ( 16, 16) [000172] DA----------              *  STORE_LCL_VAR ref    V27 tmp16        d:2 rax REG rax
N517 (  1,  1) [000173] -----------Z       t173 =    LCL_VAR   ref    V27 tmp16        u:2 rax REG rax $54b
                                                  /--*  t173   ref    
N519 (  2,  2) [000526] ------------       t526 = *  LEA(b+8)  byref  REG rcx
N521 (  1,  1) [000372] ------------       t372 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                  /--*  t526   byref  
                                                  +--*  t372   ref    
N523 (???,???) [000650] -A--GO------              *  STOREIND  ref    REG NA
N525 (  1,  1) [000375] -----------z       t375 =    LCL_VAR   ref    V27 tmp16        u:2 r8 REG r8 $54b
                                                  /--*  t375   ref    
N527 (  2,  2) [000528] -c----------       t528 = *  LEA(b+24) byref  REG NA
N529 (  2, 10) [000168] H-----------       t168 =    CNS_INT(h) long   0xd1ffab1e ftn REG rcx $125
                                                  /--*  t528   byref  
                                                  +--*  t168   long   
N531 (???,???) [000651] -A--GO------              *  STOREIND  long   REG NA
N533 (???,???) [000652] ------------                 IL_OFFSET void   IL offset: 0xdf REG NA
N535 (  1,  1) [000165] ------------       t165 =    LCL_VAR   ref    V25 tmp14        u:2 r12 (last use) REG r12 $1ab
                                                  /--*  t165   ref    
N537 (???,???) [000708] ------------       t708 = *  PUTARG_REG ref    REG rcx
N539 (  1,  1) [000166] ------------       t166 =    LCL_VAR   ref    V26 tmp15        u:3 r13 (last use) REG r13 $258
                                                  /--*  t166   ref    
N541 (???,???) [000709] ------------       t709 = *  PUTARG_REG ref    REG rdx
N543 (  1,  1) [000175] ------------       t175 =    LCL_VAR   ref    V27 tmp16        u:2 r8 (last use) REG r8 $54b
                                                  /--*  t175   ref    
N545 (???,???) [000710] ------------       t710 = *  PUTARG_REG ref    REG r8
                                                  /--*  t708   ref    arg0 in rcx
                                                  +--*  t709   ref    arg1 in rdx
                                                  +--*  t710   ref    arg2 in r8
N547 ( 17, 11) [000176] --CXG-------       t176 = *  CALL      ref    SolutionAnalyzer.IPC.CreateSession REG rax $464
                                                  /--*  t176   ref    
N549 ( 17, 11) [000533] DA-XG-----L-              *  STORE_LCL_VAR ref    V42 tmp31        d:2 rdx REG rdx
N551 (  1,  1) [000534] ------------       t534 =    LCL_VAR   ref    V42 tmp31        u:2 rdx (last use) REG rdx $464
                                                  /--*  t534   ref    
N553 (???,???) [000711] ------------       t711 = *  PUTARG_REG ref    REG rdx
N555 (  1,  1) [000164] ------------       t164 =    LCL_VAR   ref    V24 tmp13        u:2 rsi (last use) REG rsi <l:$1b9, c:$454>
                                                  /--*  t164   ref    
N557 (???,???) [000712] ------------       t712 = *  PUTARG_REG ref    REG rcx
                                                  /--*  t711   ref    arg1 in rdx
                                                  +--*  t712   ref    this in rcx
N559 ( 36, 21) [000177] --CXG-------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue REG NA $VN.Void
N561 (???,???) [000653] ------------                 IL_OFFSET void   IL offset: 0xe9 REG NA
N563 (  1,  1) [000080] ------------        t80 =    LCL_VAR   ref    V06 loc4         u:2 rcx REG rcx $164
                                                  /--*  t80    ref    
N565 (???,???) [000713] ------------       t713 = *  PUTARG_REG ref    REG rcx
N567 (  2, 10) [000536] H-----------       t536 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
                                                  /--*  t536   long   
N569 (???,???) [000714] ------------       t714 = *  PUTARG_REG long   REG r11
N571 (  2, 10) [000715] Hc----------       t715 =    CNS_INT(h) long   0xd1ffab1e ftn REG NA
                                                  /--*  t715   long   
N573 (  4, 12) [000716] -c----------       t716 = *  IND       long   REG NA
                                                  /--*  t713   ref    this in rcx
                                                  +--*  t714   long   arg1 in r11
                                                  +--*  t716   long   control expr
N575 ( 23, 21) [000081] --CXG-------        t81 = *  CALLV stub int    System.Collections.IEnumerator.MoveNext REG rax $5c0
N577 (  1,  1) [000082] -c----------        t82 =    CNS_INT   int    0 REG NA $40
                                                  /--*  t81    int    
                                                  +--*  t82    int    
N579 ( 25, 23) [000083] J--XG--N----              *  NE        void   REG NA $292
N581 ( 27, 25) [000084] ---XG-------              *  JTRUE     void   REG NA

------------ BB13 [0F4..127) -> BB17 (always), preds={BB02,BB09} succs={BB17}
N585 (  1,  1) [000436] ------------       t436 =    LCL_VAR   ref    V06 loc4         u:2 rcx (last use) REG rcx $164
                                                  /--*  t436   ref    
N587 (???,???) [000717] ------------       t717 = *  PUTARG_REG ref    REG rcx
N589 (  2, 10) [000539] H-----------       t539 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127
                                                  /--*  t539   long   
N591 (???,???) [000718] ------------       t718 = *  PUTARG_REG long   REG r11
N593 (  2, 10) [000719] Hc----------       t719 =    CNS_INT(h) long   0xd1ffab1e ftn REG NA
                                                  /--*  t719   long   
N595 (  4, 12) [000720] -c----------       t720 = *  IND       long   REG NA
                                                  /--*  t717   ref    this in rcx
                                                  +--*  t718   long   arg1 in r11
                                                  +--*  t720   long   control expr
N597 ( 23, 21) [000435] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose REG NA $VN.Void
N599 (???,???) [000654] ------------                 IL_OFFSET void   IL offset: 0x100 REG NA
N601 (  1,  1) [000212] ------------       t212 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                  /--*  t212   ref    
N603 (  2,  2) [000546] -c----------       t546 = *  LEA(b+8)  byref  REG NA
                                                  /--*  t546   byref  
N605 (  4,  4) [000213] n---GO------       t213 = *  IND       ref    REG rcx <l:$569, c:$568>
                                                  /--*  t213   ref    
N607 (  4,  4) [000384] DA--GO------              *  STORE_LCL_VAR ref    V35 tmp24        d:2 rcx REG rcx
N609 (  1,  1) [000381] ------------       t381 =    LCL_VAR   ref    V35 tmp24        u:2 rcx (last use) REG rcx <l:$567, c:$16e>
                                                  /--*  t381   ref    
N611 (  2,  2) [000550] -c----------       t550 = *  LEA(b+24) byref  REG NA
                                                  /--*  t550   byref  
N613 (  4,  4) [000382] ---XG-------       t382 = *  IND       int    REG rcx <l:$29b, c:$29a>
N615 (  1,  1) [000211] ------------       t211 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                  /--*  t211   ref    
N617 (  2,  2) [000548] -c----------       t548 = *  LEA(b+60) byref  REG NA
                                                  /--*  t548   byref  
                                                  +--*  t382   int    
N619 (???,???) [000655] -A-XGO------              *  STOREIND  int    REG NA
N621 (???,???) [000656] ------------                 IL_OFFSET void   IL offset: 0x111 REG NA
N623 (  2, 10) [000221] H-----------       t221 =    CNS_INT(h) long   0xd1ffab1e method REG rcx $12b
                                                  /--*  t221   long   
N625 (???,???) [000721] ------------       t721 = *  PUTARG_REG long   REG rcx
                                                  /--*  t721   long   arg0 in rcx
N627 ( 16, 16) [000222] --C---------       t222 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $56c
                                                  /--*  t222   ref    
N629 ( 16, 16) [000224] DA----------              *  STORE_LCL_VAR ref    V29 tmp18        d:2 rsi REG rsi
N631 (  1,  1) [000219] ------------       t219 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                  /--*  t219   ref    
N633 (  2,  2) [000553] -c----------       t553 = *  LEA(b+60) byref  REG NA
                                                  /--*  t553   byref  
N635 (  4,  4) [000220] n---GO------       t220 = *  IND       int    REG rdi <l:$2a3, c:$2a2>
                                                  /--*  t220   int    
N637 (  4,  4) [000402] DA--GO------              *  STORE_LCL_VAR int    V37 tmp26        d:2 rdi REG rdi
N639 (  2, 10) [000386] H-----------       t386 =    CNS_INT(h) long   0xd1ffab1e token REG rcx $12c
                                                  /--*  t386   long   
N641 (???,???) [000722] ------------       t722 = *  PUTARG_REG long   REG rcx
                                                  /--*  t722   long   arg0 in rcx
N643 ( 16, 16) [000387] --C---------       t387 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $56d
                                                  /--*  t387   ref    
N645 ( 16, 16) [000389] DA----------              *  STORE_LCL_VAR ref    V36 tmp25        d:2 r14 REG r14
N647 (  1,  1) [000390] ------------       t390 =    LCL_VAR   ref    V36 tmp25        u:2 r14 REG r14 $56d
                                                  /--*  t390   ref    
N649 (???,???) [000723] ------------       t723 = *  PUTARG_REG ref    REG rcx
N651 (  1,  1) [000404] ------------       t404 =    CNS_INT   int    0 REG rdx $40
                                                  /--*  t404   int    
N653 (???,???) [000724] ------------       t724 = *  PUTARG_REG int    REG rdx
N655 (  1,  1) [000405] ------------       t405 =    CNS_INT   ref    null REG r8 $VN.Null
                                                  /--*  t405   ref    
N657 (???,???) [000725] ------------       t725 = *  PUTARG_REG ref    REG r8
                                                  /--*  t723   ref    this in rcx
                                                  +--*  t724   int    arg1 in rdx
                                                  +--*  t725   ref    arg2 in r8
N659 ( 17, 12) [000406] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor REG NA $VN.Void
N661 (  1,  1) [000225] ------------       t225 =    LCL_VAR   ref    V29 tmp18        u:2 rsi REG rsi $56c
                                                  /--*  t225   ref    
N663 (  2,  2) [000559] ------------       t559 = *  LEA(b+8)  byref  REG rcx
N665 (  1,  1) [000392] ------------       t392 =    LCL_VAR   ref    V36 tmp25        u:2 r14 (last use) REG r14 $56d
                                                  /--*  t559   byref  
                                                  +--*  t392   ref    
N667 (???,???) [000657] -A--GO------              *  STOREIND  ref    REG NA
N669 (  1,  1) [000397] ------------       t397 =    LCL_VAR   ref    V29 tmp18        u:2 rsi REG rsi $56c
                                                  /--*  t397   ref    
N671 (  2,  2) [000561] -c----------       t561 = *  LEA(b+16) byref  REG NA
N673 (  1,  1) [000398] ------------       t398 =    LCL_VAR   int    V37 tmp26        u:2 rdi (last use) REG rdi <l:$299, c:$30c>
                                                  /--*  t561   byref  
                                                  +--*  t398   int    
N675 (???,???) [000658] -A--GO------              *  STOREIND  int    REG NA
N677 (???,???) [000659] ------------                 IL_OFFSET void   IL offset: 0x11d REG NA
N679 (  1,  1) [000218] ------------       t218 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                  /--*  t218   ref    
N681 (  2,  2) [000563] ------------       t563 = *  LEA(b+16) byref  REG rcx
N683 (  1,  1) [000227] ------------       t227 =    LCL_VAR   ref    V29 tmp18        u:2 rsi (last use) REG rsi $56c
                                                  /--*  t563   byref  
                                                  +--*  t227   ref    
N685 (???,???) [000660] -A--GO------              *  STOREIND  ref    REG NA
N687 (???,???) [000661] ------------                 IL_OFFSET void   IL offset: 0x122 REG NA
N689 (  1,  1) [000230] ------------       t230 =    CNS_INT   int    0 REG rsi $40
                                                  /--*  t230   int    
N691 (  1,  3) [000232] DA----------              *  STORE_LCL_VAR int    V10 loc8         d:2 rsi REG rsi

------------ BB16 [127..133), preds={BB20} succs={BB17}
N735 (???,???) [000662] ------------                 IL_OFFSET void   IL offset: 0x127 REG NA
N737 (  1,  1) [000242] ------------       t242 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                  /--*  t242   ref    
N739 (???,???) [000726] ------------       t726 = *  PUTARG_REG ref    REG rcx
                                                  /--*  t726   ref    this in rcx
N741 ( 15,  8) [000243] --CXG-------              *  CALL      void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0 REG NA $VN.Void
N743 (???,???) [000663] ------------                 IL_OFFSET void   IL offset: 0x12d REG NA
N745 (  1,  1) [000244] ------------       t244 =    LCL_VAR   int    V10 loc8         u:3 rsi (last use) REG rsi $2ca
N747 (  1,  1) [000245] -c----------       t245 =    CNS_INT   int    1 REG NA $41
                                                  /--*  t244   int    
                                                  +--*  t245   int    
N749 (  3,  3) [000246] ------------       t246 = *  ADD       int    REG rsi $2ad
                                                  /--*  t246   int    
N751 (  3,  3) [000248] DA----------              *  STORE_LCL_VAR int    V10 loc8         d:4 rsi REG rsi

------------ BB17 [000..147) -> BB19 (cond), preds={BB13,BB16} succs={BB18,BB19}
N001 (  0,  0) [000598] ------------       t598 =    PHI_ARG   int    V10 loc8         u:4 rsi
N002 (  0,  0) [000597] ------------       t597 =    PHI_ARG   int    V10 loc8         u:2 rsi $40
                                                  /--*  t598   int    
                                                  +--*  t597   int    
N003 (  0,  0) [000580] ------------       t580 = *  PHI       int   
                                                  /--*  t580   int    
N005 (  0,  0) [000581] DA----------              *  STORE_LCL_VAR int    V10 loc8         d:3 rsi
N695 (  1,  1) [000236] ------------       t236 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                  /--*  t236   ref    
N697 (  2,  2) [000566] -c----------       t566 = *  LEA(b+60) byref  REG NA
                                                  /--*  t566   byref  
N699 (  4,  4) [000237] n---GO------       t237 = *  IND       int    REG rcx <l:$2a9, c:$2a8>
                                                  /--*  t237   int    
N701 (  4,  4) [000424] DA--GO------              *  STORE_LCL_VAR int    V39 tmp28        d:2 rcx REG rcx
N703 (  1,  1) [000412] ------------       t412 =    LCL_VAR   int    V39 tmp28        u:2 rcx REG rcx <l:$2a7, c:$680>
N705 (  1,  1) [000411] -c----------       t411 =    CNS_INT   int    8 REG NA $57
                                                  /--*  t412   int    
                                                  +--*  t411   int    
N707 (  3,  3) [000413] J------N----              *  GE        void   REG NA <l:$2ab, c:$2aa>
N709 (  5,  5) [000414] ------------              *  JTRUE     void   REG NA

------------ BB18 [000..000) -> BB20 (always), preds={BB17} succs={BB20}
N713 (  1,  1) [000419] ------------       t419 =    LCL_VAR   int    V39 tmp28        u:2 rcx (last use) REG rcx <l:$2a7, c:$680>
                                                  /--*  t419   int    
N715 (  1,  3) [000421] DA----------              *  STORE_LCL_VAR int    V38 tmp27        d:4 rcx REG rcx

------------ BB19 [000..000), preds={BB17} succs={BB20}
N719 (  1,  1) [000415] -c----------       t415 =    CNS_INT   int    8 REG NA $57
                                                  /--*  t415   int    
N721 (  1,  3) [000417] DA----------              *  STORE_LCL_VAR int    V38 tmp27        d:3 rcx REG rcx

------------ BB20 [???..???) -> BB16 (cond), preds={BB18,BB19} succs={BB21,BB16}
N001 (  0,  0) [000600] ------------       t600 =    PHI_ARG   int    V38 tmp27        u:4 rcx <l:$2a7, c:$680>
N002 (  0,  0) [000599] ------------       t599 =    PHI_ARG   int    V38 tmp27        u:3 rcx $57
                                                  /--*  t600   int    
                                                  +--*  t599   int    
N003 (  0,  0) [000583] ------------       t583 = *  PHI       int   
                                                  /--*  t583   int    
N005 (  0,  0) [000584] DA----------              *  STORE_LCL_VAR int    V38 tmp27        d:2 rcx
N725 (  1,  1) [000233] ------------       t233 =    LCL_VAR   int    V10 loc8         u:3 rsi REG rsi $2ca
N727 (  1,  1) [000422] ------------       t422 =    LCL_VAR   int    V38 tmp27        u:2 rcx (last use) REG rcx $2cb
                                                  /--*  t233   int    
                                                  +--*  t422   int    
N729 (  3,  3) [000240] J------N----              *  LT        void   REG NA $2ac
N731 (  5,  5) [000241] ------------              *  JTRUE     void   REG NA

------------ BB21 [147..153) (return), preds={BB20} succs={}
N755 (???,???) [000664] ------------                 IL_OFFSET void   IL offset: 0x147 REG NA
N757 (  1,  1) [000249] ------------       t249 =    LCL_VAR   ref    V02 loc0         u:2 rbx (last use) REG rbx $180
                                                  /--*  t249   ref    
N759 (  2,  2) [000568] -c----------       t568 = *  LEA(b+24) byref  REG NA
                                                  /--*  t568   byref  
N761 (  4,  4) [000250] n---GO------       t250 = *  IND       ref    REG rax <l:$575, c:$574>
                                                  /--*  t250   ref    
N763 (  4,  4) [000429] DA--GO------              *  STORE_LCL_VAR ref    V40 tmp29        d:2 rax REG rax
N765 (  1,  1) [000426] ------------       t426 =    LCL_VAR   ref    V40 tmp29        u:2 rax (last use) REG rax <l:$573, c:$177>
                                                  /--*  t426   ref    
N767 (  2,  2) [000570] -c----------       t570 = *  LEA(b+8)  byref  REG NA
                                                  /--*  t570   byref  
N769 (  4,  4) [000427] ---XG-------       t427 = *  IND       ref    REG rax <l:$57b, c:$57a>
                                                  /--*  t427   ref    
N771 (  5,  5) [000253] ---XG-------              *  RETURN    ref    REG NA $17a

------------ BB25 [???..???) (throw), preds={} succs={}
N811 ( 14,  5) [000672] --CXG-------                 CALL help void   HELPER.CORINFO_HELP_RNGCHKFAIL REG NA

------------ BB22 [0F4..0F8) -> BB24 (cond), preds={} succs={BB23,BB24}
N775 (???,???) [000665] ------------                 IL_OFFSET void   IL offset: 0xf4 REG NA
N777 (  1,  1) [000254] -c----------       t254 =    LCL_VAR   ref    V06 loc4         u:2 NA REG NA $164
N779 (  1,  1) [000255] -c----------       t255 =    CNS_INT   ref    null REG NA $VN.Null
                                                  /--*  t254   ref    
                                                  +--*  t255   ref    
N781 (  3,  3) [000256] J------N----              *  EQ        void   REG NA $293
N783 (  5,  5) [000257] ------------              *  JTRUE     void   REG NA

------------ BB23 [0F8..0FF), preds={BB22} succs={BB24}
N787 (???,???) [000666] ------------                 IL_OFFSET void   IL offset: 0xf8 REG NA
N789 (  1,  1) [000259] ------------       t259 =    LCL_VAR   ref    V06 loc4         u:2 rcx (last use) REG rcx $164
                                                  /--*  t259   ref    
N791 (???,???) [000727] ------------       t727 = *  PUTARG_REG ref    REG rcx
N793 (  2, 10) [000542] H-----------       t542 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127
                                                  /--*  t542   long   
N795 (???,???) [000728] ------------       t728 = *  PUTARG_REG long   REG r11
N797 (  2, 10) [000729] Hc----------       t729 =    CNS_INT(h) long   0xd1ffab1e ftn REG NA
                                                  /--*  t729   long   
N799 (  4, 12) [000730] -c----------       t730 = *  IND       long   REG NA
                                                  /--*  t727   ref    this in rcx
                                                  +--*  t728   long   arg1 in r11
                                                  +--*  t730   long   control expr
N801 ( 23, 21) [000260] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose REG NA $VN.Void

------------ BB24 [0FF..100) (finret), preds={BB22,BB23} succs={}
N805 (???,???) [000667] ------------                 IL_OFFSET void   IL offset: 0xff REG NA
N807 (  0,  0) [000258] ------------                 RETFILT   void   REG NA $600

-------------------------------------------------------------------------------------------------------------------

Final allocation
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
  0.#0   V0    Parm   Alloc rsi  |     |     |     |     |     |V0  a|     |     |     |     |     |     |     |     |
  0.#1   V1    Parm   Alloc rdi  |     |     |     |     |     |V0  a|V1  a|     |     |     |     |     |     |     |
  1.#2   BB1  PredBB0            |     |     |     |     |     |V0  a|V1  a|     |     |     |     |     |     |     |
  6.#3   C37   Def    Alloc rcx  |     |C37 a|     |     |     |V0  a|V1  a|     |     |     |     |     |     |     |
  7.#4   rcx   Fixd   Keep  rcx  |     |C37 a|     |     |     |V0  a|V1  a|     |     |     |     |     |     |     |
  7.#5   C37   Use *  Keep  rcx  |     |C37 i|     |     |     |V0  a|V1  a|     |     |     |     |     |     |     |
  8.#6   rcx   Fixd   Keep  rcx  |     |     |     |     |     |V0  a|V1  a|     |     |     |     |     |     |     |
  8.#7   I38   Def    Alloc rcx  |     |I38 a|     |     |     |V0  a|V1  a|     |     |     |     |     |     |     |
  9.#8   rcx   Fixd   Keep  rcx  |     |I38 a|     |     |     |V0  a|V1  a|     |     |     |     |     |     |     |
  9.#9   I38   Use *  Keep  rcx  |     |I38 i|     |     |     |V0  a|V1  a|     |     |     |     |     |     |     |
 10.#10  rax   Kill   Keep  rax  |     |     |     |     |     |V0  a|V1  a|     |     |     |     |     |     |     |
 10.#11  rcx   Kill   Keep  rcx  |     |     |     |     |     |V0  a|V1  a|     |     |     |     |     |     |     |
 10.#12  rdx   Kill   Keep  rdx  |     |     |     |     |     |V0  a|V1  a|     |     |     |     |     |     |     |
 10.#13  r8    Kill   Keep  r8   |     |     |     |     |     |V0  a|V1  a|     |     |     |     |     |     |     |
 10.#14  r9    Kill   Keep  r9   |     |     |     |     |     |V0  a|V1  a|     |     |     |     |     |     |     |
 10.#15  r10   Kill   Keep  r10  |     |     |     |     |     |V0  a|V1  a|     |     |     |     |     |     |     |
 10.#16  r11   Kill   Keep  r11  |     |     |     |     |     |V0  a|V1  a|     |     |     |     |     |     |     |
 10.#17  rax   Fixd   Keep  rax  |     |     |     |     |     |V0  a|V1  a|     |     |     |     |     |     |     |
 10.#18  I39   Def    Alloc rax  |I39 a|     |     |     |     |V0  a|V1  a|     |     |     |     |     |     |     |
 11.#19  I39   Use *  Keep  rax  |I39 i|     |     |     |     |V0  a|V1  a|     |     |     |     |     |     |     |
 12.#20  V12   Def    Alloc rbx  |     |     |     |V12 a|     |V0  a|V1  a|     |     |     |     |     |     |     |
 17.#21  V12   Use *  Keep  rbx  |     |     |     |V12 i|     |V0  a|V1  a|     |     |     |     |     |     |     |
 18.#22  V2    Def    Alloc rbx  |     |     |     |V2  a|     |V0  a|V1  a|     |     |     |     |     |     |     |
 23.#23  V2    Use    Keep  rbx  |     |     |     |V2  a|     |V0  a|V1  a|     |     |     |     |     |     |     |
 24.#24  I40   Def    Alloc rcx  |     |I40 a|     |V2  a|     |V0  a|V1  a|     |     |     |     |     |     |     |
 27.#25  rcx   Fixd   Keep  rcx  |     |I40 a|     |V2  a|     |V0  a|V1  a|     |     |     |     |     |     |     |
 27.#26  I40   Use *  Keep  rcx  |     |I40 i|     |V2  a|     |V0  a|V1  a|     |     |     |     |     |     |     |
 27.#27  rdx   Fixd   Keep  rdx  |     |     |     |V2  a|     |V0  a|V1  a|     |     |     |     |     |     |     |
 27.#28  V1    Use *  Copy  rdx  |     |     |V1  i|V2  a|     |V0  a|V1  i|     |     |     |     |     |     |     |
 28.#29  rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 28.#30  rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 28.#31  rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 28.#32  r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 28.#33  r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 28.#34  r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 28.#35  r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 28.#36  mm0   Kill   Keep  mm0  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 28.#37  mm1   Kill   Keep  mm1  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 28.#38  mm2   Kill   Keep  mm2  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 28.#39  mm3   Kill   Keep  mm3  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 28.#40  mm4   Kill   Keep  mm4  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 28.#41  mm5   Kill   Keep  mm5  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 36.#42  C41   Def    Alloc rcx  |     |C41 a|     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 37.#43  V2    Use    Keep  rbx  |     |C41 a|     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 37.#44  C41   Use *  Keep  rcx  |     |C41 i|     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 46.#45  C42   Def    Reuse rcx  |     |C42 a|     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 47.#46  V2    Use    Keep  rbx  |     |C42 a|     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 47.#47  C42   Use *  Keep  rcx  |     |C42 i|     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 52.#48  C43   Def    Alloc rcx  |     |C43 a|     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 53.#49  rcx   Fixd   Keep  rcx  |     |C43 a|     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 53.#50  C43   Use *  Keep  rcx  |     |C43 i|     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 54.#51  rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 54.#52  I44   Def    Alloc rcx  |     |I44 a|     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 55.#53  rcx   Fixd   Keep  rcx  |     |I44 a|     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 55.#54  I44   Use *  Keep  rcx  |     |I44 i|     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 56.#55  rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 56.#56  rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 56.#57  rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 56.#58  r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 56.#59  r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 56.#60  r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 56.#61  r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 56.#62  rax   Fixd   Keep  rax  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 56.#63  I45   Def    Alloc rax  |I45 a|     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 57.#64  I45   Use *  Keep  rax  |I45 i|     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 58.#65  V13   Def    Alloc rdi  |     |     |     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 60.#66  C46   Def    Alloc rcx  |     |C46 a|     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 61.#67  rcx   Fixd   Keep  rcx  |     |C46 a|     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 61.#68  C46   Use *  Keep  rcx  |     |C46 i|     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 62.#69  rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 62.#70  I47   Def    Alloc rcx  |     |I47 a|     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 63.#71  rcx   Fixd   Keep  rcx  |     |I47 a|     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 63.#72  I47   Use *  Keep  rcx  |     |I47 i|     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 64.#73  rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 64.#74  rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 64.#75  rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 64.#76  r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 64.#77  r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 64.#78  r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 64.#79  r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 64.#80  rax   Fixd   Keep  rax  |     |     |     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 64.#81  I48   Def    Alloc rax  |I48 a|     |     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 65.#82  I48   Use *  Keep  rax  |I48 i|     |     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 66.#83  V30   Def    Alloc rax  |V30 a|     |     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 73.#84  V30   Use    Keep  rax  |V30 a|     |     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 77.#85  V13   Use    Keep  rdi  |V30 a|     |     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 78.#86  I49   Def    Alloc rcx  |V30 a|I49 a|     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 81.#87  rcx   Fixd   Keep  rcx  |V30 a|I49 a|     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 81.#88  I49   Use *  Keep  rcx  |V30 a|I49 i|     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 81.#89  rdx   Fixd   Keep  rdx  |V30 a|     |     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
 81.#90  V30   Use *  Copy  rdx  |V30 i|     |V30 i|V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 82.#91  rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 82.#92  rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 82.#93  rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 82.#94  r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 82.#95  r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 82.#96  r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 82.#97  r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 82.#98  mm0   Kill   Keep  mm0  |     |     |     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 82.#99  mm1   Kill   Keep  mm1  |     |     |     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 82.#100 mm2   Kill   Keep  mm2  |     |     |     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 82.#101 mm3   Kill   Keep  mm3  |     |     |     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 82.#102 mm4   Kill   Keep  mm4  |     |     |     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 82.#103 mm5   Kill   Keep  mm5  |     |     |     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 87.#104 V2    Use    Keep  rbx  |     |     |     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 88.#105 I50   Def    Alloc rcx  |     |I50 a|     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 91.#106 rcx   Fixd   Keep  rcx  |     |I50 a|     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 91.#107 I50   Use *  Keep  rcx  |     |I50 i|     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 91.#108 rdx   Fixd   Keep  rdx  |     |     |     |V2  a|     |V0  a|V13 a|     |     |     |     |     |     |     |
 91.#109 V13   Use *  Copy  rdx  |     |     |V13 i|V2  a|     |V0  a|V13 i|     |     |     |     |     |     |     |
 92.#110 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 92.#111 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 92.#112 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 92.#113 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 92.#114 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 92.#115 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 92.#116 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 92.#117 mm0   Kill   Keep  mm0  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 92.#118 mm1   Kill   Keep  mm1  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 92.#119 mm2   Kill   Keep  mm2  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 92.#120 mm3   Kill   Keep  mm3  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 92.#121 mm4   Kill   Keep  mm4  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 92.#122 mm5   Kill   Keep  mm5  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 96.#123 C51   Def    Alloc rcx  |     |C51 a|     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 97.#124 rcx   Fixd   Keep  rcx  |     |C51 a|     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 97.#125 C51   Use *  Keep  rcx  |     |C51 i|     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 98.#126 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 98.#127 I52   Def    Alloc rcx  |     |I52 a|     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 99.#128 rcx   Fixd   Keep  rcx  |     |I52 a|     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
 99.#129 I52   Use *  Keep  rcx  |     |I52 i|     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
100.#130 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
100.#131 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
100.#132 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
100.#133 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
100.#134 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
100.#135 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
100.#136 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
100.#137 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
100.#138 I53   Def    Alloc rax  |I53 a|     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
101.#139 I53   Use *  Keep  rax  |I53 i|     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
102.#140 V14   Def    Alloc rdi  |     |     |     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
104.#141 C54   Def    Alloc rcx  |     |C54 a|     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
105.#142 rcx   Fixd   Keep  rcx  |     |C54 a|     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
105.#143 C54   Use *  Keep  rcx  |     |C54 i|     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
106.#144 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
106.#145 I55   Def    Alloc rcx  |     |I55 a|     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
108.#146 C56   Def    Alloc rdx  |     |I55 a|C56 a|V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
109.#147 rdx   Fixd   Keep  rdx  |     |I55 a|C56 a|V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
109.#148 C56   Use *  Keep  rdx  |     |I55 a|C56 i|V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
110.#149 rdx   Fixd   Keep  rdx  |     |I55 a|     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
110.#150 I57   Def    Alloc rdx  |     |I55 a|I57 a|V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
111.#151 rcx   Fixd   Keep  rcx  |     |I55 a|I57 a|V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
111.#152 I55   Use *  Keep  rcx  |     |I55 i|I57 a|V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
111.#153 rdx   Fixd   Keep  rdx  |     |     |I57 a|V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
111.#154 I57   Use *  Keep  rdx  |     |     |I57 i|V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
112.#155 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
112.#156 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
112.#157 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
112.#158 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
112.#159 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
112.#160 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
112.#161 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
112.#162 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
112.#163 I58   Def *  Alloc rax  |I58 i|     |     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
114.#164 C59   Def    Alloc rdx  |     |     |C59 a|V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
115.#165 C59   Use *  Keep  rdx  |     |     |C59 i|V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
116.#166 I60   Def    Alloc rdx  |     |     |I60 a|V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
119.#167 V14   Use    Keep  rdi  |     |     |I60 a|V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
120.#168 I61   Def    Alloc rcx  |     |I61 a|I60 a|V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
121.#169 rcx   Fixd   Keep  rcx  |     |I61 a|I60 a|V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
121.#170 I61   Use *  Keep  rcx  |     |I61 i|I60 a|V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
121.#171 rdx   Fixd   Keep  rdx  |     |     |I60 a|V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
121.#172 I60   Use *  Keep  rdx  |     |     |I60 i|V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
122.#173 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
122.#174 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
122.#175 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
122.#176 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
122.#177 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
122.#178 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
122.#179 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
122.#180 mm0   Kill   Keep  mm0  |     |     |     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
122.#181 mm1   Kill   Keep  mm1  |     |     |     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
122.#182 mm2   Kill   Keep  mm2  |     |     |     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
122.#183 mm3   Kill   Keep  mm3  |     |     |     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
122.#184 mm4   Kill   Keep  mm4  |     |     |     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
122.#185 mm5   Kill   Keep  mm5  |     |     |     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
127.#186 V2    Use    Keep  rbx  |     |     |     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
128.#187 I62   Def    Alloc rcx  |     |I62 a|     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
131.#188 rcx   Fixd   Keep  rcx  |     |I62 a|     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
131.#189 I62   Use *  Keep  rcx  |     |I62 i|     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
131.#190 rdx   Fixd   Keep  rdx  |     |     |     |V2  a|     |V0  a|V14 a|     |     |     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
131.#191 V14   Use *  Copy  rdx  |     |     |V14 i|V2  a|     |V0  a|V14 i|     |     |     |     |     |     |     |
132.#192 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
132.#193 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
132.#194 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
132.#195 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
132.#196 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
132.#197 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
132.#198 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
132.#199 mm0   Kill   Keep  mm0  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
132.#200 mm1   Kill   Keep  mm1  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
132.#201 mm2   Kill   Keep  mm2  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
132.#202 mm3   Kill   Keep  mm3  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
132.#203 mm4   Kill   Keep  mm4  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
132.#204 mm5   Kill   Keep  mm5  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
140.#205 C63   Def    Alloc rcx  |     |C63 a|     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
141.#206 V2    Use    Keep  rbx  |     |C63 a|     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
141.#207 C63   Use *  Keep  rcx  |     |C63 i|     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
146.#208 C64   Def    Alloc rcx  |     |C64 a|     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
147.#209 rcx   Fixd   Keep  rcx  |     |C64 a|     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
147.#210 C64   Use *  Keep  rcx  |     |C64 i|     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
148.#211 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
148.#212 I65   Def    Alloc rcx  |     |I65 a|     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
149.#213 rcx   Fixd   Keep  rcx  |     |I65 a|     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
149.#214 I65   Use *  Keep  rcx  |     |I65 i|     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
150.#215 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
150.#216 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
150.#217 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
150.#218 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
150.#219 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
150.#220 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
150.#221 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
150.#222 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
150.#223 I66   Def    Alloc rax  |I66 a|     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
151.#224 I66   Use *  Keep  rax  |I66 i|     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
152.#225 V15   Def    Alloc rdi  |     |     |     |V2  a|     |V0  a|V15 a|     |     |     |     |     |     |     |
155.#226 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V0  a|V15 a|     |     |     |     |     |     |     |
155.#227 V15   Use    Copy  rcx  |     |V15 a|     |V2  a|     |V0  a|V15 a|     |     |     |     |     |     |     |
156.#228 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V0  a|V15 a|     |     |     |     |     |     |     |
156.#229 I67   Def    Alloc rcx  |     |I67 a|     |V2  a|     |V0  a|V15 a|     |     |     |     |     |     |     |
158.#230 C68   Def    Alloc rdx  |     |I67 a|C68 a|V2  a|     |V0  a|V15 a|     |     |     |     |     |     |     |
159.#231 rdx   Fixd   Keep  rdx  |     |I67 a|C68 a|V2  a|     |V0  a|V15 a|     |     |     |     |     |     |     |
159.#232 C68   Use *  Keep  rdx  |     |I67 a|C68 i|V2  a|     |V0  a|V15 a|     |     |     |     |     |     |     |
160.#233 rdx   Fixd   Keep  rdx  |     |I67 a|     |V2  a|     |V0  a|V15 a|     |     |     |     |     |     |     |
160.#234 I69   Def    Alloc rdx  |     |I67 a|I69 a|V2  a|     |V0  a|V15 a|     |     |     |     |     |     |     |
161.#235 rcx   Fixd   Keep  rcx  |     |I67 a|I69 a|V2  a|     |V0  a|V15 a|     |     |     |     |     |     |     |
161.#236 I67   Use *  Keep  rcx  |     |I67 i|I69 a|V2  a|     |V0  a|V15 a|     |     |     |     |     |     |     |
161.#237 rdx   Fixd   Keep  rdx  |     |     |I69 a|V2  a|     |V0  a|V15 a|     |     |     |     |     |     |     |
161.#238 I69   Use *  Keep  rdx  |     |     |I69 i|V2  a|     |V0  a|V15 a|     |     |     |     |     |     |     |
162.#239 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|V15 a|     |     |     |     |     |     |     |
162.#240 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|V15 a|     |     |     |     |     |     |     |
162.#241 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|V15 a|     |     |     |     |     |     |     |
162.#242 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|V15 a|     |     |     |     |     |     |     |
162.#243 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|V15 a|     |     |     |     |     |     |     |
162.#244 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|V15 a|     |     |     |     |     |     |     |
162.#245 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|V15 a|     |     |     |     |     |     |     |
167.#246 V2    Use    Keep  rbx  |     |     |     |V2  a|     |V0  a|V15 a|     |     |     |     |     |     |     |
168.#247 I70   Def    Alloc rcx  |     |I70 a|     |V2  a|     |V0  a|V15 a|     |     |     |     |     |     |     |
171.#248 rcx   Fixd   Keep  rcx  |     |I70 a|     |V2  a|     |V0  a|V15 a|     |     |     |     |     |     |     |
171.#249 I70   Use *  Keep  rcx  |     |I70 i|     |V2  a|     |V0  a|V15 a|     |     |     |     |     |     |     |
171.#250 rdx   Fixd   Keep  rdx  |     |     |     |V2  a|     |V0  a|V15 a|     |     |     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
171.#251 V15   Use *  Copy  rdx  |     |     |V15 i|V2  a|     |V0  a|V15 i|     |     |     |     |     |     |     |
172.#252 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
172.#253 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
172.#254 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
172.#255 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
172.#256 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
172.#257 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
172.#258 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
172.#259 mm0   Kill   Keep  mm0  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
172.#260 mm1   Kill   Keep  mm1  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
172.#261 mm2   Kill   Keep  mm2  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
172.#262 mm3   Kill   Keep  mm3  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
172.#263 mm4   Kill   Keep  mm4  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
172.#264 mm5   Kill   Keep  mm5  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
174.#265 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
174.#266 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
174.#267 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
174.#268 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
174.#269 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
174.#270 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
174.#271 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
174.#272 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
174.#273 I71   Def    Alloc rax  |I71 a|     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
175.#274 I71   Use *  Keep  rax  |I71 i|     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
176.#275 V31   Def    Alloc rdi  |     |     |     |V2  a|     |V0  a|V31 a|     |     |     |     |     |     |     |
179.#276 V31   Use    Keep  rdi  |     |     |     |V2  a|     |V0  a|V31 a|     |     |     |     |     |     |     |
183.#277 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V0  a|V31 a|     |     |     |     |     |     |     |
183.#278 V31   Use    Copy  rcx  |     |V31 a|     |V2  a|     |V0  a|V31 a|     |     |     |     |     |     |     |
184.#279 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V0  a|V31 a|     |     |     |     |     |     |     |
184.#280 I72   Def    Alloc rcx  |     |I72 a|     |V2  a|     |V0  a|V31 a|     |     |     |     |     |     |     |
186.#281 C73   Def    Alloc rdx  |     |I72 a|C73 a|V2  a|     |V0  a|V31 a|     |     |     |     |     |     |     |
187.#282 rdx   Fixd   Keep  rdx  |     |I72 a|C73 a|V2  a|     |V0  a|V31 a|     |     |     |     |     |     |     |
187.#283 C73   Use *  Keep  rdx  |     |I72 a|C73 i|V2  a|     |V0  a|V31 a|     |     |     |     |     |     |     |
188.#284 rdx   Fixd   Keep  rdx  |     |I72 a|     |V2  a|     |V0  a|V31 a|     |     |     |     |     |     |     |
188.#285 I74   Def    Alloc rdx  |     |I72 a|I74 a|V2  a|     |V0  a|V31 a|     |     |     |     |     |     |     |
189.#286 rcx   Fixd   Keep  rcx  |     |I72 a|I74 a|V2  a|     |V0  a|V31 a|     |     |     |     |     |     |     |
189.#287 I72   Use *  Keep  rcx  |     |I72 i|I74 a|V2  a|     |V0  a|V31 a|     |     |     |     |     |     |     |
189.#288 rdx   Fixd   Keep  rdx  |     |     |I74 a|V2  a|     |V0  a|V31 a|     |     |     |     |     |     |     |
189.#289 I74   Use *  Keep  rdx  |     |     |I74 i|V2  a|     |V0  a|V31 a|     |     |     |     |     |     |     |
190.#290 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|V31 a|     |     |     |     |     |     |     |
190.#291 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|V31 a|     |     |     |     |     |     |     |
190.#292 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|V31 a|     |     |     |     |     |     |     |
190.#293 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|V31 a|     |     |     |     |     |     |     |
190.#294 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|V31 a|     |     |     |     |     |     |     |
190.#295 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|V31 a|     |     |     |     |     |     |     |
190.#296 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|V31 a|     |     |     |     |     |     |     |
195.#297 V31   Use *  Keep  rdi  |     |     |     |V2  a|     |V0  a|V31 i|     |     |     |     |     |     |     |
196.#298 I75   Def    Alloc rcx  |     |I75 a|     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
197.#299 rcx   Fixd   Keep  rcx  |     |I75 a|     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
197.#300 I75   Use *  Keep  rcx  |     |I75 i|     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
198.#301 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
198.#302 I76   Def    Alloc rcx  |     |I76 a|     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
199.#303 rcx   Fixd   Keep  rcx  |     |I76 a|     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
199.#304 I76   Use *  Keep  rcx  |     |I76 i|     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
200.#305 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
200.#306 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
200.#307 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
200.#308 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
200.#309 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
200.#310 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
200.#311 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
200.#312 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
200.#313 I77   Def    Alloc rax  |I77 a|     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
201.#314 I77   Use *  Keep  rax  |I77 i|     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
202.#315 V32   Def    Alloc rax  |V32 a|     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
207.#316 V32   Use *  Keep  rax  |V32 i|     |     |V2  a|     |V0  a|     |     |     |     |     |     |     |     |
208.#317 I78   Def    Alloc rdi  |     |     |     |V2  a|     |V0  a|I78 a|     |     |     |     |     |     |     |
209.#318 I78   Use *  Keep  rdi  |     |     |     |V2  a|     |V0  a|I78 i|     |     |     |     |     |     |     |
210.#319 V3    Def    Alloc rdi  |     |     |     |V2  a|     |V0  a|V3  a|     |     |     |     |     |     |     |
219.#320 V3    Use    Keep  rdi  |     |     |     |V2  a|     |V0  a|V3  a|     |     |     |     |     |     |     |
220.#321 I79   Def    Alloc r9   |     |     |     |V2  a|     |V0  a|V3  a|     |I79 a|     |     |     |     |     |
221.#322 r9    Fixd   Keep  r9   |     |     |     |V2  a|     |V0  a|V3  a|     |I79 a|     |     |     |     |     |
221.#323 I79   Use *  Keep  r9   |     |     |     |V2  a|     |V0  a|V3  a|     |I79 i|     |     |     |     |     |
222.#324 r9    Fixd   Keep  r9   |     |     |     |V2  a|     |V0  a|V3  a|     |     |     |     |     |     |     |
222.#325 I80   Def    Alloc r9   |     |     |     |V2  a|     |V0  a|V3  a|     |I80 a|     |     |     |     |     |
224.#326 C81   Def    Alloc rdx  |     |     |C81 a|V2  a|     |V0  a|V3  a|     |I80 a|     |     |     |     |     |
225.#327 C81   Use *  Keep  rdx  |     |     |C81 i|V2  a|     |V0  a|V3  a|     |I80 a|     |     |     |     |     |
226.#328 I82   Def    Alloc rdx  |     |     |I82 a|V2  a|     |V0  a|V3  a|     |I80 a|     |     |     |     |     |
227.#329 rdx   Fixd   Keep  rdx  |     |     |I82 a|V2  a|     |V0  a|V3  a|     |I80 a|     |     |     |     |     |
227.#330 I82   Use *  Keep  rdx  |     |     |I82 i|V2  a|     |V0  a|V3  a|     |I80 a|     |     |     |     |     |
228.#331 rdx   Fixd   Keep  rdx  |     |     |     |V2  a|     |V0  a|V3  a|     |I80 a|     |     |     |     |     |
228.#332 I83   Def    Alloc rdx  |     |     |I83 a|V2  a|     |V0  a|V3  a|     |I80 a|     |     |     |     |     |
231.#333 rcx   Fixd   Keep  rcx  |     |     |I83 a|V2  a|     |V0  a|V3  a|     |I80 a|     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
231.#334 V3    Use    Copy  rcx  |     |V3  a|I83 a|V2  a|     |V0  a|V3  a|     |I80 a|     |     |     |     |     |
232.#335 rcx   Fixd   Keep  rcx  |     |     |I83 a|V2  a|     |V0  a|V3  a|     |I80 a|     |     |     |     |     |
232.#336 I84   Def    Alloc rcx  |     |I84 a|I83 a|V2  a|     |V0  a|V3  a|     |I80 a|     |     |     |     |     |
234.#337 C85   Def    Alloc r8   |     |I84 a|I83 a|V2  a|     |V0  a|V3  a|C85 a|I80 a|     |     |     |     |     |
235.#338 r8    Fixd   Keep  r8   |     |I84 a|I83 a|V2  a|     |V0  a|V3  a|C85 a|I80 a|     |     |     |     |     |
235.#339 C85   Use *  Keep  r8   |     |I84 a|I83 a|V2  a|     |V0  a|V3  a|C85 i|I80 a|     |     |     |     |     |
236.#340 r8    Fixd   Keep  r8   |     |I84 a|I83 a|V2  a|     |V0  a|V3  a|     |I80 a|     |     |     |     |     |
236.#341 I86   Def    Alloc r8   |     |I84 a|I83 a|V2  a|     |V0  a|V3  a|I86 a|I80 a|     |     |     |     |     |
237.#342 r9    Fixd   Keep  r9   |     |I84 a|I83 a|V2  a|     |V0  a|V3  a|I86 a|I80 a|     |     |     |     |     |
237.#343 I80   Use *  Keep  r9   |     |I84 a|I83 a|V2  a|     |V0  a|V3  a|I86 a|I80 i|     |     |     |     |     |
237.#344 rdx   Fixd   Keep  rdx  |     |I84 a|I83 a|V2  a|     |V0  a|V3  a|I86 a|     |     |     |     |     |     |
237.#345 I83   Use *  Keep  rdx  |     |I84 a|I83 i|V2  a|     |V0  a|V3  a|I86 a|     |     |     |     |     |     |
237.#346 rcx   Fixd   Keep  rcx  |     |I84 a|     |V2  a|     |V0  a|V3  a|I86 a|     |     |     |     |     |     |
237.#347 I84   Use *  Keep  rcx  |     |I84 i|     |V2  a|     |V0  a|V3  a|I86 a|     |     |     |     |     |     |
237.#348 r8    Fixd   Keep  r8   |     |     |     |V2  a|     |V0  a|V3  a|I86 a|     |     |     |     |     |     |
237.#349 I86   Use *  Keep  r8   |     |     |     |V2  a|     |V0  a|V3  a|I86 i|     |     |     |     |     |     |
238.#350 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|V3  a|     |     |     |     |     |     |     |
238.#351 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|V3  a|     |     |     |     |     |     |     |
238.#352 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|V3  a|     |     |     |     |     |     |     |
238.#353 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|V3  a|     |     |     |     |     |     |     |
238.#354 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|V3  a|     |     |     |     |     |     |     |
238.#355 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|V3  a|     |     |     |     |     |     |     |
238.#356 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|V3  a|     |     |     |     |     |     |     |
238.#357 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |V0  a|V3  a|     |     |     |     |     |     |     |
238.#358 I87   Def    Alloc rax  |I87 a|     |     |V2  a|     |V0  a|V3  a|     |     |     |     |     |     |     |
241.#359 I87   Use *  Keep  rax  |I87 i|     |     |V2  a|     |V0  a|V3  a|     |     |     |     |     |     |     |
242.#360 I88   Def    Alloc r14  |     |     |     |V2  a|     |V0  a|V3  a|     |     |     |     |     |I88 a|     |
243.#361 I88   Use *  Keep  r14  |     |     |     |V2  a|     |V0  a|V3  a|     |     |     |     |     |I88 i|     |
244.#362 V4    Def    Alloc r14  |     |     |     |V2  a|     |V0  a|V3  a|     |     |     |     |     |V4  a|     |
246.#363 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V0  a|V3  a|     |     |     |     |     |V4  a|     |
246.#364 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V0  a|V3  a|     |     |     |     |     |V4  a|     |
246.#365 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V0  a|V3  a|     |     |     |     |     |V4  a|     |
246.#366 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V0  a|V3  a|     |     |     |     |     |V4  a|     |
246.#367 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V0  a|V3  a|     |     |     |     |     |V4  a|     |
246.#368 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V0  a|V3  a|     |     |     |     |     |V4  a|     |
246.#369 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V0  a|V3  a|     |     |     |     |     |V4  a|     |
246.#370 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |V0  a|V3  a|     |     |     |     |     |V4  a|     |
246.#371 I89   Def    Alloc rax  |I89 a|     |     |V2  a|     |V0  a|V3  a|     |     |     |     |     |V4  a|     |
247.#372 I89   Use *  Keep  rax  |I89 i|     |     |V2  a|     |V0  a|V3  a|     |     |     |     |     |V4  a|     |
248.#373 V41   Def    Alloc rax  |V41 a|     |     |V2  a|     |V0  a|V3  a|     |     |     |     |     |V4  a|     |
257.#374 V41   Use    Keep  rax  |V41 a|     |     |V2  a|     |V0  a|V3  a|     |     |     |     |     |V4  a|     |
263.#375 V41   Use *  Keep  rax  |V41 i|     |     |V2  a|     |V0  a|V3  a|     |     |     |     |     |V4  a|     |
264.#376 I90   Def    Alloc r15  |     |     |     |V2  a|     |V0  a|V3  a|     |     |     |     |     |V4  a|I90 a|
265.#377 I90   Use *  Keep  r15  |     |     |     |V2  a|     |V0  a|V3  a|     |     |     |     |     |V4  a|I90 i|
266.#378 V5    Def    Alloc r15  |     |     |     |V2  a|     |V0  a|V3  a|     |     |     |     |     |V4  a|V5  a|
271.#379 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V0  a|V3  a|     |     |     |     |     |V4  a|V5  a|
271.#380 V0    Use *  Copy  rcx  |     |V0  i|     |V2  a|     |V0  i|V3  a|     |     |     |     |     |V4  a|V5  a|
272.#381 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
272.#382 I91   Def    Alloc rcx  |     |I91 a|     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
274.#383 r11   Fixd   Keep  r11  |     |I91 a|     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
274.#384 C92   Def    Alloc r11  |     |I91 a|     |V2  a|     |     |V3  a|     |     |C92 a|     |     |V4  a|V5  a|
275.#385 r11   Fixd   Keep  r11  |     |I91 a|     |V2  a|     |     |V3  a|     |     |C92 a|     |     |V4  a|V5  a|
275.#386 C92   Use *  Keep  r11  |     |I91 a|     |V2  a|     |     |V3  a|     |     |C92 i|     |     |V4  a|V5  a|
276.#387 r11   Fixd   Keep  r11  |     |I91 a|     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
276.#388 I93   Def    Alloc r11  |     |I91 a|     |V2  a|     |     |V3  a|     |     |I93 a|     |     |V4  a|V5  a|
281.#389 rcx   Fixd   Keep  rcx  |     |I91 a|     |V2  a|     |     |V3  a|     |     |I93 a|     |     |V4  a|V5  a|
281.#390 I91   Use *  Keep  rcx  |     |I91 i|     |V2  a|     |     |V3  a|     |     |I93 a|     |     |V4  a|V5  a|
281.#391 r11   Fixd   Keep  r11  |     |     |     |V2  a|     |     |V3  a|     |     |I93 a|     |     |V4  a|V5  a|
281.#392 I93   Use *  Keep  r11  |     |     |     |V2  a|     |     |V3  a|     |     |I93 i|     |     |V4  a|V5  a|
282.#393 rax   Kill   Keep  rax  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
282.#394 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
282.#395 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
282.#396 r8    Kill   Keep  r8   |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
282.#397 r9    Kill   Keep  r9   |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
282.#398 r10   Kill   Keep  r10  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
282.#399 r11   Kill   Keep  r11  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
282.#400 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
282.#401 I94   Def    Alloc rax  |I94 a|     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
283.#402 I94   Use *  Keep  rax  |I94 i|     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
285.#403 BB2  PredBB1            |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
290.#404 I95   Def    Alloc rcx  |     |I95 a|     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
291.#405 rcx   Fixd   Keep  rcx  |     |I95 a|     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
291.#406 I95   Use *  Keep  rcx  |     |I95 i|     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
292.#407 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
292.#408 I96   Def    Alloc rcx  |     |I96 a|     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
294.#409 r11   Fixd   Keep  r11  |     |I96 a|     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
294.#410 C97   Def    Alloc r11  |     |I96 a|     |V2  a|     |     |V3  a|     |     |C97 a|     |     |V4  a|V5  a|
295.#411 r11   Fixd   Keep  r11  |     |I96 a|     |V2  a|     |     |V3  a|     |     |C97 a|     |     |V4  a|V5  a|
295.#412 C97   Use *  Keep  r11  |     |I96 a|     |V2  a|     |     |V3  a|     |     |C97 i|     |     |V4  a|V5  a|
296.#413 r11   Fixd   Keep  r11  |     |I96 a|     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
296.#414 I98   Def    Alloc r11  |     |I96 a|     |V2  a|     |     |V3  a|     |     |I98 a|     |     |V4  a|V5  a|
301.#415 rcx   Fixd   Keep  rcx  |     |I96 a|     |V2  a|     |     |V3  a|     |     |I98 a|     |     |V4  a|V5  a|
301.#416 I96   Use *  Keep  rcx  |     |I96 i|     |V2  a|     |     |V3  a|     |     |I98 a|     |     |V4  a|V5  a|
301.#417 r11   Fixd   Keep  r11  |     |     |     |V2  a|     |     |V3  a|     |     |I98 a|     |     |V4  a|V5  a|
301.#418 I98   Use *  Keep  r11  |     |     |     |V2  a|     |     |V3  a|     |     |I98 i|     |     |V4  a|V5  a|
302.#419 rax   Kill   Keep  rax  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
302.#420 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
302.#421 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
302.#422 r8    Kill   Keep  r8   |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
302.#423 r9    Kill   Keep  r9   |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
302.#424 r10   Kill   Keep  r10  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
302.#425 r11   Kill   Keep  r11  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
302.#426 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
302.#427 I99   Def    Alloc rax  |I99 a|     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
305.#428 I99   Use *  Keep  rax  |I99 i|     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
309.#429 BB3  PredBB2            |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
314.#430 I100  Def    Alloc rcx  |     |I100a|     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
315.#431 rcx   Fixd   Keep  rcx  |     |I100a|     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
315.#432 I100  Use *  Keep  rcx  |     |I100i|     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
316.#433 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
316.#434 I101  Def    Alloc rcx  |     |I101a|     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
318.#435 r11   Fixd   Keep  r11  |     |I101a|     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
318.#436 C102  Def    Alloc r11  |     |I101a|     |V2  a|     |     |V3  a|     |     |C102a|     |     |V4  a|V5  a|
319.#437 r11   Fixd   Keep  r11  |     |I101a|     |V2  a|     |     |V3  a|     |     |C102a|     |     |V4  a|V5  a|
319.#438 C102  Use *  Keep  r11  |     |I101a|     |V2  a|     |     |V3  a|     |     |C102i|     |     |V4  a|V5  a|
320.#439 r11   Fixd   Keep  r11  |     |I101a|     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
320.#440 I103  Def    Alloc r11  |     |I101a|     |V2  a|     |     |V3  a|     |     |I103a|     |     |V4  a|V5  a|
325.#441 rcx   Fixd   Keep  rcx  |     |I101a|     |V2  a|     |     |V3  a|     |     |I103a|     |     |V4  a|V5  a|
325.#442 I101  Use *  Keep  rcx  |     |I101i|     |V2  a|     |     |V3  a|     |     |I103a|     |     |V4  a|V5  a|
325.#443 r11   Fixd   Keep  r11  |     |     |     |V2  a|     |     |V3  a|     |     |I103a|     |     |V4  a|V5  a|
325.#444 I103  Use *  Keep  r11  |     |     |     |V2  a|     |     |V3  a|     |     |I103i|     |     |V4  a|V5  a|
326.#445 rax   Kill   Keep  rax  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
326.#446 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
326.#447 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
326.#448 r8    Kill   Keep  r8   |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
326.#449 r9    Kill   Keep  r9   |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
326.#450 r10   Kill   Keep  r10  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
326.#451 r11   Kill   Keep  r11  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
326.#452 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
326.#453 I104  Def    Alloc rax  |I104a|     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
327.#454 I104  Use *  Keep  rax  |I104i|     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
328.#455 V7    Def    Alloc rsi  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |     |     |V4  a|V5  a|
332.#456 C105  Def    Alloc rcx  |     |C105a|     |V2  a|     |V7  a|V3  a|     |     |     |     |     |V4  a|V5  a|
333.#457 rcx   Fixd   Keep  rcx  |     |C105a|     |V2  a|     |V7  a|V3  a|     |     |     |     |     |V4  a|V5  a|
333.#458 C105  Use *  Keep  rcx  |     |C105i|     |V2  a|     |V7  a|V3  a|     |     |     |     |     |V4  a|V5  a|
334.#459 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |     |     |V4  a|V5  a|
334.#460 I106  Def    Alloc rcx  |     |I106a|     |V2  a|     |V7  a|V3  a|     |     |     |     |     |V4  a|V5  a|
335.#461 rcx   Fixd   Keep  rcx  |     |I106a|     |V2  a|     |V7  a|V3  a|     |     |     |     |     |V4  a|V5  a|
335.#462 I106  Use *  Keep  rcx  |     |I106i|     |V2  a|     |V7  a|V3  a|     |     |     |     |     |V4  a|V5  a|
336.#463 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |     |     |V4  a|V5  a|
336.#464 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |     |     |V4  a|V5  a|
336.#465 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |     |     |V4  a|V5  a|
336.#466 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |     |     |V4  a|V5  a|
336.#467 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |     |     |V4  a|V5  a|
336.#468 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |     |     |V4  a|V5  a|
336.#469 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |     |     |V4  a|V5  a|
336.#470 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |     |     |V4  a|V5  a|
336.#471 I107  Def    Alloc rax  |I107a|     |     |V2  a|     |V7  a|V3  a|     |     |     |     |     |V4  a|V5  a|
337.#472 I107  Use *  Keep  rax  |I107i|     |     |V2  a|     |V7  a|V3  a|     |     |     |     |     |V4  a|V5  a|
338.#473 V16   Def    Alloc r12  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|     |V4  a|V5  a|
343.#474 V16   Use    Keep  r12  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|     |V4  a|V5  a|
344.#475 I108  Def    Alloc rcx  |     |I108a|     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|     |V4  a|V5  a|
347.#476 rcx   Fixd   Keep  rcx  |     |I108a|     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|     |V4  a|V5  a|
347.#477 I108  Use *  Keep  rcx  |     |I108i|     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|     |V4  a|V5  a|
347.#478 rdx   Fixd   Keep  rdx  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|     |V4  a|V5  a|
347.#479 V3    Use    Copy  rdx  |     |     |V3  a|V2  a|     |V7  a|V3  a|     |     |     |V16 a|     |V4  a|V5  a|
348.#480 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|     |V4  a|V5  a|
348.#481 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|     |V4  a|V5  a|
348.#482 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|     |V4  a|V5  a|
348.#483 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|     |V4  a|V5  a|
348.#484 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|     |V4  a|V5  a|
348.#485 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|     |V4  a|V5  a|
348.#486 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|     |V4  a|V5  a|
348.#487 mm0   Kill   Keep  mm0  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|     |V4  a|V5  a|
348.#488 mm1   Kill   Keep  mm1  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|     |V4  a|V5  a|
348.#489 mm2   Kill   Keep  mm2  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|     |V4  a|V5  a|
348.#490 mm3   Kill   Keep  mm3  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|     |V4  a|V5  a|
348.#491 mm4   Kill   Keep  mm4  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|     |V4  a|V5  a|
348.#492 mm5   Kill   Keep  mm5  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V16 a|     |V4  a|V5  a|
351.#493 V16   Use *  Keep  r12  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V16 i|     |V4  a|V5  a|
352.#494 V17   Def    Alloc r12  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V17 a|     |V4  a|V5  a|
355.#495 V17   Use *  Keep  r12  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V17 i|     |V4  a|V5  a|
356.#496 V18   Def    Alloc r12  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V18 a|     |V4  a|V5  a|
363.#497 V4    Use    Keep  r14  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V18 a|     |V4  a|V5  a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
367.#498 BB4  PredBB3            |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V18 a|     |V4  a|V5  a|
371.#499 V18   Use *  Keep  r12  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V18 i|     |V4  a|V5  a|
372.#500 V19   Def    Alloc r12  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V19 a|     |V4  a|V5  a|
375.#501 V19   Use    Keep  r12  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V19 a|     |V4  a|V5  a|
376.#502 V20   Def    Alloc r13  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
379.#503 V7    Use *  Keep  rsi  |     |     |     |V2  a|     |V7  i|V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
380.#504 V21   Def    Alloc rdx  |     |     |V21 a|V2  a|     |     |V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
381.#505 BB5  PredBB3            |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V18 a|     |V4  a|V5  a|
385.#506 V18   Use *  Keep  r12  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V18 i|     |V4  a|V5  a|
386.#507 V19   Def    Alloc r12  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V19 a|     |V4  a|V5  a|
389.#508 V19   Use    Keep  r12  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V19 a|     |V4  a|V5  a|
390.#509 V20   Def    Alloc r13  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
392.#510 C109  Def    Alloc rdx  |     |     |C109a|V2  a|     |V7  a|V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
393.#511 C109  Use *  Keep  rdx  |     |     |C109i|V2  a|     |V7  a|V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
394.#512 I110  Def    Alloc rdx  |     |     |I110a|V2  a|     |V7  a|V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
395.#513 rdx   Fixd   Keep  rdx  |     |     |I110a|V2  a|     |V7  a|V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
395.#514 I110  Use *  Keep  rdx  |     |     |I110i|V2  a|     |V7  a|V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
396.#515 rdx   Fixd   Keep  rdx  |     |     |     |V2  a|     |V7  a|V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
396.#516 I111  Def    Alloc rdx  |     |     |I111a|V2  a|     |V7  a|V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
399.#517 rcx   Fixd   Keep  rcx  |     |     |I111a|V2  a|     |V7  a|V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
399.#518 V5    Use    Copy  rcx  |     |V5  a|I111a|V2  a|     |V7  a|V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
400.#519 rcx   Fixd   Keep  rcx  |     |     |I111a|V2  a|     |V7  a|V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
400.#520 I112  Def    Alloc rcx  |     |I112a|I111a|V2  a|     |V7  a|V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
403.#521 r8    Fixd   Keep  r8   |     |I112a|I111a|V2  a|     |V7  a|V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
403.#522 V7    Use *  Copy  r8   |     |I112a|I111a|V2  a|     |V7  i|V3  a|V7  i|     |     |V19 a|V20 a|V4  a|V5  a|
404.#523 r8    Fixd   Keep  r8   |     |I112a|I111a|V2  a|     |     |V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
404.#524 I113  Def    Alloc r8   |     |I112a|I111a|V2  a|     |     |V3  a|I113a|     |     |V19 a|V20 a|V4  a|V5  a|
405.#525 rdx   Fixd   Keep  rdx  |     |I112a|I111a|V2  a|     |     |V3  a|I113a|     |     |V19 a|V20 a|V4  a|V5  a|
405.#526 I111  Use *  Keep  rdx  |     |I112a|I111i|V2  a|     |     |V3  a|I113a|     |     |V19 a|V20 a|V4  a|V5  a|
405.#527 rcx   Fixd   Keep  rcx  |     |I112a|     |V2  a|     |     |V3  a|I113a|     |     |V19 a|V20 a|V4  a|V5  a|
405.#528 I112  Use *  Keep  rcx  |     |I112i|     |V2  a|     |     |V3  a|I113a|     |     |V19 a|V20 a|V4  a|V5  a|
405.#529 r8    Fixd   Keep  r8   |     |     |     |V2  a|     |     |V3  a|I113a|     |     |V19 a|V20 a|V4  a|V5  a|
405.#530 I113  Use *  Keep  r8   |     |     |     |V2  a|     |     |V3  a|I113i|     |     |V19 a|V20 a|V4  a|V5  a|
406.#531 rax   Kill   Keep  rax  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
406.#532 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
406.#533 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
406.#534 r8    Kill   Keep  r8   |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
406.#535 r9    Kill   Keep  r9   |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
406.#536 r10   Kill   Keep  r10  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
406.#537 r11   Kill   Keep  r11  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
406.#538 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
406.#539 I114  Def    Alloc rax  |I114a|     |     |V2  a|     |     |V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
407.#540 I114  Use *  Keep  rax  |I114i|     |     |V2  a|     |     |V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
408.#541 V21   Def    Alloc rdx  |     |     |V21 a|V2  a|     |     |V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
409.#542 BB6  PredBB4            |     |     |V21 a|V2  a|     |     |V3  a|     |     |     |V19 a|V20 a|V4  a|V5  a|
413.#543 V20   Use *  Keep  r13  |     |     |V21 a|V2  a|     |     |V3  a|     |     |     |V19 a|V20 i|V4  a|V5  a|
414.#544 I115  Def    Alloc rcx  |     |I115a|V21 a|V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
417.#545 rcx   Fixd   Keep  rcx  |     |I115a|V21 a|V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
417.#546 I115  Use *  Keep  rcx  |     |I115i|V21 a|V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
417.#547 rdx   Fixd   Keep  rdx  |     |     |V21 a|V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
417.#548 V21   Use *  Keep  rdx  |     |     |V21 i|V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
418.#549 rax   Kill   Keep  rax  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
418.#550 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
418.#551 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
418.#552 r8    Kill   Keep  r8   |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
418.#553 r9    Kill   Keep  r9   |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
418.#554 r10   Kill   Keep  r10  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
418.#555 r11   Kill   Keep  r11  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
418.#556 mm0   Kill   Keep  mm0  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
418.#557 mm1   Kill   Keep  mm1  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
418.#558 mm2   Kill   Keep  mm2  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
418.#559 mm3   Kill   Keep  mm3  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
418.#560 mm4   Kill   Keep  mm4  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
418.#561 mm5   Kill   Keep  mm5  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
427.#562 V19   Use    Keep  r12  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
435.#563 V2    Use    Keep  rbx  |     |     |     |V2  a|     |     |V3  a|     |     |     |V19 a|     |V4  a|V5  a|
436.#564 I116  Def    Alloc rsi  |     |     |     |V2  a|     |I116a|V3  a|     |     |     |V19 a|     |V4  a|V5  a|
437.#565 I116  Use *  Keep  rsi  |     |     |     |V2  a|     |I116i|V3  a|     |     |     |V19 a|     |V4  a|V5  a|
438.#566 V23   Def    Alloc rsi  |     |     |     |V2  a|     |V23 a|V3  a|     |     |     |V19 a|     |V4  a|V5  a|
445.#567 V2    Use    Keep  rbx  |     |     |     |V2  a|     |V23 a|V3  a|     |     |     |V19 a|     |V4  a|V5  a|
446.#568 I117  Def    Alloc r13  |     |     |     |V2  a|     |V23 a|V3  a|     |     |     |V19 a|I117a|V4  a|V5  a|
447.#569 I117  Use *  Keep  r13  |     |     |     |V2  a|     |V23 a|V3  a|     |     |     |V19 a|I117i|V4  a|V5  a|
448.#570 V22   Def    Alloc r13  |     |     |     |V2  a|     |V23 a|V3  a|     |     |     |V19 a|V22 a|V4  a|V5  a|
451.#571 V23   Use *  Keep  rsi  |     |     |     |V2  a|     |V23 i|V3  a|     |     |     |V19 a|V22 a|V4  a|V5  a|
452.#572 V24   Def    Alloc rsi  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V19 a|V22 a|V4  a|V5  a|
455.#573 V19   Use *  Keep  r12  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V19 i|V22 a|V4  a|V5  a|
456.#574 V25   Def    Alloc r12  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V22 a|V4  a|V5  a|
459.#575 V22   Use *  Keep  r13  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V22 i|V4  a|V5  a|
460.#576 V26   Def    Alloc r13  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
465.#577 V26   Use    Keep  r13  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
469.#578 BB7  PredBB6            |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|     |V4  a|V5  a|
472.#579 C118  Def    Alloc rcx  |     |C118a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|     |V4  a|V5  a|
473.#580 rcx   Fixd   Keep  rcx  |     |C118a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|     |V4  a|V5  a|
473.#581 C118  Use *  Keep  rcx  |     |C118i|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|     |V4  a|V5  a|
474.#582 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|     |V4  a|V5  a|
474.#583 I119  Def    Alloc rcx  |     |I119a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|     |V4  a|V5  a|
475.#584 rcx   Fixd   Keep  rcx  |     |I119a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|     |V4  a|V5  a|
475.#585 I119  Use *  Keep  rcx  |     |I119i|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|     |V4  a|V5  a|
476.#586 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|     |V4  a|V5  a|
476.#587 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|     |V4  a|V5  a|
476.#588 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|     |V4  a|V5  a|
476.#589 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|     |V4  a|V5  a|
476.#590 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|     |V4  a|V5  a|
476.#591 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|     |V4  a|V5  a|
476.#592 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|     |V4  a|V5  a|
476.#593 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|     |V4  a|V5  a|
476.#594 I120  Def    Alloc rax  |I120a|     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|     |V4  a|V5  a|
477.#595 I120  Use *  Keep  rax  |I120i|     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|     |V4  a|V5  a|
478.#596 V28   Def    Alloc r13  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
481.#597 V28   Use    Keep  r13  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
482.#598 I121  Def    Alloc rcx  |     |I121a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
485.#599 rcx   Fixd   Keep  rcx  |     |I121a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
485.#600 I121  Use *  Keep  rcx  |     |I121i|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
485.#601 rdx   Fixd   Keep  rdx  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
485.#602 V2    Use    Copy  rdx  |     |     |V2  a|V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
486.#603 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
486.#604 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
486.#605 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
486.#606 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
486.#607 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
486.#608 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
486.#609 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
486.#610 mm0   Kill   Keep  mm0  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
486.#611 mm1   Kill   Keep  mm1  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
486.#612 mm2   Kill   Keep  mm2  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
486.#613 mm3   Kill   Keep  mm3  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
486.#614 mm4   Kill   Keep  mm4  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
486.#615 mm5   Kill   Keep  mm5  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
492.#616 C122  Def    Alloc rdx  |     |     |C122a|V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
493.#617 V28   Use    Keep  r13  |     |     |C122a|V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
493.#618 C122  Use *  Keep  rdx  |     |     |C122i|V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
497.#619 V2    Use    Keep  rbx  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
498.#620 I123  Def    Alloc rcx  |     |I123a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
501.#621 rcx   Fixd   Keep  rcx  |     |I123a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
501.#622 I123  Use *  Keep  rcx  |     |I123i|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
501.#623 rdx   Fixd   Keep  rdx  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
501.#624 V28   Use    Copy  rdx  |     |     |V28 a|V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
502.#625 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
502.#626 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
502.#627 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
502.#628 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
502.#629 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
502.#630 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
502.#631 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
502.#632 mm0   Kill   Keep  mm0  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
502.#633 mm1   Kill   Keep  mm1  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
502.#634 mm2   Kill   Keep  mm2  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
502.#635 mm3   Kill   Keep  mm3  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
502.#636 mm4   Kill   Keep  mm4  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
502.#637 mm5   Kill   Keep  mm5  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 a|V4  a|V5  a|
505.#638 V28   Use *  Keep  r13  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V28 i|V4  a|V5  a|
506.#639 V26   Def    Alloc r13  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
507.#640 BB9  PredBB6            |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
510.#641 C124  Def    Alloc rcx  |     |C124a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
511.#642 rcx   Fixd   Keep  rcx  |     |C124a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
511.#643 C124  Use *  Keep  rcx  |     |C124i|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
512.#644 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
512.#645 I125  Def    Alloc rcx  |     |I125a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
513.#646 rcx   Fixd   Keep  rcx  |     |I125a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
513.#647 I125  Use *  Keep  rcx  |     |I125i|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
514.#648 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
514.#649 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
514.#650 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
514.#651 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
514.#652 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
514.#653 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
514.#654 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
514.#655 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
514.#656 I126  Def    Alloc rax  |I126a|     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
515.#657 I126  Use *  Keep  rax  |I126i|     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
516.#658 V27   Def    Alloc rax  |V27 a|     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
519.#659 V27   Use    Keep  rax  |V27 i|     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
                      Spill rax  |V27 i|     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
520.#660 I127  Def    Alloc rcx  |     |I127a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
523.#661 rcx   Fixd   Keep  rcx  |     |I127a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
523.#662 I127  Use *  Keep  rcx  |     |I127i|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
523.#663 rdx   Fixd   Keep  rdx  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
523.#664 V2    Use    Copy  rdx  |     |     |V2  a|V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
524.#665 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
524.#666 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
524.#667 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
524.#668 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
524.#669 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
524.#670 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
524.#671 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
524.#672 mm0   Kill   Keep  mm0  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
524.#673 mm1   Kill   Keep  mm1  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
524.#674 mm2   Kill   Keep  mm2  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
524.#675 mm3   Kill   Keep  mm3  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
524.#676 mm4   Kill   Keep  mm4  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
524.#677 mm5   Kill   Keep  mm5  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
530.#678 C128  Def    Alloc rcx  |     |C128a|     |V2  a|     |V24 a|V3  a|     |     |     |V25 a|V26 a|V4  a|V5  a|
531.#679 V27   Use    ReLod r8   |     |C128a|     |V2  a|     |V24 a|V3  a|V27 a|     |     |V25 a|V26 a|V4  a|V5  a|
                      Keep  r8   |     |C128a|     |V2  a|     |V24 a|V3  a|V27 a|     |     |V25 a|V26 a|V4  a|V5  a|
531.#680 C128  Use *  Keep  rcx  |     |C128i|     |V2  a|     |V24 a|V3  a|V27 a|     |     |V25 a|V26 a|V4  a|V5  a|
537.#681 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V24 a|V3  a|V27 a|     |     |V25 a|V26 a|V4  a|V5  a|
537.#682 V25   Use *  Copy  rcx  |     |V25 i|     |V2  a|     |V24 a|V3  a|V27 a|     |     |V25 i|V26 a|V4  a|V5  a|
538.#683 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V24 a|V3  a|V27 a|     |     |     |V26 a|V4  a|V5  a|
538.#684 I129  Def    Alloc rcx  |     |I129a|     |V2  a|     |V24 a|V3  a|V27 a|     |     |     |V26 a|V4  a|V5  a|
541.#685 rdx   Fixd   Keep  rdx  |     |I129a|     |V2  a|     |V24 a|V3  a|V27 a|     |     |     |V26 a|V4  a|V5  a|
541.#686 V26   Use *  Copy  rdx  |     |I129a|V26 i|V2  a|     |V24 a|V3  a|V27 a|     |     |     |V26 i|V4  a|V5  a|
542.#687 rdx   Fixd   Keep  rdx  |     |I129a|     |V2  a|     |V24 a|V3  a|V27 a|     |     |     |     |V4  a|V5  a|
542.#688 I130  Def    Alloc rdx  |     |I129a|I130a|V2  a|     |V24 a|V3  a|V27 a|     |     |     |     |V4  a|V5  a|
545.#689 r8    Fixd   Keep  r8   |     |I129a|I130a|V2  a|     |V24 a|V3  a|V27 a|     |     |     |     |V4  a|V5  a|
545.#690 V27   Use *  Keep  r8   |     |I129a|I130a|V2  a|     |V24 a|V3  a|V27 i|     |     |     |     |V4  a|V5  a|
546.#691 r8    Fixd   Keep  r8   |     |I129a|I130a|V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
546.#692 I131  Def    Alloc r8   |     |I129a|I130a|V2  a|     |V24 a|V3  a|I131a|     |     |     |     |V4  a|V5  a|
547.#693 rcx   Fixd   Keep  rcx  |     |I129a|I130a|V2  a|     |V24 a|V3  a|I131a|     |     |     |     |V4  a|V5  a|
547.#694 I129  Use *  Keep  rcx  |     |I129i|I130a|V2  a|     |V24 a|V3  a|I131a|     |     |     |     |V4  a|V5  a|
547.#695 rdx   Fixd   Keep  rdx  |     |     |I130a|V2  a|     |V24 a|V3  a|I131a|     |     |     |     |V4  a|V5  a|
547.#696 I130  Use *  Keep  rdx  |     |     |I130i|V2  a|     |V24 a|V3  a|I131a|     |     |     |     |V4  a|V5  a|
547.#697 r8    Fixd   Keep  r8   |     |     |     |V2  a|     |V24 a|V3  a|I131a|     |     |     |     |V4  a|V5  a|
547.#698 I131  Use *  Keep  r8   |     |     |     |V2  a|     |V24 a|V3  a|I131i|     |     |     |     |V4  a|V5  a|
548.#699 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
548.#700 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
548.#701 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
548.#702 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
548.#703 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
548.#704 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
548.#705 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
548.#706 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
548.#707 I132  Def    Alloc rax  |I132a|     |     |V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
549.#708 I132  Use *  Keep  rax  |I132i|     |     |V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
550.#709 V42   Def    Alloc rdx  |     |     |V42 a|V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
553.#710 rdx   Fixd   Keep  rdx  |     |     |V42 a|V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
553.#711 V42   Use *  Keep  rdx  |     |     |V42 i|V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
554.#712 rdx   Fixd   Keep  rdx  |     |     |     |V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
554.#713 I133  Def    Alloc rdx  |     |     |I133a|V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
557.#714 rcx   Fixd   Keep  rcx  |     |     |I133a|V2  a|     |V24 a|V3  a|     |     |     |     |     |V4  a|V5  a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
557.#715 V24   Use *  Copy  rcx  |     |V24 i|I133a|V2  a|     |V24 i|V3  a|     |     |     |     |     |V4  a|V5  a|
558.#716 rcx   Fixd   Keep  rcx  |     |     |I133a|V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
558.#717 I134  Def    Alloc rcx  |     |I134a|I133a|V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
559.#718 rdx   Fixd   Keep  rdx  |     |I134a|I133a|V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
559.#719 I133  Use *  Keep  rdx  |     |I134a|I133i|V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
559.#720 rcx   Fixd   Keep  rcx  |     |I134a|     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
559.#721 I134  Use *  Keep  rcx  |     |I134i|     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
560.#722 rax   Kill   Keep  rax  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
560.#723 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
560.#724 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
560.#725 r8    Kill   Keep  r8   |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
560.#726 r9    Kill   Keep  r9   |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
560.#727 r10   Kill   Keep  r10  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
560.#728 r11   Kill   Keep  r11  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
564.#729 I135  Def    Alloc rcx  |     |I135a|     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
565.#730 rcx   Fixd   Keep  rcx  |     |I135a|     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
565.#731 I135  Use *  Keep  rcx  |     |I135i|     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
566.#732 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
566.#733 I136  Def    Alloc rcx  |     |I136a|     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
568.#734 r11   Fixd   Keep  r11  |     |I136a|     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
568.#735 C137  Def    Alloc r11  |     |I136a|     |V2  a|     |     |V3  a|     |     |C137a|     |     |V4  a|V5  a|
569.#736 r11   Fixd   Keep  r11  |     |I136a|     |V2  a|     |     |V3  a|     |     |C137a|     |     |V4  a|V5  a|
569.#737 C137  Use *  Keep  r11  |     |I136a|     |V2  a|     |     |V3  a|     |     |C137i|     |     |V4  a|V5  a|
570.#738 r11   Fixd   Keep  r11  |     |I136a|     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
570.#739 I138  Def    Alloc r11  |     |I136a|     |V2  a|     |     |V3  a|     |     |I138a|     |     |V4  a|V5  a|
575.#740 rcx   Fixd   Keep  rcx  |     |I136a|     |V2  a|     |     |V3  a|     |     |I138a|     |     |V4  a|V5  a|
575.#741 I136  Use *  Keep  rcx  |     |I136i|     |V2  a|     |     |V3  a|     |     |I138a|     |     |V4  a|V5  a|
575.#742 r11   Fixd   Keep  r11  |     |     |     |V2  a|     |     |V3  a|     |     |I138a|     |     |V4  a|V5  a|
575.#743 I138  Use *  Keep  r11  |     |     |     |V2  a|     |     |V3  a|     |     |I138i|     |     |V4  a|V5  a|
576.#744 rax   Kill   Keep  rax  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
576.#745 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
576.#746 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
576.#747 r8    Kill   Keep  r8   |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
576.#748 r9    Kill   Keep  r9   |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
576.#749 r10   Kill   Keep  r10  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
576.#750 r11   Kill   Keep  r11  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
576.#751 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
576.#752 I139  Def    Alloc rax  |I139a|     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
579.#753 I139  Use *  Keep  rax  |I139i|     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
583.#754 V3    ExpU              |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
583.#755 V4    ExpU              |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
583.#756 V5    ExpU              |     |     |     |V2  a|     |     |V3  a|     |     |     |     |     |V4  a|V5  a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
583.#757 BB13 PredBB9            |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
586.#758 I140  Def    Alloc rcx  |     |I140a|     |V2  a|     |     |     |     |     |     |     |     |     |     |
587.#759 rcx   Fixd   Keep  rcx  |     |I140a|     |V2  a|     |     |     |     |     |     |     |     |     |     |
587.#760 I140  Use *  Keep  rcx  |     |I140i|     |V2  a|     |     |     |     |     |     |     |     |     |     |
588.#761 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
588.#762 I141  Def    Alloc rcx  |     |I141a|     |V2  a|     |     |     |     |     |     |     |     |     |     |
590.#763 r11   Fixd   Keep  r11  |     |I141a|     |V2  a|     |     |     |     |     |     |     |     |     |     |
590.#764 C142  Def    Alloc r11  |     |I141a|     |V2  a|     |     |     |     |     |C142a|     |     |     |     |
591.#765 r11   Fixd   Keep  r11  |     |I141a|     |V2  a|     |     |     |     |     |C142a|     |     |     |     |
591.#766 C142  Use *  Keep  r11  |     |I141a|     |V2  a|     |     |     |     |     |C142i|     |     |     |     |
592.#767 r11   Fixd   Keep  r11  |     |I141a|     |V2  a|     |     |     |     |     |     |     |     |     |     |
592.#768 I143  Def    Alloc r11  |     |I141a|     |V2  a|     |     |     |     |     |I143a|     |     |     |     |
597.#769 rcx   Fixd   Keep  rcx  |     |I141a|     |V2  a|     |     |     |     |     |I143a|     |     |     |     |
597.#770 I141  Use *  Keep  rcx  |     |I141i|     |V2  a|     |     |     |     |     |I143a|     |     |     |     |
597.#771 r11   Fixd   Keep  r11  |     |     |     |V2  a|     |     |     |     |     |I143a|     |     |     |     |
597.#772 I143  Use *  Keep  r11  |     |     |     |V2  a|     |     |     |     |     |I143i|     |     |     |     |
598.#773 rax   Kill   Keep  rax  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
598.#774 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
598.#775 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
598.#776 r8    Kill   Keep  r8   |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
598.#777 r9    Kill   Keep  r9   |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
598.#778 r10   Kill   Keep  r10  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
598.#779 r11   Kill   Keep  r11  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
605.#780 V2    Use    Keep  rbx  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
606.#781 I144  Def    Alloc rcx  |     |I144a|     |V2  a|     |     |     |     |     |     |     |     |     |     |
607.#782 I144  Use *  Keep  rcx  |     |I144i|     |V2  a|     |     |     |     |     |     |     |     |     |     |
608.#783 V35   Def    Alloc rcx  |     |V35 a|     |V2  a|     |     |     |     |     |     |     |     |     |     |
613.#784 V35   Use *  Keep  rcx  |     |V35 i|     |V2  a|     |     |     |     |     |     |     |     |     |     |
614.#785 I145  Def    Alloc rcx  |     |I145a|     |V2  a|     |     |     |     |     |     |     |     |     |     |
619.#786 V2    Use    Keep  rbx  |     |I145a|     |V2  a|     |     |     |     |     |     |     |     |     |     |
619.#787 I145  Use *  Keep  rcx  |     |I145i|     |V2  a|     |     |     |     |     |     |     |     |     |     |
624.#788 C146  Def    Alloc rcx  |     |C146a|     |V2  a|     |     |     |     |     |     |     |     |     |     |
625.#789 rcx   Fixd   Keep  rcx  |     |C146a|     |V2  a|     |     |     |     |     |     |     |     |     |     |
625.#790 C146  Use *  Keep  rcx  |     |C146i|     |V2  a|     |     |     |     |     |     |     |     |     |     |
626.#791 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
626.#792 I147  Def    Alloc rcx  |     |I147a|     |V2  a|     |     |     |     |     |     |     |     |     |     |
627.#793 rcx   Fixd   Keep  rcx  |     |I147a|     |V2  a|     |     |     |     |     |     |     |     |     |     |
627.#794 I147  Use *  Keep  rcx  |     |I147i|     |V2  a|     |     |     |     |     |     |     |     |     |     |
628.#795 rax   Kill   Keep  rax  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
628.#796 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
628.#797 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
628.#798 r8    Kill   Keep  r8   |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
628.#799 r9    Kill   Keep  r9   |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
628.#800 r10   Kill   Keep  r10  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
628.#801 r11   Kill   Keep  r11  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
628.#802 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
628.#803 I148  Def    Alloc rax  |I148a|     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
629.#804 I148  Use *  Keep  rax  |I148i|     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
630.#805 V29   Def    Alloc rsi  |     |     |     |V2  a|     |V29 a|     |     |     |     |     |     |     |     |
635.#806 V2    Use    Keep  rbx  |     |     |     |V2  a|     |V29 a|     |     |     |     |     |     |     |     |
636.#807 I149  Def    Alloc rdi  |     |     |     |V2  a|     |V29 a|I149a|     |     |     |     |     |     |     |
637.#808 I149  Use *  Keep  rdi  |     |     |     |V2  a|     |V29 a|I149i|     |     |     |     |     |     |     |
638.#809 V37   Def    Alloc rdi  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
640.#810 C150  Def    Alloc rcx  |     |C150a|     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
641.#811 rcx   Fixd   Keep  rcx  |     |C150a|     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
641.#812 C150  Use *  Keep  rcx  |     |C150i|     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
642.#813 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
642.#814 I151  Def    Alloc rcx  |     |I151a|     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
643.#815 rcx   Fixd   Keep  rcx  |     |I151a|     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
643.#816 I151  Use *  Keep  rcx  |     |I151i|     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
644.#817 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
644.#818 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
644.#819 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
644.#820 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
644.#821 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
644.#822 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
644.#823 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
644.#824 rax   Fixd   Keep  rax  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
644.#825 I152  Def    Alloc rax  |I152a|     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
645.#826 I152  Use *  Keep  rax  |I152i|     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
646.#827 V36   Def    Alloc r14  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
649.#828 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
649.#829 V36   Use    Copy  rcx  |     |V36 a|     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
650.#830 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
650.#831 I153  Def    Alloc rcx  |     |I153a|     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
652.#832 C154  Def    Alloc rdx  |     |I153a|C154a|V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
653.#833 rdx   Fixd   Keep  rdx  |     |I153a|C154a|V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
653.#834 C154  Use *  Keep  rdx  |     |I153a|C154i|V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
654.#835 rdx   Fixd   Keep  rdx  |     |I153a|     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
654.#836 I155  Def    Alloc rdx  |     |I153a|I155a|V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
656.#837 C156  Def    Alloc r8   |     |I153a|I155a|V2  a|     |V29 a|V37 a|C156a|     |     |     |     |V36 a|     |
657.#838 r8    Fixd   Keep  r8   |     |I153a|I155a|V2  a|     |V29 a|V37 a|C156a|     |     |     |     |V36 a|     |
657.#839 C156  Use *  Keep  r8   |     |I153a|I155a|V2  a|     |V29 a|V37 a|C156i|     |     |     |     |V36 a|     |
658.#840 r8    Fixd   Keep  r8   |     |I153a|I155a|V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
658.#841 I157  Def    Alloc r8   |     |I153a|I155a|V2  a|     |V29 a|V37 a|I157a|     |     |     |     |V36 a|     |
659.#842 rcx   Fixd   Keep  rcx  |     |I153a|I155a|V2  a|     |V29 a|V37 a|I157a|     |     |     |     |V36 a|     |
659.#843 I153  Use *  Keep  rcx  |     |I153i|I155a|V2  a|     |V29 a|V37 a|I157a|     |     |     |     |V36 a|     |
659.#844 rdx   Fixd   Keep  rdx  |     |     |I155a|V2  a|     |V29 a|V37 a|I157a|     |     |     |     |V36 a|     |
659.#845 I155  Use *  Keep  rdx  |     |     |I155i|V2  a|     |V29 a|V37 a|I157a|     |     |     |     |V36 a|     |
659.#846 r8    Fixd   Keep  r8   |     |     |     |V2  a|     |V29 a|V37 a|I157a|     |     |     |     |V36 a|     |
659.#847 I157  Use *  Keep  r8   |     |     |     |V2  a|     |V29 a|V37 a|I157i|     |     |     |     |V36 a|     |
660.#848 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
660.#849 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
660.#850 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
660.#851 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
660.#852 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
660.#853 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
660.#854 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
663.#855 V29   Use    Keep  rsi  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
664.#856 I158  Def    Alloc rcx  |     |I158a|     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
667.#857 rcx   Fixd   Keep  rcx  |     |I158a|     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
667.#858 I158  Use *  Keep  rcx  |     |I158i|     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
667.#859 rdx   Fixd   Keep  rdx  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 a|     |
667.#860 V36   Use *  Copy  rdx  |     |     |V36 i|V2  a|     |V29 a|V37 a|     |     |     |     |     |V36 i|     |
668.#861 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
668.#862 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
668.#863 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
668.#864 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
668.#865 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
668.#866 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
668.#867 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
668.#868 mm0   Kill   Keep  mm0  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
668.#869 mm1   Kill   Keep  mm1  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
668.#870 mm2   Kill   Keep  mm2  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
668.#871 mm3   Kill   Keep  mm3  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
668.#872 mm4   Kill   Keep  mm4  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
668.#873 mm5   Kill   Keep  mm5  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
675.#874 V29   Use    Keep  rsi  |     |     |     |V2  a|     |V29 a|V37 a|     |     |     |     |     |     |     |
675.#875 V37   Use *  Keep  rdi  |     |     |     |V2  a|     |V29 a|V37 i|     |     |     |     |     |     |     |
681.#876 V2    Use    Keep  rbx  |     |     |     |V2  a|     |V29 a|     |     |     |     |     |     |     |     |
682.#877 I159  Def    Alloc rcx  |     |I159a|     |V2  a|     |V29 a|     |     |     |     |     |     |     |     |
685.#878 rcx   Fixd   Keep  rcx  |     |I159a|     |V2  a|     |V29 a|     |     |     |     |     |     |     |     |
685.#879 I159  Use *  Keep  rcx  |     |I159i|     |V2  a|     |V29 a|     |     |     |     |     |     |     |     |
685.#880 rdx   Fixd   Keep  rdx  |     |     |     |V2  a|     |V29 a|     |     |     |     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
685.#881 V29   Use *  Copy  rdx  |     |     |V29 i|V2  a|     |V29 i|     |     |     |     |     |     |     |     |
686.#882 rax   Kill   Keep  rax  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
686.#883 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
686.#884 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
686.#885 r8    Kill   Keep  r8   |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
686.#886 r9    Kill   Keep  r9   |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
686.#887 r10   Kill   Keep  r10  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
686.#888 r11   Kill   Keep  r11  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
686.#889 mm0   Kill   Keep  mm0  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
686.#890 mm1   Kill   Keep  mm1  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
686.#891 mm2   Kill   Keep  mm2  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
686.#892 mm3   Kill   Keep  mm3  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
686.#893 mm4   Kill   Keep  mm4  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
686.#894 mm5   Kill   Keep  mm5  |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
690.#895 C160  Def    Alloc rsi  |     |     |     |V2  a|     |C160a|     |     |     |     |     |     |     |     |
691.#896 C160  Use *  Keep  rsi  |     |     |     |V2  a|     |C160i|     |     |     |     |     |     |     |     |
692.#897 V10   Def    Alloc rsi  |     |     |     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
693.#898 BB17 PredBB13           |     |     |     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
699.#899 V2    Use    Keep  rbx  |     |     |     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
700.#900 I161  Def    Alloc rcx  |     |I161a|     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
701.#901 I161  Use *  Keep  rcx  |     |I161i|     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
702.#902 V39   Def    Alloc rcx  |     |V39 a|     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
707.#903 V39   Use    Keep  rcx  |     |V39 a|     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
711.#904 BB18 PredBB17           |     |V39 a|     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
715.#905 V39   Use *  Keep  rcx  |     |V39 i|     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
716.#906 V38   Def    Alloc rcx  |     |V38 a|     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
717.#907 BB19 PredBB17           |     |     |     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
722.#908 V38   Def    Alloc rcx  |     |V38 a|     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
723.#909 BB20 PredBB18           |     |V38 a|     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
729.#910 V10   Use    Keep  rsi  |     |V38 a|     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
729.#911 V38   Use *  Keep  rcx  |     |V38 i|     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
733.#912 BB16 PredBB20           |     |     |     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
739.#913 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
739.#914 V2    Use    Copy  rcx  |     |V2  a|     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
740.#915 rcx   Fixd   Keep  rcx  |     |     |     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
740.#916 I162  Def    Alloc rcx  |     |I162a|     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
741.#917 rcx   Fixd   Keep  rcx  |     |I162a|     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
741.#918 I162  Use *  Keep  rcx  |     |I162i|     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
742.#919 rax   Kill   Keep  rax  |     |     |     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
742.#920 rcx   Kill   Keep  rcx  |     |     |     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
742.#921 rdx   Kill   Keep  rdx  |     |     |     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
742.#922 r8    Kill   Keep  r8   |     |     |     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
742.#923 r9    Kill   Keep  r9   |     |     |     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
742.#924 r10   Kill   Keep  r10  |     |     |     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
742.#925 r11   Kill   Keep  r11  |     |     |     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
749.#926 V10   Use *  Keep  rsi  |     |     |     |V2  a|     |V10 i|     |     |     |     |     |     |     |     |
750.#927 I163  Def    Alloc rsi  |     |     |     |V2  a|     |I163a|     |     |     |     |     |     |     |     |
751.#928 I163  Use *  Keep  rsi  |     |     |     |V2  a|     |I163i|     |     |     |     |     |     |     |     |
752.#929 V10   Def    Alloc rsi  |     |     |     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
753.#930 V10   ExpU              |     |     |     |V2  a|     |V10 a|     |     |     |     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
753.#931 BB21 PredBB20           |     |     |     |V2  a|     |     |     |     |     |     |     |     |     |     |
761.#932 V2    Use *  Keep  rbx  |     |     |     |V2  i|     |     |     |     |     |     |     |     |     |     |
762.#933 I164  Def    Alloc rax  |I164a|     |     |     |     |     |     |     |     |     |     |     |     |     |
763.#934 I164  Use *  Keep  rax  |I164i|     |     |     |     |     |     |     |     |     |     |     |     |     |
764.#935 V40   Def    Alloc rax  |V40 a|     |     |     |     |     |     |     |     |     |     |     |     |     |
769.#936 V40   Use *  Keep  rax  |V40 i|     |     |     |     |     |     |     |     |     |     |     |     |     |
770.#937 I165  Def    Alloc rax  |I165a|     |     |     |     |     |     |     |     |     |     |     |     |     |
771.#938 rax   Fixd   Keep  rax  |I165a|     |     |     |     |     |     |     |     |     |     |     |     |     |
771.#939 I165  Use *  Keep  rax  |I165i|     |     |     |     |     |     |     |     |     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
773.#940 BB22 PredBB0            |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
785.#941 BB23 PredBB22           |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
790.#942 I166  Def    Alloc rcx  |     |I166a|     |     |     |     |     |     |     |     |     |     |     |     |
791.#943 rcx   Fixd   Keep  rcx  |     |I166a|     |     |     |     |     |     |     |     |     |     |     |     |
791.#944 I166  Use *  Keep  rcx  |     |I166i|     |     |     |     |     |     |     |     |     |     |     |     |
792.#945 rcx   Fixd   Keep  rcx  |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
792.#946 I167  Def    Alloc rcx  |     |I167a|     |     |     |     |     |     |     |     |     |     |     |     |
794.#947 r11   Fixd   Keep  r11  |     |I167a|     |     |     |     |     |     |     |     |     |     |     |     |
794.#948 C168  Def    Alloc r11  |     |I167a|     |     |     |     |     |     |     |C168a|     |     |     |     |
795.#949 r11   Fixd   Keep  r11  |     |I167a|     |     |     |     |     |     |     |C168a|     |     |     |     |
795.#950 C168  Use *  Keep  r11  |     |I167a|     |     |     |     |     |     |     |C168i|     |     |     |     |
796.#951 r11   Fixd   Keep  r11  |     |I167a|     |     |     |     |     |     |     |     |     |     |     |     |
796.#952 I169  Def    Alloc r11  |     |I167a|     |     |     |     |     |     |     |I169a|     |     |     |     |
801.#953 rcx   Fixd   Keep  rcx  |     |I167a|     |     |     |     |     |     |     |I169a|     |     |     |     |
801.#954 I167  Use *  Keep  rcx  |     |I167i|     |     |     |     |     |     |     |I169a|     |     |     |     |
801.#955 r11   Fixd   Keep  r11  |     |     |     |     |     |     |     |     |     |I169a|     |     |     |     |
801.#956 I169  Use *  Keep  r11  |     |     |     |     |     |     |     |     |     |I169i|     |     |     |     |
802.#957 rax   Kill   Keep  rax  |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
802.#958 rcx   Kill   Keep  rcx  |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
802.#959 rdx   Kill   Keep  rdx  |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
802.#960 r8    Kill   Keep  r8   |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
802.#961 r9    Kill   Keep  r9   |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
802.#962 r10   Kill   Keep  r10  |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
802.#963 r11   Kill   Keep  r11  |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
803.#964 BB24 PredBB22           |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r11  |r12  |r13  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
809.#965 BB25 PredBB24           |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
812.#966 rax   Kill   Keep  rax  |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
812.#967 rcx   Kill   Keep  rcx  |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
812.#968 rdx   Kill   Keep  rdx  |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
812.#969 r8    Kill   Keep  r8   |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
812.#970 r9    Kill   Keep  r9   |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
812.#971 r10   Kill   Keep  r10  |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
812.#972 r11   Kill   Keep  r11  |     |     |     |     |     |     |     |     |     |     |     |     |     |     |

Recording the maximum number of concurrent spills:

----------
LSRA Stats
----------
BB09 [       0]: SpillCount = 1, ResolutionMovs = 0, SplitEdges = 0, CopyReg = 0
Total Tracked Vars:  38
Total Reg Cand Vars: 37
Total number of Intervals: 169
Total number of RefPositions: 972
Total Spill Count: 1    Weighted: 400.000000
Total CopyReg Count: 0   Weighted: 0.000000
Total ResolutionMov Count: 0    Weighted: 0.000000
Total number of split edges: 0
Total Number of spill temps created: 0

TUPLE STYLE DUMP WITH REGISTER ASSIGNMENTS
Incoming Parameters:  V00(rcx=>rsi) V01(rdx=>rdi)
BB01 [000..070), preds={} succs={BB02}
=====
  N003.                    IL_OFFSET IL offset: 0x0
  N005. rcx             =  CNS_INT(h) 0xd1ffab1e method
  N007. rcx             =  PUTARG_REG; rcx
  N009. rax             =  CALL help; rcx
* N011.                    V12(rbx); rax
  N013.                    IL_OFFSET IL offset: 0x5
  N015.                    V12(rbx*)
* N017.                    V02(rbx); rbx*
  N019.                    IL_OFFSET IL offset: 0x6
  N021.                    V02(rbx)
  N023. rcx             =  LEA(b+32); rbx
  N025.                    V01(rdi*)
  N027.                    STOREIND ; rcx,rdi*
  N029.                    IL_OFFSET IL offset: 0xd
  N031.                    V02(rbx)
  N033. STK             =  LEA(b+60); rbx
  N035. rcx             =  CNS_INT   0
  N037.                    STOREIND ; STK,rcx
  N039.                    IL_OFFSET IL offset: 0x14
  N041.                    V02(rbx)
  N043. STK             =  LEA(b+56); rbx
  N045. rcx             =  CNS_INT   0 reuse reg val
  N047.                    STOREIND ; STK,rcx
  N049.                    IL_OFFSET IL offset: 0x1b
  N051. rcx             =  CNS_INT(h) 0xd1ffab1e token
  N053. rcx             =  PUTARG_REG; rcx
  N055. rax             =  CALL help; rcx
* N057.                    V13(rdi); rax
  N059. rcx             =  CNS_INT(h) 0xd1ffab1e token
  N061. rcx             =  PUTARG_REG; rcx
  N063. rax             =  CALL help; rcx
* N065.                    V30(rax); rax
  N067.                    V30(rax)
  N069. STK             =  LEA(b+52); rax
  N071.                    CNS_INT   0x2000400
  N073.                    STOREIND ; STK
  N075.                    V13(rdi)
  N077. rcx             =  LEA(b+8) ; rdi
  N079.                    V30(rax*)
  N081.                    STOREIND ; rcx,rax*
  N083.                    IL_OFFSET IL offset: 0x21
  N085.                    V02(rbx)
  N087. rcx             =  LEA(b+24); rbx
  N089.                    V13(rdi*)
  N091.                    STOREIND ; rcx,rdi*
  N093.                    IL_OFFSET IL offset: 0x26
  N095. rcx             =  CNS_INT(h) 0xd1ffab1e token
  N097. rcx             =  PUTARG_REG; rcx
  N099. rax             =  CALL help; rcx
* N101.                    V14(rdi); rax
  N103. rcx             =  CNS_INT   0x7ffc7e0b0028
  N105. rcx             =  PUTARG_REG; rcx
  N107. rdx             =  CNS_INT   14
  N109. rdx             =  PUTARG_REG; rdx
* N111. rax             =  CALL help; rcx,rdx
  N113. rdx             =  CNS_INT(h) 0xd1ffab1e static Fseq[Value]
  N115. rdx             =  IND      ; rdx
  N117.                    V14(rdi)
  N119. rcx             =  LEA(b+8) ; rdi
  N121.                    STOREIND ; rcx,rdx
  N123.                    IL_OFFSET IL offset: 0x2c
  N125.                    V02(rbx)
  N127. rcx             =  LEA(b+8) ; rbx
  N129.                    V14(rdi*)
  N131.                    STOREIND ; rcx,rdi*
  N133.                    IL_OFFSET IL offset: 0x31
  N135.                    V02(rbx)
  N137. STK             =  LEA(b+16); rbx
  N139. rcx             =  CNS_INT   null
  N141.                    STOREIND ; STK,rcx
  N143.                    IL_OFFSET IL offset: 0x38
  N145. rcx             =  CNS_INT(h) 0xd1ffab1e token
  N147. rcx             =  PUTARG_REG; rcx
  N149. rax             =  CALL help; rcx
* N151.                    V15(rdi); rax
  N153.                    V15(rdi)
  N155. rcx             =  PUTARG_REG; rdi
  N157. rdx             =  CNS_INT   null
  N159. rdx             =  PUTARG_REG; rdx
  N161.                    CALL     ; rcx,rdx
  N163.                    IL_OFFSET IL offset: 0x3e
  N165.                    V02(rbx)
  N167. rcx             =  LEA(b+40); rbx
  N169.                    V15(rdi*)
  N171.                    STOREIND ; rcx,rdi*
  N173. rax             =  CALL     
* N175.                    V31(rdi); rax
  N177.                    V31(rdi)
  N179.                    NULLCHECK; rdi
  N181.                    V31(rdi)
  N183. rcx             =  PUTARG_REG; rdi
  N185. rdx             =  CNS_INT   3
  N187. rdx             =  PUTARG_REG; rdx
  N189.                    CALL     ; rcx,rdx
  N191.                    V31(rdi*)
  N193. STK             =  LEA(b+200); rdi*
  N195. rcx             =  IND      ; STK
  N197. rcx             =  PUTARG_REG; rcx
  N199. rax             =  CALL     ; rcx
* N201.                    V32(rax); rax
  N203.                    V32(rax*)
  N205. STK             =  LEA(b+40); rax*
  N207. rdi             =  IND      ; STK
* N209.                    V03(rdi); rdi
  N211.                    CNS_INT   5
  N213.                    PUTARG_STK [+0x20]
  N215.                    V03(rdi)
  N217. STK             =  LEA(b+8) ; rdi
  N219. r9              =  IND      ; STK
  N221. r9              =  PUTARG_REG; r9
  N223. rdx             =  CNS_INT(h) 0xD1FFAB1E "dotnet.exe"
  N225. rdx             =  IND      ; rdx
  N227. rdx             =  PUTARG_REG; rdx
  N229.                    V03(rdi)
  N231. rcx             =  PUTARG_REG; rdi
  N233. r8              =  CNS_INT   0
  N235. r8              =  PUTARG_REG; r8
  N237. rax             =  CALL     ; r9,rdx,rcx,r8
  N239.                    CNS_INT   0
  N241. r14             =  GE       ; rax
* N243.                    V04(r14); r14
  N245. rax             =  CALL     
* N247.                    V41(rax); rax
  N249.                    CNS_INT   0
  N251.                    V41(rax)
  N253. STK             =  LEA(b+8) ; rax
  N255. STK             =  IND      ; STK
  N257.                    ARR_BOUNDS_CHECK_Rng; STK
  N259.                    V41(rax*)
  N261. STK             =  LEA(b+16); rax*
  N263. r15             =  IND      ; STK
* N265.                    V05(r15); r15
  N267.                    IL_OFFSET IL offset: 0x68
  N269.                    V00(rsi*)
  N271. rcx             =  PUTARG_REG; rsi*
  N273. r11             =  CNS_INT(h) 0xd1ffab1e ftn
  N275. r11             =  PUTARG_REG; r11
  N277.                    CNS_INT(h) 0xd1ffab1e ftn
  N279.                    IND      
  N281. rax             =  CALLV stub; rcx,r11
  N283.                    V06 MEM; rax
Var=Reg end of BB01: V02=rbx V03=rdi V04=r14 V05=r15 

BB02 [070..072) -> BB13 (cond), preds={BB01} succs={BB03,BB13}
=====
Predecessor for variable locations: BB01
Var=Reg beg of BB02: V02=rbx V03=rdi V04=r14 V05=r15 
  N287.                    IL_OFFSET IL offset: 0xe9
  N289. rcx             =  V06 MEM
  N291. rcx             =  PUTARG_REG; rcx
  N293. r11             =  CNS_INT(h) 0xd1ffab1e ftn
  N295. r11             =  PUTARG_REG; r11
  N297.                    CNS_INT(h) 0xd1ffab1e ftn
  N299.                    IND      
  N301. rax             =  CALLV stub; rcx,r11
  N303.                    CNS_INT   0
  N305.                    EQ       ; rax
  N307.                    JTRUE    
Var=Reg end of BB02: V02=rbx V03=rdi V04=r14 V05=r15 

BB03 [072..08B) -> BB05 (cond), preds={BB02,BB09} succs={BB04,BB05}
=====
Predecessor for variable locations: BB02
Var=Reg beg of BB03: V02=rbx V03=rdi V04=r14 V05=r15 
  N311.                    IL_OFFSET IL offset: 0x72
  N313. rcx             =  V06 MEM
  N315. rcx             =  PUTARG_REG; rcx
  N317. r11             =  CNS_INT(h) 0xd1ffab1e ftn
  N319. r11             =  PUTARG_REG; r11
  N321.                    CNS_INT(h) 0xd1ffab1e ftn
  N323.                    IND      
  N325. rax             =  CALLV stub; rcx,r11
* N327.                    V07(rsi); rax
  N329.                    IL_OFFSET IL offset: 0x7b
  N331. rcx             =  CNS_INT(h) 0xd1ffab1e token
  N333. rcx             =  PUTARG_REG; rcx
  N335. rax             =  CALL help; rcx
* N337.                    V16(r12); rax
  N339.                    IL_OFFSET IL offset: 0x80
  N341.                    V16(r12)
  N343. rcx             =  LEA(b+8) ; r12
  N345.                    V03(rdi)
  N347.                    STOREIND ; rcx,rdi
  N349.                    V16(r12*)
* N351.                    V17(r12); r12*
  N353.                    V17(r12*)
* N355.                    V18(r12); r12*
  N357.                    IL_OFFSET IL offset: 0x87
  N359.                    V04(r14)
  N361.                    CNS_INT   0
  N363.                    NE       ; r14
  N365.                    JTRUE    
Var=Reg end of BB03: V02=rbx V07=rsi V18=r12 V03=rdi V04=r14 V05=r15 

BB04 [08B..08F) -> BB06 (always), preds={BB03} succs={BB06}
=====
Predecessor for variable locations: BB03
Var=Reg beg of BB04: V02=rbx V07=rsi V18=r12 V03=rdi V04=r14 V05=r15 
  N369.                    V18(r12*)
* N371.                    V19(r12); r12*
  N373.                    V19(r12)
* N375.                    V20(r13); r12
  N377.                    V07(rsi*)
* N379.                    V21(rdx); rsi*
Var=Reg end of BB04: V02=rbx V19=r12 V20=r13 V21=rdx V03=rdi V04=r14 V05=r15 

BB05 [08F..09C), preds={BB03} succs={BB06}
=====
Predecessor for variable locations: BB03
Var=Reg beg of BB05: V02=rbx V07=rsi V18=r12 V03=rdi V04=r14 V05=r15 
  N383.                    V18(r12*)
* N385.                    V19(r12); r12*
  N387.                    V19(r12)
* N389.                    V20(r13); r12
  N391. rdx             =  CNS_INT(h) 0xD1FFAB1E " "
  N393. rdx             =  IND      ; rdx
  N395. rdx             =  PUTARG_REG; rdx
  N397.                    V05(r15)
  N399. rcx             =  PUTARG_REG; r15
  N401.                    V07(rsi*)
  N403. r8              =  PUTARG_REG; rsi*
  N405. rax             =  CALL     ; rdx,rcx,r8
* N407.                    V21(rdx); rax
Var=Reg end of BB05: V02=rbx V19=r12 V20=r13 V21=rdx V03=rdi V04=r14 V05=r15 

BB06 [09C..0BB) -> BB09 (cond), preds={BB04,BB05} succs={BB07,BB09}
=====
Predecessor for variable locations: BB04
Var=Reg beg of BB06: V02=rbx V19=r12 V20=r13 V21=rdx V03=rdi V04=r14 V05=r15 
  N411.                    V20(r13*)
  N413. rcx             =  LEA(b+16); r13*
  N415.                    V21(rdx*)
  N417.                    STOREIND ; rcx,rdx*
  N419.                    IL_OFFSET IL offset: 0xa1
  N421.                    V19(r12)
  N423. STK             =  LEA(b+130); r12
  N425.                    CNS_INT   0
  N427.                    STOREIND ; STK
  N429.                    IL_OFFSET IL offset: 0xaa
  N431.                    V02(rbx)
  N433. STK             =  LEA(b+8) ; rbx
  N435. rsi             =  IND      ; STK
* N437.                    V23(rsi); rsi
  N439.                    IL_OFFSET IL offset: 0xaa
  N441.                    V02(rbx)
  N443. STK             =  LEA(b+48); rbx
  N445. r13             =  IND      ; STK
* N447.                    V22(r13); r13
  N449.                    V23(rsi*)
* N451.                    V24(rsi); rsi*
  N453.                    V19(r12*)
* N455.                    V25(r12); r12*
  N457.                    V22(r13*)
* N459.                    V26(r13); r13*
  N461.                    V26(r13)
  N463.                    CNS_INT   null
  N465.                    NE       ; r13
  N467.                    JTRUE    
Var=Reg end of BB06: V02=rbx V26=r13 V24=rsi V25=r12 V03=rdi V04=r14 V05=r15 

BB07 [000..0D3), preds={BB06} succs={BB09}
=====
Predecessor for variable locations: BB06
Var=Reg beg of BB07: V02=rbx V24=rsi V25=r12 V03=rdi V04=r14 V05=r15 
  N471. rcx             =  CNS_INT(h) 0xd1ffab1e token
  N473. rcx             =  PUTARG_REG; rcx
  N475. rax             =  CALL help; rcx
* N477.                    V28(r13); rax
  N479.                    V28(r13)
  N481. rcx             =  LEA(b+8) ; r13
  N483.                    V02(rbx)
  N485.                    STOREIND ; rcx,rbx
  N487.                    V28(r13)
  N489. STK             =  LEA(b+24); r13
  N491. rdx             =  CNS_INT(h) 0xd1ffab1e ftn
  N493.                    STOREIND ; STK,rdx
  N495.                    V02(rbx)
  N497. rcx             =  LEA(b+48); rbx
  N499.                    V28(r13)
  N501.                    STOREIND ; rcx,r13
  N503.                    V28(r13*)
* N505.                    V26(r13); r13*
Var=Reg end of BB07: V02=rbx V26=r13 V24=rsi V25=r12 V03=rdi V04=r14 V05=r15 

BB09 [000..0F2) -> BB03 (cond), preds={BB06,BB07} succs={BB13,BB03}
=====
Predecessor for variable locations: BB06
Var=Reg beg of BB09: V02=rbx V26=r13 V24=rsi V25=r12 V03=rdi V04=r14 V05=r15 
  N509. rcx             =  CNS_INT(h) 0xd1ffab1e token
  N511. rcx             =  PUTARG_REG; rcx
  N513. rax             =  CALL help; rcx
* N515.                    V27(rax); rax
S N517.                    V27(rax)
  N519. rcx             =  LEA(b+8) ; rax
  N521.                    V02(rbx)
  N523.                    STOREIND ; rcx,rbx
  N525.                    V27(r8)R
  N527. STK             =  LEA(b+24); r8
  N529. rcx             =  CNS_INT(h) 0xd1ffab1e ftn
  N531.                    STOREIND ; STK,rcx
  N533.                    IL_OFFSET IL offset: 0xdf
  N535.                    V25(r12*)
  N537. rcx             =  PUTARG_REG; r12*
  N539.                    V26(r13*)
  N541. rdx             =  PUTARG_REG; r13*
  N543.                    V27(r8*)
  N545. r8              =  PUTARG_REG; r8*
  N547. rax             =  CALL     ; rcx,rdx,r8
* N549.                    V42(rdx); rax
  N551.                    V42(rdx*)
  N553. rdx             =  PUTARG_REG; rdx*
  N555.                    V24(rsi*)
  N557. rcx             =  PUTARG_REG; rsi*
  N559.                    CALL nullcheck; rdx,rcx
  N561.                    IL_OFFSET IL offset: 0xe9
  N563. rcx             =  V06 MEM
  N565. rcx             =  PUTARG_REG; rcx
  N567. r11             =  CNS_INT(h) 0xd1ffab1e ftn
  N569. r11             =  PUTARG_REG; r11
  N571.                    CNS_INT(h) 0xd1ffab1e ftn
  N573.                    IND      
  N575. rax             =  CALLV stub; rcx,r11
  N577.                    CNS_INT   0
  N579.                    NE       ; rax
  N581.                    JTRUE    
Var=Reg end of BB09: V02=rbx V03=rdi V04=r14 V05=r15 

BB13 [0F4..127) -> BB17 (always), preds={BB02,BB09} succs={BB17}
=====
Predecessor for variable locations: BB09
Var=Reg beg of BB13: V02=rbx 
  N585. rcx*            =  V06 MEM
  N587. rcx             =  PUTARG_REG; rcx*
  N589. r11             =  CNS_INT(h) 0xd1ffab1e ftn
  N591. r11             =  PUTARG_REG; r11
  N593.                    CNS_INT(h) 0xd1ffab1e ftn
  N595.                    IND      
  N597.                    CALLV stub; rcx,r11
  N599.                    IL_OFFSET IL offset: 0x100
  N601.                    V02(rbx)
  N603. STK             =  LEA(b+8) ; rbx
  N605. rcx             =  IND      ; STK
* N607.                    V35(rcx); rcx
  N609.                    V35(rcx*)
  N611. STK             =  LEA(b+24); rcx*
  N613. rcx             =  IND      ; STK
  N615.                    V02(rbx)
  N617. STK             =  LEA(b+60); rbx
  N619.                    STOREIND ; STK,rcx
  N621.                    IL_OFFSET IL offset: 0x111
  N623. rcx             =  CNS_INT(h) 0xd1ffab1e method
  N625. rcx             =  PUTARG_REG; rcx
  N627. rax             =  CALL help; rcx
* N629.                    V29(rsi); rax
  N631.                    V02(rbx)
  N633. STK             =  LEA(b+60); rbx
  N635. rdi             =  IND      ; STK
* N637.                    V37(rdi); rdi
  N639. rcx             =  CNS_INT(h) 0xd1ffab1e token
  N641. rcx             =  PUTARG_REG; rcx
  N643. rax             =  CALL help; rcx
* N645.                    V36(r14); rax
  N647.                    V36(r14)
  N649. rcx             =  PUTARG_REG; r14
  N651. rdx             =  CNS_INT   0
  N653. rdx             =  PUTARG_REG; rdx
  N655. r8              =  CNS_INT   null
  N657. r8              =  PUTARG_REG; r8
  N659.                    CALL     ; rcx,rdx,r8
  N661.                    V29(rsi)
  N663. rcx             =  LEA(b+8) ; rsi
  N665.                    V36(r14*)
  N667.                    STOREIND ; rcx,r14*
  N669.                    V29(rsi)
  N671. STK             =  LEA(b+16); rsi
  N673.                    V37(rdi*)
  N675.                    STOREIND ; STK,rdi*
  N677.                    IL_OFFSET IL offset: 0x11d
  N679.                    V02(rbx)
  N681. rcx             =  LEA(b+16); rbx
  N683.                    V29(rsi*)
  N685.                    STOREIND ; rcx,rsi*
  N687.                    IL_OFFSET IL offset: 0x122
  N689. rsi             =  CNS_INT   0
* N691.                    V10(rsi); rsi
Var=Reg end of BB13: V02=rbx V10=rsi 

BB17 [000..147) -> BB19 (cond), preds={BB13,BB16} succs={BB18,BB19}
=====
Predecessor for variable locations: BB13
Var=Reg beg of BB17: V02=rbx V10=rsi 
  N695.                    V02(rbx)
  N697. STK             =  LEA(b+60); rbx
  N699. rcx             =  IND      ; STK
* N701.                    V39(rcx); rcx
  N703.                    V39(rcx)
  N705.                    CNS_INT   8
  N707.                    GE       ; rcx
  N709.                    JTRUE    
Var=Reg end of BB17: V02=rbx V39=rcx V10=rsi 

BB18 [000..000) -> BB20 (always), preds={BB17} succs={BB20}
=====
Predecessor for variable locations: BB17
Var=Reg beg of BB18: V02=rbx V39=rcx V10=rsi 
  N713.                    V39(rcx*)
* N715.                    V38(rcx); rcx*
Var=Reg end of BB18: V02=rbx V10=rsi V38=rcx 

BB19 [000..000), preds={BB17} succs={BB20}
=====
Predecessor for variable locations: BB17
Var=Reg beg of BB19: V02=rbx V10=rsi 
  N719.                    CNS_INT   8
* N721.                    V38(rcx)
Var=Reg end of BB19: V02=rbx V10=rsi V38=rcx 

BB20 [???..???) -> BB16 (cond), preds={BB18,BB19} succs={BB21,BB16}
=====
Predecessor for variable locations: BB18
Var=Reg beg of BB20: V02=rbx V10=rsi V38=rcx 
  N725.                    V10(rsi)
  N727.                    V38(rcx*)
  N729.                    LT       ; rsi,rcx*
  N731.                    JTRUE    
Var=Reg end of BB20: V02=rbx V10=rsi 

BB16 [127..133), preds={BB20} succs={BB17}
=====
Predecessor for variable locations: BB20
Var=Reg beg of BB16: V02=rbx V10=rsi 
  N735.                    IL_OFFSET IL offset: 0x127
  N737.                    V02(rbx)
  N739. rcx             =  PUTARG_REG; rbx
  N741.                    CALL     ; rcx
  N743.                    IL_OFFSET IL offset: 0x12d
  N745.                    V10(rsi*)
  N747.                    CNS_INT   1
  N749. rsi             =  ADD      ; rsi*
* N751.                    V10(rsi); rsi
Var=Reg end of BB16: V02=rbx V10=rsi 

BB21 [147..153) (return), preds={BB20} succs={}
=====
Predecessor for variable locations: BB20
Var=Reg beg of BB21: V02=rbx 
  N755.                    IL_OFFSET IL offset: 0x147
  N757.                    V02(rbx*)
  N759. STK             =  LEA(b+24); rbx*
  N761. rax             =  IND      ; STK
* N763.                    V40(rax); rax
  N765.                    V40(rax*)
  N767. STK             =  LEA(b+8) ; rax*
  N769. rax             =  IND      ; STK
  N771.                    RETURN   ; rax
Var=Reg end of BB21: none

BB22 [0F4..0F8) -> BB24 (cond), preds={} succs={BB23,BB24}
=====
Predecessor for variable locations: BB00
Var=Reg beg of BB22: none
  N775.                    IL_OFFSET IL offset: 0xf4
  N777.                    V06 MEM
  N779.                    CNS_INT   null
  N781.                    EQ       
  N783.                    JTRUE    
Var=Reg end of BB22: none

BB23 [0F8..0FF), preds={BB22} succs={BB24}
=====
Predecessor for variable locations: BB22
Var=Reg beg of BB23: none
  N787.                    IL_OFFSET IL offset: 0xf8
  N789. rcx*            =  V06 MEM
  N791. rcx             =  PUTARG_REG; rcx*
  N793. r11             =  CNS_INT(h) 0xd1ffab1e ftn
  N795. r11             =  PUTARG_REG; r11
  N797.                    CNS_INT(h) 0xd1ffab1e ftn
  N799.                    IND      
  N801.                    CALLV stub; rcx,r11
Var=Reg end of BB23: none

BB24 [0FF..100) (finret), preds={BB22,BB23} succs={}
=====
Predecessor for variable locations: BB22
Var=Reg beg of BB24: none
  N805.                    IL_OFFSET IL offset: 0xff
  N807.                    RETFILT  
Var=Reg end of BB24: none

BB25 [???..???) (throw), preds={} succs={}
=====
Predecessor for variable locations: BB24
Var=Reg beg of BB25: none
  N811.                    CALL help
Var=Reg end of BB25: none




*************** Finishing PHASE Linear scan register alloc
*************** In genGenerateCode()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..070)                                     i label target hascall gcsafe idxlen newobj nullcheck LIR 
BB02 [0001]  1  0    BB01                  1       [070..072)-> BB13 ( cond ) T0      try {       keep i try label hascall gcsafe LIR 
BB03 [0002]  2  0    BB02,BB09             4     0 [072..08B)-> BB05 ( cond ) T0                  i Loop label target hascall gcsafe newobj bwd bwd-target LIR 
BB04 [0003]  1  0    BB03                  2     0 [08B..08F)-> BB06 (always) T0                  i gcsafe bwd LIR 
BB05 [0004]  1  0    BB03                  2     0 [08F..09C)                 T0                  i label target hascall gcsafe bwd LIR 
BB06 [0005]  2  0    BB04,BB05             4     0 [09C..0BB)-> BB09 ( cond ) T0                  i label target gcsafe bwd LIR 
BB07 [0006]  1  0    BB06                  2     0 [000..0D3)                 T0                  i hascall gcsafe newobj bwd LIR 
BB09 [0007]  2  0    BB06,BB07             4     0 [000..0F2)-> BB03 ( cond ) T0      }           i label target hascall gcsafe newobj bwd LIR 
BB13 [0057]  2       BB02,BB09             1       [0F4..127)-> BB17 (always)                     keep i label target gcsafe newobj LIR cfb 
BB16 [0014]  1       BB20                  2     1 [127..133)                                     i Loop label target hascall gcsafe bwd bwd-target LIR 
BB17 [0015]  2       BB13,BB16             8     1 [000..147)-> BB19 ( cond )                     i label target gcsafe bwd LIR 
BB18 [0053]  1       BB17                  2     1 [000..000)-> BB20 (always)                     i internal gcsafe bwd LIR 
BB19 [0054]  1       BB17                  2     1 [000..000)                                     i internal label target gcsafe bwd LIR 
BB20 [0055]  2       BB18,BB19             8     1 [???..???)-> BB16 ( cond )                     internal label target gcsafe bwd LIR 
BB21 [0016]  1       BB20                  1       [147..153)        (return)                     i gcsafe LIR 
BB25 [0062]  0                             0       [???..???)        (throw )                     keep i internal rare label target LIR 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ funclets follow
BB22 [0010]  1     0                       0       [0F4..0F8)-> BB24 ( cond )    H0 F fault {     keep i rare label target flet LIR 
BB23 [0011]  1     0 BB22                  0       [0F8..0FF)                    H0               i rare hascall gcsafe LIR 
BB24 [0012]  2     0 BB22,BB23             0       [0FF..100)        (finret)    H0   }           i rare label target LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Generate code
*************** In fgDebugCheckBBlist
Finalizing stack frame
Recording Var Locations at start of BB01
  V00(rsi)  V01(rdi)
Modified regs: [rax rcx rdx rbx rsi rdi r8-r15 mm0-mm5]
Callee-saved registers pushed: 7 [rbx rsi rdi r12-r15]
*************** In lvaAssignFrameOffsets(FINAL_FRAME_LAYOUT)
Assign V06 loc4, size=8, stkOffs=-0x50
Assign V27 tmp16, size=8, stkOffs=-0x58
Assign V43 PSPSym, size=8, stkOffs=-0x60
Assign V11 OutArgs, size=40, stkOffs=-0x88
--- delta bump 8 for RA
--- delta bump 8 for FP
--- delta bump 0 for RBP frame
--- virtual stack offset to actual stack offset delta is 16
-- V00 was 0, now 16
-- V01 was 8, now 24
-- V06 was -80, now -64
-- V11 was -136, now -120
-- V27 was -88, now -72
-- V43 was -104, now -88
; Final local variable assignments
;
;  V00 arg0         [V00,T29] (  3,  3   )     ref  ->  rsi         class-hnd
;  V01 arg1         [V01,T30] (  3,  3   )     ref  ->  rdi         class-hnd
;  V02 loc0         [V02,T00] ( 20, 39   )     ref  ->  rbx         class-hnd exact
;  V03 loc1         [V03,T22] (  4,  7   )     ref  ->  rdi         class-hnd
;  V04 loc2         [V04,T31] (  2,  5   )    bool  ->  r14        
;  V05 loc3         [V05,T37] (  2,  3   )     ref  ->  r15         class-hnd
;  V06 loc4         [V06,T12] (  7, 11   )     ref  ->  [rbp-0x40]   EH do-not-enreg[] class-hnd EH-live
;  V07 loc5         [V07,T15] (  3,  8   )     ref  ->  rsi         class-hnd
;* V08 loc6         [V08    ] (  0,  0   )     ref  ->  zero-ref    class-hnd
;* V09 loc7         [V09    ] (  0,  0   )     ref  ->  zero-ref    class-hnd exact
;  V10 loc8         [V10,T10] (  4, 13   )     int  ->  rsi        
;  V11 OutArgs      [V11    ] (  1,  1   )  lclBlk (40) [rsp+0x00]   "OutgoingArgSpace"
;  V12 tmp1         [V12,T32] (  2,  4   )     ref  ->  rbx         class-hnd exact "NewObj constructor temp"
;  V13 tmp2         [V13,T23] (  3,  6   )     ref  ->  rdi         class-hnd exact "NewObj constructor temp"
;  V14 tmp3         [V14,T24] (  3,  6   )     ref  ->  rdi         class-hnd exact "NewObj constructor temp"
;  V15 tmp4         [V15,T25] (  3,  6   )     ref  ->  rdi         class-hnd exact "NewObj constructor temp"
;  V16 tmp5         [V16,T03] (  3, 24   )     ref  ->  r12         class-hnd exact "NewObj constructor temp"
;  V17 tmp6         [V17,T19] (  2,  8   )     ref  ->  r12        
;  V18 tmp7         [V18,T16] (  3,  8   )     ref  ->  r12        
;  V19 tmp8         [V19,T05] (  6, 16   )     ref  ->  r12        
;  V20 tmp9         [V20,T17] (  3,  8   )     ref  ->  r13        
;  V21 tmp10        [V21,T18] (  3,  8   )     ref  ->  rdx        
;  V22 tmp11        [V22,T06] (  2, 16   )     ref  ->  r13         class-hnd "dup spill"
;  V23 tmp12        [V23,T07] (  2, 16   )     ref  ->  rsi         class-hnd "impAppendStmt"
;  V24 tmp13        [V24,T20] (  2,  8   )     ref  ->  rsi        
;  V25 tmp14        [V25,T21] (  2,  8   )     ref  ->  r12        
;  V26 tmp15        [V26,T09] (  4, 14   )     ref  ->  r13        
;  V27 tmp16        [V27,T02] (  4, 32   )     ref  ->  [rbp-0x48]   class-hnd exact "NewObj constructor temp"
;  V28 tmp17        [V28,T04] (  5, 20   )     ref  ->  r13         class-hnd exact "NewObj constructor temp"
;  V29 tmp18        [V29,T13] (  4,  8   )     ref  ->  rsi         class-hnd exact "NewObj constructor temp"
;  V30 tmp19        [V30,T26] (  3,  6   )     ref  ->  rax         class-hnd exact "NewObj constructor temp"
;  V31 tmp20        [V31,T14] (  4,  8   )     ref  ->  rdi         class-hnd "Inlining Arg"
;  V32 tmp21        [V32,T33] (  2,  4   )     ref  ->  rax         class-hnd "Inlining Arg"
;* V33 tmp22        [V33    ] (  0,  0   )    long  ->  zero-ref    "Inlining Arg"
;* V34 tmp23        [V34    ] (  0,  0   )    long  ->  zero-ref    "Inlining Arg"
;  V35 tmp24        [V35,T34] (  2,  4   )     ref  ->  rcx         class-hnd "Inlining Arg"
;  V36 tmp25        [V36,T27] (  3,  6   )     ref  ->  r14         class-hnd exact "NewObj constructor temp"
;  V37 tmp26        [V37,T36] (  2,  4   )     int  ->  rdi         "Inlining Arg"
;  V38 tmp27        [V38,T11] (  3, 12   )     int  ->  rcx         "Inline return value spill temp"
;  V39 tmp28        [V39,T01] (  3, 36   )     int  ->  rcx         "Inlining Arg"
;  V40 tmp29        [V40,T35] (  2,  4   )     ref  ->  rax         class-hnd "Inlining Arg"
;  V41 tmp30        [V41,T28] (  3,  6   )     ref  ->  rax         "arr expr"
;  V42 tmp31        [V42,T08] (  2, 16   )     ref  ->  rdx         "argument with side effect"
;  V43 PSPSym       [V43    ] (  1,  1   )    long  ->  [rbp-0x58]   do-not-enreg[X] addr-exposed "PSPSym"
;
; Lcl frame size = 72
Setting stack level from -572662307 to 0

=============== Generating BB01 [000..070), preds={} succs={BB02} flags=0x00000002.205b0420: i label target hascall gcsafe idxlen newobj nullcheck LIR 
BB01 IN (2)={            V00 V01        } + ByrefExposed + GcHeap
     OUT(5)={V02 V06 V03         V04 V05} + ByrefExposed + GcHeap

Recording Var Locations at start of BB01
  V00(rsi)  V01(rdi)
Change life 0000000000000000 {} -> 0000000060000000 {V00 V01}
							V00 in reg rsi is becoming live  [------]
							Live regs: 00000000 {} => 00000040 {rsi}
							V01 in reg rdi is becoming live  [------]
							Live regs: 00000040 {rsi} => 000000C0 {rsi rdi}
							Live regs: (unchanged) 000000C0 {rsi rdi}
							GC regs: (unchanged) 000000C0 {rsi rdi}
							Byref regs: (unchanged) 00000000 {}

      L_M55048_BB01:
Label: IG02, GCvars=0000000000000000 {}, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}

Scope info: begin block BB01, IL range [000..070)
Scope info: open scopes =
   0 (V00 arg0) [000..153)
   1 (V01 arg1) [000..153)
Added IP mapping: 0x0000 STACK_EMPTY (G_M55048_IG02,ins#0,ofs#0) label
Generating: N003 (???,???) [000613] ------------                 IL_OFFSET void   IL offset: 0x0 REG NA
Generating: N005 (  2, 10) [000000] H-----------         t0 =    CNS_INT(h) long   0xd1ffab1e method REG rcx $100
IN0001:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t0     long   
Generating: N007 (???,???) [000673] ------------       t673 = *  PUTARG_REG long   REG rcx
                                                              /--*  t673   long   arg0 in rcx
Generating: N009 ( 16, 16) [000001] --C---------         t1 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $180
							Call: GCvars=0000000000000000 {}, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}
IN0002:        call     CORINFO_HELP_NEWSFAST
							GC regs: 000000C0 {rsi rdi} => 000000C1 {rax rsi rdi}
                                                              /--*  t1     ref    
Generating: N011 ( 16, 16) [000003] DA----------              *  STORE_LCL_VAR ref    V12 tmp1         d:2 rbx REG rbx
							GC regs: 000000C1 {rax rsi rdi} => 000000C0 {rsi rdi}
IN0003:        mov      rbx, rax
							V12 in reg rbx is becoming live  [000003]
							Live regs: 000000C0 {rsi rdi} => 000000C8 {rbx rsi rdi}
							Live vars: {V00 V01} => {V00 V01 V12}
							GC regs: 000000C0 {rsi rdi} => 000000C8 {rbx rsi rdi}
Added IP mapping: 0x0005 (G_M55048_IG02,ins#3,ofs#18)
Generating: N013 (???,???) [000614] ------------                 IL_OFFSET void   IL offset: 0x5 REG NA
Generating: N015 (  1,  1) [000006] ------------         t6 =    LCL_VAR   ref    V12 tmp1         u:2 rbx (last use) REG rbx $180
                                                              /--*  t6     ref    
Generating: N017 (  1,  3) [000008] DA----------              *  STORE_LCL_VAR ref    V02 loc0         d:2 rbx REG rbx
							V12 in reg rbx is becoming dead  [000006]
							Live regs: 000000C8 {rbx rsi rdi} => 000000C0 {rsi rdi}
							Live vars: {V00 V01 V12} => {V00 V01}
							GC regs: 000000C8 {rbx rsi rdi} => 000000C0 {rsi rdi}
							V02 in reg rbx is becoming live  [000008]
							Live regs: 000000C0 {rsi rdi} => 000000C8 {rbx rsi rdi}
							Live vars: {V00 V01} => {V00 V01 V02}
							GC regs: 000000C0 {rsi rdi} => 000000C8 {rbx rsi rdi}
Added IP mapping: 0x0006 STACK_EMPTY (G_M55048_IG02,ins#3,ofs#18)
Generating: N019 (???,???) [000615] ------------                 IL_OFFSET void   IL offset: 0x6 REG NA
Generating: N021 (  1,  1) [000009] ------------         t9 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                              /--*  t9     ref    
Generating: N023 (  2,  2) [000440] ------------       t440 = *  LEA(b+32) byref  REG rcx
IN0004:        lea      rcx, bword ptr [rbx+32]
							Byref regs: 00000000 {} => 00000002 {rcx}
Generating: N025 (  1,  1) [000010] ------------        t10 =    LCL_VAR   ref    V01 arg1         u:1 rdi (last use) REG rdi $81
                                                              /--*  t440   byref  
                                                              +--*  t10    ref    
Generating: N027 (???,???) [000616] -A--GO------              *  STOREIND  ref    REG NA
							Byref regs: 00000002 {rcx} => 00000000 {}
							V01 in reg rdi is becoming dead  [000010]
							Live regs: 000000C8 {rbx rsi rdi} => 00000048 {rbx rsi}
							Live vars: {V00 V01 V02} => {V00 V02}
							GC regs: 000000C8 {rbx rsi rdi} => 00000048 {rbx rsi}
IN0005:        mov      rdx, rdi
NoGC Call: savedSet=0000F0E8 {rbx rbp rsi rdi r12 r13 r14 r15}
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000048 {rbx rsi}, byrefRegs=00000000 {}
IN0006:        call     CORINFO_HELP_ASSIGN_REF
Added IP mapping: 0x000D STACK_EMPTY (G_M55048_IG02,ins#6,ofs#30)
Generating: N029 (???,???) [000617] ------------                 IL_OFFSET void   IL offset: 0xd REG NA
Generating: N031 (  1,  1) [000013] ------------        t13 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                              /--*  t13    ref    
Generating: N033 (  2,  2) [000442] -c----------       t442 = *  LEA(b+60) byref  REG NA
Generating: N035 (  1,  1) [000014] ------------        t14 =    CNS_INT   int    0 REG rcx $40
IN0007:        xor      ecx, ecx
                                                              /--*  t442   byref  
                                                              +--*  t14    int    
Generating: N037 (???,???) [000618] -A--GO------              *  STOREIND  int    REG NA
IN0008:        mov      dword ptr [rbx+60], ecx
Added IP mapping: 0x0014 STACK_EMPTY (G_M55048_IG02,ins#8,ofs#35)
Generating: N039 (???,???) [000619] ------------                 IL_OFFSET void   IL offset: 0x14 REG NA
Generating: N041 (  1,  1) [000017] ------------        t17 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                              /--*  t17    ref    
Generating: N043 (  2,  2) [000444] -c----------       t444 = *  LEA(b+56) byref  REG NA
Generating: N045 (  1,  1) [000018] ------------        t18 =    CNS_INT   int    0 reuse reg val REG rcx $40
  TreeNode is marked ReuseReg
                                                              /--*  t444   byref  
                                                              +--*  t18    int    
Generating: N047 (???,???) [000620] -A--GO------              *  STOREIND  int    REG NA
IN0009:        mov      dword ptr [rbx+56], ecx
Added IP mapping: 0x001B STACK_EMPTY (G_M55048_IG02,ins#9,ofs#38)
Generating: N049 (???,???) [000621] ------------                 IL_OFFSET void   IL offset: 0x1b REG NA
Generating: N051 (  2, 10) [000022] H-----------        t22 =    CNS_INT(h) long   0xd1ffab1e token REG rcx $104
IN000a:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t22    long   
Generating: N053 (???,???) [000674] ------------       t674 = *  PUTARG_REG long   REG rcx
                                                              /--*  t674   long   arg0 in rcx
Generating: N055 ( 16, 16) [000023] --C---------        t23 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $183
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000048 {rbx rsi}, byrefRegs=00000000 {}
IN000b:        call     CORINFO_HELP_NEWSFAST
							GC regs: 00000048 {rbx rsi} => 00000049 {rax rbx rsi}
                                                              /--*  t23    ref    
Generating: N057 ( 16, 16) [000025] DA----------              *  STORE_LCL_VAR ref    V13 tmp2         d:2 rdi REG rdi
							GC regs: 00000049 {rax rbx rsi} => 00000048 {rbx rsi}
IN000c:        mov      rdi, rax
							V13 in reg rdi is becoming live  [000025]
							Live regs: 00000048 {rbx rsi} => 000000C8 {rbx rsi rdi}
							Live vars: {V00 V02} => {V00 V02 V13}
							GC regs: 00000048 {rbx rsi} => 000000C8 {rbx rsi rdi}
Generating: N059 (  2, 10) [000266] H-----------       t266 =    CNS_INT(h) long   0xd1ffab1e token REG rcx $105
IN000d:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t266   long   
Generating: N061 (???,???) [000675] ------------       t675 = *  PUTARG_REG long   REG rcx
                                                              /--*  t675   long   arg0 in rcx
Generating: N063 ( 16, 16) [000267] --C---------       t267 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $184
							Call: GCvars=0000000000000000 {}, gcrefRegs=000000C8 {rbx rsi rdi}, byrefRegs=00000000 {}
IN000e:        call     CORINFO_HELP_NEWSFAST
							GC regs: 000000C8 {rbx rsi rdi} => 000000C9 {rax rbx rsi rdi}
                                                              /--*  t267   ref    
Generating: N065 ( 16, 16) [000269] DA----------              *  STORE_LCL_VAR ref    V30 tmp19        d:2 rax REG rax
							GC regs: 000000C9 {rax rbx rsi rdi} => 000000C8 {rbx rsi rdi}
							V30 in reg rax is becoming live  [000269]
							Live regs: 000000C8 {rbx rsi rdi} => 000000C9 {rax rbx rsi rdi}
							Live vars: {V00 V02 V13} => {V00 V02 V13 V30}
							GC regs: 000000C8 {rbx rsi rdi} => 000000C9 {rax rbx rsi rdi}
Generating: N067 (  1,  1) [000280] ------------       t280 =    LCL_VAR   ref    V30 tmp19        u:2 rax REG rax $184
                                                              /--*  t280   ref    
Generating: N069 (  2,  2) [000448] -c----------       t448 = *  LEA(b+52) byref  REG NA
Generating: N071 (  1,  4) [000281] -c----------       t281 =    CNS_INT   int    0x2000400 REG NA $43
                                                              /--*  t448   byref  
                                                              +--*  t281   int    
Generating: N073 (???,???) [000622] -A--GO------              *  STOREIND  int    REG NA
IN000f:        mov      dword ptr [rax+52], 0xD1FFAB1E
Generating: N075 (  1,  1) [000265] ------------       t265 =    LCL_VAR   ref    V13 tmp2         u:2 rdi REG rdi $183
                                                              /--*  t265   ref    
Generating: N077 (  2,  2) [000450] ------------       t450 = *  LEA(b+8)  byref  REG rcx
IN0010:        lea      rcx, bword ptr [rdi+8]
							Byref regs: 00000000 {} => 00000002 {rcx}
Generating: N079 (  1,  1) [000272] ------------       t272 =    LCL_VAR   ref    V30 tmp19        u:2 rax (last use) REG rax $184
                                                              /--*  t450   byref  
                                                              +--*  t272   ref    
Generating: N081 (???,???) [000623] -A--GO------              *  STOREIND  ref    REG NA
							Byref regs: 00000002 {rcx} => 00000000 {}
							V30 in reg rax is becoming dead  [000272]
							Live regs: 000000C9 {rax rbx rsi rdi} => 000000C8 {rbx rsi rdi}
							Live vars: {V00 V02 V13 V30} => {V00 V02 V13}
							GC regs: 000000C9 {rax rbx rsi rdi} => 000000C8 {rbx rsi rdi}
IN0011:        mov      rdx, rax
NoGC Call: savedSet=0000F0E8 {rbx rbp rsi rdi r12 r13 r14 r15}
							Call: GCvars=0000000000000000 {}, gcrefRegs=000000C8 {rbx rsi rdi}, byrefRegs=00000000 {}
IN0012:        call     CORINFO_HELP_ASSIGN_REF
Added IP mapping: 0x0021 (G_M55048_IG02,ins#18,ofs#90)
Generating: N083 (???,???) [000624] ------------                 IL_OFFSET void   IL offset: 0x21 REG NA
Generating: N085 (  1,  1) [000021] ------------        t21 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                              /--*  t21    ref    
Generating: N087 (  2,  2) [000452] ------------       t452 = *  LEA(b+24) byref  REG rcx
IN0013:        lea      rcx, bword ptr [rbx+24]
							Byref regs: 00000000 {} => 00000002 {rcx}
Generating: N089 (  1,  1) [000028] ------------        t28 =    LCL_VAR   ref    V13 tmp2         u:2 rdi (last use) REG rdi $183
                                                              /--*  t452   byref  
                                                              +--*  t28    ref    
Generating: N091 (???,???) [000625] -A--GO------              *  STOREIND  ref    REG NA
							Byref regs: 00000002 {rcx} => 00000000 {}
							V13 in reg rdi is becoming dead  [000028]
							Live regs: 000000C8 {rbx rsi rdi} => 00000048 {rbx rsi}
							Live vars: {V00 V02 V13} => {V00 V02}
							GC regs: 000000C8 {rbx rsi rdi} => 00000048 {rbx rsi}
IN0014:        mov      rdx, rdi
NoGC Call: savedSet=0000F0E8 {rbx rbp rsi rdi r12 r13 r14 r15}
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000048 {rbx rsi}, byrefRegs=00000000 {}
IN0015:        call     CORINFO_HELP_ASSIGN_REF
Added IP mapping: 0x0026 STACK_EMPTY (G_M55048_IG02,ins#21,ofs#102)
Generating: N093 (???,???) [000626] ------------                 IL_OFFSET void   IL offset: 0x26 REG NA
Generating: N095 (  2, 10) [000032] H-----------        t32 =    CNS_INT(h) long   0xd1ffab1e token REG rcx $109
IN0016:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t32    long   
Generating: N097 (???,???) [000676] ------------       t676 = *  PUTARG_REG long   REG rcx
                                                              /--*  t676   long   arg0 in rcx
Generating: N099 ( 16, 16) [000033] --C---------        t33 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $189
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000048 {rbx rsi}, byrefRegs=00000000 {}
IN0017:        call     CORINFO_HELP_NEWSFAST
							GC regs: 00000048 {rbx rsi} => 00000049 {rax rbx rsi}
                                                              /--*  t33    ref    
Generating: N101 ( 16, 16) [000035] DA----------              *  STORE_LCL_VAR ref    V14 tmp3         d:2 rdi REG rdi
							GC regs: 00000049 {rax rbx rsi} => 00000048 {rbx rsi}
IN0018:        mov      rdi, rax
							V14 in reg rdi is becoming live  [000035]
							Live regs: 00000048 {rbx rsi} => 000000C8 {rbx rsi rdi}
							Live vars: {V00 V02} => {V00 V02 V14}
							GC regs: 00000048 {rbx rsi} => 000000C8 {rbx rsi rdi}
Generating: N103 (  2, 10) [000297] ------------       t297 =    CNS_INT   long   0x7ffc7e0b0028 REG rcx $1c6
IN0019:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t297   long   
Generating: N105 (???,???) [000677] ------------       t677 = *  PUTARG_REG long   REG rcx
Generating: N107 (  1,  1) [000298] ------------       t298 =    CNS_INT   int    14 REG rdx $44
IN001a:        mov      edx, 14
                                                              /--*  t298   int    
Generating: N109 (???,???) [000678] ------------       t678 = *  PUTARG_REG int    REG rdx
                                                              /--*  t677   long   arg0 in rcx
                                                              +--*  t678   int    arg1 in rdx
Generating: N111 ( 17, 18) [000299] H-CXG-------       t299 = *  CALL help long   HELPER.CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS REG rax $381
							Call: GCvars=0000000000000000 {}, gcrefRegs=000000C8 {rbx rsi rdi}, byrefRegs=00000000 {}
IN001b:        call     CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS
Generating: N113 (  2, 10) [000458] I-----------       t458 =    CNS_INT(h) long   0xd1ffab1e static Fseq[Value] REG rdx $10a
IN001c:        mov      rdx, 0xD1FFAB1E
                                                              /--*  t458   long   
Generating: N115 (  4, 12) [000295] n---G-------       t295 = *  IND       ref    REG rdx <l:$246, c:$14b>
IN001d:        mov      rdx, gword ptr [rdx]
							GC regs: 000000C8 {rbx rsi rdi} => 000000CC {rdx rbx rsi rdi}
Generating: N117 (  1,  1) [000287] ------------       t287 =    LCL_VAR   ref    V14 tmp3         u:2 rdi REG rdi $189
                                                              /--*  t287   ref    
Generating: N119 (  2,  2) [000455] ------------       t455 = *  LEA(b+8)  byref  REG rcx
IN001e:        lea      rcx, bword ptr [rdi+8]
							Byref regs: 00000000 {} => 00000002 {rcx}
                                                              /--*  t455   byref  
                                                              +--*  t295   ref    
Generating: N121 (???,???) [000627] -ACXGO------              *  STOREIND  ref    REG NA
							Byref regs: 00000002 {rcx} => 00000000 {}
							GC regs: 000000CC {rdx rbx rsi rdi} => 000000C8 {rbx rsi rdi}
NoGC Call: savedSet=0000F0E8 {rbx rbp rsi rdi r12 r13 r14 r15}
							Call: GCvars=0000000000000000 {}, gcrefRegs=000000C8 {rbx rsi rdi}, byrefRegs=00000000 {}
IN001f:        call     CORINFO_HELP_ASSIGN_REF
Added IP mapping: 0x002C (G_M55048_IG02,ins#31,ofs#162)
Generating: N123 (???,???) [000628] ------------                 IL_OFFSET void   IL offset: 0x2c REG NA
Generating: N125 (  1,  1) [000031] ------------        t31 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                              /--*  t31    ref    
Generating: N127 (  2,  2) [000460] ------------       t460 = *  LEA(b+8)  byref  REG rcx
IN0020:        lea      rcx, bword ptr [rbx+8]
							Byref regs: 00000000 {} => 00000002 {rcx}
Generating: N129 (  1,  1) [000038] ------------        t38 =    LCL_VAR   ref    V14 tmp3         u:2 rdi (last use) REG rdi $189
                                                              /--*  t460   byref  
                                                              +--*  t38    ref    
Generating: N131 (???,???) [000629] -A--GO------              *  STOREIND  ref    REG NA
							Byref regs: 00000002 {rcx} => 00000000 {}
							V14 in reg rdi is becoming dead  [000038]
							Live regs: 000000C8 {rbx rsi rdi} => 00000048 {rbx rsi}
							Live vars: {V00 V02 V14} => {V00 V02}
							GC regs: 000000C8 {rbx rsi rdi} => 00000048 {rbx rsi}
IN0021:        mov      rdx, rdi
NoGC Call: savedSet=0000F0E8 {rbx rbp rsi rdi r12 r13 r14 r15}
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000048 {rbx rsi}, byrefRegs=00000000 {}
IN0022:        call     CORINFO_HELP_ASSIGN_REF
Added IP mapping: 0x0031 STACK_EMPTY (G_M55048_IG02,ins#34,ofs#174)
Generating: N133 (???,???) [000630] ------------                 IL_OFFSET void   IL offset: 0x31 REG NA
Generating: N135 (  1,  1) [000041] ------------        t41 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                              /--*  t41    ref    
Generating: N137 (  2,  2) [000462] -c----------       t462 = *  LEA(b+16) byref  REG NA
Generating: N139 (  1,  1) [000042] ------------        t42 =    CNS_INT   ref    null REG rcx $VN.Null
IN0023:        xor      rcx, rcx
							GC regs: 00000048 {rbx rsi} => 0000004A {rcx rbx rsi}
                                                              /--*  t462   byref  
                                                              +--*  t42    ref    
Generating: N141 (???,???) [000631] -A--GO------              *  STOREIND  ref    REG NA
							GC regs: 0000004A {rcx rbx rsi} => 00000048 {rbx rsi}
IN0024:        mov      gword ptr [rbx+16], rcx
Added IP mapping: 0x0038 STACK_EMPTY (G_M55048_IG02,ins#36,ofs#180)
Generating: N143 (???,???) [000632] ------------                 IL_OFFSET void   IL offset: 0x38 REG NA
Generating: N145 (  2, 10) [000046] H-----------        t46 =    CNS_INT(h) long   0xd1ffab1e token REG rcx $10e
IN0025:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t46    long   
Generating: N147 (???,???) [000679] ------------       t679 = *  PUTARG_REG long   REG rcx
                                                              /--*  t679   long   arg0 in rcx
Generating: N149 ( 16, 16) [000047] --C---------        t47 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $193
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000048 {rbx rsi}, byrefRegs=00000000 {}
IN0026:        call     CORINFO_HELP_NEWSFAST
							GC regs: 00000048 {rbx rsi} => 00000049 {rax rbx rsi}
                                                              /--*  t47    ref    
Generating: N151 ( 16, 16) [000049] DA----------              *  STORE_LCL_VAR ref    V15 tmp4         d:2 rdi REG rdi
							GC regs: 00000049 {rax rbx rsi} => 00000048 {rbx rsi}
IN0027:        mov      rdi, rax
							V15 in reg rdi is becoming live  [000049]
							Live regs: 00000048 {rbx rsi} => 000000C8 {rbx rsi rdi}
							Live vars: {V00 V02} => {V00 V02 V15}
							GC regs: 00000048 {rbx rsi} => 000000C8 {rbx rsi rdi}
Generating: N153 (  1,  1) [000050] ------------        t50 =    LCL_VAR   ref    V15 tmp4         u:2 rdi REG rdi $193
                                                              /--*  t50    ref    
Generating: N155 (???,???) [000680] ------------       t680 = *  PUTARG_REG ref    REG rcx
IN0028:        mov      rcx, rdi
							GC regs: 000000C8 {rbx rsi rdi} => 000000CA {rcx rbx rsi rdi}
Generating: N157 (  1,  1) [000302] ------------       t302 =    CNS_INT   ref    null REG rdx $VN.Null
IN0029:        xor      rdx, rdx
							GC regs: 000000CA {rcx rbx rsi rdi} => 000000CE {rcx rdx rbx rsi rdi}
                                                              /--*  t302   ref    
Generating: N159 (???,???) [000681] ------------       t681 = *  PUTARG_REG ref    REG rdx
							GC regs: 000000CE {rcx rdx rbx rsi rdi} => 000000CA {rcx rbx rsi rdi}
							GC regs: 000000CA {rcx rbx rsi rdi} => 000000CE {rcx rdx rbx rsi rdi}
                                                              /--*  t680   ref    this in rcx
                                                              +--*  t681   ref    arg1 in rdx
Generating: N161 ( 16, 10) [000303] --CXG-------              *  CALL      void   System.Collections.Generic.HashSet`1[__Canon][System.__Canon]..ctor REG NA $VN.Void
							GC regs: 000000CE {rcx rdx rbx rsi rdi} => 000000CC {rdx rbx rsi rdi}
							GC regs: 000000CC {rdx rbx rsi rdi} => 000000C8 {rbx rsi rdi}
							Call: GCvars=0000000000000000 {}, gcrefRegs=000000C8 {rbx rsi rdi}, byrefRegs=00000000 {}
IN002a:        call     System.Collections.Generic.HashSet`1[__Canon][System.__Canon]:.ctor(System.Collections.Generic.IEqualityComparer`1[__Canon]):this
Added IP mapping: 0x003E (G_M55048_IG02,ins#42,ofs#208)
Generating: N163 (???,???) [000633] ------------                 IL_OFFSET void   IL offset: 0x3e REG NA
Generating: N165 (  1,  1) [000045] ------------        t45 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                              /--*  t45    ref    
Generating: N167 (  2,  2) [000467] ------------       t467 = *  LEA(b+40) byref  REG rcx
IN002b:        lea      rcx, bword ptr [rbx+40]
							Byref regs: 00000000 {} => 00000002 {rcx}
Generating: N169 (  1,  1) [000052] ------------        t52 =    LCL_VAR   ref    V15 tmp4         u:2 rdi (last use) REG rdi $193
                                                              /--*  t467   byref  
                                                              +--*  t52    ref    
Generating: N171 (???,???) [000634] -A--GO------              *  STOREIND  ref    REG NA
							Byref regs: 00000002 {rcx} => 00000000 {}
							V15 in reg rdi is becoming dead  [000052]
							Live regs: 000000C8 {rbx rsi rdi} => 00000048 {rbx rsi}
							Live vars: {V00 V02 V15} => {V00 V02}
							GC regs: 000000C8 {rbx rsi rdi} => 00000048 {rbx rsi}
IN002c:        mov      rdx, rdi
NoGC Call: savedSet=0000F0E8 {rbx rbp rsi rdi r12 r13 r14 r15}
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000048 {rbx rsi}, byrefRegs=00000000 {}
IN002d:        call     CORINFO_HELP_ASSIGN_REF
Generating: N173 ( 14,  5) [000055] --CXG-------        t55 =    CALL      ref    System.Diagnostics.Process.GetCurrentProcess REG rax $151
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000048 {rbx rsi}, byrefRegs=00000000 {}
IN002e:        call     System.Diagnostics.Process:GetCurrentProcess():System.Diagnostics.Process
							GC regs: 00000048 {rbx rsi} => 00000049 {rax rbx rsi}
                                                              /--*  t55    ref    
Generating: N175 ( 14,  5) [000316] DA-XG-------              *  STORE_LCL_VAR ref    V31 tmp20        d:2 rdi REG rdi
							GC regs: 00000049 {rax rbx rsi} => 00000048 {rbx rsi}
IN002f:        mov      rdi, rax
							V31 in reg rdi is becoming live  [000316]
							Live regs: 00000048 {rbx rsi} => 000000C8 {rbx rsi rdi}
							Live vars: {V00 V02} => {V00 V02 V31}
							GC regs: 00000048 {rbx rsi} => 000000C8 {rbx rsi rdi}
Generating: N177 (  1,  1) [000313] ------------       t313 =    LCL_VAR   ref    V31 tmp20        u:2 rdi REG rdi $151
                                                              /--*  t313   ref    
Generating: N179 (  2,  2) [000314] ---X--------              *  NULLCHECK int    REG NA $197
IN0030:        cmp      dword ptr [rdi], edi
Generating: N181 (  1,  1) [000306] ------------       t306 =    LCL_VAR   ref    V31 tmp20        u:2 rdi REG rdi $151
                                                              /--*  t306   ref    
Generating: N183 (???,???) [000682] ------------       t682 = *  PUTARG_REG ref    REG rcx
IN0031:        mov      rcx, rdi
							GC regs: 000000C8 {rbx rsi rdi} => 000000CA {rcx rbx rsi rdi}
Generating: N185 (  1,  1) [000307] ------------       t307 =    CNS_INT   int    3 REG rdx $46
IN0032:        mov      edx, 3
                                                              /--*  t307   int    
Generating: N187 (???,???) [000683] ------------       t683 = *  PUTARG_REG int    REG rdx
                                                              /--*  t682   ref    this in rcx
                                                              +--*  t683   int    arg1 in rdx
Generating: N189 ( 16, 10) [000308] --CXG-------              *  CALL      void   System.Diagnostics.Process.EnsureState REG NA $VN.Void
							GC regs: 000000CA {rcx rbx rsi rdi} => 000000C8 {rbx rsi rdi}
							Call: GCvars=0000000000000000 {}, gcrefRegs=000000C8 {rbx rsi rdi}, byrefRegs=00000000 {}
IN0033:        call     System.Diagnostics.Process:EnsureState(int):this
Generating: N191 (  1,  1) [000309] ------------       t309 =    LCL_VAR   ref    V31 tmp20        u:2 rdi (last use) REG rdi $151
                                                              /--*  t309   ref    
Generating: N193 (  2,  5) [000471] -c----------       t471 = *  LEA(b+200) byref  REG NA
                                                              /--*  t471   byref  
Generating: N195 (  4,  7) [000310] n---GO------       t310 = *  IND       int    REG rcx <l:$289, c:$288>
							V31 in reg rdi is becoming dead  [000309]
							Live regs: 000000C8 {rbx rsi rdi} => 00000048 {rbx rsi}
							Live vars: {V00 V02 V31} => {V00 V02}
							GC regs: 000000C8 {rbx rsi rdi} => 00000048 {rbx rsi}
IN0034:        mov      ecx, dword ptr [rdi+200]
                                                              /--*  t310   int    
Generating: N197 (???,???) [000684] ----GO------       t684 = *  PUTARG_REG int    REG rcx
                                                              /--*  t684   int    arg0 in rcx
Generating: N199 ( 18, 13) [000311] --CXGO------       t311 = *  CALL      ref    System.Diagnostics.NtProcessManager.GetFirstModule REG rax $156
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000048 {rbx rsi}, byrefRegs=00000000 {}
IN0035:        call     System.Diagnostics.NtProcessManager:GetFirstModule(int):System.Diagnostics.ProcessModule
							GC regs: 00000048 {rbx rsi} => 00000049 {rax rbx rsi}
                                                              /--*  t311   ref    
Generating: N201 ( 18, 13) [000322] DA-XGO------              *  STORE_LCL_VAR ref    V32 tmp21        d:2 rax REG rax
							GC regs: 00000049 {rax rbx rsi} => 00000048 {rbx rsi}
							V32 in reg rax is becoming live  [000322]
							Live regs: 00000048 {rbx rsi} => 00000049 {rax rbx rsi}
							Live vars: {V00 V02} => {V00 V02 V32}
							GC regs: 00000048 {rbx rsi} => 00000049 {rax rbx rsi}
Generating: N203 (  1,  1) [000319] ------------       t319 =    LCL_VAR   ref    V32 tmp21        u:2 rax (last use) REG rax $156
                                                              /--*  t319   ref    
Generating: N205 (  2,  2) [000474] -c----------       t474 = *  LEA(b+40) byref  REG NA
                                                              /--*  t474   byref  
Generating: N207 (  4,  4) [000320] ---XG-------       t320 = *  IND       ref    REG rdi <l:$19c, c:$19b>
							V32 in reg rax is becoming dead  [000319]
							Live regs: 00000049 {rax rbx rsi} => 00000048 {rbx rsi}
							Live vars: {V00 V02 V32} => {V00 V02}
							GC regs: 00000049 {rax rbx rsi} => 00000048 {rbx rsi}
IN0036:        mov      rdi, gword ptr [rax+40]
							GC regs: 00000048 {rbx rsi} => 000000C8 {rbx rsi rdi}
                                                              /--*  t320   ref    
Generating: N209 (  4,  4) [000062] DA-XG-------              *  STORE_LCL_VAR ref    V03 loc1         d:2 rdi REG rdi
							GC regs: 000000C8 {rbx rsi rdi} => 00000048 {rbx rsi}
							V03 in reg rdi is becoming live  [000062]
							Live regs: 00000048 {rbx rsi} => 000000C8 {rbx rsi rdi}
							Live vars: {V00 V02} => {V00 V02 V03}
							GC regs: 00000048 {rbx rsi} => 000000C8 {rbx rsi rdi}
Generating: N211 (  1,  1) [000339] -c----------       t339 =    CNS_INT   int    5 REG NA $47
                                                              /--*  t339   int    
Generating: N213 (???,???) [000685] ------------              *  PUTARG_STK [+0x20] void   REG NA
IN0037:        mov      dword ptr [V11+0x20 rsp+20H], 5
Generating: N215 (  1,  1) [000337] ------------       t337 =    LCL_VAR   ref    V03 loc1         u:2 rdi REG rdi <l:$199, c:$159>
                                                              /--*  t337   ref    
Generating: N217 (???,???) [000669] -c----------       t669 = *  LEA(b+8)  ref    REG NA
                                                              /--*  t669   ref    
Generating: N219 (  3,  3) [000338] ---X--------       t338 = *  IND       int    REG r9 <l:$28b, c:$28a>
IN0038:        mov      r9d, dword ptr [rdi+8]
                                                              /--*  t338   int    
Generating: N221 (???,???) [000686] ---X--------       t686 = *  PUTARG_REG int    REG r9
Generating: N223 (  2, 10) [000475] H-----------       t475 =    CNS_INT(h) long   0xD1FFAB1E "dotnet.exe" REG rdx $112
IN0039:        mov      rdx, 0xD1FFAB1E
                                                              /--*  t475   long   
Generating: N225 (  4, 12) [000476] #---G-------       t476 = *  IND       ref    REG rdx $19f
IN003a:        mov      rdx, gword ptr [rdx]
							GC regs: 000000C8 {rbx rsi rdi} => 000000CC {rdx rbx rsi rdi}
                                                              /--*  t476   ref    
Generating: N227 (???,???) [000687] ----G-------       t687 = *  PUTARG_REG ref    REG rdx
							GC regs: 000000CC {rdx rbx rsi rdi} => 000000C8 {rbx rsi rdi}
							GC regs: 000000C8 {rbx rsi rdi} => 000000CC {rdx rbx rsi rdi}
Generating: N229 (  1,  1) [000063] ------------        t63 =    LCL_VAR   ref    V03 loc1         u:2 rdi REG rdi <l:$199, c:$159>
                                                              /--*  t63    ref    
Generating: N231 (???,???) [000688] ------------       t688 = *  PUTARG_REG ref    REG rcx
IN003b:        mov      rcx, rdi
							GC regs: 000000CC {rdx rbx rsi rdi} => 000000CE {rcx rdx rbx rsi rdi}
Generating: N233 (  1,  1) [000336] ------------       t336 =    CNS_INT   int    0 REG r8 $40
IN003c:        xor      r8d, r8d
                                                              /--*  t336   int    
Generating: N235 (???,???) [000689] ------------       t689 = *  PUTARG_REG int    REG r8
                                                              /--*  t686   int    arg3 in r9
                                                              +--*  t687   ref    arg1 in rdx
                                                              +--*  t688   ref    this in rcx
                                                              +--*  t689   int    arg2 in r8
Generating: N237 ( 27, 28) [000340] --CXG-------       t340 = *  CALL      int    System.String.IndexOf REG rax $308
							GC regs: 000000CE {rcx rdx rbx rsi rdi} => 000000CA {rcx rbx rsi rdi}
							GC regs: 000000CA {rcx rbx rsi rdi} => 000000C8 {rbx rsi rdi}
							Call: GCvars=0000000000000000 {}, gcrefRegs=000000C8 {rbx rsi rdi}, byrefRegs=00000000 {}
IN003d:        call     System.String:IndexOf(System.String,int,int,int):int:this
Generating: N239 (  1,  1) [000328] -c----------       t328 =    CNS_INT   int    0 REG NA $40
                                                              /--*  t340   int    
                                                              +--*  t328   int    
Generating: N241 ( 32, 30) [000329] ---XG-------       t329 = *  GE        int    REG r14 $28c
IN003e:        mov      r14d, eax
IN003f:        not      r14d

      G_M55048_IG02:        ; offs=000000H, funclet=00, bbWeight=1   
IN0040:        shr      r14d, 31
                                                              /--*  t329   int    
Generating: N243 ( 32, 30) [000069] DA-XG-------              *  STORE_LCL_VAR int    V04 loc2         d:2 r14 REG r14
							V04 in reg r14 is becoming live  [000069]
							Live regs: 000000C8 {rbx rsi rdi} => 000040C8 {rbx rsi rdi r14}
							Live vars: {V00 V02 V03} => {V00 V02 V03 V04}
Generating: N245 ( 14,  5) [000070] --CXG-------        t70 =    CALL      ref    System.Environment.GetCommandLineArgs REG rax $15e
							Call: GCvars=0000000000000000 {}, gcrefRegs=000000C8 {rbx rsi rdi}, byrefRegs=00000000 {}
IN0041:        call     System.Environment:GetCommandLineArgs():System.String[]
							GC regs: 000000C8 {rbx rsi rdi} => 000000C9 {rax rbx rsi rdi}
                                                              /--*  t70    ref    
Generating: N247 ( 14,  5) [000482] DA-XG-------              *  STORE_LCL_VAR ref    V41 tmp30        d:2 rax REG rax
							GC regs: 000000C9 {rax rbx rsi rdi} => 000000C8 {rbx rsi rdi}
							V41 in reg rax is becoming live  [000482]
							Live regs: 000040C8 {rbx rsi rdi r14} => 000040C9 {rax rbx rsi rdi r14}
							Live vars: {V00 V02 V03 V04} => {V00 V02 V03 V04 V41}
							GC regs: 000000C8 {rbx rsi rdi} => 000000C9 {rax rbx rsi rdi}
Generating: N249 (  1,  1) [000072] -c----------        t72 =    CNS_INT   int    0 REG NA $40
Generating: N251 (  1,  1) [000483] ------------       t483 =    LCL_VAR   ref    V41 tmp30        u:2 rax REG rax $15e
                                                              /--*  t483   ref    
Generating: N253 (???,???) [000671] -c----------       t671 = *  LEA(b+8)  ref    REG NA
                                                              /--*  t671   ref    
Generating: N255 (  3,  3) [000486] -c-X--------       t486 = *  IND       int    REG NA $28d
                                                              /--*  t72    int    
                                                              +--*  t486   int    
Generating: N257 (  8, 11) [000487] ---X--------              *  ARR_BOUNDS_CHECK_Rng void   REG NA $1a5
IN0042:        cmp      dword ptr [rax+8], 0
IN0043:        jbe      L_M55048_BB25
Generating: N259 (  1,  1) [000484] ------------       t484 =    LCL_VAR   ref    V41 tmp30        u:2 rax (last use) REG rax $15e
                                                              /--*  t484   ref    
Generating: N261 (  2,  2) [000492] -c----------       t492 = *  LEA(b+16) byref  REG NA
                                                              /--*  t492   byref  
Generating: N263 (  4,  4) [000073] a---G-------        t73 = *  IND       ref    REG r15 <l:$1a8, c:$161>
							V41 in reg rax is becoming dead  [000484]
							Live regs: 000040C9 {rax rbx rsi rdi r14} => 000040C8 {rbx rsi rdi r14}
							Live vars: {V00 V02 V03 V04 V41} => {V00 V02 V03 V04}
							GC regs: 000000C9 {rax rbx rsi rdi} => 000000C8 {rbx rsi rdi}
IN0044:        mov      r15, gword ptr [rax+16]
							GC regs: 000000C8 {rbx rsi rdi} => 000080C8 {rbx rsi rdi r15}
                                                              /--*  t73    ref    
Generating: N265 ( 26, 20) [000075] DA-XG-------              *  STORE_LCL_VAR ref    V05 loc3         d:2 r15 REG r15
							GC regs: 000080C8 {rbx rsi rdi r15} => 000000C8 {rbx rsi rdi}
							V05 in reg r15 is becoming live  [000075]
							Live regs: 000040C8 {rbx rsi rdi r14} => 0000C0C8 {rbx rsi rdi r14 r15}
							Live vars: {V00 V02 V03 V04} => {V00 V02 V03 V04 V05}
							GC regs: 000000C8 {rbx rsi rdi} => 000080C8 {rbx rsi rdi r15}
Added IP mapping: 0x0068 STACK_EMPTY (G_M55048_IG03,ins#5,ofs#23)
Generating: N267 (???,???) [000635] ------------                 IL_OFFSET void   IL offset: 0x68 REG NA
Generating: N269 (  1,  1) [000076] ------------        t76 =    LCL_VAR   ref    V00 arg0         u:1 rsi (last use) REG rsi $80
                                                              /--*  t76    ref    
Generating: N271 (???,???) [000690] ------------       t690 = *  PUTARG_REG ref    REG rcx
							V00 in reg rsi is becoming dead  [000076]
							Live regs: 0000C0C8 {rbx rsi rdi r14 r15} => 0000C088 {rbx rdi r14 r15}
							Live vars: {V00 V02 V03 V04 V05} => {V02 V03 V04 V05}
							GC regs: 000080C8 {rbx rsi rdi r15} => 00008088 {rbx rdi r15}
IN0045:        mov      rcx, rsi
							GC regs: 00008088 {rbx rdi r15} => 0000808A {rcx rbx rdi r15}
Generating: N273 (  2, 10) [000495] H-----------       t495 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $114
IN0046:        mov      r11, 0xD1FFAB1E
                                                              /--*  t495   long   
Generating: N275 (???,???) [000691] ------------       t691 = *  PUTARG_REG long   REG r11
Generating: N277 (  2, 10) [000692] Hc----------       t692 =    CNS_INT(h) long   0xd1ffab1e ftn REG NA
                                                              /--*  t692   long   
Generating: N279 (  4, 12) [000693] -c----------       t693 = *  IND       long   REG NA
                                                              /--*  t690   ref    this in rcx
                                                              +--*  t691   long   arg1 in r11
                                                              +--*  t693   long   control expr
Generating: N281 ( 23, 21) [000077] --CXG-------        t77 = *  CALLV stub ref    System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon].GetEnumerator REG rax $164
							GC regs: 0000808A {rcx rbx rdi r15} => 00008088 {rbx rdi r15}
							Call: GCvars=0000000000000000 {}, gcrefRegs=00008088 {rbx rdi r15}, byrefRegs=00000000 {}
IN0047:        call     [System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon]:GetEnumerator():System.Collections.Generic.IEnumerator`1[__Canon]:this]
							GC regs: 00008088 {rbx rdi r15} => 00008089 {rax rbx rdi r15}
                                                              /--*  t77    ref    
Generating: N283 ( 23, 21) [000079] DA-XG-------              *  STORE_LCL_VAR ref    V06 loc4         d:2 NA REG NA
							GC regs: 00008089 {rax rbx rdi r15} => 00008088 {rbx rdi r15}
IN0048:        mov      gword ptr [V06 rbp-40H], rax
							Live vars: {V02 V03 V04 V05} => {V02 V03 V04 V05 V06}
							GCvars: {} => {V06}

Scope info: end block BB01, IL range [000..070)
Scope info: open scopes =
   <none>

=============== Generating BB02 [070..072) -> BB13 (cond), preds={BB01} succs={BB03,BB13} flags=0x00000002.20090130: keep i try label hascall gcsafe LIR 
BB02 IN (5)={V02 V06 V03 V04 V05} + ByrefExposed + GcHeap
     OUT(5)={V02 V06 V03 V04 V05} + ByrefExposed + GcHeap

Recording Var Locations at start of BB02
  V02(rbx)  V03(rdi)  V04(r14)  V05(r15)
Liveness not changing: 0000002080401001 {V02 V03 V04 V05 V06}
							Live regs: 00000000 {} => 0000C088 {rbx rdi r14 r15}
							GC regs: 00000000 {} => 00008088 {rbx rdi r15}
							Byref regs: (unchanged) 00000000 {}

      L_M55048_BB02:

      G_M55048_IG03:        ; offs=00012CH, funclet=00, bbWeight=1   
Label: IG04, GCvars=0000000000001000 {V06}, gcrefRegs=00008088 {rbx rdi r15}, byrefRegs=00000000 {}

Scope info: begin block BB02, IL range [070..072)
Scope info: open scopes =
   2 (V02 loc0) [000..153)
   6 (V06 loc4) [000..153)
   3 (V03 loc1) [000..153)
   4 (V04 loc2) [000..153)
   5 (V05 loc3) [000..153)
Added IP mapping: 0x00E9 STACK_EMPTY (G_M55048_IG04,ins#0,ofs#0) label
Generating: N287 (???,???) [000636] ------------                 IL_OFFSET void   IL offset: 0xe9 REG NA
Generating: N289 (  1,  1) [000575] ------------       t575 =    LCL_VAR   ref    V06 loc4         u:2 rcx REG rcx $164
IN0049:        mov      rcx, gword ptr [V06 rbp-40H]
							GC regs: 00008088 {rbx rdi r15} => 0000808A {rcx rbx rdi r15}
                                                              /--*  t575   ref    
Generating: N291 (???,???) [000694] ------------       t694 = *  PUTARG_REG ref    REG rcx
							GC regs: 0000808A {rcx rbx rdi r15} => 00008088 {rbx rdi r15}
							GC regs: 00008088 {rbx rdi r15} => 0000808A {rcx rbx rdi r15}
Generating: N293 (  2, 10) [000576] H-----------       t576 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
IN004a:        mov      r11, 0xD1FFAB1E
                                                              /--*  t576   long   
Generating: N295 (???,???) [000695] ------------       t695 = *  PUTARG_REG long   REG r11
Generating: N297 (  2, 10) [000696] Hc----------       t696 =    CNS_INT(h) long   0xd1ffab1e ftn REG NA
                                                              /--*  t696   long   
Generating: N299 (  4, 12) [000697] -c----------       t697 = *  IND       long   REG NA
                                                              /--*  t694   ref    this in rcx
                                                              +--*  t695   long   arg1 in r11
                                                              +--*  t697   long   control expr
Generating: N301 ( 23, 21) [000572] --CXG-------       t572 = *  CALLV stub int    System.Collections.IEnumerator.MoveNext REG rax $30a
							GC regs: 0000808A {rcx rbx rdi r15} => 00008088 {rbx rdi r15}
							Call: GCvars=0000000000001000 {V06}, gcrefRegs=00008088 {rbx rdi r15}, byrefRegs=00000000 {}
IN004b:        call     [System.Collections.IEnumerator:MoveNext():bool:this]
Generating: N303 (  1,  1) [000577] -c----------       t577 =    CNS_INT   int    0 REG NA $40
                                                              /--*  t572   int    
                                                              +--*  t577   int    
Generating: N305 ( 25, 23) [000571] J--XG--N----              *  EQ        void   REG NA $28e
IN004c:        test     eax, eax
Generating: N307 ( 27, 25) [000578] ---XG-------              *  JTRUE     void   REG NA
IN004d:        je       L_M55048_BB13

Scope info: end block BB02, IL range [070..072)
Scope info: open scopes =
   2 (V02 loc0) [000..153)
   6 (V06 loc4) [000..153)
   3 (V03 loc1) [000..153)
   4 (V04 loc2) [000..153)
   5 (V05 loc3) [000..153)

=============== Generating BB03 [072..08B) -> BB05 (cond), preds={BB02,BB09} succs={BB04,BB05} flags=0x0000000a.214b2020: i Loop label target hascall gcsafe newobj bwd bwd-target LIR 
BB03 IN (5)={V02 V06         V03 V04 V05} + ByrefExposed + GcHeap
     OUT(7)={V02 V06 V07 V18 V03 V04 V05} + ByrefExposed + GcHeap

Recording Var Locations at start of BB03
  V02(rbx)  V03(rdi)  V04(r14)  V05(r15)
Liveness not changing: 0000002080401001 {V02 V03 V04 V05 V06}
							Live regs: 00000000 {} => 0000C088 {rbx rdi r14 r15}
							GC regs: 00000000 {} => 00008088 {rbx rdi r15}
							Byref regs: (unchanged) 00000000 {}

      L_M55048_BB03:

      G_M55048_IG04:        ; offs=00015AH, funclet=00, bbWeight=1   
Label: IG05, GCvars=0000000000001000 {V06}, gcrefRegs=00008088 {rbx rdi r15}, byrefRegs=00000000 {}

Scope info: begin block BB03, IL range [072..08B)
Scope info: open scopes =
   2 (V02 loc0) [000..153)
   6 (V06 loc4) [000..153)
   3 (V03 loc1) [000..153)
   4 (V04 loc2) [000..153)
   5 (V05 loc3) [000..153)
Added IP mapping: 0x0072 STACK_EMPTY (G_M55048_IG05,ins#0,ofs#0) label
Generating: N311 (???,???) [000637] ------------                 IL_OFFSET void   IL offset: 0x72 REG NA
Generating: N313 (  1,  1) [000085] ------------        t85 =    LCL_VAR   ref    V06 loc4         u:2 rcx REG rcx $164
IN004e:        mov      rcx, gword ptr [V06 rbp-40H]
							GC regs: 00008088 {rbx rdi r15} => 0000808A {rcx rbx rdi r15}
                                                              /--*  t85    ref    
Generating: N315 (???,???) [000698] ------------       t698 = *  PUTARG_REG ref    REG rcx
							GC regs: 0000808A {rcx rbx rdi r15} => 00008088 {rbx rdi r15}
							GC regs: 00008088 {rbx rdi r15} => 0000808A {rcx rbx rdi r15}
Generating: N317 (  2, 10) [000498] H-----------       t498 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $116
IN004f:        mov      r11, 0xD1FFAB1E
                                                              /--*  t498   long   
Generating: N319 (???,???) [000699] ------------       t699 = *  PUTARG_REG long   REG r11
Generating: N321 (  2, 10) [000700] Hc----------       t700 =    CNS_INT(h) long   0xd1ffab1e ftn REG NA
                                                              /--*  t700   long   
Generating: N323 (  4, 12) [000701] -c----------       t701 = *  IND       long   REG NA
                                                              /--*  t698   ref    this in rcx
                                                              +--*  t699   long   arg1 in r11
                                                              +--*  t701   long   control expr
Generating: N325 ( 23, 21) [000086] --CXG-------        t86 = *  CALLV stub ref    System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon].get_Current REG rax $442
							GC regs: 0000808A {rcx rbx rdi r15} => 00008088 {rbx rdi r15}
							Call: GCvars=0000000000001000 {V06}, gcrefRegs=00008088 {rbx rdi r15}, byrefRegs=00000000 {}
IN0050:        call     [System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon]:get_Current():System.__Canon:this]
							GC regs: 00008088 {rbx rdi r15} => 00008089 {rax rbx rdi r15}
                                                              /--*  t86    ref    
Generating: N327 ( 23, 21) [000088] DA-XG-------              *  STORE_LCL_VAR ref    V07 loc5         d:2 rsi REG rsi
							GC regs: 00008089 {rax rbx rdi r15} => 00008088 {rbx rdi r15}
IN0051:        mov      rsi, rax
							V07 in reg rsi is becoming live  [000088]
							Live regs: 0000C088 {rbx rdi r14 r15} => 0000C0C8 {rbx rsi rdi r14 r15}
							Live vars: {V02 V03 V04 V05 V06} => {V02 V03 V04 V05 V06 V07}
							GC regs: 00008088 {rbx rdi r15} => 000080C8 {rbx rsi rdi r15}
Added IP mapping: 0x007B STACK_EMPTY (G_M55048_IG05,ins#4,ofs#23)
Generating: N329 (???,???) [000638] ------------                 IL_OFFSET void   IL offset: 0x7b REG NA
Generating: N331 (  2, 10) [000089] H-----------        t89 =    CNS_INT(h) long   0xd1ffab1e token REG rcx $117
IN0052:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t89    long   
Generating: N333 (???,???) [000702] ------------       t702 = *  PUTARG_REG long   REG rcx
                                                              /--*  t702   long   arg0 in rcx
Generating: N335 ( 16, 16) [000090] --C---------        t90 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $1ab
							Call: GCvars=0000000000001000 {V06}, gcrefRegs=000080C8 {rbx rsi rdi r15}, byrefRegs=00000000 {}
IN0053:        call     CORINFO_HELP_NEWSFAST
							GC regs: 000080C8 {rbx rsi rdi r15} => 000080C9 {rax rbx rsi rdi r15}
                                                              /--*  t90    ref    
Generating: N337 ( 16, 16) [000092] DA----------              *  STORE_LCL_VAR ref    V16 tmp5         d:2 r12 REG r12
							GC regs: 000080C9 {rax rbx rsi rdi r15} => 000080C8 {rbx rsi rdi r15}
IN0054:        mov      r12, rax
							V16 in reg r12 is becoming live  [000092]
							Live regs: 0000C0C8 {rbx rsi rdi r14 r15} => 0000D0C8 {rbx rsi rdi r12 r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V07} => {V02 V03 V04 V05 V06 V07 V16}
							GC regs: 000080C8 {rbx rsi rdi r15} => 000090C8 {rbx rsi rdi r12 r15}
Added IP mapping: 0x0080 (G_M55048_IG05,ins#7,ofs#41)
Generating: N339 (???,???) [000639] ------------                 IL_OFFSET void   IL offset: 0x80 REG NA
Generating: N341 (  1,  1) [000096] ------------        t96 =    LCL_VAR   ref    V16 tmp5         u:2 r12 REG r12 $1ab
                                                              /--*  t96    ref    
Generating: N343 (  2,  2) [000503] ------------       t503 = *  LEA(b+8)  byref  REG rcx
IN0055:        lea      rcx, bword ptr [r12+8]
							Byref regs: 00000000 {} => 00000002 {rcx}
Generating: N345 (  1,  1) [000097] ------------        t97 =    LCL_VAR   ref    V03 loc1         u:2 rdi REG rdi <l:$199, c:$159>
                                                              /--*  t503   byref  
                                                              +--*  t97    ref    
Generating: N347 (???,???) [000640] -A--GO------              *  STOREIND  ref    REG NA
							Byref regs: 00000002 {rcx} => 00000000 {}
IN0056:        mov      rdx, rdi
NoGC Call: savedSet=0000F0E8 {rbx rbp rsi rdi r12 r13 r14 r15}
							Call: GCvars=0000000000001000 {V06}, gcrefRegs=000090C8 {rbx rsi rdi r12 r15}, byrefRegs=00000000 {}
IN0057:        call     CORINFO_HELP_ASSIGN_REF
Generating: N349 (  1,  1) [000095] ------------        t95 =    LCL_VAR   ref    V16 tmp5         u:2 r12 (last use) REG r12 $1ab
                                                              /--*  t95    ref    
Generating: N351 (  1,  3) [000105] DA----------              *  STORE_LCL_VAR ref    V17 tmp6         d:2 r12 REG r12
							V16 in reg r12 is becoming dead  [000095]
							Live regs: 0000D0C8 {rbx rsi rdi r12 r14 r15} => 0000C0C8 {rbx rsi rdi r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V07 V16} => {V02 V03 V04 V05 V06 V07}
							GC regs: 000090C8 {rbx rsi rdi r12 r15} => 000080C8 {rbx rsi rdi r15}
							V17 in reg r12 is becoming live  [000105]
							Live regs: 0000C0C8 {rbx rsi rdi r14 r15} => 0000D0C8 {rbx rsi rdi r12 r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V07} => {V02 V03 V04 V05 V06 V07 V17}
							GC regs: 000080C8 {rbx rsi rdi r15} => 000090C8 {rbx rsi rdi r12 r15}
Generating: N353 (  1,  1) [000099] ------------        t99 =    LCL_VAR   ref    V17 tmp6         u:2 r12 (last use) REG r12 $1ab
                                                              /--*  t99    ref    
Generating: N355 (  1,  3) [000108] DA----------              *  STORE_LCL_VAR ref    V18 tmp7         d:2 r12 REG r12
							V17 in reg r12 is becoming dead  [000099]
							Live regs: 0000D0C8 {rbx rsi rdi r12 r14 r15} => 0000C0C8 {rbx rsi rdi r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V07 V17} => {V02 V03 V04 V05 V06 V07}
							GC regs: 000090C8 {rbx rsi rdi r12 r15} => 000080C8 {rbx rsi rdi r15}
							V18 in reg r12 is becoming live  [000108]
							Live regs: 0000C0C8 {rbx rsi rdi r14 r15} => 0000D0C8 {rbx rsi rdi r12 r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V07} => {V02 V03 V04 V05 V06 V07 V18}
							GC regs: 000080C8 {rbx rsi rdi r15} => 000090C8 {rbx rsi rdi r12 r15}
Added IP mapping: 0x0087 (G_M55048_IG05,ins#10,ofs#54)
Generating: N357 (???,???) [000641] ------------                 IL_OFFSET void   IL offset: 0x87 REG NA
Generating: N359 (  1,  1) [000100] ------------       t100 =    LCL_VAR   int    V04 loc2         u:2 r14 REG r14 $28c
Generating: N361 (  1,  1) [000101] -c----------       t101 =    CNS_INT   int    0 REG NA $40
                                                              /--*  t100   int    
                                                              +--*  t101   int    
Generating: N363 (  3,  3) [000102] J------N----              *  NE        void   REG NA $28f
IN0058:        test     r14d, r14d
Generating: N365 (  5,  5) [000103] ------------              *  JTRUE     void   REG NA
IN0059:        jne      L_M55048_BB05

Scope info: end block BB03, IL range [072..08B)
Scope info: open scopes =
   2 (V02 loc0) [000..153)
   6 (V06 loc4) [000..153)
   3 (V03 loc1) [000..153)
   4 (V04 loc2) [000..153)
   5 (V05 loc3) [000..153)

=============== Generating BB04 [08B..08F) -> BB06 (always), preds={BB03} succs={BB06} flags=0x00000000.21080020: i gcsafe bwd LIR 
BB04 IN (7)={V02     V06 V07 V18         V03 V04 V05} + ByrefExposed + GcHeap
     OUT(8)={V02 V19 V06         V20 V21 V03 V04 V05} + ByrefExposed + GcHeap

Recording Var Locations at start of BB04
  V02(rbx)  V07(rsi)  V18(r12)  V03(rdi)  V04(r14)  V05(r15)
Liveness not changing: 0000002080419001 {V02 V03 V04 V05 V06 V07 V18}
							Live regs: 00000000 {} => 0000D0C8 {rbx rsi rdi r12 r14 r15}
							GC regs: 00000000 {} => 000090C8 {rbx rsi rdi r12 r15}
							Byref regs: (unchanged) 00000000 {}

      L_M55048_BB04:

      G_M55048_IG05:        ; offs=000176H, funclet=00, bbWeight=4   
Label: IG06, GCvars=0000000000001000 {V06}, gcrefRegs=000090C8 {rbx rsi rdi r12 r15}, byrefRegs=00000000 {}

Scope info: begin block BB04, IL range [08B..08F)
Scope info: open scopes =
   2 (V02 loc0) [000..153)
   6 (V06 loc4) [000..153)
   3 (V03 loc1) [000..153)
   4 (V04 loc2) [000..153)
   5 (V05 loc3) [000..153)
   7 (V07 loc5) [000..153)
Generating: N369 (  1,  1) [000110] ------------       t110 =    LCL_VAR   ref    V18 tmp7         u:2 r12 (last use) REG r12 $1ab
                                                              /--*  t110   ref    
Generating: N371 (  1,  3) [000203] DA----------              *  STORE_LCL_VAR ref    V19 tmp8         d:4 r12 REG r12
							V18 in reg r12 is becoming dead  [000110]
							Live regs: 0000D0C8 {rbx rsi rdi r12 r14 r15} => 0000C0C8 {rbx rsi rdi r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V07 V18} => {V02 V03 V04 V05 V06 V07}
							GC regs: 000090C8 {rbx rsi rdi r12 r15} => 000080C8 {rbx rsi rdi r15}
							V19 in reg r12 is becoming live  [000203]
							Live regs: 0000C0C8 {rbx rsi rdi r14 r15} => 0000D0C8 {rbx rsi rdi r12 r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V07} => {V02 V03 V04 V05 V06 V07 V19}
							GC regs: 000080C8 {rbx rsi rdi r15} => 000090C8 {rbx rsi rdi r12 r15}
Generating: N373 (  1,  1) [000111] ------------       t111 =    LCL_VAR   ref    V19 tmp8         u:4 r12 REG r12 $1ab
                                                              /--*  t111   ref    
Generating: N375 (  1,  3) [000206] DA----------              *  STORE_LCL_VAR ref    V20 tmp9         d:4 r13 REG r13
IN005a:        mov      r13, r12
							V20 in reg r13 is becoming live  [000206]
							Live regs: 0000D0C8 {rbx rsi rdi r12 r14 r15} => 0000F0C8 {rbx rsi rdi r12 r13 r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V07 V19} => {V02 V03 V04 V05 V06 V07 V19 V20}
							GC regs: 000090C8 {rbx rsi rdi r12 r15} => 0000B0C8 {rbx rsi rdi r12 r13 r15}
Generating: N377 (  1,  1) [000201] ------------       t201 =    LCL_VAR   ref    V07 loc5         u:2 rsi (last use) REG rsi $442
                                                              /--*  t201   ref    
Generating: N379 (  1,  3) [000209] DA----------              *  STORE_LCL_VAR ref    V21 tmp10        d:4 rdx REG rdx
							V07 in reg rsi is becoming dead  [000201]
							Live regs: 0000F0C8 {rbx rsi rdi r12 r13 r14 r15} => 0000F088 {rbx rdi r12 r13 r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V07 V19 V20} => {V02 V03 V04 V05 V06 V19 V20}
							GC regs: 0000B0C8 {rbx rsi rdi r12 r13 r15} => 0000B088 {rbx rdi r12 r13 r15}
IN005b:        mov      rdx, rsi
							V21 in reg rdx is becoming live  [000209]
							Live regs: 0000F088 {rbx rdi r12 r13 r14 r15} => 0000F08C {rdx rbx rdi r12 r13 r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V19 V20} => {V02 V03 V04 V05 V06 V19 V20 V21}
							GC regs: 0000B088 {rbx rdi r12 r13 r15} => 0000B08C {rdx rbx rdi r12 r13 r15}

Scope info: end block BB04, IL range [08B..08F)
Scope info: open scopes =
   2 (V02 loc0) [000..153)
   6 (V06 loc4) [000..153)
   3 (V03 loc1) [000..153)
   4 (V04 loc2) [000..153)
   5 (V05 loc3) [000..153)
IN005c:        jmp      L_M55048_BB06

=============== Generating BB05 [08F..09C), preds={BB03} succs={BB06} flags=0x00000002.210b0020: i label target hascall gcsafe bwd LIR 
BB05 IN (7)={V02     V06 V07 V18         V03 V04 V05} + ByrefExposed + GcHeap
     OUT(8)={V02 V19 V06         V20 V21 V03 V04 V05} + ByrefExposed + GcHeap

Recording Var Locations at start of BB05
  V02(rbx)  V07(rsi)  V18(r12)  V03(rdi)  V04(r14)  V05(r15)
Change life 0000002080461021 {V02 V03 V04 V05 V06 V19 V20 V21} -> 0000002080419001 {V02 V03 V04 V05 V06 V07 V18}
							V19 in reg r12 is becoming dead  [------]
							Live regs: (unchanged) 00000000 {}
							V20 in reg r13 is becoming dead  [------]
							Live regs: (unchanged) 00000000 {}
							V21 in reg rdx is becoming dead  [------]
							Live regs: (unchanged) 00000000 {}
							V07 in reg rsi is becoming live  [------]
							Live regs: 00000000 {} => 00000040 {rsi}
							V18 in reg r12 is becoming live  [------]
							Live regs: 00000040 {rsi} => 00001040 {rsi r12}
							Live regs: 00001040 {rsi r12} => 0000D0C8 {rbx rsi rdi r12 r14 r15}
							GC regs: 00001040 {rsi r12} => 000090C8 {rbx rsi rdi r12 r15}
							Byref regs: (unchanged) 00000000 {}

      L_M55048_BB05:

      G_M55048_IG06:        ; offs=0001B5H, funclet=00, bbWeight=2   
Label: IG07, GCvars=0000000000001000 {V06}, gcrefRegs=000090C8 {rbx rsi rdi r12 r15}, byrefRegs=00000000 {}

Scope info: begin block BB05, IL range [08F..09C)
Scope info: open scopes =
   2 (V02 loc0) [000..153)
   6 (V06 loc4) [000..153)
   3 (V03 loc1) [000..153)
   4 (V04 loc2) [000..153)
   5 (V05 loc3) [000..153)
   7 (V07 loc5) [000..153)
Generating: N383 (  1,  1) [000112] ------------       t112 =    LCL_VAR   ref    V18 tmp7         u:2 r12 (last use) REG r12 $1ab
                                                              /--*  t112   ref    
Generating: N385 (  1,  3) [000119] DA----------              *  STORE_LCL_VAR ref    V19 tmp8         d:3 r12 REG r12
							V18 in reg r12 is becoming dead  [000112]
							Live regs: 0000D0C8 {rbx rsi rdi r12 r14 r15} => 0000C0C8 {rbx rsi rdi r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V07 V18} => {V02 V03 V04 V05 V06 V07}
							GC regs: 000090C8 {rbx rsi rdi r12 r15} => 000080C8 {rbx rsi rdi r15}
							V19 in reg r12 is becoming live  [000119]
							Live regs: 0000C0C8 {rbx rsi rdi r14 r15} => 0000D0C8 {rbx rsi rdi r12 r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V07} => {V02 V03 V04 V05 V06 V07 V19}
							GC regs: 000080C8 {rbx rsi rdi r15} => 000090C8 {rbx rsi rdi r12 r15}
Generating: N387 (  1,  1) [000113] ------------       t113 =    LCL_VAR   ref    V19 tmp8         u:3 r12 REG r12 $1ab
                                                              /--*  t113   ref    
Generating: N389 (  1,  3) [000122] DA----------              *  STORE_LCL_VAR ref    V20 tmp9         d:3 r13 REG r13
IN005d:        mov      r13, r12
							V20 in reg r13 is becoming live  [000122]
							Live regs: 0000D0C8 {rbx rsi rdi r12 r14 r15} => 0000F0C8 {rbx rsi rdi r12 r13 r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V07 V19} => {V02 V03 V04 V05 V06 V07 V19 V20}
							GC regs: 000090C8 {rbx rsi rdi r12 r15} => 0000B0C8 {rbx rsi rdi r12 r13 r15}
Generating: N391 (  2, 10) [000504] H-----------       t504 =    CNS_INT(h) long   0xD1FFAB1E " " REG rdx $119
IN005e:        mov      rdx, 0xD1FFAB1E
                                                              /--*  t504   long   
Generating: N393 (  4, 12) [000505] #---G-------       t505 = *  IND       ref    REG rdx $1ae
IN005f:        mov      rdx, gword ptr [rdx]
							GC regs: 0000B0C8 {rbx rsi rdi r12 r13 r15} => 0000B0CC {rdx rbx rsi rdi r12 r13 r15}
                                                              /--*  t505   ref    
Generating: N395 (???,???) [000703] ----G-------       t703 = *  PUTARG_REG ref    REG rdx
							GC regs: 0000B0CC {rdx rbx rsi rdi r12 r13 r15} => 0000B0C8 {rbx rsi rdi r12 r13 r15}
							GC regs: 0000B0C8 {rbx rsi rdi r12 r13 r15} => 0000B0CC {rdx rbx rsi rdi r12 r13 r15}
Generating: N397 (  1,  1) [000114] ------------       t114 =    LCL_VAR   ref    V05 loc3         u:2 r15 REG r15 <l:$1a8, c:$161>
                                                              /--*  t114   ref    
Generating: N399 (???,???) [000704] ------------       t704 = *  PUTARG_REG ref    REG rcx
IN0060:        mov      rcx, r15
							GC regs: 0000B0CC {rdx rbx rsi rdi r12 r13 r15} => 0000B0CE {rcx rdx rbx rsi rdi r12 r13 r15}
Generating: N401 (  1,  1) [000116] ------------       t116 =    LCL_VAR   ref    V07 loc5         u:2 rsi (last use) REG rsi $442
                                                              /--*  t116   ref    
Generating: N403 (???,???) [000705] ------------       t705 = *  PUTARG_REG ref    REG r8
							V07 in reg rsi is becoming dead  [000116]
							Live regs: 0000F0C8 {rbx rsi rdi r12 r13 r14 r15} => 0000F088 {rbx rdi r12 r13 r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V07 V19 V20} => {V02 V03 V04 V05 V06 V19 V20}
							GC regs: 0000B0CE {rcx rdx rbx rsi rdi r12 r13 r15} => 0000B08E {rcx rdx rbx rdi r12 r13 r15}
IN0061:        mov      r8, rsi
							GC regs: 0000B08E {rcx rdx rbx rdi r12 r13 r15} => 0000B18E {rcx rdx rbx rdi r8 r12 r13 r15}
                                                              /--*  t703   ref    arg1 in rdx
                                                              +--*  t704   ref    arg0 in rcx
                                                              +--*  t705   ref    arg2 in r8
Generating: N405 ( 20, 22) [000117] --CXG-------       t117 = *  CALL      ref    System.String.Concat REG rax $44e
							GC regs: 0000B18E {rcx rdx rbx rdi r8 r12 r13 r15} => 0000B18A {rcx rbx rdi r8 r12 r13 r15}
							GC regs: 0000B18A {rcx rbx rdi r8 r12 r13 r15} => 0000B188 {rbx rdi r8 r12 r13 r15}
							GC regs: 0000B188 {rbx rdi r8 r12 r13 r15} => 0000B088 {rbx rdi r12 r13 r15}
							Call: GCvars=0000000000001000 {V06}, gcrefRegs=0000B088 {rbx rdi r12 r13 r15}, byrefRegs=00000000 {}
IN0062:        call     System.String:Concat(System.String,System.String,System.String):System.String
							GC regs: 0000B088 {rbx rdi r12 r13 r15} => 0000B089 {rax rbx rdi r12 r13 r15}
                                                              /--*  t117   ref    
Generating: N407 ( 20, 22) [000125] DA-XG-------              *  STORE_LCL_VAR ref    V21 tmp10        d:3 rdx REG rdx
							GC regs: 0000B089 {rax rbx rdi r12 r13 r15} => 0000B088 {rbx rdi r12 r13 r15}
IN0063:        mov      rdx, rax
							V21 in reg rdx is becoming live  [000125]
							Live regs: 0000F088 {rbx rdi r12 r13 r14 r15} => 0000F08C {rdx rbx rdi r12 r13 r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V19 V20} => {V02 V03 V04 V05 V06 V19 V20 V21}
							GC regs: 0000B088 {rbx rdi r12 r13 r15} => 0000B08C {rdx rbx rdi r12 r13 r15}

Scope info: end block BB05, IL range [08F..09C)
Scope info: open scopes =
   2 (V02 loc0) [000..153)
   6 (V06 loc4) [000..153)
   3 (V03 loc1) [000..153)
   4 (V04 loc2) [000..153)
   5 (V05 loc3) [000..153)

=============== Generating BB06 [09C..0BB) -> BB09 (cond), preds={BB04,BB05} succs={BB07,BB09} flags=0x00000000.210b0020: i label target gcsafe bwd LIR 
BB06 IN (8)={V02 V19     V06 V20 V21         V03 V04 V05} + ByrefExposed + GcHeap
     OUT(8)={V02     V26 V06         V24 V25 V03 V04 V05} + ByrefExposed + GcHeap

Recording Var Locations at start of BB06
  V02(rbx)  V19(r12)  V20(r13)  V21(rdx)  V03(rdi)  V04(r14)  V05(r15)
Liveness not changing: 0000002080461021 {V02 V03 V04 V05 V06 V19 V20 V21}
							Live regs: 00000000 {} => 0000F08C {rdx rbx rdi r12 r13 r14 r15}
							GC regs: 00000000 {} => 0000B08C {rdx rbx rdi r12 r13 r15}
							Byref regs: (unchanged) 00000000 {}

      L_M55048_BB06:

      G_M55048_IG07:        ; offs=0001C0H, funclet=00, bbWeight=2   
Label: IG08, GCvars=0000000000001000 {V06}, gcrefRegs=0000B08C {rdx rbx rdi r12 r13 r15}, byrefRegs=00000000 {}

Scope info: begin block BB06, IL range [09C..0BB)
Scope info: open scopes =
   2 (V02 loc0) [000..153)
   6 (V06 loc4) [000..153)
   3 (V03 loc1) [000..153)
   4 (V04 loc2) [000..153)
   5 (V05 loc3) [000..153)
Generating: N411 (  1,  1) [000128] ------------       t128 =    LCL_VAR   ref    V20 tmp9         u:2 r13 (last use) REG r13 $1ab
                                                              /--*  t128   ref    
Generating: N413 (  2,  2) [000510] ------------       t510 = *  LEA(b+16) byref  REG rcx
							V20 in reg r13 is becoming dead  [000128]
							Live regs: 0000F08C {rdx rbx rdi r12 r13 r14 r15} => 0000D08C {rdx rbx rdi r12 r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V19 V20 V21} => {V02 V03 V04 V05 V06 V19 V21}
							GC regs: 0000B08C {rdx rbx rdi r12 r13 r15} => 0000908C {rdx rbx rdi r12 r15}
IN0064:        lea      rcx, bword ptr [r13+16]
							Byref regs: 00000000 {} => 00000002 {rcx}
Generating: N415 (  1,  1) [000129] ------------       t129 =    LCL_VAR   ref    V21 tmp10        u:2 rdx (last use) REG rdx $251
                                                              /--*  t510   byref  
                                                              +--*  t129   ref    
Generating: N417 (???,???) [000642] -A--GO------              *  STOREIND  ref    REG NA
							Byref regs: 00000002 {rcx} => 00000000 {}
							V21 in reg rdx is becoming dead  [000129]
							Live regs: 0000D08C {rdx rbx rdi r12 r14 r15} => 0000D088 {rbx rdi r12 r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V19 V21} => {V02 V03 V04 V05 V06 V19}
							GC regs: 0000908C {rdx rbx rdi r12 r15} => 00009088 {rbx rdi r12 r15}
NoGC Call: savedSet=0000F0E8 {rbx rbp rsi rdi r12 r13 r14 r15}
							Call: GCvars=0000000000001000 {V06}, gcrefRegs=00009088 {rbx rdi r12 r15}, byrefRegs=00000000 {}
IN0065:        call     CORINFO_HELP_ASSIGN_REF
Added IP mapping: 0x00A1 (G_M55048_IG08,ins#2,ofs#9) label
Generating: N419 (???,???) [000643] ------------                 IL_OFFSET void   IL offset: 0xa1 REG NA
Generating: N421 (  1,  1) [000131] ------------       t131 =    LCL_VAR   ref    V19 tmp8         u:2 r12 REG r12 $1ab
                                                              /--*  t131   ref    
Generating: N423 (  2,  5) [000512] -c----------       t512 = *  LEA(b+130) byref  REG NA
Generating: N425 (  1,  1) [000353] -c----------       t353 =    CNS_INT   int    0 REG NA $40
                                                              /--*  t512   byref  
                                                              +--*  t353   int    
Generating: N427 (???,???) [000644] -A--GO------              *  STOREIND  bool   REG NA
IN0066:        mov      byte  ptr [r12+130], 0
Added IP mapping: 0x00AA STACK_EMPTY (G_M55048_IG08,ins#3,ofs#18)
Generating: N429 (???,???) [000645] ------------                 IL_OFFSET void   IL offset: 0xaa REG NA
Generating: N431 (  1,  1) [000137] ------------       t137 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                              /--*  t137   ref    
Generating: N433 (  2,  2) [000514] -c----------       t514 = *  LEA(b+8)  byref  REG NA
                                                              /--*  t514   byref  
Generating: N435 (  4,  4) [000138] n---GO------       t138 = *  IND       ref    REG rsi <l:$1bc, c:$1bb>
IN0067:        mov      rsi, gword ptr [rbx+8]
							GC regs: 00009088 {rbx rdi r12 r15} => 000090C8 {rbx rsi rdi r12 r15}
                                                              /--*  t138   ref    
Generating: N437 (  4,  4) [000145] DA--GO------              *  STORE_LCL_VAR ref    V23 tmp12        d:2 rsi REG rsi
							GC regs: 000090C8 {rbx rsi rdi r12 r15} => 00009088 {rbx rdi r12 r15}
							V23 in reg rsi is becoming live  [000145]
							Live regs: 0000D088 {rbx rdi r12 r14 r15} => 0000D0C8 {rbx rsi rdi r12 r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V19} => {V02 V03 V04 V05 V06 V19 V23}
							GC regs: 00009088 {rbx rdi r12 r15} => 000090C8 {rbx rsi rdi r12 r15}
genIPmappingAdd: ignoring duplicate IL offset 0xaa
Generating: N439 (???,???) [000646] ------------                 IL_OFFSET void   IL offset: 0xaa REG NA
Generating: N441 (  1,  1) [000140] ------------       t140 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                              /--*  t140   ref    
Generating: N443 (  2,  2) [000516] -c----------       t516 = *  LEA(b+48) byref  REG NA
                                                              /--*  t516   byref  
Generating: N445 (  4,  4) [000141] n---GO------       t141 = *  IND       ref    REG r13 <l:$542, c:$541>
IN0068:        mov      r13, gword ptr [rbx+48]
							GC regs: 000090C8 {rbx rsi rdi r12 r15} => 0000B0C8 {rbx rsi rdi r12 r13 r15}
                                                              /--*  t141   ref    
Generating: N447 (  4,  4) [000143] DA--GO------              *  STORE_LCL_VAR ref    V22 tmp11        d:2 r13 REG r13
							GC regs: 0000B0C8 {rbx rsi rdi r12 r13 r15} => 000090C8 {rbx rsi rdi r12 r15}
							V22 in reg r13 is becoming live  [000143]
							Live regs: 0000D0C8 {rbx rsi rdi r12 r14 r15} => 0000F0C8 {rbx rsi rdi r12 r13 r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V19 V23} => {V02 V03 V04 V05 V06 V19 V22 V23}
							GC regs: 000090C8 {rbx rsi rdi r12 r15} => 0000B0C8 {rbx rsi rdi r12 r13 r15}
Generating: N449 (  1,  1) [000146] ------------       t146 =    LCL_VAR   ref    V23 tmp12        u:2 rsi (last use) REG rsi <l:$1b9, c:$454>
                                                              /--*  t146   ref    
Generating: N451 (  1,  3) [000153] DA----------              *  STORE_LCL_VAR ref    V24 tmp13        d:2 rsi REG rsi
							V23 in reg rsi is becoming dead  [000146]
							Live regs: 0000F0C8 {rbx rsi rdi r12 r13 r14 r15} => 0000F088 {rbx rdi r12 r13 r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V19 V22 V23} => {V02 V03 V04 V05 V06 V19 V22}
							GC regs: 0000B0C8 {rbx rsi rdi r12 r13 r15} => 0000B088 {rbx rdi r12 r13 r15}
							V24 in reg rsi is becoming live  [000153]
							Live regs: 0000F088 {rbx rdi r12 r13 r14 r15} => 0000F0C8 {rbx rsi rdi r12 r13 r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V19 V22} => {V02 V03 V04 V05 V06 V19 V22 V24}
							GC regs: 0000B088 {rbx rdi r12 r13 r15} => 0000B0C8 {rbx rsi rdi r12 r13 r15}
Generating: N453 (  1,  1) [000139] ------------       t139 =    LCL_VAR   ref    V19 tmp8         u:2 r12 (last use) REG r12 $1ab
                                                              /--*  t139   ref    
Generating: N455 (  1,  3) [000156] DA----------              *  STORE_LCL_VAR ref    V25 tmp14        d:2 r12 REG r12
							V19 in reg r12 is becoming dead  [000139]
							Live regs: 0000F0C8 {rbx rsi rdi r12 r13 r14 r15} => 0000E0C8 {rbx rsi rdi r13 r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V19 V22 V24} => {V02 V03 V04 V05 V06 V22 V24}
							GC regs: 0000B0C8 {rbx rsi rdi r12 r13 r15} => 0000A0C8 {rbx rsi rdi r13 r15}
							V25 in reg r12 is becoming live  [000156]
							Live regs: 0000E0C8 {rbx rsi rdi r13 r14 r15} => 0000F0C8 {rbx rsi rdi r12 r13 r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V22 V24} => {V02 V03 V04 V05 V06 V22 V24 V25}
							GC regs: 0000A0C8 {rbx rsi rdi r13 r15} => 0000B0C8 {rbx rsi rdi r12 r13 r15}
Generating: N457 (  1,  1) [000147] ------------       t147 =    LCL_VAR   ref    V22 tmp11        u:2 r13 (last use) REG r13 <l:$540, c:$456>
                                                              /--*  t147   ref    
Generating: N459 (  1,  3) [000159] DA----------              *  STORE_LCL_VAR ref    V26 tmp15        d:2 r13 REG r13
							V22 in reg r13 is becoming dead  [000147]
							Live regs: 0000F0C8 {rbx rsi rdi r12 r13 r14 r15} => 0000D0C8 {rbx rsi rdi r12 r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V22 V24 V25} => {V02 V03 V04 V05 V06 V24 V25}
							GC regs: 0000B0C8 {rbx rsi rdi r12 r13 r15} => 000090C8 {rbx rsi rdi r12 r15}
							V26 in reg r13 is becoming live  [000159]
							Live regs: 0000D0C8 {rbx rsi rdi r12 r14 r15} => 0000F0C8 {rbx rsi rdi r12 r13 r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V24 V25} => {V02 V03 V04 V05 V06 V24 V25 V26}
							GC regs: 000090C8 {rbx rsi rdi r12 r15} => 0000B0C8 {rbx rsi rdi r12 r13 r15}
Generating: N461 (  1,  1) [000148] ------------       t148 =    LCL_VAR   ref    V26 tmp15        u:2 r13 REG r13 <l:$540, c:$456>
Generating: N463 (  1,  1) [000149] -c----------       t149 =    CNS_INT   ref    null REG NA $VN.Null
                                                              /--*  t148   ref    
                                                              +--*  t149   ref    
Generating: N465 (  3,  3) [000150] J------N----              *  NE        void   REG NA <l:$291, c:$290>
IN0069:        test     r13, r13
Generating: N467 (  5,  5) [000151] ------------              *  JTRUE     void   REG NA
IN006a:        jne      L_M55048_BB09

Scope info: end block BB06, IL range [09C..0BB)
Scope info: open scopes =
   2 (V02 loc0) [000..153)
   6 (V06 loc4) [000..153)
   3 (V03 loc1) [000..153)
   4 (V04 loc2) [000..153)
   5 (V05 loc3) [000..153)

=============== Generating BB07 [000..0D3), preds={BB06} succs={BB09} flags=0x00000002.21480020: i hascall gcsafe newobj bwd LIR 
BB07 IN (7)={V02     V06 V24 V25 V03 V04 V05} + ByrefExposed + GcHeap
     OUT(8)={V02 V26 V06 V24 V25 V03 V04 V05} + ByrefExposed + GcHeap

Recording Var Locations at start of BB07
  V02(rbx)  V24(rsi)  V25(r12)  V03(rdi)  V04(r14)  V05(r15)
Change life 0000002080701201 {V02 V03 V04 V05 V06 V24 V25 V26} -> 0000002080701001 {V02 V03 V04 V05 V06 V24 V25}
							V26 in reg r13 is becoming dead  [------]
							Live regs: (unchanged) 00000000 {}
							Live regs: 00000000 {} => 0000D0C8 {rbx rsi rdi r12 r14 r15}
							GC regs: 00000000 {} => 000090C8 {rbx rsi rdi r12 r15}
							Byref regs: (unchanged) 00000000 {}

      L_M55048_BB07:

      G_M55048_IG08:        ; offs=0001DEH, funclet=00, bbWeight=4   
Label: IG09, GCvars=0000000000001000 {V06}, gcrefRegs=000090C8 {rbx rsi rdi r12 r15}, byrefRegs=00000000 {}

Scope info: begin block BB07, IL range [000..0D3)
Scope info: open scopes =
   2 (V02 loc0) [000..153)
   6 (V06 loc4) [000..153)
   3 (V03 loc1) [000..153)
   4 (V04 loc2) [000..153)
   5 (V05 loc3) [000..153)
Generating: N471 (  2, 10) [000181] H-----------       t181 =    CNS_INT(h) long   0xd1ffab1e token REG rcx $11e
IN006b:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t181   long   
Generating: N473 (???,???) [000706] ------------       t706 = *  PUTARG_REG long   REG rcx
                                                              /--*  t706   long   arg0 in rcx
Generating: N475 ( 16, 16) [000182] --C---------       t182 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $543
							Call: GCvars=0000000000001000 {V06}, gcrefRegs=000090C8 {rbx rsi rdi r12 r15}, byrefRegs=00000000 {}
IN006c:        call     CORINFO_HELP_NEWSFAST
							GC regs: 000090C8 {rbx rsi rdi r12 r15} => 000090C9 {rax rbx rsi rdi r12 r15}
                                                              /--*  t182   ref    
Generating: N477 ( 16, 16) [000184] DA----------              *  STORE_LCL_VAR ref    V28 tmp17        d:2 r13 REG r13
							GC regs: 000090C9 {rax rbx rsi rdi r12 r15} => 000090C8 {rbx rsi rdi r12 r15}
IN006d:        mov      r13, rax
							V28 in reg r13 is becoming live  [000184]
							Live regs: 0000D0C8 {rbx rsi rdi r12 r14 r15} => 0000F0C8 {rbx rsi rdi r12 r13 r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V24 V25} => {V02 V03 V04 V05 V06 V24 V25 V28}
							GC regs: 000090C8 {rbx rsi rdi r12 r15} => 0000B0C8 {rbx rsi rdi r12 r13 r15}
Generating: N479 (  1,  1) [000185] ------------       t185 =    LCL_VAR   ref    V28 tmp17        u:2 r13 REG r13 $543
                                                              /--*  t185   ref    
Generating: N481 (  2,  2) [000519] ------------       t519 = *  LEA(b+8)  byref  REG rcx
IN006e:        lea      rcx, bword ptr [r13+8]
							Byref regs: 00000000 {} => 00000002 {rcx}
Generating: N483 (  1,  1) [000360] ------------       t360 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                              /--*  t519   byref  
                                                              +--*  t360   ref    
Generating: N485 (???,???) [000647] -A--GO------              *  STOREIND  ref    REG NA
							Byref regs: 00000002 {rcx} => 00000000 {}
IN006f:        mov      rdx, rbx
NoGC Call: savedSet=0000F0E8 {rbx rbp rsi rdi r12 r13 r14 r15}
							Call: GCvars=0000000000001000 {V06}, gcrefRegs=0000B0C8 {rbx rsi rdi r12 r13 r15}, byrefRegs=00000000 {}
IN0070:        call     CORINFO_HELP_ASSIGN_REF
Generating: N487 (  1,  1) [000363] ------------       t363 =    LCL_VAR   ref    V28 tmp17        u:2 r13 REG r13 $543
                                                              /--*  t363   ref    
Generating: N489 (  2,  2) [000521] -c----------       t521 = *  LEA(b+24) byref  REG NA
Generating: N491 (  2, 10) [000180] H-----------       t180 =    CNS_INT(h) long   0xd1ffab1e ftn REG rdx $120
IN0071:        mov      rdx, 0xD1FFAB1E
                                                              /--*  t521   byref  
                                                              +--*  t180   long   
Generating: N493 (???,???) [000648] -A--GO------              *  STOREIND  long   REG NA
IN0072:        mov      qword ptr [r13+24], rdx
Generating: N495 (  1,  1) [000178] ------------       t178 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                              /--*  t178   ref    
Generating: N497 (  2,  2) [000523] ------------       t523 = *  LEA(b+48) byref  REG rcx
IN0073:        lea      rcx, bword ptr [rbx+48]
							Byref regs: 00000000 {} => 00000002 {rcx}
Generating: N499 (  1,  1) [000187] ------------       t187 =    LCL_VAR   ref    V28 tmp17        u:2 r13 REG r13 $543
                                                              /--*  t523   byref  
                                                              +--*  t187   ref    
Generating: N501 (???,???) [000649] -A--GO------              *  STOREIND  ref    REG NA
							Byref regs: 00000002 {rcx} => 00000000 {}
IN0074:        mov      rdx, r13
NoGC Call: savedSet=0000F0E8 {rbx rbp rsi rdi r12 r13 r14 r15}
							Call: GCvars=0000000000001000 {V06}, gcrefRegs=0000B0C8 {rbx rsi rdi r12 r13 r15}, byrefRegs=00000000 {}
IN0075:        call     CORINFO_HELP_ASSIGN_REF
Generating: N503 (  1,  1) [000193] ------------       t193 =    LCL_VAR   ref    V28 tmp17        u:2 r13 (last use) REG r13 $543
                                                              /--*  t193   ref    
Generating: N505 (  1,  3) [000199] DA----------              *  STORE_LCL_VAR ref    V26 tmp15        d:4 r13 REG r13
							V28 in reg r13 is becoming dead  [000193]
							Live regs: 0000F0C8 {rbx rsi rdi r12 r13 r14 r15} => 0000D0C8 {rbx rsi rdi r12 r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V24 V25 V28} => {V02 V03 V04 V05 V06 V24 V25}
							GC regs: 0000B0C8 {rbx rsi rdi r12 r13 r15} => 000090C8 {rbx rsi rdi r12 r15}
							V26 in reg r13 is becoming live  [000199]
							Live regs: 0000D0C8 {rbx rsi rdi r12 r14 r15} => 0000F0C8 {rbx rsi rdi r12 r13 r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V24 V25} => {V02 V03 V04 V05 V06 V24 V25 V26}
							GC regs: 000090C8 {rbx rsi rdi r12 r15} => 0000B0C8 {rbx rsi rdi r12 r13 r15}

Scope info: end block BB07, IL range [000..0D3)
Scope info: open scopes =
   2 (V02 loc0) [000..153)
   6 (V06 loc4) [000..153)
   3 (V03 loc1) [000..153)
   4 (V04 loc2) [000..153)
   5 (V05 loc3) [000..153)

=============== Generating BB09 [000..0F2) -> BB03 (cond), preds={BB06,BB07} succs={BB13,BB03} flags=0x00000002.214b0020: i label target hascall gcsafe newobj bwd LIR 
BB09 IN (8)={V02 V26 V06 V24 V25 V03 V04 V05} + ByrefExposed + GcHeap
     OUT(5)={V02     V06         V03 V04 V05} + ByrefExposed + GcHeap

Recording Var Locations at start of BB09
  V02(rbx)  V26(r13)  V24(rsi)  V25(r12)  V03(rdi)  V04(r14)  V05(r15)
Liveness not changing: 0000002080701201 {V02 V03 V04 V05 V06 V24 V25 V26}
							Live regs: 00000000 {} => 0000F0C8 {rbx rsi rdi r12 r13 r14 r15}
							GC regs: 00000000 {} => 0000B0C8 {rbx rsi rdi r12 r13 r15}
							Byref regs: (unchanged) 00000000 {}

      L_M55048_BB09:

      G_M55048_IG09:        ; offs=000201H, funclet=00, bbWeight=2   
Label: IG10, GCvars=0000000000001000 {V06}, gcrefRegs=0000B0C8 {rbx rsi rdi r12 r13 r15}, byrefRegs=00000000 {}

Scope info: begin block BB09, IL range [000..0F2)
Scope info: open scopes =
   2 (V02 loc0) [000..153)
   6 (V06 loc4) [000..153)
   3 (V03 loc1) [000..153)
   4 (V04 loc2) [000..153)
   5 (V05 loc3) [000..153)
Generating: N509 (  2, 10) [000169] H-----------       t169 =    CNS_INT(h) long   0xd1ffab1e token REG rcx $123
IN0076:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t169   long   
Generating: N511 (???,???) [000707] ------------       t707 = *  PUTARG_REG long   REG rcx
                                                              /--*  t707   long   arg0 in rcx
Generating: N513 ( 16, 16) [000170] --C---------       t170 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $54b
							Call: GCvars=0000000000001000 {V06}, gcrefRegs=0000B0C8 {rbx rsi rdi r12 r13 r15}, byrefRegs=00000000 {}
IN0077:        call     CORINFO_HELP_NEWSFAST
							GC regs: 0000B0C8 {rbx rsi rdi r12 r13 r15} => 0000B0C9 {rax rbx rsi rdi r12 r13 r15}
                                                              /--*  t170   ref    
Generating: N515 ( 16, 16) [000172] DA----------              *  STORE_LCL_VAR ref    V27 tmp16        d:2 rax REG rax
							GC regs: 0000B0C9 {rax rbx rsi rdi r12 r13 r15} => 0000B0C8 {rbx rsi rdi r12 r13 r15}
							V27 in reg rax is becoming live  [000172]
							Live regs: 0000F0C8 {rbx rsi rdi r12 r13 r14 r15} => 0000F0C9 {rax rbx rsi rdi r12 r13 r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V24 V25 V26} => {V02 V03 V04 V05 V06 V24 V25 V26 V27}
							GC regs: 0000B0C8 {rbx rsi rdi r12 r13 r15} => 0000B0C9 {rax rbx rsi rdi r12 r13 r15}
Generating: N517 (  1,  1) [000173] -----------Z       t173 =    LCL_VAR   ref    V27 tmp16        u:2 rax REG rax $54b
                                                              /--*  t173   ref    
Generating: N519 (  2,  2) [000526] ------------       t526 = *  LEA(b+8)  byref  REG rcx
IN0078:        mov      gword ptr [V27 rbp-48H], rax
							V27 in reg rax is becoming dead  [000173]
							Live regs: 0000F0C9 {rax rbx rsi rdi r12 r13 r14 r15} => 0000F0C8 {rbx rsi rdi r12 r13 r14 r15}
							GC regs: 0000B0C9 {rax rbx rsi rdi r12 r13 r15} => 0000B0C8 {rbx rsi rdi r12 r13 r15}
							Var V27 becoming live
IN0079:        lea      rcx, bword ptr [rax+8]
							Byref regs: 00000000 {} => 00000002 {rcx}
Generating: N521 (  1,  1) [000372] ------------       t372 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                              /--*  t526   byref  
                                                              +--*  t372   ref    
Generating: N523 (???,???) [000650] -A--GO------              *  STOREIND  ref    REG NA
							Byref regs: 00000002 {rcx} => 00000000 {}
IN007a:        mov      rdx, rbx
NoGC Call: savedSet=0000F0E8 {rbx rbp rsi rdi r12 r13 r14 r15}
							Call: GCvars=0000000000001004 {V06 V27}, gcrefRegs=0000B0C8 {rbx rsi rdi r12 r13 r15}, byrefRegs=00000000 {}
IN007b:        call     CORINFO_HELP_ASSIGN_REF
Generating: N525 (  1,  1) [000375] -----------z       t375 =    LCL_VAR   ref    V27 tmp16        u:2 r8 REG r8 $54b
                                                              /--*  t375   ref    
Generating: N527 (  2,  2) [000528] -c----------       t528 = *  LEA(b+24) byref  REG NA
Generating: N529 (  2, 10) [000168] H-----------       t168 =    CNS_INT(h) long   0xd1ffab1e ftn REG rcx $125
IN007c:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t528   byref  
                                                              +--*  t168   long   
Generating: N531 (???,???) [000651] -A--GO------              *  STOREIND  long   REG NA
IN007d:        mov      r8, gword ptr [V27 rbp-48H]
							Removing V27 from gcVarPtrSetCur
							V27 in reg r8 is becoming live  [000375]
							Live regs: 0000F0C8 {rbx rsi rdi r12 r13 r14 r15} => 0000F1C8 {rbx rsi rdi r8 r12 r13 r14 r15}
							GC regs: 0000B0C8 {rbx rsi rdi r12 r13 r15} => 0000B1C8 {rbx rsi rdi r8 r12 r13 r15}
IN007e:        mov      qword ptr [r8+24], rcx
Added IP mapping: 0x00DF (G_M55048_IG10,ins#9,ofs#49) label
Generating: N533 (???,???) [000652] ------------                 IL_OFFSET void   IL offset: 0xdf REG NA
Generating: N535 (  1,  1) [000165] ------------       t165 =    LCL_VAR   ref    V25 tmp14        u:2 r12 (last use) REG r12 $1ab
                                                              /--*  t165   ref    
Generating: N537 (???,???) [000708] ------------       t708 = *  PUTARG_REG ref    REG rcx
							V25 in reg r12 is becoming dead  [000165]
							Live regs: 0000F1C8 {rbx rsi rdi r8 r12 r13 r14 r15} => 0000E1C8 {rbx rsi rdi r8 r13 r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V24 V25 V26 V27} => {V02 V03 V04 V05 V06 V24 V26 V27}
							GC regs: 0000B1C8 {rbx rsi rdi r8 r12 r13 r15} => 0000A1C8 {rbx rsi rdi r8 r13 r15}
IN007f:        mov      rcx, r12
							GC regs: 0000A1C8 {rbx rsi rdi r8 r13 r15} => 0000A1CA {rcx rbx rsi rdi r8 r13 r15}
Generating: N539 (  1,  1) [000166] ------------       t166 =    LCL_VAR   ref    V26 tmp15        u:3 r13 (last use) REG r13 $258
                                                              /--*  t166   ref    
Generating: N541 (???,???) [000709] ------------       t709 = *  PUTARG_REG ref    REG rdx
							V26 in reg r13 is becoming dead  [000166]
							Live regs: 0000E1C8 {rbx rsi rdi r8 r13 r14 r15} => 0000C1C8 {rbx rsi rdi r8 r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V24 V26 V27} => {V02 V03 V04 V05 V06 V24 V27}
							GC regs: 0000A1CA {rcx rbx rsi rdi r8 r13 r15} => 000081CA {rcx rbx rsi rdi r8 r15}
IN0080:        mov      rdx, r13
							GC regs: 000081CA {rcx rbx rsi rdi r8 r15} => 000081CE {rcx rdx rbx rsi rdi r8 r15}
Generating: N543 (  1,  1) [000175] ------------       t175 =    LCL_VAR   ref    V27 tmp16        u:2 r8 (last use) REG r8 $54b
                                                              /--*  t175   ref    
Generating: N545 (???,???) [000710] ------------       t710 = *  PUTARG_REG ref    REG r8
							V27 in reg r8 is becoming dead  [000175]
							Live regs: 0000C1C8 {rbx rsi rdi r8 r14 r15} => 0000C0C8 {rbx rsi rdi r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V24 V27} => {V02 V03 V04 V05 V06 V24}
							GC regs: 000081CE {rcx rdx rbx rsi rdi r8 r15} => 000080CE {rcx rdx rbx rsi rdi r15}
							GC regs: 000080CE {rcx rdx rbx rsi rdi r15} => 000081CE {rcx rdx rbx rsi rdi r8 r15}
                                                              /--*  t708   ref    arg0 in rcx
                                                              +--*  t709   ref    arg1 in rdx
                                                              +--*  t710   ref    arg2 in r8
Generating: N547 ( 17, 11) [000176] --CXG-------       t176 = *  CALL      ref    SolutionAnalyzer.IPC.CreateSession REG rax $464
							GC regs: 000081CE {rcx rdx rbx rsi rdi r8 r15} => 000081CC {rdx rbx rsi rdi r8 r15}
							GC regs: 000081CC {rdx rbx rsi rdi r8 r15} => 000081C8 {rbx rsi rdi r8 r15}
							GC regs: 000081C8 {rbx rsi rdi r8 r15} => 000080C8 {rbx rsi rdi r15}
							Call: GCvars=0000000000001000 {V06}, gcrefRegs=000080C8 {rbx rsi rdi r15}, byrefRegs=00000000 {}
IN0081:        call     SolutionAnalyzer.IPC:CreateSession(System.Diagnostics.ProcessStartInfo,System.Action`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.Action`1[[System.Diagnostics.Process, System.Diagnostics.Process, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a]]):System.Diagnostics.Process
							GC regs: 000080C8 {rbx rsi rdi r15} => 000080C9 {rax rbx rsi rdi r15}
                                                              /--*  t176   ref    
Generating: N549 ( 17, 11) [000533] DA-XG-----L-              *  STORE_LCL_VAR ref    V42 tmp31        d:2 rdx REG rdx
							GC regs: 000080C9 {rax rbx rsi rdi r15} => 000080C8 {rbx rsi rdi r15}
IN0082:        mov      rdx, rax
							V42 in reg rdx is becoming live  [000533]
							Live regs: 0000C0C8 {rbx rsi rdi r14 r15} => 0000C0CC {rdx rbx rsi rdi r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V24} => {V02 V03 V04 V05 V06 V24 V42}
							GC regs: 000080C8 {rbx rsi rdi r15} => 000080CC {rdx rbx rsi rdi r15}
Generating: N551 (  1,  1) [000534] ------------       t534 =    LCL_VAR   ref    V42 tmp31        u:2 rdx (last use) REG rdx $464
                                                              /--*  t534   ref    
Generating: N553 (???,???) [000711] ------------       t711 = *  PUTARG_REG ref    REG rdx
							V42 in reg rdx is becoming dead  [000534]
							Live regs: 0000C0CC {rdx rbx rsi rdi r14 r15} => 0000C0C8 {rbx rsi rdi r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V24 V42} => {V02 V03 V04 V05 V06 V24}
							GC regs: 000080CC {rdx rbx rsi rdi r15} => 000080C8 {rbx rsi rdi r15}
							GC regs: 000080C8 {rbx rsi rdi r15} => 000080CC {rdx rbx rsi rdi r15}
Generating: N555 (  1,  1) [000164] ------------       t164 =    LCL_VAR   ref    V24 tmp13        u:2 rsi (last use) REG rsi <l:$1b9, c:$454>
                                                              /--*  t164   ref    
Generating: N557 (???,???) [000712] ------------       t712 = *  PUTARG_REG ref    REG rcx
							V24 in reg rsi is becoming dead  [000164]
							Live regs: 0000C0C8 {rbx rsi rdi r14 r15} => 0000C088 {rbx rdi r14 r15}
							Live vars: {V02 V03 V04 V05 V06 V24} => {V02 V03 V04 V05 V06}
							GC regs: 000080CC {rdx rbx rsi rdi r15} => 0000808C {rdx rbx rdi r15}
IN0083:        mov      rcx, rsi
							GC regs: 0000808C {rdx rbx rdi r15} => 0000808E {rcx rdx rbx rdi r15}
                                                              /--*  t711   ref    arg1 in rdx
                                                              +--*  t712   ref    this in rcx
Generating: N559 ( 36, 21) [000177] --CXG-------              *  CALL nullcheck void   System.Collections.Generic.Queue`1[__Canon][System.__Canon].Enqueue REG NA $VN.Void
							GC regs: 0000808E {rcx rdx rbx rdi r15} => 0000808A {rcx rbx rdi r15}
							GC regs: 0000808A {rcx rbx rdi r15} => 00008088 {rbx rdi r15}
IN0084:        cmp      dword ptr [rcx], ecx
							Call: GCvars=0000000000001000 {V06}, gcrefRegs=00008088 {rbx rdi r15}, byrefRegs=00000000 {}
IN0085:        call     System.Collections.Generic.Queue`1[__Canon][System.__Canon]:Enqueue(System.__Canon):this
Added IP mapping: 0x00E9 STACK_EMPTY (G_M55048_IG10,ins#16,ofs#73)
Generating: N561 (???,???) [000653] ------------                 IL_OFFSET void   IL offset: 0xe9 REG NA
Generating: N563 (  1,  1) [000080] ------------        t80 =    LCL_VAR   ref    V06 loc4         u:2 rcx REG rcx $164
IN0086:        mov      rcx, gword ptr [V06 rbp-40H]
							GC regs: 00008088 {rbx rdi r15} => 0000808A {rcx rbx rdi r15}
                                                              /--*  t80    ref    
Generating: N565 (???,???) [000713] ------------       t713 = *  PUTARG_REG ref    REG rcx
							GC regs: 0000808A {rcx rbx rdi r15} => 00008088 {rbx rdi r15}
							GC regs: 00008088 {rbx rdi r15} => 0000808A {rcx rbx rdi r15}
Generating: N567 (  2, 10) [000536] H-----------       t536 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $115
IN0087:        mov      r11, 0xD1FFAB1E
                                                              /--*  t536   long   
Generating: N569 (???,???) [000714] ------------       t714 = *  PUTARG_REG long   REG r11
Generating: N571 (  2, 10) [000715] Hc----------       t715 =    CNS_INT(h) long   0xd1ffab1e ftn REG NA
                                                              /--*  t715   long   
Generating: N573 (  4, 12) [000716] -c----------       t716 = *  IND       long   REG NA
                                                              /--*  t713   ref    this in rcx
                                                              +--*  t714   long   arg1 in r11
                                                              +--*  t716   long   control expr
Generating: N575 ( 23, 21) [000081] --CXG-------        t81 = *  CALLV stub int    System.Collections.IEnumerator.MoveNext REG rax $5c0
							GC regs: 0000808A {rcx rbx rdi r15} => 00008088 {rbx rdi r15}
							Call: GCvars=0000000000001000 {V06}, gcrefRegs=00008088 {rbx rdi r15}, byrefRegs=00000000 {}
IN0088:        call     [System.Collections.IEnumerator:MoveNext():bool:this]
Generating: N577 (  1,  1) [000082] -c----------        t82 =    CNS_INT   int    0 REG NA $40
                                                              /--*  t81    int    
                                                              +--*  t82    int    
Generating: N579 ( 25, 23) [000083] J--XG--N----              *  NE        void   REG NA $292
IN0089:        test     eax, eax
Generating: N581 ( 27, 25) [000084] ---XG-------              *  JTRUE     void   REG NA
IN008a:        jne      L_M55048_BB03

Scope info: end block BB09, IL range [000..0F2)
Scope info: open scopes =
   2 (V02 loc0) [000..153)
   6 (V06 loc4) [000..153)
   3 (V03 loc1) [000..153)
   4 (V04 loc2) [000..153)
   5 (V05 loc3) [000..153)

=============== Generating BB13 [0F4..127) -> BB17 (always), preds={BB02,BB09} succs={BB17} flags=0x00000000.a04b0030: keep i label target gcsafe newobj LIR cfb 
BB13 IN (2)={V02     V06} + ByrefExposed + GcHeap
     OUT(2)={V02 V10    } + ByrefExposed + GcHeap

Recording Var Locations at start of BB13
  V02(rbx)
Change life 0000002080401001 {V02 V03 V04 V05 V06} -> 0000000000001001 {V02 V06}
							V03 in reg rdi is becoming dead  [------]
							Live regs: (unchanged) 00000000 {}
							V04 in reg r14 is becoming dead  [------]
							Live regs: (unchanged) 00000000 {}
							V05 in reg r15 is becoming dead  [------]
							Live regs: (unchanged) 00000000 {}
							Live regs: 00000000 {} => 00000008 {rbx}
							GC regs: 00000000 {} => 00000008 {rbx}
							Byref regs: (unchanged) 00000000 {}

      L_M55048_BB13:

      G_M55048_IG10:        ; offs=000239H, funclet=00, bbWeight=4   
Label: IG11, GCvars=0000000000001000 {V06}, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}

Scope info: begin block BB13, IL range [0F4..127)
Scope info: open scopes =
   2 (V02 loc0) [000..153)
   6 (V06 loc4) [000..153)
Generating: N585 (  1,  1) [000436] ------------       t436 =    LCL_VAR   ref    V06 loc4         u:2 rcx (last use) REG rcx $164
IN008b:        mov      rcx, gword ptr [V06 rbp-40H]
							Live vars: {V02 V06} => {V02}
							GCvars: {V06} => {}
							GC regs: 00000008 {rbx} => 0000000A {rcx rbx}
                                                              /--*  t436   ref    
Generating: N587 (???,???) [000717] ------------       t717 = *  PUTARG_REG ref    REG rcx
							GC regs: 0000000A {rcx rbx} => 00000008 {rbx}
							GC regs: 00000008 {rbx} => 0000000A {rcx rbx}
Generating: N589 (  2, 10) [000539] H-----------       t539 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127
IN008c:        mov      r11, 0xD1FFAB1E
                                                              /--*  t539   long   
Generating: N591 (???,???) [000718] ------------       t718 = *  PUTARG_REG long   REG r11
Generating: N593 (  2, 10) [000719] Hc----------       t719 =    CNS_INT(h) long   0xd1ffab1e ftn REG NA
                                                              /--*  t719   long   
Generating: N595 (  4, 12) [000720] -c----------       t720 = *  IND       long   REG NA
                                                              /--*  t717   ref    this in rcx
                                                              +--*  t718   long   arg1 in r11
                                                              +--*  t720   long   control expr
Generating: N597 ( 23, 21) [000435] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose REG NA $VN.Void
							GC regs: 0000000A {rcx rbx} => 00000008 {rbx}
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}
IN008d:        call     [System.IDisposable:Dispose():this]
Added IP mapping: 0x0100 STACK_EMPTY (G_M55048_IG11,ins#3,ofs#20) label
Generating: N599 (???,???) [000654] ------------                 IL_OFFSET void   IL offset: 0x100 REG NA
Generating: N601 (  1,  1) [000212] ------------       t212 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                              /--*  t212   ref    
Generating: N603 (  2,  2) [000546] -c----------       t546 = *  LEA(b+8)  byref  REG NA
                                                              /--*  t546   byref  
Generating: N605 (  4,  4) [000213] n---GO------       t213 = *  IND       ref    REG rcx <l:$569, c:$568>
IN008e:        mov      rcx, gword ptr [rbx+8]
							GC regs: 00000008 {rbx} => 0000000A {rcx rbx}
                                                              /--*  t213   ref    
Generating: N607 (  4,  4) [000384] DA--GO------              *  STORE_LCL_VAR ref    V35 tmp24        d:2 rcx REG rcx
							GC regs: 0000000A {rcx rbx} => 00000008 {rbx}
							V35 in reg rcx is becoming live  [000384]
							Live regs: 00000008 {rbx} => 0000000A {rcx rbx}
							Live vars: {V02} => {V02 V35}
							GC regs: 00000008 {rbx} => 0000000A {rcx rbx}
Generating: N609 (  1,  1) [000381] ------------       t381 =    LCL_VAR   ref    V35 tmp24        u:2 rcx (last use) REG rcx <l:$567, c:$16e>
                                                              /--*  t381   ref    
Generating: N611 (  2,  2) [000550] -c----------       t550 = *  LEA(b+24) byref  REG NA
                                                              /--*  t550   byref  
Generating: N613 (  4,  4) [000382] ---XG-------       t382 = *  IND       int    REG rcx <l:$29b, c:$29a>
							V35 in reg rcx is becoming dead  [000381]
							Live regs: 0000000A {rcx rbx} => 00000008 {rbx}
							Live vars: {V02 V35} => {V02}
							GC regs: 0000000A {rcx rbx} => 00000008 {rbx}
IN008f:        mov      ecx, dword ptr [rcx+24]
Generating: N615 (  1,  1) [000211] ------------       t211 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                              /--*  t211   ref    
Generating: N617 (  2,  2) [000548] -c----------       t548 = *  LEA(b+60) byref  REG NA
                                                              /--*  t548   byref  
                                                              +--*  t382   int    
Generating: N619 (???,???) [000655] -A-XGO------              *  STOREIND  int    REG NA
IN0090:        mov      dword ptr [rbx+60], ecx
Added IP mapping: 0x0111 STACK_EMPTY (G_M55048_IG11,ins#6,ofs#30)
Generating: N621 (???,???) [000656] ------------                 IL_OFFSET void   IL offset: 0x111 REG NA
Generating: N623 (  2, 10) [000221] H-----------       t221 =    CNS_INT(h) long   0xd1ffab1e method REG rcx $12b
IN0091:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t221   long   
Generating: N625 (???,???) [000721] ------------       t721 = *  PUTARG_REG long   REG rcx
                                                              /--*  t721   long   arg0 in rcx
Generating: N627 ( 16, 16) [000222] --C---------       t222 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $56c
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}
IN0092:        call     CORINFO_HELP_NEWSFAST
							GC regs: 00000008 {rbx} => 00000009 {rax rbx}
                                                              /--*  t222   ref    
Generating: N629 ( 16, 16) [000224] DA----------              *  STORE_LCL_VAR ref    V29 tmp18        d:2 rsi REG rsi
							GC regs: 00000009 {rax rbx} => 00000008 {rbx}
IN0093:        mov      rsi, rax
							V29 in reg rsi is becoming live  [000224]
							Live regs: 00000008 {rbx} => 00000048 {rbx rsi}
							Live vars: {V02} => {V02 V29}
							GC regs: 00000008 {rbx} => 00000048 {rbx rsi}
Generating: N631 (  1,  1) [000219] ------------       t219 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                              /--*  t219   ref    
Generating: N633 (  2,  2) [000553] -c----------       t553 = *  LEA(b+60) byref  REG NA
                                                              /--*  t553   byref  
Generating: N635 (  4,  4) [000220] n---GO------       t220 = *  IND       int    REG rdi <l:$2a3, c:$2a2>
IN0094:        mov      edi, dword ptr [rbx+60]
                                                              /--*  t220   int    
Generating: N637 (  4,  4) [000402] DA--GO------              *  STORE_LCL_VAR int    V37 tmp26        d:2 rdi REG rdi
							V37 in reg rdi is becoming live  [000402]
							Live regs: 00000048 {rbx rsi} => 000000C8 {rbx rsi rdi}
							Live vars: {V02 V29} => {V02 V29 V37}
Generating: N639 (  2, 10) [000386] H-----------       t386 =    CNS_INT(h) long   0xd1ffab1e token REG rcx $12c
IN0095:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t386   long   
Generating: N641 (???,???) [000722] ------------       t722 = *  PUTARG_REG long   REG rcx
                                                              /--*  t722   long   arg0 in rcx
Generating: N643 ( 16, 16) [000387] --C---------       t387 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $56d
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000048 {rbx rsi}, byrefRegs=00000000 {}
IN0096:        call     CORINFO_HELP_NEWSFAST
							GC regs: 00000048 {rbx rsi} => 00000049 {rax rbx rsi}
                                                              /--*  t387   ref    
Generating: N645 ( 16, 16) [000389] DA----------              *  STORE_LCL_VAR ref    V36 tmp25        d:2 r14 REG r14
							GC regs: 00000049 {rax rbx rsi} => 00000048 {rbx rsi}
IN0097:        mov      r14, rax
							V36 in reg r14 is becoming live  [000389]
							Live regs: 000000C8 {rbx rsi rdi} => 000040C8 {rbx rsi rdi r14}
							Live vars: {V02 V29 V37} => {V02 V29 V36 V37}
							GC regs: 00000048 {rbx rsi} => 00004048 {rbx rsi r14}
Generating: N647 (  1,  1) [000390] ------------       t390 =    LCL_VAR   ref    V36 tmp25        u:2 r14 REG r14 $56d
                                                              /--*  t390   ref    
Generating: N649 (???,???) [000723] ------------       t723 = *  PUTARG_REG ref    REG rcx
IN0098:        mov      rcx, r14
							GC regs: 00004048 {rbx rsi r14} => 0000404A {rcx rbx rsi r14}
Generating: N651 (  1,  1) [000404] ------------       t404 =    CNS_INT   int    0 REG rdx $40
IN0099:        xor      edx, edx
                                                              /--*  t404   int    
Generating: N653 (???,???) [000724] ------------       t724 = *  PUTARG_REG int    REG rdx
Generating: N655 (  1,  1) [000405] ------------       t405 =    CNS_INT   ref    null REG r8 $VN.Null
IN009a:        xor      r8, r8
							GC regs: 0000404A {rcx rbx rsi r14} => 0000414A {rcx rbx rsi r8 r14}
                                                              /--*  t405   ref    
Generating: N657 (???,???) [000725] ------------       t725 = *  PUTARG_REG ref    REG r8
							GC regs: 0000414A {rcx rbx rsi r8 r14} => 0000404A {rcx rbx rsi r14}
							GC regs: 0000404A {rcx rbx rsi r14} => 0000414A {rcx rbx rsi r8 r14}
                                                              /--*  t723   ref    this in rcx
                                                              +--*  t724   int    arg1 in rdx
                                                              +--*  t725   ref    arg2 in r8
Generating: N659 ( 17, 12) [000406] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor REG NA $VN.Void
							GC regs: 0000414A {rcx rbx rsi r8 r14} => 00004148 {rbx rsi r8 r14}
							GC regs: 00004148 {rbx rsi r8 r14} => 00004048 {rbx rsi r14}
							Call: GCvars=0000000000000000 {}, gcrefRegs=00004048 {rbx rsi r14}, byrefRegs=00000000 {}
IN009b:        call     System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:.ctor(int,System.Collections.Generic.IEqualityComparer`1[__Canon]):this
Generating: N661 (  1,  1) [000225] ------------       t225 =    LCL_VAR   ref    V29 tmp18        u:2 rsi REG rsi $56c
                                                              /--*  t225   ref    
Generating: N663 (  2,  2) [000559] ------------       t559 = *  LEA(b+8)  byref  REG rcx
IN009c:        lea      rcx, bword ptr [rsi+8]
							Byref regs: 00000000 {} => 00000002 {rcx}
Generating: N665 (  1,  1) [000392] ------------       t392 =    LCL_VAR   ref    V36 tmp25        u:2 r14 (last use) REG r14 $56d
                                                              /--*  t559   byref  
                                                              +--*  t392   ref    
Generating: N667 (???,???) [000657] -A--GO------              *  STOREIND  ref    REG NA
							Byref regs: 00000002 {rcx} => 00000000 {}
							V36 in reg r14 is becoming dead  [000392]
							Live regs: 000040C8 {rbx rsi rdi r14} => 000000C8 {rbx rsi rdi}
							Live vars: {V02 V29 V36 V37} => {V02 V29 V37}
							GC regs: 00004048 {rbx rsi r14} => 00000048 {rbx rsi}
IN009d:        mov      rdx, r14
NoGC Call: savedSet=0000F0E8 {rbx rbp rsi rdi r12 r13 r14 r15}
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000048 {rbx rsi}, byrefRegs=00000000 {}
IN009e:        call     CORINFO_HELP_ASSIGN_REF
Generating: N669 (  1,  1) [000397] ------------       t397 =    LCL_VAR   ref    V29 tmp18        u:2 rsi REG rsi $56c
                                                              /--*  t397   ref    
Generating: N671 (  2,  2) [000561] -c----------       t561 = *  LEA(b+16) byref  REG NA
Generating: N673 (  1,  1) [000398] ------------       t398 =    LCL_VAR   int    V37 tmp26        u:2 rdi (last use) REG rdi <l:$299, c:$30c>
                                                              /--*  t561   byref  
                                                              +--*  t398   int    
Generating: N675 (???,???) [000658] -A--GO------              *  STOREIND  int    REG NA
							V37 in reg rdi is becoming dead  [000398]
							Live regs: 000000C8 {rbx rsi rdi} => 00000048 {rbx rsi}
							Live vars: {V02 V29 V37} => {V02 V29}
IN009f:        mov      dword ptr [rsi+16], edi
Added IP mapping: 0x011D (G_M55048_IG11,ins#21,ofs#97)
Generating: N677 (???,???) [000659] ------------                 IL_OFFSET void   IL offset: 0x11d REG NA
Generating: N679 (  1,  1) [000218] ------------       t218 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                              /--*  t218   ref    
Generating: N681 (  2,  2) [000563] ------------       t563 = *  LEA(b+16) byref  REG rcx
IN00a0:        lea      rcx, bword ptr [rbx+16]
							Byref regs: 00000000 {} => 00000002 {rcx}
Generating: N683 (  1,  1) [000227] ------------       t227 =    LCL_VAR   ref    V29 tmp18        u:2 rsi (last use) REG rsi $56c
                                                              /--*  t563   byref  
                                                              +--*  t227   ref    
Generating: N685 (???,???) [000660] -A--GO------              *  STOREIND  ref    REG NA
							Byref regs: 00000002 {rcx} => 00000000 {}
							V29 in reg rsi is becoming dead  [000227]
							Live regs: 00000048 {rbx rsi} => 00000008 {rbx}
							Live vars: {V02 V29} => {V02}
							GC regs: 00000048 {rbx rsi} => 00000008 {rbx}
IN00a1:        mov      rdx, rsi
NoGC Call: savedSet=0000F0E8 {rbx rbp rsi rdi r12 r13 r14 r15}
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}
IN00a2:        call     CORINFO_HELP_ASSIGN_REF
Added IP mapping: 0x0122 STACK_EMPTY (G_M55048_IG11,ins#24,ofs#109)
Generating: N687 (???,???) [000661] ------------                 IL_OFFSET void   IL offset: 0x122 REG NA
Generating: N689 (  1,  1) [000230] ------------       t230 =    CNS_INT   int    0 REG rsi $40
IN00a3:        xor      esi, esi
                                                              /--*  t230   int    
Generating: N691 (  1,  3) [000232] DA----------              *  STORE_LCL_VAR int    V10 loc8         d:2 rsi REG rsi
							V10 in reg rsi is becoming live  [000232]
							Live regs: 00000008 {rbx} => 00000048 {rbx rsi}
							Live vars: {V02} => {V02 V10}

Scope info: end block BB13, IL range [0F4..127)
Scope info: open scopes =
   2 (V02 loc0) [000..153)
IN00a4:        jmp      L_M55048_BB17

=============== Generating BB16 [127..133), preds={BB20} succs={BB17} flags=0x0000000a.210b2020: i Loop label target hascall gcsafe bwd bwd-target LIR 
BB16 IN (2)={V02 V10} + ByrefExposed + GcHeap
     OUT(2)={V02 V10} + ByrefExposed + GcHeap

Recording Var Locations at start of BB16
  V02(rbx)  V10(rsi)
Liveness not changing: 0000000000000401 {V02 V10}
							Live regs: 00000000 {} => 00000048 {rbx rsi}
							GC regs: 00000000 {} => 00000008 {rbx}
							Byref regs: (unchanged) 00000000 {}

      L_M55048_BB16:

      G_M55048_IG11:        ; offs=00029EH, funclet=00, bbWeight=1   
Label: IG12, GCvars=0000000000000000 {}, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}

Scope info: begin block BB16, IL range [127..133)
Scope info: open scopes =
   2 (V02 loc0) [000..153)
   10 (V10 loc8) [000..153)
Added IP mapping: 0x0127 STACK_EMPTY (G_M55048_IG12,ins#0,ofs#0) label
Generating: N735 (???,???) [000662] ------------                 IL_OFFSET void   IL offset: 0x127 REG NA
Generating: N737 (  1,  1) [000242] ------------       t242 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                              /--*  t242   ref    
Generating: N739 (???,???) [000726] ------------       t726 = *  PUTARG_REG ref    REG rcx
IN00a5:        mov      rcx, rbx
							GC regs: 00000008 {rbx} => 0000000A {rcx rbx}
                                                              /--*  t726   ref    this in rcx
Generating: N741 ( 15,  8) [000243] --CXG-------              *  CALL      void   <>c__DisplayClass5_0.<ExecuteAnalyzers>g__StartNextAnalyzer|0 REG NA $VN.Void
							GC regs: 0000000A {rcx rbx} => 00000008 {rbx}
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}
IN00a6:        call     <>c__DisplayClass5_0:<ExecuteAnalyzers>g__StartNextAnalyzer|0():this
Added IP mapping: 0x012D STACK_EMPTY (G_M55048_IG12,ins#2,ofs#8)
Generating: N743 (???,???) [000663] ------------                 IL_OFFSET void   IL offset: 0x12d REG NA
Generating: N745 (  1,  1) [000244] ------------       t244 =    LCL_VAR   int    V10 loc8         u:3 rsi (last use) REG rsi $2ca
Generating: N747 (  1,  1) [000245] -c----------       t245 =    CNS_INT   int    1 REG NA $41
                                                              /--*  t244   int    
                                                              +--*  t245   int    
Generating: N749 (  3,  3) [000246] ------------       t246 = *  ADD       int    REG rsi $2ad
							V10 in reg rsi is becoming dead  [000244]
							Live regs: 00000048 {rbx rsi} => 00000008 {rbx}
							Live vars: {V02 V10} => {V02}
IN00a7:        inc      esi
                                                              /--*  t246   int    
Generating: N751 (  3,  3) [000248] DA----------              *  STORE_LCL_VAR int    V10 loc8         d:4 rsi REG rsi
							V10 in reg rsi is becoming live  [000248]
							Live regs: 00000008 {rbx} => 00000048 {rbx rsi}
							Live vars: {V02} => {V02 V10}

Scope info: end block BB16, IL range [127..133)
Scope info: open scopes =
   2 (V02 loc0) [000..153)

=============== Generating BB17 [000..147) -> BB19 (cond), preds={BB13,BB16} succs={BB18,BB19} flags=0x00000000.210b0020: i label target gcsafe bwd LIR 
BB17 IN (2)={V02     V10} + ByrefExposed + GcHeap
     OUT(3)={V02 V39 V10} + ByrefExposed + GcHeap

Recording Var Locations at start of BB17
  V02(rbx)  V10(rsi)
Liveness not changing: 0000000000000401 {V02 V10}
							Live regs: 00000000 {} => 00000048 {rbx rsi}
							GC regs: 00000000 {} => 00000008 {rbx}
							Byref regs: (unchanged) 00000000 {}

      L_M55048_BB17:

      G_M55048_IG12:        ; offs=000312H, funclet=00, bbWeight=2   
Label: IG13, GCvars=0000000000000000 {}, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}

Scope info: begin block BB17, IL range [000..147)
Scope info: open scopes =
   2 (V02 loc0) [000..153)
   10 (V10 loc8) [000..153)
Generating: N695 (  1,  1) [000236] ------------       t236 =    LCL_VAR   ref    V02 loc0         u:2 rbx REG rbx $180
                                                              /--*  t236   ref    
Generating: N697 (  2,  2) [000566] -c----------       t566 = *  LEA(b+60) byref  REG NA
                                                              /--*  t566   byref  
Generating: N699 (  4,  4) [000237] n---GO------       t237 = *  IND       int    REG rcx <l:$2a9, c:$2a8>
IN00a8:        mov      ecx, dword ptr [rbx+60]
                                                              /--*  t237   int    
Generating: N701 (  4,  4) [000424] DA--GO------              *  STORE_LCL_VAR int    V39 tmp28        d:2 rcx REG rcx
							V39 in reg rcx is becoming live  [000424]
							Live regs: 00000048 {rbx rsi} => 0000004A {rcx rbx rsi}
							Live vars: {V02 V10} => {V02 V10 V39}
Generating: N703 (  1,  1) [000412] ------------       t412 =    LCL_VAR   int    V39 tmp28        u:2 rcx REG rcx <l:$2a7, c:$680>
Generating: N705 (  1,  1) [000411] -c----------       t411 =    CNS_INT   int    8 REG NA $57
                                                              /--*  t412   int    
                                                              +--*  t411   int    
Generating: N707 (  3,  3) [000413] J------N----              *  GE        void   REG NA <l:$2ab, c:$2aa>
IN00a9:        cmp      ecx, 8
Generating: N709 (  5,  5) [000414] ------------              *  JTRUE     void   REG NA
IN00aa:        jge      L_M55048_BB19

Scope info: end block BB17, IL range [000..147)
Scope info: open scopes =
   2 (V02 loc0) [000..153)
   10 (V10 loc8) [000..153)

=============== Generating BB18 [000..000) -> BB20 (always), preds={BB17} succs={BB20} flags=0x00000000.21080060: i internal gcsafe bwd LIR 
BB18 IN (3)={V02 V39 V10    } + ByrefExposed + GcHeap
     OUT(3)={V02     V10 V38} + ByrefExposed + GcHeap

Recording Var Locations at start of BB18
  V02(rbx)  V39(rcx)  V10(rsi)
Liveness not changing: 0000000000000403 {V02 V10 V39}
							Live regs: 00000000 {} => 0000004A {rcx rbx rsi}
							GC regs: 00000000 {} => 00000008 {rbx}
							Byref regs: (unchanged) 00000000 {}

      L_M55048_BB18:

      G_M55048_IG13:        ; offs=00031CH, funclet=00, bbWeight=8   
Label: IG14, GCvars=0000000000000000 {}, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}

Scope info: begin block BB18, IL range [000..000)
Scope info: open scopes =
   2 (V02 loc0) [000..153)
   10 (V10 loc8) [000..153)
Added IP mapping: NO_MAP STACK_EMPTY (G_M55048_IG14,ins#0,ofs#0) label
Generating: N713 (  1,  1) [000419] ------------       t419 =    LCL_VAR   int    V39 tmp28        u:2 rcx (last use) REG rcx <l:$2a7, c:$680>
                                                              /--*  t419   int    
Generating: N715 (  1,  3) [000421] DA----------              *  STORE_LCL_VAR int    V38 tmp27        d:4 rcx REG rcx
							V39 in reg rcx is becoming dead  [000419]
							Live regs: 0000004A {rcx rbx rsi} => 00000048 {rbx rsi}
							Live vars: {V02 V10 V39} => {V02 V10}
							V38 in reg rcx is becoming live  [000421]
							Live regs: 00000048 {rbx rsi} => 0000004A {rcx rbx rsi}
							Live vars: {V02 V10} => {V02 V10 V38}

Scope info: end block BB18, IL range [000..000)
Scope info: open scopes =
   2 (V02 loc0) [000..153)
   10 (V10 loc8) [000..153)
IN00ab:        jmp      L_M55048_BB20

=============== Generating BB19 [000..000), preds={BB17} succs={BB20} flags=0x00000000.210b0060: i internal label target gcsafe bwd LIR 
BB19 IN (2)={V02 V10    } + ByrefExposed + GcHeap
     OUT(3)={V02 V10 V38} + ByrefExposed + GcHeap

Recording Var Locations at start of BB19
  V02(rbx)  V10(rsi)
Change life 0000000000000C01 {V02 V10 V38} -> 0000000000000401 {V02 V10}
							V38 in reg rcx is becoming dead  [------]
							Live regs: (unchanged) 00000000 {}
							Live regs: 00000000 {} => 00000048 {rbx rsi}
							GC regs: 00000000 {} => 00000008 {rbx}
							Byref regs: (unchanged) 00000000 {}

      L_M55048_BB19:

      G_M55048_IG14:        ; offs=000328H, funclet=00, bbWeight=2   
Label: IG15, GCvars=0000000000000000 {}, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}

Scope info: begin block BB19, IL range [000..000)
Scope info: open scopes =
   2 (V02 loc0) [000..153)
   10 (V10 loc8) [000..153)
genIPmappingAdd: ignoring duplicate IL offset 0xffffffff
Generating: N719 (  1,  1) [000415] -c----------       t415 =    CNS_INT   int    8 REG NA $57
                                                              /--*  t415   int    
Generating: N721 (  1,  3) [000417] DA----------              *  STORE_LCL_VAR int    V38 tmp27        d:3 rcx REG rcx
IN00ac:        mov      ecx, 8
							V38 in reg rcx is becoming live  [000417]
							Live regs: 00000048 {rbx rsi} => 0000004A {rcx rbx rsi}
							Live vars: {V02 V10} => {V02 V10 V38}

Scope info: end block BB19, IL range [000..000)
Scope info: open scopes =
   2 (V02 loc0) [000..153)
   10 (V10 loc8) [000..153)

=============== Generating BB20 [???..???) -> BB16 (cond), preds={BB18,BB19} succs={BB21,BB16} flags=0x00000000.210b0040: internal label target gcsafe bwd LIR 
BB20 IN (3)={V02 V10 V38} + ByrefExposed + GcHeap
     OUT(2)={V02 V10    } + ByrefExposed + GcHeap

Recording Var Locations at start of BB20
  V02(rbx)  V10(rsi)  V38(rcx)
Liveness not changing: 0000000000000C01 {V02 V10 V38}
							Live regs: 00000000 {} => 0000004A {rcx rbx rsi}
							GC regs: 00000000 {} => 00000008 {rbx}
							Byref regs: (unchanged) 00000000 {}

      L_M55048_BB20:

      G_M55048_IG15:        ; offs=00032DH, funclet=00, bbWeight=2   
Label: IG16, GCvars=0000000000000000 {}, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}

Scope info: begin block BB20, IL range [???..???)
Scope info: ignoring block beginning
genIPmappingAdd: ignoring duplicate IL offset 0xffffffff
Generating: N725 (  1,  1) [000233] ------------       t233 =    LCL_VAR   int    V10 loc8         u:3 rsi REG rsi $2ca
Generating: N727 (  1,  1) [000422] ------------       t422 =    LCL_VAR   int    V38 tmp27        u:2 rcx (last use) REG rcx $2cb
                                                              /--*  t233   int    
                                                              +--*  t422   int    
Generating: N729 (  3,  3) [000240] J------N----              *  LT        void   REG NA $2ac
							V38 in reg rcx is becoming dead  [000422]
							Live regs: 0000004A {rcx rbx rsi} => 00000048 {rbx rsi}
							Live vars: {V02 V10 V38} => {V02 V10}
IN00ad:        cmp      esi, ecx
Generating: N731 (  5,  5) [000241] ------------              *  JTRUE     void   REG NA
IN00ae:        jl       SHORT L_M55048_BB16

Scope info: end block BB20, IL range [???..???)
Scope info: ignoring block end

=============== Generating BB21 [147..153) (return), preds={BB20} succs={} flags=0x00000000.20080020: i gcsafe LIR 
BB21 IN (1)={V02} + ByrefExposed + GcHeap
     OUT(0)={   }

Recording Var Locations at start of BB21
  V02(rbx)
Change life 0000000000000401 {V02 V10} -> 0000000000000001 {V02}
							V10 in reg rsi is becoming dead  [------]
							Live regs: (unchanged) 00000000 {}
							Live regs: 00000000 {} => 00000008 {rbx}
							GC regs: 00000000 {} => 00000008 {rbx}
							Byref regs: (unchanged) 00000000 {}

      L_M55048_BB21:

      G_M55048_IG16:        ; offs=000332H, funclet=00, bbWeight=8   
Label: IG17, GCvars=0000000000000000 {}, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}

Scope info: begin block BB21, IL range [147..153)
Scope info: open scopes =
   2 (V02 loc0) [000..153)
Added IP mapping: 0x0147 STACK_EMPTY (G_M55048_IG17,ins#0,ofs#0) label
Generating: N755 (???,???) [000664] ------------                 IL_OFFSET void   IL offset: 0x147 REG NA
Generating: N757 (  1,  1) [000249] ------------       t249 =    LCL_VAR   ref    V02 loc0         u:2 rbx (last use) REG rbx $180
                                                              /--*  t249   ref    
Generating: N759 (  2,  2) [000568] -c----------       t568 = *  LEA(b+24) byref  REG NA
                                                              /--*  t568   byref  
Generating: N761 (  4,  4) [000250] n---GO------       t250 = *  IND       ref    REG rax <l:$575, c:$574>
							V02 in reg rbx is becoming dead  [000249]
							Live regs: 00000008 {rbx} => 00000000 {}
							Live vars: {V02} => {}
							GC regs: 00000008 {rbx} => 00000000 {}
IN00af:        mov      rax, gword ptr [rbx+24]
							GC regs: 00000000 {} => 00000001 {rax}
                                                              /--*  t250   ref    
Generating: N763 (  4,  4) [000429] DA--GO------              *  STORE_LCL_VAR ref    V40 tmp29        d:2 rax REG rax
							GC regs: 00000001 {rax} => 00000000 {}
							V40 in reg rax is becoming live  [000429]
							Live regs: 00000000 {} => 00000001 {rax}
							Live vars: {} => {V40}
							GC regs: 00000000 {} => 00000001 {rax}
Generating: N765 (  1,  1) [000426] ------------       t426 =    LCL_VAR   ref    V40 tmp29        u:2 rax (last use) REG rax <l:$573, c:$177>
                                                              /--*  t426   ref    
Generating: N767 (  2,  2) [000570] -c----------       t570 = *  LEA(b+8)  byref  REG NA
                                                              /--*  t570   byref  
Generating: N769 (  4,  4) [000427] ---XG-------       t427 = *  IND       ref    REG rax <l:$57b, c:$57a>
							V40 in reg rax is becoming dead  [000426]
							Live regs: 00000001 {rax} => 00000000 {}
							Live vars: {V40} => {}
							GC regs: 00000001 {rax} => 00000000 {}
IN00b0:        mov      rax, gword ptr [rax+8]
							GC regs: 00000000 {} => 00000001 {rax}
                                                              /--*  t427   ref    
Generating: N771 (  5,  5) [000253] ---XG-------              *  RETURN    ref    REG NA $17a
							GC regs: 00000001 {rax} => 00000000 {}

Scope info: end block BB21, IL range [147..153)
Scope info: ending scope, LVnum=0 [000..153)
Scope info: ending scope, LVnum=9 [000..153)
siEndScope: Failed to end scope for V09
Scope info: ending scope, LVnum=8 [000..153)
siEndScope: Failed to end scope for V08
Scope info: ending scope, LVnum=7 [000..153)
Scope info: ending scope, LVnum=6 [000..153)
Scope info: ending scope, LVnum=5 [000..153)
Scope info: ending scope, LVnum=4 [000..153)
Scope info: ending scope, LVnum=3 [000..153)
Scope info: ending scope, LVnum=2 [000..153)
Scope info: ending scope, LVnum=1 [000..153)
Scope info: ending scope, LVnum=10 [000..153)
Scope info: open scopes =
   <none>
Added IP mapping: EPILOG STACK_EMPTY (G_M55048_IG17,ins#2,ofs#8) label
							GC regs: 00000000 {} => 00000001 {rax}
Extending return value GC liveness to epilog
Reserving epilog IG for block BB21

      G_M55048_IG17:        ; offs=000336H, funclet=00, bbWeight=1   
*************** After placeholder IG creation
G_M55048_IG01:        ; func=00, offs=000000H, size=0000H, gcrefRegs=00000000 {} <-- Prolog IG
G_M55048_IG02:        ; offs=000000H, size=012CH, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}, byref
G_M55048_IG03:        ; offs=00012CH, size=002EH, extend
G_M55048_IG04:        ; offs=00015AH, size=001CH, gcVars=0000000000001000 {V06}, gcrefRegs=00008088 {rbx rdi r15}, byrefRegs=00000000 {}, gcvars, byref
G_M55048_IG05:        ; offs=000176H, size=003FH, gcrefRegs=00008088 {rbx rdi r15}, byrefRegs=00000000 {}, byref
G_M55048_IG06:        ; offs=0001B5H, size=000BH, gcrefRegs=000090C8 {rbx rsi rdi r12 r15}, byrefRegs=00000000 {}, byref
G_M55048_IG07:        ; offs=0001C0H, size=001EH, gcrefRegs=000090C8 {rbx rsi rdi r12 r15}, byrefRegs=00000000 {}, byref
G_M55048_IG08:        ; offs=0001DEH, size=0023H, gcrefRegs=0000B08C {rdx rbx rdi r12 r13 r15}, byrefRegs=00000000 {}, byref
G_M55048_IG09:        ; offs=000201H, size=0038H, gcrefRegs=000090C8 {rbx rsi rdi r12 r15}, byrefRegs=00000000 {}, byref
G_M55048_IG10:        ; offs=000239H, size=0065H, gcrefRegs=0000B0C8 {rbx rsi rdi r12 r13 r15}, byrefRegs=00000000 {}, byref
G_M55048_IG11:        ; offs=00029EH, size=0074H, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG12:        ; offs=000312H, size=000AH, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG13:        ; offs=00031CH, size=000CH, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG14:        ; offs=000328H, size=0005H, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG15:        ; offs=00032DH, size=0005H, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG16:        ; offs=000332H, size=0004H, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG17:        ; offs=000336H, size=0008H, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG18:        ; epilog placeholder, next placeholder=<END>, BB21 [0016], epilog, extend <-- First placeholder <-- Last placeholder
                      ;   PrevGCVars=0000000000000000 {}, PrevGCrefRegs=00000008 {rbx}, PrevByrefRegs=00000000 {}
                      ;   InitGCVars=0000000000000000 {}, InitGCrefRegs=00000008 {rbx}, InitByrefRegs=00000000 {}
G_M55048_IG19:        ; offs=00043EH, size=0000H, gcrefRegs=00000000 {} <-- Current IG

=============== Generating BB25 [???..???) (throw), preds={} succs={} flags=0x00000000.20031070: keep i internal rare label target LIR 
BB25 IN (0)={}
     OUT(0)={}

Recording Var Locations at start of BB25
  <none>

Liveness not changing: 0000000000000000 {}
							Live regs: (unchanged) 00000000 {}
							GC regs: (unchanged) 00000000 {}
							Byref regs: (unchanged) 00000000 {}

      L_M55048_BB25:
Label: IG19, GCvars=0000000000000000 {}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}

Scope info: begin block BB25, IL range [???..???)
Scope info: ignoring block beginning
Added IP mapping: NO_MAP STACK_EMPTY (G_M55048_IG19,ins#0,ofs#0) label
Generating: N811 ( 14,  5) [000672] --CXG-------                 CALL help void   HELPER.CORINFO_HELP_RNGCHKFAIL REG NA
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}
IN00b1:        call     CORINFO_HELP_RNGCHKFAIL

Scope info: end block BB25, IL range [???..???)
Scope info: ignoring block end
IN00b2:        int3     

=============== Generating BB22 [0F4..0F8) -> BB24 (cond), preds={} succs={BB23,BB24} flags=0x00000004.20031230: keep i rare label target flet LIR 
BB22 IN (1)={V06} + ByrefExposed + GcHeap
     OUT(1)={V06} + ByrefExposed + GcHeap

Recording Var Locations at start of BB22
  <none>

Change life 0000000000000000 {} -> 0000000000001000 {V06}
							V06 becoming live
							Live regs: (unchanged) 00000000 {}
							GC regs: (unchanged) 00000000 {}
							Byref regs: (unchanged) 00000000 {}

      L_M55048_BB22:

      G_M55048_IG19:        ; offs=00043EH, funclet=00, bbWeight=0   
Label: IG20, GCvars=0000000000001000 {V06}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}
Scope info: found beginning of funclet region at block BB22; ignoring following blocks
Reserving funclet prolog IG for block BB22
Added IP mapping: PROLOG STACK_EMPTY (G_M55048_IG20,ins#0,ofs#256) label
*************** After placeholder IG creation
G_M55048_IG01:        ; func=00, offs=000000H, size=0000H, gcrefRegs=00000000 {} <-- Prolog IG
G_M55048_IG02:        ; offs=000000H, size=012CH, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}, byref
G_M55048_IG03:        ; offs=00012CH, size=002EH, extend
G_M55048_IG04:        ; offs=00015AH, size=001CH, gcVars=0000000000001000 {V06}, gcrefRegs=00008088 {rbx rdi r15}, byrefRegs=00000000 {}, gcvars, byref
G_M55048_IG05:        ; offs=000176H, size=003FH, gcrefRegs=00008088 {rbx rdi r15}, byrefRegs=00000000 {}, byref
G_M55048_IG06:        ; offs=0001B5H, size=000BH, gcrefRegs=000090C8 {rbx rsi rdi r12 r15}, byrefRegs=00000000 {}, byref
G_M55048_IG07:        ; offs=0001C0H, size=001EH, gcrefRegs=000090C8 {rbx rsi rdi r12 r15}, byrefRegs=00000000 {}, byref
G_M55048_IG08:        ; offs=0001DEH, size=0023H, gcrefRegs=0000B08C {rdx rbx rdi r12 r13 r15}, byrefRegs=00000000 {}, byref
G_M55048_IG09:        ; offs=000201H, size=0038H, gcrefRegs=000090C8 {rbx rsi rdi r12 r15}, byrefRegs=00000000 {}, byref
G_M55048_IG10:        ; offs=000239H, size=0065H, gcrefRegs=0000B0C8 {rbx rsi rdi r12 r13 r15}, byrefRegs=00000000 {}, byref
G_M55048_IG11:        ; offs=00029EH, size=0074H, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG12:        ; offs=000312H, size=000AH, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG13:        ; offs=00031CH, size=000CH, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG14:        ; offs=000328H, size=0005H, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG15:        ; offs=00032DH, size=0005H, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG16:        ; offs=000332H, size=0004H, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG17:        ; offs=000336H, size=0008H, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG18:        ; epilog placeholder, next placeholder=IG20 , BB21 [0016], epilog, extend <-- First placeholder
                      ;   PrevGCVars=0000000000000000 {}, PrevGCrefRegs=00000008 {rbx}, PrevByrefRegs=00000000 {}
                      ;   InitGCVars=0000000000000000 {}, InitGCrefRegs=00000008 {rbx}, InitByrefRegs=00000000 {}
G_M55048_IG19:        ; offs=00043EH, size=0006H, gcVars=0000000000000000 {}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, gcvars, byref
G_M55048_IG20:        ; func=01, funclet prolog placeholder, next placeholder=<END>, BB22 [0010], funclet prolog <-- Last placeholder
                      ;   PrevGCVars=0000000000000000 {}, PrevGCrefRegs=00000000 {}, PrevByrefRegs=00000000 {}
                      ;   InitGCVars=0000000000001000 {V06}, InitGCrefRegs=00000000 {}, InitByrefRegs=00000000 {}
G_M55048_IG21:        ; offs=000544H, size=0000H, gcrefRegs=00000000 {} <-- Current IG
Added IP mapping: 0x00F4 STACK_EMPTY (G_M55048_IG21,ins#0,ofs#0) label
Generating: N775 (???,???) [000665] ------------                 IL_OFFSET void   IL offset: 0xf4 REG NA
Generating: N777 (  1,  1) [000254] -c----------       t254 =    LCL_VAR   ref    V06 loc4         u:2 NA REG NA $164
Generating: N779 (  1,  1) [000255] -c----------       t255 =    CNS_INT   ref    null REG NA $VN.Null
                                                              /--*  t254   ref    
                                                              +--*  t255   ref    
Generating: N781 (  3,  3) [000256] J------N----              *  EQ        void   REG NA $293
IN00b3:        cmp      gword ptr [V06 rbp-40H], 0
Generating: N783 (  5,  5) [000257] ------------              *  JTRUE     void   REG NA
IN00b4:        je       L_M55048_BB24

=============== Generating BB23 [0F8..0FF), preds={BB22} succs={BB24} flags=0x00000006.20081020: i rare hascall gcsafe LIR 
BB23 IN (1)={V06} + ByrefExposed + GcHeap
     OUT(0)={   }

Recording Var Locations at start of BB23
  <none>

Liveness not changing: 0000000000001000 {V06}
							Live regs: (unchanged) 00000000 {}
							GC regs: (unchanged) 00000000 {}
							Byref regs: (unchanged) 00000000 {}

      L_M55048_BB23:
Added IP mapping: 0x00F8 STACK_EMPTY (G_M55048_IG21,ins#2,ofs#11) label
Generating: N787 (???,???) [000666] ------------                 IL_OFFSET void   IL offset: 0xf8 REG NA
Generating: N789 (  1,  1) [000259] ------------       t259 =    LCL_VAR   ref    V06 loc4         u:2 rcx (last use) REG rcx $164
IN00b5:        mov      rcx, gword ptr [V06 rbp-40H]
							Live vars: {V06} => {}
							GCvars: {V06} => {}
							GC regs: 00000000 {} => 00000002 {rcx}
                                                              /--*  t259   ref    
Generating: N791 (???,???) [000727] ------------       t727 = *  PUTARG_REG ref    REG rcx
							GC regs: 00000002 {rcx} => 00000000 {}
							GC regs: 00000000 {} => 00000002 {rcx}
Generating: N793 (  2, 10) [000542] H-----------       t542 =    CNS_INT(h) long   0xd1ffab1e ftn REG r11 $127
IN00b6:        mov      r11, 0xD1FFAB1E
                                                              /--*  t542   long   
Generating: N795 (???,???) [000728] ------------       t728 = *  PUTARG_REG long   REG r11
Generating: N797 (  2, 10) [000729] Hc----------       t729 =    CNS_INT(h) long   0xd1ffab1e ftn REG NA
                                                              /--*  t729   long   
Generating: N799 (  4, 12) [000730] -c----------       t730 = *  IND       long   REG NA
                                                              /--*  t727   ref    this in rcx
                                                              +--*  t728   long   arg1 in r11
                                                              +--*  t730   long   control expr
Generating: N801 ( 23, 21) [000260] --CXG-------              *  CALLV stub void   System.IDisposable.Dispose REG NA $VN.Void
							GC regs: 00000002 {rcx} => 00000000 {}
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}
IN00b7:        call     [System.IDisposable:Dispose():this]

=============== Generating BB24 [0FF..100) (finret), preds={BB22,BB23} succs={} flags=0x00000004.20031020: i rare label target LIR 
BB24 IN (0)={}
     OUT(0)={}

Recording Var Locations at start of BB24
  <none>

Liveness not changing: 0000000000000000 {}
							Live regs: (unchanged) 00000000 {}
							GC regs: (unchanged) 00000000 {}
							Byref regs: (unchanged) 00000000 {}

      L_M55048_BB24:

      G_M55048_IG21:        ; offs=000544H, funclet=01, bbWeight=0   
Label: IG22, GCvars=0000000000000000 {}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}
Added IP mapping: 0x00FF STACK_EMPTY (G_M55048_IG22,ins#0,ofs#0) label
Generating: N805 (???,???) [000667] ------------                 IL_OFFSET void   IL offset: 0xff REG NA
Generating: N807 (  0,  0) [000258] ------------                 RETFILT   void   REG NA $600
Reserving funclet epilog IG for block BB24
IN00b8:        nop      

      G_M55048_IG22:        ; offs=000563H, funclet=01, bbWeight=0   
Added IP mapping: EPILOG STACK_EMPTY (G_M55048_IG23,ins#0,ofs#256) label
*************** After placeholder IG creation
G_M55048_IG01:        ; func=00, offs=000000H, size=0000H, gcrefRegs=00000000 {} <-- Prolog IG
G_M55048_IG02:        ; offs=000000H, size=012CH, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}, byref
G_M55048_IG03:        ; offs=00012CH, size=002EH, extend
G_M55048_IG04:        ; offs=00015AH, size=001CH, gcVars=0000000000001000 {V06}, gcrefRegs=00008088 {rbx rdi r15}, byrefRegs=00000000 {}, gcvars, byref
G_M55048_IG05:        ; offs=000176H, size=003FH, gcrefRegs=00008088 {rbx rdi r15}, byrefRegs=00000000 {}, byref
G_M55048_IG06:        ; offs=0001B5H, size=000BH, gcrefRegs=000090C8 {rbx rsi rdi r12 r15}, byrefRegs=00000000 {}, byref
G_M55048_IG07:        ; offs=0001C0H, size=001EH, gcrefRegs=000090C8 {rbx rsi rdi r12 r15}, byrefRegs=00000000 {}, byref
G_M55048_IG08:        ; offs=0001DEH, size=0023H, gcrefRegs=0000B08C {rdx rbx rdi r12 r13 r15}, byrefRegs=00000000 {}, byref
G_M55048_IG09:        ; offs=000201H, size=0038H, gcrefRegs=000090C8 {rbx rsi rdi r12 r15}, byrefRegs=00000000 {}, byref
G_M55048_IG10:        ; offs=000239H, size=0065H, gcrefRegs=0000B0C8 {rbx rsi rdi r12 r13 r15}, byrefRegs=00000000 {}, byref
G_M55048_IG11:        ; offs=00029EH, size=0074H, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG12:        ; offs=000312H, size=000AH, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG13:        ; offs=00031CH, size=000CH, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG14:        ; offs=000328H, size=0005H, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG15:        ; offs=00032DH, size=0005H, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG16:        ; offs=000332H, size=0004H, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG17:        ; offs=000336H, size=0008H, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG18:        ; epilog placeholder, next placeholder=IG20 , BB21 [0016], epilog, extend <-- First placeholder
                      ;   PrevGCVars=0000000000000000 {}, PrevGCrefRegs=00000008 {rbx}, PrevByrefRegs=00000000 {}
                      ;   InitGCVars=0000000000000000 {}, InitGCrefRegs=00000008 {rbx}, InitByrefRegs=00000000 {}
G_M55048_IG19:        ; offs=00043EH, size=0006H, gcVars=0000000000000000 {}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, gcvars, byref
G_M55048_IG20:        ; func=01, funclet prolog placeholder, next placeholder=IG23 , BB22 [0010], funclet prolog
                      ;   PrevGCVars=0000000000000000 {}, PrevGCrefRegs=00000000 {}, PrevByrefRegs=00000000 {}
                      ;   InitGCVars=0000000000001000 {V06}, InitGCrefRegs=00000000 {}, InitByrefRegs=00000000 {}
G_M55048_IG21:        ; offs=000544H, size=001FH, gcVars=0000000000001000 {V06}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, gcvars, byref
G_M55048_IG22:        ; offs=000563H, size=0001H, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref
G_M55048_IG23:        ; funclet epilog placeholder, next placeholder=<END>, BB24 [0012], funclet epilog, extend <-- Last placeholder
                      ;   PrevGCVars=0000000000000000 {}, PrevGCrefRegs=00000000 {}, PrevByrefRegs=00000000 {}
                      ;   InitGCVars=0000000000000000 {}, InitGCrefRegs=00000000 {}, InitByrefRegs=00000000 {}
Liveness not changing: 0000000000000000 {}

# compCycleEstimate =    752, compSizeEstimate =   742 SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task
; Final local variable assignments
;
;  V00 arg0         [V00,T29] (  3,  3   )     ref  ->  rsi         class-hnd
;  V01 arg1         [V01,T30] (  3,  3   )     ref  ->  rdi         class-hnd
;  V02 loc0         [V02,T00] ( 20, 39   )     ref  ->  rbx         class-hnd exact
;  V03 loc1         [V03,T22] (  4,  7   )     ref  ->  rdi         class-hnd
;  V04 loc2         [V04,T31] (  2,  5   )    bool  ->  r14        
;  V05 loc3         [V05,T37] (  2,  3   )     ref  ->  r15         class-hnd
;  V06 loc4         [V06,T12] (  7, 11   )     ref  ->  [rbp-0x40]   EH do-not-enreg[] class-hnd EH-live
;  V07 loc5         [V07,T15] (  3,  8   )     ref  ->  rsi         class-hnd
;* V08 loc6         [V08    ] (  0,  0   )     ref  ->  zero-ref    class-hnd
;* V09 loc7         [V09    ] (  0,  0   )     ref  ->  zero-ref    class-hnd exact
;  V10 loc8         [V10,T10] (  4, 13   )     int  ->  rsi        
;  V11 OutArgs      [V11    ] (  1,  1   )  lclBlk (40) [rsp+0x00]   "OutgoingArgSpace"
;  V12 tmp1         [V12,T32] (  2,  4   )     ref  ->  rbx         class-hnd exact "NewObj constructor temp"
;  V13 tmp2         [V13,T23] (  3,  6   )     ref  ->  rdi         class-hnd exact "NewObj constructor temp"
;  V14 tmp3         [V14,T24] (  3,  6   )     ref  ->  rdi         class-hnd exact "NewObj constructor temp"
;  V15 tmp4         [V15,T25] (  3,  6   )     ref  ->  rdi         class-hnd exact "NewObj constructor temp"
;  V16 tmp5         [V16,T03] (  3, 24   )     ref  ->  r12         class-hnd exact "NewObj constructor temp"
;  V17 tmp6         [V17,T19] (  2,  8   )     ref  ->  r12        
;  V18 tmp7         [V18,T16] (  3,  8   )     ref  ->  r12        
;  V19 tmp8         [V19,T05] (  6, 16   )     ref  ->  r12        
;  V20 tmp9         [V20,T17] (  3,  8   )     ref  ->  r13        
;  V21 tmp10        [V21,T18] (  3,  8   )     ref  ->  rdx        
;  V22 tmp11        [V22,T06] (  2, 16   )     ref  ->  r13         class-hnd "dup spill"
;  V23 tmp12        [V23,T07] (  2, 16   )     ref  ->  rsi         class-hnd "impAppendStmt"
;  V24 tmp13        [V24,T20] (  2,  8   )     ref  ->  rsi        
;  V25 tmp14        [V25,T21] (  2,  8   )     ref  ->  r12        
;  V26 tmp15        [V26,T09] (  4, 14   )     ref  ->  r13        
;  V27 tmp16        [V27,T02] (  4, 32   )     ref  ->  [rbp-0x48]   class-hnd exact "NewObj constructor temp"
;  V28 tmp17        [V28,T04] (  5, 20   )     ref  ->  r13         class-hnd exact "NewObj constructor temp"
;  V29 tmp18        [V29,T13] (  4,  8   )     ref  ->  rsi         class-hnd exact "NewObj constructor temp"
;  V30 tmp19        [V30,T26] (  3,  6   )     ref  ->  rax         class-hnd exact "NewObj constructor temp"
;  V31 tmp20        [V31,T14] (  4,  8   )     ref  ->  rdi         class-hnd "Inlining Arg"
;  V32 tmp21        [V32,T33] (  2,  4   )     ref  ->  rax         class-hnd "Inlining Arg"
;* V33 tmp22        [V33    ] (  0,  0   )    long  ->  zero-ref    "Inlining Arg"
;* V34 tmp23        [V34    ] (  0,  0   )    long  ->  zero-ref    "Inlining Arg"
;  V35 tmp24        [V35,T34] (  2,  4   )     ref  ->  rcx         class-hnd "Inlining Arg"
;  V36 tmp25        [V36,T27] (  3,  6   )     ref  ->  r14         class-hnd exact "NewObj constructor temp"
;  V37 tmp26        [V37,T36] (  2,  4   )     int  ->  rdi         "Inlining Arg"
;  V38 tmp27        [V38,T11] (  3, 12   )     int  ->  rcx         "Inline return value spill temp"
;  V39 tmp28        [V39,T01] (  3, 36   )     int  ->  rcx         "Inlining Arg"
;  V40 tmp29        [V40,T35] (  2,  4   )     ref  ->  rax         class-hnd "Inlining Arg"
;  V41 tmp30        [V41,T28] (  3,  6   )     ref  ->  rax         "arr expr"
;  V42 tmp31        [V42,T08] (  2, 16   )     ref  ->  rdx         "argument with side effect"
;  V43 PSPSym       [V43    ] (  1,  1   )    long  ->  [rbp-0x58]   do-not-enreg[X] addr-exposed "PSPSym"
;
; Lcl frame size = 72
*************** Before prolog / epilog generation
G_M55048_IG01:        ; func=00, offs=000000H, size=0000H, gcrefRegs=00000000 {} <-- Prolog IG
G_M55048_IG02:        ; offs=000000H, size=012CH, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}, byref
G_M55048_IG03:        ; offs=00012CH, size=002EH, extend
G_M55048_IG04:        ; offs=00015AH, size=001CH, gcVars=0000000000001000 {V06}, gcrefRegs=00008088 {rbx rdi r15}, byrefRegs=00000000 {}, gcvars, byref
G_M55048_IG05:        ; offs=000176H, size=003FH, gcrefRegs=00008088 {rbx rdi r15}, byrefRegs=00000000 {}, byref
G_M55048_IG06:        ; offs=0001B5H, size=000BH, gcrefRegs=000090C8 {rbx rsi rdi r12 r15}, byrefRegs=00000000 {}, byref
G_M55048_IG07:        ; offs=0001C0H, size=001EH, gcrefRegs=000090C8 {rbx rsi rdi r12 r15}, byrefRegs=00000000 {}, byref
G_M55048_IG08:        ; offs=0001DEH, size=0023H, gcrefRegs=0000B08C {rdx rbx rdi r12 r13 r15}, byrefRegs=00000000 {}, byref
G_M55048_IG09:        ; offs=000201H, size=0038H, gcrefRegs=000090C8 {rbx rsi rdi r12 r15}, byrefRegs=00000000 {}, byref
G_M55048_IG10:        ; offs=000239H, size=0065H, gcrefRegs=0000B0C8 {rbx rsi rdi r12 r13 r15}, byrefRegs=00000000 {}, byref
G_M55048_IG11:        ; offs=00029EH, size=0074H, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG12:        ; offs=000312H, size=000AH, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG13:        ; offs=00031CH, size=000CH, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG14:        ; offs=000328H, size=0005H, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG15:        ; offs=00032DH, size=0005H, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG16:        ; offs=000332H, size=0004H, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG17:        ; offs=000336H, size=0008H, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG18:        ; epilog placeholder, next placeholder=IG20 , BB21 [0016], epilog, extend <-- First placeholder
                      ;   PrevGCVars=0000000000000000 {}, PrevGCrefRegs=00000008 {rbx}, PrevByrefRegs=00000000 {}
                      ;   InitGCVars=0000000000000000 {}, InitGCrefRegs=00000008 {rbx}, InitByrefRegs=00000000 {}
G_M55048_IG19:        ; offs=00043EH, size=0006H, gcVars=0000000000000000 {}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, gcvars, byref
G_M55048_IG20:        ; func=01, funclet prolog placeholder, next placeholder=IG23 , BB22 [0010], funclet prolog
                      ;   PrevGCVars=0000000000000000 {}, PrevGCrefRegs=00000000 {}, PrevByrefRegs=00000000 {}
                      ;   InitGCVars=0000000000001000 {V06}, InitGCrefRegs=00000000 {}, InitByrefRegs=00000000 {}
G_M55048_IG21:        ; offs=000544H, size=001FH, gcVars=0000000000001000 {V06}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, gcvars, byref
G_M55048_IG22:        ; offs=000563H, size=0001H, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref
G_M55048_IG23:        ; funclet epilog placeholder, next placeholder=<END>, BB24 [0012], funclet epilog, extend <-- Last placeholder
                      ;   PrevGCVars=0000000000000000 {}, PrevGCrefRegs=00000000 {}, PrevByrefRegs=00000000 {}
                      ;   InitGCVars=0000000000000000 {}, InitGCrefRegs=00000000 {}, InitByrefRegs=00000000 {}
Recording Var Locations at start of BB01
  V00(rsi)  V01(rdi)
*************** In genFnProlog()
Added IP mapping to front: PROLOG STACK_EMPTY (G_M55048_IG01,ins#0,ofs#0) label

__prolog:
IN00b9:        push     rbp
IN00ba:        push     r15
IN00bb:        push     r14
IN00bc:        push     r13
IN00bd:        push     r12
IN00be:        push     rdi
IN00bf:        push     rsi
IN00c0:        push     rbx
IN00c1:        sub      rsp, 72
IN00c2:        lea      rbp, [rsp+80H]
IN00c3:        mov      qword ptr [V43 rbp-58H], rsp
*************** In genFnPrologCalleeRegArgs() for int regs
IN00c4:        mov      rsi, rcx
IN00c5:        mov      rdi, rdx
*************** In genEnregisterIncomingStackArgs()
2 tracked GC refs are at stack offsets -0048 ... FFFFFFC8


      G_M55048_IG01:        ; offs=000000H, funclet=00, bbWeight=1   

Funclet prolog / epilog info
   Function InitialSP-to-FP delta: 128
                         SP delta: 56
       PSP slot Initial SP offset: 40
*************** In genFnEpilog()

__epilog:
gcVarPtrSetCur=0000000000000000 {}, gcRegGCrefSetCur=00000008 {rbx}, gcRegByrefSetCur=00000000 {}
IN00c6:        lea      rsp, [rbp-38H]
IN00c7:        pop      rbx
IN00c8:        pop      rsi
IN00c9:        pop      rdi
IN00ca:        pop      r12
IN00cb:        pop      r13
IN00cc:        pop      r14
IN00cd:        pop      r15
IN00ce:        pop      rbp
IN00cf:        ret      

      G_M55048_IG18:        ; offs=00033EH, funclet=00, bbWeight=1   
*************** In genFuncletProlog()
IN00d0:        push     rbp
IN00d1:        push     r15
IN00d2:        push     r14
IN00d3:        push     r13
IN00d4:        push     r12
IN00d5:        push     rdi
IN00d6:        push     rsi
IN00d7:        push     rbx
IN00d8:        sub      rsp, 56
IN00d9:        mov      rbp, qword ptr [rcx+40]
Marking regs modified: [rbp] ([rax rcx rdx rbx rsi rdi r8-r15 mm0-mm5] => [rax rcx rdx rbx rbp rsi rdi r8-r15 mm0-mm5])
IN00da:        mov      qword ptr [rsp+28H], rbp
IN00db:        lea      rbp, [rbp+80H]
Removing modified regs: [rbp] ([rax rcx rdx rbx rbp rsi rdi r8-r15 mm0-mm5] => [rax rcx rdx rbx rsi rdi r8-r15 mm0-mm5])

      G_M55048_IG20:        ; offs=000444H, funclet=01, bbWeight=0   
*************** In genFuncletEpilog()
IN00dc:        add      rsp, 56
IN00dd:        pop      rbx
IN00de:        pop      rsi
IN00df:        pop      rdi
IN00e0:        pop      r12
IN00e1:        pop      r13
IN00e2:        pop      r14
IN00e3:        pop      r15
IN00e4:        pop      rbp
IN00e5:        ret      

      G_M55048_IG23:        ; offs=000564H, funclet=01, bbWeight=0   
0 prologs, 1 epilogs, 1 funclet prologs, 1 funclet epilogs
*************** After prolog / epilog generation
G_M55048_IG01:        ; func=00, offs=000000H, size=0022H, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref, nogc <-- Prolog IG
G_M55048_IG02:        ; offs=000022H, size=012CH, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}, byref
G_M55048_IG03:        ; offs=00014EH, size=002EH, extend
G_M55048_IG04:        ; offs=00017CH, size=001CH, gcVars=0000000000001000 {V06}, gcrefRegs=00008088 {rbx rdi r15}, byrefRegs=00000000 {}, gcvars, byref
G_M55048_IG05:        ; offs=000198H, size=003FH, gcrefRegs=00008088 {rbx rdi r15}, byrefRegs=00000000 {}, byref
G_M55048_IG06:        ; offs=0001D7H, size=000BH, gcrefRegs=000090C8 {rbx rsi rdi r12 r15}, byrefRegs=00000000 {}, byref
G_M55048_IG07:        ; offs=0001E2H, size=001EH, gcrefRegs=000090C8 {rbx rsi rdi r12 r15}, byrefRegs=00000000 {}, byref
G_M55048_IG08:        ; offs=000200H, size=0023H, gcrefRegs=0000B08C {rdx rbx rdi r12 r13 r15}, byrefRegs=00000000 {}, byref
G_M55048_IG09:        ; offs=000223H, size=0038H, gcrefRegs=000090C8 {rbx rsi rdi r12 r15}, byrefRegs=00000000 {}, byref
G_M55048_IG10:        ; offs=00025BH, size=0065H, gcrefRegs=0000B0C8 {rbx rsi rdi r12 r13 r15}, byrefRegs=00000000 {}, byref
G_M55048_IG11:        ; offs=0002C0H, size=0074H, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG12:        ; offs=000334H, size=000AH, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG13:        ; offs=00033EH, size=000CH, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG14:        ; offs=00034AH, size=0005H, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG15:        ; offs=00034FH, size=0005H, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG16:        ; offs=000354H, size=0004H, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG17:        ; offs=000358H, size=0008H, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
G_M55048_IG18:        ; offs=000360H, size=0011H, epilog, nogc, extend
G_M55048_IG19:        ; offs=000371H, size=0006H, gcVars=0000000000000000 {}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, gcvars, byref
G_M55048_IG20:        ; func=01, offs=000377H, size=0020H, gcVars=0000000000001000 {V06}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, gcvars, byref, funclet prolog, nogc
G_M55048_IG21:        ; offs=000397H, size=001FH, gcVars=0000000000001000 {V06}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, gcvars, byref
G_M55048_IG22:        ; offs=0003B6H, size=0001H, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref
G_M55048_IG23:        ; offs=0003B7H, size=0011H, funclet epilog, nogc, extend
*************** In emitJumpDistBind()
Binding: IN0043: 000000 jbe      L_M55048_BB25
Binding L_M55048_BB25 to G_M55048_IG19
Estimate of fwd jump [D1FFAB1E/067]: 015B -> 0371 = 0214
Adjusted offset of BB04 from 017C to 017C
Binding: IN004d: 000000 je       L_M55048_BB13
Binding L_M55048_BB13 to G_M55048_IG11
Estimate of fwd jump [D1FFAB1E/077]: 0192 -> 02C0 = 012C
Adjusted offset of BB05 from 0198 to 0198
Binding: IN0059: 000000 jne      L_M55048_BB05
Binding L_M55048_BB05 to G_M55048_IG07
Estimate of fwd jump [D1FFAB1E/089]: 01D1 -> 01E2 = 000F
Shrinking jump [D1FFAB1E/089]
Adjusted offset of BB06 from 01D7 to 01D3
Binding: IN005c: 000000 jmp      L_M55048_BB06
Binding L_M55048_BB06 to G_M55048_IG08
Estimate of fwd jump [D1FFAB1E/092]: 01D9 -> 01FC = 0021
Shrinking jump [D1FFAB1E/092]
Adjusted offset of BB07 from 01E2 to 01DB
Adjusted offset of BB08 from 0200 to 01F9
Binding: IN006a: 000000 jne      L_M55048_BB09
Binding L_M55048_BB09 to G_M55048_IG10
Estimate of fwd jump [D1FFAB1E/106]: 0216 -> 0254 = 003C
Shrinking jump [D1FFAB1E/106]
Adjusted offset of BB09 from 0223 to 0218
Adjusted offset of BB10 from 025B to 0250
Binding: IN008a: 000000 jne      L_M55048_BB03
Binding L_M55048_BB03 to G_M55048_IG05
Estimate of bwd jump [D1FFAB1E/138]: 02AF -> 0198 = 0119
Adjusted offset of BB11 from 02C0 to 02B5
Binding: IN00a4: 000000 jmp      L_M55048_BB17
Binding L_M55048_BB17 to G_M55048_IG13
Estimate of fwd jump [D1FFAB1E/164]: 0324 -> 0333 = 000D
Shrinking jump [D1FFAB1E/164]
Adjusted offset of BB12 from 0334 to 0326
Adjusted offset of BB13 from 033E to 0330
Binding: IN00aa: 000000 jge      L_M55048_BB19
Binding L_M55048_BB19 to G_M55048_IG15
Estimate of fwd jump [D1FFAB1E/170]: 0336 -> 0341 = 0009
Shrinking jump [D1FFAB1E/170]
Adjusted offset of BB14 from 034A to 0338
Binding: IN00ab: 000000 jmp      L_M55048_BB20
Binding L_M55048_BB20 to G_M55048_IG16
Estimate of fwd jump [D1FFAB1E/171]: 0338 -> 0342 = 0008
Shrinking jump [D1FFAB1E/171]
Adjusted offset of BB15 from 034F to 033A
Adjusted offset of BB16 from 0354 to 033F
Binding: IN00ae: 000000 jl       SHORT L_M55048_BB16
Binding L_M55048_BB16 to G_M55048_IG12
Estimate of bwd jump [D1FFAB1E/174]: 0341 -> 0326 = 001D
Shrinking jump [D1FFAB1E/174]
Adjusted offset of BB17 from 0358 to 0343
Adjusted offset of BB18 from 0360 to 034B
Adjusted offset of BB19 from 0371 to 035C
Adjusted offset of BB20 from 0377 to 0362
Adjusted offset of BB21 from 0397 to 0382
Binding: IN00b4: 000000 je       L_M55048_BB24
Binding L_M55048_BB24 to G_M55048_IG22
Estimate of fwd jump [D1FFAB1E/180]: 0387 -> 03A1 = 0018
Shrinking jump [D1FFAB1E/180]
Adjusted offset of BB22 from 03B6 to 039D
Adjusted offset of BB23 from 03B7 to 039E
Total shrinkage =  25, min extra jump size = 153

*************** Finishing PHASE Generate code

*************** Starting PHASE Emit code

Hot  code size = 0x3AF bytes
Cold code size = 0x0 bytes
reserveUnwindInfo(isFunclet=FALSE, isColdCode=FALSE, unwindSize=0x16)
reserveUnwindInfo(isFunclet=TRUE, isColdCode=FALSE, unwindSize=0x16)
*************** In emitEndCodeGen()
Converting emitMaxStackDepth from bytes (0) to elements (0)

***************************************************************************
Instructions as they come out of the scheduler


G_M55048_IG01:        ; func=00, offs=000000H, size=0022H, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref, nogc <-- Prolog IG
IN00b9: 000000 push     rbp
IN00ba: 000001 push     r15
IN00bb: 000003 push     r14
IN00bc: 000005 push     r13
IN00bd: 000007 push     r12
IN00be: 000009 push     rdi
IN00bf: 00000A push     rsi
IN00c0: 00000B push     rbx
IN00c1: 00000C sub      rsp, 72
IN00c2: 000010 lea      rbp, [rsp+80H]
IN00c3: 000018 mov      qword ptr [rbp-58H], rsp
IN00c4: 00001C mov      rsi, rcx
       ; gcrRegs +[rsi]
IN00c5: 00001F mov      rdi, rdx
       ; gcrRegs +[rdi]
						;; bbWeight=1    PerfScore 10.25
G_M55048_IG02:        ; func=00, offs=000022H, size=012CH, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}, byref
IN0001: 000022 mov      rcx, 0xD1FFAB1E
IN0002: 00002C call     CORINFO_HELP_NEWSFAST
       ; gcrRegs +[rax]
       ; gcr arg pop 0
IN0003: 000031 mov      rbx, rax
       ; gcrRegs +[rbx]
IN0004: 000034 lea      rcx, bword ptr [rbx+32]
       ; byrRegs +[rcx]
IN0005: 000038 mov      rdx, rdi
       ; gcrRegs +[rdx]
IN0006: 00003B call     CORINFO_HELP_ASSIGN_REF
       ; gcrRegs -[rax rdx rdi]
       ; byrRegs -[rcx]
IN0007: 000040 xor      ecx, ecx
IN0008: 000042 mov      dword ptr [rbx+60], ecx
IN0009: 000045 mov      dword ptr [rbx+56], ecx
IN000a: 000048 mov      rcx, 0xD1FFAB1E
IN000b: 000052 call     CORINFO_HELP_NEWSFAST
       ; gcrRegs +[rax]
       ; gcr arg pop 0
IN000c: 000057 mov      rdi, rax
       ; gcrRegs +[rdi]
IN000d: 00005A mov      rcx, 0xD1FFAB1E
IN000e: 000064 call     CORINFO_HELP_NEWSFAST
       ; gcr arg pop 0
IN000f: 000069 mov      dword ptr [rax+52], 0xD1FFAB1E
IN0010: 000070 lea      rcx, bword ptr [rdi+8]
       ; byrRegs +[rcx]
IN0011: 000074 mov      rdx, rax
       ; gcrRegs +[rdx]
IN0012: 000077 call     CORINFO_HELP_ASSIGN_REF
       ; gcrRegs -[rax rdx]
       ; byrRegs -[rcx]
IN0013: 00007C lea      rcx, bword ptr [rbx+24]
       ; byrRegs +[rcx]
IN0014: 000080 mov      rdx, rdi
       ; gcrRegs +[rdx]
IN0015: 000083 call     CORINFO_HELP_ASSIGN_REF
       ; gcrRegs -[rdx rdi]
       ; byrRegs -[rcx]
IN0016: 000088 mov      rcx, 0xD1FFAB1E
IN0017: 000092 call     CORINFO_HELP_NEWSFAST
       ; gcrRegs +[rax]
       ; gcr arg pop 0
IN0018: 000097 mov      rdi, rax
       ; gcrRegs +[rdi]
IN0019: 00009A mov      rcx, 0xD1FFAB1E
IN001a: 0000A4 mov      edx, 14
IN001b: 0000A9 call     CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS
       ; gcrRegs -[rax]
       ; gcr arg pop 0
IN001c: 0000AE mov      rdx, 0xD1FFAB1E
IN001d: 0000B8 mov      rdx, gword ptr [rdx]
       ; gcrRegs +[rdx]
IN001e: 0000BB lea      rcx, bword ptr [rdi+8]
       ; byrRegs +[rcx]
IN001f: 0000BF call     CORINFO_HELP_ASSIGN_REF
       ; gcrRegs -[rdx]
       ; byrRegs -[rcx]
IN0020: 0000C4 lea      rcx, bword ptr [rbx+8]
       ; byrRegs +[rcx]
IN0021: 0000C8 mov      rdx, rdi
       ; gcrRegs +[rdx]
IN0022: 0000CB call     CORINFO_HELP_ASSIGN_REF
       ; gcrRegs -[rdx rdi]
       ; byrRegs -[rcx]
IN0023: 0000D0 xor      rcx, rcx
       ; gcrRegs +[rcx]
IN0024: 0000D2 mov      gword ptr [rbx+16], rcx
IN0025: 0000D6 mov      rcx, 0xD1FFAB1E
       ; gcrRegs -[rcx]
IN0026: 0000E0 call     CORINFO_HELP_NEWSFAST
       ; gcrRegs +[rax]
       ; gcr arg pop 0
IN0027: 0000E5 mov      rdi, rax
       ; gcrRegs +[rdi]
IN0028: 0000E8 mov      rcx, rdi
       ; gcrRegs +[rcx]
IN0029: 0000EB xor      rdx, rdx
       ; gcrRegs +[rdx]
IN002a: 0000ED call     System.Collections.Generic.HashSet`1[__Canon][System.__Canon]:.ctor(System.Collections.Generic.IEqualityComparer`1[__Canon]):this
       ; gcrRegs -[rax rcx rdx]
       ; gcr arg pop 0
IN002b: 0000F2 lea      rcx, bword ptr [rbx+40]
       ; byrRegs +[rcx]
IN002c: 0000F6 mov      rdx, rdi
       ; gcrRegs +[rdx]
IN002d: 0000F9 call     CORINFO_HELP_ASSIGN_REF
       ; gcrRegs -[rdx rdi]
       ; byrRegs -[rcx]
IN002e: 0000FE call     System.Diagnostics.Process:GetCurrentProcess():System.Diagnostics.Process
       ; gcrRegs +[rax]
       ; gcr arg pop 0
IN002f: 000103 mov      rdi, rax
       ; gcrRegs +[rdi]
IN0030: 000106 cmp      dword ptr [rdi], edi
IN0031: 000108 mov      rcx, rdi
       ; gcrRegs +[rcx]
IN0032: 00010B mov      edx, 3
IN0033: 000110 call     System.Diagnostics.Process:EnsureState(int):this
       ; gcrRegs -[rax rcx]
       ; gcr arg pop 0
IN0034: 000115 mov      ecx, dword ptr [rdi+200]
IN0035: 00011B call     System.Diagnostics.NtProcessManager:GetFirstModule(int):System.Diagnostics.ProcessModule
       ; gcrRegs -[rdi] +[rax]
       ; gcr arg pop 0
IN0036: 000120 mov      rdi, gword ptr [rax+40]
       ; gcrRegs +[rdi]
IN0037: 000124 mov      dword ptr [rsp+20H], 5
IN0038: 00012C mov      r9d, dword ptr [rdi+8]
IN0039: 000130 mov      rdx, 0xD1FFAB1E
IN003a: 00013A mov      rdx, gword ptr [rdx]
       ; gcrRegs +[rdx]
IN003b: 00013D mov      rcx, rdi
       ; gcrRegs +[rcx]
IN003c: 000140 xor      r8d, r8d
IN003d: 000143 call     System.String:IndexOf(System.String,int,int,int):int:this
       ; gcrRegs -[rax rcx rdx]
       ; gcr arg pop 0
IN003e: 000148 mov      r14d, eax
IN003f: 00014B not      r14d
						;; bbWeight=1    PerfScore 44.25
G_M55048_IG03:        ; func=00, offs=00014EH, size=002EH, extend
IN0040: 00014E shr      r14d, 31
IN0041: 000152 call     System.Environment:GetCommandLineArgs():System.String[]
       ; gcrRegs +[rax]
       ; gcr arg pop 0
IN0042: 000157 cmp      dword ptr [rax+8], 0
IN0043: 00015B jbe      G_M55048_IG19
IN0044: 000161 mov      r15, gword ptr [rax+16]
       ; gcrRegs +[r15]
IN0045: 000165 mov      rcx, rsi
       ; gcrRegs +[rcx]
IN0046: 000168 mov      r11, 0xD1FFAB1E
IN0047: 000172 call     [System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon]:GetEnumerator():System.Collections.Generic.IEnumerator`1[__Canon]:this]
       ; gcrRegs -[rcx rsi]
       ; gcr arg pop 0
IN0048: 000178 mov      gword ptr [rbp-40H], rax
       ; GC ptr vars +{V06}
						;; bbWeight=1    PerfScore 12.50
G_M55048_IG04:        ; func=00, offs=00017CH, size=001CH, gcVars=0000000000001000 {V06}, gcrefRegs=00008088 {rbx rdi r15}, byrefRegs=00000000 {}, gcvars, byref
       ; gcrRegs -[rax]
IN0049: 00017C mov      rcx, gword ptr [rbp-40H]
       ; gcrRegs +[rcx]
IN004a: 000180 mov      r11, 0xD1FFAB1E
IN004b: 00018A call     [System.Collections.IEnumerator:MoveNext():bool:this]
       ; gcrRegs -[rcx]
       ; gcr arg pop 0
IN004c: 000190 test     eax, eax
IN004d: 000192 je       G_M55048_IG11
						;; bbWeight=1    PerfScore 5.50
G_M55048_IG05:        ; func=00, offs=000198H, size=003BH, gcrefRegs=00008088 {rbx rdi r15}, byrefRegs=00000000 {}, byref, isz
IN004e: 000198 mov      rcx, gword ptr [rbp-40H]
       ; gcrRegs +[rcx]
IN004f: 00019C mov      r11, 0xD1FFAB1E
IN0050: 0001A6 call     [System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon]:get_Current():System.__Canon:this]
       ; gcrRegs -[rcx] +[rax]
       ; gcr arg pop 0
IN0051: 0001AC mov      rsi, rax
       ; gcrRegs +[rsi]
IN0052: 0001AF mov      rcx, 0xD1FFAB1E
IN0053: 0001B9 call     CORINFO_HELP_NEWSFAST
       ; gcr arg pop 0
IN0054: 0001BE mov      r12, rax
       ; gcrRegs +[r12]
IN0055: 0001C1 lea      rcx, bword ptr [r12+8]
       ; byrRegs +[rcx]
IN0056: 0001C6 mov      rdx, rdi
       ; gcrRegs +[rdx]
IN0057: 0001C9 call     CORINFO_HELP_ASSIGN_REF
       ; gcrRegs -[rax rdx]
       ; byrRegs -[rcx]
IN0058: 0001CE test     r14d, r14d
IN0059: 0001D1 jne      SHORT G_M55048_IG07
						;; bbWeight=4    PerfScore 36.00
G_M55048_IG06:        ; func=00, offs=0001D3H, size=0008H, gcrefRegs=000090C8 {rbx rsi rdi r12 r15}, byrefRegs=00000000 {}, byref, isz
IN005a: 0001D3 mov      r13, r12
       ; gcrRegs +[r13]
IN005b: 0001D6 mov      rdx, rsi
       ; gcrRegs +[rdx]
IN005c: 0001D9 jmp      SHORT G_M55048_IG08
						;; bbWeight=2    PerfScore 5.00
G_M55048_IG07:        ; func=00, offs=0001DBH, size=001EH, gcrefRegs=000090C8 {rbx rsi rdi r12 r15}, byrefRegs=00000000 {}, byref
       ; gcrRegs -[rdx r13]
IN005d: 0001DB mov      r13, r12
       ; gcrRegs +[r13]
IN005e: 0001DE mov      rdx, 0xD1FFAB1E
IN005f: 0001E8 mov      rdx, gword ptr [rdx]
       ; gcrRegs +[rdx]
IN0060: 0001EB mov      rcx, r15
       ; gcrRegs +[rcx]
IN0061: 0001EE mov      r8, rsi
       ; gcrRegs +[r8]
IN0062: 0001F1 call     System.String:Concat(System.String,System.String,System.String):System.String
       ; gcrRegs -[rcx rdx rsi r8] +[rax]
       ; gcr arg pop 0
IN0063: 0001F6 mov      rdx, rax
       ; gcrRegs +[rdx]
						;; bbWeight=2    PerfScore 8.50
G_M55048_IG08:        ; func=00, offs=0001F9H, size=001FH, gcrefRegs=0000B08C {rdx rbx rdi r12 r13 r15}, byrefRegs=00000000 {}, byref, isz
       ; gcrRegs -[rax]
IN0064: 0001F9 lea      rcx, bword ptr [r13+16]
       ; byrRegs +[rcx]
IN0065: 0001FD call     CORINFO_HELP_ASSIGN_REF
       ; gcrRegs -[rdx r13]
       ; byrRegs -[rcx]
IN0066: 000202 mov      byte  ptr [r12+130], 0
IN0067: 00020B mov      rsi, gword ptr [rbx+8]
       ; gcrRegs +[rsi]
IN0068: 00020F mov      r13, gword ptr [rbx+48]
       ; gcrRegs +[r13]
IN0069: 000213 test     r13, r13
IN006a: 000216 jne      SHORT G_M55048_IG10
						;; bbWeight=4    PerfScore 31.00
G_M55048_IG09:        ; func=00, offs=000218H, size=0038H, gcrefRegs=000090C8 {rbx rsi rdi r12 r15}, byrefRegs=00000000 {}, byref
       ; gcrRegs -[r13]
IN006b: 000218 mov      rcx, 0xD1FFAB1E
IN006c: 000222 call     CORINFO_HELP_NEWSFAST
       ; gcrRegs +[rax]
       ; gcr arg pop 0
IN006d: 000227 mov      r13, rax
       ; gcrRegs +[r13]
IN006e: 00022A lea      rcx, bword ptr [r13+8]
       ; byrRegs +[rcx]
IN006f: 00022E mov      rdx, rbx
       ; gcrRegs +[rdx]
IN0070: 000231 call     CORINFO_HELP_ASSIGN_REF
       ; gcrRegs -[rax rdx]
       ; byrRegs -[rcx]
IN0071: 000236 mov      rdx, 0xD1FFAB1E
IN0072: 000240 mov      qword ptr [r13+24], rdx
IN0073: 000244 lea      rcx, bword ptr [rbx+48]
       ; byrRegs +[rcx]
IN0074: 000248 mov      rdx, r13
       ; gcrRegs +[rdx]
IN0075: 00024B call     CORINFO_HELP_ASSIGN_REF
       ; gcrRegs -[rdx]
       ; byrRegs -[rcx]
						;; bbWeight=2    PerfScore 12.50
G_M55048_IG10:        ; func=00, offs=000250H, size=0065H, gcrefRegs=0000B0C8 {rbx rsi rdi r12 r13 r15}, byrefRegs=00000000 {}, byref
IN0076: 000250 mov      rcx, 0xD1FFAB1E
IN0077: 00025A call     CORINFO_HELP_NEWSFAST
       ; gcrRegs +[rax]
       ; gcr arg pop 0
IN0078: 00025F mov      gword ptr [rbp-48H], rax
       ; GC ptr vars +{V27}
IN0079: 000263 lea      rcx, bword ptr [rax+8]
       ; byrRegs +[rcx]
IN007a: 000267 mov      rdx, rbx
       ; gcrRegs +[rdx]
IN007b: 00026A call     CORINFO_HELP_ASSIGN_REF
       ; gcrRegs -[rax rdx]
       ; byrRegs -[rcx]
IN007c: 00026F mov      rcx, 0xD1FFAB1E
IN007d: 000279 mov      r8, gword ptr [rbp-48H]
       ; gcrRegs +[r8]
IN007e: 00027D mov      qword ptr [r8+24], rcx
IN007f: 000281 mov      rcx, r12
       ; gcrRegs +[rcx]
IN0080: 000284 mov      rdx, r13
       ; gcrRegs +[rdx]
       ; GC ptr vars -{V27}
IN0081: 000287 call     SolutionAnalyzer.IPC:CreateSession(System.Diagnostics.ProcessStartInfo,System.Action`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.Action`1[[System.Diagnostics.Process, System.Diagnostics.Process, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a]]):System.Diagnostics.Process
       ; gcrRegs -[rcx rdx r8 r12-r13] +[rax]
       ; gcr arg pop 0
IN0082: 00028C mov      rdx, rax
       ; gcrRegs +[rdx]
IN0083: 00028F mov      rcx, rsi
       ; gcrRegs +[rcx]
IN0084: 000292 cmp      dword ptr [rcx], ecx
IN0085: 000294 call     System.Collections.Generic.Queue`1[__Canon][System.__Canon]:Enqueue(System.__Canon):this
       ; gcrRegs -[rax rcx rdx rsi]
       ; gcr arg pop 0
IN0086: 000299 mov      rcx, gword ptr [rbp-40H]
       ; gcrRegs +[rcx]
IN0087: 00029D mov      r11, 0xD1FFAB1E
IN0088: 0002A7 call     [System.Collections.IEnumerator:MoveNext():bool:this]
       ; gcrRegs -[rcx]
       ; gcr arg pop 0
IN0089: 0002AD test     eax, eax
IN008a: 0002AF jne      G_M55048_IG05
						;; bbWeight=4    PerfScore 67.00
G_M55048_IG11:        ; func=00, offs=0002B5H, size=0071H, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref, isz
       ; gcrRegs -[rdi r15]
IN008b: 0002B5 mov      rcx, gword ptr [rbp-40H]
       ; gcrRegs +[rcx]
IN008c: 0002B9 mov      r11, 0xD1FFAB1E
       ; GC ptr vars -{V06}
IN008d: 0002C3 call     [System.IDisposable:Dispose():this]
       ; gcrRegs -[rcx]
       ; gcr arg pop 0
IN008e: 0002C9 mov      rcx, gword ptr [rbx+8]
       ; gcrRegs +[rcx]
IN008f: 0002CD mov      ecx, dword ptr [rcx+24]
       ; gcrRegs -[rcx]
IN0090: 0002D0 mov      dword ptr [rbx+60], ecx
IN0091: 0002D3 mov      rcx, 0xD1FFAB1E
IN0092: 0002DD call     CORINFO_HELP_NEWSFAST
       ; gcrRegs +[rax]
       ; gcr arg pop 0
IN0093: 0002E2 mov      rsi, rax
       ; gcrRegs +[rsi]
IN0094: 0002E5 mov      edi, dword ptr [rbx+60]
IN0095: 0002E8 mov      rcx, 0xD1FFAB1E
IN0096: 0002F2 call     CORINFO_HELP_NEWSFAST
       ; gcr arg pop 0
IN0097: 0002F7 mov      r14, rax
       ; gcrRegs +[r14]
IN0098: 0002FA mov      rcx, r14
       ; gcrRegs +[rcx]
IN0099: 0002FD xor      edx, edx
IN009a: 0002FF xor      r8, r8
       ; gcrRegs +[r8]
IN009b: 000302 call     System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:.ctor(int,System.Collections.Generic.IEqualityComparer`1[__Canon]):this
       ; gcrRegs -[rax rcx r8]
       ; gcr arg pop 0
IN009c: 000307 lea      rcx, bword ptr [rsi+8]
       ; byrRegs +[rcx]
IN009d: 00030B mov      rdx, r14
       ; gcrRegs +[rdx]
IN009e: 00030E call     CORINFO_HELP_ASSIGN_REF
       ; gcrRegs -[rdx r14]
       ; byrRegs -[rcx]
IN009f: 000313 mov      dword ptr [rsi+16], edi
IN00a0: 000316 lea      rcx, bword ptr [rbx+16]
       ; byrRegs +[rcx]
IN00a1: 00031A mov      rdx, rsi
       ; gcrRegs +[rdx]
IN00a2: 00031D call     CORINFO_HELP_ASSIGN_REF
       ; gcrRegs -[rdx rsi]
       ; byrRegs -[rcx]
IN00a3: 000322 xor      esi, esi
IN00a4: 000324 jmp      SHORT G_M55048_IG13
						;; bbWeight=1    PerfScore 22.75
G_M55048_IG12:        ; func=00, offs=000326H, size=000AH, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
IN00a5: 000326 mov      rcx, rbx
       ; gcrRegs +[rcx]
IN00a6: 000329 call     <>c__DisplayClass5_0:<ExecuteAnalyzers>g__StartNextAnalyzer|0():this
       ; gcrRegs -[rcx]
       ; gcr arg pop 0
IN00a7: 00032E inc      esi
						;; bbWeight=2    PerfScore 3.00
G_M55048_IG13:        ; func=00, offs=000330H, size=0008H, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref, isz
IN00a8: 000330 mov      ecx, dword ptr [rbx+60]
IN00a9: 000333 cmp      ecx, 8
IN00aa: 000336 jge      SHORT G_M55048_IG15
						;; bbWeight=8    PerfScore 26.00
G_M55048_IG14:        ; func=00, offs=000338H, size=0002H, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref, isz
IN00ab: 000338 jmp      SHORT G_M55048_IG16
						;; bbWeight=2    PerfScore 4.00
G_M55048_IG15:        ; func=00, offs=00033AH, size=0005H, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
IN00ac: 00033A mov      ecx, 8
						;; bbWeight=2    PerfScore 0.50
G_M55048_IG16:        ; func=00, offs=00033FH, size=0004H, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref, isz
IN00ad: 00033F cmp      esi, ecx
IN00ae: 000341 jl       SHORT G_M55048_IG12
						;; bbWeight=8    PerfScore 10.00
G_M55048_IG17:        ; func=00, offs=000343H, size=0008H, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref
IN00af: 000343 mov      rax, gword ptr [rbx+24]
       ; gcrRegs +[rax]
IN00b0: 000347 mov      rax, gword ptr [rax+8]
						;; bbWeight=1    PerfScore 4.00
G_M55048_IG18:        ; func=00, offs=00034BH, size=0011H, epilog, nogc, extend
IN00c6: 00034B lea      rsp, [rbp-38H]
IN00c7: 00034F pop      rbx
IN00c8: 000350 pop      rsi
IN00c9: 000351 pop      rdi
IN00ca: 000352 pop      r12
IN00cb: 000354 pop      r13
IN00cc: 000356 pop      r14
IN00cd: 000358 pop      r15
IN00ce: 00035A pop      rbp
IN00cf: 00035B ret      
						;; bbWeight=1    PerfScore 5.50
G_M55048_IG19:        ; func=00, offs=00035CH, size=0006H, gcVars=0000000000000000 {}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, gcvars, byref
       ; gcrRegs -[rax rbx]
IN00b1: 00035C call     CORINFO_HELP_RNGCHKFAIL
       ; gcr arg pop 0
IN00b2: 000361 int3     
						;; bbWeight=0    PerfScore 0.00
G_M55048_IG20:        ; func=01, offs=000362H, size=0020H, gcVars=0000000000001000 {V06}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, gcvars, byref, funclet prolog, nogc
       ; GC ptr vars +{V06 V12}
IN00d0: 000362 push     rbp
IN00d1: 000363 push     r15
IN00d2: 000365 push     r14
IN00d3: 000367 push     r13
IN00d4: 000369 push     r12
IN00d5: 00036B push     rdi
IN00d6: 00036C push     rsi
IN00d7: 00036D push     rbx
IN00d8: 00036E sub      rsp, 56
IN00d9: 000372 mov      rbp, qword ptr [rcx+40]
IN00da: 000376 mov      qword ptr [rsp+28H], rbp
IN00db: 00037B lea      rbp, [rbp+80H]
						;; bbWeight=0    PerfScore 0.00
G_M55048_IG21:        ; func=01, offs=000382H, size=001BH, gcVars=0000000000001000 {V06}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, gcvars, byref, isz
IN00b3: 000382 cmp      gword ptr [rbp-40H], 0
IN00b4: 000387 je       SHORT G_M55048_IG22
IN00b5: 000389 mov      rcx, gword ptr [rbp-40H]
       ; gcrRegs +[rcx]
IN00b6: 00038D mov      r11, 0xD1FFAB1E
       ; GC ptr vars -{V06 V12}
IN00b7: 000397 call     [System.IDisposable:Dispose():this]
       ; gcrRegs -[rcx]
       ; gcr arg pop 0
						;; bbWeight=0    PerfScore 0.00
G_M55048_IG22:        ; func=01, offs=00039DH, size=0001H, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref
IN00b8: 00039D nop      
						;; bbWeight=0    PerfScore 0.00
G_M55048_IG23:        ; func=01, offs=00039EH, size=0011H, funclet epilog, nogc, extend
IN00dc: 00039E add      rsp, 56
IN00dd: 0003A2 pop      rbx
IN00de: 0003A3 pop      rsi
IN00df: 0003A4 pop      rdi
IN00e0: 0003A5 pop      r12
IN00e1: 0003A7 pop      r13
IN00e2: 0003A9 pop      r14
IN00e3: 0003AB pop      r15
IN00e4: 0003AD pop      rbp
IN00e5: 0003AE ret      
						;; bbWeight=0    PerfScore 0.00Allocated method code size =  943 , actual size =  943

; Total bytes of code 943, prolog size 34, PerfScore 402.55, instruction count 229 (MethodHash=216328f7) for method SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task
; ============================================================

*************** After end code gen, before unwindEmit()
G_M55048_IG01:        ; func=00, offs=000000H, size=0022H, bbWeight=1    PerfScore 10.25, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref, nogc <-- Prolog IG

IN00b9: 000000 push     rbp
IN00ba: 000001 push     r15
IN00bb: 000003 push     r14
IN00bc: 000005 push     r13
IN00bd: 000007 push     r12
IN00be: 000009 push     rdi
IN00bf: 00000A push     rsi
IN00c0: 00000B push     rbx
IN00c1: 00000C sub      rsp, 72
IN00c2: 000010 lea      rbp, [rsp+80H]
IN00c3: 000018 mov      qword ptr [V43 rbp-58H], rsp
IN00c4: 00001C mov      rsi, rcx
IN00c5: 00001F mov      rdi, rdx

G_M55048_IG02:        ; offs=000022H, size=012CH, bbWeight=1    PerfScore 44.25, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}, byref

IN0001: 000022 mov      rcx, 0xD1FFAB1E
IN0002: 00002C call     CORINFO_HELP_NEWSFAST
IN0003: 000031 mov      rbx, rax
IN0004: 000034 lea      rcx, bword ptr [rbx+32]
IN0005: 000038 mov      rdx, rdi
IN0006: 00003B call     CORINFO_HELP_ASSIGN_REF
IN0007: 000040 xor      ecx, ecx
IN0008: 000042 mov      dword ptr [rbx+60], ecx
IN0009: 000045 mov      dword ptr [rbx+56], ecx
IN000a: 000048 mov      rcx, 0xD1FFAB1E
IN000b: 000052 call     CORINFO_HELP_NEWSFAST
IN000c: 000057 mov      rdi, rax
IN000d: 00005A mov      rcx, 0xD1FFAB1E
IN000e: 000064 call     CORINFO_HELP_NEWSFAST
IN000f: 000069 mov      dword ptr [rax+52], 0xD1FFAB1E
IN0010: 000070 lea      rcx, bword ptr [rdi+8]
IN0011: 000074 mov      rdx, rax
IN0012: 000077 call     CORINFO_HELP_ASSIGN_REF
IN0013: 00007C lea      rcx, bword ptr [rbx+24]
IN0014: 000080 mov      rdx, rdi
IN0015: 000083 call     CORINFO_HELP_ASSIGN_REF
IN0016: 000088 mov      rcx, 0xD1FFAB1E
IN0017: 000092 call     CORINFO_HELP_NEWSFAST
IN0018: 000097 mov      rdi, rax
IN0019: 00009A mov      rcx, 0xD1FFAB1E
IN001a: 0000A4 mov      edx, 14
IN001b: 0000A9 call     CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS
IN001c: 0000AE mov      rdx, 0xD1FFAB1E
IN001d: 0000B8 mov      rdx, gword ptr [rdx]
IN001e: 0000BB lea      rcx, bword ptr [rdi+8]
IN001f: 0000BF call     CORINFO_HELP_ASSIGN_REF
IN0020: 0000C4 lea      rcx, bword ptr [rbx+8]
IN0021: 0000C8 mov      rdx, rdi
IN0022: 0000CB call     CORINFO_HELP_ASSIGN_REF
IN0023: 0000D0 xor      rcx, rcx
IN0024: 0000D2 mov      gword ptr [rbx+16], rcx
IN0025: 0000D6 mov      rcx, 0xD1FFAB1E
IN0026: 0000E0 call     CORINFO_HELP_NEWSFAST
IN0027: 0000E5 mov      rdi, rax
IN0028: 0000E8 mov      rcx, rdi
IN0029: 0000EB xor      rdx, rdx
IN002a: 0000ED call     System.Collections.Generic.HashSet`1[__Canon][System.__Canon]:.ctor(System.Collections.Generic.IEqualityComparer`1[__Canon]):this
IN002b: 0000F2 lea      rcx, bword ptr [rbx+40]
IN002c: 0000F6 mov      rdx, rdi
IN002d: 0000F9 call     CORINFO_HELP_ASSIGN_REF
IN002e: 0000FE call     System.Diagnostics.Process:GetCurrentProcess():System.Diagnostics.Process
IN002f: 000103 mov      rdi, rax
IN0030: 000106 cmp      dword ptr [rdi], edi
IN0031: 000108 mov      rcx, rdi
IN0032: 00010B mov      edx, 3
IN0033: 000110 call     System.Diagnostics.Process:EnsureState(int):this
IN0034: 000115 mov      ecx, dword ptr [rdi+200]
IN0035: 00011B call     System.Diagnostics.NtProcessManager:GetFirstModule(int):System.Diagnostics.ProcessModule
IN0036: 000120 mov      rdi, gword ptr [rax+40]
IN0037: 000124 mov      dword ptr [V11+0x20 rsp+20H], 5
IN0038: 00012C mov      r9d, dword ptr [rdi+8]
IN0039: 000130 mov      rdx, 0xD1FFAB1E
IN003a: 00013A mov      rdx, gword ptr [rdx]
IN003b: 00013D mov      rcx, rdi
IN003c: 000140 xor      r8d, r8d
IN003d: 000143 call     System.String:IndexOf(System.String,int,int,int):int:this
IN003e: 000148 mov      r14d, eax
IN003f: 00014B not      r14d

G_M55048_IG03:        ; offs=00014EH, size=002EH, bbWeight=1    PerfScore 12.50, extend

IN0040: 00014E shr      r14d, 31
IN0041: 000152 call     System.Environment:GetCommandLineArgs():System.String[]
IN0042: 000157 cmp      dword ptr [rax+8], 0
IN0043: 00015B jbe      G_M55048_IG19
IN0044: 000161 mov      r15, gword ptr [rax+16]
IN0045: 000165 mov      rcx, rsi
IN0046: 000168 mov      r11, 0xD1FFAB1E
IN0047: 000172 call     [System.Collections.Generic.IEnumerable`1[__Canon][System.__Canon]:GetEnumerator():System.Collections.Generic.IEnumerator`1[__Canon]:this]
IN0048: 000178 mov      gword ptr [V06 rbp-40H], rax

G_M55048_IG04:        ; offs=00017CH, size=001CH, bbWeight=1    PerfScore 5.50, gcVars=0000000000001000 {V06}, gcrefRegs=00008088 {rbx rdi r15}, byrefRegs=00000000 {}, gcvars, byref

IN0049: 00017C mov      rcx, gword ptr [V06 rbp-40H]
IN004a: 000180 mov      r11, 0xD1FFAB1E
IN004b: 00018A call     [System.Collections.IEnumerator:MoveNext():bool:this]
IN004c: 000190 test     eax, eax
IN004d: 000192 je       G_M55048_IG11

G_M55048_IG05:        ; offs=000198H, size=003BH, bbWeight=4    PerfScore 36.00, gcrefRegs=00008088 {rbx rdi r15}, byrefRegs=00000000 {}, byref, isz

IN004e: 000198 mov      rcx, gword ptr [V06 rbp-40H]
IN004f: 00019C mov      r11, 0xD1FFAB1E
IN0050: 0001A6 call     [System.Collections.Generic.IEnumerator`1[__Canon][System.__Canon]:get_Current():System.__Canon:this]
IN0051: 0001AC mov      rsi, rax
IN0052: 0001AF mov      rcx, 0xD1FFAB1E
IN0053: 0001B9 call     CORINFO_HELP_NEWSFAST
IN0054: 0001BE mov      r12, rax
IN0055: 0001C1 lea      rcx, bword ptr [r12+8]
IN0056: 0001C6 mov      rdx, rdi
IN0057: 0001C9 call     CORINFO_HELP_ASSIGN_REF
IN0058: 0001CE test     r14d, r14d
IN0059: 0001D1 jne      SHORT G_M55048_IG07

G_M55048_IG06:        ; offs=0001D3H, size=0008H, bbWeight=2    PerfScore 5.00, gcrefRegs=000090C8 {rbx rsi rdi r12 r15}, byrefRegs=00000000 {}, byref, isz

IN005a: 0001D3 mov      r13, r12
IN005b: 0001D6 mov      rdx, rsi
IN005c: 0001D9 jmp      SHORT G_M55048_IG08

G_M55048_IG07:        ; offs=0001DBH, size=001EH, bbWeight=2    PerfScore 8.50, gcrefRegs=000090C8 {rbx rsi rdi r12 r15}, byrefRegs=00000000 {}, byref

IN005d: 0001DB mov      r13, r12
IN005e: 0001DE mov      rdx, 0xD1FFAB1E
IN005f: 0001E8 mov      rdx, gword ptr [rdx]
IN0060: 0001EB mov      rcx, r15
IN0061: 0001EE mov      r8, rsi
IN0062: 0001F1 call     System.String:Concat(System.String,System.String,System.String):System.String
IN0063: 0001F6 mov      rdx, rax

G_M55048_IG08:        ; offs=0001F9H, size=001FH, bbWeight=4    PerfScore 31.00, gcrefRegs=0000B08C {rdx rbx rdi r12 r13 r15}, byrefRegs=00000000 {}, byref, isz

IN0064: 0001F9 lea      rcx, bword ptr [r13+16]
IN0065: 0001FD call     CORINFO_HELP_ASSIGN_REF
IN0066: 000202 mov      byte  ptr [r12+130], 0
IN0067: 00020B mov      rsi, gword ptr [rbx+8]
IN0068: 00020F mov      r13, gword ptr [rbx+48]
IN0069: 000213 test     r13, r13
IN006a: 000216 jne      SHORT G_M55048_IG10

G_M55048_IG09:        ; offs=000218H, size=0038H, bbWeight=2    PerfScore 12.50, gcrefRegs=000090C8 {rbx rsi rdi r12 r15}, byrefRegs=00000000 {}, byref

IN006b: 000218 mov      rcx, 0xD1FFAB1E
IN006c: 000222 call     CORINFO_HELP_NEWSFAST
IN006d: 000227 mov      r13, rax
IN006e: 00022A lea      rcx, bword ptr [r13+8]
IN006f: 00022E mov      rdx, rbx
IN0070: 000231 call     CORINFO_HELP_ASSIGN_REF
IN0071: 000236 mov      rdx, 0xD1FFAB1E
IN0072: 000240 mov      qword ptr [r13+24], rdx
IN0073: 000244 lea      rcx, bword ptr [rbx+48]
IN0074: 000248 mov      rdx, r13
IN0075: 00024B call     CORINFO_HELP_ASSIGN_REF

G_M55048_IG10:        ; offs=000250H, size=0065H, bbWeight=4    PerfScore 67.00, gcrefRegs=0000B0C8 {rbx rsi rdi r12 r13 r15}, byrefRegs=00000000 {}, byref

IN0076: 000250 mov      rcx, 0xD1FFAB1E
IN0077: 00025A call     CORINFO_HELP_NEWSFAST
IN0078: 00025F mov      gword ptr [V27 rbp-48H], rax
IN0079: 000263 lea      rcx, bword ptr [rax+8]
IN007a: 000267 mov      rdx, rbx
IN007b: 00026A call     CORINFO_HELP_ASSIGN_REF
IN007c: 00026F mov      rcx, 0xD1FFAB1E
IN007d: 000279 mov      r8, gword ptr [V27 rbp-48H]
IN007e: 00027D mov      qword ptr [r8+24], rcx
IN007f: 000281 mov      rcx, r12
IN0080: 000284 mov      rdx, r13
IN0081: 000287 call     SolutionAnalyzer.IPC:CreateSession(System.Diagnostics.ProcessStartInfo,System.Action`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.Action`1[[System.Diagnostics.Process, System.Diagnostics.Process, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a]]):System.Diagnostics.Process
IN0082: 00028C mov      rdx, rax
IN0083: 00028F mov      rcx, rsi
IN0084: 000292 cmp      dword ptr [rcx], ecx
IN0085: 000294 call     System.Collections.Generic.Queue`1[__Canon][System.__Canon]:Enqueue(System.__Canon):this
IN0086: 000299 mov      rcx, gword ptr [V06 rbp-40H]
IN0087: 00029D mov      r11, 0xD1FFAB1E
IN0088: 0002A7 call     [System.Collections.IEnumerator:MoveNext():bool:this]
IN0089: 0002AD test     eax, eax
IN008a: 0002AF jne      G_M55048_IG05

G_M55048_IG11:        ; offs=0002B5H, size=0071H, bbWeight=1    PerfScore 22.75, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref, isz

IN008b: 0002B5 mov      rcx, gword ptr [V06 rbp-40H]
IN008c: 0002B9 mov      r11, 0xD1FFAB1E
IN008d: 0002C3 call     [System.IDisposable:Dispose():this]
IN008e: 0002C9 mov      rcx, gword ptr [rbx+8]
IN008f: 0002CD mov      ecx, dword ptr [rcx+24]
IN0090: 0002D0 mov      dword ptr [rbx+60], ecx
IN0091: 0002D3 mov      rcx, 0xD1FFAB1E
IN0092: 0002DD call     CORINFO_HELP_NEWSFAST
IN0093: 0002E2 mov      rsi, rax
IN0094: 0002E5 mov      edi, dword ptr [rbx+60]
IN0095: 0002E8 mov      rcx, 0xD1FFAB1E
IN0096: 0002F2 call     CORINFO_HELP_NEWSFAST
IN0097: 0002F7 mov      r14, rax
IN0098: 0002FA mov      rcx, r14
IN0099: 0002FD xor      edx, edx
IN009a: 0002FF xor      r8, r8
IN009b: 000302 call     System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:.ctor(int,System.Collections.Generic.IEqualityComparer`1[__Canon]):this
IN009c: 000307 lea      rcx, bword ptr [rsi+8]
IN009d: 00030B mov      rdx, r14
IN009e: 00030E call     CORINFO_HELP_ASSIGN_REF
IN009f: 000313 mov      dword ptr [rsi+16], edi
IN00a0: 000316 lea      rcx, bword ptr [rbx+16]
IN00a1: 00031A mov      rdx, rsi
IN00a2: 00031D call     CORINFO_HELP_ASSIGN_REF
IN00a3: 000322 xor      esi, esi
IN00a4: 000324 jmp      SHORT G_M55048_IG13

G_M55048_IG12:        ; offs=000326H, size=000AH, bbWeight=2    PerfScore 3.00, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref

IN00a5: 000326 mov      rcx, rbx
IN00a6: 000329 call     <>c__DisplayClass5_0:<ExecuteAnalyzers>g__StartNextAnalyzer|0():this
IN00a7: 00032E inc      esi

G_M55048_IG13:        ; offs=000330H, size=0008H, bbWeight=8    PerfScore 26.00, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref, isz

IN00a8: 000330 mov      ecx, dword ptr [rbx+60]
IN00a9: 000333 cmp      ecx, 8
IN00aa: 000336 jge      SHORT G_M55048_IG15

G_M55048_IG14:        ; offs=000338H, size=0002H, bbWeight=2    PerfScore 4.00, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref, isz

IN00ab: 000338 jmp      SHORT G_M55048_IG16

G_M55048_IG15:        ; offs=00033AH, size=0005H, bbWeight=2    PerfScore 0.50, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref

IN00ac: 00033A mov      ecx, 8

G_M55048_IG16:        ; offs=00033FH, size=0004H, bbWeight=8    PerfScore 10.00, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref, isz

IN00ad: 00033F cmp      esi, ecx
IN00ae: 000341 jl       SHORT G_M55048_IG12

G_M55048_IG17:        ; offs=000343H, size=0008H, bbWeight=1    PerfScore 4.00, gcrefRegs=00000008 {rbx}, byrefRegs=00000000 {}, byref

IN00af: 000343 mov      rax, gword ptr [rbx+24]
IN00b0: 000347 mov      rax, gword ptr [rax+8]

G_M55048_IG18:        ; offs=00034BH, size=0011H, bbWeight=1    PerfScore 5.50, epilog, nogc, extend

IN00c6: 00034B lea      rsp, [rbp-38H]
IN00c7: 00034F pop      rbx
IN00c8: 000350 pop      rsi
IN00c9: 000351 pop      rdi
IN00ca: 000352 pop      r12
IN00cb: 000354 pop      r13
IN00cc: 000356 pop      r14
IN00cd: 000358 pop      r15
IN00ce: 00035A pop      rbp
IN00cf: 00035B ret      

G_M55048_IG19:        ; offs=00035CH, size=0006H, bbWeight=0    PerfScore 0.00, gcVars=0000000000000000 {}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, gcvars, byref

IN00b1: 00035C call     CORINFO_HELP_RNGCHKFAIL
IN00b2: 000361 int3     

G_M55048_IG20:        ; func=01, offs=000362H, size=0020H, bbWeight=0    PerfScore 0.00, gcVars=0000000000001000 {V06}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, gcvars, byref, funclet prolog, nogc

IN00d0: 000362 push     rbp
IN00d1: 000363 push     r15
IN00d2: 000365 push     r14
IN00d3: 000367 push     r13
IN00d4: 000369 push     r12
IN00d5: 00036B push     rdi
IN00d6: 00036C push     rsi
IN00d7: 00036D push     rbx
IN00d8: 00036E sub      rsp, 56
IN00d9: 000372 mov      rbp, qword ptr [rcx+40]
IN00da: 000376 mov      qword ptr [rsp+28H], rbp
IN00db: 00037B lea      rbp, [rbp+80H]

G_M55048_IG21:        ; offs=000382H, size=001BH, bbWeight=0    PerfScore 0.00, gcVars=0000000000001000 {V06}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, gcvars, byref, isz

IN00b3: 000382 cmp      gword ptr [V06 rbp-40H], 0
IN00b4: 000387 je       SHORT G_M55048_IG22
IN00b5: 000389 mov      rcx, gword ptr [V06 rbp-40H]
IN00b6: 00038D mov      r11, 0xD1FFAB1E
IN00b7: 000397 call     [System.IDisposable:Dispose():this]

G_M55048_IG22:        ; offs=00039DH, size=0001H, bbWeight=0    PerfScore 0.00, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref

IN00b8: 00039D nop      

G_M55048_IG23:        ; offs=00039EH, size=0011H, bbWeight=0    PerfScore 0.00, funclet epilog, nogc, extend

IN00dc: 00039E add      rsp, 56
IN00dd: 0003A2 pop      rbx
IN00de: 0003A3 pop      rsi
IN00df: 0003A4 pop      rdi
IN00e0: 0003A5 pop      r12
IN00e1: 0003A7 pop      r13
IN00e2: 0003A9 pop      r14
IN00e3: 0003AB pop      r15
IN00e4: 0003AD pop      rbp
IN00e5: 0003AE ret      


*************** Finishing PHASE Emit code

*************** Starting PHASE Emit GC+EH tables
Unwind Info:
  >> Start offset   : 0x000000 (not in unwind data)
  >>   End offset   : 0xd1ffab1e (not in unwind data)
  Version           : 1
  Flags             : 0x00
  SizeOfProlog      : 0x10
  CountOfUnwindCodes: 9
  FrameRegister     : none (0)
  FrameOffset       : N/A (no FrameRegister) (Value=0)
  UnwindCodes       :
    CodeOffset: 0x10 UnwindOp: UWOP_ALLOC_SMALL (2)     OpInfo: 8 * 8 + 8 = 72 = 0x48
    CodeOffset: 0x0C UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: rbx (3)
    CodeOffset: 0x0B UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: rsi (6)
    CodeOffset: 0x0A UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: rdi (7)
    CodeOffset: 0x09 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: r12 (12)
    CodeOffset: 0x07 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: r13 (13)
    CodeOffset: 0x05 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: r14 (14)
    CodeOffset: 0x03 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: r15 (15)
    CodeOffset: 0x01 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: rbp (5)
allocUnwindInfo(pHotCode=0x00000000D1FFAB1E, pColdCode=0x0000000000000000, startOffset=0x0, endOffset=0x362, unwindSize=0x16, pUnwindBlock=0x00000000D1FFAB1E, funKind=0 (main function))
Unwind Info:
  >> Start offset   : 0xd1ffab1e (not in unwind data)
  >>   End offset   : 0xd1ffab1e (not in unwind data)
  Version           : 1
  Flags             : 0x00
  SizeOfProlog      : 0x10
  CountOfUnwindCodes: 9
  FrameRegister     : none (0)
  FrameOffset       : N/A (no FrameRegister) (Value=0)
  UnwindCodes       :
    CodeOffset: 0x10 UnwindOp: UWOP_ALLOC_SMALL (2)     OpInfo: 6 * 8 + 8 = 56 = 0x38
    CodeOffset: 0x0C UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: rbx (3)
    CodeOffset: 0x0B UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: rsi (6)
    CodeOffset: 0x0A UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: rdi (7)
    CodeOffset: 0x09 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: r12 (12)
    CodeOffset: 0x07 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: r13 (13)
    CodeOffset: 0x05 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: r14 (14)
    CodeOffset: 0x03 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: r15 (15)
    CodeOffset: 0x01 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: rbp (5)
allocUnwindInfo(pHotCode=0x00000000D1FFAB1E, pColdCode=0x0000000000000000, startOffset=0x362, endOffset=0x3af, unwindSize=0x16, pUnwindBlock=0x00000000D1FFAB1E, funKind=1 (handler))
*************** In genIPmappingGen()
IP mapping count : 37
IL offs PROLOG : 0x00000000 ( STACK_EMPTY )
IL offs 0x0000 : 0x00000022 ( STACK_EMPTY )
IL offs 0x0006 : 0x00000034 ( STACK_EMPTY )
IL offs 0x000D : 0x00000040 ( STACK_EMPTY )
IL offs 0x0014 : 0x00000045 ( STACK_EMPTY )
IL offs 0x001B : 0x00000048 ( STACK_EMPTY )
IL offs 0x0021 : 0x0000007C
IL offs 0x0026 : 0x00000088 ( STACK_EMPTY )
IL offs 0x002C : 0x000000C4
IL offs 0x0031 : 0x000000D0 ( STACK_EMPTY )
IL offs 0x0038 : 0x000000D6 ( STACK_EMPTY )
IL offs 0x003E : 0x000000F2
IL offs 0x0068 : 0x00000165 ( STACK_EMPTY )
IL offs 0x00E9 : 0x0000017C ( STACK_EMPTY )
IL offs 0x0072 : 0x00000198 ( STACK_EMPTY )
IL offs 0x007B : 0x000001AF ( STACK_EMPTY )
IL offs 0x0080 : 0x000001C1
IL offs 0x0087 : 0x000001CE
IL offs 0x00A1 : 0x00000202
IL offs 0x00AA : 0x0000020B ( STACK_EMPTY )
IL offs 0x00DF : 0x00000281
IL offs 0x00E9 : 0x00000299 ( STACK_EMPTY )
IL offs 0x0100 : 0x000002C9 ( STACK_EMPTY )
IL offs 0x0111 : 0x000002D3 ( STACK_EMPTY )
IL offs 0x011D : 0x00000316
IL offs 0x0122 : 0x00000322 ( STACK_EMPTY )
IL offs 0x0127 : 0x00000326 ( STACK_EMPTY )
IL offs 0x012D : 0x0000032E ( STACK_EMPTY )
IL offs NO_MAP : 0x00000338 ( STACK_EMPTY )
IL offs 0x0147 : 0x00000343 ( STACK_EMPTY )
IL offs EPILOG : 0x0000034B ( STACK_EMPTY )
IL offs NO_MAP : 0x0000035C ( STACK_EMPTY )
IL offs PROLOG : 0x00000362 ( STACK_EMPTY )
IL offs 0x00F4 : 0x00000382 ( STACK_EMPTY )
IL offs 0x00F8 : 0x00000389 ( STACK_EMPTY )
IL offs 0x00FF : 0x0000039D ( STACK_EMPTY )
IL offs EPILOG : 0x0000039E ( STACK_EMPTY )

*************** In genSetScopeInfo()
VarLocInfo count is 13
; Variable debug info: 13 live range(s), 9 var(s) for method SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task
  0(   UNKNOWN) : From 00000000h to 00000022h, in rcx
  1(   UNKNOWN) : From 00000000h to 00000022h, in rdx
  1(   UNKNOWN) : From 00000022h to 00000038h, in rdi
  0(   UNKNOWN) : From 00000022h to 00000165h, in rsi
  7(   UNKNOWN) : From 000001D3h to 000001D6h, in rsi
  7(   UNKNOWN) : From 000001DBh to 000001EEh, in rsi
  3(   UNKNOWN) : From 0000017Ch to 000002B5h, in rdi
  4(   UNKNOWN) : From 0000017Ch to 000002B5h, in r14
  5(   UNKNOWN) : From 0000017Ch to 000002B5h, in r15
  6(   UNKNOWN) : From 0000017Ch to 000002B9h, in rbp[-64] (1 slot)
 10(   UNKNOWN) : From 00000326h to 0000032Eh, in rsi
 10(   UNKNOWN) : From 00000330h to 00000343h, in rsi
  2(   UNKNOWN) : From 0000017Ch to 00000343h, in rbx
*************** EH table for SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task
1 EH table entries, 0 duplicate clauses, 0 cloned finallys, 1 total EH entries reported to VM
setEHcount(cEH=1)
EH#0: try [G_M55048_IG04..G_M55048_IG11) handled by [G_M55048_IG20..END) (fault)
*************** In gcInfoBlockHdrSave()
Set code length to 943.
Set ReturnKind to Object.
Set stack base register to rbp.
Set PSPSym stack slot to 40.
Set WantsReportOnlyLeaf.
Set Outgoing stack arg area size to 40.
Stack slot id for offset -64 (-0x40) (frame) = 0.
Stack slot id for offset -72 (-0x48) (frame) = 1.
Register slot id for reg rsi = 2.
Register slot id for reg rdi = 3.
Register slot id for reg rax = 4.
Register slot id for reg rbx = 5.
Register slot id for reg rcx (byref) = 6.
Register slot id for reg rdx = 7.
Register slot id for reg rcx = 8.
Register slot id for reg r15 = 9.
Register slot id for reg r12 = 10.
Register slot id for reg r13 = 11.
Register slot id for reg r8 = 12.
Register slot id for reg r14 = 13.
Set state of slot 0 at instr offset 0x17c to Live.
Set state of slot 0 at instr offset 0x2c3 to Dead.
Set state of slot 1 at instr offset 0x263 to Live.
Set state of slot 1 at instr offset 0x287 to Dead.
Set state of slot 0 at instr offset 0x362 to Live.
Set state of slot 0 at instr offset 0x397 to Dead.
Set state of slot 2 at instr offset 0x1f to Live.
Set state of slot 3 at instr offset 0x22 to Live.
Set state of slot 4 at instr offset 0x31 to Live.
Set state of slot 5 at instr offset 0x34 to Live.
Set state of slot 6 at instr offset 0x38 to Live.
Set state of slot 7 at instr offset 0x3b to Live.
Set state of slot 4 at instr offset 0x40 to Dead.
Set state of slot 7 at instr offset 0x40 to Dead.
Set state of slot 3 at instr offset 0x40 to Dead.
Set state of slot 6 at instr offset 0x40 to Dead.
Set state of slot 4 at instr offset 0x57 to Live.
Set state of slot 3 at instr offset 0x5a to Live.
Set state of slot 6 at instr offset 0x74 to Live.
Set state of slot 7 at instr offset 0x77 to Live.
Set state of slot 4 at instr offset 0x7c to Dead.
Set state of slot 7 at instr offset 0x7c to Dead.
Set state of slot 6 at instr offset 0x7c to Dead.
Set state of slot 6 at instr offset 0x80 to Live.
Set state of slot 7 at instr offset 0x83 to Live.
Set state of slot 7 at instr offset 0x88 to Dead.
Set state of slot 3 at instr offset 0x88 to Dead.
Set state of slot 6 at instr offset 0x88 to Dead.
Set state of slot 4 at instr offset 0x97 to Live.
Set state of slot 3 at instr offset 0x9a to Live.
Set state of slot 4 at instr offset 0xae to Dead.
Set state of slot 7 at instr offset 0xbb to Live.
Set state of slot 6 at instr offset 0xbf to Live.
Set state of slot 7 at instr offset 0xc4 to Dead.
Set state of slot 6 at instr offset 0xc4 to Dead.
Set state of slot 6 at instr offset 0xc8 to Live.
Set state of slot 7 at instr offset 0xcb to Live.
Set state of slot 7 at instr offset 0xd0 to Dead.
Set state of slot 3 at instr offset 0xd0 to Dead.
Set state of slot 6 at instr offset 0xd0 to Dead.
Set state of slot 8 at instr offset 0xd2 to Live.
Set state of slot 8 at instr offset 0xe0 to Dead.
Set state of slot 4 at instr offset 0xe5 to Live.
Set state of slot 3 at instr offset 0xe8 to Live.
Set state of slot 8 at instr offset 0xeb to Live.
Set state of slot 7 at instr offset 0xed to Live.
Set state of slot 4 at instr offset 0xf2 to Dead.
Set state of slot 8 at instr offset 0xf2 to Dead.
Set state of slot 7 at instr offset 0xf2 to Dead.
Set state of slot 6 at instr offset 0xf6 to Live.
Set state of slot 7 at instr offset 0xf9 to Live.
Set state of slot 7 at instr offset 0xfe to Dead.
Set state of slot 3 at instr offset 0xfe to Dead.
Set state of slot 6 at instr offset 0xfe to Dead.
Set state of slot 4 at instr offset 0x103 to Live.
Set state of slot 3 at instr offset 0x106 to Live.
Set state of slot 8 at instr offset 0x10b to Live.
Set state of slot 4 at instr offset 0x115 to Dead.
Set state of slot 8 at instr offset 0x115 to Dead.
Set state of slot 4 at instr offset 0x120 to Live.
Set state of slot 3 at instr offset 0x120 to Dead.
Set state of slot 3 at instr offset 0x124 to Live.
Set state of slot 7 at instr offset 0x13d to Live.
Set state of slot 8 at instr offset 0x140 to Live.
Set state of slot 4 at instr offset 0x148 to Dead.
Set state of slot 8 at instr offset 0x148 to Dead.
Set state of slot 7 at instr offset 0x148 to Dead.
Set state of slot 4 at instr offset 0x157 to Live.
Set state of slot 9 at instr offset 0x165 to Live.
Set state of slot 8 at instr offset 0x168 to Live.
Set state of slot 8 at instr offset 0x178 to Dead.
Set state of slot 2 at instr offset 0x178 to Dead.
Set state of slot 4 at instr offset 0x17c to Dead.
Set state of slot 8 at instr offset 0x180 to Live.
Set state of slot 8 at instr offset 0x190 to Dead.
Set state of slot 8 at instr offset 0x19c to Live.
Set state of slot 4 at instr offset 0x1ac to Live.
Set state of slot 8 at instr offset 0x1ac to Dead.
Set state of slot 2 at instr offset 0x1af to Live.
Set state of slot 10 at instr offset 0x1c1 to Live.
Set state of slot 6 at instr offset 0x1c6 to Live.
Set state of slot 7 at instr offset 0x1c9 to Live.
Set state of slot 4 at instr offset 0x1ce to Dead.
Set state of slot 7 at instr offset 0x1ce to Dead.
Set state of slot 6 at instr offset 0x1ce to Dead.
Set state of slot 11 at instr offset 0x1d6 to Live.
Set state of slot 7 at instr offset 0x1d9 to Live.
Set state of slot 7 at instr offset 0x1db to Dead.
Set state of slot 11 at instr offset 0x1db to Dead.
Set state of slot 11 at instr offset 0x1de to Live.
Set state of slot 7 at instr offset 0x1eb to Live.
Set state of slot 8 at instr offset 0x1ee to Live.
Set state of slot 12 at instr offset 0x1f1 to Live.
Set state of slot 4 at instr offset 0x1f6 to Live.
Set state of slot 8 at instr offset 0x1f6 to Dead.
Set state of slot 7 at instr offset 0x1f6 to Dead.
Set state of slot 2 at instr offset 0x1f6 to Dead.
Set state of slot 12 at instr offset 0x1f6 to Dead.
Set state of slot 7 at instr offset 0x1f9 to Live.
Set state of slot 4 at instr offset 0x1f9 to Dead.
Set state of slot 6 at instr offset 0x1fd to Live.
Set state of slot 7 at instr offset 0x202 to Dead.
Set state of slot 11 at instr offset 0x202 to Dead.
Set state of slot 6 at instr offset 0x202 to Dead.
Set state of slot 2 at instr offset 0x20f to Live.
Set state of slot 11 at instr offset 0x213 to Live.
Set state of slot 11 at instr offset 0x218 to Dead.
Set state of slot 4 at instr offset 0x227 to Live.
Set state of slot 11 at instr offset 0x22a to Live.
Set state of slot 6 at instr offset 0x22e to Live.
Set state of slot 7 at instr offset 0x231 to Live.
Set state of slot 4 at instr offset 0x236 to Dead.
Set state of slot 7 at instr offset 0x236 to Dead.
Set state of slot 6 at instr offset 0x236 to Dead.
Set state of slot 6 at instr offset 0x248 to Live.
Set state of slot 7 at instr offset 0x24b to Live.
Set state of slot 7 at instr offset 0x250 to Dead.
Set state of slot 6 at instr offset 0x250 to Dead.
Set state of slot 4 at instr offset 0x25f to Live.
Set state of slot 6 at instr offset 0x267 to Live.
Set state of slot 7 at instr offset 0x26a to Live.
Set state of slot 4 at instr offset 0x26f to Dead.
Set state of slot 7 at instr offset 0x26f to Dead.
Set state of slot 6 at instr offset 0x26f to Dead.
Set state of slot 12 at instr offset 0x27d to Live.
Set state of slot 8 at instr offset 0x284 to Live.
Set state of slot 7 at instr offset 0x287 to Live.
Set state of slot 4 at instr offset 0x28c to Live.
Set state of slot 8 at instr offset 0x28c to Dead.
Set state of slot 7 at instr offset 0x28c to Dead.
Set state of slot 12 at instr offset 0x28c to Dead.
Set state of slot 10 at instr offset 0x28c to Dead.
Set state of slot 11 at instr offset 0x28c to Dead.
Set state of slot 7 at instr offset 0x28f to Live.
Set state of slot 8 at instr offset 0x292 to Live.
Set state of slot 4 at instr offset 0x299 to Dead.
Set state of slot 8 at instr offset 0x299 to Dead.
Set state of slot 7 at instr offset 0x299 to Dead.
Set state of slot 2 at instr offset 0x299 to Dead.
Set state of slot 8 at instr offset 0x29d to Live.
Set state of slot 8 at instr offset 0x2ad to Dead.
Set state of slot 3 at instr offset 0x2b5 to Dead.
Set state of slot 9 at instr offset 0x2b5 to Dead.
Set state of slot 8 at instr offset 0x2b9 to Live.
Set state of slot 8 at instr offset 0x2c9 to Dead.
Set state of slot 8 at instr offset 0x2cd to Live.
Set state of slot 8 at instr offset 0x2d0 to Dead.
Set state of slot 4 at instr offset 0x2e2 to Live.
Set state of slot 2 at instr offset 0x2e5 to Live.
Set state of slot 13 at instr offset 0x2fa to Live.
Set state of slot 8 at instr offset 0x2fd to Live.
Set state of slot 12 at instr offset 0x302 to Live.
Set state of slot 4 at instr offset 0x307 to Dead.
Set state of slot 8 at instr offset 0x307 to Dead.
Set state of slot 12 at instr offset 0x307 to Dead.
Set state of slot 6 at instr offset 0x30b to Live.
Set state of slot 7 at instr offset 0x30e to Live.
Set state of slot 7 at instr offset 0x313 to Dead.
Set state of slot 13 at instr offset 0x313 to Dead.
Set state of slot 6 at instr offset 0x313 to Dead.
Set state of slot 6 at instr offset 0x31a to Live.
Set state of slot 7 at instr offset 0x31d to Live.
Set state of slot 7 at instr offset 0x322 to Dead.
Set state of slot 2 at instr offset 0x322 to Dead.
Set state of slot 6 at instr offset 0x322 to Dead.
Set state of slot 8 at instr offset 0x329 to Live.
Set state of slot 8 at instr offset 0x32e to Dead.
Set state of slot 4 at instr offset 0x347 to Live.
Set state of slot 4 at instr offset 0x35c to Dead.
Set state of slot 5 at instr offset 0x35c to Dead.
Set state of slot 8 at instr offset 0x38d to Live.
Set state of slot 8 at instr offset 0x39d to Dead.
Defining interruptible range: [0x22, 0x34b).
Defining interruptible range: [0x35c, 0x362).
Defining interruptible range: [0x382, 0x39e).

*************** Finishing PHASE Emit GC+EH tables
Method code size: 943

Allocations for SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task (MethodHash=216328f7)
count:      10116, size:     665989, max =       6240
allocateMemory:     720896, nraUsed:     678760

Alloc'd bytes by kind:
                  kind |       size |     pct
  ---------------------+------------+--------
         AssertionProp |       6460 |   0.97%
               ASTNode |     100512 |  15.09%
              InstDesc |      20248 |   3.04%
              ImpStack |       1032 |   0.15%
            BasicBlock |      19536 |   2.93%
             fgArgInfo |       2944 |   0.44%
       fgArgInfoPtrArr |        464 |   0.07%
              FlowList |       3360 |   0.50%
     TreeStatementList |         64 |   0.01%
               SiScope |       1152 |   0.17%
       DominatorMemory |       1968 |   0.30%
                  LSRA |       7160 |   1.08%
         LSRA_Interval |      13600 |   2.04%
      LSRA_RefPosition |      62272 |   9.35%
          Reachability |         16 |   0.00%
                   SSA |       9400 |   1.41%
           ValueNumber |      38745 |   5.82%
              LvaTable |      13136 |   1.97%
            UnwindInfo |         32 |   0.00%
                hashBv |        960 |   0.14%
                bitset |       1392 |   0.21%
          FixedBitVect |        332 |   0.05%
               Generic |      16394 |   2.46%
   LocalAddressVisitor |        512 |   0.08%
         FieldSeqStore |       1888 |   0.28%
    ZeroOffsetFieldMap |        960 |   0.14%
          ArrayInfoMap |        384 |   0.06%
          MemoryPhiArg |        448 |   0.07%
                   CSE |       3280 |   0.49%
                    GC |      12712 |   1.91%
       CorTailCallInfo |          0 |   0.00%
              Inlining |      26128 |   3.92%
            ArrayStack |        512 |   0.08%
             DebugInfo |       1656 |   0.25%
             DebugOnly |     279877 |  42.02%
               Codegen |       1176 |   0.18%
               LoopOpt |       2560 |   0.38%
             LoopHoist |        664 |   0.10%
               Unknown |       4437 |   0.67%
            RangeCheck |        456 |   0.07%
              CopyProp |       5880 |   0.88%
           SideEffects |          0 |   0.00%
       ObjectAllocator |          0 |   0.00%
    VariableLiveRanges |          0 |   0.00%
           ClassLayout |          0 |   0.00%
       TailMergeThrows |        200 |   0.03%
             EarlyProp |        120 |   0.02%
              ZeroInit |        960 |   0.14%

****** DONE compiling SolutionAnalyzer.Results:ExecuteAnalyzers(System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],System.String):System.Threading.Tasks.Task