****** START compiling ThrowawayTesting.Program:Get():System.Threading.Tasks.Task`1[[System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]:this (MethodHash=ddc6e42d)
Generating code for Windows x64
OPTIONS: compCodeOpt = BLENDED_CODE
OPTIONS: compDbgCode = false
OPTIONS: compDbgInfo = true
OPTIONS: compDbgEnC  = false
OPTIONS: compProcedureSplitting   = false
OPTIONS: compProcedureSplittingEH = false
IL to import:
IL_0000  17                ldc.i4.1    
IL_0001  72 01 00 00 70    ldstr        0x70000001
IL_0006  73 0f 00 00 0a    newobj       0xA00000F
IL_000b  28 01 00 00 2b    call         0x2B000001
IL_0010  2a                ret         

lvaSetClass: setting class for V00 to (00000000D1FFAB1E) ThrowawayTesting.Program 
'this'    passed in register rcx

lvaGrabTemp returning 1 (V01 tmp0) (a long lifetime temp) called for OutgoingArgSpace.
; Initial local variable assignments
;
;  V00 this              ref  this class-hnd
;  V01 OutArgs        lclBlk <na>  "OutgoingArgSpace"
*************** In compInitDebuggingInfo() for ThrowawayTesting.Program:Get():System.Threading.Tasks.Task`1[[System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]:this
getVars() returned cVars = 0, extendOthers = true
info.compVarScopesCount = 1
    	VarNum 	LVNum 	      Name 	Beg 	End
 0: 	00h 	00h 	  V00 this 	000h   	011h
info.compStmtOffsetsCount    = 0
info.compStmtOffsetsImplicit = 0005h ( STACK_EMPTY CALL_SITE )
*************** In fgFindBasicBlocks() for ThrowawayTesting.Program:Get():System.Threading.Tasks.Task`1[[System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]:this
Jump targets:
  none
New Basic Block BB01 [0000] created.
BB01 [000..011)
IL Code Size,Instr   17,   5, Basic Block count   1, Local Variable Num,Ref count   2,  0 for method ThrowawayTesting.Program:Get():System.Threading.Tasks.Task`1[[System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]:this
OPTIONS: opts.MinOpts() == false
Basic block list for 'ThrowawayTesting.Program:Get():System.Threading.Tasks.Task`1[[System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]:this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Pre-import

*************** Finishing PHASE Pre-import

*************** Starting PHASE Importation
*************** In impImport() for ThrowawayTesting.Program:Get():System.Threading.Tasks.Task`1[[System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]:this

impImportBlockPending for BB01

Importing BB01 (PC=000) of 'ThrowawayTesting.Program:Get():System.Threading.Tasks.Task`1[[System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]:this'
    [ 0]   0 (0x000) ldc.i4.1 1
    [ 1]   1 (0x001) ldstr 70000001
    [ 2]   6 (0x006) newobj
lvaGrabTemp returning 2 (V02 tmp1) called for NewObj constructor temp.


STMT00000 (IL 0x000...  ???)
               [000004] IA----------              *  ASG       struct (init)
               [000002] D------N----              +--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> V02 tmp1         
               [000003] ------------              \--*  CNS_INT   int    0
 0A00000F
In Compiler::impImportCall: opcode is newobj, kind=0, callRetType is void, structSize is 0


STMT00001 (IL   ???...  ???)
               [000007] I-C-G-------              *  CALL      void   System.ValueTuple`2[Boolean,__Canon][System.Boolean,System.__Canon]..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000006] ------------ this in rcx  +--*  ADDR      byref 
               [000005] -------N----              |  \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> V02 tmp1         
               [000008] H----------- arg1         +--*  CNS_INT(h) long   0xd1ffab1e class
               [000009] ------------ arg2         +--*  PUTARG_TYPE bool  
               [000000] ------------              |  \--*  CNS_INT   int    1
               [000001] ------------ arg3         \--*  CNS_STR   ref   <string constant>

    [ 1]  11 (0x00b) call 2B000001 (Implicit Tail call: prefixFlags |= PREFIX_TAILCALL_IMPLICIT)
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0
Calling impNormStructVal on:
               [000010] ------------              *  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> V02 tmp1         
resulting tree:
               [000014] n-----------              *  OBJ       struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16>
               [000013] ------------              \--*  ADDR      byref 
               [000010] -------N----                 \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> V02 tmp1         

GTF_CALL_M_IMPLICIT_TAILCALL set for call [000011]


STMT00002 (IL 0x00B...  ???)
               [000011] I-C-G-------              *  CALL      ref    System.Threading.Tasks.Task.FromResult (exactContextHnd=0x00000000D1FFAB1E)
               [000012] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000014] n----------- arg1         \--*  OBJ       struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16>
               [000013] ------------                 \--*  ADDR      byref 
               [000010] -------N----                    \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> V02 tmp1         

    [ 1]  16 (0x010) ret

STMT00003 (IL   ???...  ???)
               [000016] --C---------              *  RETURN    ref   
               [000015] --C---------              \--*  RET_EXPR  ref   (inl return from call [000011])

*************** Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..011) (return), preds={} succs={}

***** BB01
STMT00000 (IL 0x000...0x010)
               [000004] IA----------              *  ASG       struct (init)
               [000002] D------N----              +--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> V02 tmp1         
               [000003] ------------              \--*  CNS_INT   int    0

***** BB01
STMT00001 (IL   ???...  ???)
               [000007] I-C-G-------              *  CALL      void   System.ValueTuple`2[Boolean,__Canon][System.Boolean,System.__Canon]..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000006] ------------ this in rcx  +--*  ADDR      byref 
               [000005] -------N----              |  \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> V02 tmp1         
               [000008] H----------- arg1         +--*  CNS_INT(h) long   0xd1ffab1e class
               [000009] ------------ arg2         +--*  PUTARG_TYPE bool  
               [000000] ------------              |  \--*  CNS_INT   int    1
               [000001] ------------ arg3         \--*  CNS_STR   ref   <string constant>

***** BB01
STMT00002 (IL 0x00B...  ???)
               [000011] I-C-G-------              *  CALL      ref    System.Threading.Tasks.Task.FromResult (exactContextHnd=0x00000000D1FFAB1E)
               [000012] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000014] n----------- arg1         \--*  OBJ       struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16>
               [000013] ------------                 \--*  ADDR      byref 
               [000010] -------N----                    \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> V02 tmp1         

***** BB01
STMT00003 (IL   ???...  ???)
               [000016] --C---------              *  RETURN    ref   
               [000015] --C---------              \--*  RET_EXPR  ref   (inl return from call [000011])

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Finishing PHASE Indirect call transform [no changes]

*************** Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Finishing PHASE Expand patchpoints [no changes]

*************** Starting PHASE Post-import

*************** Finishing PHASE Post-import

*************** Starting PHASE Morph - Init

New BlockSet epoch 1, # of blocks (including unused BB00): 2, bitset array size: 1 (short)

*************** In fgRemoveEmptyBlocks

*************** Finishing PHASE Morph - Init
*************** In fgDebugCheckBBlist

*************** Starting PHASE Morph - Inlining
Expanding INLINE_CANDIDATE in statement STMT00001 in BB01:
STMT00001 (IL   ???...  ???)
               [000007] I-C-G-------              *  CALL      void   System.ValueTuple`2[Boolean,__Canon][System.Boolean,System.__Canon]..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000006] ------------ this in rcx  +--*  ADDR      byref 
               [000005] -------N----              |  \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> V02 tmp1         
               [000008] H----------- arg1         +--*  CNS_INT(h) long   0xd1ffab1e class
               [000009] ------------ arg2         +--*  PUTARG_TYPE bool  
               [000000] ------------              |  \--*  CNS_INT   int    1
               [000001] ------------ arg3         \--*  CNS_STR   ref   <string constant>
thisArg: is a constant is byref to a struct local
               [000006] ------------              *  ADDR      byref 
               [000005] -------N----              \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> V02 tmp1         


Argument #1: is a constant
               [000000] ------------              *  CNS_INT   int    1


Argument #2: is a constant
               [000001] ------------              *  CNS_STR   ref   <string constant>


Folding operator with constant nodes into a constant:
               [000017] ------------              *  CAST      int <- bool <- int
               [000000] ------------              \--*  CNS_INT   int    1
Bashed to int constant:
               [000017] ------------              *  CNS_INT   int    1
INLINER: inlineInfo.tokenLookupContextHandle for System.ValueTuple`2[Boolean,__Canon][System.Boolean,System.__Canon]:.ctor(bool,System.__Canon):this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.ValueTuple`2[Boolean,__Canon][System.Boolean,System.__Canon]:.ctor(bool,System.__Canon):this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  03                ldarg.1     
IL_0002  7d 73 04 00 0a    stfld        0xA000473
IL_0007  02                ldarg.0     
IL_0008  04                ldarg.2     
IL_0009  7d 74 04 00 0a    stfld        0xA000474
IL_000e  2a                ret         

INLINER impTokenLookupContextHandle for System.ValueTuple`2[Boolean,__Canon][System.Boolean,System.__Canon]:.ctor(bool,System.__Canon):this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.ValueTuple`2[Boolean,__Canon][System.Boolean,System.__Canon]:.ctor(bool,System.__Canon):this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB02 [0001] created.
BB02 [000..00F)
Basic block list for 'System.ValueTuple`2[Boolean,__Canon][System.Boolean,System.__Canon]:.ctor(bool,System.__Canon):this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB02 [0001]  1                             1       [000..00F)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000007] Starting PHASE Pre-import

*************** Inline @[000007] Finishing PHASE Pre-import

*************** Inline @[000007] Starting PHASE Importation
*************** In impImport() for System.ValueTuple`2[Boolean,__Canon][System.Boolean,System.__Canon]:.ctor(bool,System.__Canon):this

impImportBlockPending for BB02

Importing BB02 (PC=000) of 'System.ValueTuple`2[Boolean,__Canon][System.Boolean,System.__Canon]:.ctor(bool,System.__Canon):this'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) ldarg.1
    [ 2]   2 (0x002) stfld 0A000473

               [000022] -A----------              *  ASG       bool  
               [000021] -------N----              +--*  FIELD     bool   Item1
               [000018] ------------              |  \--*  ADDR      byref 
               [000019] -------N----              |     \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> V02 tmp1         
               [000020] ------------              \--*  CNS_INT   int    1

    [ 0]   7 (0x007) ldarg.0
    [ 1]   8 (0x008) ldarg.2
    [ 2]   9 (0x009) stfld 0A000474

               [000027] -A----------              *  ASG       ref   
               [000026] -------N----              +--*  FIELD     ref    Item2
               [000023] ------------              |  \--*  ADDR      byref 
               [000024] -------N----              |     \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> V02 tmp1         
               [000025] ------------              \--*  CNS_STR   ref   <string constant>

    [ 0]  14 (0x00e) ret
*************** Inline @[000007] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB02 [0001]  1                             1       [000..00F)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB02 [000..00F) (return), preds={} succs={}

***** BB02
               [000022] -A----------              *  ASG       bool  
               [000021] -------N----              +--*  FIELD     bool   Item1
               [000018] ------------              |  \--*  ADDR      byref 
               [000019] -------N----              |     \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> V02 tmp1         
               [000020] ------------              \--*  CNS_INT   int    1

***** BB02
               [000027] -A----------              *  ASG       ref   
               [000026] -------N----              +--*  FIELD     ref    Item2
               [000023] ------------              |  \--*  ADDR      byref 
               [000024] -------N----              |     \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> V02 tmp1         
               [000025] ------------              \--*  CNS_STR   ref   <string constant>

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000007] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000007] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000007] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000007] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000007] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000007] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000007] -----------

Arguments setup:

Inlinee method body:
STMT00004 (IL   ???...  ???)
               [000022] -A----------              *  ASG       bool  
               [000021] -------N----              +--*  FIELD     bool   Item1
               [000018] ------------              |  \--*  ADDR      byref 
               [000019] -------N----              |     \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> V02 tmp1         
               [000020] ------------              \--*  CNS_INT   int    1


STMT00005 (IL   ???...  ???)
               [000027] -A----------              *  ASG       ref   
               [000026] -------N----              +--*  FIELD     ref    Item2
               [000023] ------------              |  \--*  ADDR      byref 
               [000024] -------N----              |     \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> V02 tmp1         
               [000025] ------------              \--*  CNS_STR   ref   <string constant>

fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined System.ValueTuple`2[Boolean,__Canon][System.Boolean,System.__Canon]:.ctor(bool,System.__Canon):this (15 IL bytes) (depth 1) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'ThrowawayTesting.Program:Get():System.Threading.Tasks.Task`1[[System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]:this' calling 'System.ValueTuple`2[Boolean,__Canon][System.Boolean,System.__Canon]:.ctor(bool,System.__Canon):this'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Expanding INLINE_CANDIDATE in statement STMT00002 in BB01:
STMT00002 (IL 0x00B...  ???)
               [000011] I-C-G-------              *  CALL      ref    System.Threading.Tasks.Task.FromResult (exactContextHnd=0x00000000D1FFAB1E)
               [000012] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000014] n----------- arg1         \--*  OBJ       struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16>
               [000013] ------------                 \--*  ADDR      byref 
               [000010] -------N----                    \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> V02 tmp1         
Note: candidate is implicit tail call

Argument #0:
               [000014] n-----------              *  OBJ       struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16>
               [000013] ------------              \--*  ADDR      byref 
               [000010] -------N----                 \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> V02 tmp1         

INLINER: inlineInfo.tokenLookupContextHandle for System.Threading.Tasks.Task:FromResult(System.ValueTuple`2[Boolean,__Canon]):System.Threading.Tasks.Task`1[ValueTuple`2] set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Threading.Tasks.Task:FromResult(System.ValueTuple`2[Boolean,__Canon]):System.Threading.Tasks.Task`1[ValueTuple`2] :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  8c 06 00 00 1b    box          0x1B000006
IL_0006  2d 06             brtrue.s     6 (IL_000e)
IL_0008  7e 20 07 00 0a    ldsfld       0xA000720
IL_000d  2a                ret         
IL_000e  d0 06 00 00 1b    ldtoken      0x1B000006
IL_0013  28 99 07 00 06    call         0x6000799
IL_0018  28 e2 07 00 06    call         0x60007E2
IL_001d  39 39 02 00 00    brfalse      569 (IL_025b)
IL_0022  d0 06 00 00 1b    ldtoken      0x1B000006
IL_0027  28 99 07 00 06    call         0x6000799
IL_002c  d0 d8 00 00 02    ldtoken      0x20000D8
IL_0031  28 99 07 00 06    call         0x6000799
IL_0036  28 9a 07 00 06    call         0x600079A
IL_003b  2c 23             brfalse.s    35 (IL_0060)
IL_003d  02                ldarg.0     
IL_003e  8c 06 00 00 1b    box          0x1B000006
IL_0043  a5 d8 00 00 02    unbox.any    0x20000D8
IL_0048  0a                stloc.0     
IL_0049  06                ldloc.0     
IL_004a  2d 07             brtrue.s     7 (IL_0053)
IL_004c  7e b7 0c 00 04    ldsfld       0x4000CB7
IL_0051  2b 05             br.s         5 (IL_0058)
IL_0053  7e b6 0c 00 04    ldsfld       0x4000CB6
IL_0058  0b                stloc.1     
IL_0059  07                ldloc.1     
IL_005a  28 c1 02 00 2b    call         0x2B0002C1
IL_005f  2a                ret         
IL_0060  d0 06 00 00 1b    ldtoken      0x1B000006
IL_0065  28 99 07 00 06    call         0x6000799
IL_006a  d0 37 01 00 02    ldtoken      0x2000137
IL_006f  28 99 07 00 06    call         0x6000799
IL_0074  28 9a 07 00 06    call         0x600079A
IL_0079  2c 27             brfalse.s    39 (IL_00a2)
IL_007b  02                ldarg.0     
IL_007c  8c 06 00 00 1b    box          0x1B000006
IL_0081  a5 37 01 00 02    unbox.any    0x2000137
IL_0086  0c                stloc.2     
IL_0087  08                ldloc.2     
IL_0088  15                ldc.i4.m1   
IL_0089  59                sub         
IL_008a  1f 0a             ldc.i4.s     0xA
IL_008c  41 ca 01 00 00    bge.un       458 (IL_025b)
IL_0091  7e b8 0c 00 04    ldsfld       0x4000CB8
IL_0096  08                ldloc.2     
IL_0097  15                ldc.i4.m1   
IL_0098  59                sub         
IL_0099  9a                ldelem.ref  
IL_009a  0d                stloc.3     
IL_009b  09                ldloc.3     
IL_009c  28 c1 02 00 2b    call         0x2B0002C1
IL_00a1  2a                ret         
IL_00a2  d0 06 00 00 1b    ldtoken      0x1B000006
IL_00a7  28 99 07 00 06    call         0x6000799
IL_00ac  d0 b6 01 00 02    ldtoken      0x20001B6
IL_00b1  28 99 07 00 06    call         0x6000799
IL_00b6  28 9a 07 00 06    call         0x600079A
IL_00bb  2c 10             brfalse.s    16 (IL_00cd)
IL_00bd  02                ldarg.0     
IL_00be  8c 06 00 00 1b    box          0x1B000006
IL_00c3  a5 b6 01 00 02    unbox.any    0x20001B6
IL_00c8  39 88 01 00 00    brfalse      392 (IL_0255)
IL_00cd  d0 06 00 00 1b    ldtoken      0x1B000006
IL_00d2  28 99 07 00 06    call         0x6000799
IL_00d7  d0 da 00 00 02    ldtoken      0x20000DA
IL_00dc  28 99 07 00 06    call         0x6000799
IL_00e1  28 9a 07 00 06    call         0x600079A
IL_00e6  2c 10             brfalse.s    16 (IL_00f8)
IL_00e8  02                ldarg.0     
IL_00e9  8c 06 00 00 1b    box          0x1B000006
IL_00ee  a5 da 00 00 02    unbox.any    0x20000DA
IL_00f3  39 5d 01 00 00    brfalse      349 (IL_0255)
IL_00f8  d0 06 00 00 1b    ldtoken      0x1B000006
IL_00fd  28 99 07 00 06    call         0x6000799
IL_0102  d0 7c 01 00 02    ldtoken      0x200017C
IL_0107  28 99 07 00 06    call         0x6000799
IL_010c  28 9a 07 00 06    call         0x600079A
IL_0111  2c 10             brfalse.s    16 (IL_0123)
IL_0113  02                ldarg.0     
IL_0114  8c 06 00 00 1b    box          0x1B000006
IL_0119  a5 7c 01 00 02    unbox.any    0x200017C
IL_011e  39 32 01 00 00    brfalse      306 (IL_0255)
IL_0123  d0 06 00 00 1b    ldtoken      0x1B000006
IL_0128  28 99 07 00 06    call         0x6000799
IL_012d  d0 dc 00 00 02    ldtoken      0x20000DC
IL_0132  28 99 07 00 06    call         0x6000799
IL_0137  28 9a 07 00 06    call         0x600079A
IL_013c  2c 10             brfalse.s    16 (IL_014e)
IL_013e  02                ldarg.0     
IL_013f  8c 06 00 00 1b    box          0x1B000006
IL_0144  a5 dc 00 00 02    unbox.any    0x20000DC
IL_0149  39 07 01 00 00    brfalse      263 (IL_0255)
IL_014e  d0 06 00 00 1b    ldtoken      0x1B000006
IL_0153  28 99 07 00 06    call         0x6000799
IL_0158  d0 38 01 00 02    ldtoken      0x2000138
IL_015d  28 99 07 00 06    call         0x6000799
IL_0162  28 9a 07 00 06    call         0x600079A
IL_0167  2c 10             brfalse.s    16 (IL_0179)
IL_0169  02                ldarg.0     
IL_016a  8c 06 00 00 1b    box          0x1B000006
IL_016f  a5 38 01 00 02    unbox.any    0x2000138
IL_0174  39 dc 00 00 00    brfalse      220 (IL_0255)
IL_0179  d0 06 00 00 1b    ldtoken      0x1B000006
IL_017e  28 99 07 00 06    call         0x6000799
IL_0183  d0 b7 01 00 02    ldtoken      0x20001B7
IL_0188  28 99 07 00 06    call         0x6000799
IL_018d  28 9a 07 00 06    call         0x600079A
IL_0192  2c 10             brfalse.s    16 (IL_01a4)
IL_0194  02                ldarg.0     
IL_0195  8c 06 00 00 1b    box          0x1B000006
IL_019a  a5 b7 01 00 02    unbox.any    0x20001B7
IL_019f  39 b1 00 00 00    brfalse      177 (IL_0255)
IL_01a4  d0 06 00 00 1b    ldtoken      0x1B000006
IL_01a9  28 99 07 00 06    call         0x6000799
IL_01ae  d0 36 01 00 02    ldtoken      0x2000136
IL_01b3  28 99 07 00 06    call         0x6000799
IL_01b8  28 9a 07 00 06    call         0x600079A
IL_01bd  2c 10             brfalse.s    16 (IL_01cf)
IL_01bf  02                ldarg.0     
IL_01c0  8c 06 00 00 1b    box          0x1B000006
IL_01c5  a5 36 01 00 02    unbox.any    0x2000136
IL_01ca  39 86 00 00 00    brfalse      134 (IL_0255)
IL_01cf  d0 06 00 00 1b    ldtoken      0x1B000006
IL_01d4  28 99 07 00 06    call         0x6000799
IL_01d9  d0 b5 01 00 02    ldtoken      0x20001B5
IL_01de  28 99 07 00 06    call         0x6000799
IL_01e3  28 9a 07 00 06    call         0x600079A
IL_01e8  2c 0d             brfalse.s    13 (IL_01f7)
IL_01ea  02                ldarg.0     
IL_01eb  8c 06 00 00 1b    box          0x1B000006
IL_01f0  a5 b5 01 00 02    unbox.any    0x20001B5
IL_01f5  2c 5e             brfalse.s    94 (IL_0255)
IL_01f7  d0 06 00 00 1b    ldtoken      0x1B000006
IL_01fc  28 99 07 00 06    call         0x6000799
IL_0201  d0 39 01 00 02    ldtoken      0x2000139
IL_0206  28 99 07 00 06    call         0x6000799
IL_020b  28 9a 07 00 06    call         0x600079A
IL_0210  2c 14             brfalse.s    20 (IL_0226)
IL_0212  16                ldc.i4.0    
IL_0213  d3                conv.i      
IL_0214  02                ldarg.0     
IL_0215  8c 06 00 00 1b    box          0x1B000006
IL_021a  a5 39 01 00 02    unbox.any    0x2000139
IL_021f  28 2d 10 00 06    call         0x600102D
IL_0224  2d 2f             brtrue.s     47 (IL_0255)
IL_0226  d0 06 00 00 1b    ldtoken      0x1B000006
IL_022b  28 99 07 00 06    call         0x6000799
IL_0230  d0 b8 01 00 02    ldtoken      0x20001B8
IL_0235  28 99 07 00 06    call         0x6000799
IL_023a  28 9a 07 00 06    call         0x600079A
IL_023f  2c 1a             brfalse.s    26 (IL_025b)
IL_0241  16                ldc.i4.0    
IL_0242  e0                conv.u      
IL_0243  02                ldarg.0     
IL_0244  8c 06 00 00 1b    box          0x1B000006
IL_0249  a5 b8 01 00 02    unbox.any    0x20001B8
IL_024e  28 06 1b 00 06    call         0x6001B06
IL_0253  2c 06             brfalse.s    6 (IL_025b)
IL_0255  7e 20 07 00 0a    ldsfld       0xA000720
IL_025a  2a                ret         
IL_025b  02                ldarg.0     
IL_025c  73 21 07 00 0a    newobj       0xA000721
IL_0261  2a                ret         

INLINER impTokenLookupContextHandle for System.Threading.Tasks.Task:FromResult(System.ValueTuple`2[Boolean,__Canon]):System.Threading.Tasks.Task`1[ValueTuple`2] is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Threading.Tasks.Task:FromResult(System.ValueTuple`2[Boolean,__Canon]):System.Threading.Tasks.Task`1[ValueTuple`2]

BudgetCheck: for IL Size 610, timeDelta 1206 +  currentEstimate 127 > currentBudget 1110
Allowing over-budget top-level forceinline
Jump targets:
  IL_000e
  IL_0053
  IL_0058
  IL_0060
  IL_00a2
  IL_00cd
  IL_00f8
  IL_0123
  IL_014e
  IL_0179
  IL_01a4
  IL_01cf
  IL_01f7
  IL_0226
  IL_0255
  IL_025b
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB03 [0002] created.
BB03 [000..008)
New Basic Block BB04 [0003] created.
BB04 [008..00E)
New Basic Block BB05 [0004] created.
BB05 [00E..022)
New Basic Block BB06 [0005] created.
BB06 [022..03D)
New Basic Block BB07 [0006] created.
BB07 [03D..04C)
New Basic Block BB08 [0007] created.
BB08 [04C..053)
New Basic Block BB09 [0008] created.
BB09 [053..058)
New Basic Block BB10 [0009] created.
BB10 [058..060)
New Basic Block BB11 [0010] created.
BB11 [060..07B)
New Basic Block BB12 [0011] created.
BB12 [07B..091)
New Basic Block BB13 [0012] created.
BB13 [091..0A2)
New Basic Block BB14 [0013] created.
BB14 [0A2..0BD)
New Basic Block BB15 [0014] created.
BB15 [0BD..0CD)
New Basic Block BB16 [0015] created.
BB16 [0CD..0E8)
New Basic Block BB17 [0016] created.
BB17 [0E8..0F8)
New Basic Block BB18 [0017] created.
BB18 [0F8..113)
New Basic Block BB19 [0018] created.
BB19 [113..123)
New Basic Block BB20 [0019] created.
BB20 [123..13E)
New Basic Block BB21 [0020] created.
BB21 [13E..14E)
New Basic Block BB22 [0021] created.
BB22 [14E..169)
New Basic Block BB23 [0022] created.
BB23 [169..179)
New Basic Block BB24 [0023] created.
BB24 [179..194)
New Basic Block BB25 [0024] created.
BB25 [194..1A4)
New Basic Block BB26 [0025] created.
BB26 [1A4..1BF)
New Basic Block BB27 [0026] created.
BB27 [1BF..1CF)
New Basic Block BB28 [0027] created.
BB28 [1CF..1EA)
New Basic Block BB29 [0028] created.
BB29 [1EA..1F7)
New Basic Block BB30 [0029] created.
BB30 [1F7..212)
New Basic Block BB31 [0030] created.
BB31 [212..226)
New Basic Block BB32 [0031] created.
BB32 [226..241)
New Basic Block BB33 [0032] created.
BB33 [241..255)
New Basic Block BB34 [0033] created.
BB34 [255..25B)
New Basic Block BB35 [0034] created.
BB35 [25B..262)

lvaGrabTemp returning 3 (V03 tmp2) (a long lifetime temp) called for Inline return value spill temp.

lvaSetClass: setting class for V03 to (00000000D1FFAB1E) System.Threading.Tasks.Task`1[ValueTuple`2] 
Basic block list for 'System.Threading.Tasks.Task:FromResult(System.ValueTuple`2[Boolean,__Canon]):System.Threading.Tasks.Task`1[ValueTuple`2]'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB03 [0002]  1                             1       [000..008)-> BB05 ( cond )                     
BB04 [0003]  1                             1       [008..00E)        (return)                     
BB05 [0004]  1                             1       [00E..022)-> BB35 ( cond )                     
BB06 [0005]  1                             1       [022..03D)-> BB11 ( cond )                     
BB07 [0006]  1                             1       [03D..04C)-> BB09 ( cond )                     
BB08 [0007]  1                             1       [04C..053)-> BB10 (always)                     
BB09 [0008]  1                             1       [053..058)                                     
BB10 [0009]  2                             1       [058..060)        (return)                     
BB11 [0010]  1                             1       [060..07B)-> BB14 ( cond )                     
BB12 [0011]  1                             1       [07B..091)-> BB35 ( cond )                     
BB13 [0012]  1                             1       [091..0A2)        (return)                     
BB14 [0013]  1                             1       [0A2..0BD)-> BB16 ( cond )                     
BB15 [0014]  1                             1       [0BD..0CD)-> BB34 ( cond )                     
BB16 [0015]  2                             1       [0CD..0E8)-> BB18 ( cond )                     
BB17 [0016]  1                             1       [0E8..0F8)-> BB34 ( cond )                     
BB18 [0017]  2                             1       [0F8..113)-> BB20 ( cond )                     
BB19 [0018]  1                             1       [113..123)-> BB34 ( cond )                     
BB20 [0019]  2                             1       [123..13E)-> BB22 ( cond )                     
BB21 [0020]  1                             1       [13E..14E)-> BB34 ( cond )                     
BB22 [0021]  2                             1       [14E..169)-> BB24 ( cond )                     
BB23 [0022]  1                             1       [169..179)-> BB34 ( cond )                     
BB24 [0023]  2                             1       [179..194)-> BB26 ( cond )                     
BB25 [0024]  1                             1       [194..1A4)-> BB34 ( cond )                     
BB26 [0025]  2                             1       [1A4..1BF)-> BB28 ( cond )                     
BB27 [0026]  1                             1       [1BF..1CF)-> BB34 ( cond )                     
BB28 [0027]  2                             1       [1CF..1EA)-> BB30 ( cond )                     
BB29 [0028]  1                             1       [1EA..1F7)-> BB34 ( cond )                     
BB30 [0029]  2                             1       [1F7..212)-> BB32 ( cond )                     
BB31 [0030]  1                             1       [212..226)-> BB34 ( cond )                     
BB32 [0031]  2                             1       [226..241)-> BB35 ( cond )                     
BB33 [0032]  1                             1       [241..255)-> BB35 ( cond )                     
BB34 [0033] 10                             1       [255..25B)        (return)                     
BB35 [0034]  4                             1       [25B..262)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000011] Starting PHASE Pre-import

*************** Inline @[000011] Finishing PHASE Pre-import

*************** Inline @[000011] Starting PHASE Importation
*************** In impImport() for System.Threading.Tasks.Task:FromResult(System.ValueTuple`2[Boolean,__Canon]):System.Threading.Tasks.Task`1[ValueTuple`2]

impImportBlockPending for BB03

Importing BB03 (PC=000) of 'System.Threading.Tasks.Task:FromResult(System.ValueTuple`2[Boolean,__Canon]):System.Threading.Tasks.Task`1[ValueTuple`2]'
    [ 0]   0 (0x000) ldarg.0
lvaGrabTemp returning 4 (V04 tmp3) called for Inlining Arg.

    [ 1]   1 (0x001) box 1B000006
 Importing BOX; BR_TRUE/FALSE as constant

    [ 1]   6 (0x006) brtrue.s
Folding operator with constant nodes into a constant:
               [000032] ------------              *  NE        int   
               [000030] ------------              +--*  CNS_INT   int    1
               [000031] ------------              \--*  CNS_INT   int    0
Bashed to int constant:
               [000032] ------------              *  CNS_INT   int    1

The conditional jump becomes an unconditional jump to BB05

impImportBlockPending for BB05

Importing BB05 (PC=014) of 'System.Threading.Tasks.Task:FromResult(System.ValueTuple`2[Boolean,__Canon]):System.Threading.Tasks.Task`1[ValueTuple`2]'
    [ 0]  14 (0x00e) ldtoken
    [ 1]  19 (0x013) call 06000799
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0

    [ 1]  24 (0x018) call 060007E2
In Compiler::impImportCall: opcode is call, kind=0, callRetType is bool, structSize is 0
Named Intrinsic System.Type.get_IsValueType: Recognized

    [ 1]  29 (0x01d) brfalse
Folding operator with constant nodes into a constant:
               [000038] ------------              *  EQ        int   
               [000036] ------------              +--*  CNS_INT   int    1
               [000037] ------------              \--*  CNS_INT   int    0
Bashed to int constant:
               [000038] ------------              *  CNS_INT   int    0

The block falls through into the next BB06

impImportBlockPending for BB06

Importing BB06 (PC=034) of 'System.Threading.Tasks.Task:FromResult(System.ValueTuple`2[Boolean,__Canon]):System.Threading.Tasks.Task`1[ValueTuple`2]'
    [ 0]  34 (0x022) ldtoken
    [ 1]  39 (0x027) call 06000799
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0

    [ 1]  44 (0x02c) ldtoken
    [ 2]  49 (0x031) call 06000799
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0

    [ 2]  54 (0x036) call 0600079A
In Compiler::impImportCall: opcode is call, kind=0, callRetType is bool, structSize is 0
Importing Type.op_*Equality intrinsic

Folding call to Type:op_Equality to a simple compare via EQ
Optimizing compare of types-from-handles to instead compare handles
Asking runtime to compare 00000000D1FFAB1E (System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]) and 00000000D1FFAB1E (System.Boolean) for equality
Runtime reports comparison is known at jit time: 0

    [ 1]  59 (0x03b) brfalse.s
Folding operator with constant nodes into a constant:
               [000048] ------------              *  EQ        int   
               [000046] ------------              +--*  CNS_INT   int    0
               [000047] ------------              \--*  CNS_INT   int    0
Bashed to int constant:
               [000048] ------------              *  CNS_INT   int    1

The conditional jump becomes an unconditional jump to BB11

impImportBlockPending for BB11

Importing BB11 (PC=096) of 'System.Threading.Tasks.Task:FromResult(System.ValueTuple`2[Boolean,__Canon]):System.Threading.Tasks.Task`1[ValueTuple`2]'
    [ 0]  96 (0x060) ldtoken
    [ 1] 101 (0x065) call 06000799
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0

    [ 1] 106 (0x06a) ldtoken
    [ 2] 111 (0x06f) call 06000799
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0

    [ 2] 116 (0x074) call 0600079A
In Compiler::impImportCall: opcode is call, kind=0, callRetType is bool, structSize is 0
Importing Type.op_*Equality intrinsic

Folding call to Type:op_Equality to a simple compare via EQ
Optimizing compare of types-from-handles to instead compare handles
Asking runtime to compare 00000000D1FFAB1E (System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]) and 00000000D1FFAB1E (System.Int32) for equality
Runtime reports comparison is known at jit time: 0

    [ 1] 121 (0x079) brfalse.s
Folding operator with constant nodes into a constant:
               [000058] ------------              *  EQ        int   
               [000056] ------------              +--*  CNS_INT   int    0
               [000057] ------------              \--*  CNS_INT   int    0
Bashed to int constant:
               [000058] ------------              *  CNS_INT   int    1

The conditional jump becomes an unconditional jump to BB14

impImportBlockPending for BB14

Importing BB14 (PC=162) of 'System.Threading.Tasks.Task:FromResult(System.ValueTuple`2[Boolean,__Canon]):System.Threading.Tasks.Task`1[ValueTuple`2]'
    [ 0] 162 (0x0a2) ldtoken
    [ 1] 167 (0x0a7) call 06000799
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0

    [ 1] 172 (0x0ac) ldtoken
    [ 2] 177 (0x0b1) call 06000799
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0

    [ 2] 182 (0x0b6) call 0600079A
In Compiler::impImportCall: opcode is call, kind=0, callRetType is bool, structSize is 0
Importing Type.op_*Equality intrinsic

Folding call to Type:op_Equality to a simple compare via EQ
Optimizing compare of types-from-handles to instead compare handles
Asking runtime to compare 00000000D1FFAB1E (System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]) and 00000000D1FFAB1E (System.UInt32) for equality
Runtime reports comparison is known at jit time: 0

    [ 1] 187 (0x0bb) brfalse.s
Folding operator with constant nodes into a constant:
               [000068] ------------              *  EQ        int   
               [000066] ------------              +--*  CNS_INT   int    0
               [000067] ------------              \--*  CNS_INT   int    0
Bashed to int constant:
               [000068] ------------              *  CNS_INT   int    1

The conditional jump becomes an unconditional jump to BB16

impImportBlockPending for BB16

Importing BB16 (PC=205) of 'System.Threading.Tasks.Task:FromResult(System.ValueTuple`2[Boolean,__Canon]):System.Threading.Tasks.Task`1[ValueTuple`2]'
    [ 0] 205 (0x0cd) ldtoken
    [ 1] 210 (0x0d2) call 06000799
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0

    [ 1] 215 (0x0d7) ldtoken
    [ 2] 220 (0x0dc) call 06000799
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0

    [ 2] 225 (0x0e1) call 0600079A
In Compiler::impImportCall: opcode is call, kind=0, callRetType is bool, structSize is 0
Importing Type.op_*Equality intrinsic

Folding call to Type:op_Equality to a simple compare via EQ
Optimizing compare of types-from-handles to instead compare handles
Asking runtime to compare 00000000D1FFAB1E (System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]) and 00000000D1FFAB1E (System.Byte) for equality
Runtime reports comparison is known at jit time: 0

    [ 1] 230 (0x0e6) brfalse.s
Folding operator with constant nodes into a constant:
               [000078] ------------              *  EQ        int   
               [000076] ------------              +--*  CNS_INT   int    0
               [000077] ------------              \--*  CNS_INT   int    0
Bashed to int constant:
               [000078] ------------              *  CNS_INT   int    1

The conditional jump becomes an unconditional jump to BB18

impImportBlockPending for BB18

Importing BB18 (PC=248) of 'System.Threading.Tasks.Task:FromResult(System.ValueTuple`2[Boolean,__Canon]):System.Threading.Tasks.Task`1[ValueTuple`2]'
    [ 0] 248 (0x0f8) ldtoken
    [ 1] 253 (0x0fd) call 06000799
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0

    [ 1] 258 (0x102) ldtoken
    [ 2] 263 (0x107) call 06000799
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0

    [ 2] 268 (0x10c) call 0600079A
In Compiler::impImportCall: opcode is call, kind=0, callRetType is bool, structSize is 0
Importing Type.op_*Equality intrinsic

Folding call to Type:op_Equality to a simple compare via EQ
Optimizing compare of types-from-handles to instead compare handles
Asking runtime to compare 00000000D1FFAB1E (System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]) and 00000000D1FFAB1E (System.SByte) for equality
Runtime reports comparison is known at jit time: 0

    [ 1] 273 (0x111) brfalse.s
Folding operator with constant nodes into a constant:
               [000088] ------------              *  EQ        int   
               [000086] ------------              +--*  CNS_INT   int    0
               [000087] ------------              \--*  CNS_INT   int    0
Bashed to int constant:
               [000088] ------------              *  CNS_INT   int    1

The conditional jump becomes an unconditional jump to BB20

impImportBlockPending for BB20

Importing BB20 (PC=291) of 'System.Threading.Tasks.Task:FromResult(System.ValueTuple`2[Boolean,__Canon]):System.Threading.Tasks.Task`1[ValueTuple`2]'
    [ 0] 291 (0x123) ldtoken
    [ 1] 296 (0x128) call 06000799
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0

    [ 1] 301 (0x12d) ldtoken
    [ 2] 306 (0x132) call 06000799
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0

    [ 2] 311 (0x137) call 0600079A
In Compiler::impImportCall: opcode is call, kind=0, callRetType is bool, structSize is 0
Importing Type.op_*Equality intrinsic

Folding call to Type:op_Equality to a simple compare via EQ
Optimizing compare of types-from-handles to instead compare handles
Asking runtime to compare 00000000D1FFAB1E (System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]) and 00000000D1FFAB1E (System.Char) for equality
Runtime reports comparison is known at jit time: 0

    [ 1] 316 (0x13c) brfalse.s
Folding operator with constant nodes into a constant:
               [000098] ------------              *  EQ        int   
               [000096] ------------              +--*  CNS_INT   int    0
               [000097] ------------              \--*  CNS_INT   int    0
Bashed to int constant:
               [000098] ------------              *  CNS_INT   int    1

The conditional jump becomes an unconditional jump to BB22

impImportBlockPending for BB22

Importing BB22 (PC=334) of 'System.Threading.Tasks.Task:FromResult(System.ValueTuple`2[Boolean,__Canon]):System.Threading.Tasks.Task`1[ValueTuple`2]'
    [ 0] 334 (0x14e) ldtoken
    [ 1] 339 (0x153) call 06000799
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0

    [ 1] 344 (0x158) ldtoken
    [ 2] 349 (0x15d) call 06000799
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0

    [ 2] 354 (0x162) call 0600079A
In Compiler::impImportCall: opcode is call, kind=0, callRetType is bool, structSize is 0
Importing Type.op_*Equality intrinsic

Folding call to Type:op_Equality to a simple compare via EQ
Optimizing compare of types-from-handles to instead compare handles
Asking runtime to compare 00000000D1FFAB1E (System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]) and 00000000D1FFAB1E (System.Int64) for equality
Runtime reports comparison is known at jit time: 0

    [ 1] 359 (0x167) brfalse.s
Folding operator with constant nodes into a constant:
               [000108] ------------              *  EQ        int   
               [000106] ------------              +--*  CNS_INT   int    0
               [000107] ------------              \--*  CNS_INT   int    0
Bashed to int constant:
               [000108] ------------              *  CNS_INT   int    1

The conditional jump becomes an unconditional jump to BB24

impImportBlockPending for BB24

Importing BB24 (PC=377) of 'System.Threading.Tasks.Task:FromResult(System.ValueTuple`2[Boolean,__Canon]):System.Threading.Tasks.Task`1[ValueTuple`2]'
    [ 0] 377 (0x179) ldtoken
    [ 1] 382 (0x17e) call 06000799
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0

    [ 1] 387 (0x183) ldtoken
    [ 2] 392 (0x188) call 06000799
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0

    [ 2] 397 (0x18d) call 0600079A
In Compiler::impImportCall: opcode is call, kind=0, callRetType is bool, structSize is 0
Importing Type.op_*Equality intrinsic

Folding call to Type:op_Equality to a simple compare via EQ
Optimizing compare of types-from-handles to instead compare handles
Asking runtime to compare 00000000D1FFAB1E (System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]) and 00000000D1FFAB1E (System.UInt64) for equality
Runtime reports comparison is known at jit time: 0

    [ 1] 402 (0x192) brfalse.s
Folding operator with constant nodes into a constant:
               [000118] ------------              *  EQ        int   
               [000116] ------------              +--*  CNS_INT   int    0
               [000117] ------------              \--*  CNS_INT   int    0
Bashed to int constant:
               [000118] ------------              *  CNS_INT   int    1

The conditional jump becomes an unconditional jump to BB26

impImportBlockPending for BB26

Importing BB26 (PC=420) of 'System.Threading.Tasks.Task:FromResult(System.ValueTuple`2[Boolean,__Canon]):System.Threading.Tasks.Task`1[ValueTuple`2]'
    [ 0] 420 (0x1a4) ldtoken
    [ 1] 425 (0x1a9) call 06000799
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0

    [ 1] 430 (0x1ae) ldtoken
    [ 2] 435 (0x1b3) call 06000799
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0

    [ 2] 440 (0x1b8) call 0600079A
In Compiler::impImportCall: opcode is call, kind=0, callRetType is bool, structSize is 0
Importing Type.op_*Equality intrinsic

Folding call to Type:op_Equality to a simple compare via EQ
Optimizing compare of types-from-handles to instead compare handles
Asking runtime to compare 00000000D1FFAB1E (System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]) and 00000000D1FFAB1E (System.Int16) for equality
Runtime reports comparison is known at jit time: 0

    [ 1] 445 (0x1bd) brfalse.s
Folding operator with constant nodes into a constant:
               [000128] ------------              *  EQ        int   
               [000126] ------------              +--*  CNS_INT   int    0
               [000127] ------------              \--*  CNS_INT   int    0
Bashed to int constant:
               [000128] ------------              *  CNS_INT   int    1

The conditional jump becomes an unconditional jump to BB28

impImportBlockPending for BB28

Importing BB28 (PC=463) of 'System.Threading.Tasks.Task:FromResult(System.ValueTuple`2[Boolean,__Canon]):System.Threading.Tasks.Task`1[ValueTuple`2]'
    [ 0] 463 (0x1cf) ldtoken
    [ 1] 468 (0x1d4) call 06000799
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0

    [ 1] 473 (0x1d9) ldtoken
    [ 2] 478 (0x1de) call 06000799
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0

    [ 2] 483 (0x1e3) call 0600079A
In Compiler::impImportCall: opcode is call, kind=0, callRetType is bool, structSize is 0
Importing Type.op_*Equality intrinsic

Folding call to Type:op_Equality to a simple compare via EQ
Optimizing compare of types-from-handles to instead compare handles
Asking runtime to compare 00000000D1FFAB1E (System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]) and 00000000D1FFAB1E (System.UInt16) for equality
Runtime reports comparison is known at jit time: 0

    [ 1] 488 (0x1e8) brfalse.s
Folding operator with constant nodes into a constant:
               [000138] ------------              *  EQ        int   
               [000136] ------------              +--*  CNS_INT   int    0
               [000137] ------------              \--*  CNS_INT   int    0
Bashed to int constant:
               [000138] ------------              *  CNS_INT   int    1

The conditional jump becomes an unconditional jump to BB30

impImportBlockPending for BB30

Importing BB30 (PC=503) of 'System.Threading.Tasks.Task:FromResult(System.ValueTuple`2[Boolean,__Canon]):System.Threading.Tasks.Task`1[ValueTuple`2]'
    [ 0] 503 (0x1f7) ldtoken
    [ 1] 508 (0x1fc) call 06000799
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0

    [ 1] 513 (0x201) ldtoken
    [ 2] 518 (0x206) call 06000799
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0

    [ 2] 523 (0x20b) call 0600079A
In Compiler::impImportCall: opcode is call, kind=0, callRetType is bool, structSize is 0
Importing Type.op_*Equality intrinsic

Folding call to Type:op_Equality to a simple compare via EQ
Optimizing compare of types-from-handles to instead compare handles
Asking runtime to compare 00000000D1FFAB1E (System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]) and 00000000D1FFAB1E (System.IntPtr) for equality
Runtime reports comparison is known at jit time: 0

    [ 1] 528 (0x210) brfalse.s
Folding operator with constant nodes into a constant:
               [000148] ------------              *  EQ        int   
               [000146] ------------              +--*  CNS_INT   int    0
               [000147] ------------              \--*  CNS_INT   int    0
Bashed to int constant:
               [000148] ------------              *  CNS_INT   int    1

The conditional jump becomes an unconditional jump to BB32

impImportBlockPending for BB32

Importing BB32 (PC=550) of 'System.Threading.Tasks.Task:FromResult(System.ValueTuple`2[Boolean,__Canon]):System.Threading.Tasks.Task`1[ValueTuple`2]'
    [ 0] 550 (0x226) ldtoken
    [ 1] 555 (0x22b) call 06000799
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0

    [ 1] 560 (0x230) ldtoken
    [ 2] 565 (0x235) call 06000799
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0

    [ 2] 570 (0x23a) call 0600079A
In Compiler::impImportCall: opcode is call, kind=0, callRetType is bool, structSize is 0
Importing Type.op_*Equality intrinsic

Folding call to Type:op_Equality to a simple compare via EQ
Optimizing compare of types-from-handles to instead compare handles
Asking runtime to compare 00000000D1FFAB1E (System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]) and 00000000D1FFAB1E (System.UIntPtr) for equality
Runtime reports comparison is known at jit time: 0

    [ 1] 575 (0x23f) brfalse.s
Folding operator with constant nodes into a constant:
               [000158] ------------              *  EQ        int   
               [000156] ------------              +--*  CNS_INT   int    0
               [000157] ------------              \--*  CNS_INT   int    0
Bashed to int constant:
               [000158] ------------              *  CNS_INT   int    1

The conditional jump becomes an unconditional jump to BB35

impImportBlockPending for BB35

Importing BB35 (PC=603) of 'System.Threading.Tasks.Task:FromResult(System.ValueTuple`2[Boolean,__Canon]):System.Threading.Tasks.Task`1[ValueTuple`2]'
    [ 0] 603 (0x25b) ldarg.0
    [ 1] 604 (0x25c) newobj
lvaGrabTemp returning 5 (V05 tmp4) called for NewObj constructor temp.


               [000163] -A----------              *  ASG       ref   
               [000162] D------N----              +--*  LCL_VAR   ref    V05 tmp4         
               [000161] ------------              \--*  ALLOCOBJ  ref   
               [000160] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token
Marked V05 as a single def local

lvaSetClass: setting class for V05 to (00000000D1FFAB1E) System.Threading.Tasks.Task`1[[System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]  [exact]
 0A000721
In Compiler::impImportCall: opcode is newobj, kind=0, callRetType is void, structSize is 0
Calling impNormStructVal on:
               [000159] ------------              *  LCL_VAR   struct<System.ValueTuple`2[Boolean,__Canon], 16> V04 tmp3         
resulting tree:
               [000167] n-----------              *  OBJ       struct<System.ValueTuple`2[Boolean,__Canon], 16>
               [000166] ------------              \--*  ADDR      byref 
               [000159] -------N----                 \--*  LCL_VAR   struct<System.ValueTuple`2[Boolean,__Canon], 16> V04 tmp3         


               [000165] I-C-G-------              *  CALL      void   System.Threading.Tasks.Task`1[ValueTuple`2][System.ValueTuple`2[System.Boolean,System.__Canon]]..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000164] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp4         
               [000167] n----------- arg1         \--*  OBJ       struct<System.ValueTuple`2[Boolean,__Canon], 16>
               [000166] ------------                 \--*  ADDR      byref 
               [000159] -------N----                    \--*  LCL_VAR   struct<System.ValueTuple`2[Boolean,__Canon], 16> V04 tmp3         

    [ 1] 609 (0x261) ret

    Inlinee Return expression (before normalization)  =>
               [000168] ------------              *  LCL_VAR   ref    V05 tmp4         


               [000170] -A----------              *  ASG       ref   
               [000169] D------N----              +--*  LCL_VAR   ref    V03 tmp2         
               [000168] ------------              \--*  LCL_VAR   ref    V05 tmp4         


    Inlinee Return expression (after normalization) =>
               [000171] ------------              *  LCL_VAR   ref    V03 tmp2         

** Note: inlinee IL was partially imported -- imported 7 of 610 bytes of method IL

*************** Inline @[000011] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB03 [0002]  1                             1       [000..008)-> BB05 (always)                     i 
BB04 [0003]  1                             1       [008..00E)        (return)                     
BB05 [0004]  1                             1       [00E..022)                                     i 
BB06 [0005]  1                             1       [022..03D)-> BB11 (always)                     i 
BB07 [0006]  1                             1       [03D..04C)-> BB09 ( cond )                     
BB08 [0007]  1                             1       [04C..053)-> BB10 (always)                     
BB09 [0008]  1                             1       [053..058)                                     
BB10 [0009]  2                             1       [058..060)        (return)                     
BB11 [0010]  1                             1       [060..07B)-> BB14 (always)                     i 
BB12 [0011]  1                             1       [07B..091)-> BB35 ( cond )                     
BB13 [0012]  1                             1       [091..0A2)        (return)                     
BB14 [0013]  1                             1       [0A2..0BD)-> BB16 (always)                     i 
BB15 [0014]  1                             1       [0BD..0CD)-> BB34 ( cond )                     
BB16 [0015]  2                             1       [0CD..0E8)-> BB18 (always)                     i 
BB17 [0016]  1                             1       [0E8..0F8)-> BB34 ( cond )                     
BB18 [0017]  2                             1       [0F8..113)-> BB20 (always)                     i 
BB19 [0018]  1                             1       [113..123)-> BB34 ( cond )                     
BB20 [0019]  2                             1       [123..13E)-> BB22 (always)                     i 
BB21 [0020]  1                             1       [13E..14E)-> BB34 ( cond )                     
BB22 [0021]  2                             1       [14E..169)-> BB24 (always)                     i 
BB23 [0022]  1                             1       [169..179)-> BB34 ( cond )                     
BB24 [0023]  2                             1       [179..194)-> BB26 (always)                     i 
BB25 [0024]  1                             1       [194..1A4)-> BB34 ( cond )                     
BB26 [0025]  2                             1       [1A4..1BF)-> BB28 (always)                     i 
BB27 [0026]  1                             1       [1BF..1CF)-> BB34 ( cond )                     
BB28 [0027]  2                             1       [1CF..1EA)-> BB30 (always)                     i 
BB29 [0028]  1                             1       [1EA..1F7)-> BB34 ( cond )                     
BB30 [0029]  2                             1       [1F7..212)-> BB32 (always)                     i 
BB31 [0030]  1                             1       [212..226)-> BB34 ( cond )                     
BB32 [0031]  2                             1       [226..241)-> BB35 (always)                     i 
BB33 [0032]  1                             1       [241..255)-> BB35 ( cond )                     
BB34 [0033] 10                             1       [255..25B)        (return)                     
BB35 [0034]  4                             1       [25B..262)        (return)                     i newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB03 [000..008) -> BB05 (always), preds={} succs={BB05}

------------ BB04 [008..00E) (return), preds={} succs={}

------------ BB05 [00E..022), preds={} succs={BB06}

------------ BB06 [022..03D) -> BB11 (always), preds={} succs={BB11}

------------ BB07 [03D..04C) -> BB09 (cond), preds={} succs={BB08,BB09}

------------ BB08 [04C..053) -> BB10 (always), preds={} succs={BB10}

------------ BB09 [053..058), preds={} succs={BB10}

------------ BB10 [058..060) (return), preds={} succs={}

------------ BB11 [060..07B) -> BB14 (always), preds={} succs={BB14}

------------ BB12 [07B..091) -> BB35 (cond), preds={} succs={BB13,BB35}

------------ BB13 [091..0A2) (return), preds={} succs={}

------------ BB14 [0A2..0BD) -> BB16 (always), preds={} succs={BB16}

------------ BB15 [0BD..0CD) -> BB34 (cond), preds={} succs={BB16,BB34}

------------ BB16 [0CD..0E8) -> BB18 (always), preds={} succs={BB18}

------------ BB17 [0E8..0F8) -> BB34 (cond), preds={} succs={BB18,BB34}

------------ BB18 [0F8..113) -> BB20 (always), preds={} succs={BB20}

------------ BB19 [113..123) -> BB34 (cond), preds={} succs={BB20,BB34}

------------ BB20 [123..13E) -> BB22 (always), preds={} succs={BB22}

------------ BB21 [13E..14E) -> BB34 (cond), preds={} succs={BB22,BB34}

------------ BB22 [14E..169) -> BB24 (always), preds={} succs={BB24}

------------ BB23 [169..179) -> BB34 (cond), preds={} succs={BB24,BB34}

------------ BB24 [179..194) -> BB26 (always), preds={} succs={BB26}

------------ BB25 [194..1A4) -> BB34 (cond), preds={} succs={BB26,BB34}

------------ BB26 [1A4..1BF) -> BB28 (always), preds={} succs={BB28}

------------ BB27 [1BF..1CF) -> BB34 (cond), preds={} succs={BB28,BB34}

------------ BB28 [1CF..1EA) -> BB30 (always), preds={} succs={BB30}

------------ BB29 [1EA..1F7) -> BB34 (cond), preds={} succs={BB30,BB34}

------------ BB30 [1F7..212) -> BB32 (always), preds={} succs={BB32}

------------ BB31 [212..226) -> BB34 (cond), preds={} succs={BB32,BB34}

------------ BB32 [226..241) -> BB35 (always), preds={} succs={BB35}

------------ BB33 [241..255) -> BB35 (cond), preds={} succs={BB34,BB35}

------------ BB34 [255..25B) (return), preds={} succs={}

------------ BB35 [25B..262) (return), preds={} succs={}

***** BB35
               [000163] -A----------              *  ASG       ref   
               [000162] D------N----              +--*  LCL_VAR   ref    V05 tmp4         
               [000161] ------------              \--*  ALLOCOBJ  ref   
               [000160] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB35
               [000165] I-C-G-------              *  CALL      void   System.Threading.Tasks.Task`1[ValueTuple`2][System.ValueTuple`2[System.Boolean,System.__Canon]]..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000164] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp4         
               [000167] n----------- arg1         \--*  OBJ       struct<System.ValueTuple`2[Boolean,__Canon], 16>
               [000166] ------------                 \--*  ADDR      byref 
               [000159] -------N----                    \--*  LCL_VAR   struct<System.ValueTuple`2[Boolean,__Canon], 16> V04 tmp3         

***** BB35
               [000170] -A----------              *  ASG       ref   
               [000169] D------N----              +--*  LCL_VAR   ref    V03 tmp2         
               [000168] ------------              \--*  LCL_VAR   ref    V05 tmp4         

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000011] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000011] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000011] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000011] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000011] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks
BB04 was not imported, marking as removed (0)
BB07 was not imported, marking as removed (1)
BB08 was not imported, marking as removed (2)
BB09 was not imported, marking as removed (3)
BB10 was not imported, marking as removed (4)
BB12 was not imported, marking as removed (5)
BB13 was not imported, marking as removed (6)
BB15 was not imported, marking as removed (7)
BB17 was not imported, marking as removed (8)
BB19 was not imported, marking as removed (9)
BB21 was not imported, marking as removed (10)
BB23 was not imported, marking as removed (11)
BB25 was not imported, marking as removed (12)
BB27 was not imported, marking as removed (13)
BB29 was not imported, marking as removed (14)
BB31 was not imported, marking as removed (15)
BB33 was not imported, marking as removed (16)
BB34 was not imported, marking as removed (17)

Renumbering the basic blocks for fgRemoveEmptyBlocks

*************** Before renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB03 [0002]  1                             1       [000..008)-> BB05 (always)                     i 
BB05 [0004]  1                             1       [00E..022)                                     i 
BB06 [0005]  1                             1       [022..03D)-> BB11 (always)                     i 
BB11 [0010]  1                             1       [060..07B)-> BB14 (always)                     i 
BB14 [0013]  1                             1       [0A2..0BD)-> BB16 (always)                     i 
BB16 [0015]  2                             1       [0CD..0E8)-> BB18 (always)                     i 
BB18 [0017]  2                             1       [0F8..113)-> BB20 (always)                     i 
BB20 [0019]  2                             1       [123..13E)-> BB22 (always)                     i 
BB22 [0021]  2                             1       [14E..169)-> BB24 (always)                     i 
BB24 [0023]  2                             1       [179..194)-> BB26 (always)                     i 
BB26 [0025]  2                             1       [1A4..1BF)-> BB28 (always)                     i 
BB28 [0027]  2                             1       [1CF..1EA)-> BB30 (always)                     i 
BB30 [0029]  2                             1       [1F7..212)-> BB32 (always)                     i 
BB32 [0031]  2                             1       [226..241)-> BB35 (always)                     i 
BB35 [0034]  4                             1       [25B..262)        (return)                     i newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
Renumber BB03 to BB36
Renumber BB05 to BB37
Renumber BB06 to BB38
Renumber BB11 to BB39
Renumber BB14 to BB40
Renumber BB16 to BB41
Renumber BB18 to BB42
Renumber BB20 to BB43
Renumber BB22 to BB44
Renumber BB24 to BB45
Renumber BB26 to BB46
Renumber BB28 to BB47
Renumber BB30 to BB48
Renumber BB32 to BB49
Renumber BB35 to BB50

*************** After renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB36 [0002]  1                             1       [000..008)-> BB37 (always)                     i 
BB37 [0004]  1                             1       [00E..022)                                     i 
BB38 [0005]  1                             1       [022..03D)-> BB39 (always)                     i 
BB39 [0010]  1                             1       [060..07B)-> BB40 (always)                     i 
BB40 [0013]  1                             1       [0A2..0BD)-> BB41 (always)                     i 
BB41 [0015]  2                             1       [0CD..0E8)-> BB42 (always)                     i 
BB42 [0017]  2                             1       [0F8..113)-> BB43 (always)                     i 
BB43 [0019]  2                             1       [123..13E)-> BB44 (always)                     i 
BB44 [0021]  2                             1       [14E..169)-> BB45 (always)                     i 
BB45 [0023]  2                             1       [179..194)-> BB46 (always)                     i 
BB46 [0025]  2                             1       [1A4..1BF)-> BB47 (always)                     i 
BB47 [0027]  2                             1       [1CF..1EA)-> BB48 (always)                     i 
BB48 [0029]  2                             1       [1F7..212)-> BB49 (always)                     i 
BB49 [0031]  2                             1       [226..241)-> BB50 (always)                     i 
BB50 [0034]  4                             1       [25B..262)        (return)                     i newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty

New BlockSet epoch 1, # of blocks (including unused BB00): 1, bitset array size: 1 (short)

*************** Inline @[000011] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000011] -----------

Arguments setup:
STMT00009 (IL 0x00B...  ???)
               [000174] -A----------              *  ASG       struct (copy)
               [000172] D------N----              +--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> V04 tmp3         
               [000014] n-----------              \--*  OBJ       struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16>
               [000013] ------------                 \--*  ADDR      byref 
               [000010] -------N----                    \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> V02 tmp1         

Inlinee method body:New Basic Block BB51 [0035] created.

Convert bbJumpKind of BB50 to BBJ_NONE
fgInlineAppendStatements: implicit tail call; skipping nulling.

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB36 [0002]  1                             1       [00B..00C)-> BB37 (always)                     i 
BB37 [0004]  1                             0.50    [00B..00C)                                     i 
BB38 [0005]  1                             0.50    [00B..00C)-> BB39 (always)                     i 
BB39 [0010]  1                             0.50    [00B..00C)-> BB40 (always)                     i 
BB40 [0013]  1                             0.50    [00B..00C)-> BB41 (always)                     i 
BB41 [0015]  2                             0.50    [00B..00C)-> BB42 (always)                     i 
BB42 [0017]  2                             0.50    [00B..00C)-> BB43 (always)                     i 
BB43 [0019]  2                             0.50    [00B..00C)-> BB44 (always)                     i 
BB44 [0021]  2                             0.50    [00B..00C)-> BB45 (always)                     i 
BB45 [0023]  2                             0.50    [00B..00C)-> BB46 (always)                     i 
BB46 [0025]  2                             0.50    [00B..00C)-> BB47 (always)                     i 
BB47 [0027]  2                             0.50    [00B..00C)-> BB48 (always)                     i 
BB48 [0029]  2                             0.50    [00B..00C)-> BB49 (always)                     i 
BB49 [0031]  2                             0.50    [00B..00C)-> BB50 (always)                     i 
BB50 [0034]  4                             1       [00B..00C)                                     i newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB36 [00B..00C) -> BB37 (always), preds={} succs={BB37}

------------ BB37 [00B..00C), preds={} succs={BB38}

------------ BB38 [00B..00C) -> BB39 (always), preds={} succs={BB39}

------------ BB39 [00B..00C) -> BB40 (always), preds={} succs={BB40}

------------ BB40 [00B..00C) -> BB41 (always), preds={} succs={BB41}

------------ BB41 [00B..00C) -> BB42 (always), preds={} succs={BB42}

------------ BB42 [00B..00C) -> BB43 (always), preds={} succs={BB43}

------------ BB43 [00B..00C) -> BB44 (always), preds={} succs={BB44}

------------ BB44 [00B..00C) -> BB45 (always), preds={} succs={BB45}

------------ BB45 [00B..00C) -> BB46 (always), preds={} succs={BB46}

------------ BB46 [00B..00C) -> BB47 (always), preds={} succs={BB47}

------------ BB47 [00B..00C) -> BB48 (always), preds={} succs={BB48}

------------ BB48 [00B..00C) -> BB49 (always), preds={} succs={BB49}

------------ BB49 [00B..00C) -> BB50 (always), preds={} succs={BB50}

------------ BB50 [00B..00C), preds={} succs={BB51}

***** BB50
STMT00006 (IL 0x00B...  ???)
               [000163] -A----------              *  ASG       ref   
               [000162] D------N----              +--*  LCL_VAR   ref    V05 tmp4         
               [000161] ------------              \--*  ALLOCOBJ  ref   
               [000160] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB50
STMT00007 (IL 0x00B...  ???)
               [000165] I-C-G-------              *  CALL      void   System.Threading.Tasks.Task`1[ValueTuple`2][System.ValueTuple`2[System.Boolean,System.__Canon]]..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000164] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp4         
               [000167] n----------- arg1         \--*  OBJ       struct<System.ValueTuple`2[Boolean,__Canon], 16>
               [000166] ------------                 \--*  ADDR      byref 
               [000159] -------N----                    \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> V04 tmp3         

***** BB50
STMT00008 (IL 0x00B...  ???)
               [000170] -A----------              *  ASG       ref   
               [000169] D------N----              +--*  LCL_VAR   ref    V03 tmp2         
               [000168] ------------              \--*  LCL_VAR   ref    V05 tmp4         

-------------------------------------------------------------------------------------------------------------------
INLINER: Updating optMethodFlags --  root:0 callee:2 new:2

Return expression for call at [000011] is
               [000171] ------------              *  LCL_VAR   ref    V03 tmp2         
Successfully inlined System.Threading.Tasks.Task:FromResult(System.ValueTuple`2[Boolean,__Canon]):System.Threading.Tasks.Task`1[ValueTuple`2] (610 IL bytes) (depth 1) [aggressive inline attribute]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'aggressive inline attribute' for 'ThrowawayTesting.Program:Get():System.Threading.Tasks.Task`1[[System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]:this' calling 'System.Threading.Tasks.Task:FromResult(System.ValueTuple`2[Boolean,__Canon]):System.Threading.Tasks.Task`1[ValueTuple`2]'
INLINER: during 'fgInline' result 'success' reason 'aggressive inline attribute'
Expanding INLINE_CANDIDATE in statement STMT00007 in BB50:
STMT00007 (IL 0x00B...  ???)
               [000165] I-C-G-------              *  CALL      void   System.Threading.Tasks.Task`1[ValueTuple`2][System.ValueTuple`2[System.Boolean,System.__Canon]]..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000164] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp4         
               [000167] n----------- arg1         \--*  OBJ       struct<System.ValueTuple`2[Boolean,__Canon], 16>
               [000166] ------------                 \--*  ADDR      byref 
               [000159] -------N----                    \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> V04 tmp3         
thisArg: is a local var
               [000164] ------------              *  LCL_VAR   ref    V05 tmp4         


Argument #1:
               [000167] n-----------              *  OBJ       struct<System.ValueTuple`2[Boolean,__Canon], 16>
               [000166] ------------              \--*  ADDR      byref 
               [000159] -------N----                 \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> V04 tmp3         

INLINER: inlineInfo.tokenLookupContextHandle for System.Threading.Tasks.Task`1[ValueTuple`2][System.ValueTuple`2[System.Boolean,System.__Canon]]:.ctor(System.ValueTuple`2[Boolean,__Canon]):this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Threading.Tasks.Task`1[ValueTuple`2][System.ValueTuple`2[System.Boolean,System.__Canon]]:.ctor(System.ValueTuple`2[Boolean,__Canon]):this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  16                ldc.i4.0    
IL_0002  16                ldc.i4.0    
IL_0003  12 00             ldloca.s     0x0
IL_0005  fe 15 90 02 00 02 initobj      0x2000290
IL_000b  06                ldloc.0     
IL_000c  28 80 2b 00 06    call         0x6002B80
IL_0011  02                ldarg.0     
IL_0012  03                ldarg.1     
IL_0013  7d 58 06 00 0a    stfld        0xA000658
IL_0018  2a                ret         

INLINER impTokenLookupContextHandle for System.Threading.Tasks.Task`1[ValueTuple`2][System.ValueTuple`2[System.Boolean,System.__Canon]]:.ctor(System.ValueTuple`2[Boolean,__Canon]):this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Threading.Tasks.Task`1[ValueTuple`2][System.ValueTuple`2[System.Boolean,System.__Canon]]:.ctor(System.ValueTuple`2[Boolean,__Canon]):this
weight= 10 : state   3 [ ldarg.0 ]
weight= 15 : state  23 [ ldc.i4.0 ]
weight= 15 : state  23 [ ldc.i4.0 ]
weight= 61 : state  19 [ ldloca.s ]
weight= 55 : state 180 [ initobj ]
weight= 12 : state   7 [ ldloc.0 ]
weight= 79 : state  40 [ call ]
weight= 69 : state 226 [ ldarg.0 -> ldarg.1 -> stfld ]
weight= 19 : state  42 [ ret ]

multiplier in instance constructors increased to 1.5.
Inline candidate is mostly loads and stores.  Multiplier increased to 4.5.
Inline candidate callsite is boring.  Multiplier increased to 5.8.
calleeNativeSizeEstimate=335
callsiteNativeSizeEstimate=135
benefit multiplier=5.8
threshold=783
Native estimate for function size is within threshold for inlining 33.5 <= 78.3 (multiplier = 5.8)
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB52 [0036] created.
BB52 [000..019)
Basic block list for 'System.Threading.Tasks.Task`1[ValueTuple`2][System.ValueTuple`2[System.Boolean,System.__Canon]]:.ctor(System.ValueTuple`2[Boolean,__Canon]):this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB52 [0036]  1                             1       [000..019)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000165] Starting PHASE Pre-import

*************** Inline @[000165] Finishing PHASE Pre-import

*************** Inline @[000165] Starting PHASE Importation
*************** In impImport() for System.Threading.Tasks.Task`1[ValueTuple`2][System.ValueTuple`2[System.Boolean,System.__Canon]]:.ctor(System.ValueTuple`2[Boolean,__Canon]):this

impImportBlockPending for BB52

Importing BB52 (PC=000) of 'System.Threading.Tasks.Task`1[ValueTuple`2][System.ValueTuple`2[System.Boolean,System.__Canon]]:.ctor(System.ValueTuple`2[Boolean,__Canon]):this'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) ldc.i4.0 0
    [ 2]   2 (0x002) ldc.i4.0 0
    [ 3]   3 (0x003) ldloca.s 0
lvaGrabTemp returning 6 (V06 tmp5) (a long lifetime temp) called for Inline ldloca(s) first use temp.

    [ 4]   5 (0x005) initobj 02000290

               [000181] IA----------              *  ASG       struct (init)
               [000178] D------N----              +--*  LCL_VAR   struct<System.Threading.CancellationToken, 8> V06 tmp5         
               [000180] ------------              \--*  CNS_INT   int    0

    [ 3]  11 (0x00b) ldloc.0
    [ 4]  12 (0x00c) call 06002B80
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0
Calling impNormStructVal on:
               [000182] ------------              *  LCL_VAR   struct<System.Threading.CancellationToken, 8> V06 tmp5         
resulting tree:
               [000185] n-----------              *  OBJ       struct<System.Threading.CancellationToken, 8>
               [000184] ------------              \--*  ADDR      byref 
               [000182] -------N----                 \--*  LCL_VAR   struct<System.Threading.CancellationToken, 8> V06 tmp5         


               [000183] I-C-G-------              *  CALL      void   System.Threading.Tasks.Task..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000164] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp4         
               [000186] ------------ arg1         +--*  PUTARG_TYPE bool  
               [000176] ------------              |  \--*  CNS_INT   int    0
               [000177] ------------ arg2         +--*  CNS_INT   int    0
               [000185] n----------- arg3         \--*  OBJ       struct<System.Threading.CancellationToken, 8>
               [000184] ------------                 \--*  ADDR      byref 
               [000182] -------N----                    \--*  LCL_VAR   struct<System.Threading.CancellationToken, 8> V06 tmp5         

    [ 0]  17 (0x011) ldarg.0
    [ 1]  18 (0x012) ldarg.1
lvaGrabTemp returning 7 (V07 tmp6) called for Inlining Arg.

    [ 2]  19 (0x013) stfld 0A000658

               [000192] -A-XG-------              *  ASG       struct (copy)
               [000191] ---XG-------              +--*  OBJ       struct<System.ValueTuple`2[Boolean,__Canon], 16>
               [000190] ---XG-------              |  \--*  ADDR      byref 
               [000189] ---XG--N----              |     \--*  FIELD     struct m_result
               [000187] ------------              |        \--*  LCL_VAR   ref    V05 tmp4         
               [000188] ------------              \--*  LCL_VAR   struct<System.ValueTuple`2[Boolean,__Canon], 16> V07 tmp6         

    [ 0]  24 (0x018) ret
*************** Inline @[000165] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB52 [0036]  1                             1       [000..019)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB52 [000..019) (return), preds={} succs={}

***** BB52
               [000181] IA----------              *  ASG       struct (init)
               [000178] D------N----              +--*  LCL_VAR   struct<System.Threading.CancellationToken, 8> V06 tmp5         
               [000180] ------------              \--*  CNS_INT   int    0

***** BB52
               [000183] I-C-G-------              *  CALL      void   System.Threading.Tasks.Task..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000164] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp4         
               [000186] ------------ arg1         +--*  PUTARG_TYPE bool  
               [000176] ------------              |  \--*  CNS_INT   int    0
               [000177] ------------ arg2         +--*  CNS_INT   int    0
               [000185] n----------- arg3         \--*  OBJ       struct<System.Threading.CancellationToken, 8>
               [000184] ------------                 \--*  ADDR      byref 
               [000182] -------N----                    \--*  LCL_VAR   struct<System.Threading.CancellationToken, 8> V06 tmp5         

***** BB52
               [000192] -A-XG-------              *  ASG       struct (copy)
               [000191] ---XG-------              +--*  OBJ       struct<System.ValueTuple`2[Boolean,__Canon], 16>
               [000190] ---XG-------              |  \--*  ADDR      byref 
               [000189] ---XG--N----              |     \--*  FIELD     struct m_result
               [000187] ------------              |        \--*  LCL_VAR   ref    V05 tmp4         
               [000188] ------------              \--*  LCL_VAR   struct<System.ValueTuple`2[Boolean,__Canon], 16> V07 tmp6         

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000165] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000165] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000165] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000165] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000165] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000165] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000165] -----------

Arguments setup:
STMT00013 (IL 0x00B...  ???)
               [000195] -A----------              *  ASG       struct (copy)
               [000193] D------N----              +--*  LCL_VAR   struct<System.ValueTuple`2[Boolean,__Canon], 16> V07 tmp6         
               [000167] n-----------              \--*  OBJ       struct<System.ValueTuple`2[Boolean,__Canon], 16>
               [000166] ------------                 \--*  ADDR      byref 
               [000159] -------N----                    \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> V04 tmp3         

Inlinee method body:
STMT00010 (IL 0x00B...  ???)
               [000181] IA----------              *  ASG       struct (init)
               [000178] D------N----              +--*  LCL_VAR   struct<System.Threading.CancellationToken, 8> V06 tmp5         
               [000180] ------------              \--*  CNS_INT   int    0


STMT00011 (IL 0x00B...  ???)
               [000183] I-C-G-------              *  CALL      void   System.Threading.Tasks.Task..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000164] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp4         
               [000186] ------------ arg1         +--*  PUTARG_TYPE bool  
               [000176] ------------              |  \--*  CNS_INT   int    0
               [000177] ------------ arg2         +--*  CNS_INT   int    0
               [000185] n----------- arg3         \--*  OBJ       struct<System.Threading.CancellationToken, 8>
               [000184] ------------                 \--*  ADDR      byref 
               [000182] -------N----                    \--*  LCL_VAR   struct<System.Threading.CancellationToken, 8> V06 tmp5         


STMT00012 (IL 0x00B...  ???)
               [000192] -A-XG-------              *  ASG       struct (copy)
               [000191] ---XG-------              +--*  OBJ       struct<System.ValueTuple`2[Boolean,__Canon], 16>
               [000190] ---XG-------              |  \--*  ADDR      byref 
               [000189] ---XG--N----              |     \--*  FIELD     struct m_result
               [000187] ------------              |        \--*  LCL_VAR   ref    V05 tmp4         
               [000188] ------------              \--*  LCL_VAR   struct<System.ValueTuple`2[Boolean,__Canon], 16> V07 tmp6         

fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined System.Threading.Tasks.Task`1[ValueTuple`2][System.ValueTuple`2[System.Boolean,System.__Canon]]:.ctor(System.ValueTuple`2[Boolean,__Canon]):this (25 IL bytes) (depth 2) [profitable inline]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'profitable inline' for 'ThrowawayTesting.Program:Get():System.Threading.Tasks.Task`1[[System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]:this' calling 'System.Threading.Tasks.Task`1[ValueTuple`2][System.ValueTuple`2[System.Boolean,System.__Canon]]:.ctor(System.ValueTuple`2[Boolean,__Canon]):this'
INLINER: during 'fgInline' result 'success' reason 'profitable inline'
Expanding INLINE_CANDIDATE in statement STMT00011 in BB50:
STMT00011 (IL 0x00B...  ???)
               [000183] I-C-G-------              *  CALL      void   System.Threading.Tasks.Task..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000164] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp4         
               [000186] ------------ arg1         +--*  PUTARG_TYPE bool  
               [000176] ------------              |  \--*  CNS_INT   int    0
               [000177] ------------ arg2         +--*  CNS_INT   int    0
               [000185] n----------- arg3         \--*  OBJ       struct<System.Threading.CancellationToken, 8>
               [000184] ------------                 \--*  ADDR      byref 
               [000182] -------N----                    \--*  LCL_VAR   struct<System.Threading.CancellationToken, 8> V06 tmp5         
thisArg: is a local var
               [000164] ------------              *  LCL_VAR   ref    V05 tmp4         


Argument #1: is a constant
               [000176] ------------              *  CNS_INT   int    0


Argument #2: is a constant
               [000177] ------------              *  CNS_INT   int    0


Argument #3: has caller local ref
               [000185] n-----------              *  OBJ       struct<System.Threading.CancellationToken, 8>
               [000184] ------------              \--*  ADDR      byref 
               [000182] -------N----                 \--*  LCL_VAR   struct<System.Threading.CancellationToken, 8> V06 tmp5         


Folding operator with constant nodes into a constant:
               [000197] ------------              *  CAST      int <- bool <- int
               [000176] ------------              \--*  CNS_INT   int    0
Bashed to int constant:
               [000197] ------------              *  CNS_INT   int    0
INLINER: inlineInfo.tokenLookupContextHandle for System.Threading.Tasks.Task:.ctor(bool,int,System.Threading.CancellationToken):this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Threading.Tasks.Task:.ctor(bool,int,System.Threading.CancellationToken):this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  28 a7 04 00 06    call         0x60004A7
IL_0006  04                ldarg.2     
IL_0007  0a                stloc.0     
IL_0008  03                ldarg.1     
IL_0009  2c 2b             brfalse.s    43 (IL_0036)
IL_000b  02                ldarg.0     
IL_000c  20 00 00 50 00    ldc.i4       0x500000
IL_0011  06                ldloc.0     
IL_0012  60                or          
IL_0013  fe 13             volatile.   
IL_0015  7d 69 0c 00 04    stfld        0x4000C69
IL_001a  02                ldarg.0     
IL_001b  73 4f 2c 00 06    newobj       0x6002C4F
IL_0020  25                dup         
IL_0021  05                ldarg.3     
IL_0022  7d 75 0c 00 04    stfld        0x4000C75
IL_0027  25                dup         
IL_0028  17                ldc.i4.1    
IL_0029  fe 13             volatile.   
IL_002b  7d 77 0c 00 04    stfld        0x4000C77
IL_0030  7d 6e 0c 00 04    stfld        0x4000C6E
IL_0035  2a                ret         
IL_0036  02                ldarg.0     
IL_0037  20 00 00 00 01    ldc.i4       0x1000000
IL_003c  06                ldloc.0     
IL_003d  60                or          
IL_003e  fe 13             volatile.   
IL_0040  7d 69 0c 00 04    stfld        0x4000C69
IL_0045  2a                ret         

INLINER impTokenLookupContextHandle for System.Threading.Tasks.Task:.ctor(bool,int,System.Threading.CancellationToken):this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Threading.Tasks.Task:.ctor(bool,int,System.Threading.CancellationToken):this
weight= 10 : state   3 [ ldarg.0 ]
weight= 79 : state  40 [ call ]
weight= 35 : state   5 [ ldarg.2 ]
weight=  6 : state  11 [ stloc.0 ]
weight= 16 : state   4 [ ldarg.1 ]
weight= 27 : state  44 [ brfalse.s ]
weight= 10 : state   3 [ ldarg.0 ]
weight= 38 : state  33 [ ldc.i4 ]
weight= 12 : state   7 [ ldloc.0 ]
weight= -7 : state  84 [ or ]
weight=-44 : state 178 [ volatile ]
weight= 31 : state 111 [ stfld ]
weight= 10 : state   3 [ ldarg.0 ]
weight=227 : state 103 [ newobj ]
weight= 11 : state  38 [ dup ]
weight= 28 : state   6 [ ldarg.3 ]
weight= 31 : state 111 [ stfld ]
weight= 11 : state  38 [ dup ]
weight= 28 : state  24 [ ldc.i4.1 ]
weight=-44 : state 178 [ volatile ]
weight= 31 : state 111 [ stfld ]
weight= 31 : state 111 [ stfld ]
weight= 19 : state  42 [ ret ]
weight= 10 : state   3 [ ldarg.0 ]
weight= 38 : state  33 [ ldc.i4 ]
weight= 12 : state   7 [ ldloc.0 ]
weight= -7 : state  84 [ or ]
weight=-44 : state 178 [ volatile ]
weight= 31 : state 111 [ stfld ]
weight= 19 : state  42 [ ret ]

multiplier in instance constructors increased to 1.5.
Inline candidate has an arg that feeds a constant test.  Multiplier increased to 2.5.
Inline candidate has const arg that feeds a conditional.  Multiplier increased to 5.5.
Inline candidate callsite is boring.  Multiplier increased to 6.8.
calleeNativeSizeEstimate=655
callsiteNativeSizeEstimate=175
benefit multiplier=6.8
threshold=1190
Native estimate for function size is within threshold for inlining 65.5 <= 119 (multiplier = 6.8)
Jump targets:
  IL_0036
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB53 [0037] created.
BB53 [000..00B)
New Basic Block BB54 [0038] created.
BB54 [00B..036)
New Basic Block BB55 [0039] created.
BB55 [036..046)
Basic block list for 'System.Threading.Tasks.Task:.ctor(bool,int,System.Threading.CancellationToken):this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB53 [0037]  1                             1       [000..00B)-> BB55 ( cond )                     
BB54 [0038]  1                             1       [00B..036)        (return)                     
BB55 [0039]  1                             1       [036..046)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000183] Starting PHASE Pre-import

*************** Inline @[000183] Finishing PHASE Pre-import

*************** Inline @[000183] Starting PHASE Importation
*************** In impImport() for System.Threading.Tasks.Task:.ctor(bool,int,System.Threading.CancellationToken):this

impImportBlockPending for BB53

Importing BB53 (PC=000) of 'System.Threading.Tasks.Task:.ctor(bool,int,System.Threading.CancellationToken):this'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) call 060004A7
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0


               [000198] I-C-G-------              *  CALL      void   System.Object..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000164] ------------ this in rcx  \--*  LCL_VAR   ref    V05 tmp4         

    [ 0]   6 (0x006) ldarg.2
    [ 1]   7 (0x007) stloc.0
lvaGrabTemp returning 8 (V08 tmp7) (a long lifetime temp) called for Inline stloc first use temp.


               [000201] -A----------              *  ASG       int   
               [000200] D------N----              +--*  LCL_VAR   int    V08 tmp7         
               [000199] ------------              \--*  CNS_INT   int    0

    [ 0]   8 (0x008) ldarg.1
    [ 1]   9 (0x009) brfalse.s
Folding operator with constant nodes into a constant:
               [000204] ------------              *  EQ        int   
               [000202] ------------              +--*  CNS_INT   int    0
               [000203] ------------              \--*  CNS_INT   int    0
Bashed to int constant:
               [000204] ------------              *  CNS_INT   int    1

The conditional jump becomes an unconditional jump to BB55

impImportBlockPending for BB55

Importing BB55 (PC=054) of 'System.Threading.Tasks.Task:.ctor(bool,int,System.Threading.CancellationToken):this'
    [ 0]  54 (0x036) ldarg.0
    [ 1]  55 (0x037) ldc.i4 16777216
    [ 2]  60 (0x03c) ldloc.0
    [ 3]  61 (0x03d) or
    [ 2]  62 (0x03e) volatile.stfld 04000C69

               [000210] -A-XGO------              *  ASG       int   
               [000209] V--XGO-N----              +--*  FIELD     int    m_stateFlags
               [000205] ------------              |  \--*  LCL_VAR   ref    V05 tmp4         
               [000208] ------------              \--*  OR        int   
               [000206] ------------                 +--*  CNS_INT   int    0x1000000
               [000207] ------------                 \--*  LCL_VAR   int    V08 tmp7         

    [ 0]  69 (0x045) ret
** Note: inlinee IL was partially imported -- imported 27 of 70 bytes of method IL

*************** Inline @[000183] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB53 [0037]  1                             1       [000..00B)-> BB55 (always)                     i 
BB54 [0038]  1                             1       [00B..036)        (return)                     
BB55 [0039]  1                             1       [036..046)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB53 [000..00B) -> BB55 (always), preds={} succs={BB55}

***** BB53
               [000198] I-C-G-------              *  CALL      void   System.Object..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000164] ------------ this in rcx  \--*  LCL_VAR   ref    V05 tmp4         

***** BB53
               [000201] -A----------              *  ASG       int   
               [000200] D------N----              +--*  LCL_VAR   int    V08 tmp7         
               [000199] ------------              \--*  CNS_INT   int    0

------------ BB54 [00B..036) (return), preds={} succs={}

------------ BB55 [036..046) (return), preds={} succs={}

***** BB55
               [000210] -A-XGO------              *  ASG       int   
               [000209] V--XGO-N----              +--*  FIELD     int    m_stateFlags
               [000205] ------------              |  \--*  LCL_VAR   ref    V05 tmp4         
               [000208] ------------              \--*  OR        int   
               [000206] ------------                 +--*  CNS_INT   int    0x1000000
               [000207] ------------                 \--*  LCL_VAR   int    V08 tmp7         

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000183] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000183] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000183] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000183] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000183] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks
BB54 was not imported, marking as removed (0)

Renumbering the basic blocks for fgRemoveEmptyBlocks

*************** Before renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB53 [0037]  1                             1       [000..00B)-> BB55 (always)                     i 
BB55 [0039]  1                             1       [036..046)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
Renumber BB53 to BB56
Renumber BB55 to BB57

*************** After renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB56 [0037]  1                             1       [000..00B)-> BB57 (always)                     i 
BB57 [0039]  1                             1       [036..046)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty

New BlockSet epoch 1, # of blocks (including unused BB00): 1, bitset array size: 1 (short)

*************** Inline @[000183] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000183] -----------

Arguments setup:

Inlinee method body:New Basic Block BB58 [0040] created.

Convert bbJumpKind of BB57 to BBJ_NONE
fgInlineAppendStatements: no gc ref inline locals.

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB56 [0037]  1                             1       [00B..00C)-> BB57 (always)                     i 
BB57 [0039]  1                             1       [00B..00C)                                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB56 [00B..00C) -> BB57 (always), preds={} succs={BB57}

***** BB56
STMT00014 (IL 0x00B...  ???)
               [000198] I-C-G-------              *  CALL      void   System.Object..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000164] ------------ this in rcx  \--*  LCL_VAR   ref    V05 tmp4         

***** BB56
STMT00015 (IL 0x00B...  ???)
               [000201] -A----------              *  ASG       int   
               [000200] D------N----              +--*  LCL_VAR   int    V08 tmp7         
               [000199] ------------              \--*  CNS_INT   int    0

------------ BB57 [00B..00C), preds={} succs={BB58}

***** BB57
STMT00016 (IL 0x00B...  ???)
               [000210] -A-XGO------              *  ASG       int   
               [000209] V--XGO-N----              +--*  FIELD     int    m_stateFlags
               [000205] ------------              |  \--*  LCL_VAR   ref    V05 tmp4         
               [000208] ------------              \--*  OR        int   
               [000206] ------------                 +--*  CNS_INT   int    0x1000000
               [000207] ------------                 \--*  LCL_VAR   int    V08 tmp7         

-------------------------------------------------------------------------------------------------------------------
Successfully inlined System.Threading.Tasks.Task:.ctor(bool,int,System.Threading.CancellationToken):this (70 IL bytes) (depth 3) [profitable inline]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'profitable inline' for 'ThrowawayTesting.Program:Get():System.Threading.Tasks.Task`1[[System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]:this' calling 'System.Threading.Tasks.Task:.ctor(bool,int,System.Threading.CancellationToken):this'
INLINER: during 'fgInline' result 'success' reason 'profitable inline'
Expanding INLINE_CANDIDATE in statement STMT00014 in BB56:
STMT00014 (IL 0x00B...  ???)
               [000198] I-C-G-------              *  CALL      void   System.Object..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000164] ------------ this in rcx  \--*  LCL_VAR   ref    V05 tmp4         
thisArg: is a local var
               [000164] ------------              *  LCL_VAR   ref    V05 tmp4         

INLINER: inlineInfo.tokenLookupContextHandle for System.Object:.ctor():this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Object:.ctor():this :
IL to import:
IL_0000  2a                ret         

INLINER impTokenLookupContextHandle for System.Object:.ctor():this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Object:.ctor():this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB59 [0041] created.
BB59 [000..001)
Basic block list for 'System.Object:.ctor():this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB59 [0041]  1                             1       [000..001)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000198] Starting PHASE Pre-import

*************** Inline @[000198] Finishing PHASE Pre-import

*************** Inline @[000198] Starting PHASE Importation
*************** In impImport() for System.Object:.ctor():this

impImportBlockPending for BB59

Importing BB59 (PC=000) of 'System.Object:.ctor():this'
    [ 0]   0 (0x000) ret
** Note: inlinee IL was partially imported -- imported 0 of 1 bytes of method IL

*************** Inline @[000198] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB59 [0041]  1                             1       [000..001)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB59 [000..001) (return), preds={} succs={}

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000198] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000198] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000198] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000198] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000198] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000198] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000198] -----------

Arguments setup:

Inlinee method body:fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined System.Object:.ctor():this (1 IL bytes) (depth 4) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'ThrowawayTesting.Program:Get():System.Threading.Tasks.Task`1[[System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]:this' calling 'System.Object:.ctor():this'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'

Replacing the return expression placeholder [000015] with [000171]
               [000015] --C---------              *  RET_EXPR  ref   (inl return from call [000171])

Inserting the inline return expression
               [000171] ------------              *  LCL_VAR   ref    V03 tmp2         

**************** Inline Tree
Inlines into 06000002 [via DefaultPolicy] ThrowawayTesting.Program:Get():System.Threading.Tasks.Task`1[[System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]:this
  [1 IL=0006 TR=000007 06001B53] [below ALWAYS_INLINE size] System.ValueTuple`2[Boolean,__Canon][System.Boolean,System.__Canon]:.ctor(bool,System.__Canon):this
  [2 IL=0011 TR=000011 06002C27] [aggressive inline attribute] System.Threading.Tasks.Task:FromResult(System.ValueTuple`2[Boolean,__Canon]):System.Threading.Tasks.Task`1[ValueTuple`2]
    [3 IL=0604 TR=000165 06002ACE] [profitable inline] System.Threading.Tasks.Task`1[ValueTuple`2][System.ValueTuple`2[System.Boolean,System.__Canon]]:.ctor(System.ValueTuple`2[Boolean,__Canon]):this
      [4 IL=0012 TR=000183 06002B80] [profitable inline] System.Threading.Tasks.Task:.ctor(bool,int,System.Threading.CancellationToken):this
        [5 IL=0001 TR=000198 060004A7] [below ALWAYS_INLINE size] System.Object:.ctor():this
Budget: initialTime=111, finalTime=189, initialBudget=1110, currentBudget=1110
Budget: initialSize=518, finalSize=1198

*************** Finishing PHASE Morph - Inlining
Trees after Morph - Inlining

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)                                     i 
BB36 [0002]  1                             1       [00B..00C)-> BB37 (always)                     i 
BB37 [0004]  1                             0.50    [00B..00C)                                     i 
BB38 [0005]  1                             0.50    [00B..00C)-> BB39 (always)                     i 
BB39 [0010]  1                             0.50    [00B..00C)-> BB40 (always)                     i 
BB40 [0013]  1                             0.50    [00B..00C)-> BB41 (always)                     i 
BB41 [0015]  2                             0.50    [00B..00C)-> BB42 (always)                     i 
BB42 [0017]  2                             0.50    [00B..00C)-> BB43 (always)                     i 
BB43 [0019]  2                             0.50    [00B..00C)-> BB44 (always)                     i 
BB44 [0021]  2                             0.50    [00B..00C)-> BB45 (always)                     i 
BB45 [0023]  2                             0.50    [00B..00C)-> BB46 (always)                     i 
BB46 [0025]  2                             0.50    [00B..00C)-> BB47 (always)                     i 
BB47 [0027]  2                             0.50    [00B..00C)-> BB48 (always)                     i 
BB48 [0029]  2                             0.50    [00B..00C)-> BB49 (always)                     i 
BB49 [0031]  2                             0.50    [00B..00C)-> BB50 (always)                     i 
BB50 [0034]  4                             1       [00B..00C)                                     i newobj 
BB56 [0037]  1                             1       [00B..00C)-> BB57 (always)                     i 
BB57 [0039]  1                             1       [00B..00C)                                     i 
BB58 [0040]  1                             1       [???..???)                                     internal newobj 
BB51 [0035]  1                             1       [???..???)        (return)                     internal newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..011), preds={} succs={BB36}

***** BB01
STMT00000 (IL 0x000...0x010)
               [000004] IA----------              *  ASG       struct (init)
               [000002] D------N----              +--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> V02 tmp1         
               [000003] ------------              \--*  CNS_INT   int    0

***** BB01
STMT00004 (IL   ???...  ???)
               [000022] -A----------              *  ASG       bool  
               [000021] -------N----              +--*  FIELD     bool   Item1
               [000018] ------------              |  \--*  ADDR      byref 
               [000019] -------N----              |     \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> V02 tmp1         
               [000020] ------------              \--*  CNS_INT   int    1

***** BB01
STMT00005 (IL   ???...  ???)
               [000027] -A----------              *  ASG       ref   
               [000026] -------N----              +--*  FIELD     ref    Item2
               [000023] ------------              |  \--*  ADDR      byref 
               [000024] -------N----              |     \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> V02 tmp1         
               [000025] ------------              \--*  CNS_STR   ref   <string constant>

***** BB01
STMT00009 (IL 0x00B...  ???)
               [000174] -A----------              *  ASG       struct (copy)
               [000172] D------N----              +--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> V04 tmp3         
               [000014] n-----------              \--*  OBJ       struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16>
               [000013] ------------                 \--*  ADDR      byref 
               [000010] -------N----                    \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> V02 tmp1         

------------ BB36 [00B..00C) -> BB37 (always), preds={} succs={BB37}

------------ BB37 [00B..00C), preds={} succs={BB38}

------------ BB38 [00B..00C) -> BB39 (always), preds={} succs={BB39}

------------ BB39 [00B..00C) -> BB40 (always), preds={} succs={BB40}

------------ BB40 [00B..00C) -> BB41 (always), preds={} succs={BB41}

------------ BB41 [00B..00C) -> BB42 (always), preds={} succs={BB42}

------------ BB42 [00B..00C) -> BB43 (always), preds={} succs={BB43}

------------ BB43 [00B..00C) -> BB44 (always), preds={} succs={BB44}

------------ BB44 [00B..00C) -> BB45 (always), preds={} succs={BB45}

------------ BB45 [00B..00C) -> BB46 (always), preds={} succs={BB46}

------------ BB46 [00B..00C) -> BB47 (always), preds={} succs={BB47}

------------ BB47 [00B..00C) -> BB48 (always), preds={} succs={BB48}

------------ BB48 [00B..00C) -> BB49 (always), preds={} succs={BB49}

------------ BB49 [00B..00C) -> BB50 (always), preds={} succs={BB50}

------------ BB50 [00B..00C), preds={} succs={BB56}

***** BB50
STMT00006 (IL 0x00B...  ???)
               [000163] -A----------              *  ASG       ref   
               [000162] D------N----              +--*  LCL_VAR   ref    V05 tmp4         
               [000161] ------------              \--*  ALLOCOBJ  ref   
               [000160] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB50
STMT00013 (IL 0x00B...  ???)
               [000195] -A----------              *  ASG       struct (copy)
               [000193] D------N----              +--*  LCL_VAR   struct<System.ValueTuple`2[Boolean,__Canon], 16> V07 tmp6         
               [000167] n-----------              \--*  OBJ       struct<System.ValueTuple`2[Boolean,__Canon], 16>
               [000166] ------------                 \--*  ADDR      byref 
               [000159] -------N----                    \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> V04 tmp3         

***** BB50
STMT00010 (IL 0x00B...  ???)
               [000181] IA----------              *  ASG       struct (init)
               [000178] D------N----              +--*  LCL_VAR   struct<System.Threading.CancellationToken, 8> V06 tmp5         
               [000180] ------------              \--*  CNS_INT   int    0

------------ BB56 [00B..00C) -> BB57 (always), preds={} succs={BB57}

***** BB56
STMT00015 (IL 0x00B...  ???)
               [000201] -A----------              *  ASG       int   
               [000200] D------N----              +--*  LCL_VAR   int    V08 tmp7         
               [000199] ------------              \--*  CNS_INT   int    0

------------ BB57 [00B..00C), preds={} succs={BB58}

***** BB57
STMT00016 (IL 0x00B...  ???)
               [000210] -A-XGO------              *  ASG       int   
               [000209] V--XGO-N----              +--*  FIELD     int    m_stateFlags
               [000205] ------------              |  \--*  LCL_VAR   ref    V05 tmp4         
               [000208] ------------              \--*  OR        int   
               [000206] ------------                 +--*  CNS_INT   int    0x1000000
               [000207] ------------                 \--*  LCL_VAR   int    V08 tmp7         

------------ BB58 [???..???), preds={} succs={BB51}

***** BB58
STMT00012 (IL 0x00B...  ???)
               [000192] -A-XG-------              *  ASG       struct (copy)
               [000191] ---XG-------              +--*  OBJ       struct<System.ValueTuple`2[Boolean,__Canon], 16>
               [000190] ---XG-------              |  \--*  ADDR      byref 
               [000189] ---XG--N----              |     \--*  FIELD     struct m_result
               [000187] ------------              |        \--*  LCL_VAR   ref    V05 tmp4         
               [000188] ------------              \--*  LCL_VAR   struct<System.ValueTuple`2[Boolean,__Canon], 16> V07 tmp6         

***** BB58
STMT00008 (IL 0x00B...  ???)
               [000170] -A----------              *  ASG       ref   
               [000169] D------N----              +--*  LCL_VAR   ref    V03 tmp2         
               [000168] ------------              \--*  LCL_VAR   ref    V05 tmp4         

------------ BB51 [???..???) (return), preds={} succs={}

***** BB51
STMT00003 (IL   ???...  ???)
               [000016] --C---------              *  RETURN    ref   
               [000171] ------------              \--*  LCL_VAR   ref    V03 tmp2         

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Allocate Objects
disabled, punting

*************** Finishing PHASE Allocate Objects [no changes]

*************** Starting PHASE Morph - Add internal blocks

*************** After fgAddInternal()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)                                     i 
BB36 [0002]  1                             1       [00B..00C)-> BB37 (always)                     i 
BB37 [0004]  1                             0.50    [00B..00C)                                     i 
BB38 [0005]  1                             0.50    [00B..00C)-> BB39 (always)                     i 
BB39 [0010]  1                             0.50    [00B..00C)-> BB40 (always)                     i 
BB40 [0013]  1                             0.50    [00B..00C)-> BB41 (always)                     i 
BB41 [0015]  2                             0.50    [00B..00C)-> BB42 (always)                     i 
BB42 [0017]  2                             0.50    [00B..00C)-> BB43 (always)                     i 
BB43 [0019]  2                             0.50    [00B..00C)-> BB44 (always)                     i 
BB44 [0021]  2                             0.50    [00B..00C)-> BB45 (always)                     i 
BB45 [0023]  2                             0.50    [00B..00C)-> BB46 (always)                     i 
BB46 [0025]  2                             0.50    [00B..00C)-> BB47 (always)                     i 
BB47 [0027]  2                             0.50    [00B..00C)-> BB48 (always)                     i 
BB48 [0029]  2                             0.50    [00B..00C)-> BB49 (always)                     i 
BB49 [0031]  2                             0.50    [00B..00C)-> BB50 (always)                     i 
BB50 [0034]  4                             1       [00B..00C)                                     i newobj 
BB56 [0037]  1                             1       [00B..00C)-> BB57 (always)                     i 
BB57 [0039]  1                             1       [00B..00C)                                     i 
BB58 [0040]  1                             1       [???..???)                                     internal newobj 
BB51 [0035]  1                             1       [???..???)        (return)                     internal newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty

*************** Finishing PHASE Morph - Add internal blocks

*************** Starting PHASE Remove empty try

*************** In fgRemoveEmptyTry()
No EH in this method, nothing to remove.

*************** Finishing PHASE Remove empty try [no changes]

*************** Starting PHASE Remove empty finally
No EH in this method, nothing to remove.

*************** Finishing PHASE Remove empty finally [no changes]

*************** Starting PHASE Merge callfinally chains
No EH in this method, nothing to merge.

*************** Finishing PHASE Merge callfinally chains [no changes]

*************** Starting PHASE Clone finally
No EH in this method, no cloning.

*************** Finishing PHASE Clone finally [no changes]

*************** Starting PHASE Compute preds

Renumbering the basic blocks for fgComputePred

*************** Before renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)                                     i 
BB36 [0002]  1                             1       [00B..00C)-> BB37 (always)                     i 
BB37 [0004]  1                             0.50    [00B..00C)                                     i 
BB38 [0005]  1                             0.50    [00B..00C)-> BB39 (always)                     i 
BB39 [0010]  1                             0.50    [00B..00C)-> BB40 (always)                     i 
BB40 [0013]  1                             0.50    [00B..00C)-> BB41 (always)                     i 
BB41 [0015]  2                             0.50    [00B..00C)-> BB42 (always)                     i 
BB42 [0017]  2                             0.50    [00B..00C)-> BB43 (always)                     i 
BB43 [0019]  2                             0.50    [00B..00C)-> BB44 (always)                     i 
BB44 [0021]  2                             0.50    [00B..00C)-> BB45 (always)                     i 
BB45 [0023]  2                             0.50    [00B..00C)-> BB46 (always)                     i 
BB46 [0025]  2                             0.50    [00B..00C)-> BB47 (always)                     i 
BB47 [0027]  2                             0.50    [00B..00C)-> BB48 (always)                     i 
BB48 [0029]  2                             0.50    [00B..00C)-> BB49 (always)                     i 
BB49 [0031]  2                             0.50    [00B..00C)-> BB50 (always)                     i 
BB50 [0034]  4                             1       [00B..00C)                                     i newobj 
BB56 [0037]  1                             1       [00B..00C)-> BB57 (always)                     i 
BB57 [0039]  1                             1       [00B..00C)                                     i 
BB58 [0040]  1                             1       [???..???)                                     internal newobj 
BB51 [0035]  1                             1       [???..???)        (return)                     internal newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
Renumber BB36 to BB02
Renumber BB37 to BB03
Renumber BB38 to BB04
Renumber BB39 to BB05
Renumber BB40 to BB06
Renumber BB41 to BB07
Renumber BB42 to BB08
Renumber BB43 to BB09
Renumber BB44 to BB10
Renumber BB45 to BB11
Renumber BB46 to BB12
Renumber BB47 to BB13
Renumber BB48 to BB14
Renumber BB49 to BB15
Renumber BB50 to BB16
Renumber BB56 to BB17
Renumber BB57 to BB18
Renumber BB58 to BB19
Renumber BB51 to BB20

*************** After renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)                                     i 
BB02 [0002]  1                             1       [00B..00C)-> BB03 (always)                     i 
BB03 [0004]  1                             0.50    [00B..00C)                                     i 
BB04 [0005]  1                             0.50    [00B..00C)-> BB05 (always)                     i 
BB05 [0010]  1                             0.50    [00B..00C)-> BB06 (always)                     i 
BB06 [0013]  1                             0.50    [00B..00C)-> BB07 (always)                     i 
BB07 [0015]  2                             0.50    [00B..00C)-> BB08 (always)                     i 
BB08 [0017]  2                             0.50    [00B..00C)-> BB09 (always)                     i 
BB09 [0019]  2                             0.50    [00B..00C)-> BB10 (always)                     i 
BB10 [0021]  2                             0.50    [00B..00C)-> BB11 (always)                     i 
BB11 [0023]  2                             0.50    [00B..00C)-> BB12 (always)                     i 
BB12 [0025]  2                             0.50    [00B..00C)-> BB13 (always)                     i 
BB13 [0027]  2                             0.50    [00B..00C)-> BB14 (always)                     i 
BB14 [0029]  2                             0.50    [00B..00C)-> BB15 (always)                     i 
BB15 [0031]  2                             0.50    [00B..00C)-> BB16 (always)                     i 
BB16 [0034]  4                             1       [00B..00C)                                     i newobj 
BB17 [0037]  1                             1       [00B..00C)-> BB18 (always)                     i 
BB18 [0039]  1                             1       [00B..00C)                                     i 
BB19 [0040]  1                             1       [???..???)                                     internal newobj 
BB20 [0035]  1                             1       [???..???)        (return)                     internal newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty

New BlockSet epoch 2, # of blocks (including unused BB00): 21, bitset array size: 1 (short)

*************** In fgComputePreds()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)                                     i 
BB02 [0002]  1                             1       [00B..00C)-> BB03 (always)                     i 
BB03 [0004]  1                             0.50    [00B..00C)                                     i 
BB04 [0005]  1                             0.50    [00B..00C)-> BB05 (always)                     i 
BB05 [0010]  1                             0.50    [00B..00C)-> BB06 (always)                     i 
BB06 [0013]  1                             0.50    [00B..00C)-> BB07 (always)                     i 
BB07 [0015]  2                             0.50    [00B..00C)-> BB08 (always)                     i 
BB08 [0017]  2                             0.50    [00B..00C)-> BB09 (always)                     i 
BB09 [0019]  2                             0.50    [00B..00C)-> BB10 (always)                     i 
BB10 [0021]  2                             0.50    [00B..00C)-> BB11 (always)                     i 
BB11 [0023]  2                             0.50    [00B..00C)-> BB12 (always)                     i 
BB12 [0025]  2                             0.50    [00B..00C)-> BB13 (always)                     i 
BB13 [0027]  2                             0.50    [00B..00C)-> BB14 (always)                     i 
BB14 [0029]  2                             0.50    [00B..00C)-> BB15 (always)                     i 
BB15 [0031]  2                             0.50    [00B..00C)-> BB16 (always)                     i 
BB16 [0034]  4                             1       [00B..00C)                                     i newobj 
BB17 [0037]  1                             1       [00B..00C)-> BB18 (always)                     i 
BB18 [0039]  1                             1       [00B..00C)                                     i 
BB19 [0040]  1                             1       [???..???)                                     internal newobj 
BB20 [0035]  1                             1       [???..???)        (return)                     internal newobj 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** After fgComputePreds()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)                                     i label target 
BB02 [0002]  1       BB01                  1       [00B..00C)-> BB03 (always)                     i 
BB03 [0004]  1       BB02                  0.50    [00B..00C)                                     i label target 
BB04 [0005]  1       BB03                  0.50    [00B..00C)-> BB05 (always)                     i 
BB05 [0010]  1       BB04                  0.50    [00B..00C)-> BB06 (always)                     i label target 
BB06 [0013]  1       BB05                  0.50    [00B..00C)-> BB07 (always)                     i label target 
BB07 [0015]  1       BB06                  0.50    [00B..00C)-> BB08 (always)                     i label target 
BB08 [0017]  1       BB07                  0.50    [00B..00C)-> BB09 (always)                     i label target 
BB09 [0019]  1       BB08                  0.50    [00B..00C)-> BB10 (always)                     i label target 
BB10 [0021]  1       BB09                  0.50    [00B..00C)-> BB11 (always)                     i label target 
BB11 [0023]  1       BB10                  0.50    [00B..00C)-> BB12 (always)                     i label target 
BB12 [0025]  1       BB11                  0.50    [00B..00C)-> BB13 (always)                     i label target 
BB13 [0027]  1       BB12                  0.50    [00B..00C)-> BB14 (always)                     i label target 
BB14 [0029]  1       BB13                  0.50    [00B..00C)-> BB15 (always)                     i label target 
BB15 [0031]  1       BB14                  0.50    [00B..00C)-> BB16 (always)                     i label target 
BB16 [0034]  1       BB15                  1       [00B..00C)                                     i label target newobj 
BB17 [0037]  1       BB16                  1       [00B..00C)-> BB18 (always)                     i 
BB18 [0039]  1       BB17                  1       [00B..00C)                                     i label target 
BB19 [0040]  1       BB18                  1       [???..???)                                     internal newobj 
BB20 [0035]  1       BB19                  1       [???..???)        (return)                     internal newobj 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** Finishing PHASE Compute preds

*************** Starting PHASE Merge throw blocks

*************** In fgTailMergeThrows
Method does not have multiple noreturn calls.

*************** Finishing PHASE Merge throw blocks [no changes]

*************** Starting PHASE Update flow graph early pass

*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)                                     i label target 
BB02 [0002]  1       BB01                  1       [00B..00C)-> BB03 (always)                     i 
BB03 [0004]  1       BB02                  0.50    [00B..00C)                                     i label target 
BB04 [0005]  1       BB03                  0.50    [00B..00C)-> BB05 (always)                     i 
BB05 [0010]  1       BB04                  0.50    [00B..00C)-> BB06 (always)                     i label target 
BB06 [0013]  1       BB05                  0.50    [00B..00C)-> BB07 (always)                     i label target 
BB07 [0015]  1       BB06                  0.50    [00B..00C)-> BB08 (always)                     i label target 
BB08 [0017]  1       BB07                  0.50    [00B..00C)-> BB09 (always)                     i label target 
BB09 [0019]  1       BB08                  0.50    [00B..00C)-> BB10 (always)                     i label target 
BB10 [0021]  1       BB09                  0.50    [00B..00C)-> BB11 (always)                     i label target 
BB11 [0023]  1       BB10                  0.50    [00B..00C)-> BB12 (always)                     i label target 
BB12 [0025]  1       BB11                  0.50    [00B..00C)-> BB13 (always)                     i label target 
BB13 [0027]  1       BB12                  0.50    [00B..00C)-> BB14 (always)                     i label target 
BB14 [0029]  1       BB13                  0.50    [00B..00C)-> BB15 (always)                     i label target 
BB15 [0031]  1       BB14                  0.50    [00B..00C)-> BB16 (always)                     i label target 
BB16 [0034]  1       BB15                  1       [00B..00C)                                     i label target newobj 
BB17 [0037]  1       BB16                  1       [00B..00C)-> BB18 (always)                     i 
BB18 [0039]  1       BB17                  1       [00B..00C)                                     i label target 
BB19 [0040]  1       BB18                  1       [???..???)                                     internal newobj 
BB20 [0035]  1       BB19                  1       [???..???)        (return)                     internal newobj 
-----------------------------------------------------------------------------------------------------------------------------------------


Compacting blocks BB01 and BB02:
*************** In fgDebugCheckBBlist

Removing unconditional jump to next block (BB01 -> BB03) (converted BB01 to fall-through)

Compacting blocks BB01 and BB03:
*************** In fgDebugCheckBBlist

Compacting blocks BB01 and BB04:
*************** In fgDebugCheckBBlist

Removing unconditional jump to next block (BB01 -> BB05) (converted BB01 to fall-through)

Compacting blocks BB01 and BB05:
*************** In fgDebugCheckBBlist

Removing unconditional jump to next block (BB01 -> BB06) (converted BB01 to fall-through)

Compacting blocks BB01 and BB06:
*************** In fgDebugCheckBBlist

Removing unconditional jump to next block (BB01 -> BB07) (converted BB01 to fall-through)

Compacting blocks BB01 and BB07:
*************** In fgDebugCheckBBlist

Removing unconditional jump to next block (BB01 -> BB08) (converted BB01 to fall-through)

Compacting blocks BB01 and BB08:
*************** In fgDebugCheckBBlist

Removing unconditional jump to next block (BB01 -> BB09) (converted BB01 to fall-through)

Compacting blocks BB01 and BB09:
*************** In fgDebugCheckBBlist

Removing unconditional jump to next block (BB01 -> BB10) (converted BB01 to fall-through)

Compacting blocks BB01 and BB10:
*************** In fgDebugCheckBBlist

Removing unconditional jump to next block (BB01 -> BB11) (converted BB01 to fall-through)

Compacting blocks BB01 and BB11:
*************** In fgDebugCheckBBlist

Removing unconditional jump to next block (BB01 -> BB12) (converted BB01 to fall-through)

Compacting blocks BB01 and BB12:
*************** In fgDebugCheckBBlist

Removing unconditional jump to next block (BB01 -> BB13) (converted BB01 to fall-through)

Compacting blocks BB01 and BB13:
*************** In fgDebugCheckBBlist

Removing unconditional jump to next block (BB01 -> BB14) (converted BB01 to fall-through)

Compacting blocks BB01 and BB14:
*************** In fgDebugCheckBBlist

Removing unconditional jump to next block (BB01 -> BB15) (converted BB01 to fall-through)

Compacting blocks BB01 and BB15:
*************** In fgDebugCheckBBlist

Removing unconditional jump to next block (BB01 -> BB16) (converted BB01 to fall-through)

Compacting blocks BB01 and BB16:
*************** In fgDebugCheckBBlist

Compacting blocks BB01 and BB17:
*************** In fgDebugCheckBBlist

Removing unconditional jump to next block (BB01 -> BB18) (converted BB01 to fall-through)

Compacting blocks BB01 and BB18:
*************** In fgDebugCheckBBlist

Compacting blocks BB01 and BB19:
*************** In fgDebugCheckBBlist

Compacting blocks BB01 and BB20:
*************** In fgDebugCheckBBlist

After updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)        (return)                     i label target newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Update flow graph early pass

*************** Starting PHASE Morph - Promote Structs

*************** In fgResetImplicitByRefRefCount()
*************** In fgPromoteStructs()

lvaTable before fgPromoteStructs
; Initial local variable assignments
;
;  V00 this              ref  this class-hnd
;  V01 OutArgs        lclBlk <na>  "OutgoingArgSpace"
;  V02 tmp1           struct <System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> "NewObj constructor temp"
;  V03 tmp2              ref  class-hnd "Inline return value spill temp"
;  V04 tmp3           struct <System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> "Inlining Arg"
;  V05 tmp4              ref  class-hnd exact "NewObj constructor temp"
;  V06 tmp5           struct <System.Threading.CancellationToken, 8> ld-addr-op "Inline ldloca(s) first use temp"
;  V07 tmp6           struct <System.ValueTuple`2[Boolean,__Canon], 16> "Inlining Arg"
;  V08 tmp7              int  "Inline stloc first use temp"

Promoting struct local V02 (System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]):
lvaGrabTemp returning 9 (V09 tmp8) (a long lifetime temp) called for field V02.Item2 (fldOffset=0x0).

lvaGrabTemp returning 10 (V10 tmp9) (a long lifetime temp) called for field V02.Item1 (fldOffset=0x8).

Promoting struct local V04 (System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]):
lvaGrabTemp returning 11 (V11 tmp10) (a long lifetime temp) called for field V04.Item2 (fldOffset=0x0).

lvaGrabTemp returning 12 (V12 tmp11) (a long lifetime temp) called for field V04.Item1 (fldOffset=0x8).

Promoting struct local V06 (System.Threading.CancellationToken):
lvaGrabTemp returning 13 (V13 tmp12) (a long lifetime temp) called for field V06._source (fldOffset=0x0).

Promoting struct local V07 (System.ValueTuple`2[Boolean,__Canon]):
lvaGrabTemp returning 14 (V14 tmp13) (a long lifetime temp) called for field V07.Item2 (fldOffset=0x0).

lvaGrabTemp returning 15 (V15 tmp14) (a long lifetime temp) called for field V07.Item1 (fldOffset=0x8).

lvaTable after fgPromoteStructs
; Initial local variable assignments
;
;  V00 this              ref  this class-hnd
;  V01 OutArgs        lclBlk <na>  "OutgoingArgSpace"
;  V02 tmp1           struct <System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> "NewObj constructor temp"
;  V03 tmp2              ref  class-hnd "Inline return value spill temp"
;  V04 tmp3           struct <System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> "Inlining Arg"
;  V05 tmp4              ref  class-hnd exact "NewObj constructor temp"
;  V06 tmp5           struct <System.Threading.CancellationToken, 8> ld-addr-op "Inline ldloca(s) first use temp"
;  V07 tmp6           struct <System.ValueTuple`2[Boolean,__Canon], 16> "Inlining Arg"
;  V08 tmp7              int  "Inline stloc first use temp"
;  V09 tmp8              ref  V02.Item2(offs=0x00) P-INDEP "field V02.Item2 (fldOffset=0x0)"
;  V10 tmp9             bool  V02.Item1(offs=0x08) P-INDEP "field V02.Item1 (fldOffset=0x8)"
;  V11 tmp10             ref  V04.Item2(offs=0x00) P-INDEP "field V04.Item2 (fldOffset=0x0)"
;  V12 tmp11            bool  V04.Item1(offs=0x08) P-INDEP "field V04.Item1 (fldOffset=0x8)"
;  V13 tmp12             ref  V06._source(offs=0x00) P-INDEP "field V06._source (fldOffset=0x0)"
;  V14 tmp13             ref  V07.Item2(offs=0x00) P-INDEP "field V07.Item2 (fldOffset=0x0)"
;  V15 tmp14            bool  V07.Item1(offs=0x08) P-INDEP "field V07.Item1 (fldOffset=0x8)"

*************** Finishing PHASE Morph - Promote Structs

*************** Starting PHASE Morph - Structs/AddrExp

*************** In fgMarkAddressExposedLocals()
LocalAddressVisitor visiting statement:
STMT00000 (IL 0x000...0x010)
               [000004] IA----------              *  ASG       struct (init)
               [000002] D------N----              +--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16>(P) V02 tmp1         
                                                  +--*    ref    V02.Item2 (offs=0x00) -> V09 tmp8         
                                                  +--*    bool   V02.Item1 (offs=0x08) -> V10 tmp9         
               [000003] ------------              \--*  CNS_INT   int    0

LocalAddressVisitor visiting statement:
STMT00004 (IL   ???...  ???)
               [000022] -A----------              *  ASG       bool  
               [000021] -------N----              +--*  FIELD     bool   Item1
               [000018] ------------              |  \--*  ADDR      byref 
               [000019] -------N----              |     \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16>(P) V02 tmp1         
                                                  |     \--*    ref    V02.Item2 (offs=0x00) -> V09 tmp8         
                                                  |     \--*    bool   V02.Item1 (offs=0x08) -> V10 tmp9         
               [000020] ------------              \--*  CNS_INT   int    1
Replacing the field in promoted struct with local var V10
LocalAddressVisitor modified statement:
STMT00004 (IL   ???...  ???)
               [000022] -A----------              *  ASG       bool  
               [000021] D------N----              +--*  LCL_VAR   bool   V10 tmp9         
               [000020] ------------              \--*  CNS_INT   int    1

LocalAddressVisitor visiting statement:
STMT00005 (IL   ???...  ???)
               [000027] -A----------              *  ASG       ref   
               [000026] -------N----              +--*  FIELD     ref    Item2
               [000023] ------------              |  \--*  ADDR      byref 
               [000024] -------N----              |     \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16>(P) V02 tmp1         
                                                  |     \--*    ref    V02.Item2 (offs=0x00) -> V09 tmp8         
                                                  |     \--*    bool   V02.Item1 (offs=0x08) -> V10 tmp9         
               [000025] ------------              \--*  CNS_STR   ref   <string constant>
Replacing the field in promoted struct with local var V09
LocalAddressVisitor modified statement:
STMT00005 (IL   ???...  ???)
               [000027] -A----------              *  ASG       ref   
               [000026] D------N----              +--*  LCL_VAR   ref    V09 tmp8         
               [000025] ------------              \--*  CNS_STR   ref   <string constant>

LocalAddressVisitor visiting statement:
STMT00009 (IL 0x00B...  ???)
               [000174] -A----------              *  ASG       struct (copy)
               [000172] D------N----              +--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16>(P) V04 tmp3         
                                                  +--*    ref    V04.Item2 (offs=0x00) -> V11 tmp10        
                                                  +--*    bool   V04.Item1 (offs=0x08) -> V12 tmp11        
               [000014] n-----------              \--*  OBJ       struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16>
               [000013] ------------                 \--*  ADDR      byref 
               [000010] -------N----                    \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16>(P) V02 tmp1         
                                                        \--*    ref    V02.Item2 (offs=0x00) -> V09 tmp8         
                                                        \--*    bool   V02.Item1 (offs=0x08) -> V10 tmp9         

LocalAddressVisitor visiting statement:
STMT00006 (IL 0x00B...  ???)
               [000163] -AC---------              *  ASG       ref   
               [000162] D------N----              +--*  LCL_VAR   ref    V05 tmp4         
               [000161] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000160] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token

LocalAddressVisitor visiting statement:
STMT00013 (IL 0x00B...  ???)
               [000195] -A----------              *  ASG       struct (copy)
               [000193] D------N----              +--*  LCL_VAR   struct<System.ValueTuple`2[Boolean,__Canon], 16>(P) V07 tmp6         
                                                  +--*    ref    V07.Item2 (offs=0x00) -> V14 tmp13        
                                                  +--*    bool   V07.Item1 (offs=0x08) -> V15 tmp14        
               [000167] n-----------              \--*  OBJ       struct<System.ValueTuple`2[Boolean,__Canon], 16>
               [000166] ------------                 \--*  ADDR      byref 
               [000159] -------N----                    \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16>(P) V04 tmp3         
                                                        \--*    ref    V04.Item2 (offs=0x00) -> V11 tmp10        
                                                        \--*    bool   V04.Item1 (offs=0x08) -> V12 tmp11        

LocalAddressVisitor visiting statement:
STMT00010 (IL 0x00B...  ???)
               [000181] IA----------              *  ASG       struct (init)
               [000178] D------N----              +--*  LCL_VAR   struct<System.Threading.CancellationToken, 8>(P) V06 tmp5         
                                                  +--*    ref    V06._source (offs=0x00) -> V13 tmp12        
               [000180] ------------              \--*  CNS_INT   int    0

LocalAddressVisitor visiting statement:
STMT00015 (IL 0x00B...  ???)
               [000201] -A----------              *  ASG       int   
               [000200] D------N----              +--*  LCL_VAR   int    V08 tmp7         
               [000199] ------------              \--*  CNS_INT   int    0

LocalAddressVisitor visiting statement:
STMT00016 (IL 0x00B...  ???)
               [000210] -A-XGO------              *  ASG       int   
               [000209] V--XGO-N----              +--*  FIELD     int    m_stateFlags
               [000205] ------------              |  \--*  LCL_VAR   ref    V05 tmp4         
               [000208] ------------              \--*  OR        int   
               [000206] ------------                 +--*  CNS_INT   int    0x1000000
               [000207] ------------                 \--*  LCL_VAR   int    V08 tmp7         

LocalAddressVisitor visiting statement:
STMT00012 (IL 0x00B...  ???)
               [000192] -A-XG-------              *  ASG       struct (copy)
               [000191] ---XG-------              +--*  OBJ       struct<System.ValueTuple`2[Boolean,__Canon], 16>
               [000190] ---XG-------              |  \--*  ADDR      byref 
               [000189] ---XG--N----              |     \--*  FIELD     struct m_result
               [000187] ------------              |        \--*  LCL_VAR   ref    V05 tmp4         
               [000188] ------------              \--*  LCL_VAR   struct<System.ValueTuple`2[Boolean,__Canon], 16>(P) V07 tmp6         
                                                  \--*    ref    V07.Item2 (offs=0x00) -> V14 tmp13        
                                                  \--*    bool   V07.Item1 (offs=0x08) -> V15 tmp14        

LocalAddressVisitor visiting statement:
STMT00008 (IL 0x00B...  ???)
               [000170] -A----------              *  ASG       ref   
               [000169] D------N----              +--*  LCL_VAR   ref    V03 tmp2         
               [000168] ------------              \--*  LCL_VAR   ref    V05 tmp4         

LocalAddressVisitor visiting statement:
STMT00003 (IL   ???...  ???)
               [000016] --C---------              *  RETURN    ref   
               [000171] ------------              \--*  LCL_VAR   ref    V03 tmp2         


*************** Finishing PHASE Morph - Structs/AddrExp

*************** Starting PHASE Morph - ByRefs

*************** In fgRetypeImplicitByRefArgs()

*************** Finishing PHASE Morph - ByRefs

*************** Starting PHASE Morph - Global

*************** In fgMorphBlocks()

Morphing BB01 of 'ThrowawayTesting.Program:Get():System.Threading.Tasks.Task`1[[System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]:this'

fgMorphTree BB01, STMT00000 (before)
               [000004] IA----------              *  ASG       struct (init)
               [000002] D------N----              +--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16>(P) V02 tmp1         
                                                  +--*    ref    V02.Item2 (offs=0x00) -> V09 tmp8         
                                                  +--*    bool   V02.Item1 (offs=0x08) -> V10 tmp9         
               [000003] ------------              \--*  CNS_INT   int    0
fgMorphBlkNode for dst tree, before:
               [000002] D----+-N----              *  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16>(P) V02 tmp1         
                                                  *    ref    V02.Item2 (offs=0x00) -> V09 tmp8         
                                                  *    bool   V02.Item1 (offs=0x08) -> V10 tmp9         
fgMorphBlkNode after:
               [000002] D----+-N----              *  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16>(P) V02 tmp1         
                                                  *    ref    V02.Item2 (offs=0x00) -> V09 tmp8         
                                                  *    bool   V02.Item1 (offs=0x08) -> V10 tmp9         

fgMorphInitBlock: using field by field initialization.
GenTreeNode creates assertion:
               [000215] -A----------              *  ASG       ref   
In BB01 New Local Constant Assertion: V09 == null index=#01, mask=0000000000000001
GenTreeNode creates assertion:
               [000218] -A----------              *  ASG       bool  
In BB01 New Local Constant Assertion: V10 == 0 index=#02, mask=0000000000000002
fgMorphInitBlock (after):
               [000219] -A---+------              *  COMMA     void  
               [000215] -A----------              +--*  ASG       ref   
               [000213] D------N----              |  +--*  LCL_VAR   ref    V09 tmp8         
               [000214] ------------              |  \--*  CNS_INT   ref    null
               [000218] -A----------              \--*  ASG       bool  
               [000216] D------N----                 +--*  LCL_VAR   bool   V10 tmp9         
               [000217] ------------                 \--*  CNS_INT   int    0

fgMorphTree BB01, STMT00000 (after)
               [000219] -A---+------              *  COMMA     void  
               [000215] -A----------              +--*  ASG       ref   
               [000213] D------N----              |  +--*  LCL_VAR   ref    V09 tmp8         
               [000214] ------------              |  \--*  CNS_INT   ref    null
               [000218] -A----------              \--*  ASG       bool  
               [000216] D------N----                 +--*  LCL_VAR   bool   V10 tmp9         
               [000217] ------------                 \--*  CNS_INT   int    0

fgMorphTree BB01, STMT00004 (before)
               [000022] -A----------              *  ASG       bool  
               [000021] D------N----              +--*  LCL_VAR   bool   V10 tmp9         
               [000020] ------------              \--*  CNS_INT   int    1

The assignment [000022] using V10 removes: Constant Assertion: V10 == 0
GenTreeNode creates assertion:
               [000022] -A----------              *  ASG       bool  
In BB01 New Local Constant Assertion: V10 == 1 index=#02, mask=0000000000000002

fgMorphTree BB01, STMT00005 (before)
               [000027] -A----------              *  ASG       ref   
               [000026] D------N----              +--*  LCL_VAR   ref    V09 tmp8         
               [000025] ------------              \--*  CNS_STR   ref   <string constant>

The assignment [000027] using V09 removes: Constant Assertion: V09 == null

fgMorphTree BB01, STMT00005 (after)
               [000027] -A--G+------              *  ASG       ref   
               [000026] D----+-N----              +--*  LCL_VAR   ref    V09 tmp8         
               [000221] #---G+------              \--*  IND       ref   
               [000220] H----+------                 \--*  CNS_INT(h) long   0xD1FFAB1E "string"

fgMorphTree BB01, STMT00009 (before)
               [000174] -A----------              *  ASG       struct (copy)
               [000172] D------N----              +--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16>(P) V04 tmp3         
                                                  +--*    ref    V04.Item2 (offs=0x00) -> V11 tmp10        
                                                  +--*    bool   V04.Item1 (offs=0x08) -> V12 tmp11        
               [000014] n-----------              \--*  OBJ       struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16>
               [000013] ------------                 \--*  ADDR      byref 
               [000010] -------N----                    \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16>(P) V02 tmp1         
                                                        \--*    ref    V02.Item2 (offs=0x00) -> V09 tmp8         
                                                        \--*    bool   V02.Item1 (offs=0x08) -> V10 tmp9         
fgMorphCopyBlock:
fgMorphBlkNode for dst tree, before:
               [000172] D----+-N----              *  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16>(P) V04 tmp3         
                                                  *    ref    V04.Item2 (offs=0x00) -> V11 tmp10        
                                                  *    bool   V04.Item1 (offs=0x08) -> V12 tmp11        
fgMorphBlkNode after:
               [000172] D----+-N----              *  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16>(P) V04 tmp3         
                                                  *    ref    V04.Item2 (offs=0x00) -> V11 tmp10        
                                                  *    bool   V04.Item1 (offs=0x08) -> V12 tmp11        
fgMorphBlkNode for src tree, before:
               [000014] n----+------              *  OBJ       struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16>
               [000013] -----+------              \--*  ADDR      byref 
               [000010] -----+-N----                 \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16>(P) V02 tmp1         
                                                     \--*    ref    V02.Item2 (offs=0x00) -> V09 tmp8         
                                                     \--*    bool   V02.Item1 (offs=0x08) -> V10 tmp9         
fgMorphBlkNode after:
               [000014] n----+------              *  OBJ       struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16>
               [000013] -----+------              \--*  ADDR      byref 
               [000010] -----+-N----                 \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16>(P) V02 tmp1         
                                                     \--*    ref    V02.Item2 (offs=0x00) -> V09 tmp8         
                                                     \--*    bool   V02.Item1 (offs=0x08) -> V10 tmp9         
block assignment to morph:
               [000174] -A----------              *  ASG       struct (copy)
               [000172] D----+-N----              +--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16>(P) V04 tmp3         
                                                  +--*    ref    V04.Item2 (offs=0x00) -> V11 tmp10        
                                                  +--*    bool   V04.Item1 (offs=0x08) -> V12 tmp11        
               [000014] n----+------              \--*  OBJ       struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16>
               [000013] -----+------                 \--*  ADDR      byref 
               [000010] -----+-N----                    \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16>(P) V02 tmp1         
                                                        \--*    ref    V02.Item2 (offs=0x00) -> V09 tmp8         
                                                        \--*    bool   V02.Item1 (offs=0x08) -> V10 tmp9         
 (destDoFldAsg=true) (srcDoFldAsg=true) using field by field assignments.
GenTreeNode creates assertion:
               [000224] -A----------              *  ASG       ref   
In BB01 New Local Copy     Assertion: V11 == V09 index=#02, mask=0000000000000002
GenTreeNode creates assertion:
               [000227] -A----------              *  ASG       bool  
In BB01 New Local Copy     Assertion: V12 == V10 index=#03, mask=0000000000000004

fgMorphCopyBlock (after):
               [000228] -A---+------              *  COMMA     void  
               [000224] -A----------              +--*  ASG       ref   
               [000222] D------N----              |  +--*  LCL_VAR   ref    V11 tmp10        
               [000223] -------N----              |  \--*  LCL_VAR   ref    V09 tmp8         
               [000227] -A----------              \--*  ASG       bool  
               [000225] D------N----                 +--*  LCL_VAR   bool   V12 tmp11        
               [000226] -------N----                 \--*  LCL_VAR   bool   V10 tmp9         

fgMorphTree BB01, STMT00009 (after)
               [000228] -A---+------              *  COMMA     void  
               [000224] -A----------              +--*  ASG       ref   
               [000222] D------N----              |  +--*  LCL_VAR   ref    V11 tmp10        
               [000223] -------N----              |  \--*  LCL_VAR   ref    V09 tmp8         
               [000227] -A----------              \--*  ASG       bool  
               [000225] D------N----                 +--*  LCL_VAR   bool   V12 tmp11        
               [000226] -------N----                 \--*  LCL_VAR   bool   V10 tmp9         

fgMorphTree BB01, STMT00006 (before)
               [000163] -AC---------              *  ASG       ref   
               [000162] D------N----              +--*  LCL_VAR   ref    V05 tmp4         
               [000161] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000160] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token
Initializing arg info for 161.CALL:
ArgTable for 161.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 160.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]

Morphing args for 161.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000160] H----+------              *  CNS_INT(h) long   0xd1ffab1e token
Replaced with placeholder node:
               [000229] ----------L-              *  ARGPLACE  long  

Shuffled argument table:    rcx 
ArgTable for 161.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 160.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]


fgMorphTree BB01, STMT00006 (after)
               [000163] -AC--+------              *  ASG       ref   
               [000162] D----+-N----              +--*  LCL_VAR   ref    V05 tmp4         
               [000161] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000160] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

fgMorphTree BB01, STMT00013 (before)
               [000195] -A----------              *  ASG       struct (copy)
               [000193] D------N----              +--*  LCL_VAR   struct<System.ValueTuple`2[Boolean,__Canon], 16>(P) V07 tmp6         
                                                  +--*    ref    V07.Item2 (offs=0x00) -> V14 tmp13        
                                                  +--*    bool   V07.Item1 (offs=0x08) -> V15 tmp14        
               [000167] n-----------              \--*  OBJ       struct<System.ValueTuple`2[Boolean,__Canon], 16>
               [000166] ------------                 \--*  ADDR      byref 
               [000159] -------N----                    \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16>(P) V04 tmp3         
                                                        \--*    ref    V04.Item2 (offs=0x00) -> V11 tmp10        
                                                        \--*    bool   V04.Item1 (offs=0x08) -> V12 tmp11        
fgMorphCopyBlock:
fgMorphBlkNode for dst tree, before:
               [000193] D----+-N----              *  LCL_VAR   struct<System.ValueTuple`2[Boolean,__Canon], 16>(P) V07 tmp6         
                                                  *    ref    V07.Item2 (offs=0x00) -> V14 tmp13        
                                                  *    bool   V07.Item1 (offs=0x08) -> V15 tmp14        
fgMorphBlkNode after:
               [000193] D----+-N----              *  LCL_VAR   struct<System.ValueTuple`2[Boolean,__Canon], 16>(P) V07 tmp6         
                                                  *    ref    V07.Item2 (offs=0x00) -> V14 tmp13        
                                                  *    bool   V07.Item1 (offs=0x08) -> V15 tmp14        
fgMorphBlkNode for src tree, before:
               [000167] n----+------              *  OBJ       struct<System.ValueTuple`2[Boolean,__Canon], 16>
               [000166] -----+------              \--*  ADDR      byref 
               [000159] -----+-N----                 \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16>(P) V04 tmp3         
                                                     \--*    ref    V04.Item2 (offs=0x00) -> V11 tmp10        
                                                     \--*    bool   V04.Item1 (offs=0x08) -> V12 tmp11        
fgMorphBlkNode after:
               [000167] n----+------              *  OBJ       struct<System.ValueTuple`2[Boolean,__Canon], 16>
               [000166] -----+------              \--*  ADDR      byref 
               [000159] -----+-N----                 \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16>(P) V04 tmp3         
                                                     \--*    ref    V04.Item2 (offs=0x00) -> V11 tmp10        
                                                     \--*    bool   V04.Item1 (offs=0x08) -> V12 tmp11        
block assignment to morph:
               [000195] -A----------              *  ASG       struct (copy)
               [000193] D----+-N----              +--*  LCL_VAR   struct<System.ValueTuple`2[Boolean,__Canon], 16>(P) V07 tmp6         
                                                  +--*    ref    V07.Item2 (offs=0x00) -> V14 tmp13        
                                                  +--*    bool   V07.Item1 (offs=0x08) -> V15 tmp14        
               [000167] n----+------              \--*  OBJ       struct<System.ValueTuple`2[Boolean,__Canon], 16>
               [000166] -----+------                 \--*  ADDR      byref 
               [000159] -----+-N----                    \--*  LCL_VAR   struct<System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16>(P) V04 tmp3         
                                                        \--*    ref    V04.Item2 (offs=0x00) -> V11 tmp10        
                                                        \--*    bool   V04.Item1 (offs=0x08) -> V12 tmp11        
 (destDoFldAsg=true) (srcDoFldAsg=true) using field by field assignments.
GenTreeNode creates assertion:
               [000232] -A----------              *  ASG       ref   
In BB01 New Local Copy     Assertion: V14 == V11 index=#04, mask=0000000000000008
GenTreeNode creates assertion:
               [000235] -A----------              *  ASG       bool  
In BB01 New Local Copy     Assertion: V15 == V12 index=#05, mask=0000000000000010

fgMorphCopyBlock (after):
               [000236] -A---+------              *  COMMA     void  
               [000232] -A----------              +--*  ASG       ref   
               [000230] D------N----              |  +--*  LCL_VAR   ref    V14 tmp13        
               [000231] -------N----              |  \--*  LCL_VAR   ref    V11 tmp10        
               [000235] -A----------              \--*  ASG       bool  
               [000233] D------N----                 +--*  LCL_VAR   bool   V15 tmp14        
               [000234] -------N----                 \--*  LCL_VAR   bool   V12 tmp11        

fgMorphTree BB01, STMT00013 (after)
               [000236] -A---+------              *  COMMA     void  
               [000232] -A----------              +--*  ASG       ref   
               [000230] D------N----              |  +--*  LCL_VAR   ref    V14 tmp13        
               [000231] -------N----              |  \--*  LCL_VAR   ref    V11 tmp10        
               [000235] -A----------              \--*  ASG       bool  
               [000233] D------N----                 +--*  LCL_VAR   bool   V15 tmp14        
               [000234] -------N----                 \--*  LCL_VAR   bool   V12 tmp11        

fgMorphTree BB01, STMT00010 (before)
               [000181] IA----------              *  ASG       struct (init)
               [000178] D------N----              +--*  LCL_VAR   struct<System.Threading.CancellationToken, 8>(P) V06 tmp5         
                                                  +--*    ref    V06._source (offs=0x00) -> V13 tmp12        
               [000180] ------------              \--*  CNS_INT   int    0
fgMorphBlkNode for dst tree, before:
               [000178] D----+-N----              *  LCL_VAR   struct<System.Threading.CancellationToken, 8>(P) V06 tmp5         
                                                  *    ref    V06._source (offs=0x00) -> V13 tmp12        
fgMorphBlkNode after:
               [000178] D----+-N----              *  LCL_VAR   struct<System.Threading.CancellationToken, 8>(P) V06 tmp5         
                                                  *    ref    V06._source (offs=0x00) -> V13 tmp12        

fgMorphInitBlock: using field by field initialization.
GenTreeNode creates assertion:
               [000239] -A----------              *  ASG       ref   
In BB01 New Local Constant Assertion: V13 == null index=#06, mask=0000000000000020
fgMorphInitBlock (after):
               [000239] -A---+------              *  ASG       ref   
               [000237] D------N----              +--*  LCL_VAR   ref    V13 tmp12        
               [000238] ------------              \--*  CNS_INT   ref    null

The assignment [000239] using V13 removes: Constant Assertion: V13 == null
GenTreeNode creates assertion:
               [000239] -A---+------              *  ASG       ref   
In BB01 New Local Constant Assertion: V13 == null index=#06, mask=0000000000000020

fgMorphTree BB01, STMT00010 (after)
               [000239] -A---+------              *  ASG       ref   
               [000237] D------N----              +--*  LCL_VAR   ref    V13 tmp12        
               [000238] ------------              \--*  CNS_INT   ref    null

fgMorphTree BB01, STMT00015 (before)
               [000201] -A----------              *  ASG       int   
               [000200] D------N----              +--*  LCL_VAR   int    V08 tmp7         
               [000199] ------------              \--*  CNS_INT   int    0
GenTreeNode creates assertion:
               [000201] -A----------              *  ASG       int   
In BB01 New Local Constant Assertion: V08 == 0 index=#07, mask=0000000000000040

fgMorphTree BB01, STMT00016 (before)
               [000210] -A-XGO------              *  ASG       int   
               [000209] V--XGO-N----              +--*  FIELD     int    m_stateFlags
               [000205] ------------              |  \--*  LCL_VAR   ref    V05 tmp4         
               [000208] ------------              \--*  OR        int   
               [000206] ------------                 +--*  CNS_INT   int    0x1000000
               [000207] ------------                 \--*  LCL_VAR   int    V08 tmp7         

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000209] V--XGO-N----              *  IND       int   
               [000241] -----+------              \--*  ADD       byref 
               [000205] -----+------                 +--*  LCL_VAR   ref    V05 tmp4         
               [000240] -----+------                 \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags]
GenTreeNode creates assertion:
               [000209] V--XGO-N----              *  IND       int   
In BB01 New Local Constant Assertion: V05 != null index=#08, mask=0000000000000080

Assertion prop in BB01:
Constant Assertion: V08 == 0 index=#07, mask=0000000000000040
               [000207] ------------              *  CNS_INT   int    0

Folding operator with constant nodes into a constant:
               [000208] ------------              *  OR        int   
               [000206] -----+------              +--*  CNS_INT   int    0x1000000
               [000207] -----+------              \--*  CNS_INT   int    0
Bashed to int constant:
               [000208] ------------              *  CNS_INT   int    0x1000000

fgMorphTree BB01, STMT00016 (after)
               [000210] -A-XG+------              *  ASG       int   
               [000209] V--XG+-N----              +--*  IND       int   
               [000241] -----+------              |  \--*  ADD       byref 
               [000205] -----+------              |     +--*  LCL_VAR   ref    V05 tmp4         
               [000240] -----+------              |     \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags]
               [000208] -----+------              \--*  CNS_INT   int    0x1000000

fgMorphTree BB01, STMT00012 (before)
               [000192] -A-XG-------              *  ASG       struct (copy)
               [000191] ---XG-------              +--*  OBJ       struct<System.ValueTuple`2[Boolean,__Canon], 16>
               [000190] ---XG-------              |  \--*  ADDR      byref 
               [000189] ---XG--N----              |     \--*  FIELD     struct m_result
               [000187] ------------              |        \--*  LCL_VAR   ref    V05 tmp4         
               [000188] ------------              \--*  LCL_VAR   struct<System.ValueTuple`2[Boolean,__Canon], 16>(P) V07 tmp6         
                                                  \--*    ref    V07.Item2 (offs=0x00) -> V14 tmp13        
                                                  \--*    bool   V07.Item1 (offs=0x08) -> V15 tmp14        

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000189] ---XG--N----              *  IND       struct
               [000243] -----+------              \--*  ADD       byref 
               [000187] -----+------                 +--*  LCL_VAR   ref    V05 tmp4         
               [000242] -----+------                 \--*  CNS_INT   long   56 field offset Fseq[m_result]
fgMorphCopyBlock:
fgMorphBlkNode for dst tree, before:
               [000191] ---XG+------              *  OBJ       struct<System.ValueTuple`2[Boolean,__Canon], 16>
               [000243] -----+------              \--*  ADD       byref 
               [000187] -----+------                 +--*  LCL_VAR   ref    V05 tmp4         
               [000242] -----+------                 \--*  CNS_INT   long   56 field offset Fseq[m_result]
fgMorphBlkNode after:
               [000191] ---XG+------              *  OBJ       struct<System.ValueTuple`2[Boolean,__Canon], 16>
               [000243] -----+------              \--*  ADD       byref 
               [000187] -----+------                 +--*  LCL_VAR   ref    V05 tmp4         
               [000242] -----+------                 \--*  CNS_INT   long   56 field offset Fseq[m_result]
fgMorphBlkNode for src tree, before:
               [000188] -----+------              *  LCL_VAR   struct<System.ValueTuple`2[Boolean,__Canon], 16>(P) V07 tmp6         
                                                  *    ref    V07.Item2 (offs=0x00) -> V14 tmp13        
                                                  *    bool   V07.Item1 (offs=0x08) -> V15 tmp14        
fgMorphBlkNode after:
               [000188] -----+------              *  LCL_VAR   struct<System.ValueTuple`2[Boolean,__Canon], 16>(P) V07 tmp6         
                                                  *    ref    V07.Item2 (offs=0x00) -> V14 tmp13        
                                                  *    bool   V07.Item1 (offs=0x08) -> V15 tmp14        
block assignment to morph:
               [000192] -A-XG-------              *  ASG       struct (copy)
               [000191] ---XG+------              +--*  OBJ       struct<System.ValueTuple`2[Boolean,__Canon], 16>
               [000243] -----+------              |  \--*  ADD       byref 
               [000187] -----+------              |     +--*  LCL_VAR   ref    V05 tmp4         
               [000242] -----+------              |     \--*  CNS_INT   long   56 field offset Fseq[m_result]
               [000188] -----+------              \--*  LCL_VAR   struct<System.ValueTuple`2[Boolean,__Canon], 16>(P) V07 tmp6         
                                                  \--*    ref    V07.Item2 (offs=0x00) -> V14 tmp13        
                                                  \--*    bool   V07.Item1 (offs=0x08) -> V15 tmp14        
 (srcDoFldAsg=true) using field by field assignments.

lvaGrabTemp returning 16 (V16 tmp15) called for BlockOp address local.

fgAddFieldSeqForZeroOffset for Fseq[Item2]
addr (Before)
               [000249] ------------                LCL_VAR   byref 
     (After)
               [000249] ------------                LCL_VAR   byref  Zero Fseq[Item2]

fgMorphCopyBlock (after):
               [000260] -A-X-+------              *  COMMA     void  
               [000253] -A-X--------              +--*  COMMA     void  
               [000248] -A----------              |  +--*  ASG       byref 
               [000247] D------N----              |  |  +--*  LCL_VAR   byref  V16 tmp15        
               [000244] -----+------              |  |  \--*  ADD       byref 
               [000245] -----+------              |  |     +--*  LCL_VAR   ref    V05 tmp4         
               [000246] -----+------              |  |     \--*  CNS_INT   long   56 field offset Fseq[m_result]
               [000252] -A-X--------              |  \--*  ASG       ref   
               [000250] *--X---N----              |     +--*  IND       ref   
               [000249] ------------              |     |  \--*  LCL_VAR   byref  V16 tmp15         Zero Fseq[Item2]
               [000251] ------------              |     \--*  LCL_VAR   ref    V14 tmp13        
               [000259] -A-X--------              \--*  ASG       bool  
               [000257] *--X---N----                 +--*  IND       bool  
               [000256] ------------                 |  \--*  ADD       byref 
               [000254] ------------                 |     +--*  LCL_VAR   byref  V16 tmp15        
               [000255] ------------                 |     \--*  CNS_INT   long   8 Fseq[Item1]
               [000258] ------------                 \--*  LCL_VAR   bool   V15 tmp14        

fgMorphTree BB01, STMT00012 (after)
               [000260] -A-X-+------              *  COMMA     void  
               [000253] -A-X--------              +--*  COMMA     void  
               [000248] -A----------              |  +--*  ASG       byref 
               [000247] D------N----              |  |  +--*  LCL_VAR   byref  V16 tmp15        
               [000244] -----+------              |  |  \--*  ADD       byref 
               [000245] -----+------              |  |     +--*  LCL_VAR   ref    V05 tmp4         
               [000246] -----+------              |  |     \--*  CNS_INT   long   56 field offset Fseq[m_result]
               [000252] -A-X--------              |  \--*  ASG       ref   
               [000250] *--X---N----              |     +--*  IND       ref   
               [000249] ------------              |     |  \--*  LCL_VAR   byref  V16 tmp15         Zero Fseq[Item2]
               [000251] ------------              |     \--*  LCL_VAR   ref    V14 tmp13        
               [000259] -A-X--------              \--*  ASG       bool  
               [000257] *--X---N----                 +--*  IND       bool  
               [000256] ------------                 |  \--*  ADD       byref 
               [000254] ------------                 |     +--*  LCL_VAR   byref  V16 tmp15        
               [000255] ------------                 |     \--*  CNS_INT   long   8 Fseq[Item1]
               [000258] ------------                 \--*  LCL_VAR   bool   V15 tmp14        

fgMorphTree BB01, STMT00008 (before)
               [000170] -A----------              *  ASG       ref   
               [000169] D------N----              +--*  LCL_VAR   ref    V03 tmp2         
               [000168] ------------              \--*  LCL_VAR   ref    V05 tmp4         
GenTreeNode creates assertion:
               [000170] -A----------              *  ASG       ref   
In BB01 New Local Copy     Assertion: V03 == V05 index=#09, mask=0000000000000100

fgMorphTree BB01, STMT00003 (before)
               [000016] --C---------              *  RETURN    ref   
               [000171] ------------              \--*  LCL_VAR   ref    V03 tmp2         

Assertion prop in BB01:
Copy     Assertion: V03 == V05 index=#09, mask=0000000000000100
               [000171] ------------              *  LCL_VAR   ref    V05 tmp4         

fgMorphTree BB01, STMT00003 (after)
               [000016] -----+------              *  RETURN    ref   
               [000171] -----+------              \--*  LCL_VAR   ref    V05 tmp4         

*************** Finishing PHASE Morph - Global
Trees after Morph - Global

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)        (return)                     i label target hascall newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..011) (return), preds={} succs={}

***** BB01
STMT00000 (IL 0x000...0x010)
               [000219] -A---+------              *  COMMA     void  
               [000215] -A----------              +--*  ASG       ref   
               [000213] D------N----              |  +--*  LCL_VAR   ref    V09 tmp8         
               [000214] ------------              |  \--*  CNS_INT   ref    null
               [000218] -A----------              \--*  ASG       bool  
               [000216] D------N----                 +--*  LCL_VAR   bool   V10 tmp9         
               [000217] ------------                 \--*  CNS_INT   int    0

***** BB01
STMT00004 (IL   ???...  ???)
               [000022] -A---+------              *  ASG       bool  
               [000021] D----+-N----              +--*  LCL_VAR   bool   V10 tmp9         
               [000020] -----+------              \--*  CNS_INT   int    1

***** BB01
STMT00005 (IL   ???...  ???)
               [000027] -A--G+------              *  ASG       ref   
               [000026] D----+-N----              +--*  LCL_VAR   ref    V09 tmp8         
               [000221] #---G+------              \--*  IND       ref   
               [000220] H----+------                 \--*  CNS_INT(h) long   0xD1FFAB1E "string"

***** BB01
STMT00009 (IL 0x00B...  ???)
               [000228] -A---+------              *  COMMA     void  
               [000224] -A----------              +--*  ASG       ref   
               [000222] D------N----              |  +--*  LCL_VAR   ref    V11 tmp10        
               [000223] -------N----              |  \--*  LCL_VAR   ref    V09 tmp8         
               [000227] -A----------              \--*  ASG       bool  
               [000225] D------N----                 +--*  LCL_VAR   bool   V12 tmp11        
               [000226] -------N----                 \--*  LCL_VAR   bool   V10 tmp9         

***** BB01
STMT00006 (IL 0x00B...  ???)
               [000163] -AC--+------              *  ASG       ref   
               [000162] D----+-N----              +--*  LCL_VAR   ref    V05 tmp4         
               [000161] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000160] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00013 (IL 0x00B...  ???)
               [000236] -A---+------              *  COMMA     void  
               [000232] -A----------              +--*  ASG       ref   
               [000230] D------N----              |  +--*  LCL_VAR   ref    V14 tmp13        
               [000231] -------N----              |  \--*  LCL_VAR   ref    V11 tmp10        
               [000235] -A----------              \--*  ASG       bool  
               [000233] D------N----                 +--*  LCL_VAR   bool   V15 tmp14        
               [000234] -------N----                 \--*  LCL_VAR   bool   V12 tmp11        

***** BB01
STMT00010 (IL 0x00B...  ???)
               [000239] -A---+------              *  ASG       ref   
               [000237] D------N----              +--*  LCL_VAR   ref    V13 tmp12        
               [000238] ------------              \--*  CNS_INT   ref    null

***** BB01
STMT00015 (IL 0x00B...  ???)
               [000201] -A---+------              *  ASG       int   
               [000200] D----+-N----              +--*  LCL_VAR   int    V08 tmp7         
               [000199] -----+------              \--*  CNS_INT   int    0

***** BB01
STMT00016 (IL 0x00B...  ???)
               [000210] -A-XG+------              *  ASG       int   
               [000209] V--XG+-N----              +--*  IND       int   
               [000241] -----+------              |  \--*  ADD       byref 
               [000205] -----+------              |     +--*  LCL_VAR   ref    V05 tmp4         
               [000240] -----+------              |     \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags]
               [000208] -----+------              \--*  CNS_INT   int    0x1000000

***** BB01
STMT00012 (IL 0x00B...  ???)
               [000260] -A-X-+------              *  COMMA     void  
               [000253] -A-X--------              +--*  COMMA     void  
               [000248] -A----------              |  +--*  ASG       byref 
               [000247] D------N----              |  |  +--*  LCL_VAR   byref  V16 tmp15        
               [000244] -----+------              |  |  \--*  ADD       byref 
               [000245] -----+------              |  |     +--*  LCL_VAR   ref    V05 tmp4         
               [000246] -----+------              |  |     \--*  CNS_INT   long   56 field offset Fseq[m_result]
               [000252] -A-X--------              |  \--*  ASG       ref   
               [000250] *--X---N----              |     +--*  IND       ref   
               [000249] ------------              |     |  \--*  LCL_VAR   byref  V16 tmp15         Zero Fseq[Item2]
               [000251] ------------              |     \--*  LCL_VAR   ref    V14 tmp13        
               [000259] -A-X--------              \--*  ASG       bool  
               [000257] *--X---N----                 +--*  IND       bool  
               [000256] ------------                 |  \--*  ADD       byref 
               [000254] ------------                 |     +--*  LCL_VAR   byref  V16 tmp15        
               [000255] ------------                 |     \--*  CNS_INT   long   8 Fseq[Item1]
               [000258] ------------                 \--*  LCL_VAR   bool   V15 tmp14        

***** BB01
STMT00008 (IL 0x00B...  ???)
               [000170] -A---+------              *  ASG       ref   
               [000169] D----+-N----              +--*  LCL_VAR   ref    V03 tmp2         
               [000168] -----+------              \--*  LCL_VAR   ref    V05 tmp4         

***** BB01
STMT00003 (IL   ???...  ???)
               [000016] -----+------              *  RETURN    ref   
               [000171] -----+------              \--*  LCL_VAR   ref    V05 tmp4         

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist

*************** Starting PHASE GS Cookie
No GS security needed

*************** Finishing PHASE GS Cookie

*************** Starting PHASE Compute edge weights (1, false)
*************** In fgComputeBlockAndEdgeWeights()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)        (return)                     i label target hascall newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

 -- no profile data, so using default called count
 -- not optimizing or no profile data, so not computing edge weights

*************** Finishing PHASE Compute edge weights (1, false)

*************** Starting PHASE Create EH funclets
*************** In fgCreateFunclets()

After fgCreateFunclets()
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)        (return)                     i label target hascall newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Create EH funclets

*************** Starting PHASE Optimize layout
*************** In optOptimizeLayout()

***************  Exception Handling table is empty
*************** In fgDebugCheckBBlist

*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)        (return)                     i label target hascall newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist

*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)        (return)                     i label target hascall newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist

*************** Finishing PHASE Optimize layout

*************** Starting PHASE Compute blocks reachability
*************** In fgComputeReachability
*************** In fgDebugCheckBBlist

Renumbering the basic blocks for fgComputeReachability pass #1

*************** Before renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)        (return)                     i label target hascall newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty

*************** After renumbering the basic blocks
=============== No blocks renumbered!

New BlockSet epoch 3, # of blocks (including unused BB00): 2, bitset array size: 1 (short)
Enter blocks: BB01 

After computing reachability sets:
------------------------------------------------
BBnum  Reachable by 
------------------------------------------------
BB01 : BB01 

After computing reachability:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)        (return)                     i label target hascall newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist
*************** In fgComputeDoms
*************** In fgDebugCheckBBlist

Dominator computation start blocks (those blocks with no incoming edges):
BB01 
------------------------------------------------
BBnum  Dominated by
------------------------------------------------
BB01:  BB01 

Inside fgBuildDomTree

After computing the Dominance Tree:


After numbering the dominator tree:
BB01: pre=01, post=01

*************** Finishing PHASE Compute blocks reachability

*************** Starting PHASE Optimize loops
*************** In optOptimizeLoops()
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Optimize loops

*************** Starting PHASE Clone loops

*************** In optCloneLoops()

*************** Finishing PHASE Clone loops

*************** Starting PHASE Unroll loops

*************** Finishing PHASE Unroll loops

*************** Starting PHASE Mark local vars

*************** In lvaMarkLocalVars()
*** lvaComputeRefCounts ***

*** lvaComputeRefCounts -- explicit counts ***

*** marking local variables in block BB01 (weight=1   )
STMT00000 (IL 0x000...0x010)
               [000219] -A---+------              *  COMMA     void  
               [000215] -A----------              +--*  ASG       ref   
               [000213] D------N----              |  +--*  LCL_VAR   ref    V09 tmp8         
               [000214] ------------              |  \--*  CNS_INT   ref    null
               [000218] -A----------              \--*  ASG       bool  
               [000216] D------N----                 +--*  LCL_VAR   bool   V10 tmp9         
               [000217] ------------                 \--*  CNS_INT   int    0
New refCnts for V09: refCnt =  1, refCntWtd = 1   
New refCnts for V10: refCnt =  1, refCntWtd = 1   
STMT00004 (IL   ???...  ???)
               [000022] -A---+------              *  ASG       bool  
               [000021] D----+-N----              +--*  LCL_VAR   bool   V10 tmp9         
               [000020] -----+------              \--*  CNS_INT   int    1
New refCnts for V10: refCnt =  2, refCntWtd = 2   
STMT00005 (IL   ???...  ???)
               [000027] -A--G+------              *  ASG       ref   
               [000026] D----+-N----              +--*  LCL_VAR   ref    V09 tmp8         
               [000221] #---G+------              \--*  IND       ref   
               [000220] H----+------                 \--*  CNS_INT(h) long   0xD1FFAB1E "string"
New refCnts for V09: refCnt =  2, refCntWtd = 2   
STMT00009 (IL 0x00B...  ???)
               [000228] -A---+------              *  COMMA     void  
               [000224] -A----------              +--*  ASG       ref   
               [000222] D------N----              |  +--*  LCL_VAR   ref    V11 tmp10        
               [000223] -------N----              |  \--*  LCL_VAR   ref    V09 tmp8         
               [000227] -A----------              \--*  ASG       bool  
               [000225] D------N----                 +--*  LCL_VAR   bool   V12 tmp11        
               [000226] -------N----                 \--*  LCL_VAR   bool   V10 tmp9         
New refCnts for V11: refCnt =  1, refCntWtd = 1   
New refCnts for V09: refCnt =  3, refCntWtd = 3   
New refCnts for V12: refCnt =  1, refCntWtd = 1   
New refCnts for V10: refCnt =  3, refCntWtd = 3   
STMT00006 (IL 0x00B...  ???)
               [000163] -AC--+------              *  ASG       ref   
               [000162] D----+-N----              +--*  LCL_VAR   ref    V05 tmp4         
               [000161] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000160] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token
New refCnts for V05: refCnt =  1, refCntWtd = 2   
STMT00013 (IL 0x00B...  ???)
               [000236] -A---+------              *  COMMA     void  
               [000232] -A----------              +--*  ASG       ref   
               [000230] D------N----              |  +--*  LCL_VAR   ref    V14 tmp13        
               [000231] -------N----              |  \--*  LCL_VAR   ref    V11 tmp10        
               [000235] -A----------              \--*  ASG       bool  
               [000233] D------N----                 +--*  LCL_VAR   bool   V15 tmp14        
               [000234] -------N----                 \--*  LCL_VAR   bool   V12 tmp11        
New refCnts for V14: refCnt =  1, refCntWtd = 1   
New refCnts for V11: refCnt =  2, refCntWtd = 2   
New refCnts for V15: refCnt =  1, refCntWtd = 1   
New refCnts for V12: refCnt =  2, refCntWtd = 2   
STMT00010 (IL 0x00B...  ???)
               [000239] -A---+------              *  ASG       ref   
               [000237] D------N----              +--*  LCL_VAR   ref    V13 tmp12        
               [000238] ------------              \--*  CNS_INT   ref    null
New refCnts for V13: refCnt =  1, refCntWtd = 1   
STMT00015 (IL 0x00B...  ???)
               [000201] -A---+------              *  ASG       int   
               [000200] D----+-N----              +--*  LCL_VAR   int    V08 tmp7         
               [000199] -----+------              \--*  CNS_INT   int    0
New refCnts for V08: refCnt =  1, refCntWtd = 1   
STMT00016 (IL 0x00B...  ???)
               [000210] -A-XG+------              *  ASG       int   
               [000209] V--XG+-N----              +--*  IND       int   
               [000241] -----+------              |  \--*  ADD       byref 
               [000205] -----+------              |     +--*  LCL_VAR   ref    V05 tmp4         
               [000240] -----+------              |     \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags]
               [000208] -----+------              \--*  CNS_INT   int    0x1000000
New refCnts for V05: refCnt =  2, refCntWtd = 4   
STMT00012 (IL 0x00B...  ???)
               [000260] -A-X-+------              *  COMMA     void  
               [000253] -A-X--------              +--*  COMMA     void  
               [000248] -A----------              |  +--*  ASG       byref 
               [000247] D------N----              |  |  +--*  LCL_VAR   byref  V16 tmp15        
               [000244] -----+------              |  |  \--*  ADD       byref 
               [000245] -----+------              |  |     +--*  LCL_VAR   ref    V05 tmp4         
               [000246] -----+------              |  |     \--*  CNS_INT   long   56 field offset Fseq[m_result]
               [000252] -A-X--------              |  \--*  ASG       ref   
               [000250] *--X---N----              |     +--*  IND       ref   
               [000249] ------------              |     |  \--*  LCL_VAR   byref  V16 tmp15         Zero Fseq[Item2]
               [000251] ------------              |     \--*  LCL_VAR   ref    V14 tmp13        
               [000259] -A-X--------              \--*  ASG       bool  
               [000257] *--X---N----                 +--*  IND       bool  
               [000256] ------------                 |  \--*  ADD       byref 
               [000254] ------------                 |     +--*  LCL_VAR   byref  V16 tmp15        
               [000255] ------------                 |     \--*  CNS_INT   long   8 Fseq[Item1]
               [000258] ------------                 \--*  LCL_VAR   bool   V15 tmp14        
New refCnts for V16: refCnt =  1, refCntWtd = 2   
New refCnts for V05: refCnt =  3, refCntWtd = 6   
New refCnts for V16: refCnt =  2, refCntWtd = 4   
New refCnts for V14: refCnt =  2, refCntWtd = 2   
New refCnts for V16: refCnt =  3, refCntWtd = 6   
New refCnts for V15: refCnt =  2, refCntWtd = 2   
STMT00008 (IL 0x00B...  ???)
               [000170] -A---+------              *  ASG       ref   
               [000169] D----+-N----              +--*  LCL_VAR   ref    V03 tmp2         
               [000168] -----+------              \--*  LCL_VAR   ref    V05 tmp4         
New refCnts for V03: refCnt =  1, refCntWtd = 1   
New refCnts for V05: refCnt =  4, refCntWtd = 8   
STMT00003 (IL   ???...  ???)
               [000016] -----+------              *  RETURN    ref   
               [000171] -----+------              \--*  LCL_VAR   ref    V05 tmp4         
New refCnts for V05: refCnt =  5, refCntWtd = 10   

*** lvaComputeRefCounts -- implicit counts ***

*************** In optAddCopies()


*************** Finishing PHASE Mark local vars

*************** Starting PHASE Optimize bools
*************** In optOptimizeBools()
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Optimize bools

*************** Starting PHASE Find oper order
*************** In fgFindOperOrder()

*************** Finishing PHASE Find oper order

*************** Starting PHASE Set block order
*************** In fgSetBlockOrder()
The biggest BB has   17 tree nodes

*************** Finishing PHASE Set block order
Trees before Build SSA representation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)        (return)                     i label target hascall newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..011) (return), preds={} succs={}

***** BB01
STMT00000 (IL 0x000...0x010)
N007 (  2,  6) [000219] -A----------              *  COMMA     void  
N003 (  1,  3) [000215] -A------R---              +--*  ASG       ref   
N002 (  1,  1) [000213] D------N----              |  +--*  LCL_VAR   ref    V09 tmp8         
N001 (  1,  1) [000214] ------------              |  \--*  CNS_INT   ref    null
N006 (  1,  3) [000218] -A------R---              \--*  ASG       bool  
N005 (  2,  2) [000216] D------N----                 +--*  LCL_VAR   bool   V10 tmp9         
N004 (  1,  1) [000217] ------------                 \--*  CNS_INT   int    0

***** BB01
STMT00004 (IL   ???...  ???)
N003 (  1,  3) [000022] -A------R---              *  ASG       bool  
N002 (  2,  2) [000021] D------N----              +--*  LCL_VAR   bool   V10 tmp9         
N001 (  1,  1) [000020] ------------              \--*  CNS_INT   int    1

***** BB01
STMT00005 (IL   ???...  ???)
N004 (  4, 12) [000027] -A--G---R---              *  ASG       ref   
N003 (  1,  1) [000026] D------N----              +--*  LCL_VAR   ref    V09 tmp8         
N002 (  4, 12) [000221] #---G-------              \--*  IND       ref   
N001 (  2, 10) [000220] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "string"

***** BB01
STMT00009 (IL 0x00B...  ???)
N007 ( 12, 10) [000228] -A----------              *  COMMA     void  
N003 (  5,  4) [000224] -A------R---              +--*  ASG       ref   
N002 (  3,  2) [000222] D------N----              |  +--*  LCL_VAR   ref    V11 tmp10        
N001 (  1,  1) [000223] -------N----              |  \--*  LCL_VAR   ref    V09 tmp8         
N006 (  7,  6) [000227] -A------R---              \--*  ASG       bool  
N005 (  4,  3) [000225] D------N----                 +--*  LCL_VAR   bool   V12 tmp11        
N004 (  2,  2) [000226] -------N----                 \--*  LCL_VAR   bool   V10 tmp9         

***** BB01
STMT00006 (IL 0x00B...  ???)
N005 ( 16, 16) [000163] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000162] D------N----              +--*  LCL_VAR   ref    V05 tmp4         
N003 ( 16, 16) [000161] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000160] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00013 (IL 0x00B...  ???)
N007 ( 16, 12) [000236] -A----------              *  COMMA     void  
N003 (  7,  5) [000232] -A------R---              +--*  ASG       ref   
N002 (  3,  2) [000230] D------N----              |  +--*  LCL_VAR   ref    V14 tmp13        
N001 (  3,  2) [000231] -------N----              |  \--*  LCL_VAR   ref    V11 tmp10        
N006 (  9,  7) [000235] -A------R---              \--*  ASG       bool  
N005 (  4,  3) [000233] D------N----                 +--*  LCL_VAR   bool   V15 tmp14        
N004 (  4,  3) [000234] -------N----                 \--*  LCL_VAR   bool   V12 tmp11        

***** BB01
STMT00010 (IL 0x00B...  ???)
N003 (  5,  4) [000239] -A------R---              *  ASG       ref   
N002 (  3,  2) [000237] D------N----              +--*  LCL_VAR   ref    V13 tmp12        
N001 (  1,  1) [000238] ------------              \--*  CNS_INT   ref    null

***** BB01
STMT00015 (IL 0x00B...  ???)
N003 (  5,  4) [000201] -A------R---              *  ASG       int   
N002 (  3,  2) [000200] D------N----              +--*  LCL_VAR   int    V08 tmp7         
N001 (  1,  1) [000199] ------------              \--*  CNS_INT   int    0

***** BB01
STMT00016 (IL 0x00B...  ???)
N006 (  6,  9) [000210] -A-XGO------              *  ASG       int   
N004 (  4,  4) [000209] V--XGO-N----              +--*  IND       int   
N003 (  2,  2) [000241] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000205] ------------              |     +--*  LCL_VAR   ref    V05 tmp4         
N002 (  1,  1) [000240] ------------              |     \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags]
N005 (  1,  4) [000208] ------------              \--*  CNS_INT   int    0x1000000

***** BB01
STMT00012 (IL 0x00B...  ???)
N017 ( 20, 17) [000260] -A-X--------              *  COMMA     void  
N010 ( 10,  8) [000253] -A-X--------              +--*  COMMA     void  
N005 (  3,  3) [000248] -A------R---              |  +--*  ASG       byref 
N004 (  1,  1) [000247] D------N----              |  |  +--*  LCL_VAR   byref  V16 tmp15        
N003 (  3,  3) [000244] ------------              |  |  \--*  ADD       byref 
N001 (  1,  1) [000245] ------------              |  |     +--*  LCL_VAR   ref    V05 tmp4         
N002 (  1,  1) [000246] ------------              |  |     \--*  CNS_INT   long   56 field offset Fseq[m_result]
N009 (  7,  5) [000252] -A-X--------              |  \--*  ASG       ref   
N007 (  3,  2) [000250] *--X---N----              |     +--*  IND       ref   
N006 (  1,  1) [000249] ------------              |     |  \--*  LCL_VAR   byref  V16 tmp15         Zero Fseq[Item2]
N008 (  3,  2) [000251] ------------              |     \--*  LCL_VAR   ref    V14 tmp13        
N016 ( 10,  9) [000259] -A-X--------              \--*  ASG       bool  
N014 (  5,  5) [000257] *--X---N----                 +--*  IND       bool  
N013 (  2,  2) [000256] -------N----                 |  \--*  ADD       byref 
N011 (  1,  1) [000254] ------------                 |     +--*  LCL_VAR   byref  V16 tmp15        
N012 (  1,  1) [000255] ------------                 |     \--*  CNS_INT   long   8 Fseq[Item1]
N015 (  4,  3) [000258] ------------                 \--*  LCL_VAR   bool   V15 tmp14        

***** BB01
STMT00008 (IL 0x00B...  ???)
N003 (  5,  4) [000170] -A------R---              *  ASG       ref   
N002 (  3,  2) [000169] D------N----              +--*  LCL_VAR   ref    V03 tmp2         
N001 (  1,  1) [000168] ------------              \--*  LCL_VAR   ref    V05 tmp4         

***** BB01
STMT00003 (IL   ???...  ???)
N002 (  2,  2) [000016] ------------              *  RETURN    ref   
N001 (  1,  1) [000171] ------------              \--*  LCL_VAR   ref    V05 tmp4         

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Build SSA representation
*************** In SsaBuilder::Build()
[SsaBuilder] Max block count is 2.

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)        (return)                     i label target hascall newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
[SsaBuilder] Topologically sorted the graph.
[SsaBuilder::ComputeImmediateDom]

Inside fgBuildDomTree

After computing the Dominance Tree:

*************** In fgLocalVarLiveness()
In fgLocalVarLivenessInit
Tracked variable (11 out of 17) table:
V05 tmp4          [   ref]: refCnt =    5, refCntWtd =  10   
V16 tmp15         [ byref]: refCnt =    3, refCntWtd =   6   
V09 tmp8          [   ref]: refCnt =    3, refCntWtd =   3   
V10 tmp9          [  bool]: refCnt =    3, refCntWtd =   3   
V11 tmp10         [   ref]: refCnt =    2, refCntWtd =   2   
V14 tmp13         [   ref]: refCnt =    2, refCntWtd =   2   
V12 tmp11         [  bool]: refCnt =    2, refCntWtd =   2   
V15 tmp14         [  bool]: refCnt =    2, refCntWtd =   2   
V03 tmp2          [   ref]: refCnt =    1, refCntWtd =   1   
V13 tmp12         [   ref]: refCnt =    1, refCntWtd =   1   
V08 tmp7          [   int]: refCnt =    1, refCntWtd =   1   

*************** In fgPerBlockLocalVarLiveness()
BB01 USE(0)={                                           } + ByrefExposed + GcHeap
     DEF(11)={V05 V16 V09 V10 V11 V14 V12 V15 V03 V13 V08} + ByrefExposed + GcHeap

** Memory liveness computed, GcHeap states and ByrefExposed states match
*************** In fgInterBlockLocalVarLiveness()

BB liveness after fgLiveVarAnalysis():

BB01 IN (0)={} + ByrefExposed + GcHeap
     OUT(0)={}

top level assign
removing stmt with no side effects

Removing statement STMT00008 (IL 0x00B...  ???)
N003 (  5,  4) [000170] -A------R---              *  ASG       ref   
N002 (  3,  2) [000169] D------N----              +--*  LCL_VAR   ref    V03 tmp2         
N001 (  1,  1) [000168] ------------              \--*  LCL_VAR   ref    V05 tmp4         
 in BB01 as useless:

top level assign
removing stmt with no side effects

Removing statement STMT00015 (IL 0x00B...  ???)
N003 (  5,  4) [000201] -A------R---              *  ASG       int   
N002 (  3,  2) [000200] D------N----              +--*  LCL_VAR   int    V08 tmp7         
N001 (  1,  1) [000199] ------------              \--*  CNS_INT   int    0
 in BB01 as useless:

top level assign
removing stmt with no side effects

Removing statement STMT00010 (IL 0x00B...  ???)
N003 (  5,  4) [000239] -A------R---              *  ASG       ref   
N002 (  3,  2) [000237] D------N----              +--*  LCL_VAR   ref    V13 tmp12        
N001 (  1,  1) [000238] ------------              \--*  CNS_INT   ref    null
 in BB01 as useless:


Removing tree [000218] in BB01 as useless
N006 (  1,  3) [000218] -A------R---              *  ASG       bool  
N005 (  2,  2) [000216] D------N----              +--*  LCL_VAR   bool   V10 tmp9         
N004 (  1,  1) [000217] ------------              \--*  CNS_INT   int    0


Removing tree [000215] in BB01 as useless
N003 (  1,  3) [000215] -A------R---              *  ASG       ref   
N002 (  1,  1) [000213] D------N----              +--*  LCL_VAR   ref    V09 tmp8         
N001 (  1,  1) [000214] ------------              \--*  CNS_INT   ref    null


fgComputeLife modified tree:
N003 (  0,  0) [000219] ------------              *  COMMA     void  
N001 (  0,  0) [000215] ------------              +--*  NOP       void  
N002 (  0,  0) [000218] ------------              \--*  NOP       void  

*************** In optRemoveRedundantZeroInits()
*************** In SsaBuilder::InsertPhiFunctions()
Inserting phi functions:
*************** In SsaBuilder::RenameVariables()

After fgSsaBuild:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)        (return)                     i label target hascall newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..011) (return), preds={} succs={}

***** BB01
STMT00000 (IL 0x000...0x010)
N003 (  0,  0) [000219] ------------              *  COMMA     void  
N001 (  0,  0) [000215] ------------              +--*  NOP       void  
N002 (  0,  0) [000218] ------------              \--*  NOP       void  

***** BB01
STMT00004 (IL   ???...  ???)
N003 (  1,  3) [000022] -A------R---              *  ASG       bool  
N002 (  2,  2) [000021] D------N----              +--*  LCL_VAR   bool   V10 tmp9         d:1
N001 (  1,  1) [000020] ------------              \--*  CNS_INT   int    1

***** BB01
STMT00005 (IL   ???...  ???)
N004 (  4, 12) [000027] -A--G---R---              *  ASG       ref   
N003 (  1,  1) [000026] D------N----              +--*  LCL_VAR   ref    V09 tmp8         d:1
N002 (  4, 12) [000221] #---G-------              \--*  IND       ref   
N001 (  2, 10) [000220] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "string"

***** BB01
STMT00009 (IL 0x00B...  ???)
N007 ( 12, 10) [000228] -A----------              *  COMMA     void  
N003 (  5,  4) [000224] -A------R---              +--*  ASG       ref   
N002 (  3,  2) [000222] D------N----              |  +--*  LCL_VAR   ref    V11 tmp10        d:1
N001 (  1,  1) [000223] -------N----              |  \--*  LCL_VAR   ref    V09 tmp8         u:1 (last use)
N006 (  7,  6) [000227] -A------R---              \--*  ASG       bool  
N005 (  4,  3) [000225] D------N----                 +--*  LCL_VAR   bool   V12 tmp11        d:1
N004 (  2,  2) [000226] -------N----                 \--*  LCL_VAR   bool   V10 tmp9         u:1 (last use)

***** BB01
STMT00006 (IL 0x00B...  ???)
N005 ( 16, 16) [000163] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000162] D------N----              +--*  LCL_VAR   ref    V05 tmp4         d:1
N003 ( 16, 16) [000161] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000160] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00013 (IL 0x00B...  ???)
N007 ( 16, 12) [000236] -A----------              *  COMMA     void  
N003 (  7,  5) [000232] -A------R---              +--*  ASG       ref   
N002 (  3,  2) [000230] D------N----              |  +--*  LCL_VAR   ref    V14 tmp13        d:1
N001 (  3,  2) [000231] -------N----              |  \--*  LCL_VAR   ref    V11 tmp10        u:1 (last use)
N006 (  9,  7) [000235] -A------R---              \--*  ASG       bool  
N005 (  4,  3) [000233] D------N----                 +--*  LCL_VAR   bool   V15 tmp14        d:1
N004 (  4,  3) [000234] -------N----                 \--*  LCL_VAR   bool   V12 tmp11        u:1 (last use)

***** BB01
STMT00016 (IL 0x00B...  ???)
N006 (  6,  9) [000210] -A-XGO------              *  ASG       int   
N004 (  4,  4) [000209] V--XGO-N----              +--*  IND       int   
N003 (  2,  2) [000241] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000205] ------------              |     +--*  LCL_VAR   ref    V05 tmp4         u:1
N002 (  1,  1) [000240] ------------              |     \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags]
N005 (  1,  4) [000208] ------------              \--*  CNS_INT   int    0x1000000

***** BB01
STMT00012 (IL 0x00B...  ???)
N017 ( 20, 17) [000260] -A-X--------              *  COMMA     void  
N010 ( 10,  8) [000253] -A-X--------              +--*  COMMA     void  
N005 (  3,  3) [000248] -A------R---              |  +--*  ASG       byref 
N004 (  1,  1) [000247] D------N----              |  |  +--*  LCL_VAR   byref  V16 tmp15        d:1
N003 (  3,  3) [000244] ------------              |  |  \--*  ADD       byref 
N001 (  1,  1) [000245] ------------              |  |     +--*  LCL_VAR   ref    V05 tmp4         u:1
N002 (  1,  1) [000246] ------------              |  |     \--*  CNS_INT   long   56 field offset Fseq[m_result]
N009 (  7,  5) [000252] -A-X--------              |  \--*  ASG       ref   
N007 (  3,  2) [000250] *--X---N----              |     +--*  IND       ref   
N006 (  1,  1) [000249] ------------              |     |  \--*  LCL_VAR   byref  V16 tmp15        u:1 Zero Fseq[Item2]
N008 (  3,  2) [000251] ------------              |     \--*  LCL_VAR   ref    V14 tmp13        u:1 (last use)
N016 ( 10,  9) [000259] -A-X--------              \--*  ASG       bool  
N014 (  5,  5) [000257] *--X---N----                 +--*  IND       bool  
N013 (  2,  2) [000256] -------N----                 |  \--*  ADD       byref 
N011 (  1,  1) [000254] ------------                 |     +--*  LCL_VAR   byref  V16 tmp15        u:1 (last use)
N012 (  1,  1) [000255] ------------                 |     \--*  CNS_INT   long   8 Fseq[Item1]
N015 (  4,  3) [000258] ------------                 \--*  LCL_VAR   bool   V15 tmp14        u:1 (last use)

***** BB01
STMT00003 (IL   ???...  ???)
N002 (  2,  2) [000016] ------------              *  RETURN    ref   
N001 (  1,  1) [000171] ------------              \--*  LCL_VAR   ref    V05 tmp4         u:1 (last use)

-------------------------------------------------------------------------------------------------------------------

*************** Finishing PHASE Build SSA representation
Trees after Build SSA representation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)        (return)                     i label target hascall newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..011) (return), preds={} succs={}

***** BB01
STMT00000 (IL 0x000...0x010)
N003 (  0,  0) [000219] ------------              *  COMMA     void  
N001 (  0,  0) [000215] ------------              +--*  NOP       void  
N002 (  0,  0) [000218] ------------              \--*  NOP       void  

***** BB01
STMT00004 (IL   ???...  ???)
N003 (  1,  3) [000022] -A------R---              *  ASG       bool  
N002 (  2,  2) [000021] D------N----              +--*  LCL_VAR   bool   V10 tmp9         d:1
N001 (  1,  1) [000020] ------------              \--*  CNS_INT   int    1

***** BB01
STMT00005 (IL   ???...  ???)
N004 (  4, 12) [000027] -A--G---R---              *  ASG       ref   
N003 (  1,  1) [000026] D------N----              +--*  LCL_VAR   ref    V09 tmp8         d:1
N002 (  4, 12) [000221] #---G-------              \--*  IND       ref   
N001 (  2, 10) [000220] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "string"

***** BB01
STMT00009 (IL 0x00B...  ???)
N007 ( 12, 10) [000228] -A----------              *  COMMA     void  
N003 (  5,  4) [000224] -A------R---              +--*  ASG       ref   
N002 (  3,  2) [000222] D------N----              |  +--*  LCL_VAR   ref    V11 tmp10        d:1
N001 (  1,  1) [000223] -------N----              |  \--*  LCL_VAR   ref    V09 tmp8         u:1 (last use)
N006 (  7,  6) [000227] -A------R---              \--*  ASG       bool  
N005 (  4,  3) [000225] D------N----                 +--*  LCL_VAR   bool   V12 tmp11        d:1
N004 (  2,  2) [000226] -------N----                 \--*  LCL_VAR   bool   V10 tmp9         u:1 (last use)

***** BB01
STMT00006 (IL 0x00B...  ???)
N005 ( 16, 16) [000163] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000162] D------N----              +--*  LCL_VAR   ref    V05 tmp4         d:1
N003 ( 16, 16) [000161] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000160] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00013 (IL 0x00B...  ???)
N007 ( 16, 12) [000236] -A----------              *  COMMA     void  
N003 (  7,  5) [000232] -A------R---              +--*  ASG       ref   
N002 (  3,  2) [000230] D------N----              |  +--*  LCL_VAR   ref    V14 tmp13        d:1
N001 (  3,  2) [000231] -------N----              |  \--*  LCL_VAR   ref    V11 tmp10        u:1 (last use)
N006 (  9,  7) [000235] -A------R---              \--*  ASG       bool  
N005 (  4,  3) [000233] D------N----                 +--*  LCL_VAR   bool   V15 tmp14        d:1
N004 (  4,  3) [000234] -------N----                 \--*  LCL_VAR   bool   V12 tmp11        u:1 (last use)

***** BB01
STMT00016 (IL 0x00B...  ???)
N006 (  6,  9) [000210] -A-XGO------              *  ASG       int   
N004 (  4,  4) [000209] V--XGO-N----              +--*  IND       int   
N003 (  2,  2) [000241] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000205] ------------              |     +--*  LCL_VAR   ref    V05 tmp4         u:1
N002 (  1,  1) [000240] ------------              |     \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags]
N005 (  1,  4) [000208] ------------              \--*  CNS_INT   int    0x1000000

***** BB01
STMT00012 (IL 0x00B...  ???)
N017 ( 20, 17) [000260] -A-X--------              *  COMMA     void  
N010 ( 10,  8) [000253] -A-X--------              +--*  COMMA     void  
N005 (  3,  3) [000248] -A------R---              |  +--*  ASG       byref 
N004 (  1,  1) [000247] D------N----              |  |  +--*  LCL_VAR   byref  V16 tmp15        d:1
N003 (  3,  3) [000244] ------------              |  |  \--*  ADD       byref 
N001 (  1,  1) [000245] ------------              |  |     +--*  LCL_VAR   ref    V05 tmp4         u:1
N002 (  1,  1) [000246] ------------              |  |     \--*  CNS_INT   long   56 field offset Fseq[m_result]
N009 (  7,  5) [000252] -A-X--------              |  \--*  ASG       ref   
N007 (  3,  2) [000250] *--X---N----              |     +--*  IND       ref   
N006 (  1,  1) [000249] ------------              |     |  \--*  LCL_VAR   byref  V16 tmp15        u:1 Zero Fseq[Item2]
N008 (  3,  2) [000251] ------------              |     \--*  LCL_VAR   ref    V14 tmp13        u:1 (last use)
N016 ( 10,  9) [000259] -A-X--------              \--*  ASG       bool  
N014 (  5,  5) [000257] *--X---N----                 +--*  IND       bool  
N013 (  2,  2) [000256] -------N----                 |  \--*  ADD       byref 
N011 (  1,  1) [000254] ------------                 |     +--*  LCL_VAR   byref  V16 tmp15        u:1 (last use)
N012 (  1,  1) [000255] ------------                 |     \--*  CNS_INT   long   8 Fseq[Item1]
N015 (  4,  3) [000258] ------------                 \--*  LCL_VAR   bool   V15 tmp14        u:1 (last use)

***** BB01
STMT00003 (IL   ???...  ???)
N002 (  2,  2) [000016] ------------              *  RETURN    ref   
N001 (  1,  1) [000171] ------------              \--*  LCL_VAR   ref    V05 tmp4         u:1 (last use)

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist

*************** Starting PHASE Early Value Propagation
*************** In optEarlyProp()

After optEarlyProp:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)        (return)                     i label target hascall newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..011) (return), preds={} succs={}

***** BB01
STMT00000 (IL 0x000...0x010)
N003 (  0,  0) [000219] ------------              *  COMMA     void  
N001 (  0,  0) [000215] ------------              +--*  NOP       void  
N002 (  0,  0) [000218] ------------              \--*  NOP       void  

***** BB01
STMT00004 (IL   ???...  ???)
N003 (  1,  3) [000022] -A------R---              *  ASG       bool  
N002 (  2,  2) [000021] D------N----              +--*  LCL_VAR   bool   V10 tmp9         d:1
N001 (  1,  1) [000020] ------------              \--*  CNS_INT   int    1

***** BB01
STMT00005 (IL   ???...  ???)
N004 (  4, 12) [000027] -A--G---R---              *  ASG       ref   
N003 (  1,  1) [000026] D------N----              +--*  LCL_VAR   ref    V09 tmp8         d:1
N002 (  4, 12) [000221] #---G-------              \--*  IND       ref   
N001 (  2, 10) [000220] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "string"

***** BB01
STMT00009 (IL 0x00B...  ???)
N007 ( 12, 10) [000228] -A----------              *  COMMA     void  
N003 (  5,  4) [000224] -A------R---              +--*  ASG       ref   
N002 (  3,  2) [000222] D------N----              |  +--*  LCL_VAR   ref    V11 tmp10        d:1
N001 (  1,  1) [000223] -------N----              |  \--*  LCL_VAR   ref    V09 tmp8         u:1 (last use)
N006 (  7,  6) [000227] -A------R---              \--*  ASG       bool  
N005 (  4,  3) [000225] D------N----                 +--*  LCL_VAR   bool   V12 tmp11        d:1
N004 (  2,  2) [000226] -------N----                 \--*  LCL_VAR   bool   V10 tmp9         u:1 (last use)

***** BB01
STMT00006 (IL 0x00B...  ???)
N005 ( 16, 16) [000163] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000162] D------N----              +--*  LCL_VAR   ref    V05 tmp4         d:1
N003 ( 16, 16) [000161] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000160] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00013 (IL 0x00B...  ???)
N007 ( 16, 12) [000236] -A----------              *  COMMA     void  
N003 (  7,  5) [000232] -A------R---              +--*  ASG       ref   
N002 (  3,  2) [000230] D------N----              |  +--*  LCL_VAR   ref    V14 tmp13        d:1
N001 (  3,  2) [000231] -------N----              |  \--*  LCL_VAR   ref    V11 tmp10        u:1 (last use)
N006 (  9,  7) [000235] -A------R---              \--*  ASG       bool  
N005 (  4,  3) [000233] D------N----                 +--*  LCL_VAR   bool   V15 tmp14        d:1
N004 (  4,  3) [000234] -------N----                 \--*  LCL_VAR   bool   V12 tmp11        u:1 (last use)

***** BB01
STMT00016 (IL 0x00B...  ???)
N006 (  6,  9) [000210] -A-XGO------              *  ASG       int   
N004 (  4,  4) [000209] V--XGO-N----              +--*  IND       int   
N003 (  2,  2) [000241] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000205] ------------              |     +--*  LCL_VAR   ref    V05 tmp4         u:1
N002 (  1,  1) [000240] ------------              |     \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags]
N005 (  1,  4) [000208] ------------              \--*  CNS_INT   int    0x1000000

***** BB01
STMT00012 (IL 0x00B...  ???)
N017 ( 20, 17) [000260] -A-X--------              *  COMMA     void  
N010 ( 10,  8) [000253] -A-X--------              +--*  COMMA     void  
N005 (  3,  3) [000248] -A------R---              |  +--*  ASG       byref 
N004 (  1,  1) [000247] D------N----              |  |  +--*  LCL_VAR   byref  V16 tmp15        d:1
N003 (  3,  3) [000244] ------------              |  |  \--*  ADD       byref 
N001 (  1,  1) [000245] ------------              |  |     +--*  LCL_VAR   ref    V05 tmp4         u:1
N002 (  1,  1) [000246] ------------              |  |     \--*  CNS_INT   long   56 field offset Fseq[m_result]
N009 (  7,  5) [000252] -A-X--------              |  \--*  ASG       ref   
N007 (  3,  2) [000250] *--X---N----              |     +--*  IND       ref   
N006 (  1,  1) [000249] ------------              |     |  \--*  LCL_VAR   byref  V16 tmp15        u:1 Zero Fseq[Item2]
N008 (  3,  2) [000251] ------------              |     \--*  LCL_VAR   ref    V14 tmp13        u:1 (last use)
N016 ( 10,  9) [000259] -A-X--------              \--*  ASG       bool  
N014 (  5,  5) [000257] *--X---N----                 +--*  IND       bool  
N013 (  2,  2) [000256] -------N----                 |  \--*  ADD       byref 
N011 (  1,  1) [000254] ------------                 |     +--*  LCL_VAR   byref  V16 tmp15        u:1 (last use)
N012 (  1,  1) [000255] ------------                 |     \--*  CNS_INT   long   8 Fseq[Item1]
N015 (  4,  3) [000258] ------------                 \--*  LCL_VAR   bool   V15 tmp14        u:1 (last use)

***** BB01
STMT00003 (IL   ???...  ???)
N002 (  2,  2) [000016] ------------              *  RETURN    ref   
N001 (  1,  1) [000171] ------------              \--*  LCL_VAR   ref    V05 tmp4         u:1 (last use)

-------------------------------------------------------------------------------------------------------------------

*************** Finishing PHASE Early Value Propagation

*************** Starting PHASE Do value numbering

*************** In fgValueNumber()
Memory Initial Value in BB01 is: $80
The SSA definition for ByrefExposed (#1) at start of BB01 is $80 {InitVal($40)}
The SSA definition for GcHeap (#1) at start of BB01 is $80 {InitVal($40)}

***** BB01, STMT00000(before)
N003 (  0,  0) [000219] ------------              *  COMMA     void  
N001 (  0,  0) [000215] ------------              +--*  NOP       void  
N002 (  0,  0) [000218] ------------              \--*  NOP       void  

N001 [000215]   NOP       => $c0 {c0}
N002 [000218]   NOP       => $c1 {c1}
N003 [000219]   COMMA     => $c1 {c1}

***** BB01, STMT00000(after)
N003 (  0,  0) [000219] ------------              *  COMMA     void   $c1
N001 (  0,  0) [000215] ------------              +--*  NOP       void   $c0
N002 (  0,  0) [000218] ------------              \--*  NOP       void   $c1

---------

***** BB01, STMT00004(before)
N003 (  1,  3) [000022] -A------R---              *  ASG       bool  
N002 (  2,  2) [000021] D------N----              +--*  LCL_VAR   bool   V10 tmp9         d:1
N001 (  1,  1) [000020] ------------              \--*  CNS_INT   int    1

N001 [000020]   CNS_INT   1 => $41 {IntCns 1}
    VNForCastOper(bool) is $42
N002 [000021]   LCL_VAR   V10 tmp9         d:1 => $41 {IntCns 1}
N003 [000022]   ASG       => $41 {IntCns 1}

***** BB01, STMT00004(after)
N003 (  1,  3) [000022] -A------R---              *  ASG       bool   $41
N002 (  2,  2) [000021] D------N----              +--*  LCL_VAR   bool   V10 tmp9         d:1 $41
N001 (  1,  1) [000020] ------------              \--*  CNS_INT   int    1 $41

---------

***** BB01, STMT00005(before)
N004 (  4, 12) [000027] -A--G---R---              *  ASG       ref   
N003 (  1,  1) [000026] D------N----              +--*  LCL_VAR   ref    V09 tmp8         d:1
N002 (  4, 12) [000221] #---G-------              \--*  IND       ref   
N001 (  2, 10) [000220] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "string"

N001 [000220]   CNS_INT(h) 0xD1FFAB1E "string" => $140 {Hnd const: 0x00000000D1FFAB1E}
    VNForMapSelect($2, $140):ref returns $180 {$VN.ReadOnlyHeap[$140]}
    VNForMapSelect($2, $140):ref returns $180 {$VN.ReadOnlyHeap[$140]}
N002 [000221]   IND       => $180 {$VN.ReadOnlyHeap[$140]}
N003 [000026]   LCL_VAR   V09 tmp8         d:1 => $180 {$VN.ReadOnlyHeap[$140]}
N004 [000027]   ASG       => $180 {$VN.ReadOnlyHeap[$140]}

***** BB01, STMT00005(after)
N004 (  4, 12) [000027] -A--G---R---              *  ASG       ref    $180
N003 (  1,  1) [000026] D------N----              +--*  LCL_VAR   ref    V09 tmp8         d:1 $180
N002 (  4, 12) [000221] #---G-------              \--*  IND       ref    $180
N001 (  2, 10) [000220] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "string" $140

---------

***** BB01, STMT00009(before)
N007 ( 12, 10) [000228] -A----------              *  COMMA     void  
N003 (  5,  4) [000224] -A------R---              +--*  ASG       ref   
N002 (  3,  2) [000222] D------N----              |  +--*  LCL_VAR   ref    V11 tmp10        d:1
N001 (  1,  1) [000223] -------N----              |  \--*  LCL_VAR   ref    V09 tmp8         u:1 (last use)
N006 (  7,  6) [000227] -A------R---              \--*  ASG       bool  
N005 (  4,  3) [000225] D------N----                 +--*  LCL_VAR   bool   V12 tmp11        d:1
N004 (  2,  2) [000226] -------N----                 \--*  LCL_VAR   bool   V10 tmp9         u:1 (last use)

N001 [000223]   LCL_VAR   V09 tmp8         u:1 (last use) => $180 {$VN.ReadOnlyHeap[$140]}
N002 [000222]   LCL_VAR   V11 tmp10        d:1 => $180 {$VN.ReadOnlyHeap[$140]}
N003 [000224]   ASG       => $180 {$VN.ReadOnlyHeap[$140]}
N004 [000226]   LCL_VAR   V10 tmp9         u:1 (last use) => $41 {IntCns 1}
N005 [000225]   LCL_VAR   V12 tmp11        d:1 => $41 {IntCns 1}
N006 [000227]   ASG       => $41 {IntCns 1}
N007 [000228]   COMMA     => $41 {IntCns 1}

***** BB01, STMT00009(after)
N007 ( 12, 10) [000228] -A----------              *  COMMA     void   $41
N003 (  5,  4) [000224] -A------R---              +--*  ASG       ref    $180
N002 (  3,  2) [000222] D------N----              |  +--*  LCL_VAR   ref    V11 tmp10        d:1 $180
N001 (  1,  1) [000223] -------N----              |  \--*  LCL_VAR   ref    V09 tmp8         u:1 (last use) $180
N006 (  7,  6) [000227] -A------R---              \--*  ASG       bool   $41
N005 (  4,  3) [000225] D------N----                 +--*  LCL_VAR   bool   V12 tmp11        d:1 $41
N004 (  2,  2) [000226] -------N----                 \--*  LCL_VAR   bool   V10 tmp9         u:1 (last use) $41

---------

***** BB01, STMT00006(before)
N005 ( 16, 16) [000163] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000162] D------N----              +--*  LCL_VAR   ref    V05 tmp4         d:1
N003 ( 16, 16) [000161] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000160] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

N001 [000229]   ARGPLACE  => $200 {200}
N002 [000160]   CNS_INT(h) 0xd1ffab1e token => $141 {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000229] updated to $141 {Hnd const: 0x00000000D1FFAB1E}
N003 [000161]   CALL help => $181 {JitNew($141, $1c2)}
N004 [000162]   LCL_VAR   V05 tmp4         d:1 => $181 {JitNew($141, $1c2)}
N005 [000163]   ASG       => $181 {JitNew($141, $1c2)}

***** BB01, STMT00006(after)
N005 ( 16, 16) [000163] -AC-----R---              *  ASG       ref    $181
N004 (  1,  1) [000162] D------N----              +--*  LCL_VAR   ref    V05 tmp4         d:1 $181
N003 ( 16, 16) [000161] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $181
N002 (  2, 10) [000160] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $141

---------

***** BB01, STMT00013(before)
N007 ( 16, 12) [000236] -A----------              *  COMMA     void  
N003 (  7,  5) [000232] -A------R---              +--*  ASG       ref   
N002 (  3,  2) [000230] D------N----              |  +--*  LCL_VAR   ref    V14 tmp13        d:1
N001 (  3,  2) [000231] -------N----              |  \--*  LCL_VAR   ref    V11 tmp10        u:1 (last use)
N006 (  9,  7) [000235] -A------R---              \--*  ASG       bool  
N005 (  4,  3) [000233] D------N----                 +--*  LCL_VAR   bool   V15 tmp14        d:1
N004 (  4,  3) [000234] -------N----                 \--*  LCL_VAR   bool   V12 tmp11        u:1 (last use)

N001 [000231]   LCL_VAR   V11 tmp10        u:1 (last use) => $180 {$VN.ReadOnlyHeap[$140]}
N002 [000230]   LCL_VAR   V14 tmp13        d:1 => $180 {$VN.ReadOnlyHeap[$140]}
N003 [000232]   ASG       => $180 {$VN.ReadOnlyHeap[$140]}
N004 [000234]   LCL_VAR   V12 tmp11        u:1 (last use) => $41 {IntCns 1}
N005 [000233]   LCL_VAR   V15 tmp14        d:1 => $41 {IntCns 1}
N006 [000235]   ASG       => $41 {IntCns 1}
N007 [000236]   COMMA     => $41 {IntCns 1}

***** BB01, STMT00013(after)
N007 ( 16, 12) [000236] -A----------              *  COMMA     void   $41
N003 (  7,  5) [000232] -A------R---              +--*  ASG       ref    $180
N002 (  3,  2) [000230] D------N----              |  +--*  LCL_VAR   ref    V14 tmp13        d:1 $180
N001 (  3,  2) [000231] -------N----              |  \--*  LCL_VAR   ref    V11 tmp10        u:1 (last use) $180
N006 (  9,  7) [000235] -A------R---              \--*  ASG       bool   $41
N005 (  4,  3) [000233] D------N----                 +--*  LCL_VAR   bool   V15 tmp14        d:1 $41
N004 (  4,  3) [000234] -------N----                 \--*  LCL_VAR   bool   V12 tmp11        u:1 (last use) $41

---------

***** BB01, STMT00016(before)
N006 (  6,  9) [000210] -A-XGO------              *  ASG       int   
N004 (  4,  4) [000209] V--XGO-N----              +--*  IND       int   
N003 (  2,  2) [000241] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000205] ------------              |     +--*  LCL_VAR   ref    V05 tmp4         u:1
N002 (  1,  1) [000240] ------------              |     \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags]
N005 (  1,  4) [000208] ------------              \--*  CNS_INT   int    0x1000000

N001 [000205]   LCL_VAR   V05 tmp4         u:1 => $181 {JitNew($141, $1c2)}
N002 [000240]   CNS_INT   52 field offset Fseq[m_stateFlags] => $240 {LngCns:  52}
N003 [000241]   ADD       => $280 {ADD($181, $240)}
  fgCurMemoryVN[GcHeap] assigned for GTF_IND_VOLATILE - read at [000209] to VN: $1c5.
N004 [000209]   IND       => $2c0 {2c0}
N005 [000208]   CNS_INT   0x1000000 => $43 {IntCns 0x1000000}
  fgCurMemoryVN[GcHeap] assigned for GTF_IND_VOLATILE - store at [000209] to VN: $1c6.
  VNApplySelectors:
    VNForHandle(m_stateFlags) is $142, fieldType is int
    VNForMapSelect($1c6, $142):int returns $300 {$1c6[$142]}
    VNForMapSelect($300, $181):int returns $301 {$300[$181]}
    VNForMapStore($300, $181, $43):int returns $340 {$300[$181 := $43]}
  VNApplySelectorsAssign:
    VNForHandle(m_stateFlags) is $142, fieldType is int
    VNForMapStore($1c6, $142, $340):int returns $341 {$1c6[$142 := $340]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000210] to VN: $341.
N006 [000210]   ASG       => $VN.Void

***** BB01, STMT00016(after)
N006 (  6,  9) [000210] -A-XGO------              *  ASG       int    $VN.Void
N004 (  4,  4) [000209] V--XGO-N----              +--*  IND       int    $43
N003 (  2,  2) [000241] -------N----              |  \--*  ADD       byref  $280
N001 (  1,  1) [000205] ------------              |     +--*  LCL_VAR   ref    V05 tmp4         u:1 $181
N002 (  1,  1) [000240] ------------              |     \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags] $240
N005 (  1,  4) [000208] ------------              \--*  CNS_INT   int    0x1000000 $43

---------

***** BB01, STMT00012(before)
N017 ( 20, 17) [000260] -A-X--------              *  COMMA     void  
N010 ( 10,  8) [000253] -A-X--------              +--*  COMMA     void  
N005 (  3,  3) [000248] -A------R---              |  +--*  ASG       byref 
N004 (  1,  1) [000247] D------N----              |  |  +--*  LCL_VAR   byref  V16 tmp15        d:1
N003 (  3,  3) [000244] ------------              |  |  \--*  ADD       byref 
N001 (  1,  1) [000245] ------------              |  |     +--*  LCL_VAR   ref    V05 tmp4         u:1
N002 (  1,  1) [000246] ------------              |  |     \--*  CNS_INT   long   56 field offset Fseq[m_result]
N009 (  7,  5) [000252] -A-X--------              |  \--*  ASG       ref   
N007 (  3,  2) [000250] *--X---N----              |     +--*  IND       ref   
N006 (  1,  1) [000249] ------------              |     |  \--*  LCL_VAR   byref  V16 tmp15        u:1 Zero Fseq[Item2]
N008 (  3,  2) [000251] ------------              |     \--*  LCL_VAR   ref    V14 tmp13        u:1 (last use)
N016 ( 10,  9) [000259] -A-X--------              \--*  ASG       bool  
N014 (  5,  5) [000257] *--X---N----                 +--*  IND       bool  
N013 (  2,  2) [000256] -------N----                 |  \--*  ADD       byref 
N011 (  1,  1) [000254] ------------                 |     +--*  LCL_VAR   byref  V16 tmp15        u:1 (last use)
N012 (  1,  1) [000255] ------------                 |     \--*  CNS_INT   long   8 Fseq[Item1]
N015 (  4,  3) [000258] ------------                 \--*  LCL_VAR   bool   V15 tmp14        u:1 (last use)

N001 [000245]   LCL_VAR   V05 tmp4         u:1 => $181 {JitNew($141, $1c2)}
N002 [000246]   CNS_INT   56 field offset Fseq[m_result] => $241 {LngCns:  56}
N003 [000244]   ADD       => $281 {ADD($181, $241)}
N004 [000247]   LCL_VAR   V16 tmp15        d:1 => $281 {ADD($181, $241)}
N005 [000248]   ASG       => $281 {ADD($181, $241)}
N006 [000249]   LCL_VAR   V16 tmp15        u:1 => $281 {ADD($181, $241)}
N008 [000251]   LCL_VAR   V14 tmp13        u:1 (last use) => $180 {$VN.ReadOnlyHeap[$140]}
  fgCurMemoryVN[GcHeap] assigned for assign-of-IND at [000252] to VN: $1c7.
N009 [000252]   ASG       => $VN.Void
N010 [000253]   COMMA     => $VN.Void
N011 [000254]   LCL_VAR   V16 tmp15        u:1 (last use) => $281 {ADD($181, $241)}
N012 [000255]   CNS_INT   8 Fseq[Item1] => $242 {LngCns:  8}
N013 [000256]   ADD       => $282 {ADD($242, $281)}
N015 [000258]   LCL_VAR   V15 tmp14        u:1 (last use) => $41 {IntCns 1}
  fgCurMemoryVN[GcHeap] assigned for assign-of-IND at [000259] to VN: $1c8.
N016 [000259]   ASG       => $VN.Void
N017 [000260]   COMMA     => $VN.Void

***** BB01, STMT00012(after)
N017 ( 20, 17) [000260] -A-X--------              *  COMMA     void   $VN.Void
N010 ( 10,  8) [000253] -A-X--------              +--*  COMMA     void   $VN.Void
N005 (  3,  3) [000248] -A------R---              |  +--*  ASG       byref  $281
N004 (  1,  1) [000247] D------N----              |  |  +--*  LCL_VAR   byref  V16 tmp15        d:1 $281
N003 (  3,  3) [000244] ------------              |  |  \--*  ADD       byref  $281
N001 (  1,  1) [000245] ------------              |  |     +--*  LCL_VAR   ref    V05 tmp4         u:1 $181
N002 (  1,  1) [000246] ------------              |  |     \--*  CNS_INT   long   56 field offset Fseq[m_result] $241
N009 (  7,  5) [000252] -A-X--------              |  \--*  ASG       ref    $VN.Void
N007 (  3,  2) [000250] *--X---N----              |     +--*  IND       ref    $180
N006 (  1,  1) [000249] ------------              |     |  \--*  LCL_VAR   byref  V16 tmp15        u:1 Zero Fseq[Item2] $281
N008 (  3,  2) [000251] ------------              |     \--*  LCL_VAR   ref    V14 tmp13        u:1 (last use) $180
N016 ( 10,  9) [000259] -A-X--------              \--*  ASG       bool   $VN.Void
N014 (  5,  5) [000257] *--X---N----                 +--*  IND       bool   $41
N013 (  2,  2) [000256] -------N----                 |  \--*  ADD       byref  $282
N011 (  1,  1) [000254] ------------                 |     +--*  LCL_VAR   byref  V16 tmp15        u:1 (last use) $281
N012 (  1,  1) [000255] ------------                 |     \--*  CNS_INT   long   8 Fseq[Item1] $242
N015 (  4,  3) [000258] ------------                 \--*  LCL_VAR   bool   V15 tmp14        u:1 (last use) $41

---------

***** BB01, STMT00003(before)
N002 (  2,  2) [000016] ------------              *  RETURN    ref   
N001 (  1,  1) [000171] ------------              \--*  LCL_VAR   ref    V05 tmp4         u:1 (last use)

N001 [000171]   LCL_VAR   V05 tmp4         u:1 (last use) => $181 {JitNew($141, $1c2)}
N002 [000016]   RETURN    => $1c9 {1c9}

***** BB01, STMT00003(after)
N002 (  2,  2) [000016] ------------              *  RETURN    ref    $1c9
N001 (  1,  1) [000171] ------------              \--*  LCL_VAR   ref    V05 tmp4         u:1 (last use) $181

finish(BB01).

*************** Finishing PHASE Do value numbering

*************** Starting PHASE Hoist loop code

*************** Finishing PHASE Hoist loop code

*************** Starting PHASE VN based copy prop
*************** In optVnCopyProp()
Copy Assertion for BB01
  curSsaName stack: { }

							Live vars: {} => {V10}
							Live vars: {V10} => {V09 V10}
							Live vars: {V09 V10} => {V10}
							Live vars: {V10} => {V10 V11}
							Live vars: {V10 V11} => {V11}
							Live vars: {V11} => {V11 V12}
							Live vars: {V11 V12} => {V05 V11 V12}
							Live vars: {V05 V11 V12} => {V05 V12}
							Live vars: {V05 V12} => {V05 V12 V14}
							Live vars: {V05 V12 V14} => {V05 V14}
							Live vars: {V05 V14} => {V05 V14 V15}
							Live vars: {V05 V14 V15} => {V05 V14 V15 V16}
							Live vars: {V05 V14 V15 V16} => {V05 V15 V16}
							Live vars: {V05 V15 V16} => {V05 V15}
							Live vars: {V05 V15} => {V05}
							Live vars: {V05} => {}

*************** Finishing PHASE VN based copy prop

*************** Starting PHASE Redundant branch opts

*************** Finishing PHASE Redundant branch opts [no changes]

*************** Starting PHASE Optimize Valnum CSEs

*************** In optOptimizeCSEs()
Blocks/Trees at start of optOptimizeCSE phase

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)        (return)                     i label target hascall newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..011) (return), preds={} succs={}

***** BB01
STMT00000 (IL 0x000...0x010)
N003 (  0,  0) [000219] ------------              *  COMMA     void   $c1
N001 (  0,  0) [000215] ------------              +--*  NOP       void   $c0
N002 (  0,  0) [000218] ------------              \--*  NOP       void   $c1

***** BB01
STMT00004 (IL   ???...  ???)
N003 (  1,  3) [000022] -A------R---              *  ASG       bool   $41
N002 (  2,  2) [000021] D------N----              +--*  LCL_VAR   bool   V10 tmp9         d:1 $41
N001 (  1,  1) [000020] ------------              \--*  CNS_INT   int    1 $41

***** BB01
STMT00005 (IL   ???...  ???)
N004 (  4, 12) [000027] -A--G---R---              *  ASG       ref    $180
N003 (  1,  1) [000026] D------N----              +--*  LCL_VAR   ref    V09 tmp8         d:1 $180
N002 (  4, 12) [000221] #---G-------              \--*  IND       ref    $180
N001 (  2, 10) [000220] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "string" $140

***** BB01
STMT00009 (IL 0x00B...  ???)
N007 ( 12, 10) [000228] -A----------              *  COMMA     void   $41
N003 (  5,  4) [000224] -A------R---              +--*  ASG       ref    $180
N002 (  3,  2) [000222] D------N----              |  +--*  LCL_VAR   ref    V11 tmp10        d:1 $180
N001 (  1,  1) [000223] -------N----              |  \--*  LCL_VAR   ref    V09 tmp8         u:1 (last use) $180
N006 (  7,  6) [000227] -A------R---              \--*  ASG       bool   $41
N005 (  4,  3) [000225] D------N----                 +--*  LCL_VAR   bool   V12 tmp11        d:1 $41
N004 (  2,  2) [000226] -------N----                 \--*  LCL_VAR   bool   V10 tmp9         u:1 (last use) $41

***** BB01
STMT00006 (IL 0x00B...  ???)
N005 ( 16, 16) [000163] -AC-----R---              *  ASG       ref    $181
N004 (  1,  1) [000162] D------N----              +--*  LCL_VAR   ref    V05 tmp4         d:1 $181
N003 ( 16, 16) [000161] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $181
N002 (  2, 10) [000160] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $141

***** BB01
STMT00013 (IL 0x00B...  ???)
N007 ( 16, 12) [000236] -A----------              *  COMMA     void   $41
N003 (  7,  5) [000232] -A------R---              +--*  ASG       ref    $180
N002 (  3,  2) [000230] D------N----              |  +--*  LCL_VAR   ref    V14 tmp13        d:1 $180
N001 (  3,  2) [000231] -------N----              |  \--*  LCL_VAR   ref    V11 tmp10        u:1 (last use) $180
N006 (  9,  7) [000235] -A------R---              \--*  ASG       bool   $41
N005 (  4,  3) [000233] D------N----                 +--*  LCL_VAR   bool   V15 tmp14        d:1 $41
N004 (  4,  3) [000234] -------N----                 \--*  LCL_VAR   bool   V12 tmp11        u:1 (last use) $41

***** BB01
STMT00016 (IL 0x00B...  ???)
N006 (  6,  9) [000210] -A-XGO------              *  ASG       int    $VN.Void
N004 (  4,  4) [000209] V--XGO-N----              +--*  IND       int    $43
N003 (  2,  2) [000241] -------N----              |  \--*  ADD       byref  $280
N001 (  1,  1) [000205] ------------              |     +--*  LCL_VAR   ref    V05 tmp4         u:1 $181
N002 (  1,  1) [000240] ------------              |     \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags] $240
N005 (  1,  4) [000208] ------------              \--*  CNS_INT   int    0x1000000 $43

***** BB01
STMT00012 (IL 0x00B...  ???)
N017 ( 20, 17) [000260] -A-X--------              *  COMMA     void   $VN.Void
N010 ( 10,  8) [000253] -A-X--------              +--*  COMMA     void   $VN.Void
N005 (  3,  3) [000248] -A------R---              |  +--*  ASG       byref  $281
N004 (  1,  1) [000247] D------N----              |  |  +--*  LCL_VAR   byref  V16 tmp15        d:1 $281
N003 (  3,  3) [000244] ------------              |  |  \--*  ADD       byref  $281
N001 (  1,  1) [000245] ------------              |  |     +--*  LCL_VAR   ref    V05 tmp4         u:1 $181
N002 (  1,  1) [000246] ------------              |  |     \--*  CNS_INT   long   56 field offset Fseq[m_result] $241
N009 (  7,  5) [000252] -A-X--------              |  \--*  ASG       ref    $VN.Void
N007 (  3,  2) [000250] *--X---N----              |     +--*  IND       ref    $180
N006 (  1,  1) [000249] ------------              |     |  \--*  LCL_VAR   byref  V16 tmp15        u:1 Zero Fseq[Item2] $281
N008 (  3,  2) [000251] ------------              |     \--*  LCL_VAR   ref    V14 tmp13        u:1 (last use) $180
N016 ( 10,  9) [000259] -A-X--------              \--*  ASG       bool   $VN.Void
N014 (  5,  5) [000257] *--X---N----                 +--*  IND       bool   $41
N013 (  2,  2) [000256] -------N----                 |  \--*  ADD       byref  $282
N011 (  1,  1) [000254] ------------                 |     +--*  LCL_VAR   byref  V16 tmp15        u:1 (last use) $281
N012 (  1,  1) [000255] ------------                 |     \--*  CNS_INT   long   8 Fseq[Item1] $242
N015 (  4,  3) [000258] ------------                 \--*  LCL_VAR   bool   V15 tmp14        u:1 (last use) $41

***** BB01
STMT00003 (IL   ???...  ???)
N002 (  2,  2) [000016] ------------              *  RETURN    ref    $1c9
N001 (  1,  1) [000171] ------------              \--*  LCL_VAR   ref    V05 tmp4         u:1 (last use) $181

-------------------------------------------------------------------------------------------------------------------

*************** In optOptimizeValnumCSEs()

*************** Finishing PHASE Optimize Valnum CSEs

*************** Starting PHASE Assertion prop
*************** In optAssertionPropMain()
Blocks/Trees at start of phase

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)        (return)                     i label target hascall newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..011) (return), preds={} succs={}

***** BB01
STMT00000 (IL 0x000...0x010)
N003 (  0,  0) [000219] ------------              *  COMMA     void   $c1
N001 (  0,  0) [000215] ------------              +--*  NOP       void   $c0
N002 (  0,  0) [000218] ------------              \--*  NOP       void   $c1

***** BB01
STMT00004 (IL   ???...  ???)
N003 (  1,  3) [000022] -A------R---              *  ASG       bool   $41
N002 (  2,  2) [000021] D------N----              +--*  LCL_VAR   bool   V10 tmp9         d:1 $41
N001 (  1,  1) [000020] ------------              \--*  CNS_INT   int    1 $41

***** BB01
STMT00005 (IL   ???...  ???)
N004 (  4, 12) [000027] -A--G---R---              *  ASG       ref    $180
N003 (  1,  1) [000026] D------N----              +--*  LCL_VAR   ref    V09 tmp8         d:1 $180
N002 (  4, 12) [000221] #---G-------              \--*  IND       ref    $180
N001 (  2, 10) [000220] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "string" $140

***** BB01
STMT00009 (IL 0x00B...  ???)
N007 ( 12, 10) [000228] -A----------              *  COMMA     void   $41
N003 (  5,  4) [000224] -A------R---              +--*  ASG       ref    $180
N002 (  3,  2) [000222] D------N----              |  +--*  LCL_VAR   ref    V11 tmp10        d:1 $180
N001 (  1,  1) [000223] -------N----              |  \--*  LCL_VAR   ref    V09 tmp8         u:1 (last use) $180
N006 (  7,  6) [000227] -A------R---              \--*  ASG       bool   $41
N005 (  4,  3) [000225] D------N----                 +--*  LCL_VAR   bool   V12 tmp11        d:1 $41
N004 (  2,  2) [000226] -------N----                 \--*  LCL_VAR   bool   V10 tmp9         u:1 (last use) $41

***** BB01
STMT00006 (IL 0x00B...  ???)
N005 ( 16, 16) [000163] -AC-----R---              *  ASG       ref    $181
N004 (  1,  1) [000162] D------N----              +--*  LCL_VAR   ref    V05 tmp4         d:1 $181
N003 ( 16, 16) [000161] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $181
N002 (  2, 10) [000160] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $141

***** BB01
STMT00013 (IL 0x00B...  ???)
N007 ( 16, 12) [000236] -A----------              *  COMMA     void   $41
N003 (  7,  5) [000232] -A------R---              +--*  ASG       ref    $180
N002 (  3,  2) [000230] D------N----              |  +--*  LCL_VAR   ref    V14 tmp13        d:1 $180
N001 (  3,  2) [000231] -------N----              |  \--*  LCL_VAR   ref    V11 tmp10        u:1 (last use) $180
N006 (  9,  7) [000235] -A------R---              \--*  ASG       bool   $41
N005 (  4,  3) [000233] D------N----                 +--*  LCL_VAR   bool   V15 tmp14        d:1 $41
N004 (  4,  3) [000234] -------N----                 \--*  LCL_VAR   bool   V12 tmp11        u:1 (last use) $41

***** BB01
STMT00016 (IL 0x00B...  ???)
N006 (  6,  9) [000210] -A-XGO------              *  ASG       int    $VN.Void
N004 (  4,  4) [000209] V--XGO-N----              +--*  IND       int    $43
N003 (  2,  2) [000241] -------N----              |  \--*  ADD       byref  $280
N001 (  1,  1) [000205] ------------              |     +--*  LCL_VAR   ref    V05 tmp4         u:1 $181
N002 (  1,  1) [000240] ------------              |     \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags] $240
N005 (  1,  4) [000208] ------------              \--*  CNS_INT   int    0x1000000 $43

***** BB01
STMT00012 (IL 0x00B...  ???)
N017 ( 20, 17) [000260] -A-X--------              *  COMMA     void   $VN.Void
N010 ( 10,  8) [000253] -A-X--------              +--*  COMMA     void   $VN.Void
N005 (  3,  3) [000248] -A------R---              |  +--*  ASG       byref  $281
N004 (  1,  1) [000247] D------N----              |  |  +--*  LCL_VAR   byref  V16 tmp15        d:1 $281
N003 (  3,  3) [000244] ------------              |  |  \--*  ADD       byref  $281
N001 (  1,  1) [000245] ------------              |  |     +--*  LCL_VAR   ref    V05 tmp4         u:1 $181
N002 (  1,  1) [000246] ------------              |  |     \--*  CNS_INT   long   56 field offset Fseq[m_result] $241
N009 (  7,  5) [000252] -A-X--------              |  \--*  ASG       ref    $VN.Void
N007 (  3,  2) [000250] *--X---N----              |     +--*  IND       ref    $180
N006 (  1,  1) [000249] ------------              |     |  \--*  LCL_VAR   byref  V16 tmp15        u:1 Zero Fseq[Item2] $281
N008 (  3,  2) [000251] ------------              |     \--*  LCL_VAR   ref    V14 tmp13        u:1 (last use) $180
N016 ( 10,  9) [000259] -A-X--------              \--*  ASG       bool   $VN.Void
N014 (  5,  5) [000257] *--X---N----                 +--*  IND       bool   $41
N013 (  2,  2) [000256] -------N----                 |  \--*  ADD       byref  $282
N011 (  1,  1) [000254] ------------                 |     +--*  LCL_VAR   byref  V16 tmp15        u:1 (last use) $281
N012 (  1,  1) [000255] ------------                 |     \--*  CNS_INT   long   8 Fseq[Item1] $242
N015 (  4,  3) [000258] ------------                 \--*  LCL_VAR   bool   V15 tmp14        u:1 (last use) $41

***** BB01
STMT00003 (IL   ???...  ???)
N002 (  2,  2) [000016] ------------              *  RETURN    ref    $1c9
N001 (  1,  1) [000171] ------------              \--*  LCL_VAR   ref    V05 tmp4         u:1 (last use) $181

-------------------------------------------------------------------------------------------------------------------

VN based non-null prop in BB01:
N004 (  4,  4) [000209] V--XGO-N----              *  IND       int    $43
optVNAssertionPropCurStmt morphed tree:
N006 (  6,  9) [000210] -A--GO------              *  ASG       int    $VN.Void
N004 (  4,  4) [000209] V---GO-N----              +--*  IND       int    $43
N003 (  2,  2) [000241] -------N----              |  \--*  ADD       byref  $280
N001 (  1,  1) [000205] ------------              |     +--*  LCL_VAR   ref    V05 tmp4         u:1 $181
N002 (  1,  1) [000240] ------------              |     \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags] $240
N005 (  1,  4) [000208] ------------              \--*  CNS_INT   int    0x1000000 $43

GenTreeNode creates assertion:
N004 (  4,  4) [000209] V---GO-N----              *  IND       int    $43
In BB01 New Global Constant Assertion: (385, 0) ($181,$0) V05.01 != null index=#01, mask=0000000000000001
GenTreeNode creates assertion:
N007 (  3,  2) [000250] *--X---N----              *  IND       ref    $180
In BB01 New Global Constant Assertion: (385, 0) ($181,$0) Value_Number {JitNew($141, $1c2)} is not null index=#02, mask=0000000000000002
BB01 valueGen = 0000000000000003
AssertionPropCallback::StartMerge: BB01 in -> 0000000000000000
AssertionPropCallback::EndMerge  : BB01 in -> 0000000000000000

AssertionPropCallback::Changed   : BB01 before out -> 0000000000000003; after out -> 0000000000000003;
		jumpDest before out -> 0000000000000003; jumpDest after out -> 0000000000000000;



BB01 valueIn  = 0000000000000000 valueOut = 0000000000000003
Propagating 0000000000000000 assertions for BB01, stmt STMT00000, tree [000215], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00000, tree [000218], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00000, tree [000219], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00004, tree [000020], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00004, tree [000021], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00004, tree [000022], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00005, tree [000220], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00005, tree [000221], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00005, tree [000026], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00005, tree [000027], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00009, tree [000223], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00009, tree [000222], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00009, tree [000224], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00009, tree [000226], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00009, tree [000225], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00009, tree [000227], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00009, tree [000228], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00006, tree [000229], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00006, tree [000160], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00006, tree [000161], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00006, tree [000162], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00006, tree [000163], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00013, tree [000231], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00013, tree [000230], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00013, tree [000232], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00013, tree [000234], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00013, tree [000233], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00013, tree [000235], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00013, tree [000236], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00016, tree [000205], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00016, tree [000240], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00016, tree [000241], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00016, tree [000209], tree -> 1
Propagating 0000000000000001 assertions for BB01, stmt STMT00016, tree [000208], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00016, tree [000210], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00012, tree [000245], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00012, tree [000246], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00012, tree [000244], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00012, tree [000247], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00012, tree [000248], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00012, tree [000249], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00012, tree [000250], tree -> 2
Propagating 0000000000000003 assertions for BB01, stmt STMT00012, tree [000251], tree -> 0
Propagating 0000000000000003 assertions for BB01, stmt STMT00012, tree [000252], tree -> 0
Propagating 0000000000000003 assertions for BB01, stmt STMT00012, tree [000253], tree -> 0
Propagating 0000000000000003 assertions for BB01, stmt STMT00012, tree [000254], tree -> 0
Propagating 0000000000000003 assertions for BB01, stmt STMT00012, tree [000255], tree -> 0
Propagating 0000000000000003 assertions for BB01, stmt STMT00012, tree [000256], tree -> 0
Propagating 0000000000000003 assertions for BB01, stmt STMT00012, tree [000257], tree -> 2
Propagating 0000000000000003 assertions for BB01, stmt STMT00012, tree [000258], tree -> 0
Propagating 0000000000000003 assertions for BB01, stmt STMT00012, tree [000259], tree -> 0
Propagating 0000000000000003 assertions for BB01, stmt STMT00012, tree [000260], tree -> 0
Propagating 0000000000000003 assertions for BB01, stmt STMT00003, tree [000171], tree -> 0
Propagating 0000000000000003 assertions for BB01, stmt STMT00003, tree [000016], tree -> 0
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Assertion prop

*************** Starting PHASE Optimize index checks
*************** In OptimizeRangeChecks()
Blocks/trees before phase

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)        (return)                     i label target hascall newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..011) (return), preds={} succs={}

***** BB01
STMT00000 (IL 0x000...0x010)
N003 (  0,  0) [000219] ------------              *  COMMA     void   $c1
N001 (  0,  0) [000215] ------------              +--*  NOP       void   $c0
N002 (  0,  0) [000218] ------------              \--*  NOP       void   $c1

***** BB01
STMT00004 (IL   ???...  ???)
N003 (  1,  3) [000022] -A------R---              *  ASG       bool   $41
N002 (  2,  2) [000021] D------N----              +--*  LCL_VAR   bool   V10 tmp9         d:1 $41
N001 (  1,  1) [000020] ------------              \--*  CNS_INT   int    1 $41

***** BB01
STMT00005 (IL   ???...  ???)
N004 (  4, 12) [000027] -A--G---R---              *  ASG       ref    $180
N003 (  1,  1) [000026] D------N----              +--*  LCL_VAR   ref    V09 tmp8         d:1 $180
N002 (  4, 12) [000221] #---G-------              \--*  IND       ref    $180
N001 (  2, 10) [000220] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "string" $140

***** BB01
STMT00009 (IL 0x00B...  ???)
N007 ( 12, 10) [000228] -A----------              *  COMMA     void   $41
N003 (  5,  4) [000224] -A------R---              +--*  ASG       ref    $180
N002 (  3,  2) [000222] D------N----              |  +--*  LCL_VAR   ref    V11 tmp10        d:1 $180
N001 (  1,  1) [000223] -------N----              |  \--*  LCL_VAR   ref    V09 tmp8         u:1 (last use) $180
N006 (  7,  6) [000227] -A------R---              \--*  ASG       bool   $41
N005 (  4,  3) [000225] D------N----                 +--*  LCL_VAR   bool   V12 tmp11        d:1 $41
N004 (  2,  2) [000226] -------N----                 \--*  LCL_VAR   bool   V10 tmp9         u:1 (last use) $41

***** BB01
STMT00006 (IL 0x00B...  ???)
N005 ( 16, 16) [000163] -AC-----R---              *  ASG       ref    $181
N004 (  1,  1) [000162] D------N----              +--*  LCL_VAR   ref    V05 tmp4         d:1 $181
N003 ( 16, 16) [000161] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $181
N002 (  2, 10) [000160] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $141

***** BB01
STMT00013 (IL 0x00B...  ???)
N007 ( 16, 12) [000236] -A----------              *  COMMA     void   $41
N003 (  7,  5) [000232] -A------R---              +--*  ASG       ref    $180
N002 (  3,  2) [000230] D------N----              |  +--*  LCL_VAR   ref    V14 tmp13        d:1 $180
N001 (  3,  2) [000231] -------N----              |  \--*  LCL_VAR   ref    V11 tmp10        u:1 (last use) $180
N006 (  9,  7) [000235] -A------R---              \--*  ASG       bool   $41
N005 (  4,  3) [000233] D------N----                 +--*  LCL_VAR   bool   V15 tmp14        d:1 $41
N004 (  4,  3) [000234] -------N----                 \--*  LCL_VAR   bool   V12 tmp11        u:1 (last use) $41

***** BB01
STMT00016 (IL 0x00B...  ???)
N006 (  6,  9) [000210] -A--GO------              *  ASG       int    $VN.Void
N004 (  4,  4) [000209] V---GO-N----              +--*  IND       int    $43
N003 (  2,  2) [000241] -------N----              |  \--*  ADD       byref  $280
N001 (  1,  1) [000205] ------------              |     +--*  LCL_VAR   ref    V05 tmp4         u:1 $181
N002 (  1,  1) [000240] ------------              |     \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags] $240
N005 (  1,  4) [000208] ------------              \--*  CNS_INT   int    0x1000000 $43

***** BB01
STMT00012 (IL 0x00B...  ???)
N017 ( 20, 17) [000260] -A-X--------              *  COMMA     void   $VN.Void
N010 ( 10,  8) [000253] -A-X--------              +--*  COMMA     void   $VN.Void
N005 (  3,  3) [000248] -A------R---              |  +--*  ASG       byref  $281
N004 (  1,  1) [000247] D------N----              |  |  +--*  LCL_VAR   byref  V16 tmp15        d:1 $281
N003 (  3,  3) [000244] ------------              |  |  \--*  ADD       byref  $281
N001 (  1,  1) [000245] ------------              |  |     +--*  LCL_VAR   ref    V05 tmp4         u:1 $181
N002 (  1,  1) [000246] ------------              |  |     \--*  CNS_INT   long   56 field offset Fseq[m_result] $241
N009 (  7,  5) [000252] -A-X--------              |  \--*  ASG       ref    $VN.Void
N007 (  3,  2) [000250] *--X---N----              |     +--*  IND       ref    $180
N006 (  1,  1) [000249] ------------              |     |  \--*  LCL_VAR   byref  V16 tmp15        u:1 Zero Fseq[Item2] $281
N008 (  3,  2) [000251] ------------              |     \--*  LCL_VAR   ref    V14 tmp13        u:1 (last use) $180
N016 ( 10,  9) [000259] -A-X--------              \--*  ASG       bool   $VN.Void
N014 (  5,  5) [000257] *--X---N----                 +--*  IND       bool   $41
N013 (  2,  2) [000256] -------N----                 |  \--*  ADD       byref  $282
N011 (  1,  1) [000254] ------------                 |     +--*  LCL_VAR   byref  V16 tmp15        u:1 (last use) $281
N012 (  1,  1) [000255] ------------                 |     \--*  CNS_INT   long   8 Fseq[Item1] $242
N015 (  4,  3) [000258] ------------                 \--*  LCL_VAR   bool   V15 tmp14        u:1 (last use) $41

***** BB01
STMT00003 (IL   ???...  ???)
N002 (  2,  2) [000016] ------------              *  RETURN    ref    $1c9
N001 (  1,  1) [000171] ------------              \--*  LCL_VAR   ref    V05 tmp4         u:1 (last use) $181

-------------------------------------------------------------------------------------------------------------------

*************** Finishing PHASE Optimize index checks

*************** Starting PHASE Insert GC Polls

*************** Finishing PHASE Insert GC Polls [no changes]

*************** Starting PHASE Determine first cold block

*************** In fgDetermineFirstColdBlock()
No procedure splitting will be done for this method

*************** Finishing PHASE Determine first cold block
Trees before Rationalize IR

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)        (return)                     i label target hascall newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..011) (return), preds={} succs={}

***** BB01
STMT00000 (IL 0x000...0x010)
N003 (  0,  0) [000219] ------------              *  COMMA     void   $c1
N001 (  0,  0) [000215] ------------              +--*  NOP       void   $c0
N002 (  0,  0) [000218] ------------              \--*  NOP       void   $c1

***** BB01
STMT00004 (IL   ???...  ???)
N003 (  1,  3) [000022] -A------R---              *  ASG       bool   $41
N002 (  2,  2) [000021] D------N----              +--*  LCL_VAR   bool   V10 tmp9         d:1 $41
N001 (  1,  1) [000020] ------------              \--*  CNS_INT   int    1 $41

***** BB01
STMT00005 (IL   ???...  ???)
N004 (  4, 12) [000027] -A--G---R---              *  ASG       ref    $180
N003 (  1,  1) [000026] D------N----              +--*  LCL_VAR   ref    V09 tmp8         d:1 $180
N002 (  4, 12) [000221] #---G-------              \--*  IND       ref    $180
N001 (  2, 10) [000220] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "string" $140

***** BB01
STMT00009 (IL 0x00B...  ???)
N007 ( 12, 10) [000228] -A----------              *  COMMA     void   $41
N003 (  5,  4) [000224] -A------R---              +--*  ASG       ref    $180
N002 (  3,  2) [000222] D------N----              |  +--*  LCL_VAR   ref    V11 tmp10        d:1 $180
N001 (  1,  1) [000223] -------N----              |  \--*  LCL_VAR   ref    V09 tmp8         u:1 (last use) $180
N006 (  7,  6) [000227] -A------R---              \--*  ASG       bool   $41
N005 (  4,  3) [000225] D------N----                 +--*  LCL_VAR   bool   V12 tmp11        d:1 $41
N004 (  2,  2) [000226] -------N----                 \--*  LCL_VAR   bool   V10 tmp9         u:1 (last use) $41

***** BB01
STMT00006 (IL 0x00B...  ???)
N005 ( 16, 16) [000163] -AC-----R---              *  ASG       ref    $181
N004 (  1,  1) [000162] D------N----              +--*  LCL_VAR   ref    V05 tmp4         d:1 $181
N003 ( 16, 16) [000161] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $181
N002 (  2, 10) [000160] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $141

***** BB01
STMT00013 (IL 0x00B...  ???)
N007 ( 16, 12) [000236] -A----------              *  COMMA     void   $41
N003 (  7,  5) [000232] -A------R---              +--*  ASG       ref    $180
N002 (  3,  2) [000230] D------N----              |  +--*  LCL_VAR   ref    V14 tmp13        d:1 $180
N001 (  3,  2) [000231] -------N----              |  \--*  LCL_VAR   ref    V11 tmp10        u:1 (last use) $180
N006 (  9,  7) [000235] -A------R---              \--*  ASG       bool   $41
N005 (  4,  3) [000233] D------N----                 +--*  LCL_VAR   bool   V15 tmp14        d:1 $41
N004 (  4,  3) [000234] -------N----                 \--*  LCL_VAR   bool   V12 tmp11        u:1 (last use) $41

***** BB01
STMT00016 (IL 0x00B...  ???)
N006 (  6,  9) [000210] -A--GO------              *  ASG       int    $VN.Void
N004 (  4,  4) [000209] V---GO-N----              +--*  IND       int    $43
N003 (  2,  2) [000241] -------N----              |  \--*  ADD       byref  $280
N001 (  1,  1) [000205] ------------              |     +--*  LCL_VAR   ref    V05 tmp4         u:1 $181
N002 (  1,  1) [000240] ------------              |     \--*  CNS_INT   long   52 field offset Fseq[m_stateFlags] $240
N005 (  1,  4) [000208] ------------              \--*  CNS_INT   int    0x1000000 $43

***** BB01
STMT00012 (IL 0x00B...  ???)
N017 ( 20, 17) [000260] -A-X--------              *  COMMA     void   $VN.Void
N010 ( 10,  8) [000253] -A-X--------              +--*  COMMA     void   $VN.Void
N005 (  3,  3) [000248] -A------R---              |  +--*  ASG       byref  $281
N004 (  1,  1) [000247] D------N----              |  |  +--*  LCL_VAR   byref  V16 tmp15        d:1 $281
N003 (  3,  3) [000244] ------------              |  |  \--*  ADD       byref  $281
N001 (  1,  1) [000245] ------------              |  |     +--*  LCL_VAR   ref    V05 tmp4         u:1 $181
N002 (  1,  1) [000246] ------------              |  |     \--*  CNS_INT   long   56 field offset Fseq[m_result] $241
N009 (  7,  5) [000252] -A-X--------              |  \--*  ASG       ref    $VN.Void
N007 (  3,  2) [000250] *--X---N----              |     +--*  IND       ref    $180
N006 (  1,  1) [000249] ------------              |     |  \--*  LCL_VAR   byref  V16 tmp15        u:1 Zero Fseq[Item2] $281
N008 (  3,  2) [000251] ------------              |     \--*  LCL_VAR   ref    V14 tmp13        u:1 (last use) $180
N016 ( 10,  9) [000259] -A-X--------              \--*  ASG       bool   $VN.Void
N014 (  5,  5) [000257] *--X---N----                 +--*  IND       bool   $41
N013 (  2,  2) [000256] -------N----                 |  \--*  ADD       byref  $282
N011 (  1,  1) [000254] ------------                 |     +--*  LCL_VAR   byref  V16 tmp15        u:1 (last use) $281
N012 (  1,  1) [000255] ------------                 |     \--*  CNS_INT   long   8 Fseq[Item1] $242
N015 (  4,  3) [000258] ------------                 \--*  LCL_VAR   bool   V15 tmp14        u:1 (last use) $41

***** BB01
STMT00003 (IL   ???...  ???)
N002 (  2,  2) [000016] ------------              *  RETURN    ref    $1c9
N001 (  1,  1) [000171] ------------              \--*  LCL_VAR   ref    V05 tmp4         u:1 (last use) $181

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Rationalize IR
rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  1,  3) [000022] DA----------              *  STORE_LCL_VAR bool   V10 tmp9         d:1

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N004 (  4, 12) [000027] DA--G-------              *  STORE_LCL_VAR ref    V09 tmp8         d:1

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  5,  4) [000224] DA----------              *  STORE_LCL_VAR ref    V11 tmp10        d:1

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N006 (  7,  6) [000227] DA----------              *  STORE_LCL_VAR bool   V12 tmp11        d:1

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 ( 16, 16) [000163] DAC---------              *  STORE_LCL_VAR ref    V05 tmp4         d:1

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  7,  5) [000232] DA----------              *  STORE_LCL_VAR ref    V14 tmp13        d:1

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N006 (  9,  7) [000235] DA----------              *  STORE_LCL_VAR bool   V15 tmp14        d:1

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 (  3,  3) [000248] DA----------              *  STORE_LCL_VAR byref  V16 tmp15        d:1


*************** Finishing PHASE Rationalize IR
Trees after Rationalize IR

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)        (return)                     i label target hascall newobj LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..011) (return), preds={} succs={}
               [000261] ------------                 IL_OFFSET void   IL offset: 0x0
N001 (  1,  1) [000020] ------------        t20 =    CNS_INT   int    1 $41
                                                  /--*  t20    int    
N003 (  1,  3) [000022] DA----------              *  STORE_LCL_VAR bool   V10 tmp9         d:1
N001 (  2, 10) [000220] H-----------       t220 =    CNS_INT(h) long   0xD1FFAB1E "string" $140
                                                  /--*  t220   long   
N002 (  4, 12) [000221] #---G-------       t221 = *  IND       ref    $180
                                                  /--*  t221   ref    
N004 (  4, 12) [000027] DA--G-------              *  STORE_LCL_VAR ref    V09 tmp8         d:1
               [000262] ------------                 IL_OFFSET void   IL offset: 0xb
N001 (  1,  1) [000223] -------N----       t223 =    LCL_VAR   ref    V09 tmp8         u:1 (last use) $180
                                                  /--*  t223   ref    
N003 (  5,  4) [000224] DA----------              *  STORE_LCL_VAR ref    V11 tmp10        d:1
N004 (  2,  2) [000226] -------N----       t226 =    LCL_VAR   bool   V10 tmp9         u:1 (last use) $41
                                                  /--*  t226   bool   
N006 (  7,  6) [000227] DA----------              *  STORE_LCL_VAR bool   V12 tmp11        d:1
               [000263] ------------                 IL_OFFSET void   IL offset: 0xb
N002 (  2, 10) [000160] H-----------       t160 =    CNS_INT(h) long   0xd1ffab1e token $141
                                                  /--*  t160   long   arg0 in rcx
N003 ( 16, 16) [000161] --C---------       t161 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $181
                                                  /--*  t161   ref    
N005 ( 16, 16) [000163] DA----------              *  STORE_LCL_VAR ref    V05 tmp4         d:1
               [000264] ------------                 IL_OFFSET void   IL offset: 0xb
N001 (  3,  2) [000231] -------N----       t231 =    LCL_VAR   ref    V11 tmp10        u:1 (last use) $180
                                                  /--*  t231   ref    
N003 (  7,  5) [000232] DA----------              *  STORE_LCL_VAR ref    V14 tmp13        d:1
N004 (  4,  3) [000234] -------N----       t234 =    LCL_VAR   bool   V12 tmp11        u:1 (last use) $41
                                                  /--*  t234   bool   
N006 (  9,  7) [000235] DA----------              *  STORE_LCL_VAR bool   V15 tmp14        d:1
               [000265] ------------                 IL_OFFSET void   IL offset: 0xb
N001 (  1,  1) [000205] ------------       t205 =    LCL_VAR   ref    V05 tmp4         u:1 $181
N002 (  1,  1) [000240] ------------       t240 =    CNS_INT   long   52 field offset Fseq[m_stateFlags] $240
                                                  /--*  t205   ref    
                                                  +--*  t240   long   
N003 (  2,  2) [000241] -------N----       t241 = *  ADD       byref  $280
N005 (  1,  4) [000208] ------------       t208 =    CNS_INT   int    0x1000000 $43
                                                  /--*  t241   byref  
                                                  +--*  t208   int    
               [000266] -A--GO------              *  STOREIND  int   
               [000267] ------------                 IL_OFFSET void   IL offset: 0xb
N001 (  1,  1) [000245] ------------       t245 =    LCL_VAR   ref    V05 tmp4         u:1 $181
N002 (  1,  1) [000246] ------------       t246 =    CNS_INT   long   56 field offset Fseq[m_result] $241
                                                  /--*  t245   ref    
                                                  +--*  t246   long   
N003 (  3,  3) [000244] ------------       t244 = *  ADD       byref  $281
                                                  /--*  t244   byref  
N005 (  3,  3) [000248] DA----------              *  STORE_LCL_VAR byref  V16 tmp15        d:1
N006 (  1,  1) [000249] ------------       t249 =    LCL_VAR   byref  V16 tmp15        u:1 Zero Fseq[Item2] $281
N008 (  3,  2) [000251] ------------       t251 =    LCL_VAR   ref    V14 tmp13        u:1 (last use) $180
                                                  /--*  t249   byref  
                                                  +--*  t251   ref    
               [000268] -A-X--------              *  STOREIND  ref   
N011 (  1,  1) [000254] ------------       t254 =    LCL_VAR   byref  V16 tmp15        u:1 (last use) $281
N012 (  1,  1) [000255] ------------       t255 =    CNS_INT   long   8 Fseq[Item1] $242
                                                  /--*  t254   byref  
                                                  +--*  t255   long   
N013 (  2,  2) [000256] -------N----       t256 = *  ADD       byref  $282
N015 (  4,  3) [000258] ------------       t258 =    LCL_VAR   bool   V15 tmp14        u:1 (last use) $41
                                                  /--*  t256   byref  
                                                  +--*  t258   bool   
               [000269] -A-X--------              *  STOREIND  bool  
N001 (  1,  1) [000171] ------------       t171 =    LCL_VAR   ref    V05 tmp4         u:1 (last use) $181
                                                  /--*  t171   ref    
N002 (  2,  2) [000016] ------------              *  RETURN    ref    $1c9

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist

*************** Starting PHASE Do 'simple' lowering
Bumping outgoingArgSpaceSize to 32 for call [000161]

*************** Finishing PHASE Do 'simple' lowering
*************** In fgDebugCheckBBlist
Trees before Lowering nodeinfo

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)        (return)                     i label target hascall newobj LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..011) (return), preds={} succs={}
               [000261] ------------                 IL_OFFSET void   IL offset: 0x0
N001 (  1,  1) [000020] ------------        t20 =    CNS_INT   int    1 $41
                                                  /--*  t20    int    
N003 (  1,  3) [000022] DA----------              *  STORE_LCL_VAR bool   V10 tmp9         d:1
N001 (  2, 10) [000220] H-----------       t220 =    CNS_INT(h) long   0xD1FFAB1E "string" $140
                                                  /--*  t220   long   
N002 (  4, 12) [000221] #---G-------       t221 = *  IND       ref    $180
                                                  /--*  t221   ref    
N004 (  4, 12) [000027] DA--G-------              *  STORE_LCL_VAR ref    V09 tmp8         d:1
               [000262] ------------                 IL_OFFSET void   IL offset: 0xb
N001 (  1,  1) [000223] -------N----       t223 =    LCL_VAR   ref    V09 tmp8         u:1 (last use) $180
                                                  /--*  t223   ref    
N003 (  5,  4) [000224] DA----------              *  STORE_LCL_VAR ref    V11 tmp10        d:1
N004 (  2,  2) [000226] -------N----       t226 =    LCL_VAR   bool   V10 tmp9         u:1 (last use) $41
                                                  /--*  t226   bool   
N006 (  7,  6) [000227] DA----------              *  STORE_LCL_VAR bool   V12 tmp11        d:1
               [000263] ------------                 IL_OFFSET void   IL offset: 0xb
N002 (  2, 10) [000160] H-----------       t160 =    CNS_INT(h) long   0xd1ffab1e token $141
                                                  /--*  t160   long   arg0 in rcx
N003 ( 16, 16) [000161] --C---------       t161 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $181
                                                  /--*  t161   ref    
N005 ( 16, 16) [000163] DA----------              *  STORE_LCL_VAR ref    V05 tmp4         d:1
               [000264] ------------                 IL_OFFSET void   IL offset: 0xb
N001 (  3,  2) [000231] -------N----       t231 =    LCL_VAR   ref    V11 tmp10        u:1 (last use) $180
                                                  /--*  t231   ref    
N003 (  7,  5) [000232] DA----------              *  STORE_LCL_VAR ref    V14 tmp13        d:1
N004 (  4,  3) [000234] -------N----       t234 =    LCL_VAR   bool   V12 tmp11        u:1 (last use) $41
                                                  /--*  t234   bool   
N006 (  9,  7) [000235] DA----------              *  STORE_LCL_VAR bool   V15 tmp14        d:1
               [000265] ------------                 IL_OFFSET void   IL offset: 0xb
N001 (  1,  1) [000205] ------------       t205 =    LCL_VAR   ref    V05 tmp4         u:1 $181
N002 (  1,  1) [000240] ------------       t240 =    CNS_INT   long   52 field offset Fseq[m_stateFlags] $240
                                                  /--*  t205   ref    
                                                  +--*  t240   long   
N003 (  2,  2) [000241] -------N----       t241 = *  ADD       byref  $280
N005 (  1,  4) [000208] ------------       t208 =    CNS_INT   int    0x1000000 $43
                                                  /--*  t241   byref  
                                                  +--*  t208   int    
               [000266] -A--GO------              *  STOREIND  int   
               [000267] ------------                 IL_OFFSET void   IL offset: 0xb
N001 (  1,  1) [000245] ------------       t245 =    LCL_VAR   ref    V05 tmp4         u:1 $181
N002 (  1,  1) [000246] ------------       t246 =    CNS_INT   long   56 field offset Fseq[m_result] $241
                                                  /--*  t245   ref    
                                                  +--*  t246   long   
N003 (  3,  3) [000244] ------------       t244 = *  ADD       byref  $281
                                                  /--*  t244   byref  
N005 (  3,  3) [000248] DA----------              *  STORE_LCL_VAR byref  V16 tmp15        d:1
N006 (  1,  1) [000249] ------------       t249 =    LCL_VAR   byref  V16 tmp15        u:1 Zero Fseq[Item2] $281
N008 (  3,  2) [000251] ------------       t251 =    LCL_VAR   ref    V14 tmp13        u:1 (last use) $180
                                                  /--*  t249   byref  
                                                  +--*  t251   ref    
               [000268] -A-X--------              *  STOREIND  ref   
N011 (  1,  1) [000254] ------------       t254 =    LCL_VAR   byref  V16 tmp15        u:1 (last use) $281
N012 (  1,  1) [000255] ------------       t255 =    CNS_INT   long   8 Fseq[Item1] $242
                                                  /--*  t254   byref  
                                                  +--*  t255   long   
N013 (  2,  2) [000256] -------N----       t256 = *  ADD       byref  $282
N015 (  4,  3) [000258] ------------       t258 =    LCL_VAR   bool   V15 tmp14        u:1 (last use) $41
                                                  /--*  t256   byref  
                                                  +--*  t258   bool   
               [000269] -A-X--------              *  STOREIND  bool  
N001 (  1,  1) [000171] ------------       t171 =    LCL_VAR   ref    V05 tmp4         u:1 (last use) $181
                                                  /--*  t171   ref    
N002 (  2,  2) [000016] ------------              *  RETURN    ref    $1c9

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Lowering nodeinfo
lowering store lcl var/field (before):
N001 (  1,  1) [000020] ------------        t20 =    CNS_INT   int    1 $41
                                                  /--*  t20    int    
N003 (  1,  3) [000022] DA----------              *  STORE_LCL_VAR bool   V10 tmp9         d:1

lowering store lcl var/field (after):
N001 (  1,  1) [000020] -c----------        t20 =    CNS_INT   int    1 $41
                                                  /--*  t20    int    
N003 (  1,  3) [000022] DA----------              *  STORE_LCL_VAR bool   V10 tmp9         d:1

lowering store lcl var/field (before):
N001 (  2, 10) [000220] H-----------       t220 =    CNS_INT(h) long   0xD1FFAB1E "string" $140
                                                  /--*  t220   long   
N002 (  4, 12) [000221] #---G-------       t221 = *  IND       ref    $180
                                                  /--*  t221   ref    
N004 (  4, 12) [000027] DA--G-------              *  STORE_LCL_VAR ref    V09 tmp8         d:1

lowering store lcl var/field (after):
N001 (  2, 10) [000220] H-----------       t220 =    CNS_INT(h) long   0xD1FFAB1E "string" $140
                                                  /--*  t220   long   
N002 (  4, 12) [000221] #---G-------       t221 = *  IND       ref    $180
                                                  /--*  t221   ref    
N004 (  4, 12) [000027] DA--G-------              *  STORE_LCL_VAR ref    V09 tmp8         d:1

lowering store lcl var/field (before):
N001 (  1,  1) [000223] -------N----       t223 =    LCL_VAR   ref    V09 tmp8         u:1 (last use) $180
                                                  /--*  t223   ref    
N003 (  5,  4) [000224] DA----------              *  STORE_LCL_VAR ref    V11 tmp10        d:1

lowering store lcl var/field (after):
N001 (  1,  1) [000223] -------N----       t223 =    LCL_VAR   ref    V09 tmp8         u:1 (last use) $180
                                                  /--*  t223   ref    
N003 (  5,  4) [000224] DA----------              *  STORE_LCL_VAR ref    V11 tmp10        d:1

lowering store lcl var/field (before):
N004 (  2,  2) [000226] -------N----       t226 =    LCL_VAR   bool   V10 tmp9         u:1 (last use) $41
                                                  /--*  t226   bool   
N006 (  7,  6) [000227] DA----------              *  STORE_LCL_VAR bool   V12 tmp11        d:1

lowering store lcl var/field (after):
N004 (  2,  2) [000226] -------N----       t226 =    LCL_VAR   bool   V10 tmp9         u:1 (last use) $41
                                                  /--*  t226   bool   
N006 (  7,  6) [000227] DA----------              *  STORE_LCL_VAR bool   V12 tmp11        d:1

lowering call (before):
N002 (  2, 10) [000160] H-----------       t160 =    CNS_INT(h) long   0xd1ffab1e token $141
                                                  /--*  t160   long   arg0 in rcx
N003 ( 16, 16) [000161] --C---------       t161 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $181

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000229] ----------L-              *  ARGPLACE  long   $141

late:
======
lowering arg : N002 (  2, 10) [000160] H-----------              *  CNS_INT(h) long   0xd1ffab1e token $141
new node is :                [000270] ------------              *  PUTARG_REG long   REG rcx

lowering call (after):
N002 (  2, 10) [000160] H-----------       t160 =    CNS_INT(h) long   0xd1ffab1e token $141
                                                  /--*  t160   long   
               [000270] ------------       t270 = *  PUTARG_REG long   REG rcx
                                                  /--*  t270   long   arg0 in rcx
N003 ( 16, 16) [000161] --C---------       t161 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $181

lowering store lcl var/field (before):
N002 (  2, 10) [000160] H-----------       t160 =    CNS_INT(h) long   0xd1ffab1e token $141
                                                  /--*  t160   long   
               [000270] ------------       t270 = *  PUTARG_REG long   REG rcx
                                                  /--*  t270   long   arg0 in rcx
N003 ( 16, 16) [000161] --C---------       t161 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $181
                                                  /--*  t161   ref    
N005 ( 16, 16) [000163] DA----------              *  STORE_LCL_VAR ref    V05 tmp4         d:1

lowering store lcl var/field (after):
N002 (  2, 10) [000160] H-----------       t160 =    CNS_INT(h) long   0xd1ffab1e token $141
                                                  /--*  t160   long   
               [000270] ------------       t270 = *  PUTARG_REG long   REG rcx
                                                  /--*  t270   long   arg0 in rcx
N003 ( 16, 16) [000161] --C---------       t161 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $181
                                                  /--*  t161   ref    
N005 ( 16, 16) [000163] DA----------              *  STORE_LCL_VAR ref    V05 tmp4         d:1

lowering store lcl var/field (before):
N001 (  3,  2) [000231] -------N----       t231 =    LCL_VAR   ref    V11 tmp10        u:1 (last use) $180
                                                  /--*  t231   ref    
N003 (  7,  5) [000232] DA----------              *  STORE_LCL_VAR ref    V14 tmp13        d:1

lowering store lcl var/field (after):
N001 (  3,  2) [000231] -------N----       t231 =    LCL_VAR   ref    V11 tmp10        u:1 (last use) $180
                                                  /--*  t231   ref    
N003 (  7,  5) [000232] DA----------              *  STORE_LCL_VAR ref    V14 tmp13        d:1

lowering store lcl var/field (before):
N004 (  4,  3) [000234] -------N----       t234 =    LCL_VAR   bool   V12 tmp11        u:1 (last use) $41
                                                  /--*  t234   bool   
N006 (  9,  7) [000235] DA----------              *  STORE_LCL_VAR bool   V15 tmp14        d:1

lowering store lcl var/field (after):
N004 (  4,  3) [000234] -------N----       t234 =    LCL_VAR   bool   V12 tmp11        u:1 (last use) $41
                                                  /--*  t234   bool   
N006 (  9,  7) [000235] DA----------              *  STORE_LCL_VAR bool   V15 tmp14        d:1

Addressing mode:
  Base
    N001 (  1,  1) [000205] ------------              *  LCL_VAR   ref    V05 tmp4         u:1 $181
  + 52
Removing unused node:
  N002 (  1,  1) [000240] -c----------              *  CNS_INT   long   52 field offset Fseq[m_stateFlags] $240
New addressing mode node:
  N003 (  2,  2) [000241] ------------              *  LEA(b+52) byref 

Lower of StoreInd didn't mark the node as self contained for reason: 4
N001 (  1,  1) [000205] ------------       t205 =    LCL_VAR   ref    V05 tmp4         u:1 $181
                                                  /--*  t205   ref    
N003 (  2,  2) [000241] ------------       t241 = *  LEA(b+52) byref 
N005 (  1,  4) [000208] ------------       t208 =    CNS_INT   int    0x1000000 $43
                                                  /--*  t241   byref  
                                                  +--*  t208   int    
               [000266] -A--GO------              *  STOREIND  int   
lowering store lcl var/field (before):
N001 (  1,  1) [000245] ------------       t245 =    LCL_VAR   ref    V05 tmp4         u:1 $181
N002 (  1,  1) [000246] -c----------       t246 =    CNS_INT   long   56 field offset Fseq[m_result] $241
                                                  /--*  t245   ref    
                                                  +--*  t246   long   
N003 (  3,  3) [000244] ------------       t244 = *  ADD       byref  $281
                                                  /--*  t244   byref  
N005 (  3,  3) [000248] DA----------              *  STORE_LCL_VAR byref  V16 tmp15        d:1

lowering store lcl var/field (after):
N001 (  1,  1) [000245] ------------       t245 =    LCL_VAR   ref    V05 tmp4         u:1 $181
N002 (  1,  1) [000246] -c----------       t246 =    CNS_INT   long   56 field offset Fseq[m_result] $241
                                                  /--*  t245   ref    
                                                  +--*  t246   long   
N003 (  3,  3) [000244] ------------       t244 = *  ADD       byref  $281
                                                  /--*  t244   byref  
N005 (  3,  3) [000248] DA----------              *  STORE_LCL_VAR byref  V16 tmp15        d:1

Addressing mode:
  Base
    N011 (  1,  1) [000254] ------------              *  LCL_VAR   byref  V16 tmp15        u:1 (last use) $281
  + 8
Removing unused node:
  N012 (  1,  1) [000255] -c----------              *  CNS_INT   long   8 Fseq[Item1] $242
New addressing mode node:
  N013 (  2,  2) [000256] ------------              *  LEA(b+8)  byref 

Lower of StoreInd didn't mark the node as self contained for reason: 4
N011 (  1,  1) [000254] ------------       t254 =    LCL_VAR   byref  V16 tmp15        u:1 (last use) $281
                                                  /--*  t254   byref  
N013 (  2,  2) [000256] ------------       t256 = *  LEA(b+8)  byref 
N015 (  4,  3) [000258] ------------       t258 =    LCL_VAR   bool   V15 tmp14        u:1 (last use) $41
                                                  /--*  t256   byref  
                                                  +--*  t258   bool   
               [000269] -A-X--------              *  STOREIND  bool  
lowering GT_RETURN
N002 (  2,  2) [000016] ------------              *  RETURN    ref    $1c9
============Lower has completed modifying nodes.

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)        (return)                     i label target hascall newobj LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..011) (return), preds={} succs={}
               [000261] ------------                 IL_OFFSET void   IL offset: 0x0
N001 (  1,  1) [000020] -c----------        t20 =    CNS_INT   int    1 $41
                                                  /--*  t20    int    
N003 (  1,  3) [000022] DA----------              *  STORE_LCL_VAR bool   V10 tmp9         d:1
N001 (  2, 10) [000220] H-----------       t220 =    CNS_INT(h) long   0xD1FFAB1E "string" $140
                                                  /--*  t220   long   
N002 (  4, 12) [000221] #---G-------       t221 = *  IND       ref    $180
                                                  /--*  t221   ref    
N004 (  4, 12) [000027] DA--G-------              *  STORE_LCL_VAR ref    V09 tmp8         d:1
               [000262] ------------                 IL_OFFSET void   IL offset: 0xb
N001 (  1,  1) [000223] -------N----       t223 =    LCL_VAR   ref    V09 tmp8         u:1 (last use) $180
                                                  /--*  t223   ref    
N003 (  5,  4) [000224] DA----------              *  STORE_LCL_VAR ref    V11 tmp10        d:1
N004 (  2,  2) [000226] -------N----       t226 =    LCL_VAR   bool   V10 tmp9         u:1 (last use) $41
                                                  /--*  t226   bool   
N006 (  7,  6) [000227] DA----------              *  STORE_LCL_VAR bool   V12 tmp11        d:1
               [000263] ------------                 IL_OFFSET void   IL offset: 0xb
N002 (  2, 10) [000160] H-----------       t160 =    CNS_INT(h) long   0xd1ffab1e token $141
                                                  /--*  t160   long   
               [000270] ------------       t270 = *  PUTARG_REG long   REG rcx
                                                  /--*  t270   long   arg0 in rcx
N003 ( 16, 16) [000161] --C---------       t161 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $181
                                                  /--*  t161   ref    
N005 ( 16, 16) [000163] DA----------              *  STORE_LCL_VAR ref    V05 tmp4         d:1
               [000264] ------------                 IL_OFFSET void   IL offset: 0xb
N001 (  3,  2) [000231] -------N----       t231 =    LCL_VAR   ref    V11 tmp10        u:1 (last use) $180
                                                  /--*  t231   ref    
N003 (  7,  5) [000232] DA----------              *  STORE_LCL_VAR ref    V14 tmp13        d:1
N004 (  4,  3) [000234] -------N----       t234 =    LCL_VAR   bool   V12 tmp11        u:1 (last use) $41
                                                  /--*  t234   bool   
N006 (  9,  7) [000235] DA----------              *  STORE_LCL_VAR bool   V15 tmp14        d:1
               [000265] ------------                 IL_OFFSET void   IL offset: 0xb
N001 (  1,  1) [000205] ------------       t205 =    LCL_VAR   ref    V05 tmp4         u:1 $181
                                                  /--*  t205   ref    
N003 (  2,  2) [000241] -c----------       t241 = *  LEA(b+52) byref 
N005 (  1,  4) [000208] -c----------       t208 =    CNS_INT   int    0x1000000 $43
                                                  /--*  t241   byref  
                                                  +--*  t208   int    
               [000266] -A--GO------              *  STOREIND  int   
               [000267] ------------                 IL_OFFSET void   IL offset: 0xb
N001 (  1,  1) [000245] ------------       t245 =    LCL_VAR   ref    V05 tmp4         u:1 $181
N002 (  1,  1) [000246] -c----------       t246 =    CNS_INT   long   56 field offset Fseq[m_result] $241
                                                  /--*  t245   ref    
                                                  +--*  t246   long   
N003 (  3,  3) [000244] ------------       t244 = *  ADD       byref  $281
                                                  /--*  t244   byref  
N005 (  3,  3) [000248] DA----------              *  STORE_LCL_VAR byref  V16 tmp15        d:1
N006 (  1,  1) [000249] ------------       t249 =    LCL_VAR   byref  V16 tmp15        u:1 Zero Fseq[Item2] $281
N008 (  3,  2) [000251] ------------       t251 =    LCL_VAR   ref    V14 tmp13        u:1 (last use) $180
                                                  /--*  t249   byref  
                                                  +--*  t251   ref    
               [000268] -A-X--------              *  STOREIND  ref   
N011 (  1,  1) [000254] ------------       t254 =    LCL_VAR   byref  V16 tmp15        u:1 (last use) $281
                                                  /--*  t254   byref  
N013 (  2,  2) [000256] -c----------       t256 = *  LEA(b+8)  byref 
N015 (  4,  3) [000258] ------------       t258 =    LCL_VAR   bool   V15 tmp14        u:1 (last use) $41
                                                  /--*  t256   byref  
                                                  +--*  t258   bool   
               [000269] -A-X--------              *  STOREIND  bool  
N001 (  1,  1) [000171] ------------       t171 =    LCL_VAR   ref    V05 tmp4         u:1 (last use) $181
                                                  /--*  t171   ref    
N002 (  2,  2) [000016] ------------              *  RETURN    ref    $1c9

-------------------------------------------------------------------------------------------------------------------

*** lvaComputeRefCounts ***

*** lvaComputeRefCounts -- explicit counts ***
New refCnts for V10: refCnt =  1, refCntWtd = 1   
New refCnts for V09: refCnt =  1, refCntWtd = 1   
New refCnts for V09: refCnt =  2, refCntWtd = 2   
New refCnts for V11: refCnt =  1, refCntWtd = 1   
New refCnts for V10: refCnt =  2, refCntWtd = 2   
New refCnts for V12: refCnt =  1, refCntWtd = 1   
New refCnts for V05: refCnt =  1, refCntWtd = 2   
New refCnts for V11: refCnt =  2, refCntWtd = 2   
New refCnts for V14: refCnt =  1, refCntWtd = 1   
New refCnts for V12: refCnt =  2, refCntWtd = 2   
New refCnts for V15: refCnt =  1, refCntWtd = 1   
New refCnts for V05: refCnt =  2, refCntWtd = 4   
New refCnts for V05: refCnt =  3, refCntWtd = 6   
New refCnts for V16: refCnt =  1, refCntWtd = 2   
New refCnts for V16: refCnt =  2, refCntWtd = 4   
New refCnts for V14: refCnt =  2, refCntWtd = 2   
New refCnts for V16: refCnt =  3, refCntWtd = 6   
New refCnts for V15: refCnt =  2, refCntWtd = 2   
New refCnts for V05: refCnt =  4, refCntWtd = 8   

*** lvaComputeRefCounts -- implicit counts ***
*************** In fgLocalVarLiveness()
; Initial local variable assignments
;
;  V00 this              ref  this class-hnd
;  V01 OutArgs        lclBlk <32>  "OutgoingArgSpace"
;  V02 tmp1           struct <System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> "NewObj constructor temp"
;  V03 tmp2              ref  class-hnd "Inline return value spill temp"
;  V04 tmp3           struct <System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 16> "Inlining Arg"
;  V05 tmp4              ref  class-hnd exact "NewObj constructor temp"
;  V06 tmp5           struct <System.Threading.CancellationToken, 8> ld-addr-op "Inline ldloca(s) first use temp"
;  V07 tmp6           struct <System.ValueTuple`2[Boolean,__Canon], 16> "Inlining Arg"
;  V08 tmp7              int  "Inline stloc first use temp"
;  V09 tmp8              ref  V02.Item2(offs=0x00) P-INDEP "field V02.Item2 (fldOffset=0x0)"
;  V10 tmp9             bool  V02.Item1(offs=0x08) P-INDEP "field V02.Item1 (fldOffset=0x8)"
;  V11 tmp10             ref  V04.Item2(offs=0x00) P-INDEP "field V04.Item2 (fldOffset=0x0)"
;  V12 tmp11            bool  V04.Item1(offs=0x08) P-INDEP "field V04.Item1 (fldOffset=0x8)"
;  V13 tmp12             ref  V06._source(offs=0x00) P-INDEP "field V06._source (fldOffset=0x0)"
;  V14 tmp13             ref  V07.Item2(offs=0x00) P-INDEP "field V07.Item2 (fldOffset=0x0)"
;  V15 tmp14            bool  V07.Item1(offs=0x08) P-INDEP "field V07.Item1 (fldOffset=0x8)"
;  V16 tmp15           byref  "BlockOp address local"
In fgLocalVarLivenessInit
Tracked variable (8 out of 17) table:
V05 tmp4          [   ref]: refCnt =    4, refCntWtd =   8   
V16 tmp15         [ byref]: refCnt =    3, refCntWtd =   6   
V09 tmp8          [   ref]: refCnt =    2, refCntWtd =   2   
V11 tmp10         [   ref]: refCnt =    2, refCntWtd =   2   
V14 tmp13         [   ref]: refCnt =    2, refCntWtd =   2   
V10 tmp9          [  bool]: refCnt =    2, refCntWtd =   2   
V12 tmp11         [  bool]: refCnt =    2, refCntWtd =   2   
V15 tmp14         [  bool]: refCnt =    2, refCntWtd =   2   

*************** In fgPerBlockLocalVarLiveness()
BB01 USE(0)={                               } + ByrefExposed + GcHeap
     DEF(8)={V05 V16 V09 V11 V14 V10 V12 V15}

** Memory liveness computed, GcHeap states and ByrefExposed states match
*************** In fgInterBlockLocalVarLiveness()

BB liveness after fgLiveVarAnalysis():

BB01 IN (0)={} + ByrefExposed + GcHeap
     OUT(0)={}


*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)        (return)                     i label target hascall newobj LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist

*** lvaComputeRefCounts ***

*** lvaComputeRefCounts -- explicit counts ***
New refCnts for V10: refCnt =  1, refCntWtd = 1   
New refCnts for V09: refCnt =  1, refCntWtd = 1   
New refCnts for V09: refCnt =  2, refCntWtd = 2   
New refCnts for V11: refCnt =  1, refCntWtd = 1   
New refCnts for V10: refCnt =  2, refCntWtd = 2   
New refCnts for V12: refCnt =  1, refCntWtd = 1   
New refCnts for V05: refCnt =  1, refCntWtd = 2   
New refCnts for V11: refCnt =  2, refCntWtd = 2   
New refCnts for V14: refCnt =  1, refCntWtd = 1   
New refCnts for V12: refCnt =  2, refCntWtd = 2   
New refCnts for V15: refCnt =  1, refCntWtd = 1   
New refCnts for V05: refCnt =  2, refCntWtd = 4   
New refCnts for V05: refCnt =  3, refCntWtd = 6   
New refCnts for V16: refCnt =  1, refCntWtd = 2   
New refCnts for V16: refCnt =  2, refCntWtd = 4   
New refCnts for V14: refCnt =  2, refCntWtd = 2   
New refCnts for V16: refCnt =  3, refCntWtd = 6   
New refCnts for V15: refCnt =  2, refCntWtd = 2   
New refCnts for V05: refCnt =  4, refCntWtd = 8   

*** lvaComputeRefCounts -- implicit counts ***

*************** Finishing PHASE Lowering nodeinfo
Trees after Lowering nodeinfo

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)        (return)                     i label target hascall newobj LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..011) (return), preds={} succs={}
               [000261] ------------                 IL_OFFSET void   IL offset: 0x0
N001 (  1,  1) [000020] -c----------        t20 =    CNS_INT   int    1 $41
                                                  /--*  t20    int    
N003 (  1,  3) [000022] DA----------              *  STORE_LCL_VAR bool   V10 tmp9         d:1
N001 (  2, 10) [000220] H-----------       t220 =    CNS_INT(h) long   0xD1FFAB1E "string" $140
                                                  /--*  t220   long   
N002 (  4, 12) [000221] #---G-------       t221 = *  IND       ref    $180
                                                  /--*  t221   ref    
N004 (  4, 12) [000027] DA--G-------              *  STORE_LCL_VAR ref    V09 tmp8         d:1
               [000262] ------------                 IL_OFFSET void   IL offset: 0xb
N001 (  1,  1) [000223] -------N----       t223 =    LCL_VAR   ref    V09 tmp8         u:1 (last use) $180
                                                  /--*  t223   ref    
N003 (  5,  4) [000224] DA----------              *  STORE_LCL_VAR ref    V11 tmp10        d:1
N004 (  2,  2) [000226] -------N----       t226 =    LCL_VAR   bool   V10 tmp9         u:1 (last use) $41
                                                  /--*  t226   bool   
N006 (  7,  6) [000227] DA----------              *  STORE_LCL_VAR bool   V12 tmp11        d:1
               [000263] ------------                 IL_OFFSET void   IL offset: 0xb
N002 (  2, 10) [000160] H-----------       t160 =    CNS_INT(h) long   0xd1ffab1e token $141
                                                  /--*  t160   long   
               [000270] ------------       t270 = *  PUTARG_REG long   REG rcx
                                                  /--*  t270   long   arg0 in rcx
N003 ( 16, 16) [000161] --C---------       t161 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $181
                                                  /--*  t161   ref    
N005 ( 16, 16) [000163] DA----------              *  STORE_LCL_VAR ref    V05 tmp4         d:1
               [000264] ------------                 IL_OFFSET void   IL offset: 0xb
N001 (  3,  2) [000231] -------N----       t231 =    LCL_VAR   ref    V11 tmp10        u:1 (last use) $180
                                                  /--*  t231   ref    
N003 (  7,  5) [000232] DA----------              *  STORE_LCL_VAR ref    V14 tmp13        d:1
N004 (  4,  3) [000234] -------N----       t234 =    LCL_VAR   bool   V12 tmp11        u:1 (last use) $41
                                                  /--*  t234   bool   
N006 (  9,  7) [000235] DA----------              *  STORE_LCL_VAR bool   V15 tmp14        d:1
               [000265] ------------                 IL_OFFSET void   IL offset: 0xb
N001 (  1,  1) [000205] ------------       t205 =    LCL_VAR   ref    V05 tmp4         u:1 $181
                                                  /--*  t205   ref    
N003 (  2,  2) [000241] -c----------       t241 = *  LEA(b+52) byref 
N005 (  1,  4) [000208] -c----------       t208 =    CNS_INT   int    0x1000000 $43
                                                  /--*  t241   byref  
                                                  +--*  t208   int    
               [000266] -A--GO------              *  STOREIND  int   
               [000267] ------------                 IL_OFFSET void   IL offset: 0xb
N001 (  1,  1) [000245] ------------       t245 =    LCL_VAR   ref    V05 tmp4         u:1 $181
N002 (  1,  1) [000246] -c----------       t246 =    CNS_INT   long   56 field offset Fseq[m_result] $241
                                                  /--*  t245   ref    
                                                  +--*  t246   long   
N003 (  3,  3) [000244] ------------       t244 = *  ADD       byref  $281
                                                  /--*  t244   byref  
N005 (  3,  3) [000248] DA----------              *  STORE_LCL_VAR byref  V16 tmp15        d:1
N006 (  1,  1) [000249] ------------       t249 =    LCL_VAR   byref  V16 tmp15        u:1 Zero Fseq[Item2] $281
N008 (  3,  2) [000251] ------------       t251 =    LCL_VAR   ref    V14 tmp13        u:1 (last use) $180
                                                  /--*  t249   byref  
                                                  +--*  t251   ref    
               [000268] -A-X--------              *  STOREIND  ref   
N011 (  1,  1) [000254] ------------       t254 =    LCL_VAR   byref  V16 tmp15        u:1 (last use) $281
                                                  /--*  t254   byref  
N013 (  2,  2) [000256] -c----------       t256 = *  LEA(b+8)  byref 
N015 (  4,  3) [000258] ------------       t258 =    LCL_VAR   bool   V15 tmp14        u:1 (last use) $41
                                                  /--*  t256   byref  
                                                  +--*  t258   bool   
               [000269] -A-X--------              *  STOREIND  bool  
N001 (  1,  1) [000171] ------------       t171 =    LCL_VAR   ref    V05 tmp4         u:1 (last use) $181
                                                  /--*  t171   ref    
N002 (  2,  2) [000016] ------------              *  RETURN    ref    $1c9

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Trees before Calculate stack level slots

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)        (return)                     i label target hascall newobj LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..011) (return), preds={} succs={}
               [000261] ------------                 IL_OFFSET void   IL offset: 0x0
N001 (  1,  1) [000020] -c----------        t20 =    CNS_INT   int    1 $41
                                                  /--*  t20    int    
N003 (  1,  3) [000022] DA----------              *  STORE_LCL_VAR bool   V10 tmp9         d:1
N001 (  2, 10) [000220] H-----------       t220 =    CNS_INT(h) long   0xD1FFAB1E "string" $140
                                                  /--*  t220   long   
N002 (  4, 12) [000221] #---G-------       t221 = *  IND       ref    $180
                                                  /--*  t221   ref    
N004 (  4, 12) [000027] DA--G-------              *  STORE_LCL_VAR ref    V09 tmp8         d:1
               [000262] ------------                 IL_OFFSET void   IL offset: 0xb
N001 (  1,  1) [000223] -------N----       t223 =    LCL_VAR   ref    V09 tmp8         u:1 (last use) $180
                                                  /--*  t223   ref    
N003 (  5,  4) [000224] DA----------              *  STORE_LCL_VAR ref    V11 tmp10        d:1
N004 (  2,  2) [000226] -------N----       t226 =    LCL_VAR   bool   V10 tmp9         u:1 (last use) $41
                                                  /--*  t226   bool   
N006 (  7,  6) [000227] DA----------              *  STORE_LCL_VAR bool   V12 tmp11        d:1
               [000263] ------------                 IL_OFFSET void   IL offset: 0xb
N002 (  2, 10) [000160] H-----------       t160 =    CNS_INT(h) long   0xd1ffab1e token $141
                                                  /--*  t160   long   
               [000270] ------------       t270 = *  PUTARG_REG long   REG rcx
                                                  /--*  t270   long   arg0 in rcx
N003 ( 16, 16) [000161] --C---------       t161 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $181
                                                  /--*  t161   ref    
N005 ( 16, 16) [000163] DA----------              *  STORE_LCL_VAR ref    V05 tmp4         d:1
               [000264] ------------                 IL_OFFSET void   IL offset: 0xb
N001 (  3,  2) [000231] -------N----       t231 =    LCL_VAR   ref    V11 tmp10        u:1 (last use) $180
                                                  /--*  t231   ref    
N003 (  7,  5) [000232] DA----------              *  STORE_LCL_VAR ref    V14 tmp13        d:1
N004 (  4,  3) [000234] -------N----       t234 =    LCL_VAR   bool   V12 tmp11        u:1 (last use) $41
                                                  /--*  t234   bool   
N006 (  9,  7) [000235] DA----------              *  STORE_LCL_VAR bool   V15 tmp14        d:1
               [000265] ------------                 IL_OFFSET void   IL offset: 0xb
N001 (  1,  1) [000205] ------------       t205 =    LCL_VAR   ref    V05 tmp4         u:1 $181
                                                  /--*  t205   ref    
N003 (  2,  2) [000241] -c----------       t241 = *  LEA(b+52) byref 
N005 (  1,  4) [000208] -c----------       t208 =    CNS_INT   int    0x1000000 $43
                                                  /--*  t241   byref  
                                                  +--*  t208   int    
               [000266] -A--GO------              *  STOREIND  int   
               [000267] ------------                 IL_OFFSET void   IL offset: 0xb
N001 (  1,  1) [000245] ------------       t245 =    LCL_VAR   ref    V05 tmp4         u:1 $181
N002 (  1,  1) [000246] -c----------       t246 =    CNS_INT   long   56 field offset Fseq[m_result] $241
                                                  /--*  t245   ref    
                                                  +--*  t246   long   
N003 (  3,  3) [000244] ------------       t244 = *  ADD       byref  $281
                                                  /--*  t244   byref  
N005 (  3,  3) [000248] DA----------              *  STORE_LCL_VAR byref  V16 tmp15        d:1
N006 (  1,  1) [000249] ------------       t249 =    LCL_VAR   byref  V16 tmp15        u:1 Zero Fseq[Item2] $281
N008 (  3,  2) [000251] ------------       t251 =    LCL_VAR   ref    V14 tmp13        u:1 (last use) $180
                                                  /--*  t249   byref  
                                                  +--*  t251   ref    
               [000268] -A-X--------              *  STOREIND  ref   
N011 (  1,  1) [000254] ------------       t254 =    LCL_VAR   byref  V16 tmp15        u:1 (last use) $281
                                                  /--*  t254   byref  
N013 (  2,  2) [000256] -c----------       t256 = *  LEA(b+8)  byref 
N015 (  4,  3) [000258] ------------       t258 =    LCL_VAR   bool   V15 tmp14        u:1 (last use) $41
                                                  /--*  t256   byref  
                                                  +--*  t258   bool   
               [000269] -A-X--------              *  STOREIND  bool  
N001 (  1,  1) [000171] ------------       t171 =    LCL_VAR   ref    V05 tmp4         u:1 (last use) $181
                                                  /--*  t171   ref    
N002 (  2,  2) [000016] ------------              *  RETURN    ref    $1c9

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Calculate stack level slots

*************** Finishing PHASE Calculate stack level slots [no changes]

*************** Starting PHASE Linear scan register alloc
Clearing modified regs.

buildIntervals ========

-----------------
LIVENESS:
-----------------
BB01 use def in out
{}
{V05 V09 V10 V11 V12 V14 V15 V16}
{}
{}
Interval  0: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  0: (V05) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  1: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  1: (V09) ref (field) RefPositions {} physReg:NA Preferences=[allInt]
Interval  2: int RefPositions {} physReg:NA Preferences=[allInt]
  Interval  2: (V10) int (field) RefPositions {} physReg:NA Preferences=[allInt]
Interval  3: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  3: (V11) ref (field) RefPositions {} physReg:NA Preferences=[allInt]
Interval  4: int RefPositions {} physReg:NA Preferences=[allInt]
  Interval  4: (V12) int (field) RefPositions {} physReg:NA Preferences=[allInt]
Interval  5: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  5: (V14) ref (field) RefPositions {} physReg:NA Preferences=[allInt]
Interval  6: int RefPositions {} physReg:NA Preferences=[allInt]
  Interval  6: (V15) int (field) RefPositions {} physReg:NA Preferences=[allInt]
Interval  7: byref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  7: (V16) byref RefPositions {} physReg:NA Preferences=[allInt]

FP callee save candidate vars: None

floatVarCount = 0; hasLoops = 0, singleExit = 1
TUPLE STYLE DUMP BEFORE LSRA
LSRA Block Sequence: BB01(  1   ) 

BB01 [000..011) (return), preds={} succs={}
=====
  N000.                    IL_OFFSET IL offset: 0x0
  N001.                    CNS_INT   1
  N003.                    V10(t22)
  N001. t220            =  CNS_INT(h) 0xD1FFAB1E "string"
  N002. t221            =  IND      ; t220
  N004.                    V09(t27); t221
  N000.                    IL_OFFSET IL offset: 0xb
  N001.                    V09(t223*)
  N003.                    V11(t224); t223*
  N004.                    V10(t226*)
  N006.                    V12(t227); t226*
  N000.                    IL_OFFSET IL offset: 0xb
  N002. t160            =  CNS_INT(h) 0xd1ffab1e token
  N000. t270            =  PUTARG_REG; t160
  N003. t161            =  CALL help; t270
  N005.                    V05(t163); t161
  N000.                    IL_OFFSET IL offset: 0xb
  N001.                    V11(t231*)
  N003.                    V14(t232); t231*
  N004.                    V12(t234*)
  N006.                    V15(t235); t234*
  N000.                    IL_OFFSET IL offset: 0xb
  N001.                    V05(t205)
  N003. t241            =  LEA(b+52); t205
  N005.                    CNS_INT   0x1000000
  N000.                    STOREIND ; t241
  N000.                    IL_OFFSET IL offset: 0xb
  N001.                    V05(t245)
  N002.                    CNS_INT   56 field offset Fseq[m_result]
  N003. t244            =  ADD      ; t245
  N005.                    V16(t248); t244
  N006.                    V16(t249)
  N008.                    V14(t251*)
  N000.                    STOREIND ; t249,t251*
  N011.                    V16(t254*)
  N013. t256            =  LEA(b+8) ; t254*
  N015.                    V15(t258*)
  N000.                    STOREIND ; t256,t258*
  N001.                    V05(t171*)
  N002.                    RETURN   ; t171*




buildIntervals second part ========
Int arg V00 in reg rcx

NEW BLOCK BB01
<RefPosition #0   @1   RefTypeBB  BB01 regmask=[] minReg=1>

DefList: {  }
N003 (???,???) [000261] ------------              *  IL_OFFSET void   IL offset: 0x0 REG NA

DefList: {  }
N005 (  1,  1) [000020] -c----------              *  CNS_INT   int    1 REG NA $41
Contained
DefList: {  }
N007 (  1,  3) [000022] DA----------              *  STORE_LCL_VAR bool   V10 tmp9         d:1 NA REG NA
<RefPosition #1   @8   RefTypeDef <Ivl:2 V10> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N009 (  2, 10) [000220] H-----------              *  CNS_INT(h) long   0xD1FFAB1E "string" REG NA $140
Interval  8: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #2   @10  RefTypeDef <Ivl:8> CNS_INT BB01 regmask=[allInt] minReg=1>

DefList: { N009.t220. CNS_INT }
N011 (  4, 12) [000221] #---G-------              *  IND       ref    REG NA $180
<RefPosition #3   @11  RefTypeUse <Ivl:8>  BB01 regmask=[allInt] minReg=1 last>
Interval  9: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #4   @12  RefTypeDef <Ivl:9> IND BB01 regmask=[allInt] minReg=1>

DefList: { N011.t221. IND }
N013 (  4, 12) [000027] DA--G-------              *  STORE_LCL_VAR ref    V09 tmp8         d:1 NA REG NA
<RefPosition #5   @13  RefTypeUse <Ivl:9>  BB01 regmask=[allInt] minReg=1 last>
Assigning related <V09/L1> to <I9>
<RefPosition #6   @14  RefTypeDef <Ivl:1 V09> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N015 (???,???) [000262] ------------              *  IL_OFFSET void   IL offset: 0xb REG NA

DefList: {  }
N017 (  1,  1) [000223] -------N----              *  LCL_VAR   ref    V09 tmp8         u:1 NA (last use) REG NA $180

DefList: {  }
N019 (  5,  4) [000224] DA----------              *  STORE_LCL_VAR ref    V11 tmp10        d:1 NA REG NA
<RefPosition #7   @19  RefTypeUse <Ivl:1 V09> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
Assigning related <V11/L3> to <V09/L1>
<RefPosition #8   @20  RefTypeDef <Ivl:3 V11> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N021 (  2,  2) [000226] -------N----              *  LCL_VAR   bool   V10 tmp9         u:1 NA (last use) REG NA $41

DefList: {  }
N023 (  7,  6) [000227] DA----------              *  STORE_LCL_VAR bool   V12 tmp11        d:1 NA REG NA
<RefPosition #9   @23  RefTypeUse <Ivl:2 V10> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
Assigning related <V12/L4> to <V10/L2>
<RefPosition #10  @24  RefTypeDef <Ivl:4 V12> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N025 (???,???) [000263] ------------              *  IL_OFFSET void   IL offset: 0xb REG NA

DefList: {  }
N027 (  2, 10) [000160] H-----------              *  CNS_INT(h) long   0xd1ffab1e token REG NA $141
Interval 10: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #11  @28  RefTypeDef <Ivl:10> CNS_INT BB01 regmask=[allInt] minReg=1>

DefList: { N027.t160. CNS_INT }
N029 (???,???) [000270] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #12  @29  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #13  @29  RefTypeUse <Ivl:10>  BB01 regmask=[rcx] minReg=1 last fixed>
Interval 11: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #14  @30  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #15  @30  RefTypeDef <Ivl:11> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>

DefList: { N029.t270. PUTARG_REG }
N031 ( 16, 16) [000161] --C---------              *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG NA $181
<RefPosition #16  @31  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #17  @31  RefTypeUse <Ivl:11>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #18  @32  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #19  @32  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #20  @32  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #21  @32  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #22  @32  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #23  @32  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #24  @32  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
Interval 12: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #25  @32  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #26  @32  RefTypeDef <Ivl:12> CALL BB01 regmask=[rax] minReg=1 fixed>

DefList: { N031.t161. CALL }
N033 ( 16, 16) [000163] DA----------              *  STORE_LCL_VAR ref    V05 tmp4         d:1 NA REG NA
<RefPosition #27  @33  RefTypeUse <Ivl:12>  BB01 regmask=[allInt] minReg=1 last>
Assigning related <V05/L0> to <I12>
<RefPosition #28  @34  RefTypeDef <Ivl:0 V05> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N035 (???,???) [000264] ------------              *  IL_OFFSET void   IL offset: 0xb REG NA

DefList: {  }
N037 (  3,  2) [000231] -------N----              *  LCL_VAR   ref    V11 tmp10        u:1 NA (last use) REG NA $180

DefList: {  }
N039 (  7,  5) [000232] DA----------              *  STORE_LCL_VAR ref    V14 tmp13        d:1 NA REG NA
<RefPosition #29  @39  RefTypeUse <Ivl:3 V11> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
Assigning related <V14/L5> to <V11/L3>
<RefPosition #30  @40  RefTypeDef <Ivl:5 V14> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N041 (  4,  3) [000234] -------N----              *  LCL_VAR   bool   V12 tmp11        u:1 NA (last use) REG NA $41

DefList: {  }
N043 (  9,  7) [000235] DA----------              *  STORE_LCL_VAR bool   V15 tmp14        d:1 NA REG NA
<RefPosition #31  @43  RefTypeUse <Ivl:4 V12> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
Assigning related <V15/L6> to <V12/L4>
<RefPosition #32  @44  RefTypeDef <Ivl:6 V15> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N045 (???,???) [000265] ------------              *  IL_OFFSET void   IL offset: 0xb REG NA

DefList: {  }
N047 (  1,  1) [000205] ------------              *  LCL_VAR   ref    V05 tmp4         u:1 NA REG NA $181

DefList: {  }
N049 (  2,  2) [000241] -c----------              *  LEA(b+52) byref  REG NA
Contained
DefList: {  }
N051 (  1,  4) [000208] -c----------              *  CNS_INT   int    0x1000000 REG NA $43
Contained
DefList: {  }
N053 (???,???) [000266] -A--GO------              *  STOREIND  int    REG NA
<RefPosition #33  @53  RefTypeUse <Ivl:0 V05> LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N055 (???,???) [000267] ------------              *  IL_OFFSET void   IL offset: 0xb REG NA

DefList: {  }
N057 (  1,  1) [000245] ------------              *  LCL_VAR   ref    V05 tmp4         u:1 NA REG NA $181

DefList: {  }
N059 (  1,  1) [000246] -c----------              *  CNS_INT   long   56 field offset Fseq[m_result] REG NA $241
Contained
DefList: {  }
N061 (  3,  3) [000244] ------------              *  ADD       byref  REG NA $281
<RefPosition #34  @61  RefTypeUse <Ivl:0 V05> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
Interval 13: byref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #35  @62  RefTypeDef <Ivl:13> ADD BB01 regmask=[allInt] minReg=1>

DefList: { N061.t244. ADD }
N063 (  3,  3) [000248] DA----------              *  STORE_LCL_VAR byref  V16 tmp15        d:1 NA REG NA
<RefPosition #36  @63  RefTypeUse <Ivl:13>  BB01 regmask=[allInt] minReg=1 last>
Assigning related <V16/L7> to <I13>
<RefPosition #37  @64  RefTypeDef <Ivl:7 V16> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N065 (  1,  1) [000249] ------------              *  LCL_VAR   byref  V16 tmp15        u:1 NA Zero Fseq[Item2] REG NA $281

DefList: {  }
N067 (  3,  2) [000251] ------------              *  LCL_VAR   ref    V14 tmp13        u:1 NA (last use) REG NA $180

DefList: {  }
N069 (???,???) [000268] -A-X--------              *  STOREIND  ref    REG NA
<RefPosition #38  @69  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #39  @69  RefTypeUse <Ivl:7 V16> LCL_VAR BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #40  @69  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #41  @69  RefTypeUse <Ivl:5 V14> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #42  @70  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #43  @70  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #44  @70  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #45  @70  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #46  @70  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #47  @70  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #48  @70  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
<RefPosition #49  @70  RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1>
<RefPosition #50  @70  RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1>
<RefPosition #51  @70  RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1>
<RefPosition #52  @70  RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1>
<RefPosition #53  @70  RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1>
<RefPosition #54  @70  RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1>

DefList: {  }
N071 (  1,  1) [000254] ------------              *  LCL_VAR   byref  V16 tmp15        u:1 NA (last use) REG NA $281

DefList: {  }
N073 (  2,  2) [000256] -c----------              *  LEA(b+8)  byref  REG NA
Contained
DefList: {  }
N075 (  4,  3) [000258] ------------              *  LCL_VAR   bool   V15 tmp14        u:1 NA (last use) REG NA $41

DefList: {  }
N077 (???,???) [000269] -A-X--------              *  STOREIND  bool   REG NA
<RefPosition #55  @77  RefTypeUse <Ivl:7 V16> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #56  @77  RefTypeUse <Ivl:6 V15> LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N079 (  1,  1) [000171] ------------              *  LCL_VAR   ref    V05 tmp4         u:1 NA (last use) REG NA $181

DefList: {  }
N081 (  2,  2) [000016] ------------              *  RETURN    ref    REG NA $1c9
<RefPosition #57  @81  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #58  @81  RefTypeUse <Ivl:0 V05> LCL_VAR BB01 regmask=[rax] minReg=1 last fixed>



CHECKING LAST USES for BB01, liveout={}
==============================
use: {}
def: {V05 V09 V10 V11 V12 V14 V15 V16}

Linear scan intervals BEFORE VALIDATING INTERVALS:
Interval  0: (V05) ref RefPositions {#28@34 #33@53 #34@61 #58@81} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  1: (V09) ref (field) RefPositions {#6@14 #7@19} physReg:NA Preferences=[allInt] RelatedInterval <V11/L3>
Interval  2: (V10) int (field) RefPositions {#1@8 #9@23} physReg:NA Preferences=[allInt] RelatedInterval <V12/L4>
Interval  3: (V11) ref (field) RefPositions {#8@20 #29@39} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15] RelatedInterval <V14/L5>
Interval  4: (V12) int (field) RefPositions {#10@24 #31@43} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15] RelatedInterval <V15/L6>
Interval  5: (V14) ref (field) RefPositions {#30@40 #41@69} physReg:NA Preferences=[rdx]
Interval  6: (V15) int (field) RefPositions {#32@44 #56@77} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  7: (V16) byref RefPositions {#37@64 #39@69 #55@77} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  8: long (constant) RefPositions {#2@10 #3@11} physReg:NA Preferences=[allInt]
Interval  9: ref RefPositions {#4@12 #5@13} physReg:NA Preferences=[allInt] RelatedInterval <V09/L1>
Interval 10: long (constant) RefPositions {#11@28 #13@29} physReg:NA Preferences=[rcx]
Interval 11: long RefPositions {#15@30 #17@31} physReg:NA Preferences=[rcx]
Interval 12: ref RefPositions {#26@32 #27@33} physReg:NA Preferences=[rax] RelatedInterval <V05/L0>
Interval 13: byref RefPositions {#35@62 #36@63} physReg:NA Preferences=[allInt] RelatedInterval <V16/L7>

------------
REFPOSITIONS BEFORE VALIDATING INTERVALS: 
------------
<RefPosition #0   @1   RefTypeBB  BB01 regmask=[] minReg=1>
<RefPosition #1   @8   RefTypeDef <Ivl:2 V10> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #2   @10  RefTypeDef <Ivl:8> CNS_INT BB01 regmask=[allInt] minReg=1>
<RefPosition #3   @11  RefTypeUse <Ivl:8>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #4   @12  RefTypeDef <Ivl:9> IND BB01 regmask=[allInt] minReg=1>
<RefPosition #5   @13  RefTypeUse <Ivl:9>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #6   @14  RefTypeDef <Ivl:1 V09> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #7   @19  RefTypeUse <Ivl:1 V09> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #8   @20  RefTypeDef <Ivl:3 V11> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #9   @23  RefTypeUse <Ivl:2 V10> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #10  @24  RefTypeDef <Ivl:4 V12> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #11  @28  RefTypeDef <Ivl:10> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #12  @29  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #13  @29  RefTypeUse <Ivl:10>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #14  @30  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #15  @30  RefTypeDef <Ivl:11> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #16  @31  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #17  @31  RefTypeUse <Ivl:11>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #18  @32  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #19  @32  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #20  @32  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #21  @32  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #22  @32  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #23  @32  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #24  @32  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #25  @32  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #26  @32  RefTypeDef <Ivl:12> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #27  @33  RefTypeUse <Ivl:12>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #28  @34  RefTypeDef <Ivl:0 V05> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #29  @39  RefTypeUse <Ivl:3 V11> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #30  @40  RefTypeDef <Ivl:5 V14> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #31  @43  RefTypeUse <Ivl:4 V12> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #32  @44  RefTypeDef <Ivl:6 V15> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #33  @53  RefTypeUse <Ivl:0 V05> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #34  @61  RefTypeUse <Ivl:0 V05> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #35  @62  RefTypeDef <Ivl:13> ADD BB01 regmask=[allInt] minReg=1>
<RefPosition #36  @63  RefTypeUse <Ivl:13>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #37  @64  RefTypeDef <Ivl:7 V16> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #38  @69  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #39  @69  RefTypeUse <Ivl:7 V16> LCL_VAR BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #40  @69  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #41  @69  RefTypeUse <Ivl:5 V14> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #42  @70  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #43  @70  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #44  @70  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #45  @70  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #46  @70  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #47  @70  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #48  @70  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #49  @70  RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1 last>
<RefPosition #50  @70  RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1 last>
<RefPosition #51  @70  RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1 last>
<RefPosition #52  @70  RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1 last>
<RefPosition #53  @70  RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1 last>
<RefPosition #54  @70  RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1 last>
<RefPosition #55  @77  RefTypeUse <Ivl:7 V16> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #56  @77  RefTypeUse <Ivl:6 V15> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #57  @81  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #58  @81  RefTypeUse <Ivl:0 V05> LCL_VAR BB01 regmask=[rax] minReg=1 last fixed>
-----------------
<RefPosition #28  @34  RefTypeDef <Ivl:0 V05> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #33  @53  RefTypeUse <Ivl:0 V05> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #34  @61  RefTypeUse <Ivl:0 V05> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #58  @81  RefTypeUse <Ivl:0 V05> LCL_VAR BB01 regmask=[rax] minReg=1 last fixed>
-----------------
<RefPosition #37  @64  RefTypeDef <Ivl:7 V16> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #39  @69  RefTypeUse <Ivl:7 V16> LCL_VAR BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #55  @77  RefTypeUse <Ivl:7 V16> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
-----------------
<RefPosition #6   @14  RefTypeDef <Ivl:1 V09> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #7   @19  RefTypeUse <Ivl:1 V09> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
-----------------
<RefPosition #8   @20  RefTypeDef <Ivl:3 V11> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #29  @39  RefTypeUse <Ivl:3 V11> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
-----------------
<RefPosition #30  @40  RefTypeDef <Ivl:5 V14> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #41  @69  RefTypeUse <Ivl:5 V14> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
-----------------
<RefPosition #1   @8   RefTypeDef <Ivl:2 V10> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #9   @23  RefTypeUse <Ivl:2 V10> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
-----------------
<RefPosition #10  @24  RefTypeDef <Ivl:4 V12> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #31  @43  RefTypeUse <Ivl:4 V12> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
-----------------
<RefPosition #32  @44  RefTypeDef <Ivl:6 V15> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #56  @77  RefTypeUse <Ivl:6 V15> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
TUPLE STYLE DUMP WITH REF POSITIONS
Incoming Parameters: 
BB01 [000..011) (return), preds={} succs={}
=====
  N003.                    IL_OFFSET IL offset: 0x0
  N005.                    CNS_INT   1
  N007.                    V10(L2)
        Def:<V10/L2>(#1) Pref:<V12/L4>
  N009.                    CNS_INT(h) 0xD1FFAB1E "string"
        Def:<I8>(#2)
  N011.                    IND      
                               Use:<I8>(#3) *
        Def:<I9>(#4) Pref:<V09/L1>
  N013.                    V09(L1)
                               Use:<I9>(#5) *
        Def:<V09/L1>(#6) Pref:<V11/L3>
  N015.                    IL_OFFSET IL offset: 0xb
  N017.                    V09(L1)
  N019.                    V11(L3)
                               Use:<V09/L1>(#7) *
        Def:<V11/L3>(#8) Pref:<V14/L5>
  N021.                    V10(L2)
  N023.                    V12(L4)
                               Use:<V10/L2>(#9) *
        Def:<V12/L4>(#10) Pref:<V15/L6>
  N025.                    IL_OFFSET IL offset: 0xb
  N027.                    CNS_INT(h) 0xd1ffab1e token
        Def:<I10>(#11)
  N029.                    PUTARG_REG
                               Use:<I10>(#13) Fixed:rcx(#12) *
        Def:<I11>(#15) rcx
  N031.                    CALL help
                               Use:<I11>(#17) Fixed:rcx(#16) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I12>(#26) rax Pref:<V05/L0>
  N033.                    V05(L0)
                               Use:<I12>(#27) *
        Def:<V05/L0>(#28)
  N035.                    IL_OFFSET IL offset: 0xb
  N037.                    V11(L3)
  N039.                    V14(L5)
                               Use:<V11/L3>(#29) *
        Def:<V14/L5>(#30)
  N041.                    V12(L4)
  N043.                    V15(L6)
                               Use:<V12/L4>(#31) *
        Def:<V15/L6>(#32)
  N045.                    IL_OFFSET IL offset: 0xb
  N047.                    V05(L0)
  N049.                    LEA(b+52)
  N051.                    CNS_INT   0x1000000
  N053.                    STOREIND 
                               Use:<V05/L0>(#33)
  N055.                    IL_OFFSET IL offset: 0xb
  N057.                    V05(L0)
  N059.                    CNS_INT   56 field offset Fseq[m_result]
  N061.                    ADD      
                               Use:<V05/L0>(#34)
        Def:<I13>(#35) Pref:<V16/L7>
  N063.                    V16(L7)
                               Use:<I13>(#36) *
        Def:<V16/L7>(#37)
  N065.                    V16(L7)
  N067.                    V14(L5)
  N069.                    STOREIND 
                               Use:<V16/L7>(#39) Fixed:rcx(#38)
                               Use:<V14/L5>(#41) Fixed:rdx(#40) *
        Kill: rax rcx rdx r8 r9 r10 r11 mm0 mm1 mm2 mm3 mm4 mm5 
  N071.                    V16(L7)
  N073.                    LEA(b+8) 
  N075.                    V15(L6)
  N077.                    STOREIND 
                               Use:<V16/L7>(#55) *
                               Use:<V15/L6>(#56) *
  N079.                    V05(L0)
  N081.                    RETURN   
                               Use:<V05/L0>(#58) Fixed:rax(#57) *




Linear scan intervals after buildIntervals:
Interval  0: (V05) ref RefPositions {#28@34 #33@53 #34@61 #58@81} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  1: (V09) ref (field) RefPositions {#6@14 #7@19} physReg:NA Preferences=[allInt] RelatedInterval <V11/L3>
Interval  2: (V10) int (field) RefPositions {#1@8 #9@23} physReg:NA Preferences=[allInt] RelatedInterval <V12/L4>
Interval  3: (V11) ref (field) RefPositions {#8@20 #29@39} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15] RelatedInterval <V14/L5>
Interval  4: (V12) int (field) RefPositions {#10@24 #31@43} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15] RelatedInterval <V15/L6>
Interval  5: (V14) ref (field) RefPositions {#30@40 #41@69} physReg:NA Preferences=[rdx]
Interval  6: (V15) int (field) RefPositions {#32@44 #56@77} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  7: (V16) byref RefPositions {#37@64 #39@69 #55@77} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  8: long (constant) RefPositions {#2@10 #3@11} physReg:NA Preferences=[allInt]
Interval  9: ref RefPositions {#4@12 #5@13} physReg:NA Preferences=[allInt] RelatedInterval <V09/L1>
Interval 10: long (constant) RefPositions {#11@28 #13@29} physReg:NA Preferences=[rcx]
Interval 11: long RefPositions {#15@30 #17@31} physReg:NA Preferences=[rcx]
Interval 12: ref RefPositions {#26@32 #27@33} physReg:NA Preferences=[rax] RelatedInterval <V05/L0>
Interval 13: byref RefPositions {#35@62 #36@63} physReg:NA Preferences=[allInt] RelatedInterval <V16/L7>

*************** In LinearScan::allocateRegisters()

Linear scan intervals before allocateRegisters:
Interval  0: (V05) ref RefPositions {#28@34 #33@53 #34@61 #58@81} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  1: (V09) ref (field) RefPositions {#6@14 #7@19} physReg:NA Preferences=[allInt] RelatedInterval <V11/L3>
Interval  2: (V10) int (field) RefPositions {#1@8 #9@23} physReg:NA Preferences=[allInt] RelatedInterval <V12/L4>
Interval  3: (V11) ref (field) RefPositions {#8@20 #29@39} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15] RelatedInterval <V14/L5>
Interval  4: (V12) int (field) RefPositions {#10@24 #31@43} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15] RelatedInterval <V15/L6>
Interval  5: (V14) ref (field) RefPositions {#30@40 #41@69} physReg:NA Preferences=[rdx]
Interval  6: (V15) int (field) RefPositions {#32@44 #56@77} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  7: (V16) byref RefPositions {#37@64 #39@69 #55@77} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  8: long (constant) RefPositions {#2@10 #3@11} physReg:NA Preferences=[allInt]
Interval  9: ref RefPositions {#4@12 #5@13} physReg:NA Preferences=[allInt] RelatedInterval <V09/L1>
Interval 10: long (constant) RefPositions {#11@28 #13@29} physReg:NA Preferences=[rcx]
Interval 11: long RefPositions {#15@30 #17@31} physReg:NA Preferences=[rcx]
Interval 12: ref RefPositions {#26@32 #27@33} physReg:NA Preferences=[rax] RelatedInterval <V05/L0>
Interval 13: byref RefPositions {#35@62 #36@63} physReg:NA Preferences=[allInt] RelatedInterval <V16/L7>

------------
REFPOSITIONS BEFORE ALLOCATION: 
------------
<RefPosition #0   @1   RefTypeBB  BB01 regmask=[] minReg=1>
<RefPosition #1   @8   RefTypeDef <Ivl:2 V10> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #2   @10  RefTypeDef <Ivl:8> CNS_INT BB01 regmask=[allInt] minReg=1>
<RefPosition #3   @11  RefTypeUse <Ivl:8>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #4   @12  RefTypeDef <Ivl:9> IND BB01 regmask=[allInt] minReg=1>
<RefPosition #5   @13  RefTypeUse <Ivl:9>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #6   @14  RefTypeDef <Ivl:1 V09> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #7   @19  RefTypeUse <Ivl:1 V09> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #8   @20  RefTypeDef <Ivl:3 V11> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #9   @23  RefTypeUse <Ivl:2 V10> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #10  @24  RefTypeDef <Ivl:4 V12> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #11  @28  RefTypeDef <Ivl:10> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #12  @29  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #13  @29  RefTypeUse <Ivl:10>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #14  @30  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #15  @30  RefTypeDef <Ivl:11> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #16  @31  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #17  @31  RefTypeUse <Ivl:11>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #18  @32  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #19  @32  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #20  @32  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #21  @32  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #22  @32  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #23  @32  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #24  @32  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #25  @32  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #26  @32  RefTypeDef <Ivl:12> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #27  @33  RefTypeUse <Ivl:12>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #28  @34  RefTypeDef <Ivl:0 V05> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #29  @39  RefTypeUse <Ivl:3 V11> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #30  @40  RefTypeDef <Ivl:5 V14> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #31  @43  RefTypeUse <Ivl:4 V12> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #32  @44  RefTypeDef <Ivl:6 V15> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #33  @53  RefTypeUse <Ivl:0 V05> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #34  @61  RefTypeUse <Ivl:0 V05> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #35  @62  RefTypeDef <Ivl:13> ADD BB01 regmask=[allInt] minReg=1>
<RefPosition #36  @63  RefTypeUse <Ivl:13>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #37  @64  RefTypeDef <Ivl:7 V16> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #38  @69  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #39  @69  RefTypeUse <Ivl:7 V16> LCL_VAR BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #40  @69  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #41  @69  RefTypeUse <Ivl:5 V14> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #42  @70  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #43  @70  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #44  @70  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #45  @70  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #46  @70  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #47  @70  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #48  @70  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #49  @70  RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1 last>
<RefPosition #50  @70  RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1 last>
<RefPosition #51  @70  RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1 last>
<RefPosition #52  @70  RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1 last>
<RefPosition #53  @70  RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1 last>
<RefPosition #54  @70  RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1 last>
<RefPosition #55  @77  RefTypeUse <Ivl:7 V16> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #56  @77  RefTypeUse <Ivl:6 V15> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #57  @81  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #58  @81  RefTypeUse <Ivl:0 V05> LCL_VAR BB01 regmask=[rax] minReg=1 last fixed>

VAR REFPOSITIONS BEFORE ALLOCATION
--- V00
--- V01
--- V02
--- V03
--- V04
--- V05  (Interval 0)
<RefPosition #28  @34  RefTypeDef <Ivl:0 V05> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #33  @53  RefTypeUse <Ivl:0 V05> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #34  @61  RefTypeUse <Ivl:0 V05> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #58  @81  RefTypeUse <Ivl:0 V05> LCL_VAR BB01 regmask=[rax] minReg=1 last fixed>
--- V06
--- V07
--- V08
--- V09  (Interval 1)
<RefPosition #6   @14  RefTypeDef <Ivl:1 V09> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #7   @19  RefTypeUse <Ivl:1 V09> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
--- V10  (Interval 2)
<RefPosition #1   @8   RefTypeDef <Ivl:2 V10> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #9   @23  RefTypeUse <Ivl:2 V10> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
--- V11  (Interval 3)
<RefPosition #8   @20  RefTypeDef <Ivl:3 V11> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #29  @39  RefTypeUse <Ivl:3 V11> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
--- V12  (Interval 4)
<RefPosition #10  @24  RefTypeDef <Ivl:4 V12> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #31  @43  RefTypeUse <Ivl:4 V12> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
--- V13
--- V14  (Interval 5)
<RefPosition #30  @40  RefTypeDef <Ivl:5 V14> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #41  @69  RefTypeUse <Ivl:5 V14> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
--- V15  (Interval 6)
<RefPosition #32  @44  RefTypeDef <Ivl:6 V15> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #56  @77  RefTypeUse <Ivl:6 V15> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
--- V16  (Interval 7)
<RefPosition #37  @64  RefTypeDef <Ivl:7 V16> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #39  @69  RefTypeUse <Ivl:7 V16> LCL_VAR BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #55  @77  RefTypeUse <Ivl:7 V16> LCL_VAR BB01 regmask=[allInt] minReg=1 last>



Allocating Registers
--------------------
The following table has one or more rows for each RefPosition that is handled during allocation.
The first column provides the basic information about the RefPosition, with its type (e.g. Def,
Use, Fixd) followed by a '*' if it is a last use, and a 'D' if it is delayRegFree, and then the
action taken during allocation (e.g. Alloc a new register, or Keep an existing one).
The subsequent columns show the Interval occupying each register, if any, followed by 'a' if it is
active, a 'p' if it is a large vector that has been partially spilled, and 'i'if it is inactive.
Columns are only printed up to the last modifed register, which may increase during allocation,
in which case additional columns will appear.  
Registers which are not marked modified have ---- in their column.

------------------------------+----+----+----+----+----+----+----+----+----+
LocRP# Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
------------------------------+----+----+----+----+----+----+----+----+----+
                              |    |    |    |    |    |    |    |    |    |
 1.#0  BB1 PredBB0            |    |    |    |    |    |    |    |    |    |
 8.#1  V10  Def    Alloc rsi  |    |    |    |    |    |V10a|    |    |    |
10.#2  C8   Def    Alloc rcx  |    |C8 a|    |    |    |V10a|    |    |    |
11.#3  C8   Use *  Keep  rcx  |    |C8 a|    |    |    |V10a|    |    |    |
12.#4  I9   Def    Alloc rdi  |    |C8 i|    |    |    |V10a|I9 a|    |    |
13.#5  I9   Use *  Keep  rdi  |    |C8 i|    |    |    |V10a|I9 a|    |    |
14.#6  V9   Def    Alloc rdi  |    |C8 i|    |    |    |V10a|V9 a|    |    |
19.#7  V9   Use *  Keep  rdi  |    |C8 i|    |    |    |V10a|V9 a|    |    |
20.#8  V11  Def    Alloc rdi  |    |C8 i|    |    |    |V10a|V11a|    |    |
23.#9  V10  Use *  Keep  rsi  |    |C8 i|    |    |    |V10a|V11a|    |    |
24.#10 V12  Def    Alloc rsi  |    |C8 i|    |    |    |V12a|V11a|    |    |
28.#11 C10  Def    Alloc rcx  |    |C10a|    |    |    |V12a|V11a|    |    |
29.#12 rcx  Fixd   Keep  rcx  |    |C10a|    |    |    |V12a|V11a|    |    |
29.#13 C10  Use *  Keep  rcx  |    |C10a|    |    |    |V12a|V11a|    |    |
30.#14 rcx  Fixd   Keep  rcx  |    |    |    |    |    |V12a|V11a|    |    |
30.#15 I11  Def    Alloc rcx  |    |I11a|    |    |    |V12a|V11a|    |    |
31.#16 rcx  Fixd   Keep  rcx  |    |I11a|    |    |    |V12a|V11a|    |    |
31.#17 I11  Use *  Keep  rcx  |    |I11a|    |    |    |V12a|V11a|    |    |
32.#18 rax  Kill   Keep  rax  |    |    |    |    |    |V12a|V11a|    |    |
32.#19 rcx  Kill   Keep  rcx  |    |    |    |    |    |V12a|V11a|    |    |
32.#20 rdx  Kill   Keep  rdx  |    |    |    |    |    |V12a|V11a|    |    |
32.#21 r8   Kill   Keep  r8   |    |    |    |    |    |V12a|V11a|    |    |
32.#22 r9   Kill   Keep  r9   |    |    |    |    |    |V12a|V11a|    |    |
32.#23 r10  Kill   Keep  r10  |    |    |    |    |    |V12a|V11a|    |    |
32.#24 r11  Kill   Keep  r11  |    |    |    |    |    |V12a|V11a|    |    |
32.#25 rax  Fixd   Keep  rax  |    |    |    |    |    |V12a|V11a|    |    |
32.#26 I12  Def    Alloc rax  |I12a|    |    |    |    |V12a|V11a|    |    |
33.#27 I12  Use *  Keep  rax  |I12a|    |    |    |    |V12a|V11a|    |    |
34.#28 V5   Def    Alloc rbx  |    |    |    |V5 a|    |V12a|V11a|    |    |
39.#29 V11  Use *  Keep  rdi  |    |    |    |V5 a|    |V12a|V11a|    |    |
40.#30 V14  Def    Alloc rdx  |    |    |V14a|V5 a|    |V12a|    |    |    |
43.#31 V12  Use *  Keep  rsi  |    |    |V14a|V5 a|    |V12a|    |    |    |
44.#32 V15  Def    Alloc rsi  |    |    |V14a|V5 a|    |V15a|    |    |    |
53.#33 V5   Use    Keep  rbx  |    |    |V14a|V5 a|    |V15a|    |    |    |
61.#34 V5   Use    Keep  rbx  |    |    |V14a|V5 a|    |V15a|    |    |    |
62.#35 I13  Def    Alloc rdi  |    |    |V14a|V5 a|    |V15a|I13a|    |    |
63.#36 I13  Use *  Keep  rdi  |    |    |V14a|V5 a|    |V15a|I13a|    |    |
64.#37 V16  Def    Alloc rdi  |    |    |V14a|V5 a|    |V15a|V16a|    |    |
69.#38 rcx  Fixd   Keep  rcx  |    |    |V14a|V5 a|    |V15a|V16a|    |    |
69.#39 V16  Use    Copy  rcx  |    |V16a|V14a|V5 a|    |V15a|V16a|    |    |
69.#40 rdx  Fixd   Keep  rdx  |    |V16a|V14a|V5 a|    |V15a|V16a|    |    |
69.#41 V14  Use *  Keep  rdx  |    |V16a|V14a|V5 a|    |V15a|V16a|    |    |
70.#42 rax  Kill   Keep  rax  |    |V16a|    |V5 a|    |V15a|V16a|    |    |
70.#43 rcx  Kill   Keep  rcx  |    |    |    |V5 a|    |V15a|V16a|    |    |
70.#44 rdx  Kill   Keep  rdx  |    |    |    |V5 a|    |V15a|V16a|    |    |
70.#45 r8   Kill   Keep  r8   |    |    |    |V5 a|    |V15a|V16a|    |    |
70.#46 r9   Kill   Keep  r9   |    |    |    |V5 a|    |V15a|V16a|    |    |
70.#47 r10  Kill   Keep  r10  |    |    |    |V5 a|    |V15a|V16a|    |    |
70.#48 r11  Kill   Keep  r11  |    |    |    |V5 a|    |V15a|V16a|    |    |
70.#49 mm0  Kill   Keep  mm0  |    |    |    |V5 a|    |V15a|V16a|    |    |
70.#50 mm1  Kill   Keep  mm1  |    |    |    |V5 a|    |V15a|V16a|    |    |
70.#51 mm2  Kill   Keep  mm2  |    |    |    |V5 a|    |V15a|V16a|    |    |
70.#52 mm3  Kill   Keep  mm3  |    |    |    |V5 a|    |V15a|V16a|    |    |
70.#53 mm4  Kill   Keep  mm4  |    |    |    |V5 a|    |V15a|V16a|    |    |
70.#54 mm5  Kill   Keep  mm5  |    |    |    |V5 a|    |V15a|V16a|    |    |
------------------------------+----+----+----+----+----+----+----+----+----+
LocRP# Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
------------------------------+----+----+----+----+----+----+----+----+----+
77.#55 V16  Use *  Keep  rdi  |    |    |    |V5 a|    |V15a|V16a|    |    |
77.#56 V15  Use *  Keep  rsi  |    |    |    |V5 a|    |V15a|V16a|    |    |
81.#57 rax  Fixd   Keep  rax  |    |    |    |V5 a|    |    |    |    |    |
81.#58 V5   Use *  Copy  rax  |    |    |    |    |    |    |    |    |    |

------------
REFPOSITIONS AFTER ALLOCATION: 
------------
<RefPosition #0   @1   RefTypeBB  BB01 regmask=[] minReg=1>
<RefPosition #1   @8   RefTypeDef <Ivl:2 V10> STORE_LCL_VAR BB01 regmask=[rsi] minReg=1>
<RefPosition #2   @10  RefTypeDef <Ivl:8> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #3   @11  RefTypeUse <Ivl:8>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #4   @12  RefTypeDef <Ivl:9> IND BB01 regmask=[rdi] minReg=1>
<RefPosition #5   @13  RefTypeUse <Ivl:9>  BB01 regmask=[rdi] minReg=1 last>
<RefPosition #6   @14  RefTypeDef <Ivl:1 V09> STORE_LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #7   @19  RefTypeUse <Ivl:1 V09> LCL_VAR BB01 regmask=[rdi] minReg=1 last>
<RefPosition #8   @20  RefTypeDef <Ivl:3 V11> STORE_LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #9   @23  RefTypeUse <Ivl:2 V10> LCL_VAR BB01 regmask=[rsi] minReg=1 last>
<RefPosition #10  @24  RefTypeDef <Ivl:4 V12> STORE_LCL_VAR BB01 regmask=[rsi] minReg=1>
<RefPosition #11  @28  RefTypeDef <Ivl:10> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #12  @29  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #13  @29  RefTypeUse <Ivl:10>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #14  @30  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #15  @30  RefTypeDef <Ivl:11> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #16  @31  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #17  @31  RefTypeUse <Ivl:11>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #18  @32  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #19  @32  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #20  @32  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #21  @32  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #22  @32  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #23  @32  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #24  @32  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #25  @32  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #26  @32  RefTypeDef <Ivl:12> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #27  @33  RefTypeUse <Ivl:12>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #28  @34  RefTypeDef <Ivl:0 V05> STORE_LCL_VAR BB01 regmask=[rbx] minReg=1>
<RefPosition #29  @39  RefTypeUse <Ivl:3 V11> LCL_VAR BB01 regmask=[rdi] minReg=1 last>
<RefPosition #30  @40  RefTypeDef <Ivl:5 V14> STORE_LCL_VAR BB01 regmask=[rdx] minReg=1>
<RefPosition #31  @43  RefTypeUse <Ivl:4 V12> LCL_VAR BB01 regmask=[rsi] minReg=1 last>
<RefPosition #32  @44  RefTypeDef <Ivl:6 V15> STORE_LCL_VAR BB01 regmask=[rsi] minReg=1>
<RefPosition #33  @53  RefTypeUse <Ivl:0 V05> LCL_VAR BB01 regmask=[rbx] minReg=1>
<RefPosition #34  @61  RefTypeUse <Ivl:0 V05> LCL_VAR BB01 regmask=[rbx] minReg=1>
<RefPosition #35  @62  RefTypeDef <Ivl:13> ADD BB01 regmask=[rdi] minReg=1>
<RefPosition #36  @63  RefTypeUse <Ivl:13>  BB01 regmask=[rdi] minReg=1 last>
<RefPosition #37  @64  RefTypeDef <Ivl:7 V16> STORE_LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #38  @69  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #39  @69  RefTypeUse <Ivl:7 V16> LCL_VAR BB01 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #40  @69  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #41  @69  RefTypeUse <Ivl:5 V14> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #42  @70  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #43  @70  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #44  @70  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #45  @70  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #46  @70  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #47  @70  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #48  @70  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #49  @70  RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1 last>
<RefPosition #50  @70  RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1 last>
<RefPosition #51  @70  RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1 last>
<RefPosition #52  @70  RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1 last>
<RefPosition #53  @70  RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1 last>
<RefPosition #54  @70  RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1 last>
<RefPosition #55  @77  RefTypeUse <Ivl:7 V16> LCL_VAR BB01 regmask=[rdi] minReg=1 last>
<RefPosition #56  @77  RefTypeUse <Ivl:6 V15> LCL_VAR BB01 regmask=[rsi] minReg=1 last>
<RefPosition #57  @81  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #58  @81  RefTypeUse <Ivl:0 V05> LCL_VAR BB01 regmask=[rax] minReg=1 last copy fixed>

VAR REFPOSITIONS AFTER ALLOCATION
--- V00
--- V01
--- V02
--- V03
--- V04
--- V05  (Interval 0)
<RefPosition #28  @34  RefTypeDef <Ivl:0 V05> STORE_LCL_VAR BB01 regmask=[rbx] minReg=1>
<RefPosition #33  @53  RefTypeUse <Ivl:0 V05> LCL_VAR BB01 regmask=[rbx] minReg=1>
<RefPosition #34  @61  RefTypeUse <Ivl:0 V05> LCL_VAR BB01 regmask=[rbx] minReg=1>
<RefPosition #58  @81  RefTypeUse <Ivl:0 V05> LCL_VAR BB01 regmask=[rax] minReg=1 last copy fixed>
--- V06
--- V07
--- V08
--- V09  (Interval 1)
<RefPosition #6   @14  RefTypeDef <Ivl:1 V09> STORE_LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #7   @19  RefTypeUse <Ivl:1 V09> LCL_VAR BB01 regmask=[rdi] minReg=1 last>
--- V10  (Interval 2)
<RefPosition #1   @8   RefTypeDef <Ivl:2 V10> STORE_LCL_VAR BB01 regmask=[rsi] minReg=1>
<RefPosition #9   @23  RefTypeUse <Ivl:2 V10> LCL_VAR BB01 regmask=[rsi] minReg=1 last>
--- V11  (Interval 3)
<RefPosition #8   @20  RefTypeDef <Ivl:3 V11> STORE_LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #29  @39  RefTypeUse <Ivl:3 V11> LCL_VAR BB01 regmask=[rdi] minReg=1 last>
--- V12  (Interval 4)
<RefPosition #10  @24  RefTypeDef <Ivl:4 V12> STORE_LCL_VAR BB01 regmask=[rsi] minReg=1>
<RefPosition #31  @43  RefTypeUse <Ivl:4 V12> LCL_VAR BB01 regmask=[rsi] minReg=1 last>
--- V13
--- V14  (Interval 5)
<RefPosition #30  @40  RefTypeDef <Ivl:5 V14> STORE_LCL_VAR BB01 regmask=[rdx] minReg=1>
<RefPosition #41  @69  RefTypeUse <Ivl:5 V14> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
--- V15  (Interval 6)
<RefPosition #32  @44  RefTypeDef <Ivl:6 V15> STORE_LCL_VAR BB01 regmask=[rsi] minReg=1>
<RefPosition #56  @77  RefTypeUse <Ivl:6 V15> LCL_VAR BB01 regmask=[rsi] minReg=1 last>
--- V16  (Interval 7)
<RefPosition #37  @64  RefTypeDef <Ivl:7 V16> STORE_LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #39  @69  RefTypeUse <Ivl:7 V16> LCL_VAR BB01 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #55  @77  RefTypeUse <Ivl:7 V16> LCL_VAR BB01 regmask=[rdi] minReg=1 last>

Active intervals at end of allocation:

-----------------------
RESOLVING BB BOUNDARIES
-----------------------
Resolution Candidates: {}
Has NoCritical Edges

Prior to Resolution

BB01
use def in out
{}
{V05 V09 V10 V11 V12 V14 V15 V16}
{}
{}
Var=Reg beg of BB01: none
Var=Reg end of BB01: none


RESOLVING EDGES
Trees after linear scan register allocator (LSRA)

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)        (return)                     i label target hascall newobj LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..011) (return), preds={} succs={}
N003 (???,???) [000261] ------------                 IL_OFFSET void   IL offset: 0x0 REG NA
N005 (  1,  1) [000020] -c----------        t20 =    CNS_INT   int    1 REG NA $41
                                                  /--*  t20    int    
N007 (  1,  3) [000022] DA----------              *  STORE_LCL_VAR bool   V10 tmp9         d:1 rsi REG rsi
N009 (  2, 10) [000220] H-----------       t220 =    CNS_INT(h) long   0xD1FFAB1E "string" REG rcx $140
                                                  /--*  t220   long   
N011 (  4, 12) [000221] #---G-------       t221 = *  IND       ref    REG rdi $180
                                                  /--*  t221   ref    
N013 (  4, 12) [000027] DA--G-------              *  STORE_LCL_VAR ref    V09 tmp8         d:1 rdi REG rdi
N015 (???,???) [000262] ------------                 IL_OFFSET void   IL offset: 0xb REG NA
N017 (  1,  1) [000223] -------N----       t223 =    LCL_VAR   ref    V09 tmp8         u:1 rdi (last use) REG rdi $180
                                                  /--*  t223   ref    
N019 (  5,  4) [000224] DA----------              *  STORE_LCL_VAR ref    V11 tmp10        d:1 rdi REG rdi
N021 (  2,  2) [000226] -------N----       t226 =    LCL_VAR   bool   V10 tmp9         u:1 rsi (last use) REG rsi $41
                                                  /--*  t226   bool   
N023 (  7,  6) [000227] DA----------              *  STORE_LCL_VAR bool   V12 tmp11        d:1 rsi REG rsi
N025 (???,???) [000263] ------------                 IL_OFFSET void   IL offset: 0xb REG NA
N027 (  2, 10) [000160] H-----------       t160 =    CNS_INT(h) long   0xd1ffab1e token REG rcx $141
                                                  /--*  t160   long   
N029 (???,???) [000270] ------------       t270 = *  PUTARG_REG long   REG rcx
                                                  /--*  t270   long   arg0 in rcx
N031 ( 16, 16) [000161] --C---------       t161 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $181
                                                  /--*  t161   ref    
N033 ( 16, 16) [000163] DA----------              *  STORE_LCL_VAR ref    V05 tmp4         d:1 rbx REG rbx
N035 (???,???) [000264] ------------                 IL_OFFSET void   IL offset: 0xb REG NA
N037 (  3,  2) [000231] -------N----       t231 =    LCL_VAR   ref    V11 tmp10        u:1 rdi (last use) REG rdi $180
                                                  /--*  t231   ref    
N039 (  7,  5) [000232] DA----------              *  STORE_LCL_VAR ref    V14 tmp13        d:1 rdx REG rdx
N041 (  4,  3) [000234] -------N----       t234 =    LCL_VAR   bool   V12 tmp11        u:1 rsi (last use) REG rsi $41
                                                  /--*  t234   bool   
N043 (  9,  7) [000235] DA----------              *  STORE_LCL_VAR bool   V15 tmp14        d:1 rsi REG rsi
N045 (???,???) [000265] ------------                 IL_OFFSET void   IL offset: 0xb REG NA
N047 (  1,  1) [000205] ------------       t205 =    LCL_VAR   ref    V05 tmp4         u:1 rbx REG rbx $181
                                                  /--*  t205   ref    
N049 (  2,  2) [000241] -c----------       t241 = *  LEA(b+52) byref  REG NA
N051 (  1,  4) [000208] -c----------       t208 =    CNS_INT   int    0x1000000 REG NA $43
                                                  /--*  t241   byref  
                                                  +--*  t208   int    
N053 (???,???) [000266] -A--GO------              *  STOREIND  int    REG NA
N055 (???,???) [000267] ------------                 IL_OFFSET void   IL offset: 0xb REG NA
N057 (  1,  1) [000245] ------------       t245 =    LCL_VAR   ref    V05 tmp4         u:1 rbx REG rbx $181
N059 (  1,  1) [000246] -c----------       t246 =    CNS_INT   long   56 field offset Fseq[m_result] REG NA $241
                                                  /--*  t245   ref    
                                                  +--*  t246   long   
N061 (  3,  3) [000244] ------------       t244 = *  ADD       byref  REG rdi $281
                                                  /--*  t244   byref  
N063 (  3,  3) [000248] DA----------              *  STORE_LCL_VAR byref  V16 tmp15        d:1 rdi REG rdi
N065 (  1,  1) [000249] ------------       t249 =    LCL_VAR   byref  V16 tmp15        u:1 rdi Zero Fseq[Item2] REG rdi $281
N067 (  3,  2) [000251] ------------       t251 =    LCL_VAR   ref    V14 tmp13        u:1 rdx (last use) REG rdx $180
                                                  /--*  t249   byref  
                                                  +--*  t251   ref    
N069 (???,???) [000268] -A-X--------              *  STOREIND  ref    REG NA
N071 (  1,  1) [000254] ------------       t254 =    LCL_VAR   byref  V16 tmp15        u:1 rdi (last use) REG rdi $281
                                                  /--*  t254   byref  
N073 (  2,  2) [000256] -c----------       t256 = *  LEA(b+8)  byref  REG NA
N075 (  4,  3) [000258] ------------       t258 =    LCL_VAR   bool   V15 tmp14        u:1 rsi (last use) REG rsi $41
                                                  /--*  t256   byref  
                                                  +--*  t258   bool   
N077 (???,???) [000269] -A-X--------              *  STOREIND  bool   REG NA
N079 (  1,  1) [000171] ------------       t171 =    LCL_VAR   ref    V05 tmp4         u:1 rbx (last use) REG rbx $181
                                                  /--*  t171   ref    
N081 (  2,  2) [000016] ------------              *  RETURN    ref    REG NA $1c9

-------------------------------------------------------------------------------------------------------------------

Final allocation
------------------------------+----+----+----+----+----+----+----+----+----+
LocRP# Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
------------------------------+----+----+----+----+----+----+----+----+----+
 1.#0  BB1 PredBB0            |    |    |    |    |    |    |    |    |    |
 8.#1  V10  Def    Alloc rsi  |    |    |    |    |    |V10a|    |    |    |
10.#2  C8   Def    Alloc rcx  |    |C8 a|    |    |    |V10a|    |    |    |
11.#3  C8   Use *  Keep  rcx  |    |C8 i|    |    |    |V10a|    |    |    |
12.#4  I9   Def    Alloc rdi  |    |    |    |    |    |V10a|I9 a|    |    |
13.#5  I9   Use *  Keep  rdi  |    |    |    |    |    |V10a|I9 i|    |    |
14.#6  V9   Def    Alloc rdi  |    |    |    |    |    |V10a|V9 a|    |    |
19.#7  V9   Use *  Keep  rdi  |    |    |    |    |    |V10a|V9 i|    |    |
20.#8  V11  Def    Alloc rdi  |    |    |    |    |    |V10a|V11a|    |    |
23.#9  V10  Use *  Keep  rsi  |    |    |    |    |    |V10i|V11a|    |    |
24.#10 V12  Def    Alloc rsi  |    |    |    |    |    |V12a|V11a|    |    |
28.#11 C10  Def    Alloc rcx  |    |C10a|    |    |    |V12a|V11a|    |    |
29.#12 rcx  Fixd   Keep  rcx  |    |C10a|    |    |    |V12a|V11a|    |    |
29.#13 C10  Use *  Keep  rcx  |    |C10i|    |    |    |V12a|V11a|    |    |
30.#14 rcx  Fixd   Keep  rcx  |    |    |    |    |    |V12a|V11a|    |    |
30.#15 I11  Def    Alloc rcx  |    |I11a|    |    |    |V12a|V11a|    |    |
31.#16 rcx  Fixd   Keep  rcx  |    |I11a|    |    |    |V12a|V11a|    |    |
31.#17 I11  Use *  Keep  rcx  |    |I11i|    |    |    |V12a|V11a|    |    |
32.#18 rax  Kill   Keep  rax  |    |    |    |    |    |V12a|V11a|    |    |
32.#19 rcx  Kill   Keep  rcx  |    |    |    |    |    |V12a|V11a|    |    |
32.#20 rdx  Kill   Keep  rdx  |    |    |    |    |    |V12a|V11a|    |    |
32.#21 r8   Kill   Keep  r8   |    |    |    |    |    |V12a|V11a|    |    |
32.#22 r9   Kill   Keep  r9   |    |    |    |    |    |V12a|V11a|    |    |
32.#23 r10  Kill   Keep  r10  |    |    |    |    |    |V12a|V11a|    |    |
32.#24 r11  Kill   Keep  r11  |    |    |    |    |    |V12a|V11a|    |    |
32.#25 rax  Fixd   Keep  rax  |    |    |    |    |    |V12a|V11a|    |    |
32.#26 I12  Def    Alloc rax  |I12a|    |    |    |    |V12a|V11a|    |    |
33.#27 I12  Use *  Keep  rax  |I12i|    |    |    |    |V12a|V11a|    |    |
34.#28 V5   Def    Alloc rbx  |    |    |    |V5 a|    |V12a|V11a|    |    |
39.#29 V11  Use *  Keep  rdi  |    |    |    |V5 a|    |V12a|V11i|    |    |
40.#30 V14  Def    Alloc rdx  |    |    |V14a|V5 a|    |V12a|    |    |    |
43.#31 V12  Use *  Keep  rsi  |    |    |V14a|V5 a|    |V12i|    |    |    |
44.#32 V15  Def    Alloc rsi  |    |    |V14a|V5 a|    |V15a|    |    |    |
53.#33 V5   Use    Keep  rbx  |    |    |V14a|V5 a|    |V15a|    |    |    |
61.#34 V5   Use    Keep  rbx  |    |    |V14a|V5 a|    |V15a|    |    |    |
62.#35 I13  Def    Alloc rdi  |    |    |V14a|V5 a|    |V15a|I13a|    |    |
63.#36 I13  Use *  Keep  rdi  |    |    |V14a|V5 a|    |V15a|I13i|    |    |
64.#37 V16  Def    Alloc rdi  |    |    |V14a|V5 a|    |V15a|V16a|    |    |
69.#38 rcx  Fixd   Keep  rcx  |    |    |V14a|V5 a|    |V15a|V16a|    |    |
69.#39 V16  Use    Copy  rcx  |    |V16a|V14a|V5 a|    |V15a|V16a|    |    |
69.#40 rdx  Fixd   Keep  rdx  |    |    |V14a|V5 a|    |V15a|V16a|    |    |
69.#41 V14  Use *  Keep  rdx  |    |    |V14i|V5 a|    |V15a|V16a|    |    |
70.#42 rax  Kill   Keep  rax  |    |    |    |V5 a|    |V15a|V16a|    |    |
70.#43 rcx  Kill   Keep  rcx  |    |    |    |V5 a|    |V15a|V16a|    |    |
70.#44 rdx  Kill   Keep  rdx  |    |    |    |V5 a|    |V15a|V16a|    |    |
70.#45 r8   Kill   Keep  r8   |    |    |    |V5 a|    |V15a|V16a|    |    |
70.#46 r9   Kill   Keep  r9   |    |    |    |V5 a|    |V15a|V16a|    |    |
70.#47 r10  Kill   Keep  r10  |    |    |    |V5 a|    |V15a|V16a|    |    |
70.#48 r11  Kill   Keep  r11  |    |    |    |V5 a|    |V15a|V16a|    |    |
70.#49 mm0  Kill   Keep  mm0  |    |    |    |V5 a|    |V15a|V16a|    |    |
70.#50 mm1  Kill   Keep  mm1  |    |    |    |V5 a|    |V15a|V16a|    |    |
70.#51 mm2  Kill   Keep  mm2  |    |    |    |V5 a|    |V15a|V16a|    |    |
70.#52 mm3  Kill   Keep  mm3  |    |    |    |V5 a|    |V15a|V16a|    |    |
70.#53 mm4  Kill   Keep  mm4  |    |    |    |V5 a|    |V15a|V16a|    |    |
70.#54 mm5  Kill   Keep  mm5  |    |    |    |V5 a|    |V15a|V16a|    |    |
77.#55 V16  Use *  Keep  rdi  |    |    |    |V5 a|    |V15a|V16i|    |    |
77.#56 V15  Use *  Keep  rsi  |    |    |    |V5 a|    |V15i|    |    |    |
81.#57 rax  Fixd   Keep  rax  |    |    |    |V5 a|    |    |    |    |    |
------------------------------+----+----+----+----+----+----+----+----+----+
LocRP# Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
------------------------------+----+----+----+----+----+----+----+----+----+
81.#58 V5   Use *  Copy  rax  |V5 i|    |    |V5 i|    |    |    |    |    |

Recording the maximum number of concurrent spills:

----------
LSRA Stats
----------
Total Tracked Vars:  8
Total Reg Cand Vars: 8
Total number of Intervals: 13
Total number of RefPositions: 58
Total Spill Count: 0    Weighted: 0.000000
Total CopyReg Count: 0   Weighted: 0.000000
Total ResolutionMov Count: 0    Weighted: 0.000000
Total number of split edges: 0
Total Number of spill temps created: 0

TUPLE STYLE DUMP WITH REGISTER ASSIGNMENTS
Incoming Parameters: 
BB01 [000..011) (return), preds={} succs={}
=====
  N003.                    IL_OFFSET IL offset: 0x0
  N005.                    CNS_INT   1
* N007.                    V10(rsi)
  N009. rcx             =  CNS_INT(h) 0xD1FFAB1E "string"
  N011. rdi             =  IND      ; rcx
* N013.                    V09(rdi); rdi
  N015.                    IL_OFFSET IL offset: 0xb
  N017.                    V09(rdi*)
* N019.                    V11(rdi); rdi*
  N021.                    V10(rsi*)
* N023.                    V12(rsi); rsi*
  N025.                    IL_OFFSET IL offset: 0xb
  N027. rcx             =  CNS_INT(h) 0xd1ffab1e token
  N029. rcx             =  PUTARG_REG; rcx
  N031. rax             =  CALL help; rcx
* N033.                    V05(rbx); rax
  N035.                    IL_OFFSET IL offset: 0xb
  N037.                    V11(rdi*)
* N039.                    V14(rdx); rdi*
  N041.                    V12(rsi*)
* N043.                    V15(rsi); rsi*
  N045.                    IL_OFFSET IL offset: 0xb
  N047.                    V05(rbx)
  N049. STK             =  LEA(b+52); rbx
  N051.                    CNS_INT   0x1000000
  N053.                    STOREIND ; STK
  N055.                    IL_OFFSET IL offset: 0xb
  N057.                    V05(rbx)
  N059.                    CNS_INT   56 field offset Fseq[m_result]
  N061. rdi             =  ADD      ; rbx
* N063.                    V16(rdi); rdi
  N065.                    V16(rdi)
  N067.                    V14(rdx*)
  N069.                    STOREIND ; rdi,rdx*
  N071.                    V16(rdi*)
  N073. STK             =  LEA(b+8) ; rdi*
  N075.                    V15(rsi*)
  N077.                    STOREIND ; STK,rsi*
  N079.                    V05(rbx*)
  N081.                    RETURN   ; rbx*
Var=Reg end of BB01: none




*************** Finishing PHASE Linear scan register alloc
*************** In genGenerateCode()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..011)        (return)                     i label target hascall newobj LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Generate code
*************** In fgDebugCheckBBlist
Finalizing stack frame
Recording Var Locations at start of BB01
  <none>

Modified regs: [rax rcx rdx rbx rsi rdi r8-r11 mm0-mm5]
Callee-saved registers pushed: 3 [rbx rsi rdi]
*************** In lvaAssignFrameOffsets(FINAL_FRAME_LAYOUT)
Assign V01 OutArgs, size=32, stkOffs=-0x40
--- delta bump 8 for RA
--- delta bump 56 for RSP frame
--- virtual stack offset to actual stack offset delta is 64
-- V00 was 0, now 64
-- V01 was -64, now 0
; Final local variable assignments
;
;* V00 this         [V00    ] (  0,  0   )     ref  ->  zero-ref    this class-hnd
;  V01 OutArgs      [V01    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V02 tmp1         [V02    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V03 tmp2         [V03    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inline return value spill temp"
;* V04 tmp3         [V04    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V05 tmp4         [V05,T00] (  4,  8   )     ref  ->  rbx         class-hnd exact "NewObj constructor temp"
;* V06 tmp5         [V06    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;* V07 tmp6         [V07    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V08 tmp7         [V08    ] (  0,  0   )     int  ->  zero-ref    "Inline stloc first use temp"
;  V09 tmp8         [V09,T02] (  2,  2   )     ref  ->  rdi         V02.Item2(offs=0x00) P-INDEP "field V02.Item2 (fldOffset=0x0)"
;  V10 tmp9         [V10,T05] (  2,  2   )    bool  ->  rsi         V02.Item1(offs=0x08) P-INDEP "field V02.Item1 (fldOffset=0x8)"
;  V11 tmp10        [V11,T03] (  2,  2   )     ref  ->  rdi         V04.Item2(offs=0x00) P-INDEP "field V04.Item2 (fldOffset=0x0)"
;  V12 tmp11        [V12,T06] (  2,  2   )    bool  ->  rsi         V04.Item1(offs=0x08) P-INDEP "field V04.Item1 (fldOffset=0x8)"
;* V13 tmp12        [V13    ] (  0,  0   )     ref  ->  zero-ref    V06._source(offs=0x00) P-INDEP "field V06._source (fldOffset=0x0)"
;  V14 tmp13        [V14,T04] (  2,  2   )     ref  ->  rdx         V07.Item2(offs=0x00) P-INDEP "field V07.Item2 (fldOffset=0x0)"
;  V15 tmp14        [V15,T07] (  2,  2   )    bool  ->  rsi         V07.Item1(offs=0x08) P-INDEP "field V07.Item1 (fldOffset=0x8)"
;  V16 tmp15        [V16,T01] (  3,  6   )   byref  ->  rdi         "BlockOp address local"
;
; Lcl frame size = 32
Setting stack level from -572662307 to 0

=============== Generating BB01 [000..011) (return), preds={} succs={} flags=0x00000002.20430020: i label target hascall newobj LIR 
BB01 IN (0)={} + ByrefExposed + GcHeap
     OUT(0)={}

Recording Var Locations at start of BB01
  <none>

Liveness not changing: 0000000000000000 {}
							Live regs: (unchanged) 00000000 {}
							GC regs: (unchanged) 00000000 {}
							Byref regs: (unchanged) 00000000 {}

      L_M7122_BB01:
Label: IG02, GCvars=0000000000000000 {}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}

Scope info: begin block BB01, IL range [000..011)
Scope info: open scopes =
   <none>
Added IP mapping: 0x0000 STACK_EMPTY (G_M7122_IG02,ins#0,ofs#0) label
Generating: N003 (???,???) [000261] ------------                 IL_OFFSET void   IL offset: 0x0 REG NA
Generating: N005 (  1,  1) [000020] -c----------        t20 =    CNS_INT   int    1 REG NA $41
                                                              /--*  t20    int    
Generating: N007 (  1,  3) [000022] DA----------              *  STORE_LCL_VAR bool   V10 tmp9         d:1 rsi REG rsi
IN0001:        mov      esi, 1
							V10 in reg rsi is becoming live  [000022]
							Live regs: 00000000 {} => 00000040 {rsi}
							Live vars: {} => {V10}
Generating: N009 (  2, 10) [000220] H-----------       t220 =    CNS_INT(h) long   0xD1FFAB1E "string" REG rcx $140
IN0002:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t220   long   
Generating: N011 (  4, 12) [000221] #---G-------       t221 = *  IND       ref    REG rdi $180
IN0003:        mov      rdi, gword ptr [rcx]
							GC regs: 00000000 {} => 00000080 {rdi}
                                                              /--*  t221   ref    
Generating: N013 (  4, 12) [000027] DA--G-------              *  STORE_LCL_VAR ref    V09 tmp8         d:1 rdi REG rdi
							GC regs: 00000080 {rdi} => 00000000 {}
							V09 in reg rdi is becoming live  [000027]
							Live regs: 00000040 {rsi} => 000000C0 {rsi rdi}
							Live vars: {V10} => {V09 V10}
							GC regs: 00000000 {} => 00000080 {rdi}
Added IP mapping: 0x000B (G_M7122_IG02,ins#3,ofs#18)
Generating: N015 (???,???) [000262] ------------                 IL_OFFSET void   IL offset: 0xb REG NA
Generating: N017 (  1,  1) [000223] -------N----       t223 =    LCL_VAR   ref    V09 tmp8         u:1 rdi (last use) REG rdi $180
                                                              /--*  t223   ref    
Generating: N019 (  5,  4) [000224] DA----------              *  STORE_LCL_VAR ref    V11 tmp10        d:1 rdi REG rdi
							V09 in reg rdi is becoming dead  [000223]
							Live regs: 000000C0 {rsi rdi} => 00000040 {rsi}
							Live vars: {V09 V10} => {V10}
							GC regs: 00000080 {rdi} => 00000000 {}
							V11 in reg rdi is becoming live  [000224]
							Live regs: 00000040 {rsi} => 000000C0 {rsi rdi}
							Live vars: {V10} => {V10 V11}
							GC regs: 00000000 {} => 00000080 {rdi}
Generating: N021 (  2,  2) [000226] -------N----       t226 =    LCL_VAR   bool   V10 tmp9         u:1 rsi (last use) REG rsi $41
                                                              /--*  t226   bool   
Generating: N023 (  7,  6) [000227] DA----------              *  STORE_LCL_VAR bool   V12 tmp11        d:1 rsi REG rsi
							V10 in reg rsi is becoming dead  [000226]
							Live regs: 000000C0 {rsi rdi} => 00000080 {rdi}
							Live vars: {V10 V11} => {V11}
							V12 in reg rsi is becoming live  [000227]
							Live regs: 00000080 {rdi} => 000000C0 {rsi rdi}
							Live vars: {V11} => {V11 V12}
genIPmappingAdd: ignoring duplicate IL offset 0x8000000b
Generating: N025 (???,???) [000263] ------------                 IL_OFFSET void   IL offset: 0xb REG NA
Generating: N027 (  2, 10) [000160] H-----------       t160 =    CNS_INT(h) long   0xd1ffab1e token REG rcx $141
IN0004:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t160   long   
Generating: N029 (???,???) [000270] ------------       t270 = *  PUTARG_REG long   REG rcx
                                                              /--*  t270   long   arg0 in rcx
Generating: N031 ( 16, 16) [000161] --C---------       t161 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $181
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000080 {rdi}, byrefRegs=00000000 {}
IN0005:        call     CORINFO_HELP_NEWSFAST
							GC regs: 00000080 {rdi} => 00000081 {rax rdi}
                                                              /--*  t161   ref    
Generating: N033 ( 16, 16) [000163] DA----------              *  STORE_LCL_VAR ref    V05 tmp4         d:1 rbx REG rbx
							GC regs: 00000081 {rax rdi} => 00000080 {rdi}
IN0006:        mov      rbx, rax
							V05 in reg rbx is becoming live  [000163]
							Live regs: 000000C0 {rsi rdi} => 000000C8 {rbx rsi rdi}
							Live vars: {V11 V12} => {V05 V11 V12}
							GC regs: 00000080 {rdi} => 00000088 {rbx rdi}
genIPmappingAdd: ignoring duplicate IL offset 0x8000000b
Generating: N035 (???,???) [000264] ------------                 IL_OFFSET void   IL offset: 0xb REG NA
Generating: N037 (  3,  2) [000231] -------N----       t231 =    LCL_VAR   ref    V11 tmp10        u:1 rdi (last use) REG rdi $180
                                                              /--*  t231   ref    
Generating: N039 (  7,  5) [000232] DA----------              *  STORE_LCL_VAR ref    V14 tmp13        d:1 rdx REG rdx
							V11 in reg rdi is becoming dead  [000231]
							Live regs: 000000C8 {rbx rsi rdi} => 00000048 {rbx rsi}
							Live vars: {V05 V11 V12} => {V05 V12}
							GC regs: 00000088 {rbx rdi} => 00000008 {rbx}
IN0007:        mov      rdx, rdi
							V14 in reg rdx is becoming live  [000232]
							Live regs: 00000048 {rbx rsi} => 0000004C {rdx rbx rsi}
							Live vars: {V05 V12} => {V05 V12 V14}
							GC regs: 00000008 {rbx} => 0000000C {rdx rbx}
Generating: N041 (  4,  3) [000234] -------N----       t234 =    LCL_VAR   bool   V12 tmp11        u:1 rsi (last use) REG rsi $41
                                                              /--*  t234   bool   
Generating: N043 (  9,  7) [000235] DA----------              *  STORE_LCL_VAR bool   V15 tmp14        d:1 rsi REG rsi
							V12 in reg rsi is becoming dead  [000234]
							Live regs: 0000004C {rdx rbx rsi} => 0000000C {rdx rbx}
							Live vars: {V05 V12 V14} => {V05 V14}
							V15 in reg rsi is becoming live  [000235]
							Live regs: 0000000C {rdx rbx} => 0000004C {rdx rbx rsi}
							Live vars: {V05 V14} => {V05 V14 V15}
genIPmappingAdd: ignoring duplicate IL offset 0x8000000b
Generating: N045 (???,???) [000265] ------------                 IL_OFFSET void   IL offset: 0xb REG NA
Generating: N047 (  1,  1) [000205] ------------       t205 =    LCL_VAR   ref    V05 tmp4         u:1 rbx REG rbx $181
                                                              /--*  t205   ref    
Generating: N049 (  2,  2) [000241] -c----------       t241 = *  LEA(b+52) byref  REG NA
Generating: N051 (  1,  4) [000208] -c----------       t208 =    CNS_INT   int    0x1000000 REG NA $43
                                                              /--*  t241   byref  
                                                              +--*  t208   int    
Generating: N053 (???,???) [000266] -A--GO------              *  STOREIND  int    REG NA
IN0008:        mov      dword ptr [rbx+52], 0xD1FFAB1E
genIPmappingAdd: ignoring duplicate IL offset 0x8000000b
Generating: N055 (???,???) [000267] ------------                 IL_OFFSET void   IL offset: 0xb REG NA
Generating: N057 (  1,  1) [000245] ------------       t245 =    LCL_VAR   ref    V05 tmp4         u:1 rbx REG rbx $181
Generating: N059 (  1,  1) [000246] -c----------       t246 =    CNS_INT   long   56 field offset Fseq[m_result] REG NA $241
                                                              /--*  t245   ref    
                                                              +--*  t246   long   
Generating: N061 (  3,  3) [000244] ------------       t244 = *  ADD       byref  REG rdi $281
IN0009:        lea      rdi, bword ptr [rbx+56]
							Byref regs: 00000000 {} => 00000080 {rdi}
                                                              /--*  t244   byref  
Generating: N063 (  3,  3) [000248] DA----------              *  STORE_LCL_VAR byref  V16 tmp15        d:1 rdi REG rdi
							Byref regs: 00000080 {rdi} => 00000000 {}
							V16 in reg rdi is becoming live  [000248]
							Live regs: 0000004C {rdx rbx rsi} => 000000CC {rdx rbx rsi rdi}
							Live vars: {V05 V14 V15} => {V05 V14 V15 V16}
							Byref regs: 00000000 {} => 00000080 {rdi}
Generating: N065 (  1,  1) [000249] ------------       t249 =    LCL_VAR   byref  V16 tmp15        u:1 rdi Zero Fseq[Item2] REG rdi $281
Generating: N067 (  3,  2) [000251] ------------       t251 =    LCL_VAR   ref    V14 tmp13        u:1 rdx (last use) REG rdx $180
                                                              /--*  t249   byref  
                                                              +--*  t251   ref    
Generating: N069 (???,???) [000268] -A-X--------              *  STOREIND  ref    REG NA
							V14 in reg rdx is becoming dead  [000251]
							Live regs: 000000CC {rdx rbx rsi rdi} => 000000C8 {rbx rsi rdi}
							Live vars: {V05 V14 V15 V16} => {V05 V15 V16}
							GC regs: 0000000C {rdx rbx} => 00000008 {rbx}
IN000a:        mov      rcx, rdi
NoGC Call: savedSet=0000F0E8 {rbx rbp rsi rdi r12 r13 r14 r15}
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000008 {rbx}, byrefRegs=00000080 {rdi}
IN000b:        call     CORINFO_HELP_CHECKED_ASSIGN_REF
Generating: N071 (  1,  1) [000254] ------------       t254 =    LCL_VAR   byref  V16 tmp15        u:1 rdi (last use) REG rdi $281
                                                              /--*  t254   byref  
Generating: N073 (  2,  2) [000256] -c----------       t256 = *  LEA(b+8)  byref  REG NA
Generating: N075 (  4,  3) [000258] ------------       t258 =    LCL_VAR   bool   V15 tmp14        u:1 rsi (last use) REG rsi $41
                                                              /--*  t256   byref  
                                                              +--*  t258   bool   
Generating: N077 (???,???) [000269] -A-X--------              *  STOREIND  bool   REG NA
							V16 in reg rdi is becoming dead  [000254]
							Live regs: 000000C8 {rbx rsi rdi} => 00000048 {rbx rsi}
							Live vars: {V05 V15 V16} => {V05 V15}
							Byref regs: 00000080 {rdi} => 00000000 {}
							V15 in reg rsi is becoming dead  [000258]
							Live regs: 00000048 {rbx rsi} => 00000008 {rbx}
							Live vars: {V05 V15} => {V05}
IN000c:        mov      byte  ptr [rdi+8], sil
Generating: N079 (  1,  1) [000171] ------------       t171 =    LCL_VAR   ref    V05 tmp4         u:1 rbx (last use) REG rbx $181
                                                              /--*  t171   ref    
Generating: N081 (  2,  2) [000016] ------------              *  RETURN    ref    REG NA $1c9
							V05 in reg rbx is becoming dead  [000171]
							Live regs: 00000008 {rbx} => 00000000 {}
							Live vars: {V05} => {}
							GC regs: 00000008 {rbx} => 00000000 {}
IN000d:        mov      rax, rbx

Scope info: end block BB01, IL range [000..011)
Scope info: ending scope, LVnum=0 [000..011)
siEndScope: Failed to end scope for V00
Scope info: open scopes =
   <none>
Added IP mapping: EPILOG STACK_EMPTY (G_M7122_IG02,ins#13,ofs#65) label
							GC regs: 00000000 {} => 00000001 {rax}
Extending return value GC liveness to epilog
Reserving epilog IG for block BB01

      G_M7122_IG02:        ; offs=000000H, funclet=00, bbWeight=1   
*************** After placeholder IG creation
G_M7122_IG01:        ; func=00, offs=000000H, size=0000H, gcrefRegs=00000000 {} <-- Prolog IG
G_M7122_IG02:        ; offs=000000H, size=0041H, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref
G_M7122_IG03:        ; epilog placeholder, next placeholder=<END>, BB01 [0000], epilog, extend <-- First placeholder <-- Last placeholder
                     ;   PrevGCVars=0000000000000000 {}, PrevGCrefRegs=00000000 {}, PrevByrefRegs=00000000 {}
                     ;   InitGCVars=0000000000000000 {}, InitGCrefRegs=00000000 {}, InitByrefRegs=00000000 {}
Liveness not changing: 0000000000000000 {}

# compCycleEstimate =     77, compSizeEstimate =    81 ThrowawayTesting.Program:Get():System.Threading.Tasks.Task`1[[System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]:this
; Final local variable assignments
;
;* V00 this         [V00    ] (  0,  0   )     ref  ->  zero-ref    this class-hnd
;  V01 OutArgs      [V01    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V02 tmp1         [V02    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V03 tmp2         [V03    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inline return value spill temp"
;* V04 tmp3         [V04    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V05 tmp4         [V05,T00] (  4,  8   )     ref  ->  rbx         class-hnd exact "NewObj constructor temp"
;* V06 tmp5         [V06    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;* V07 tmp6         [V07    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V08 tmp7         [V08    ] (  0,  0   )     int  ->  zero-ref    "Inline stloc first use temp"
;  V09 tmp8         [V09,T02] (  2,  2   )     ref  ->  rdi         V02.Item2(offs=0x00) P-INDEP "field V02.Item2 (fldOffset=0x0)"
;  V10 tmp9         [V10,T05] (  2,  2   )    bool  ->  rsi         V02.Item1(offs=0x08) P-INDEP "field V02.Item1 (fldOffset=0x8)"
;  V11 tmp10        [V11,T03] (  2,  2   )     ref  ->  rdi         V04.Item2(offs=0x00) P-INDEP "field V04.Item2 (fldOffset=0x0)"
;  V12 tmp11        [V12,T06] (  2,  2   )    bool  ->  rsi         V04.Item1(offs=0x08) P-INDEP "field V04.Item1 (fldOffset=0x8)"
;* V13 tmp12        [V13    ] (  0,  0   )     ref  ->  zero-ref    V06._source(offs=0x00) P-INDEP "field V06._source (fldOffset=0x0)"
;  V14 tmp13        [V14,T04] (  2,  2   )     ref  ->  rdx         V07.Item2(offs=0x00) P-INDEP "field V07.Item2 (fldOffset=0x0)"
;  V15 tmp14        [V15,T07] (  2,  2   )    bool  ->  rsi         V07.Item1(offs=0x08) P-INDEP "field V07.Item1 (fldOffset=0x8)"
;  V16 tmp15        [V16,T01] (  3,  6   )   byref  ->  rdi         "BlockOp address local"
;
; Lcl frame size = 32
*************** Before prolog / epilog generation
G_M7122_IG01:        ; func=00, offs=000000H, size=0000H, gcrefRegs=00000000 {} <-- Prolog IG
G_M7122_IG02:        ; offs=000000H, size=0041H, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref
G_M7122_IG03:        ; epilog placeholder, next placeholder=<END>, BB01 [0000], epilog, extend <-- First placeholder <-- Last placeholder
                     ;   PrevGCVars=0000000000000000 {}, PrevGCrefRegs=00000000 {}, PrevByrefRegs=00000000 {}
                     ;   InitGCVars=0000000000000000 {}, InitGCrefRegs=00000000 {}, InitByrefRegs=00000000 {}
Recording Var Locations at start of BB01
  <none>

*************** In genFnProlog()
Added IP mapping to front: PROLOG STACK_EMPTY (G_M7122_IG01,ins#0,ofs#0) label

__prolog:
IN000e:        push     rdi
IN000f:        push     rsi
IN0010:        push     rbx
IN0011:        sub      rsp, 32
*************** In genFnPrologCalleeRegArgs() for int regs
*************** In genEnregisterIncomingStackArgs()


      G_M7122_IG01:        ; offs=000000H, funclet=00, bbWeight=1   
*************** In genFnEpilog()

__epilog:
gcVarPtrSetCur=0000000000000000 {}, gcRegGCrefSetCur=00000000 {}, gcRegByrefSetCur=00000000 {}
IN0012:        add      rsp, 32
IN0013:        pop      rbx
IN0014:        pop      rsi
IN0015:        pop      rdi
IN0016:        ret      

      G_M7122_IG03:        ; offs=000041H, funclet=00, bbWeight=1   
0 prologs, 1 epilogs, 0 funclet prologs, 0 funclet epilogs
*************** After prolog / epilog generation
G_M7122_IG01:        ; func=00, offs=000000H, size=0007H, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref, nogc <-- Prolog IG
G_M7122_IG02:        ; offs=000007H, size=0041H, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref
G_M7122_IG03:        ; offs=000048H, size=0008H, epilog, nogc, extend
*************** In emitJumpDistBind()

*************** Finishing PHASE Generate code

*************** Starting PHASE Emit code

Hot  code size = 0x50 bytes
Cold code size = 0x0 bytes
reserveUnwindInfo(isFunclet=FALSE, isColdCode=FALSE, unwindSize=0xc)
*************** In emitEndCodeGen()
Converting emitMaxStackDepth from bytes (0) to elements (0)

***************************************************************************
Instructions as they come out of the scheduler


G_M7122_IG01:        ; func=00, offs=000000H, size=0007H, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref, nogc <-- Prolog IG
IN000e: 000000 push     rdi
IN000f: 000001 push     rsi
IN0010: 000002 push     rbx
IN0011: 000003 sub      rsp, 32
						;; bbWeight=1    PerfScore 3.25
G_M7122_IG02:        ; func=00, offs=000007H, size=0041H, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref
IN0001: 000007 mov      esi, 1
IN0002: 00000C mov      rcx, 0xD1FFAB1E
IN0003: 000016 mov      rdi, gword ptr [rcx]
       ; gcrRegs +[rdi]
IN0004: 000019 mov      rcx, 0xD1FFAB1E
IN0005: 000023 call     CORINFO_HELP_NEWSFAST
       ; gcrRegs +[rax]
       ; gcr arg pop 0
IN0006: 000028 mov      rbx, rax
       ; gcrRegs +[rbx]
IN0007: 00002B mov      rdx, rdi
       ; gcrRegs +[rdx]
IN0008: 00002E mov      dword ptr [rbx+52], 0xD1FFAB1E
IN0009: 000035 lea      rdi, bword ptr [rbx+56]
       ; gcrRegs -[rdi]
       ; byrRegs +[rdi]
IN000a: 000039 mov      rcx, rdi
       ; byrRegs +[rcx]
IN000b: 00003C call     CORINFO_HELP_CHECKED_ASSIGN_REF
       ; gcrRegs -[rax rdx]
       ; byrRegs -[rcx]
IN000c: 000041 mov      byte  ptr [rdi+8], sil
IN000d: 000045 mov      rax, rbx
       ; gcrRegs +[rax]
						;; bbWeight=1    PerfScore 8.25
G_M7122_IG03:        ; func=00, offs=000048H, size=0008H, epilog, nogc, extend
IN0012: 000048 add      rsp, 32
IN0013: 00004C pop      rbx
IN0014: 00004D pop      rsi
IN0015: 00004E pop      rdi
IN0016: 00004F ret      
						;; bbWeight=1    PerfScore 2.75Allocated method code size =   80 , actual size =   80

; Total bytes of code 80, prolog size 7, PerfScore 22.25, instruction count 22 (MethodHash=ddc6e42d) for method ThrowawayTesting.Program:Get():System.Threading.Tasks.Task`1[[System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]:this
; ============================================================

*************** After end code gen, before unwindEmit()
G_M7122_IG01:        ; func=00, offs=000000H, size=0007H, bbWeight=1    PerfScore 3.25, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref, nogc <-- Prolog IG

IN000e: 000000 push     rdi
IN000f: 000001 push     rsi
IN0010: 000002 push     rbx
IN0011: 000003 sub      rsp, 32

G_M7122_IG02:        ; offs=000007H, size=0041H, bbWeight=1    PerfScore 8.25, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref

IN0001: 000007 mov      esi, 1
IN0002: 00000C mov      rcx, 0xD1FFAB1E
IN0003: 000016 mov      rdi, gword ptr [rcx]
IN0004: 000019 mov      rcx, 0xD1FFAB1E
IN0005: 000023 call     CORINFO_HELP_NEWSFAST
IN0006: 000028 mov      rbx, rax
IN0007: 00002B mov      rdx, rdi
IN0008: 00002E mov      dword ptr [rbx+52], 0xD1FFAB1E
IN0009: 000035 lea      rdi, bword ptr [rbx+56]
IN000a: 000039 mov      rcx, rdi
IN000b: 00003C call     CORINFO_HELP_CHECKED_ASSIGN_REF
IN000c: 000041 mov      byte  ptr [rdi+8], sil
IN000d: 000045 mov      rax, rbx

G_M7122_IG03:        ; offs=000048H, size=0008H, bbWeight=1    PerfScore 2.75, epilog, nogc, extend

IN0012: 000048 add      rsp, 32
IN0013: 00004C pop      rbx
IN0014: 00004D pop      rsi
IN0015: 00004E pop      rdi
IN0016: 00004F ret      


*************** Finishing PHASE Emit code

*************** Starting PHASE Emit GC+EH tables
Unwind Info:
  >> Start offset   : 0x000000 (not in unwind data)
  >>   End offset   : 0xd1ffab1e (not in unwind data)
  Version           : 1
  Flags             : 0x00
  SizeOfProlog      : 0x07
  CountOfUnwindCodes: 4
  FrameRegister     : none (0)
  FrameOffset       : N/A (no FrameRegister) (Value=0)
  UnwindCodes       :
    CodeOffset: 0x07 UnwindOp: UWOP_ALLOC_SMALL (2)     OpInfo: 3 * 8 + 8 = 32 = 0x20
    CodeOffset: 0x03 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: rbx (3)
    CodeOffset: 0x02 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: rsi (6)
    CodeOffset: 0x01 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: rdi (7)
allocUnwindInfo(pHotCode=0x00000000D1FFAB1E, pColdCode=0x0000000000000000, startOffset=0x0, endOffset=0x50, unwindSize=0xc, pUnwindBlock=0x00000000D1FFAB1E, funKind=0 (main function))
*************** In genIPmappingGen()
IP mapping count : 4
IL offs PROLOG : 0x00000000 ( STACK_EMPTY )
IL offs 0x0000 : 0x00000007 ( STACK_EMPTY )
IL offs 0x000B : 0x00000019
IL offs EPILOG : 0x00000048 ( STACK_EMPTY )

*************** In genSetScopeInfo()
VarLocInfo count is 1
; Variable debug info: 1 live range(s), 1 var(s) for method ThrowawayTesting.Program:Get():System.Threading.Tasks.Task`1[[System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]:this
  0(   UNKNOWN) : From 00000000h to 00000007h, in rcx
*************** In gcInfoBlockHdrSave()
Set code length to 80.
Set ReturnKind to Object.
Set Outgoing stack arg area size to 32.
Register slot id for reg rdi = 0.
Set state of slot 0 at instr offset 0x23 to Live.
Set state of slot 0 at instr offset 0x28 to Dead.
Defining 1 call sites:
    Offset 0x23, size 5.

*************** Finishing PHASE Emit GC+EH tables
Method code size: 80

Allocations for ThrowawayTesting.Program:Get():System.Threading.Tasks.Task`1[[System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]:this (MethodHash=ddc6e42d)
count:       1379, size:     134509, max =       3072
allocateMemory:     196608, nraUsed:     139856

Alloc'd bytes by kind:
                  kind |       size |     pct
  ---------------------+------------+--------
         AssertionProp |       6460 |   4.80%
               ASTNode |      37144 |  27.61%
              InstDesc |       3240 |   2.41%
              ImpStack |        384 |   0.29%
            BasicBlock |      12312 |   9.15%
             fgArgInfo |         64 |   0.05%
       fgArgInfoPtrArr |          8 |   0.01%
              FlowList |        608 |   0.45%
     TreeStatementList |          0 |   0.00%
               SiScope |        136 |   0.10%
       DominatorMemory |         96 |   0.07%
                  LSRA |       3304 |   2.46%
         LSRA_Interval |       1120 |   0.83%
      LSRA_RefPosition |       3776 |   2.81%
          Reachability |         16 |   0.01%
                   SSA |        824 |   0.61%
           ValueNumber |      10378 |   7.72%
              LvaTable |       4988 |   3.71%
            UnwindInfo |          0 |   0.00%
                hashBv |         40 |   0.03%
                bitset |        656 |   0.49%
          FixedBitVect |        132 |   0.10%
               Generic |       2514 |   1.87%
   LocalAddressVisitor |          0 |   0.00%
         FieldSeqStore |        320 |   0.24%
    ZeroOffsetFieldMap |        296 |   0.22%
          ArrayInfoMap |         40 |   0.03%
          MemoryPhiArg |          0 |   0.00%
                   CSE |       1248 |   0.93%
                    GC |       2677 |   1.99%
       CorTailCallInfo |          0 |   0.00%
              Inlining |       3544 |   2.63%
            ArrayStack |          0 |   0.00%
             DebugInfo |        168 |   0.12%
             DebugOnly |      34391 |  25.57%
               Codegen |       1176 |   0.87%
               LoopOpt |          0 |   0.00%
             LoopHoist |          0 |   0.00%
               Unknown |        377 |   0.28%
            RangeCheck |          0 |   0.00%
              CopyProp |       1152 |   0.86%
           SideEffects |          0 |   0.00%
       ObjectAllocator |          0 |   0.00%
    VariableLiveRanges |          0 |   0.00%
           ClassLayout |        152 |   0.11%
       TailMergeThrows |          0 |   0.00%
             EarlyProp |          0 |   0.00%
              ZeroInit |        768 |   0.57%

****** DONE compiling ThrowawayTesting.Program:Get():System.Threading.Tasks.Task`1[[System.ValueTuple`2[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]:this