****** START compiling ThrowawayTesting.Program:Casts(int,short,ubyte,System.Object,System.IO.Stream):System.Object[]:this (MethodHash=41a7651d)
Generating code for Windows x64
OPTIONS: compCodeOpt = BLENDED_CODE
OPTIONS: compDbgCode = false
OPTIONS: compDbgInfo = true
OPTIONS: compDbgEnC  = false
OPTIONS: compProcedureSplitting   = false
OPTIONS: compProcedureSplittingEH = false
IL to import:
IL_0000  1b                ldc.i4.5    
IL_0001  8d 10 00 00 01    newarr       0x1000010
IL_0006  25                dup         
IL_0007  16                ldc.i4.0    
IL_0008  03                ldarg.1     
IL_0009  6a                conv.i8     
IL_000a  8c 13 00 00 01    box          0x1000013
IL_000f  a2                stelem.ref  
IL_0010  25                dup         
IL_0011  17                ldc.i4.1    
IL_0012  04                ldarg.2     
IL_0013  8c 14 00 00 01    box          0x1000014
IL_0018  a2                stelem.ref  
IL_0019  25                dup         
IL_001a  18                ldc.i4.2    
IL_001b  05                ldarg.3     
IL_001c  8c 15 00 00 01    box          0x1000015
IL_0021  a2                stelem.ref  
IL_0022  25                dup         
IL_0023  19                ldc.i4.3    
IL_0024  0e 04             ldarg.s      0x4
IL_0026  74 16 00 00 01    castclass    0x1000016
IL_002b  a2                stelem.ref  
IL_002c  25                dup         
IL_002d  1a                ldc.i4.4    
IL_002e  0e 05             ldarg.s      0x5
IL_0030  74 17 00 00 01    castclass    0x1000017
IL_0035  a2                stelem.ref  
IL_0036  2a                ret         

lvaSetClass: setting class for V00 to (00000000D1FFAB1E) ThrowawayTesting.Program 
'this'    passed in register rcx
Arg #1    passed in register(s) rdx
Arg #2    passed in register(s) r8
Arg #3    passed in register(s) r9

lvaSetClass: setting class for V04 to (00000000D1FFAB1E) System.Object 
set user arg V04 offset to 0

lvaSetClass: setting class for V05 to (00000000D1FFAB1E) System.IO.Stream 
set user arg V05 offset to 8

lvaGrabTemp returning 6 (V06 tmp0) (a long lifetime temp) called for OutgoingArgSpace.
; Initial local variable assignments
;
;  V00 this              ref  this class-hnd
;  V01 arg1              int 
;  V02 arg2            short 
;  V03 arg3            ubyte 
;  V04 arg4              ref  class-hnd
;  V05 arg5              ref  class-hnd
;  V06 OutArgs        lclBlk <na>  "OutgoingArgSpace"
*************** In compInitDebuggingInfo() for ThrowawayTesting.Program:Casts(int,short,ubyte,System.Object,System.IO.Stream):System.Object[]:this
getVars() returned cVars = 0, extendOthers = true
info.compVarScopesCount = 6
    	VarNum 	LVNum 	      Name 	Beg 	End
 0: 	00h 	00h 	  V00 this 	000h   	037h
 1: 	01h 	01h 	  V01 arg1 	000h   	037h
 2: 	02h 	02h 	  V02 arg2 	000h   	037h
 3: 	03h 	03h 	  V03 arg3 	000h   	037h
 4: 	04h 	04h 	  V04 arg4 	000h   	037h
 5: 	05h 	05h 	  V05 arg5 	000h   	037h
info.compStmtOffsetsCount    = 0
info.compStmtOffsetsImplicit = 0005h ( STACK_EMPTY CALL_SITE )
*************** In fgFindBasicBlocks() for ThrowawayTesting.Program:Casts(int,short,ubyte,System.Object,System.IO.Stream):System.Object[]:this
Jump targets:
  none
New Basic Block BB01 [0000] created.
BB01 [000..037)
IL Code Size,Instr   55,  29, Basic Block count   1, Local Variable Num,Ref count   7,  5 for method ThrowawayTesting.Program:Casts(int,short,ubyte,System.Object,System.IO.Stream):System.Object[]:this
OPTIONS: opts.MinOpts() == false
Basic block list for 'ThrowawayTesting.Program:Casts(int,short,ubyte,System.Object,System.IO.Stream):System.Object[]:this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..037)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Pre-import

*************** Finishing PHASE Pre-import

*************** Starting PHASE Importation
*************** In impImport() for ThrowawayTesting.Program:Casts(int,short,ubyte,System.Object,System.IO.Stream):System.Object[]:this

impImportBlockPending for BB01

Importing BB01 (PC=000) of 'ThrowawayTesting.Program:Casts(int,short,ubyte,System.Object,System.IO.Stream):System.Object[]:this'
    [ 0]   0 (0x000) ldc.i4.5 5
    [ 1]   1 (0x001) newarr 01000010
    [ 1]   6 (0x006) dup
lvaGrabTemp returning 7 (V07 tmp1) called for dup spill.


STMT00000 (IL 0x000...  ???)
               [000004] -ACXG-------              *  ASG       ref   
               [000003] D------N----              +--*  LCL_VAR   ref    V07 tmp1         
               [000002] --CXG-------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWARR_1_OBJ
               [000001] H----------- arg0            +--*  CNS_INT(h) long   0xd1ffab1e class
               [000000] ------------ arg1            \--*  CNS_INT   long   5
Marked V07 as a single def local

lvaSetClass: setting class for V07 to (00000000D1FFAB1E) System.Object[]  [exact]

    [ 2]   7 (0x007) ldc.i4.0 0
    [ 3]   8 (0x008) ldarg.1
    [ 4]   9 (0x009) conv.i8
    [ 4]  10 (0x00a) box 01000013
Compiler::impImportAndPushBox -- handling BOX(value class) via inline allocate/copy sequence

lvaGrabTemp returning 8 (V08 tmp2) called for Single-def Box Helper.
Marking V08 as a single def local

lvaSetClass: setting class for V08 to (00000000D1FFAB1E) System.Int64  [exact]


STMT00001 (IL   ???...  ???)
               [000013] -A----------              *  ASG       ref   
               [000012] D------N----              +--*  LCL_VAR   ref    V08 tmp2         
               [000011] ------------              \--*  ALLOCOBJ  ref   
               [000010] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e class


STMT00002 (IL   ???...  ???)
               [000018] -A----------              *  ASG       long  
               [000017] -------N----              +--*  IND       long  
               [000016] ------------              |  \--*  ADD       byref 
               [000014] ------------              |     +--*  LCL_VAR   ref    V08 tmp2         
               [000015] ------------              |     \--*  CNS_INT   long   8
               [000009] ------------              \--*  CAST      long <- int
               [000008] ------------                 \--*  LCL_VAR   int    V01 arg1         

    [ 4]  15 (0x00f) stelem.ref
stelem to (exact) object[]: skipping covariant store check


STMT00003 (IL   ???...  ???)
               [000022] -A-XG-------              *  ASG       ref   
               [000021] ---XG--N----              +--*  INDEX     ref   
               [000006] ------------              |  +--*  LCL_VAR   ref    V07 tmp1         
               [000007] ------------              |  \--*  CNS_INT   int    0
               [000020] ------------              \--*  BOX       ref   
               [000019] ------------                 \--*  LCL_VAR   ref    V08 tmp2         

    [ 1]  16 (0x010) dup
    [ 2]  17 (0x011) ldc.i4.1 1
    [ 3]  18 (0x012) ldarg.2
    [ 4]  19 (0x013) box 01000014
Compiler::impImportAndPushBox -- handling BOX(value class) via inline allocate/copy sequence

lvaGrabTemp returning 9 (V09 tmp3) called for Single-def Box Helper.
Marking V09 as a single def local

lvaSetClass: setting class for V09 to (00000000D1FFAB1E) System.Int32  [exact]


STMT00004 (IL   ???...  ???)
               [000029] -A----------              *  ASG       ref   
               [000028] D------N----              +--*  LCL_VAR   ref    V09 tmp3         
               [000027] ------------              \--*  ALLOCOBJ  ref   
               [000026] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e class


STMT00005 (IL   ???...  ???)
               [000035] -A----------              *  ASG       int   
               [000034] -------N----              +--*  IND       int   
               [000032] ------------              |  \--*  ADD       byref 
               [000030] ------------              |     +--*  LCL_VAR   ref    V09 tmp3         
               [000031] ------------              |     \--*  CNS_INT   long   8
               [000033] ------------              \--*  CAST      int <- int
               [000025] ------------                 \--*  LCL_VAR   short  V02 arg2         

    [ 4]  24 (0x018) stelem.ref
stelem to (exact) object[]: skipping covariant store check


STMT00006 (IL   ???...  ???)
               [000039] -A-XG-------              *  ASG       ref   
               [000038] ---XG--N----              +--*  INDEX     ref   
               [000023] ------------              |  +--*  LCL_VAR   ref    V07 tmp1         
               [000024] ------------              |  \--*  CNS_INT   int    1
               [000037] ------------              \--*  BOX       ref   
               [000036] ------------                 \--*  LCL_VAR   ref    V09 tmp3         

    [ 1]  25 (0x019) dup
    [ 2]  26 (0x01a) ldc.i4.2 2
    [ 3]  27 (0x01b) ldarg.3
    [ 4]  28 (0x01c) box 01000015
Compiler::impImportAndPushBox -- handling BOX(value class) via inline allocate/copy sequence

lvaGrabTemp returning 10 (V10 tmp4) called for Single-def Box Helper.
Marking V10 as a single def local

lvaSetClass: setting class for V10 to (00000000D1FFAB1E) System.Int16  [exact]


STMT00007 (IL   ???...  ???)
               [000046] -A----------              *  ASG       ref   
               [000045] D------N----              +--*  LCL_VAR   ref    V10 tmp4         
               [000044] ------------              \--*  ALLOCOBJ  ref   
               [000043] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e class


STMT00008 (IL   ???...  ???)
               [000052] -A----------              *  ASG       short 
               [000051] -------N----              +--*  IND       short 
               [000049] ------------              |  \--*  ADD       byref 
               [000047] ------------              |     +--*  LCL_VAR   ref    V10 tmp4         
               [000048] ------------              |     \--*  CNS_INT   long   8
               [000050] ------------              \--*  CAST      short <- int
               [000042] ------------                 \--*  LCL_VAR   ubyte  V03 arg3         

    [ 4]  33 (0x021) stelem.ref
stelem to (exact) object[]: skipping covariant store check


STMT00009 (IL   ???...  ???)
               [000056] -A-XG-------              *  ASG       ref   
               [000055] ---XG--N----              +--*  INDEX     ref   
               [000040] ------------              |  +--*  LCL_VAR   ref    V07 tmp1         
               [000041] ------------              |  \--*  CNS_INT   int    2
               [000054] ------------              \--*  BOX       ref   
               [000053] ------------                 \--*  LCL_VAR   ref    V10 tmp4         

    [ 1]  34 (0x022) dup
    [ 2]  35 (0x023) ldc.i4.3 3
    [ 3]  36 (0x024) ldarg.s 4
    [ 4]  38 (0x026) castclass 01000016
Considering optimization of castclass from 00000000D1FFAB1E (System.Object) to 00000000D1FFAB1E (System.String)
Can't optimize since fromClass is inexact

Expanding castclass inline

lvaGrabTemp returning 11 (V11 tmp5) called for fgInsertCommaFormTemp is creating a new local variable.

lvaGrabTemp returning 12 (V12 tmp6) called for spilling QMark2.


STMT00010 (IL   ???...  ???)
               [000081] -ACXG-------              *  ASG       ref   
               [000080] D------N----              +--*  LCL_VAR   ref    V12 tmp6         
               [000079] -ACXG-------              \--*  QMARK     ref   
               [000071] Q-----------    if           +--*  EQ        int   
               [000070] ------------                 |  +--*  LCL_VAR   ref    V04 arg4         
               [000069] ------------                 |  \--*  CNS_INT   ref    null
               [000078] -ACXG-------    if           \--*  COLON     ref   
               [000076] -ACXG------- else               +--*  QMARK     ref   
               [000068] QA-X--------    if              |  +--*  NE        int   
               [000067] #--X--------                    |  |  +--*  IND       long  
               [000061] ------------                    |  |  |  \--*  LCL_VAR   ref    V04 arg4         
               [000065] -A----------                    |  |  \--*  COMMA     long  
               [000063] -A----------                    |  |     +--*  ASG       long  
               [000062] D------N----                    |  |     |  +--*  LCL_VAR   long   V11 tmp5         
               [000060] H-----------                    |  |     |  \--*  CNS_INT(h) long   0xd1ffab1e class
               [000064] ------------                    |  |     \--*  LCL_VAR   long   V11 tmp5         
               [000075] --CXG-------    if              |  \--*  COLON     ref   
               [000072] ------------ else               |     +--*  LCL_VAR   ref    V04 arg4         
               [000074] --CXG------- then               |     \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL
               [000066] ------------ arg0               |        +--*  LCL_VAR   long   V11 tmp5         
               [000073] ------------ arg1               |        \--*  LCL_VAR   ref    V04 arg4         
               [000077] ------------ then               \--*  LCL_VAR   ref    V04 arg4         
Marked V12 as a single def temp

lvaSetClass: setting class for V12 to (00000000D1FFAB1E) System.String 

    [ 4]  43 (0x02b) stelem.ref
stelem to (exact) object[]: skipping covariant store check


STMT00011 (IL   ???...  ???)
               [000084] -A-XG-------              *  ASG       ref   
               [000083] ---XG--N----              +--*  INDEX     ref   
               [000057] ------------              |  +--*  LCL_VAR   ref    V07 tmp1         
               [000058] ------------              |  \--*  CNS_INT   int    3
               [000082] ------------              \--*  LCL_VAR   ref    V12 tmp6         

    [ 1]  44 (0x02c) dup
    [ 2]  45 (0x02d) ldc.i4.4 4
    [ 3]  46 (0x02e) ldarg.s 5
    [ 4]  48 (0x030) castclass 01000017
Considering optimization of castclass from 00000000D1FFAB1E (System.IO.Stream) to 00000000D1FFAB1E (System.IO.FileStream)
Can't optimize since fromClass is inexact

Expanding castclass inline

lvaGrabTemp returning 13 (V13 tmp7) called for fgInsertCommaFormTemp is creating a new local variable.

lvaGrabTemp returning 14 (V14 tmp8) called for spilling QMark2.


STMT00012 (IL   ???...  ???)
               [000109] -ACXG-------              *  ASG       ref   
               [000108] D------N----              +--*  LCL_VAR   ref    V14 tmp8         
               [000107] -ACXG-------              \--*  QMARK     ref   
               [000099] Q-----------    if           +--*  EQ        int   
               [000098] ------------                 |  +--*  LCL_VAR   ref    V05 arg5         
               [000097] ------------                 |  \--*  CNS_INT   ref    null
               [000106] -ACXG-------    if           \--*  COLON     ref   
               [000104] -ACXG------- else               +--*  QMARK     ref   
               [000096] QA-X--------    if              |  +--*  NE        int   
               [000095] #--X--------                    |  |  +--*  IND       long  
               [000089] ------------                    |  |  |  \--*  LCL_VAR   ref    V05 arg5         
               [000093] -A----------                    |  |  \--*  COMMA     long  
               [000091] -A----------                    |  |     +--*  ASG       long  
               [000090] D------N----                    |  |     |  +--*  LCL_VAR   long   V13 tmp7         
               [000088] H-----------                    |  |     |  \--*  CNS_INT(h) long   0xd1ffab1e class
               [000092] ------------                    |  |     \--*  LCL_VAR   long   V13 tmp7         
               [000103] --CXG-------    if              |  \--*  COLON     ref   
               [000100] ------------ else               |     +--*  LCL_VAR   ref    V05 arg5         
               [000102] --CXG------- then               |     \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL
               [000094] ------------ arg0               |        +--*  LCL_VAR   long   V13 tmp7         
               [000101] ------------ arg1               |        \--*  LCL_VAR   ref    V05 arg5         
               [000105] ------------ then               \--*  LCL_VAR   ref    V05 arg5         
Marked V14 as a single def temp

lvaSetClass: setting class for V14 to (00000000D1FFAB1E) System.IO.FileStream 

    [ 4]  53 (0x035) stelem.ref
stelem to (exact) object[]: skipping covariant store check


STMT00013 (IL   ???...  ???)
               [000112] -A-XG-------              *  ASG       ref   
               [000111] ---XG--N----              +--*  INDEX     ref   
               [000085] ------------              |  +--*  LCL_VAR   ref    V07 tmp1         
               [000086] ------------              |  \--*  CNS_INT   int    4
               [000110] ------------              \--*  LCL_VAR   ref    V14 tmp8         

    [ 1]  54 (0x036) ret

STMT00014 (IL   ???...  ???)
               [000113] ------------              *  RETURN    ref   
               [000005] ------------              \--*  LCL_VAR   ref    V07 tmp1         

*************** Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..037)        (return)                     i idxlen new[] newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..037) (return), preds={} succs={}

***** BB01
STMT00000 (IL 0x000...0x00F)
               [000004] -ACXG-------              *  ASG       ref   
               [000003] D------N----              +--*  LCL_VAR   ref    V07 tmp1         
               [000002] --CXG-------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWARR_1_OBJ
               [000001] H----------- arg0            +--*  CNS_INT(h) long   0xd1ffab1e class
               [000000] ------------ arg1            \--*  CNS_INT   long   5

***** BB01
STMT00001 (IL   ???...  ???)
               [000013] -A----------              *  ASG       ref   
               [000012] D------N----              +--*  LCL_VAR   ref    V08 tmp2         
               [000011] ------------              \--*  ALLOCOBJ  ref   
               [000010] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e class

***** BB01
STMT00002 (IL   ???...  ???)
               [000018] -A----------              *  ASG       long  
               [000017] -------N----              +--*  IND       long  
               [000016] ------------              |  \--*  ADD       byref 
               [000014] ------------              |     +--*  LCL_VAR   ref    V08 tmp2         
               [000015] ------------              |     \--*  CNS_INT   long   8
               [000009] ------------              \--*  CAST      long <- int
               [000008] ------------                 \--*  LCL_VAR   int    V01 arg1         

***** BB01
STMT00003 (IL   ???...  ???)
               [000022] -A-XG-------              *  ASG       ref   
               [000021] ---XG--N----              +--*  INDEX     ref   
               [000006] ------------              |  +--*  LCL_VAR   ref    V07 tmp1         
               [000007] ------------              |  \--*  CNS_INT   int    0
               [000020] ------------              \--*  BOX       ref   
               [000019] ------------                 \--*  LCL_VAR   ref    V08 tmp2         

***** BB01
STMT00004 (IL   ???...0x018)
               [000029] -A----------              *  ASG       ref   
               [000028] D------N----              +--*  LCL_VAR   ref    V09 tmp3         
               [000027] ------------              \--*  ALLOCOBJ  ref   
               [000026] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e class

***** BB01
STMT00005 (IL   ???...  ???)
               [000035] -A----------              *  ASG       int   
               [000034] -------N----              +--*  IND       int   
               [000032] ------------              |  \--*  ADD       byref 
               [000030] ------------              |     +--*  LCL_VAR   ref    V09 tmp3         
               [000031] ------------              |     \--*  CNS_INT   long   8
               [000033] ------------              \--*  CAST      int <- int
               [000025] ------------                 \--*  LCL_VAR   short  V02 arg2         

***** BB01
STMT00006 (IL   ???...  ???)
               [000039] -A-XG-------              *  ASG       ref   
               [000038] ---XG--N----              +--*  INDEX     ref   
               [000023] ------------              |  +--*  LCL_VAR   ref    V07 tmp1         
               [000024] ------------              |  \--*  CNS_INT   int    1
               [000037] ------------              \--*  BOX       ref   
               [000036] ------------                 \--*  LCL_VAR   ref    V09 tmp3         

***** BB01
STMT00007 (IL   ???...0x021)
               [000046] -A----------              *  ASG       ref   
               [000045] D------N----              +--*  LCL_VAR   ref    V10 tmp4         
               [000044] ------------              \--*  ALLOCOBJ  ref   
               [000043] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e class

***** BB01
STMT00008 (IL   ???...  ???)
               [000052] -A----------              *  ASG       short 
               [000051] -------N----              +--*  IND       short 
               [000049] ------------              |  \--*  ADD       byref 
               [000047] ------------              |     +--*  LCL_VAR   ref    V10 tmp4         
               [000048] ------------              |     \--*  CNS_INT   long   8
               [000050] ------------              \--*  CAST      short <- int
               [000042] ------------                 \--*  LCL_VAR   ubyte  V03 arg3         

***** BB01
STMT00009 (IL   ???...  ???)
               [000056] -A-XG-------              *  ASG       ref   
               [000055] ---XG--N----              +--*  INDEX     ref   
               [000040] ------------              |  +--*  LCL_VAR   ref    V07 tmp1         
               [000041] ------------              |  \--*  CNS_INT   int    2
               [000054] ------------              \--*  BOX       ref   
               [000053] ------------                 \--*  LCL_VAR   ref    V10 tmp4         

***** BB01
STMT00010 (IL   ???...0x02B)
               [000081] -ACXG-------              *  ASG       ref   
               [000080] D------N----              +--*  LCL_VAR   ref    V12 tmp6         
               [000079] -ACXG-------              \--*  QMARK     ref   
               [000071] Q-----------    if           +--*  EQ        int   
               [000070] ------------                 |  +--*  LCL_VAR   ref    V04 arg4         
               [000069] ------------                 |  \--*  CNS_INT   ref    null
               [000078] -ACXG-------    if           \--*  COLON     ref   
               [000076] -ACXG------- else               +--*  QMARK     ref   
               [000068] QA-X--------    if              |  +--*  NE        int   
               [000067] #--X--------                    |  |  +--*  IND       long  
               [000061] ------------                    |  |  |  \--*  LCL_VAR   ref    V04 arg4         
               [000065] -A----------                    |  |  \--*  COMMA     long  
               [000063] -A----------                    |  |     +--*  ASG       long  
               [000062] D------N----                    |  |     |  +--*  LCL_VAR   long   V11 tmp5         
               [000060] H-----------                    |  |     |  \--*  CNS_INT(h) long   0xd1ffab1e class
               [000064] ------------                    |  |     \--*  LCL_VAR   long   V11 tmp5         
               [000075] --CXG-------    if              |  \--*  COLON     ref   
               [000072] ------------ else               |     +--*  LCL_VAR   ref    V04 arg4         
               [000074] --CXG------- then               |     \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL
               [000066] ------------ arg0               |        +--*  LCL_VAR   long   V11 tmp5         
               [000073] ------------ arg1               |        \--*  LCL_VAR   ref    V04 arg4         
               [000077] ------------ then               \--*  LCL_VAR   ref    V04 arg4         

***** BB01
STMT00011 (IL   ???...  ???)
               [000084] -A-XG-------              *  ASG       ref   
               [000083] ---XG--N----              +--*  INDEX     ref   
               [000057] ------------              |  +--*  LCL_VAR   ref    V07 tmp1         
               [000058] ------------              |  \--*  CNS_INT   int    3
               [000082] ------------              \--*  LCL_VAR   ref    V12 tmp6         

***** BB01
STMT00012 (IL   ???...0x035)
               [000109] -ACXG-------              *  ASG       ref   
               [000108] D------N----              +--*  LCL_VAR   ref    V14 tmp8         
               [000107] -ACXG-------              \--*  QMARK     ref   
               [000099] Q-----------    if           +--*  EQ        int   
               [000098] ------------                 |  +--*  LCL_VAR   ref    V05 arg5         
               [000097] ------------                 |  \--*  CNS_INT   ref    null
               [000106] -ACXG-------    if           \--*  COLON     ref   
               [000104] -ACXG------- else               +--*  QMARK     ref   
               [000096] QA-X--------    if              |  +--*  NE        int   
               [000095] #--X--------                    |  |  +--*  IND       long  
               [000089] ------------                    |  |  |  \--*  LCL_VAR   ref    V05 arg5         
               [000093] -A----------                    |  |  \--*  COMMA     long  
               [000091] -A----------                    |  |     +--*  ASG       long  
               [000090] D------N----                    |  |     |  +--*  LCL_VAR   long   V13 tmp7         
               [000088] H-----------                    |  |     |  \--*  CNS_INT(h) long   0xd1ffab1e class
               [000092] ------------                    |  |     \--*  LCL_VAR   long   V13 tmp7         
               [000103] --CXG-------    if              |  \--*  COLON     ref   
               [000100] ------------ else               |     +--*  LCL_VAR   ref    V05 arg5         
               [000102] --CXG------- then               |     \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL
               [000094] ------------ arg0               |        +--*  LCL_VAR   long   V13 tmp7         
               [000101] ------------ arg1               |        \--*  LCL_VAR   ref    V05 arg5         
               [000105] ------------ then               \--*  LCL_VAR   ref    V05 arg5         

***** BB01
STMT00013 (IL   ???...  ???)
               [000112] -A-XG-------              *  ASG       ref   
               [000111] ---XG--N----              +--*  INDEX     ref   
               [000085] ------------              |  +--*  LCL_VAR   ref    V07 tmp1         
               [000086] ------------              |  \--*  CNS_INT   int    4
               [000110] ------------              \--*  LCL_VAR   ref    V14 tmp8         

***** BB01
STMT00014 (IL   ???...0x036)
               [000113] ------------              *  RETURN    ref   
               [000005] ------------              \--*  LCL_VAR   ref    V07 tmp1         

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Finishing PHASE Indirect call transform [no changes]

*************** Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Finishing PHASE Expand patchpoints [no changes]

*************** Starting PHASE Post-import

*************** Finishing PHASE Post-import

*************** Starting PHASE Morph - Init

New BlockSet epoch 1, # of blocks (including unused BB00): 2, bitset array size: 1 (short)

*************** In fgRemoveEmptyBlocks

*************** Finishing PHASE Morph - Init
*************** In fgDebugCheckBBlist

*************** Starting PHASE Morph - Inlining
**************** Inline Tree
Inlines into 06000002 [via DefaultPolicy] ThrowawayTesting.Program:Casts(int,short,ubyte,System.Object,System.IO.Stream):System.Object[]:this
Budget: initialTime=225, finalTime=225, initialBudget=2250, currentBudget=2250
Budget: initialSize=1385, finalSize=1385

*************** Finishing PHASE Morph - Inlining [no changes]

*************** Starting PHASE Allocate Objects
disabled, punting

*************** Finishing PHASE Allocate Objects [no changes]

*************** Starting PHASE Morph - Add internal blocks

*************** After fgAddInternal()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..037)        (return)                     i idxlen new[] newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty

*************** Finishing PHASE Morph - Add internal blocks

*************** Starting PHASE Remove empty try

*************** In fgRemoveEmptyTry()
No EH in this method, nothing to remove.

*************** Finishing PHASE Remove empty try [no changes]

*************** Starting PHASE Remove empty finally
No EH in this method, nothing to remove.

*************** Finishing PHASE Remove empty finally [no changes]

*************** Starting PHASE Merge callfinally chains
No EH in this method, nothing to merge.

*************** Finishing PHASE Merge callfinally chains [no changes]

*************** Starting PHASE Clone finally
No EH in this method, no cloning.

*************** Finishing PHASE Clone finally [no changes]

*************** Starting PHASE Compute preds

Renumbering the basic blocks for fgComputePred

*************** Before renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..037)        (return)                     i idxlen new[] newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty

*************** After renumbering the basic blocks
=============== No blocks renumbered!

*************** In fgComputePreds()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..037)        (return)                     i idxlen new[] newobj 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** After fgComputePreds()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..037)        (return)                     i label target idxlen new[] newobj 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** Finishing PHASE Compute preds

*************** Starting PHASE Merge throw blocks

*************** In fgTailMergeThrows
Method does not have multiple noreturn calls.

*************** Finishing PHASE Merge throw blocks [no changes]

*************** Starting PHASE Update flow graph early pass

*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..037)        (return)                     i label target idxlen new[] newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist

*************** Finishing PHASE Update flow graph early pass

*************** Starting PHASE Morph - Promote Structs

*************** In fgResetImplicitByRefRefCount()
*************** In fgPromoteStructs()

lvaTable before fgPromoteStructs
; Initial local variable assignments
;
;  V00 this              ref  this class-hnd
;  V01 arg1              int 
;  V02 arg2            short 
;  V03 arg3            ubyte 
;  V04 arg4              ref  class-hnd
;  V05 arg5              ref  class-hnd
;  V06 OutArgs        lclBlk <na>  "OutgoingArgSpace"
;  V07 tmp1              ref  class-hnd exact "dup spill"
;  V08 tmp2              ref  class-hnd exact "Single-def Box Helper"
;  V09 tmp3              ref  class-hnd exact "Single-def Box Helper"
;  V10 tmp4              ref  class-hnd exact "Single-def Box Helper"
;  V11 tmp5             long  "fgInsertCommaFormTemp is creating a new local variable"
;  V12 tmp6              ref  class-hnd "spilling QMark2"
;  V13 tmp7             long  "fgInsertCommaFormTemp is creating a new local variable"
;  V14 tmp8              ref  class-hnd "spilling QMark2"

lvaTable after fgPromoteStructs
; Initial local variable assignments
;
;  V00 this              ref  this class-hnd
;  V01 arg1              int 
;  V02 arg2            short 
;  V03 arg3            ubyte 
;  V04 arg4              ref  class-hnd
;  V05 arg5              ref  class-hnd
;  V06 OutArgs        lclBlk <na>  "OutgoingArgSpace"
;  V07 tmp1              ref  class-hnd exact "dup spill"
;  V08 tmp2              ref  class-hnd exact "Single-def Box Helper"
;  V09 tmp3              ref  class-hnd exact "Single-def Box Helper"
;  V10 tmp4              ref  class-hnd exact "Single-def Box Helper"
;  V11 tmp5             long  "fgInsertCommaFormTemp is creating a new local variable"
;  V12 tmp6              ref  class-hnd "spilling QMark2"
;  V13 tmp7             long  "fgInsertCommaFormTemp is creating a new local variable"
;  V14 tmp8              ref  class-hnd "spilling QMark2"

*************** Finishing PHASE Morph - Promote Structs

*************** Starting PHASE Morph - Structs/AddrExp

*************** In fgMarkAddressExposedLocals()
LocalAddressVisitor visiting statement:
STMT00000 (IL 0x000...0x00F)
               [000004] -ACXG-------              *  ASG       ref   
               [000003] D------N----              +--*  LCL_VAR   ref    V07 tmp1         
               [000002] --CXG-------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWARR_1_OBJ
               [000001] H----------- arg0            +--*  CNS_INT(h) long   0xd1ffab1e class
               [000000] ------------ arg1            \--*  CNS_INT   long   5

LocalAddressVisitor visiting statement:
STMT00001 (IL   ???...  ???)
               [000013] -AC---------              *  ASG       ref   
               [000012] D------N----              +--*  LCL_VAR   ref    V08 tmp2         
               [000011] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000010] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e class

LocalAddressVisitor visiting statement:
STMT00002 (IL   ???...  ???)
               [000018] -A----------              *  ASG       long  
               [000017] -------N----              +--*  IND       long  
               [000016] ------------              |  \--*  ADD       byref 
               [000014] ------------              |     +--*  LCL_VAR   ref    V08 tmp2         
               [000015] ------------              |     \--*  CNS_INT   long   8
               [000009] ------------              \--*  CAST      long <- int
               [000008] ------------                 \--*  LCL_VAR   int    V01 arg1         

LocalAddressVisitor visiting statement:
STMT00003 (IL   ???...  ???)
               [000022] -A-XG-------              *  ASG       ref   
               [000021] ---XG--N----              +--*  INDEX     ref   
               [000006] ------------              |  +--*  LCL_VAR   ref    V07 tmp1         
               [000007] ------------              |  \--*  CNS_INT   int    0
               [000020] ------------              \--*  BOX       ref   
               [000019] ------------                 \--*  LCL_VAR   ref    V08 tmp2         

LocalAddressVisitor visiting statement:
STMT00004 (IL   ???...0x018)
               [000029] -AC---------              *  ASG       ref   
               [000028] D------N----              +--*  LCL_VAR   ref    V09 tmp3         
               [000027] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000026] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e class

LocalAddressVisitor visiting statement:
STMT00005 (IL   ???...  ???)
               [000035] -A----------              *  ASG       int   
               [000034] -------N----              +--*  IND       int   
               [000032] ------------              |  \--*  ADD       byref 
               [000030] ------------              |     +--*  LCL_VAR   ref    V09 tmp3         
               [000031] ------------              |     \--*  CNS_INT   long   8
               [000033] ------------              \--*  CAST      int <- int
               [000025] ------------                 \--*  LCL_VAR   short  V02 arg2         

LocalAddressVisitor visiting statement:
STMT00006 (IL   ???...  ???)
               [000039] -A-XG-------              *  ASG       ref   
               [000038] ---XG--N----              +--*  INDEX     ref   
               [000023] ------------              |  +--*  LCL_VAR   ref    V07 tmp1         
               [000024] ------------              |  \--*  CNS_INT   int    1
               [000037] ------------              \--*  BOX       ref   
               [000036] ------------                 \--*  LCL_VAR   ref    V09 tmp3         

LocalAddressVisitor visiting statement:
STMT00007 (IL   ???...0x021)
               [000046] -AC---------              *  ASG       ref   
               [000045] D------N----              +--*  LCL_VAR   ref    V10 tmp4         
               [000044] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000043] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e class

LocalAddressVisitor visiting statement:
STMT00008 (IL   ???...  ???)
               [000052] -A----------              *  ASG       short 
               [000051] -------N----              +--*  IND       short 
               [000049] ------------              |  \--*  ADD       byref 
               [000047] ------------              |     +--*  LCL_VAR   ref    V10 tmp4         
               [000048] ------------              |     \--*  CNS_INT   long   8
               [000050] ------------              \--*  CAST      short <- int
               [000042] ------------                 \--*  LCL_VAR   ubyte  V03 arg3         

LocalAddressVisitor visiting statement:
STMT00009 (IL   ???...  ???)
               [000056] -A-XG-------              *  ASG       ref   
               [000055] ---XG--N----              +--*  INDEX     ref   
               [000040] ------------              |  +--*  LCL_VAR   ref    V07 tmp1         
               [000041] ------------              |  \--*  CNS_INT   int    2
               [000054] ------------              \--*  BOX       ref   
               [000053] ------------                 \--*  LCL_VAR   ref    V10 tmp4         

LocalAddressVisitor visiting statement:
STMT00010 (IL   ???...0x02B)
               [000081] -ACXG-------              *  ASG       ref   
               [000080] D------N----              +--*  LCL_VAR   ref    V12 tmp6         
               [000079] -ACXG-------              \--*  QMARK     ref   
               [000071] Q-----------    if           +--*  EQ        int   
               [000070] ------------                 |  +--*  LCL_VAR   ref    V04 arg4         
               [000069] ------------                 |  \--*  CNS_INT   ref    null
               [000078] -ACXG-------    if           \--*  COLON     ref   
               [000076] -ACXG------- else               +--*  QMARK     ref   
               [000068] QA-X--------    if              |  +--*  NE        int   
               [000067] #--X--------                    |  |  +--*  IND       long  
               [000061] ------------                    |  |  |  \--*  LCL_VAR   ref    V04 arg4         
               [000065] -A----------                    |  |  \--*  COMMA     long  
               [000063] -A----------                    |  |     +--*  ASG       long  
               [000062] D------N----                    |  |     |  +--*  LCL_VAR   long   V11 tmp5         
               [000060] H-----------                    |  |     |  \--*  CNS_INT(h) long   0xd1ffab1e class
               [000064] ------------                    |  |     \--*  LCL_VAR   long   V11 tmp5         
               [000075] --CXG-------    if              |  \--*  COLON     ref   
               [000072] ------------ else               |     +--*  LCL_VAR   ref    V04 arg4         
               [000074] --CXG------- then               |     \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL
               [000066] ------------ arg0               |        +--*  LCL_VAR   long   V11 tmp5         
               [000073] ------------ arg1               |        \--*  LCL_VAR   ref    V04 arg4         
               [000077] ------------ then               \--*  LCL_VAR   ref    V04 arg4         

LocalAddressVisitor visiting statement:
STMT00011 (IL   ???...  ???)
               [000084] -A-XG-------              *  ASG       ref   
               [000083] ---XG--N----              +--*  INDEX     ref   
               [000057] ------------              |  +--*  LCL_VAR   ref    V07 tmp1         
               [000058] ------------              |  \--*  CNS_INT   int    3
               [000082] ------------              \--*  LCL_VAR   ref    V12 tmp6         

LocalAddressVisitor visiting statement:
STMT00012 (IL   ???...0x035)
               [000109] -ACXG-------              *  ASG       ref   
               [000108] D------N----              +--*  LCL_VAR   ref    V14 tmp8         
               [000107] -ACXG-------              \--*  QMARK     ref   
               [000099] Q-----------    if           +--*  EQ        int   
               [000098] ------------                 |  +--*  LCL_VAR   ref    V05 arg5         
               [000097] ------------                 |  \--*  CNS_INT   ref    null
               [000106] -ACXG-------    if           \--*  COLON     ref   
               [000104] -ACXG------- else               +--*  QMARK     ref   
               [000096] QA-X--------    if              |  +--*  NE        int   
               [000095] #--X--------                    |  |  +--*  IND       long  
               [000089] ------------                    |  |  |  \--*  LCL_VAR   ref    V05 arg5         
               [000093] -A----------                    |  |  \--*  COMMA     long  
               [000091] -A----------                    |  |     +--*  ASG       long  
               [000090] D------N----                    |  |     |  +--*  LCL_VAR   long   V13 tmp7         
               [000088] H-----------                    |  |     |  \--*  CNS_INT(h) long   0xd1ffab1e class
               [000092] ------------                    |  |     \--*  LCL_VAR   long   V13 tmp7         
               [000103] --CXG-------    if              |  \--*  COLON     ref   
               [000100] ------------ else               |     +--*  LCL_VAR   ref    V05 arg5         
               [000102] --CXG------- then               |     \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL
               [000094] ------------ arg0               |        +--*  LCL_VAR   long   V13 tmp7         
               [000101] ------------ arg1               |        \--*  LCL_VAR   ref    V05 arg5         
               [000105] ------------ then               \--*  LCL_VAR   ref    V05 arg5         

LocalAddressVisitor visiting statement:
STMT00013 (IL   ???...  ???)
               [000112] -A-XG-------              *  ASG       ref   
               [000111] ---XG--N----              +--*  INDEX     ref   
               [000085] ------------              |  +--*  LCL_VAR   ref    V07 tmp1         
               [000086] ------------              |  \--*  CNS_INT   int    4
               [000110] ------------              \--*  LCL_VAR   ref    V14 tmp8         

LocalAddressVisitor visiting statement:
STMT00014 (IL   ???...0x036)
               [000113] ------------              *  RETURN    ref   
               [000005] ------------              \--*  LCL_VAR   ref    V07 tmp1         


*************** Finishing PHASE Morph - Structs/AddrExp

*************** Starting PHASE Morph - ByRefs

*************** In fgRetypeImplicitByRefArgs()

*************** Finishing PHASE Morph - ByRefs

*************** Starting PHASE Morph - Global

*************** In fgMorphBlocks()

Morphing BB01 of 'ThrowawayTesting.Program:Casts(int,short,ubyte,System.Object,System.IO.Stream):System.Object[]:this'

fgMorphTree BB01, STMT00000 (before)
               [000004] -ACXG-------              *  ASG       ref   
               [000003] D------N----              +--*  LCL_VAR   ref    V07 tmp1         
               [000002] --CXG-------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWARR_1_OBJ
               [000001] H----------- arg0            +--*  CNS_INT(h) long   0xd1ffab1e class
               [000000] ------------ arg1            \--*  CNS_INT   long   5
Initializing arg info for 2.CALL:
ArgTable for 2.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 1.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 0.CNS_INT long (By ref), 1 reg: rdx, byteAlignment=8]

Morphing args for 2.CALL:
argSlots=2, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000001] H----+------              *  CNS_INT(h) long   0xd1ffab1e class
Replaced with placeholder node:
               [000114] ----------L-              *  ARGPLACE  long  
Deferred argument ('rdx'):
               [000000] -----+------              *  CNS_INT   long   5
Replaced with placeholder node:
               [000115] ----------L-              *  ARGPLACE  long  

Shuffled argument table:    rcx rdx 
ArgTable for 2.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 1.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 0.CNS_INT long (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]


fgMorphTree BB01, STMT00000 (after)
               [000004] -ACXG+------              *  ASG       ref   
               [000003] D----+-N----              +--*  LCL_VAR   ref    V07 tmp1         
               [000002] --CXG+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWARR_1_OBJ
               [000001] H----+------ arg0 in rcx     +--*  CNS_INT(h) long   0xd1ffab1e class
               [000000] -----+------ arg1 in rdx     \--*  CNS_INT   long   5

fgMorphTree BB01, STMT00001 (before)
               [000013] -AC---------              *  ASG       ref   
               [000012] D------N----              +--*  LCL_VAR   ref    V08 tmp2         
               [000011] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000010] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e class
Initializing arg info for 11.CALL:
ArgTable for 11.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 10.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]

Morphing args for 11.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000010] H----+------              *  CNS_INT(h) long   0xd1ffab1e class
Replaced with placeholder node:
               [000116] ----------L-              *  ARGPLACE  long  

Shuffled argument table:    rcx 
ArgTable for 11.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 10.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]


fgMorphTree BB01, STMT00001 (after)
               [000013] -AC--+------              *  ASG       ref   
               [000012] D----+-N----              +--*  LCL_VAR   ref    V08 tmp2         
               [000011] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000010] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class

fgMorphTree BB01, STMT00002 (before)
               [000018] -A----------              *  ASG       long  
               [000017] -------N----              +--*  IND       long  
               [000016] ------------              |  \--*  ADD       byref 
               [000014] ------------              |     +--*  LCL_VAR   ref    V08 tmp2         
               [000015] ------------              |     \--*  CNS_INT   long   8
               [000009] ------------              \--*  CAST      long <- int
               [000008] ------------                 \--*  LCL_VAR   int    V01 arg1         
GenTreeNode creates assertion:
               [000017] ---X---N----              *  IND       long  
In BB01 New Local Constant Assertion: V08 != null index=#01, mask=0000000000000001

fgMorphTree BB01, STMT00003 (before)
               [000022] -A-XG-------              *  ASG       ref   
               [000021] ---XG--N----              +--*  INDEX     ref   
               [000006] ------------              |  +--*  LCL_VAR   ref    V07 tmp1         
               [000007] ------------              |  \--*  CNS_INT   int    0
               [000020] ------------              \--*  BOX       ref   
               [000019] ------------                 \--*  LCL_VAR   ref    V08 tmp2         
GenTreeNode creates assertion:
               [000119] ---X--------              *  ARR_LENGTH int   
In BB01 New Local Constant Assertion: V07 != null index=#02, mask=0000000000000002

Folding long operator with constant nodes into a constant:
               [000122] ------------              *  MUL       long  
               [000118] -----+------              +--*  CNS_INT   long   0
               [000121] -----+-N----              \--*  CNS_INT   long   8
Bashed to long constant:
               [000122] ------------              *  CNS_INT   long   0

Folding long operator with constant nodes into a constant:
               [000124] ------------              *  ADD       long  
               [000122] -----+------              +--*  CNS_INT   long   0
               [000123] -----+------              \--*  CNS_INT   long   16
Bashed to long constant:
               [000124] ------------              *  CNS_INT   long   16

fgMorphTree BB01, STMT00003 (after)
               [000022] -A-XG+------              *  ASG       ref   
               [000126] ---XG+-N----              +--*  COMMA     ref   
               [000120] ---X-+------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
               [000007] -----+------              |  |  +--*  CNS_INT   int    0
               [000119] ---X-+------              |  |  \--*  ARR_LENGTH int   
               [000006] -----+------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
               [000021] a---G+-N----              |  \--*  IND       ref   
               [000125] -----+------              |     \--*  ADD       byref 
               [000117] -----+------              |        +--*  LCL_VAR   ref    V07 tmp1         
               [000124] -----+------              |        \--*  CNS_INT   long   16 Fseq[#FirstElem]
               [000020] -----+------              \--*  BOX       ref   
               [000019] -----+------                 \--*  LCL_VAR   ref    V08 tmp2         

fgMorphTree BB01, STMT00004 (before)
               [000029] -AC---------              *  ASG       ref   
               [000028] D------N----              +--*  LCL_VAR   ref    V09 tmp3         
               [000027] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000026] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e class
Initializing arg info for 27.CALL:
ArgTable for 27.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 26.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]

Morphing args for 27.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000026] H----+------              *  CNS_INT(h) long   0xd1ffab1e class
Replaced with placeholder node:
               [000127] ----------L-              *  ARGPLACE  long  

Shuffled argument table:    rcx 
ArgTable for 27.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 26.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]


fgMorphTree BB01, STMT00004 (after)
               [000029] -AC--+------              *  ASG       ref   
               [000028] D----+-N----              +--*  LCL_VAR   ref    V09 tmp3         
               [000027] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000026] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class

fgMorphTree BB01, STMT00005 (before)
               [000035] -A----------              *  ASG       int   
               [000034] -------N----              +--*  IND       int   
               [000032] ------------              |  \--*  ADD       byref 
               [000030] ------------              |     +--*  LCL_VAR   ref    V09 tmp3         
               [000031] ------------              |     \--*  CNS_INT   long   8
               [000033] ------------              \--*  CAST      int <- int
               [000025] ------------                 \--*  LCL_VAR   short  V02 arg2         
GenTreeNode creates assertion:
               [000034] ---X---N----              *  IND       int   
In BB01 New Local Constant Assertion: V09 != null index=#03, mask=0000000000000004

fgMorphTree BB01, STMT00005 (after)
               [000035] -A-X-+------              *  ASG       int   
               [000034] ---X-+-N----              +--*  IND       int   
               [000032] -----+------              |  \--*  ADD       byref 
               [000030] -----+------              |     +--*  LCL_VAR   ref    V09 tmp3         
               [000031] -----+------              |     \--*  CNS_INT   long   8
               [000128] -----+------              \--*  CAST      int <- short <- int
               [000025] -----+------                 \--*  LCL_VAR   int    V02 arg2         

fgMorphTree BB01, STMT00006 (before)
               [000039] -A-XG-------              *  ASG       ref   
               [000038] ---XG--N----              +--*  INDEX     ref   
               [000023] ------------              |  +--*  LCL_VAR   ref    V07 tmp1         
               [000024] ------------              |  \--*  CNS_INT   int    1
               [000037] ------------              \--*  BOX       ref   
               [000036] ------------                 \--*  LCL_VAR   ref    V09 tmp3         

Folding long operator with constant nodes into a constant:
               [000134] ------------              *  MUL       long  
               [000130] -----+------              +--*  CNS_INT   long   1
               [000133] -----+-N----              \--*  CNS_INT   long   8
Bashed to long constant:
               [000134] ------------              *  CNS_INT   long   8

Folding long operator with constant nodes into a constant:
               [000136] ------------              *  ADD       long  
               [000134] -----+------              +--*  CNS_INT   long   8
               [000135] -----+------              \--*  CNS_INT   long   16
Bashed to long constant:
               [000136] ------------              *  CNS_INT   long   24

fgMorphTree BB01, STMT00006 (after)
               [000039] -A-XG+------              *  ASG       ref   
               [000138] ---XG+-N----              +--*  COMMA     ref   
               [000132] ---X-+------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
               [000024] -----+------              |  |  +--*  CNS_INT   int    1
               [000131] ---X-+------              |  |  \--*  ARR_LENGTH int   
               [000023] -----+------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
               [000038] a---G+-N----              |  \--*  IND       ref   
               [000137] -----+------              |     \--*  ADD       byref 
               [000129] -----+------              |        +--*  LCL_VAR   ref    V07 tmp1         
               [000136] -----+------              |        \--*  CNS_INT   long   24 Fseq[#ConstantIndex, #FirstElem]
               [000037] -----+------              \--*  BOX       ref   
               [000036] -----+------                 \--*  LCL_VAR   ref    V09 tmp3         

fgMorphTree BB01, STMT00007 (before)
               [000046] -AC---------              *  ASG       ref   
               [000045] D------N----              +--*  LCL_VAR   ref    V10 tmp4         
               [000044] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000043] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e class
Initializing arg info for 44.CALL:
ArgTable for 44.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 43.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]

Morphing args for 44.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000043] H----+------              *  CNS_INT(h) long   0xd1ffab1e class
Replaced with placeholder node:
               [000139] ----------L-              *  ARGPLACE  long  

Shuffled argument table:    rcx 
ArgTable for 44.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 43.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]


fgMorphTree BB01, STMT00007 (after)
               [000046] -AC--+------              *  ASG       ref   
               [000045] D----+-N----              +--*  LCL_VAR   ref    V10 tmp4         
               [000044] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000043] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class

fgMorphTree BB01, STMT00008 (before)
               [000052] -A----------              *  ASG       short 
               [000051] -------N----              +--*  IND       short 
               [000049] ------------              |  \--*  ADD       byref 
               [000047] ------------              |     +--*  LCL_VAR   ref    V10 tmp4         
               [000048] ------------              |     \--*  CNS_INT   long   8
               [000050] ------------              \--*  CAST      short <- int
               [000042] ------------                 \--*  LCL_VAR   ubyte  V03 arg3         
GenTreeNode creates assertion:
               [000051] ---X---N----              *  IND       short 
In BB01 New Local Constant Assertion: V10 != null index=#04, mask=0000000000000008

fgMorphTree BB01, STMT00008 (after)
               [000052] -A-X-+------              *  ASG       short 
               [000051] ---X-+-N----              +--*  IND       short 
               [000049] -----+------              |  \--*  ADD       byref 
               [000047] -----+------              |     +--*  LCL_VAR   ref    V10 tmp4         
               [000048] -----+------              |     \--*  CNS_INT   long   8
               [000140] -----+------              \--*  CAST      int <- ubyte <- int
               [000042] -----+------                 \--*  LCL_VAR   int    V03 arg3         

fgMorphTree BB01, STMT00009 (before)
               [000056] -A-XG-------              *  ASG       ref   
               [000055] ---XG--N----              +--*  INDEX     ref   
               [000040] ------------              |  +--*  LCL_VAR   ref    V07 tmp1         
               [000041] ------------              |  \--*  CNS_INT   int    2
               [000054] ------------              \--*  BOX       ref   
               [000053] ------------                 \--*  LCL_VAR   ref    V10 tmp4         

Folding long operator with constant nodes into a constant:
               [000146] ------------              *  MUL       long  
               [000142] -----+------              +--*  CNS_INT   long   2
               [000145] -----+-N----              \--*  CNS_INT   long   8
Bashed to long constant:
               [000146] ------------              *  CNS_INT   long   16

Folding long operator with constant nodes into a constant:
               [000148] ------------              *  ADD       long  
               [000146] -----+------              +--*  CNS_INT   long   16
               [000147] -----+------              \--*  CNS_INT   long   16
Bashed to long constant:
               [000148] ------------              *  CNS_INT   long   32

fgMorphTree BB01, STMT00009 (after)
               [000056] -A-XG+------              *  ASG       ref   
               [000150] ---XG+-N----              +--*  COMMA     ref   
               [000144] ---X-+------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
               [000041] -----+------              |  |  +--*  CNS_INT   int    2
               [000143] ---X-+------              |  |  \--*  ARR_LENGTH int   
               [000040] -----+------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
               [000055] a---G+-N----              |  \--*  IND       ref   
               [000149] -----+------              |     \--*  ADD       byref 
               [000141] -----+------              |        +--*  LCL_VAR   ref    V07 tmp1         
               [000148] -----+------              |        \--*  CNS_INT   long   32 Fseq[#ConstantIndex, #FirstElem]
               [000054] -----+------              \--*  BOX       ref   
               [000053] -----+------                 \--*  LCL_VAR   ref    V10 tmp4         

fgMorphTree BB01, STMT00010 (before)
               [000081] -ACXG-------              *  ASG       ref   
               [000080] D------N----              +--*  LCL_VAR   ref    V12 tmp6         
               [000079] -ACXG-------              \--*  QMARK     ref   
               [000071] Q-----------    if           +--*  EQ        int   
               [000070] ------------                 |  +--*  LCL_VAR   ref    V04 arg4         
               [000069] ------------                 |  \--*  CNS_INT   ref    null
               [000078] -ACXG-------    if           \--*  COLON     ref   
               [000076] -ACXG------- else               +--*  QMARK     ref   
               [000068] QA-X--------    if              |  +--*  NE        int   
               [000067] #--X--------                    |  |  +--*  IND       long  
               [000061] ------------                    |  |  |  \--*  LCL_VAR   ref    V04 arg4         
               [000065] -A----------                    |  |  \--*  COMMA     long  
               [000063] -A----------                    |  |     +--*  ASG       long  
               [000062] D------N----                    |  |     |  +--*  LCL_VAR   long   V11 tmp5         
               [000060] H-----------                    |  |     |  \--*  CNS_INT(h) long   0xd1ffab1e class
               [000064] ------------                    |  |     \--*  LCL_VAR   long   V11 tmp5         
               [000075] --CXG-------    if              |  \--*  COLON     ref   
               [000072] ------------ else               |     +--*  LCL_VAR   ref    V04 arg4         
               [000074] --CXG------- then               |     \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL
               [000066] ------------ arg0               |        +--*  LCL_VAR   long   V11 tmp5         
               [000073] ------------ arg1               |        \--*  LCL_VAR   ref    V04 arg4         
               [000077] ------------ then               \--*  LCL_VAR   ref    V04 arg4         
GenTreeNode creates assertion:
               [000067] #--X--------              *  IND       long  
In BB01 New Local Constant Assertion: V04 != null index=#05, mask=0000000000000010
GenTreeNode creates assertion:
               [000063] -A----------              *  ASG       long  
In BB01 New Local Constant Assertion: V11 == [00000000D1FFAB1E] index=#06, mask=0000000000000020
Initializing arg info for 74.CALL:
ArgTable for 74.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 66.LCL_VAR long (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 73.LCL_VAR ref (By ref), 1 reg: rdx, byteAlignment=8]

Morphing args for 74.CALL:
argSlots=2, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000066] -----+------              *  LCL_VAR   long   V11 tmp5         
Replaced with placeholder node:
               [000151] ----------L-              *  ARGPLACE  long  
Deferred argument ('rdx'):
               [000073] -----+------              *  LCL_VAR   ref    V04 arg4         
Replaced with placeholder node:
               [000152] ----------L-              *  ARGPLACE  ref   

Shuffled argument table:    rcx rdx 
ArgTable for 74.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 66.LCL_VAR long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 73.LCL_VAR ref (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]


fgMorphTree BB01, STMT00010 (after)
               [000081] -ACXG+------              *  ASG       ref   
               [000080] D----+-N----              +--*  LCL_VAR   ref    V12 tmp6         
               [000079] -ACXG+------              \--*  QMARK     ref   
               [000071] J----+-N----    if           +--*  EQ        int   
               [000070] -----+------                 |  +--*  LCL_VAR   ref    V04 arg4         
               [000069] -----+------                 |  \--*  CNS_INT   ref    null
               [000078] -ACXG+?-----    if           \--*  COLON     ref   
               [000076] -ACXG+?----- else               +--*  QMARK     ref   
               [000068] JA-X-+?N----    if              |  +--*  NE        int   
               [000067] #--X-+?-----                    |  |  +--*  IND       long  
               [000061] -----+?-----                    |  |  |  \--*  LCL_VAR   ref    V04 arg4         
               [000065] -A---+?-----                    |  |  \--*  COMMA     long  
               [000063] -A---+?-----                    |  |     +--*  ASG       long  
               [000062] D----+?N----                    |  |     |  +--*  LCL_VAR   long   V11 tmp5         
               [000060] H----+?-----                    |  |     |  \--*  CNS_INT(h) long   0xd1ffab1e class
               [000064] -----+?-----                    |  |     \--*  LCL_VAR   long   V11 tmp5         
               [000075] --CXG+?-----    if              |  \--*  COLON     ref   
               [000072] -----+?----- else               |     +--*  LCL_VAR   ref    V04 arg4         
               [000074] --CXG+?----- then               |     \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL
               [000066] -----+?----- arg0 in rcx        |        +--*  LCL_VAR   long   V11 tmp5         
               [000073] -----+?----- arg1 in rdx        |        \--*  LCL_VAR   ref    V04 arg4         
               [000077] -----+?----- then               \--*  LCL_VAR   ref    V04 arg4         

fgMorphTree BB01, STMT00011 (before)
               [000084] -A-XG-------              *  ASG       ref   
               [000083] ---XG--N----              +--*  INDEX     ref   
               [000057] ------------              |  +--*  LCL_VAR   ref    V07 tmp1         
               [000058] ------------              |  \--*  CNS_INT   int    3
               [000082] ------------              \--*  LCL_VAR   ref    V12 tmp6         

Folding long operator with constant nodes into a constant:
               [000158] ------------              *  MUL       long  
               [000154] -----+------              +--*  CNS_INT   long   3
               [000157] -----+-N----              \--*  CNS_INT   long   8
Bashed to long constant:
               [000158] ------------              *  CNS_INT   long   24

Folding long operator with constant nodes into a constant:
               [000160] ------------              *  ADD       long  
               [000158] -----+------              +--*  CNS_INT   long   24
               [000159] -----+------              \--*  CNS_INT   long   16
Bashed to long constant:
               [000160] ------------              *  CNS_INT   long   40

fgMorphTree BB01, STMT00011 (after)
               [000084] -A-XG+------              *  ASG       ref   
               [000162] ---XG+-N----              +--*  COMMA     ref   
               [000156] ---X-+------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
               [000058] -----+------              |  |  +--*  CNS_INT   int    3
               [000155] ---X-+------              |  |  \--*  ARR_LENGTH int   
               [000057] -----+------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
               [000083] a---G+-N----              |  \--*  IND       ref   
               [000161] -----+------              |     \--*  ADD       byref 
               [000153] -----+------              |        +--*  LCL_VAR   ref    V07 tmp1         
               [000160] -----+------              |        \--*  CNS_INT   long   40 Fseq[#ConstantIndex, #FirstElem]
               [000082] -----+------              \--*  LCL_VAR   ref    V12 tmp6         

fgMorphTree BB01, STMT00012 (before)
               [000109] -ACXG-------              *  ASG       ref   
               [000108] D------N----              +--*  LCL_VAR   ref    V14 tmp8         
               [000107] -ACXG-------              \--*  QMARK     ref   
               [000099] Q-----------    if           +--*  EQ        int   
               [000098] ------------                 |  +--*  LCL_VAR   ref    V05 arg5         
               [000097] ------------                 |  \--*  CNS_INT   ref    null
               [000106] -ACXG-------    if           \--*  COLON     ref   
               [000104] -ACXG------- else               +--*  QMARK     ref   
               [000096] QA-X--------    if              |  +--*  NE        int   
               [000095] #--X--------                    |  |  +--*  IND       long  
               [000089] ------------                    |  |  |  \--*  LCL_VAR   ref    V05 arg5         
               [000093] -A----------                    |  |  \--*  COMMA     long  
               [000091] -A----------                    |  |     +--*  ASG       long  
               [000090] D------N----                    |  |     |  +--*  LCL_VAR   long   V13 tmp7         
               [000088] H-----------                    |  |     |  \--*  CNS_INT(h) long   0xd1ffab1e class
               [000092] ------------                    |  |     \--*  LCL_VAR   long   V13 tmp7         
               [000103] --CXG-------    if              |  \--*  COLON     ref   
               [000100] ------------ else               |     +--*  LCL_VAR   ref    V05 arg5         
               [000102] --CXG------- then               |     \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL
               [000094] ------------ arg0               |        +--*  LCL_VAR   long   V13 tmp7         
               [000101] ------------ arg1               |        \--*  LCL_VAR   ref    V05 arg5         
               [000105] ------------ then               \--*  LCL_VAR   ref    V05 arg5         
GenTreeNode creates assertion:
               [000095] #--X--------              *  IND       long  
In BB01 New Local Constant Assertion: V05 != null index=#05, mask=0000000000000010
GenTreeNode creates assertion:
               [000091] -A----------              *  ASG       long  
In BB01 New Local Constant Assertion: V13 == [00000000D1FFAB1E] index=#06, mask=0000000000000020
Initializing arg info for 102.CALL:
ArgTable for 102.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 94.LCL_VAR long (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 101.LCL_VAR ref (By ref), 1 reg: rdx, byteAlignment=8]

Morphing args for 102.CALL:
argSlots=2, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000094] -----+------              *  LCL_VAR   long   V13 tmp7         
Replaced with placeholder node:
               [000163] ----------L-              *  ARGPLACE  long  
Deferred argument ('rdx'):
               [000101] -----+------              *  LCL_VAR   ref    V05 arg5         
Replaced with placeholder node:
               [000164] ----------L-              *  ARGPLACE  ref   

Shuffled argument table:    rcx rdx 
ArgTable for 102.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 94.LCL_VAR long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 101.LCL_VAR ref (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]


fgMorphTree BB01, STMT00012 (after)
               [000109] -ACXG+------              *  ASG       ref   
               [000108] D----+-N----              +--*  LCL_VAR   ref    V14 tmp8         
               [000107] -ACXG+------              \--*  QMARK     ref   
               [000099] J----+-N----    if           +--*  EQ        int   
               [000098] -----+------                 |  +--*  LCL_VAR   ref    V05 arg5         
               [000097] -----+------                 |  \--*  CNS_INT   ref    null
               [000106] -ACXG+?-----    if           \--*  COLON     ref   
               [000104] -ACXG+?----- else               +--*  QMARK     ref   
               [000096] JA-X-+?N----    if              |  +--*  NE        int   
               [000095] #--X-+?-----                    |  |  +--*  IND       long  
               [000089] -----+?-----                    |  |  |  \--*  LCL_VAR   ref    V05 arg5         
               [000093] -A---+?-----                    |  |  \--*  COMMA     long  
               [000091] -A---+?-----                    |  |     +--*  ASG       long  
               [000090] D----+?N----                    |  |     |  +--*  LCL_VAR   long   V13 tmp7         
               [000088] H----+?-----                    |  |     |  \--*  CNS_INT(h) long   0xd1ffab1e class
               [000092] -----+?-----                    |  |     \--*  LCL_VAR   long   V13 tmp7         
               [000103] --CXG+?-----    if              |  \--*  COLON     ref   
               [000100] -----+?----- else               |     +--*  LCL_VAR   ref    V05 arg5         
               [000102] --CXG+?----- then               |     \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL
               [000094] -----+?----- arg0 in rcx        |        +--*  LCL_VAR   long   V13 tmp7         
               [000101] -----+?----- arg1 in rdx        |        \--*  LCL_VAR   ref    V05 arg5         
               [000105] -----+?----- then               \--*  LCL_VAR   ref    V05 arg5         

fgMorphTree BB01, STMT00013 (before)
               [000112] -A-XG-------              *  ASG       ref   
               [000111] ---XG--N----              +--*  INDEX     ref   
               [000085] ------------              |  +--*  LCL_VAR   ref    V07 tmp1         
               [000086] ------------              |  \--*  CNS_INT   int    4
               [000110] ------------              \--*  LCL_VAR   ref    V14 tmp8         

Folding long operator with constant nodes into a constant:
               [000170] ------------              *  MUL       long  
               [000166] -----+------              +--*  CNS_INT   long   4
               [000169] -----+-N----              \--*  CNS_INT   long   8
Bashed to long constant:
               [000170] ------------              *  CNS_INT   long   32

Folding long operator with constant nodes into a constant:
               [000172] ------------              *  ADD       long  
               [000170] -----+------              +--*  CNS_INT   long   32
               [000171] -----+------              \--*  CNS_INT   long   16
Bashed to long constant:
               [000172] ------------              *  CNS_INT   long   48

fgMorphTree BB01, STMT00013 (after)
               [000112] -A-XG+------              *  ASG       ref   
               [000174] ---XG+-N----              +--*  COMMA     ref   
               [000168] ---X-+------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
               [000086] -----+------              |  |  +--*  CNS_INT   int    4
               [000167] ---X-+------              |  |  \--*  ARR_LENGTH int   
               [000085] -----+------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
               [000111] a---G+-N----              |  \--*  IND       ref   
               [000173] -----+------              |     \--*  ADD       byref 
               [000165] -----+------              |        +--*  LCL_VAR   ref    V07 tmp1         
               [000172] -----+------              |        \--*  CNS_INT   long   48 Fseq[#ConstantIndex, #FirstElem]
               [000110] -----+------              \--*  LCL_VAR   ref    V14 tmp8         

fgMorphTree BB01, STMT00014 (before)
               [000113] ------------              *  RETURN    ref   
               [000005] ------------              \--*  LCL_VAR   ref    V07 tmp1         

Expanding CastInstOf qmark in BB01 (before)

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..037)        (return)                     i label target hascall idxlen new[] newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..037) (return), preds={} succs={}

***** BB01
STMT00000 (IL 0x000...0x00F)
               [000004] -ACXG+------              *  ASG       ref   
               [000003] D----+-N----              +--*  LCL_VAR   ref    V07 tmp1         
               [000002] --CXG+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWARR_1_OBJ
               [000001] H----+------ arg0 in rcx     +--*  CNS_INT(h) long   0xd1ffab1e class
               [000000] -----+------ arg1 in rdx     \--*  CNS_INT   long   5

***** BB01
STMT00001 (IL   ???...  ???)
               [000013] -AC--+------              *  ASG       ref   
               [000012] D----+-N----              +--*  LCL_VAR   ref    V08 tmp2         
               [000011] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000010] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class

***** BB01
STMT00002 (IL   ???...  ???)
               [000018] -A-X-+------              *  ASG       long  
               [000017] ---X-+-N----              +--*  IND       long  
               [000016] -----+------              |  \--*  ADD       byref 
               [000014] -----+------              |     +--*  LCL_VAR   ref    V08 tmp2         
               [000015] -----+------              |     \--*  CNS_INT   long   8
               [000009] -----+------              \--*  CAST      long <- int
               [000008] -----+------                 \--*  LCL_VAR   int    V01 arg1         

***** BB01
STMT00003 (IL   ???...  ???)
               [000022] -A-XG+------              *  ASG       ref   
               [000126] ---XG+-N----              +--*  COMMA     ref   
               [000120] ---X-+------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
               [000007] -----+------              |  |  +--*  CNS_INT   int    0
               [000119] ---X-+------              |  |  \--*  ARR_LENGTH int   
               [000006] -----+------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
               [000021] a---G+-N----              |  \--*  IND       ref   
               [000125] -----+------              |     \--*  ADD       byref 
               [000117] -----+------              |        +--*  LCL_VAR   ref    V07 tmp1         
               [000124] -----+------              |        \--*  CNS_INT   long   16 Fseq[#FirstElem]
               [000020] -----+------              \--*  BOX       ref   
               [000019] -----+------                 \--*  LCL_VAR   ref    V08 tmp2         

***** BB01
STMT00004 (IL   ???...0x018)
               [000029] -AC--+------              *  ASG       ref   
               [000028] D----+-N----              +--*  LCL_VAR   ref    V09 tmp3         
               [000027] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000026] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class

***** BB01
STMT00005 (IL   ???...  ???)
               [000035] -A-X-+------              *  ASG       int   
               [000034] ---X-+-N----              +--*  IND       int   
               [000032] -----+------              |  \--*  ADD       byref 
               [000030] -----+------              |     +--*  LCL_VAR   ref    V09 tmp3         
               [000031] -----+------              |     \--*  CNS_INT   long   8
               [000128] -----+------              \--*  CAST      int <- short <- int
               [000025] -----+------                 \--*  LCL_VAR   int    V02 arg2         

***** BB01
STMT00006 (IL   ???...  ???)
               [000039] -A-XG+------              *  ASG       ref   
               [000138] ---XG+-N----              +--*  COMMA     ref   
               [000132] ---X-+------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
               [000024] -----+------              |  |  +--*  CNS_INT   int    1
               [000131] ---X-+------              |  |  \--*  ARR_LENGTH int   
               [000023] -----+------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
               [000038] a---G+-N----              |  \--*  IND       ref   
               [000137] -----+------              |     \--*  ADD       byref 
               [000129] -----+------              |        +--*  LCL_VAR   ref    V07 tmp1         
               [000136] -----+------              |        \--*  CNS_INT   long   24 Fseq[#ConstantIndex, #FirstElem]
               [000037] -----+------              \--*  BOX       ref   
               [000036] -----+------                 \--*  LCL_VAR   ref    V09 tmp3         

***** BB01
STMT00007 (IL   ???...0x021)
               [000046] -AC--+------              *  ASG       ref   
               [000045] D----+-N----              +--*  LCL_VAR   ref    V10 tmp4         
               [000044] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000043] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class

***** BB01
STMT00008 (IL   ???...  ???)
               [000052] -A-X-+------              *  ASG       short 
               [000051] ---X-+-N----              +--*  IND       short 
               [000049] -----+------              |  \--*  ADD       byref 
               [000047] -----+------              |     +--*  LCL_VAR   ref    V10 tmp4         
               [000048] -----+------              |     \--*  CNS_INT   long   8
               [000140] -----+------              \--*  CAST      int <- ubyte <- int
               [000042] -----+------                 \--*  LCL_VAR   int    V03 arg3         

***** BB01
STMT00009 (IL   ???...  ???)
               [000056] -A-XG+------              *  ASG       ref   
               [000150] ---XG+-N----              +--*  COMMA     ref   
               [000144] ---X-+------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
               [000041] -----+------              |  |  +--*  CNS_INT   int    2
               [000143] ---X-+------              |  |  \--*  ARR_LENGTH int   
               [000040] -----+------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
               [000055] a---G+-N----              |  \--*  IND       ref   
               [000149] -----+------              |     \--*  ADD       byref 
               [000141] -----+------              |        +--*  LCL_VAR   ref    V07 tmp1         
               [000148] -----+------              |        \--*  CNS_INT   long   32 Fseq[#ConstantIndex, #FirstElem]
               [000054] -----+------              \--*  BOX       ref   
               [000053] -----+------                 \--*  LCL_VAR   ref    V10 tmp4         

***** BB01
STMT00010 (IL   ???...0x02B)
               [000081] -ACXG+------              *  ASG       ref   
               [000080] D----+-N----              +--*  LCL_VAR   ref    V12 tmp6         
               [000079] -ACXG+------              \--*  QMARK     ref   
               [000071] J----+-N----    if           +--*  EQ        int   
               [000070] -----+------                 |  +--*  LCL_VAR   ref    V04 arg4         
               [000069] -----+------                 |  \--*  CNS_INT   ref    null
               [000078] -ACXG+?-----    if           \--*  COLON     ref   
               [000076] -ACXG+?----- else               +--*  QMARK     ref   
               [000068] JA-X-+?N----    if              |  +--*  NE        int   
               [000067] #--X-+?-----                    |  |  +--*  IND       long  
               [000061] -----+?-----                    |  |  |  \--*  LCL_VAR   ref    V04 arg4         
               [000065] -A---+?-----                    |  |  \--*  COMMA     long  
               [000063] -A---+?-----                    |  |     +--*  ASG       long  
               [000062] D----+?N----                    |  |     |  +--*  LCL_VAR   long   V11 tmp5         
               [000060] H----+?-----                    |  |     |  \--*  CNS_INT(h) long   0xd1ffab1e class
               [000064] -----+?-----                    |  |     \--*  LCL_VAR   long   V11 tmp5         
               [000075] --CXG+?-----    if              |  \--*  COLON     ref   
               [000072] -----+?----- else               |     +--*  LCL_VAR   ref    V04 arg4         
               [000074] --CXG+?----- then               |     \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL
               [000066] -----+?----- arg0 in rcx        |        +--*  LCL_VAR   long   V11 tmp5         
               [000073] -----+?----- arg1 in rdx        |        \--*  LCL_VAR   ref    V04 arg4         
               [000077] -----+?----- then               \--*  LCL_VAR   ref    V04 arg4         

***** BB01
STMT00011 (IL   ???...  ???)
               [000084] -A-XG+------              *  ASG       ref   
               [000162] ---XG+-N----              +--*  COMMA     ref   
               [000156] ---X-+------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
               [000058] -----+------              |  |  +--*  CNS_INT   int    3
               [000155] ---X-+------              |  |  \--*  ARR_LENGTH int   
               [000057] -----+------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
               [000083] a---G+-N----              |  \--*  IND       ref   
               [000161] -----+------              |     \--*  ADD       byref 
               [000153] -----+------              |        +--*  LCL_VAR   ref    V07 tmp1         
               [000160] -----+------              |        \--*  CNS_INT   long   40 Fseq[#ConstantIndex, #FirstElem]
               [000082] -----+------              \--*  LCL_VAR   ref    V12 tmp6         

***** BB01
STMT00012 (IL   ???...0x035)
               [000109] -ACXG+------              *  ASG       ref   
               [000108] D----+-N----              +--*  LCL_VAR   ref    V14 tmp8         
               [000107] -ACXG+------              \--*  QMARK     ref   
               [000099] J----+-N----    if           +--*  EQ        int   
               [000098] -----+------                 |  +--*  LCL_VAR   ref    V05 arg5         
               [000097] -----+------                 |  \--*  CNS_INT   ref    null
               [000106] -ACXG+?-----    if           \--*  COLON     ref   
               [000104] -ACXG+?----- else               +--*  QMARK     ref   
               [000096] JA-X-+?N----    if              |  +--*  NE        int   
               [000095] #--X-+?-----                    |  |  +--*  IND       long  
               [000089] -----+?-----                    |  |  |  \--*  LCL_VAR   ref    V05 arg5         
               [000093] -A---+?-----                    |  |  \--*  COMMA     long  
               [000091] -A---+?-----                    |  |     +--*  ASG       long  
               [000090] D----+?N----                    |  |     |  +--*  LCL_VAR   long   V13 tmp7         
               [000088] H----+?-----                    |  |     |  \--*  CNS_INT(h) long   0xd1ffab1e class
               [000092] -----+?-----                    |  |     \--*  LCL_VAR   long   V13 tmp7         
               [000103] --CXG+?-----    if              |  \--*  COLON     ref   
               [000100] -----+?----- else               |     +--*  LCL_VAR   ref    V05 arg5         
               [000102] --CXG+?----- then               |     \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL
               [000094] -----+?----- arg0 in rcx        |        +--*  LCL_VAR   long   V13 tmp7         
               [000101] -----+?----- arg1 in rdx        |        \--*  LCL_VAR   ref    V05 arg5         
               [000105] -----+?----- then               \--*  LCL_VAR   ref    V05 arg5         

***** BB01
STMT00013 (IL   ???...  ???)
               [000112] -A-XG+------              *  ASG       ref   
               [000174] ---XG+-N----              +--*  COMMA     ref   
               [000168] ---X-+------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
               [000086] -----+------              |  |  +--*  CNS_INT   int    4
               [000167] ---X-+------              |  |  \--*  ARR_LENGTH int   
               [000085] -----+------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
               [000111] a---G+-N----              |  \--*  IND       ref   
               [000173] -----+------              |     \--*  ADD       byref 
               [000165] -----+------              |        +--*  LCL_VAR   ref    V07 tmp1         
               [000172] -----+------              |        \--*  CNS_INT   long   48 Fseq[#ConstantIndex, #FirstElem]
               [000110] -----+------              \--*  LCL_VAR   ref    V14 tmp8         

***** BB01
STMT00014 (IL   ???...0x036)
               [000113] -----+------              *  RETURN    ref   
               [000005] -----+------              \--*  LCL_VAR   ref    V07 tmp1         

-------------------------------------------------------------------------------------------------------------------
New Basic Block BB02 [0001] created.
New Basic Block BB03 [0002] created.
New Basic Block BB04 [0003] created.
New Basic Block BB05 [0004] created.
New Basic Block BB06 [0005] created.

Removing statement STMT00010 (IL   ???...0x02B)
               [000081] -ACXG+------              *  ASG       ref   
               [000080] D----+-N----              +--*  LCL_VAR   ref    V12 tmp6         
               [000079] -ACXG+------              \--*  QMARK     ref   
               [000071] J----+-N----    if           +--*  EQ        int   
               [000070] -----+------                 |  +--*  LCL_VAR   ref    V04 arg4         
               [000069] -----+------                 |  \--*  CNS_INT   ref    null
               [000078] -ACXG+?-----    if           \--*  COLON     ref   
               [000076] -ACXG+?----- else               +--*  QMARK     ref   
               [000068] JA-X-+?N----    if              |  +--*  EQ        int   
               [000067] #--X-+?-----                    |  |  +--*  IND       long  
               [000061] -----+?-----                    |  |  |  \--*  LCL_VAR   ref    V04 arg4         
               [000065] -A---+?-----                    |  |  \--*  COMMA     long  
               [000063] -A---+?-----                    |  |     +--*  ASG       long  
               [000062] D----+?N----                    |  |     |  +--*  LCL_VAR   long   V11 tmp5         
               [000060] H----+?-----                    |  |     |  \--*  CNS_INT(h) long   0xd1ffab1e class
               [000064] -----+?-----                    |  |     \--*  LCL_VAR   long   V11 tmp5         
               [000075] --CXG+?-----    if              |  \--*  COLON     ref   
               [000072] -----+?----- else               |     +--*  LCL_VAR   ref    V04 arg4         
               [000074] --CXG+?----- then               |     \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL
               [000066] -----+?----- arg0 in rcx        |        +--*  LCL_VAR   long   V11 tmp5         
               [000073] -----+?----- arg1 in rdx        |        \--*  LCL_VAR   ref    V04 arg4         
               [000077] -----+?----- then               \--*  LCL_VAR   ref    V04 arg4         
 in BB01 as useless:


Expanding CastInstOf qmark in BB01 (after)

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..???)                                     i label target hascall idxlen new[] newobj 
BB06 [0005]  1       BB01                  1       [???..???)                                     i 
BB05 [0004]  1       BB06                  1       [???..???)-> BB02 ( cond )                     i 
BB04 [0003]  1       BB05                  0.50    [???..???)-> BB02 ( cond )                     i 
BB03 [0002]  1       BB04                  0.25    [???..???)                                     i 
BB02 [0001]  3       BB03,BB04,BB05        1       [???..037)        (return)                     i label target hascall idxlen new[] newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..???), preds={} succs={BB06}

***** BB01
STMT00000 (IL 0x000...0x00F)
               [000004] -ACXG+------              *  ASG       ref   
               [000003] D----+-N----              +--*  LCL_VAR   ref    V07 tmp1         
               [000002] --CXG+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWARR_1_OBJ
               [000001] H----+------ arg0 in rcx     +--*  CNS_INT(h) long   0xd1ffab1e class
               [000000] -----+------ arg1 in rdx     \--*  CNS_INT   long   5

***** BB01
STMT00001 (IL   ???...  ???)
               [000013] -AC--+------              *  ASG       ref   
               [000012] D----+-N----              +--*  LCL_VAR   ref    V08 tmp2         
               [000011] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000010] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class

***** BB01
STMT00002 (IL   ???...  ???)
               [000018] -A-X-+------              *  ASG       long  
               [000017] ---X-+-N----              +--*  IND       long  
               [000016] -----+------              |  \--*  ADD       byref 
               [000014] -----+------              |     +--*  LCL_VAR   ref    V08 tmp2         
               [000015] -----+------              |     \--*  CNS_INT   long   8
               [000009] -----+------              \--*  CAST      long <- int
               [000008] -----+------                 \--*  LCL_VAR   int    V01 arg1         

***** BB01
STMT00003 (IL   ???...  ???)
               [000022] -A-XG+------              *  ASG       ref   
               [000126] ---XG+-N----              +--*  COMMA     ref   
               [000120] ---X-+------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
               [000007] -----+------              |  |  +--*  CNS_INT   int    0
               [000119] ---X-+------              |  |  \--*  ARR_LENGTH int   
               [000006] -----+------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
               [000021] a---G+-N----              |  \--*  IND       ref   
               [000125] -----+------              |     \--*  ADD       byref 
               [000117] -----+------              |        +--*  LCL_VAR   ref    V07 tmp1         
               [000124] -----+------              |        \--*  CNS_INT   long   16 Fseq[#FirstElem]
               [000020] -----+------              \--*  BOX       ref   
               [000019] -----+------                 \--*  LCL_VAR   ref    V08 tmp2         

***** BB01
STMT00004 (IL   ???...0x018)
               [000029] -AC--+------              *  ASG       ref   
               [000028] D----+-N----              +--*  LCL_VAR   ref    V09 tmp3         
               [000027] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000026] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class

***** BB01
STMT00005 (IL   ???...  ???)
               [000035] -A-X-+------              *  ASG       int   
               [000034] ---X-+-N----              +--*  IND       int   
               [000032] -----+------              |  \--*  ADD       byref 
               [000030] -----+------              |     +--*  LCL_VAR   ref    V09 tmp3         
               [000031] -----+------              |     \--*  CNS_INT   long   8
               [000128] -----+------              \--*  CAST      int <- short <- int
               [000025] -----+------                 \--*  LCL_VAR   int    V02 arg2         

***** BB01
STMT00006 (IL   ???...  ???)
               [000039] -A-XG+------              *  ASG       ref   
               [000138] ---XG+-N----              +--*  COMMA     ref   
               [000132] ---X-+------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
               [000024] -----+------              |  |  +--*  CNS_INT   int    1
               [000131] ---X-+------              |  |  \--*  ARR_LENGTH int   
               [000023] -----+------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
               [000038] a---G+-N----              |  \--*  IND       ref   
               [000137] -----+------              |     \--*  ADD       byref 
               [000129] -----+------              |        +--*  LCL_VAR   ref    V07 tmp1         
               [000136] -----+------              |        \--*  CNS_INT   long   24 Fseq[#ConstantIndex, #FirstElem]
               [000037] -----+------              \--*  BOX       ref   
               [000036] -----+------                 \--*  LCL_VAR   ref    V09 tmp3         

***** BB01
STMT00007 (IL   ???...0x021)
               [000046] -AC--+------              *  ASG       ref   
               [000045] D----+-N----              +--*  LCL_VAR   ref    V10 tmp4         
               [000044] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000043] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class

***** BB01
STMT00008 (IL   ???...  ???)
               [000052] -A-X-+------              *  ASG       short 
               [000051] ---X-+-N----              +--*  IND       short 
               [000049] -----+------              |  \--*  ADD       byref 
               [000047] -----+------              |     +--*  LCL_VAR   ref    V10 tmp4         
               [000048] -----+------              |     \--*  CNS_INT   long   8
               [000140] -----+------              \--*  CAST      int <- ubyte <- int
               [000042] -----+------                 \--*  LCL_VAR   int    V03 arg3         

***** BB01
STMT00009 (IL   ???...  ???)
               [000056] -A-XG+------              *  ASG       ref   
               [000150] ---XG+-N----              +--*  COMMA     ref   
               [000144] ---X-+------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
               [000041] -----+------              |  |  +--*  CNS_INT   int    2
               [000143] ---X-+------              |  |  \--*  ARR_LENGTH int   
               [000040] -----+------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
               [000055] a---G+-N----              |  \--*  IND       ref   
               [000149] -----+------              |     \--*  ADD       byref 
               [000141] -----+------              |        +--*  LCL_VAR   ref    V07 tmp1         
               [000148] -----+------              |        \--*  CNS_INT   long   32 Fseq[#ConstantIndex, #FirstElem]
               [000054] -----+------              \--*  BOX       ref   
               [000053] -----+------                 \--*  LCL_VAR   ref    V10 tmp4         

------------ BB06 [???..???), preds={BB01} succs={BB05}

***** BB06
STMT00017 (IL   ???...  ???)
               [000178] -A----------              *  ASG       ref   
               [000177] D------N----              +--*  LCL_VAR   ref    V12 tmp6         
               [000077] -----+?-----              \--*  LCL_VAR   ref    V04 arg4         

------------ BB05 [???..???) -> BB02 (cond), preds={BB06} succs={BB04,BB02}

***** BB05
STMT00015 (IL   ???...  ???)
               [000175] ------------              *  JTRUE     void  
               [000071] J----+-N----              \--*  EQ        int   
               [000070] -----+------                 +--*  LCL_VAR   ref    V04 arg4         
               [000069] -----+------                 \--*  CNS_INT   ref    null

------------ BB04 [???..???) -> BB02 (cond), preds={BB05} succs={BB03,BB02}

***** BB04
STMT00016 (IL   ???...  ???)
               [000176] -A-X--------              *  JTRUE     void  
               [000068] JA-X-+?N----              \--*  EQ        int   
               [000067] #--X-+?-----                 +--*  IND       long  
               [000061] -----+?-----                 |  \--*  LCL_VAR   ref    V04 arg4         
               [000065] -A---+?-----                 \--*  COMMA     long  
               [000063] -A---+?-----                    +--*  ASG       long  
               [000062] D----+?N----                    |  +--*  LCL_VAR   long   V11 tmp5         
               [000060] H----+?-----                    |  \--*  CNS_INT(h) long   0xd1ffab1e class
               [000064] -----+?-----                    \--*  LCL_VAR   long   V11 tmp5         

------------ BB03 [???..???), preds={BB04} succs={BB02}

***** BB03
STMT00018 (IL   ???...  ???)
               [000180] -ACXG-------              *  ASG       ref   
               [000179] D------N----              +--*  LCL_VAR   ref    V12 tmp6         
               [000074] --CXG+?-----              \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL
               [000066] -----+?----- arg0 in rcx     +--*  LCL_VAR   long   V11 tmp5         
               [000073] -----+?----- arg1 in rdx     \--*  LCL_VAR   ref    V04 arg4         

------------ BB02 [???..037) (return), preds={BB03,BB04,BB05} succs={}

***** BB02
STMT00011 (IL   ???...  ???)
               [000084] -A-XG+------              *  ASG       ref   
               [000162] ---XG+-N----              +--*  COMMA     ref   
               [000156] ---X-+------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
               [000058] -----+------              |  |  +--*  CNS_INT   int    3
               [000155] ---X-+------              |  |  \--*  ARR_LENGTH int   
               [000057] -----+------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
               [000083] a---G+-N----              |  \--*  IND       ref   
               [000161] -----+------              |     \--*  ADD       byref 
               [000153] -----+------              |        +--*  LCL_VAR   ref    V07 tmp1         
               [000160] -----+------              |        \--*  CNS_INT   long   40 Fseq[#ConstantIndex, #FirstElem]
               [000082] -----+------              \--*  LCL_VAR   ref    V12 tmp6         

***** BB02
STMT00012 (IL   ???...0x035)
               [000109] -ACXG+------              *  ASG       ref   
               [000108] D----+-N----              +--*  LCL_VAR   ref    V14 tmp8         
               [000107] -ACXG+------              \--*  QMARK     ref   
               [000099] J----+-N----    if           +--*  EQ        int   
               [000098] -----+------                 |  +--*  LCL_VAR   ref    V05 arg5         
               [000097] -----+------                 |  \--*  CNS_INT   ref    null
               [000106] -ACXG+?-----    if           \--*  COLON     ref   
               [000104] -ACXG+?----- else               +--*  QMARK     ref   
               [000096] JA-X-+?N----    if              |  +--*  NE        int   
               [000095] #--X-+?-----                    |  |  +--*  IND       long  
               [000089] -----+?-----                    |  |  |  \--*  LCL_VAR   ref    V05 arg5         
               [000093] -A---+?-----                    |  |  \--*  COMMA     long  
               [000091] -A---+?-----                    |  |     +--*  ASG       long  
               [000090] D----+?N----                    |  |     |  +--*  LCL_VAR   long   V13 tmp7         
               [000088] H----+?-----                    |  |     |  \--*  CNS_INT(h) long   0xd1ffab1e class
               [000092] -----+?-----                    |  |     \--*  LCL_VAR   long   V13 tmp7         
               [000103] --CXG+?-----    if              |  \--*  COLON     ref   
               [000100] -----+?----- else               |     +--*  LCL_VAR   ref    V05 arg5         
               [000102] --CXG+?----- then               |     \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL
               [000094] -----+?----- arg0 in rcx        |        +--*  LCL_VAR   long   V13 tmp7         
               [000101] -----+?----- arg1 in rdx        |        \--*  LCL_VAR   ref    V05 arg5         
               [000105] -----+?----- then               \--*  LCL_VAR   ref    V05 arg5         

***** BB02
STMT00013 (IL   ???...  ???)
               [000112] -A-XG+------              *  ASG       ref   
               [000174] ---XG+-N----              +--*  COMMA     ref   
               [000168] ---X-+------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
               [000086] -----+------              |  |  +--*  CNS_INT   int    4
               [000167] ---X-+------              |  |  \--*  ARR_LENGTH int   
               [000085] -----+------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
               [000111] a---G+-N----              |  \--*  IND       ref   
               [000173] -----+------              |     \--*  ADD       byref 
               [000165] -----+------              |        +--*  LCL_VAR   ref    V07 tmp1         
               [000172] -----+------              |        \--*  CNS_INT   long   48 Fseq[#ConstantIndex, #FirstElem]
               [000110] -----+------              \--*  LCL_VAR   ref    V14 tmp8         

***** BB02
STMT00014 (IL   ???...0x036)
               [000113] -----+------              *  RETURN    ref   
               [000005] -----+------              \--*  LCL_VAR   ref    V07 tmp1         

-------------------------------------------------------------------------------------------------------------------

Expanding CastInstOf qmark in BB02 (before)

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB02 [0001]  3       BB03,BB04,BB05        1       [???..037)        (return)                     i label target hascall idxlen new[] newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB02 [???..037) (return), preds={BB03,BB04,BB05} succs={}

***** BB02
STMT00011 (IL   ???...  ???)
               [000084] -A-XG+------              *  ASG       ref   
               [000162] ---XG+-N----              +--*  COMMA     ref   
               [000156] ---X-+------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
               [000058] -----+------              |  |  +--*  CNS_INT   int    3
               [000155] ---X-+------              |  |  \--*  ARR_LENGTH int   
               [000057] -----+------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
               [000083] a---G+-N----              |  \--*  IND       ref   
               [000161] -----+------              |     \--*  ADD       byref 
               [000153] -----+------              |        +--*  LCL_VAR   ref    V07 tmp1         
               [000160] -----+------              |        \--*  CNS_INT   long   40 Fseq[#ConstantIndex, #FirstElem]
               [000082] -----+------              \--*  LCL_VAR   ref    V12 tmp6         

***** BB02
STMT00012 (IL   ???...0x035)
               [000109] -ACXG+------              *  ASG       ref   
               [000108] D----+-N----              +--*  LCL_VAR   ref    V14 tmp8         
               [000107] -ACXG+------              \--*  QMARK     ref   
               [000099] J----+-N----    if           +--*  EQ        int   
               [000098] -----+------                 |  +--*  LCL_VAR   ref    V05 arg5         
               [000097] -----+------                 |  \--*  CNS_INT   ref    null
               [000106] -ACXG+?-----    if           \--*  COLON     ref   
               [000104] -ACXG+?----- else               +--*  QMARK     ref   
               [000096] JA-X-+?N----    if              |  +--*  NE        int   
               [000095] #--X-+?-----                    |  |  +--*  IND       long  
               [000089] -----+?-----                    |  |  |  \--*  LCL_VAR   ref    V05 arg5         
               [000093] -A---+?-----                    |  |  \--*  COMMA     long  
               [000091] -A---+?-----                    |  |     +--*  ASG       long  
               [000090] D----+?N----                    |  |     |  +--*  LCL_VAR   long   V13 tmp7         
               [000088] H----+?-----                    |  |     |  \--*  CNS_INT(h) long   0xd1ffab1e class
               [000092] -----+?-----                    |  |     \--*  LCL_VAR   long   V13 tmp7         
               [000103] --CXG+?-----    if              |  \--*  COLON     ref   
               [000100] -----+?----- else               |     +--*  LCL_VAR   ref    V05 arg5         
               [000102] --CXG+?----- then               |     \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL
               [000094] -----+?----- arg0 in rcx        |        +--*  LCL_VAR   long   V13 tmp7         
               [000101] -----+?----- arg1 in rdx        |        \--*  LCL_VAR   ref    V05 arg5         
               [000105] -----+?----- then               \--*  LCL_VAR   ref    V05 arg5         

***** BB02
STMT00013 (IL   ???...  ???)
               [000112] -A-XG+------              *  ASG       ref   
               [000174] ---XG+-N----              +--*  COMMA     ref   
               [000168] ---X-+------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
               [000086] -----+------              |  |  +--*  CNS_INT   int    4
               [000167] ---X-+------              |  |  \--*  ARR_LENGTH int   
               [000085] -----+------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
               [000111] a---G+-N----              |  \--*  IND       ref   
               [000173] -----+------              |     \--*  ADD       byref 
               [000165] -----+------              |        +--*  LCL_VAR   ref    V07 tmp1         
               [000172] -----+------              |        \--*  CNS_INT   long   48 Fseq[#ConstantIndex, #FirstElem]
               [000110] -----+------              \--*  LCL_VAR   ref    V14 tmp8         

***** BB02
STMT00014 (IL   ???...0x036)
               [000113] -----+------              *  RETURN    ref   
               [000005] -----+------              \--*  LCL_VAR   ref    V07 tmp1         

-------------------------------------------------------------------------------------------------------------------
New Basic Block BB07 [0006] created.
New Basic Block BB08 [0007] created.
New Basic Block BB09 [0008] created.
New Basic Block BB10 [0009] created.
New Basic Block BB11 [0010] created.

Removing statement STMT00012 (IL   ???...0x035)
               [000109] -ACXG+------              *  ASG       ref   
               [000108] D----+-N----              +--*  LCL_VAR   ref    V14 tmp8         
               [000107] -ACXG+------              \--*  QMARK     ref   
               [000099] J----+-N----    if           +--*  EQ        int   
               [000098] -----+------                 |  +--*  LCL_VAR   ref    V05 arg5         
               [000097] -----+------                 |  \--*  CNS_INT   ref    null
               [000106] -ACXG+?-----    if           \--*  COLON     ref   
               [000104] -ACXG+?----- else               +--*  QMARK     ref   
               [000096] JA-X-+?N----    if              |  +--*  EQ        int   
               [000095] #--X-+?-----                    |  |  +--*  IND       long  
               [000089] -----+?-----                    |  |  |  \--*  LCL_VAR   ref    V05 arg5         
               [000093] -A---+?-----                    |  |  \--*  COMMA     long  
               [000091] -A---+?-----                    |  |     +--*  ASG       long  
               [000090] D----+?N----                    |  |     |  +--*  LCL_VAR   long   V13 tmp7         
               [000088] H----+?-----                    |  |     |  \--*  CNS_INT(h) long   0xd1ffab1e class
               [000092] -----+?-----                    |  |     \--*  LCL_VAR   long   V13 tmp7         
               [000103] --CXG+?-----    if              |  \--*  COLON     ref   
               [000100] -----+?----- else               |     +--*  LCL_VAR   ref    V05 arg5         
               [000102] --CXG+?----- then               |     \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL
               [000094] -----+?----- arg0 in rcx        |        +--*  LCL_VAR   long   V13 tmp7         
               [000101] -----+?----- arg1 in rdx        |        \--*  LCL_VAR   ref    V05 arg5         
               [000105] -----+?----- then               \--*  LCL_VAR   ref    V05 arg5         
 in BB02 as useless:


Expanding CastInstOf qmark in BB02 (after)

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB02 [0001]  3       BB03,BB04,BB05        1       [???..???)                                     i label target hascall idxlen new[] newobj 
BB11 [0010]  1       BB02                  1       [???..???)                                     i 
BB10 [0009]  1       BB11                  1       [???..???)-> BB07 ( cond )                     i 
BB09 [0008]  1       BB10                  0.50    [???..???)-> BB07 ( cond )                     i 
BB08 [0007]  1       BB09                  0.25    [???..???)                                     i 
BB07 [0006]  3       BB08,BB09,BB10        1       [???..037)        (return)                     i label target hascall idxlen new[] newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB02 [???..???), preds={BB03,BB04,BB05} succs={BB11}

***** BB02
STMT00011 (IL   ???...  ???)
               [000084] -A-XG+------              *  ASG       ref   
               [000162] ---XG+-N----              +--*  COMMA     ref   
               [000156] ---X-+------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
               [000058] -----+------              |  |  +--*  CNS_INT   int    3
               [000155] ---X-+------              |  |  \--*  ARR_LENGTH int   
               [000057] -----+------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
               [000083] a---G+-N----              |  \--*  IND       ref   
               [000161] -----+------              |     \--*  ADD       byref 
               [000153] -----+------              |        +--*  LCL_VAR   ref    V07 tmp1         
               [000160] -----+------              |        \--*  CNS_INT   long   40 Fseq[#ConstantIndex, #FirstElem]
               [000082] -----+------              \--*  LCL_VAR   ref    V12 tmp6         

------------ BB11 [???..???), preds={BB02} succs={BB10}

***** BB11
STMT00021 (IL   ???...  ???)
               [000184] -A----------              *  ASG       ref   
               [000183] D------N----              +--*  LCL_VAR   ref    V14 tmp8         
               [000105] -----+?-----              \--*  LCL_VAR   ref    V05 arg5         

------------ BB10 [???..???) -> BB07 (cond), preds={BB11} succs={BB09,BB07}

***** BB10
STMT00019 (IL   ???...  ???)
               [000181] ------------              *  JTRUE     void  
               [000099] J----+-N----              \--*  EQ        int   
               [000098] -----+------                 +--*  LCL_VAR   ref    V05 arg5         
               [000097] -----+------                 \--*  CNS_INT   ref    null

------------ BB09 [???..???) -> BB07 (cond), preds={BB10} succs={BB08,BB07}

***** BB09
STMT00020 (IL   ???...  ???)
               [000182] -A-X--------              *  JTRUE     void  
               [000096] JA-X-+?N----              \--*  EQ        int   
               [000095] #--X-+?-----                 +--*  IND       long  
               [000089] -----+?-----                 |  \--*  LCL_VAR   ref    V05 arg5         
               [000093] -A---+?-----                 \--*  COMMA     long  
               [000091] -A---+?-----                    +--*  ASG       long  
               [000090] D----+?N----                    |  +--*  LCL_VAR   long   V13 tmp7         
               [000088] H----+?-----                    |  \--*  CNS_INT(h) long   0xd1ffab1e class
               [000092] -----+?-----                    \--*  LCL_VAR   long   V13 tmp7         

------------ BB08 [???..???), preds={BB09} succs={BB07}

***** BB08
STMT00022 (IL   ???...  ???)
               [000186] -ACXG-------              *  ASG       ref   
               [000185] D------N----              +--*  LCL_VAR   ref    V14 tmp8         
               [000102] --CXG+?-----              \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL
               [000094] -----+?----- arg0 in rcx     +--*  LCL_VAR   long   V13 tmp7         
               [000101] -----+?----- arg1 in rdx     \--*  LCL_VAR   ref    V05 arg5         

------------ BB07 [???..037) (return), preds={BB08,BB09,BB10} succs={}

***** BB07
STMT00013 (IL   ???...  ???)
               [000112] -A-XG+------              *  ASG       ref   
               [000174] ---XG+-N----              +--*  COMMA     ref   
               [000168] ---X-+------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
               [000086] -----+------              |  |  +--*  CNS_INT   int    4
               [000167] ---X-+------              |  |  \--*  ARR_LENGTH int   
               [000085] -----+------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
               [000111] a---G+-N----              |  \--*  IND       ref   
               [000173] -----+------              |     \--*  ADD       byref 
               [000165] -----+------              |        +--*  LCL_VAR   ref    V07 tmp1         
               [000172] -----+------              |        \--*  CNS_INT   long   48 Fseq[#ConstantIndex, #FirstElem]
               [000110] -----+------              \--*  LCL_VAR   ref    V14 tmp8         

***** BB07
STMT00014 (IL   ???...0x036)
               [000113] -----+------              *  RETURN    ref   
               [000005] -----+------              \--*  LCL_VAR   ref    V07 tmp1         

-------------------------------------------------------------------------------------------------------------------

*************** Before renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..???)                                     i label target hascall idxlen new[] newobj 
BB06 [0005]  1       BB01                  1       [???..???)                                     i 
BB05 [0004]  1       BB06                  1       [???..???)-> BB02 ( cond )                     i 
BB04 [0003]  1       BB05                  0.50    [???..???)-> BB02 ( cond )                     i 
BB03 [0002]  1       BB04                  0.25    [???..???)                                     i 
BB02 [0001]  3       BB03,BB04,BB05        1       [???..???)                                     i label target hascall idxlen new[] newobj 
BB11 [0010]  1       BB02                  1       [???..???)                                     i 
BB10 [0009]  1       BB11                  1       [???..???)-> BB07 ( cond )                     i 
BB09 [0008]  1       BB10                  0.50    [???..???)-> BB07 ( cond )                     i 
BB08 [0007]  1       BB09                  0.25    [???..???)                                     i 
BB07 [0006]  3       BB08,BB09,BB10        1       [???..037)        (return)                     i label target hascall idxlen new[] newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
Renumber BB06 to BB02
Renumber BB05 to BB03
Renumber BB03 to BB05
Renumber BB02 to BB06
Renumber BB11 to BB07
Renumber BB10 to BB08
Renumber BB08 to BB10
Renumber BB07 to BB11

*************** After renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..???)                                     i label target hascall idxlen new[] newobj 
BB02 [0005]  1       BB01                  1       [???..???)                                     i 
BB03 [0004]  1       BB02                  1       [???..???)-> BB06 ( cond )                     i 
BB04 [0003]  1       BB03                  0.50    [???..???)-> BB06 ( cond )                     i 
BB05 [0002]  1       BB04                  0.25    [???..???)                                     i 
BB06 [0001]  3       BB03,BB04,BB05        1       [???..???)                                     i label target hascall idxlen new[] newobj 
BB07 [0010]  1       BB06                  1       [???..???)                                     i 
BB08 [0009]  1       BB07                  1       [???..???)-> BB11 ( cond )                     i 
BB09 [0008]  1       BB08                  0.50    [???..???)-> BB11 ( cond )                     i 
BB10 [0007]  1       BB09                  0.25    [???..???)                                     i 
BB11 [0006]  3       BB08,BB09,BB10        1       [???..037)        (return)                     i label target hascall idxlen new[] newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty

New BlockSet epoch 2, # of blocks (including unused BB00): 12, bitset array size: 1 (short)

*************** Finishing PHASE Morph - Global
Trees after Morph - Global

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..???)                                     i label target hascall idxlen new[] newobj 
BB02 [0005]  1       BB01                  1       [???..???)                                     i 
BB03 [0004]  1       BB02                  1       [???..???)-> BB06 ( cond )                     i 
BB04 [0003]  1       BB03                  0.50    [???..???)-> BB06 ( cond )                     i 
BB05 [0002]  1       BB04                  0.25    [???..???)                                     i 
BB06 [0001]  3       BB03,BB04,BB05        1       [???..???)                                     i label target hascall idxlen new[] newobj 
BB07 [0010]  1       BB06                  1       [???..???)                                     i 
BB08 [0009]  1       BB07                  1       [???..???)-> BB11 ( cond )                     i 
BB09 [0008]  1       BB08                  0.50    [???..???)-> BB11 ( cond )                     i 
BB10 [0007]  1       BB09                  0.25    [???..???)                                     i 
BB11 [0006]  3       BB08,BB09,BB10        1       [???..037)        (return)                     i label target hascall idxlen new[] newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..???), preds={} succs={BB02}

***** BB01
STMT00000 (IL 0x000...0x00F)
               [000004] -ACXG+------              *  ASG       ref   
               [000003] D----+-N----              +--*  LCL_VAR   ref    V07 tmp1         
               [000002] --CXG+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWARR_1_OBJ
               [000001] H----+------ arg0 in rcx     +--*  CNS_INT(h) long   0xd1ffab1e class
               [000000] -----+------ arg1 in rdx     \--*  CNS_INT   long   5

***** BB01
STMT00001 (IL   ???...  ???)
               [000013] -AC--+------              *  ASG       ref   
               [000012] D----+-N----              +--*  LCL_VAR   ref    V08 tmp2         
               [000011] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000010] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class

***** BB01
STMT00002 (IL   ???...  ???)
               [000018] -A-X-+------              *  ASG       long  
               [000017] ---X-+-N----              +--*  IND       long  
               [000016] -----+------              |  \--*  ADD       byref 
               [000014] -----+------              |     +--*  LCL_VAR   ref    V08 tmp2         
               [000015] -----+------              |     \--*  CNS_INT   long   8
               [000009] -----+------              \--*  CAST      long <- int
               [000008] -----+------                 \--*  LCL_VAR   int    V01 arg1         

***** BB01
STMT00003 (IL   ???...  ???)
               [000022] -A-XG+------              *  ASG       ref   
               [000126] ---XG+-N----              +--*  COMMA     ref   
               [000120] ---X-+------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
               [000007] -----+------              |  |  +--*  CNS_INT   int    0
               [000119] ---X-+------              |  |  \--*  ARR_LENGTH int   
               [000006] -----+------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
               [000021] a---G+-N----              |  \--*  IND       ref   
               [000125] -----+------              |     \--*  ADD       byref 
               [000117] -----+------              |        +--*  LCL_VAR   ref    V07 tmp1         
               [000124] -----+------              |        \--*  CNS_INT   long   16 Fseq[#FirstElem]
               [000020] -----+------              \--*  BOX       ref   
               [000019] -----+------                 \--*  LCL_VAR   ref    V08 tmp2         

***** BB01
STMT00004 (IL   ???...0x018)
               [000029] -AC--+------              *  ASG       ref   
               [000028] D----+-N----              +--*  LCL_VAR   ref    V09 tmp3         
               [000027] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000026] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class

***** BB01
STMT00005 (IL   ???...  ???)
               [000035] -A-X-+------              *  ASG       int   
               [000034] ---X-+-N----              +--*  IND       int   
               [000032] -----+------              |  \--*  ADD       byref 
               [000030] -----+------              |     +--*  LCL_VAR   ref    V09 tmp3         
               [000031] -----+------              |     \--*  CNS_INT   long   8
               [000128] -----+------              \--*  CAST      int <- short <- int
               [000025] -----+------                 \--*  LCL_VAR   int    V02 arg2         

***** BB01
STMT00006 (IL   ???...  ???)
               [000039] -A-XG+------              *  ASG       ref   
               [000138] ---XG+-N----              +--*  COMMA     ref   
               [000132] ---X-+------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
               [000024] -----+------              |  |  +--*  CNS_INT   int    1
               [000131] ---X-+------              |  |  \--*  ARR_LENGTH int   
               [000023] -----+------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
               [000038] a---G+-N----              |  \--*  IND       ref   
               [000137] -----+------              |     \--*  ADD       byref 
               [000129] -----+------              |        +--*  LCL_VAR   ref    V07 tmp1         
               [000136] -----+------              |        \--*  CNS_INT   long   24 Fseq[#ConstantIndex, #FirstElem]
               [000037] -----+------              \--*  BOX       ref   
               [000036] -----+------                 \--*  LCL_VAR   ref    V09 tmp3         

***** BB01
STMT00007 (IL   ???...0x021)
               [000046] -AC--+------              *  ASG       ref   
               [000045] D----+-N----              +--*  LCL_VAR   ref    V10 tmp4         
               [000044] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000043] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class

***** BB01
STMT00008 (IL   ???...  ???)
               [000052] -A-X-+------              *  ASG       short 
               [000051] ---X-+-N----              +--*  IND       short 
               [000049] -----+------              |  \--*  ADD       byref 
               [000047] -----+------              |     +--*  LCL_VAR   ref    V10 tmp4         
               [000048] -----+------              |     \--*  CNS_INT   long   8
               [000140] -----+------              \--*  CAST      int <- ubyte <- int
               [000042] -----+------                 \--*  LCL_VAR   int    V03 arg3         

***** BB01
STMT00009 (IL   ???...  ???)
               [000056] -A-XG+------              *  ASG       ref   
               [000150] ---XG+-N----              +--*  COMMA     ref   
               [000144] ---X-+------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
               [000041] -----+------              |  |  +--*  CNS_INT   int    2
               [000143] ---X-+------              |  |  \--*  ARR_LENGTH int   
               [000040] -----+------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
               [000055] a---G+-N----              |  \--*  IND       ref   
               [000149] -----+------              |     \--*  ADD       byref 
               [000141] -----+------              |        +--*  LCL_VAR   ref    V07 tmp1         
               [000148] -----+------              |        \--*  CNS_INT   long   32 Fseq[#ConstantIndex, #FirstElem]
               [000054] -----+------              \--*  BOX       ref   
               [000053] -----+------                 \--*  LCL_VAR   ref    V10 tmp4         

------------ BB02 [???..???), preds={BB01} succs={BB03}

***** BB02
STMT00017 (IL   ???...  ???)
               [000178] -A----------              *  ASG       ref   
               [000177] D------N----              +--*  LCL_VAR   ref    V12 tmp6         
               [000077] -----+?-----              \--*  LCL_VAR   ref    V04 arg4         

------------ BB03 [???..???) -> BB06 (cond), preds={BB02} succs={BB04,BB06}

***** BB03
STMT00015 (IL   ???...  ???)
               [000175] ------------              *  JTRUE     void  
               [000071] J----+-N----              \--*  EQ        int   
               [000070] -----+------                 +--*  LCL_VAR   ref    V04 arg4         
               [000069] -----+------                 \--*  CNS_INT   ref    null

------------ BB04 [???..???) -> BB06 (cond), preds={BB03} succs={BB05,BB06}

***** BB04
STMT00016 (IL   ???...  ???)
               [000176] -A-X--------              *  JTRUE     void  
               [000068] JA-X-+?N----              \--*  EQ        int   
               [000067] #--X-+?-----                 +--*  IND       long  
               [000061] -----+?-----                 |  \--*  LCL_VAR   ref    V04 arg4         
               [000065] -A---+?-----                 \--*  COMMA     long  
               [000063] -A---+?-----                    +--*  ASG       long  
               [000062] D----+?N----                    |  +--*  LCL_VAR   long   V11 tmp5         
               [000060] H----+?-----                    |  \--*  CNS_INT(h) long   0xd1ffab1e class
               [000064] -----+?-----                    \--*  LCL_VAR   long   V11 tmp5         

------------ BB05 [???..???), preds={BB04} succs={BB06}

***** BB05
STMT00018 (IL   ???...  ???)
               [000180] -ACXG-------              *  ASG       ref   
               [000179] D------N----              +--*  LCL_VAR   ref    V12 tmp6         
               [000074] --CXG+?-----              \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL
               [000066] -----+?----- arg0 in rcx     +--*  LCL_VAR   long   V11 tmp5         
               [000073] -----+?----- arg1 in rdx     \--*  LCL_VAR   ref    V04 arg4         

------------ BB06 [???..???), preds={BB03,BB04,BB05} succs={BB07}

***** BB06
STMT00011 (IL   ???...  ???)
               [000084] -A-XG+------              *  ASG       ref   
               [000162] ---XG+-N----              +--*  COMMA     ref   
               [000156] ---X-+------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
               [000058] -----+------              |  |  +--*  CNS_INT   int    3
               [000155] ---X-+------              |  |  \--*  ARR_LENGTH int   
               [000057] -----+------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
               [000083] a---G+-N----              |  \--*  IND       ref   
               [000161] -----+------              |     \--*  ADD       byref 
               [000153] -----+------              |        +--*  LCL_VAR   ref    V07 tmp1         
               [000160] -----+------              |        \--*  CNS_INT   long   40 Fseq[#ConstantIndex, #FirstElem]
               [000082] -----+------              \--*  LCL_VAR   ref    V12 tmp6         

------------ BB07 [???..???), preds={BB06} succs={BB08}

***** BB07
STMT00021 (IL   ???...  ???)
               [000184] -A----------              *  ASG       ref   
               [000183] D------N----              +--*  LCL_VAR   ref    V14 tmp8         
               [000105] -----+?-----              \--*  LCL_VAR   ref    V05 arg5         

------------ BB08 [???..???) -> BB11 (cond), preds={BB07} succs={BB09,BB11}

***** BB08
STMT00019 (IL   ???...  ???)
               [000181] ------------              *  JTRUE     void  
               [000099] J----+-N----              \--*  EQ        int   
               [000098] -----+------                 +--*  LCL_VAR   ref    V05 arg5         
               [000097] -----+------                 \--*  CNS_INT   ref    null

------------ BB09 [???..???) -> BB11 (cond), preds={BB08} succs={BB10,BB11}

***** BB09
STMT00020 (IL   ???...  ???)
               [000182] -A-X--------              *  JTRUE     void  
               [000096] JA-X-+?N----              \--*  EQ        int   
               [000095] #--X-+?-----                 +--*  IND       long  
               [000089] -----+?-----                 |  \--*  LCL_VAR   ref    V05 arg5         
               [000093] -A---+?-----                 \--*  COMMA     long  
               [000091] -A---+?-----                    +--*  ASG       long  
               [000090] D----+?N----                    |  +--*  LCL_VAR   long   V13 tmp7         
               [000088] H----+?-----                    |  \--*  CNS_INT(h) long   0xd1ffab1e class
               [000092] -----+?-----                    \--*  LCL_VAR   long   V13 tmp7         

------------ BB10 [???..???), preds={BB09} succs={BB11}

***** BB10
STMT00022 (IL   ???...  ???)
               [000186] -ACXG-------              *  ASG       ref   
               [000185] D------N----              +--*  LCL_VAR   ref    V14 tmp8         
               [000102] --CXG+?-----              \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL
               [000094] -----+?----- arg0 in rcx     +--*  LCL_VAR   long   V13 tmp7         
               [000101] -----+?----- arg1 in rdx     \--*  LCL_VAR   ref    V05 arg5         

------------ BB11 [???..037) (return), preds={BB08,BB09,BB10} succs={}

***** BB11
STMT00013 (IL   ???...  ???)
               [000112] -A-XG+------              *  ASG       ref   
               [000174] ---XG+-N----              +--*  COMMA     ref   
               [000168] ---X-+------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
               [000086] -----+------              |  |  +--*  CNS_INT   int    4
               [000167] ---X-+------              |  |  \--*  ARR_LENGTH int   
               [000085] -----+------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
               [000111] a---G+-N----              |  \--*  IND       ref   
               [000173] -----+------              |     \--*  ADD       byref 
               [000165] -----+------              |        +--*  LCL_VAR   ref    V07 tmp1         
               [000172] -----+------              |        \--*  CNS_INT   long   48 Fseq[#ConstantIndex, #FirstElem]
               [000110] -----+------              \--*  LCL_VAR   ref    V14 tmp8         

***** BB11
STMT00014 (IL   ???...0x036)
               [000113] -----+------              *  RETURN    ref   
               [000005] -----+------              \--*  LCL_VAR   ref    V07 tmp1         

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist

*************** Starting PHASE GS Cookie
No GS security needed

*************** Finishing PHASE GS Cookie

*************** Starting PHASE Compute edge weights (1, false)
*************** In fgComputeBlockAndEdgeWeights()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..???)                                     i label target hascall idxlen new[] newobj 
BB02 [0005]  1       BB01                  1       [???..???)                                     i 
BB03 [0004]  1       BB02                  1       [???..???)-> BB06 ( cond )                     i 
BB04 [0003]  1       BB03                  0.50    [???..???)-> BB06 ( cond )                     i 
BB05 [0002]  1       BB04                  0.25    [???..???)                                     i 
BB06 [0001]  3       BB03,BB04,BB05        1       [???..???)                                     i label target hascall idxlen new[] newobj 
BB07 [0010]  1       BB06                  1       [???..???)                                     i 
BB08 [0009]  1       BB07                  1       [???..???)-> BB11 ( cond )                     i 
BB09 [0008]  1       BB08                  0.50    [???..???)-> BB11 ( cond )                     i 
BB10 [0007]  1       BB09                  0.25    [???..???)                                     i 
BB11 [0006]  3       BB08,BB09,BB10        1       [???..037)        (return)                     i label target hascall idxlen new[] newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

 -- no profile data, so using default called count
 -- not optimizing or no profile data, so not computing edge weights

*************** Finishing PHASE Compute edge weights (1, false)

*************** Starting PHASE Create EH funclets
*************** In fgCreateFunclets()

After fgCreateFunclets()
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..???)                                     i label target hascall idxlen new[] newobj 
BB02 [0005]  1       BB01                  1       [???..???)                                     i 
BB03 [0004]  1       BB02                  1       [???..???)-> BB06 ( cond )                     i 
BB04 [0003]  1       BB03                  0.50    [???..???)-> BB06 ( cond )                     i 
BB05 [0002]  1       BB04                  0.25    [???..???)                                     i 
BB06 [0001]  3       BB03,BB04,BB05        1       [???..???)                                     i label target hascall idxlen new[] newobj 
BB07 [0010]  1       BB06                  1       [???..???)                                     i 
BB08 [0009]  1       BB07                  1       [???..???)-> BB11 ( cond )                     i 
BB09 [0008]  1       BB08                  0.50    [???..???)-> BB11 ( cond )                     i 
BB10 [0007]  1       BB09                  0.25    [???..???)                                     i 
BB11 [0006]  3       BB08,BB09,BB10        1       [???..037)        (return)                     i label target hascall idxlen new[] newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Create EH funclets

*************** Starting PHASE Optimize layout
*************** In optOptimizeLayout()

***************  Exception Handling table is empty
*************** In fgDebugCheckBBlist

*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..???)                                     i label target hascall idxlen new[] newobj 
BB02 [0005]  1       BB01                  1       [???..???)                                     i 
BB03 [0004]  1       BB02                  1       [???..???)-> BB06 ( cond )                     i 
BB04 [0003]  1       BB03                  0.50    [???..???)-> BB06 ( cond )                     i 
BB05 [0002]  1       BB04                  0.25    [???..???)                                     i 
BB06 [0001]  3       BB03,BB04,BB05        1       [???..???)                                     i label target hascall idxlen new[] newobj 
BB07 [0010]  1       BB06                  1       [???..???)                                     i 
BB08 [0009]  1       BB07                  1       [???..???)-> BB11 ( cond )                     i 
BB09 [0008]  1       BB08                  0.50    [???..???)-> BB11 ( cond )                     i 
BB10 [0007]  1       BB09                  0.25    [???..???)                                     i 
BB11 [0006]  3       BB08,BB09,BB10        1       [???..037)        (return)                     i label target hascall idxlen new[] newobj 
-----------------------------------------------------------------------------------------------------------------------------------------


Compacting blocks BB01 and BB02:
*************** In fgDebugCheckBBlist

Compacting blocks BB01 and BB03:
*************** In fgDebugCheckBBlist

Compacting blocks BB06 and BB07:
*************** In fgDebugCheckBBlist

Compacting blocks BB06 and BB08:
*************** In fgDebugCheckBBlist

After updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..???)-> BB06 ( cond )                     i label target hascall idxlen new[] newobj 
BB04 [0003]  1       BB01                  0.50    [???..???)-> BB06 ( cond )                     i 
BB05 [0002]  1       BB04                  0.25    [???..???)                                     i 
BB06 [0001]  3       BB01,BB04,BB05        1       [???..???)-> BB11 ( cond )                     i label target hascall idxlen new[] newobj 
BB09 [0008]  1       BB06                  0.50    [???..???)-> BB11 ( cond )                     i 
BB10 [0007]  1       BB09                  0.25    [???..???)                                     i 
BB11 [0006]  3       BB06,BB09,BB10        1       [???..037)        (return)                     i label target hascall idxlen new[] newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
*************** In fgDebugCheckBBlist

*************** In fgExpandRarelyRunBlocks()
*************** In fgReorderBlocks()

Initial BasicBlocks
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..???)-> BB06 ( cond )                     i label target hascall idxlen new[] newobj 
BB04 [0003]  1       BB01                  0.50    [???..???)-> BB06 ( cond )                     i 
BB05 [0002]  1       BB04                  0.25    [???..???)                                     i 
BB06 [0001]  3       BB01,BB04,BB05        1       [???..???)-> BB11 ( cond )                     i label target hascall idxlen new[] newobj 
BB09 [0008]  1       BB06                  0.50    [???..???)-> BB11 ( cond )                     i 
BB10 [0007]  1       BB09                  0.25    [???..???)                                     i 
BB11 [0006]  3       BB06,BB09,BB10        1       [???..037)        (return)                     i label target hascall idxlen new[] newobj 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..???)-> BB06 ( cond )                     i label target hascall idxlen new[] newobj 
BB04 [0003]  1       BB01                  0.50    [???..???)-> BB06 ( cond )                     i 
BB05 [0002]  1       BB04                  0.25    [???..???)                                     i 
BB06 [0001]  3       BB01,BB04,BB05        1       [???..???)-> BB11 ( cond )                     i label target hascall idxlen new[] newobj 
BB09 [0008]  1       BB06                  0.50    [???..???)-> BB11 ( cond )                     i 
BB10 [0007]  1       BB09                  0.25    [???..???)                                     i 
BB11 [0006]  3       BB06,BB09,BB10        1       [???..037)        (return)                     i label target hascall idxlen new[] newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist

*************** Finishing PHASE Optimize layout

*************** Starting PHASE Compute blocks reachability
*************** In fgComputeReachability
*************** In fgDebugCheckBBlist

Renumbering the basic blocks for fgComputeReachability pass #1

*************** Before renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..???)-> BB06 ( cond )                     i label target hascall idxlen new[] newobj 
BB04 [0003]  1       BB01                  0.50    [???..???)-> BB06 ( cond )                     i 
BB05 [0002]  1       BB04                  0.25    [???..???)                                     i 
BB06 [0001]  3       BB01,BB04,BB05        1       [???..???)-> BB11 ( cond )                     i label target hascall idxlen new[] newobj 
BB09 [0008]  1       BB06                  0.50    [???..???)-> BB11 ( cond )                     i 
BB10 [0007]  1       BB09                  0.25    [???..???)                                     i 
BB11 [0006]  3       BB06,BB09,BB10        1       [???..037)        (return)                     i label target hascall idxlen new[] newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
Renumber BB04 to BB02
Renumber BB05 to BB03
Renumber BB06 to BB04
Renumber BB09 to BB05
Renumber BB10 to BB06
Renumber BB11 to BB07

*************** After renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..???)-> BB04 ( cond )                     i label target hascall idxlen new[] newobj 
BB02 [0003]  1       BB01                  0.50    [???..???)-> BB04 ( cond )                     i 
BB03 [0002]  1       BB02                  0.25    [???..???)                                     i 
BB04 [0001]  3       BB01,BB02,BB03        1       [???..???)-> BB07 ( cond )                     i label target hascall idxlen new[] newobj 
BB05 [0008]  1       BB04                  0.50    [???..???)-> BB07 ( cond )                     i 
BB06 [0007]  1       BB05                  0.25    [???..???)                                     i 
BB07 [0006]  3       BB04,BB05,BB06        1       [???..037)        (return)                     i label target hascall idxlen new[] newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty

New BlockSet epoch 3, # of blocks (including unused BB00): 8, bitset array size: 1 (short)
Enter blocks: BB01 

After computing reachability sets:
------------------------------------------------
BBnum  Reachable by 
------------------------------------------------
BB01 : BB01 
BB02 : BB01 BB02 
BB03 : BB01 BB02 BB03 
BB04 : BB01 BB02 BB03 BB04 
BB05 : BB01 BB02 BB03 BB04 BB05 
BB06 : BB01 BB02 BB03 BB04 BB05 BB06 
BB07 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 

After computing reachability:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..???)-> BB04 ( cond )                     i label target hascall idxlen new[] newobj 
BB02 [0003]  1       BB01                  0.50    [???..???)-> BB04 ( cond )                     i 
BB03 [0002]  1       BB02                  0.25    [???..???)                                     i 
BB04 [0001]  3       BB01,BB02,BB03        1       [???..???)-> BB07 ( cond )                     i label target hascall idxlen new[] newobj 
BB05 [0008]  1       BB04                  0.50    [???..???)-> BB07 ( cond )                     i 
BB06 [0007]  1       BB05                  0.25    [???..???)                                     i 
BB07 [0006]  3       BB04,BB05,BB06        1       [???..037)        (return)                     i label target hascall idxlen new[] newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist
*************** In fgComputeDoms
*************** In fgDebugCheckBBlist

Dominator computation start blocks (those blocks with no incoming edges):
BB01 
------------------------------------------------
BBnum  Dominated by
------------------------------------------------
BB01:  BB01 
BB02:  BB02 BB01 
BB03:  BB03 BB02 BB01 
BB04:  BB04 BB01 
BB05:  BB05 BB04 BB01 
BB06:  BB06 BB05 BB04 BB01 
BB07:  BB07 BB04 BB01 

Inside fgBuildDomTree

After computing the Dominance Tree:
BB01 : BB04 BB02 
BB02 : BB03 
BB04 : BB07 BB05 
BB05 : BB06 


After numbering the dominator tree:
BB01: pre=01, post=07
BB02: pre=06, post=06
BB03: pre=07, post=05
BB04: pre=02, post=04
BB05: pre=04, post=03
BB06: pre=05, post=02
BB07: pre=03, post=01

*************** Finishing PHASE Compute blocks reachability

*************** Starting PHASE Optimize loops
*************** In optOptimizeLoops()

After optSetBlockWeights:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..???)-> BB04 ( cond )                     i label target hascall idxlen new[] newobj 
BB02 [0003]  1       BB01                  0.25    [???..???)-> BB04 ( cond )                     i 
BB03 [0002]  1       BB02                  0.12    [???..???)                                     i 
BB04 [0001]  3       BB01,BB02,BB03        1       [???..???)-> BB07 ( cond )                     i label target hascall idxlen new[] newobj 
BB05 [0008]  1       BB04                  0.25    [???..???)-> BB07 ( cond )                     i 
BB06 [0007]  1       BB05                  0.12    [???..???)                                     i 
BB07 [0006]  3       BB04,BB05,BB06        1       [???..037)        (return)                     i label target hascall idxlen new[] newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist

*************** Finishing PHASE Optimize loops

*************** Starting PHASE Clone loops

*************** In optCloneLoops()

*************** Finishing PHASE Clone loops

*************** Starting PHASE Unroll loops

*************** Finishing PHASE Unroll loops

*************** Starting PHASE Mark local vars

*************** In lvaMarkLocalVars()
*** lvaComputeRefCounts ***

*** lvaComputeRefCounts -- explicit counts ***

*** marking local variables in block BB01 (weight=1   )
STMT00000 (IL 0x000...0x00F)
               [000004] -ACXG+------              *  ASG       ref   
               [000003] D----+-N----              +--*  LCL_VAR   ref    V07 tmp1         
               [000002] --CXG+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWARR_1_OBJ
               [000001] H----+------ arg0 in rcx     +--*  CNS_INT(h) long   0xd1ffab1e class
               [000000] -----+------ arg1 in rdx     \--*  CNS_INT   long   5
New refCnts for V07: refCnt =  1, refCntWtd = 2   
STMT00001 (IL   ???...  ???)
               [000013] -AC--+------              *  ASG       ref   
               [000012] D----+-N----              +--*  LCL_VAR   ref    V08 tmp2         
               [000011] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000010] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class
New refCnts for V08: refCnt =  1, refCntWtd = 2   
STMT00002 (IL   ???...  ???)
               [000018] -A-X-+------              *  ASG       long  
               [000017] ---X-+-N----              +--*  IND       long  
               [000016] -----+------              |  \--*  ADD       byref 
               [000014] -----+------              |     +--*  LCL_VAR   ref    V08 tmp2         
               [000015] -----+------              |     \--*  CNS_INT   long   8
               [000009] -----+------              \--*  CAST      long <- int
               [000008] -----+------                 \--*  LCL_VAR   int    V01 arg1         
New refCnts for V08: refCnt =  2, refCntWtd = 4   
New refCnts for V01: refCnt =  1, refCntWtd = 1   
STMT00003 (IL   ???...  ???)
               [000022] -A-XG+------              *  ASG       ref   
               [000126] ---XG+-N----              +--*  COMMA     ref   
               [000120] ---X-+------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
               [000007] -----+------              |  |  +--*  CNS_INT   int    0
               [000119] ---X-+------              |  |  \--*  ARR_LENGTH int   
               [000006] -----+------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
               [000021] a---G+-N----              |  \--*  IND       ref   
               [000125] -----+------              |     \--*  ADD       byref 
               [000117] -----+------              |        +--*  LCL_VAR   ref    V07 tmp1         
               [000124] -----+------              |        \--*  CNS_INT   long   16 Fseq[#FirstElem]
               [000020] -----+------              \--*  BOX       ref   
               [000019] -----+------                 \--*  LCL_VAR   ref    V08 tmp2         
New refCnts for V07: refCnt =  2, refCntWtd = 4   
New refCnts for V07: refCnt =  3, refCntWtd = 6   
New refCnts for V08: refCnt =  3, refCntWtd = 6   
STMT00004 (IL   ???...0x018)
               [000029] -AC--+------              *  ASG       ref   
               [000028] D----+-N----              +--*  LCL_VAR   ref    V09 tmp3         
               [000027] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000026] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class
New refCnts for V09: refCnt =  1, refCntWtd = 2   
STMT00005 (IL   ???...  ???)
               [000035] -A-X-+------              *  ASG       int   
               [000034] ---X-+-N----              +--*  IND       int   
               [000032] -----+------              |  \--*  ADD       byref 
               [000030] -----+------              |     +--*  LCL_VAR   ref    V09 tmp3         
               [000031] -----+------              |     \--*  CNS_INT   long   8
               [000128] -----+------              \--*  CAST      int <- short <- int
               [000025] -----+------                 \--*  LCL_VAR   int    V02 arg2         
New refCnts for V09: refCnt =  2, refCntWtd = 4   
New refCnts for V02: refCnt =  1, refCntWtd = 1   
STMT00006 (IL   ???...  ???)
               [000039] -A-XG+------              *  ASG       ref   
               [000138] ---XG+-N----              +--*  COMMA     ref   
               [000132] ---X-+------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
               [000024] -----+------              |  |  +--*  CNS_INT   int    1
               [000131] ---X-+------              |  |  \--*  ARR_LENGTH int   
               [000023] -----+------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
               [000038] a---G+-N----              |  \--*  IND       ref   
               [000137] -----+------              |     \--*  ADD       byref 
               [000129] -----+------              |        +--*  LCL_VAR   ref    V07 tmp1         
               [000136] -----+------              |        \--*  CNS_INT   long   24 Fseq[#ConstantIndex, #FirstElem]
               [000037] -----+------              \--*  BOX       ref   
               [000036] -----+------                 \--*  LCL_VAR   ref    V09 tmp3         
New refCnts for V07: refCnt =  4, refCntWtd = 8   
New refCnts for V07: refCnt =  5, refCntWtd = 10   
New refCnts for V09: refCnt =  3, refCntWtd = 6   
STMT00007 (IL   ???...0x021)
               [000046] -AC--+------              *  ASG       ref   
               [000045] D----+-N----              +--*  LCL_VAR   ref    V10 tmp4         
               [000044] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000043] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class
New refCnts for V10: refCnt =  1, refCntWtd = 2   
STMT00008 (IL   ???...  ???)
               [000052] -A-X-+------              *  ASG       short 
               [000051] ---X-+-N----              +--*  IND       short 
               [000049] -----+------              |  \--*  ADD       byref 
               [000047] -----+------              |     +--*  LCL_VAR   ref    V10 tmp4         
               [000048] -----+------              |     \--*  CNS_INT   long   8
               [000140] -----+------              \--*  CAST      int <- ubyte <- int
               [000042] -----+------                 \--*  LCL_VAR   int    V03 arg3         
New refCnts for V10: refCnt =  2, refCntWtd = 4   
New refCnts for V03: refCnt =  1, refCntWtd = 1   
STMT00009 (IL   ???...  ???)
               [000056] -A-XG+------              *  ASG       ref   
               [000150] ---XG+-N----              +--*  COMMA     ref   
               [000144] ---X-+------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
               [000041] -----+------              |  |  +--*  CNS_INT   int    2
               [000143] ---X-+------              |  |  \--*  ARR_LENGTH int   
               [000040] -----+------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
               [000055] a---G+-N----              |  \--*  IND       ref   
               [000149] -----+------              |     \--*  ADD       byref 
               [000141] -----+------              |        +--*  LCL_VAR   ref    V07 tmp1         
               [000148] -----+------              |        \--*  CNS_INT   long   32 Fseq[#ConstantIndex, #FirstElem]
               [000054] -----+------              \--*  BOX       ref   
               [000053] -----+------                 \--*  LCL_VAR   ref    V10 tmp4         
New refCnts for V07: refCnt =  6, refCntWtd = 12   
New refCnts for V07: refCnt =  7, refCntWtd = 14   
New refCnts for V10: refCnt =  3, refCntWtd = 6   
STMT00017 (IL   ???...  ???)
               [000178] -A----------              *  ASG       ref   
               [000177] D------N----              +--*  LCL_VAR   ref    V12 tmp6         
               [000077] -----+?-----              \--*  LCL_VAR   ref    V04 arg4         
New refCnts for V12: refCnt =  1, refCntWtd = 2   
New refCnts for V04: refCnt =  1, refCntWtd = 1   
STMT00015 (IL   ???...  ???)
               [000175] ------------              *  JTRUE     void  
               [000071] J----+-N----              \--*  EQ        int   
               [000070] -----+------                 +--*  LCL_VAR   ref    V04 arg4         
               [000069] -----+------                 \--*  CNS_INT   ref    null
New refCnts for V04: refCnt =  2, refCntWtd = 2   

*** marking local variables in block BB02 (weight=0.25)
STMT00016 (IL   ???...  ???)
               [000176] -A-X--------              *  JTRUE     void  
               [000068] JA-X-+?N----              \--*  EQ        int   
               [000067] #--X-+?-----                 +--*  IND       long  
               [000061] -----+?-----                 |  \--*  LCL_VAR   ref    V04 arg4         
               [000065] -A---+?-----                 \--*  COMMA     long  
               [000063] -A---+?-----                    +--*  ASG       long  
               [000062] D----+?N----                    |  +--*  LCL_VAR   long   V11 tmp5         
               [000060] H----+?-----                    |  \--*  CNS_INT(h) long   0xd1ffab1e class
               [000064] -----+?-----                    \--*  LCL_VAR   long   V11 tmp5         
New refCnts for V04: refCnt =  3, refCntWtd = 2.25
New refCnts for V11: refCnt =  1, refCntWtd = 0.50
New refCnts for V11: refCnt =  2, refCntWtd = 1   

*** marking local variables in block BB03 (weight=0.12)
STMT00018 (IL   ???...  ???)
               [000180] -ACXG-------              *  ASG       ref   
               [000179] D------N----              +--*  LCL_VAR   ref    V12 tmp6         
               [000074] --CXG+?-----              \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL
               [000066] -----+?----- arg0 in rcx     +--*  LCL_VAR   long   V11 tmp5         
               [000073] -----+?----- arg1 in rdx     \--*  LCL_VAR   ref    V04 arg4         
New refCnts for V12: refCnt =  2, refCntWtd = 2.25
New refCnts for V11: refCnt =  3, refCntWtd = 1.25
New refCnts for V04: refCnt =  4, refCntWtd = 2.38

*** marking local variables in block BB04 (weight=1   )
STMT00011 (IL   ???...  ???)
               [000084] -A-XG+------              *  ASG       ref   
               [000162] ---XG+-N----              +--*  COMMA     ref   
               [000156] ---X-+------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
               [000058] -----+------              |  |  +--*  CNS_INT   int    3
               [000155] ---X-+------              |  |  \--*  ARR_LENGTH int   
               [000057] -----+------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
               [000083] a---G+-N----              |  \--*  IND       ref   
               [000161] -----+------              |     \--*  ADD       byref 
               [000153] -----+------              |        +--*  LCL_VAR   ref    V07 tmp1         
               [000160] -----+------              |        \--*  CNS_INT   long   40 Fseq[#ConstantIndex, #FirstElem]
               [000082] -----+------              \--*  LCL_VAR   ref    V12 tmp6         
New refCnts for V07: refCnt =  8, refCntWtd = 16   
New refCnts for V07: refCnt =  9, refCntWtd = 18   
New refCnts for V12: refCnt =  3, refCntWtd = 4.25
STMT00021 (IL   ???...  ???)
               [000184] -A----------              *  ASG       ref   
               [000183] D------N----              +--*  LCL_VAR   ref    V14 tmp8         
               [000105] -----+?-----              \--*  LCL_VAR   ref    V05 arg5         
New refCnts for V14: refCnt =  1, refCntWtd = 2   
New refCnts for V05: refCnt =  1, refCntWtd = 1   
STMT00019 (IL   ???...  ???)
               [000181] ------------              *  JTRUE     void  
               [000099] J----+-N----              \--*  EQ        int   
               [000098] -----+------                 +--*  LCL_VAR   ref    V05 arg5         
               [000097] -----+------                 \--*  CNS_INT   ref    null
New refCnts for V05: refCnt =  2, refCntWtd = 2   

*** marking local variables in block BB05 (weight=0.25)
STMT00020 (IL   ???...  ???)
               [000182] -A-X--------              *  JTRUE     void  
               [000096] JA-X-+?N----              \--*  EQ        int   
               [000095] #--X-+?-----                 +--*  IND       long  
               [000089] -----+?-----                 |  \--*  LCL_VAR   ref    V05 arg5         
               [000093] -A---+?-----                 \--*  COMMA     long  
               [000091] -A---+?-----                    +--*  ASG       long  
               [000090] D----+?N----                    |  +--*  LCL_VAR   long   V13 tmp7         
               [000088] H----+?-----                    |  \--*  CNS_INT(h) long   0xd1ffab1e class
               [000092] -----+?-----                    \--*  LCL_VAR   long   V13 tmp7         
New refCnts for V05: refCnt =  3, refCntWtd = 2.25
New refCnts for V13: refCnt =  1, refCntWtd = 0.50
New refCnts for V13: refCnt =  2, refCntWtd = 1   

*** marking local variables in block BB06 (weight=0.12)
STMT00022 (IL   ???...  ???)
               [000186] -ACXG-------              *  ASG       ref   
               [000185] D------N----              +--*  LCL_VAR   ref    V14 tmp8         
               [000102] --CXG+?-----              \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL
               [000094] -----+?----- arg0 in rcx     +--*  LCL_VAR   long   V13 tmp7         
               [000101] -----+?----- arg1 in rdx     \--*  LCL_VAR   ref    V05 arg5         
New refCnts for V14: refCnt =  2, refCntWtd = 2.25
New refCnts for V13: refCnt =  3, refCntWtd = 1.25
New refCnts for V05: refCnt =  4, refCntWtd = 2.38

*** marking local variables in block BB07 (weight=1   )
STMT00013 (IL   ???...  ???)
               [000112] -A-XG+------              *  ASG       ref   
               [000174] ---XG+-N----              +--*  COMMA     ref   
               [000168] ---X-+------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
               [000086] -----+------              |  |  +--*  CNS_INT   int    4
               [000167] ---X-+------              |  |  \--*  ARR_LENGTH int   
               [000085] -----+------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
               [000111] a---G+-N----              |  \--*  IND       ref   
               [000173] -----+------              |     \--*  ADD       byref 
               [000165] -----+------              |        +--*  LCL_VAR   ref    V07 tmp1         
               [000172] -----+------              |        \--*  CNS_INT   long   48 Fseq[#ConstantIndex, #FirstElem]
               [000110] -----+------              \--*  LCL_VAR   ref    V14 tmp8         
New refCnts for V07: refCnt = 10, refCntWtd = 20   
New refCnts for V07: refCnt = 11, refCntWtd = 22   
New refCnts for V14: refCnt =  3, refCntWtd = 4.25
STMT00014 (IL   ???...0x036)
               [000113] -----+------              *  RETURN    ref   
               [000005] -----+------              \--*  LCL_VAR   ref    V07 tmp1         
New refCnts for V07: refCnt = 12, refCntWtd = 24   

*** lvaComputeRefCounts -- implicit counts ***
New refCnts for V01: refCnt =  2, refCntWtd = 2   
New refCnts for V01: refCnt =  3, refCntWtd = 3   
New refCnts for V02: refCnt =  2, refCntWtd = 2   
New refCnts for V02: refCnt =  3, refCntWtd = 3   
New refCnts for V03: refCnt =  2, refCntWtd = 2   
New refCnts for V03: refCnt =  3, refCntWtd = 3   

*************** In optAddCopies()


*************** Finishing PHASE Mark local vars

*************** Starting PHASE Optimize bools
*************** In optOptimizeBools()
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Optimize bools

*************** Starting PHASE Find oper order
*************** In fgFindOperOrder()

*************** Finishing PHASE Find oper order

*************** Starting PHASE Set block order
*************** In fgSetBlockOrder()
The biggest BB has   12 tree nodes

*************** Finishing PHASE Set block order
Trees before Build SSA representation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..???)-> BB04 ( cond )                     i label target hascall idxlen new[] newobj 
BB02 [0003]  1       BB01                  0.25    [???..???)-> BB04 ( cond )                     i 
BB03 [0002]  1       BB02                  0.12    [???..???)                                     i 
BB04 [0001]  3       BB01,BB02,BB03        1       [???..???)-> BB07 ( cond )                     i label target hascall idxlen new[] newobj 
BB05 [0008]  1       BB04                  0.25    [???..???)-> BB07 ( cond )                     i 
BB06 [0007]  1       BB05                  0.12    [???..???)                                     i 
BB07 [0006]  3       BB04,BB05,BB06        1       [???..037)        (return)                     i label target hascall idxlen new[] newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..???) -> BB04 (cond), preds={} succs={BB02,BB04}

***** BB01
STMT00000 (IL 0x000...0x00F)
N007 ( 17, 18) [000004] -ACXG---R---              *  ASG       ref   
N006 (  1,  1) [000003] D------N----              +--*  LCL_VAR   ref    V07 tmp1         
N005 ( 17, 18) [000002] --CXG-------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWARR_1_OBJ
N003 (  2, 10) [000001] H----------- arg0 in rcx     +--*  CNS_INT(h) long   0xd1ffab1e class
N004 (  1,  1) [000000] ------------ arg1 in rdx     \--*  CNS_INT   long   5

***** BB01
STMT00001 (IL   ???...  ???)
N005 ( 16, 16) [000013] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000012] D------N----              +--*  LCL_VAR   ref    V08 tmp2         
N003 ( 16, 16) [000011] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000010] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class

***** BB01
STMT00002 (IL   ???...  ???)
N007 (  7,  8) [000018] -A-X----R---              *  ASG       long  
N006 (  4,  4) [000017] ---X---N----              +--*  IND       long  
N005 (  2,  2) [000016] -------N----              |  \--*  ADD       byref 
N003 (  1,  1) [000014] ------------              |     +--*  LCL_VAR   ref    V08 tmp2         
N004 (  1,  1) [000015] ------------              |     \--*  CNS_INT   long   8
N002 (  2,  3) [000009] ------------              \--*  CAST      long <- int
N001 (  1,  1) [000008] ------------                 \--*  LCL_VAR   int    V01 arg1         

***** BB01
STMT00003 (IL   ???...  ???)
N012 ( 20, 21) [000022] -A-XG-------              *  ASG       ref   
N009 ( 12, 15) [000126] ---XG--N----              +--*  COMMA     ref   
N004 (  8, 11) [000120] ---X--------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
N001 (  1,  1) [000007] ------------              |  |  +--*  CNS_INT   int    0
N003 (  3,  3) [000119] ---X--------              |  |  \--*  ARR_LENGTH int   
N002 (  1,  1) [000006] ------------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
N008 (  4,  4) [000021] a---G--N----              |  \--*  IND       ref   
N007 (  2,  2) [000125] -------N----              |     \--*  ADD       byref 
N005 (  1,  1) [000117] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         
N006 (  1,  1) [000124] ------------              |        \--*  CNS_INT   long   16 Fseq[#FirstElem]
N011 (  7,  5) [000020] ------------              \--*  BOX       ref   
N010 (  1,  1) [000019] ------------                 \--*  LCL_VAR   ref    V08 tmp2         

***** BB01
STMT00004 (IL   ???...0x018)
N005 ( 16, 16) [000029] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000028] D------N----              +--*  LCL_VAR   ref    V09 tmp3         
N003 ( 16, 16) [000027] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000026] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class

***** BB01
STMT00005 (IL   ???...  ???)
N007 (  8,  9) [000035] -A-X----R---              *  ASG       int   
N006 (  4,  4) [000034] ---X---N----              +--*  IND       int   
N005 (  2,  2) [000032] -------N----              |  \--*  ADD       byref 
N003 (  1,  1) [000030] ------------              |     +--*  LCL_VAR   ref    V09 tmp3         
N004 (  1,  1) [000031] ------------              |     \--*  CNS_INT   long   8
N002 (  3,  4) [000128] ------------              \--*  CAST      int <- short <- int
N001 (  2,  2) [000025] ------------                 \--*  LCL_VAR   int    V02 arg2         

***** BB01
STMT00006 (IL   ???...  ???)
N012 ( 20, 21) [000039] -A-XG-------              *  ASG       ref   
N009 ( 12, 15) [000138] ---XG--N----              +--*  COMMA     ref   
N004 (  8, 11) [000132] ---X--------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
N001 (  1,  1) [000024] ------------              |  |  +--*  CNS_INT   int    1
N003 (  3,  3) [000131] ---X--------              |  |  \--*  ARR_LENGTH int   
N002 (  1,  1) [000023] ------------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
N008 (  4,  4) [000038] a---G--N----              |  \--*  IND       ref   
N007 (  2,  2) [000137] -------N----              |     \--*  ADD       byref 
N005 (  1,  1) [000129] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         
N006 (  1,  1) [000136] ------------              |        \--*  CNS_INT   long   24 Fseq[#ConstantIndex, #FirstElem]
N011 (  7,  5) [000037] ------------              \--*  BOX       ref   
N010 (  1,  1) [000036] ------------                 \--*  LCL_VAR   ref    V09 tmp3         

***** BB01
STMT00007 (IL   ???...0x021)
N005 ( 16, 16) [000046] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000045] D------N----              +--*  LCL_VAR   ref    V10 tmp4         
N003 ( 16, 16) [000044] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000043] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class

***** BB01
STMT00008 (IL   ???...  ???)
N007 (  9, 10) [000052] -A-X----R---              *  ASG       short 
N006 (  5,  5) [000051] ---X---N----              +--*  IND       short 
N005 (  2,  2) [000049] -------N----              |  \--*  ADD       byref 
N003 (  1,  1) [000047] ------------              |     +--*  LCL_VAR   ref    V10 tmp4         
N004 (  1,  1) [000048] ------------              |     \--*  CNS_INT   long   8
N002 (  3,  4) [000140] ------------              \--*  CAST      int <- ubyte <- int
N001 (  2,  2) [000042] ------------                 \--*  LCL_VAR   int    V03 arg3         

***** BB01
STMT00009 (IL   ???...  ???)
N012 ( 20, 21) [000056] -A-XG-------              *  ASG       ref   
N009 ( 12, 15) [000150] ---XG--N----              +--*  COMMA     ref   
N004 (  8, 11) [000144] ---X--------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
N001 (  1,  1) [000041] ------------              |  |  +--*  CNS_INT   int    2
N003 (  3,  3) [000143] ---X--------              |  |  \--*  ARR_LENGTH int   
N002 (  1,  1) [000040] ------------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
N008 (  4,  4) [000055] a---G--N----              |  \--*  IND       ref   
N007 (  2,  2) [000149] -------N----              |     \--*  ADD       byref 
N005 (  1,  1) [000141] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         
N006 (  1,  1) [000148] ------------              |        \--*  CNS_INT   long   32 Fseq[#ConstantIndex, #FirstElem]
N011 (  7,  5) [000054] ------------              \--*  BOX       ref   
N010 (  1,  1) [000053] ------------                 \--*  LCL_VAR   ref    V10 tmp4         

***** BB01
STMT00017 (IL   ???...  ???)
N003 (  3,  3) [000178] -A------R---              *  ASG       ref   
N002 (  1,  1) [000177] D------N----              +--*  LCL_VAR   ref    V12 tmp6         
N001 (  3,  2) [000077] ------?-----              \--*  LCL_VAR   ref    V04 arg4         

***** BB01
STMT00015 (IL   ???...  ???)
N004 (  7,  6) [000175] ------------              *  JTRUE     void  
N003 (  5,  4) [000071] J------N----              \--*  EQ        int   
N001 (  3,  2) [000070] ------------                 +--*  LCL_VAR   ref    V04 arg4         
N002 (  1,  1) [000069] ------------                 \--*  CNS_INT   ref    null

------------ BB02 [???..???) -> BB04 (cond), preds={BB01} succs={BB03,BB04}

***** BB02
STMT00016 (IL   ???...  ???)
N009 ( 18, 22) [000176] -A-X--------              *  JTRUE     void  
N008 ( 16, 20) [000068] JA-X--?N----              \--*  EQ        int   
N002 (  6,  4) [000067] #--X--?-----                 +--*  IND       long  
N001 (  3,  2) [000061] ------?-----                 |  \--*  LCL_VAR   ref    V04 arg4         
N007 (  9, 15) [000065] -A----?-----                 \--*  COMMA     long  
N005 (  6, 13) [000063] -A----?-R---                    +--*  ASG       long  
N004 (  3,  2) [000062] D-----?N----                    |  +--*  LCL_VAR   long   V11 tmp5         
N003 (  2, 10) [000060] H-----?-----                    |  \--*  CNS_INT(h) long   0xd1ffab1e class
N006 (  3,  2) [000064] ------?-----                    \--*  LCL_VAR   long   V11 tmp5         

------------ BB03 [???..???), preds={BB02} succs={BB04}

***** BB03
STMT00018 (IL   ???...  ???)
N007 ( 20, 11) [000180] -ACXG---R---              *  ASG       ref   
N006 (  1,  1) [000179] D------N----              +--*  LCL_VAR   ref    V12 tmp6         
N005 ( 20, 11) [000074] --CXG-?-----              \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL
N003 (  3,  2) [000066] ------?----- arg0 in rcx     +--*  LCL_VAR   long   V11 tmp5         
N004 (  3,  2) [000073] ------?----- arg1 in rdx     \--*  LCL_VAR   ref    V04 arg4         

------------ BB04 [???..???) -> BB07 (cond), preds={BB01,BB02,BB03} succs={BB05,BB07}

***** BB04
STMT00011 (IL   ???...  ???)
N011 ( 14, 17) [000084] -A-XG-------              *  ASG       ref   
N009 ( 12, 15) [000162] ---XG--N----              +--*  COMMA     ref   
N004 (  8, 11) [000156] ---X--------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
N001 (  1,  1) [000058] ------------              |  |  +--*  CNS_INT   int    3
N003 (  3,  3) [000155] ---X--------              |  |  \--*  ARR_LENGTH int   
N002 (  1,  1) [000057] ------------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
N008 (  4,  4) [000083] a---G--N----              |  \--*  IND       ref   
N007 (  2,  2) [000161] -------N----              |     \--*  ADD       byref 
N005 (  1,  1) [000153] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         
N006 (  1,  1) [000160] ------------              |        \--*  CNS_INT   long   40 Fseq[#ConstantIndex, #FirstElem]
N010 (  1,  1) [000082] ------------              \--*  LCL_VAR   ref    V12 tmp6         

***** BB04
STMT00021 (IL   ???...  ???)
N003 (  3,  3) [000184] -A------R---              *  ASG       ref   
N002 (  1,  1) [000183] D------N----              +--*  LCL_VAR   ref    V14 tmp8         
N001 (  3,  2) [000105] ------?-----              \--*  LCL_VAR   ref    V05 arg5         

***** BB04
STMT00019 (IL   ???...  ???)
N004 (  7,  6) [000181] ------------              *  JTRUE     void  
N003 (  5,  4) [000099] J------N----              \--*  EQ        int   
N001 (  3,  2) [000098] ------------                 +--*  LCL_VAR   ref    V05 arg5         
N002 (  1,  1) [000097] ------------                 \--*  CNS_INT   ref    null

------------ BB05 [???..???) -> BB07 (cond), preds={BB04} succs={BB06,BB07}

***** BB05
STMT00020 (IL   ???...  ???)
N009 ( 18, 22) [000182] -A-X--------              *  JTRUE     void  
N008 ( 16, 20) [000096] JA-X--?N----              \--*  EQ        int   
N002 (  6,  4) [000095] #--X--?-----                 +--*  IND       long  
N001 (  3,  2) [000089] ------?-----                 |  \--*  LCL_VAR   ref    V05 arg5         
N007 (  9, 15) [000093] -A----?-----                 \--*  COMMA     long  
N005 (  6, 13) [000091] -A----?-R---                    +--*  ASG       long  
N004 (  3,  2) [000090] D-----?N----                    |  +--*  LCL_VAR   long   V13 tmp7         
N003 (  2, 10) [000088] H-----?-----                    |  \--*  CNS_INT(h) long   0xd1ffab1e class
N006 (  3,  2) [000092] ------?-----                    \--*  LCL_VAR   long   V13 tmp7         

------------ BB06 [???..???), preds={BB05} succs={BB07}

***** BB06
STMT00022 (IL   ???...  ???)
N007 ( 20, 11) [000186] -ACXG---R---              *  ASG       ref   
N006 (  1,  1) [000185] D------N----              +--*  LCL_VAR   ref    V14 tmp8         
N005 ( 20, 11) [000102] --CXG-?-----              \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL
N003 (  3,  2) [000094] ------?----- arg0 in rcx     +--*  LCL_VAR   long   V13 tmp7         
N004 (  3,  2) [000101] ------?----- arg1 in rdx     \--*  LCL_VAR   ref    V05 arg5         

------------ BB07 [???..037) (return), preds={BB04,BB05,BB06} succs={}

***** BB07
STMT00013 (IL   ???...  ???)
N011 ( 14, 17) [000112] -A-XG-------              *  ASG       ref   
N009 ( 12, 15) [000174] ---XG--N----              +--*  COMMA     ref   
N004 (  8, 11) [000168] ---X--------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
N001 (  1,  1) [000086] ------------              |  |  +--*  CNS_INT   int    4
N003 (  3,  3) [000167] ---X--------              |  |  \--*  ARR_LENGTH int   
N002 (  1,  1) [000085] ------------              |  |     \--*  LCL_VAR   ref    V07 tmp1         
N008 (  4,  4) [000111] a---G--N----              |  \--*  IND       ref   
N007 (  2,  2) [000173] -------N----              |     \--*  ADD       byref 
N005 (  1,  1) [000165] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         
N006 (  1,  1) [000172] ------------              |        \--*  CNS_INT   long   48 Fseq[#ConstantIndex, #FirstElem]
N010 (  1,  1) [000110] ------------              \--*  LCL_VAR   ref    V14 tmp8         

***** BB07
STMT00014 (IL   ???...0x036)
N002 (  2,  2) [000113] ------------              *  RETURN    ref   
N001 (  1,  1) [000005] ------------              \--*  LCL_VAR   ref    V07 tmp1         

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Build SSA representation
*************** In SsaBuilder::Build()
[SsaBuilder] Max block count is 8.

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..???)-> BB04 ( cond )                     i label target hascall idxlen new[] newobj 
BB02 [0003]  1       BB01                  0.25    [???..???)-> BB04 ( cond )                     i 
BB03 [0002]  1       BB02                  0.12    [???..???)                                     i 
BB04 [0001]  3       BB01,BB02,BB03        1       [???..???)-> BB07 ( cond )                     i label target hascall idxlen new[] newobj 
BB05 [0008]  1       BB04                  0.25    [???..???)-> BB07 ( cond )                     i 
BB06 [0007]  1       BB05                  0.12    [???..???)                                     i 
BB07 [0006]  3       BB04,BB05,BB06        1       [???..037)        (return)                     i label target hascall idxlen new[] newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
[SsaBuilder] Topologically sorted the graph.
[SsaBuilder::ComputeImmediateDom]

Inside fgBuildDomTree

After computing the Dominance Tree:
BB01 : BB04 BB02 
BB02 : BB03 
BB04 : BB07 BB05 
BB05 : BB06 

*************** In fgLocalVarLiveness()
In fgLocalVarLivenessInit
Tracked variable (13 out of 15) table:
V07 tmp1          [   ref]: refCnt =   12, refCntWtd =  24   
V08 tmp2          [   ref]: refCnt =    3, refCntWtd =   6   
V09 tmp3          [   ref]: refCnt =    3, refCntWtd =   6   
V10 tmp4          [   ref]: refCnt =    3, refCntWtd =   6   
V01 arg1          [   int]: refCnt =    3, refCntWtd =   3   
V02 arg2          [ short]: refCnt =    3, refCntWtd =   3   
V03 arg3          [ ubyte]: refCnt =    3, refCntWtd =   3   
V12 tmp6          [   ref]: refCnt =    3, refCntWtd =   4.25
V14 tmp8          [   ref]: refCnt =    3, refCntWtd =   4.25
V04 arg4          [   ref]: refCnt =    4, refCntWtd =   2.38
V05 arg5          [   ref]: refCnt =    4, refCntWtd =   2.38
V11 tmp5          [  long]: refCnt =    3, refCntWtd =   1.25
V13 tmp7          [  long]: refCnt =    3, refCntWtd =   1.25

*************** In fgPerBlockLocalVarLiveness()
BB01 USE(4)={                V01 V02 V03     V04} + ByrefExposed + GcHeap
     DEF(5)={V07 V08 V09 V10             V12    } + ByrefExposed + GcHeap

BB02 USE(1)={V04    } + ByrefExposed + GcHeap
     DEF(1)={    V11}

BB03 USE(2)={    V04 V11}
     DEF(1)={V12        }

BB04 USE(3)={V07 V12     V05} + ByrefExposed + GcHeap
     DEF(1)={        V14    } + ByrefExposed + GcHeap

BB05 USE(1)={V05    } + ByrefExposed + GcHeap
     DEF(1)={    V13}

BB06 USE(2)={    V05 V13}
     DEF(1)={V14        }

BB07 USE(2)={V07 V14} + ByrefExposed + GcHeap
     DEF(0)={       } + ByrefExposed + GcHeap

** Memory liveness computed, GcHeap states and ByrefExposed states match
*************** In fgInterBlockLocalVarLiveness()

BB liveness after fgLiveVarAnalysis():

BB01 IN (5)={    V01 V02 V03     V04 V05} + ByrefExposed + GcHeap
     OUT(4)={V07             V12 V04 V05} + ByrefExposed + GcHeap

BB02 IN (4)={V07 V12 V04 V05    } + ByrefExposed + GcHeap
     OUT(5)={V07 V12 V04 V05 V11} + ByrefExposed + GcHeap

BB03 IN (4)={V07     V04 V05 V11} + ByrefExposed + GcHeap
     OUT(3)={V07 V12     V05    } + ByrefExposed + GcHeap

BB04 IN (3)={V07 V12     V05} + ByrefExposed + GcHeap
     OUT(3)={V07     V14 V05} + ByrefExposed + GcHeap

BB05 IN (3)={V07 V14 V05    } + ByrefExposed + GcHeap
     OUT(4)={V07 V14 V05 V13} + ByrefExposed + GcHeap

BB06 IN (3)={V07     V05 V13} + ByrefExposed + GcHeap
     OUT(2)={V07 V14        } + ByrefExposed + GcHeap

BB07 IN (2)={V07 V14} + ByrefExposed + GcHeap
     OUT(0)={       }

*************** In optRemoveRedundantZeroInits()
*************** In SsaBuilder::InsertPhiFunctions()
Inserting phi functions:
Added PHI definition for V14 at start of BB07.
Added PHI definition for V12 at start of BB04.
*************** In SsaBuilder::RenameVariables()

After fgSsaBuild:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..???)-> BB04 ( cond )                     i label target hascall idxlen new[] newobj 
BB02 [0003]  1       BB01                  0.25    [???..???)-> BB04 ( cond )                     i 
BB03 [0002]  1       BB02                  0.12    [???..???)                                     i 
BB04 [0001]  3       BB01,BB02,BB03        1       [???..???)-> BB07 ( cond )                     i label target hascall idxlen new[] newobj 
BB05 [0008]  1       BB04                  0.25    [???..???)-> BB07 ( cond )                     i 
BB06 [0007]  1       BB05                  0.12    [???..???)                                     i 
BB07 [0006]  3       BB04,BB05,BB06        1       [???..037)        (return)                     i label target hascall idxlen new[] newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..???) -> BB04 (cond), preds={} succs={BB02,BB04}

***** BB01
STMT00000 (IL 0x000...0x00F)
N007 ( 17, 18) [000004] -ACXG---R---              *  ASG       ref   
N006 (  1,  1) [000003] D------N----              +--*  LCL_VAR   ref    V07 tmp1         d:1
N005 ( 17, 18) [000002] --CXG-------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWARR_1_OBJ
N003 (  2, 10) [000001] H----------- arg0 in rcx     +--*  CNS_INT(h) long   0xd1ffab1e class
N004 (  1,  1) [000000] ------------ arg1 in rdx     \--*  CNS_INT   long   5

***** BB01
STMT00001 (IL   ???...  ???)
N005 ( 16, 16) [000013] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000012] D------N----              +--*  LCL_VAR   ref    V08 tmp2         d:1
N003 ( 16, 16) [000011] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000010] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class

***** BB01
STMT00002 (IL   ???...  ???)
N007 (  7,  8) [000018] -A-X----R---              *  ASG       long  
N006 (  4,  4) [000017] D--X---N----              +--*  IND       long  
N005 (  2,  2) [000016] -------N----              |  \--*  ADD       byref 
N003 (  1,  1) [000014] ------------              |     +--*  LCL_VAR   ref    V08 tmp2         u:1
N004 (  1,  1) [000015] ------------              |     \--*  CNS_INT   long   8
N002 (  2,  3) [000009] ------------              \--*  CAST      long <- int
N001 (  1,  1) [000008] ------------                 \--*  LCL_VAR   int    V01 arg1         u:1 (last use)

***** BB01
STMT00003 (IL   ???...  ???)
N012 ( 20, 21) [000022] -A-XG-------              *  ASG       ref   
N009 ( 12, 15) [000126] ---XG--N----              +--*  COMMA     ref   
N004 (  8, 11) [000120] ---X--------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
N001 (  1,  1) [000007] ------------              |  |  +--*  CNS_INT   int    0
N003 (  3,  3) [000119] ---X--------              |  |  \--*  ARR_LENGTH int   
N002 (  1,  1) [000006] ------------              |  |     \--*  LCL_VAR   ref    V07 tmp1         u:1
N008 (  4,  4) [000021] a---G--N----              |  \--*  IND       ref   
N007 (  2,  2) [000125] -------N----              |     \--*  ADD       byref 
N005 (  1,  1) [000117] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1
N006 (  1,  1) [000124] ------------              |        \--*  CNS_INT   long   16 Fseq[#FirstElem]
N011 (  7,  5) [000020] ------------              \--*  BOX       ref   
N010 (  1,  1) [000019] ------------                 \--*  LCL_VAR   ref    V08 tmp2         u:1 (last use)

***** BB01
STMT00004 (IL   ???...0x018)
N005 ( 16, 16) [000029] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000028] D------N----              +--*  LCL_VAR   ref    V09 tmp3         d:1
N003 ( 16, 16) [000027] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000026] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class

***** BB01
STMT00005 (IL   ???...  ???)
N007 (  8,  9) [000035] -A-X----R---              *  ASG       int   
N006 (  4,  4) [000034] D--X---N----              +--*  IND       int   
N005 (  2,  2) [000032] -------N----              |  \--*  ADD       byref 
N003 (  1,  1) [000030] ------------              |     +--*  LCL_VAR   ref    V09 tmp3         u:1
N004 (  1,  1) [000031] ------------              |     \--*  CNS_INT   long   8
N002 (  3,  4) [000128] ------------              \--*  CAST      int <- short <- int
N001 (  2,  2) [000025] ------------                 \--*  LCL_VAR   int    V02 arg2         u:1 (last use)

***** BB01
STMT00006 (IL   ???...  ???)
N012 ( 20, 21) [000039] -A-XG-------              *  ASG       ref   
N009 ( 12, 15) [000138] ---XG--N----              +--*  COMMA     ref   
N004 (  8, 11) [000132] ---X--------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
N001 (  1,  1) [000024] ------------              |  |  +--*  CNS_INT   int    1
N003 (  3,  3) [000131] ---X--------              |  |  \--*  ARR_LENGTH int   
N002 (  1,  1) [000023] ------------              |  |     \--*  LCL_VAR   ref    V07 tmp1         u:1
N008 (  4,  4) [000038] a---G--N----              |  \--*  IND       ref   
N007 (  2,  2) [000137] -------N----              |     \--*  ADD       byref 
N005 (  1,  1) [000129] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1
N006 (  1,  1) [000136] ------------              |        \--*  CNS_INT   long   24 Fseq[#ConstantIndex, #FirstElem]
N011 (  7,  5) [000037] ------------              \--*  BOX       ref   
N010 (  1,  1) [000036] ------------                 \--*  LCL_VAR   ref    V09 tmp3         u:1 (last use)

***** BB01
STMT00007 (IL   ???...0x021)
N005 ( 16, 16) [000046] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000045] D------N----              +--*  LCL_VAR   ref    V10 tmp4         d:1
N003 ( 16, 16) [000044] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000043] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class

***** BB01
STMT00008 (IL   ???...  ???)
N007 (  9, 10) [000052] -A-X----R---              *  ASG       short 
N006 (  5,  5) [000051] D--X---N----              +--*  IND       short 
N005 (  2,  2) [000049] -------N----              |  \--*  ADD       byref 
N003 (  1,  1) [000047] ------------              |     +--*  LCL_VAR   ref    V10 tmp4         u:1
N004 (  1,  1) [000048] ------------              |     \--*  CNS_INT   long   8
N002 (  3,  4) [000140] ------------              \--*  CAST      int <- ubyte <- int
N001 (  2,  2) [000042] ------------                 \--*  LCL_VAR   int    V03 arg3         u:1 (last use)

***** BB01
STMT00009 (IL   ???...  ???)
N012 ( 20, 21) [000056] -A-XG-------              *  ASG       ref   
N009 ( 12, 15) [000150] ---XG--N----              +--*  COMMA     ref   
N004 (  8, 11) [000144] ---X--------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
N001 (  1,  1) [000041] ------------              |  |  +--*  CNS_INT   int    2
N003 (  3,  3) [000143] ---X--------              |  |  \--*  ARR_LENGTH int   
N002 (  1,  1) [000040] ------------              |  |     \--*  LCL_VAR   ref    V07 tmp1         u:1
N008 (  4,  4) [000055] a---G--N----              |  \--*  IND       ref   
N007 (  2,  2) [000149] -------N----              |     \--*  ADD       byref 
N005 (  1,  1) [000141] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1
N006 (  1,  1) [000148] ------------              |        \--*  CNS_INT   long   32 Fseq[#ConstantIndex, #FirstElem]
N011 (  7,  5) [000054] ------------              \--*  BOX       ref   
N010 (  1,  1) [000053] ------------                 \--*  LCL_VAR   ref    V10 tmp4         u:1 (last use)

***** BB01
STMT00017 (IL   ???...  ???)
N003 (  3,  3) [000178] -A------R---              *  ASG       ref   
N002 (  1,  1) [000177] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:1
N001 (  3,  2) [000077] ------?-----              \--*  LCL_VAR   ref    V04 arg4         u:1

***** BB01
STMT00015 (IL   ???...  ???)
N004 (  7,  6) [000175] ------------              *  JTRUE     void  
N003 (  5,  4) [000071] J------N----              \--*  EQ        int   
N001 (  3,  2) [000070] ------------                 +--*  LCL_VAR   ref    V04 arg4         u:1
N002 (  1,  1) [000069] ------------                 \--*  CNS_INT   ref    null

------------ BB02 [???..???) -> BB04 (cond), preds={BB01} succs={BB03,BB04}

***** BB02
STMT00016 (IL   ???...  ???)
N009 ( 18, 22) [000176] -A-X--------              *  JTRUE     void  
N008 ( 16, 20) [000068] JA-X--?N----              \--*  EQ        int   
N002 (  6,  4) [000067] #--X--?-----                 +--*  IND       long  
N001 (  3,  2) [000061] ------?-----                 |  \--*  LCL_VAR   ref    V04 arg4         u:1
N007 (  9, 15) [000065] -A----?-----                 \--*  COMMA     long  
N005 (  6, 13) [000063] -A----?-R---                    +--*  ASG       long  
N004 (  3,  2) [000062] D-----?N----                    |  +--*  LCL_VAR   long   V11 tmp5         d:1
N003 (  2, 10) [000060] H-----?-----                    |  \--*  CNS_INT(h) long   0xd1ffab1e class
N006 (  3,  2) [000064] ------?-----                    \--*  LCL_VAR   long   V11 tmp5         u:1

------------ BB03 [???..???), preds={BB02} succs={BB04}

***** BB03
STMT00018 (IL   ???...  ???)
N007 ( 20, 11) [000180] -ACXG---R---              *  ASG       ref   
N006 (  1,  1) [000179] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:3
N005 ( 20, 11) [000074] --CXG-?-----              \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL
N003 (  3,  2) [000066] ------?----- arg0 in rcx     +--*  LCL_VAR   long   V11 tmp5         u:1 (last use)
N004 (  3,  2) [000073] ------?----- arg1 in rdx     \--*  LCL_VAR   ref    V04 arg4         u:1 (last use)

------------ BB04 [???..???) -> BB07 (cond), preds={BB01,BB02,BB03} succs={BB05,BB07}

***** BB04
STMT00024 (IL   ???...  ???)
N005 (  0,  0) [000192] -A------R---              *  ASG       ref   
N004 (  0,  0) [000190] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:2
N003 (  0,  0) [000191] ------------              \--*  PHI       ref   
N001 (  0,  0) [000196] ------------ pred BB03       +--*  PHI_ARG   ref    V12 tmp6         u:3
N002 (  0,  0) [000193] ------------ pred BB01       \--*  PHI_ARG   ref    V12 tmp6         u:1

***** BB04
STMT00011 (IL   ???...  ???)
N011 ( 14, 17) [000084] -A-XG-------              *  ASG       ref   
N009 ( 12, 15) [000162] ---XG--N----              +--*  COMMA     ref   
N004 (  8, 11) [000156] ---X--------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
N001 (  1,  1) [000058] ------------              |  |  +--*  CNS_INT   int    3
N003 (  3,  3) [000155] ---X--------              |  |  \--*  ARR_LENGTH int   
N002 (  1,  1) [000057] ------------              |  |     \--*  LCL_VAR   ref    V07 tmp1         u:1
N008 (  4,  4) [000083] a---G--N----              |  \--*  IND       ref   
N007 (  2,  2) [000161] -------N----              |     \--*  ADD       byref 
N005 (  1,  1) [000153] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1
N006 (  1,  1) [000160] ------------              |        \--*  CNS_INT   long   40 Fseq[#ConstantIndex, #FirstElem]
N010 (  1,  1) [000082] ------------              \--*  LCL_VAR   ref    V12 tmp6         u:2 (last use)

***** BB04
STMT00021 (IL   ???...  ???)
N003 (  3,  3) [000184] -A------R---              *  ASG       ref   
N002 (  1,  1) [000183] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:1
N001 (  3,  2) [000105] ------?-----              \--*  LCL_VAR   ref    V05 arg5         u:1

***** BB04
STMT00019 (IL   ???...  ???)
N004 (  7,  6) [000181] ------------              *  JTRUE     void  
N003 (  5,  4) [000099] J------N----              \--*  EQ        int   
N001 (  3,  2) [000098] ------------                 +--*  LCL_VAR   ref    V05 arg5         u:1
N002 (  1,  1) [000097] ------------                 \--*  CNS_INT   ref    null

------------ BB05 [???..???) -> BB07 (cond), preds={BB04} succs={BB06,BB07}

***** BB05
STMT00020 (IL   ???...  ???)
N009 ( 18, 22) [000182] -A-X--------              *  JTRUE     void  
N008 ( 16, 20) [000096] JA-X--?N----              \--*  EQ        int   
N002 (  6,  4) [000095] #--X--?-----                 +--*  IND       long  
N001 (  3,  2) [000089] ------?-----                 |  \--*  LCL_VAR   ref    V05 arg5         u:1
N007 (  9, 15) [000093] -A----?-----                 \--*  COMMA     long  
N005 (  6, 13) [000091] -A----?-R---                    +--*  ASG       long  
N004 (  3,  2) [000090] D-----?N----                    |  +--*  LCL_VAR   long   V13 tmp7         d:1
N003 (  2, 10) [000088] H-----?-----                    |  \--*  CNS_INT(h) long   0xd1ffab1e class
N006 (  3,  2) [000092] ------?-----                    \--*  LCL_VAR   long   V13 tmp7         u:1

------------ BB06 [???..???), preds={BB05} succs={BB07}

***** BB06
STMT00022 (IL   ???...  ???)
N007 ( 20, 11) [000186] -ACXG---R---              *  ASG       ref   
N006 (  1,  1) [000185] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:3
N005 ( 20, 11) [000102] --CXG-?-----              \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL
N003 (  3,  2) [000094] ------?----- arg0 in rcx     +--*  LCL_VAR   long   V13 tmp7         u:1 (last use)
N004 (  3,  2) [000101] ------?----- arg1 in rdx     \--*  LCL_VAR   ref    V05 arg5         u:1 (last use)

------------ BB07 [???..037) (return), preds={BB04,BB05,BB06} succs={}

***** BB07
STMT00023 (IL   ???...  ???)
N005 (  0,  0) [000189] -A------R---              *  ASG       ref   
N004 (  0,  0) [000187] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:2
N003 (  0,  0) [000188] ------------              \--*  PHI       ref   
N001 (  0,  0) [000195] ------------ pred BB06       +--*  PHI_ARG   ref    V14 tmp8         u:3
N002 (  0,  0) [000194] ------------ pred BB04       \--*  PHI_ARG   ref    V14 tmp8         u:1

***** BB07
STMT00013 (IL   ???...  ???)
N011 ( 14, 17) [000112] -A-XG-------              *  ASG       ref   
N009 ( 12, 15) [000174] ---XG--N----              +--*  COMMA     ref   
N004 (  8, 11) [000168] ---X--------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
N001 (  1,  1) [000086] ------------              |  |  +--*  CNS_INT   int    4
N003 (  3,  3) [000167] ---X--------              |  |  \--*  ARR_LENGTH int   
N002 (  1,  1) [000085] ------------              |  |     \--*  LCL_VAR   ref    V07 tmp1         u:1
N008 (  4,  4) [000111] a---G--N----              |  \--*  IND       ref   
N007 (  2,  2) [000173] -------N----              |     \--*  ADD       byref 
N005 (  1,  1) [000165] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1
N006 (  1,  1) [000172] ------------              |        \--*  CNS_INT   long   48 Fseq[#ConstantIndex, #FirstElem]
N010 (  1,  1) [000110] ------------              \--*  LCL_VAR   ref    V14 tmp8         u:2 (last use)

***** BB07
STMT00014 (IL   ???...0x036)
N002 (  2,  2) [000113] ------------              *  RETURN    ref   
N001 (  1,  1) [000005] ------------              \--*  LCL_VAR   ref    V07 tmp1         u:1 (last use)

-------------------------------------------------------------------------------------------------------------------

*************** Finishing PHASE Build SSA representation
Trees after Build SSA representation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..???)-> BB04 ( cond )                     i label target hascall idxlen new[] newobj 
BB02 [0003]  1       BB01                  0.25    [???..???)-> BB04 ( cond )                     i 
BB03 [0002]  1       BB02                  0.12    [???..???)                                     i 
BB04 [0001]  3       BB01,BB02,BB03        1       [???..???)-> BB07 ( cond )                     i label target hascall idxlen new[] newobj 
BB05 [0008]  1       BB04                  0.25    [???..???)-> BB07 ( cond )                     i 
BB06 [0007]  1       BB05                  0.12    [???..???)                                     i 
BB07 [0006]  3       BB04,BB05,BB06        1       [???..037)        (return)                     i label target hascall idxlen new[] newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..???) -> BB04 (cond), preds={} succs={BB02,BB04}

***** BB01
STMT00000 (IL 0x000...0x00F)
N007 ( 17, 18) [000004] -ACXG---R---              *  ASG       ref   
N006 (  1,  1) [000003] D------N----              +--*  LCL_VAR   ref    V07 tmp1         d:1
N005 ( 17, 18) [000002] --CXG-------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWARR_1_OBJ
N003 (  2, 10) [000001] H----------- arg0 in rcx     +--*  CNS_INT(h) long   0xd1ffab1e class
N004 (  1,  1) [000000] ------------ arg1 in rdx     \--*  CNS_INT   long   5

***** BB01
STMT00001 (IL   ???...  ???)
N005 ( 16, 16) [000013] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000012] D------N----              +--*  LCL_VAR   ref    V08 tmp2         d:1
N003 ( 16, 16) [000011] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000010] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class

***** BB01
STMT00002 (IL   ???...  ???)
N007 (  7,  8) [000018] -A-X----R---              *  ASG       long  
N006 (  4,  4) [000017] D--X---N----              +--*  IND       long  
N005 (  2,  2) [000016] -------N----              |  \--*  ADD       byref 
N003 (  1,  1) [000014] ------------              |     +--*  LCL_VAR   ref    V08 tmp2         u:1
N004 (  1,  1) [000015] ------------              |     \--*  CNS_INT   long   8
N002 (  2,  3) [000009] ------------              \--*  CAST      long <- int
N001 (  1,  1) [000008] ------------                 \--*  LCL_VAR   int    V01 arg1         u:1 (last use)

***** BB01
STMT00003 (IL   ???...  ???)
N012 ( 20, 21) [000022] -A-XG-------              *  ASG       ref   
N009 ( 12, 15) [000126] ---XG--N----              +--*  COMMA     ref   
N004 (  8, 11) [000120] ---X--------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
N001 (  1,  1) [000007] ------------              |  |  +--*  CNS_INT   int    0
N003 (  3,  3) [000119] ---X--------              |  |  \--*  ARR_LENGTH int   
N002 (  1,  1) [000006] ------------              |  |     \--*  LCL_VAR   ref    V07 tmp1         u:1
N008 (  4,  4) [000021] a---G--N----              |  \--*  IND       ref   
N007 (  2,  2) [000125] -------N----              |     \--*  ADD       byref 
N005 (  1,  1) [000117] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1
N006 (  1,  1) [000124] ------------              |        \--*  CNS_INT   long   16 Fseq[#FirstElem]
N011 (  7,  5) [000020] ------------              \--*  BOX       ref   
N010 (  1,  1) [000019] ------------                 \--*  LCL_VAR   ref    V08 tmp2         u:1 (last use)

***** BB01
STMT00004 (IL   ???...0x018)
N005 ( 16, 16) [000029] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000028] D------N----              +--*  LCL_VAR   ref    V09 tmp3         d:1
N003 ( 16, 16) [000027] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000026] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class

***** BB01
STMT00005 (IL   ???...  ???)
N007 (  8,  9) [000035] -A-X----R---              *  ASG       int   
N006 (  4,  4) [000034] D--X---N----              +--*  IND       int   
N005 (  2,  2) [000032] -------N----              |  \--*  ADD       byref 
N003 (  1,  1) [000030] ------------              |     +--*  LCL_VAR   ref    V09 tmp3         u:1
N004 (  1,  1) [000031] ------------              |     \--*  CNS_INT   long   8
N002 (  3,  4) [000128] ------------              \--*  CAST      int <- short <- int
N001 (  2,  2) [000025] ------------                 \--*  LCL_VAR   int    V02 arg2         u:1 (last use)

***** BB01
STMT00006 (IL   ???...  ???)
N012 ( 20, 21) [000039] -A-XG-------              *  ASG       ref   
N009 ( 12, 15) [000138] ---XG--N----              +--*  COMMA     ref   
N004 (  8, 11) [000132] ---X--------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
N001 (  1,  1) [000024] ------------              |  |  +--*  CNS_INT   int    1
N003 (  3,  3) [000131] ---X--------              |  |  \--*  ARR_LENGTH int   
N002 (  1,  1) [000023] ------------              |  |     \--*  LCL_VAR   ref    V07 tmp1         u:1
N008 (  4,  4) [000038] a---G--N----              |  \--*  IND       ref   
N007 (  2,  2) [000137] -------N----              |     \--*  ADD       byref 
N005 (  1,  1) [000129] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1
N006 (  1,  1) [000136] ------------              |        \--*  CNS_INT   long   24 Fseq[#ConstantIndex, #FirstElem]
N011 (  7,  5) [000037] ------------              \--*  BOX       ref   
N010 (  1,  1) [000036] ------------                 \--*  LCL_VAR   ref    V09 tmp3         u:1 (last use)

***** BB01
STMT00007 (IL   ???...0x021)
N005 ( 16, 16) [000046] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000045] D------N----              +--*  LCL_VAR   ref    V10 tmp4         d:1
N003 ( 16, 16) [000044] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000043] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class

***** BB01
STMT00008 (IL   ???...  ???)
N007 (  9, 10) [000052] -A-X----R---              *  ASG       short 
N006 (  5,  5) [000051] D--X---N----              +--*  IND       short 
N005 (  2,  2) [000049] -------N----              |  \--*  ADD       byref 
N003 (  1,  1) [000047] ------------              |     +--*  LCL_VAR   ref    V10 tmp4         u:1
N004 (  1,  1) [000048] ------------              |     \--*  CNS_INT   long   8
N002 (  3,  4) [000140] ------------              \--*  CAST      int <- ubyte <- int
N001 (  2,  2) [000042] ------------                 \--*  LCL_VAR   int    V03 arg3         u:1 (last use)

***** BB01
STMT00009 (IL   ???...  ???)
N012 ( 20, 21) [000056] -A-XG-------              *  ASG       ref   
N009 ( 12, 15) [000150] ---XG--N----              +--*  COMMA     ref   
N004 (  8, 11) [000144] ---X--------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
N001 (  1,  1) [000041] ------------              |  |  +--*  CNS_INT   int    2
N003 (  3,  3) [000143] ---X--------              |  |  \--*  ARR_LENGTH int   
N002 (  1,  1) [000040] ------------              |  |     \--*  LCL_VAR   ref    V07 tmp1         u:1
N008 (  4,  4) [000055] a---G--N----              |  \--*  IND       ref   
N007 (  2,  2) [000149] -------N----              |     \--*  ADD       byref 
N005 (  1,  1) [000141] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1
N006 (  1,  1) [000148] ------------              |        \--*  CNS_INT   long   32 Fseq[#ConstantIndex, #FirstElem]
N011 (  7,  5) [000054] ------------              \--*  BOX       ref   
N010 (  1,  1) [000053] ------------                 \--*  LCL_VAR   ref    V10 tmp4         u:1 (last use)

***** BB01
STMT00017 (IL   ???...  ???)
N003 (  3,  3) [000178] -A------R---              *  ASG       ref   
N002 (  1,  1) [000177] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:1
N001 (  3,  2) [000077] ------?-----              \--*  LCL_VAR   ref    V04 arg4         u:1

***** BB01
STMT00015 (IL   ???...  ???)
N004 (  7,  6) [000175] ------------              *  JTRUE     void  
N003 (  5,  4) [000071] J------N----              \--*  EQ        int   
N001 (  3,  2) [000070] ------------                 +--*  LCL_VAR   ref    V04 arg4         u:1
N002 (  1,  1) [000069] ------------                 \--*  CNS_INT   ref    null

------------ BB02 [???..???) -> BB04 (cond), preds={BB01} succs={BB03,BB04}

***** BB02
STMT00016 (IL   ???...  ???)
N009 ( 18, 22) [000176] -A-X--------              *  JTRUE     void  
N008 ( 16, 20) [000068] JA-X--?N----              \--*  EQ        int   
N002 (  6,  4) [000067] #--X--?-----                 +--*  IND       long  
N001 (  3,  2) [000061] ------?-----                 |  \--*  LCL_VAR   ref    V04 arg4         u:1
N007 (  9, 15) [000065] -A----?-----                 \--*  COMMA     long  
N005 (  6, 13) [000063] -A----?-R---                    +--*  ASG       long  
N004 (  3,  2) [000062] D-----?N----                    |  +--*  LCL_VAR   long   V11 tmp5         d:1
N003 (  2, 10) [000060] H-----?-----                    |  \--*  CNS_INT(h) long   0xd1ffab1e class
N006 (  3,  2) [000064] ------?-----                    \--*  LCL_VAR   long   V11 tmp5         u:1

------------ BB03 [???..???), preds={BB02} succs={BB04}

***** BB03
STMT00018 (IL   ???...  ???)
N007 ( 20, 11) [000180] -ACXG---R---              *  ASG       ref   
N006 (  1,  1) [000179] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:3
N005 ( 20, 11) [000074] --CXG-?-----              \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL
N003 (  3,  2) [000066] ------?----- arg0 in rcx     +--*  LCL_VAR   long   V11 tmp5         u:1 (last use)
N004 (  3,  2) [000073] ------?----- arg1 in rdx     \--*  LCL_VAR   ref    V04 arg4         u:1 (last use)

------------ BB04 [???..???) -> BB07 (cond), preds={BB01,BB02,BB03} succs={BB05,BB07}

***** BB04
STMT00024 (IL   ???...  ???)
N005 (  0,  0) [000192] -A------R---              *  ASG       ref   
N004 (  0,  0) [000190] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:2
N003 (  0,  0) [000191] ------------              \--*  PHI       ref   
N001 (  0,  0) [000196] ------------ pred BB03       +--*  PHI_ARG   ref    V12 tmp6         u:3
N002 (  0,  0) [000193] ------------ pred BB01       \--*  PHI_ARG   ref    V12 tmp6         u:1

***** BB04
STMT00011 (IL   ???...  ???)
N011 ( 14, 17) [000084] -A-XG-------              *  ASG       ref   
N009 ( 12, 15) [000162] ---XG--N----              +--*  COMMA     ref   
N004 (  8, 11) [000156] ---X--------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
N001 (  1,  1) [000058] ------------              |  |  +--*  CNS_INT   int    3
N003 (  3,  3) [000155] ---X--------              |  |  \--*  ARR_LENGTH int   
N002 (  1,  1) [000057] ------------              |  |     \--*  LCL_VAR   ref    V07 tmp1         u:1
N008 (  4,  4) [000083] a---G--N----              |  \--*  IND       ref   
N007 (  2,  2) [000161] -------N----              |     \--*  ADD       byref 
N005 (  1,  1) [000153] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1
N006 (  1,  1) [000160] ------------              |        \--*  CNS_INT   long   40 Fseq[#ConstantIndex, #FirstElem]
N010 (  1,  1) [000082] ------------              \--*  LCL_VAR   ref    V12 tmp6         u:2 (last use)

***** BB04
STMT00021 (IL   ???...  ???)
N003 (  3,  3) [000184] -A------R---              *  ASG       ref   
N002 (  1,  1) [000183] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:1
N001 (  3,  2) [000105] ------?-----              \--*  LCL_VAR   ref    V05 arg5         u:1

***** BB04
STMT00019 (IL   ???...  ???)
N004 (  7,  6) [000181] ------------              *  JTRUE     void  
N003 (  5,  4) [000099] J------N----              \--*  EQ        int   
N001 (  3,  2) [000098] ------------                 +--*  LCL_VAR   ref    V05 arg5         u:1
N002 (  1,  1) [000097] ------------                 \--*  CNS_INT   ref    null

------------ BB05 [???..???) -> BB07 (cond), preds={BB04} succs={BB06,BB07}

***** BB05
STMT00020 (IL   ???...  ???)
N009 ( 18, 22) [000182] -A-X--------              *  JTRUE     void  
N008 ( 16, 20) [000096] JA-X--?N----              \--*  EQ        int   
N002 (  6,  4) [000095] #--X--?-----                 +--*  IND       long  
N001 (  3,  2) [000089] ------?-----                 |  \--*  LCL_VAR   ref    V05 arg5         u:1
N007 (  9, 15) [000093] -A----?-----                 \--*  COMMA     long  
N005 (  6, 13) [000091] -A----?-R---                    +--*  ASG       long  
N004 (  3,  2) [000090] D-----?N----                    |  +--*  LCL_VAR   long   V13 tmp7         d:1
N003 (  2, 10) [000088] H-----?-----                    |  \--*  CNS_INT(h) long   0xd1ffab1e class
N006 (  3,  2) [000092] ------?-----                    \--*  LCL_VAR   long   V13 tmp7         u:1

------------ BB06 [???..???), preds={BB05} succs={BB07}

***** BB06
STMT00022 (IL   ???...  ???)
N007 ( 20, 11) [000186] -ACXG---R---              *  ASG       ref   
N006 (  1,  1) [000185] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:3
N005 ( 20, 11) [000102] --CXG-?-----              \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL
N003 (  3,  2) [000094] ------?----- arg0 in rcx     +--*  LCL_VAR   long   V13 tmp7         u:1 (last use)
N004 (  3,  2) [000101] ------?----- arg1 in rdx     \--*  LCL_VAR   ref    V05 arg5         u:1 (last use)

------------ BB07 [???..037) (return), preds={BB04,BB05,BB06} succs={}

***** BB07
STMT00023 (IL   ???...  ???)
N005 (  0,  0) [000189] -A------R---              *  ASG       ref   
N004 (  0,  0) [000187] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:2
N003 (  0,  0) [000188] ------------              \--*  PHI       ref   
N001 (  0,  0) [000195] ------------ pred BB06       +--*  PHI_ARG   ref    V14 tmp8         u:3
N002 (  0,  0) [000194] ------------ pred BB04       \--*  PHI_ARG   ref    V14 tmp8         u:1

***** BB07
STMT00013 (IL   ???...  ???)
N011 ( 14, 17) [000112] -A-XG-------              *  ASG       ref   
N009 ( 12, 15) [000174] ---XG--N----              +--*  COMMA     ref   
N004 (  8, 11) [000168] ---X--------              |  +--*  ARR_BOUNDS_CHECK_Rng void  
N001 (  1,  1) [000086] ------------              |  |  +--*  CNS_INT   int    4
N003 (  3,  3) [000167] ---X--------              |  |  \--*  ARR_LENGTH int   
N002 (  1,  1) [000085] ------------              |  |     \--*  LCL_VAR   ref    V07 tmp1         u:1
N008 (  4,  4) [000111] a---G--N----              |  \--*  IND       ref   
N007 (  2,  2) [000173] -------N----              |     \--*  ADD       byref 
N005 (  1,  1) [000165] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1
N006 (  1,  1) [000172] ------------              |        \--*  CNS_INT   long   48 Fseq[#ConstantIndex, #FirstElem]
N010 (  1,  1) [000110] ------------              \--*  LCL_VAR   ref    V14 tmp8         u:2 (last use)

***** BB07
STMT00014 (IL   ???...0x036)
N002 (  2,  2) [000113] ------------              *  RETURN    ref   
N001 (  1,  1) [000005] ------------              \--*  LCL_VAR   ref    V07 tmp1         u:1 (last use)

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist

*************** Starting PHASE Early Value Propagation
*************** In optEarlyProp()
Before optRemoveRangeCheck:
N009 ( 12, 15) [000126] ---XG--N----              *  COMMA     ref   
N004 (  8, 11) [000120] ---X--------              +--*  ARR_BOUNDS_CHECK_Rng void  
N001 (  1,  1) [000007] ------------              |  +--*  CNS_INT   int    0
N003 (  3,  3) [000119] ---X--------              |  \--*  ARR_LENGTH int   
N002 (  1,  1) [000006] ------------              |     \--*  LCL_VAR   ref    V07 tmp1         u:1
N008 (  4,  4) [000021] a---G--N----              \--*  IND       ref   
N007 (  2,  2) [000125] -------N----                 \--*  ADD       byref 
N005 (  1,  1) [000117] ------------                    +--*  LCL_VAR   ref    V07 tmp1         u:1
N006 (  1,  1) [000124] ------------                    \--*  CNS_INT   long   16 Fseq[#FirstElem]
After optRemoveRangeCheck:
N006 (  4,  4) [000126] ----G--N----              *  COMMA     ref   
N001 (  0,  0) [000197] ------------              +--*  NOP       void  
N005 (  4,  4) [000021] a---G--N----              \--*  IND       ref   
N004 (  2,  2) [000125] -------N----                 \--*  ADD       byref 
N002 (  1,  1) [000117] ------------                    +--*  LCL_VAR   ref    V07 tmp1         u:1
N003 (  1,  1) [000124] ------------                    \--*  CNS_INT   long   16 Fseq[#FirstElem]
Before optRemoveRangeCheck:
N009 ( 12, 15) [000138] ---XG--N----              *  COMMA     ref   
N004 (  8, 11) [000132] ---X--------              +--*  ARR_BOUNDS_CHECK_Rng void  
N001 (  1,  1) [000024] ------------              |  +--*  CNS_INT   int    1
N003 (  3,  3) [000131] ---X--------              |  \--*  ARR_LENGTH int   
N002 (  1,  1) [000023] ------------              |     \--*  LCL_VAR   ref    V07 tmp1         u:1
N008 (  4,  4) [000038] a---G--N----              \--*  IND       ref   
N007 (  2,  2) [000137] -------N----                 \--*  ADD       byref 
N005 (  1,  1) [000129] ------------                    +--*  LCL_VAR   ref    V07 tmp1         u:1
N006 (  1,  1) [000136] ------------                    \--*  CNS_INT   long   24 Fseq[#ConstantIndex, #FirstElem]
After optRemoveRangeCheck:
N006 (  4,  4) [000138] ----G--N----              *  COMMA     ref   
N001 (  0,  0) [000198] ------------              +--*  NOP       void  
N005 (  4,  4) [000038] a---G--N----              \--*  IND       ref   
N004 (  2,  2) [000137] -------N----                 \--*  ADD       byref 
N002 (  1,  1) [000129] ------------                    +--*  LCL_VAR   ref    V07 tmp1         u:1
N003 (  1,  1) [000136] ------------                    \--*  CNS_INT   long   24 Fseq[#ConstantIndex, #FirstElem]
Before optRemoveRangeCheck:
N009 ( 12, 15) [000150] ---XG--N----              *  COMMA     ref   
N004 (  8, 11) [000144] ---X--------              +--*  ARR_BOUNDS_CHECK_Rng void  
N001 (  1,  1) [000041] ------------              |  +--*  CNS_INT   int    2
N003 (  3,  3) [000143] ---X--------              |  \--*  ARR_LENGTH int   
N002 (  1,  1) [000040] ------------              |     \--*  LCL_VAR   ref    V07 tmp1         u:1
N008 (  4,  4) [000055] a---G--N----              \--*  IND       ref   
N007 (  2,  2) [000149] -------N----                 \--*  ADD       byref 
N005 (  1,  1) [000141] ------------                    +--*  LCL_VAR   ref    V07 tmp1         u:1
N006 (  1,  1) [000148] ------------                    \--*  CNS_INT   long   32 Fseq[#ConstantIndex, #FirstElem]
After optRemoveRangeCheck:
N006 (  4,  4) [000150] ----G--N----              *  COMMA     ref   
N001 (  0,  0) [000199] ------------              +--*  NOP       void  
N005 (  4,  4) [000055] a---G--N----              \--*  IND       ref   
N004 (  2,  2) [000149] -------N----                 \--*  ADD       byref 
N002 (  1,  1) [000141] ------------                    +--*  LCL_VAR   ref    V07 tmp1         u:1
N003 (  1,  1) [000148] ------------                    \--*  CNS_INT   long   32 Fseq[#ConstantIndex, #FirstElem]
Before optRemoveRangeCheck:
N009 ( 12, 15) [000162] ---XG--N----              *  COMMA     ref   
N004 (  8, 11) [000156] ---X--------              +--*  ARR_BOUNDS_CHECK_Rng void  
N001 (  1,  1) [000058] ------------              |  +--*  CNS_INT   int    3
N003 (  3,  3) [000155] ---X--------              |  \--*  ARR_LENGTH int   
N002 (  1,  1) [000057] ------------              |     \--*  LCL_VAR   ref    V07 tmp1         u:1
N008 (  4,  4) [000083] a---G--N----              \--*  IND       ref   
N007 (  2,  2) [000161] -------N----                 \--*  ADD       byref 
N005 (  1,  1) [000153] ------------                    +--*  LCL_VAR   ref    V07 tmp1         u:1
N006 (  1,  1) [000160] ------------                    \--*  CNS_INT   long   40 Fseq[#ConstantIndex, #FirstElem]
After optRemoveRangeCheck:
N006 (  4,  4) [000162] ----G--N----              *  COMMA     ref   
N001 (  0,  0) [000200] ------------              +--*  NOP       void  
N005 (  4,  4) [000083] a---G--N----              \--*  IND       ref   
N004 (  2,  2) [000161] -------N----                 \--*  ADD       byref 
N002 (  1,  1) [000153] ------------                    +--*  LCL_VAR   ref    V07 tmp1         u:1
N003 (  1,  1) [000160] ------------                    \--*  CNS_INT   long   40 Fseq[#ConstantIndex, #FirstElem]
Before optRemoveRangeCheck:
N009 ( 12, 15) [000174] ---XG--N----              *  COMMA     ref   
N004 (  8, 11) [000168] ---X--------              +--*  ARR_BOUNDS_CHECK_Rng void  
N001 (  1,  1) [000086] ------------              |  +--*  CNS_INT   int    4
N003 (  3,  3) [000167] ---X--------              |  \--*  ARR_LENGTH int   
N002 (  1,  1) [000085] ------------              |     \--*  LCL_VAR   ref    V07 tmp1         u:1
N008 (  4,  4) [000111] a---G--N----              \--*  IND       ref   
N007 (  2,  2) [000173] -------N----                 \--*  ADD       byref 
N005 (  1,  1) [000165] ------------                    +--*  LCL_VAR   ref    V07 tmp1         u:1
N006 (  1,  1) [000172] ------------                    \--*  CNS_INT   long   48 Fseq[#ConstantIndex, #FirstElem]
After optRemoveRangeCheck:
N006 (  4,  4) [000174] ----G--N----              *  COMMA     ref   
N001 (  0,  0) [000201] ------------              +--*  NOP       void  
N005 (  4,  4) [000111] a---G--N----              \--*  IND       ref   
N004 (  2,  2) [000173] -------N----                 \--*  ADD       byref 
N002 (  1,  1) [000165] ------------                    +--*  LCL_VAR   ref    V07 tmp1         u:1
N003 (  1,  1) [000172] ------------                    \--*  CNS_INT   long   48 Fseq[#ConstantIndex, #FirstElem]

After optEarlyProp:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..???)-> BB04 ( cond )                     i label target hascall idxlen new[] newobj 
BB02 [0003]  1       BB01                  0.25    [???..???)-> BB04 ( cond )                     i 
BB03 [0002]  1       BB02                  0.12    [???..???)                                     i 
BB04 [0001]  3       BB01,BB02,BB03        1       [???..???)-> BB07 ( cond )                     i label target hascall idxlen new[] newobj 
BB05 [0008]  1       BB04                  0.25    [???..???)-> BB07 ( cond )                     i 
BB06 [0007]  1       BB05                  0.12    [???..???)                                     i 
BB07 [0006]  3       BB04,BB05,BB06        1       [???..037)        (return)                     i label target hascall idxlen new[] newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..???) -> BB04 (cond), preds={} succs={BB02,BB04}

***** BB01
STMT00000 (IL 0x000...0x00F)
N007 ( 17, 18) [000004] -ACXG---R---              *  ASG       ref   
N006 (  1,  1) [000003] D------N----              +--*  LCL_VAR   ref    V07 tmp1         d:1
N005 ( 17, 18) [000002] --CXG-------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWARR_1_OBJ
N003 (  2, 10) [000001] H----------- arg0 in rcx     +--*  CNS_INT(h) long   0xd1ffab1e class
N004 (  1,  1) [000000] ------------ arg1 in rdx     \--*  CNS_INT   long   5

***** BB01
STMT00001 (IL   ???...  ???)
N005 ( 16, 16) [000013] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000012] D------N----              +--*  LCL_VAR   ref    V08 tmp2         d:1
N003 ( 16, 16) [000011] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000010] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class

***** BB01
STMT00002 (IL   ???...  ???)
N007 (  7,  8) [000018] -A-X----R---              *  ASG       long  
N006 (  4,  4) [000017] D--X---N----              +--*  IND       long  
N005 (  2,  2) [000016] -------N----              |  \--*  ADD       byref 
N003 (  1,  1) [000014] ------------              |     +--*  LCL_VAR   ref    V08 tmp2         u:1
N004 (  1,  1) [000015] ------------              |     \--*  CNS_INT   long   8
N002 (  2,  3) [000009] ------------              \--*  CAST      long <- int
N001 (  1,  1) [000008] ------------                 \--*  LCL_VAR   int    V01 arg1         u:1 (last use)

***** BB01
STMT00003 (IL   ???...  ???)
N009 ( 12, 10) [000022] -A--G-------              *  ASG       ref   
N006 (  4,  4) [000126] ----G--N----              +--*  COMMA     ref   
N001 (  0,  0) [000197] ------------              |  +--*  NOP       void  
N005 (  4,  4) [000021] a---G--N----              |  \--*  IND       ref   
N004 (  2,  2) [000125] -------N----              |     \--*  ADD       byref 
N002 (  1,  1) [000117] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1
N003 (  1,  1) [000124] ------------              |        \--*  CNS_INT   long   16 Fseq[#FirstElem]
N008 (  7,  5) [000020] ------------              \--*  BOX       ref   
N007 (  1,  1) [000019] ------------                 \--*  LCL_VAR   ref    V08 tmp2         u:1 (last use)

***** BB01
STMT00004 (IL   ???...0x018)
N005 ( 16, 16) [000029] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000028] D------N----              +--*  LCL_VAR   ref    V09 tmp3         d:1
N003 ( 16, 16) [000027] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000026] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class

***** BB01
STMT00005 (IL   ???...  ???)
N007 (  8,  9) [000035] -A-X----R---              *  ASG       int   
N006 (  4,  4) [000034] D--X---N----              +--*  IND       int   
N005 (  2,  2) [000032] -------N----              |  \--*  ADD       byref 
N003 (  1,  1) [000030] ------------              |     +--*  LCL_VAR   ref    V09 tmp3         u:1
N004 (  1,  1) [000031] ------------              |     \--*  CNS_INT   long   8
N002 (  3,  4) [000128] ------------              \--*  CAST      int <- short <- int
N001 (  2,  2) [000025] ------------                 \--*  LCL_VAR   int    V02 arg2         u:1 (last use)

***** BB01
STMT00006 (IL   ???...  ???)
N009 ( 12, 10) [000039] -A--G-------              *  ASG       ref   
N006 (  4,  4) [000138] ----G--N----              +--*  COMMA     ref   
N001 (  0,  0) [000198] ------------              |  +--*  NOP       void  
N005 (  4,  4) [000038] a---G--N----              |  \--*  IND       ref   
N004 (  2,  2) [000137] -------N----              |     \--*  ADD       byref 
N002 (  1,  1) [000129] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1
N003 (  1,  1) [000136] ------------              |        \--*  CNS_INT   long   24 Fseq[#ConstantIndex, #FirstElem]
N008 (  7,  5) [000037] ------------              \--*  BOX       ref   
N007 (  1,  1) [000036] ------------                 \--*  LCL_VAR   ref    V09 tmp3         u:1 (last use)

***** BB01
STMT00007 (IL   ???...0x021)
N005 ( 16, 16) [000046] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000045] D------N----              +--*  LCL_VAR   ref    V10 tmp4         d:1
N003 ( 16, 16) [000044] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000043] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class

***** BB01
STMT00008 (IL   ???...  ???)
N007 (  9, 10) [000052] -A-X----R---              *  ASG       short 
N006 (  5,  5) [000051] D--X---N----              +--*  IND       short 
N005 (  2,  2) [000049] -------N----              |  \--*  ADD       byref 
N003 (  1,  1) [000047] ------------              |     +--*  LCL_VAR   ref    V10 tmp4         u:1
N004 (  1,  1) [000048] ------------              |     \--*  CNS_INT   long   8
N002 (  3,  4) [000140] ------------              \--*  CAST      int <- ubyte <- int
N001 (  2,  2) [000042] ------------                 \--*  LCL_VAR   int    V03 arg3         u:1 (last use)

***** BB01
STMT00009 (IL   ???...  ???)
N009 ( 12, 10) [000056] -A--G-------              *  ASG       ref   
N006 (  4,  4) [000150] ----G--N----              +--*  COMMA     ref   
N001 (  0,  0) [000199] ------------              |  +--*  NOP       void  
N005 (  4,  4) [000055] a---G--N----              |  \--*  IND       ref   
N004 (  2,  2) [000149] -------N----              |     \--*  ADD       byref 
N002 (  1,  1) [000141] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1
N003 (  1,  1) [000148] ------------              |        \--*  CNS_INT   long   32 Fseq[#ConstantIndex, #FirstElem]
N008 (  7,  5) [000054] ------------              \--*  BOX       ref   
N007 (  1,  1) [000053] ------------                 \--*  LCL_VAR   ref    V10 tmp4         u:1 (last use)

***** BB01
STMT00017 (IL   ???...  ???)
N003 (  3,  3) [000178] -A------R---              *  ASG       ref   
N002 (  1,  1) [000177] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:1
N001 (  3,  2) [000077] ------?-----              \--*  LCL_VAR   ref    V04 arg4         u:1

***** BB01
STMT00015 (IL   ???...  ???)
N004 (  7,  6) [000175] ------------              *  JTRUE     void  
N003 (  5,  4) [000071] J------N----              \--*  EQ        int   
N001 (  3,  2) [000070] ------------                 +--*  LCL_VAR   ref    V04 arg4         u:1
N002 (  1,  1) [000069] ------------                 \--*  CNS_INT   ref    null

------------ BB02 [???..???) -> BB04 (cond), preds={BB01} succs={BB03,BB04}

***** BB02
STMT00016 (IL   ???...  ???)
N009 ( 18, 22) [000176] -A-X--------              *  JTRUE     void  
N008 ( 16, 20) [000068] JA-X--?N----              \--*  EQ        int   
N002 (  6,  4) [000067] #--X--?-----                 +--*  IND       long  
N001 (  3,  2) [000061] ------?-----                 |  \--*  LCL_VAR   ref    V04 arg4         u:1
N007 (  9, 15) [000065] -A----?-----                 \--*  COMMA     long  
N005 (  6, 13) [000063] -A----?-R---                    +--*  ASG       long  
N004 (  3,  2) [000062] D-----?N----                    |  +--*  LCL_VAR   long   V11 tmp5         d:1
N003 (  2, 10) [000060] H-----?-----                    |  \--*  CNS_INT(h) long   0xd1ffab1e class
N006 (  3,  2) [000064] ------?-----                    \--*  LCL_VAR   long   V11 tmp5         u:1

------------ BB03 [???..???), preds={BB02} succs={BB04}

***** BB03
STMT00018 (IL   ???...  ???)
N007 ( 20, 11) [000180] -ACXG---R---              *  ASG       ref   
N006 (  1,  1) [000179] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:3
N005 ( 20, 11) [000074] --CXG-?-----              \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL
N003 (  3,  2) [000066] ------?----- arg0 in rcx     +--*  LCL_VAR   long   V11 tmp5         u:1 (last use)
N004 (  3,  2) [000073] ------?----- arg1 in rdx     \--*  LCL_VAR   ref    V04 arg4         u:1 (last use)

------------ BB04 [???..???) -> BB07 (cond), preds={BB01,BB02,BB03} succs={BB05,BB07}

***** BB04
STMT00024 (IL   ???...  ???)
N005 (  0,  0) [000192] -A------R---              *  ASG       ref   
N004 (  0,  0) [000190] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:2
N003 (  0,  0) [000191] ------------              \--*  PHI       ref   
N001 (  0,  0) [000196] ------------ pred BB03       +--*  PHI_ARG   ref    V12 tmp6         u:3
N002 (  0,  0) [000193] ------------ pred BB01       \--*  PHI_ARG   ref    V12 tmp6         u:1

***** BB04
STMT00011 (IL   ???...  ???)
N008 (  6,  6) [000084] -A--G-------              *  ASG       ref   
N006 (  4,  4) [000162] ----G--N----              +--*  COMMA     ref   
N001 (  0,  0) [000200] ------------              |  +--*  NOP       void  
N005 (  4,  4) [000083] a---G--N----              |  \--*  IND       ref   
N004 (  2,  2) [000161] -------N----              |     \--*  ADD       byref 
N002 (  1,  1) [000153] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1
N003 (  1,  1) [000160] ------------              |        \--*  CNS_INT   long   40 Fseq[#ConstantIndex, #FirstElem]
N007 (  1,  1) [000082] ------------              \--*  LCL_VAR   ref    V12 tmp6         u:2 (last use)

***** BB04
STMT00021 (IL   ???...  ???)
N003 (  3,  3) [000184] -A------R---              *  ASG       ref   
N002 (  1,  1) [000183] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:1
N001 (  3,  2) [000105] ------?-----              \--*  LCL_VAR   ref    V05 arg5         u:1

***** BB04
STMT00019 (IL   ???...  ???)
N004 (  7,  6) [000181] ------------              *  JTRUE     void  
N003 (  5,  4) [000099] J------N----              \--*  EQ        int   
N001 (  3,  2) [000098] ------------                 +--*  LCL_VAR   ref    V05 arg5         u:1
N002 (  1,  1) [000097] ------------                 \--*  CNS_INT   ref    null

------------ BB05 [???..???) -> BB07 (cond), preds={BB04} succs={BB06,BB07}

***** BB05
STMT00020 (IL   ???...  ???)
N009 ( 18, 22) [000182] -A-X--------              *  JTRUE     void  
N008 ( 16, 20) [000096] JA-X--?N----              \--*  EQ        int   
N002 (  6,  4) [000095] #--X--?-----                 +--*  IND       long  
N001 (  3,  2) [000089] ------?-----                 |  \--*  LCL_VAR   ref    V05 arg5         u:1
N007 (  9, 15) [000093] -A----?-----                 \--*  COMMA     long  
N005 (  6, 13) [000091] -A----?-R---                    +--*  ASG       long  
N004 (  3,  2) [000090] D-----?N----                    |  +--*  LCL_VAR   long   V13 tmp7         d:1
N003 (  2, 10) [000088] H-----?-----                    |  \--*  CNS_INT(h) long   0xd1ffab1e class
N006 (  3,  2) [000092] ------?-----                    \--*  LCL_VAR   long   V13 tmp7         u:1

------------ BB06 [???..???), preds={BB05} succs={BB07}

***** BB06
STMT00022 (IL   ???...  ???)
N007 ( 20, 11) [000186] -ACXG---R---              *  ASG       ref   
N006 (  1,  1) [000185] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:3
N005 ( 20, 11) [000102] --CXG-?-----              \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL
N003 (  3,  2) [000094] ------?----- arg0 in rcx     +--*  LCL_VAR   long   V13 tmp7         u:1 (last use)
N004 (  3,  2) [000101] ------?----- arg1 in rdx     \--*  LCL_VAR   ref    V05 arg5         u:1 (last use)

------------ BB07 [???..037) (return), preds={BB04,BB05,BB06} succs={}

***** BB07
STMT00023 (IL   ???...  ???)
N005 (  0,  0) [000189] -A------R---              *  ASG       ref   
N004 (  0,  0) [000187] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:2
N003 (  0,  0) [000188] ------------              \--*  PHI       ref   
N001 (  0,  0) [000195] ------------ pred BB06       +--*  PHI_ARG   ref    V14 tmp8         u:3
N002 (  0,  0) [000194] ------------ pred BB04       \--*  PHI_ARG   ref    V14 tmp8         u:1

***** BB07
STMT00013 (IL   ???...  ???)
N008 (  6,  6) [000112] -A--G-------              *  ASG       ref   
N006 (  4,  4) [000174] ----G--N----              +--*  COMMA     ref   
N001 (  0,  0) [000201] ------------              |  +--*  NOP       void  
N005 (  4,  4) [000111] a---G--N----              |  \--*  IND       ref   
N004 (  2,  2) [000173] -------N----              |     \--*  ADD       byref 
N002 (  1,  1) [000165] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1
N003 (  1,  1) [000172] ------------              |        \--*  CNS_INT   long   48 Fseq[#ConstantIndex, #FirstElem]
N007 (  1,  1) [000110] ------------              \--*  LCL_VAR   ref    V14 tmp8         u:2 (last use)

***** BB07
STMT00014 (IL   ???...0x036)
N002 (  2,  2) [000113] ------------              *  RETURN    ref   
N001 (  1,  1) [000005] ------------              \--*  LCL_VAR   ref    V07 tmp1         u:1 (last use)

-------------------------------------------------------------------------------------------------------------------

*************** Finishing PHASE Early Value Propagation

*************** Starting PHASE Do value numbering

*************** In fgValueNumber()
Memory Initial Value in BB01 is: $142
The SSA definition for ByrefExposed (#1) at start of BB01 is $142 {InitVal($45)}
The SSA definition for GcHeap (#1) at start of BB01 is $142 {InitVal($45)}

***** BB01, STMT00000(before)
N007 ( 17, 18) [000004] -ACXG---R---              *  ASG       ref   
N006 (  1,  1) [000003] D------N----              +--*  LCL_VAR   ref    V07 tmp1         d:1
N005 ( 17, 18) [000002] --CXG-------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWARR_1_OBJ
N003 (  2, 10) [000001] H----------- arg0 in rcx     +--*  CNS_INT(h) long   0xd1ffab1e class
N004 (  1,  1) [000000] ------------ arg1 in rdx     \--*  CNS_INT   long   5

N001 [000114]   ARGPLACE  => $180 {180}
N002 [000115]   ARGPLACE  => $181 {181}
N003 [000001]   CNS_INT(h) 0xd1ffab1e class => $1c0 {Hnd const: 0x00000000D1FFAB1E}
N004 [000000]   CNS_INT   5 => $200 {LngCns:  5}
VN of ARGPLACE tree [000114] updated to $1c0 {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000115] updated to $200 {LngCns:  5}
N005 [000002]   CALL help => $282 {norm=$300 {JitNewArr($1c0, $200, $2c0)}, exc=$281 {NewArrOverflowExc($200)}}
N006 [000003]   LCL_VAR   V07 tmp1         d:1 => $300 {JitNewArr($1c0, $200, $2c0)}
N007 [000004]   ASG       => $282 {norm=$300 {JitNewArr($1c0, $200, $2c0)}, exc=$281 {NewArrOverflowExc($200)}}

***** BB01, STMT00000(after)
N007 ( 17, 18) [000004] -ACXG---R---              *  ASG       ref    $282
N006 (  1,  1) [000003] D------N----              +--*  LCL_VAR   ref    V07 tmp1         d:1 $300
N005 ( 17, 18) [000002] --CXG-------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWARR_1_OBJ $282
N003 (  2, 10) [000001] H----------- arg0 in rcx     +--*  CNS_INT(h) long   0xd1ffab1e class $1c0
N004 (  1,  1) [000000] ------------ arg1 in rdx     \--*  CNS_INT   long   5 $200

---------

***** BB01, STMT00001(before)
N005 ( 16, 16) [000013] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000012] D------N----              +--*  LCL_VAR   ref    V08 tmp2         d:1
N003 ( 16, 16) [000011] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000010] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class

N001 [000116]   ARGPLACE  => $182 {182}
N002 [000010]   CNS_INT(h) 0xd1ffab1e class => $1c1 {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000116] updated to $1c1 {Hnd const: 0x00000000D1FFAB1E}
N003 [000011]   CALL help => $283 {JitNew($1c1, $2c2)}
N004 [000012]   LCL_VAR   V08 tmp2         d:1 => $283 {JitNew($1c1, $2c2)}
N005 [000013]   ASG       => $283 {JitNew($1c1, $2c2)}

***** BB01, STMT00001(after)
N005 ( 16, 16) [000013] -AC-----R---              *  ASG       ref    $283
N004 (  1,  1) [000012] D------N----              +--*  LCL_VAR   ref    V08 tmp2         d:1 $283
N003 ( 16, 16) [000011] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $283
N002 (  2, 10) [000010] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class $1c1

---------

***** BB01, STMT00002(before)
N007 (  7,  8) [000018] -A-X----R---              *  ASG       long  
N006 (  4,  4) [000017] D--X---N----              +--*  IND       long  
N005 (  2,  2) [000016] -------N----              |  \--*  ADD       byref 
N003 (  1,  1) [000014] ------------              |     +--*  LCL_VAR   ref    V08 tmp2         u:1
N004 (  1,  1) [000015] ------------              |     \--*  CNS_INT   long   8
N002 (  2,  3) [000009] ------------              \--*  CAST      long <- int
N001 (  1,  1) [000008] ------------                 \--*  LCL_VAR   int    V01 arg1         u:1 (last use)

N001 [000008]   LCL_VAR   V01 arg1         u:1 (last use) => $80 {InitVal($40)}
    VNForCastOper(long) is $46
N002 [000009]   CAST      => $340 {Cast($80, $46)}
N003 [000014]   LCL_VAR   V08 tmp2         u:1 => $283 {JitNew($1c1, $2c2)}
N004 [000015]   CNS_INT   8 => $201 {LngCns:  8}
N005 [000016]   ADD       => $380 {ADD($201, $283)}
  fgCurMemoryVN[GcHeap] assigned for assign-of-IND at [000018] to VN: $2c4.
N007 [000018]   ASG       => $VN.Void

***** BB01, STMT00002(after)
N007 (  7,  8) [000018] -A-X----R---              *  ASG       long   $VN.Void
N006 (  4,  4) [000017] D--X---N----              +--*  IND       long   $340
N005 (  2,  2) [000016] -------N----              |  \--*  ADD       byref  $380
N003 (  1,  1) [000014] ------------              |     +--*  LCL_VAR   ref    V08 tmp2         u:1 $283
N004 (  1,  1) [000015] ------------              |     \--*  CNS_INT   long   8 $201
N002 (  2,  3) [000009] ------------              \--*  CAST      long <- int $340
N001 (  1,  1) [000008] ------------                 \--*  LCL_VAR   int    V01 arg1         u:1 (last use) $80

---------

***** BB01, STMT00003(before)
N009 ( 12, 10) [000022] -A--G-------              *  ASG       ref   
N006 (  4,  4) [000126] ----G--N----              +--*  COMMA     ref   
N001 (  0,  0) [000197] ------------              |  +--*  NOP       void  
N005 (  4,  4) [000021] a---G--N----              |  \--*  IND       ref   
N004 (  2,  2) [000125] -------N----              |     \--*  ADD       byref 
N002 (  1,  1) [000117] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1
N003 (  1,  1) [000124] ------------              |        \--*  CNS_INT   long   16 Fseq[#FirstElem]
N008 (  7,  5) [000020] ------------              \--*  BOX       ref   
N007 (  1,  1) [000019] ------------                 \--*  LCL_VAR   ref    V08 tmp2         u:1 (last use)

N001 [000197]   NOP       => $3c0 {3c0}
N002 [000117]   LCL_VAR   V07 tmp1         u:1 => $300 {JitNewArr($1c0, $200, $2c0)}
N003 [000124]   CNS_INT   16 Fseq[#FirstElem] => $202 {LngCns:  16}
N004 [000125]   ADD       => $381 {ADD($202, $300)}
    VNForHandle(arrElemType: ref) is $1c2
  Relabeled IND_ARR_INDEX address node [000125] with l:$400:  {PtrToArrElem($1c2, $300, $203, $0)}
N006 [000126]   COMMA     => $VN.Void
N007 [000019]   LCL_VAR   V08 tmp2         u:1 (last use) => $283 {JitNew($1c1, $2c2)}
N008 [000020]   BOX       => $283 {JitNew($1c1, $2c2)}
Tree [000022] assigns to an array element:
    VNForMapSelect($2c4, $1c2):ref returns $284 {$2c4[$1c2]}
    VNForMapSelect($284, $300):ref returns $285 {$284[$300]}
    VNForMapSelect($285, $203):ref returns $286 {$285[$203]}
    VNForMapStore($285, $203, $283):ref returns $301 {$285[$203 := $283]}
    VNForMapStore($284, $300, $301):ref returns $302 {$284[$300 := $301]}
  hAtArrType $284 is MapSelect(curGcHeap($2c4), ref[]).
  hAtArrTypeAtArr $285 is MapSelect(hAtArrType($284), arr=$300)
  hAtArrTypeAtArrAtInx $286 is MapSelect(hAtArrTypeAtArr($285), inx=$203):ref
  newValAtInd $283 is  {JitNew($1c1, $2c2)}
  newValAtArr $301 is  {$285[$203 := $283]}
  newValAtArrType $302 is  {$284[$300 := $301]}
    VNForMapStore($2c4, $1c2, $302):ref returns $303 {$2c4[$1c2 := $302]}
  fgCurMemoryVN[GcHeap] assigned for ArrIndexAssign (case 1) at [000022] to VN: $303.
N009 [000022]   ASG       => $VN.Void

***** BB01, STMT00003(after)
N009 ( 12, 10) [000022] -A--G-------              *  ASG       ref    $VN.Void
N006 (  4,  4) [000126] ----G--N----              +--*  COMMA     ref    $VN.Void
N001 (  0,  0) [000197] ------------              |  +--*  NOP       void   $3c0
N005 (  4,  4) [000021] a---G--N----              |  \--*  IND       ref    $283
N004 (  2,  2) [000125] -------N----              |     \--*  ADD       byref  $400
N002 (  1,  1) [000117] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000124] ------------              |        \--*  CNS_INT   long   16 Fseq[#FirstElem] $202
N008 (  7,  5) [000020] ------------              \--*  BOX       ref    $283
N007 (  1,  1) [000019] ------------                 \--*  LCL_VAR   ref    V08 tmp2         u:1 (last use) $283

---------

***** BB01, STMT00004(before)
N005 ( 16, 16) [000029] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000028] D------N----              +--*  LCL_VAR   ref    V09 tmp3         d:1
N003 ( 16, 16) [000027] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000026] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class

N001 [000127]   ARGPLACE  => $183 {183}
N002 [000026]   CNS_INT(h) 0xd1ffab1e class => $1c3 {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000127] updated to $1c3 {Hnd const: 0x00000000D1FFAB1E}
N003 [000027]   CALL help => $287 {JitNew($1c3, $2c5)}
N004 [000028]   LCL_VAR   V09 tmp3         d:1 => $287 {JitNew($1c3, $2c5)}
N005 [000029]   ASG       => $287 {JitNew($1c3, $2c5)}

***** BB01, STMT00004(after)
N005 ( 16, 16) [000029] -AC-----R---              *  ASG       ref    $287
N004 (  1,  1) [000028] D------N----              +--*  LCL_VAR   ref    V09 tmp3         d:1 $287
N003 ( 16, 16) [000027] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $287
N002 (  2, 10) [000026] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class $1c3

---------

***** BB01, STMT00005(before)
N007 (  8,  9) [000035] -A-X----R---              *  ASG       int   
N006 (  4,  4) [000034] D--X---N----              +--*  IND       int   
N005 (  2,  2) [000032] -------N----              |  \--*  ADD       byref 
N003 (  1,  1) [000030] ------------              |     +--*  LCL_VAR   ref    V09 tmp3         u:1
N004 (  1,  1) [000031] ------------              |     \--*  CNS_INT   long   8
N002 (  3,  4) [000128] ------------              \--*  CAST      int <- short <- int
N001 (  2,  2) [000025] ------------                 \--*  LCL_VAR   int    V02 arg2         u:1 (last use)

N001 [000025]   LCL_VAR   V02 arg2         u:1 (last use) => $c0 {InitVal($41)}
    VNForCastOper(short) is $47
N002 [000128]   CAST      => $440 {Cast($c0, $47)}
N003 [000030]   LCL_VAR   V09 tmp3         u:1 => $287 {JitNew($1c3, $2c5)}
N004 [000031]   CNS_INT   8 => $201 {LngCns:  8}
N005 [000032]   ADD       => $382 {ADD($201, $287)}
  fgCurMemoryVN[GcHeap] assigned for assign-of-IND at [000035] to VN: $2c7.
N007 [000035]   ASG       => $VN.Void

***** BB01, STMT00005(after)
N007 (  8,  9) [000035] -A-X----R---              *  ASG       int    $VN.Void
N006 (  4,  4) [000034] D--X---N----              +--*  IND       int    $440
N005 (  2,  2) [000032] -------N----              |  \--*  ADD       byref  $382
N003 (  1,  1) [000030] ------------              |     +--*  LCL_VAR   ref    V09 tmp3         u:1 $287
N004 (  1,  1) [000031] ------------              |     \--*  CNS_INT   long   8 $201
N002 (  3,  4) [000128] ------------              \--*  CAST      int <- short <- int $440
N001 (  2,  2) [000025] ------------                 \--*  LCL_VAR   int    V02 arg2         u:1 (last use) $c0

---------

***** BB01, STMT00006(before)
N009 ( 12, 10) [000039] -A--G-------              *  ASG       ref   
N006 (  4,  4) [000138] ----G--N----              +--*  COMMA     ref   
N001 (  0,  0) [000198] ------------              |  +--*  NOP       void  
N005 (  4,  4) [000038] a---G--N----              |  \--*  IND       ref   
N004 (  2,  2) [000137] -------N----              |     \--*  ADD       byref 
N002 (  1,  1) [000129] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1
N003 (  1,  1) [000136] ------------              |        \--*  CNS_INT   long   24 Fseq[#ConstantIndex, #FirstElem]
N008 (  7,  5) [000037] ------------              \--*  BOX       ref   
N007 (  1,  1) [000036] ------------                 \--*  LCL_VAR   ref    V09 tmp3         u:1 (last use)

N001 [000198]   NOP       => $3c1 {3c1}
N002 [000129]   LCL_VAR   V07 tmp1         u:1 => $300 {JitNewArr($1c0, $200, $2c0)}
N003 [000136]   CNS_INT   24 Fseq[#ConstantIndex, #FirstElem] => $204 {LngCns:  24}
N004 [000137]   ADD       => $383 {ADD($204, $300)}
    VNForHandle(arrElemType: ref) is $1c2
  Relabeled IND_ARR_INDEX address node [000137] with l:$401:  {PtrToArrElem($1c2, $300, $205, $0)}
N006 [000138]   COMMA     => $VN.Void
N007 [000036]   LCL_VAR   V09 tmp3         u:1 (last use) => $287 {JitNew($1c3, $2c5)}
N008 [000037]   BOX       => $287 {JitNew($1c3, $2c5)}
Tree [000039] assigns to an array element:
    VNForMapSelect($2c7, $1c2):ref returns $288 {$2c7[$1c2]}
    VNForMapSelect($288, $300):ref returns $289 {$288[$300]}
    VNForMapSelect($289, $205):ref returns $28a {$289[$205]}
    VNForMapStore($289, $205, $287):ref returns $304 {$289[$205 := $287]}
    VNForMapStore($288, $300, $304):ref returns $305 {$288[$300 := $304]}
  hAtArrType $288 is MapSelect(curGcHeap($2c7), ref[]).
  hAtArrTypeAtArr $289 is MapSelect(hAtArrType($288), arr=$300)
  hAtArrTypeAtArrAtInx $28a is MapSelect(hAtArrTypeAtArr($289), inx=$205):ref
  newValAtInd $287 is  {JitNew($1c3, $2c5)}
  newValAtArr $304 is  {$289[$205 := $287]}
  newValAtArrType $305 is  {$288[$300 := $304]}
    VNForMapStore($2c7, $1c2, $305):ref returns $306 {$2c7[$1c2 := $305]}
  fgCurMemoryVN[GcHeap] assigned for ArrIndexAssign (case 1) at [000039] to VN: $306.
N009 [000039]   ASG       => $VN.Void

***** BB01, STMT00006(after)
N009 ( 12, 10) [000039] -A--G-------              *  ASG       ref    $VN.Void
N006 (  4,  4) [000138] ----G--N----              +--*  COMMA     ref    $VN.Void
N001 (  0,  0) [000198] ------------              |  +--*  NOP       void   $3c1
N005 (  4,  4) [000038] a---G--N----              |  \--*  IND       ref    $287
N004 (  2,  2) [000137] -------N----              |     \--*  ADD       byref  $401
N002 (  1,  1) [000129] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000136] ------------              |        \--*  CNS_INT   long   24 Fseq[#ConstantIndex, #FirstElem] $204
N008 (  7,  5) [000037] ------------              \--*  BOX       ref    $287
N007 (  1,  1) [000036] ------------                 \--*  LCL_VAR   ref    V09 tmp3         u:1 (last use) $287

---------

***** BB01, STMT00007(before)
N005 ( 16, 16) [000046] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000045] D------N----              +--*  LCL_VAR   ref    V10 tmp4         d:1
N003 ( 16, 16) [000044] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000043] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class

N001 [000139]   ARGPLACE  => $184 {184}
N002 [000043]   CNS_INT(h) 0xd1ffab1e class => $1c4 {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000139] updated to $1c4 {Hnd const: 0x00000000D1FFAB1E}
N003 [000044]   CALL help => $28b {JitNew($1c4, $2c8)}
N004 [000045]   LCL_VAR   V10 tmp4         d:1 => $28b {JitNew($1c4, $2c8)}
N005 [000046]   ASG       => $28b {JitNew($1c4, $2c8)}

***** BB01, STMT00007(after)
N005 ( 16, 16) [000046] -AC-----R---              *  ASG       ref    $28b
N004 (  1,  1) [000045] D------N----              +--*  LCL_VAR   ref    V10 tmp4         d:1 $28b
N003 ( 16, 16) [000044] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $28b
N002 (  2, 10) [000043] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class $1c4

---------

***** BB01, STMT00008(before)
N007 (  9, 10) [000052] -A-X----R---              *  ASG       short 
N006 (  5,  5) [000051] D--X---N----              +--*  IND       short 
N005 (  2,  2) [000049] -------N----              |  \--*  ADD       byref 
N003 (  1,  1) [000047] ------------              |     +--*  LCL_VAR   ref    V10 tmp4         u:1
N004 (  1,  1) [000048] ------------              |     \--*  CNS_INT   long   8
N002 (  3,  4) [000140] ------------              \--*  CAST      int <- ubyte <- int
N001 (  2,  2) [000042] ------------                 \--*  LCL_VAR   int    V03 arg3         u:1 (last use)

N001 [000042]   LCL_VAR   V03 arg3         u:1 (last use) => $100 {InitVal($42)}
    VNForCastOper(ubyte) is $48
N002 [000140]   CAST      => $441 {Cast($100, $48)}
N003 [000047]   LCL_VAR   V10 tmp4         u:1 => $28b {JitNew($1c4, $2c8)}
N004 [000048]   CNS_INT   8 => $201 {LngCns:  8}
N005 [000049]   ADD       => $384 {ADD($201, $28b)}
    VNForCastOper(short) is $47
  fgCurMemoryVN[GcHeap] assigned for assign-of-IND at [000052] to VN: $2ca.
N007 [000052]   ASG       => $VN.Void

***** BB01, STMT00008(after)
N007 (  9, 10) [000052] -A-X----R---              *  ASG       short  $VN.Void
N006 (  5,  5) [000051] D--X---N----              +--*  IND       short  $442
N005 (  2,  2) [000049] -------N----              |  \--*  ADD       byref  $384
N003 (  1,  1) [000047] ------------              |     +--*  LCL_VAR   ref    V10 tmp4         u:1 $28b
N004 (  1,  1) [000048] ------------              |     \--*  CNS_INT   long   8 $201
N002 (  3,  4) [000140] ------------              \--*  CAST      int <- ubyte <- int $441
N001 (  2,  2) [000042] ------------                 \--*  LCL_VAR   int    V03 arg3         u:1 (last use) $100

---------

***** BB01, STMT00009(before)
N009 ( 12, 10) [000056] -A--G-------              *  ASG       ref   
N006 (  4,  4) [000150] ----G--N----              +--*  COMMA     ref   
N001 (  0,  0) [000199] ------------              |  +--*  NOP       void  
N005 (  4,  4) [000055] a---G--N----              |  \--*  IND       ref   
N004 (  2,  2) [000149] -------N----              |     \--*  ADD       byref 
N002 (  1,  1) [000141] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1
N003 (  1,  1) [000148] ------------              |        \--*  CNS_INT   long   32 Fseq[#ConstantIndex, #FirstElem]
N008 (  7,  5) [000054] ------------              \--*  BOX       ref   
N007 (  1,  1) [000053] ------------                 \--*  LCL_VAR   ref    V10 tmp4         u:1 (last use)

N001 [000199]   NOP       => $3c2 {3c2}
N002 [000141]   LCL_VAR   V07 tmp1         u:1 => $300 {JitNewArr($1c0, $200, $2c0)}
N003 [000148]   CNS_INT   32 Fseq[#ConstantIndex, #FirstElem] => $206 {LngCns:  32}
N004 [000149]   ADD       => $385 {ADD($206, $300)}
    VNForHandle(arrElemType: ref) is $1c2
  Relabeled IND_ARR_INDEX address node [000149] with l:$402:  {PtrToArrElem($1c2, $300, $207, $0)}
N006 [000150]   COMMA     => $VN.Void
N007 [000053]   LCL_VAR   V10 tmp4         u:1 (last use) => $28b {JitNew($1c4, $2c8)}
N008 [000054]   BOX       => $28b {JitNew($1c4, $2c8)}
Tree [000056] assigns to an array element:
    VNForMapSelect($2ca, $1c2):ref returns $28c {$2ca[$1c2]}
    VNForMapSelect($28c, $300):ref returns $28d {$28c[$300]}
    VNForMapSelect($28d, $207):ref returns $28e {$28d[$207]}
    VNForMapStore($28d, $207, $28b):ref returns $307 {$28d[$207 := $28b]}
    VNForMapStore($28c, $300, $307):ref returns $308 {$28c[$300 := $307]}
  hAtArrType $28c is MapSelect(curGcHeap($2ca), ref[]).
  hAtArrTypeAtArr $28d is MapSelect(hAtArrType($28c), arr=$300)
  hAtArrTypeAtArrAtInx $28e is MapSelect(hAtArrTypeAtArr($28d), inx=$207):ref
  newValAtInd $28b is  {JitNew($1c4, $2c8)}
  newValAtArr $307 is  {$28d[$207 := $28b]}
  newValAtArrType $308 is  {$28c[$300 := $307]}
    VNForMapStore($2ca, $1c2, $308):ref returns $309 {$2ca[$1c2 := $308]}
  fgCurMemoryVN[GcHeap] assigned for ArrIndexAssign (case 1) at [000056] to VN: $309.
N009 [000056]   ASG       => $VN.Void

***** BB01, STMT00009(after)
N009 ( 12, 10) [000056] -A--G-------              *  ASG       ref    $VN.Void
N006 (  4,  4) [000150] ----G--N----              +--*  COMMA     ref    $VN.Void
N001 (  0,  0) [000199] ------------              |  +--*  NOP       void   $3c2
N005 (  4,  4) [000055] a---G--N----              |  \--*  IND       ref    $28b
N004 (  2,  2) [000149] -------N----              |     \--*  ADD       byref  $402
N002 (  1,  1) [000141] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000148] ------------              |        \--*  CNS_INT   long   32 Fseq[#ConstantIndex, #FirstElem] $206
N008 (  7,  5) [000054] ------------              \--*  BOX       ref    $28b
N007 (  1,  1) [000053] ------------                 \--*  LCL_VAR   ref    V10 tmp4         u:1 (last use) $28b

---------

***** BB01, STMT00017(before)
N003 (  3,  3) [000178] -A------R---              *  ASG       ref   
N002 (  1,  1) [000177] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:1
N001 (  3,  2) [000077] ------?-----              \--*  LCL_VAR   ref    V04 arg4         u:1

N001 [000077]   LCL_VAR   V04 arg4         u:1 => $140 {InitVal($43)}
N002 [000177]   LCL_VAR   V12 tmp6         d:1 => $140 {InitVal($43)}
N003 [000178]   ASG       => $140 {InitVal($43)}

***** BB01, STMT00017(after)
N003 (  3,  3) [000178] -A------R---              *  ASG       ref    $140
N002 (  1,  1) [000177] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:1 $140
N001 (  3,  2) [000077] ------?-----              \--*  LCL_VAR   ref    V04 arg4         u:1 $140

---------

***** BB01, STMT00015(before)
N004 (  7,  6) [000175] ------------              *  JTRUE     void  
N003 (  5,  4) [000071] J------N----              \--*  EQ        int   
N001 (  3,  2) [000070] ------------                 +--*  LCL_VAR   ref    V04 arg4         u:1
N002 (  1,  1) [000069] ------------                 \--*  CNS_INT   ref    null

N001 [000070]   LCL_VAR   V04 arg4         u:1 => $140 {InitVal($43)}
N002 [000069]   CNS_INT   null => $VN.Null
N003 [000071]   EQ        => $443 {EQ($140, $0)}

***** BB01, STMT00015(after)
N004 (  7,  6) [000175] ------------              *  JTRUE     void  
N003 (  5,  4) [000071] J------N----              \--*  EQ        int    $443
N001 (  3,  2) [000070] ------------                 +--*  LCL_VAR   ref    V04 arg4         u:1 $140
N002 (  1,  1) [000069] ------------                 \--*  CNS_INT   ref    null $VN.Null

finish(BB01).
   Succ(BB02).
     Not yet completed.
     All preds complete, adding to allDone.
   Succ(BB04).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
       Was necessary.
The SSA definition for ByrefExposed (#2) at start of BB02 is $309 {$2ca[$1c2 := $308]}
The SSA definition for GcHeap (#2) at start of BB02 is $309 {$2ca[$1c2 := $308]}

***** BB02, STMT00016(before)
N009 ( 18, 22) [000176] -A-X--------              *  JTRUE     void  
N008 ( 16, 20) [000068] JA-X--?N----              \--*  EQ        int   
N002 (  6,  4) [000067] #--X--?-----                 +--*  IND       long  
N001 (  3,  2) [000061] ------?-----                 |  \--*  LCL_VAR   ref    V04 arg4         u:1
N007 (  9, 15) [000065] -A----?-----                 \--*  COMMA     long  
N005 (  6, 13) [000063] -A----?-R---                    +--*  ASG       long  
N004 (  3,  2) [000062] D-----?N----                    |  +--*  LCL_VAR   long   V11 tmp5         d:1
N003 (  2, 10) [000060] H-----?-----                    |  \--*  CNS_INT(h) long   0xd1ffab1e class
N006 (  3,  2) [000064] ------?-----                    \--*  LCL_VAR   long   V11 tmp5         u:1

N001 [000061]   LCL_VAR   V04 arg4         u:1 => $140 {InitVal($43)}
    VNForMapSelect($2, $140):ref returns $28f {$VN.ReadOnlyHeap[$140]}
    VNForMapSelect($2, $140):ref returns $28f {$VN.ReadOnlyHeap[$140]}
N002 [000067]   IND       => $291 {norm=$28f {$VN.ReadOnlyHeap[$140]}, exc=$290 {NullPtrExc($140)}}
N003 [000060]   CNS_INT(h) 0xd1ffab1e class => $1c5 {Hnd const: 0x00000000D1FFAB1E}
N004 [000062]   LCL_VAR   V11 tmp5         d:1 => $1c5 {Hnd const: 0x00000000D1FFAB1E}
N005 [000063]   ASG       => $1c5 {Hnd const: 0x00000000D1FFAB1E}
N006 [000064]   LCL_VAR   V11 tmp5         u:1 => $1c5 {Hnd const: 0x00000000D1FFAB1E}
N007 [000065]   COMMA     => $1c5 {Hnd const: 0x00000000D1FFAB1E}
N008 [000068]   EQ        => $445 {norm=$444 {EQ($28f, $1c5)}, exc=$290 {NullPtrExc($140)}}

***** BB02, STMT00016(after)
N009 ( 18, 22) [000176] -A-X--------              *  JTRUE     void  
N008 ( 16, 20) [000068] JA-X--?N----              \--*  EQ        int    $445
N002 (  6,  4) [000067] #--X--?-----                 +--*  IND       long   $291
N001 (  3,  2) [000061] ------?-----                 |  \--*  LCL_VAR   ref    V04 arg4         u:1 $140
N007 (  9, 15) [000065] -A----?-----                 \--*  COMMA     long   $1c5
N005 (  6, 13) [000063] -A----?-R---                    +--*  ASG       long   $1c5
N004 (  3,  2) [000062] D-----?N----                    |  +--*  LCL_VAR   long   V11 tmp5         d:1 $1c5
N003 (  2, 10) [000060] H-----?-----                    |  \--*  CNS_INT(h) long   0xd1ffab1e class $1c5
N006 (  3,  2) [000064] ------?-----                    \--*  LCL_VAR   long   V11 tmp5         u:1 $1c5

finish(BB02).
   Succ(BB03).
     Not yet completed.
     All preds complete, adding to allDone.
   Succ(BB04).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
The SSA definition for ByrefExposed (#2) at start of BB03 is $309 {$2ca[$1c2 := $308]}
The SSA definition for GcHeap (#2) at start of BB03 is $309 {$2ca[$1c2 := $308]}

***** BB03, STMT00018(before)
N007 ( 20, 11) [000180] -ACXG---R---              *  ASG       ref   
N006 (  1,  1) [000179] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:3
N005 ( 20, 11) [000074] --CXG-?-----              \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL
N003 (  3,  2) [000066] ------?----- arg0 in rcx     +--*  LCL_VAR   long   V11 tmp5         u:1 (last use)
N004 (  3,  2) [000073] ------?----- arg1 in rdx     \--*  LCL_VAR   ref    V04 arg4         u:1 (last use)

N001 [000151]   ARGPLACE  => $186 {186}
N002 [000152]   ARGPLACE  => $2cc {2cc}
N003 [000066]   LCL_VAR   V11 tmp5         u:1 (last use) => $1c5 {Hnd const: 0x00000000D1FFAB1E}
N004 [000073]   LCL_VAR   V04 arg4         u:1 (last use) => $140 {InitVal($43)}
VN of ARGPLACE tree [000151] updated to $1c5 {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000152] updated to $140 {InitVal($43)}
N005 [000074]   CALL help => $296 {norm=$140 {InitVal($43)}, exc=$295( {HelperMultipleExc()},  {InvalidCastExc($140, $1c5)})}
N006 [000179]   LCL_VAR   V12 tmp6         d:3 => $140 {InitVal($43)}
N007 [000180]   ASG       => $296 {norm=$140 {InitVal($43)}, exc=$295( {HelperMultipleExc()},  {InvalidCastExc($140, $1c5)})}

***** BB03, STMT00018(after)
N007 ( 20, 11) [000180] -ACXG---R---              *  ASG       ref    $296
N006 (  1,  1) [000179] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:3 $140
N005 ( 20, 11) [000074] --CXG-?-----              \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL $296
N003 (  3,  2) [000066] ------?----- arg0 in rcx     +--*  LCL_VAR   long   V11 tmp5         u:1 (last use) $1c5
N004 (  3,  2) [000073] ------?----- arg1 in rdx     \--*  LCL_VAR   ref    V04 arg4         u:1 (last use) $140

finish(BB03).
   Succ(BB04).
     Not yet completed.
     All preds complete, adding to allDone.
SSA PHI definition: set VN of local 12/2 to $140 {InitVal($43)} (all same).
The SSA definition for ByrefExposed (#2) at start of BB04 is $309 {$2ca[$1c2 := $308]}
The SSA definition for GcHeap (#2) at start of BB04 is $309 {$2ca[$1c2 := $308]}

***** BB04, STMT00011(before)
N008 (  6,  6) [000084] -A--G-------              *  ASG       ref   
N006 (  4,  4) [000162] ----G--N----              +--*  COMMA     ref   
N001 (  0,  0) [000200] ------------              |  +--*  NOP       void  
N005 (  4,  4) [000083] a---G--N----              |  \--*  IND       ref   
N004 (  2,  2) [000161] -------N----              |     \--*  ADD       byref 
N002 (  1,  1) [000153] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1
N003 (  1,  1) [000160] ------------              |        \--*  CNS_INT   long   40 Fseq[#ConstantIndex, #FirstElem]
N007 (  1,  1) [000082] ------------              \--*  LCL_VAR   ref    V12 tmp6         u:2 (last use)

N001 [000200]   NOP       => $3c3 {3c3}
N002 [000153]   LCL_VAR   V07 tmp1         u:1 => $300 {JitNewArr($1c0, $200, $2c0)}
N003 [000160]   CNS_INT   40 Fseq[#ConstantIndex, #FirstElem] => $208 {LngCns:  40}
N004 [000161]   ADD       => $386 {ADD($208, $300)}
    VNForHandle(arrElemType: ref) is $1c2
  Relabeled IND_ARR_INDEX address node [000161] with l:$403:  {PtrToArrElem($1c2, $300, $209, $0)}
N006 [000162]   COMMA     => $VN.Void
N007 [000082]   LCL_VAR   V12 tmp6         u:2 (last use) => $140 {InitVal($43)}
Tree [000084] assigns to an array element:
      AX1: select([$2ca]store($309, $1c2, $308), $1c2) ==> $308.
    VNForMapSelect($309, $1c2):ref returns $308 {$28c[$300 := $307]}
      AX1: select([$28c]store($308, $300, $307), $300) ==> $307.
    VNForMapSelect($308, $300):ref returns $307 {$28d[$207 := $28b]}
      AX2: $209 != $207 ==> select([$307]store($28d, $207, $28b), $209) ==> select($28d, $209).
    VNForMapSelect($307, $209):ref returns $298 {$28d[$209]}
    VNForMapStore($307, $209, $140):ref returns $30a {$307[$209 := $140]}
    VNForMapStore($308, $300, $30a):ref returns $30b {$308[$300 := $30a]}
  hAtArrType $308 is MapSelect(curGcHeap($309), ref[]).
  hAtArrTypeAtArr $307 is MapSelect(hAtArrType($308), arr=$300)
  hAtArrTypeAtArrAtInx $298 is MapSelect(hAtArrTypeAtArr($307), inx=$209):ref
  newValAtInd $140 is  {InitVal($43)}
  newValAtArr $30a is  {$307[$209 := $140]}
  newValAtArrType $30b is  {$308[$300 := $30a]}
    VNForMapStore($309, $1c2, $30b):ref returns $30c {$309[$1c2 := $30b]}
  fgCurMemoryVN[GcHeap] assigned for ArrIndexAssign (case 1) at [000084] to VN: $30c.
N008 [000084]   ASG       => $VN.Void

***** BB04, STMT00011(after)
N008 (  6,  6) [000084] -A--G-------              *  ASG       ref    $VN.Void
N006 (  4,  4) [000162] ----G--N----              +--*  COMMA     ref    $VN.Void
N001 (  0,  0) [000200] ------------              |  +--*  NOP       void   $3c3
N005 (  4,  4) [000083] a---G--N----              |  \--*  IND       ref    $140
N004 (  2,  2) [000161] -------N----              |     \--*  ADD       byref  $403
N002 (  1,  1) [000153] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000160] ------------              |        \--*  CNS_INT   long   40 Fseq[#ConstantIndex, #FirstElem] $208
N007 (  1,  1) [000082] ------------              \--*  LCL_VAR   ref    V12 tmp6         u:2 (last use) $140

---------

***** BB04, STMT00021(before)
N003 (  3,  3) [000184] -A------R---              *  ASG       ref   
N002 (  1,  1) [000183] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:1
N001 (  3,  2) [000105] ------?-----              \--*  LCL_VAR   ref    V05 arg5         u:1

N001 [000105]   LCL_VAR   V05 arg5         u:1 => $141 {InitVal($44)}
N002 [000183]   LCL_VAR   V14 tmp8         d:1 => $141 {InitVal($44)}
N003 [000184]   ASG       => $141 {InitVal($44)}

***** BB04, STMT00021(after)
N003 (  3,  3) [000184] -A------R---              *  ASG       ref    $141
N002 (  1,  1) [000183] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:1 $141
N001 (  3,  2) [000105] ------?-----              \--*  LCL_VAR   ref    V05 arg5         u:1 $141

---------

***** BB04, STMT00019(before)
N004 (  7,  6) [000181] ------------              *  JTRUE     void  
N003 (  5,  4) [000099] J------N----              \--*  EQ        int   
N001 (  3,  2) [000098] ------------                 +--*  LCL_VAR   ref    V05 arg5         u:1
N002 (  1,  1) [000097] ------------                 \--*  CNS_INT   ref    null

N001 [000098]   LCL_VAR   V05 arg5         u:1 => $141 {InitVal($44)}
N002 [000097]   CNS_INT   null => $VN.Null
N003 [000099]   EQ        => $446 {EQ($141, $0)}

***** BB04, STMT00019(after)
N004 (  7,  6) [000181] ------------              *  JTRUE     void  
N003 (  5,  4) [000099] J------N----              \--*  EQ        int    $446
N001 (  3,  2) [000098] ------------                 +--*  LCL_VAR   ref    V05 arg5         u:1 $141
N002 (  1,  1) [000097] ------------                 \--*  CNS_INT   ref    null $VN.Null

finish(BB04).
   Succ(BB05).
     Not yet completed.
     All preds complete, adding to allDone.
   Succ(BB07).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
       Was necessary.
The SSA definition for ByrefExposed (#3) at start of BB05 is $30c {$309[$1c2 := $30b]}
The SSA definition for GcHeap (#3) at start of BB05 is $30c {$309[$1c2 := $30b]}

***** BB05, STMT00020(before)
N009 ( 18, 22) [000182] -A-X--------              *  JTRUE     void  
N008 ( 16, 20) [000096] JA-X--?N----              \--*  EQ        int   
N002 (  6,  4) [000095] #--X--?-----                 +--*  IND       long  
N001 (  3,  2) [000089] ------?-----                 |  \--*  LCL_VAR   ref    V05 arg5         u:1
N007 (  9, 15) [000093] -A----?-----                 \--*  COMMA     long  
N005 (  6, 13) [000091] -A----?-R---                    +--*  ASG       long  
N004 (  3,  2) [000090] D-----?N----                    |  +--*  LCL_VAR   long   V13 tmp7         d:1
N003 (  2, 10) [000088] H-----?-----                    |  \--*  CNS_INT(h) long   0xd1ffab1e class
N006 (  3,  2) [000092] ------?-----                    \--*  LCL_VAR   long   V13 tmp7         u:1

N001 [000089]   LCL_VAR   V05 arg5         u:1 => $141 {InitVal($44)}
    VNForMapSelect($2, $141):ref returns $299 {$VN.ReadOnlyHeap[$141]}
    VNForMapSelect($2, $141):ref returns $299 {$VN.ReadOnlyHeap[$141]}
N002 [000095]   IND       => $29b {norm=$299 {$VN.ReadOnlyHeap[$141]}, exc=$29a {NullPtrExc($141)}}
N003 [000088]   CNS_INT(h) 0xd1ffab1e class => $1c6 {Hnd const: 0x00000000D1FFAB1E}
N004 [000090]   LCL_VAR   V13 tmp7         d:1 => $1c6 {Hnd const: 0x00000000D1FFAB1E}
N005 [000091]   ASG       => $1c6 {Hnd const: 0x00000000D1FFAB1E}
N006 [000092]   LCL_VAR   V13 tmp7         u:1 => $1c6 {Hnd const: 0x00000000D1FFAB1E}
N007 [000093]   COMMA     => $1c6 {Hnd const: 0x00000000D1FFAB1E}
N008 [000096]   EQ        => $448 {norm=$447 {EQ($299, $1c6)}, exc=$29a {NullPtrExc($141)}}

***** BB05, STMT00020(after)
N009 ( 18, 22) [000182] -A-X--------              *  JTRUE     void  
N008 ( 16, 20) [000096] JA-X--?N----              \--*  EQ        int    $448
N002 (  6,  4) [000095] #--X--?-----                 +--*  IND       long   $29b
N001 (  3,  2) [000089] ------?-----                 |  \--*  LCL_VAR   ref    V05 arg5         u:1 $141
N007 (  9, 15) [000093] -A----?-----                 \--*  COMMA     long   $1c6
N005 (  6, 13) [000091] -A----?-R---                    +--*  ASG       long   $1c6
N004 (  3,  2) [000090] D-----?N----                    |  +--*  LCL_VAR   long   V13 tmp7         d:1 $1c6
N003 (  2, 10) [000088] H-----?-----                    |  \--*  CNS_INT(h) long   0xd1ffab1e class $1c6
N006 (  3,  2) [000092] ------?-----                    \--*  LCL_VAR   long   V13 tmp7         u:1 $1c6

finish(BB05).
   Succ(BB06).
     Not yet completed.
     All preds complete, adding to allDone.
   Succ(BB07).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
The SSA definition for ByrefExposed (#3) at start of BB06 is $30c {$309[$1c2 := $30b]}
The SSA definition for GcHeap (#3) at start of BB06 is $30c {$309[$1c2 := $30b]}

***** BB06, STMT00022(before)
N007 ( 20, 11) [000186] -ACXG---R---              *  ASG       ref   
N006 (  1,  1) [000185] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:3
N005 ( 20, 11) [000102] --CXG-?-----              \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL
N003 (  3,  2) [000094] ------?----- arg0 in rcx     +--*  LCL_VAR   long   V13 tmp7         u:1 (last use)
N004 (  3,  2) [000101] ------?----- arg1 in rdx     \--*  LCL_VAR   ref    V05 arg5         u:1 (last use)

N001 [000163]   ARGPLACE  => $188 {188}
N002 [000164]   ARGPLACE  => $2cf {2cf}
N003 [000094]   LCL_VAR   V13 tmp7         u:1 (last use) => $1c6 {Hnd const: 0x00000000D1FFAB1E}
N004 [000101]   LCL_VAR   V05 arg5         u:1 (last use) => $141 {InitVal($44)}
VN of ARGPLACE tree [000163] updated to $1c6 {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000164] updated to $141 {InitVal($44)}
N005 [000102]   CALL help => $2a0 {norm=$141 {InitVal($44)}, exc=$29f( {HelperMultipleExc()},  {InvalidCastExc($141, $1c6)})}
N006 [000185]   LCL_VAR   V14 tmp8         d:3 => $141 {InitVal($44)}
N007 [000186]   ASG       => $2a0 {norm=$141 {InitVal($44)}, exc=$29f( {HelperMultipleExc()},  {InvalidCastExc($141, $1c6)})}

***** BB06, STMT00022(after)
N007 ( 20, 11) [000186] -ACXG---R---              *  ASG       ref    $2a0
N006 (  1,  1) [000185] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:3 $141
N005 ( 20, 11) [000102] --CXG-?-----              \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL $2a0
N003 (  3,  2) [000094] ------?----- arg0 in rcx     +--*  LCL_VAR   long   V13 tmp7         u:1 (last use) $1c6
N004 (  3,  2) [000101] ------?----- arg1 in rdx     \--*  LCL_VAR   ref    V05 arg5         u:1 (last use) $141

finish(BB06).
   Succ(BB07).
     Not yet completed.
     All preds complete, adding to allDone.
SSA PHI definition: set VN of local 14/2 to $141 {InitVal($44)} (all same).
The SSA definition for ByrefExposed (#3) at start of BB07 is $30c {$309[$1c2 := $30b]}
The SSA definition for GcHeap (#3) at start of BB07 is $30c {$309[$1c2 := $30b]}

***** BB07, STMT00013(before)
N008 (  6,  6) [000112] -A--G-------              *  ASG       ref   
N006 (  4,  4) [000174] ----G--N----              +--*  COMMA     ref   
N001 (  0,  0) [000201] ------------              |  +--*  NOP       void  
N005 (  4,  4) [000111] a---G--N----              |  \--*  IND       ref   
N004 (  2,  2) [000173] -------N----              |     \--*  ADD       byref 
N002 (  1,  1) [000165] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1
N003 (  1,  1) [000172] ------------              |        \--*  CNS_INT   long   48 Fseq[#ConstantIndex, #FirstElem]
N007 (  1,  1) [000110] ------------              \--*  LCL_VAR   ref    V14 tmp8         u:2 (last use)

N001 [000201]   NOP       => $3c4 {3c4}
N002 [000165]   LCL_VAR   V07 tmp1         u:1 => $300 {JitNewArr($1c0, $200, $2c0)}
N003 [000172]   CNS_INT   48 Fseq[#ConstantIndex, #FirstElem] => $20a {LngCns:  48}
N004 [000173]   ADD       => $387 {ADD($20a, $300)}
    VNForHandle(arrElemType: ref) is $1c2
  Relabeled IND_ARR_INDEX address node [000173] with l:$404:  {PtrToArrElem($1c2, $300, $20b, $0)}
N006 [000174]   COMMA     => $VN.Void
N007 [000110]   LCL_VAR   V14 tmp8         u:2 (last use) => $141 {InitVal($44)}
Tree [000112] assigns to an array element:
      AX1: select([$309]store($30c, $1c2, $30b), $1c2) ==> $30b.
    VNForMapSelect($30c, $1c2):ref returns $30b {$308[$300 := $30a]}
      AX1: select([$308]store($30b, $300, $30a), $300) ==> $30a.
    VNForMapSelect($30b, $300):ref returns $30a {$307[$209 := $140]}
      AX2: $20b != $209 ==> select([$30a]store($307, $209, $140), $20b) ==> select($307, $20b).
      AX2: $20b != $207 ==> select([$307]store($28d, $207, $28b), $20b) ==> select($28d, $20b).
    VNForMapSelect($30a, $20b):ref returns $2a1 {$28d[$20b]}
    VNForMapStore($30a, $20b, $141):ref returns $30d {$30a[$20b := $141]}
    VNForMapStore($30b, $300, $30d):ref returns $30e {$30b[$300 := $30d]}
  hAtArrType $30b is MapSelect(curGcHeap($30c), ref[]).
  hAtArrTypeAtArr $30a is MapSelect(hAtArrType($30b), arr=$300)
  hAtArrTypeAtArrAtInx $2a1 is MapSelect(hAtArrTypeAtArr($30a), inx=$20b):ref
  newValAtInd $141 is  {InitVal($44)}
  newValAtArr $30d is  {$30a[$20b := $141]}
  newValAtArrType $30e is  {$30b[$300 := $30d]}
    VNForMapStore($30c, $1c2, $30e):ref returns $30f {$30c[$1c2 := $30e]}
  fgCurMemoryVN[GcHeap] assigned for ArrIndexAssign (case 1) at [000112] to VN: $30f.
N008 [000112]   ASG       => $VN.Void

***** BB07, STMT00013(after)
N008 (  6,  6) [000112] -A--G-------              *  ASG       ref    $VN.Void
N006 (  4,  4) [000174] ----G--N----              +--*  COMMA     ref    $VN.Void
N001 (  0,  0) [000201] ------------              |  +--*  NOP       void   $3c4
N005 (  4,  4) [000111] a---G--N----              |  \--*  IND       ref    $141
N004 (  2,  2) [000173] -------N----              |     \--*  ADD       byref  $404
N002 (  1,  1) [000165] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000172] ------------              |        \--*  CNS_INT   long   48 Fseq[#ConstantIndex, #FirstElem] $20a
N007 (  1,  1) [000110] ------------              \--*  LCL_VAR   ref    V14 tmp8         u:2 (last use) $141

---------

***** BB07, STMT00014(before)
N002 (  2,  2) [000113] ------------              *  RETURN    ref   
N001 (  1,  1) [000005] ------------              \--*  LCL_VAR   ref    V07 tmp1         u:1 (last use)

N001 [000005]   LCL_VAR   V07 tmp1         u:1 (last use) => $300 {JitNewArr($1c0, $200, $2c0)}
N002 [000113]   RETURN    => $2d1 {2d1}

***** BB07, STMT00014(after)
N002 (  2,  2) [000113] ------------              *  RETURN    ref    $2d1
N001 (  1,  1) [000005] ------------              \--*  LCL_VAR   ref    V07 tmp1         u:1 (last use) $300

finish(BB07).

*************** Finishing PHASE Do value numbering

*************** Starting PHASE Hoist loop code

*************** Finishing PHASE Hoist loop code

*************** Starting PHASE VN based copy prop
*************** In optVnCopyProp()
Copy Assertion for BB01
  curSsaName stack: { }

							Live vars: {V01 V02 V03 V04 V05} => {V01 V02 V03 V04 V05 V07}
							Live vars: {V01 V02 V03 V04 V05 V07} => {V01 V02 V03 V04 V05 V07 V08}
							Live vars: {V01 V02 V03 V04 V05 V07 V08} => {V02 V03 V04 V05 V07 V08}
							Live vars: {V02 V03 V04 V05 V07 V08} => {V02 V03 V04 V05 V07}
							Live vars: {V02 V03 V04 V05 V07} => {V02 V03 V04 V05 V07 V09}
							Live vars: {V02 V03 V04 V05 V07 V09} => {V03 V04 V05 V07 V09}
							Live vars: {V03 V04 V05 V07 V09} => {V03 V04 V05 V07}
							Live vars: {V03 V04 V05 V07} => {V03 V04 V05 V07 V10}
							Live vars: {V03 V04 V05 V07 V10} => {V04 V05 V07 V10}
							Live vars: {V04 V05 V07 V10} => {V04 V05 V07}
							Live vars: {V04 V05 V07} => {V04 V05 V07 V12}
VN based copy assertion for [000070] V04 @00000140 by [000177] V12 @00000140.
N001 (  3,  2) [000070] ------------              *  LCL_VAR   ref    V04 arg4         u:1 $140
copy propagated to:
N001 (  3,  2) [000070] ------------              *  LCL_VAR   ref    V12 tmp6         u:1 $140
Copy Assertion for BB04
  curSsaName stack: { 1-[000008]:V01 2-[000025]:V02 3-[000042]:V03 4-[000077]:V04 7-[000003]:V07 8-[000012]:V08 9-[000028]:V09 10-[000045]:V10 12-[000177]:V12 }

							Live vars: {V05 V07 V12} => {V05 V07}
							Live vars: {V05 V07} => {V05 V07 V14}
VN based copy assertion for [000098] V05 @00000141 by [000183] V14 @00000141.
N001 (  3,  2) [000098] ------------              *  LCL_VAR   ref    V05 arg5         u:1 $141
copy propagated to:
N001 (  3,  2) [000098] ------------              *  LCL_VAR   ref    V14 tmp8         u:1 $141
Copy Assertion for BB07
  curSsaName stack: { 1-[000008]:V01 2-[000025]:V02 3-[000042]:V03 4-[000077]:V04 5-[000105]:V05 7-[000003]:V07 8-[000012]:V08 9-[000028]:V09 10-[000045]:V10 12-[000190]:V12 14-[000183]:V14 }

							Live vars: {V07 V14} => {V07}
							Live vars: {V07} => {}
Copy Assertion for BB05
  curSsaName stack: { 1-[000008]:V01 2-[000025]:V02 3-[000042]:V03 4-[000077]:V04 5-[000105]:V05 7-[000003]:V07 8-[000012]:V08 9-[000028]:V09 10-[000045]:V10 12-[000190]:V12 14-[000183]:V14 }

VN based copy assertion for [000089] V05 @00000141 by [000183] V14 @00000141.
N001 (  3,  2) [000089] ------?-----              *  LCL_VAR   ref    V05 arg5         u:1 $141
copy propagated to:
N001 (  3,  2) [000089] ------?-----              *  LCL_VAR   ref    V14 tmp8         u:1 $141
							Live vars: {V05 V07 V14} => {V05 V07 V13 V14}
Copy Assertion for BB06
  curSsaName stack: { 1-[000008]:V01 2-[000025]:V02 3-[000042]:V03 4-[000077]:V04 5-[000105]:V05 7-[000003]:V07 8-[000012]:V08 9-[000028]:V09 10-[000045]:V10 12-[000190]:V12 13-[000090]:V13 14-[000183]:V14 }

							Live vars: {V05 V07 V13} => {V05 V07}
							Live vars: {V05 V07} => {V07}
							Live vars: {V07} => {V07 V14}
Copy Assertion for BB02
  curSsaName stack: { 1-[000008]:V01 2-[000025]:V02 3-[000042]:V03 4-[000077]:V04 5-[000105]:V05 7-[000003]:V07 8-[000012]:V08 9-[000028]:V09 10-[000045]:V10 12-[000177]:V12 }

VN based copy assertion for [000061] V04 @00000140 by [000177] V12 @00000140.
N001 (  3,  2) [000061] ------?-----              *  LCL_VAR   ref    V04 arg4         u:1 $140
copy propagated to:
N001 (  3,  2) [000061] ------?-----              *  LCL_VAR   ref    V12 tmp6         u:1 $140
							Live vars: {V04 V05 V07 V12} => {V04 V05 V07 V11 V12}
Copy Assertion for BB03
  curSsaName stack: { 1-[000008]:V01 2-[000025]:V02 3-[000042]:V03 4-[000077]:V04 5-[000105]:V05 7-[000003]:V07 8-[000012]:V08 9-[000028]:V09 10-[000045]:V10 11-[000062]:V11 12-[000177]:V12 }

							Live vars: {V04 V05 V07 V11} => {V04 V05 V07}
							Live vars: {V04 V05 V07} => {V05 V07}
							Live vars: {V05 V07} => {V05 V07 V12}

*************** Finishing PHASE VN based copy prop

*************** Starting PHASE Redundant branch opts

Checking BB05 for redundancy
 ... checking dom BB04
 ... checking dom BB01
Failed to find a suitable dominating compare, so we won't optimize

Checking BB04 for redundancy
 ... checking dom BB01
Failed to find a suitable dominating compare, so we won't optimize

Checking BB02 for redundancy
 ... checking dom BB01
Failed to find a suitable dominating compare, so we won't optimize

*************** Finishing PHASE Redundant branch opts [no changes]

*************** Starting PHASE Optimize Valnum CSEs

*************** In optOptimizeCSEs()
Blocks/Trees at start of optOptimizeCSE phase

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..???)-> BB04 ( cond )                     i label target hascall idxlen new[] newobj 
BB02 [0003]  1       BB01                  0.25    [???..???)-> BB04 ( cond )                     i 
BB03 [0002]  1       BB02                  0.12    [???..???)                                     i 
BB04 [0001]  3       BB01,BB02,BB03        1       [???..???)-> BB07 ( cond )                     i label target hascall idxlen new[] newobj 
BB05 [0008]  1       BB04                  0.25    [???..???)-> BB07 ( cond )                     i 
BB06 [0007]  1       BB05                  0.12    [???..???)                                     i 
BB07 [0006]  3       BB04,BB05,BB06        1       [???..037)        (return)                     i label target hascall idxlen new[] newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..???) -> BB04 (cond), preds={} succs={BB02,BB04}

***** BB01
STMT00000 (IL 0x000...0x00F)
N007 ( 17, 18) [000004] -ACXG---R---              *  ASG       ref    $282
N006 (  1,  1) [000003] D------N----              +--*  LCL_VAR   ref    V07 tmp1         d:1 $300
N005 ( 17, 18) [000002] --CXG-------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWARR_1_OBJ $282
N003 (  2, 10) [000001] H----------- arg0 in rcx     +--*  CNS_INT(h) long   0xd1ffab1e class $1c0
N004 (  1,  1) [000000] ------------ arg1 in rdx     \--*  CNS_INT   long   5 $200

***** BB01
STMT00001 (IL   ???...  ???)
N005 ( 16, 16) [000013] -AC-----R---              *  ASG       ref    $283
N004 (  1,  1) [000012] D------N----              +--*  LCL_VAR   ref    V08 tmp2         d:1 $283
N003 ( 16, 16) [000011] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $283
N002 (  2, 10) [000010] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class $1c1

***** BB01
STMT00002 (IL   ???...  ???)
N007 (  7,  8) [000018] -A-X----R---              *  ASG       long   $VN.Void
N006 (  4,  4) [000017] D--X---N----              +--*  IND       long   $340
N005 (  2,  2) [000016] -------N----              |  \--*  ADD       byref  $380
N003 (  1,  1) [000014] ------------              |     +--*  LCL_VAR   ref    V08 tmp2         u:1 $283
N004 (  1,  1) [000015] ------------              |     \--*  CNS_INT   long   8 $201
N002 (  2,  3) [000009] ------------              \--*  CAST      long <- int $340
N001 (  1,  1) [000008] ------------                 \--*  LCL_VAR   int    V01 arg1         u:1 (last use) $80

***** BB01
STMT00003 (IL   ???...  ???)
N009 ( 12, 10) [000022] -A--G-------              *  ASG       ref    $VN.Void
N006 (  4,  4) [000126] ----G--N----              +--*  COMMA     ref    $VN.Void
N001 (  0,  0) [000197] ------------              |  +--*  NOP       void   $3c0
N005 (  4,  4) [000021] a---G--N----              |  \--*  IND       ref    $283
N004 (  2,  2) [000125] -------N----              |     \--*  ADD       byref  $400
N002 (  1,  1) [000117] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000124] ------------              |        \--*  CNS_INT   long   16 Fseq[#FirstElem] $202
N008 (  7,  5) [000020] ------------              \--*  BOX       ref    $283
N007 (  1,  1) [000019] ------------                 \--*  LCL_VAR   ref    V08 tmp2         u:1 (last use) $283

***** BB01
STMT00004 (IL   ???...0x018)
N005 ( 16, 16) [000029] -AC-----R---              *  ASG       ref    $287
N004 (  1,  1) [000028] D------N----              +--*  LCL_VAR   ref    V09 tmp3         d:1 $287
N003 ( 16, 16) [000027] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $287
N002 (  2, 10) [000026] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class $1c3

***** BB01
STMT00005 (IL   ???...  ???)
N007 (  8,  9) [000035] -A-X----R---              *  ASG       int    $VN.Void
N006 (  4,  4) [000034] D--X---N----              +--*  IND       int    $440
N005 (  2,  2) [000032] -------N----              |  \--*  ADD       byref  $382
N003 (  1,  1) [000030] ------------              |     +--*  LCL_VAR   ref    V09 tmp3         u:1 $287
N004 (  1,  1) [000031] ------------              |     \--*  CNS_INT   long   8 $201
N002 (  3,  4) [000128] ------------              \--*  CAST      int <- short <- int $440
N001 (  2,  2) [000025] ------------                 \--*  LCL_VAR   int    V02 arg2         u:1 (last use) $c0

***** BB01
STMT00006 (IL   ???...  ???)
N009 ( 12, 10) [000039] -A--G-------              *  ASG       ref    $VN.Void
N006 (  4,  4) [000138] ----G--N----              +--*  COMMA     ref    $VN.Void
N001 (  0,  0) [000198] ------------              |  +--*  NOP       void   $3c1
N005 (  4,  4) [000038] a---G--N----              |  \--*  IND       ref    $287
N004 (  2,  2) [000137] -------N----              |     \--*  ADD       byref  $401
N002 (  1,  1) [000129] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000136] ------------              |        \--*  CNS_INT   long   24 Fseq[#ConstantIndex, #FirstElem] $204
N008 (  7,  5) [000037] ------------              \--*  BOX       ref    $287
N007 (  1,  1) [000036] ------------                 \--*  LCL_VAR   ref    V09 tmp3         u:1 (last use) $287

***** BB01
STMT00007 (IL   ???...0x021)
N005 ( 16, 16) [000046] -AC-----R---              *  ASG       ref    $28b
N004 (  1,  1) [000045] D------N----              +--*  LCL_VAR   ref    V10 tmp4         d:1 $28b
N003 ( 16, 16) [000044] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $28b
N002 (  2, 10) [000043] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class $1c4

***** BB01
STMT00008 (IL   ???...  ???)
N007 (  9, 10) [000052] -A-X----R---              *  ASG       short  $VN.Void
N006 (  5,  5) [000051] D--X---N----              +--*  IND       short  $442
N005 (  2,  2) [000049] -------N----              |  \--*  ADD       byref  $384
N003 (  1,  1) [000047] ------------              |     +--*  LCL_VAR   ref    V10 tmp4         u:1 $28b
N004 (  1,  1) [000048] ------------              |     \--*  CNS_INT   long   8 $201
N002 (  3,  4) [000140] ------------              \--*  CAST      int <- ubyte <- int $441
N001 (  2,  2) [000042] ------------                 \--*  LCL_VAR   int    V03 arg3         u:1 (last use) $100

***** BB01
STMT00009 (IL   ???...  ???)
N009 ( 12, 10) [000056] -A--G-------              *  ASG       ref    $VN.Void
N006 (  4,  4) [000150] ----G--N----              +--*  COMMA     ref    $VN.Void
N001 (  0,  0) [000199] ------------              |  +--*  NOP       void   $3c2
N005 (  4,  4) [000055] a---G--N----              |  \--*  IND       ref    $28b
N004 (  2,  2) [000149] -------N----              |     \--*  ADD       byref  $402
N002 (  1,  1) [000141] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000148] ------------              |        \--*  CNS_INT   long   32 Fseq[#ConstantIndex, #FirstElem] $206
N008 (  7,  5) [000054] ------------              \--*  BOX       ref    $28b
N007 (  1,  1) [000053] ------------                 \--*  LCL_VAR   ref    V10 tmp4         u:1 (last use) $28b

***** BB01
STMT00017 (IL   ???...  ???)
N003 (  3,  3) [000178] -A------R---              *  ASG       ref    $140
N002 (  1,  1) [000177] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:1 $140
N001 (  3,  2) [000077] ------?-----              \--*  LCL_VAR   ref    V04 arg4         u:1 $140

***** BB01
STMT00015 (IL   ???...  ???)
N004 (  7,  6) [000175] ------------              *  JTRUE     void  
N003 (  5,  4) [000071] J------N----              \--*  EQ        int    $443
N001 (  3,  2) [000070] ------------                 +--*  LCL_VAR   ref    V12 tmp6         u:1 $140
N002 (  1,  1) [000069] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB02 [???..???) -> BB04 (cond), preds={BB01} succs={BB03,BB04}

***** BB02
STMT00016 (IL   ???...  ???)
N009 ( 18, 22) [000176] -A-X--------              *  JTRUE     void  
N008 ( 16, 20) [000068] JA-X--?N----              \--*  EQ        int    $445
N002 (  6,  4) [000067] #--X--?-----                 +--*  IND       long   $291
N001 (  3,  2) [000061] ------?-----                 |  \--*  LCL_VAR   ref    V12 tmp6         u:1 $140
N007 (  9, 15) [000065] -A----?-----                 \--*  COMMA     long   $1c5
N005 (  6, 13) [000063] -A----?-R---                    +--*  ASG       long   $1c5
N004 (  3,  2) [000062] D-----?N----                    |  +--*  LCL_VAR   long   V11 tmp5         d:1 $1c5
N003 (  2, 10) [000060] H-----?-----                    |  \--*  CNS_INT(h) long   0xd1ffab1e class $1c5
N006 (  3,  2) [000064] ------?-----                    \--*  LCL_VAR   long   V11 tmp5         u:1 $1c5

------------ BB03 [???..???), preds={BB02} succs={BB04}

***** BB03
STMT00018 (IL   ???...  ???)
N007 ( 20, 11) [000180] -ACXG---R---              *  ASG       ref    $296
N006 (  1,  1) [000179] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:3 $140
N005 ( 20, 11) [000074] --CXG-?-----              \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL $296
N003 (  3,  2) [000066] ------?----- arg0 in rcx     +--*  LCL_VAR   long   V11 tmp5         u:1 (last use) $1c5
N004 (  3,  2) [000073] ------?----- arg1 in rdx     \--*  LCL_VAR   ref    V04 arg4         u:1 (last use) $140

------------ BB04 [???..???) -> BB07 (cond), preds={BB01,BB02,BB03} succs={BB05,BB07}

***** BB04
STMT00024 (IL   ???...  ???)
N005 (  0,  0) [000192] -A------R---              *  ASG       ref   
N004 (  0,  0) [000190] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:2
N003 (  0,  0) [000191] ------------              \--*  PHI       ref   
N001 (  0,  0) [000196] ------------ pred BB03       +--*  PHI_ARG   ref    V12 tmp6         u:3 $140
N002 (  0,  0) [000193] ------------ pred BB01       \--*  PHI_ARG   ref    V12 tmp6         u:1 $140

***** BB04
STMT00011 (IL   ???...  ???)
N008 (  6,  6) [000084] -A--G-------              *  ASG       ref    $VN.Void
N006 (  4,  4) [000162] ----G--N----              +--*  COMMA     ref    $VN.Void
N001 (  0,  0) [000200] ------------              |  +--*  NOP       void   $3c3
N005 (  4,  4) [000083] a---G--N----              |  \--*  IND       ref    $140
N004 (  2,  2) [000161] -------N----              |     \--*  ADD       byref  $403
N002 (  1,  1) [000153] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000160] ------------              |        \--*  CNS_INT   long   40 Fseq[#ConstantIndex, #FirstElem] $208
N007 (  1,  1) [000082] ------------              \--*  LCL_VAR   ref    V12 tmp6         u:2 (last use) $140

***** BB04
STMT00021 (IL   ???...  ???)
N003 (  3,  3) [000184] -A------R---              *  ASG       ref    $141
N002 (  1,  1) [000183] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:1 $141
N001 (  3,  2) [000105] ------?-----              \--*  LCL_VAR   ref    V05 arg5         u:1 $141

***** BB04
STMT00019 (IL   ???...  ???)
N004 (  7,  6) [000181] ------------              *  JTRUE     void  
N003 (  5,  4) [000099] J------N----              \--*  EQ        int    $446
N001 (  3,  2) [000098] ------------                 +--*  LCL_VAR   ref    V14 tmp8         u:1 $141
N002 (  1,  1) [000097] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB05 [???..???) -> BB07 (cond), preds={BB04} succs={BB06,BB07}

***** BB05
STMT00020 (IL   ???...  ???)
N009 ( 18, 22) [000182] -A-X--------              *  JTRUE     void  
N008 ( 16, 20) [000096] JA-X--?N----              \--*  EQ        int    $448
N002 (  6,  4) [000095] #--X--?-----                 +--*  IND       long   $29b
N001 (  3,  2) [000089] ------?-----                 |  \--*  LCL_VAR   ref    V14 tmp8         u:1 $141
N007 (  9, 15) [000093] -A----?-----                 \--*  COMMA     long   $1c6
N005 (  6, 13) [000091] -A----?-R---                    +--*  ASG       long   $1c6
N004 (  3,  2) [000090] D-----?N----                    |  +--*  LCL_VAR   long   V13 tmp7         d:1 $1c6
N003 (  2, 10) [000088] H-----?-----                    |  \--*  CNS_INT(h) long   0xd1ffab1e class $1c6
N006 (  3,  2) [000092] ------?-----                    \--*  LCL_VAR   long   V13 tmp7         u:1 $1c6

------------ BB06 [???..???), preds={BB05} succs={BB07}

***** BB06
STMT00022 (IL   ???...  ???)
N007 ( 20, 11) [000186] -ACXG---R---              *  ASG       ref    $2a0
N006 (  1,  1) [000185] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:3 $141
N005 ( 20, 11) [000102] --CXG-?-----              \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL $2a0
N003 (  3,  2) [000094] ------?----- arg0 in rcx     +--*  LCL_VAR   long   V13 tmp7         u:1 (last use) $1c6
N004 (  3,  2) [000101] ------?----- arg1 in rdx     \--*  LCL_VAR   ref    V05 arg5         u:1 (last use) $141

------------ BB07 [???..037) (return), preds={BB04,BB05,BB06} succs={}

***** BB07
STMT00023 (IL   ???...  ???)
N005 (  0,  0) [000189] -A------R---              *  ASG       ref   
N004 (  0,  0) [000187] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:2
N003 (  0,  0) [000188] ------------              \--*  PHI       ref   
N001 (  0,  0) [000195] ------------ pred BB06       +--*  PHI_ARG   ref    V14 tmp8         u:3 $141
N002 (  0,  0) [000194] ------------ pred BB04       \--*  PHI_ARG   ref    V14 tmp8         u:1 $141

***** BB07
STMT00013 (IL   ???...  ???)
N008 (  6,  6) [000112] -A--G-------              *  ASG       ref    $VN.Void
N006 (  4,  4) [000174] ----G--N----              +--*  COMMA     ref    $VN.Void
N001 (  0,  0) [000201] ------------              |  +--*  NOP       void   $3c4
N005 (  4,  4) [000111] a---G--N----              |  \--*  IND       ref    $141
N004 (  2,  2) [000173] -------N----              |     \--*  ADD       byref  $404
N002 (  1,  1) [000165] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000172] ------------              |        \--*  CNS_INT   long   48 Fseq[#ConstantIndex, #FirstElem] $20a
N007 (  1,  1) [000110] ------------              \--*  LCL_VAR   ref    V14 tmp8         u:2 (last use) $141

***** BB07
STMT00014 (IL   ???...0x036)
N002 (  2,  2) [000113] ------------              *  RETURN    ref    $2d1
N001 (  1,  1) [000005] ------------              \--*  LCL_VAR   ref    V07 tmp1         u:1 (last use) $300

-------------------------------------------------------------------------------------------------------------------

*************** In optOptimizeValnumCSEs()

*************** Finishing PHASE Optimize Valnum CSEs

*************** Starting PHASE Assertion prop
*************** In optAssertionPropMain()
Blocks/Trees at start of phase

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..???)-> BB04 ( cond )                     i label target hascall idxlen new[] newobj 
BB02 [0003]  1       BB01                  0.25    [???..???)-> BB04 ( cond )                     i 
BB03 [0002]  1       BB02                  0.12    [???..???)                                     i 
BB04 [0001]  3       BB01,BB02,BB03        1       [???..???)-> BB07 ( cond )                     i label target hascall idxlen new[] newobj 
BB05 [0008]  1       BB04                  0.25    [???..???)-> BB07 ( cond )                     i 
BB06 [0007]  1       BB05                  0.12    [???..???)                                     i 
BB07 [0006]  3       BB04,BB05,BB06        1       [???..037)        (return)                     i label target hascall idxlen new[] newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..???) -> BB04 (cond), preds={} succs={BB02,BB04}

***** BB01
STMT00000 (IL 0x000...0x00F)
N007 ( 17, 18) [000004] -ACXG---R---              *  ASG       ref    $282
N006 (  1,  1) [000003] D------N----              +--*  LCL_VAR   ref    V07 tmp1         d:1 $300
N005 ( 17, 18) [000002] --CXG-------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWARR_1_OBJ $282
N003 (  2, 10) [000001] H----------- arg0 in rcx     +--*  CNS_INT(h) long   0xd1ffab1e class $1c0
N004 (  1,  1) [000000] ------------ arg1 in rdx     \--*  CNS_INT   long   5 $200

***** BB01
STMT00001 (IL   ???...  ???)
N005 ( 16, 16) [000013] -AC-----R---              *  ASG       ref    $283
N004 (  1,  1) [000012] D------N----              +--*  LCL_VAR   ref    V08 tmp2         d:1 $283
N003 ( 16, 16) [000011] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $283
N002 (  2, 10) [000010] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class $1c1

***** BB01
STMT00002 (IL   ???...  ???)
N007 (  7,  8) [000018] -A-X----R---              *  ASG       long   $VN.Void
N006 (  4,  4) [000017] D--X---N----              +--*  IND       long   $340
N005 (  2,  2) [000016] -------N----              |  \--*  ADD       byref  $380
N003 (  1,  1) [000014] ------------              |     +--*  LCL_VAR   ref    V08 tmp2         u:1 $283
N004 (  1,  1) [000015] ------------              |     \--*  CNS_INT   long   8 $201
N002 (  2,  3) [000009] ------------              \--*  CAST      long <- int $340
N001 (  1,  1) [000008] ------------                 \--*  LCL_VAR   int    V01 arg1         u:1 (last use) $80

***** BB01
STMT00003 (IL   ???...  ???)
N009 ( 12, 10) [000022] -A--G-------              *  ASG       ref    $VN.Void
N006 (  4,  4) [000126] ----G--N----              +--*  COMMA     ref    $VN.Void
N001 (  0,  0) [000197] ------------              |  +--*  NOP       void   $3c0
N005 (  4,  4) [000021] a---G--N----              |  \--*  IND       ref    $283
N004 (  2,  2) [000125] -------N----              |     \--*  ADD       byref  $400
N002 (  1,  1) [000117] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000124] ------------              |        \--*  CNS_INT   long   16 Fseq[#FirstElem] $202
N008 (  7,  5) [000020] ------------              \--*  BOX       ref    $283
N007 (  1,  1) [000019] ------------                 \--*  LCL_VAR   ref    V08 tmp2         u:1 (last use) $283

***** BB01
STMT00004 (IL   ???...0x018)
N005 ( 16, 16) [000029] -AC-----R---              *  ASG       ref    $287
N004 (  1,  1) [000028] D------N----              +--*  LCL_VAR   ref    V09 tmp3         d:1 $287
N003 ( 16, 16) [000027] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $287
N002 (  2, 10) [000026] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class $1c3

***** BB01
STMT00005 (IL   ???...  ???)
N007 (  8,  9) [000035] -A-X----R---              *  ASG       int    $VN.Void
N006 (  4,  4) [000034] D--X---N----              +--*  IND       int    $440
N005 (  2,  2) [000032] -------N----              |  \--*  ADD       byref  $382
N003 (  1,  1) [000030] ------------              |     +--*  LCL_VAR   ref    V09 tmp3         u:1 $287
N004 (  1,  1) [000031] ------------              |     \--*  CNS_INT   long   8 $201
N002 (  3,  4) [000128] ------------              \--*  CAST      int <- short <- int $440
N001 (  2,  2) [000025] ------------                 \--*  LCL_VAR   int    V02 arg2         u:1 (last use) $c0

***** BB01
STMT00006 (IL   ???...  ???)
N009 ( 12, 10) [000039] -A--G-------              *  ASG       ref    $VN.Void
N006 (  4,  4) [000138] ----G--N----              +--*  COMMA     ref    $VN.Void
N001 (  0,  0) [000198] ------------              |  +--*  NOP       void   $3c1
N005 (  4,  4) [000038] a---G--N----              |  \--*  IND       ref    $287
N004 (  2,  2) [000137] -------N----              |     \--*  ADD       byref  $401
N002 (  1,  1) [000129] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000136] ------------              |        \--*  CNS_INT   long   24 Fseq[#ConstantIndex, #FirstElem] $204
N008 (  7,  5) [000037] ------------              \--*  BOX       ref    $287
N007 (  1,  1) [000036] ------------                 \--*  LCL_VAR   ref    V09 tmp3         u:1 (last use) $287

***** BB01
STMT00007 (IL   ???...0x021)
N005 ( 16, 16) [000046] -AC-----R---              *  ASG       ref    $28b
N004 (  1,  1) [000045] D------N----              +--*  LCL_VAR   ref    V10 tmp4         d:1 $28b
N003 ( 16, 16) [000044] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $28b
N002 (  2, 10) [000043] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class $1c4

***** BB01
STMT00008 (IL   ???...  ???)
N007 (  9, 10) [000052] -A-X----R---              *  ASG       short  $VN.Void
N006 (  5,  5) [000051] D--X---N----              +--*  IND       short  $442
N005 (  2,  2) [000049] -------N----              |  \--*  ADD       byref  $384
N003 (  1,  1) [000047] ------------              |     +--*  LCL_VAR   ref    V10 tmp4         u:1 $28b
N004 (  1,  1) [000048] ------------              |     \--*  CNS_INT   long   8 $201
N002 (  3,  4) [000140] ------------              \--*  CAST      int <- ubyte <- int $441
N001 (  2,  2) [000042] ------------                 \--*  LCL_VAR   int    V03 arg3         u:1 (last use) $100

***** BB01
STMT00009 (IL   ???...  ???)
N009 ( 12, 10) [000056] -A--G-------              *  ASG       ref    $VN.Void
N006 (  4,  4) [000150] ----G--N----              +--*  COMMA     ref    $VN.Void
N001 (  0,  0) [000199] ------------              |  +--*  NOP       void   $3c2
N005 (  4,  4) [000055] a---G--N----              |  \--*  IND       ref    $28b
N004 (  2,  2) [000149] -------N----              |     \--*  ADD       byref  $402
N002 (  1,  1) [000141] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000148] ------------              |        \--*  CNS_INT   long   32 Fseq[#ConstantIndex, #FirstElem] $206
N008 (  7,  5) [000054] ------------              \--*  BOX       ref    $28b
N007 (  1,  1) [000053] ------------                 \--*  LCL_VAR   ref    V10 tmp4         u:1 (last use) $28b

***** BB01
STMT00017 (IL   ???...  ???)
N003 (  3,  3) [000178] -A------R---              *  ASG       ref    $140
N002 (  1,  1) [000177] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:1 $140
N001 (  3,  2) [000077] ------?-----              \--*  LCL_VAR   ref    V04 arg4         u:1 $140

***** BB01
STMT00015 (IL   ???...  ???)
N004 (  7,  6) [000175] ------------              *  JTRUE     void  
N003 (  5,  4) [000071] J------N----              \--*  EQ        int    $443
N001 (  3,  2) [000070] ------------                 +--*  LCL_VAR   ref    V12 tmp6         u:1 $140
N002 (  1,  1) [000069] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB02 [???..???) -> BB04 (cond), preds={BB01} succs={BB03,BB04}

***** BB02
STMT00016 (IL   ???...  ???)
N009 ( 18, 22) [000176] -A-X--------              *  JTRUE     void  
N008 ( 16, 20) [000068] JA-X--?N----              \--*  EQ        int    $445
N002 (  6,  4) [000067] #--X--?-----                 +--*  IND       long   $291
N001 (  3,  2) [000061] ------?-----                 |  \--*  LCL_VAR   ref    V12 tmp6         u:1 $140
N007 (  9, 15) [000065] -A----?-----                 \--*  COMMA     long   $1c5
N005 (  6, 13) [000063] -A----?-R---                    +--*  ASG       long   $1c5
N004 (  3,  2) [000062] D-----?N----                    |  +--*  LCL_VAR   long   V11 tmp5         d:1 $1c5
N003 (  2, 10) [000060] H-----?-----                    |  \--*  CNS_INT(h) long   0xd1ffab1e class $1c5
N006 (  3,  2) [000064] ------?-----                    \--*  LCL_VAR   long   V11 tmp5         u:1 $1c5

------------ BB03 [???..???), preds={BB02} succs={BB04}

***** BB03
STMT00018 (IL   ???...  ???)
N007 ( 20, 11) [000180] -ACXG---R---              *  ASG       ref    $296
N006 (  1,  1) [000179] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:3 $140
N005 ( 20, 11) [000074] --CXG-?-----              \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL $296
N003 (  3,  2) [000066] ------?----- arg0 in rcx     +--*  LCL_VAR   long   V11 tmp5         u:1 (last use) $1c5
N004 (  3,  2) [000073] ------?----- arg1 in rdx     \--*  LCL_VAR   ref    V04 arg4         u:1 (last use) $140

------------ BB04 [???..???) -> BB07 (cond), preds={BB01,BB02,BB03} succs={BB05,BB07}

***** BB04
STMT00024 (IL   ???...  ???)
N005 (  0,  0) [000192] -A------R---              *  ASG       ref   
N004 (  0,  0) [000190] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:2
N003 (  0,  0) [000191] ------------              \--*  PHI       ref   
N001 (  0,  0) [000196] ------------ pred BB03       +--*  PHI_ARG   ref    V12 tmp6         u:3 $140
N002 (  0,  0) [000193] ------------ pred BB01       \--*  PHI_ARG   ref    V12 tmp6         u:1 $140

***** BB04
STMT00011 (IL   ???...  ???)
N008 (  6,  6) [000084] -A--G-------              *  ASG       ref    $VN.Void
N006 (  4,  4) [000162] ----G--N----              +--*  COMMA     ref    $VN.Void
N001 (  0,  0) [000200] ------------              |  +--*  NOP       void   $3c3
N005 (  4,  4) [000083] a---G--N----              |  \--*  IND       ref    $140
N004 (  2,  2) [000161] -------N----              |     \--*  ADD       byref  $403
N002 (  1,  1) [000153] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000160] ------------              |        \--*  CNS_INT   long   40 Fseq[#ConstantIndex, #FirstElem] $208
N007 (  1,  1) [000082] ------------              \--*  LCL_VAR   ref    V12 tmp6         u:2 (last use) $140

***** BB04
STMT00021 (IL   ???...  ???)
N003 (  3,  3) [000184] -A------R---              *  ASG       ref    $141
N002 (  1,  1) [000183] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:1 $141
N001 (  3,  2) [000105] ------?-----              \--*  LCL_VAR   ref    V05 arg5         u:1 $141

***** BB04
STMT00019 (IL   ???...  ???)
N004 (  7,  6) [000181] ------------              *  JTRUE     void  
N003 (  5,  4) [000099] J------N----              \--*  EQ        int    $446
N001 (  3,  2) [000098] ------------                 +--*  LCL_VAR   ref    V14 tmp8         u:1 $141
N002 (  1,  1) [000097] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB05 [???..???) -> BB07 (cond), preds={BB04} succs={BB06,BB07}

***** BB05
STMT00020 (IL   ???...  ???)
N009 ( 18, 22) [000182] -A-X--------              *  JTRUE     void  
N008 ( 16, 20) [000096] JA-X--?N----              \--*  EQ        int    $448
N002 (  6,  4) [000095] #--X--?-----                 +--*  IND       long   $29b
N001 (  3,  2) [000089] ------?-----                 |  \--*  LCL_VAR   ref    V14 tmp8         u:1 $141
N007 (  9, 15) [000093] -A----?-----                 \--*  COMMA     long   $1c6
N005 (  6, 13) [000091] -A----?-R---                    +--*  ASG       long   $1c6
N004 (  3,  2) [000090] D-----?N----                    |  +--*  LCL_VAR   long   V13 tmp7         d:1 $1c6
N003 (  2, 10) [000088] H-----?-----                    |  \--*  CNS_INT(h) long   0xd1ffab1e class $1c6
N006 (  3,  2) [000092] ------?-----                    \--*  LCL_VAR   long   V13 tmp7         u:1 $1c6

------------ BB06 [???..???), preds={BB05} succs={BB07}

***** BB06
STMT00022 (IL   ???...  ???)
N007 ( 20, 11) [000186] -ACXG---R---              *  ASG       ref    $2a0
N006 (  1,  1) [000185] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:3 $141
N005 ( 20, 11) [000102] --CXG-?-----              \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL $2a0
N003 (  3,  2) [000094] ------?----- arg0 in rcx     +--*  LCL_VAR   long   V13 tmp7         u:1 (last use) $1c6
N004 (  3,  2) [000101] ------?----- arg1 in rdx     \--*  LCL_VAR   ref    V05 arg5         u:1 (last use) $141

------------ BB07 [???..037) (return), preds={BB04,BB05,BB06} succs={}

***** BB07
STMT00023 (IL   ???...  ???)
N005 (  0,  0) [000189] -A------R---              *  ASG       ref   
N004 (  0,  0) [000187] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:2
N003 (  0,  0) [000188] ------------              \--*  PHI       ref   
N001 (  0,  0) [000195] ------------ pred BB06       +--*  PHI_ARG   ref    V14 tmp8         u:3 $141
N002 (  0,  0) [000194] ------------ pred BB04       \--*  PHI_ARG   ref    V14 tmp8         u:1 $141

***** BB07
STMT00013 (IL   ???...  ???)
N008 (  6,  6) [000112] -A--G-------              *  ASG       ref    $VN.Void
N006 (  4,  4) [000174] ----G--N----              +--*  COMMA     ref    $VN.Void
N001 (  0,  0) [000201] ------------              |  +--*  NOP       void   $3c4
N005 (  4,  4) [000111] a---G--N----              |  \--*  IND       ref    $141
N004 (  2,  2) [000173] -------N----              |     \--*  ADD       byref  $404
N002 (  1,  1) [000165] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000172] ------------              |        \--*  CNS_INT   long   48 Fseq[#ConstantIndex, #FirstElem] $20a
N007 (  1,  1) [000110] ------------              \--*  LCL_VAR   ref    V14 tmp8         u:2 (last use) $141

***** BB07
STMT00014 (IL   ???...0x036)
N002 (  2,  2) [000113] ------------              *  RETURN    ref    $2d1
N001 (  1,  1) [000005] ------------              \--*  LCL_VAR   ref    V07 tmp1         u:1 (last use) $300

-------------------------------------------------------------------------------------------------------------------

VN based non-null prop in BB01:
N006 (  4,  4) [000017] D--X---N----              *  IND       long   $340
optVNAssertionPropCurStmt morphed tree:
N007 (  7,  8) [000018] -A---O--R---              *  ASG       long   $VN.Void
N006 (  4,  4) [000017] n----O-N----              +--*  IND       long   $340
N005 (  2,  2) [000016] -------N----              |  \--*  ADD       byref  $380
N003 (  1,  1) [000014] ------------              |     +--*  LCL_VAR   ref    V08 tmp2         u:1 $283
N004 (  1,  1) [000015] ------------              |     \--*  CNS_INT   long   8 $201
N002 (  2,  3) [000009] ------------              \--*  CAST      long <- int $340
N001 (  1,  1) [000008] ------------                 \--*  LCL_VAR   int    V01 arg1         u:1 (last use) $80

GenTreeNode creates assertion:
N006 (  4,  4) [000017] n----O-N----              *  IND       long   $340
In BB01 New Global Constant Assertion: (643, 0) ($283,$0) V08.01 != null index=#01, mask=0000000000000001
GenTreeNode creates assertion:
N005 (  4,  4) [000021] a---G--N----              *  IND       ref    $283
In BB01 New Global Constant Assertion: (768, 0) ($300,$0) V07.01 != null index=#02, mask=0000000000000002

VN based non-null prop in BB01:
N006 (  4,  4) [000034] D--X---N----              *  IND       int    $440
optVNAssertionPropCurStmt morphed tree:
N007 (  8,  9) [000035] -A---O--R---              *  ASG       int    $VN.Void
N006 (  4,  4) [000034] n----O-N----              +--*  IND       int    $440
N005 (  2,  2) [000032] -------N----              |  \--*  ADD       byref  $382
N003 (  1,  1) [000030] ------------              |     +--*  LCL_VAR   ref    V09 tmp3         u:1 $287
N004 (  1,  1) [000031] ------------              |     \--*  CNS_INT   long   8 $201
N002 (  3,  4) [000128] ------------              \--*  CAST      int <- short <- int $440
N001 (  2,  2) [000025] ------------                 \--*  LCL_VAR   int    V02 arg2         u:1 (last use) $c0

GenTreeNode creates assertion:
N002 (  3,  4) [000128] ------------              *  CAST      int <- short <- int $440
In BB01 New Global Subrange Assertion: (192, 0) ($c0,$0) V02.01 in [-32768..32767] index=#03, mask=0000000000000004
GenTreeNode creates assertion:
N006 (  4,  4) [000034] n----O-N----              *  IND       int    $440
In BB01 New Global Constant Assertion: (647, 0) ($287,$0) V09.01 != null index=#04, mask=0000000000000008

VN based non-null prop in BB01:
N006 (  5,  5) [000051] D--X---N----              *  IND       short  $442
optVNAssertionPropCurStmt morphed tree:
N007 (  9, 10) [000052] -A---O--R---              *  ASG       short  $VN.Void
N006 (  5,  5) [000051] n----O-N----              +--*  IND       short  $442
N005 (  2,  2) [000049] -------N----              |  \--*  ADD       byref  $384
N003 (  1,  1) [000047] ------------              |     +--*  LCL_VAR   ref    V10 tmp4         u:1 $28b
N004 (  1,  1) [000048] ------------              |     \--*  CNS_INT   long   8 $201
N002 (  3,  4) [000140] ------------              \--*  CAST      int <- ubyte <- int $441
N001 (  2,  2) [000042] ------------                 \--*  LCL_VAR   int    V03 arg3         u:1 (last use) $100

GenTreeNode creates assertion:
N002 (  3,  4) [000140] ------------              *  CAST      int <- ubyte <- int $441
In BB01 New Global Subrange Assertion: (256, 0) ($100,$0) V03.01 in [0..255] index=#05, mask=0000000000000010
GenTreeNode creates assertion:
N006 (  5,  5) [000051] n----O-N----              *  IND       short  $442
In BB01 New Global Constant Assertion: (651, 0) ($28b,$0) V10.01 != null index=#06, mask=0000000000000020
GenTreeNode creates assertion:
N004 (  7,  6) [000175] ------------              *  JTRUE     void  
In BB01 New Global Constant Assertion: (320, 0) ($140,$0) V12.01 == null index=#07, mask=0000000000000040
GenTreeNode creates assertion:
N004 (  7,  6) [000175] ------------              *  JTRUE     void  
In BB01 New Global Constant Assertion: (320, 0) ($140,$0) V12.01 != null index=#08, mask=0000000000000080
GenTreeNode creates assertion:
N002 (  6,  4) [000067] #--X--?-----              *  IND       long   $291
In BB02 New Global Constant Assertion: (320, 0) ($140,$0) V12.01 != null index=#09, mask=0000000000000100
GenTreeNode creates assertion:
N009 ( 18, 22) [000176] -A-X--------              *  JTRUE     void  
In BB02 New Global Type     Assertion: (320, 453) ($140,$1c5) V12.01 is Exact Type MT(D1FFAB1E) index=#10, mask=0000000000000200
GenTreeNode creates assertion:
N009 ( 18, 22) [000176] -A-X--------              *  JTRUE     void  
In BB02 New Global Type     Assertion: (320, 453) ($140,$1c5) V12.01 is not Exact Type MT(D1FFAB1E) index=#11, mask=0000000000000400
GenTreeNode creates assertion:
N004 (  7,  6) [000181] ------------              *  JTRUE     void  
In BB04 New Global Constant Assertion: (321, 0) ($141,$0) V14.01 == null index=#12, mask=0000000000000800
GenTreeNode creates assertion:
N004 (  7,  6) [000181] ------------              *  JTRUE     void  
In BB04 New Global Constant Assertion: (321, 0) ($141,$0) V14.01 != null index=#13, mask=0000000000001000
GenTreeNode creates assertion:
N002 (  6,  4) [000095] #--X--?-----              *  IND       long   $29b
In BB05 New Global Constant Assertion: (321, 0) ($141,$0) V14.01 != null index=#14, mask=0000000000002000
GenTreeNode creates assertion:
N009 ( 18, 22) [000182] -A-X--------              *  JTRUE     void  
In BB05 New Global Type     Assertion: (321, 454) ($141,$1c6) V14.01 is Exact Type MT(D1FFAB1E) index=#15, mask=0000000000004000
GenTreeNode creates assertion:
N009 ( 18, 22) [000182] -A-X--------              *  JTRUE     void  
In BB05 New Global Type     Assertion: (321, 454) ($141,$1c6) V14.01 is not Exact Type MT(D1FFAB1E) index=#16, mask=0000000000008000
BB01 valueGen = 00000000000000AB => BB04 valueGen = 000000000000006B,
BB02 valueGen = 0000000000000500 => BB04 valueGen = 0000000000000300,
BB03 valueGen = 0000000000000000
BB04 valueGen = 0000000000001002 => BB07 valueGen = 0000000000000802,
BB05 valueGen = 000000000000A000 => BB07 valueGen = 0000000000006000,
BB06 valueGen = 0000000000000000
BB07 valueGen = 0000000000000002
AssertionPropCallback::StartMerge: BB01 in -> 0000000000000000
AssertionPropCallback::EndMerge  : BB01 in -> 0000000000000000

AssertionPropCallback::Changed   : BB01 before out -> 000000000000FFFF; after out -> 00000000000000AB;
		jumpDest before out -> 000000000000FFFF; jumpDest after out -> 000000000000006B;

AssertionPropCallback::StartMerge: BB02 in -> 000000000000FFFF
AssertionPropCallback::Merge     : BB02 in -> 000000000000FFFF, predBlock BB01 out -> 00000000000000AB
AssertionPropCallback::EndMerge  : BB02 in -> 00000000000000AB

AssertionPropCallback::Changed   : BB02 before out -> 000000000000FFFF; after out -> 00000000000005AB;
		jumpDest before out -> 000000000000FFFF; jumpDest after out -> 00000000000003AB;

AssertionPropCallback::StartMerge: BB04 in -> 000000000000FFFF
AssertionPropCallback::Merge     : BB04 in -> 000000000000FFFF, predBlock BB01 out -> 00000000000000AB
AssertionPropCallback::Merge     : BB04 in -> 000000000000006B, predBlock BB02 out -> 00000000000005AB
AssertionPropCallback::Merge     : BB04 in -> 000000000000002B, predBlock BB03 out -> 000000000000FFFF
AssertionPropCallback::EndMerge  : BB04 in -> 000000000000002B

AssertionPropCallback::Changed   : BB04 before out -> 000000000000FFFF; after out -> 000000000000102B;
		jumpDest before out -> 000000000000FFFF; jumpDest after out -> 000000000000082B;

AssertionPropCallback::StartMerge: BB03 in -> 000000000000FFFF
AssertionPropCallback::Merge     : BB03 in -> 000000000000FFFF, predBlock BB02 out -> 00000000000005AB
AssertionPropCallback::EndMerge  : BB03 in -> 00000000000005AB

AssertionPropCallback::Changed   : BB03 before out -> 000000000000FFFF; after out -> 00000000000005AB;
		jumpDest before out -> 000000000000FFFF; jumpDest after out -> 00000000000005AB;

AssertionPropCallback::StartMerge: BB04 in -> 000000000000002B
AssertionPropCallback::Merge     : BB04 in -> 000000000000002B, predBlock BB01 out -> 00000000000000AB
AssertionPropCallback::Merge     : BB04 in -> 000000000000002B, predBlock BB02 out -> 00000000000005AB
AssertionPropCallback::Merge     : BB04 in -> 000000000000002B, predBlock BB03 out -> 00000000000005AB
AssertionPropCallback::EndMerge  : BB04 in -> 000000000000002B

AssertionPropCallback::Unchanged  : BB04 out -> 000000000000102B; 		jumpDest out -> 000000000000082B

AssertionPropCallback::StartMerge: BB05 in -> 000000000000FFFF
AssertionPropCallback::Merge     : BB05 in -> 000000000000FFFF, predBlock BB04 out -> 000000000000102B
AssertionPropCallback::EndMerge  : BB05 in -> 000000000000102B

AssertionPropCallback::Changed   : BB05 before out -> 000000000000FFFF; after out -> 000000000000B02B;
		jumpDest before out -> 000000000000FFFF; jumpDest after out -> 000000000000702B;

AssertionPropCallback::StartMerge: BB07 in -> 000000000000FFFF
AssertionPropCallback::Merge     : BB07 in -> 000000000000FFFF, predBlock BB04 out -> 000000000000102B
AssertionPropCallback::Merge     : BB07 in -> 000000000000082B, predBlock BB05 out -> 000000000000B02B
AssertionPropCallback::Merge     : BB07 in -> 000000000000002B, predBlock BB06 out -> 000000000000FFFF
AssertionPropCallback::EndMerge  : BB07 in -> 000000000000002B

AssertionPropCallback::Changed   : BB07 before out -> 000000000000FFFF; after out -> 000000000000002B;
		jumpDest before out -> 000000000000FFFF; jumpDest after out -> 000000000000002B;

AssertionPropCallback::StartMerge: BB04 in -> 000000000000002B
AssertionPropCallback::Merge     : BB04 in -> 000000000000002B, predBlock BB01 out -> 00000000000000AB
AssertionPropCallback::Merge     : BB04 in -> 000000000000002B, predBlock BB02 out -> 00000000000005AB
AssertionPropCallback::Merge     : BB04 in -> 000000000000002B, predBlock BB03 out -> 00000000000005AB
AssertionPropCallback::EndMerge  : BB04 in -> 000000000000002B

AssertionPropCallback::Unchanged  : BB04 out -> 000000000000102B; 		jumpDest out -> 000000000000082B

AssertionPropCallback::StartMerge: BB06 in -> 000000000000FFFF
AssertionPropCallback::Merge     : BB06 in -> 000000000000FFFF, predBlock BB05 out -> 000000000000B02B
AssertionPropCallback::EndMerge  : BB06 in -> 000000000000B02B

AssertionPropCallback::Changed   : BB06 before out -> 000000000000FFFF; after out -> 000000000000B02B;
		jumpDest before out -> 000000000000FFFF; jumpDest after out -> 000000000000B02B;

AssertionPropCallback::StartMerge: BB07 in -> 000000000000002B
AssertionPropCallback::Merge     : BB07 in -> 000000000000002B, predBlock BB04 out -> 000000000000102B
AssertionPropCallback::Merge     : BB07 in -> 000000000000002B, predBlock BB05 out -> 000000000000B02B
AssertionPropCallback::Merge     : BB07 in -> 000000000000002B, predBlock BB06 out -> 000000000000B02B
AssertionPropCallback::EndMerge  : BB07 in -> 000000000000002B

AssertionPropCallback::Unchanged  : BB07 out -> 000000000000002B; 		jumpDest out -> 000000000000002B

AssertionPropCallback::StartMerge: BB07 in -> 000000000000002B
AssertionPropCallback::Merge     : BB07 in -> 000000000000002B, predBlock BB04 out -> 000000000000102B
AssertionPropCallback::Merge     : BB07 in -> 000000000000002B, predBlock BB05 out -> 000000000000B02B
AssertionPropCallback::Merge     : BB07 in -> 000000000000002B, predBlock BB06 out -> 000000000000B02B
AssertionPropCallback::EndMerge  : BB07 in -> 000000000000002B

AssertionPropCallback::Unchanged  : BB07 out -> 000000000000002B; 		jumpDest out -> 000000000000002B



BB01 valueIn  = 0000000000000000 valueOut = 00000000000000AB => BB04 valueOut= 000000000000006B
BB02 valueIn  = 00000000000000AB valueOut = 00000000000005AB => BB04 valueOut= 00000000000003AB
BB03 valueIn  = 00000000000005AB valueOut = 00000000000005AB
BB04 valueIn  = 000000000000002B valueOut = 000000000000102B => BB07 valueOut= 000000000000082B
BB05 valueIn  = 000000000000102B valueOut = 000000000000B02B => BB07 valueOut= 000000000000702B
BB06 valueIn  = 000000000000B02B valueOut = 000000000000B02B
BB07 valueIn  = 000000000000002B valueOut = 000000000000002B
Propagating 0000000000000000 assertions for BB01, stmt STMT00000, tree [000114], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00000, tree [000115], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00000, tree [000001], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00000, tree [000000], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00000, tree [000002], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00000, tree [000003], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00000, tree [000004], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00001, tree [000116], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00001, tree [000010], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00001, tree [000011], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00001, tree [000012], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00001, tree [000013], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00002, tree [000008], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00002, tree [000009], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00002, tree [000014], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00002, tree [000015], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00002, tree [000016], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00002, tree [000017], tree -> 1
Propagating 0000000000000001 assertions for BB01, stmt STMT00002, tree [000018], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00003, tree [000197], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00003, tree [000117], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00003, tree [000124], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00003, tree [000125], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00003, tree [000021], tree -> 2
Propagating 0000000000000003 assertions for BB01, stmt STMT00003, tree [000126], tree -> 0
Propagating 0000000000000003 assertions for BB01, stmt STMT00003, tree [000019], tree -> 0
Propagating 0000000000000003 assertions for BB01, stmt STMT00003, tree [000020], tree -> 0
Propagating 0000000000000003 assertions for BB01, stmt STMT00003, tree [000022], tree -> 0
Propagating 0000000000000003 assertions for BB01, stmt STMT00004, tree [000127], tree -> 0
Propagating 0000000000000003 assertions for BB01, stmt STMT00004, tree [000026], tree -> 0
Propagating 0000000000000003 assertions for BB01, stmt STMT00004, tree [000027], tree -> 0
Propagating 0000000000000003 assertions for BB01, stmt STMT00004, tree [000028], tree -> 0
Propagating 0000000000000003 assertions for BB01, stmt STMT00004, tree [000029], tree -> 0
Propagating 0000000000000003 assertions for BB01, stmt STMT00005, tree [000025], tree -> 0
Propagating 0000000000000003 assertions for BB01, stmt STMT00005, tree [000128], tree -> 0
Propagating 0000000000000003 assertions for BB01, stmt STMT00005, tree [000030], tree -> 0
Propagating 0000000000000003 assertions for BB01, stmt STMT00005, tree [000031], tree -> 0
Propagating 0000000000000003 assertions for BB01, stmt STMT00005, tree [000032], tree -> 0
Propagating 0000000000000003 assertions for BB01, stmt STMT00005, tree [000034], tree -> 4
Propagating 000000000000000B assertions for BB01, stmt STMT00005, tree [000035], tree -> 0
Propagating 000000000000000B assertions for BB01, stmt STMT00006, tree [000198], tree -> 0
Propagating 000000000000000B assertions for BB01, stmt STMT00006, tree [000129], tree -> 0
Propagating 000000000000000B assertions for BB01, stmt STMT00006, tree [000136], tree -> 0
Propagating 000000000000000B assertions for BB01, stmt STMT00006, tree [000137], tree -> 0
Propagating 000000000000000B assertions for BB01, stmt STMT00006, tree [000038], tree -> 2
Propagating 000000000000000B assertions for BB01, stmt STMT00006, tree [000138], tree -> 0
Propagating 000000000000000B assertions for BB01, stmt STMT00006, tree [000036], tree -> 0
Propagating 000000000000000B assertions for BB01, stmt STMT00006, tree [000037], tree -> 0
Propagating 000000000000000B assertions for BB01, stmt STMT00006, tree [000039], tree -> 0
Propagating 000000000000000B assertions for BB01, stmt STMT00007, tree [000139], tree -> 0
Propagating 000000000000000B assertions for BB01, stmt STMT00007, tree [000043], tree -> 0
Propagating 000000000000000B assertions for BB01, stmt STMT00007, tree [000044], tree -> 0
Propagating 000000000000000B assertions for BB01, stmt STMT00007, tree [000045], tree -> 0
Propagating 000000000000000B assertions for BB01, stmt STMT00007, tree [000046], tree -> 0
Propagating 000000000000000B assertions for BB01, stmt STMT00008, tree [000042], tree -> 0
Propagating 000000000000000B assertions for BB01, stmt STMT00008, tree [000140], tree -> 0
Propagating 000000000000000B assertions for BB01, stmt STMT00008, tree [000047], tree -> 0
Propagating 000000000000000B assertions for BB01, stmt STMT00008, tree [000048], tree -> 0
Propagating 000000000000000B assertions for BB01, stmt STMT00008, tree [000049], tree -> 0
Propagating 000000000000000B assertions for BB01, stmt STMT00008, tree [000051], tree -> 6
Propagating 000000000000002B assertions for BB01, stmt STMT00008, tree [000052], tree -> 0
Propagating 000000000000002B assertions for BB01, stmt STMT00009, tree [000199], tree -> 0
Propagating 000000000000002B assertions for BB01, stmt STMT00009, tree [000141], tree -> 0
Propagating 000000000000002B assertions for BB01, stmt STMT00009, tree [000148], tree -> 0
Propagating 000000000000002B assertions for BB01, stmt STMT00009, tree [000149], tree -> 0
Propagating 000000000000002B assertions for BB01, stmt STMT00009, tree [000055], tree -> 2
Propagating 000000000000002B assertions for BB01, stmt STMT00009, tree [000150], tree -> 0
Propagating 000000000000002B assertions for BB01, stmt STMT00009, tree [000053], tree -> 0
Propagating 000000000000002B assertions for BB01, stmt STMT00009, tree [000054], tree -> 0
Propagating 000000000000002B assertions for BB01, stmt STMT00009, tree [000056], tree -> 0
Propagating 000000000000002B assertions for BB01, stmt STMT00017, tree [000077], tree -> 0
Propagating 000000000000002B assertions for BB01, stmt STMT00017, tree [000177], tree -> 0
Propagating 000000000000002B assertions for BB01, stmt STMT00017, tree [000178], tree -> 0
Propagating 000000000000002B assertions for BB01, stmt STMT00015, tree [000070], tree -> 0
Propagating 000000000000002B assertions for BB01, stmt STMT00015, tree [000069], tree -> 0
Propagating 000000000000002B assertions for BB01, stmt STMT00015, tree [000071], tree -> 0
Propagating 000000000000002B assertions for BB01, stmt STMT00015, tree [000175], tree -> 7
Propagating 00000000000000AB assertions for BB02, stmt STMT00016, tree [000061], tree -> 0
Propagating 00000000000000AB assertions for BB02, stmt STMT00016, tree [000067], tree -> 9

Non-null prop for index #08 in BB02:
N002 (  6,  4) [000067] #--X--?-----              *  IND       long   $291
Propagating 00000000000001AB assertions for BB02, stmt STMT00016, tree [000060], tree -> 0
Propagating 00000000000001AB assertions for BB02, stmt STMT00016, tree [000062], tree -> 0
Propagating 00000000000001AB assertions for BB02, stmt STMT00016, tree [000063], tree -> 0
Propagating 00000000000001AB assertions for BB02, stmt STMT00016, tree [000064], tree -> 0
Propagating 00000000000001AB assertions for BB02, stmt STMT00016, tree [000065], tree -> 0
Propagating 00000000000001AB assertions for BB02, stmt STMT00016, tree [000068], tree -> 0
Propagating 00000000000001AB assertions for BB02, stmt STMT00016, tree [000176], tree -> 10
Re-morphing this stmt:
STMT00016 (IL   ???...  ???)
N009 ( 18, 22) [000176] -A-X--------              *  JTRUE     void  
N008 ( 16, 20) [000068] JA-X--?N----              \--*  EQ        int    $445
N002 (  6,  4) [000067] #----O?-----                 +--*  IND       long   $291
N001 (  3,  2) [000061] ------?-----                 |  \--*  LCL_VAR   ref    V12 tmp6         u:1 $140
N007 (  9, 15) [000065] -A----?-----                 \--*  COMMA     long   $1c5
N005 (  6, 13) [000063] -A----?-R---                    +--*  ASG       long   $1c5
N004 (  3,  2) [000062] D-----?N----                    |  +--*  LCL_VAR   long   V11 tmp5         d:1 $1c5
N003 (  2, 10) [000060] H-----?-----                    |  \--*  CNS_INT(h) long   0xd1ffab1e class $1c5
N006 (  3,  2) [000064] ------?-----                    \--*  LCL_VAR   long   V11 tmp5         u:1 $1c5

optAssertionPropMain morphed tree:
N009 ( 15, 20) [000176] -A---O------              *  JTRUE     void  
N008 ( 13, 18) [000068] JA---O?N----              \--*  EQ        int    $445
N002 (  3,  2) [000067] #----O?-----                 +--*  IND       long   $291
N001 (  1,  1) [000061] ------?-----                 |  \--*  LCL_VAR   ref    V12 tmp6         u:1 $140
N007 (  9, 15) [000065] -A----?-----                 \--*  COMMA     long   $1c5
N005 (  6, 13) [000063] -A----?-R---                    +--*  ASG       long   $1c5
N004 (  3,  2) [000062] D-----?N----                    |  +--*  LCL_VAR   long   V11 tmp5         d:1 $1c5
N003 (  2, 10) [000060] H-----?-----                    |  \--*  CNS_INT(h) long   0xd1ffab1e class $1c5
N006 (  3,  2) [000064] ------?-----                    \--*  LCL_VAR   long   V11 tmp5         u:1 $1c5

Propagating 00000000000005AB assertions for BB03, stmt STMT00018, tree [000151], tree -> 0
Propagating 00000000000005AB assertions for BB03, stmt STMT00018, tree [000152], tree -> 0
Propagating 00000000000005AB assertions for BB03, stmt STMT00018, tree [000066], tree -> 0
Propagating 00000000000005AB assertions for BB03, stmt STMT00018, tree [000073], tree -> 0
Propagating 00000000000005AB assertions for BB03, stmt STMT00018, tree [000074], tree -> 0
Propagating 00000000000005AB assertions for BB03, stmt STMT00018, tree [000179], tree -> 0
Propagating 00000000000005AB assertions for BB03, stmt STMT00018, tree [000180], tree -> 0
Propagating 000000000000002B assertions for BB04, stmt STMT00011, tree [000200], tree -> 0
Propagating 000000000000002B assertions for BB04, stmt STMT00011, tree [000153], tree -> 0
Propagating 000000000000002B assertions for BB04, stmt STMT00011, tree [000160], tree -> 0
Propagating 000000000000002B assertions for BB04, stmt STMT00011, tree [000161], tree -> 0
Propagating 000000000000002B assertions for BB04, stmt STMT00011, tree [000083], tree -> 2
Propagating 000000000000002B assertions for BB04, stmt STMT00011, tree [000162], tree -> 0
Propagating 000000000000002B assertions for BB04, stmt STMT00011, tree [000082], tree -> 0
Propagating 000000000000002B assertions for BB04, stmt STMT00011, tree [000084], tree -> 0
Propagating 000000000000002B assertions for BB04, stmt STMT00021, tree [000105], tree -> 0
Propagating 000000000000002B assertions for BB04, stmt STMT00021, tree [000183], tree -> 0
Propagating 000000000000002B assertions for BB04, stmt STMT00021, tree [000184], tree -> 0
Propagating 000000000000002B assertions for BB04, stmt STMT00019, tree [000098], tree -> 0
Propagating 000000000000002B assertions for BB04, stmt STMT00019, tree [000097], tree -> 0
Propagating 000000000000002B assertions for BB04, stmt STMT00019, tree [000099], tree -> 0
Propagating 000000000000002B assertions for BB04, stmt STMT00019, tree [000181], tree -> 12
Propagating 000000000000102B assertions for BB05, stmt STMT00020, tree [000089], tree -> 0
Propagating 000000000000102B assertions for BB05, stmt STMT00020, tree [000095], tree -> 14

Non-null prop for index #13 in BB05:
N002 (  6,  4) [000095] #--X--?-----              *  IND       long   $29b
Propagating 000000000000302B assertions for BB05, stmt STMT00020, tree [000088], tree -> 0
Propagating 000000000000302B assertions for BB05, stmt STMT00020, tree [000090], tree -> 0
Propagating 000000000000302B assertions for BB05, stmt STMT00020, tree [000091], tree -> 0
Propagating 000000000000302B assertions for BB05, stmt STMT00020, tree [000092], tree -> 0
Propagating 000000000000302B assertions for BB05, stmt STMT00020, tree [000093], tree -> 0
Propagating 000000000000302B assertions for BB05, stmt STMT00020, tree [000096], tree -> 0
Propagating 000000000000302B assertions for BB05, stmt STMT00020, tree [000182], tree -> 15
Re-morphing this stmt:
STMT00020 (IL   ???...  ???)
N009 ( 18, 22) [000182] -A-X--------              *  JTRUE     void  
N008 ( 16, 20) [000096] JA-X--?N----              \--*  EQ        int    $448
N002 (  6,  4) [000095] #----O?-----                 +--*  IND       long   $29b
N001 (  3,  2) [000089] ------?-----                 |  \--*  LCL_VAR   ref    V14 tmp8         u:1 $141
N007 (  9, 15) [000093] -A----?-----                 \--*  COMMA     long   $1c6
N005 (  6, 13) [000091] -A----?-R---                    +--*  ASG       long   $1c6
N004 (  3,  2) [000090] D-----?N----                    |  +--*  LCL_VAR   long   V13 tmp7         d:1 $1c6
N003 (  2, 10) [000088] H-----?-----                    |  \--*  CNS_INT(h) long   0xd1ffab1e class $1c6
N006 (  3,  2) [000092] ------?-----                    \--*  LCL_VAR   long   V13 tmp7         u:1 $1c6

optAssertionPropMain morphed tree:
N009 ( 15, 20) [000182] -A---O------              *  JTRUE     void  
N008 ( 13, 18) [000096] JA---O?N----              \--*  EQ        int    $448
N002 (  3,  2) [000095] #----O?-----                 +--*  IND       long   $29b
N001 (  1,  1) [000089] ------?-----                 |  \--*  LCL_VAR   ref    V14 tmp8         u:1 $141
N007 (  9, 15) [000093] -A----?-----                 \--*  COMMA     long   $1c6
N005 (  6, 13) [000091] -A----?-R---                    +--*  ASG       long   $1c6
N004 (  3,  2) [000090] D-----?N----                    |  +--*  LCL_VAR   long   V13 tmp7         d:1 $1c6
N003 (  2, 10) [000088] H-----?-----                    |  \--*  CNS_INT(h) long   0xd1ffab1e class $1c6
N006 (  3,  2) [000092] ------?-----                    \--*  LCL_VAR   long   V13 tmp7         u:1 $1c6

Propagating 000000000000B02B assertions for BB06, stmt STMT00022, tree [000163], tree -> 0
Propagating 000000000000B02B assertions for BB06, stmt STMT00022, tree [000164], tree -> 0
Propagating 000000000000B02B assertions for BB06, stmt STMT00022, tree [000094], tree -> 0
Propagating 000000000000B02B assertions for BB06, stmt STMT00022, tree [000101], tree -> 0
Propagating 000000000000B02B assertions for BB06, stmt STMT00022, tree [000102], tree -> 0
Propagating 000000000000B02B assertions for BB06, stmt STMT00022, tree [000185], tree -> 0
Propagating 000000000000B02B assertions for BB06, stmt STMT00022, tree [000186], tree -> 0
Propagating 000000000000002B assertions for BB07, stmt STMT00013, tree [000201], tree -> 0
Propagating 000000000000002B assertions for BB07, stmt STMT00013, tree [000165], tree -> 0
Propagating 000000000000002B assertions for BB07, stmt STMT00013, tree [000172], tree -> 0
Propagating 000000000000002B assertions for BB07, stmt STMT00013, tree [000173], tree -> 0
Propagating 000000000000002B assertions for BB07, stmt STMT00013, tree [000111], tree -> 2
Propagating 000000000000002B assertions for BB07, stmt STMT00013, tree [000174], tree -> 0
Propagating 000000000000002B assertions for BB07, stmt STMT00013, tree [000110], tree -> 0
Propagating 000000000000002B assertions for BB07, stmt STMT00013, tree [000112], tree -> 0
Propagating 000000000000002B assertions for BB07, stmt STMT00014, tree [000005], tree -> 0
Propagating 000000000000002B assertions for BB07, stmt STMT00014, tree [000113], tree -> 0
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Assertion prop

*************** Starting PHASE Optimize index checks
*************** In OptimizeRangeChecks()
Blocks/trees before phase

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..???)-> BB04 ( cond )                     i label target hascall idxlen new[] newobj 
BB02 [0003]  1       BB01                  0.25    [???..???)-> BB04 ( cond )                     i 
BB03 [0002]  1       BB02                  0.12    [???..???)                                     i 
BB04 [0001]  3       BB01,BB02,BB03        1       [???..???)-> BB07 ( cond )                     i label target hascall idxlen new[] newobj 
BB05 [0008]  1       BB04                  0.25    [???..???)-> BB07 ( cond )                     i 
BB06 [0007]  1       BB05                  0.12    [???..???)                                     i 
BB07 [0006]  3       BB04,BB05,BB06        1       [???..037)        (return)                     i label target hascall idxlen new[] newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..???) -> BB04 (cond), preds={} succs={BB02,BB04}

***** BB01
STMT00000 (IL 0x000...0x00F)
N007 ( 17, 18) [000004] -ACXG---R---              *  ASG       ref    $282
N006 (  1,  1) [000003] D------N----              +--*  LCL_VAR   ref    V07 tmp1         d:1 $300
N005 ( 17, 18) [000002] --CXG-------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWARR_1_OBJ $282
N003 (  2, 10) [000001] H----------- arg0 in rcx     +--*  CNS_INT(h) long   0xd1ffab1e class $1c0
N004 (  1,  1) [000000] ------------ arg1 in rdx     \--*  CNS_INT   long   5 $200

***** BB01
STMT00001 (IL   ???...  ???)
N005 ( 16, 16) [000013] -AC-----R---              *  ASG       ref    $283
N004 (  1,  1) [000012] D------N----              +--*  LCL_VAR   ref    V08 tmp2         d:1 $283
N003 ( 16, 16) [000011] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $283
N002 (  2, 10) [000010] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class $1c1

***** BB01
STMT00002 (IL   ???...  ???)
N007 (  7,  8) [000018] -A---O--R---              *  ASG       long   $VN.Void
N006 (  4,  4) [000017] n----O-N----              +--*  IND       long   $340
N005 (  2,  2) [000016] -------N----              |  \--*  ADD       byref  $380
N003 (  1,  1) [000014] ------------              |     +--*  LCL_VAR   ref    V08 tmp2         u:1 $283
N004 (  1,  1) [000015] ------------              |     \--*  CNS_INT   long   8 $201
N002 (  2,  3) [000009] ------------              \--*  CAST      long <- int $340
N001 (  1,  1) [000008] ------------                 \--*  LCL_VAR   int    V01 arg1         u:1 (last use) $80

***** BB01
STMT00003 (IL   ???...  ???)
N009 ( 12, 10) [000022] -A--G-------              *  ASG       ref    $VN.Void
N006 (  4,  4) [000126] ----G--N----              +--*  COMMA     ref    $VN.Void
N001 (  0,  0) [000197] ------------              |  +--*  NOP       void   $3c0
N005 (  4,  4) [000021] a---G--N----              |  \--*  IND       ref    $283
N004 (  2,  2) [000125] -------N----              |     \--*  ADD       byref  $400
N002 (  1,  1) [000117] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000124] ------------              |        \--*  CNS_INT   long   16 Fseq[#FirstElem] $202
N008 (  7,  5) [000020] ------------              \--*  BOX       ref    $283
N007 (  1,  1) [000019] ------------                 \--*  LCL_VAR   ref    V08 tmp2         u:1 (last use) $283

***** BB01
STMT00004 (IL   ???...0x018)
N005 ( 16, 16) [000029] -AC-----R---              *  ASG       ref    $287
N004 (  1,  1) [000028] D------N----              +--*  LCL_VAR   ref    V09 tmp3         d:1 $287
N003 ( 16, 16) [000027] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $287
N002 (  2, 10) [000026] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class $1c3

***** BB01
STMT00005 (IL   ???...  ???)
N007 (  8,  9) [000035] -A---O--R---              *  ASG       int    $VN.Void
N006 (  4,  4) [000034] n----O-N----              +--*  IND       int    $440
N005 (  2,  2) [000032] -------N----              |  \--*  ADD       byref  $382
N003 (  1,  1) [000030] ------------              |     +--*  LCL_VAR   ref    V09 tmp3         u:1 $287
N004 (  1,  1) [000031] ------------              |     \--*  CNS_INT   long   8 $201
N002 (  3,  4) [000128] ------------              \--*  CAST      int <- short <- int $440
N001 (  2,  2) [000025] ------------                 \--*  LCL_VAR   int    V02 arg2         u:1 (last use) $c0

***** BB01
STMT00006 (IL   ???...  ???)
N009 ( 12, 10) [000039] -A--G-------              *  ASG       ref    $VN.Void
N006 (  4,  4) [000138] ----G--N----              +--*  COMMA     ref    $VN.Void
N001 (  0,  0) [000198] ------------              |  +--*  NOP       void   $3c1
N005 (  4,  4) [000038] a---G--N----              |  \--*  IND       ref    $287
N004 (  2,  2) [000137] -------N----              |     \--*  ADD       byref  $401
N002 (  1,  1) [000129] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000136] ------------              |        \--*  CNS_INT   long   24 Fseq[#ConstantIndex, #FirstElem] $204
N008 (  7,  5) [000037] ------------              \--*  BOX       ref    $287
N007 (  1,  1) [000036] ------------                 \--*  LCL_VAR   ref    V09 tmp3         u:1 (last use) $287

***** BB01
STMT00007 (IL   ???...0x021)
N005 ( 16, 16) [000046] -AC-----R---              *  ASG       ref    $28b
N004 (  1,  1) [000045] D------N----              +--*  LCL_VAR   ref    V10 tmp4         d:1 $28b
N003 ( 16, 16) [000044] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $28b
N002 (  2, 10) [000043] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class $1c4

***** BB01
STMT00008 (IL   ???...  ???)
N007 (  9, 10) [000052] -A---O--R---              *  ASG       short  $VN.Void
N006 (  5,  5) [000051] n----O-N----              +--*  IND       short  $442
N005 (  2,  2) [000049] -------N----              |  \--*  ADD       byref  $384
N003 (  1,  1) [000047] ------------              |     +--*  LCL_VAR   ref    V10 tmp4         u:1 $28b
N004 (  1,  1) [000048] ------------              |     \--*  CNS_INT   long   8 $201
N002 (  3,  4) [000140] ------------              \--*  CAST      int <- ubyte <- int $441
N001 (  2,  2) [000042] ------------                 \--*  LCL_VAR   int    V03 arg3         u:1 (last use) $100

***** BB01
STMT00009 (IL   ???...  ???)
N009 ( 12, 10) [000056] -A--G-------              *  ASG       ref    $VN.Void
N006 (  4,  4) [000150] ----G--N----              +--*  COMMA     ref    $VN.Void
N001 (  0,  0) [000199] ------------              |  +--*  NOP       void   $3c2
N005 (  4,  4) [000055] a---G--N----              |  \--*  IND       ref    $28b
N004 (  2,  2) [000149] -------N----              |     \--*  ADD       byref  $402
N002 (  1,  1) [000141] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000148] ------------              |        \--*  CNS_INT   long   32 Fseq[#ConstantIndex, #FirstElem] $206
N008 (  7,  5) [000054] ------------              \--*  BOX       ref    $28b
N007 (  1,  1) [000053] ------------                 \--*  LCL_VAR   ref    V10 tmp4         u:1 (last use) $28b

***** BB01
STMT00017 (IL   ???...  ???)
N003 (  3,  3) [000178] -A------R---              *  ASG       ref    $140
N002 (  1,  1) [000177] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:1 $140
N001 (  3,  2) [000077] ------?-----              \--*  LCL_VAR   ref    V04 arg4         u:1 $140

***** BB01
STMT00015 (IL   ???...  ???)
N004 (  7,  6) [000175] ------------              *  JTRUE     void  
N003 (  5,  4) [000071] J------N----              \--*  EQ        int    $443
N001 (  3,  2) [000070] ------------                 +--*  LCL_VAR   ref    V12 tmp6         u:1 $140
N002 (  1,  1) [000069] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB02 [???..???) -> BB04 (cond), preds={BB01} succs={BB03,BB04}

***** BB02
STMT00016 (IL   ???...  ???)
N009 ( 15, 20) [000176] -A---O------              *  JTRUE     void  
N008 ( 13, 18) [000068] JA---O?N----              \--*  EQ        int    $445
N002 (  3,  2) [000067] #----O?-----                 +--*  IND       long   $291
N001 (  1,  1) [000061] ------?-----                 |  \--*  LCL_VAR   ref    V12 tmp6         u:1 $140
N007 (  9, 15) [000065] -A----?-----                 \--*  COMMA     long   $1c5
N005 (  6, 13) [000063] -A----?-R---                    +--*  ASG       long   $1c5
N004 (  3,  2) [000062] D-----?N----                    |  +--*  LCL_VAR   long   V11 tmp5         d:1 $1c5
N003 (  2, 10) [000060] H-----?-----                    |  \--*  CNS_INT(h) long   0xd1ffab1e class $1c5
N006 (  3,  2) [000064] ------?-----                    \--*  LCL_VAR   long   V11 tmp5         u:1 $1c5

------------ BB03 [???..???), preds={BB02} succs={BB04}

***** BB03
STMT00018 (IL   ???...  ???)
N007 ( 20, 11) [000180] -ACXG---R---              *  ASG       ref    $296
N006 (  1,  1) [000179] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:3 $140
N005 ( 20, 11) [000074] --CXG-?-----              \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL $296
N003 (  3,  2) [000066] ------?----- arg0 in rcx     +--*  LCL_VAR   long   V11 tmp5         u:1 (last use) $1c5
N004 (  3,  2) [000073] ------?----- arg1 in rdx     \--*  LCL_VAR   ref    V04 arg4         u:1 (last use) $140

------------ BB04 [???..???) -> BB07 (cond), preds={BB01,BB02,BB03} succs={BB05,BB07}

***** BB04
STMT00024 (IL   ???...  ???)
N005 (  0,  0) [000192] -A------R---              *  ASG       ref   
N004 (  0,  0) [000190] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:2
N003 (  0,  0) [000191] ------------              \--*  PHI       ref   
N001 (  0,  0) [000196] ------------ pred BB03       +--*  PHI_ARG   ref    V12 tmp6         u:3 $140
N002 (  0,  0) [000193] ------------ pred BB01       \--*  PHI_ARG   ref    V12 tmp6         u:1 $140

***** BB04
STMT00011 (IL   ???...  ???)
N008 (  6,  6) [000084] -A--G-------              *  ASG       ref    $VN.Void
N006 (  4,  4) [000162] ----G--N----              +--*  COMMA     ref    $VN.Void
N001 (  0,  0) [000200] ------------              |  +--*  NOP       void   $3c3
N005 (  4,  4) [000083] a---G--N----              |  \--*  IND       ref    $140
N004 (  2,  2) [000161] -------N----              |     \--*  ADD       byref  $403
N002 (  1,  1) [000153] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000160] ------------              |        \--*  CNS_INT   long   40 Fseq[#ConstantIndex, #FirstElem] $208
N007 (  1,  1) [000082] ------------              \--*  LCL_VAR   ref    V12 tmp6         u:2 (last use) $140

***** BB04
STMT00021 (IL   ???...  ???)
N003 (  3,  3) [000184] -A------R---              *  ASG       ref    $141
N002 (  1,  1) [000183] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:1 $141
N001 (  3,  2) [000105] ------?-----              \--*  LCL_VAR   ref    V05 arg5         u:1 $141

***** BB04
STMT00019 (IL   ???...  ???)
N004 (  7,  6) [000181] ------------              *  JTRUE     void  
N003 (  5,  4) [000099] J------N----              \--*  EQ        int    $446
N001 (  3,  2) [000098] ------------                 +--*  LCL_VAR   ref    V14 tmp8         u:1 $141
N002 (  1,  1) [000097] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB05 [???..???) -> BB07 (cond), preds={BB04} succs={BB06,BB07}

***** BB05
STMT00020 (IL   ???...  ???)
N009 ( 15, 20) [000182] -A---O------              *  JTRUE     void  
N008 ( 13, 18) [000096] JA---O?N----              \--*  EQ        int    $448
N002 (  3,  2) [000095] #----O?-----                 +--*  IND       long   $29b
N001 (  1,  1) [000089] ------?-----                 |  \--*  LCL_VAR   ref    V14 tmp8         u:1 $141
N007 (  9, 15) [000093] -A----?-----                 \--*  COMMA     long   $1c6
N005 (  6, 13) [000091] -A----?-R---                    +--*  ASG       long   $1c6
N004 (  3,  2) [000090] D-----?N----                    |  +--*  LCL_VAR   long   V13 tmp7         d:1 $1c6
N003 (  2, 10) [000088] H-----?-----                    |  \--*  CNS_INT(h) long   0xd1ffab1e class $1c6
N006 (  3,  2) [000092] ------?-----                    \--*  LCL_VAR   long   V13 tmp7         u:1 $1c6

------------ BB06 [???..???), preds={BB05} succs={BB07}

***** BB06
STMT00022 (IL   ???...  ???)
N007 ( 20, 11) [000186] -ACXG---R---              *  ASG       ref    $2a0
N006 (  1,  1) [000185] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:3 $141
N005 ( 20, 11) [000102] --CXG-?-----              \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL $2a0
N003 (  3,  2) [000094] ------?----- arg0 in rcx     +--*  LCL_VAR   long   V13 tmp7         u:1 (last use) $1c6
N004 (  3,  2) [000101] ------?----- arg1 in rdx     \--*  LCL_VAR   ref    V05 arg5         u:1 (last use) $141

------------ BB07 [???..037) (return), preds={BB04,BB05,BB06} succs={}

***** BB07
STMT00023 (IL   ???...  ???)
N005 (  0,  0) [000189] -A------R---              *  ASG       ref   
N004 (  0,  0) [000187] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:2
N003 (  0,  0) [000188] ------------              \--*  PHI       ref   
N001 (  0,  0) [000195] ------------ pred BB06       +--*  PHI_ARG   ref    V14 tmp8         u:3 $141
N002 (  0,  0) [000194] ------------ pred BB04       \--*  PHI_ARG   ref    V14 tmp8         u:1 $141

***** BB07
STMT00013 (IL   ???...  ???)
N008 (  6,  6) [000112] -A--G-------              *  ASG       ref    $VN.Void
N006 (  4,  4) [000174] ----G--N----              +--*  COMMA     ref    $VN.Void
N001 (  0,  0) [000201] ------------              |  +--*  NOP       void   $3c4
N005 (  4,  4) [000111] a---G--N----              |  \--*  IND       ref    $141
N004 (  2,  2) [000173] -------N----              |     \--*  ADD       byref  $404
N002 (  1,  1) [000165] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000172] ------------              |        \--*  CNS_INT   long   48 Fseq[#ConstantIndex, #FirstElem] $20a
N007 (  1,  1) [000110] ------------              \--*  LCL_VAR   ref    V14 tmp8         u:2 (last use) $141

***** BB07
STMT00014 (IL   ???...0x036)
N002 (  2,  2) [000113] ------------              *  RETURN    ref    $2d1
N001 (  1,  1) [000005] ------------              \--*  LCL_VAR   ref    V07 tmp1         u:1 (last use) $300

-------------------------------------------------------------------------------------------------------------------

*************** Finishing PHASE Optimize index checks

*************** Starting PHASE Insert GC Polls

*************** Finishing PHASE Insert GC Polls [no changes]

*************** Starting PHASE Determine first cold block

*************** In fgDetermineFirstColdBlock()
No procedure splitting will be done for this method

*************** Finishing PHASE Determine first cold block
Trees before Rationalize IR

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..???)-> BB04 ( cond )                     i label target hascall idxlen new[] newobj 
BB02 [0003]  1       BB01                  0.25    [???..???)-> BB04 ( cond )                     i 
BB03 [0002]  1       BB02                  0.12    [???..???)                                     i 
BB04 [0001]  3       BB01,BB02,BB03        1       [???..???)-> BB07 ( cond )                     i label target hascall idxlen new[] newobj 
BB05 [0008]  1       BB04                  0.25    [???..???)-> BB07 ( cond )                     i 
BB06 [0007]  1       BB05                  0.12    [???..???)                                     i 
BB07 [0006]  3       BB04,BB05,BB06        1       [???..037)        (return)                     i label target hascall idxlen new[] newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..???) -> BB04 (cond), preds={} succs={BB02,BB04}

***** BB01
STMT00000 (IL 0x000...0x00F)
N007 ( 17, 18) [000004] -ACXG---R---              *  ASG       ref    $282
N006 (  1,  1) [000003] D------N----              +--*  LCL_VAR   ref    V07 tmp1         d:1 $300
N005 ( 17, 18) [000002] --CXG-------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWARR_1_OBJ $282
N003 (  2, 10) [000001] H----------- arg0 in rcx     +--*  CNS_INT(h) long   0xd1ffab1e class $1c0
N004 (  1,  1) [000000] ------------ arg1 in rdx     \--*  CNS_INT   long   5 $200

***** BB01
STMT00001 (IL   ???...  ???)
N005 ( 16, 16) [000013] -AC-----R---              *  ASG       ref    $283
N004 (  1,  1) [000012] D------N----              +--*  LCL_VAR   ref    V08 tmp2         d:1 $283
N003 ( 16, 16) [000011] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $283
N002 (  2, 10) [000010] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class $1c1

***** BB01
STMT00002 (IL   ???...  ???)
N007 (  7,  8) [000018] -A---O--R---              *  ASG       long   $VN.Void
N006 (  4,  4) [000017] n----O-N----              +--*  IND       long   $340
N005 (  2,  2) [000016] -------N----              |  \--*  ADD       byref  $380
N003 (  1,  1) [000014] ------------              |     +--*  LCL_VAR   ref    V08 tmp2         u:1 $283
N004 (  1,  1) [000015] ------------              |     \--*  CNS_INT   long   8 $201
N002 (  2,  3) [000009] ------------              \--*  CAST      long <- int $340
N001 (  1,  1) [000008] ------------                 \--*  LCL_VAR   int    V01 arg1         u:1 (last use) $80

***** BB01
STMT00003 (IL   ???...  ???)
N009 ( 12, 10) [000022] -A--G-------              *  ASG       ref    $VN.Void
N006 (  4,  4) [000126] ----G--N----              +--*  COMMA     ref    $VN.Void
N001 (  0,  0) [000197] ------------              |  +--*  NOP       void   $3c0
N005 (  4,  4) [000021] a---G--N----              |  \--*  IND       ref    $283
N004 (  2,  2) [000125] -------N----              |     \--*  ADD       byref  $400
N002 (  1,  1) [000117] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000124] ------------              |        \--*  CNS_INT   long   16 Fseq[#FirstElem] $202
N008 (  7,  5) [000020] ------------              \--*  BOX       ref    $283
N007 (  1,  1) [000019] ------------                 \--*  LCL_VAR   ref    V08 tmp2         u:1 (last use) $283

***** BB01
STMT00004 (IL   ???...0x018)
N005 ( 16, 16) [000029] -AC-----R---              *  ASG       ref    $287
N004 (  1,  1) [000028] D------N----              +--*  LCL_VAR   ref    V09 tmp3         d:1 $287
N003 ( 16, 16) [000027] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $287
N002 (  2, 10) [000026] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class $1c3

***** BB01
STMT00005 (IL   ???...  ???)
N007 (  8,  9) [000035] -A---O--R---              *  ASG       int    $VN.Void
N006 (  4,  4) [000034] n----O-N----              +--*  IND       int    $440
N005 (  2,  2) [000032] -------N----              |  \--*  ADD       byref  $382
N003 (  1,  1) [000030] ------------              |     +--*  LCL_VAR   ref    V09 tmp3         u:1 $287
N004 (  1,  1) [000031] ------------              |     \--*  CNS_INT   long   8 $201
N002 (  3,  4) [000128] ------------              \--*  CAST      int <- short <- int $440
N001 (  2,  2) [000025] ------------                 \--*  LCL_VAR   int    V02 arg2         u:1 (last use) $c0

***** BB01
STMT00006 (IL   ???...  ???)
N009 ( 12, 10) [000039] -A--G-------              *  ASG       ref    $VN.Void
N006 (  4,  4) [000138] ----G--N----              +--*  COMMA     ref    $VN.Void
N001 (  0,  0) [000198] ------------              |  +--*  NOP       void   $3c1
N005 (  4,  4) [000038] a---G--N----              |  \--*  IND       ref    $287
N004 (  2,  2) [000137] -------N----              |     \--*  ADD       byref  $401
N002 (  1,  1) [000129] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000136] ------------              |        \--*  CNS_INT   long   24 Fseq[#ConstantIndex, #FirstElem] $204
N008 (  7,  5) [000037] ------------              \--*  BOX       ref    $287
N007 (  1,  1) [000036] ------------                 \--*  LCL_VAR   ref    V09 tmp3         u:1 (last use) $287

***** BB01
STMT00007 (IL   ???...0x021)
N005 ( 16, 16) [000046] -AC-----R---              *  ASG       ref    $28b
N004 (  1,  1) [000045] D------N----              +--*  LCL_VAR   ref    V10 tmp4         d:1 $28b
N003 ( 16, 16) [000044] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $28b
N002 (  2, 10) [000043] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e class $1c4

***** BB01
STMT00008 (IL   ???...  ???)
N007 (  9, 10) [000052] -A---O--R---              *  ASG       short  $VN.Void
N006 (  5,  5) [000051] n----O-N----              +--*  IND       short  $442
N005 (  2,  2) [000049] -------N----              |  \--*  ADD       byref  $384
N003 (  1,  1) [000047] ------------              |     +--*  LCL_VAR   ref    V10 tmp4         u:1 $28b
N004 (  1,  1) [000048] ------------              |     \--*  CNS_INT   long   8 $201
N002 (  3,  4) [000140] ------------              \--*  CAST      int <- ubyte <- int $441
N001 (  2,  2) [000042] ------------                 \--*  LCL_VAR   int    V03 arg3         u:1 (last use) $100

***** BB01
STMT00009 (IL   ???...  ???)
N009 ( 12, 10) [000056] -A--G-------              *  ASG       ref    $VN.Void
N006 (  4,  4) [000150] ----G--N----              +--*  COMMA     ref    $VN.Void
N001 (  0,  0) [000199] ------------              |  +--*  NOP       void   $3c2
N005 (  4,  4) [000055] a---G--N----              |  \--*  IND       ref    $28b
N004 (  2,  2) [000149] -------N----              |     \--*  ADD       byref  $402
N002 (  1,  1) [000141] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000148] ------------              |        \--*  CNS_INT   long   32 Fseq[#ConstantIndex, #FirstElem] $206
N008 (  7,  5) [000054] ------------              \--*  BOX       ref    $28b
N007 (  1,  1) [000053] ------------                 \--*  LCL_VAR   ref    V10 tmp4         u:1 (last use) $28b

***** BB01
STMT00017 (IL   ???...  ???)
N003 (  3,  3) [000178] -A------R---              *  ASG       ref    $140
N002 (  1,  1) [000177] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:1 $140
N001 (  3,  2) [000077] ------?-----              \--*  LCL_VAR   ref    V04 arg4         u:1 $140

***** BB01
STMT00015 (IL   ???...  ???)
N004 (  7,  6) [000175] ------------              *  JTRUE     void  
N003 (  5,  4) [000071] J------N----              \--*  EQ        int    $443
N001 (  3,  2) [000070] ------------                 +--*  LCL_VAR   ref    V12 tmp6         u:1 $140
N002 (  1,  1) [000069] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB02 [???..???) -> BB04 (cond), preds={BB01} succs={BB03,BB04}

***** BB02
STMT00016 (IL   ???...  ???)
N009 ( 15, 20) [000176] -A---O------              *  JTRUE     void  
N008 ( 13, 18) [000068] JA---O?N----              \--*  EQ        int    $445
N002 (  3,  2) [000067] #----O?-----                 +--*  IND       long   $291
N001 (  1,  1) [000061] ------?-----                 |  \--*  LCL_VAR   ref    V12 tmp6         u:1 $140
N007 (  9, 15) [000065] -A----?-----                 \--*  COMMA     long   $1c5
N005 (  6, 13) [000063] -A----?-R---                    +--*  ASG       long   $1c5
N004 (  3,  2) [000062] D-----?N----                    |  +--*  LCL_VAR   long   V11 tmp5         d:1 $1c5
N003 (  2, 10) [000060] H-----?-----                    |  \--*  CNS_INT(h) long   0xd1ffab1e class $1c5
N006 (  3,  2) [000064] ------?-----                    \--*  LCL_VAR   long   V11 tmp5         u:1 $1c5

------------ BB03 [???..???), preds={BB02} succs={BB04}

***** BB03
STMT00018 (IL   ???...  ???)
N007 ( 20, 11) [000180] -ACXG---R---              *  ASG       ref    $296
N006 (  1,  1) [000179] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:3 $140
N005 ( 20, 11) [000074] --CXG-?-----              \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL $296
N003 (  3,  2) [000066] ------?----- arg0 in rcx     +--*  LCL_VAR   long   V11 tmp5         u:1 (last use) $1c5
N004 (  3,  2) [000073] ------?----- arg1 in rdx     \--*  LCL_VAR   ref    V04 arg4         u:1 (last use) $140

------------ BB04 [???..???) -> BB07 (cond), preds={BB01,BB02,BB03} succs={BB05,BB07}

***** BB04
STMT00024 (IL   ???...  ???)
N005 (  0,  0) [000192] -A------R---              *  ASG       ref   
N004 (  0,  0) [000190] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:2
N003 (  0,  0) [000191] ------------              \--*  PHI       ref   
N001 (  0,  0) [000196] ------------ pred BB03       +--*  PHI_ARG   ref    V12 tmp6         u:3 $140
N002 (  0,  0) [000193] ------------ pred BB01       \--*  PHI_ARG   ref    V12 tmp6         u:1 $140

***** BB04
STMT00011 (IL   ???...  ???)
N008 (  6,  6) [000084] -A--G-------              *  ASG       ref    $VN.Void
N006 (  4,  4) [000162] ----G--N----              +--*  COMMA     ref    $VN.Void
N001 (  0,  0) [000200] ------------              |  +--*  NOP       void   $3c3
N005 (  4,  4) [000083] a---G--N----              |  \--*  IND       ref    $140
N004 (  2,  2) [000161] -------N----              |     \--*  ADD       byref  $403
N002 (  1,  1) [000153] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000160] ------------              |        \--*  CNS_INT   long   40 Fseq[#ConstantIndex, #FirstElem] $208
N007 (  1,  1) [000082] ------------              \--*  LCL_VAR   ref    V12 tmp6         u:2 (last use) $140

***** BB04
STMT00021 (IL   ???...  ???)
N003 (  3,  3) [000184] -A------R---              *  ASG       ref    $141
N002 (  1,  1) [000183] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:1 $141
N001 (  3,  2) [000105] ------?-----              \--*  LCL_VAR   ref    V05 arg5         u:1 $141

***** BB04
STMT00019 (IL   ???...  ???)
N004 (  7,  6) [000181] ------------              *  JTRUE     void  
N003 (  5,  4) [000099] J------N----              \--*  EQ        int    $446
N001 (  3,  2) [000098] ------------                 +--*  LCL_VAR   ref    V14 tmp8         u:1 $141
N002 (  1,  1) [000097] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB05 [???..???) -> BB07 (cond), preds={BB04} succs={BB06,BB07}

***** BB05
STMT00020 (IL   ???...  ???)
N009 ( 15, 20) [000182] -A---O------              *  JTRUE     void  
N008 ( 13, 18) [000096] JA---O?N----              \--*  EQ        int    $448
N002 (  3,  2) [000095] #----O?-----                 +--*  IND       long   $29b
N001 (  1,  1) [000089] ------?-----                 |  \--*  LCL_VAR   ref    V14 tmp8         u:1 $141
N007 (  9, 15) [000093] -A----?-----                 \--*  COMMA     long   $1c6
N005 (  6, 13) [000091] -A----?-R---                    +--*  ASG       long   $1c6
N004 (  3,  2) [000090] D-----?N----                    |  +--*  LCL_VAR   long   V13 tmp7         d:1 $1c6
N003 (  2, 10) [000088] H-----?-----                    |  \--*  CNS_INT(h) long   0xd1ffab1e class $1c6
N006 (  3,  2) [000092] ------?-----                    \--*  LCL_VAR   long   V13 tmp7         u:1 $1c6

------------ BB06 [???..???), preds={BB05} succs={BB07}

***** BB06
STMT00022 (IL   ???...  ???)
N007 ( 20, 11) [000186] -ACXG---R---              *  ASG       ref    $2a0
N006 (  1,  1) [000185] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:3 $141
N005 ( 20, 11) [000102] --CXG-?-----              \--*  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL $2a0
N003 (  3,  2) [000094] ------?----- arg0 in rcx     +--*  LCL_VAR   long   V13 tmp7         u:1 (last use) $1c6
N004 (  3,  2) [000101] ------?----- arg1 in rdx     \--*  LCL_VAR   ref    V05 arg5         u:1 (last use) $141

------------ BB07 [???..037) (return), preds={BB04,BB05,BB06} succs={}

***** BB07
STMT00023 (IL   ???...  ???)
N005 (  0,  0) [000189] -A------R---              *  ASG       ref   
N004 (  0,  0) [000187] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:2
N003 (  0,  0) [000188] ------------              \--*  PHI       ref   
N001 (  0,  0) [000195] ------------ pred BB06       +--*  PHI_ARG   ref    V14 tmp8         u:3 $141
N002 (  0,  0) [000194] ------------ pred BB04       \--*  PHI_ARG   ref    V14 tmp8         u:1 $141

***** BB07
STMT00013 (IL   ???...  ???)
N008 (  6,  6) [000112] -A--G-------              *  ASG       ref    $VN.Void
N006 (  4,  4) [000174] ----G--N----              +--*  COMMA     ref    $VN.Void
N001 (  0,  0) [000201] ------------              |  +--*  NOP       void   $3c4
N005 (  4,  4) [000111] a---G--N----              |  \--*  IND       ref    $141
N004 (  2,  2) [000173] -------N----              |     \--*  ADD       byref  $404
N002 (  1,  1) [000165] ------------              |        +--*  LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000172] ------------              |        \--*  CNS_INT   long   48 Fseq[#ConstantIndex, #FirstElem] $20a
N007 (  1,  1) [000110] ------------              \--*  LCL_VAR   ref    V14 tmp8         u:2 (last use) $141

***** BB07
STMT00014 (IL   ???...0x036)
N002 (  2,  2) [000113] ------------              *  RETURN    ref    $2d1
N001 (  1,  1) [000005] ------------              \--*  LCL_VAR   ref    V07 tmp1         u:1 (last use) $300

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Rationalize IR
rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N007 ( 17, 18) [000004] DACXG-------              *  STORE_LCL_VAR ref    V07 tmp1         d:1

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 ( 16, 16) [000013] DAC---------              *  STORE_LCL_VAR ref    V08 tmp2         d:1

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 ( 16, 16) [000029] DAC---------              *  STORE_LCL_VAR ref    V09 tmp3         d:1

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 ( 16, 16) [000046] DAC---------              *  STORE_LCL_VAR ref    V10 tmp4         d:1

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  3,  3) [000178] DA----------              *  STORE_LCL_VAR ref    V12 tmp6         d:1

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 (  6, 13) [000063] DA----?-----              *  STORE_LCL_VAR long   V11 tmp5         d:1

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N007 ( 20, 11) [000180] DACXG-------              *  STORE_LCL_VAR ref    V12 tmp6         d:3

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 (  0,  0) [000192] DA----------              *  STORE_LCL_VAR ref    V12 tmp6         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  3,  3) [000184] DA----------              *  STORE_LCL_VAR ref    V14 tmp8         d:1

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 (  6, 13) [000091] DA----?-----              *  STORE_LCL_VAR long   V13 tmp7         d:1

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N007 ( 20, 11) [000186] DACXG-------              *  STORE_LCL_VAR ref    V14 tmp8         d:3

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 (  0,  0) [000189] DA----------              *  STORE_LCL_VAR ref    V14 tmp8         d:2


*************** Finishing PHASE Rationalize IR
Trees after Rationalize IR

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..???)-> BB04 ( cond )                     i label target hascall idxlen new[] newobj LIR 
BB02 [0003]  1       BB01                  0.25    [???..???)-> BB04 ( cond )                     i LIR 
BB03 [0002]  1       BB02                  0.12    [???..???)                                     i LIR 
BB04 [0001]  3       BB01,BB02,BB03        1       [???..???)-> BB07 ( cond )                     i label target hascall idxlen new[] newobj LIR 
BB05 [0008]  1       BB04                  0.25    [???..???)-> BB07 ( cond )                     i LIR 
BB06 [0007]  1       BB05                  0.12    [???..???)                                     i LIR 
BB07 [0006]  3       BB04,BB05,BB06        1       [???..037)        (return)                     i label target hascall idxlen new[] newobj LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..???) -> BB04 (cond), preds={} succs={BB02,BB04}
               [000202] ------------                 IL_OFFSET void   IL offset: 0x0
N003 (  2, 10) [000001] H-----------         t1 =    CNS_INT(h) long   0xd1ffab1e class $1c0
N004 (  1,  1) [000000] ------------         t0 =    CNS_INT   long   5 $200
                                                  /--*  t1     long   arg0 in rcx
                                                  +--*  t0     long   arg1 in rdx
N005 ( 17, 18) [000002] --CXG-------         t2 = *  CALL help ref    HELPER.CORINFO_HELP_NEWARR_1_OBJ $282
                                                  /--*  t2     ref    
N007 ( 17, 18) [000004] DA-XG-------              *  STORE_LCL_VAR ref    V07 tmp1         d:1
N002 (  2, 10) [000010] H-----------        t10 =    CNS_INT(h) long   0xd1ffab1e class $1c1
                                                  /--*  t10    long   arg0 in rcx
N003 ( 16, 16) [000011] --C---------        t11 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $283
                                                  /--*  t11    ref    
N005 ( 16, 16) [000013] DA----------              *  STORE_LCL_VAR ref    V08 tmp2         d:1
N001 (  1,  1) [000008] ------------         t8 =    LCL_VAR   int    V01 arg1         u:1 (last use) $80
                                                  /--*  t8     int    
N002 (  2,  3) [000009] ------------         t9 = *  CAST      long <- int $340
N003 (  1,  1) [000014] ------------        t14 =    LCL_VAR   ref    V08 tmp2         u:1 $283
N004 (  1,  1) [000015] ------------        t15 =    CNS_INT   long   8 $201
                                                  /--*  t14    ref    
                                                  +--*  t15    long   
N005 (  2,  2) [000016] -------N----        t16 = *  ADD       byref  $380
                                                  /--*  t16    byref  
                                                  +--*  t9     long   
               [000203] -A---O------              *  STOREIND  long  
N002 (  1,  1) [000117] ------------       t117 =    LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000124] ------------       t124 =    CNS_INT   long   16 Fseq[#FirstElem] $202
                                                  /--*  t117   ref    
                                                  +--*  t124   long   
N004 (  2,  2) [000125] -------N----       t125 = *  ADD       byref  $400
N007 (  1,  1) [000019] ------------        t19 =    LCL_VAR   ref    V08 tmp2         u:1 (last use) $283
                                                  /--*  t125   byref  
                                                  +--*  t19    ref    
               [000204] -A--G-------              *  STOREIND  ref   
N002 (  2, 10) [000026] H-----------        t26 =    CNS_INT(h) long   0xd1ffab1e class $1c3
                                                  /--*  t26    long   arg0 in rcx
N003 ( 16, 16) [000027] --C---------        t27 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $287
                                                  /--*  t27    ref    
N005 ( 16, 16) [000029] DA----------              *  STORE_LCL_VAR ref    V09 tmp3         d:1
N001 (  2,  2) [000025] ------------        t25 =    LCL_VAR   int    V02 arg2         u:1 (last use) $c0
                                                  /--*  t25    int    
N002 (  3,  4) [000128] ------------       t128 = *  CAST      int <- short <- int $440
N003 (  1,  1) [000030] ------------        t30 =    LCL_VAR   ref    V09 tmp3         u:1 $287
N004 (  1,  1) [000031] ------------        t31 =    CNS_INT   long   8 $201
                                                  /--*  t30    ref    
                                                  +--*  t31    long   
N005 (  2,  2) [000032] -------N----        t32 = *  ADD       byref  $382
                                                  /--*  t32    byref  
                                                  +--*  t128   int    
               [000205] -A---O------              *  STOREIND  int   
N002 (  1,  1) [000129] ------------       t129 =    LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000136] ------------       t136 =    CNS_INT   long   24 Fseq[#ConstantIndex, #FirstElem] $204
                                                  /--*  t129   ref    
                                                  +--*  t136   long   
N004 (  2,  2) [000137] -------N----       t137 = *  ADD       byref  $401
N007 (  1,  1) [000036] ------------        t36 =    LCL_VAR   ref    V09 tmp3         u:1 (last use) $287
                                                  /--*  t137   byref  
                                                  +--*  t36    ref    
               [000206] -A--G-------              *  STOREIND  ref   
N002 (  2, 10) [000043] H-----------        t43 =    CNS_INT(h) long   0xd1ffab1e class $1c4
                                                  /--*  t43    long   arg0 in rcx
N003 ( 16, 16) [000044] --C---------        t44 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $28b
                                                  /--*  t44    ref    
N005 ( 16, 16) [000046] DA----------              *  STORE_LCL_VAR ref    V10 tmp4         d:1
N001 (  2,  2) [000042] ------------        t42 =    LCL_VAR   int    V03 arg3         u:1 (last use) $100
                                                  /--*  t42    int    
N002 (  3,  4) [000140] ------------       t140 = *  CAST      int <- ubyte <- int $441
N003 (  1,  1) [000047] ------------        t47 =    LCL_VAR   ref    V10 tmp4         u:1 $28b
N004 (  1,  1) [000048] ------------        t48 =    CNS_INT   long   8 $201
                                                  /--*  t47    ref    
                                                  +--*  t48    long   
N005 (  2,  2) [000049] -------N----        t49 = *  ADD       byref  $384
                                                  /--*  t49    byref  
                                                  +--*  t140   int    
               [000207] -A---O------              *  STOREIND  short 
N002 (  1,  1) [000141] ------------       t141 =    LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000148] ------------       t148 =    CNS_INT   long   32 Fseq[#ConstantIndex, #FirstElem] $206
                                                  /--*  t141   ref    
                                                  +--*  t148   long   
N004 (  2,  2) [000149] -------N----       t149 = *  ADD       byref  $402
N007 (  1,  1) [000053] ------------        t53 =    LCL_VAR   ref    V10 tmp4         u:1 (last use) $28b
                                                  /--*  t149   byref  
                                                  +--*  t53    ref    
               [000208] -A--G-------              *  STOREIND  ref   
N001 (  3,  2) [000077] ------?-----        t77 =    LCL_VAR   ref    V04 arg4         u:1 $140
                                                  /--*  t77    ref    
N003 (  3,  3) [000178] DA----------              *  STORE_LCL_VAR ref    V12 tmp6         d:1
N001 (  3,  2) [000070] ------------        t70 =    LCL_VAR   ref    V12 tmp6         u:1 $140
N002 (  1,  1) [000069] ------------        t69 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t70    ref    
                                                  +--*  t69    ref    
N003 (  5,  4) [000071] J------N----        t71 = *  EQ        int    $443
                                                  /--*  t71    int    
N004 (  7,  6) [000175] ------------              *  JTRUE     void  

------------ BB02 [???..???) -> BB04 (cond), preds={BB01} succs={BB03,BB04}
N001 (  1,  1) [000061] ------?-----        t61 =    LCL_VAR   ref    V12 tmp6         u:1 $140
                                                  /--*  t61    ref    
N002 (  3,  2) [000067] #----O?-----        t67 = *  IND       long   $291
N003 (  2, 10) [000060] H-----?-----        t60 =    CNS_INT(h) long   0xd1ffab1e class $1c5
                                                  /--*  t60    long   
N005 (  6, 13) [000063] DA----?-----              *  STORE_LCL_VAR long   V11 tmp5         d:1
N006 (  3,  2) [000064] ------?-----        t64 =    LCL_VAR   long   V11 tmp5         u:1 $1c5
                                                  /--*  t67    long   
                                                  +--*  t64    long   
N008 ( 13, 18) [000068] J----O?N----        t68 = *  EQ        int    $445
                                                  /--*  t68    int    
N009 ( 15, 20) [000176] -----O------              *  JTRUE     void  

------------ BB03 [???..???), preds={BB02} succs={BB04}
N003 (  3,  2) [000066] ------?-----        t66 =    LCL_VAR   long   V11 tmp5         u:1 (last use) $1c5
N004 (  3,  2) [000073] ------?-----        t73 =    LCL_VAR   ref    V04 arg4         u:1 (last use) $140
                                                  /--*  t66    long   arg0 in rcx
                                                  +--*  t73    ref    arg1 in rdx
N005 ( 20, 11) [000074] --CXG-?-----        t74 = *  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL $296
                                                  /--*  t74    ref    
N007 ( 20, 11) [000180] DA-XG-------              *  STORE_LCL_VAR ref    V12 tmp6         d:3

------------ BB04 [???..???) -> BB07 (cond), preds={BB01,BB02,BB03} succs={BB05,BB07}
N001 (  0,  0) [000196] ------------       t196 =    PHI_ARG   ref    V12 tmp6         u:3 $140
N002 (  0,  0) [000193] ------------       t193 =    PHI_ARG   ref    V12 tmp6         u:1 $140
                                                  /--*  t196   ref    
                                                  +--*  t193   ref    
N003 (  0,  0) [000191] ------------       t191 = *  PHI       ref   
                                                  /--*  t191   ref    
N005 (  0,  0) [000192] DA----------              *  STORE_LCL_VAR ref    V12 tmp6         d:2
N002 (  1,  1) [000153] ------------       t153 =    LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000160] ------------       t160 =    CNS_INT   long   40 Fseq[#ConstantIndex, #FirstElem] $208
                                                  /--*  t153   ref    
                                                  +--*  t160   long   
N004 (  2,  2) [000161] -------N----       t161 = *  ADD       byref  $403
N007 (  1,  1) [000082] ------------        t82 =    LCL_VAR   ref    V12 tmp6         u:2 (last use) $140
                                                  /--*  t161   byref  
                                                  +--*  t82    ref    
               [000209] -A--G-------              *  STOREIND  ref   
N001 (  3,  2) [000105] ------?-----       t105 =    LCL_VAR   ref    V05 arg5         u:1 $141
                                                  /--*  t105   ref    
N003 (  3,  3) [000184] DA----------              *  STORE_LCL_VAR ref    V14 tmp8         d:1
N001 (  3,  2) [000098] ------------        t98 =    LCL_VAR   ref    V14 tmp8         u:1 $141
N002 (  1,  1) [000097] ------------        t97 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t98    ref    
                                                  +--*  t97    ref    
N003 (  5,  4) [000099] J------N----        t99 = *  EQ        int    $446
                                                  /--*  t99    int    
N004 (  7,  6) [000181] ------------              *  JTRUE     void  

------------ BB05 [???..???) -> BB07 (cond), preds={BB04} succs={BB06,BB07}
N001 (  1,  1) [000089] ------?-----        t89 =    LCL_VAR   ref    V14 tmp8         u:1 $141
                                                  /--*  t89    ref    
N002 (  3,  2) [000095] #----O?-----        t95 = *  IND       long   $29b
N003 (  2, 10) [000088] H-----?-----        t88 =    CNS_INT(h) long   0xd1ffab1e class $1c6
                                                  /--*  t88    long   
N005 (  6, 13) [000091] DA----?-----              *  STORE_LCL_VAR long   V13 tmp7         d:1
N006 (  3,  2) [000092] ------?-----        t92 =    LCL_VAR   long   V13 tmp7         u:1 $1c6
                                                  /--*  t95    long   
                                                  +--*  t92    long   
N008 ( 13, 18) [000096] J----O?N----        t96 = *  EQ        int    $448
                                                  /--*  t96    int    
N009 ( 15, 20) [000182] -----O------              *  JTRUE     void  

------------ BB06 [???..???), preds={BB05} succs={BB07}
N003 (  3,  2) [000094] ------?-----        t94 =    LCL_VAR   long   V13 tmp7         u:1 (last use) $1c6
N004 (  3,  2) [000101] ------?-----       t101 =    LCL_VAR   ref    V05 arg5         u:1 (last use) $141
                                                  /--*  t94    long   arg0 in rcx
                                                  +--*  t101   ref    arg1 in rdx
N005 ( 20, 11) [000102] --CXG-?-----       t102 = *  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL $2a0
                                                  /--*  t102   ref    
N007 ( 20, 11) [000186] DA-XG-------              *  STORE_LCL_VAR ref    V14 tmp8         d:3

------------ BB07 [???..037) (return), preds={BB04,BB05,BB06} succs={}
N001 (  0,  0) [000195] ------------       t195 =    PHI_ARG   ref    V14 tmp8         u:3 $141
N002 (  0,  0) [000194] ------------       t194 =    PHI_ARG   ref    V14 tmp8         u:1 $141
                                                  /--*  t195   ref    
                                                  +--*  t194   ref    
N003 (  0,  0) [000188] ------------       t188 = *  PHI       ref   
                                                  /--*  t188   ref    
N005 (  0,  0) [000189] DA----------              *  STORE_LCL_VAR ref    V14 tmp8         d:2
N002 (  1,  1) [000165] ------------       t165 =    LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000172] ------------       t172 =    CNS_INT   long   48 Fseq[#ConstantIndex, #FirstElem] $20a
                                                  /--*  t165   ref    
                                                  +--*  t172   long   
N004 (  2,  2) [000173] -------N----       t173 = *  ADD       byref  $404
N007 (  1,  1) [000110] ------------       t110 =    LCL_VAR   ref    V14 tmp8         u:2 (last use) $141
                                                  /--*  t173   byref  
                                                  +--*  t110   ref    
               [000210] -A--G-------              *  STOREIND  ref   
N001 (  1,  1) [000005] ------------         t5 =    LCL_VAR   ref    V07 tmp1         u:1 (last use) $300
                                                  /--*  t5     ref    
N002 (  2,  2) [000113] ------------              *  RETURN    ref    $2d1

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist

*************** Starting PHASE Do 'simple' lowering
Bumping outgoingArgSpaceSize to 32 for call [000002]
outgoingArgSpaceSize 32 sufficient for call [000011], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000027], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000044], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000074], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000102], which needs 32

*************** Finishing PHASE Do 'simple' lowering
*************** In fgDebugCheckBBlist
Trees before Lowering nodeinfo

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..???)-> BB04 ( cond )                     i label target hascall idxlen new[] newobj LIR 
BB02 [0003]  1       BB01                  0.25    [???..???)-> BB04 ( cond )                     i LIR 
BB03 [0002]  1       BB02                  0.12    [???..???)                                     i LIR 
BB04 [0001]  3       BB01,BB02,BB03        1       [???..???)-> BB07 ( cond )                     i label target hascall idxlen new[] newobj LIR 
BB05 [0008]  1       BB04                  0.25    [???..???)-> BB07 ( cond )                     i LIR 
BB06 [0007]  1       BB05                  0.12    [???..???)                                     i LIR 
BB07 [0006]  3       BB04,BB05,BB06        1       [???..037)        (return)                     i label target hascall idxlen new[] newobj LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..???) -> BB04 (cond), preds={} succs={BB02,BB04}
               [000202] ------------                 IL_OFFSET void   IL offset: 0x0
N003 (  2, 10) [000001] H-----------         t1 =    CNS_INT(h) long   0xd1ffab1e class $1c0
N004 (  1,  1) [000000] ------------         t0 =    CNS_INT   long   5 $200
                                                  /--*  t1     long   arg0 in rcx
                                                  +--*  t0     long   arg1 in rdx
N005 ( 17, 18) [000002] --CXG-------         t2 = *  CALL help ref    HELPER.CORINFO_HELP_NEWARR_1_OBJ $282
                                                  /--*  t2     ref    
N007 ( 17, 18) [000004] DA-XG-------              *  STORE_LCL_VAR ref    V07 tmp1         d:1
N002 (  2, 10) [000010] H-----------        t10 =    CNS_INT(h) long   0xd1ffab1e class $1c1
                                                  /--*  t10    long   arg0 in rcx
N003 ( 16, 16) [000011] --C---------        t11 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $283
                                                  /--*  t11    ref    
N005 ( 16, 16) [000013] DA----------              *  STORE_LCL_VAR ref    V08 tmp2         d:1
N001 (  1,  1) [000008] ------------         t8 =    LCL_VAR   int    V01 arg1         u:1 (last use) $80
                                                  /--*  t8     int    
N002 (  2,  3) [000009] ------------         t9 = *  CAST      long <- int $340
N003 (  1,  1) [000014] ------------        t14 =    LCL_VAR   ref    V08 tmp2         u:1 $283
N004 (  1,  1) [000015] ------------        t15 =    CNS_INT   long   8 $201
                                                  /--*  t14    ref    
                                                  +--*  t15    long   
N005 (  2,  2) [000016] -------N----        t16 = *  ADD       byref  $380
                                                  /--*  t16    byref  
                                                  +--*  t9     long   
               [000203] -A---O------              *  STOREIND  long  
N002 (  1,  1) [000117] ------------       t117 =    LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000124] ------------       t124 =    CNS_INT   long   16 Fseq[#FirstElem] $202
                                                  /--*  t117   ref    
                                                  +--*  t124   long   
N004 (  2,  2) [000125] -------N----       t125 = *  ADD       byref  $400
N007 (  1,  1) [000019] ------------        t19 =    LCL_VAR   ref    V08 tmp2         u:1 (last use) $283
                                                  /--*  t125   byref  
                                                  +--*  t19    ref    
               [000204] -A--G-------              *  STOREIND  ref   
N002 (  2, 10) [000026] H-----------        t26 =    CNS_INT(h) long   0xd1ffab1e class $1c3
                                                  /--*  t26    long   arg0 in rcx
N003 ( 16, 16) [000027] --C---------        t27 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $287
                                                  /--*  t27    ref    
N005 ( 16, 16) [000029] DA----------              *  STORE_LCL_VAR ref    V09 tmp3         d:1
N001 (  2,  2) [000025] ------------        t25 =    LCL_VAR   int    V02 arg2         u:1 (last use) $c0
                                                  /--*  t25    int    
N002 (  3,  4) [000128] ------------       t128 = *  CAST      int <- short <- int $440
N003 (  1,  1) [000030] ------------        t30 =    LCL_VAR   ref    V09 tmp3         u:1 $287
N004 (  1,  1) [000031] ------------        t31 =    CNS_INT   long   8 $201
                                                  /--*  t30    ref    
                                                  +--*  t31    long   
N005 (  2,  2) [000032] -------N----        t32 = *  ADD       byref  $382
                                                  /--*  t32    byref  
                                                  +--*  t128   int    
               [000205] -A---O------              *  STOREIND  int   
N002 (  1,  1) [000129] ------------       t129 =    LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000136] ------------       t136 =    CNS_INT   long   24 Fseq[#ConstantIndex, #FirstElem] $204
                                                  /--*  t129   ref    
                                                  +--*  t136   long   
N004 (  2,  2) [000137] -------N----       t137 = *  ADD       byref  $401
N007 (  1,  1) [000036] ------------        t36 =    LCL_VAR   ref    V09 tmp3         u:1 (last use) $287
                                                  /--*  t137   byref  
                                                  +--*  t36    ref    
               [000206] -A--G-------              *  STOREIND  ref   
N002 (  2, 10) [000043] H-----------        t43 =    CNS_INT(h) long   0xd1ffab1e class $1c4
                                                  /--*  t43    long   arg0 in rcx
N003 ( 16, 16) [000044] --C---------        t44 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $28b
                                                  /--*  t44    ref    
N005 ( 16, 16) [000046] DA----------              *  STORE_LCL_VAR ref    V10 tmp4         d:1
N001 (  2,  2) [000042] ------------        t42 =    LCL_VAR   int    V03 arg3         u:1 (last use) $100
                                                  /--*  t42    int    
N002 (  3,  4) [000140] ------------       t140 = *  CAST      int <- ubyte <- int $441
N003 (  1,  1) [000047] ------------        t47 =    LCL_VAR   ref    V10 tmp4         u:1 $28b
N004 (  1,  1) [000048] ------------        t48 =    CNS_INT   long   8 $201
                                                  /--*  t47    ref    
                                                  +--*  t48    long   
N005 (  2,  2) [000049] -------N----        t49 = *  ADD       byref  $384
                                                  /--*  t49    byref  
                                                  +--*  t140   int    
               [000207] -A---O------              *  STOREIND  short 
N002 (  1,  1) [000141] ------------       t141 =    LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000148] ------------       t148 =    CNS_INT   long   32 Fseq[#ConstantIndex, #FirstElem] $206
                                                  /--*  t141   ref    
                                                  +--*  t148   long   
N004 (  2,  2) [000149] -------N----       t149 = *  ADD       byref  $402
N007 (  1,  1) [000053] ------------        t53 =    LCL_VAR   ref    V10 tmp4         u:1 (last use) $28b
                                                  /--*  t149   byref  
                                                  +--*  t53    ref    
               [000208] -A--G-------              *  STOREIND  ref   
N001 (  3,  2) [000077] ------?-----        t77 =    LCL_VAR   ref    V04 arg4         u:1 $140
                                                  /--*  t77    ref    
N003 (  3,  3) [000178] DA----------              *  STORE_LCL_VAR ref    V12 tmp6         d:1
N001 (  3,  2) [000070] ------------        t70 =    LCL_VAR   ref    V12 tmp6         u:1 $140
N002 (  1,  1) [000069] ------------        t69 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t70    ref    
                                                  +--*  t69    ref    
N003 (  5,  4) [000071] J------N----        t71 = *  EQ        int    $443
                                                  /--*  t71    int    
N004 (  7,  6) [000175] ------------              *  JTRUE     void  

------------ BB02 [???..???) -> BB04 (cond), preds={BB01} succs={BB03,BB04}
N001 (  1,  1) [000061] ------?-----        t61 =    LCL_VAR   ref    V12 tmp6         u:1 $140
                                                  /--*  t61    ref    
N002 (  3,  2) [000067] #----O?-----        t67 = *  IND       long   $291
N003 (  2, 10) [000060] H-----?-----        t60 =    CNS_INT(h) long   0xd1ffab1e class $1c5
                                                  /--*  t60    long   
N005 (  6, 13) [000063] DA----?-----              *  STORE_LCL_VAR long   V11 tmp5         d:1
N006 (  3,  2) [000064] ------?-----        t64 =    LCL_VAR   long   V11 tmp5         u:1 $1c5
                                                  /--*  t67    long   
                                                  +--*  t64    long   
N008 ( 13, 18) [000068] J----O?N----        t68 = *  EQ        int    $445
                                                  /--*  t68    int    
N009 ( 15, 20) [000176] -----O------              *  JTRUE     void  

------------ BB03 [???..???), preds={BB02} succs={BB04}
N003 (  3,  2) [000066] ------?-----        t66 =    LCL_VAR   long   V11 tmp5         u:1 (last use) $1c5
N004 (  3,  2) [000073] ------?-----        t73 =    LCL_VAR   ref    V04 arg4         u:1 (last use) $140
                                                  /--*  t66    long   arg0 in rcx
                                                  +--*  t73    ref    arg1 in rdx
N005 ( 20, 11) [000074] --CXG-?-----        t74 = *  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL $296
                                                  /--*  t74    ref    
N007 ( 20, 11) [000180] DA-XG-------              *  STORE_LCL_VAR ref    V12 tmp6         d:3

------------ BB04 [???..???) -> BB07 (cond), preds={BB01,BB02,BB03} succs={BB05,BB07}
N001 (  0,  0) [000196] ------------       t196 =    PHI_ARG   ref    V12 tmp6         u:3 $140
N002 (  0,  0) [000193] ------------       t193 =    PHI_ARG   ref    V12 tmp6         u:1 $140
                                                  /--*  t196   ref    
                                                  +--*  t193   ref    
N003 (  0,  0) [000191] ------------       t191 = *  PHI       ref   
                                                  /--*  t191   ref    
N005 (  0,  0) [000192] DA----------              *  STORE_LCL_VAR ref    V12 tmp6         d:2
N002 (  1,  1) [000153] ------------       t153 =    LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000160] ------------       t160 =    CNS_INT   long   40 Fseq[#ConstantIndex, #FirstElem] $208
                                                  /--*  t153   ref    
                                                  +--*  t160   long   
N004 (  2,  2) [000161] -------N----       t161 = *  ADD       byref  $403
N007 (  1,  1) [000082] ------------        t82 =    LCL_VAR   ref    V12 tmp6         u:2 (last use) $140
                                                  /--*  t161   byref  
                                                  +--*  t82    ref    
               [000209] -A--G-------              *  STOREIND  ref   
N001 (  3,  2) [000105] ------?-----       t105 =    LCL_VAR   ref    V05 arg5         u:1 $141
                                                  /--*  t105   ref    
N003 (  3,  3) [000184] DA----------              *  STORE_LCL_VAR ref    V14 tmp8         d:1
N001 (  3,  2) [000098] ------------        t98 =    LCL_VAR   ref    V14 tmp8         u:1 $141
N002 (  1,  1) [000097] ------------        t97 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t98    ref    
                                                  +--*  t97    ref    
N003 (  5,  4) [000099] J------N----        t99 = *  EQ        int    $446
                                                  /--*  t99    int    
N004 (  7,  6) [000181] ------------              *  JTRUE     void  

------------ BB05 [???..???) -> BB07 (cond), preds={BB04} succs={BB06,BB07}
N001 (  1,  1) [000089] ------?-----        t89 =    LCL_VAR   ref    V14 tmp8         u:1 $141
                                                  /--*  t89    ref    
N002 (  3,  2) [000095] #----O?-----        t95 = *  IND       long   $29b
N003 (  2, 10) [000088] H-----?-----        t88 =    CNS_INT(h) long   0xd1ffab1e class $1c6
                                                  /--*  t88    long   
N005 (  6, 13) [000091] DA----?-----              *  STORE_LCL_VAR long   V13 tmp7         d:1
N006 (  3,  2) [000092] ------?-----        t92 =    LCL_VAR   long   V13 tmp7         u:1 $1c6
                                                  /--*  t95    long   
                                                  +--*  t92    long   
N008 ( 13, 18) [000096] J----O?N----        t96 = *  EQ        int    $448
                                                  /--*  t96    int    
N009 ( 15, 20) [000182] -----O------              *  JTRUE     void  

------------ BB06 [???..???), preds={BB05} succs={BB07}
N003 (  3,  2) [000094] ------?-----        t94 =    LCL_VAR   long   V13 tmp7         u:1 (last use) $1c6
N004 (  3,  2) [000101] ------?-----       t101 =    LCL_VAR   ref    V05 arg5         u:1 (last use) $141
                                                  /--*  t94    long   arg0 in rcx
                                                  +--*  t101   ref    arg1 in rdx
N005 ( 20, 11) [000102] --CXG-?-----       t102 = *  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL $2a0
                                                  /--*  t102   ref    
N007 ( 20, 11) [000186] DA-XG-------              *  STORE_LCL_VAR ref    V14 tmp8         d:3

------------ BB07 [???..037) (return), preds={BB04,BB05,BB06} succs={}
N001 (  0,  0) [000195] ------------       t195 =    PHI_ARG   ref    V14 tmp8         u:3 $141
N002 (  0,  0) [000194] ------------       t194 =    PHI_ARG   ref    V14 tmp8         u:1 $141
                                                  /--*  t195   ref    
                                                  +--*  t194   ref    
N003 (  0,  0) [000188] ------------       t188 = *  PHI       ref   
                                                  /--*  t188   ref    
N005 (  0,  0) [000189] DA----------              *  STORE_LCL_VAR ref    V14 tmp8         d:2
N002 (  1,  1) [000165] ------------       t165 =    LCL_VAR   ref    V07 tmp1         u:1 $300
N003 (  1,  1) [000172] ------------       t172 =    CNS_INT   long   48 Fseq[#ConstantIndex, #FirstElem] $20a
                                                  /--*  t165   ref    
                                                  +--*  t172   long   
N004 (  2,  2) [000173] -------N----       t173 = *  ADD       byref  $404
N007 (  1,  1) [000110] ------------       t110 =    LCL_VAR   ref    V14 tmp8         u:2 (last use) $141
                                                  /--*  t173   byref  
                                                  +--*  t110   ref    
               [000210] -A--G-------              *  STOREIND  ref   
N001 (  1,  1) [000005] ------------         t5 =    LCL_VAR   ref    V07 tmp1         u:1 (last use) $300
                                                  /--*  t5     ref    
N002 (  2,  2) [000113] ------------              *  RETURN    ref    $2d1

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Lowering nodeinfo
lowering call (before):
N003 (  2, 10) [000001] H-----------         t1 =    CNS_INT(h) long   0xd1ffab1e class $1c0
N004 (  1,  1) [000000] ------------         t0 =    CNS_INT   long   5 $200
                                                  /--*  t1     long   arg0 in rcx
                                                  +--*  t0     long   arg1 in rdx
N005 ( 17, 18) [000002] --CXG-------         t2 = *  CALL help ref    HELPER.CORINFO_HELP_NEWARR_1_OBJ $282

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000114] ----------L-              *  ARGPLACE  long   $1c0
lowering arg : N002 (  0,  0) [000115] ----------L-              *  ARGPLACE  long   $200

late:
======
lowering arg : N003 (  2, 10) [000001] H-----------              *  CNS_INT(h) long   0xd1ffab1e class $1c0
new node is :                [000211] ------------              *  PUTARG_REG long   REG rcx

lowering arg : N004 (  1,  1) [000000] ------------              *  CNS_INT   long   5 $200
new node is :                [000212] ------------              *  PUTARG_REG long   REG rdx

lowering call (after):
N003 (  2, 10) [000001] H-----------         t1 =    CNS_INT(h) long   0xd1ffab1e class $1c0
                                                  /--*  t1     long   
               [000211] ------------       t211 = *  PUTARG_REG long   REG rcx
N004 (  1,  1) [000000] ------------         t0 =    CNS_INT   long   5 $200
                                                  /--*  t0     long   
               [000212] ------------       t212 = *  PUTARG_REG long   REG rdx
                                                  /--*  t211   long   arg0 in rcx
                                                  +--*  t212   long   arg1 in rdx
N005 ( 17, 18) [000002] --CXG-------         t2 = *  CALL help ref    HELPER.CORINFO_HELP_NEWARR_1_OBJ $282

lowering store lcl var/field (before):
N003 (  2, 10) [000001] H-----------         t1 =    CNS_INT(h) long   0xd1ffab1e class $1c0
                                                  /--*  t1     long   
               [000211] ------------       t211 = *  PUTARG_REG long   REG rcx
N004 (  1,  1) [000000] ------------         t0 =    CNS_INT   long   5 $200
                                                  /--*  t0     long   
               [000212] ------------       t212 = *  PUTARG_REG long   REG rdx
                                                  /--*  t211   long   arg0 in rcx
                                                  +--*  t212   long   arg1 in rdx
N005 ( 17, 18) [000002] --CXG-------         t2 = *  CALL help ref    HELPER.CORINFO_HELP_NEWARR_1_OBJ $282
                                                  /--*  t2     ref    
N007 ( 17, 18) [000004] DA-XG-------              *  STORE_LCL_VAR ref    V07 tmp1         d:1

lowering store lcl var/field (after):
N003 (  2, 10) [000001] H-----------         t1 =    CNS_INT(h) long   0xd1ffab1e class $1c0
                                                  /--*  t1     long   
               [000211] ------------       t211 = *  PUTARG_REG long   REG rcx
N004 (  1,  1) [000000] ------------         t0 =    CNS_INT   long   5 $200
                                                  /--*  t0     long   
               [000212] ------------       t212 = *  PUTARG_REG long   REG rdx
                                                  /--*  t211   long   arg0 in rcx
                                                  +--*  t212   long   arg1 in rdx
N005 ( 17, 18) [000002] --CXG-------         t2 = *  CALL help ref    HELPER.CORINFO_HELP_NEWARR_1_OBJ $282
                                                  /--*  t2     ref    
N007 ( 17, 18) [000004] DA-XG-------              *  STORE_LCL_VAR ref    V07 tmp1         d:1

lowering call (before):
N002 (  2, 10) [000010] H-----------        t10 =    CNS_INT(h) long   0xd1ffab1e class $1c1
                                                  /--*  t10    long   arg0 in rcx
N003 ( 16, 16) [000011] --C---------        t11 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $283

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000116] ----------L-              *  ARGPLACE  long   $1c1

late:
======
lowering arg : N002 (  2, 10) [000010] H-----------              *  CNS_INT(h) long   0xd1ffab1e class $1c1
new node is :                [000213] ------------              *  PUTARG_REG long   REG rcx

lowering call (after):
N002 (  2, 10) [000010] H-----------        t10 =    CNS_INT(h) long   0xd1ffab1e class $1c1
                                                  /--*  t10    long   
               [000213] ------------       t213 = *  PUTARG_REG long   REG rcx
                                                  /--*  t213   long   arg0 in rcx
N003 ( 16, 16) [000011] --C---------        t11 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $283

lowering store lcl var/field (before):
N002 (  2, 10) [000010] H-----------        t10 =    CNS_INT(h) long   0xd1ffab1e class $1c1
                                                  /--*  t10    long   
               [000213] ------------       t213 = *  PUTARG_REG long   REG rcx
                                                  /--*  t213   long   arg0 in rcx
N003 ( 16, 16) [000011] --C---------        t11 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $283
                                                  /--*  t11    ref    
N005 ( 16, 16) [000013] DA----------              *  STORE_LCL_VAR ref    V08 tmp2         d:1

lowering store lcl var/field (after):
N002 (  2, 10) [000010] H-----------        t10 =    CNS_INT(h) long   0xd1ffab1e class $1c1
                                                  /--*  t10    long   
               [000213] ------------       t213 = *  PUTARG_REG long   REG rcx
                                                  /--*  t213   long   arg0 in rcx
N003 ( 16, 16) [000011] --C---------        t11 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $283
                                                  /--*  t11    ref    
N005 ( 16, 16) [000013] DA----------              *  STORE_LCL_VAR ref    V08 tmp2         d:1

Addressing mode:
  Base
    N003 (  1,  1) [000014] ------------              *  LCL_VAR   ref    V08 tmp2         u:1 $283
  + 8
Removing unused node:
  N004 (  1,  1) [000015] -c----------              *  CNS_INT   long   8 $201
New addressing mode node:
  N005 (  2,  2) [000016] ------------              *  LEA(b+8)  byref 

Lower of StoreInd didn't mark the node as self contained for reason: 4
N001 (  1,  1) [000008] ------------         t8 =    LCL_VAR   int    V01 arg1         u:1 (last use) $80
                                                  /--*  t8     int    
N002 (  2,  3) [000009] ------------         t9 = *  CAST      long <- int $340
N003 (  1,  1) [000014] ------------        t14 =    LCL_VAR   ref    V08 tmp2         u:1 $283
                                                  /--*  t14    ref    
N005 (  2,  2) [000016] ------------        t16 = *  LEA(b+8)  byref 
                                                  /--*  t16    byref  
                                                  +--*  t9     long   
               [000203] -A---O------              *  STOREIND  long  
Addressing mode:
  Base
    N002 (  1,  1) [000117] ------------              *  LCL_VAR   ref    V07 tmp1         u:1 $300
  + 16
Removing unused node:
  N003 (  1,  1) [000124] -c----------              *  CNS_INT   long   16 Fseq[#FirstElem] $202
New addressing mode node:
  N004 (  2,  2) [000125] ------------              *  LEA(b+16) byref 

lowering call (before):
N002 (  2, 10) [000026] H-----------        t26 =    CNS_INT(h) long   0xd1ffab1e class $1c3
                                                  /--*  t26    long   arg0 in rcx
N003 ( 16, 16) [000027] --C---------        t27 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $287

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000127] ----------L-              *  ARGPLACE  long   $1c3

late:
======
lowering arg : N002 (  2, 10) [000026] H-----------              *  CNS_INT(h) long   0xd1ffab1e class $1c3
new node is :                [000214] ------------              *  PUTARG_REG long   REG rcx

lowering call (after):
N002 (  2, 10) [000026] H-----------        t26 =    CNS_INT(h) long   0xd1ffab1e class $1c3
                                                  /--*  t26    long   
               [000214] ------------       t214 = *  PUTARG_REG long   REG rcx
                                                  /--*  t214   long   arg0 in rcx
N003 ( 16, 16) [000027] --C---------        t27 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $287

lowering store lcl var/field (before):
N002 (  2, 10) [000026] H-----------        t26 =    CNS_INT(h) long   0xd1ffab1e class $1c3
                                                  /--*  t26    long   
               [000214] ------------       t214 = *  PUTARG_REG long   REG rcx
                                                  /--*  t214   long   arg0 in rcx
N003 ( 16, 16) [000027] --C---------        t27 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $287
                                                  /--*  t27    ref    
N005 ( 16, 16) [000029] DA----------              *  STORE_LCL_VAR ref    V09 tmp3         d:1

lowering store lcl var/field (after):
N002 (  2, 10) [000026] H-----------        t26 =    CNS_INT(h) long   0xd1ffab1e class $1c3
                                                  /--*  t26    long   
               [000214] ------------       t214 = *  PUTARG_REG long   REG rcx
                                                  /--*  t214   long   arg0 in rcx
N003 ( 16, 16) [000027] --C---------        t27 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $287
                                                  /--*  t27    ref    
N005 ( 16, 16) [000029] DA----------              *  STORE_LCL_VAR ref    V09 tmp3         d:1

Addressing mode:
  Base
    N003 (  1,  1) [000030] ------------              *  LCL_VAR   ref    V09 tmp3         u:1 $287
  + 8
Removing unused node:
  N004 (  1,  1) [000031] -c----------              *  CNS_INT   long   8 $201
New addressing mode node:
  N005 (  2,  2) [000032] ------------              *  LEA(b+8)  byref 

Lower of StoreInd didn't mark the node as self contained for reason: 4
N001 (  2,  2) [000025] ------------        t25 =    LCL_VAR   int    V02 arg2         u:1 (last use) $c0
                                                  /--*  t25    int    
N002 (  3,  4) [000128] ------------       t128 = *  CAST      int <- short <- int $440
N003 (  1,  1) [000030] ------------        t30 =    LCL_VAR   ref    V09 tmp3         u:1 $287
                                                  /--*  t30    ref    
N005 (  2,  2) [000032] ------------        t32 = *  LEA(b+8)  byref 
                                                  /--*  t32    byref  
                                                  +--*  t128   int    
               [000205] -A---O------              *  STOREIND  int   
Addressing mode:
  Base
    N002 (  1,  1) [000129] ------------              *  LCL_VAR   ref    V07 tmp1         u:1 $300
  + 24
Removing unused node:
  N003 (  1,  1) [000136] -c----------              *  CNS_INT   long   24 Fseq[#ConstantIndex, #FirstElem] $204
New addressing mode node:
  N004 (  2,  2) [000137] ------------              *  LEA(b+24) byref 

lowering call (before):
N002 (  2, 10) [000043] H-----------        t43 =    CNS_INT(h) long   0xd1ffab1e class $1c4
                                                  /--*  t43    long   arg0 in rcx
N003 ( 16, 16) [000044] --C---------        t44 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $28b

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000139] ----------L-              *  ARGPLACE  long   $1c4

late:
======
lowering arg : N002 (  2, 10) [000043] H-----------              *  CNS_INT(h) long   0xd1ffab1e class $1c4
new node is :                [000215] ------------              *  PUTARG_REG long   REG rcx

lowering call (after):
N002 (  2, 10) [000043] H-----------        t43 =    CNS_INT(h) long   0xd1ffab1e class $1c4
                                                  /--*  t43    long   
               [000215] ------------       t215 = *  PUTARG_REG long   REG rcx
                                                  /--*  t215   long   arg0 in rcx
N003 ( 16, 16) [000044] --C---------        t44 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $28b

lowering store lcl var/field (before):
N002 (  2, 10) [000043] H-----------        t43 =    CNS_INT(h) long   0xd1ffab1e class $1c4
                                                  /--*  t43    long   
               [000215] ------------       t215 = *  PUTARG_REG long   REG rcx
                                                  /--*  t215   long   arg0 in rcx
N003 ( 16, 16) [000044] --C---------        t44 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $28b
                                                  /--*  t44    ref    
N005 ( 16, 16) [000046] DA----------              *  STORE_LCL_VAR ref    V10 tmp4         d:1

lowering store lcl var/field (after):
N002 (  2, 10) [000043] H-----------        t43 =    CNS_INT(h) long   0xd1ffab1e class $1c4
                                                  /--*  t43    long   
               [000215] ------------       t215 = *  PUTARG_REG long   REG rcx
                                                  /--*  t215   long   arg0 in rcx
N003 ( 16, 16) [000044] --C---------        t44 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $28b
                                                  /--*  t44    ref    
N005 ( 16, 16) [000046] DA----------              *  STORE_LCL_VAR ref    V10 tmp4         d:1

Addressing mode:
  Base
    N003 (  1,  1) [000047] ------------              *  LCL_VAR   ref    V10 tmp4         u:1 $28b
  + 8
Removing unused node:
  N004 (  1,  1) [000048] -c----------              *  CNS_INT   long   8 $201
New addressing mode node:
  N005 (  2,  2) [000049] ------------              *  LEA(b+8)  byref 

Lower of StoreInd didn't mark the node as self contained for reason: 4
N001 (  2,  2) [000042] ------------        t42 =    LCL_VAR   int    V03 arg3         u:1 (last use) $100
                                                  /--*  t42    int    
N002 (  3,  4) [000140] ------------       t140 = *  CAST      int <- ubyte <- int $441
N003 (  1,  1) [000047] ------------        t47 =    LCL_VAR   ref    V10 tmp4         u:1 $28b
                                                  /--*  t47    ref    
N005 (  2,  2) [000049] ------------        t49 = *  LEA(b+8)  byref 
                                                  /--*  t49    byref  
                                                  +--*  t140   int    
               [000207] -A---O------              *  STOREIND  short 
Addressing mode:
  Base
    N002 (  1,  1) [000141] ------------              *  LCL_VAR   ref    V07 tmp1         u:1 $300
  + 32
Removing unused node:
  N003 (  1,  1) [000148] -c----------              *  CNS_INT   long   32 Fseq[#ConstantIndex, #FirstElem] $206
New addressing mode node:
  N004 (  2,  2) [000149] ------------              *  LEA(b+32) byref 

lowering store lcl var/field (before):
N001 (  3,  2) [000077] ------?-----        t77 =    LCL_VAR   ref    V04 arg4         u:1 $140
                                                  /--*  t77    ref    
N003 (  3,  3) [000178] DA----------              *  STORE_LCL_VAR ref    V12 tmp6         d:1

lowering store lcl var/field (after):
N001 (  3,  2) [000077] ------?-----        t77 =    LCL_VAR   ref    V04 arg4         u:1 $140
                                                  /--*  t77    ref    
N003 (  3,  3) [000178] DA----------              *  STORE_LCL_VAR ref    V12 tmp6         d:1

lowering store lcl var/field (before):
N003 (  2, 10) [000060] H-----?-----        t60 =    CNS_INT(h) long   0xd1ffab1e class $1c5
                                                  /--*  t60    long   
N005 (  6, 13) [000063] DA----?-----              *  STORE_LCL_VAR long   V11 tmp5         d:1

lowering store lcl var/field (after):
N003 (  2, 10) [000060] H-----?-----        t60 =    CNS_INT(h) long   0xd1ffab1e class $1c5
                                                  /--*  t60    long   
N005 (  6, 13) [000063] DA----?-----              *  STORE_LCL_VAR long   V11 tmp5         d:1

lowering call (before):
N003 (  3,  2) [000066] ------?-----        t66 =    LCL_VAR   long   V11 tmp5         u:1 (last use) $1c5
N004 (  3,  2) [000073] ------?-----        t73 =    LCL_VAR   ref    V04 arg4         u:1 (last use) $140
                                                  /--*  t66    long   arg0 in rcx
                                                  +--*  t73    ref    arg1 in rdx
N005 ( 20, 11) [000074] --CXG-?-----        t74 = *  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL $296

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000151] ------?---L-              *  ARGPLACE  long   $1c5
lowering arg : N002 (  0,  0) [000152] ------?---L-              *  ARGPLACE  ref    $140

late:
======
lowering arg : N003 (  3,  2) [000066] ------?-----              *  LCL_VAR   long   V11 tmp5         u:1 (last use) $1c5
new node is :                [000216] ------------              *  PUTARG_REG long   REG rcx

lowering arg : N004 (  3,  2) [000073] ------?-----              *  LCL_VAR   ref    V04 arg4         u:1 (last use) $140
new node is :                [000217] ------------              *  PUTARG_REG ref    REG rdx

lowering call (after):
N003 (  3,  2) [000066] ------?-----        t66 =    LCL_VAR   long   V11 tmp5         u:1 (last use) $1c5
                                                  /--*  t66    long   
               [000216] ------------       t216 = *  PUTARG_REG long   REG rcx
N004 (  3,  2) [000073] ------?-----        t73 =    LCL_VAR   ref    V04 arg4         u:1 (last use) $140
                                                  /--*  t73    ref    
               [000217] ------------       t217 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t216   long   arg0 in rcx
                                                  +--*  t217   ref    arg1 in rdx
N005 ( 20, 11) [000074] --CXG-?-----        t74 = *  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL $296

lowering store lcl var/field (before):
N003 (  3,  2) [000066] ------?-----        t66 =    LCL_VAR   long   V11 tmp5         u:1 (last use) $1c5
                                                  /--*  t66    long   
               [000216] ------------       t216 = *  PUTARG_REG long   REG rcx
N004 (  3,  2) [000073] ------?-----        t73 =    LCL_VAR   ref    V04 arg4         u:1 (last use) $140
                                                  /--*  t73    ref    
               [000217] ------------       t217 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t216   long   arg0 in rcx
                                                  +--*  t217   ref    arg1 in rdx
N005 ( 20, 11) [000074] --CXG-?-----        t74 = *  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL $296
                                                  /--*  t74    ref    
N007 ( 20, 11) [000180] DA-XG-------              *  STORE_LCL_VAR ref    V12 tmp6         d:3

lowering store lcl var/field (after):
N003 (  3,  2) [000066] ------?-----        t66 =    LCL_VAR   long   V11 tmp5         u:1 (last use) $1c5
                                                  /--*  t66    long   
               [000216] ------------       t216 = *  PUTARG_REG long   REG rcx
N004 (  3,  2) [000073] ------?-----        t73 =    LCL_VAR   ref    V04 arg4         u:1 (last use) $140
                                                  /--*  t73    ref    
               [000217] ------------       t217 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t216   long   arg0 in rcx
                                                  +--*  t217   ref    arg1 in rdx
N005 ( 20, 11) [000074] --CXG-?-----        t74 = *  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL $296
                                                  /--*  t74    ref    
N007 ( 20, 11) [000180] DA-XG-------              *  STORE_LCL_VAR ref    V12 tmp6         d:3

lowering store lcl var/field (before):
N001 (  0,  0) [000196] ------------       t196 =    PHI_ARG   ref    V12 tmp6         u:3 $140
N002 (  0,  0) [000193] ------------       t193 =    PHI_ARG   ref    V12 tmp6         u:1 $140
                                                  /--*  t196   ref    
                                                  +--*  t193   ref    
N003 (  0,  0) [000191] ------------       t191 = *  PHI       ref   
                                                  /--*  t191   ref    
N005 (  0,  0) [000192] DA----------              *  STORE_LCL_VAR ref    V12 tmp6         d:2

lowering store lcl var/field (after):
N001 (  0,  0) [000196] ------------       t196 =    PHI_ARG   ref    V12 tmp6         u:3 $140
N002 (  0,  0) [000193] ------------       t193 =    PHI_ARG   ref    V12 tmp6         u:1 $140
                                                  /--*  t196   ref    
                                                  +--*  t193   ref    
N003 (  0,  0) [000191] ------------       t191 = *  PHI       ref   
                                                  /--*  t191   ref    
N005 (  0,  0) [000192] DA----------              *  STORE_LCL_VAR ref    V12 tmp6         d:2

Addressing mode:
  Base
    N002 (  1,  1) [000153] ------------              *  LCL_VAR   ref    V07 tmp1         u:1 $300
  + 40
Removing unused node:
  N003 (  1,  1) [000160] -c----------              *  CNS_INT   long   40 Fseq[#ConstantIndex, #FirstElem] $208
New addressing mode node:
  N004 (  2,  2) [000161] ------------              *  LEA(b+40) byref 

lowering store lcl var/field (before):
N001 (  3,  2) [000105] ------?-----       t105 =    LCL_VAR   ref    V05 arg5         u:1 $141
                                                  /--*  t105   ref    
N003 (  3,  3) [000184] DA----------              *  STORE_LCL_VAR ref    V14 tmp8         d:1

lowering store lcl var/field (after):
N001 (  3,  2) [000105] ------?-----       t105 =    LCL_VAR   ref    V05 arg5         u:1 $141
                                                  /--*  t105   ref    
N003 (  3,  3) [000184] DA----------              *  STORE_LCL_VAR ref    V14 tmp8         d:1

lowering store lcl var/field (before):
N003 (  2, 10) [000088] H-----?-----        t88 =    CNS_INT(h) long   0xd1ffab1e class $1c6
                                                  /--*  t88    long   
N005 (  6, 13) [000091] DA----?-----              *  STORE_LCL_VAR long   V13 tmp7         d:1

lowering store lcl var/field (after):
N003 (  2, 10) [000088] H-----?-----        t88 =    CNS_INT(h) long   0xd1ffab1e class $1c6
                                                  /--*  t88    long   
N005 (  6, 13) [000091] DA----?-----              *  STORE_LCL_VAR long   V13 tmp7         d:1

lowering call (before):
N003 (  3,  2) [000094] ------?-----        t94 =    LCL_VAR   long   V13 tmp7         u:1 (last use) $1c6
N004 (  3,  2) [000101] ------?-----       t101 =    LCL_VAR   ref    V05 arg5         u:1 (last use) $141
                                                  /--*  t94    long   arg0 in rcx
                                                  +--*  t101   ref    arg1 in rdx
N005 ( 20, 11) [000102] --CXG-?-----       t102 = *  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL $2a0

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000163] ------?---L-              *  ARGPLACE  long   $1c6
lowering arg : N002 (  0,  0) [000164] ------?---L-              *  ARGPLACE  ref    $141

late:
======
lowering arg : N003 (  3,  2) [000094] ------?-----              *  LCL_VAR   long   V13 tmp7         u:1 (last use) $1c6
new node is :                [000218] ------------              *  PUTARG_REG long   REG rcx

lowering arg : N004 (  3,  2) [000101] ------?-----              *  LCL_VAR   ref    V05 arg5         u:1 (last use) $141
new node is :                [000219] ------------              *  PUTARG_REG ref    REG rdx

lowering call (after):
N003 (  3,  2) [000094] ------?-----        t94 =    LCL_VAR   long   V13 tmp7         u:1 (last use) $1c6
                                                  /--*  t94    long   
               [000218] ------------       t218 = *  PUTARG_REG long   REG rcx
N004 (  3,  2) [000101] ------?-----       t101 =    LCL_VAR   ref    V05 arg5         u:1 (last use) $141
                                                  /--*  t101   ref    
               [000219] ------------       t219 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t218   long   arg0 in rcx
                                                  +--*  t219   ref    arg1 in rdx
N005 ( 20, 11) [000102] --CXG-?-----       t102 = *  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL $2a0

lowering store lcl var/field (before):
N003 (  3,  2) [000094] ------?-----        t94 =    LCL_VAR   long   V13 tmp7         u:1 (last use) $1c6
                                                  /--*  t94    long   
               [000218] ------------       t218 = *  PUTARG_REG long   REG rcx
N004 (  3,  2) [000101] ------?-----       t101 =    LCL_VAR   ref    V05 arg5         u:1 (last use) $141
                                                  /--*  t101   ref    
               [000219] ------------       t219 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t218   long   arg0 in rcx
                                                  +--*  t219   ref    arg1 in rdx
N005 ( 20, 11) [000102] --CXG-?-----       t102 = *  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL $2a0
                                                  /--*  t102   ref    
N007 ( 20, 11) [000186] DA-XG-------              *  STORE_LCL_VAR ref    V14 tmp8         d:3

lowering store lcl var/field (after):
N003 (  3,  2) [000094] ------?-----        t94 =    LCL_VAR   long   V13 tmp7         u:1 (last use) $1c6
                                                  /--*  t94    long   
               [000218] ------------       t218 = *  PUTARG_REG long   REG rcx
N004 (  3,  2) [000101] ------?-----       t101 =    LCL_VAR   ref    V05 arg5         u:1 (last use) $141
                                                  /--*  t101   ref    
               [000219] ------------       t219 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t218   long   arg0 in rcx
                                                  +--*  t219   ref    arg1 in rdx
N005 ( 20, 11) [000102] --CXG-?-----       t102 = *  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL $2a0
                                                  /--*  t102   ref    
N007 ( 20, 11) [000186] DA-XG-------              *  STORE_LCL_VAR ref    V14 tmp8         d:3

lowering store lcl var/field (before):
N001 (  0,  0) [000195] ------------       t195 =    PHI_ARG   ref    V14 tmp8         u:3 $141
N002 (  0,  0) [000194] ------------       t194 =    PHI_ARG   ref    V14 tmp8         u:1 $141
                                                  /--*  t195   ref    
                                                  +--*  t194   ref    
N003 (  0,  0) [000188] ------------       t188 = *  PHI       ref   
                                                  /--*  t188   ref    
N005 (  0,  0) [000189] DA----------              *  STORE_LCL_VAR ref    V14 tmp8         d:2

lowering store lcl var/field (after):
N001 (  0,  0) [000195] ------------       t195 =    PHI_ARG   ref    V14 tmp8         u:3 $141
N002 (  0,  0) [000194] ------------       t194 =    PHI_ARG   ref    V14 tmp8         u:1 $141
                                                  /--*  t195   ref    
                                                  +--*  t194   ref    
N003 (  0,  0) [000188] ------------       t188 = *  PHI       ref   
                                                  /--*  t188   ref    
N005 (  0,  0) [000189] DA----------              *  STORE_LCL_VAR ref    V14 tmp8         d:2

Addressing mode:
  Base
    N002 (  1,  1) [000165] ------------              *  LCL_VAR   ref    V07 tmp1         u:1 $300
  + 48
Removing unused node:
  N003 (  1,  1) [000172] -c----------              *  CNS_INT   long   48 Fseq[#ConstantIndex, #FirstElem] $20a
New addressing mode node:
  N004 (  2,  2) [000173] ------------              *  LEA(b+48) byref 

lowering GT_RETURN
N002 (  2,  2) [000113] ------------              *  RETURN    ref    $2d1
============Lower has completed modifying nodes.

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..???)-> BB04 ( cond )                     i label target hascall idxlen new[] newobj LIR 
BB02 [0003]  1       BB01                  0.25    [???..???)-> BB04 ( cond )                     i LIR 
BB03 [0002]  1       BB02                  0.12    [???..???)                                     i LIR 
BB04 [0001]  3       BB01,BB02,BB03        1       [???..???)-> BB07 ( cond )                     i label target hascall idxlen new[] newobj LIR 
BB05 [0008]  1       BB04                  0.25    [???..???)-> BB07 ( cond )                     i LIR 
BB06 [0007]  1       BB05                  0.12    [???..???)                                     i LIR 
BB07 [0006]  3       BB04,BB05,BB06        1       [???..037)        (return)                     i label target hascall idxlen new[] newobj LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..???) -> BB04 (cond), preds={} succs={BB02,BB04}
               [000202] ------------                 IL_OFFSET void   IL offset: 0x0
N003 (  2, 10) [000001] H-----------         t1 =    CNS_INT(h) long   0xd1ffab1e class $1c0
                                                  /--*  t1     long   
               [000211] ------------       t211 = *  PUTARG_REG long   REG rcx
N004 (  1,  1) [000000] ------------         t0 =    CNS_INT   long   5 $200
                                                  /--*  t0     long   
               [000212] ------------       t212 = *  PUTARG_REG long   REG rdx
                                                  /--*  t211   long   arg0 in rcx
                                                  +--*  t212   long   arg1 in rdx
N005 ( 17, 18) [000002] --CXG-------         t2 = *  CALL help ref    HELPER.CORINFO_HELP_NEWARR_1_OBJ $282
                                                  /--*  t2     ref    
N007 ( 17, 18) [000004] DA-XG-------              *  STORE_LCL_VAR ref    V07 tmp1         d:1
N002 (  2, 10) [000010] H-----------        t10 =    CNS_INT(h) long   0xd1ffab1e class $1c1
                                                  /--*  t10    long   
               [000213] ------------       t213 = *  PUTARG_REG long   REG rcx
                                                  /--*  t213   long   arg0 in rcx
N003 ( 16, 16) [000011] --C---------        t11 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $283
                                                  /--*  t11    ref    
N005 ( 16, 16) [000013] DA----------              *  STORE_LCL_VAR ref    V08 tmp2         d:1
N001 (  1,  1) [000008] ------------         t8 =    LCL_VAR   int    V01 arg1         u:1 (last use) $80
                                                  /--*  t8     int    
N002 (  2,  3) [000009] ------------         t9 = *  CAST      long <- int $340
N003 (  1,  1) [000014] ------------        t14 =    LCL_VAR   ref    V08 tmp2         u:1 $283
                                                  /--*  t14    ref    
N005 (  2,  2) [000016] -c----------        t16 = *  LEA(b+8)  byref 
                                                  /--*  t16    byref  
                                                  +--*  t9     long   
               [000203] -A---O------              *  STOREIND  long  
N002 (  1,  1) [000117] ------------       t117 =    LCL_VAR   ref    V07 tmp1         u:1 $300
                                                  /--*  t117   ref    
N004 (  2,  2) [000125] ------------       t125 = *  LEA(b+16) byref 
N007 (  1,  1) [000019] ------------        t19 =    LCL_VAR   ref    V08 tmp2         u:1 (last use) $283
                                                  /--*  t125   byref  
                                                  +--*  t19    ref    
               [000204] -A--G-------              *  STOREIND  ref   
N002 (  2, 10) [000026] H-----------        t26 =    CNS_INT(h) long   0xd1ffab1e class $1c3
                                                  /--*  t26    long   
               [000214] ------------       t214 = *  PUTARG_REG long   REG rcx
                                                  /--*  t214   long   arg0 in rcx
N003 ( 16, 16) [000027] --C---------        t27 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $287
                                                  /--*  t27    ref    
N005 ( 16, 16) [000029] DA----------              *  STORE_LCL_VAR ref    V09 tmp3         d:1
N001 (  2,  2) [000025] ------------        t25 =    LCL_VAR   int    V02 arg2         u:1 (last use) $c0
                                                  /--*  t25    int    
N002 (  3,  4) [000128] ------------       t128 = *  CAST      int <- short <- int $440
N003 (  1,  1) [000030] ------------        t30 =    LCL_VAR   ref    V09 tmp3         u:1 $287
                                                  /--*  t30    ref    
N005 (  2,  2) [000032] -c----------        t32 = *  LEA(b+8)  byref 
                                                  /--*  t32    byref  
                                                  +--*  t128   int    
               [000205] -A---O------              *  STOREIND  int   
N002 (  1,  1) [000129] ------------       t129 =    LCL_VAR   ref    V07 tmp1         u:1 $300
                                                  /--*  t129   ref    
N004 (  2,  2) [000137] ------------       t137 = *  LEA(b+24) byref 
N007 (  1,  1) [000036] ------------        t36 =    LCL_VAR   ref    V09 tmp3         u:1 (last use) $287
                                                  /--*  t137   byref  
                                                  +--*  t36    ref    
               [000206] -A--G-------              *  STOREIND  ref   
N002 (  2, 10) [000043] H-----------        t43 =    CNS_INT(h) long   0xd1ffab1e class $1c4
                                                  /--*  t43    long   
               [000215] ------------       t215 = *  PUTARG_REG long   REG rcx
                                                  /--*  t215   long   arg0 in rcx
N003 ( 16, 16) [000044] --C---------        t44 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $28b
                                                  /--*  t44    ref    
N005 ( 16, 16) [000046] DA----------              *  STORE_LCL_VAR ref    V10 tmp4         d:1
N001 (  2,  2) [000042] ------------        t42 =    LCL_VAR   int    V03 arg3         u:1 (last use) $100
                                                  /--*  t42    int    
N002 (  3,  4) [000140] ------------       t140 = *  CAST      int <- ubyte <- int $441
N003 (  1,  1) [000047] ------------        t47 =    LCL_VAR   ref    V10 tmp4         u:1 $28b
                                                  /--*  t47    ref    
N005 (  2,  2) [000049] -c----------        t49 = *  LEA(b+8)  byref 
                                                  /--*  t49    byref  
                                                  +--*  t140   int    
               [000207] -A---O------              *  STOREIND  short 
N002 (  1,  1) [000141] ------------       t141 =    LCL_VAR   ref    V07 tmp1         u:1 $300
                                                  /--*  t141   ref    
N004 (  2,  2) [000149] ------------       t149 = *  LEA(b+32) byref 
N007 (  1,  1) [000053] ------------        t53 =    LCL_VAR   ref    V10 tmp4         u:1 (last use) $28b
                                                  /--*  t149   byref  
                                                  +--*  t53    ref    
               [000208] -A--G-------              *  STOREIND  ref   
N001 (  3,  2) [000077] ------?-----        t77 =    LCL_VAR   ref    V04 arg4         u:1 $140
                                                  /--*  t77    ref    
N003 (  3,  3) [000178] DA----------              *  STORE_LCL_VAR ref    V12 tmp6         d:1
N001 (  3,  2) [000070] ------------        t70 =    LCL_VAR   ref    V12 tmp6         u:1 $140
N002 (  1,  1) [000069] -c----------        t69 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t70    ref    
                                                  +--*  t69    ref    
N003 (  5,  4) [000071] J------N----              *  EQ        void   $443
N004 (  7,  6) [000175] ------------              *  JTRUE     void  

------------ BB02 [???..???) -> BB04 (cond), preds={BB01} succs={BB03,BB04}
N001 (  1,  1) [000061] ------?-----        t61 =    LCL_VAR   ref    V12 tmp6         u:1 $140
                                                  /--*  t61    ref    
N002 (  3,  2) [000067] #c---O?-----        t67 = *  IND       long   $291
N003 (  2, 10) [000060] H-----?-----        t60 =    CNS_INT(h) long   0xd1ffab1e class $1c5
                                                  /--*  t60    long   
N005 (  6, 13) [000063] DA----?-----              *  STORE_LCL_VAR long   V11 tmp5         d:1
N006 (  3,  2) [000064] ------?-----        t64 =    LCL_VAR   long   V11 tmp5         u:1 $1c5
                                                  /--*  t67    long   
                                                  +--*  t64    long   
N008 ( 13, 18) [000068] J----O?N----              *  EQ        void   $445
N009 ( 15, 20) [000176] -----O------              *  JTRUE     void  

------------ BB03 [???..???), preds={BB02} succs={BB04}
N003 (  3,  2) [000066] ------?-----        t66 =    LCL_VAR   long   V11 tmp5         u:1 (last use) $1c5
                                                  /--*  t66    long   
               [000216] ------------       t216 = *  PUTARG_REG long   REG rcx
N004 (  3,  2) [000073] ------?-----        t73 =    LCL_VAR   ref    V04 arg4         u:1 (last use) $140
                                                  /--*  t73    ref    
               [000217] ------------       t217 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t216   long   arg0 in rcx
                                                  +--*  t217   ref    arg1 in rdx
N005 ( 20, 11) [000074] --CXG-?-----        t74 = *  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL $296
                                                  /--*  t74    ref    
N007 ( 20, 11) [000180] DA-XG-------              *  STORE_LCL_VAR ref    V12 tmp6         d:3

------------ BB04 [???..???) -> BB07 (cond), preds={BB01,BB02,BB03} succs={BB05,BB07}
N001 (  0,  0) [000196] ------------       t196 =    PHI_ARG   ref    V12 tmp6         u:3 $140
N002 (  0,  0) [000193] ------------       t193 =    PHI_ARG   ref    V12 tmp6         u:1 $140
                                                  /--*  t196   ref    
                                                  +--*  t193   ref    
N003 (  0,  0) [000191] ------------       t191 = *  PHI       ref   
                                                  /--*  t191   ref    
N005 (  0,  0) [000192] DA----------              *  STORE_LCL_VAR ref    V12 tmp6         d:2
N002 (  1,  1) [000153] ------------       t153 =    LCL_VAR   ref    V07 tmp1         u:1 $300
                                                  /--*  t153   ref    
N004 (  2,  2) [000161] ------------       t161 = *  LEA(b+40) byref 
N007 (  1,  1) [000082] ------------        t82 =    LCL_VAR   ref    V12 tmp6         u:2 (last use) $140
                                                  /--*  t161   byref  
                                                  +--*  t82    ref    
               [000209] -A--G-------              *  STOREIND  ref   
N001 (  3,  2) [000105] ------?-----       t105 =    LCL_VAR   ref    V05 arg5         u:1 $141
                                                  /--*  t105   ref    
N003 (  3,  3) [000184] DA----------              *  STORE_LCL_VAR ref    V14 tmp8         d:1
N001 (  3,  2) [000098] ------------        t98 =    LCL_VAR   ref    V14 tmp8         u:1 $141
N002 (  1,  1) [000097] -c----------        t97 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t98    ref    
                                                  +--*  t97    ref    
N003 (  5,  4) [000099] J------N----              *  EQ        void   $446
N004 (  7,  6) [000181] ------------              *  JTRUE     void  

------------ BB05 [???..???) -> BB07 (cond), preds={BB04} succs={BB06,BB07}
N001 (  1,  1) [000089] ------?-----        t89 =    LCL_VAR   ref    V14 tmp8         u:1 $141
                                                  /--*  t89    ref    
N002 (  3,  2) [000095] #c---O?-----        t95 = *  IND       long   $29b
N003 (  2, 10) [000088] H-----?-----        t88 =    CNS_INT(h) long   0xd1ffab1e class $1c6
                                                  /--*  t88    long   
N005 (  6, 13) [000091] DA----?-----              *  STORE_LCL_VAR long   V13 tmp7         d:1
N006 (  3,  2) [000092] ------?-----        t92 =    LCL_VAR   long   V13 tmp7         u:1 $1c6
                                                  /--*  t95    long   
                                                  +--*  t92    long   
N008 ( 13, 18) [000096] J----O?N----              *  EQ        void   $448
N009 ( 15, 20) [000182] -----O------              *  JTRUE     void  

------------ BB06 [???..???), preds={BB05} succs={BB07}
N003 (  3,  2) [000094] ------?-----        t94 =    LCL_VAR   long   V13 tmp7         u:1 (last use) $1c6
                                                  /--*  t94    long   
               [000218] ------------       t218 = *  PUTARG_REG long   REG rcx
N004 (  3,  2) [000101] ------?-----       t101 =    LCL_VAR   ref    V05 arg5         u:1 (last use) $141
                                                  /--*  t101   ref    
               [000219] ------------       t219 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t218   long   arg0 in rcx
                                                  +--*  t219   ref    arg1 in rdx
N005 ( 20, 11) [000102] --CXG-?-----       t102 = *  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL $2a0
                                                  /--*  t102   ref    
N007 ( 20, 11) [000186] DA-XG-------              *  STORE_LCL_VAR ref    V14 tmp8         d:3

------------ BB07 [???..037) (return), preds={BB04,BB05,BB06} succs={}
N001 (  0,  0) [000195] ------------       t195 =    PHI_ARG   ref    V14 tmp8         u:3 $141
N002 (  0,  0) [000194] ------------       t194 =    PHI_ARG   ref    V14 tmp8         u:1 $141
                                                  /--*  t195   ref    
                                                  +--*  t194   ref    
N003 (  0,  0) [000188] ------------       t188 = *  PHI       ref   
                                                  /--*  t188   ref    
N005 (  0,  0) [000189] DA----------              *  STORE_LCL_VAR ref    V14 tmp8         d:2
N002 (  1,  1) [000165] ------------       t165 =    LCL_VAR   ref    V07 tmp1         u:1 $300
                                                  /--*  t165   ref    
N004 (  2,  2) [000173] ------------       t173 = *  LEA(b+48) byref 
N007 (  1,  1) [000110] ------------       t110 =    LCL_VAR   ref    V14 tmp8         u:2 (last use) $141
                                                  /--*  t173   byref  
                                                  +--*  t110   ref    
               [000210] -A--G-------              *  STOREIND  ref   
N001 (  1,  1) [000005] ------------         t5 =    LCL_VAR   ref    V07 tmp1         u:1 (last use) $300
                                                  /--*  t5     ref    
N002 (  2,  2) [000113] ------------              *  RETURN    ref    $2d1

-------------------------------------------------------------------------------------------------------------------

*** lvaComputeRefCounts ***

*** lvaComputeRefCounts -- explicit counts ***
New refCnts for V07: refCnt =  1, refCntWtd = 2   
New refCnts for V08: refCnt =  1, refCntWtd = 2   
New refCnts for V01: refCnt =  1, refCntWtd = 1   
New refCnts for V08: refCnt =  2, refCntWtd = 4   
New refCnts for V07: refCnt =  2, refCntWtd = 4   
New refCnts for V08: refCnt =  3, refCntWtd = 6   
New refCnts for V09: refCnt =  1, refCntWtd = 2   
New refCnts for V02: refCnt =  1, refCntWtd = 1   
New refCnts for V09: refCnt =  2, refCntWtd = 4   
New refCnts for V07: refCnt =  3, refCntWtd = 6   
New refCnts for V09: refCnt =  3, refCntWtd = 6   
New refCnts for V10: refCnt =  1, refCntWtd = 2   
New refCnts for V03: refCnt =  1, refCntWtd = 1   
New refCnts for V10: refCnt =  2, refCntWtd = 4   
New refCnts for V07: refCnt =  4, refCntWtd = 8   
New refCnts for V10: refCnt =  3, refCntWtd = 6   
New refCnts for V04: refCnt =  1, refCntWtd = 1   
New refCnts for V12: refCnt =  1, refCntWtd = 2   
New refCnts for V12: refCnt =  2, refCntWtd = 4   
New refCnts for V12: refCnt =  3, refCntWtd = 4.50
New refCnts for V11: refCnt =  1, refCntWtd = 0.50
New refCnts for V11: refCnt =  2, refCntWtd = 1   
New refCnts for V11: refCnt =  3, refCntWtd = 1.25
New refCnts for V04: refCnt =  2, refCntWtd = 1.12
New refCnts for V12: refCnt =  4, refCntWtd = 4.75
New refCnts for V07: refCnt =  5, refCntWtd = 10   
New refCnts for V12: refCnt =  5, refCntWtd = 6.75
New refCnts for V05: refCnt =  1, refCntWtd = 1   
New refCnts for V14: refCnt =  1, refCntWtd = 2   
New refCnts for V14: refCnt =  2, refCntWtd = 4   
New refCnts for V14: refCnt =  3, refCntWtd = 4.50
New refCnts for V13: refCnt =  1, refCntWtd = 0.50
New refCnts for V13: refCnt =  2, refCntWtd = 1   
New refCnts for V13: refCnt =  3, refCntWtd = 1.25
New refCnts for V05: refCnt =  2, refCntWtd = 1.12
New refCnts for V14: refCnt =  4, refCntWtd = 4.75
New refCnts for V07: refCnt =  6, refCntWtd = 12   
New refCnts for V14: refCnt =  5, refCntWtd = 6.75
New refCnts for V07: refCnt =  7, refCntWtd = 14   

*** lvaComputeRefCounts -- implicit counts ***
New refCnts for V01: refCnt =  2, refCntWtd = 2   
New refCnts for V01: refCnt =  3, refCntWtd = 3   
New refCnts for V02: refCnt =  2, refCntWtd = 2   
New refCnts for V02: refCnt =  3, refCntWtd = 3   
New refCnts for V03: refCnt =  2, refCntWtd = 2   
New refCnts for V03: refCnt =  3, refCntWtd = 3   
*************** In fgLocalVarLiveness()
; Initial local variable assignments
;
;  V00 this              ref  this class-hnd
;  V01 arg1              int 
;  V02 arg2            short 
;  V03 arg3            ubyte 
;  V04 arg4              ref  class-hnd
;  V05 arg5              ref  class-hnd
;  V06 OutArgs        lclBlk <32>  "OutgoingArgSpace"
;  V07 tmp1              ref  class-hnd exact "dup spill"
;  V08 tmp2              ref  class-hnd exact "Single-def Box Helper"
;  V09 tmp3              ref  class-hnd exact "Single-def Box Helper"
;  V10 tmp4              ref  class-hnd exact "Single-def Box Helper"
;  V11 tmp5             long  "fgInsertCommaFormTemp is creating a new local variable"
;  V12 tmp6              ref  class-hnd "spilling QMark2"
;  V13 tmp7             long  "fgInsertCommaFormTemp is creating a new local variable"
;  V14 tmp8              ref  class-hnd "spilling QMark2"
In fgLocalVarLivenessInit
Tracked variable (13 out of 15) table:
V07 tmp1          [   ref]: refCnt =    7, refCntWtd =  14   
V12 tmp6          [   ref]: refCnt =    5, refCntWtd =   6.75
V14 tmp8          [   ref]: refCnt =    5, refCntWtd =   6.75
V08 tmp2          [   ref]: refCnt =    3, refCntWtd =   6   
V09 tmp3          [   ref]: refCnt =    3, refCntWtd =   6   
V10 tmp4          [   ref]: refCnt =    3, refCntWtd =   6   
V01 arg1          [   int]: refCnt =    3, refCntWtd =   3   
V02 arg2          [ short]: refCnt =    3, refCntWtd =   3   
V03 arg3          [ ubyte]: refCnt =    3, refCntWtd =   3   
V11 tmp5          [  long]: refCnt =    3, refCntWtd =   1.25
V13 tmp7          [  long]: refCnt =    3, refCntWtd =   1.25
V04 arg4          [   ref]: refCnt =    2, refCntWtd =   1.12
V05 arg5          [   ref]: refCnt =    2, refCntWtd =   1.12

*************** In fgPerBlockLocalVarLiveness()
BB01 USE(4)={                    V01 V02 V03 V04}
     DEF(5)={V07 V12 V08 V09 V10                }

BB02 USE(1)={V12    } + ByrefExposed + GcHeap
     DEF(1)={    V11}

BB03 USE(2)={    V11 V04}
     DEF(1)={V12        }

BB04 USE(3)={V07 V12     V05}
     DEF(1)={        V14    }

BB05 USE(1)={V14    } + ByrefExposed + GcHeap
     DEF(1)={    V13}

BB06 USE(2)={    V13 V05}
     DEF(1)={V14        }

BB07 USE(2)={V07 V14}
     DEF(0)={       }

** Memory liveness computed, GcHeap states and ByrefExposed states match
*************** In fgInterBlockLocalVarLiveness()

BB liveness after fgLiveVarAnalysis():

BB01 IN (5)={        V01 V02 V03 V04 V05} + ByrefExposed + GcHeap
     OUT(4)={V07 V12             V04 V05} + ByrefExposed + GcHeap

BB02 IN (4)={V07 V12     V04 V05} + ByrefExposed + GcHeap
     OUT(5)={V07 V12 V11 V04 V05} + ByrefExposed + GcHeap

BB03 IN (4)={V07     V11 V04 V05} + ByrefExposed + GcHeap
     OUT(3)={V07 V12         V05} + ByrefExposed + GcHeap

BB04 IN (3)={V07 V12     V05} + ByrefExposed + GcHeap
     OUT(3)={V07     V14 V05} + ByrefExposed + GcHeap

BB05 IN (3)={V07 V14     V05} + ByrefExposed + GcHeap
     OUT(4)={V07 V14 V13 V05}

BB06 IN (3)={V07     V13 V05}
     OUT(2)={V07 V14        }

BB07 IN (2)={V07 V14}
     OUT(0)={       }


*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..???)-> BB04 ( cond )                     i label target hascall idxlen new[] newobj LIR 
BB02 [0003]  1       BB01                  0.25    [???..???)-> BB04 ( cond )                     i LIR 
BB03 [0002]  1       BB02                  0.12    [???..???)                                     i LIR 
BB04 [0001]  3       BB01,BB02,BB03        1       [???..???)-> BB07 ( cond )                     i label target hascall idxlen new[] newobj LIR 
BB05 [0008]  1       BB04                  0.25    [???..???)-> BB07 ( cond )                     i LIR 
BB06 [0007]  1       BB05                  0.12    [???..???)                                     i LIR 
BB07 [0006]  3       BB04,BB05,BB06        1       [???..037)        (return)                     i label target hascall idxlen new[] newobj LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist

*** lvaComputeRefCounts ***

*** lvaComputeRefCounts -- explicit counts ***
New refCnts for V07: refCnt =  1, refCntWtd = 2   
New refCnts for V08: refCnt =  1, refCntWtd = 2   
New refCnts for V01: refCnt =  1, refCntWtd = 1   
New refCnts for V08: refCnt =  2, refCntWtd = 4   
New refCnts for V07: refCnt =  2, refCntWtd = 4   
New refCnts for V08: refCnt =  3, refCntWtd = 6   
New refCnts for V09: refCnt =  1, refCntWtd = 2   
New refCnts for V02: refCnt =  1, refCntWtd = 1   
New refCnts for V09: refCnt =  2, refCntWtd = 4   
New refCnts for V07: refCnt =  3, refCntWtd = 6   
New refCnts for V09: refCnt =  3, refCntWtd = 6   
New refCnts for V10: refCnt =  1, refCntWtd = 2   
New refCnts for V03: refCnt =  1, refCntWtd = 1   
New refCnts for V10: refCnt =  2, refCntWtd = 4   
New refCnts for V07: refCnt =  4, refCntWtd = 8   
New refCnts for V10: refCnt =  3, refCntWtd = 6   
New refCnts for V04: refCnt =  1, refCntWtd = 1   
New refCnts for V12: refCnt =  1, refCntWtd = 2   
New refCnts for V12: refCnt =  2, refCntWtd = 4   
New refCnts for V12: refCnt =  3, refCntWtd = 4.50
New refCnts for V11: refCnt =  1, refCntWtd = 0.50
New refCnts for V11: refCnt =  2, refCntWtd = 1   
New refCnts for V11: refCnt =  3, refCntWtd = 1.25
New refCnts for V04: refCnt =  2, refCntWtd = 1.12
New refCnts for V12: refCnt =  4, refCntWtd = 4.75
New refCnts for V07: refCnt =  5, refCntWtd = 10   
New refCnts for V12: refCnt =  5, refCntWtd = 6.75
New refCnts for V05: refCnt =  1, refCntWtd = 1   
New refCnts for V14: refCnt =  1, refCntWtd = 2   
New refCnts for V14: refCnt =  2, refCntWtd = 4   
New refCnts for V14: refCnt =  3, refCntWtd = 4.50
New refCnts for V13: refCnt =  1, refCntWtd = 0.50
New refCnts for V13: refCnt =  2, refCntWtd = 1   
New refCnts for V13: refCnt =  3, refCntWtd = 1.25
New refCnts for V05: refCnt =  2, refCntWtd = 1.12
New refCnts for V14: refCnt =  4, refCntWtd = 4.75
New refCnts for V07: refCnt =  6, refCntWtd = 12   
New refCnts for V14: refCnt =  5, refCntWtd = 6.75
New refCnts for V07: refCnt =  7, refCntWtd = 14   

*** lvaComputeRefCounts -- implicit counts ***
New refCnts for V01: refCnt =  2, refCntWtd = 2   
New refCnts for V01: refCnt =  3, refCntWtd = 3   
New refCnts for V02: refCnt =  2, refCntWtd = 2   
New refCnts for V02: refCnt =  3, refCntWtd = 3   
New refCnts for V03: refCnt =  2, refCntWtd = 2   
New refCnts for V03: refCnt =  3, refCntWtd = 3   

*************** Finishing PHASE Lowering nodeinfo
Trees after Lowering nodeinfo

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..???)-> BB04 ( cond )                     i label target hascall idxlen new[] newobj LIR 
BB02 [0003]  1       BB01                  0.25    [???..???)-> BB04 ( cond )                     i LIR 
BB03 [0002]  1       BB02                  0.12    [???..???)                                     i LIR 
BB04 [0001]  3       BB01,BB02,BB03        1       [???..???)-> BB07 ( cond )                     i label target hascall idxlen new[] newobj LIR 
BB05 [0008]  1       BB04                  0.25    [???..???)-> BB07 ( cond )                     i LIR 
BB06 [0007]  1       BB05                  0.12    [???..???)                                     i LIR 
BB07 [0006]  3       BB04,BB05,BB06        1       [???..037)        (return)                     i label target hascall idxlen new[] newobj LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..???) -> BB04 (cond), preds={} succs={BB02,BB04}
               [000202] ------------                 IL_OFFSET void   IL offset: 0x0
N003 (  2, 10) [000001] H-----------         t1 =    CNS_INT(h) long   0xd1ffab1e class $1c0
                                                  /--*  t1     long   
               [000211] ------------       t211 = *  PUTARG_REG long   REG rcx
N004 (  1,  1) [000000] ------------         t0 =    CNS_INT   long   5 $200
                                                  /--*  t0     long   
               [000212] ------------       t212 = *  PUTARG_REG long   REG rdx
                                                  /--*  t211   long   arg0 in rcx
                                                  +--*  t212   long   arg1 in rdx
N005 ( 17, 18) [000002] --CXG-------         t2 = *  CALL help ref    HELPER.CORINFO_HELP_NEWARR_1_OBJ $282
                                                  /--*  t2     ref    
N007 ( 17, 18) [000004] DA-XG-------              *  STORE_LCL_VAR ref    V07 tmp1         d:1
N002 (  2, 10) [000010] H-----------        t10 =    CNS_INT(h) long   0xd1ffab1e class $1c1
                                                  /--*  t10    long   
               [000213] ------------       t213 = *  PUTARG_REG long   REG rcx
                                                  /--*  t213   long   arg0 in rcx
N003 ( 16, 16) [000011] --C---------        t11 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $283
                                                  /--*  t11    ref    
N005 ( 16, 16) [000013] DA----------              *  STORE_LCL_VAR ref    V08 tmp2         d:1
N001 (  1,  1) [000008] ------------         t8 =    LCL_VAR   int    V01 arg1         u:1 (last use) $80
                                                  /--*  t8     int    
N002 (  2,  3) [000009] ------------         t9 = *  CAST      long <- int $340
N003 (  1,  1) [000014] ------------        t14 =    LCL_VAR   ref    V08 tmp2         u:1 $283
                                                  /--*  t14    ref    
N005 (  2,  2) [000016] -c----------        t16 = *  LEA(b+8)  byref 
                                                  /--*  t16    byref  
                                                  +--*  t9     long   
               [000203] -A---O------              *  STOREIND  long  
N002 (  1,  1) [000117] ------------       t117 =    LCL_VAR   ref    V07 tmp1         u:1 $300
                                                  /--*  t117   ref    
N004 (  2,  2) [000125] ------------       t125 = *  LEA(b+16) byref 
N007 (  1,  1) [000019] ------------        t19 =    LCL_VAR   ref    V08 tmp2         u:1 (last use) $283
                                                  /--*  t125   byref  
                                                  +--*  t19    ref    
               [000204] -A--G-------              *  STOREIND  ref   
N002 (  2, 10) [000026] H-----------        t26 =    CNS_INT(h) long   0xd1ffab1e class $1c3
                                                  /--*  t26    long   
               [000214] ------------       t214 = *  PUTARG_REG long   REG rcx
                                                  /--*  t214   long   arg0 in rcx
N003 ( 16, 16) [000027] --C---------        t27 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $287
                                                  /--*  t27    ref    
N005 ( 16, 16) [000029] DA----------              *  STORE_LCL_VAR ref    V09 tmp3         d:1
N001 (  2,  2) [000025] ------------        t25 =    LCL_VAR   int    V02 arg2         u:1 (last use) $c0
                                                  /--*  t25    int    
N002 (  3,  4) [000128] ------------       t128 = *  CAST      int <- short <- int $440
N003 (  1,  1) [000030] ------------        t30 =    LCL_VAR   ref    V09 tmp3         u:1 $287
                                                  /--*  t30    ref    
N005 (  2,  2) [000032] -c----------        t32 = *  LEA(b+8)  byref 
                                                  /--*  t32    byref  
                                                  +--*  t128   int    
               [000205] -A---O------              *  STOREIND  int   
N002 (  1,  1) [000129] ------------       t129 =    LCL_VAR   ref    V07 tmp1         u:1 $300
                                                  /--*  t129   ref    
N004 (  2,  2) [000137] ------------       t137 = *  LEA(b+24) byref 
N007 (  1,  1) [000036] ------------        t36 =    LCL_VAR   ref    V09 tmp3         u:1 (last use) $287
                                                  /--*  t137   byref  
                                                  +--*  t36    ref    
               [000206] -A--G-------              *  STOREIND  ref   
N002 (  2, 10) [000043] H-----------        t43 =    CNS_INT(h) long   0xd1ffab1e class $1c4
                                                  /--*  t43    long   
               [000215] ------------       t215 = *  PUTARG_REG long   REG rcx
                                                  /--*  t215   long   arg0 in rcx
N003 ( 16, 16) [000044] --C---------        t44 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $28b
                                                  /--*  t44    ref    
N005 ( 16, 16) [000046] DA----------              *  STORE_LCL_VAR ref    V10 tmp4         d:1
N001 (  2,  2) [000042] ------------        t42 =    LCL_VAR   int    V03 arg3         u:1 (last use) $100
                                                  /--*  t42    int    
N002 (  3,  4) [000140] ------------       t140 = *  CAST      int <- ubyte <- int $441
N003 (  1,  1) [000047] ------------        t47 =    LCL_VAR   ref    V10 tmp4         u:1 $28b
                                                  /--*  t47    ref    
N005 (  2,  2) [000049] -c----------        t49 = *  LEA(b+8)  byref 
                                                  /--*  t49    byref  
                                                  +--*  t140   int    
               [000207] -A---O------              *  STOREIND  short 
N002 (  1,  1) [000141] ------------       t141 =    LCL_VAR   ref    V07 tmp1         u:1 $300
                                                  /--*  t141   ref    
N004 (  2,  2) [000149] ------------       t149 = *  LEA(b+32) byref 
N007 (  1,  1) [000053] ------------        t53 =    LCL_VAR   ref    V10 tmp4         u:1 (last use) $28b
                                                  /--*  t149   byref  
                                                  +--*  t53    ref    
               [000208] -A--G-------              *  STOREIND  ref   
N001 (  3,  2) [000077] ------?-----        t77 =    LCL_VAR   ref    V04 arg4         u:1 $140
                                                  /--*  t77    ref    
N003 (  3,  3) [000178] DA----------              *  STORE_LCL_VAR ref    V12 tmp6         d:1
N001 (  3,  2) [000070] ------------        t70 =    LCL_VAR   ref    V12 tmp6         u:1 $140
N002 (  1,  1) [000069] -c----------        t69 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t70    ref    
                                                  +--*  t69    ref    
N003 (  5,  4) [000071] J------N----              *  EQ        void   $443
N004 (  7,  6) [000175] ------------              *  JTRUE     void  

------------ BB02 [???..???) -> BB04 (cond), preds={BB01} succs={BB03,BB04}
N001 (  1,  1) [000061] ------?-----        t61 =    LCL_VAR   ref    V12 tmp6         u:1 $140
                                                  /--*  t61    ref    
N002 (  3,  2) [000067] #c---O?-----        t67 = *  IND       long   $291
N003 (  2, 10) [000060] H-----?-----        t60 =    CNS_INT(h) long   0xd1ffab1e class $1c5
                                                  /--*  t60    long   
N005 (  6, 13) [000063] DA----?-----              *  STORE_LCL_VAR long   V11 tmp5         d:1
N006 (  3,  2) [000064] ------?-----        t64 =    LCL_VAR   long   V11 tmp5         u:1 $1c5
                                                  /--*  t67    long   
                                                  +--*  t64    long   
N008 ( 13, 18) [000068] J----O?N----              *  EQ        void   $445
N009 ( 15, 20) [000176] -----O------              *  JTRUE     void  

------------ BB03 [???..???), preds={BB02} succs={BB04}
N003 (  3,  2) [000066] ------?-----        t66 =    LCL_VAR   long   V11 tmp5         u:1 (last use) $1c5
                                                  /--*  t66    long   
               [000216] ------------       t216 = *  PUTARG_REG long   REG rcx
N004 (  3,  2) [000073] ------?-----        t73 =    LCL_VAR   ref    V04 arg4         u:1 (last use) $140
                                                  /--*  t73    ref    
               [000217] ------------       t217 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t216   long   arg0 in rcx
                                                  +--*  t217   ref    arg1 in rdx
N005 ( 20, 11) [000074] --CXG-?-----        t74 = *  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL $296
                                                  /--*  t74    ref    
N007 ( 20, 11) [000180] DA-XG-------              *  STORE_LCL_VAR ref    V12 tmp6         d:3

------------ BB04 [???..???) -> BB07 (cond), preds={BB01,BB02,BB03} succs={BB05,BB07}
N001 (  0,  0) [000196] ------------       t196 =    PHI_ARG   ref    V12 tmp6         u:3 $140
N002 (  0,  0) [000193] ------------       t193 =    PHI_ARG   ref    V12 tmp6         u:1 $140
                                                  /--*  t196   ref    
                                                  +--*  t193   ref    
N003 (  0,  0) [000191] ------------       t191 = *  PHI       ref   
                                                  /--*  t191   ref    
N005 (  0,  0) [000192] DA----------              *  STORE_LCL_VAR ref    V12 tmp6         d:2
N002 (  1,  1) [000153] ------------       t153 =    LCL_VAR   ref    V07 tmp1         u:1 $300
                                                  /--*  t153   ref    
N004 (  2,  2) [000161] ------------       t161 = *  LEA(b+40) byref 
N007 (  1,  1) [000082] ------------        t82 =    LCL_VAR   ref    V12 tmp6         u:2 (last use) $140
                                                  /--*  t161   byref  
                                                  +--*  t82    ref    
               [000209] -A--G-------              *  STOREIND  ref   
N001 (  3,  2) [000105] ------?-----       t105 =    LCL_VAR   ref    V05 arg5         u:1 $141
                                                  /--*  t105   ref    
N003 (  3,  3) [000184] DA----------              *  STORE_LCL_VAR ref    V14 tmp8         d:1
N001 (  3,  2) [000098] ------------        t98 =    LCL_VAR   ref    V14 tmp8         u:1 $141
N002 (  1,  1) [000097] -c----------        t97 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t98    ref    
                                                  +--*  t97    ref    
N003 (  5,  4) [000099] J------N----              *  EQ        void   $446
N004 (  7,  6) [000181] ------------              *  JTRUE     void  

------------ BB05 [???..???) -> BB07 (cond), preds={BB04} succs={BB06,BB07}
N001 (  1,  1) [000089] ------?-----        t89 =    LCL_VAR   ref    V14 tmp8         u:1 $141
                                                  /--*  t89    ref    
N002 (  3,  2) [000095] #c---O?-----        t95 = *  IND       long   $29b
N003 (  2, 10) [000088] H-----?-----        t88 =    CNS_INT(h) long   0xd1ffab1e class $1c6
                                                  /--*  t88    long   
N005 (  6, 13) [000091] DA----?-----              *  STORE_LCL_VAR long   V13 tmp7         d:1
N006 (  3,  2) [000092] ------?-----        t92 =    LCL_VAR   long   V13 tmp7         u:1 $1c6
                                                  /--*  t95    long   
                                                  +--*  t92    long   
N008 ( 13, 18) [000096] J----O?N----              *  EQ        void   $448
N009 ( 15, 20) [000182] -----O------              *  JTRUE     void  

------------ BB06 [???..???), preds={BB05} succs={BB07}
N003 (  3,  2) [000094] ------?-----        t94 =    LCL_VAR   long   V13 tmp7         u:1 (last use) $1c6
                                                  /--*  t94    long   
               [000218] ------------       t218 = *  PUTARG_REG long   REG rcx
N004 (  3,  2) [000101] ------?-----       t101 =    LCL_VAR   ref    V05 arg5         u:1 (last use) $141
                                                  /--*  t101   ref    
               [000219] ------------       t219 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t218   long   arg0 in rcx
                                                  +--*  t219   ref    arg1 in rdx
N005 ( 20, 11) [000102] --CXG-?-----       t102 = *  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL $2a0
                                                  /--*  t102   ref    
N007 ( 20, 11) [000186] DA-XG-------              *  STORE_LCL_VAR ref    V14 tmp8         d:3

------------ BB07 [???..037) (return), preds={BB04,BB05,BB06} succs={}
N001 (  0,  0) [000195] ------------       t195 =    PHI_ARG   ref    V14 tmp8         u:3 $141
N002 (  0,  0) [000194] ------------       t194 =    PHI_ARG   ref    V14 tmp8         u:1 $141
                                                  /--*  t195   ref    
                                                  +--*  t194   ref    
N003 (  0,  0) [000188] ------------       t188 = *  PHI       ref   
                                                  /--*  t188   ref    
N005 (  0,  0) [000189] DA----------              *  STORE_LCL_VAR ref    V14 tmp8         d:2
N002 (  1,  1) [000165] ------------       t165 =    LCL_VAR   ref    V07 tmp1         u:1 $300
                                                  /--*  t165   ref    
N004 (  2,  2) [000173] ------------       t173 = *  LEA(b+48) byref 
N007 (  1,  1) [000110] ------------       t110 =    LCL_VAR   ref    V14 tmp8         u:2 (last use) $141
                                                  /--*  t173   byref  
                                                  +--*  t110   ref    
               [000210] -A--G-------              *  STOREIND  ref   
N001 (  1,  1) [000005] ------------         t5 =    LCL_VAR   ref    V07 tmp1         u:1 (last use) $300
                                                  /--*  t5     ref    
N002 (  2,  2) [000113] ------------              *  RETURN    ref    $2d1

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Trees before Calculate stack level slots

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..???)-> BB04 ( cond )                     i label target hascall idxlen new[] newobj LIR 
BB02 [0003]  1       BB01                  0.25    [???..???)-> BB04 ( cond )                     i LIR 
BB03 [0002]  1       BB02                  0.12    [???..???)                                     i LIR 
BB04 [0001]  3       BB01,BB02,BB03        1       [???..???)-> BB07 ( cond )                     i label target hascall idxlen new[] newobj LIR 
BB05 [0008]  1       BB04                  0.25    [???..???)-> BB07 ( cond )                     i LIR 
BB06 [0007]  1       BB05                  0.12    [???..???)                                     i LIR 
BB07 [0006]  3       BB04,BB05,BB06        1       [???..037)        (return)                     i label target hascall idxlen new[] newobj LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..???) -> BB04 (cond), preds={} succs={BB02,BB04}
               [000202] ------------                 IL_OFFSET void   IL offset: 0x0
N003 (  2, 10) [000001] H-----------         t1 =    CNS_INT(h) long   0xd1ffab1e class $1c0
                                                  /--*  t1     long   
               [000211] ------------       t211 = *  PUTARG_REG long   REG rcx
N004 (  1,  1) [000000] ------------         t0 =    CNS_INT   long   5 $200
                                                  /--*  t0     long   
               [000212] ------------       t212 = *  PUTARG_REG long   REG rdx
                                                  /--*  t211   long   arg0 in rcx
                                                  +--*  t212   long   arg1 in rdx
N005 ( 17, 18) [000002] --CXG-------         t2 = *  CALL help ref    HELPER.CORINFO_HELP_NEWARR_1_OBJ $282
                                                  /--*  t2     ref    
N007 ( 17, 18) [000004] DA-XG-------              *  STORE_LCL_VAR ref    V07 tmp1         d:1
N002 (  2, 10) [000010] H-----------        t10 =    CNS_INT(h) long   0xd1ffab1e class $1c1
                                                  /--*  t10    long   
               [000213] ------------       t213 = *  PUTARG_REG long   REG rcx
                                                  /--*  t213   long   arg0 in rcx
N003 ( 16, 16) [000011] --C---------        t11 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $283
                                                  /--*  t11    ref    
N005 ( 16, 16) [000013] DA----------              *  STORE_LCL_VAR ref    V08 tmp2         d:1
N001 (  1,  1) [000008] ------------         t8 =    LCL_VAR   int    V01 arg1         u:1 (last use) $80
                                                  /--*  t8     int    
N002 (  2,  3) [000009] ------------         t9 = *  CAST      long <- int $340
N003 (  1,  1) [000014] ------------        t14 =    LCL_VAR   ref    V08 tmp2         u:1 $283
                                                  /--*  t14    ref    
N005 (  2,  2) [000016] -c----------        t16 = *  LEA(b+8)  byref 
                                                  /--*  t16    byref  
                                                  +--*  t9     long   
               [000203] -A---O------              *  STOREIND  long  
N002 (  1,  1) [000117] ------------       t117 =    LCL_VAR   ref    V07 tmp1         u:1 $300
                                                  /--*  t117   ref    
N004 (  2,  2) [000125] ------------       t125 = *  LEA(b+16) byref 
N007 (  1,  1) [000019] ------------        t19 =    LCL_VAR   ref    V08 tmp2         u:1 (last use) $283
                                                  /--*  t125   byref  
                                                  +--*  t19    ref    
               [000204] -A--G-------              *  STOREIND  ref   
N002 (  2, 10) [000026] H-----------        t26 =    CNS_INT(h) long   0xd1ffab1e class $1c3
                                                  /--*  t26    long   
               [000214] ------------       t214 = *  PUTARG_REG long   REG rcx
                                                  /--*  t214   long   arg0 in rcx
N003 ( 16, 16) [000027] --C---------        t27 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $287
                                                  /--*  t27    ref    
N005 ( 16, 16) [000029] DA----------              *  STORE_LCL_VAR ref    V09 tmp3         d:1
N001 (  2,  2) [000025] ------------        t25 =    LCL_VAR   int    V02 arg2         u:1 (last use) $c0
                                                  /--*  t25    int    
N002 (  3,  4) [000128] ------------       t128 = *  CAST      int <- short <- int $440
N003 (  1,  1) [000030] ------------        t30 =    LCL_VAR   ref    V09 tmp3         u:1 $287
                                                  /--*  t30    ref    
N005 (  2,  2) [000032] -c----------        t32 = *  LEA(b+8)  byref 
                                                  /--*  t32    byref  
                                                  +--*  t128   int    
               [000205] -A---O------              *  STOREIND  int   
N002 (  1,  1) [000129] ------------       t129 =    LCL_VAR   ref    V07 tmp1         u:1 $300
                                                  /--*  t129   ref    
N004 (  2,  2) [000137] ------------       t137 = *  LEA(b+24) byref 
N007 (  1,  1) [000036] ------------        t36 =    LCL_VAR   ref    V09 tmp3         u:1 (last use) $287
                                                  /--*  t137   byref  
                                                  +--*  t36    ref    
               [000206] -A--G-------              *  STOREIND  ref   
N002 (  2, 10) [000043] H-----------        t43 =    CNS_INT(h) long   0xd1ffab1e class $1c4
                                                  /--*  t43    long   
               [000215] ------------       t215 = *  PUTARG_REG long   REG rcx
                                                  /--*  t215   long   arg0 in rcx
N003 ( 16, 16) [000044] --C---------        t44 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $28b
                                                  /--*  t44    ref    
N005 ( 16, 16) [000046] DA----------              *  STORE_LCL_VAR ref    V10 tmp4         d:1
N001 (  2,  2) [000042] ------------        t42 =    LCL_VAR   int    V03 arg3         u:1 (last use) $100
                                                  /--*  t42    int    
N002 (  3,  4) [000140] ------------       t140 = *  CAST      int <- ubyte <- int $441
N003 (  1,  1) [000047] ------------        t47 =    LCL_VAR   ref    V10 tmp4         u:1 $28b
                                                  /--*  t47    ref    
N005 (  2,  2) [000049] -c----------        t49 = *  LEA(b+8)  byref 
                                                  /--*  t49    byref  
                                                  +--*  t140   int    
               [000207] -A---O------              *  STOREIND  short 
N002 (  1,  1) [000141] ------------       t141 =    LCL_VAR   ref    V07 tmp1         u:1 $300
                                                  /--*  t141   ref    
N004 (  2,  2) [000149] ------------       t149 = *  LEA(b+32) byref 
N007 (  1,  1) [000053] ------------        t53 =    LCL_VAR   ref    V10 tmp4         u:1 (last use) $28b
                                                  /--*  t149   byref  
                                                  +--*  t53    ref    
               [000208] -A--G-------              *  STOREIND  ref   
N001 (  3,  2) [000077] ------?-----        t77 =    LCL_VAR   ref    V04 arg4         u:1 $140
                                                  /--*  t77    ref    
N003 (  3,  3) [000178] DA----------              *  STORE_LCL_VAR ref    V12 tmp6         d:1
N001 (  3,  2) [000070] ------------        t70 =    LCL_VAR   ref    V12 tmp6         u:1 $140
N002 (  1,  1) [000069] -c----------        t69 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t70    ref    
                                                  +--*  t69    ref    
N003 (  5,  4) [000071] J------N----              *  EQ        void   $443
N004 (  7,  6) [000175] ------------              *  JTRUE     void  

------------ BB02 [???..???) -> BB04 (cond), preds={BB01} succs={BB03,BB04}
N001 (  1,  1) [000061] ------?-----        t61 =    LCL_VAR   ref    V12 tmp6         u:1 $140
                                                  /--*  t61    ref    
N002 (  3,  2) [000067] #c---O?-----        t67 = *  IND       long   $291
N003 (  2, 10) [000060] H-----?-----        t60 =    CNS_INT(h) long   0xd1ffab1e class $1c5
                                                  /--*  t60    long   
N005 (  6, 13) [000063] DA----?-----              *  STORE_LCL_VAR long   V11 tmp5         d:1
N006 (  3,  2) [000064] ------?-----        t64 =    LCL_VAR   long   V11 tmp5         u:1 $1c5
                                                  /--*  t67    long   
                                                  +--*  t64    long   
N008 ( 13, 18) [000068] J----O?N----              *  EQ        void   $445
N009 ( 15, 20) [000176] -----O------              *  JTRUE     void  

------------ BB03 [???..???), preds={BB02} succs={BB04}
N003 (  3,  2) [000066] ------?-----        t66 =    LCL_VAR   long   V11 tmp5         u:1 (last use) $1c5
                                                  /--*  t66    long   
               [000216] ------------       t216 = *  PUTARG_REG long   REG rcx
N004 (  3,  2) [000073] ------?-----        t73 =    LCL_VAR   ref    V04 arg4         u:1 (last use) $140
                                                  /--*  t73    ref    
               [000217] ------------       t217 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t216   long   arg0 in rcx
                                                  +--*  t217   ref    arg1 in rdx
N005 ( 20, 11) [000074] --CXG-?-----        t74 = *  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL $296
                                                  /--*  t74    ref    
N007 ( 20, 11) [000180] DA-XG-------              *  STORE_LCL_VAR ref    V12 tmp6         d:3

------------ BB04 [???..???) -> BB07 (cond), preds={BB01,BB02,BB03} succs={BB05,BB07}
N001 (  0,  0) [000196] ------------       t196 =    PHI_ARG   ref    V12 tmp6         u:3 $140
N002 (  0,  0) [000193] ------------       t193 =    PHI_ARG   ref    V12 tmp6         u:1 $140
                                                  /--*  t196   ref    
                                                  +--*  t193   ref    
N003 (  0,  0) [000191] ------------       t191 = *  PHI       ref   
                                                  /--*  t191   ref    
N005 (  0,  0) [000192] DA----------              *  STORE_LCL_VAR ref    V12 tmp6         d:2
N002 (  1,  1) [000153] ------------       t153 =    LCL_VAR   ref    V07 tmp1         u:1 $300
                                                  /--*  t153   ref    
N004 (  2,  2) [000161] ------------       t161 = *  LEA(b+40) byref 
N007 (  1,  1) [000082] ------------        t82 =    LCL_VAR   ref    V12 tmp6         u:2 (last use) $140
                                                  /--*  t161   byref  
                                                  +--*  t82    ref    
               [000209] -A--G-------              *  STOREIND  ref   
N001 (  3,  2) [000105] ------?-----       t105 =    LCL_VAR   ref    V05 arg5         u:1 $141
                                                  /--*  t105   ref    
N003 (  3,  3) [000184] DA----------              *  STORE_LCL_VAR ref    V14 tmp8         d:1
N001 (  3,  2) [000098] ------------        t98 =    LCL_VAR   ref    V14 tmp8         u:1 $141
N002 (  1,  1) [000097] -c----------        t97 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t98    ref    
                                                  +--*  t97    ref    
N003 (  5,  4) [000099] J------N----              *  EQ        void   $446
N004 (  7,  6) [000181] ------------              *  JTRUE     void  

------------ BB05 [???..???) -> BB07 (cond), preds={BB04} succs={BB06,BB07}
N001 (  1,  1) [000089] ------?-----        t89 =    LCL_VAR   ref    V14 tmp8         u:1 $141
                                                  /--*  t89    ref    
N002 (  3,  2) [000095] #c---O?-----        t95 = *  IND       long   $29b
N003 (  2, 10) [000088] H-----?-----        t88 =    CNS_INT(h) long   0xd1ffab1e class $1c6
                                                  /--*  t88    long   
N005 (  6, 13) [000091] DA----?-----              *  STORE_LCL_VAR long   V13 tmp7         d:1
N006 (  3,  2) [000092] ------?-----        t92 =    LCL_VAR   long   V13 tmp7         u:1 $1c6
                                                  /--*  t95    long   
                                                  +--*  t92    long   
N008 ( 13, 18) [000096] J----O?N----              *  EQ        void   $448
N009 ( 15, 20) [000182] -----O------              *  JTRUE     void  

------------ BB06 [???..???), preds={BB05} succs={BB07}
N003 (  3,  2) [000094] ------?-----        t94 =    LCL_VAR   long   V13 tmp7         u:1 (last use) $1c6
                                                  /--*  t94    long   
               [000218] ------------       t218 = *  PUTARG_REG long   REG rcx
N004 (  3,  2) [000101] ------?-----       t101 =    LCL_VAR   ref    V05 arg5         u:1 (last use) $141
                                                  /--*  t101   ref    
               [000219] ------------       t219 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t218   long   arg0 in rcx
                                                  +--*  t219   ref    arg1 in rdx
N005 ( 20, 11) [000102] --CXG-?-----       t102 = *  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL $2a0
                                                  /--*  t102   ref    
N007 ( 20, 11) [000186] DA-XG-------              *  STORE_LCL_VAR ref    V14 tmp8         d:3

------------ BB07 [???..037) (return), preds={BB04,BB05,BB06} succs={}
N001 (  0,  0) [000195] ------------       t195 =    PHI_ARG   ref    V14 tmp8         u:3 $141
N002 (  0,  0) [000194] ------------       t194 =    PHI_ARG   ref    V14 tmp8         u:1 $141
                                                  /--*  t195   ref    
                                                  +--*  t194   ref    
N003 (  0,  0) [000188] ------------       t188 = *  PHI       ref   
                                                  /--*  t188   ref    
N005 (  0,  0) [000189] DA----------              *  STORE_LCL_VAR ref    V14 tmp8         d:2
N002 (  1,  1) [000165] ------------       t165 =    LCL_VAR   ref    V07 tmp1         u:1 $300
                                                  /--*  t165   ref    
N004 (  2,  2) [000173] ------------       t173 = *  LEA(b+48) byref 
N007 (  1,  1) [000110] ------------       t110 =    LCL_VAR   ref    V14 tmp8         u:2 (last use) $141
                                                  /--*  t173   byref  
                                                  +--*  t110   ref    
               [000210] -A--G-------              *  STOREIND  ref   
N001 (  1,  1) [000005] ------------         t5 =    LCL_VAR   ref    V07 tmp1         u:1 (last use) $300
                                                  /--*  t5     ref    
N002 (  2,  2) [000113] ------------              *  RETURN    ref    $2d1

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Calculate stack level slots

*************** Finishing PHASE Calculate stack level slots [no changes]

*************** Starting PHASE Linear scan register alloc
Clearing modified regs.

buildIntervals ========

-----------------
LIVENESS:
-----------------
BB01 use def in out
{V01 V02 V03 V04}
{V07 V08 V09 V10 V12}
{V01 V02 V03 V04 V05}
{V04 V05 V07 V12}
BB02 use def in out
{V12}
{V11}
{V04 V05 V07 V12}
{V04 V05 V07 V11 V12}
BB03 use def in out
{V04 V11}
{V12}
{V04 V05 V07 V11}
{V05 V07 V12}
BB04 use def in out
{V05 V07 V12}
{V14}
{V05 V07 V12}
{V05 V07 V14}
BB05 use def in out
{V14}
{V13}
{V05 V07 V14}
{V05 V07 V13 V14}
BB06 use def in out
{V05 V13}
{V14}
{V05 V07 V13}
{V07 V14}
BB07 use def in out
{V07 V14}
{}
{V07 V14}
{}
Interval  0: int RefPositions {} physReg:NA Preferences=[allInt]
  Interval  0: (V01) int RefPositions {} physReg:NA Preferences=[allInt]
Interval  1: int RefPositions {} physReg:NA Preferences=[allInt]
  Interval  1: (V02) int RefPositions {} physReg:NA Preferences=[allInt]
Interval  2: int RefPositions {} physReg:NA Preferences=[allInt]
  Interval  2: (V03) int RefPositions {} physReg:NA Preferences=[allInt]
Interval  3: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  3: (V04) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  4: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  4: (V05) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  5: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  5: (V07) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  6: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  6: (V08) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  7: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  7: (V09) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  8: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  8: (V10) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  9: long RefPositions {} physReg:NA Preferences=[allInt]
  Interval  9: (V11) long RefPositions {} physReg:NA Preferences=[allInt]
Interval 10: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 10: (V12) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 11: long RefPositions {} physReg:NA Preferences=[allInt]
  Interval 11: (V13) long RefPositions {} physReg:NA Preferences=[allInt]
Interval 12: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 12: (V14) ref RefPositions {} physReg:NA Preferences=[allInt]

FP callee save candidate vars: None

floatVarCount = 0; hasLoops = 0, singleExit = 1
TUPLE STYLE DUMP BEFORE LSRA
LSRA Block Sequence: BB01(  1   ) 
BB02(  0.25) 
BB03(  0.12) 
BB04(  1   ) 
BB05(  0.25) 
BB06(  0.12) 
BB07(  1   ) 

BB01 [000..???) -> BB04 (cond), preds={} succs={BB02,BB04}
=====
  N000.                    IL_OFFSET IL offset: 0x0
  N003. t1              =  CNS_INT(h) 0xd1ffab1e class
  N000. t211            =  PUTARG_REG; t1
  N004. t0              =  CNS_INT   5
  N000. t212            =  PUTARG_REG; t0
  N005. t2              =  CALL help; t211,t212
  N007.                    V07(t4); t2
  N002. t10             =  CNS_INT(h) 0xd1ffab1e class
  N000. t213            =  PUTARG_REG; t10
  N003. t11             =  CALL help; t213
  N005.                    V08(t13); t11
  N001.                    V01(t8*)
  N002. t9              =  CAST     ; t8*
  N003.                    V08(t14)
  N005. t16             =  LEA(b+8) ; t14
  N000.                    STOREIND ; t16,t9
  N002.                    V07(t117)
  N004. t125            =  LEA(b+16); t117
  N007.                    V08(t19*)
  N000.                    STOREIND ; t125,t19*
  N002. t26             =  CNS_INT(h) 0xd1ffab1e class
  N000. t214            =  PUTARG_REG; t26
  N003. t27             =  CALL help; t214
  N005.                    V09(t29); t27
  N001.                    V02(t25*)
  N002. t128            =  CAST     ; t25*
  N003.                    V09(t30)
  N005. t32             =  LEA(b+8) ; t30
  N000.                    STOREIND ; t32,t128
  N002.                    V07(t129)
  N004. t137            =  LEA(b+24); t129
  N007.                    V09(t36*)
  N000.                    STOREIND ; t137,t36*
  N002. t43             =  CNS_INT(h) 0xd1ffab1e class
  N000. t215            =  PUTARG_REG; t43
  N003. t44             =  CALL help; t215
  N005.                    V10(t46); t44
  N001.                    V03(t42*)
  N002. t140            =  CAST     ; t42*
  N003.                    V10(t47)
  N005. t49             =  LEA(b+8) ; t47
  N000.                    STOREIND ; t49,t140
  N002.                    V07(t141)
  N004. t149            =  LEA(b+32); t141
  N007.                    V10(t53*)
  N000.                    STOREIND ; t149,t53*
  N001.                    V04(t77)
  N003.                    V12(t178); t77
  N001.                    V12(t70)
  N002.                    CNS_INT   null
  N003.                    EQ       ; t70
  N004.                    JTRUE    

BB02 [???..???) -> BB04 (cond), preds={BB01} succs={BB03,BB04}
=====
  N001.                    V12(t61)
  N002. t67             =  IND      ; t61
  N003. t60             =  CNS_INT(h) 0xd1ffab1e class
  N005.                    V11(t63); t60
  N006.                    V11(t64)
  N008.                    EQ       ; t67,t64
  N009.                    JTRUE    

BB03 [???..???), preds={BB02} succs={BB04}
=====
  N003.                    V11(t66*)
  N000. t216            =  PUTARG_REG; t66*
  N004.                    V04(t73*)
  N000. t217            =  PUTARG_REG; t73*
  N005. t74             =  CALL help; t216,t217
  N007.                    V12(t180); t74

BB04 [???..???) -> BB07 (cond), preds={BB01,BB02,BB03} succs={BB05,BB07}
=====
  N002.                    V07(t153)
  N004. t161            =  LEA(b+40); t153
  N007.                    V12(t82*)
  N000.                    STOREIND ; t161,t82*
  N001.                    V05(t105)
  N003.                    V14(t184); t105
  N001.                    V14(t98)
  N002.                    CNS_INT   null
  N003.                    EQ       ; t98
  N004.                    JTRUE    

BB05 [???..???) -> BB07 (cond), preds={BB04} succs={BB06,BB07}
=====
  N001.                    V14(t89)
  N002. t95             =  IND      ; t89
  N003. t88             =  CNS_INT(h) 0xd1ffab1e class
  N005.                    V13(t91); t88
  N006.                    V13(t92)
  N008.                    EQ       ; t95,t92
  N009.                    JTRUE    

BB06 [???..???), preds={BB05} succs={BB07}
=====
  N003.                    V13(t94*)
  N000. t218            =  PUTARG_REG; t94*
  N004.                    V05(t101*)
  N000. t219            =  PUTARG_REG; t101*
  N005. t102            =  CALL help; t218,t219
  N007.                    V14(t186); t102

BB07 [???..037) (return), preds={BB04,BB05,BB06} succs={}
=====
  N002.                    V07(t165)
  N004. t173            =  LEA(b+48); t165
  N007.                    V14(t110*)
  N000.                    STOREIND ; t173,t110*
  N001.                    V07(t5*)
  N002.                    RETURN   ; t5*




buildIntervals second part ========
Int arg V01 in reg rdx
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V01>  BB00 regmask=[rdx] minReg=1 fixed>
Int arg V02 in reg r8
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V02>  BB00 regmask=[r8] minReg=1 fixed>
Int arg V03 in reg r9
<RefPosition #2   @0   RefTypeParamDef <Ivl:2 V03>  BB00 regmask=[r9] minReg=1 fixed>
<RefPosition #3   @0   RefTypeParamDef <Ivl:3 V04>  BB00 regmask=[allInt] minReg=1>
<RefPosition #4   @0   RefTypeParamDef <Ivl:4 V05>  BB00 regmask=[allInt] minReg=1>
Int arg V00 in reg rcx

NEW BLOCK BB01
<RefPosition #5   @1   RefTypeBB  BB01 regmask=[] minReg=1>

DefList: {  }
N003 (???,???) [000202] ------------              *  IL_OFFSET void   IL offset: 0x0 REG NA

DefList: {  }
N005 (  2, 10) [000001] H-----------              *  CNS_INT(h) long   0xd1ffab1e class REG NA $1c0
Interval 13: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #6   @6   RefTypeDef <Ivl:13> CNS_INT BB01 regmask=[allInt] minReg=1>

DefList: { N005.t1. CNS_INT }
N007 (???,???) [000211] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #7   @7   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #8   @7   RefTypeUse <Ivl:13>  BB01 regmask=[rcx] minReg=1 last fixed>
Interval 14: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #9   @8   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #10  @8   RefTypeDef <Ivl:14> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>

DefList: { N007.t211. PUTARG_REG }
N009 (  1,  1) [000000] ------------              *  CNS_INT   long   5 REG NA $200
Interval 15: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #11  @10  RefTypeDef <Ivl:15> CNS_INT BB01 regmask=[allInt] minReg=1>

DefList: { N007.t211. PUTARG_REG; N009.t0. CNS_INT }
N011 (???,???) [000212] ------------              *  PUTARG_REG long   REG rdx
<RefPosition #12  @11  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #13  @11  RefTypeUse <Ivl:15>  BB01 regmask=[rdx] minReg=1 last fixed>
Interval 16: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #14  @12  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #15  @12  RefTypeDef <Ivl:16> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>

DefList: { N007.t211. PUTARG_REG; N011.t212. PUTARG_REG }
N013 ( 17, 18) [000002] --CXG-------              *  CALL help ref    HELPER.CORINFO_HELP_NEWARR_1_OBJ REG NA $282
<RefPosition #16  @13  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #17  @13  RefTypeUse <Ivl:14>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #18  @13  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #19  @13  RefTypeUse <Ivl:16>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #20  @14  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #21  @14  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #22  @14  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #23  @14  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #24  @14  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #25  @14  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #26  @14  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
Interval 17: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #27  @14  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #28  @14  RefTypeDef <Ivl:17> CALL BB01 regmask=[rax] minReg=1 fixed>

DefList: { N013.t2. CALL }
N015 ( 17, 18) [000004] DA-XG-------              *  STORE_LCL_VAR ref    V07 tmp1         d:1 NA REG NA
<RefPosition #29  @15  RefTypeUse <Ivl:17>  BB01 regmask=[allInt] minReg=1 last>
Assigning related <V07/L5> to <I17>
<RefPosition #30  @16  RefTypeDef <Ivl:5 V07> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N017 (  2, 10) [000010] H-----------              *  CNS_INT(h) long   0xd1ffab1e class REG NA $1c1
Interval 18: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #31  @18  RefTypeDef <Ivl:18> CNS_INT BB01 regmask=[allInt] minReg=1>

DefList: { N017.t10. CNS_INT }
N019 (???,???) [000213] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #32  @19  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #33  @19  RefTypeUse <Ivl:18>  BB01 regmask=[rcx] minReg=1 last fixed>
Interval 19: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #34  @20  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #35  @20  RefTypeDef <Ivl:19> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>

DefList: { N019.t213. PUTARG_REG }
N021 ( 16, 16) [000011] --C---------              *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG NA $283
<RefPosition #36  @21  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #37  @21  RefTypeUse <Ivl:19>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #38  @22  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #39  @22  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #40  @22  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #41  @22  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #42  @22  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #43  @22  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #44  @22  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
Interval 20: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #45  @22  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #46  @22  RefTypeDef <Ivl:20> CALL BB01 regmask=[rax] minReg=1 fixed>

DefList: { N021.t11. CALL }
N023 ( 16, 16) [000013] DA----------              *  STORE_LCL_VAR ref    V08 tmp2         d:1 NA REG NA
<RefPosition #47  @23  RefTypeUse <Ivl:20>  BB01 regmask=[allInt] minReg=1 last>
Assigning related <V08/L6> to <I20>
<RefPosition #48  @24  RefTypeDef <Ivl:6 V08> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N025 (  1,  1) [000008] ------------              *  LCL_VAR   int    V01 arg1         u:1 NA (last use) REG NA $80

DefList: {  }
N027 (  2,  3) [000009] ------------              *  CAST      long <- int REG NA $340
<RefPosition #49  @27  RefTypeUse <Ivl:0 V01> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
Interval 21: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #50  @28  RefTypeDef <Ivl:21> CAST BB01 regmask=[allInt] minReg=1>

DefList: { N027.t9. CAST }
N029 (  1,  1) [000014] ------------              *  LCL_VAR   ref    V08 tmp2         u:1 NA REG NA $283

DefList: { N027.t9. CAST }
N031 (  2,  2) [000016] -c----------              *  LEA(b+8)  byref  REG NA
Contained
DefList: { N027.t9. CAST }
N033 (???,???) [000203] -A---O------              *  STOREIND  long   REG NA
<RefPosition #51  @33  RefTypeUse <Ivl:6 V08> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #52  @33  RefTypeUse <Ivl:21>  BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N035 (  1,  1) [000117] ------------              *  LCL_VAR   ref    V07 tmp1         u:1 NA REG NA $300

DefList: {  }
N037 (  2,  2) [000125] ------------              *  LEA(b+16) byref  REG NA
<RefPosition #53  @37  RefTypeUse <Ivl:5 V07> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
Interval 22: byref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #54  @38  RefTypeDef <Ivl:22> LEA BB01 regmask=[allInt] minReg=1>

DefList: { N037.t125. LEA }
N039 (  1,  1) [000019] ------------              *  LCL_VAR   ref    V08 tmp2         u:1 NA (last use) REG NA $283

DefList: { N037.t125. LEA }
N041 (???,???) [000204] -A--G-------              *  STOREIND  ref    REG NA
<RefPosition #55  @41  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #56  @41  RefTypeUse <Ivl:22>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #57  @41  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #58  @41  RefTypeUse <Ivl:6 V08> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #59  @42  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #60  @42  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #61  @42  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #62  @42  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #63  @42  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #64  @42  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #65  @42  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
<RefPosition #66  @42  RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1>
<RefPosition #67  @42  RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1>
<RefPosition #68  @42  RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1>
<RefPosition #69  @42  RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1>
<RefPosition #70  @42  RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1>
<RefPosition #71  @42  RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1>

DefList: {  }
N043 (  2, 10) [000026] H-----------              *  CNS_INT(h) long   0xd1ffab1e class REG NA $1c3
Interval 23: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #72  @44  RefTypeDef <Ivl:23> CNS_INT BB01 regmask=[allInt] minReg=1>

DefList: { N043.t26. CNS_INT }
N045 (???,???) [000214] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #73  @45  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #74  @45  RefTypeUse <Ivl:23>  BB01 regmask=[rcx] minReg=1 last fixed>
Interval 24: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #75  @46  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #76  @46  RefTypeDef <Ivl:24> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>

DefList: { N045.t214. PUTARG_REG }
N047 ( 16, 16) [000027] --C---------              *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG NA $287
<RefPosition #77  @47  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #78  @47  RefTypeUse <Ivl:24>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #79  @48  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #80  @48  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #81  @48  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #82  @48  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #83  @48  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #84  @48  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #85  @48  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
Interval 25: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #86  @48  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #87  @48  RefTypeDef <Ivl:25> CALL BB01 regmask=[rax] minReg=1 fixed>

DefList: { N047.t27. CALL }
N049 ( 16, 16) [000029] DA----------              *  STORE_LCL_VAR ref    V09 tmp3         d:1 NA REG NA
<RefPosition #88  @49  RefTypeUse <Ivl:25>  BB01 regmask=[allInt] minReg=1 last>
Assigning related <V09/L7> to <I25>
<RefPosition #89  @50  RefTypeDef <Ivl:7 V09> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N051 (  2,  2) [000025] ------------              *  LCL_VAR   int    V02 arg2         u:1 NA (last use) REG NA $c0

DefList: {  }
N053 (  3,  4) [000128] ------------              *  CAST      int <- short <- int REG NA $440
<RefPosition #90  @53  RefTypeUse <Ivl:1 V02> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
Interval 26: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #91  @54  RefTypeDef <Ivl:26> CAST BB01 regmask=[allInt] minReg=1>

DefList: { N053.t128. CAST }
N055 (  1,  1) [000030] ------------              *  LCL_VAR   ref    V09 tmp3         u:1 NA REG NA $287

DefList: { N053.t128. CAST }
N057 (  2,  2) [000032] -c----------              *  LEA(b+8)  byref  REG NA
Contained
DefList: { N053.t128. CAST }
N059 (???,???) [000205] -A---O------              *  STOREIND  int    REG NA
<RefPosition #92  @59  RefTypeUse <Ivl:7 V09> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #93  @59  RefTypeUse <Ivl:26>  BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N061 (  1,  1) [000129] ------------              *  LCL_VAR   ref    V07 tmp1         u:1 NA REG NA $300

DefList: {  }
N063 (  2,  2) [000137] ------------              *  LEA(b+24) byref  REG NA
<RefPosition #94  @63  RefTypeUse <Ivl:5 V07> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
Interval 27: byref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #95  @64  RefTypeDef <Ivl:27> LEA BB01 regmask=[allInt] minReg=1>

DefList: { N063.t137. LEA }
N065 (  1,  1) [000036] ------------              *  LCL_VAR   ref    V09 tmp3         u:1 NA (last use) REG NA $287

DefList: { N063.t137. LEA }
N067 (???,???) [000206] -A--G-------              *  STOREIND  ref    REG NA
<RefPosition #96  @67  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #97  @67  RefTypeUse <Ivl:27>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #98  @67  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #99  @67  RefTypeUse <Ivl:7 V09> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #100 @68  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #101 @68  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #102 @68  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #103 @68  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #104 @68  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #105 @68  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #106 @68  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
<RefPosition #107 @68  RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1>
<RefPosition #108 @68  RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1>
<RefPosition #109 @68  RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1>
<RefPosition #110 @68  RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1>
<RefPosition #111 @68  RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1>
<RefPosition #112 @68  RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1>

DefList: {  }
N069 (  2, 10) [000043] H-----------              *  CNS_INT(h) long   0xd1ffab1e class REG NA $1c4
Interval 28: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #113 @70  RefTypeDef <Ivl:28> CNS_INT BB01 regmask=[allInt] minReg=1>

DefList: { N069.t43. CNS_INT }
N071 (???,???) [000215] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #114 @71  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #115 @71  RefTypeUse <Ivl:28>  BB01 regmask=[rcx] minReg=1 last fixed>
Interval 29: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #116 @72  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #117 @72  RefTypeDef <Ivl:29> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>

DefList: { N071.t215. PUTARG_REG }
N073 ( 16, 16) [000044] --C---------              *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG NA $28b
<RefPosition #118 @73  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #119 @73  RefTypeUse <Ivl:29>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #120 @74  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #121 @74  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #122 @74  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #123 @74  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #124 @74  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #125 @74  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #126 @74  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
Interval 30: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #127 @74  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #128 @74  RefTypeDef <Ivl:30> CALL BB01 regmask=[rax] minReg=1 fixed>

DefList: { N073.t44. CALL }
N075 ( 16, 16) [000046] DA----------              *  STORE_LCL_VAR ref    V10 tmp4         d:1 NA REG NA
<RefPosition #129 @75  RefTypeUse <Ivl:30>  BB01 regmask=[allInt] minReg=1 last>
Assigning related <V10/L8> to <I30>
<RefPosition #130 @76  RefTypeDef <Ivl:8 V10> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N077 (  2,  2) [000042] ------------              *  LCL_VAR   int    V03 arg3         u:1 NA (last use) REG NA $100

DefList: {  }
N079 (  3,  4) [000140] ------------              *  CAST      int <- ubyte <- int REG NA $441
<RefPosition #131 @79  RefTypeUse <Ivl:2 V03> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
Interval 31: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #132 @80  RefTypeDef <Ivl:31> CAST BB01 regmask=[allInt] minReg=1>

DefList: { N079.t140. CAST }
N081 (  1,  1) [000047] ------------              *  LCL_VAR   ref    V10 tmp4         u:1 NA REG NA $28b

DefList: { N079.t140. CAST }
N083 (  2,  2) [000049] -c----------              *  LEA(b+8)  byref  REG NA
Contained
DefList: { N079.t140. CAST }
N085 (???,???) [000207] -A---O------              *  STOREIND  short  REG NA
<RefPosition #133 @85  RefTypeUse <Ivl:8 V10> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #134 @85  RefTypeUse <Ivl:31>  BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N087 (  1,  1) [000141] ------------              *  LCL_VAR   ref    V07 tmp1         u:1 NA REG NA $300

DefList: {  }
N089 (  2,  2) [000149] ------------              *  LEA(b+32) byref  REG NA
<RefPosition #135 @89  RefTypeUse <Ivl:5 V07> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
Interval 32: byref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #136 @90  RefTypeDef <Ivl:32> LEA BB01 regmask=[allInt] minReg=1>

DefList: { N089.t149. LEA }
N091 (  1,  1) [000053] ------------              *  LCL_VAR   ref    V10 tmp4         u:1 NA (last use) REG NA $28b

DefList: { N089.t149. LEA }
N093 (???,???) [000208] -A--G-------              *  STOREIND  ref    REG NA
<RefPosition #137 @93  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #138 @93  RefTypeUse <Ivl:32>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #139 @93  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #140 @93  RefTypeUse <Ivl:8 V10> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #141 @94  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #142 @94  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #143 @94  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #144 @94  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #145 @94  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #146 @94  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #147 @94  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
<RefPosition #148 @94  RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1>
<RefPosition #149 @94  RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1>
<RefPosition #150 @94  RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1>
<RefPosition #151 @94  RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1>
<RefPosition #152 @94  RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1>
<RefPosition #153 @94  RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1>

DefList: {  }
N095 (  3,  2) [000077] ------?-----              *  LCL_VAR   ref    V04 arg4         u:1 NA REG NA $140

DefList: {  }
N097 (  3,  3) [000178] DA----------              *  STORE_LCL_VAR ref    V12 tmp6         d:1 NA REG NA
<RefPosition #154 @97  RefTypeUse <Ivl:3 V04> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #155 @98  RefTypeDef <Ivl:10 V12> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N099 (  3,  2) [000070] ------------              *  LCL_VAR   ref    V12 tmp6         u:1 NA REG NA $140

DefList: {  }
N101 (  1,  1) [000069] -c----------              *  CNS_INT   ref    null REG NA $VN.Null
Contained
DefList: {  }
N103 (  5,  4) [000071] J------N----              *  EQ        void   REG NA $443
<RefPosition #156 @103 RefTypeUse <Ivl:10 V12> LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N105 (  7,  6) [000175] ------------              *  JTRUE     void   REG NA



CHECKING LAST USES for BB01, liveout={V04 V05 V07 V12}
==============================
use: {V01 V02 V03 V04}
def: {V07 V08 V09 V10 V12}

NEW BLOCK BB02


Setting BB01 as the predecessor for determining incoming variable registers of BB02
<RefPosition #157 @107 RefTypeBB  BB02 regmask=[] minReg=1>

DefList: {  }
N109 (  1,  1) [000061] ------?-----              *  LCL_VAR   ref    V12 tmp6         u:1 NA REG NA $140

DefList: {  }
N111 (  3,  2) [000067] #c---O?-----              *  IND       long   REG NA $291
Contained
DefList: {  }
N113 (  2, 10) [000060] H-----?-----              *  CNS_INT(h) long   0xd1ffab1e class REG NA $1c5
Interval 33: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #158 @114 RefTypeDef <Ivl:33> CNS_INT BB02 regmask=[allInt] minReg=1>

DefList: { N113.t60. CNS_INT }
N115 (  6, 13) [000063] DA----?-----              *  STORE_LCL_VAR long   V11 tmp5         d:1 NA REG NA
<RefPosition #159 @115 RefTypeUse <Ivl:33>  BB02 regmask=[allInt] minReg=1 last>
Assigning related <V11/L9> to <I33>
<RefPosition #160 @116 RefTypeDef <Ivl:9 V11> STORE_LCL_VAR BB02 regmask=[allInt] minReg=1 last>

DefList: {  }
N117 (  3,  2) [000064] ------?-----              *  LCL_VAR   long   V11 tmp5         u:1 NA REG NA $1c5

DefList: {  }
N119 ( 13, 18) [000068] J----O?N----              *  EQ        void   REG NA $445
<RefPosition #161 @119 RefTypeUse <Ivl:10 V12> LCL_VAR BB02 regmask=[allInt] minReg=1 last>
<RefPosition #162 @119 RefTypeUse <Ivl:9 V11> LCL_VAR BB02 regmask=[allInt] minReg=1 last>

DefList: {  }
N121 ( 15, 20) [000176] -----O------              *  JTRUE     void   REG NA



CHECKING LAST USES for BB02, liveout={V04 V05 V07 V11 V12}
==============================
use: {V12}
def: {V11}

NEW BLOCK BB03


Setting BB02 as the predecessor for determining incoming variable registers of BB03
<RefPosition #163 @123 RefTypeBB  BB03 regmask=[] minReg=1>

DefList: {  }
N125 (  3,  2) [000066] ------?-----              *  LCL_VAR   long   V11 tmp5         u:1 NA (last use) REG NA $1c5

DefList: {  }
N127 (???,???) [000216] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #164 @127 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #165 @127 RefTypeUse <Ivl:9 V11> LCL_VAR BB03 regmask=[rcx] minReg=1 last fixed>
Interval 34: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #166 @128 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #167 @128 RefTypeDef <Ivl:34> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>

DefList: { N127.t216. PUTARG_REG }
N129 (  3,  2) [000073] ------?-----              *  LCL_VAR   ref    V04 arg4         u:1 NA (last use) REG NA $140

DefList: { N127.t216. PUTARG_REG }
N131 (???,???) [000217] ------------              *  PUTARG_REG ref    REG rdx
<RefPosition #168 @131 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #169 @131 RefTypeUse <Ivl:3 V04> LCL_VAR BB03 regmask=[rdx] minReg=1 last fixed>
Interval 35: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #170 @132 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #171 @132 RefTypeDef <Ivl:35> PUTARG_REG BB03 regmask=[rdx] minReg=1 fixed>

DefList: { N127.t216. PUTARG_REG; N131.t217. PUTARG_REG }
N133 ( 20, 11) [000074] --CXG-?-----              *  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL REG NA $296
<RefPosition #172 @133 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #173 @133 RefTypeUse <Ivl:34>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #174 @133 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #175 @133 RefTypeUse <Ivl:35>  BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #176 @134 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #177 @134 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #178 @134 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #179 @134 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #180 @134 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1>
<RefPosition #181 @134 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1>
<RefPosition #182 @134 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1>
Interval 36: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #183 @134 RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #184 @134 RefTypeDef <Ivl:36> CALL BB03 regmask=[rax] minReg=1 fixed>

DefList: { N133.t74. CALL }
N135 ( 20, 11) [000180] DA-XG-------              *  STORE_LCL_VAR ref    V12 tmp6         d:3 NA REG NA
<RefPosition #185 @135 RefTypeUse <Ivl:36>  BB03 regmask=[allInt] minReg=1 last>
Assigning related <V12/L10> to <I36>
<RefPosition #186 @136 RefTypeDef <Ivl:10 V12> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1 last>



CHECKING LAST USES for BB03, liveout={V05 V07 V12}
==============================
use: {V04 V11}
def: {V12}

NEW BLOCK BB04


Setting BB01 as the predecessor for determining incoming variable registers of BB04
<RefPosition #187 @137 RefTypeBB  BB04 regmask=[] minReg=1>

DefList: {  }
N139 (  1,  1) [000153] ------------              *  LCL_VAR   ref    V07 tmp1         u:1 NA REG NA $300

DefList: {  }
N141 (  2,  2) [000161] ------------              *  LEA(b+40) byref  REG NA
<RefPosition #188 @141 RefTypeUse <Ivl:5 V07> LCL_VAR BB04 regmask=[allInt] minReg=1 last>
Interval 37: byref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #189 @142 RefTypeDef <Ivl:37> LEA BB04 regmask=[allInt] minReg=1>

DefList: { N141.t161. LEA }
N143 (  1,  1) [000082] ------------              *  LCL_VAR   ref    V12 tmp6         u:2 NA (last use) REG NA $140

DefList: { N141.t161. LEA }
N145 (???,???) [000209] -A--G-------              *  STOREIND  ref    REG NA
<RefPosition #190 @145 RefTypeFixedReg <Reg:rcx>  BB04 regmask=[rcx] minReg=1>
<RefPosition #191 @145 RefTypeUse <Ivl:37>  BB04 regmask=[rcx] minReg=1 last fixed>
<RefPosition #192 @145 RefTypeFixedReg <Reg:rdx>  BB04 regmask=[rdx] minReg=1>
<RefPosition #193 @145 RefTypeUse <Ivl:10 V12> LCL_VAR BB04 regmask=[rdx] minReg=1 last fixed>
<RefPosition #194 @146 RefTypeKill <Reg:rax>  BB04 regmask=[rax] minReg=1>
<RefPosition #195 @146 RefTypeKill <Reg:rcx>  BB04 regmask=[rcx] minReg=1>
<RefPosition #196 @146 RefTypeKill <Reg:rdx>  BB04 regmask=[rdx] minReg=1>
<RefPosition #197 @146 RefTypeKill <Reg:r8 >  BB04 regmask=[r8] minReg=1>
<RefPosition #198 @146 RefTypeKill <Reg:r9 >  BB04 regmask=[r9] minReg=1>
<RefPosition #199 @146 RefTypeKill <Reg:r10>  BB04 regmask=[r10] minReg=1>
<RefPosition #200 @146 RefTypeKill <Reg:r11>  BB04 regmask=[r11] minReg=1>
<RefPosition #201 @146 RefTypeKill <Reg:mm0>  BB04 regmask=[mm0] minReg=1>
<RefPosition #202 @146 RefTypeKill <Reg:mm1>  BB04 regmask=[mm1] minReg=1>
<RefPosition #203 @146 RefTypeKill <Reg:mm2>  BB04 regmask=[mm2] minReg=1>
<RefPosition #204 @146 RefTypeKill <Reg:mm3>  BB04 regmask=[mm3] minReg=1>
<RefPosition #205 @146 RefTypeKill <Reg:mm4>  BB04 regmask=[mm4] minReg=1>
<RefPosition #206 @146 RefTypeKill <Reg:mm5>  BB04 regmask=[mm5] minReg=1>

DefList: {  }
N147 (  3,  2) [000105] ------?-----              *  LCL_VAR   ref    V05 arg5         u:1 NA REG NA $141

DefList: {  }
N149 (  3,  3) [000184] DA----------              *  STORE_LCL_VAR ref    V14 tmp8         d:1 NA REG NA
<RefPosition #207 @149 RefTypeUse <Ivl:4 V05> LCL_VAR BB04 regmask=[allInt] minReg=1 last>
<RefPosition #208 @150 RefTypeDef <Ivl:12 V14> STORE_LCL_VAR BB04 regmask=[allInt] minReg=1 last>

DefList: {  }
N151 (  3,  2) [000098] ------------              *  LCL_VAR   ref    V14 tmp8         u:1 NA REG NA $141

DefList: {  }
N153 (  1,  1) [000097] -c----------              *  CNS_INT   ref    null REG NA $VN.Null
Contained
DefList: {  }
N155 (  5,  4) [000099] J------N----              *  EQ        void   REG NA $446
<RefPosition #209 @155 RefTypeUse <Ivl:12 V14> LCL_VAR BB04 regmask=[allInt] minReg=1 last>

DefList: {  }
N157 (  7,  6) [000181] ------------              *  JTRUE     void   REG NA



CHECKING LAST USES for BB04, liveout={V05 V07 V14}
==============================
use: {V05 V07 V12}
def: {V14}

NEW BLOCK BB05


Setting BB04 as the predecessor for determining incoming variable registers of BB05
<RefPosition #210 @159 RefTypeBB  BB05 regmask=[] minReg=1>

DefList: {  }
N161 (  1,  1) [000089] ------?-----              *  LCL_VAR   ref    V14 tmp8         u:1 NA REG NA $141

DefList: {  }
N163 (  3,  2) [000095] #c---O?-----              *  IND       long   REG NA $29b
Contained
DefList: {  }
N165 (  2, 10) [000088] H-----?-----              *  CNS_INT(h) long   0xd1ffab1e class REG NA $1c6
Interval 38: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #211 @166 RefTypeDef <Ivl:38> CNS_INT BB05 regmask=[allInt] minReg=1>

DefList: { N165.t88. CNS_INT }
N167 (  6, 13) [000091] DA----?-----              *  STORE_LCL_VAR long   V13 tmp7         d:1 NA REG NA
<RefPosition #212 @167 RefTypeUse <Ivl:38>  BB05 regmask=[allInt] minReg=1 last>
Assigning related <V13/L11> to <I38>
<RefPosition #213 @168 RefTypeDef <Ivl:11 V13> STORE_LCL_VAR BB05 regmask=[allInt] minReg=1 last>

DefList: {  }
N169 (  3,  2) [000092] ------?-----              *  LCL_VAR   long   V13 tmp7         u:1 NA REG NA $1c6

DefList: {  }
N171 ( 13, 18) [000096] J----O?N----              *  EQ        void   REG NA $448
<RefPosition #214 @171 RefTypeUse <Ivl:12 V14> LCL_VAR BB05 regmask=[allInt] minReg=1 last>
<RefPosition #215 @171 RefTypeUse <Ivl:11 V13> LCL_VAR BB05 regmask=[allInt] minReg=1 last>

DefList: {  }
N173 ( 15, 20) [000182] -----O------              *  JTRUE     void   REG NA



CHECKING LAST USES for BB05, liveout={V05 V07 V13 V14}
==============================
use: {V14}
def: {V13}

NEW BLOCK BB06


Setting BB05 as the predecessor for determining incoming variable registers of BB06
<RefPosition #216 @175 RefTypeBB  BB06 regmask=[] minReg=1>

DefList: {  }
N177 (  3,  2) [000094] ------?-----              *  LCL_VAR   long   V13 tmp7         u:1 NA (last use) REG NA $1c6

DefList: {  }
N179 (???,???) [000218] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #217 @179 RefTypeFixedReg <Reg:rcx>  BB06 regmask=[rcx] minReg=1>
<RefPosition #218 @179 RefTypeUse <Ivl:11 V13> LCL_VAR BB06 regmask=[rcx] minReg=1 last fixed>
Interval 39: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #219 @180 RefTypeFixedReg <Reg:rcx>  BB06 regmask=[rcx] minReg=1>
<RefPosition #220 @180 RefTypeDef <Ivl:39> PUTARG_REG BB06 regmask=[rcx] minReg=1 fixed>

DefList: { N179.t218. PUTARG_REG }
N181 (  3,  2) [000101] ------?-----              *  LCL_VAR   ref    V05 arg5         u:1 NA (last use) REG NA $141

DefList: { N179.t218. PUTARG_REG }
N183 (???,???) [000219] ------------              *  PUTARG_REG ref    REG rdx
<RefPosition #221 @183 RefTypeFixedReg <Reg:rdx>  BB06 regmask=[rdx] minReg=1>
<RefPosition #222 @183 RefTypeUse <Ivl:4 V05> LCL_VAR BB06 regmask=[rdx] minReg=1 last fixed>
Interval 40: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #223 @184 RefTypeFixedReg <Reg:rdx>  BB06 regmask=[rdx] minReg=1>
<RefPosition #224 @184 RefTypeDef <Ivl:40> PUTARG_REG BB06 regmask=[rdx] minReg=1 fixed>

DefList: { N179.t218. PUTARG_REG; N183.t219. PUTARG_REG }
N185 ( 20, 11) [000102] --CXG-?-----              *  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL REG NA $2a0
<RefPosition #225 @185 RefTypeFixedReg <Reg:rcx>  BB06 regmask=[rcx] minReg=1>
<RefPosition #226 @185 RefTypeUse <Ivl:39>  BB06 regmask=[rcx] minReg=1 last fixed>
<RefPosition #227 @185 RefTypeFixedReg <Reg:rdx>  BB06 regmask=[rdx] minReg=1>
<RefPosition #228 @185 RefTypeUse <Ivl:40>  BB06 regmask=[rdx] minReg=1 last fixed>
<RefPosition #229 @186 RefTypeKill <Reg:rax>  BB06 regmask=[rax] minReg=1>
<RefPosition #230 @186 RefTypeKill <Reg:rcx>  BB06 regmask=[rcx] minReg=1>
<RefPosition #231 @186 RefTypeKill <Reg:rdx>  BB06 regmask=[rdx] minReg=1>
<RefPosition #232 @186 RefTypeKill <Reg:r8 >  BB06 regmask=[r8] minReg=1>
<RefPosition #233 @186 RefTypeKill <Reg:r9 >  BB06 regmask=[r9] minReg=1>
<RefPosition #234 @186 RefTypeKill <Reg:r10>  BB06 regmask=[r10] minReg=1>
<RefPosition #235 @186 RefTypeKill <Reg:r11>  BB06 regmask=[r11] minReg=1>
Interval 41: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #236 @186 RefTypeFixedReg <Reg:rax>  BB06 regmask=[rax] minReg=1>
<RefPosition #237 @186 RefTypeDef <Ivl:41> CALL BB06 regmask=[rax] minReg=1 fixed>

DefList: { N185.t102. CALL }
N187 ( 20, 11) [000186] DA-XG-------              *  STORE_LCL_VAR ref    V14 tmp8         d:3 NA REG NA
<RefPosition #238 @187 RefTypeUse <Ivl:41>  BB06 regmask=[allInt] minReg=1 last>
Assigning related <V14/L12> to <I41>
<RefPosition #239 @188 RefTypeDef <Ivl:12 V14> STORE_LCL_VAR BB06 regmask=[allInt] minReg=1 last>



CHECKING LAST USES for BB06, liveout={V07 V14}
==============================
use: {V05 V13}
def: {V14}

NEW BLOCK BB07


Setting BB04 as the predecessor for determining incoming variable registers of BB07
<RefPosition #240 @189 RefTypeBB  BB07 regmask=[] minReg=1>

DefList: {  }
N191 (  1,  1) [000165] ------------              *  LCL_VAR   ref    V07 tmp1         u:1 NA REG NA $300

DefList: {  }
N193 (  2,  2) [000173] ------------              *  LEA(b+48) byref  REG NA
<RefPosition #241 @193 RefTypeUse <Ivl:5 V07> LCL_VAR BB07 regmask=[allInt] minReg=1 last>
Interval 42: byref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #242 @194 RefTypeDef <Ivl:42> LEA BB07 regmask=[allInt] minReg=1>

DefList: { N193.t173. LEA }
N195 (  1,  1) [000110] ------------              *  LCL_VAR   ref    V14 tmp8         u:2 NA (last use) REG NA $141

DefList: { N193.t173. LEA }
N197 (???,???) [000210] -A--G-------              *  STOREIND  ref    REG NA
<RefPosition #243 @197 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #244 @197 RefTypeUse <Ivl:42>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #245 @197 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #246 @197 RefTypeUse <Ivl:12 V14> LCL_VAR BB07 regmask=[rdx] minReg=1 last fixed>
<RefPosition #247 @198 RefTypeKill <Reg:rax>  BB07 regmask=[rax] minReg=1>
<RefPosition #248 @198 RefTypeKill <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #249 @198 RefTypeKill <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #250 @198 RefTypeKill <Reg:r8 >  BB07 regmask=[r8] minReg=1>
<RefPosition #251 @198 RefTypeKill <Reg:r9 >  BB07 regmask=[r9] minReg=1>
<RefPosition #252 @198 RefTypeKill <Reg:r10>  BB07 regmask=[r10] minReg=1>
<RefPosition #253 @198 RefTypeKill <Reg:r11>  BB07 regmask=[r11] minReg=1>
<RefPosition #254 @198 RefTypeKill <Reg:mm0>  BB07 regmask=[mm0] minReg=1>
<RefPosition #255 @198 RefTypeKill <Reg:mm1>  BB07 regmask=[mm1] minReg=1>
<RefPosition #256 @198 RefTypeKill <Reg:mm2>  BB07 regmask=[mm2] minReg=1>
<RefPosition #257 @198 RefTypeKill <Reg:mm3>  BB07 regmask=[mm3] minReg=1>
<RefPosition #258 @198 RefTypeKill <Reg:mm4>  BB07 regmask=[mm4] minReg=1>
<RefPosition #259 @198 RefTypeKill <Reg:mm5>  BB07 regmask=[mm5] minReg=1>

DefList: {  }
N199 (  1,  1) [000005] ------------              *  LCL_VAR   ref    V07 tmp1         u:1 NA (last use) REG NA $300

DefList: {  }
N201 (  2,  2) [000113] ------------              *  RETURN    ref    REG NA $2d1
<RefPosition #260 @201 RefTypeFixedReg <Reg:rax>  BB07 regmask=[rax] minReg=1>
<RefPosition #261 @201 RefTypeUse <Ivl:5 V07> LCL_VAR BB07 regmask=[rax] minReg=1 last fixed>



CHECKING LAST USES for BB07, liveout={}
==============================
use: {V07 V14}
def: {}

Linear scan intervals BEFORE VALIDATING INTERVALS:
Interval  0: (V01) int RefPositions {#0@0 #49@27} physReg:rdx Preferences=[rbx rbp rsi rdi r12-r15]
Interval  1: (V02) int RefPositions {#1@0 #90@53} physReg:r8 Preferences=[rbx rbp rsi rdi r12-r15]
Interval  2: (V03) int RefPositions {#2@0 #131@79} physReg:r9 Preferences=[rbx rbp rsi rdi r12-r15]
Interval  3: (V04) ref RefPositions {#3@0 #154@97 #169@131} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  4: (V05) ref RefPositions {#4@0 #207@149 #222@183} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  5: (V07) ref RefPositions {#30@16 #53@37 #94@63 #135@89 #188@141 #241@193 #261@201} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  6: (V08) ref RefPositions {#48@24 #51@33 #58@41} physReg:NA Preferences=[rdx]
Interval  7: (V09) ref RefPositions {#89@50 #92@59 #99@67} physReg:NA Preferences=[rdx]
Interval  8: (V10) ref RefPositions {#130@76 #133@85 #140@93} physReg:NA Preferences=[rdx]
Interval  9: (V11) long RefPositions {#160@116 #162@119 #165@127} physReg:NA Preferences=[rcx]
Interval 10: (V12) ref RefPositions {#155@98 #156@103 #161@119 #186@136 #193@145} physReg:NA Preferences=[rdx]
Interval 11: (V13) long RefPositions {#213@168 #215@171 #218@179} physReg:NA Preferences=[rcx]
Interval 12: (V14) ref RefPositions {#208@150 #209@155 #214@171 #239@188 #246@197} physReg:NA Preferences=[rdx]
Interval 13: long (constant) RefPositions {#6@6 #8@7} physReg:NA Preferences=[rcx]
Interval 14: long RefPositions {#10@8 #17@13} physReg:NA Preferences=[rcx]
Interval 15: long (constant) RefPositions {#11@10 #13@11} physReg:NA Preferences=[rdx]
Interval 16: long RefPositions {#15@12 #19@13} physReg:NA Preferences=[rdx]
Interval 17: ref RefPositions {#28@14 #29@15} physReg:NA Preferences=[rax] RelatedInterval <V07/L5>
Interval 18: long (constant) RefPositions {#31@18 #33@19} physReg:NA Preferences=[rcx]
Interval 19: long RefPositions {#35@20 #37@21} physReg:NA Preferences=[rcx]
Interval 20: ref RefPositions {#46@22 #47@23} physReg:NA Preferences=[rax] RelatedInterval <V08/L6>
Interval 21: long RefPositions {#50@28 #52@33} physReg:NA Preferences=[allInt]
Interval 22: byref RefPositions {#54@38 #56@41} physReg:NA Preferences=[rcx]
Interval 23: long (constant) RefPositions {#72@44 #74@45} physReg:NA Preferences=[rcx]
Interval 24: long RefPositions {#76@46 #78@47} physReg:NA Preferences=[rcx]
Interval 25: ref RefPositions {#87@48 #88@49} physReg:NA Preferences=[rax] RelatedInterval <V09/L7>
Interval 26: int RefPositions {#91@54 #93@59} physReg:NA Preferences=[allInt]
Interval 27: byref RefPositions {#95@64 #97@67} physReg:NA Preferences=[rcx]
Interval 28: long (constant) RefPositions {#113@70 #115@71} physReg:NA Preferences=[rcx]
Interval 29: long RefPositions {#117@72 #119@73} physReg:NA Preferences=[rcx]
Interval 30: ref RefPositions {#128@74 #129@75} physReg:NA Preferences=[rax] RelatedInterval <V10/L8>
Interval 31: int RefPositions {#132@80 #134@85} physReg:NA Preferences=[allInt]
Interval 32: byref RefPositions {#136@90 #138@93} physReg:NA Preferences=[rcx]
Interval 33: long (constant) RefPositions {#158@114 #159@115} physReg:NA Preferences=[allInt] RelatedInterval <V11/L9>
Interval 34: long RefPositions {#167@128 #173@133} physReg:NA Preferences=[rcx]
Interval 35: ref RefPositions {#171@132 #175@133} physReg:NA Preferences=[rdx]
Interval 36: ref RefPositions {#184@134 #185@135} physReg:NA Preferences=[rax] RelatedInterval <V12/L10>
Interval 37: byref RefPositions {#189@142 #191@145} physReg:NA Preferences=[rcx]
Interval 38: long (constant) RefPositions {#211@166 #212@167} physReg:NA Preferences=[allInt] RelatedInterval <V13/L11>
Interval 39: long RefPositions {#220@180 #226@185} physReg:NA Preferences=[rcx]
Interval 40: ref RefPositions {#224@184 #228@185} physReg:NA Preferences=[rdx]
Interval 41: ref RefPositions {#237@186 #238@187} physReg:NA Preferences=[rax] RelatedInterval <V14/L12>
Interval 42: byref RefPositions {#242@194 #244@197} physReg:NA Preferences=[rcx]

------------
REFPOSITIONS BEFORE VALIDATING INTERVALS: 
------------
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V01>  BB00 regmask=[rdx] minReg=1 fixed regOptional>
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V02>  BB00 regmask=[r8] minReg=1 fixed regOptional>
<RefPosition #2   @0   RefTypeParamDef <Ivl:2 V03>  BB00 regmask=[r9] minReg=1 fixed regOptional>
<RefPosition #3   @0   RefTypeParamDef <Ivl:3 V04>  BB00 regmask=[allInt] minReg=1 regOptional>
<RefPosition #4   @0   RefTypeParamDef <Ivl:4 V05>  BB00 regmask=[allInt] minReg=1 regOptional>
<RefPosition #5   @1   RefTypeBB  BB01 regmask=[] minReg=1>
<RefPosition #6   @6   RefTypeDef <Ivl:13> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #7   @7   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #8   @7   RefTypeUse <Ivl:13>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #9   @8   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #10  @8   RefTypeDef <Ivl:14> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #11  @10  RefTypeDef <Ivl:15> CNS_INT BB01 regmask=[rdx] minReg=1>
<RefPosition #12  @11  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #13  @11  RefTypeUse <Ivl:15>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #14  @12  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #15  @12  RefTypeDef <Ivl:16> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>
<RefPosition #16  @13  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #17  @13  RefTypeUse <Ivl:14>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #18  @13  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #19  @13  RefTypeUse <Ivl:16>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #20  @14  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #21  @14  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #22  @14  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #23  @14  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #24  @14  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #25  @14  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #26  @14  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #27  @14  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #28  @14  RefTypeDef <Ivl:17> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #29  @15  RefTypeUse <Ivl:17>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #30  @16  RefTypeDef <Ivl:5 V07> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #31  @18  RefTypeDef <Ivl:18> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #32  @19  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #33  @19  RefTypeUse <Ivl:18>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #34  @20  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #35  @20  RefTypeDef <Ivl:19> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #36  @21  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #37  @21  RefTypeUse <Ivl:19>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #38  @22  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #39  @22  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #40  @22  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #41  @22  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #42  @22  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #43  @22  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #44  @22  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #45  @22  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #46  @22  RefTypeDef <Ivl:20> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #47  @23  RefTypeUse <Ivl:20>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #48  @24  RefTypeDef <Ivl:6 V08> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #49  @27  RefTypeUse <Ivl:0 V01> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #50  @28  RefTypeDef <Ivl:21> CAST BB01 regmask=[allInt] minReg=1>
<RefPosition #51  @33  RefTypeUse <Ivl:6 V08> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #52  @33  RefTypeUse <Ivl:21>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #53  @37  RefTypeUse <Ivl:5 V07> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #54  @38  RefTypeDef <Ivl:22> LEA BB01 regmask=[rcx] minReg=1>
<RefPosition #55  @41  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #56  @41  RefTypeUse <Ivl:22>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #57  @41  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #58  @41  RefTypeUse <Ivl:6 V08> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #59  @42  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #60  @42  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #61  @42  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #62  @42  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #63  @42  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #64  @42  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #65  @42  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #66  @42  RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1 last>
<RefPosition #67  @42  RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1 last>
<RefPosition #68  @42  RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1 last>
<RefPosition #69  @42  RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1 last>
<RefPosition #70  @42  RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1 last>
<RefPosition #71  @42  RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1 last>
<RefPosition #72  @44  RefTypeDef <Ivl:23> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #73  @45  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #74  @45  RefTypeUse <Ivl:23>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #75  @46  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #76  @46  RefTypeDef <Ivl:24> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #77  @47  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #78  @47  RefTypeUse <Ivl:24>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #79  @48  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #80  @48  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #81  @48  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #82  @48  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #83  @48  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #84  @48  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #85  @48  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #86  @48  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #87  @48  RefTypeDef <Ivl:25> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #88  @49  RefTypeUse <Ivl:25>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #89  @50  RefTypeDef <Ivl:7 V09> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #90  @53  RefTypeUse <Ivl:1 V02> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #91  @54  RefTypeDef <Ivl:26> CAST BB01 regmask=[allInt] minReg=1>
<RefPosition #92  @59  RefTypeUse <Ivl:7 V09> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #93  @59  RefTypeUse <Ivl:26>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #94  @63  RefTypeUse <Ivl:5 V07> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #95  @64  RefTypeDef <Ivl:27> LEA BB01 regmask=[rcx] minReg=1>
<RefPosition #96  @67  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #97  @67  RefTypeUse <Ivl:27>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #98  @67  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #99  @67  RefTypeUse <Ivl:7 V09> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #100 @68  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #101 @68  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #102 @68  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #103 @68  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #104 @68  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #105 @68  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #106 @68  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #107 @68  RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1 last>
<RefPosition #108 @68  RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1 last>
<RefPosition #109 @68  RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1 last>
<RefPosition #110 @68  RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1 last>
<RefPosition #111 @68  RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1 last>
<RefPosition #112 @68  RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1 last>
<RefPosition #113 @70  RefTypeDef <Ivl:28> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #114 @71  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #115 @71  RefTypeUse <Ivl:28>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #116 @72  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #117 @72  RefTypeDef <Ivl:29> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #118 @73  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #119 @73  RefTypeUse <Ivl:29>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #120 @74  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #121 @74  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #122 @74  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #123 @74  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #124 @74  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #125 @74  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #126 @74  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #127 @74  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #128 @74  RefTypeDef <Ivl:30> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #129 @75  RefTypeUse <Ivl:30>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #130 @76  RefTypeDef <Ivl:8 V10> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #131 @79  RefTypeUse <Ivl:2 V03> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #132 @80  RefTypeDef <Ivl:31> CAST BB01 regmask=[allInt] minReg=1>
<RefPosition #133 @85  RefTypeUse <Ivl:8 V10> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #134 @85  RefTypeUse <Ivl:31>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #135 @89  RefTypeUse <Ivl:5 V07> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #136 @90  RefTypeDef <Ivl:32> LEA BB01 regmask=[rcx] minReg=1>
<RefPosition #137 @93  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #138 @93  RefTypeUse <Ivl:32>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #139 @93  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #140 @93  RefTypeUse <Ivl:8 V10> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #141 @94  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #142 @94  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #143 @94  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #144 @94  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #145 @94  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #146 @94  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #147 @94  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #148 @94  RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1 last>
<RefPosition #149 @94  RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1 last>
<RefPosition #150 @94  RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1 last>
<RefPosition #151 @94  RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1 last>
<RefPosition #152 @94  RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1 last>
<RefPosition #153 @94  RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1 last>
<RefPosition #154 @97  RefTypeUse <Ivl:3 V04> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #155 @98  RefTypeDef <Ivl:10 V12> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #156 @103 RefTypeUse <Ivl:10 V12> LCL_VAR BB01 regmask=[allInt] minReg=1 regOptional>
<RefPosition #157 @107 RefTypeBB  BB02 regmask=[] minReg=1>
<RefPosition #158 @114 RefTypeDef <Ivl:33> CNS_INT BB02 regmask=[allInt] minReg=1>
<RefPosition #159 @115 RefTypeUse <Ivl:33>  BB02 regmask=[allInt] minReg=1 last>
<RefPosition #160 @116 RefTypeDef <Ivl:9 V11> STORE_LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #161 @119 RefTypeUse <Ivl:10 V12> LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #162 @119 RefTypeUse <Ivl:9 V11> LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #163 @123 RefTypeBB  BB03 regmask=[] minReg=1>
<RefPosition #164 @127 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #165 @127 RefTypeUse <Ivl:9 V11> LCL_VAR BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #166 @128 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #167 @128 RefTypeDef <Ivl:34> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>
<RefPosition #168 @131 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #169 @131 RefTypeUse <Ivl:3 V04> LCL_VAR BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #170 @132 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #171 @132 RefTypeDef <Ivl:35> PUTARG_REG BB03 regmask=[rdx] minReg=1 fixed>
<RefPosition #172 @133 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #173 @133 RefTypeUse <Ivl:34>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #174 @133 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #175 @133 RefTypeUse <Ivl:35>  BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #176 @134 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #177 @134 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #178 @134 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #179 @134 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #180 @134 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #181 @134 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #182 @134 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #183 @134 RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #184 @134 RefTypeDef <Ivl:36> CALL BB03 regmask=[rax] minReg=1 fixed>
<RefPosition #185 @135 RefTypeUse <Ivl:36>  BB03 regmask=[allInt] minReg=1 last>
<RefPosition #186 @136 RefTypeDef <Ivl:10 V12> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #187 @137 RefTypeBB  BB04 regmask=[] minReg=1>
<RefPosition #188 @141 RefTypeUse <Ivl:5 V07> LCL_VAR BB04 regmask=[allInt] minReg=1>
<RefPosition #189 @142 RefTypeDef <Ivl:37> LEA BB04 regmask=[rcx] minReg=1>
<RefPosition #190 @145 RefTypeFixedReg <Reg:rcx>  BB04 regmask=[rcx] minReg=1>
<RefPosition #191 @145 RefTypeUse <Ivl:37>  BB04 regmask=[rcx] minReg=1 last fixed>
<RefPosition #192 @145 RefTypeFixedReg <Reg:rdx>  BB04 regmask=[rdx] minReg=1>
<RefPosition #193 @145 RefTypeUse <Ivl:10 V12> LCL_VAR BB04 regmask=[rdx] minReg=1 last fixed>
<RefPosition #194 @146 RefTypeKill <Reg:rax>  BB04 regmask=[rax] minReg=1 last>
<RefPosition #195 @146 RefTypeKill <Reg:rcx>  BB04 regmask=[rcx] minReg=1 last>
<RefPosition #196 @146 RefTypeKill <Reg:rdx>  BB04 regmask=[rdx] minReg=1 last>
<RefPosition #197 @146 RefTypeKill <Reg:r8 >  BB04 regmask=[r8] minReg=1 last>
<RefPosition #198 @146 RefTypeKill <Reg:r9 >  BB04 regmask=[r9] minReg=1 last>
<RefPosition #199 @146 RefTypeKill <Reg:r10>  BB04 regmask=[r10] minReg=1 last>
<RefPosition #200 @146 RefTypeKill <Reg:r11>  BB04 regmask=[r11] minReg=1 last>
<RefPosition #201 @146 RefTypeKill <Reg:mm0>  BB04 regmask=[mm0] minReg=1 last>
<RefPosition #202 @146 RefTypeKill <Reg:mm1>  BB04 regmask=[mm1] minReg=1 last>
<RefPosition #203 @146 RefTypeKill <Reg:mm2>  BB04 regmask=[mm2] minReg=1 last>
<RefPosition #204 @146 RefTypeKill <Reg:mm3>  BB04 regmask=[mm3] minReg=1 last>
<RefPosition #205 @146 RefTypeKill <Reg:mm4>  BB04 regmask=[mm4] minReg=1 last>
<RefPosition #206 @146 RefTypeKill <Reg:mm5>  BB04 regmask=[mm5] minReg=1 last>
<RefPosition #207 @149 RefTypeUse <Ivl:4 V05> LCL_VAR BB04 regmask=[allInt] minReg=1>
<RefPosition #208 @150 RefTypeDef <Ivl:12 V14> STORE_LCL_VAR BB04 regmask=[allInt] minReg=1>
<RefPosition #209 @155 RefTypeUse <Ivl:12 V14> LCL_VAR BB04 regmask=[allInt] minReg=1 regOptional>
<RefPosition #210 @159 RefTypeBB  BB05 regmask=[] minReg=1>
<RefPosition #211 @166 RefTypeDef <Ivl:38> CNS_INT BB05 regmask=[allInt] minReg=1>
<RefPosition #212 @167 RefTypeUse <Ivl:38>  BB05 regmask=[allInt] minReg=1 last>
<RefPosition #213 @168 RefTypeDef <Ivl:11 V13> STORE_LCL_VAR BB05 regmask=[allInt] minReg=1>
<RefPosition #214 @171 RefTypeUse <Ivl:12 V14> LCL_VAR BB05 regmask=[allInt] minReg=1>
<RefPosition #215 @171 RefTypeUse <Ivl:11 V13> LCL_VAR BB05 regmask=[allInt] minReg=1>
<RefPosition #216 @175 RefTypeBB  BB06 regmask=[] minReg=1>
<RefPosition #217 @179 RefTypeFixedReg <Reg:rcx>  BB06 regmask=[rcx] minReg=1>
<RefPosition #218 @179 RefTypeUse <Ivl:11 V13> LCL_VAR BB06 regmask=[rcx] minReg=1 last fixed>
<RefPosition #219 @180 RefTypeFixedReg <Reg:rcx>  BB06 regmask=[rcx] minReg=1>
<RefPosition #220 @180 RefTypeDef <Ivl:39> PUTARG_REG BB06 regmask=[rcx] minReg=1 fixed>
<RefPosition #221 @183 RefTypeFixedReg <Reg:rdx>  BB06 regmask=[rdx] minReg=1>
<RefPosition #222 @183 RefTypeUse <Ivl:4 V05> LCL_VAR BB06 regmask=[rdx] minReg=1 last fixed>
<RefPosition #223 @184 RefTypeFixedReg <Reg:rdx>  BB06 regmask=[rdx] minReg=1>
<RefPosition #224 @184 RefTypeDef <Ivl:40> PUTARG_REG BB06 regmask=[rdx] minReg=1 fixed>
<RefPosition #225 @185 RefTypeFixedReg <Reg:rcx>  BB06 regmask=[rcx] minReg=1>
<RefPosition #226 @185 RefTypeUse <Ivl:39>  BB06 regmask=[rcx] minReg=1 last fixed>
<RefPosition #227 @185 RefTypeFixedReg <Reg:rdx>  BB06 regmask=[rdx] minReg=1>
<RefPosition #228 @185 RefTypeUse <Ivl:40>  BB06 regmask=[rdx] minReg=1 last fixed>
<RefPosition #229 @186 RefTypeKill <Reg:rax>  BB06 regmask=[rax] minReg=1 last>
<RefPosition #230 @186 RefTypeKill <Reg:rcx>  BB06 regmask=[rcx] minReg=1 last>
<RefPosition #231 @186 RefTypeKill <Reg:rdx>  BB06 regmask=[rdx] minReg=1 last>
<RefPosition #232 @186 RefTypeKill <Reg:r8 >  BB06 regmask=[r8] minReg=1 last>
<RefPosition #233 @186 RefTypeKill <Reg:r9 >  BB06 regmask=[r9] minReg=1 last>
<RefPosition #234 @186 RefTypeKill <Reg:r10>  BB06 regmask=[r10] minReg=1 last>
<RefPosition #235 @186 RefTypeKill <Reg:r11>  BB06 regmask=[r11] minReg=1 last>
<RefPosition #236 @186 RefTypeFixedReg <Reg:rax>  BB06 regmask=[rax] minReg=1>
<RefPosition #237 @186 RefTypeDef <Ivl:41> CALL BB06 regmask=[rax] minReg=1 fixed>
<RefPosition #238 @187 RefTypeUse <Ivl:41>  BB06 regmask=[allInt] minReg=1 last>
<RefPosition #239 @188 RefTypeDef <Ivl:12 V14> STORE_LCL_VAR BB06 regmask=[allInt] minReg=1>
<RefPosition #240 @189 RefTypeBB  BB07 regmask=[] minReg=1>
<RefPosition #241 @193 RefTypeUse <Ivl:5 V07> LCL_VAR BB07 regmask=[allInt] minReg=1>
<RefPosition #242 @194 RefTypeDef <Ivl:42> LEA BB07 regmask=[rcx] minReg=1>
<RefPosition #243 @197 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #244 @197 RefTypeUse <Ivl:42>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #245 @197 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #246 @197 RefTypeUse <Ivl:12 V14> LCL_VAR BB07 regmask=[rdx] minReg=1 last fixed>
<RefPosition #247 @198 RefTypeKill <Reg:rax>  BB07 regmask=[rax] minReg=1 last>
<RefPosition #248 @198 RefTypeKill <Reg:rcx>  BB07 regmask=[rcx] minReg=1 last>
<RefPosition #249 @198 RefTypeKill <Reg:rdx>  BB07 regmask=[rdx] minReg=1 last>
<RefPosition #250 @198 RefTypeKill <Reg:r8 >  BB07 regmask=[r8] minReg=1 last>
<RefPosition #251 @198 RefTypeKill <Reg:r9 >  BB07 regmask=[r9] minReg=1 last>
<RefPosition #252 @198 RefTypeKill <Reg:r10>  BB07 regmask=[r10] minReg=1 last>
<RefPosition #253 @198 RefTypeKill <Reg:r11>  BB07 regmask=[r11] minReg=1 last>
<RefPosition #254 @198 RefTypeKill <Reg:mm0>  BB07 regmask=[mm0] minReg=1 last>
<RefPosition #255 @198 RefTypeKill <Reg:mm1>  BB07 regmask=[mm1] minReg=1 last>
<RefPosition #256 @198 RefTypeKill <Reg:mm2>  BB07 regmask=[mm2] minReg=1 last>
<RefPosition #257 @198 RefTypeKill <Reg:mm3>  BB07 regmask=[mm3] minReg=1 last>
<RefPosition #258 @198 RefTypeKill <Reg:mm4>  BB07 regmask=[mm4] minReg=1 last>
<RefPosition #259 @198 RefTypeKill <Reg:mm5>  BB07 regmask=[mm5] minReg=1 last>
<RefPosition #260 @201 RefTypeFixedReg <Reg:rax>  BB07 regmask=[rax] minReg=1>
<RefPosition #261 @201 RefTypeUse <Ivl:5 V07> LCL_VAR BB07 regmask=[rax] minReg=1 last fixed>
-----------------
<RefPosition #30  @16  RefTypeDef <Ivl:5 V07> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #53  @37  RefTypeUse <Ivl:5 V07> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #94  @63  RefTypeUse <Ivl:5 V07> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #135 @89  RefTypeUse <Ivl:5 V07> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #188 @141 RefTypeUse <Ivl:5 V07> LCL_VAR BB04 regmask=[allInt] minReg=1>
<RefPosition #241 @193 RefTypeUse <Ivl:5 V07> LCL_VAR BB07 regmask=[allInt] minReg=1>
<RefPosition #261 @201 RefTypeUse <Ivl:5 V07> LCL_VAR BB07 regmask=[rax] minReg=1 last fixed>
-----------------
<RefPosition #155 @98  RefTypeDef <Ivl:10 V12> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #156 @103 RefTypeUse <Ivl:10 V12> LCL_VAR BB01 regmask=[allInt] minReg=1 regOptional>
<RefPosition #161 @119 RefTypeUse <Ivl:10 V12> LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #186 @136 RefTypeDef <Ivl:10 V12> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #193 @145 RefTypeUse <Ivl:10 V12> LCL_VAR BB04 regmask=[rdx] minReg=1 last fixed>
-----------------
<RefPosition #208 @150 RefTypeDef <Ivl:12 V14> STORE_LCL_VAR BB04 regmask=[allInt] minReg=1>
<RefPosition #209 @155 RefTypeUse <Ivl:12 V14> LCL_VAR BB04 regmask=[allInt] minReg=1 regOptional>
<RefPosition #214 @171 RefTypeUse <Ivl:12 V14> LCL_VAR BB05 regmask=[allInt] minReg=1>
<RefPosition #239 @188 RefTypeDef <Ivl:12 V14> STORE_LCL_VAR BB06 regmask=[allInt] minReg=1>
<RefPosition #246 @197 RefTypeUse <Ivl:12 V14> LCL_VAR BB07 regmask=[rdx] minReg=1 last fixed>
-----------------
<RefPosition #48  @24  RefTypeDef <Ivl:6 V08> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #51  @33  RefTypeUse <Ivl:6 V08> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #58  @41  RefTypeUse <Ivl:6 V08> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
-----------------
<RefPosition #89  @50  RefTypeDef <Ivl:7 V09> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #92  @59  RefTypeUse <Ivl:7 V09> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #99  @67  RefTypeUse <Ivl:7 V09> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
-----------------
<RefPosition #130 @76  RefTypeDef <Ivl:8 V10> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #133 @85  RefTypeUse <Ivl:8 V10> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #140 @93  RefTypeUse <Ivl:8 V10> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
-----------------
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V01>  BB00 regmask=[rdx] minReg=1 fixed regOptional>
<RefPosition #49  @27  RefTypeUse <Ivl:0 V01> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
-----------------
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V02>  BB00 regmask=[r8] minReg=1 fixed regOptional>
<RefPosition #90  @53  RefTypeUse <Ivl:1 V02> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
-----------------
<RefPosition #2   @0   RefTypeParamDef <Ivl:2 V03>  BB00 regmask=[r9] minReg=1 fixed regOptional>
<RefPosition #131 @79  RefTypeUse <Ivl:2 V03> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
-----------------
<RefPosition #160 @116 RefTypeDef <Ivl:9 V11> STORE_LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #162 @119 RefTypeUse <Ivl:9 V11> LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #165 @127 RefTypeUse <Ivl:9 V11> LCL_VAR BB03 regmask=[rcx] minReg=1 last fixed>
-----------------
<RefPosition #213 @168 RefTypeDef <Ivl:11 V13> STORE_LCL_VAR BB05 regmask=[allInt] minReg=1>
<RefPosition #215 @171 RefTypeUse <Ivl:11 V13> LCL_VAR BB05 regmask=[allInt] minReg=1>
<RefPosition #218 @179 RefTypeUse <Ivl:11 V13> LCL_VAR BB06 regmask=[rcx] minReg=1 last fixed>
-----------------
<RefPosition #3   @0   RefTypeParamDef <Ivl:3 V04>  BB00 regmask=[allInt] minReg=1 regOptional>
<RefPosition #154 @97  RefTypeUse <Ivl:3 V04> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #169 @131 RefTypeUse <Ivl:3 V04> LCL_VAR BB03 regmask=[rdx] minReg=1 last fixed>
-----------------
<RefPosition #4   @0   RefTypeParamDef <Ivl:4 V05>  BB00 regmask=[allInt] minReg=1 regOptional>
<RefPosition #207 @149 RefTypeUse <Ivl:4 V05> LCL_VAR BB04 regmask=[allInt] minReg=1>
<RefPosition #222 @183 RefTypeUse <Ivl:4 V05> LCL_VAR BB06 regmask=[rdx] minReg=1 last fixed>
TUPLE STYLE DUMP WITH REF POSITIONS
Incoming Parameters:  V01 V02 V03 V04 V05
BB01 [000..???) -> BB04 (cond), preds={} succs={BB02,BB04}
=====
  N003.                    IL_OFFSET IL offset: 0x0
  N005.                    CNS_INT(h) 0xd1ffab1e class
        Def:<I13>(#6)
  N007.                    PUTARG_REG
                               Use:<I13>(#8) Fixed:rcx(#7) *
        Def:<I14>(#10) rcx
  N009.                    CNS_INT   5
        Def:<I15>(#11)
  N011.                    PUTARG_REG
                               Use:<I15>(#13) Fixed:rdx(#12) *
        Def:<I16>(#15) rdx
  N013.                    CALL help
                               Use:<I14>(#17) Fixed:rcx(#16) *
                               Use:<I16>(#19) Fixed:rdx(#18) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I17>(#28) rax Pref:<V07/L5>
  N015.                    V07(L5)
                               Use:<I17>(#29) *
        Def:<V07/L5>(#30)
  N017.                    CNS_INT(h) 0xd1ffab1e class
        Def:<I18>(#31)
  N019.                    PUTARG_REG
                               Use:<I18>(#33) Fixed:rcx(#32) *
        Def:<I19>(#35) rcx
  N021.                    CALL help
                               Use:<I19>(#37) Fixed:rcx(#36) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I20>(#46) rax Pref:<V08/L6>
  N023.                    V08(L6)
                               Use:<I20>(#47) *
        Def:<V08/L6>(#48)
  N025.                    V01(L0)
  N027.                    CAST     
                               Use:<V01/L0>(#49) *
        Def:<I21>(#50)
  N029.                    V08(L6)
  N031.                    LEA(b+8) 
  N033.                    STOREIND 
                               Use:<V08/L6>(#51)
                               Use:<I21>(#52) *
  N035.                    V07(L5)
  N037.                    LEA(b+16)
                               Use:<V07/L5>(#53)
        Def:<I22>(#54)
  N039.                    V08(L6)
  N041.                    STOREIND 
                               Use:<I22>(#56) Fixed:rcx(#55) *
                               Use:<V08/L6>(#58) Fixed:rdx(#57) *
        Kill: rax rcx rdx r8 r9 r10 r11 mm0 mm1 mm2 mm3 mm4 mm5 
  N043.                    CNS_INT(h) 0xd1ffab1e class
        Def:<I23>(#72)
  N045.                    PUTARG_REG
                               Use:<I23>(#74) Fixed:rcx(#73) *
        Def:<I24>(#76) rcx
  N047.                    CALL help
                               Use:<I24>(#78) Fixed:rcx(#77) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I25>(#87) rax Pref:<V09/L7>
  N049.                    V09(L7)
                               Use:<I25>(#88) *
        Def:<V09/L7>(#89)
  N051.                    V02(L1)
  N053.                    CAST     
                               Use:<V02/L1>(#90) *
        Def:<I26>(#91)
  N055.                    V09(L7)
  N057.                    LEA(b+8) 
  N059.                    STOREIND 
                               Use:<V09/L7>(#92)
                               Use:<I26>(#93) *
  N061.                    V07(L5)
  N063.                    LEA(b+24)
                               Use:<V07/L5>(#94)
        Def:<I27>(#95)
  N065.                    V09(L7)
  N067.                    STOREIND 
                               Use:<I27>(#97) Fixed:rcx(#96) *
                               Use:<V09/L7>(#99) Fixed:rdx(#98) *
        Kill: rax rcx rdx r8 r9 r10 r11 mm0 mm1 mm2 mm3 mm4 mm5 
  N069.                    CNS_INT(h) 0xd1ffab1e class
        Def:<I28>(#113)
  N071.                    PUTARG_REG
                               Use:<I28>(#115) Fixed:rcx(#114) *
        Def:<I29>(#117) rcx
  N073.                    CALL help
                               Use:<I29>(#119) Fixed:rcx(#118) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I30>(#128) rax Pref:<V10/L8>
  N075.                    V10(L8)
                               Use:<I30>(#129) *
        Def:<V10/L8>(#130)
  N077.                    V03(L2)
  N079.                    CAST     
                               Use:<V03/L2>(#131) *
        Def:<I31>(#132)
  N081.                    V10(L8)
  N083.                    LEA(b+8) 
  N085.                    STOREIND 
                               Use:<V10/L8>(#133)
                               Use:<I31>(#134) *
  N087.                    V07(L5)
  N089.                    LEA(b+32)
                               Use:<V07/L5>(#135)
        Def:<I32>(#136)
  N091.                    V10(L8)
  N093.                    STOREIND 
                               Use:<I32>(#138) Fixed:rcx(#137) *
                               Use:<V10/L8>(#140) Fixed:rdx(#139) *
        Kill: rax rcx rdx r8 r9 r10 r11 mm0 mm1 mm2 mm3 mm4 mm5 
  N095.                    V04(L3)
  N097.                    V12(L10)
                               Use:<V04/L3>(#154)
        Def:<V12/L10>(#155)
  N099.                    V12(L10)
  N101.                    CNS_INT   null
  N103.                    EQ       
                               Use:<V12/L10>(#156)
  N105.                    JTRUE    

BB02 [???..???) -> BB04 (cond), preds={BB01} succs={BB03,BB04}
=====
  N109.                    V12(L10)
  N111.                    IND      
  N113.                    CNS_INT(h) 0xd1ffab1e class
        Def:<I33>(#158) Pref:<V11/L9>
  N115.                    V11(L9)
                               Use:<I33>(#159) *
        Def:<V11/L9>(#160)
  N117.                    V11(L9)
  N119.                    EQ       
                               Use:<V12/L10>(#161)
                               Use:<V11/L9>(#162)
  N121.                    JTRUE    

BB03 [???..???), preds={BB02} succs={BB04}
=====
  N125.                    V11(L9)
  N127.                    PUTARG_REG
                               Use:<V11/L9>(#165) Fixed:rcx(#164) *
        Def:<I34>(#167) rcx
  N129.                    V04(L3)
  N131.                    PUTARG_REG
                               Use:<V04/L3>(#169) Fixed:rdx(#168) *
        Def:<I35>(#171) rdx
  N133.                    CALL help
                               Use:<I34>(#173) Fixed:rcx(#172) *
                               Use:<I35>(#175) Fixed:rdx(#174) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I36>(#184) rax Pref:<V12/L10>
  N135.                    V12(L10)
                               Use:<I36>(#185) *
        Def:<V12/L10>(#186)

BB04 [???..???) -> BB07 (cond), preds={BB01,BB02,BB03} succs={BB05,BB07}
=====
  N139.                    V07(L5)
  N141.                    LEA(b+40)
                               Use:<V07/L5>(#188)
        Def:<I37>(#189)
  N143.                    V12(L10)
  N145.                    STOREIND 
                               Use:<I37>(#191) Fixed:rcx(#190) *
                               Use:<V12/L10>(#193) Fixed:rdx(#192) *
        Kill: rax rcx rdx r8 r9 r10 r11 mm0 mm1 mm2 mm3 mm4 mm5 
  N147.                    V05(L4)
  N149.                    V14(L12)
                               Use:<V05/L4>(#207)
        Def:<V14/L12>(#208)
  N151.                    V14(L12)
  N153.                    CNS_INT   null
  N155.                    EQ       
                               Use:<V14/L12>(#209)
  N157.                    JTRUE    

BB05 [???..???) -> BB07 (cond), preds={BB04} succs={BB06,BB07}
=====
  N161.                    V14(L12)
  N163.                    IND      
  N165.                    CNS_INT(h) 0xd1ffab1e class
        Def:<I38>(#211) Pref:<V13/L11>
  N167.                    V13(L11)
                               Use:<I38>(#212) *
        Def:<V13/L11>(#213)
  N169.                    V13(L11)
  N171.                    EQ       
                               Use:<V14/L12>(#214)
                               Use:<V13/L11>(#215)
  N173.                    JTRUE    

BB06 [???..???), preds={BB05} succs={BB07}
=====
  N177.                    V13(L11)
  N179.                    PUTARG_REG
                               Use:<V13/L11>(#218) Fixed:rcx(#217) *
        Def:<I39>(#220) rcx
  N181.                    V05(L4)
  N183.                    PUTARG_REG
                               Use:<V05/L4>(#222) Fixed:rdx(#221) *
        Def:<I40>(#224) rdx
  N185.                    CALL help
                               Use:<I39>(#226) Fixed:rcx(#225) *
                               Use:<I40>(#228) Fixed:rdx(#227) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I41>(#237) rax Pref:<V14/L12>
  N187.                    V14(L12)
                               Use:<I41>(#238) *
        Def:<V14/L12>(#239)

BB07 [???..037) (return), preds={BB04,BB05,BB06} succs={}
=====
  N191.                    V07(L5)
  N193.                    LEA(b+48)
                               Use:<V07/L5>(#241)
        Def:<I42>(#242)
  N195.                    V14(L12)
  N197.                    STOREIND 
                               Use:<I42>(#244) Fixed:rcx(#243) *
                               Use:<V14/L12>(#246) Fixed:rdx(#245) *
        Kill: rax rcx rdx r8 r9 r10 r11 mm0 mm1 mm2 mm3 mm4 mm5 
  N199.                    V07(L5)
  N201.                    RETURN   
                               Use:<V07/L5>(#261) Fixed:rax(#260) *




Linear scan intervals after buildIntervals:
Interval  0: (V01) int RefPositions {#0@0 #49@27} physReg:rdx Preferences=[rbx rbp rsi rdi r12-r15]
Interval  1: (V02) int RefPositions {#1@0 #90@53} physReg:r8 Preferences=[rbx rbp rsi rdi r12-r15]
Interval  2: (V03) int RefPositions {#2@0 #131@79} physReg:r9 Preferences=[rbx rbp rsi rdi r12-r15]
Interval  3: (V04) ref RefPositions {#3@0 #154@97 #169@131} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  4: (V05) ref RefPositions {#4@0 #207@149 #222@183} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  5: (V07) ref RefPositions {#30@16 #53@37 #94@63 #135@89 #188@141 #241@193 #261@201} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  6: (V08) ref RefPositions {#48@24 #51@33 #58@41} physReg:NA Preferences=[rdx]
Interval  7: (V09) ref RefPositions {#89@50 #92@59 #99@67} physReg:NA Preferences=[rdx]
Interval  8: (V10) ref RefPositions {#130@76 #133@85 #140@93} physReg:NA Preferences=[rdx]
Interval  9: (V11) long RefPositions {#160@116 #162@119 #165@127} physReg:NA Preferences=[rcx]
Interval 10: (V12) ref RefPositions {#155@98 #156@103 #161@119 #186@136 #193@145} physReg:NA Preferences=[rdx]
Interval 11: (V13) long RefPositions {#213@168 #215@171 #218@179} physReg:NA Preferences=[rcx]
Interval 12: (V14) ref RefPositions {#208@150 #209@155 #214@171 #239@188 #246@197} physReg:NA Preferences=[rdx]
Interval 13: long (constant) RefPositions {#6@6 #8@7} physReg:NA Preferences=[rcx]
Interval 14: long RefPositions {#10@8 #17@13} physReg:NA Preferences=[rcx]
Interval 15: long (constant) RefPositions {#11@10 #13@11} physReg:NA Preferences=[rdx]
Interval 16: long RefPositions {#15@12 #19@13} physReg:NA Preferences=[rdx]
Interval 17: ref RefPositions {#28@14 #29@15} physReg:NA Preferences=[rax] RelatedInterval <V07/L5>
Interval 18: long (constant) RefPositions {#31@18 #33@19} physReg:NA Preferences=[rcx]
Interval 19: long RefPositions {#35@20 #37@21} physReg:NA Preferences=[rcx]
Interval 20: ref RefPositions {#46@22 #47@23} physReg:NA Preferences=[rax] RelatedInterval <V08/L6>
Interval 21: long RefPositions {#50@28 #52@33} physReg:NA Preferences=[allInt]
Interval 22: byref RefPositions {#54@38 #56@41} physReg:NA Preferences=[rcx]
Interval 23: long (constant) RefPositions {#72@44 #74@45} physReg:NA Preferences=[rcx]
Interval 24: long RefPositions {#76@46 #78@47} physReg:NA Preferences=[rcx]
Interval 25: ref RefPositions {#87@48 #88@49} physReg:NA Preferences=[rax] RelatedInterval <V09/L7>
Interval 26: int RefPositions {#91@54 #93@59} physReg:NA Preferences=[allInt]
Interval 27: byref RefPositions {#95@64 #97@67} physReg:NA Preferences=[rcx]
Interval 28: long (constant) RefPositions {#113@70 #115@71} physReg:NA Preferences=[rcx]
Interval 29: long RefPositions {#117@72 #119@73} physReg:NA Preferences=[rcx]
Interval 30: ref RefPositions {#128@74 #129@75} physReg:NA Preferences=[rax] RelatedInterval <V10/L8>
Interval 31: int RefPositions {#132@80 #134@85} physReg:NA Preferences=[allInt]
Interval 32: byref RefPositions {#136@90 #138@93} physReg:NA Preferences=[rcx]
Interval 33: long (constant) RefPositions {#158@114 #159@115} physReg:NA Preferences=[allInt] RelatedInterval <V11/L9>
Interval 34: long RefPositions {#167@128 #173@133} physReg:NA Preferences=[rcx]
Interval 35: ref RefPositions {#171@132 #175@133} physReg:NA Preferences=[rdx]
Interval 36: ref RefPositions {#184@134 #185@135} physReg:NA Preferences=[rax] RelatedInterval <V12/L10>
Interval 37: byref RefPositions {#189@142 #191@145} physReg:NA Preferences=[rcx]
Interval 38: long (constant) RefPositions {#211@166 #212@167} physReg:NA Preferences=[allInt] RelatedInterval <V13/L11>
Interval 39: long RefPositions {#220@180 #226@185} physReg:NA Preferences=[rcx]
Interval 40: ref RefPositions {#224@184 #228@185} physReg:NA Preferences=[rdx]
Interval 41: ref RefPositions {#237@186 #238@187} physReg:NA Preferences=[rax] RelatedInterval <V14/L12>
Interval 42: byref RefPositions {#242@194 #244@197} physReg:NA Preferences=[rcx]

*************** In LinearScan::allocateRegisters()

Linear scan intervals before allocateRegisters:
Interval  0: (V01) int RefPositions {#0@0 #49@27} physReg:rdx Preferences=[rbx rbp rsi rdi r12-r15]
Interval  1: (V02) int RefPositions {#1@0 #90@53} physReg:r8 Preferences=[rbx rbp rsi rdi r12-r15]
Interval  2: (V03) int RefPositions {#2@0 #131@79} physReg:r9 Preferences=[rbx rbp rsi rdi r12-r15]
Interval  3: (V04) ref RefPositions {#3@0 #154@97 #169@131} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  4: (V05) ref RefPositions {#4@0 #207@149 #222@183} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  5: (V07) ref RefPositions {#30@16 #53@37 #94@63 #135@89 #188@141 #241@193 #261@201} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  6: (V08) ref RefPositions {#48@24 #51@33 #58@41} physReg:NA Preferences=[rdx]
Interval  7: (V09) ref RefPositions {#89@50 #92@59 #99@67} physReg:NA Preferences=[rdx]
Interval  8: (V10) ref RefPositions {#130@76 #133@85 #140@93} physReg:NA Preferences=[rdx]
Interval  9: (V11) long RefPositions {#160@116 #162@119 #165@127} physReg:NA Preferences=[rcx]
Interval 10: (V12) ref RefPositions {#155@98 #156@103 #161@119 #186@136 #193@145} physReg:NA Preferences=[rdx]
Interval 11: (V13) long RefPositions {#213@168 #215@171 #218@179} physReg:NA Preferences=[rcx]
Interval 12: (V14) ref RefPositions {#208@150 #209@155 #214@171 #239@188 #246@197} physReg:NA Preferences=[rdx]
Interval 13: long (constant) RefPositions {#6@6 #8@7} physReg:NA Preferences=[rcx]
Interval 14: long RefPositions {#10@8 #17@13} physReg:NA Preferences=[rcx]
Interval 15: long (constant) RefPositions {#11@10 #13@11} physReg:NA Preferences=[rdx]
Interval 16: long RefPositions {#15@12 #19@13} physReg:NA Preferences=[rdx]
Interval 17: ref RefPositions {#28@14 #29@15} physReg:NA Preferences=[rax] RelatedInterval <V07/L5>
Interval 18: long (constant) RefPositions {#31@18 #33@19} physReg:NA Preferences=[rcx]
Interval 19: long RefPositions {#35@20 #37@21} physReg:NA Preferences=[rcx]
Interval 20: ref RefPositions {#46@22 #47@23} physReg:NA Preferences=[rax] RelatedInterval <V08/L6>
Interval 21: long RefPositions {#50@28 #52@33} physReg:NA Preferences=[allInt]
Interval 22: byref RefPositions {#54@38 #56@41} physReg:NA Preferences=[rcx]
Interval 23: long (constant) RefPositions {#72@44 #74@45} physReg:NA Preferences=[rcx]
Interval 24: long RefPositions {#76@46 #78@47} physReg:NA Preferences=[rcx]
Interval 25: ref RefPositions {#87@48 #88@49} physReg:NA Preferences=[rax] RelatedInterval <V09/L7>
Interval 26: int RefPositions {#91@54 #93@59} physReg:NA Preferences=[allInt]
Interval 27: byref RefPositions {#95@64 #97@67} physReg:NA Preferences=[rcx]
Interval 28: long (constant) RefPositions {#113@70 #115@71} physReg:NA Preferences=[rcx]
Interval 29: long RefPositions {#117@72 #119@73} physReg:NA Preferences=[rcx]
Interval 30: ref RefPositions {#128@74 #129@75} physReg:NA Preferences=[rax] RelatedInterval <V10/L8>
Interval 31: int RefPositions {#132@80 #134@85} physReg:NA Preferences=[allInt]
Interval 32: byref RefPositions {#136@90 #138@93} physReg:NA Preferences=[rcx]
Interval 33: long (constant) RefPositions {#158@114 #159@115} physReg:NA Preferences=[allInt] RelatedInterval <V11/L9>
Interval 34: long RefPositions {#167@128 #173@133} physReg:NA Preferences=[rcx]
Interval 35: ref RefPositions {#171@132 #175@133} physReg:NA Preferences=[rdx]
Interval 36: ref RefPositions {#184@134 #185@135} physReg:NA Preferences=[rax] RelatedInterval <V12/L10>
Interval 37: byref RefPositions {#189@142 #191@145} physReg:NA Preferences=[rcx]
Interval 38: long (constant) RefPositions {#211@166 #212@167} physReg:NA Preferences=[allInt] RelatedInterval <V13/L11>
Interval 39: long RefPositions {#220@180 #226@185} physReg:NA Preferences=[rcx]
Interval 40: ref RefPositions {#224@184 #228@185} physReg:NA Preferences=[rdx]
Interval 41: ref RefPositions {#237@186 #238@187} physReg:NA Preferences=[rax] RelatedInterval <V14/L12>
Interval 42: byref RefPositions {#242@194 #244@197} physReg:NA Preferences=[rcx]

------------
REFPOSITIONS BEFORE ALLOCATION: 
------------
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V01>  BB00 regmask=[rdx] minReg=1 fixed regOptional>
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V02>  BB00 regmask=[r8] minReg=1 fixed regOptional>
<RefPosition #2   @0   RefTypeParamDef <Ivl:2 V03>  BB00 regmask=[r9] minReg=1 fixed regOptional>
<RefPosition #3   @0   RefTypeParamDef <Ivl:3 V04>  BB00 regmask=[allInt] minReg=1 regOptional>
<RefPosition #4   @0   RefTypeParamDef <Ivl:4 V05>  BB00 regmask=[allInt] minReg=1 regOptional>
<RefPosition #5   @1   RefTypeBB  BB01 regmask=[] minReg=1>
<RefPosition #6   @6   RefTypeDef <Ivl:13> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #7   @7   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #8   @7   RefTypeUse <Ivl:13>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #9   @8   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #10  @8   RefTypeDef <Ivl:14> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #11  @10  RefTypeDef <Ivl:15> CNS_INT BB01 regmask=[rdx] minReg=1>
<RefPosition #12  @11  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #13  @11  RefTypeUse <Ivl:15>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #14  @12  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #15  @12  RefTypeDef <Ivl:16> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>
<RefPosition #16  @13  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #17  @13  RefTypeUse <Ivl:14>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #18  @13  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #19  @13  RefTypeUse <Ivl:16>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #20  @14  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #21  @14  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #22  @14  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #23  @14  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #24  @14  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #25  @14  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #26  @14  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #27  @14  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #28  @14  RefTypeDef <Ivl:17> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #29  @15  RefTypeUse <Ivl:17>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #30  @16  RefTypeDef <Ivl:5 V07> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #31  @18  RefTypeDef <Ivl:18> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #32  @19  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #33  @19  RefTypeUse <Ivl:18>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #34  @20  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #35  @20  RefTypeDef <Ivl:19> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #36  @21  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #37  @21  RefTypeUse <Ivl:19>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #38  @22  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #39  @22  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #40  @22  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #41  @22  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #42  @22  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #43  @22  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #44  @22  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #45  @22  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #46  @22  RefTypeDef <Ivl:20> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #47  @23  RefTypeUse <Ivl:20>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #48  @24  RefTypeDef <Ivl:6 V08> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #49  @27  RefTypeUse <Ivl:0 V01> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #50  @28  RefTypeDef <Ivl:21> CAST BB01 regmask=[allInt] minReg=1>
<RefPosition #51  @33  RefTypeUse <Ivl:6 V08> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #52  @33  RefTypeUse <Ivl:21>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #53  @37  RefTypeUse <Ivl:5 V07> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #54  @38  RefTypeDef <Ivl:22> LEA BB01 regmask=[rcx] minReg=1>
<RefPosition #55  @41  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #56  @41  RefTypeUse <Ivl:22>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #57  @41  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #58  @41  RefTypeUse <Ivl:6 V08> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #59  @42  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #60  @42  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #61  @42  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #62  @42  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #63  @42  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #64  @42  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #65  @42  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #66  @42  RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1 last>
<RefPosition #67  @42  RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1 last>
<RefPosition #68  @42  RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1 last>
<RefPosition #69  @42  RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1 last>
<RefPosition #70  @42  RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1 last>
<RefPosition #71  @42  RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1 last>
<RefPosition #72  @44  RefTypeDef <Ivl:23> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #73  @45  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #74  @45  RefTypeUse <Ivl:23>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #75  @46  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #76  @46  RefTypeDef <Ivl:24> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #77  @47  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #78  @47  RefTypeUse <Ivl:24>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #79  @48  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #80  @48  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #81  @48  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #82  @48  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #83  @48  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #84  @48  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #85  @48  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #86  @48  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #87  @48  RefTypeDef <Ivl:25> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #88  @49  RefTypeUse <Ivl:25>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #89  @50  RefTypeDef <Ivl:7 V09> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #90  @53  RefTypeUse <Ivl:1 V02> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #91  @54  RefTypeDef <Ivl:26> CAST BB01 regmask=[allInt] minReg=1>
<RefPosition #92  @59  RefTypeUse <Ivl:7 V09> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #93  @59  RefTypeUse <Ivl:26>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #94  @63  RefTypeUse <Ivl:5 V07> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #95  @64  RefTypeDef <Ivl:27> LEA BB01 regmask=[rcx] minReg=1>
<RefPosition #96  @67  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #97  @67  RefTypeUse <Ivl:27>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #98  @67  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #99  @67  RefTypeUse <Ivl:7 V09> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #100 @68  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #101 @68  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #102 @68  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #103 @68  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #104 @68  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #105 @68  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #106 @68  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #107 @68  RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1 last>
<RefPosition #108 @68  RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1 last>
<RefPosition #109 @68  RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1 last>
<RefPosition #110 @68  RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1 last>
<RefPosition #111 @68  RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1 last>
<RefPosition #112 @68  RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1 last>
<RefPosition #113 @70  RefTypeDef <Ivl:28> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #114 @71  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #115 @71  RefTypeUse <Ivl:28>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #116 @72  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #117 @72  RefTypeDef <Ivl:29> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #118 @73  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #119 @73  RefTypeUse <Ivl:29>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #120 @74  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #121 @74  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #122 @74  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #123 @74  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #124 @74  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #125 @74  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #126 @74  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #127 @74  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #128 @74  RefTypeDef <Ivl:30> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #129 @75  RefTypeUse <Ivl:30>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #130 @76  RefTypeDef <Ivl:8 V10> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #131 @79  RefTypeUse <Ivl:2 V03> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #132 @80  RefTypeDef <Ivl:31> CAST BB01 regmask=[allInt] minReg=1>
<RefPosition #133 @85  RefTypeUse <Ivl:8 V10> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #134 @85  RefTypeUse <Ivl:31>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #135 @89  RefTypeUse <Ivl:5 V07> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #136 @90  RefTypeDef <Ivl:32> LEA BB01 regmask=[rcx] minReg=1>
<RefPosition #137 @93  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #138 @93  RefTypeUse <Ivl:32>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #139 @93  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #140 @93  RefTypeUse <Ivl:8 V10> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #141 @94  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #142 @94  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #143 @94  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #144 @94  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #145 @94  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #146 @94  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #147 @94  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #148 @94  RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1 last>
<RefPosition #149 @94  RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1 last>
<RefPosition #150 @94  RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1 last>
<RefPosition #151 @94  RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1 last>
<RefPosition #152 @94  RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1 last>
<RefPosition #153 @94  RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1 last>
<RefPosition #154 @97  RefTypeUse <Ivl:3 V04> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #155 @98  RefTypeDef <Ivl:10 V12> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #156 @103 RefTypeUse <Ivl:10 V12> LCL_VAR BB01 regmask=[allInt] minReg=1 regOptional>
<RefPosition #157 @107 RefTypeBB  BB02 regmask=[] minReg=1>
<RefPosition #158 @114 RefTypeDef <Ivl:33> CNS_INT BB02 regmask=[allInt] minReg=1>
<RefPosition #159 @115 RefTypeUse <Ivl:33>  BB02 regmask=[allInt] minReg=1 last>
<RefPosition #160 @116 RefTypeDef <Ivl:9 V11> STORE_LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #161 @119 RefTypeUse <Ivl:10 V12> LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #162 @119 RefTypeUse <Ivl:9 V11> LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #163 @123 RefTypeBB  BB03 regmask=[] minReg=1>
<RefPosition #164 @127 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #165 @127 RefTypeUse <Ivl:9 V11> LCL_VAR BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #166 @128 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #167 @128 RefTypeDef <Ivl:34> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>
<RefPosition #168 @131 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #169 @131 RefTypeUse <Ivl:3 V04> LCL_VAR BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #170 @132 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #171 @132 RefTypeDef <Ivl:35> PUTARG_REG BB03 regmask=[rdx] minReg=1 fixed>
<RefPosition #172 @133 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #173 @133 RefTypeUse <Ivl:34>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #174 @133 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #175 @133 RefTypeUse <Ivl:35>  BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #176 @134 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #177 @134 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #178 @134 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #179 @134 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #180 @134 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #181 @134 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #182 @134 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #183 @134 RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #184 @134 RefTypeDef <Ivl:36> CALL BB03 regmask=[rax] minReg=1 fixed>
<RefPosition #185 @135 RefTypeUse <Ivl:36>  BB03 regmask=[allInt] minReg=1 last>
<RefPosition #186 @136 RefTypeDef <Ivl:10 V12> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #187 @137 RefTypeBB  BB04 regmask=[] minReg=1>
<RefPosition #188 @141 RefTypeUse <Ivl:5 V07> LCL_VAR BB04 regmask=[allInt] minReg=1>
<RefPosition #189 @142 RefTypeDef <Ivl:37> LEA BB04 regmask=[rcx] minReg=1>
<RefPosition #190 @145 RefTypeFixedReg <Reg:rcx>  BB04 regmask=[rcx] minReg=1>
<RefPosition #191 @145 RefTypeUse <Ivl:37>  BB04 regmask=[rcx] minReg=1 last fixed>
<RefPosition #192 @145 RefTypeFixedReg <Reg:rdx>  BB04 regmask=[rdx] minReg=1>
<RefPosition #193 @145 RefTypeUse <Ivl:10 V12> LCL_VAR BB04 regmask=[rdx] minReg=1 last fixed>
<RefPosition #194 @146 RefTypeKill <Reg:rax>  BB04 regmask=[rax] minReg=1 last>
<RefPosition #195 @146 RefTypeKill <Reg:rcx>  BB04 regmask=[rcx] minReg=1 last>
<RefPosition #196 @146 RefTypeKill <Reg:rdx>  BB04 regmask=[rdx] minReg=1 last>
<RefPosition #197 @146 RefTypeKill <Reg:r8 >  BB04 regmask=[r8] minReg=1 last>
<RefPosition #198 @146 RefTypeKill <Reg:r9 >  BB04 regmask=[r9] minReg=1 last>
<RefPosition #199 @146 RefTypeKill <Reg:r10>  BB04 regmask=[r10] minReg=1 last>
<RefPosition #200 @146 RefTypeKill <Reg:r11>  BB04 regmask=[r11] minReg=1 last>
<RefPosition #201 @146 RefTypeKill <Reg:mm0>  BB04 regmask=[mm0] minReg=1 last>
<RefPosition #202 @146 RefTypeKill <Reg:mm1>  BB04 regmask=[mm1] minReg=1 last>
<RefPosition #203 @146 RefTypeKill <Reg:mm2>  BB04 regmask=[mm2] minReg=1 last>
<RefPosition #204 @146 RefTypeKill <Reg:mm3>  BB04 regmask=[mm3] minReg=1 last>
<RefPosition #205 @146 RefTypeKill <Reg:mm4>  BB04 regmask=[mm4] minReg=1 last>
<RefPosition #206 @146 RefTypeKill <Reg:mm5>  BB04 regmask=[mm5] minReg=1 last>
<RefPosition #207 @149 RefTypeUse <Ivl:4 V05> LCL_VAR BB04 regmask=[allInt] minReg=1>
<RefPosition #208 @150 RefTypeDef <Ivl:12 V14> STORE_LCL_VAR BB04 regmask=[allInt] minReg=1>
<RefPosition #209 @155 RefTypeUse <Ivl:12 V14> LCL_VAR BB04 regmask=[allInt] minReg=1 regOptional>
<RefPosition #210 @159 RefTypeBB  BB05 regmask=[] minReg=1>
<RefPosition #211 @166 RefTypeDef <Ivl:38> CNS_INT BB05 regmask=[allInt] minReg=1>
<RefPosition #212 @167 RefTypeUse <Ivl:38>  BB05 regmask=[allInt] minReg=1 last>
<RefPosition #213 @168 RefTypeDef <Ivl:11 V13> STORE_LCL_VAR BB05 regmask=[allInt] minReg=1>
<RefPosition #214 @171 RefTypeUse <Ivl:12 V14> LCL_VAR BB05 regmask=[allInt] minReg=1>
<RefPosition #215 @171 RefTypeUse <Ivl:11 V13> LCL_VAR BB05 regmask=[allInt] minReg=1>
<RefPosition #216 @175 RefTypeBB  BB06 regmask=[] minReg=1>
<RefPosition #217 @179 RefTypeFixedReg <Reg:rcx>  BB06 regmask=[rcx] minReg=1>
<RefPosition #218 @179 RefTypeUse <Ivl:11 V13> LCL_VAR BB06 regmask=[rcx] minReg=1 last fixed>
<RefPosition #219 @180 RefTypeFixedReg <Reg:rcx>  BB06 regmask=[rcx] minReg=1>
<RefPosition #220 @180 RefTypeDef <Ivl:39> PUTARG_REG BB06 regmask=[rcx] minReg=1 fixed>
<RefPosition #221 @183 RefTypeFixedReg <Reg:rdx>  BB06 regmask=[rdx] minReg=1>
<RefPosition #222 @183 RefTypeUse <Ivl:4 V05> LCL_VAR BB06 regmask=[rdx] minReg=1 last fixed>
<RefPosition #223 @184 RefTypeFixedReg <Reg:rdx>  BB06 regmask=[rdx] minReg=1>
<RefPosition #224 @184 RefTypeDef <Ivl:40> PUTARG_REG BB06 regmask=[rdx] minReg=1 fixed>
<RefPosition #225 @185 RefTypeFixedReg <Reg:rcx>  BB06 regmask=[rcx] minReg=1>
<RefPosition #226 @185 RefTypeUse <Ivl:39>  BB06 regmask=[rcx] minReg=1 last fixed>
<RefPosition #227 @185 RefTypeFixedReg <Reg:rdx>  BB06 regmask=[rdx] minReg=1>
<RefPosition #228 @185 RefTypeUse <Ivl:40>  BB06 regmask=[rdx] minReg=1 last fixed>
<RefPosition #229 @186 RefTypeKill <Reg:rax>  BB06 regmask=[rax] minReg=1 last>
<RefPosition #230 @186 RefTypeKill <Reg:rcx>  BB06 regmask=[rcx] minReg=1 last>
<RefPosition #231 @186 RefTypeKill <Reg:rdx>  BB06 regmask=[rdx] minReg=1 last>
<RefPosition #232 @186 RefTypeKill <Reg:r8 >  BB06 regmask=[r8] minReg=1 last>
<RefPosition #233 @186 RefTypeKill <Reg:r9 >  BB06 regmask=[r9] minReg=1 last>
<RefPosition #234 @186 RefTypeKill <Reg:r10>  BB06 regmask=[r10] minReg=1 last>
<RefPosition #235 @186 RefTypeKill <Reg:r11>  BB06 regmask=[r11] minReg=1 last>
<RefPosition #236 @186 RefTypeFixedReg <Reg:rax>  BB06 regmask=[rax] minReg=1>
<RefPosition #237 @186 RefTypeDef <Ivl:41> CALL BB06 regmask=[rax] minReg=1 fixed>
<RefPosition #238 @187 RefTypeUse <Ivl:41>  BB06 regmask=[allInt] minReg=1 last>
<RefPosition #239 @188 RefTypeDef <Ivl:12 V14> STORE_LCL_VAR BB06 regmask=[allInt] minReg=1>
<RefPosition #240 @189 RefTypeBB  BB07 regmask=[] minReg=1>
<RefPosition #241 @193 RefTypeUse <Ivl:5 V07> LCL_VAR BB07 regmask=[allInt] minReg=1>
<RefPosition #242 @194 RefTypeDef <Ivl:42> LEA BB07 regmask=[rcx] minReg=1>
<RefPosition #243 @197 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #244 @197 RefTypeUse <Ivl:42>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #245 @197 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #246 @197 RefTypeUse <Ivl:12 V14> LCL_VAR BB07 regmask=[rdx] minReg=1 last fixed>
<RefPosition #247 @198 RefTypeKill <Reg:rax>  BB07 regmask=[rax] minReg=1 last>
<RefPosition #248 @198 RefTypeKill <Reg:rcx>  BB07 regmask=[rcx] minReg=1 last>
<RefPosition #249 @198 RefTypeKill <Reg:rdx>  BB07 regmask=[rdx] minReg=1 last>
<RefPosition #250 @198 RefTypeKill <Reg:r8 >  BB07 regmask=[r8] minReg=1 last>
<RefPosition #251 @198 RefTypeKill <Reg:r9 >  BB07 regmask=[r9] minReg=1 last>
<RefPosition #252 @198 RefTypeKill <Reg:r10>  BB07 regmask=[r10] minReg=1 last>
<RefPosition #253 @198 RefTypeKill <Reg:r11>  BB07 regmask=[r11] minReg=1 last>
<RefPosition #254 @198 RefTypeKill <Reg:mm0>  BB07 regmask=[mm0] minReg=1 last>
<RefPosition #255 @198 RefTypeKill <Reg:mm1>  BB07 regmask=[mm1] minReg=1 last>
<RefPosition #256 @198 RefTypeKill <Reg:mm2>  BB07 regmask=[mm2] minReg=1 last>
<RefPosition #257 @198 RefTypeKill <Reg:mm3>  BB07 regmask=[mm3] minReg=1 last>
<RefPosition #258 @198 RefTypeKill <Reg:mm4>  BB07 regmask=[mm4] minReg=1 last>
<RefPosition #259 @198 RefTypeKill <Reg:mm5>  BB07 regmask=[mm5] minReg=1 last>
<RefPosition #260 @201 RefTypeFixedReg <Reg:rax>  BB07 regmask=[rax] minReg=1>
<RefPosition #261 @201 RefTypeUse <Ivl:5 V07> LCL_VAR BB07 regmask=[rax] minReg=1 last fixed>

VAR REFPOSITIONS BEFORE ALLOCATION
--- V00
--- V01  (Interval 0)
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V01>  BB00 regmask=[rdx] minReg=1 fixed regOptional>
<RefPosition #49  @27  RefTypeUse <Ivl:0 V01> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
--- V02  (Interval 1)
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V02>  BB00 regmask=[r8] minReg=1 fixed regOptional>
<RefPosition #90  @53  RefTypeUse <Ivl:1 V02> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
--- V03  (Interval 2)
<RefPosition #2   @0   RefTypeParamDef <Ivl:2 V03>  BB00 regmask=[r9] minReg=1 fixed regOptional>
<RefPosition #131 @79  RefTypeUse <Ivl:2 V03> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
--- V04  (Interval 3)
<RefPosition #3   @0   RefTypeParamDef <Ivl:3 V04>  BB00 regmask=[allInt] minReg=1 regOptional>
<RefPosition #154 @97  RefTypeUse <Ivl:3 V04> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #169 @131 RefTypeUse <Ivl:3 V04> LCL_VAR BB03 regmask=[rdx] minReg=1 last fixed>
--- V05  (Interval 4)
<RefPosition #4   @0   RefTypeParamDef <Ivl:4 V05>  BB00 regmask=[allInt] minReg=1 regOptional>
<RefPosition #207 @149 RefTypeUse <Ivl:4 V05> LCL_VAR BB04 regmask=[allInt] minReg=1>
<RefPosition #222 @183 RefTypeUse <Ivl:4 V05> LCL_VAR BB06 regmask=[rdx] minReg=1 last fixed>
--- V06
--- V07  (Interval 5)
<RefPosition #30  @16  RefTypeDef <Ivl:5 V07> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #53  @37  RefTypeUse <Ivl:5 V07> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #94  @63  RefTypeUse <Ivl:5 V07> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #135 @89  RefTypeUse <Ivl:5 V07> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #188 @141 RefTypeUse <Ivl:5 V07> LCL_VAR BB04 regmask=[allInt] minReg=1>
<RefPosition #241 @193 RefTypeUse <Ivl:5 V07> LCL_VAR BB07 regmask=[allInt] minReg=1>
<RefPosition #261 @201 RefTypeUse <Ivl:5 V07> LCL_VAR BB07 regmask=[rax] minReg=1 last fixed>
--- V08  (Interval 6)
<RefPosition #48  @24  RefTypeDef <Ivl:6 V08> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #51  @33  RefTypeUse <Ivl:6 V08> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #58  @41  RefTypeUse <Ivl:6 V08> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
--- V09  (Interval 7)
<RefPosition #89  @50  RefTypeDef <Ivl:7 V09> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #92  @59  RefTypeUse <Ivl:7 V09> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #99  @67  RefTypeUse <Ivl:7 V09> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
--- V10  (Interval 8)
<RefPosition #130 @76  RefTypeDef <Ivl:8 V10> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #133 @85  RefTypeUse <Ivl:8 V10> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #140 @93  RefTypeUse <Ivl:8 V10> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
--- V11  (Interval 9)
<RefPosition #160 @116 RefTypeDef <Ivl:9 V11> STORE_LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #162 @119 RefTypeUse <Ivl:9 V11> LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #165 @127 RefTypeUse <Ivl:9 V11> LCL_VAR BB03 regmask=[rcx] minReg=1 last fixed>
--- V12  (Interval 10)
<RefPosition #155 @98  RefTypeDef <Ivl:10 V12> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #156 @103 RefTypeUse <Ivl:10 V12> LCL_VAR BB01 regmask=[allInt] minReg=1 regOptional>
<RefPosition #161 @119 RefTypeUse <Ivl:10 V12> LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #186 @136 RefTypeDef <Ivl:10 V12> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #193 @145 RefTypeUse <Ivl:10 V12> LCL_VAR BB04 regmask=[rdx] minReg=1 last fixed>
--- V13  (Interval 11)
<RefPosition #213 @168 RefTypeDef <Ivl:11 V13> STORE_LCL_VAR BB05 regmask=[allInt] minReg=1>
<RefPosition #215 @171 RefTypeUse <Ivl:11 V13> LCL_VAR BB05 regmask=[allInt] minReg=1>
<RefPosition #218 @179 RefTypeUse <Ivl:11 V13> LCL_VAR BB06 regmask=[rcx] minReg=1 last fixed>
--- V14  (Interval 12)
<RefPosition #208 @150 RefTypeDef <Ivl:12 V14> STORE_LCL_VAR BB04 regmask=[allInt] minReg=1>
<RefPosition #209 @155 RefTypeUse <Ivl:12 V14> LCL_VAR BB04 regmask=[allInt] minReg=1 regOptional>
<RefPosition #214 @171 RefTypeUse <Ivl:12 V14> LCL_VAR BB05 regmask=[allInt] minReg=1>
<RefPosition #239 @188 RefTypeDef <Ivl:12 V14> STORE_LCL_VAR BB06 regmask=[allInt] minReg=1>
<RefPosition #246 @197 RefTypeUse <Ivl:12 V14> LCL_VAR BB07 regmask=[rdx] minReg=1 last fixed>



Allocating Registers
--------------------
The following table has one or more rows for each RefPosition that is handled during allocation.
The first column provides the basic information about the RefPosition, with its type (e.g. Def,
Use, Fixd) followed by a '*' if it is a last use, and a 'D' if it is delayRegFree, and then the
action taken during allocation (e.g. Alloc a new register, or Keep an existing one).
The subsequent columns show the Interval occupying each register, if any, followed by 'a' if it is
active, a 'p' if it is a large vector that has been partially spilled, and 'i'if it is inactive.
Columns are only printed up to the last modifed register, which may increase during allocation,
in which case additional columns will appear.  
Registers which are not marked modified have ---- in their column.

--------------------------------+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
--------------------------------+----+----+----+----+----+----+----+----+----+
                                |    |    |V1 a|    |    |    |    |V2 a|V3 a|
  0.#0   V1   Parm   Alloc rsi  |    |    |    |    |    |V1 a|    |V2 a|V3 a|
  0.#1   V2   Parm   Alloc rdi  |    |    |    |    |    |V1 a|V2 a|    |V3 a|
  0.#2   V3   Parm   Alloc rbx  |    |    |    |V3 a|    |V1 a|V2 a|    |    |
  0.#3   V4   Parm   Alloc rbp  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |
--------------------------------+----+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r14 |
--------------------------------+----+----+----+----+----+----+----+----+----+----+
  0.#4   V5   Parm   Alloc r14  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|
  1.#5   BB1 PredBB0            |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|
  6.#6   C13  Def    Alloc rcx  |    |C13a|    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|
  7.#7   rcx  Fixd   Keep  rcx  |    |C13a|    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|
  7.#8   C13  Use *  Keep  rcx  |    |C13a|    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|
  8.#9   rcx  Fixd   Keep  rcx  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|
  8.#10  I14  Def    Alloc rcx  |    |I14a|    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|
 10.#11  C15  Def    Alloc rdx  |    |I14a|C15a|V3 a|V4 a|V1 a|V2 a|    |    |V5 a|
 11.#12  rdx  Fixd   Keep  rdx  |    |I14a|C15a|V3 a|V4 a|V1 a|V2 a|    |    |V5 a|
 11.#13  C15  Use *  Keep  rdx  |    |I14a|C15a|V3 a|V4 a|V1 a|V2 a|    |    |V5 a|
 12.#14  rdx  Fixd   Keep  rdx  |    |I14a|    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|
 12.#15  I16  Def    Alloc rdx  |    |I14a|I16a|V3 a|V4 a|V1 a|V2 a|    |    |V5 a|
 13.#16  rcx  Fixd   Keep  rcx  |    |I14a|I16a|V3 a|V4 a|V1 a|V2 a|    |    |V5 a|
 13.#17  I14  Use *  Keep  rcx  |    |I14a|I16a|V3 a|V4 a|V1 a|V2 a|    |    |V5 a|
 13.#18  rdx  Fixd   Keep  rdx  |    |I14a|I16a|V3 a|V4 a|V1 a|V2 a|    |    |V5 a|
 13.#19  I16  Use *  Keep  rdx  |    |I14a|I16a|V3 a|V4 a|V1 a|V2 a|    |    |V5 a|
 14.#20  rax  Kill   Keep  rax  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|
 14.#21  rcx  Kill   Keep  rcx  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|
 14.#22  rdx  Kill   Keep  rdx  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|
 14.#23  r8   Kill   Keep  r8   |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|
 14.#24  r9   Kill   Keep  r9   |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|
 14.#25  r10  Kill   Keep  r10  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|
 14.#26  r11  Kill   Keep  r11  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|
 14.#27  rax  Fixd   Keep  rax  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|
 14.#28  I17  Def    Alloc rax  |I17a|    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|
 15.#29  I17  Use *  Keep  rax  |I17a|    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r14 |r15 |
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
 16.#30  V7   Def    Alloc r15  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 18.#31  C18  Def    Alloc rcx  |    |C18a|    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 19.#32  rcx  Fixd   Keep  rcx  |    |C18a|    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 19.#33  C18  Use *  Keep  rcx  |    |C18a|    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 20.#34  rcx  Fixd   Keep  rcx  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 20.#35  I19  Def    Alloc rcx  |    |I19a|    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 21.#36  rcx  Fixd   Keep  rcx  |    |I19a|    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 21.#37  I19  Use *  Keep  rcx  |    |I19a|    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 22.#38  rax  Kill   Keep  rax  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 22.#39  rcx  Kill   Keep  rcx  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 22.#40  rdx  Kill   Keep  rdx  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 22.#41  r8   Kill   Keep  r8   |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 22.#42  r9   Kill   Keep  r9   |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 22.#43  r10  Kill   Keep  r10  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 22.#44  r11  Kill   Keep  r11  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 22.#45  rax  Fixd   Keep  rax  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 22.#46  I20  Def    Alloc rax  |I20a|    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 23.#47  I20  Use *  Keep  rax  |I20a|    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 24.#48  V8   Def    Alloc rax  |V8 a|    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 27.#49  V1   Use *  Keep  rsi  |V8 a|    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 28.#50  I21  Def    Alloc rdx  |V8 a|    |I21a|V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 33.#51  V8   Use    Keep  rax  |V8 a|    |I21a|V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 33.#52  I21  Use *  Keep  rdx  |V8 a|    |I21a|V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 37.#53  V7   Use    Keep  r15  |V8 a|    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 38.#54  I22  Def    Alloc rcx  |V8 a|I22a|    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 41.#55  rcx  Fixd   Keep  rcx  |V8 a|I22a|    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 41.#56  I22  Use *  Keep  rcx  |V8 a|I22a|    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 41.#57  rdx  Fixd   Keep  rdx  |V8 a|I22a|    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 41.#58  V8   Use *  Copy  rdx  |V8 a|I22a|V8 a|V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 42.#59  rax  Kill   Keep  rax  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 42.#60  rcx  Kill   Keep  rcx  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 42.#61  rdx  Kill   Keep  rdx  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 42.#62  r8   Kill   Keep  r8   |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 42.#63  r9   Kill   Keep  r9   |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 42.#64  r10  Kill   Keep  r10  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 42.#65  r11  Kill   Keep  r11  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 42.#66  mm0  Kill   Keep  mm0  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 42.#67  mm1  Kill   Keep  mm1  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 42.#68  mm2  Kill   Keep  mm2  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 42.#69  mm3  Kill   Keep  mm3  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 42.#70  mm4  Kill   Keep  mm4  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 42.#71  mm5  Kill   Keep  mm5  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 44.#72  C23  Def    Alloc rcx  |    |C23a|    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 45.#73  rcx  Fixd   Keep  rcx  |    |C23a|    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 45.#74  C23  Use *  Keep  rcx  |    |C23a|    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 46.#75  rcx  Fixd   Keep  rcx  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 46.#76  I24  Def    Alloc rcx  |    |I24a|    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 47.#77  rcx  Fixd   Keep  rcx  |    |I24a|    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 47.#78  I24  Use *  Keep  rcx  |    |I24a|    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 48.#79  rax  Kill   Keep  rax  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 48.#80  rcx  Kill   Keep  rcx  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 48.#81  rdx  Kill   Keep  rdx  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 48.#82  r8   Kill   Keep  r8   |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 48.#83  r9   Kill   Keep  r9   |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 48.#84  r10  Kill   Keep  r10  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 48.#85  r11  Kill   Keep  r11  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 48.#86  rax  Fixd   Keep  rax  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r14 |r15 |
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
 48.#87  I25  Def    Alloc rax  |I25a|    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 49.#88  I25  Use *  Keep  rax  |I25a|    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 50.#89  V9   Def    Alloc rax  |V9 a|    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 53.#90  V2   Use *  Keep  rdi  |V9 a|    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 54.#91  I26  Def    Alloc rdx  |V9 a|    |I26a|V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 59.#92  V9   Use    Keep  rax  |V9 a|    |I26a|V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 59.#93  I26  Use *  Keep  rdx  |V9 a|    |I26a|V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 63.#94  V7   Use    Keep  r15  |V9 a|    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 64.#95  I27  Def    Alloc rcx  |V9 a|I27a|    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 67.#96  rcx  Fixd   Keep  rcx  |V9 a|I27a|    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 67.#97  I27  Use *  Keep  rcx  |V9 a|I27a|    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 67.#98  rdx  Fixd   Keep  rdx  |V9 a|I27a|    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 67.#99  V9   Use *  Copy  rdx  |V9 a|I27a|V9 a|V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 68.#100 rax  Kill   Keep  rax  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 68.#101 rcx  Kill   Keep  rcx  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 68.#102 rdx  Kill   Keep  rdx  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 68.#103 r8   Kill   Keep  r8   |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 68.#104 r9   Kill   Keep  r9   |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 68.#105 r10  Kill   Keep  r10  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 68.#106 r11  Kill   Keep  r11  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 68.#107 mm0  Kill   Keep  mm0  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 68.#108 mm1  Kill   Keep  mm1  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 68.#109 mm2  Kill   Keep  mm2  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 68.#110 mm3  Kill   Keep  mm3  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 68.#111 mm4  Kill   Keep  mm4  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 68.#112 mm5  Kill   Keep  mm5  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 70.#113 C28  Def    Alloc rcx  |    |C28a|    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 71.#114 rcx  Fixd   Keep  rcx  |    |C28a|    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 71.#115 C28  Use *  Keep  rcx  |    |C28a|    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 72.#116 rcx  Fixd   Keep  rcx  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 72.#117 I29  Def    Alloc rcx  |    |I29a|    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 73.#118 rcx  Fixd   Keep  rcx  |    |I29a|    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 73.#119 I29  Use *  Keep  rcx  |    |I29a|    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 74.#120 rax  Kill   Keep  rax  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 74.#121 rcx  Kill   Keep  rcx  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 74.#122 rdx  Kill   Keep  rdx  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 74.#123 r8   Kill   Keep  r8   |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 74.#124 r9   Kill   Keep  r9   |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 74.#125 r10  Kill   Keep  r10  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 74.#126 r11  Kill   Keep  r11  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 74.#127 rax  Fixd   Keep  rax  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 74.#128 I30  Def    Alloc rax  |I30a|    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 75.#129 I30  Use *  Keep  rax  |I30a|    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 76.#130 V10  Def    Alloc rax  |V10a|    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 79.#131 V3   Use *  Keep  rbx  |V10a|    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 80.#132 I31  Def    Alloc rdx  |V10a|    |I31a|    |V4 a|    |    |    |    |V5 a|V7 a|
 85.#133 V10  Use    Keep  rax  |V10a|    |I31a|    |V4 a|    |    |    |    |V5 a|V7 a|
 85.#134 I31  Use *  Keep  rdx  |V10a|    |I31a|    |V4 a|    |    |    |    |V5 a|V7 a|
 89.#135 V7   Use    Keep  r15  |V10a|    |    |    |V4 a|    |    |    |    |V5 a|V7 a|
 90.#136 I32  Def    Alloc rcx  |V10a|I32a|    |    |V4 a|    |    |    |    |V5 a|V7 a|
 93.#137 rcx  Fixd   Keep  rcx  |V10a|I32a|    |    |V4 a|    |    |    |    |V5 a|V7 a|
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r14 |r15 |
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
 93.#138 I32  Use *  Keep  rcx  |V10a|I32a|    |    |V4 a|    |    |    |    |V5 a|V7 a|
 93.#139 rdx  Fixd   Keep  rdx  |V10a|I32a|    |    |V4 a|    |    |    |    |V5 a|V7 a|
 93.#140 V10  Use *  Copy  rdx  |V10a|I32a|V10a|    |V4 a|    |    |    |    |V5 a|V7 a|
 94.#141 rax  Kill   Keep  rax  |    |    |    |    |V4 a|    |    |    |    |V5 a|V7 a|
 94.#142 rcx  Kill   Keep  rcx  |    |    |    |    |V4 a|    |    |    |    |V5 a|V7 a|
 94.#143 rdx  Kill   Keep  rdx  |    |    |    |    |V4 a|    |    |    |    |V5 a|V7 a|
 94.#144 r8   Kill   Keep  r8   |    |    |    |    |V4 a|    |    |    |    |V5 a|V7 a|
 94.#145 r9   Kill   Keep  r9   |    |    |    |    |V4 a|    |    |    |    |V5 a|V7 a|
 94.#146 r10  Kill   Keep  r10  |    |    |    |    |V4 a|    |    |    |    |V5 a|V7 a|
 94.#147 r11  Kill   Keep  r11  |    |    |    |    |V4 a|    |    |    |    |V5 a|V7 a|
 94.#148 mm0  Kill   Keep  mm0  |    |    |    |    |V4 a|    |    |    |    |V5 a|V7 a|
 94.#149 mm1  Kill   Keep  mm1  |    |    |    |    |V4 a|    |    |    |    |V5 a|V7 a|
 94.#150 mm2  Kill   Keep  mm2  |    |    |    |    |V4 a|    |    |    |    |V5 a|V7 a|
 94.#151 mm3  Kill   Keep  mm3  |    |    |    |    |V4 a|    |    |    |    |V5 a|V7 a|
 94.#152 mm4  Kill   Keep  mm4  |    |    |    |    |V4 a|    |    |    |    |V5 a|V7 a|
 94.#153 mm5  Kill   Keep  mm5  |    |    |    |    |V4 a|    |    |    |    |V5 a|V7 a|
 97.#154 V4   Use    Keep  rbp  |    |    |    |    |V4 a|    |    |    |    |V5 a|V7 a|
 98.#155 V12  Def    Alloc rdx  |    |    |V12a|    |V4 a|    |    |    |    |V5 a|V7 a|
103.#156 V12  Use    Keep  rdx  |    |    |V12a|    |V4 a|    |    |    |    |V5 a|V7 a|
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r14 |r15 |
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
107.#157 BB2 PredBB1            |    |    |V12a|    |V4 a|    |    |    |    |V5 a|V7 a|
114.#158 C33  Def    Alloc rcx  |    |C33a|V12a|    |V4 a|    |    |    |    |V5 a|V7 a|
115.#159 C33  Use *  Keep  rcx  |    |C33a|V12a|    |V4 a|    |    |    |    |V5 a|V7 a|
116.#160 V11  Def    Alloc rcx  |    |V11a|V12a|    |V4 a|    |    |    |    |V5 a|V7 a|
119.#161 V12  Use    Keep  rdx  |    |V11a|V12a|    |V4 a|    |    |    |    |V5 a|V7 a|
119.#162 V11  Use    Keep  rcx  |    |V11a|V12a|    |V4 a|    |    |    |    |V5 a|V7 a|
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r14 |r15 |
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
123.#163 BB3 PredBB2            |    |V11a|V12i|    |V4 a|    |    |    |    |V5 a|V7 a|
127.#164 rcx  Fixd   Keep  rcx  |    |V11a|V12i|    |V4 a|    |    |    |    |V5 a|V7 a|
127.#165 V11  Use *  Keep  rcx  |    |V11a|V12i|    |V4 a|    |    |    |    |V5 a|V7 a|
128.#166 rcx  Fixd   Keep  rcx  |    |    |V12i|    |V4 a|    |    |    |    |V5 a|V7 a|
128.#167 I34  Def    Alloc rcx  |    |I34a|V12i|    |V4 a|    |    |    |    |V5 a|V7 a|
131.#168 rdx  Fixd   Keep  rdx  |    |I34a|V12i|    |V4 a|    |    |    |    |V5 a|V7 a|
131.#169 V4   Use *  Copy  rdx  |    |I34a|V4 a|    |V4 a|    |    |    |    |V5 a|V7 a|
132.#170 rdx  Fixd   Keep  rdx  |    |I34a|    |    |    |    |    |    |    |V5 a|V7 a|
132.#171 I35  Def    Alloc rdx  |    |I34a|I35a|    |    |    |    |    |    |V5 a|V7 a|
133.#172 rcx  Fixd   Keep  rcx  |    |I34a|I35a|    |    |    |    |    |    |V5 a|V7 a|
133.#173 I34  Use *  Keep  rcx  |    |I34a|I35a|    |    |    |    |    |    |V5 a|V7 a|
133.#174 rdx  Fixd   Keep  rdx  |    |I34a|I35a|    |    |    |    |    |    |V5 a|V7 a|
133.#175 I35  Use *  Keep  rdx  |    |I34a|I35a|    |    |    |    |    |    |V5 a|V7 a|
                     Restr rdx  |    |    |V12i|    |    |    |    |    |    |V5 a|V7 a|
134.#176 rax  Kill   Keep  rax  |    |    |V12i|    |    |    |    |    |    |V5 a|V7 a|
134.#177 rcx  Kill   Keep  rcx  |    |    |V12i|    |    |    |    |    |    |V5 a|V7 a|
134.#178 rdx  Kill   Keep  rdx  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
134.#179 r8   Kill   Keep  r8   |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
134.#180 r9   Kill   Keep  r9   |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
134.#181 r10  Kill   Keep  r10  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
134.#182 r11  Kill   Keep  r11  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
134.#183 rax  Fixd   Keep  rax  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
134.#184 I36  Def    Alloc rax  |I36a|    |    |    |    |    |    |    |    |V5 a|V7 a|
135.#185 I36  Use *  Keep  rax  |I36a|    |    |    |    |    |    |    |    |V5 a|V7 a|
136.#186 V12  Def    Alloc rdx  |    |    |V12a|    |    |    |    |    |    |V5 a|V7 a|
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r14 |r15 |
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
137.#187 BB4 PredBB1            |    |    |V12a|    |    |    |    |    |    |V5 a|V7 a|
141.#188 V7   Use    Keep  r15  |    |    |V12a|    |    |    |    |    |    |V5 a|V7 a|
142.#189 I37  Def    Alloc rcx  |    |I37a|V12a|    |    |    |    |    |    |V5 a|V7 a|
145.#190 rcx  Fixd   Keep  rcx  |    |I37a|V12a|    |    |    |    |    |    |V5 a|V7 a|
145.#191 I37  Use *  Keep  rcx  |    |I37a|V12a|    |    |    |    |    |    |V5 a|V7 a|
145.#192 rdx  Fixd   Keep  rdx  |    |I37a|V12a|    |    |    |    |    |    |V5 a|V7 a|
145.#193 V12  Use *  Keep  rdx  |    |I37a|V12a|    |    |    |    |    |    |V5 a|V7 a|
146.#194 rax  Kill   Keep  rax  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
146.#195 rcx  Kill   Keep  rcx  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
146.#196 rdx  Kill   Keep  rdx  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
146.#197 r8   Kill   Keep  r8   |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
146.#198 r9   Kill   Keep  r9   |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
146.#199 r10  Kill   Keep  r10  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
146.#200 r11  Kill   Keep  r11  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
146.#201 mm0  Kill   Keep  mm0  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
146.#202 mm1  Kill   Keep  mm1  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
146.#203 mm2  Kill   Keep  mm2  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
146.#204 mm3  Kill   Keep  mm3  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
146.#205 mm4  Kill   Keep  mm4  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
146.#206 mm5  Kill   Keep  mm5  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
149.#207 V5   Use    Keep  r14  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
150.#208 V14  Def    Alloc rdx  |    |    |V14a|    |    |    |    |    |    |V5 a|V7 a|
155.#209 V14  Use    Keep  rdx  |    |    |V14a|    |    |    |    |    |    |V5 a|V7 a|
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r14 |r15 |
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
159.#210 BB5 PredBB4            |    |    |V14a|    |    |    |    |    |    |V5 a|V7 a|
166.#211 C38  Def    Alloc rcx  |    |C38a|V14a|    |    |    |    |    |    |V5 a|V7 a|
167.#212 C38  Use *  Keep  rcx  |    |C38a|V14a|    |    |    |    |    |    |V5 a|V7 a|
168.#213 V13  Def    Alloc rcx  |    |V13a|V14a|    |    |    |    |    |    |V5 a|V7 a|
171.#214 V14  Use    Keep  rdx  |    |V13a|V14a|    |    |    |    |    |    |V5 a|V7 a|
171.#215 V13  Use    Keep  rcx  |    |V13a|V14a|    |    |    |    |    |    |V5 a|V7 a|
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r14 |r15 |
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
175.#216 BB6 PredBB5            |    |V13a|V14i|    |    |    |    |    |    |V5 a|V7 a|
179.#217 rcx  Fixd   Keep  rcx  |    |V13a|V14i|    |    |    |    |    |    |V5 a|V7 a|
179.#218 V13  Use *  Keep  rcx  |    |V13a|V14i|    |    |    |    |    |    |V5 a|V7 a|
180.#219 rcx  Fixd   Keep  rcx  |    |    |V14i|    |    |    |    |    |    |V5 a|V7 a|
180.#220 I39  Def    Alloc rcx  |    |I39a|V14i|    |    |    |    |    |    |V5 a|V7 a|
183.#221 rdx  Fixd   Keep  rdx  |    |I39a|V14i|    |    |    |    |    |    |V5 a|V7 a|
183.#222 V5   Use *  Copy  rdx  |    |I39a|V5 a|    |    |    |    |    |    |V5 a|V7 a|
184.#223 rdx  Fixd   Keep  rdx  |    |I39a|    |    |    |    |    |    |    |    |V7 a|
184.#224 I40  Def    Alloc rdx  |    |I39a|I40a|    |    |    |    |    |    |    |V7 a|
185.#225 rcx  Fixd   Keep  rcx  |    |I39a|I40a|    |    |    |    |    |    |    |V7 a|
185.#226 I39  Use *  Keep  rcx  |    |I39a|I40a|    |    |    |    |    |    |    |V7 a|
185.#227 rdx  Fixd   Keep  rdx  |    |I39a|I40a|    |    |    |    |    |    |    |V7 a|
185.#228 I40  Use *  Keep  rdx  |    |I39a|I40a|    |    |    |    |    |    |    |V7 a|
                     Restr rdx  |    |    |V14i|    |    |    |    |    |    |    |V7 a|
186.#229 rax  Kill   Keep  rax  |    |    |V14i|    |    |    |    |    |    |    |V7 a|
186.#230 rcx  Kill   Keep  rcx  |    |    |V14i|    |    |    |    |    |    |    |V7 a|
186.#231 rdx  Kill   Keep  rdx  |    |    |    |    |    |    |    |    |    |    |V7 a|
186.#232 r8   Kill   Keep  r8   |    |    |    |    |    |    |    |    |    |    |V7 a|
186.#233 r9   Kill   Keep  r9   |    |    |    |    |    |    |    |    |    |    |V7 a|
186.#234 r10  Kill   Keep  r10  |    |    |    |    |    |    |    |    |    |    |V7 a|
186.#235 r11  Kill   Keep  r11  |    |    |    |    |    |    |    |    |    |    |V7 a|
186.#236 rax  Fixd   Keep  rax  |    |    |    |    |    |    |    |    |    |    |V7 a|
186.#237 I41  Def    Alloc rax  |I41a|    |    |    |    |    |    |    |    |    |V7 a|
187.#238 I41  Use *  Keep  rax  |I41a|    |    |    |    |    |    |    |    |    |V7 a|
188.#239 V14  Def    Alloc rdx  |    |    |V14a|    |    |    |    |    |    |    |V7 a|
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r14 |r15 |
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
189.#240 BB7 PredBB4            |    |    |V14a|    |    |    |    |    |    |    |V7 a|
193.#241 V7   Use    Keep  r15  |    |    |V14a|    |    |    |    |    |    |    |V7 a|
194.#242 I42  Def    Alloc rcx  |    |I42a|V14a|    |    |    |    |    |    |    |V7 a|
197.#243 rcx  Fixd   Keep  rcx  |    |I42a|V14a|    |    |    |    |    |    |    |V7 a|
197.#244 I42  Use *  Keep  rcx  |    |I42a|V14a|    |    |    |    |    |    |    |V7 a|
197.#245 rdx  Fixd   Keep  rdx  |    |I42a|V14a|    |    |    |    |    |    |    |V7 a|
197.#246 V14  Use *  Keep  rdx  |    |I42a|V14a|    |    |    |    |    |    |    |V7 a|
198.#247 rax  Kill   Keep  rax  |    |    |    |    |    |    |    |    |    |    |V7 a|
198.#248 rcx  Kill   Keep  rcx  |    |    |    |    |    |    |    |    |    |    |V7 a|
198.#249 rdx  Kill   Keep  rdx  |    |    |    |    |    |    |    |    |    |    |V7 a|
198.#250 r8   Kill   Keep  r8   |    |    |    |    |    |    |    |    |    |    |V7 a|
198.#251 r9   Kill   Keep  r9   |    |    |    |    |    |    |    |    |    |    |V7 a|
198.#252 r10  Kill   Keep  r10  |    |    |    |    |    |    |    |    |    |    |V7 a|
198.#253 r11  Kill   Keep  r11  |    |    |    |    |    |    |    |    |    |    |V7 a|
198.#254 mm0  Kill   Keep  mm0  |    |    |    |    |    |    |    |    |    |    |V7 a|
198.#255 mm1  Kill   Keep  mm1  |    |    |    |    |    |    |    |    |    |    |V7 a|
198.#256 mm2  Kill   Keep  mm2  |    |    |    |    |    |    |    |    |    |    |V7 a|
198.#257 mm3  Kill   Keep  mm3  |    |    |    |    |    |    |    |    |    |    |V7 a|
198.#258 mm4  Kill   Keep  mm4  |    |    |    |    |    |    |    |    |    |    |V7 a|
198.#259 mm5  Kill   Keep  mm5  |    |    |    |    |    |    |    |    |    |    |V7 a|
201.#260 rax  Fixd   Keep  rax  |    |    |    |    |    |    |    |    |    |    |V7 a|
201.#261 V7   Use *  Copy  rax  |    |    |    |    |    |    |    |    |    |    |    |

------------
REFPOSITIONS AFTER ALLOCATION: 
------------
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V01>  BB00 regmask=[rsi] minReg=1 regOptional>
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V02>  BB00 regmask=[rdi] minReg=1 regOptional>
<RefPosition #2   @0   RefTypeParamDef <Ivl:2 V03>  BB00 regmask=[rbx] minReg=1 regOptional>
<RefPosition #3   @0   RefTypeParamDef <Ivl:3 V04>  BB00 regmask=[rbp] minReg=1 regOptional>
<RefPosition #4   @0   RefTypeParamDef <Ivl:4 V05>  BB00 regmask=[r14] minReg=1 regOptional>
<RefPosition #5   @1   RefTypeBB  BB01 regmask=[] minReg=1>
<RefPosition #6   @6   RefTypeDef <Ivl:13> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #7   @7   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #8   @7   RefTypeUse <Ivl:13>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #9   @8   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #10  @8   RefTypeDef <Ivl:14> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #11  @10  RefTypeDef <Ivl:15> CNS_INT BB01 regmask=[rdx] minReg=1>
<RefPosition #12  @11  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #13  @11  RefTypeUse <Ivl:15>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #14  @12  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #15  @12  RefTypeDef <Ivl:16> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>
<RefPosition #16  @13  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #17  @13  RefTypeUse <Ivl:14>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #18  @13  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #19  @13  RefTypeUse <Ivl:16>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #20  @14  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #21  @14  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #22  @14  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #23  @14  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #24  @14  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #25  @14  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #26  @14  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #27  @14  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #28  @14  RefTypeDef <Ivl:17> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #29  @15  RefTypeUse <Ivl:17>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #30  @16  RefTypeDef <Ivl:5 V07> STORE_LCL_VAR BB01 regmask=[r15] minReg=1>
<RefPosition #31  @18  RefTypeDef <Ivl:18> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #32  @19  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #33  @19  RefTypeUse <Ivl:18>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #34  @20  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #35  @20  RefTypeDef <Ivl:19> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #36  @21  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #37  @21  RefTypeUse <Ivl:19>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #38  @22  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #39  @22  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #40  @22  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #41  @22  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #42  @22  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #43  @22  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #44  @22  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #45  @22  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #46  @22  RefTypeDef <Ivl:20> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #47  @23  RefTypeUse <Ivl:20>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #48  @24  RefTypeDef <Ivl:6 V08> STORE_LCL_VAR BB01 regmask=[rax] minReg=1>
<RefPosition #49  @27  RefTypeUse <Ivl:0 V01> LCL_VAR BB01 regmask=[rsi] minReg=1 last>
<RefPosition #50  @28  RefTypeDef <Ivl:21> CAST BB01 regmask=[rdx] minReg=1>
<RefPosition #51  @33  RefTypeUse <Ivl:6 V08> LCL_VAR BB01 regmask=[rax] minReg=1>
<RefPosition #52  @33  RefTypeUse <Ivl:21>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #53  @37  RefTypeUse <Ivl:5 V07> LCL_VAR BB01 regmask=[r15] minReg=1>
<RefPosition #54  @38  RefTypeDef <Ivl:22> LEA BB01 regmask=[rcx] minReg=1>
<RefPosition #55  @41  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #56  @41  RefTypeUse <Ivl:22>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #57  @41  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #58  @41  RefTypeUse <Ivl:6 V08> LCL_VAR BB01 regmask=[rdx] minReg=1 last copy fixed>
<RefPosition #59  @42  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #60  @42  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #61  @42  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #62  @42  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #63  @42  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #64  @42  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #65  @42  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #66  @42  RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1 last>
<RefPosition #67  @42  RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1 last>
<RefPosition #68  @42  RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1 last>
<RefPosition #69  @42  RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1 last>
<RefPosition #70  @42  RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1 last>
<RefPosition #71  @42  RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1 last>
<RefPosition #72  @44  RefTypeDef <Ivl:23> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #73  @45  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #74  @45  RefTypeUse <Ivl:23>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #75  @46  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #76  @46  RefTypeDef <Ivl:24> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #77  @47  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #78  @47  RefTypeUse <Ivl:24>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #79  @48  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #80  @48  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #81  @48  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #82  @48  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #83  @48  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #84  @48  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #85  @48  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #86  @48  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #87  @48  RefTypeDef <Ivl:25> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #88  @49  RefTypeUse <Ivl:25>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #89  @50  RefTypeDef <Ivl:7 V09> STORE_LCL_VAR BB01 regmask=[rax] minReg=1>
<RefPosition #90  @53  RefTypeUse <Ivl:1 V02> LCL_VAR BB01 regmask=[rdi] minReg=1 last>
<RefPosition #91  @54  RefTypeDef <Ivl:26> CAST BB01 regmask=[rdx] minReg=1>
<RefPosition #92  @59  RefTypeUse <Ivl:7 V09> LCL_VAR BB01 regmask=[rax] minReg=1>
<RefPosition #93  @59  RefTypeUse <Ivl:26>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #94  @63  RefTypeUse <Ivl:5 V07> LCL_VAR BB01 regmask=[r15] minReg=1>
<RefPosition #95  @64  RefTypeDef <Ivl:27> LEA BB01 regmask=[rcx] minReg=1>
<RefPosition #96  @67  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #97  @67  RefTypeUse <Ivl:27>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #98  @67  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #99  @67  RefTypeUse <Ivl:7 V09> LCL_VAR BB01 regmask=[rdx] minReg=1 last copy fixed>
<RefPosition #100 @68  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #101 @68  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #102 @68  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #103 @68  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #104 @68  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #105 @68  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #106 @68  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #107 @68  RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1 last>
<RefPosition #108 @68  RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1 last>
<RefPosition #109 @68  RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1 last>
<RefPosition #110 @68  RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1 last>
<RefPosition #111 @68  RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1 last>
<RefPosition #112 @68  RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1 last>
<RefPosition #113 @70  RefTypeDef <Ivl:28> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #114 @71  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #115 @71  RefTypeUse <Ivl:28>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #116 @72  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #117 @72  RefTypeDef <Ivl:29> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #118 @73  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #119 @73  RefTypeUse <Ivl:29>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #120 @74  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #121 @74  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #122 @74  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #123 @74  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #124 @74  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #125 @74  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #126 @74  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #127 @74  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #128 @74  RefTypeDef <Ivl:30> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #129 @75  RefTypeUse <Ivl:30>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #130 @76  RefTypeDef <Ivl:8 V10> STORE_LCL_VAR BB01 regmask=[rax] minReg=1>
<RefPosition #131 @79  RefTypeUse <Ivl:2 V03> LCL_VAR BB01 regmask=[rbx] minReg=1 last>
<RefPosition #132 @80  RefTypeDef <Ivl:31> CAST BB01 regmask=[rdx] minReg=1>
<RefPosition #133 @85  RefTypeUse <Ivl:8 V10> LCL_VAR BB01 regmask=[rax] minReg=1>
<RefPosition #134 @85  RefTypeUse <Ivl:31>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #135 @89  RefTypeUse <Ivl:5 V07> LCL_VAR BB01 regmask=[r15] minReg=1>
<RefPosition #136 @90  RefTypeDef <Ivl:32> LEA BB01 regmask=[rcx] minReg=1>
<RefPosition #137 @93  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #138 @93  RefTypeUse <Ivl:32>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #139 @93  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #140 @93  RefTypeUse <Ivl:8 V10> LCL_VAR BB01 regmask=[rdx] minReg=1 last copy fixed>
<RefPosition #141 @94  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #142 @94  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #143 @94  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #144 @94  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #145 @94  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #146 @94  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #147 @94  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #148 @94  RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1 last>
<RefPosition #149 @94  RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1 last>
<RefPosition #150 @94  RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1 last>
<RefPosition #151 @94  RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1 last>
<RefPosition #152 @94  RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1 last>
<RefPosition #153 @94  RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1 last>
<RefPosition #154 @97  RefTypeUse <Ivl:3 V04> LCL_VAR BB01 regmask=[rbp] minReg=1>
<RefPosition #155 @98  RefTypeDef <Ivl:10 V12> STORE_LCL_VAR BB01 regmask=[rdx] minReg=1>
<RefPosition #156 @103 RefTypeUse <Ivl:10 V12> LCL_VAR BB01 regmask=[rdx] minReg=1 regOptional>
<RefPosition #157 @107 RefTypeBB  BB02 regmask=[] minReg=1>
<RefPosition #158 @114 RefTypeDef <Ivl:33> CNS_INT BB02 regmask=[rcx] minReg=1>
<RefPosition #159 @115 RefTypeUse <Ivl:33>  BB02 regmask=[rcx] minReg=1 last>
<RefPosition #160 @116 RefTypeDef <Ivl:9 V11> STORE_LCL_VAR BB02 regmask=[rcx] minReg=1>
<RefPosition #161 @119 RefTypeUse <Ivl:10 V12> LCL_VAR BB02 regmask=[rdx] minReg=1>
<RefPosition #162 @119 RefTypeUse <Ivl:9 V11> LCL_VAR BB02 regmask=[rcx] minReg=1>
<RefPosition #163 @123 RefTypeBB  BB03 regmask=[] minReg=1>
<RefPosition #164 @127 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #165 @127 RefTypeUse <Ivl:9 V11> LCL_VAR BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #166 @128 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #167 @128 RefTypeDef <Ivl:34> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>
<RefPosition #168 @131 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #169 @131 RefTypeUse <Ivl:3 V04> LCL_VAR BB03 regmask=[rdx] minReg=1 last copy fixed>
<RefPosition #170 @132 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #171 @132 RefTypeDef <Ivl:35> PUTARG_REG BB03 regmask=[rdx] minReg=1 fixed>
<RefPosition #172 @133 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #173 @133 RefTypeUse <Ivl:34>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #174 @133 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #175 @133 RefTypeUse <Ivl:35>  BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #176 @134 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #177 @134 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #178 @134 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #179 @134 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #180 @134 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #181 @134 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #182 @134 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #183 @134 RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #184 @134 RefTypeDef <Ivl:36> CALL BB03 regmask=[rax] minReg=1 fixed>
<RefPosition #185 @135 RefTypeUse <Ivl:36>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #186 @136 RefTypeDef <Ivl:10 V12> STORE_LCL_VAR BB03 regmask=[rdx] minReg=1>
<RefPosition #187 @137 RefTypeBB  BB04 regmask=[] minReg=1>
<RefPosition #188 @141 RefTypeUse <Ivl:5 V07> LCL_VAR BB04 regmask=[r15] minReg=1>
<RefPosition #189 @142 RefTypeDef <Ivl:37> LEA BB04 regmask=[rcx] minReg=1>
<RefPosition #190 @145 RefTypeFixedReg <Reg:rcx>  BB04 regmask=[rcx] minReg=1>
<RefPosition #191 @145 RefTypeUse <Ivl:37>  BB04 regmask=[rcx] minReg=1 last fixed>
<RefPosition #192 @145 RefTypeFixedReg <Reg:rdx>  BB04 regmask=[rdx] minReg=1>
<RefPosition #193 @145 RefTypeUse <Ivl:10 V12> LCL_VAR BB04 regmask=[rdx] minReg=1 last fixed>
<RefPosition #194 @146 RefTypeKill <Reg:rax>  BB04 regmask=[rax] minReg=1 last>
<RefPosition #195 @146 RefTypeKill <Reg:rcx>  BB04 regmask=[rcx] minReg=1 last>
<RefPosition #196 @146 RefTypeKill <Reg:rdx>  BB04 regmask=[rdx] minReg=1 last>
<RefPosition #197 @146 RefTypeKill <Reg:r8 >  BB04 regmask=[r8] minReg=1 last>
<RefPosition #198 @146 RefTypeKill <Reg:r9 >  BB04 regmask=[r9] minReg=1 last>
<RefPosition #199 @146 RefTypeKill <Reg:r10>  BB04 regmask=[r10] minReg=1 last>
<RefPosition #200 @146 RefTypeKill <Reg:r11>  BB04 regmask=[r11] minReg=1 last>
<RefPosition #201 @146 RefTypeKill <Reg:mm0>  BB04 regmask=[mm0] minReg=1 last>
<RefPosition #202 @146 RefTypeKill <Reg:mm1>  BB04 regmask=[mm1] minReg=1 last>
<RefPosition #203 @146 RefTypeKill <Reg:mm2>  BB04 regmask=[mm2] minReg=1 last>
<RefPosition #204 @146 RefTypeKill <Reg:mm3>  BB04 regmask=[mm3] minReg=1 last>
<RefPosition #205 @146 RefTypeKill <Reg:mm4>  BB04 regmask=[mm4] minReg=1 last>
<RefPosition #206 @146 RefTypeKill <Reg:mm5>  BB04 regmask=[mm5] minReg=1 last>
<RefPosition #207 @149 RefTypeUse <Ivl:4 V05> LCL_VAR BB04 regmask=[r14] minReg=1>
<RefPosition #208 @150 RefTypeDef <Ivl:12 V14> STORE_LCL_VAR BB04 regmask=[rdx] minReg=1>
<RefPosition #209 @155 RefTypeUse <Ivl:12 V14> LCL_VAR BB04 regmask=[rdx] minReg=1 regOptional>
<RefPosition #210 @159 RefTypeBB  BB05 regmask=[] minReg=1>
<RefPosition #211 @166 RefTypeDef <Ivl:38> CNS_INT BB05 regmask=[rcx] minReg=1>
<RefPosition #212 @167 RefTypeUse <Ivl:38>  BB05 regmask=[rcx] minReg=1 last>
<RefPosition #213 @168 RefTypeDef <Ivl:11 V13> STORE_LCL_VAR BB05 regmask=[rcx] minReg=1>
<RefPosition #214 @171 RefTypeUse <Ivl:12 V14> LCL_VAR BB05 regmask=[rdx] minReg=1>
<RefPosition #215 @171 RefTypeUse <Ivl:11 V13> LCL_VAR BB05 regmask=[rcx] minReg=1>
<RefPosition #216 @175 RefTypeBB  BB06 regmask=[] minReg=1>
<RefPosition #217 @179 RefTypeFixedReg <Reg:rcx>  BB06 regmask=[rcx] minReg=1>
<RefPosition #218 @179 RefTypeUse <Ivl:11 V13> LCL_VAR BB06 regmask=[rcx] minReg=1 last fixed>
<RefPosition #219 @180 RefTypeFixedReg <Reg:rcx>  BB06 regmask=[rcx] minReg=1>
<RefPosition #220 @180 RefTypeDef <Ivl:39> PUTARG_REG BB06 regmask=[rcx] minReg=1 fixed>
<RefPosition #221 @183 RefTypeFixedReg <Reg:rdx>  BB06 regmask=[rdx] minReg=1>
<RefPosition #222 @183 RefTypeUse <Ivl:4 V05> LCL_VAR BB06 regmask=[rdx] minReg=1 last copy fixed>
<RefPosition #223 @184 RefTypeFixedReg <Reg:rdx>  BB06 regmask=[rdx] minReg=1>
<RefPosition #224 @184 RefTypeDef <Ivl:40> PUTARG_REG BB06 regmask=[rdx] minReg=1 fixed>
<RefPosition #225 @185 RefTypeFixedReg <Reg:rcx>  BB06 regmask=[rcx] minReg=1>
<RefPosition #226 @185 RefTypeUse <Ivl:39>  BB06 regmask=[rcx] minReg=1 last fixed>
<RefPosition #227 @185 RefTypeFixedReg <Reg:rdx>  BB06 regmask=[rdx] minReg=1>
<RefPosition #228 @185 RefTypeUse <Ivl:40>  BB06 regmask=[rdx] minReg=1 last fixed>
<RefPosition #229 @186 RefTypeKill <Reg:rax>  BB06 regmask=[rax] minReg=1 last>
<RefPosition #230 @186 RefTypeKill <Reg:rcx>  BB06 regmask=[rcx] minReg=1 last>
<RefPosition #231 @186 RefTypeKill <Reg:rdx>  BB06 regmask=[rdx] minReg=1 last>
<RefPosition #232 @186 RefTypeKill <Reg:r8 >  BB06 regmask=[r8] minReg=1 last>
<RefPosition #233 @186 RefTypeKill <Reg:r9 >  BB06 regmask=[r9] minReg=1 last>
<RefPosition #234 @186 RefTypeKill <Reg:r10>  BB06 regmask=[r10] minReg=1 last>
<RefPosition #235 @186 RefTypeKill <Reg:r11>  BB06 regmask=[r11] minReg=1 last>
<RefPosition #236 @186 RefTypeFixedReg <Reg:rax>  BB06 regmask=[rax] minReg=1>
<RefPosition #237 @186 RefTypeDef <Ivl:41> CALL BB06 regmask=[rax] minReg=1 fixed>
<RefPosition #238 @187 RefTypeUse <Ivl:41>  BB06 regmask=[rax] minReg=1 last>
<RefPosition #239 @188 RefTypeDef <Ivl:12 V14> STORE_LCL_VAR BB06 regmask=[rdx] minReg=1>
<RefPosition #240 @189 RefTypeBB  BB07 regmask=[] minReg=1>
<RefPosition #241 @193 RefTypeUse <Ivl:5 V07> LCL_VAR BB07 regmask=[r15] minReg=1>
<RefPosition #242 @194 RefTypeDef <Ivl:42> LEA BB07 regmask=[rcx] minReg=1>
<RefPosition #243 @197 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #244 @197 RefTypeUse <Ivl:42>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #245 @197 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #246 @197 RefTypeUse <Ivl:12 V14> LCL_VAR BB07 regmask=[rdx] minReg=1 last fixed>
<RefPosition #247 @198 RefTypeKill <Reg:rax>  BB07 regmask=[rax] minReg=1 last>
<RefPosition #248 @198 RefTypeKill <Reg:rcx>  BB07 regmask=[rcx] minReg=1 last>
<RefPosition #249 @198 RefTypeKill <Reg:rdx>  BB07 regmask=[rdx] minReg=1 last>
<RefPosition #250 @198 RefTypeKill <Reg:r8 >  BB07 regmask=[r8] minReg=1 last>
<RefPosition #251 @198 RefTypeKill <Reg:r9 >  BB07 regmask=[r9] minReg=1 last>
<RefPosition #252 @198 RefTypeKill <Reg:r10>  BB07 regmask=[r10] minReg=1 last>
<RefPosition #253 @198 RefTypeKill <Reg:r11>  BB07 regmask=[r11] minReg=1 last>
<RefPosition #254 @198 RefTypeKill <Reg:mm0>  BB07 regmask=[mm0] minReg=1 last>
<RefPosition #255 @198 RefTypeKill <Reg:mm1>  BB07 regmask=[mm1] minReg=1 last>
<RefPosition #256 @198 RefTypeKill <Reg:mm2>  BB07 regmask=[mm2] minReg=1 last>
<RefPosition #257 @198 RefTypeKill <Reg:mm3>  BB07 regmask=[mm3] minReg=1 last>
<RefPosition #258 @198 RefTypeKill <Reg:mm4>  BB07 regmask=[mm4] minReg=1 last>
<RefPosition #259 @198 RefTypeKill <Reg:mm5>  BB07 regmask=[mm5] minReg=1 last>
<RefPosition #260 @201 RefTypeFixedReg <Reg:rax>  BB07 regmask=[rax] minReg=1>
<RefPosition #261 @201 RefTypeUse <Ivl:5 V07> LCL_VAR BB07 regmask=[rax] minReg=1 last copy fixed>

VAR REFPOSITIONS AFTER ALLOCATION
--- V00
--- V01  (Interval 0)
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V01>  BB00 regmask=[rsi] minReg=1 regOptional>
<RefPosition #49  @27  RefTypeUse <Ivl:0 V01> LCL_VAR BB01 regmask=[rsi] minReg=1 last>
--- V02  (Interval 1)
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V02>  BB00 regmask=[rdi] minReg=1 regOptional>
<RefPosition #90  @53  RefTypeUse <Ivl:1 V02> LCL_VAR BB01 regmask=[rdi] minReg=1 last>
--- V03  (Interval 2)
<RefPosition #2   @0   RefTypeParamDef <Ivl:2 V03>  BB00 regmask=[rbx] minReg=1 regOptional>
<RefPosition #131 @79  RefTypeUse <Ivl:2 V03> LCL_VAR BB01 regmask=[rbx] minReg=1 last>
--- V04  (Interval 3)
<RefPosition #3   @0   RefTypeParamDef <Ivl:3 V04>  BB00 regmask=[rbp] minReg=1 regOptional>
<RefPosition #154 @97  RefTypeUse <Ivl:3 V04> LCL_VAR BB01 regmask=[rbp] minReg=1>
<RefPosition #169 @131 RefTypeUse <Ivl:3 V04> LCL_VAR BB03 regmask=[rdx] minReg=1 last copy fixed>
--- V05  (Interval 4)
<RefPosition #4   @0   RefTypeParamDef <Ivl:4 V05>  BB00 regmask=[r14] minReg=1 regOptional>
<RefPosition #207 @149 RefTypeUse <Ivl:4 V05> LCL_VAR BB04 regmask=[r14] minReg=1>
<RefPosition #222 @183 RefTypeUse <Ivl:4 V05> LCL_VAR BB06 regmask=[rdx] minReg=1 last copy fixed>
--- V06
--- V07  (Interval 5)
<RefPosition #30  @16  RefTypeDef <Ivl:5 V07> STORE_LCL_VAR BB01 regmask=[r15] minReg=1>
<RefPosition #53  @37  RefTypeUse <Ivl:5 V07> LCL_VAR BB01 regmask=[r15] minReg=1>
<RefPosition #94  @63  RefTypeUse <Ivl:5 V07> LCL_VAR BB01 regmask=[r15] minReg=1>
<RefPosition #135 @89  RefTypeUse <Ivl:5 V07> LCL_VAR BB01 regmask=[r15] minReg=1>
<RefPosition #188 @141 RefTypeUse <Ivl:5 V07> LCL_VAR BB04 regmask=[r15] minReg=1>
<RefPosition #241 @193 RefTypeUse <Ivl:5 V07> LCL_VAR BB07 regmask=[r15] minReg=1>
<RefPosition #261 @201 RefTypeUse <Ivl:5 V07> LCL_VAR BB07 regmask=[rax] minReg=1 last copy fixed>
--- V08  (Interval 6)
<RefPosition #48  @24  RefTypeDef <Ivl:6 V08> STORE_LCL_VAR BB01 regmask=[rax] minReg=1>
<RefPosition #51  @33  RefTypeUse <Ivl:6 V08> LCL_VAR BB01 regmask=[rax] minReg=1>
<RefPosition #58  @41  RefTypeUse <Ivl:6 V08> LCL_VAR BB01 regmask=[rdx] minReg=1 last copy fixed>
--- V09  (Interval 7)
<RefPosition #89  @50  RefTypeDef <Ivl:7 V09> STORE_LCL_VAR BB01 regmask=[rax] minReg=1>
<RefPosition #92  @59  RefTypeUse <Ivl:7 V09> LCL_VAR BB01 regmask=[rax] minReg=1>
<RefPosition #99  @67  RefTypeUse <Ivl:7 V09> LCL_VAR BB01 regmask=[rdx] minReg=1 last copy fixed>
--- V10  (Interval 8)
<RefPosition #130 @76  RefTypeDef <Ivl:8 V10> STORE_LCL_VAR BB01 regmask=[rax] minReg=1>
<RefPosition #133 @85  RefTypeUse <Ivl:8 V10> LCL_VAR BB01 regmask=[rax] minReg=1>
<RefPosition #140 @93  RefTypeUse <Ivl:8 V10> LCL_VAR BB01 regmask=[rdx] minReg=1 last copy fixed>
--- V11  (Interval 9)
<RefPosition #160 @116 RefTypeDef <Ivl:9 V11> STORE_LCL_VAR BB02 regmask=[rcx] minReg=1>
<RefPosition #162 @119 RefTypeUse <Ivl:9 V11> LCL_VAR BB02 regmask=[rcx] minReg=1>
<RefPosition #165 @127 RefTypeUse <Ivl:9 V11> LCL_VAR BB03 regmask=[rcx] minReg=1 last fixed>
--- V12  (Interval 10)
<RefPosition #155 @98  RefTypeDef <Ivl:10 V12> STORE_LCL_VAR BB01 regmask=[rdx] minReg=1>
<RefPosition #156 @103 RefTypeUse <Ivl:10 V12> LCL_VAR BB01 regmask=[rdx] minReg=1 regOptional>
<RefPosition #161 @119 RefTypeUse <Ivl:10 V12> LCL_VAR BB02 regmask=[rdx] minReg=1>
<RefPosition #186 @136 RefTypeDef <Ivl:10 V12> STORE_LCL_VAR BB03 regmask=[rdx] minReg=1>
<RefPosition #193 @145 RefTypeUse <Ivl:10 V12> LCL_VAR BB04 regmask=[rdx] minReg=1 last fixed>
--- V13  (Interval 11)
<RefPosition #213 @168 RefTypeDef <Ivl:11 V13> STORE_LCL_VAR BB05 regmask=[rcx] minReg=1>
<RefPosition #215 @171 RefTypeUse <Ivl:11 V13> LCL_VAR BB05 regmask=[rcx] minReg=1>
<RefPosition #218 @179 RefTypeUse <Ivl:11 V13> LCL_VAR BB06 regmask=[rcx] minReg=1 last fixed>
--- V14  (Interval 12)
<RefPosition #208 @150 RefTypeDef <Ivl:12 V14> STORE_LCL_VAR BB04 regmask=[rdx] minReg=1>
<RefPosition #209 @155 RefTypeUse <Ivl:12 V14> LCL_VAR BB04 regmask=[rdx] minReg=1 regOptional>
<RefPosition #214 @171 RefTypeUse <Ivl:12 V14> LCL_VAR BB05 regmask=[rdx] minReg=1>
<RefPosition #239 @188 RefTypeDef <Ivl:12 V14> STORE_LCL_VAR BB06 regmask=[rdx] minReg=1>
<RefPosition #246 @197 RefTypeUse <Ivl:12 V14> LCL_VAR BB07 regmask=[rdx] minReg=1 last fixed>

Active intervals at end of allocation:

-----------------------
RESOLVING BB BOUNDARIES
-----------------------
Resolution Candidates: {V01 V02 V03 V04 V05 V07 V11 V12 V13 V14}
Has Critical Edges

Prior to Resolution

BB01
use def in out
{V01 V02 V03 V04}
{V07 V08 V09 V10 V12}
{V01 V02 V03 V04 V05}
{V04 V05 V07 V12}
Var=Reg beg of BB01: V01=rsi V02=rdi V03=rbx V04=rbp V05=r14 
Var=Reg end of BB01: V07=r15 V12=rdx V04=rbp V05=r14 

BB02
use def in out
{V12}
{V11}
{V04 V05 V07 V12}
{V04 V05 V07 V11 V12}
Var=Reg beg of BB02: V07=r15 V12=rdx V04=rbp V05=r14 
Var=Reg end of BB02: V07=r15 V12=rdx V11=rcx V04=rbp V05=r14 

BB03
use def in out
{V04 V11}
{V12}
{V04 V05 V07 V11}
{V05 V07 V12}
Var=Reg beg of BB03: V07=r15 V11=rcx V04=rbp V05=r14 
Var=Reg end of BB03: V07=r15 V12=rdx V05=r14 

BB04
use def in out
{V05 V07 V12}
{V14}
{V05 V07 V12}
{V05 V07 V14}
Var=Reg beg of BB04: V07=r15 V12=rdx V05=r14 
Var=Reg end of BB04: V07=r15 V14=rdx V05=r14 

BB05
use def in out
{V14}
{V13}
{V05 V07 V14}
{V05 V07 V13 V14}
Var=Reg beg of BB05: V07=r15 V14=rdx V05=r14 
Var=Reg end of BB05: V07=r15 V14=rdx V13=rcx V05=r14 

BB06
use def in out
{V05 V13}
{V14}
{V05 V07 V13}
{V07 V14}
Var=Reg beg of BB06: V07=r15 V13=rcx V05=r14 
Var=Reg end of BB06: V07=r15 V14=rdx 

BB07
use def in out
{V07 V14}
{}
{V07 V14}
{}
Var=Reg beg of BB07: V07=r15 V14=rdx 
Var=Reg end of BB07: none


RESOLVING EDGES
  Set V01 argument initial register to rsi
  Set V02 argument initial register to rdi
  Set V03 argument initial register to rbx
  Set V04 argument initial register to rbp
  Set V05 argument initial register to r14
Trees after linear scan register allocator (LSRA)

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..???)-> BB04 ( cond )                     i label target hascall idxlen new[] newobj LIR 
BB02 [0003]  1       BB01                  0.25    [???..???)-> BB04 ( cond )                     i LIR 
BB03 [0002]  1       BB02                  0.12    [???..???)                                     i LIR 
BB04 [0001]  3       BB01,BB02,BB03        1       [???..???)-> BB07 ( cond )                     i label target hascall idxlen new[] newobj LIR 
BB05 [0008]  1       BB04                  0.25    [???..???)-> BB07 ( cond )                     i LIR 
BB06 [0007]  1       BB05                  0.12    [???..???)                                     i LIR 
BB07 [0006]  3       BB04,BB05,BB06        1       [???..037)        (return)                     i label target hascall idxlen new[] newobj LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..???) -> BB04 (cond), preds={} succs={BB02,BB04}
N003 (???,???) [000202] ------------                 IL_OFFSET void   IL offset: 0x0 REG NA
N005 (  2, 10) [000001] H-----------         t1 =    CNS_INT(h) long   0xd1ffab1e class REG rcx $1c0
                                                  /--*  t1     long   
N007 (???,???) [000211] ------------       t211 = *  PUTARG_REG long   REG rcx
N009 (  1,  1) [000000] ------------         t0 =    CNS_INT   long   5 REG rdx $200
                                                  /--*  t0     long   
N011 (???,???) [000212] ------------       t212 = *  PUTARG_REG long   REG rdx
                                                  /--*  t211   long   arg0 in rcx
                                                  +--*  t212   long   arg1 in rdx
N013 ( 17, 18) [000002] --CXG-------         t2 = *  CALL help ref    HELPER.CORINFO_HELP_NEWARR_1_OBJ REG rax $282
                                                  /--*  t2     ref    
N015 ( 17, 18) [000004] DA-XG-------              *  STORE_LCL_VAR ref    V07 tmp1         d:1 r15 REG r15
N017 (  2, 10) [000010] H-----------        t10 =    CNS_INT(h) long   0xd1ffab1e class REG rcx $1c1
                                                  /--*  t10    long   
N019 (???,???) [000213] ------------       t213 = *  PUTARG_REG long   REG rcx
                                                  /--*  t213   long   arg0 in rcx
N021 ( 16, 16) [000011] --C---------        t11 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $283
                                                  /--*  t11    ref    
N023 ( 16, 16) [000013] DA----------              *  STORE_LCL_VAR ref    V08 tmp2         d:1 rax REG rax
N025 (  1,  1) [000008] ------------         t8 =    LCL_VAR   int    V01 arg1         u:1 rsi (last use) REG rsi $80
                                                  /--*  t8     int    
N027 (  2,  3) [000009] ------------         t9 = *  CAST      long <- int REG rdx $340
N029 (  1,  1) [000014] ------------        t14 =    LCL_VAR   ref    V08 tmp2         u:1 rax REG rax $283
                                                  /--*  t14    ref    
N031 (  2,  2) [000016] -c----------        t16 = *  LEA(b+8)  byref  REG NA
                                                  /--*  t16    byref  
                                                  +--*  t9     long   
N033 (???,???) [000203] -A---O------              *  STOREIND  long   REG NA
N035 (  1,  1) [000117] ------------       t117 =    LCL_VAR   ref    V07 tmp1         u:1 r15 REG r15 $300
                                                  /--*  t117   ref    
N037 (  2,  2) [000125] ------------       t125 = *  LEA(b+16) byref  REG rcx
N039 (  1,  1) [000019] ------------        t19 =    LCL_VAR   ref    V08 tmp2         u:1 rax (last use) REG rax $283
                                                  /--*  t125   byref  
                                                  +--*  t19    ref    
N041 (???,???) [000204] -A--G-------              *  STOREIND  ref    REG NA
N043 (  2, 10) [000026] H-----------        t26 =    CNS_INT(h) long   0xd1ffab1e class REG rcx $1c3
                                                  /--*  t26    long   
N045 (???,???) [000214] ------------       t214 = *  PUTARG_REG long   REG rcx
                                                  /--*  t214   long   arg0 in rcx
N047 ( 16, 16) [000027] --C---------        t27 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $287
                                                  /--*  t27    ref    
N049 ( 16, 16) [000029] DA----------              *  STORE_LCL_VAR ref    V09 tmp3         d:1 rax REG rax
N051 (  2,  2) [000025] ------------        t25 =    LCL_VAR   int    V02 arg2         u:1 rdi (last use) REG rdi $c0
                                                  /--*  t25    int    
N053 (  3,  4) [000128] ------------       t128 = *  CAST      int <- short <- int REG rdx $440
N055 (  1,  1) [000030] ------------        t30 =    LCL_VAR   ref    V09 tmp3         u:1 rax REG rax $287
                                                  /--*  t30    ref    
N057 (  2,  2) [000032] -c----------        t32 = *  LEA(b+8)  byref  REG NA
                                                  /--*  t32    byref  
                                                  +--*  t128   int    
N059 (???,???) [000205] -A---O------              *  STOREIND  int    REG NA
N061 (  1,  1) [000129] ------------       t129 =    LCL_VAR   ref    V07 tmp1         u:1 r15 REG r15 $300
                                                  /--*  t129   ref    
N063 (  2,  2) [000137] ------------       t137 = *  LEA(b+24) byref  REG rcx
N065 (  1,  1) [000036] ------------        t36 =    LCL_VAR   ref    V09 tmp3         u:1 rax (last use) REG rax $287
                                                  /--*  t137   byref  
                                                  +--*  t36    ref    
N067 (???,???) [000206] -A--G-------              *  STOREIND  ref    REG NA
N069 (  2, 10) [000043] H-----------        t43 =    CNS_INT(h) long   0xd1ffab1e class REG rcx $1c4
                                                  /--*  t43    long   
N071 (???,???) [000215] ------------       t215 = *  PUTARG_REG long   REG rcx
                                                  /--*  t215   long   arg0 in rcx
N073 ( 16, 16) [000044] --C---------        t44 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $28b
                                                  /--*  t44    ref    
N075 ( 16, 16) [000046] DA----------              *  STORE_LCL_VAR ref    V10 tmp4         d:1 rax REG rax
N077 (  2,  2) [000042] ------------        t42 =    LCL_VAR   int    V03 arg3         u:1 rbx (last use) REG rbx $100
                                                  /--*  t42    int    
N079 (  3,  4) [000140] ------------       t140 = *  CAST      int <- ubyte <- int REG rdx $441
N081 (  1,  1) [000047] ------------        t47 =    LCL_VAR   ref    V10 tmp4         u:1 rax REG rax $28b
                                                  /--*  t47    ref    
N083 (  2,  2) [000049] -c----------        t49 = *  LEA(b+8)  byref  REG NA
                                                  /--*  t49    byref  
                                                  +--*  t140   int    
N085 (???,???) [000207] -A---O------              *  STOREIND  short  REG NA
N087 (  1,  1) [000141] ------------       t141 =    LCL_VAR   ref    V07 tmp1         u:1 r15 REG r15 $300
                                                  /--*  t141   ref    
N089 (  2,  2) [000149] ------------       t149 = *  LEA(b+32) byref  REG rcx
N091 (  1,  1) [000053] ------------        t53 =    LCL_VAR   ref    V10 tmp4         u:1 rax (last use) REG rax $28b
                                                  /--*  t149   byref  
                                                  +--*  t53    ref    
N093 (???,???) [000208] -A--G-------              *  STOREIND  ref    REG NA
N095 (  3,  2) [000077] ------?-----        t77 =    LCL_VAR   ref    V04 arg4         u:1 rbp REG rbp $140
                                                  /--*  t77    ref    
N097 (  3,  3) [000178] DA----------              *  STORE_LCL_VAR ref    V12 tmp6         d:1 rdx REG rdx
N099 (  3,  2) [000070] ------------        t70 =    LCL_VAR   ref    V12 tmp6         u:1 rdx REG rdx $140
N101 (  1,  1) [000069] -c----------        t69 =    CNS_INT   ref    null REG NA $VN.Null
                                                  /--*  t70    ref    
                                                  +--*  t69    ref    
N103 (  5,  4) [000071] J------N----              *  EQ        void   REG NA $443
N105 (  7,  6) [000175] ------------              *  JTRUE     void   REG NA

------------ BB02 [???..???) -> BB04 (cond), preds={BB01} succs={BB03,BB04}
N109 (  1,  1) [000061] ------?-----        t61 =    LCL_VAR   ref    V12 tmp6         u:1 rdx REG rdx $140
                                                  /--*  t61    ref    
N111 (  3,  2) [000067] #c---O?-----        t67 = *  IND       long   REG NA $291
N113 (  2, 10) [000060] H-----?-----        t60 =    CNS_INT(h) long   0xd1ffab1e class REG rcx $1c5
                                                  /--*  t60    long   
N115 (  6, 13) [000063] DA----?-----              *  STORE_LCL_VAR long   V11 tmp5         d:1 rcx REG rcx
N117 (  3,  2) [000064] ------?-----        t64 =    LCL_VAR   long   V11 tmp5         u:1 rcx REG rcx $1c5
                                                  /--*  t67    long   
                                                  +--*  t64    long   
N119 ( 13, 18) [000068] J----O?N----              *  EQ        void   REG NA $445
N121 ( 15, 20) [000176] -----O------              *  JTRUE     void   REG NA

------------ BB03 [???..???), preds={BB02} succs={BB04}
N125 (  3,  2) [000066] ------?-----        t66 =    LCL_VAR   long   V11 tmp5         u:1 rcx (last use) REG rcx $1c5
                                                  /--*  t66    long   
N127 (???,???) [000216] ------------       t216 = *  PUTARG_REG long   REG rcx
N129 (  3,  2) [000073] ------?-----        t73 =    LCL_VAR   ref    V04 arg4         u:1 rbp (last use) REG rbp $140
                                                  /--*  t73    ref    
N131 (???,???) [000217] ------------       t217 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t216   long   arg0 in rcx
                                                  +--*  t217   ref    arg1 in rdx
N133 ( 20, 11) [000074] --CXG-?-----        t74 = *  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL REG rax $296
                                                  /--*  t74    ref    
N135 ( 20, 11) [000180] DA-XG-------              *  STORE_LCL_VAR ref    V12 tmp6         d:3 rdx REG rdx

------------ BB04 [???..???) -> BB07 (cond), preds={BB01,BB02,BB03} succs={BB05,BB07}
N001 (  0,  0) [000196] ------------       t196 =    PHI_ARG   ref    V12 tmp6         u:3 rdx $140
N002 (  0,  0) [000193] ------------       t193 =    PHI_ARG   ref    V12 tmp6         u:1 rdx $140
                                                  /--*  t196   ref    
                                                  +--*  t193   ref    
N003 (  0,  0) [000191] ------------       t191 = *  PHI       ref   
                                                  /--*  t191   ref    
N005 (  0,  0) [000192] DA----------              *  STORE_LCL_VAR ref    V12 tmp6         d:2 rdx
N139 (  1,  1) [000153] ------------       t153 =    LCL_VAR   ref    V07 tmp1         u:1 r15 REG r15 $300
                                                  /--*  t153   ref    
N141 (  2,  2) [000161] ------------       t161 = *  LEA(b+40) byref  REG rcx
N143 (  1,  1) [000082] ------------        t82 =    LCL_VAR   ref    V12 tmp6         u:2 rdx (last use) REG rdx $140
                                                  /--*  t161   byref  
                                                  +--*  t82    ref    
N145 (???,???) [000209] -A--G-------              *  STOREIND  ref    REG NA
N147 (  3,  2) [000105] ------?-----       t105 =    LCL_VAR   ref    V05 arg5         u:1 r14 REG r14 $141
                                                  /--*  t105   ref    
N149 (  3,  3) [000184] DA----------              *  STORE_LCL_VAR ref    V14 tmp8         d:1 rdx REG rdx
N151 (  3,  2) [000098] ------------        t98 =    LCL_VAR   ref    V14 tmp8         u:1 rdx REG rdx $141
N153 (  1,  1) [000097] -c----------        t97 =    CNS_INT   ref    null REG NA $VN.Null
                                                  /--*  t98    ref    
                                                  +--*  t97    ref    
N155 (  5,  4) [000099] J------N----              *  EQ        void   REG NA $446
N157 (  7,  6) [000181] ------------              *  JTRUE     void   REG NA

------------ BB05 [???..???) -> BB07 (cond), preds={BB04} succs={BB06,BB07}
N161 (  1,  1) [000089] ------?-----        t89 =    LCL_VAR   ref    V14 tmp8         u:1 rdx REG rdx $141
                                                  /--*  t89    ref    
N163 (  3,  2) [000095] #c---O?-----        t95 = *  IND       long   REG NA $29b
N165 (  2, 10) [000088] H-----?-----        t88 =    CNS_INT(h) long   0xd1ffab1e class REG rcx $1c6
                                                  /--*  t88    long   
N167 (  6, 13) [000091] DA----?-----              *  STORE_LCL_VAR long   V13 tmp7         d:1 rcx REG rcx
N169 (  3,  2) [000092] ------?-----        t92 =    LCL_VAR   long   V13 tmp7         u:1 rcx REG rcx $1c6
                                                  /--*  t95    long   
                                                  +--*  t92    long   
N171 ( 13, 18) [000096] J----O?N----              *  EQ        void   REG NA $448
N173 ( 15, 20) [000182] -----O------              *  JTRUE     void   REG NA

------------ BB06 [???..???), preds={BB05} succs={BB07}
N177 (  3,  2) [000094] ------?-----        t94 =    LCL_VAR   long   V13 tmp7         u:1 rcx (last use) REG rcx $1c6
                                                  /--*  t94    long   
N179 (???,???) [000218] ------------       t218 = *  PUTARG_REG long   REG rcx
N181 (  3,  2) [000101] ------?-----       t101 =    LCL_VAR   ref    V05 arg5         u:1 r14 (last use) REG r14 $141
                                                  /--*  t101   ref    
N183 (???,???) [000219] ------------       t219 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t218   long   arg0 in rcx
                                                  +--*  t219   ref    arg1 in rdx
N185 ( 20, 11) [000102] --CXG-?-----       t102 = *  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL REG rax $2a0
                                                  /--*  t102   ref    
N187 ( 20, 11) [000186] DA-XG-------              *  STORE_LCL_VAR ref    V14 tmp8         d:3 rdx REG rdx

------------ BB07 [???..037) (return), preds={BB04,BB05,BB06} succs={}
N001 (  0,  0) [000195] ------------       t195 =    PHI_ARG   ref    V14 tmp8         u:3 rdx $141
N002 (  0,  0) [000194] ------------       t194 =    PHI_ARG   ref    V14 tmp8         u:1 rdx $141
                                                  /--*  t195   ref    
                                                  +--*  t194   ref    
N003 (  0,  0) [000188] ------------       t188 = *  PHI       ref   
                                                  /--*  t188   ref    
N005 (  0,  0) [000189] DA----------              *  STORE_LCL_VAR ref    V14 tmp8         d:2 rdx
N191 (  1,  1) [000165] ------------       t165 =    LCL_VAR   ref    V07 tmp1         u:1 r15 REG r15 $300
                                                  /--*  t165   ref    
N193 (  2,  2) [000173] ------------       t173 = *  LEA(b+48) byref  REG rcx
N195 (  1,  1) [000110] ------------       t110 =    LCL_VAR   ref    V14 tmp8         u:2 rdx (last use) REG rdx $141
                                                  /--*  t173   byref  
                                                  +--*  t110   ref    
N197 (???,???) [000210] -A--G-------              *  STOREIND  ref    REG NA
N199 (  1,  1) [000005] ------------         t5 =    LCL_VAR   ref    V07 tmp1         u:1 r15 (last use) REG r15 $300
                                                  /--*  t5     ref    
N201 (  2,  2) [000113] ------------              *  RETURN    ref    REG NA $2d1

-------------------------------------------------------------------------------------------------------------------

Final allocation
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r14 |r15 |
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
  0.#0   V1   Parm   Alloc rsi  |    |    |    |    |    |V1 a|    |    |    |    |    |
  0.#1   V2   Parm   Alloc rdi  |    |    |    |    |    |V1 a|V2 a|    |    |    |    |
  0.#2   V3   Parm   Alloc rbx  |    |    |    |V3 a|    |V1 a|V2 a|    |    |    |    |
  0.#3   V4   Parm   Alloc rbp  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |    |    |
  0.#4   V5   Parm   Alloc r14  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|    |
  1.#5   BB1 PredBB0            |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|    |
  6.#6   C13  Def    Alloc rcx  |    |C13a|    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|    |
  7.#7   rcx  Fixd   Keep  rcx  |    |C13a|    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|    |
  7.#8   C13  Use *  Keep  rcx  |    |C13i|    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|    |
  8.#9   rcx  Fixd   Keep  rcx  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|    |
  8.#10  I14  Def    Alloc rcx  |    |I14a|    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|    |
 10.#11  C15  Def    Alloc rdx  |    |I14a|C15a|V3 a|V4 a|V1 a|V2 a|    |    |V5 a|    |
 11.#12  rdx  Fixd   Keep  rdx  |    |I14a|C15a|V3 a|V4 a|V1 a|V2 a|    |    |V5 a|    |
 11.#13  C15  Use *  Keep  rdx  |    |I14a|C15i|V3 a|V4 a|V1 a|V2 a|    |    |V5 a|    |
 12.#14  rdx  Fixd   Keep  rdx  |    |I14a|    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|    |
 12.#15  I16  Def    Alloc rdx  |    |I14a|I16a|V3 a|V4 a|V1 a|V2 a|    |    |V5 a|    |
 13.#16  rcx  Fixd   Keep  rcx  |    |I14a|I16a|V3 a|V4 a|V1 a|V2 a|    |    |V5 a|    |
 13.#17  I14  Use *  Keep  rcx  |    |I14i|I16a|V3 a|V4 a|V1 a|V2 a|    |    |V5 a|    |
 13.#18  rdx  Fixd   Keep  rdx  |    |    |I16a|V3 a|V4 a|V1 a|V2 a|    |    |V5 a|    |
 13.#19  I16  Use *  Keep  rdx  |    |    |I16i|V3 a|V4 a|V1 a|V2 a|    |    |V5 a|    |
 14.#20  rax  Kill   Keep  rax  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|    |
 14.#21  rcx  Kill   Keep  rcx  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|    |
 14.#22  rdx  Kill   Keep  rdx  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|    |
 14.#23  r8   Kill   Keep  r8   |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|    |
 14.#24  r9   Kill   Keep  r9   |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|    |
 14.#25  r10  Kill   Keep  r10  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|    |
 14.#26  r11  Kill   Keep  r11  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|    |
 14.#27  rax  Fixd   Keep  rax  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|    |
 14.#28  I17  Def    Alloc rax  |I17a|    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|    |
 15.#29  I17  Use *  Keep  rax  |I17i|    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|    |
 16.#30  V7   Def    Alloc r15  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 18.#31  C18  Def    Alloc rcx  |    |C18a|    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 19.#32  rcx  Fixd   Keep  rcx  |    |C18a|    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 19.#33  C18  Use *  Keep  rcx  |    |C18i|    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 20.#34  rcx  Fixd   Keep  rcx  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 20.#35  I19  Def    Alloc rcx  |    |I19a|    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 21.#36  rcx  Fixd   Keep  rcx  |    |I19a|    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 21.#37  I19  Use *  Keep  rcx  |    |I19i|    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 22.#38  rax  Kill   Keep  rax  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 22.#39  rcx  Kill   Keep  rcx  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 22.#40  rdx  Kill   Keep  rdx  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 22.#41  r8   Kill   Keep  r8   |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 22.#42  r9   Kill   Keep  r9   |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 22.#43  r10  Kill   Keep  r10  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 22.#44  r11  Kill   Keep  r11  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 22.#45  rax  Fixd   Keep  rax  |    |    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 22.#46  I20  Def    Alloc rax  |I20a|    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 23.#47  I20  Use *  Keep  rax  |I20i|    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 24.#48  V8   Def    Alloc rax  |V8 a|    |    |V3 a|V4 a|V1 a|V2 a|    |    |V5 a|V7 a|
 27.#49  V1   Use *  Keep  rsi  |V8 a|    |    |V3 a|V4 a|V1 i|V2 a|    |    |V5 a|V7 a|
 28.#50  I21  Def    Alloc rdx  |V8 a|    |I21a|V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 33.#51  V8   Use    Keep  rax  |V8 a|    |I21a|V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 33.#52  I21  Use *  Keep  rdx  |V8 a|    |I21i|V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 37.#53  V7   Use    Keep  r15  |V8 a|    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 38.#54  I22  Def    Alloc rcx  |V8 a|I22a|    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 41.#55  rcx  Fixd   Keep  rcx  |V8 a|I22a|    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 41.#56  I22  Use *  Keep  rcx  |V8 a|I22i|    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 41.#57  rdx  Fixd   Keep  rdx  |V8 a|    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r14 |r15 |
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
 41.#58  V8   Use *  Copy  rdx  |V8 i|    |V8 i|V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 42.#59  rax  Kill   Keep  rax  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 42.#60  rcx  Kill   Keep  rcx  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 42.#61  rdx  Kill   Keep  rdx  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 42.#62  r8   Kill   Keep  r8   |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 42.#63  r9   Kill   Keep  r9   |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 42.#64  r10  Kill   Keep  r10  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 42.#65  r11  Kill   Keep  r11  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 42.#66  mm0  Kill   Keep  mm0  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 42.#67  mm1  Kill   Keep  mm1  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 42.#68  mm2  Kill   Keep  mm2  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 42.#69  mm3  Kill   Keep  mm3  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 42.#70  mm4  Kill   Keep  mm4  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 42.#71  mm5  Kill   Keep  mm5  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 44.#72  C23  Def    Alloc rcx  |    |C23a|    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 45.#73  rcx  Fixd   Keep  rcx  |    |C23a|    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 45.#74  C23  Use *  Keep  rcx  |    |C23i|    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 46.#75  rcx  Fixd   Keep  rcx  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 46.#76  I24  Def    Alloc rcx  |    |I24a|    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 47.#77  rcx  Fixd   Keep  rcx  |    |I24a|    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 47.#78  I24  Use *  Keep  rcx  |    |I24i|    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 48.#79  rax  Kill   Keep  rax  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 48.#80  rcx  Kill   Keep  rcx  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 48.#81  rdx  Kill   Keep  rdx  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 48.#82  r8   Kill   Keep  r8   |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 48.#83  r9   Kill   Keep  r9   |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 48.#84  r10  Kill   Keep  r10  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 48.#85  r11  Kill   Keep  r11  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 48.#86  rax  Fixd   Keep  rax  |    |    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 48.#87  I25  Def    Alloc rax  |I25a|    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 49.#88  I25  Use *  Keep  rax  |I25i|    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 50.#89  V9   Def    Alloc rax  |V9 a|    |    |V3 a|V4 a|    |V2 a|    |    |V5 a|V7 a|
 53.#90  V2   Use *  Keep  rdi  |V9 a|    |    |V3 a|V4 a|    |V2 i|    |    |V5 a|V7 a|
 54.#91  I26  Def    Alloc rdx  |V9 a|    |I26a|V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 59.#92  V9   Use    Keep  rax  |V9 a|    |I26a|V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 59.#93  I26  Use *  Keep  rdx  |V9 a|    |I26i|V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 63.#94  V7   Use    Keep  r15  |V9 a|    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 64.#95  I27  Def    Alloc rcx  |V9 a|I27a|    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 67.#96  rcx  Fixd   Keep  rcx  |V9 a|I27a|    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 67.#97  I27  Use *  Keep  rcx  |V9 a|I27i|    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 67.#98  rdx  Fixd   Keep  rdx  |V9 a|    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 67.#99  V9   Use *  Copy  rdx  |V9 i|    |V9 i|V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 68.#100 rax  Kill   Keep  rax  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 68.#101 rcx  Kill   Keep  rcx  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 68.#102 rdx  Kill   Keep  rdx  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 68.#103 r8   Kill   Keep  r8   |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 68.#104 r9   Kill   Keep  r9   |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 68.#105 r10  Kill   Keep  r10  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 68.#106 r11  Kill   Keep  r11  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 68.#107 mm0  Kill   Keep  mm0  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 68.#108 mm1  Kill   Keep  mm1  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 68.#109 mm2  Kill   Keep  mm2  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 68.#110 mm3  Kill   Keep  mm3  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 68.#111 mm4  Kill   Keep  mm4  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 68.#112 mm5  Kill   Keep  mm5  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 70.#113 C28  Def    Alloc rcx  |    |C28a|    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 71.#114 rcx  Fixd   Keep  rcx  |    |C28a|    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 71.#115 C28  Use *  Keep  rcx  |    |C28i|    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 72.#116 rcx  Fixd   Keep  rcx  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 72.#117 I29  Def    Alloc rcx  |    |I29a|    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 73.#118 rcx  Fixd   Keep  rcx  |    |I29a|    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 73.#119 I29  Use *  Keep  rcx  |    |I29i|    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 74.#120 rax  Kill   Keep  rax  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 74.#121 rcx  Kill   Keep  rcx  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 74.#122 rdx  Kill   Keep  rdx  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 74.#123 r8   Kill   Keep  r8   |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 74.#124 r9   Kill   Keep  r9   |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 74.#125 r10  Kill   Keep  r10  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 74.#126 r11  Kill   Keep  r11  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 74.#127 rax  Fixd   Keep  rax  |    |    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 74.#128 I30  Def    Alloc rax  |I30a|    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 75.#129 I30  Use *  Keep  rax  |I30i|    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 76.#130 V10  Def    Alloc rax  |V10a|    |    |V3 a|V4 a|    |    |    |    |V5 a|V7 a|
 79.#131 V3   Use *  Keep  rbx  |V10a|    |    |V3 i|V4 a|    |    |    |    |V5 a|V7 a|
 80.#132 I31  Def    Alloc rdx  |V10a|    |I31a|    |V4 a|    |    |    |    |V5 a|V7 a|
 85.#133 V10  Use    Keep  rax  |V10a|    |I31a|    |V4 a|    |    |    |    |V5 a|V7 a|
 85.#134 I31  Use *  Keep  rdx  |V10a|    |I31i|    |V4 a|    |    |    |    |V5 a|V7 a|
 89.#135 V7   Use    Keep  r15  |V10a|    |    |    |V4 a|    |    |    |    |V5 a|V7 a|
 90.#136 I32  Def    Alloc rcx  |V10a|I32a|    |    |V4 a|    |    |    |    |V5 a|V7 a|
 93.#137 rcx  Fixd   Keep  rcx  |V10a|I32a|    |    |V4 a|    |    |    |    |V5 a|V7 a|
 93.#138 I32  Use *  Keep  rcx  |V10a|I32i|    |    |V4 a|    |    |    |    |V5 a|V7 a|
 93.#139 rdx  Fixd   Keep  rdx  |V10a|    |    |    |V4 a|    |    |    |    |V5 a|V7 a|
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r14 |r15 |
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
 93.#140 V10  Use *  Copy  rdx  |V10i|    |V10i|    |V4 a|    |    |    |    |V5 a|V7 a|
 94.#141 rax  Kill   Keep  rax  |    |    |    |    |V4 a|    |    |    |    |V5 a|V7 a|
 94.#142 rcx  Kill   Keep  rcx  |    |    |    |    |V4 a|    |    |    |    |V5 a|V7 a|
 94.#143 rdx  Kill   Keep  rdx  |    |    |    |    |V4 a|    |    |    |    |V5 a|V7 a|
 94.#144 r8   Kill   Keep  r8   |    |    |    |    |V4 a|    |    |    |    |V5 a|V7 a|
 94.#145 r9   Kill   Keep  r9   |    |    |    |    |V4 a|    |    |    |    |V5 a|V7 a|
 94.#146 r10  Kill   Keep  r10  |    |    |    |    |V4 a|    |    |    |    |V5 a|V7 a|
 94.#147 r11  Kill   Keep  r11  |    |    |    |    |V4 a|    |    |    |    |V5 a|V7 a|
 94.#148 mm0  Kill   Keep  mm0  |    |    |    |    |V4 a|    |    |    |    |V5 a|V7 a|
 94.#149 mm1  Kill   Keep  mm1  |    |    |    |    |V4 a|    |    |    |    |V5 a|V7 a|
 94.#150 mm2  Kill   Keep  mm2  |    |    |    |    |V4 a|    |    |    |    |V5 a|V7 a|
 94.#151 mm3  Kill   Keep  mm3  |    |    |    |    |V4 a|    |    |    |    |V5 a|V7 a|
 94.#152 mm4  Kill   Keep  mm4  |    |    |    |    |V4 a|    |    |    |    |V5 a|V7 a|
 94.#153 mm5  Kill   Keep  mm5  |    |    |    |    |V4 a|    |    |    |    |V5 a|V7 a|
 97.#154 V4   Use    Keep  rbp  |    |    |    |    |V4 a|    |    |    |    |V5 a|V7 a|
 98.#155 V12  Def    Alloc rdx  |    |    |V12a|    |V4 a|    |    |    |    |V5 a|V7 a|
103.#156 V12  Use    Keep  rdx  |    |    |V12a|    |V4 a|    |    |    |    |V5 a|V7 a|
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r14 |r15 |
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
107.#157 BB2 PredBB1            |    |    |V12a|    |V4 a|    |    |    |    |V5 a|V7 a|
114.#158 C33  Def    Alloc rcx  |    |C33a|V12a|    |V4 a|    |    |    |    |V5 a|V7 a|
115.#159 C33  Use *  Keep  rcx  |    |C33i|V12a|    |V4 a|    |    |    |    |V5 a|V7 a|
116.#160 V11  Def    Alloc rcx  |    |V11a|V12a|    |V4 a|    |    |    |    |V5 a|V7 a|
119.#161 V12  Use    Keep  rdx  |    |V11a|V12a|    |V4 a|    |    |    |    |V5 a|V7 a|
119.#162 V11  Use    Keep  rcx  |    |V11a|V12a|    |V4 a|    |    |    |    |V5 a|V7 a|
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r14 |r15 |
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
123.#163 BB3 PredBB2            |    |V11a|    |    |V4 a|    |    |    |    |V5 a|V7 a|
127.#164 rcx  Fixd   Keep  rcx  |    |V11a|    |    |V4 a|    |    |    |    |V5 a|V7 a|
127.#165 V11  Use *  Keep  rcx  |    |V11i|    |    |V4 a|    |    |    |    |V5 a|V7 a|
128.#166 rcx  Fixd   Keep  rcx  |    |    |    |    |V4 a|    |    |    |    |V5 a|V7 a|
128.#167 I34  Def    Alloc rcx  |    |I34a|    |    |V4 a|    |    |    |    |V5 a|V7 a|
131.#168 rdx  Fixd   Keep  rdx  |    |I34a|    |    |V4 a|    |    |    |    |V5 a|V7 a|
131.#169 V4   Use *  Copy  rdx  |    |I34a|V4 i|    |V4 i|    |    |    |    |V5 a|V7 a|
132.#170 rdx  Fixd   Keep  rdx  |    |I34a|    |    |    |    |    |    |    |V5 a|V7 a|
132.#171 I35  Def    Alloc rdx  |    |I34a|I35a|    |    |    |    |    |    |V5 a|V7 a|
133.#172 rcx  Fixd   Keep  rcx  |    |I34a|I35a|    |    |    |    |    |    |V5 a|V7 a|
133.#173 I34  Use *  Keep  rcx  |    |I34i|I35a|    |    |    |    |    |    |V5 a|V7 a|
133.#174 rdx  Fixd   Keep  rdx  |    |    |I35a|    |    |    |    |    |    |V5 a|V7 a|
133.#175 I35  Use *  Keep  rdx  |    |    |I35i|    |    |    |    |    |    |V5 a|V7 a|
134.#176 rax  Kill   Keep  rax  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
134.#177 rcx  Kill   Keep  rcx  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
134.#178 rdx  Kill   Keep  rdx  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
134.#179 r8   Kill   Keep  r8   |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
134.#180 r9   Kill   Keep  r9   |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
134.#181 r10  Kill   Keep  r10  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
134.#182 r11  Kill   Keep  r11  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
134.#183 rax  Fixd   Keep  rax  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
134.#184 I36  Def    Alloc rax  |I36a|    |    |    |    |    |    |    |    |V5 a|V7 a|
135.#185 I36  Use *  Keep  rax  |I36i|    |    |    |    |    |    |    |    |V5 a|V7 a|
136.#186 V12  Def    Alloc rdx  |    |    |V12a|    |    |    |    |    |    |V5 a|V7 a|
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r14 |r15 |
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
137.#187 BB4 PredBB1            |    |    |V12a|    |    |    |    |    |    |V5 a|V7 a|
141.#188 V7   Use    Keep  r15  |    |    |V12a|    |    |    |    |    |    |V5 a|V7 a|
142.#189 I37  Def    Alloc rcx  |    |I37a|V12a|    |    |    |    |    |    |V5 a|V7 a|
145.#190 rcx  Fixd   Keep  rcx  |    |I37a|V12a|    |    |    |    |    |    |V5 a|V7 a|
145.#191 I37  Use *  Keep  rcx  |    |I37i|V12a|    |    |    |    |    |    |V5 a|V7 a|
145.#192 rdx  Fixd   Keep  rdx  |    |    |V12a|    |    |    |    |    |    |V5 a|V7 a|
145.#193 V12  Use *  Keep  rdx  |    |    |V12i|    |    |    |    |    |    |V5 a|V7 a|
146.#194 rax  Kill   Keep  rax  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
146.#195 rcx  Kill   Keep  rcx  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
146.#196 rdx  Kill   Keep  rdx  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
146.#197 r8   Kill   Keep  r8   |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
146.#198 r9   Kill   Keep  r9   |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
146.#199 r10  Kill   Keep  r10  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
146.#200 r11  Kill   Keep  r11  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
146.#201 mm0  Kill   Keep  mm0  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
146.#202 mm1  Kill   Keep  mm1  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
146.#203 mm2  Kill   Keep  mm2  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
146.#204 mm3  Kill   Keep  mm3  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
146.#205 mm4  Kill   Keep  mm4  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
146.#206 mm5  Kill   Keep  mm5  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
149.#207 V5   Use    Keep  r14  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
150.#208 V14  Def    Alloc rdx  |    |    |V14a|    |    |    |    |    |    |V5 a|V7 a|
155.#209 V14  Use    Keep  rdx  |    |    |V14a|    |    |    |    |    |    |V5 a|V7 a|
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r14 |r15 |
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
159.#210 BB5 PredBB4            |    |    |V14a|    |    |    |    |    |    |V5 a|V7 a|
166.#211 C38  Def    Alloc rcx  |    |C38a|V14a|    |    |    |    |    |    |V5 a|V7 a|
167.#212 C38  Use *  Keep  rcx  |    |C38i|V14a|    |    |    |    |    |    |V5 a|V7 a|
168.#213 V13  Def    Alloc rcx  |    |V13a|V14a|    |    |    |    |    |    |V5 a|V7 a|
171.#214 V14  Use    Keep  rdx  |    |V13a|V14a|    |    |    |    |    |    |V5 a|V7 a|
171.#215 V13  Use    Keep  rcx  |    |V13a|V14a|    |    |    |    |    |    |V5 a|V7 a|
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r14 |r15 |
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
175.#216 BB6 PredBB5            |    |V13a|    |    |    |    |    |    |    |V5 a|V7 a|
179.#217 rcx  Fixd   Keep  rcx  |    |V13a|    |    |    |    |    |    |    |V5 a|V7 a|
179.#218 V13  Use *  Keep  rcx  |    |V13i|    |    |    |    |    |    |    |V5 a|V7 a|
180.#219 rcx  Fixd   Keep  rcx  |    |    |    |    |    |    |    |    |    |V5 a|V7 a|
180.#220 I39  Def    Alloc rcx  |    |I39a|    |    |    |    |    |    |    |V5 a|V7 a|
183.#221 rdx  Fixd   Keep  rdx  |    |I39a|    |    |    |    |    |    |    |V5 a|V7 a|
183.#222 V5   Use *  Copy  rdx  |    |I39a|V5 i|    |    |    |    |    |    |V5 i|V7 a|
184.#223 rdx  Fixd   Keep  rdx  |    |I39a|    |    |    |    |    |    |    |    |V7 a|
184.#224 I40  Def    Alloc rdx  |    |I39a|I40a|    |    |    |    |    |    |    |V7 a|
185.#225 rcx  Fixd   Keep  rcx  |    |I39a|I40a|    |    |    |    |    |    |    |V7 a|
185.#226 I39  Use *  Keep  rcx  |    |I39i|I40a|    |    |    |    |    |    |    |V7 a|
185.#227 rdx  Fixd   Keep  rdx  |    |    |I40a|    |    |    |    |    |    |    |V7 a|
185.#228 I40  Use *  Keep  rdx  |    |    |I40i|    |    |    |    |    |    |    |V7 a|
186.#229 rax  Kill   Keep  rax  |    |    |    |    |    |    |    |    |    |    |V7 a|
186.#230 rcx  Kill   Keep  rcx  |    |    |    |    |    |    |    |    |    |    |V7 a|
186.#231 rdx  Kill   Keep  rdx  |    |    |    |    |    |    |    |    |    |    |V7 a|
186.#232 r8   Kill   Keep  r8   |    |    |    |    |    |    |    |    |    |    |V7 a|
186.#233 r9   Kill   Keep  r9   |    |    |    |    |    |    |    |    |    |    |V7 a|
186.#234 r10  Kill   Keep  r10  |    |    |    |    |    |    |    |    |    |    |V7 a|
186.#235 r11  Kill   Keep  r11  |    |    |    |    |    |    |    |    |    |    |V7 a|
186.#236 rax  Fixd   Keep  rax  |    |    |    |    |    |    |    |    |    |    |V7 a|
186.#237 I41  Def    Alloc rax  |I41a|    |    |    |    |    |    |    |    |    |V7 a|
187.#238 I41  Use *  Keep  rax  |I41i|    |    |    |    |    |    |    |    |    |V7 a|
188.#239 V14  Def    Alloc rdx  |    |    |V14a|    |    |    |    |    |    |    |V7 a|
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |r14 |r15 |
--------------------------------+----+----+----+----+----+----+----+----+----+----+----+
189.#240 BB7 PredBB4            |    |    |V14a|    |    |    |    |    |    |    |V7 a|
193.#241 V7   Use    Keep  r15  |    |    |V14a|    |    |    |    |    |    |    |V7 a|
194.#242 I42  Def    Alloc rcx  |    |I42a|V14a|    |    |    |    |    |    |    |V7 a|
197.#243 rcx  Fixd   Keep  rcx  |    |I42a|V14a|    |    |    |    |    |    |    |V7 a|
197.#244 I42  Use *  Keep  rcx  |    |I42i|V14a|    |    |    |    |    |    |    |V7 a|
197.#245 rdx  Fixd   Keep  rdx  |    |    |V14a|    |    |    |    |    |    |    |V7 a|
197.#246 V14  Use *  Keep  rdx  |    |    |V14i|    |    |    |    |    |    |    |V7 a|
198.#247 rax  Kill   Keep  rax  |    |    |    |    |    |    |    |    |    |    |V7 a|
198.#248 rcx  Kill   Keep  rcx  |    |    |    |    |    |    |    |    |    |    |V7 a|
198.#249 rdx  Kill   Keep  rdx  |    |    |    |    |    |    |    |    |    |    |V7 a|
198.#250 r8   Kill   Keep  r8   |    |    |    |    |    |    |    |    |    |    |V7 a|
198.#251 r9   Kill   Keep  r9   |    |    |    |    |    |    |    |    |    |    |V7 a|
198.#252 r10  Kill   Keep  r10  |    |    |    |    |    |    |    |    |    |    |V7 a|
198.#253 r11  Kill   Keep  r11  |    |    |    |    |    |    |    |    |    |    |V7 a|
198.#254 mm0  Kill   Keep  mm0  |    |    |    |    |    |    |    |    |    |    |V7 a|
198.#255 mm1  Kill   Keep  mm1  |    |    |    |    |    |    |    |    |    |    |V7 a|
198.#256 mm2  Kill   Keep  mm2  |    |    |    |    |    |    |    |    |    |    |V7 a|
198.#257 mm3  Kill   Keep  mm3  |    |    |    |    |    |    |    |    |    |    |V7 a|
198.#258 mm4  Kill   Keep  mm4  |    |    |    |    |    |    |    |    |    |    |V7 a|
198.#259 mm5  Kill   Keep  mm5  |    |    |    |    |    |    |    |    |    |    |V7 a|
201.#260 rax  Fixd   Keep  rax  |    |    |    |    |    |    |    |    |    |    |V7 a|
201.#261 V7   Use *  Copy  rax  |V7 i|    |    |    |    |    |    |    |    |    |V7 i|

Recording the maximum number of concurrent spills:

----------
LSRA Stats
----------
Total Tracked Vars:  13
Total Reg Cand Vars: 13
Total number of Intervals: 42
Total number of RefPositions: 261
Total Spill Count: 0    Weighted: 0.000000
Total CopyReg Count: 0   Weighted: 0.000000
Total ResolutionMov Count: 0    Weighted: 0.000000
Total number of split edges: 0
Total Number of spill temps created: 0

TUPLE STYLE DUMP WITH REGISTER ASSIGNMENTS
Incoming Parameters:  V01(rdx=>rsi) V02(r8=>rdi) V03(r9=>rbx) V04(STK=>rbp) V05(STK=>r14)
BB01 [000..???) -> BB04 (cond), preds={} succs={BB02,BB04}
=====
  N003.                    IL_OFFSET IL offset: 0x0
  N005. rcx             =  CNS_INT(h) 0xd1ffab1e class
  N007. rcx             =  PUTARG_REG; rcx
  N009. rdx             =  CNS_INT   5
  N011. rdx             =  PUTARG_REG; rdx
  N013. rax             =  CALL help; rcx,rdx
* N015.                    V07(r15); rax
  N017. rcx             =  CNS_INT(h) 0xd1ffab1e class
  N019. rcx             =  PUTARG_REG; rcx
  N021. rax             =  CALL help; rcx
* N023.                    V08(rax); rax
  N025.                    V01(rsi*)
  N027. rdx             =  CAST     ; rsi*
  N029.                    V08(rax)
  N031. STK             =  LEA(b+8) ; rax
  N033.                    STOREIND ; STK,rdx
  N035.                    V07(r15)
  N037. rcx             =  LEA(b+16); r15
  N039.                    V08(rax*)
  N041.                    STOREIND ; rcx,rax*
  N043. rcx             =  CNS_INT(h) 0xd1ffab1e class
  N045. rcx             =  PUTARG_REG; rcx
  N047. rax             =  CALL help; rcx
* N049.                    V09(rax); rax
  N051.                    V02(rdi*)
  N053. rdx             =  CAST     ; rdi*
  N055.                    V09(rax)
  N057. STK             =  LEA(b+8) ; rax
  N059.                    STOREIND ; STK,rdx
  N061.                    V07(r15)
  N063. rcx             =  LEA(b+24); r15
  N065.                    V09(rax*)
  N067.                    STOREIND ; rcx,rax*
  N069. rcx             =  CNS_INT(h) 0xd1ffab1e class
  N071. rcx             =  PUTARG_REG; rcx
  N073. rax             =  CALL help; rcx
* N075.                    V10(rax); rax
  N077.                    V03(rbx*)
  N079. rdx             =  CAST     ; rbx*
  N081.                    V10(rax)
  N083. STK             =  LEA(b+8) ; rax
  N085.                    STOREIND ; STK,rdx
  N087.                    V07(r15)
  N089. rcx             =  LEA(b+32); r15
  N091.                    V10(rax*)
  N093.                    STOREIND ; rcx,rax*
  N095.                    V04(rbp)
* N097.                    V12(rdx); rbp
  N099.                    V12(rdx)
  N101.                    CNS_INT   null
  N103.                    EQ       ; rdx
  N105.                    JTRUE    
Var=Reg end of BB01: V07=r15 V12=rdx V04=rbp V05=r14 

BB02 [???..???) -> BB04 (cond), preds={BB01} succs={BB03,BB04}
=====
Predecessor for variable locations: BB01
Var=Reg beg of BB02: V07=r15 V12=rdx V04=rbp V05=r14 
  N109.                    V12(rdx)
  N111. STK             =  IND      ; rdx
  N113. rcx             =  CNS_INT(h) 0xd1ffab1e class
* N115.                    V11(rcx); rcx
  N117.                    V11(rcx)
  N119.                    EQ       ; STK,rcx
  N121.                    JTRUE    
Var=Reg end of BB02: V07=r15 V12=rdx V11=rcx V04=rbp V05=r14 

BB03 [???..???), preds={BB02} succs={BB04}
=====
Predecessor for variable locations: BB02
Var=Reg beg of BB03: V07=r15 V11=rcx V04=rbp V05=r14 
  N125.                    V11(rcx*)
  N127. rcx             =  PUTARG_REG; rcx*
  N129.                    V04(rbp*)
  N131. rdx             =  PUTARG_REG; rbp*
  N133. rax             =  CALL help; rcx,rdx
* N135.                    V12(rdx); rax
Var=Reg end of BB03: V07=r15 V12=rdx V05=r14 

BB04 [???..???) -> BB07 (cond), preds={BB01,BB02,BB03} succs={BB05,BB07}
=====
Predecessor for variable locations: BB01
Var=Reg beg of BB04: V07=r15 V12=rdx V05=r14 
  N139.                    V07(r15)
  N141. rcx             =  LEA(b+40); r15
  N143.                    V12(rdx*)
  N145.                    STOREIND ; rcx,rdx*
  N147.                    V05(r14)
* N149.                    V14(rdx); r14
  N151.                    V14(rdx)
  N153.                    CNS_INT   null
  N155.                    EQ       ; rdx
  N157.                    JTRUE    
Var=Reg end of BB04: V07=r15 V14=rdx V05=r14 

BB05 [???..???) -> BB07 (cond), preds={BB04} succs={BB06,BB07}
=====
Predecessor for variable locations: BB04
Var=Reg beg of BB05: V07=r15 V14=rdx V05=r14 
  N161.                    V14(rdx)
  N163. STK             =  IND      ; rdx
  N165. rcx             =  CNS_INT(h) 0xd1ffab1e class
* N167.                    V13(rcx); rcx
  N169.                    V13(rcx)
  N171.                    EQ       ; STK,rcx
  N173.                    JTRUE    
Var=Reg end of BB05: V07=r15 V14=rdx V13=rcx V05=r14 

BB06 [???..???), preds={BB05} succs={BB07}
=====
Predecessor for variable locations: BB05
Var=Reg beg of BB06: V07=r15 V13=rcx V05=r14 
  N177.                    V13(rcx*)
  N179. rcx             =  PUTARG_REG; rcx*
  N181.                    V05(r14*)
  N183. rdx             =  PUTARG_REG; r14*
  N185. rax             =  CALL help; rcx,rdx
* N187.                    V14(rdx); rax
Var=Reg end of BB06: V07=r15 V14=rdx 

BB07 [???..037) (return), preds={BB04,BB05,BB06} succs={}
=====
Predecessor for variable locations: BB04
Var=Reg beg of BB07: V07=r15 V14=rdx 
  N191.                    V07(r15)
  N193. rcx             =  LEA(b+48); r15
  N195.                    V14(rdx*)
  N197.                    STOREIND ; rcx,rdx*
  N199.                    V07(r15*)
  N201.                    RETURN   ; r15*
Var=Reg end of BB07: none




*************** Finishing PHASE Linear scan register alloc
*************** In genGenerateCode()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..???)-> BB04 ( cond )                     i label target hascall idxlen new[] newobj LIR 
BB02 [0003]  1       BB01                  0.25    [???..???)-> BB04 ( cond )                     i LIR 
BB03 [0002]  1       BB02                  0.12    [???..???)                                     i LIR 
BB04 [0001]  3       BB01,BB02,BB03        1       [???..???)-> BB07 ( cond )                     i label target hascall idxlen new[] newobj LIR 
BB05 [0008]  1       BB04                  0.25    [???..???)-> BB07 ( cond )                     i LIR 
BB06 [0007]  1       BB05                  0.12    [???..???)                                     i LIR 
BB07 [0006]  3       BB04,BB05,BB06        1       [???..037)        (return)                     i label target hascall idxlen new[] newobj LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Generate code
*************** In fgDebugCheckBBlist
Finalizing stack frame
Recording Var Locations at start of BB01
  V01(rsi)  V02(rdi)  V03(rbx)  V04(rbp)  V05(r14)
Modified regs: [rax rcx rdx rbx rbp rsi rdi r8-r11 r14-r15 mm0-mm5]
Callee-saved registers pushed: 6 [rbx rbp rsi rdi r14-r15]
*************** In lvaAssignFrameOffsets(FINAL_FRAME_LAYOUT)
Assign V06 OutArgs, size=32, stkOffs=-0x58
--- delta bump 8 for RA
--- delta bump 88 for RSP frame
--- virtual stack offset to actual stack offset delta is 96
-- V00 was 0, now 96
-- V01 was 8, now 104
-- V02 was 16, now 112
-- V03 was 24, now 120
-- V04 was 32, now 128
-- V05 was 40, now 136
-- V06 was -88, now 8
; Final local variable assignments
;
;* V00 this         [V00    ] (  0,  0   )     ref  ->  zero-ref    this class-hnd
;  V01 arg1         [V01,T06] (  3,  3   )     int  ->  rsi        
;  V02 arg2         [V02,T07] (  3,  3   )   short  ->  rdi        
;  V03 arg3         [V03,T08] (  3,  3   )   ubyte  ->  rbx        
;  V04 arg4         [V04,T11] (  2,  1.12)     ref  ->  rbp         class-hnd
;  V05 arg5         [V05,T12] (  2,  1.12)     ref  ->  r14         class-hnd
;  V06 OutArgs      [V06    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V07 tmp1         [V07,T00] (  7, 14   )     ref  ->  r15         class-hnd exact "dup spill"
;  V08 tmp2         [V08,T03] (  3,  6   )     ref  ->  rax         class-hnd exact "Single-def Box Helper"
;  V09 tmp3         [V09,T04] (  3,  6   )     ref  ->  rax         class-hnd exact "Single-def Box Helper"
;  V10 tmp4         [V10,T05] (  3,  6   )     ref  ->  rax         class-hnd exact "Single-def Box Helper"
;  V11 tmp5         [V11,T09] (  3,  1.25)    long  ->  rcx         "fgInsertCommaFormTemp is creating a new local variable"
;  V12 tmp6         [V12,T01] (  5,  6.75)     ref  ->  rdx         class-hnd "spilling QMark2"
;  V13 tmp7         [V13,T10] (  3,  1.25)    long  ->  rcx         "fgInsertCommaFormTemp is creating a new local variable"
;  V14 tmp8         [V14,T02] (  5,  6.75)     ref  ->  rdx         class-hnd "spilling QMark2"
;
; Lcl frame size = 40
Setting stack level from -572662307 to 0

=============== Generating BB01 [000..???) -> BB04 (cond), preds={} succs={BB02,BB04} flags=0x00000002.20730020: i label target hascall idxlen new[] newobj LIR 
BB01 IN (5)={        V01 V02 V03 V04 V05} + ByrefExposed + GcHeap
     OUT(4)={V07 V12             V04 V05} + ByrefExposed + GcHeap

Recording Var Locations at start of BB01
  V01(rsi)  V02(rdi)  V03(rbx)  V04(rbp)  V05(r14)
Change life 0000000000000000 {} -> 00000000000019C0 {V01 V02 V03 V04 V05}
							V01 in reg rsi is becoming live  [------]
							Live regs: 00000000 {} => 00000040 {rsi}
							V02 in reg rdi is becoming live  [------]
							Live regs: 00000040 {rsi} => 000000C0 {rsi rdi}
							V03 in reg rbx is becoming live  [------]
							Live regs: 000000C0 {rsi rdi} => 000000C8 {rbx rsi rdi}
							V04 in reg rbp is becoming live  [------]
							Live regs: 000000C8 {rbx rsi rdi} => 000000E8 {rbx rbp rsi rdi}
							V05 in reg r14 is becoming live  [------]
							Live regs: 000000E8 {rbx rbp rsi rdi} => 000040E8 {rbx rbp rsi rdi r14}
							Live regs: (unchanged) 000040E8 {rbx rbp rsi rdi r14}
							GC regs: (unchanged) 00004020 {rbp r14}
							Byref regs: (unchanged) 00000000 {}

      L_M39650_BB01:
Label: IG02, GCvars=0000000000000000 {}, gcrefRegs=00004020 {rbp r14}, byrefRegs=00000000 {}

Scope info: begin block BB01, IL range [000..???)
Scope info: open scopes =
   1 (V01 arg1) [000..037)
   2 (V02 arg2) [000..037)
   3 (V03 arg3) [000..037)
   4 (V04 arg4) [000..037)
   5 (V05 arg5) [000..037)
Added IP mapping: 0x0000 STACK_EMPTY (G_M39650_IG02,ins#0,ofs#0) label
Generating: N003 (???,???) [000202] ------------                 IL_OFFSET void   IL offset: 0x0 REG NA
Generating: N005 (  2, 10) [000001] H-----------         t1 =    CNS_INT(h) long   0xd1ffab1e class REG rcx $1c0
IN0001:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t1     long   
Generating: N007 (???,???) [000211] ------------       t211 = *  PUTARG_REG long   REG rcx
Generating: N009 (  1,  1) [000000] ------------         t0 =    CNS_INT   long   5 REG rdx $200
IN0002:        mov      edx, 5
                                                              /--*  t0     long   
Generating: N011 (???,???) [000212] ------------       t212 = *  PUTARG_REG long   REG rdx
                                                              /--*  t211   long   arg0 in rcx
                                                              +--*  t212   long   arg1 in rdx
Generating: N013 ( 17, 18) [000002] --CXG-------         t2 = *  CALL help ref    HELPER.CORINFO_HELP_NEWARR_1_OBJ REG rax $282
							Call: GCvars=0000000000000000 {}, gcrefRegs=00004020 {rbp r14}, byrefRegs=00000000 {}
IN0003:        call     CORINFO_HELP_NEWARR_1_OBJ
							GC regs: 00004020 {rbp r14} => 00004021 {rax rbp r14}
                                                              /--*  t2     ref    
Generating: N015 ( 17, 18) [000004] DA-XG-------              *  STORE_LCL_VAR ref    V07 tmp1         d:1 r15 REG r15
							GC regs: 00004021 {rax rbp r14} => 00004020 {rbp r14}
IN0004:        mov      r15, rax
							V07 in reg r15 is becoming live  [000004]
							Live regs: 000040E8 {rbx rbp rsi rdi r14} => 0000C0E8 {rbx rbp rsi rdi r14 r15}
							Live vars: {V01 V02 V03 V04 V05} => {V01 V02 V03 V04 V05 V07}
							GC regs: 00004020 {rbp r14} => 0000C020 {rbp r14 r15}
Generating: N017 (  2, 10) [000010] H-----------        t10 =    CNS_INT(h) long   0xd1ffab1e class REG rcx $1c1
IN0005:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t10    long   
Generating: N019 (???,???) [000213] ------------       t213 = *  PUTARG_REG long   REG rcx
                                                              /--*  t213   long   arg0 in rcx
Generating: N021 ( 16, 16) [000011] --C---------        t11 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $283
							Call: GCvars=0000000000000000 {}, gcrefRegs=0000C020 {rbp r14 r15}, byrefRegs=00000000 {}
IN0006:        call     CORINFO_HELP_NEWSFAST
							GC regs: 0000C020 {rbp r14 r15} => 0000C021 {rax rbp r14 r15}
                                                              /--*  t11    ref    
Generating: N023 ( 16, 16) [000013] DA----------              *  STORE_LCL_VAR ref    V08 tmp2         d:1 rax REG rax
							GC regs: 0000C021 {rax rbp r14 r15} => 0000C020 {rbp r14 r15}
							V08 in reg rax is becoming live  [000013]
							Live regs: 0000C0E8 {rbx rbp rsi rdi r14 r15} => 0000C0E9 {rax rbx rbp rsi rdi r14 r15}
							Live vars: {V01 V02 V03 V04 V05 V07} => {V01 V02 V03 V04 V05 V07 V08}
							GC regs: 0000C020 {rbp r14 r15} => 0000C021 {rax rbp r14 r15}
Generating: N025 (  1,  1) [000008] ------------         t8 =    LCL_VAR   int    V01 arg1         u:1 rsi (last use) REG rsi $80
                                                              /--*  t8     int    
Generating: N027 (  2,  3) [000009] ------------         t9 = *  CAST      long <- int REG rdx $340
							V01 in reg rsi is becoming dead  [000008]
							Live regs: 0000C0E9 {rax rbx rbp rsi rdi r14 r15} => 0000C0A9 {rax rbx rbp rdi r14 r15}
							Live vars: {V01 V02 V03 V04 V05 V07 V08} => {V02 V03 V04 V05 V07 V08}
IN0007:        movsxd   rdx, esi
Generating: N029 (  1,  1) [000014] ------------        t14 =    LCL_VAR   ref    V08 tmp2         u:1 rax REG rax $283
                                                              /--*  t14    ref    
Generating: N031 (  2,  2) [000016] -c----------        t16 = *  LEA(b+8)  byref  REG NA
                                                              /--*  t16    byref  
                                                              +--*  t9     long   
Generating: N033 (???,???) [000203] -A---O------              *  STOREIND  long   REG NA
IN0008:        mov      qword ptr [rax+8], rdx
Generating: N035 (  1,  1) [000117] ------------       t117 =    LCL_VAR   ref    V07 tmp1         u:1 r15 REG r15 $300
                                                              /--*  t117   ref    
Generating: N037 (  2,  2) [000125] ------------       t125 = *  LEA(b+16) byref  REG rcx
IN0009:        lea      rcx, bword ptr [r15+16]
							Byref regs: 00000000 {} => 00000002 {rcx}
Generating: N039 (  1,  1) [000019] ------------        t19 =    LCL_VAR   ref    V08 tmp2         u:1 rax (last use) REG rax $283
                                                              /--*  t125   byref  
                                                              +--*  t19    ref    
Generating: N041 (???,???) [000204] -A--G-------              *  STOREIND  ref    REG NA
							Byref regs: 00000002 {rcx} => 00000000 {}
							V08 in reg rax is becoming dead  [000019]
							Live regs: 0000C0A9 {rax rbx rbp rdi r14 r15} => 0000C0A8 {rbx rbp rdi r14 r15}
							Live vars: {V02 V03 V04 V05 V07 V08} => {V02 V03 V04 V05 V07}
							GC regs: 0000C021 {rax rbp r14 r15} => 0000C020 {rbp r14 r15}
IN000a:        mov      rdx, rax
NoGC Call: savedSet=0000F0E8 {rbx rbp rsi rdi r12 r13 r14 r15}
							Call: GCvars=0000000000000000 {}, gcrefRegs=0000C020 {rbp r14 r15}, byrefRegs=00000000 {}
IN000b:        call     CORINFO_HELP_ASSIGN_REF
Generating: N043 (  2, 10) [000026] H-----------        t26 =    CNS_INT(h) long   0xd1ffab1e class REG rcx $1c3
IN000c:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t26    long   
Generating: N045 (???,???) [000214] ------------       t214 = *  PUTARG_REG long   REG rcx
                                                              /--*  t214   long   arg0 in rcx
Generating: N047 ( 16, 16) [000027] --C---------        t27 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $287
							Call: GCvars=0000000000000000 {}, gcrefRegs=0000C020 {rbp r14 r15}, byrefRegs=00000000 {}
IN000d:        call     CORINFO_HELP_NEWSFAST
							GC regs: 0000C020 {rbp r14 r15} => 0000C021 {rax rbp r14 r15}
                                                              /--*  t27    ref    
Generating: N049 ( 16, 16) [000029] DA----------              *  STORE_LCL_VAR ref    V09 tmp3         d:1 rax REG rax
							GC regs: 0000C021 {rax rbp r14 r15} => 0000C020 {rbp r14 r15}
							V09 in reg rax is becoming live  [000029]
							Live regs: 0000C0A8 {rbx rbp rdi r14 r15} => 0000C0A9 {rax rbx rbp rdi r14 r15}
							Live vars: {V02 V03 V04 V05 V07} => {V02 V03 V04 V05 V07 V09}
							GC regs: 0000C020 {rbp r14 r15} => 0000C021 {rax rbp r14 r15}
Generating: N051 (  2,  2) [000025] ------------        t25 =    LCL_VAR   int    V02 arg2         u:1 rdi (last use) REG rdi $c0
                                                              /--*  t25    int    
Generating: N053 (  3,  4) [000128] ------------       t128 = *  CAST      int <- short <- int REG rdx $440
							V02 in reg rdi is becoming dead  [000025]
							Live regs: 0000C0A9 {rax rbx rbp rdi r14 r15} => 0000C029 {rax rbx rbp r14 r15}
							Live vars: {V02 V03 V04 V05 V07 V09} => {V03 V04 V05 V07 V09}
IN000e:        movsx    rdx, di
Generating: N055 (  1,  1) [000030] ------------        t30 =    LCL_VAR   ref    V09 tmp3         u:1 rax REG rax $287
                                                              /--*  t30    ref    
Generating: N057 (  2,  2) [000032] -c----------        t32 = *  LEA(b+8)  byref  REG NA
                                                              /--*  t32    byref  
                                                              +--*  t128   int    
Generating: N059 (???,???) [000205] -A---O------              *  STOREIND  int    REG NA
IN000f:        mov      dword ptr [rax+8], edx
Generating: N061 (  1,  1) [000129] ------------       t129 =    LCL_VAR   ref    V07 tmp1         u:1 r15 REG r15 $300
                                                              /--*  t129   ref    
Generating: N063 (  2,  2) [000137] ------------       t137 = *  LEA(b+24) byref  REG rcx
IN0010:        lea      rcx, bword ptr [r15+24]
							Byref regs: 00000000 {} => 00000002 {rcx}
Generating: N065 (  1,  1) [000036] ------------        t36 =    LCL_VAR   ref    V09 tmp3         u:1 rax (last use) REG rax $287
                                                              /--*  t137   byref  
                                                              +--*  t36    ref    
Generating: N067 (???,???) [000206] -A--G-------              *  STOREIND  ref    REG NA
							Byref regs: 00000002 {rcx} => 00000000 {}
							V09 in reg rax is becoming dead  [000036]
							Live regs: 0000C029 {rax rbx rbp r14 r15} => 0000C028 {rbx rbp r14 r15}
							Live vars: {V03 V04 V05 V07 V09} => {V03 V04 V05 V07}
							GC regs: 0000C021 {rax rbp r14 r15} => 0000C020 {rbp r14 r15}
IN0011:        mov      rdx, rax
NoGC Call: savedSet=0000F0E8 {rbx rbp rsi rdi r12 r13 r14 r15}
							Call: GCvars=0000000000000000 {}, gcrefRegs=0000C020 {rbp r14 r15}, byrefRegs=00000000 {}
IN0012:        call     CORINFO_HELP_ASSIGN_REF
Generating: N069 (  2, 10) [000043] H-----------        t43 =    CNS_INT(h) long   0xd1ffab1e class REG rcx $1c4
IN0013:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t43    long   
Generating: N071 (???,???) [000215] ------------       t215 = *  PUTARG_REG long   REG rcx
                                                              /--*  t215   long   arg0 in rcx
Generating: N073 ( 16, 16) [000044] --C---------        t44 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $28b
							Call: GCvars=0000000000000000 {}, gcrefRegs=0000C020 {rbp r14 r15}, byrefRegs=00000000 {}
IN0014:        call     CORINFO_HELP_NEWSFAST
							GC regs: 0000C020 {rbp r14 r15} => 0000C021 {rax rbp r14 r15}
                                                              /--*  t44    ref    
Generating: N075 ( 16, 16) [000046] DA----------              *  STORE_LCL_VAR ref    V10 tmp4         d:1 rax REG rax
							GC regs: 0000C021 {rax rbp r14 r15} => 0000C020 {rbp r14 r15}
							V10 in reg rax is becoming live  [000046]
							Live regs: 0000C028 {rbx rbp r14 r15} => 0000C029 {rax rbx rbp r14 r15}
							Live vars: {V03 V04 V05 V07} => {V03 V04 V05 V07 V10}
							GC regs: 0000C020 {rbp r14 r15} => 0000C021 {rax rbp r14 r15}
Generating: N077 (  2,  2) [000042] ------------        t42 =    LCL_VAR   int    V03 arg3         u:1 rbx (last use) REG rbx $100
                                                              /--*  t42    int    
Generating: N079 (  3,  4) [000140] ------------       t140 = *  CAST      int <- ubyte <- int REG rdx $441
							V03 in reg rbx is becoming dead  [000042]
							Live regs: 0000C029 {rax rbx rbp r14 r15} => 0000C021 {rax rbp r14 r15}
							Live vars: {V03 V04 V05 V07 V10} => {V04 V05 V07 V10}
IN0015:        movzx    rdx, bl
Generating: N081 (  1,  1) [000047] ------------        t47 =    LCL_VAR   ref    V10 tmp4         u:1 rax REG rax $28b
                                                              /--*  t47    ref    
Generating: N083 (  2,  2) [000049] -c----------        t49 = *  LEA(b+8)  byref  REG NA
                                                              /--*  t49    byref  
                                                              +--*  t140   int    
Generating: N085 (???,???) [000207] -A---O------              *  STOREIND  short  REG NA
IN0016:        mov      word  ptr [rax+8], dx
Generating: N087 (  1,  1) [000141] ------------       t141 =    LCL_VAR   ref    V07 tmp1         u:1 r15 REG r15 $300
                                                              /--*  t141   ref    
Generating: N089 (  2,  2) [000149] ------------       t149 = *  LEA(b+32) byref  REG rcx
IN0017:        lea      rcx, bword ptr [r15+32]
							Byref regs: 00000000 {} => 00000002 {rcx}
Generating: N091 (  1,  1) [000053] ------------        t53 =    LCL_VAR   ref    V10 tmp4         u:1 rax (last use) REG rax $28b
                                                              /--*  t149   byref  
                                                              +--*  t53    ref    
Generating: N093 (???,???) [000208] -A--G-------              *  STOREIND  ref    REG NA
							Byref regs: 00000002 {rcx} => 00000000 {}
							V10 in reg rax is becoming dead  [000053]
							Live regs: 0000C021 {rax rbp r14 r15} => 0000C020 {rbp r14 r15}
							Live vars: {V04 V05 V07 V10} => {V04 V05 V07}
							GC regs: 0000C021 {rax rbp r14 r15} => 0000C020 {rbp r14 r15}
IN0018:        mov      rdx, rax
NoGC Call: savedSet=0000F0E8 {rbx rbp rsi rdi r12 r13 r14 r15}
							Call: GCvars=0000000000000000 {}, gcrefRegs=0000C020 {rbp r14 r15}, byrefRegs=00000000 {}
IN0019:        call     CORINFO_HELP_ASSIGN_REF
Generating: N095 (  3,  2) [000077] ------?-----        t77 =    LCL_VAR   ref    V04 arg4         u:1 rbp REG rbp $140
                                                              /--*  t77    ref    
Generating: N097 (  3,  3) [000178] DA----------              *  STORE_LCL_VAR ref    V12 tmp6         d:1 rdx REG rdx
IN001a:        mov      rdx, rbp
							V12 in reg rdx is becoming live  [000178]
							Live regs: 0000C020 {rbp r14 r15} => 0000C024 {rdx rbp r14 r15}
							Live vars: {V04 V05 V07} => {V04 V05 V07 V12}
							GC regs: 0000C020 {rbp r14 r15} => 0000C024 {rdx rbp r14 r15}
Generating: N099 (  3,  2) [000070] ------------        t70 =    LCL_VAR   ref    V12 tmp6         u:1 rdx REG rdx $140
Generating: N101 (  1,  1) [000069] -c----------        t69 =    CNS_INT   ref    null REG NA $VN.Null
                                                              /--*  t70    ref    
                                                              +--*  t69    ref    
Generating: N103 (  5,  4) [000071] J------N----              *  EQ        void   REG NA $443
IN001b:        test     rdx, rdx
Generating: N105 (  7,  6) [000175] ------------              *  JTRUE     void   REG NA
IN001c:        je       L_M39650_BB04

Scope info: end block BB01, IL range [000..???)
Scope info: ignoring block end

=============== Generating BB02 [???..???) -> BB04 (cond), preds={BB01} succs={BB03,BB04} flags=0x00000000.20000020: i LIR 
BB02 IN (4)={V07 V12     V04 V05} + ByrefExposed + GcHeap
     OUT(5)={V07 V12 V11 V04 V05} + ByrefExposed + GcHeap

Recording Var Locations at start of BB02
  V07(r15)  V12(rdx)  V04(rbp)  V05(r14)
Liveness not changing: 0000000000001803 {V04 V05 V07 V12}
							Live regs: 00000000 {} => 0000C024 {rdx rbp r14 r15}
							GC regs: 00000000 {} => 0000C024 {rdx rbp r14 r15}
							Byref regs: (unchanged) 00000000 {}

      L_M39650_BB02:

      G_M39650_IG02:        ; offs=000000H, funclet=00, bbWeight=1   
Label: IG03, GCvars=0000000000000000 {}, gcrefRegs=0000C024 {rdx rbp r14 r15}, byrefRegs=00000000 {}

Scope info: begin block BB02, IL range [???..???)
Scope info: ignoring block beginning
Generating: N109 (  1,  1) [000061] ------?-----        t61 =    LCL_VAR   ref    V12 tmp6         u:1 rdx REG rdx $140
                                                              /--*  t61    ref    
Generating: N111 (  3,  2) [000067] #c---O?-----        t67 = *  IND       long   REG NA $291
Generating: N113 (  2, 10) [000060] H-----?-----        t60 =    CNS_INT(h) long   0xd1ffab1e class REG rcx $1c5
IN001d:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t60    long   
Generating: N115 (  6, 13) [000063] DA----?-----              *  STORE_LCL_VAR long   V11 tmp5         d:1 rcx REG rcx
							V11 in reg rcx is becoming live  [000063]
							Live regs: 0000C024 {rdx rbp r14 r15} => 0000C026 {rcx rdx rbp r14 r15}
							Live vars: {V04 V05 V07 V12} => {V04 V05 V07 V11 V12}
Generating: N117 (  3,  2) [000064] ------?-----        t64 =    LCL_VAR   long   V11 tmp5         u:1 rcx REG rcx $1c5
                                                              /--*  t67    long   
                                                              +--*  t64    long   
Generating: N119 ( 13, 18) [000068] J----O?N----              *  EQ        void   REG NA $445
IN001e:        cmp      qword ptr [rdx], rcx
Generating: N121 ( 15, 20) [000176] -----O------              *  JTRUE     void   REG NA
IN001f:        je       L_M39650_BB04

Scope info: end block BB02, IL range [???..???)
Scope info: ignoring block end

=============== Generating BB03 [???..???), preds={BB02} succs={BB04} flags=0x00000000.20000020: i LIR 
BB03 IN (4)={V07     V11 V04 V05} + ByrefExposed + GcHeap
     OUT(3)={V07 V12         V05} + ByrefExposed + GcHeap

Recording Var Locations at start of BB03
  V07(r15)  V11(rcx)  V04(rbp)  V05(r14)
Change life 0000000000001A03 {V04 V05 V07 V11 V12} -> 0000000000001A01 {V04 V05 V07 V11}
							V12 in reg rdx is becoming dead  [------]
							Live regs: (unchanged) 00000000 {}
							Live regs: 00000000 {} => 0000C022 {rcx rbp r14 r15}
							GC regs: 00000000 {} => 0000C020 {rbp r14 r15}
							Byref regs: (unchanged) 00000000 {}

      L_M39650_BB03:

      G_M39650_IG03:        ; offs=000089H, funclet=00, bbWeight=0.25
Label: IG04, GCvars=0000000000000000 {}, gcrefRegs=0000C020 {rbp r14 r15}, byrefRegs=00000000 {}

Scope info: begin block BB03, IL range [???..???)
Scope info: ignoring block beginning
Generating: N125 (  3,  2) [000066] ------?-----        t66 =    LCL_VAR   long   V11 tmp5         u:1 rcx (last use) REG rcx $1c5
                                                              /--*  t66    long   
Generating: N127 (???,???) [000216] ------------       t216 = *  PUTARG_REG long   REG rcx
							V11 in reg rcx is becoming dead  [000066]
							Live regs: 0000C022 {rcx rbp r14 r15} => 0000C020 {rbp r14 r15}
							Live vars: {V04 V05 V07 V11} => {V04 V05 V07}
Generating: N129 (  3,  2) [000073] ------?-----        t73 =    LCL_VAR   ref    V04 arg4         u:1 rbp (last use) REG rbp $140
                                                              /--*  t73    ref    
Generating: N131 (???,???) [000217] ------------       t217 = *  PUTARG_REG ref    REG rdx
							V04 in reg rbp is becoming dead  [000073]
							Live regs: 0000C020 {rbp r14 r15} => 0000C000 {r14 r15}
							Live vars: {V04 V05 V07} => {V05 V07}
							GC regs: 0000C020 {rbp r14 r15} => 0000C000 {r14 r15}
IN0020:        mov      rdx, rbp
							GC regs: 0000C000 {r14 r15} => 0000C004 {rdx r14 r15}
                                                              /--*  t216   long   arg0 in rcx
                                                              +--*  t217   ref    arg1 in rdx
Generating: N133 ( 20, 11) [000074] --CXG-?-----        t74 = *  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL REG rax $296
							GC regs: 0000C004 {rdx r14 r15} => 0000C000 {r14 r15}
							Call: GCvars=0000000000000000 {}, gcrefRegs=0000C000 {r14 r15}, byrefRegs=00000000 {}
IN0021:        call     CORINFO_HELP_CHKCASTCLASS_SPECIAL
							GC regs: 0000C000 {r14 r15} => 0000C001 {rax r14 r15}
                                                              /--*  t74    ref    
Generating: N135 ( 20, 11) [000180] DA-XG-------              *  STORE_LCL_VAR ref    V12 tmp6         d:3 rdx REG rdx
							GC regs: 0000C001 {rax r14 r15} => 0000C000 {r14 r15}
IN0022:        mov      rdx, rax
							V12 in reg rdx is becoming live  [000180]
							Live regs: 0000C000 {r14 r15} => 0000C004 {rdx r14 r15}
							Live vars: {V05 V07} => {V05 V07 V12}
							GC regs: 0000C000 {r14 r15} => 0000C004 {rdx r14 r15}

Scope info: end block BB03, IL range [???..???)
Scope info: ignoring block end

=============== Generating BB04 [???..???) -> BB07 (cond), preds={BB01,BB02,BB03} succs={BB05,BB07} flags=0x00000002.20730020: i label target hascall idxlen new[] newobj LIR 
BB04 IN (3)={V07 V12     V05} + ByrefExposed + GcHeap
     OUT(3)={V07     V14 V05} + ByrefExposed + GcHeap

Recording Var Locations at start of BB04
  V07(r15)  V12(rdx)  V05(r14)
Liveness not changing: 0000000000001003 {V05 V07 V12}
							Live regs: 00000000 {} => 0000C004 {rdx r14 r15}
							GC regs: 00000000 {} => 0000C004 {rdx r14 r15}
							Byref regs: (unchanged) 00000000 {}

      L_M39650_BB04:

      G_M39650_IG04:        ; offs=00009CH, funclet=00, bbWeight=0.12
Label: IG05, GCvars=0000000000000000 {}, gcrefRegs=0000C004 {rdx r14 r15}, byrefRegs=00000000 {}

Scope info: begin block BB04, IL range [???..???)
Scope info: ignoring block beginning
Generating: N139 (  1,  1) [000153] ------------       t153 =    LCL_VAR   ref    V07 tmp1         u:1 r15 REG r15 $300
                                                              /--*  t153   ref    
Generating: N141 (  2,  2) [000161] ------------       t161 = *  LEA(b+40) byref  REG rcx
IN0023:        lea      rcx, bword ptr [r15+40]
							Byref regs: 00000000 {} => 00000002 {rcx}
Generating: N143 (  1,  1) [000082] ------------        t82 =    LCL_VAR   ref    V12 tmp6         u:2 rdx (last use) REG rdx $140
                                                              /--*  t161   byref  
                                                              +--*  t82    ref    
Generating: N145 (???,???) [000209] -A--G-------              *  STOREIND  ref    REG NA
							Byref regs: 00000002 {rcx} => 00000000 {}
							V12 in reg rdx is becoming dead  [000082]
							Live regs: 0000C004 {rdx r14 r15} => 0000C000 {r14 r15}
							Live vars: {V05 V07 V12} => {V05 V07}
							GC regs: 0000C004 {rdx r14 r15} => 0000C000 {r14 r15}
NoGC Call: savedSet=0000F0E8 {rbx rbp rsi rdi r12 r13 r14 r15}
							Call: GCvars=0000000000000000 {}, gcrefRegs=0000C000 {r14 r15}, byrefRegs=00000000 {}
IN0024:        call     CORINFO_HELP_ASSIGN_REF
Generating: N147 (  3,  2) [000105] ------?-----       t105 =    LCL_VAR   ref    V05 arg5         u:1 r14 REG r14 $141
                                                              /--*  t105   ref    
Generating: N149 (  3,  3) [000184] DA----------              *  STORE_LCL_VAR ref    V14 tmp8         d:1 rdx REG rdx
IN0025:        mov      rdx, r14
							V14 in reg rdx is becoming live  [000184]
							Live regs: 0000C000 {r14 r15} => 0000C004 {rdx r14 r15}
							Live vars: {V05 V07} => {V05 V07 V14}
							GC regs: 0000C000 {r14 r15} => 0000C004 {rdx r14 r15}
Generating: N151 (  3,  2) [000098] ------------        t98 =    LCL_VAR   ref    V14 tmp8         u:1 rdx REG rdx $141
Generating: N153 (  1,  1) [000097] -c----------        t97 =    CNS_INT   ref    null REG NA $VN.Null
                                                              /--*  t98    ref    
                                                              +--*  t97    ref    
Generating: N155 (  5,  4) [000099] J------N----              *  EQ        void   REG NA $446
IN0026:        test     rdx, rdx
Generating: N157 (  7,  6) [000181] ------------              *  JTRUE     void   REG NA
IN0027:        je       L_M39650_BB07

Scope info: end block BB04, IL range [???..???)
Scope info: ignoring block end

=============== Generating BB05 [???..???) -> BB07 (cond), preds={BB04} succs={BB06,BB07} flags=0x00000000.20000020: i LIR 
BB05 IN (3)={V07 V14     V05} + ByrefExposed + GcHeap
     OUT(4)={V07 V14 V13 V05}

Recording Var Locations at start of BB05
  V07(r15)  V14(rdx)  V05(r14)
Liveness not changing: 0000000000001005 {V05 V07 V14}
							Live regs: 00000000 {} => 0000C004 {rdx r14 r15}
							GC regs: 00000000 {} => 0000C004 {rdx r14 r15}
							Byref regs: (unchanged) 00000000 {}

      L_M39650_BB05:

      G_M39650_IG05:        ; offs=0000A7H, funclet=00, bbWeight=1   
Label: IG06, GCvars=0000000000000000 {}, gcrefRegs=0000C004 {rdx r14 r15}, byrefRegs=00000000 {}

Scope info: begin block BB05, IL range [???..???)
Scope info: ignoring block beginning
Generating: N161 (  1,  1) [000089] ------?-----        t89 =    LCL_VAR   ref    V14 tmp8         u:1 rdx REG rdx $141
                                                              /--*  t89    ref    
Generating: N163 (  3,  2) [000095] #c---O?-----        t95 = *  IND       long   REG NA $29b
Generating: N165 (  2, 10) [000088] H-----?-----        t88 =    CNS_INT(h) long   0xd1ffab1e class REG rcx $1c6
IN0028:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t88    long   
Generating: N167 (  6, 13) [000091] DA----?-----              *  STORE_LCL_VAR long   V13 tmp7         d:1 rcx REG rcx
							V13 in reg rcx is becoming live  [000091]
							Live regs: 0000C004 {rdx r14 r15} => 0000C006 {rcx rdx r14 r15}
							Live vars: {V05 V07 V14} => {V05 V07 V13 V14}
Generating: N169 (  3,  2) [000092] ------?-----        t92 =    LCL_VAR   long   V13 tmp7         u:1 rcx REG rcx $1c6
                                                              /--*  t95    long   
                                                              +--*  t92    long   
Generating: N171 ( 13, 18) [000096] J----O?N----              *  EQ        void   REG NA $448
IN0029:        cmp      qword ptr [rdx], rcx
Generating: N173 ( 15, 20) [000182] -----O------              *  JTRUE     void   REG NA
IN002a:        je       L_M39650_BB07

Scope info: end block BB05, IL range [???..???)
Scope info: ignoring block end

=============== Generating BB06 [???..???), preds={BB05} succs={BB07} flags=0x00000000.20000020: i LIR 
BB06 IN (3)={V07     V13 V05}
     OUT(2)={V07 V14        }

Recording Var Locations at start of BB06
  V07(r15)  V13(rcx)  V05(r14)
Change life 0000000000001405 {V05 V07 V13 V14} -> 0000000000001401 {V05 V07 V13}
							V14 in reg rdx is becoming dead  [------]
							Live regs: (unchanged) 00000000 {}
							Live regs: 00000000 {} => 0000C002 {rcx r14 r15}
							GC regs: 00000000 {} => 0000C000 {r14 r15}
							Byref regs: (unchanged) 00000000 {}

      L_M39650_BB06:

      G_M39650_IG06:        ; offs=0000BCH, funclet=00, bbWeight=0.25
Label: IG07, GCvars=0000000000000000 {}, gcrefRegs=0000C000 {r14 r15}, byrefRegs=00000000 {}

Scope info: begin block BB06, IL range [???..???)
Scope info: ignoring block beginning
Generating: N177 (  3,  2) [000094] ------?-----        t94 =    LCL_VAR   long   V13 tmp7         u:1 rcx (last use) REG rcx $1c6
                                                              /--*  t94    long   
Generating: N179 (???,???) [000218] ------------       t218 = *  PUTARG_REG long   REG rcx
							V13 in reg rcx is becoming dead  [000094]
							Live regs: 0000C002 {rcx r14 r15} => 0000C000 {r14 r15}
							Live vars: {V05 V07 V13} => {V05 V07}
Generating: N181 (  3,  2) [000101] ------?-----       t101 =    LCL_VAR   ref    V05 arg5         u:1 r14 (last use) REG r14 $141
                                                              /--*  t101   ref    
Generating: N183 (???,???) [000219] ------------       t219 = *  PUTARG_REG ref    REG rdx
							V05 in reg r14 is becoming dead  [000101]
							Live regs: 0000C000 {r14 r15} => 00008000 {r15}
							Live vars: {V05 V07} => {V07}
							GC regs: 0000C000 {r14 r15} => 00008000 {r15}
IN002b:        mov      rdx, r14
							GC regs: 00008000 {r15} => 00008004 {rdx r15}
                                                              /--*  t218   long   arg0 in rcx
                                                              +--*  t219   ref    arg1 in rdx
Generating: N185 ( 20, 11) [000102] --CXG-?-----       t102 = *  CALL help ref    HELPER.CORINFO_HELP_CHKCASTCLASS_SPECIAL REG rax $2a0
							GC regs: 00008004 {rdx r15} => 00008000 {r15}
							Call: GCvars=0000000000000000 {}, gcrefRegs=00008000 {r15}, byrefRegs=00000000 {}
IN002c:        call     CORINFO_HELP_CHKCASTCLASS_SPECIAL
							GC regs: 00008000 {r15} => 00008001 {rax r15}
                                                              /--*  t102   ref    
Generating: N187 ( 20, 11) [000186] DA-XG-------              *  STORE_LCL_VAR ref    V14 tmp8         d:3 rdx REG rdx
							GC regs: 00008001 {rax r15} => 00008000 {r15}
IN002d:        mov      rdx, rax
							V14 in reg rdx is becoming live  [000186]
							Live regs: 00008000 {r15} => 00008004 {rdx r15}
							Live vars: {V07} => {V07 V14}
							GC regs: 00008000 {r15} => 00008004 {rdx r15}

Scope info: end block BB06, IL range [???..???)
Scope info: ignoring block end

=============== Generating BB07 [???..037) (return), preds={BB04,BB05,BB06} succs={} flags=0x00000002.20730020: i label target hascall idxlen new[] newobj LIR 
BB07 IN (2)={V07 V14}
     OUT(0)={       }

Recording Var Locations at start of BB07
  V07(r15)  V14(rdx)
Liveness not changing: 0000000000000005 {V07 V14}
							Live regs: 00000000 {} => 00008004 {rdx r15}
							GC regs: 00000000 {} => 00008004 {rdx r15}
							Byref regs: (unchanged) 00000000 {}

      L_M39650_BB07:

      G_M39650_IG07:        ; offs=0000CFH, funclet=00, bbWeight=0.12
Label: IG08, GCvars=0000000000000000 {}, gcrefRegs=00008004 {rdx r15}, byrefRegs=00000000 {}

Scope info: begin block BB07, IL range [???..037)
Scope info: ignoring block beginning
Generating: N191 (  1,  1) [000165] ------------       t165 =    LCL_VAR   ref    V07 tmp1         u:1 r15 REG r15 $300
                                                              /--*  t165   ref    
Generating: N193 (  2,  2) [000173] ------------       t173 = *  LEA(b+48) byref  REG rcx
IN002e:        lea      rcx, bword ptr [r15+48]
							Byref regs: 00000000 {} => 00000002 {rcx}
Generating: N195 (  1,  1) [000110] ------------       t110 =    LCL_VAR   ref    V14 tmp8         u:2 rdx (last use) REG rdx $141
                                                              /--*  t173   byref  
                                                              +--*  t110   ref    
Generating: N197 (???,???) [000210] -A--G-------              *  STOREIND  ref    REG NA
							Byref regs: 00000002 {rcx} => 00000000 {}
							V14 in reg rdx is becoming dead  [000110]
							Live regs: 00008004 {rdx r15} => 00008000 {r15}
							Live vars: {V07 V14} => {V07}
							GC regs: 00008004 {rdx r15} => 00008000 {r15}
NoGC Call: savedSet=0000F0E8 {rbx rbp rsi rdi r12 r13 r14 r15}
							Call: GCvars=0000000000000000 {}, gcrefRegs=00008000 {r15}, byrefRegs=00000000 {}
IN002f:        call     CORINFO_HELP_ASSIGN_REF
Generating: N199 (  1,  1) [000005] ------------         t5 =    LCL_VAR   ref    V07 tmp1         u:1 r15 (last use) REG r15 $300
                                                              /--*  t5     ref    
Generating: N201 (  2,  2) [000113] ------------              *  RETURN    ref    REG NA $2d1
							V07 in reg r15 is becoming dead  [000005]
							Live regs: 00008000 {r15} => 00000000 {}
							Live vars: {V07} => {}
							GC regs: 00008000 {r15} => 00000000 {}
IN0030:        mov      rax, r15

Scope info: end block BB07, IL range [???..037)
Scope info: ending scope, LVnum=0 [000..037)
siEndScope: Failed to end scope for V00
Scope info: ending scope, LVnum=1 [000..037)
Scope info: ending scope, LVnum=2 [000..037)
Scope info: ending scope, LVnum=3 [000..037)
Scope info: ending scope, LVnum=4 [000..037)
Scope info: ending scope, LVnum=5 [000..037)
Scope info: open scopes =
   <none>
Added IP mapping: EPILOG STACK_EMPTY (G_M39650_IG08,ins#3,ofs#12) label
							GC regs: 00000000 {} => 00000001 {rax}
Extending return value GC liveness to epilog
Reserving epilog IG for block BB07

      G_M39650_IG08:        ; offs=0000DAH, funclet=00, bbWeight=1   
*************** After placeholder IG creation
G_M39650_IG01:        ; func=00, offs=000000H, size=0000H, gcrefRegs=00000000 {} <-- Prolog IG
G_M39650_IG02:        ; offs=000000H, size=0089H, gcrefRegs=00004020 {rbp r14}, byrefRegs=00000000 {}, byref
G_M39650_IG03:        ; offs=000089H, size=0013H, gcrefRegs=0000C024 {rdx rbp r14 r15}, byrefRegs=00000000 {}, byref
G_M39650_IG04:        ; offs=00009CH, size=000BH, gcrefRegs=0000C020 {rbp r14 r15}, byrefRegs=00000000 {}, byref
G_M39650_IG05:        ; offs=0000A7H, size=0015H, gcrefRegs=0000C004 {rdx r14 r15}, byrefRegs=00000000 {}, byref
G_M39650_IG06:        ; offs=0000BCH, size=0013H, gcrefRegs=0000C004 {rdx r14 r15}, byrefRegs=00000000 {}, byref
G_M39650_IG07:        ; offs=0000CFH, size=000BH, gcrefRegs=0000C000 {r14 r15}, byrefRegs=00000000 {}, byref
G_M39650_IG08:        ; offs=0000DAH, size=000CH, gcrefRegs=00008004 {rdx r15}, byrefRegs=00000000 {}, byref
G_M39650_IG09:        ; epilog placeholder, next placeholder=<END>, BB07 [0006], epilog, extend <-- First placeholder <-- Last placeholder
                      ;   PrevGCVars=0000000000000000 {}, PrevGCrefRegs=00008000 {r15}, PrevByrefRegs=00000000 {}
                      ;   InitGCVars=0000000000000000 {}, InitGCrefRegs=00008004 {rdx r15}, InitByrefRegs=00000000 {}
Liveness not changing: 0000000000000000 {}

# compCycleEstimate =    229, compSizeEstimate =   217 ThrowawayTesting.Program:Casts(int,short,ubyte,System.Object,System.IO.Stream):System.Object[]:this
; Final local variable assignments
;
;* V00 this         [V00    ] (  0,  0   )     ref  ->  zero-ref    this class-hnd
;  V01 arg1         [V01,T06] (  3,  3   )     int  ->  rsi        
;  V02 arg2         [V02,T07] (  3,  3   )   short  ->  rdi        
;  V03 arg3         [V03,T08] (  3,  3   )   ubyte  ->  rbx        
;  V04 arg4         [V04,T11] (  2,  1.12)     ref  ->  rbp         class-hnd
;  V05 arg5         [V05,T12] (  2,  1.12)     ref  ->  r14         class-hnd
;  V06 OutArgs      [V06    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V07 tmp1         [V07,T00] (  7, 14   )     ref  ->  r15         class-hnd exact "dup spill"
;  V08 tmp2         [V08,T03] (  3,  6   )     ref  ->  rax         class-hnd exact "Single-def Box Helper"
;  V09 tmp3         [V09,T04] (  3,  6   )     ref  ->  rax         class-hnd exact "Single-def Box Helper"
;  V10 tmp4         [V10,T05] (  3,  6   )     ref  ->  rax         class-hnd exact "Single-def Box Helper"
;  V11 tmp5         [V11,T09] (  3,  1.25)    long  ->  rcx         "fgInsertCommaFormTemp is creating a new local variable"
;  V12 tmp6         [V12,T01] (  5,  6.75)     ref  ->  rdx         class-hnd "spilling QMark2"
;  V13 tmp7         [V13,T10] (  3,  1.25)    long  ->  rcx         "fgInsertCommaFormTemp is creating a new local variable"
;  V14 tmp8         [V14,T02] (  5,  6.75)     ref  ->  rdx         class-hnd "spilling QMark2"
;
; Lcl frame size = 40
*************** Before prolog / epilog generation
G_M39650_IG01:        ; func=00, offs=000000H, size=0000H, gcrefRegs=00000000 {} <-- Prolog IG
G_M39650_IG02:        ; offs=000000H, size=0089H, gcrefRegs=00004020 {rbp r14}, byrefRegs=00000000 {}, byref
G_M39650_IG03:        ; offs=000089H, size=0013H, gcrefRegs=0000C024 {rdx rbp r14 r15}, byrefRegs=00000000 {}, byref
G_M39650_IG04:        ; offs=00009CH, size=000BH, gcrefRegs=0000C020 {rbp r14 r15}, byrefRegs=00000000 {}, byref
G_M39650_IG05:        ; offs=0000A7H, size=0015H, gcrefRegs=0000C004 {rdx r14 r15}, byrefRegs=00000000 {}, byref
G_M39650_IG06:        ; offs=0000BCH, size=0013H, gcrefRegs=0000C004 {rdx r14 r15}, byrefRegs=00000000 {}, byref
G_M39650_IG07:        ; offs=0000CFH, size=000BH, gcrefRegs=0000C000 {r14 r15}, byrefRegs=00000000 {}, byref
G_M39650_IG08:        ; offs=0000DAH, size=000CH, gcrefRegs=00008004 {rdx r15}, byrefRegs=00000000 {}, byref
G_M39650_IG09:        ; epilog placeholder, next placeholder=<END>, BB07 [0006], epilog, extend <-- First placeholder <-- Last placeholder
                      ;   PrevGCVars=0000000000000000 {}, PrevGCrefRegs=00008000 {r15}, PrevByrefRegs=00000000 {}
                      ;   InitGCVars=0000000000000000 {}, InitGCrefRegs=00008004 {rdx r15}, InitByrefRegs=00000000 {}
Recording Var Locations at start of BB01
  V01(rsi)  V02(rdi)  V03(rbx)  V04(rbp)  V05(r14)
*************** In genFnProlog()
Added IP mapping to front: PROLOG STACK_EMPTY (G_M39650_IG01,ins#0,ofs#0) label

__prolog:
IN0031:        push     r15
IN0032:        push     r14
IN0033:        push     rdi
IN0034:        push     rsi
IN0035:        push     rbp
IN0036:        push     rbx
IN0037:        sub      rsp, 40
*************** In genFnPrologCalleeRegArgs() for int regs
IN0038:        mov      esi, edx
IN0039:        mov      edi, r8d
IN003a:        mov      ebx, r9d
*************** In genEnregisterIncomingStackArgs()
IN003b:        mov      rbp, gword ptr [V04 rsp+80H]
IN003c:        mov      r14, gword ptr [V05 rsp+88H]


      G_M39650_IG01:        ; offs=000000H, funclet=00, bbWeight=1   
*************** In genFnEpilog()

__epilog:
gcVarPtrSetCur=0000000000000000 {}, gcRegGCrefSetCur=00008004 {rdx r15}, gcRegByrefSetCur=00000000 {}
IN003d:        add      rsp, 40
IN003e:        pop      rbx
IN003f:        pop      rbp
IN0040:        pop      rsi
IN0041:        pop      rdi
IN0042:        pop      r14
IN0043:        pop      r15
IN0044:        ret      

      G_M39650_IG09:        ; offs=0000E6H, funclet=00, bbWeight=1   
0 prologs, 1 epilogs, 0 funclet prologs, 0 funclet epilogs
*************** After prolog / epilog generation
G_M39650_IG01:        ; func=00, offs=000000H, size=0024H, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref, nogc <-- Prolog IG
G_M39650_IG02:        ; offs=000024H, size=0089H, gcrefRegs=00004020 {rbp r14}, byrefRegs=00000000 {}, byref
G_M39650_IG03:        ; offs=0000ADH, size=0013H, gcrefRegs=0000C024 {rdx rbp r14 r15}, byrefRegs=00000000 {}, byref
G_M39650_IG04:        ; offs=0000C0H, size=000BH, gcrefRegs=0000C020 {rbp r14 r15}, byrefRegs=00000000 {}, byref
G_M39650_IG05:        ; offs=0000CBH, size=0015H, gcrefRegs=0000C004 {rdx r14 r15}, byrefRegs=00000000 {}, byref
G_M39650_IG06:        ; offs=0000E0H, size=0013H, gcrefRegs=0000C004 {rdx r14 r15}, byrefRegs=00000000 {}, byref
G_M39650_IG07:        ; offs=0000F3H, size=000BH, gcrefRegs=0000C000 {r14 r15}, byrefRegs=00000000 {}, byref
G_M39650_IG08:        ; offs=0000FEH, size=000CH, gcrefRegs=00008004 {rdx r15}, byrefRegs=00000000 {}, byref
G_M39650_IG09:        ; offs=00010AH, size=000DH, epilog, nogc, extend
*************** In emitJumpDistBind()
Binding: IN001c: 000000 je       L_M39650_BB04
Binding L_M39650_BB04 to G_M39650_IG05
Estimate of fwd jump [D1FFAB1E/028]: 00A7 -> 00CB = 0022
Shrinking jump [D1FFAB1E/028]
Adjusted offset of BB03 from 00AD to 00A9
Binding: IN001f: 000000 je       L_M39650_BB04
Binding L_M39650_BB04 to G_M39650_IG05
Estimate of fwd jump [D1FFAB1E/031]: 00B6 -> 00C7 = 000F
Shrinking jump [D1FFAB1E/031]
Adjusted offset of BB04 from 00C0 to 00B8
Adjusted offset of BB05 from 00CB to 00C3
Binding: IN0027: 000000 je       L_M39650_BB07
Binding L_M39650_BB07 to G_M39650_IG08
Estimate of fwd jump [D1FFAB1E/039]: 00D2 -> 00F6 = 0022
Shrinking jump [D1FFAB1E/039]
Adjusted offset of BB06 from 00E0 to 00D4
Binding: IN002a: 000000 je       L_M39650_BB07
Binding L_M39650_BB07 to G_M39650_IG08
Estimate of fwd jump [D1FFAB1E/042]: 00E1 -> 00F2 = 000F
Shrinking jump [D1FFAB1E/042]
Adjusted offset of BB07 from 00F3 to 00E3
Adjusted offset of BB08 from 00FE to 00EE
Adjusted offset of BB09 from 010A to 00FA
Total shrinkage =  16, min extra jump size = 4294967295

*************** Finishing PHASE Generate code

*************** Starting PHASE Emit code

Hot  code size = 0x107 bytes
Cold code size = 0x0 bytes
reserveUnwindInfo(isFunclet=FALSE, isColdCode=FALSE, unwindSize=0x12)
*************** In emitEndCodeGen()
Converting emitMaxStackDepth from bytes (0) to elements (0)

***************************************************************************
Instructions as they come out of the scheduler


G_M39650_IG01:        ; func=00, offs=000000H, size=0024H, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref, nogc <-- Prolog IG
IN0031: 000000 push     r15
IN0032: 000002 push     r14
IN0033: 000004 push     rdi
IN0034: 000005 push     rsi
IN0035: 000006 push     rbp
IN0036: 000007 push     rbx
IN0037: 000008 sub      rsp, 40
IN0038: 00000C mov      esi, edx
IN0039: 00000E mov      edi, r8d
IN003a: 000011 mov      ebx, r9d
IN003b: 000014 mov      rbp, gword ptr [rsp+80H]
       ; gcrRegs +[rbp]
IN003c: 00001C mov      r14, gword ptr [rsp+88H]
       ; gcrRegs +[r14]
						;; bbWeight=1    PerfScore 9.00
G_M39650_IG02:        ; func=00, offs=000024H, size=0085H, gcrefRegs=00004020 {rbp r14}, byrefRegs=00000000 {}, byref, isz
IN0001: 000024 mov      rcx, 0xD1FFAB1E
IN0002: 00002E mov      edx, 5
IN0003: 000033 call     CORINFO_HELP_NEWARR_1_OBJ
       ; gcrRegs +[rax]
       ; gcr arg pop 0
IN0004: 000038 mov      r15, rax
       ; gcrRegs +[r15]
IN0005: 00003B mov      rcx, 0xD1FFAB1E
IN0006: 000045 call     CORINFO_HELP_NEWSFAST
       ; gcr arg pop 0
IN0007: 00004A movsxd   rdx, esi
IN0008: 00004D mov      qword ptr [rax+8], rdx
IN0009: 000051 lea      rcx, bword ptr [r15+16]
       ; byrRegs +[rcx]
IN000a: 000055 mov      rdx, rax
       ; gcrRegs +[rdx]
IN000b: 000058 call     CORINFO_HELP_ASSIGN_REF
       ; gcrRegs -[rax rdx]
       ; byrRegs -[rcx]
IN000c: 00005D mov      rcx, 0xD1FFAB1E
IN000d: 000067 call     CORINFO_HELP_NEWSFAST
       ; gcrRegs +[rax]
       ; gcr arg pop 0
IN000e: 00006C movsx    rdx, di
IN000f: 000070 mov      dword ptr [rax+8], edx
IN0010: 000073 lea      rcx, bword ptr [r15+24]
       ; byrRegs +[rcx]
IN0011: 000077 mov      rdx, rax
       ; gcrRegs +[rdx]
IN0012: 00007A call     CORINFO_HELP_ASSIGN_REF
       ; gcrRegs -[rax rdx]
       ; byrRegs -[rcx]
IN0013: 00007F mov      rcx, 0xD1FFAB1E
IN0014: 000089 call     CORINFO_HELP_NEWSFAST
       ; gcrRegs +[rax]
       ; gcr arg pop 0
IN0015: 00008E movzx    rdx, bl
IN0016: 000091 mov      word  ptr [rax+8], dx
IN0017: 000095 lea      rcx, bword ptr [r15+32]
       ; byrRegs +[rcx]
IN0018: 000099 mov      rdx, rax
       ; gcrRegs +[rdx]
IN0019: 00009C call     CORINFO_HELP_ASSIGN_REF
       ; gcrRegs -[rax rdx]
       ; byrRegs -[rcx]
IN001a: 0000A1 mov      rdx, rbp
       ; gcrRegs +[rdx]
IN001b: 0000A4 test     rdx, rdx
IN001c: 0000A7 je       SHORT G_M39650_IG05
						;; bbWeight=1    PerfScore 16.00
G_M39650_IG03:        ; func=00, offs=0000A9H, size=000FH, gcrefRegs=0000C024 {rdx rbp r14 r15}, byrefRegs=00000000 {}, byref, isz
IN001d: 0000A9 mov      rcx, 0xD1FFAB1E
IN001e: 0000B3 cmp      qword ptr [rdx], rcx
IN001f: 0000B6 je       SHORT G_M39650_IG05
						;; bbWeight=0.25 PerfScore 0.81
G_M39650_IG04:        ; func=00, offs=0000B8H, size=000BH, gcrefRegs=0000C020 {rbp r14 r15}, byrefRegs=00000000 {}, byref
       ; gcrRegs -[rdx]
IN0020: 0000B8 mov      rdx, rbp
       ; gcrRegs +[rdx]
IN0021: 0000BB call     CORINFO_HELP_CHKCASTCLASS_SPECIAL
       ; gcrRegs -[rdx rbp] +[rax]
       ; gcr arg pop 0
IN0022: 0000C0 mov      rdx, rax
       ; gcrRegs +[rdx]
						;; bbWeight=0.12 PerfScore 0.19
G_M39650_IG05:        ; func=00, offs=0000C3H, size=0011H, gcrefRegs=0000C004 {rdx r14 r15}, byrefRegs=00000000 {}, byref, isz
       ; gcrRegs -[rax]
IN0023: 0000C3 lea      rcx, bword ptr [r15+40]
       ; byrRegs +[rcx]
IN0024: 0000C7 call     CORINFO_HELP_ASSIGN_REF
       ; gcrRegs -[rdx]
       ; byrRegs -[rcx]
IN0025: 0000CC mov      rdx, r14
       ; gcrRegs +[rdx]
IN0026: 0000CF test     rdx, rdx
IN0027: 0000D2 je       SHORT G_M39650_IG08
						;; bbWeight=1    PerfScore 3.00
G_M39650_IG06:        ; func=00, offs=0000D4H, size=000FH, gcrefRegs=0000C004 {rdx r14 r15}, byrefRegs=00000000 {}, byref, isz
IN0028: 0000D4 mov      rcx, 0xD1FFAB1E
IN0029: 0000DE cmp      qword ptr [rdx], rcx
IN002a: 0000E1 je       SHORT G_M39650_IG08
						;; bbWeight=0.25 PerfScore 0.81
G_M39650_IG07:        ; func=00, offs=0000E3H, size=000BH, gcrefRegs=0000C000 {r14 r15}, byrefRegs=00000000 {}, byref
       ; gcrRegs -[rdx]
IN002b: 0000E3 mov      rdx, r14
       ; gcrRegs +[rdx]
IN002c: 0000E6 call     CORINFO_HELP_CHKCASTCLASS_SPECIAL
       ; gcrRegs -[rdx r14] +[rax]
       ; gcr arg pop 0
IN002d: 0000EB mov      rdx, rax
       ; gcrRegs +[rdx]
						;; bbWeight=0.12 PerfScore 0.19
G_M39650_IG08:        ; func=00, offs=0000EEH, size=000CH, gcrefRegs=00008004 {rdx r15}, byrefRegs=00000000 {}, byref
       ; gcrRegs -[rax]
IN002e: 0000EE lea      rcx, bword ptr [r15+48]
       ; byrRegs +[rcx]
IN002f: 0000F2 call     CORINFO_HELP_ASSIGN_REF
       ; gcrRegs -[rdx]
       ; byrRegs -[rcx]
IN0030: 0000F7 mov      rax, r15
       ; gcrRegs +[rax]
						;; bbWeight=1    PerfScore 1.75
G_M39650_IG09:        ; func=00, offs=0000FAH, size=000DH, epilog, nogc, extend
IN003d: 0000FA add      rsp, 40
IN003e: 0000FE pop      rbx
IN003f: 0000FF pop      rbp
IN0040: 000100 pop      rsi
IN0041: 000101 pop      rdi
IN0042: 000102 pop      r14
IN0043: 000104 pop      r15
IN0044: 000106 ret      
						;; bbWeight=1    PerfScore 4.25Allocated method code size =  263 , actual size =  263

; Total bytes of code 263, prolog size 12, PerfScore 62.30, instruction count 68 (MethodHash=41a7651d) for method ThrowawayTesting.Program:Casts(int,short,ubyte,System.Object,System.IO.Stream):System.Object[]:this
; ============================================================

*************** After end code gen, before unwindEmit()
G_M39650_IG01:        ; func=00, offs=000000H, size=0024H, bbWeight=1    PerfScore 9.00, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref, nogc <-- Prolog IG

IN0031: 000000 push     r15
IN0032: 000002 push     r14
IN0033: 000004 push     rdi
IN0034: 000005 push     rsi
IN0035: 000006 push     rbp
IN0036: 000007 push     rbx
IN0037: 000008 sub      rsp, 40
IN0038: 00000C mov      esi, edx
IN0039: 00000E mov      edi, r8d
IN003a: 000011 mov      ebx, r9d
IN003b: 000014 mov      rbp, gword ptr [V04 rsp+80H]
IN003c: 00001C mov      r14, gword ptr [V05 rsp+88H]

G_M39650_IG02:        ; offs=000024H, size=0085H, bbWeight=1    PerfScore 16.00, gcrefRegs=00004020 {rbp r14}, byrefRegs=00000000 {}, byref, isz

IN0001: 000024 mov      rcx, 0xD1FFAB1E
IN0002: 00002E mov      edx, 5
IN0003: 000033 call     CORINFO_HELP_NEWARR_1_OBJ
IN0004: 000038 mov      r15, rax
IN0005: 00003B mov      rcx, 0xD1FFAB1E
IN0006: 000045 call     CORINFO_HELP_NEWSFAST
IN0007: 00004A movsxd   rdx, esi
IN0008: 00004D mov      qword ptr [rax+8], rdx
IN0009: 000051 lea      rcx, bword ptr [r15+16]
IN000a: 000055 mov      rdx, rax
IN000b: 000058 call     CORINFO_HELP_ASSIGN_REF
IN000c: 00005D mov      rcx, 0xD1FFAB1E
IN000d: 000067 call     CORINFO_HELP_NEWSFAST
IN000e: 00006C movsx    rdx, di
IN000f: 000070 mov      dword ptr [rax+8], edx
IN0010: 000073 lea      rcx, bword ptr [r15+24]
IN0011: 000077 mov      rdx, rax
IN0012: 00007A call     CORINFO_HELP_ASSIGN_REF
IN0013: 00007F mov      rcx, 0xD1FFAB1E
IN0014: 000089 call     CORINFO_HELP_NEWSFAST
IN0015: 00008E movzx    rdx, bl
IN0016: 000091 mov      word  ptr [rax+8], dx
IN0017: 000095 lea      rcx, bword ptr [r15+32]
IN0018: 000099 mov      rdx, rax
IN0019: 00009C call     CORINFO_HELP_ASSIGN_REF
IN001a: 0000A1 mov      rdx, rbp
IN001b: 0000A4 test     rdx, rdx
IN001c: 0000A7 je       SHORT G_M39650_IG05

G_M39650_IG03:        ; offs=0000A9H, size=000FH, bbWeight=0.25 PerfScore 0.81, gcrefRegs=0000C024 {rdx rbp r14 r15}, byrefRegs=00000000 {}, byref, isz

IN001d: 0000A9 mov      rcx, 0xD1FFAB1E
IN001e: 0000B3 cmp      qword ptr [rdx], rcx
IN001f: 0000B6 je       SHORT G_M39650_IG05

G_M39650_IG04:        ; offs=0000B8H, size=000BH, bbWeight=0.12 PerfScore 0.19, gcrefRegs=0000C020 {rbp r14 r15}, byrefRegs=00000000 {}, byref

IN0020: 0000B8 mov      rdx, rbp
IN0021: 0000BB call     CORINFO_HELP_CHKCASTCLASS_SPECIAL
IN0022: 0000C0 mov      rdx, rax

G_M39650_IG05:        ; offs=0000C3H, size=0011H, bbWeight=1    PerfScore 3.00, gcrefRegs=0000C004 {rdx r14 r15}, byrefRegs=00000000 {}, byref, isz

IN0023: 0000C3 lea      rcx, bword ptr [r15+40]
IN0024: 0000C7 call     CORINFO_HELP_ASSIGN_REF
IN0025: 0000CC mov      rdx, r14
IN0026: 0000CF test     rdx, rdx
IN0027: 0000D2 je       SHORT G_M39650_IG08

G_M39650_IG06:        ; offs=0000D4H, size=000FH, bbWeight=0.25 PerfScore 0.81, gcrefRegs=0000C004 {rdx r14 r15}, byrefRegs=00000000 {}, byref, isz

IN0028: 0000D4 mov      rcx, 0xD1FFAB1E
IN0029: 0000DE cmp      qword ptr [rdx], rcx
IN002a: 0000E1 je       SHORT G_M39650_IG08

G_M39650_IG07:        ; offs=0000E3H, size=000BH, bbWeight=0.12 PerfScore 0.19, gcrefRegs=0000C000 {r14 r15}, byrefRegs=00000000 {}, byref

IN002b: 0000E3 mov      rdx, r14
IN002c: 0000E6 call     CORINFO_HELP_CHKCASTCLASS_SPECIAL
IN002d: 0000EB mov      rdx, rax

G_M39650_IG08:        ; offs=0000EEH, size=000CH, bbWeight=1    PerfScore 1.75, gcrefRegs=00008004 {rdx r15}, byrefRegs=00000000 {}, byref

IN002e: 0000EE lea      rcx, bword ptr [r15+48]
IN002f: 0000F2 call     CORINFO_HELP_ASSIGN_REF
IN0030: 0000F7 mov      rax, r15

G_M39650_IG09:        ; offs=0000FAH, size=000DH, bbWeight=1    PerfScore 4.25, epilog, nogc, extend

IN003d: 0000FA add      rsp, 40
IN003e: 0000FE pop      rbx
IN003f: 0000FF pop      rbp
IN0040: 000100 pop      rsi
IN0041: 000101 pop      rdi
IN0042: 000102 pop      r14
IN0043: 000104 pop      r15
IN0044: 000106 ret      


*************** Finishing PHASE Emit code

*************** Starting PHASE Emit GC+EH tables
Unwind Info:
  >> Start offset   : 0x000000 (not in unwind data)
  >>   End offset   : 0xd1ffab1e (not in unwind data)
  Version           : 1
  Flags             : 0x00
  SizeOfProlog      : 0x0C
  CountOfUnwindCodes: 7
  FrameRegister     : none (0)
  FrameOffset       : N/A (no FrameRegister) (Value=0)
  UnwindCodes       :
    CodeOffset: 0x0C UnwindOp: UWOP_ALLOC_SMALL (2)     OpInfo: 4 * 8 + 8 = 40 = 0x28
    CodeOffset: 0x08 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: rbx (3)
    CodeOffset: 0x07 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: rbp (5)
    CodeOffset: 0x06 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: rsi (6)
    CodeOffset: 0x05 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: rdi (7)
    CodeOffset: 0x04 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: r14 (14)
    CodeOffset: 0x02 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: r15 (15)
allocUnwindInfo(pHotCode=0x00000000D1FFAB1E, pColdCode=0x0000000000000000, startOffset=0x0, endOffset=0x107, unwindSize=0x12, pUnwindBlock=0x00000000D1FFAB1E, funKind=0 (main function))
*************** In genIPmappingGen()
IP mapping count : 3
IL offs PROLOG : 0x00000000 ( STACK_EMPTY )
IL offs 0x0000 : 0x00000024 ( STACK_EMPTY )
IL offs EPILOG : 0x000000FA ( STACK_EMPTY )

*************** In genSetScopeInfo()
VarLocInfo count is 11
; Variable debug info: 11 live range(s), 6 var(s) for method ThrowawayTesting.Program:Casts(int,short,ubyte,System.Object,System.IO.Stream):System.Object[]:this
  0(   UNKNOWN) : From 00000000h to 00000024h, in rcx
  1(   UNKNOWN) : From 00000000h to 00000024h, in rdx
  2(   UNKNOWN) : From 00000000h to 00000024h, in r8
  3(   UNKNOWN) : From 00000000h to 00000024h, in r9
  4(   UNKNOWN) : From 00000000h to 00000024h, in rsp[40] (1 slot)
  5(   UNKNOWN) : From 00000000h to 00000024h, in rsp[48] (1 slot)
  1(   UNKNOWN) : From 00000024h to 0000004Ah, in rsi
  2(   UNKNOWN) : From 00000024h to 0000006Ch, in rdi
  3(   UNKNOWN) : From 00000024h to 0000008Eh, in rbx
  4(   UNKNOWN) : From 00000024h to 000000B8h, in rbp
  5(   UNKNOWN) : From 00000024h to 000000E3h, in r14
*************** In gcInfoBlockHdrSave()
Set code length to 263.
Set ReturnKind to Object.
Set Outgoing stack arg area size to 32.
Register slot id for reg rbp = 0.
Register slot id for reg r14 = 1.
Register slot id for reg r15 = 2.
Set state of slot 0 at instr offset 0x33 to Live.
Set state of slot 1 at instr offset 0x33 to Live.
Set state of slot 0 at instr offset 0x38 to Dead.
Set state of slot 1 at instr offset 0x38 to Dead.
Set state of slot 0 at instr offset 0x45 to Live.
Set state of slot 1 at instr offset 0x45 to Live.
Set state of slot 2 at instr offset 0x45 to Live.
Set state of slot 0 at instr offset 0x4a to Dead.
Set state of slot 1 at instr offset 0x4a to Dead.
Set state of slot 2 at instr offset 0x4a to Dead.
Set state of slot 0 at instr offset 0x67 to Live.
Set state of slot 1 at instr offset 0x67 to Live.
Set state of slot 2 at instr offset 0x67 to Live.
Set state of slot 0 at instr offset 0x6c to Dead.
Set state of slot 1 at instr offset 0x6c to Dead.
Set state of slot 2 at instr offset 0x6c to Dead.
Set state of slot 0 at instr offset 0x89 to Live.
Set state of slot 1 at instr offset 0x89 to Live.
Set state of slot 2 at instr offset 0x89 to Live.
Set state of slot 0 at instr offset 0x8e to Dead.
Set state of slot 1 at instr offset 0x8e to Dead.
Set state of slot 2 at instr offset 0x8e to Dead.
Set state of slot 1 at instr offset 0xbb to Live.
Set state of slot 2 at instr offset 0xbb to Live.
Set state of slot 1 at instr offset 0xc0 to Dead.
Set state of slot 2 at instr offset 0xc0 to Dead.
Set state of slot 2 at instr offset 0xe6 to Live.
Set state of slot 2 at instr offset 0xeb to Dead.
Defining 6 call sites:
    Offset 0x33, size 5.
    Offset 0x45, size 5.
    Offset 0x67, size 5.
    Offset 0x89, size 5.
    Offset 0xbb, size 5.
    Offset 0xe6, size 5.

*************** Finishing PHASE Emit GC+EH tables
Method code size: 263

Allocations for ThrowawayTesting.Program:Casts(int,short,ubyte,System.Object,System.IO.Stream):System.Object[]:this (MethodHash=41a7651d)
count:       2185, size:     159080, max =       3072
allocateMemory:     196608, nraUsed:     162848

Alloc'd bytes by kind:
                  kind |       size |     pct
  ---------------------+------------+--------
         AssertionProp |       6460 |   4.06%
               ASTNode |      28632 |  18.00%
              InstDesc |       6960 |   4.38%
              ImpStack |        384 |   0.24%
            BasicBlock |       3568 |   2.24%
             fgArgInfo |        576 |   0.36%
       fgArgInfoPtrArr |         72 |   0.05%
              FlowList |        600 |   0.38%
     TreeStatementList |          0 |   0.00%
               SiScope |        856 |   0.54%
       DominatorMemory |        384 |   0.24%
                  LSRA |       3984 |   2.50%
         LSRA_Interval |       3440 |   2.16%
      LSRA_RefPosition |      16768 |  10.54%
          Reachability |         16 |   0.01%
                   SSA |       1800 |   1.13%
           ValueNumber |      19536 |  12.28%
              LvaTable |       1980 |   1.24%
            UnwindInfo |          0 |   0.00%
                hashBv |         40 |   0.03%
                bitset |        504 |   0.32%
          FixedBitVect |         12 |   0.01%
               Generic |       1926 |   1.21%
   LocalAddressVisitor |        512 |   0.32%
         FieldSeqStore |        272 |   0.17%
    ZeroOffsetFieldMap |         40 |   0.03%
          ArrayInfoMap |        352 |   0.22%
          MemoryPhiArg |          0 |   0.00%
                   CSE |       1808 |   1.14%
                    GC |       4370 |   2.75%
       CorTailCallInfo |          0 |   0.00%
              Inlining |        592 |   0.37%
            ArrayStack |          0 |   0.00%
             DebugInfo |        336 |   0.21%
             DebugOnly |      48342 |  30.39%
               Codegen |       1176 |   0.74%
               LoopOpt |          0 |   0.00%
             LoopHoist |          0 |   0.00%
               Unknown |        518 |   0.33%
            RangeCheck |          0 |   0.00%
              CopyProp |       1712 |   1.08%
           SideEffects |          0 |   0.00%
       ObjectAllocator |          0 |   0.00%
    VariableLiveRanges |          0 |   0.00%
           ClassLayout |          0 |   0.00%
       TailMergeThrows |          0 |   0.00%
             EarlyProp |          0 |   0.00%
              ZeroInit |        552 |   0.35%

****** DONE compiling ThrowawayTesting.Program:Casts(int,short,ubyte,System.Object,System.IO.Stream):System.Object[]:this