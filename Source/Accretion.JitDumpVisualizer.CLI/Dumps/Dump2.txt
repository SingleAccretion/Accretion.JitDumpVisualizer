****** START compiling HotkeyedMusicPlayer.ArgsTransport:ConsumeArgs():System.Threading.Tasks.Task`1[[System.String[], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] (MethodHash=6b10546c)
Generating code for Windows x64
OPTIONS: compCodeOpt = BLENDED_CODE
OPTIONS: compDbgCode = false
OPTIONS: compDbgInfo = true
OPTIONS: compDbgEnC  = false
OPTIONS: compProcedureSplitting   = false
OPTIONS: compProcedureSplittingEH = false
IL to import:
IL_0000  12 00             ldloca.s     0x0
IL_0002  28 15 00 00 0a    call         0xA000015
IL_0007  7d 1b 00 00 04    stfld        0x400001B
IL_000c  12 00             ldloca.s     0x0
IL_000e  15                ldc.i4.m1   
IL_000f  7d 1a 00 00 04    stfld        0x400001A
IL_0014  12 00             ldloca.s     0x0
IL_0016  7c 1b 00 00 04    ldflda       0x400001B
IL_001b  12 00             ldloca.s     0x0
IL_001d  28 01 00 00 2b    call         0x2B000001
IL_0022  12 00             ldloca.s     0x0
IL_0024  7c 1b 00 00 04    ldflda       0x400001B
IL_0029  28 17 00 00 0a    call         0xA000017
IL_002e  2a                ret         

lvaGrabTemp returning 1 (V01 tmp0) (a long lifetime temp) called for OutgoingArgSpace.
; Initial local variable assignments
;
;  V00 loc0           struct <<ConsumeArgs>d__6, 24>
;  V01 OutArgs        lclBlk <na>  "OutgoingArgSpace"
*************** In compInitDebuggingInfo() for HotkeyedMusicPlayer.ArgsTransport:ConsumeArgs():System.Threading.Tasks.Task`1[[System.String[], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]
getVars() returned cVars = 0, extendOthers = true
info.compVarScopesCount = 1
    	VarNum 	LVNum 	      Name 	Beg 	End
 0: 	00h 	00h 	  V00 loc0 	000h   	02Fh
info.compStmtOffsetsCount    = 0
info.compStmtOffsetsImplicit = 0005h ( STACK_EMPTY CALL_SITE )
*************** In fgFindBasicBlocks() for HotkeyedMusicPlayer.ArgsTransport:ConsumeArgs():System.Threading.Tasks.Task`1[[System.String[], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]
Jump targets:
  none
New Basic Block BB01 [0000] created.
BB01 [000..02F)
IL Code Size,Instr   47,  14, Basic Block count   1, Local Variable Num,Ref count   2,  5 for method HotkeyedMusicPlayer.ArgsTransport:ConsumeArgs():System.Threading.Tasks.Task`1[[System.String[], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]
OPTIONS: opts.MinOpts() == false
Basic block list for 'HotkeyedMusicPlayer.ArgsTransport:ConsumeArgs():System.Threading.Tasks.Task`1[[System.String[], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Pre-import

*************** Finishing PHASE Pre-import

*************** Starting PHASE Importation
*************** In impImport() for HotkeyedMusicPlayer.ArgsTransport:ConsumeArgs():System.Threading.Tasks.Task`1[[System.String[], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]

impImportBlockPending for BB01

Importing BB01 (PC=000) of 'HotkeyedMusicPlayer.ArgsTransport:ConsumeArgs():System.Threading.Tasks.Task`1[[System.String[], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'
    [ 0]   0 (0x000) ldloca.s 0
    [ 1]   2 (0x002) call 0A000015
In Compiler::impImportCall: opcode is call, kind=0, callRetType is struct, structSize is 8


STMT00000 (IL 0x000...  ???)
               [000002] I-C-G-------              *  CALL      struct System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].Create (exactContextHnd=0x00000000D1FFAB1E)
               [000003] H----------- arg0         \--*  CNS_INT(h) long   0xd1ffab1e class

    [ 2]   7 (0x007) stfld 0400001B

STMT00001 (IL   ???...  ???)
               [000008] -AC---------              *  ASG       struct (copy)
               [000007] *-----------              +--*  OBJ       struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.String[], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 8>
               [000006] ------------              |  \--*  ADDR      byref 
               [000005] -------N----              |     \--*  FIELD     struct <>t__builder
               [000001] ------------              |        \--*  ADDR      byref 
               [000000] -------N----              |           \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24> V00 loc0         
               [000004] --C---------              \--*  RET_EXPR  struct(inl return from call [000002])

    [ 0]  12 (0x00c) ldloca.s 0
    [ 1]  14 (0x00e) ldc.i4.m1 -1
    [ 2]  15 (0x00f) stfld 0400001A

STMT00002 (IL 0x00C...  ???)
               [000013] -A----------              *  ASG       int   
               [000012] -------N----              +--*  FIELD     int    <>1__state
               [000010] ------------              |  \--*  ADDR      byref 
               [000009] -------N----              |     \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24> V00 loc0         
               [000011] ------------              \--*  CNS_INT   int    -1

    [ 0]  20 (0x014) ldloca.s 0
    [ 1]  22 (0x016) ldflda 0400001B
    [ 1]  27 (0x01b) ldloca.s 0
    [ 2]  29 (0x01d) call 2B000001
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0


STMT00003 (IL 0x014...  ???)
               [000020] I-C-G-------              *  CALL      void   System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].Start (exactContextHnd=0x00000000D1FFAB1E)
               [000017] ------------ this in rcx  +--*  ADDR      byref 
               [000016] -------N----              |  \--*  FIELD     struct <>t__builder
               [000015] ------------              |     \--*  ADDR      byref 
               [000014] -------N----              |        \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24> V00 loc0         
               [000021] H----------- arg1         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000019] ------------ arg2         \--*  ADDR      byref 
               [000018] -------N----                 \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24> V00 loc0         

    [ 0]  34 (0x022) ldloca.s 0
    [ 1]  36 (0x024) ldflda 0400001B
    [ 1]  41 (0x029) call 0A000017 (Implicit Tail call: prefixFlags |= PREFIX_TAILCALL_IMPLICIT)
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0

GTF_CALL_M_IMPLICIT_TAILCALL set for call [000026]


STMT00004 (IL 0x022...  ???)
               [000026] I-C-G-------              *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].get_Task (exactContextHnd=0x00000000D1FFAB1E)
               [000025] ------------ this in rcx  +--*  ADDR      byref 
               [000024] -------N----              |  \--*  FIELD     struct <>t__builder
               [000023] ------------              |     \--*  ADDR      byref 
               [000022] -------N----              |        \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24> V00 loc0         
               [000027] H----------- arg1         \--*  CNS_INT(h) long   0xd1ffab1e class

    [ 1]  46 (0x02e) ret

STMT00005 (IL   ???...  ???)
               [000029] --C---------              *  RETURN    ref   
               [000028] --C---------              \--*  RET_EXPR  ref   (inl return from call [000026])

*************** Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..02F) (return), preds={} succs={}

***** BB01
STMT00000 (IL 0x000...0x007)
               [000002] I-C-G-------              *  CALL      struct System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].Create (exactContextHnd=0x00000000D1FFAB1E)
               [000003] H----------- arg0         \--*  CNS_INT(h) long   0xd1ffab1e class

***** BB01
STMT00001 (IL   ???...  ???)
               [000008] -AC---------              *  ASG       struct (copy)
               [000007] *-----------              +--*  OBJ       struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.String[], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 8>
               [000006] ------------              |  \--*  ADDR      byref 
               [000005] -------N----              |     \--*  FIELD     struct <>t__builder
               [000001] ------------              |        \--*  ADDR      byref 
               [000000] -------N----              |           \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24> V00 loc0         
               [000004] --C---------              \--*  RET_EXPR  struct(inl return from call [000002])

***** BB01
STMT00002 (IL 0x00C...0x00F)
               [000013] -A----------              *  ASG       int   
               [000012] -------N----              +--*  FIELD     int    <>1__state
               [000010] ------------              |  \--*  ADDR      byref 
               [000009] -------N----              |     \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24> V00 loc0         
               [000011] ------------              \--*  CNS_INT   int    -1

***** BB01
STMT00003 (IL 0x014...0x02E)
               [000020] I-C-G-------              *  CALL      void   System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].Start (exactContextHnd=0x00000000D1FFAB1E)
               [000017] ------------ this in rcx  +--*  ADDR      byref 
               [000016] -------N----              |  \--*  FIELD     struct <>t__builder
               [000015] ------------              |     \--*  ADDR      byref 
               [000014] -------N----              |        \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24> V00 loc0         
               [000021] H----------- arg1         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000019] ------------ arg2         \--*  ADDR      byref 
               [000018] -------N----                 \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24> V00 loc0         

***** BB01
STMT00004 (IL 0x022...  ???)
               [000026] I-C-G-------              *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].get_Task (exactContextHnd=0x00000000D1FFAB1E)
               [000025] ------------ this in rcx  +--*  ADDR      byref 
               [000024] -------N----              |  \--*  FIELD     struct <>t__builder
               [000023] ------------              |     \--*  ADDR      byref 
               [000022] -------N----              |        \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24> V00 loc0         
               [000027] H----------- arg1         \--*  CNS_INT(h) long   0xd1ffab1e class

***** BB01
STMT00005 (IL   ???...  ???)
               [000029] --C---------              *  RETURN    ref   
               [000028] --C---------              \--*  RET_EXPR  ref   (inl return from call [000026])

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Finishing PHASE Indirect call transform [no changes]

*************** Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Finishing PHASE Expand patchpoints [no changes]

*************** Starting PHASE Post-import

*************** Finishing PHASE Post-import

*************** Starting PHASE Morph - Init

New BlockSet epoch 1, # of blocks (including unused BB00): 2, bitset array size: 1 (short)

*************** In fgRemoveEmptyBlocks

*************** Finishing PHASE Morph - Init
*************** In fgDebugCheckBBlist

*************** Starting PHASE Morph - Inlining
Expanding INLINE_CANDIDATE in statement STMT00000 in BB01:
STMT00000 (IL 0x000...0x007)
               [000002] I-C-G-------              *  CALL      struct System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].Create (exactContextHnd=0x00000000D1FFAB1E)
               [000003] H----------- arg0         \--*  CNS_INT(h) long   0xd1ffab1e class
INLINER: inlineInfo.tokenLookupContextHandle for System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:Create():System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon] set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:Create():System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon] :
IL to import:
IL_0000  12 00             ldloca.s     0x0
IL_0002  fe 15 fa 02 00 1b initobj      0x1B0002FA
IL_0008  06                ldloc.0     
IL_0009  2a                ret         

INLINER impTokenLookupContextHandle for System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:Create():System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon] is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:Create():System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon]
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB02 [0001] created.
BB02 [000..00A)
Basic block list for 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:Create():System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon]'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB02 [0001]  1                             1       [000..00A)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000002] Starting PHASE Pre-import

*************** Inline @[000002] Finishing PHASE Pre-import

*************** Inline @[000002] Starting PHASE Importation
*************** In impImport() for System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:Create():System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon]

impImportBlockPending for BB02

Importing BB02 (PC=000) of 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:Create():System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon]'
    [ 0]   0 (0x000) ldloca.s 0
lvaGrabTemp returning 2 (V02 tmp1) (a long lifetime temp) called for Inline ldloca(s) first use temp.

    [ 1]   2 (0x002) initobj 1B0002FA

               [000033] IA----------              *  ASG       struct (init)
               [000030] D------N----              +--*  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon], 8> V02 tmp1         
               [000032] ------------              \--*  CNS_INT   int    0

    [ 0]   8 (0x008) ldloc.0
    [ 1]   9 (0x009) ret

    Inlinee Return expression (before normalization)  =>
               [000034] ------------              *  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon], 8> V02 tmp1         

impFixupStructReturnType: retyping
               [000034] ------------              *  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon], 8> V02 tmp1         


    Inlinee Return expression (after normalization) =>
               [000034] ------------              *  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon], 8> V02 tmp1         

*************** Inline @[000002] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB02 [0001]  1                             1       [000..00A)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB02 [000..00A) (return), preds={} succs={}

***** BB02
               [000033] IA----------              *  ASG       struct (init)
               [000030] D------N----              +--*  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon], 8> V02 tmp1         
               [000032] ------------              \--*  CNS_INT   int    0

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000002] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000002] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000002] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000002] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000002] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000002] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000002] -----------

Inlinee method body:
STMT00006 (IL 0x000...  ???)
               [000033] IA----------              *  ASG       struct (init)
               [000030] D------N----              +--*  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon], 8> V02 tmp1         
               [000032] ------------              \--*  CNS_INT   int    0

fgInlineAppendStatements: no gc ref inline locals.

Return expression for call at [000002] is
               [000034] ------------              *  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon], 8> V02 tmp1         
Successfully inlined System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:Create():System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon] (10 IL bytes) (depth 1) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'HotkeyedMusicPlayer.ArgsTransport:ConsumeArgs():System.Threading.Tasks.Task`1[[System.String[], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]' calling 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:Create():System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon]'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'

Replacing the return expression placeholder [000004] with [000034]
               [000004] --C---------              *  RET_EXPR  struct(inl return from call [000034])

Inserting the inline return expression
               [000034] ------------              *  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon], 8> V02 tmp1         

Expanding INLINE_CANDIDATE in statement STMT00003 in BB01:
STMT00003 (IL 0x014...0x02E)
               [000020] I-C-G-------              *  CALL      void   System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].Start (exactContextHnd=0x00000000D1FFAB1E)
               [000017] ------------ this in rcx  +--*  ADDR      byref 
               [000016] -------N----              |  \--*  FIELD     struct <>t__builder
               [000015] ------------              |     \--*  ADDR      byref 
               [000014] -------N----              |        \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24> V00 loc0         
               [000021] H----------- arg1         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000019] ------------ arg2         \--*  ADDR      byref 
               [000018] -------N----                 \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24> V00 loc0         
thisArg: is a constant is byref to a struct local
               [000017] ------------              *  ADDR      byref 
               [000016] -------N----              \--*  FIELD     struct <>t__builder
               [000015] ------------                 \--*  ADDR      byref 
               [000014] -------N----                    \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24> V00 loc0         


Argument #1: is a constant is byref to a struct local
               [000019] ------------              *  ADDR      byref 
               [000018] -------N----              \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24> V00 loc0         

INLINER: inlineInfo.tokenLookupContextHandle for System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:Start(byref):this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:Start(byref):this :
IL to import:
IL_0000  03                ldarg.1     
IL_0001  28 59 04 00 2b    call         0x2B000459
IL_0006  2a                ret         

INLINER impTokenLookupContextHandle for System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:Start(byref):this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:Start(byref):this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB03 [0002] created.
BB03 [000..007)
Basic block list for 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:Start(byref):this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB03 [0002]  1                             1       [000..007)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000020] Starting PHASE Pre-import

*************** Inline @[000020] Finishing PHASE Pre-import

*************** Inline @[000020] Starting PHASE Importation
*************** In impImport() for System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:Start(byref):this

impImportBlockPending for BB03

Importing BB03 (PC=000) of 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:Start(byref):this'
    [ 0]   0 (0x000) ldarg.1
    [ 1]   1 (0x001) call 2B000459
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'has exception handling' for 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:Start(byref):this' calling 'System.Runtime.CompilerServices.AsyncMethodBuilderCore:Start(byref)'

INLINER: Marking System.Runtime.CompilerServices.AsyncMethodBuilderCore:Start(byref) as NOINLINE because of has exception handling
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'has exception handling'


               [000038] --C-G-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
               [000036] ------------ arg0         \--*  ADDR      byref 
               [000037] -------N----                 \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24> V00 loc0         

    [ 0]   6 (0x006) ret
*************** Inline @[000020] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB03 [0002]  1                             1       [000..007)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB03 [000..007) (return), preds={} succs={}

***** BB03
               [000038] --C-G-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
               [000036] ------------ arg0         \--*  ADDR      byref 
               [000037] -------N----                 \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24> V00 loc0         

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000020] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000020] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000020] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000020] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000020] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000020] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000020] -----------

Arguments setup:

Inlinee method body:
STMT00007 (IL 0x014...  ???)
               [000038] --C-G-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
               [000036] ------------ arg0         \--*  ADDR      byref 
               [000037] -------N----                 \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24> V00 loc0         

fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:Start(byref):this (7 IL bytes) (depth 1) [aggressive inline attribute]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'aggressive inline attribute' for 'HotkeyedMusicPlayer.ArgsTransport:ConsumeArgs():System.Threading.Tasks.Task`1[[System.String[], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]' calling 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:Start(byref):this'
INLINER: during 'fgInline' result 'success' reason 'aggressive inline attribute'
Expanding INLINE_CANDIDATE in statement STMT00004 in BB01:
STMT00004 (IL 0x022...  ???)
               [000026] I-C-G-------              *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].get_Task (exactContextHnd=0x00000000D1FFAB1E)
               [000025] ------------ this in rcx  +--*  ADDR      byref 
               [000024] -------N----              |  \--*  FIELD     struct <>t__builder
               [000023] ------------              |     \--*  ADDR      byref 
               [000022] -------N----              |        \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24> V00 loc0         
               [000027] H----------- arg1         \--*  CNS_INT(h) long   0xd1ffab1e class
Note: candidate is implicit tail call
thisArg: is a constant is byref to a struct local
               [000025] ------------              *  ADDR      byref 
               [000024] -------N----              \--*  FIELD     struct <>t__builder
               [000023] ------------                 \--*  ADDR      byref 
               [000022] -------N----                    \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24> V00 loc0         

INLINER: inlineInfo.tokenLookupContextHandle for System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:get_Task():System.Threading.Tasks.Task`1[__Canon]:this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:get_Task():System.Threading.Tasks.Task`1[__Canon]:this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  7b c4 08 00 0a    ldfld        0xA0008C4
IL_0006  25                dup         
IL_0007  2d 07             brtrue.s     7 (IL_0010)
IL_0009  26                pop         
IL_000a  02                ldarg.0     
IL_000b  28 d0 08 00 0a    call         0xA0008D0
IL_0010  2a                ret         

INLINER impTokenLookupContextHandle for System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:get_Task():System.Threading.Tasks.Task`1[__Canon]:this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:get_Task():System.Threading.Tasks.Task`1[__Canon]:this
Jump targets:
  IL_0010
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB04 [0003] created.
BB04 [000..009)
New Basic Block BB05 [0004] created.
BB05 [009..010)
New Basic Block BB06 [0005] created.
BB06 [010..011)
Basic block list for 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:get_Task():System.Threading.Tasks.Task`1[__Canon]:this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB04 [0003]  1                             1       [000..009)-> BB06 ( cond )                     
BB05 [0004]  1                             1       [009..010)                                     
BB06 [0005]  2                             1       [010..011)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000026] Starting PHASE Pre-import

*************** Inline @[000026] Finishing PHASE Pre-import

*************** Inline @[000026] Starting PHASE Importation
*************** In impImport() for System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:get_Task():System.Threading.Tasks.Task`1[__Canon]:this

impImportBlockPending for BB04

Importing BB04 (PC=000) of 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:get_Task():System.Threading.Tasks.Task`1[__Canon]:this'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) ldfld 0A0008C4
    [ 1]   6 (0x006) dup
lvaGrabTemp returning 3 (V03 tmp2) called for dup spill.


               [000046] -A--G-------              *  ASG       ref   
               [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         
               [000044] ----G-------              \--*  FIELD     ref    m_task
               [000040] ----G-------                 \--*  ADDR      byref 
               [000041] ----G--N----                    \--*  FIELD     struct <>t__builder
               [000042] ------------                       \--*  ADDR      byref 
               [000043] -------N----                          \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24> V00 loc0         
Marked V03 as a single def local
Querying runtime about current class of field System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[System.__Canon].m_task (declared as System.Threading.Tasks.Task`1[__Canon])
Field's current class not available

lvaSetClass: setting class for V03 to (00000000D1FFAB1E) System.Threading.Tasks.Task`1[__Canon] 

    [ 2]   7 (0x007) brtrue.s

               [000051] ------------              *  JTRUE     void  
               [000050] ------------              \--*  NE        int   
               [000048] ------------                 +--*  LCL_VAR   ref    V03 tmp2         
               [000049] ------------                 \--*  CNS_INT   ref    null

*************** In impGetSpillTmpBase(BB04)

lvaGrabTemps(1) returning 4..4 (long lifetime temps) called for IL Stack Entries
*************** In fgComputeCheapPreds()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB04 [0003]  1                             1       [000..009)-> BB06 ( cond )                     
BB05 [0004]  1                             1       [009..010)                                     
BB06 [0005]  2                             1       [010..011)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------


*************** After fgComputeCheapPreds()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd cheap preds     weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB04 [0003]  1                             1       [000..009)-> BB06 ( cond )                     
BB05 [0004]  1       BB04                  1       [009..010)                                     
BB06 [0005]  2       BB05,BB04             1       [010..011)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------


Spilling stack entries into temps


               [000053] -A----------              *  ASG       ref   
               [000052] D------N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000047] ------------              \--*  LCL_VAR   ref    V03 tmp2         


               [000051] ------------              *  JTRUE     void  
               [000050] ------------              \--*  NE        int   
               [000048] ------------                 +--*  LCL_VAR   ref    V03 tmp2         
               [000049] ------------                 \--*  CNS_INT   ref    null

impImportBlockPending for BB05

impImportBlockPending for BB06

Importing BB06 (PC=016) of 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:get_Task():System.Threading.Tasks.Task`1[__Canon]:this'
    [ 1]  16 (0x010) ret

    Inlinee Return expression (before normalization)  =>
               [000056] ------------              *  LCL_VAR   ref    V04 tmp3         


    Inlinee Return expression (after normalization) =>
               [000056] ------------              *  LCL_VAR   ref    V04 tmp3         

Importing BB05 (PC=009) of 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:get_Task():System.Threading.Tasks.Task`1[__Canon]:this'
    [ 1]   9 (0x009) pop
    [ 0]  10 (0x00a) ldarg.0
    [ 1]  11 (0x00b) call 0A0008D0 (Inline Implicit Tail call: prefixFlags |= PREFIX_TAILCALL_IMPLICIT)
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0

GTF_CALL_M_IMPLICIT_TAILCALL set for call [000061]
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'noinline per IL/cached result' for 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:get_Task():System.Threading.Tasks.Task`1[__Canon]:this' calling 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:InitializeTaskAsPromise():System.Threading.Tasks.Task`1[__Canon]:this'
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'noinline per IL/cached result'

Spilling stack entries into temps


               [000064] -AC-G-------              *  ASG       ref   
               [000063] D------N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000061] --C-G-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].InitializeTaskAsPromise
               [000057] ----G------- this in rcx     +--*  ADDR      byref 
               [000058] ----G--N----                 |  \--*  FIELD     struct <>t__builder
               [000059] ------------                 |     \--*  ADDR      byref 
               [000060] -------N----                 |        \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24> V00 loc0         
               [000062] H----------- arg1            \--*  CNS_INT(h) long   0xd1ffab1e class

impImportBlockPending for BB06

** Note: inlinee IL was partially imported -- imported 16 of 17 bytes of method IL

*************** Inline @[000026] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB04 [0003]  1                             1       [000..009)-> BB06 ( cond )                     i 
BB05 [0004]  1                             1       [009..010)                                     i 
BB06 [0005]  2                             1       [010..011)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB04 [000..009) -> BB06 (cond), preds={} succs={BB05,BB06}

***** BB04
               [000046] -A--G-------              *  ASG       ref   
               [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         
               [000044] ----G-------              \--*  FIELD     ref    m_task
               [000040] ----G-------                 \--*  ADDR      byref 
               [000041] ----G--N----                    \--*  FIELD     struct <>t__builder
               [000042] ------------                       \--*  ADDR      byref 
               [000043] -------N----                          \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24> V00 loc0         

***** BB04
               [000053] -A----------              *  ASG       ref   
               [000052] D------N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000047] ------------              \--*  LCL_VAR   ref    V03 tmp2         

***** BB04
               [000051] ------------              *  JTRUE     void  
               [000050] ------------              \--*  NE        int   
               [000048] ------------                 +--*  LCL_VAR   ref    V03 tmp2         
               [000049] ------------                 \--*  CNS_INT   ref    null

------------ BB05 [009..010), preds={} succs={BB06}

***** BB05
               [000064] -AC-G-------              *  ASG       ref   
               [000063] D------N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000061] --C-G-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].InitializeTaskAsPromise
               [000057] ----G------- this in rcx     +--*  ADDR      byref 
               [000058] ----G--N----                 |  \--*  FIELD     struct <>t__builder
               [000059] ------------                 |     \--*  ADDR      byref 
               [000060] -------N----                 |        \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24> V00 loc0         
               [000062] H----------- arg1            \--*  CNS_INT(h) long   0xd1ffab1e class

------------ BB06 [010..011) (return), preds={} succs={}

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000026] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000026] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000026] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000026] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000026] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000026] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000026] -----------

Arguments setup:

Inlinee method body:New Basic Block BB07 [0006] created.

Convert bbJumpKind of BB06 to BBJ_NONE
fgInlineAppendStatements: no gc ref inline locals.

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB04 [0003]  1                             1       [022..023)-> BB06 ( cond )                     i 
BB05 [0004]  1                             0.50    [022..023)                                     i 
BB06 [0005]  2                             1       [022..023)                                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB04 [022..023) -> BB06 (cond), preds={} succs={BB05,BB06}

***** BB04
STMT00008 (IL 0x022...  ???)
               [000046] -A--G-------              *  ASG       ref   
               [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         
               [000044] ----G-------              \--*  FIELD     ref    m_task
               [000040] ----G-------                 \--*  ADDR      byref 
               [000041] ----G--N----                    \--*  FIELD     struct <>t__builder
               [000042] ------------                       \--*  ADDR      byref 
               [000043] -------N----                          \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24> V00 loc0         

***** BB04
STMT00010 (IL 0x022...  ???)
               [000053] -A----------              *  ASG       ref   
               [000052] D------N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000047] ------------              \--*  LCL_VAR   ref    V03 tmp2         

***** BB04
STMT00009 (IL 0x022...  ???)
               [000051] ------------              *  JTRUE     void  
               [000050] ------------              \--*  NE        int   
               [000048] ------------                 +--*  LCL_VAR   ref    V03 tmp2         
               [000049] ------------                 \--*  CNS_INT   ref    null

------------ BB05 [022..023), preds={} succs={BB06}

***** BB05
STMT00011 (IL 0x022...  ???)
               [000064] -AC-G-------              *  ASG       ref   
               [000063] D------N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000061] --C-G-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].InitializeTaskAsPromise
               [000057] ----G------- this in rcx     +--*  ADDR      byref 
               [000058] ----G--N----                 |  \--*  FIELD     struct <>t__builder
               [000059] ------------                 |     \--*  ADDR      byref 
               [000060] -------N----                 |        \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24> V00 loc0         
               [000062] H----------- arg1            \--*  CNS_INT(h) long   0xd1ffab1e class

------------ BB06 [022..023), preds={} succs={BB07}

-------------------------------------------------------------------------------------------------------------------

Return expression for call at [000026] is
               [000056] ------------              *  LCL_VAR   ref    V04 tmp3         
Successfully inlined System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:get_Task():System.Threading.Tasks.Task`1[__Canon]:this (17 IL bytes) (depth 1) [aggressive inline attribute]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'aggressive inline attribute' for 'HotkeyedMusicPlayer.ArgsTransport:ConsumeArgs():System.Threading.Tasks.Task`1[[System.String[], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]' calling 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:get_Task():System.Threading.Tasks.Task`1[__Canon]:this'
INLINER: during 'fgInline' result 'success' reason 'aggressive inline attribute'
Querying runtime about current class of field System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[System.__Canon].m_task (declared as System.Threading.Tasks.Task`1[__Canon])
Field's current class not available

Replacing the return expression placeholder [000028] with [000056]
               [000028] --C---------              *  RET_EXPR  ref   (inl return from call [000056])

Inserting the inline return expression
               [000056] ------------              *  LCL_VAR   ref    V04 tmp3         

**************** Inline Tree
Inlines into 06000002 [via DefaultPolicy] HotkeyedMusicPlayer.ArgsTransport:ConsumeArgs():System.Threading.Tasks.Task`1[[System.String[], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]
  [1 IL=0002 TR=000002 060047D5] [below ALWAYS_INLINE size] System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:Create():System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon]
  [2 IL=0029 TR=000020 060047D6] [aggressive inline attribute] System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:Start(byref):this
    [0 IL=0001 TR=000038 060047C0] [FAILED: has exception handling] System.Runtime.CompilerServices.AsyncMethodBuilderCore:Start(byref)
  [3 IL=0041 TR=000026 060047DF] [aggressive inline attribute] System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:get_Task():System.Threading.Tasks.Task`1[__Canon]:this
    [0 IL=0011 TR=000061 060047E0] [FAILED: noinline per IL/cached result] System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:InitializeTaskAsPromise():System.Threading.Tasks.Task`1[__Canon]:this
Budget: initialTime=201, finalTime=225, initialBudget=2010, currentBudget=2028
Budget: increased by 18 because of force inlines
Budget: initialSize=1202, finalSize=1202

*************** Finishing PHASE Morph - Inlining
Trees after Morph - Inlining

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)                                     i 
BB04 [0003]  1                             1       [022..023)-> BB06 ( cond )                     i 
BB05 [0004]  1                             0.50    [022..023)                                     i 
BB06 [0005]  2                             1       [022..023)                                     i 
BB07 [0006]  1                             1       [???..???)        (return)                     internal 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..02F), preds={} succs={BB04}

***** BB01
STMT00006 (IL 0x000...  ???)
               [000033] IA----------              *  ASG       struct (init)
               [000030] D------N----              +--*  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon], 8> V02 tmp1         
               [000032] ------------              \--*  CNS_INT   int    0

***** BB01
STMT00001 (IL   ???...  ???)
               [000008] -AC---------              *  ASG       struct (copy)
               [000007] *-----------              +--*  OBJ       struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.String[], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 8>
               [000006] ------------              |  \--*  ADDR      byref 
               [000005] -------N----              |     \--*  FIELD     struct <>t__builder
               [000001] ------------              |        \--*  ADDR      byref 
               [000000] -------N----              |           \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24> V00 loc0         
               [000034] ------------              \--*  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon], 8> V02 tmp1         

***** BB01
STMT00002 (IL 0x00C...0x00F)
               [000013] -A----------              *  ASG       int   
               [000012] -------N----              +--*  FIELD     int    <>1__state
               [000010] ------------              |  \--*  ADDR      byref 
               [000009] -------N----              |     \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24> V00 loc0         
               [000011] ------------              \--*  CNS_INT   int    -1

***** BB01
STMT00007 (IL 0x014...  ???)
               [000038] --C-G-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
               [000036] ------------ arg0         \--*  ADDR      byref 
               [000037] -------N----                 \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24> V00 loc0         

------------ BB04 [022..023) -> BB06 (cond), preds={} succs={BB05,BB06}

***** BB04
STMT00008 (IL 0x022...  ???)
               [000046] -A--G-------              *  ASG       ref   
               [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         
               [000044] ----G-------              \--*  FIELD     ref    m_task
               [000040] ----G-------                 \--*  ADDR      byref 
               [000041] ----G--N----                    \--*  FIELD     struct <>t__builder
               [000042] ------------                       \--*  ADDR      byref 
               [000043] -------N----                          \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24> V00 loc0         

***** BB04
STMT00010 (IL 0x022...  ???)
               [000053] -A----------              *  ASG       ref   
               [000052] D------N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000047] ------------              \--*  LCL_VAR   ref    V03 tmp2         

***** BB04
STMT00009 (IL 0x022...  ???)
               [000051] ------------              *  JTRUE     void  
               [000050] ------------              \--*  NE        int   
               [000048] ------------                 +--*  LCL_VAR   ref    V03 tmp2         
               [000049] ------------                 \--*  CNS_INT   ref    null

------------ BB05 [022..023), preds={} succs={BB06}

***** BB05
STMT00011 (IL 0x022...  ???)
               [000064] -AC-G-------              *  ASG       ref   
               [000063] D------N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000061] --C-G-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].InitializeTaskAsPromise
               [000057] ----G------- this in rcx     +--*  ADDR      byref 
               [000058] ----G--N----                 |  \--*  FIELD     struct <>t__builder
               [000059] ------------                 |     \--*  ADDR      byref 
               [000060] -------N----                 |        \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24> V00 loc0         
               [000062] H----------- arg1            \--*  CNS_INT(h) long   0xd1ffab1e class

------------ BB06 [022..023), preds={} succs={BB07}

------------ BB07 [???..???) (return), preds={} succs={}

***** BB07
STMT00005 (IL   ???...  ???)
               [000029] --C---------              *  RETURN    ref   
               [000056] ------------              \--*  LCL_VAR   ref    V04 tmp3         

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Allocate Objects
no newobjs in this method; punting

*************** Finishing PHASE Allocate Objects [no changes]

*************** Starting PHASE Morph - Add internal blocks

*************** After fgAddInternal()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)                                     i 
BB04 [0003]  1                             1       [022..023)-> BB06 ( cond )                     i 
BB05 [0004]  1                             0.50    [022..023)                                     i 
BB06 [0005]  2                             1       [022..023)                                     i 
BB07 [0006]  1                             1       [???..???)        (return)                     internal 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty

*************** Finishing PHASE Morph - Add internal blocks

*************** Starting PHASE Remove empty try

*************** In fgRemoveEmptyTry()
No EH in this method, nothing to remove.

*************** Finishing PHASE Remove empty try [no changes]

*************** Starting PHASE Remove empty finally
No EH in this method, nothing to remove.

*************** Finishing PHASE Remove empty finally [no changes]

*************** Starting PHASE Merge callfinally chains
No EH in this method, nothing to merge.

*************** Finishing PHASE Merge callfinally chains [no changes]

*************** Starting PHASE Clone finally
No EH in this method, no cloning.

*************** Finishing PHASE Clone finally [no changes]

*************** Starting PHASE Compute preds

Renumbering the basic blocks for fgComputePred

*************** Before renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)                                     i 
BB04 [0003]  1                             1       [022..023)-> BB06 ( cond )                     i 
BB05 [0004]  1                             0.50    [022..023)                                     i 
BB06 [0005]  2                             1       [022..023)                                     i 
BB07 [0006]  1                             1       [???..???)        (return)                     internal 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
Renumber BB04 to BB02
Renumber BB05 to BB03
Renumber BB06 to BB04
Renumber BB07 to BB05

*************** After renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)                                     i 
BB02 [0003]  1                             1       [022..023)-> BB04 ( cond )                     i 
BB03 [0004]  1                             0.50    [022..023)                                     i 
BB04 [0005]  2                             1       [022..023)                                     i 
BB05 [0006]  1                             1       [???..???)        (return)                     internal 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty

New BlockSet epoch 2, # of blocks (including unused BB00): 6, bitset array size: 1 (short)

*************** In fgComputePreds()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)                                     i 
BB02 [0003]  1                             1       [022..023)-> BB04 ( cond )                     i 
BB03 [0004]  1                             0.50    [022..023)                                     i 
BB04 [0005]  2                             1       [022..023)                                     i 
BB05 [0006]  1                             1       [???..???)        (return)                     internal 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** After fgComputePreds()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)                                     i label target 
BB02 [0003]  1       BB01                  1       [022..023)-> BB04 ( cond )                     i 
BB03 [0004]  1       BB02                  0.50    [022..023)                                     i 
BB04 [0005]  2       BB02,BB03             1       [022..023)                                     i label target 
BB05 [0006]  1       BB04                  1       [???..???)        (return)                     internal 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** Finishing PHASE Compute preds

*************** Starting PHASE Merge throw blocks

*************** In fgTailMergeThrows
Method does not have multiple noreturn calls.

*************** Finishing PHASE Merge throw blocks [no changes]

*************** Starting PHASE Update flow graph early pass

*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)                                     i label target 
BB02 [0003]  1       BB01                  1       [022..023)-> BB04 ( cond )                     i 
BB03 [0004]  1       BB02                  0.50    [022..023)                                     i 
BB04 [0005]  2       BB02,BB03             1       [022..023)                                     i label target 
BB05 [0006]  1       BB04                  1       [???..???)        (return)                     internal 
-----------------------------------------------------------------------------------------------------------------------------------------


Compacting blocks BB01 and BB02:
*************** In fgDebugCheckBBlist

Compacting blocks BB04 and BB05:
*************** In fgDebugCheckBBlist

After updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)-> BB04 ( cond )                     i label target 
BB03 [0004]  1       BB01                  0.50    [022..023)                                     i 
BB04 [0005]  2       BB01,BB03             1       [022..023)        (return)                     i label target 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Update flow graph early pass

*************** Starting PHASE Morph - Promote Structs

*************** In fgResetImplicitByRefRefCount()
*************** In fgPromoteStructs()

lvaTable before fgPromoteStructs
; Initial local variable assignments
;
;  V00 loc0           struct <<ConsumeArgs>d__6, 24> ld-addr-op
;  V01 OutArgs        lclBlk <na>  "OutgoingArgSpace"
;  V02 tmp1           struct <System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon], 8> ld-addr-op "Inline ldloca(s) first use temp"
;  V03 tmp2              ref  class-hnd "dup spill"
;  V04 tmp3              ref 

Promoting struct local V00 (<ConsumeArgs>d__6):
lvaGrabTemp returning 5 (V05 tmp4) (a long lifetime temp) called for field V00.<>1__state (fldOffset=0x0).

lvaGrabTemp returning 6 (V06 tmp5) (a long lifetime temp) called for field V00.<>t__builder (fldOffset=0x8).

lvaGrabTemp returning 7 (V07 tmp6) (a long lifetime temp) called for field V00.<>u__1 (fldOffset=0x10).

Promoting struct local V02 (System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon]):
lvaGrabTemp returning 8 (V08 tmp7) (a long lifetime temp) called for field V02.m_task (fldOffset=0x0).

lvaTable after fgPromoteStructs
; Initial local variable assignments
;
;  V00 loc0           struct <<ConsumeArgs>d__6, 24> ld-addr-op
;  V01 OutArgs        lclBlk <na>  "OutgoingArgSpace"
;  V02 tmp1           struct <System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon], 8> ld-addr-op "Inline ldloca(s) first use temp"
;  V03 tmp2              ref  class-hnd "dup spill"
;  V04 tmp3              ref 
;  V05 tmp4              int  V00.<>1__state(offs=0x00) P-INDEP "field V00.<>1__state (fldOffset=0x0)"
;  V06 tmp5              ref  V00.<>t__builder(offs=0x08) P-INDEP "field V00.<>t__builder (fldOffset=0x8)"
;  V07 tmp6              ref  V00.<>u__1(offs=0x10) P-INDEP "field V00.<>u__1 (fldOffset=0x10)"
;  V08 tmp7              ref  V02.m_task(offs=0x00) P-INDEP "field V02.m_task (fldOffset=0x0)"

*************** Finishing PHASE Morph - Promote Structs

*************** Starting PHASE Morph - Structs/AddrExp

*************** In fgMarkAddressExposedLocals()
LocalAddressVisitor visiting statement:
STMT00006 (IL 0x000...  ???)
               [000033] IA----------              *  ASG       struct (init)
               [000030] D------N----              +--*  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon], 8>(P) V02 tmp1         
                                                  +--*    ref    V02.m_task (offs=0x00) -> V08 tmp7         
               [000032] ------------              \--*  CNS_INT   int    0

LocalAddressVisitor visiting statement:
STMT00001 (IL   ???...  ???)
               [000008] -AC---------              *  ASG       struct (copy)
               [000007] *-----------              +--*  OBJ       struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.String[], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 8>
               [000006] ------------              |  \--*  ADDR      byref 
               [000005] -------N----              |     \--*  FIELD     struct <>t__builder
               [000001] ------------              |        \--*  ADDR      byref 
               [000000] -------N----              |           \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24>(P) V00 loc0         
                                                  |           \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                  |           \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                  |           \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
               [000034] ------------              \--*  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon], 8>(P) V02 tmp1         
                                                  \--*    ref    V02.m_task (offs=0x00) -> V08 tmp7         
Replacing the field in promoted struct with local var V06
LocalAddressVisitor modified statement:
STMT00001 (IL   ???...  ???)
               [000008] -AC---------              *  ASG       struct (copy)
               [000007] *-----------              +--*  OBJ       struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.String[], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 8>
               [000006] ------------              |  \--*  ADDR      byref 
               [000005] ------------              |     \--*  LCL_VAR   ref    V06 tmp5         
               [000034] ------------              \--*  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon], 8>(P) V02 tmp1         
                                                  \--*    ref    V02.m_task (offs=0x00) -> V08 tmp7         

LocalAddressVisitor visiting statement:
STMT00002 (IL 0x00C...0x00F)
               [000013] -A----------              *  ASG       int   
               [000012] -------N----              +--*  FIELD     int    <>1__state
               [000010] ------------              |  \--*  ADDR      byref 
               [000009] -------N----              |     \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24>(P) V00 loc0         
                                                  |     \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                  |     \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                  |     \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
               [000011] ------------              \--*  CNS_INT   int    -1
Replacing the field in promoted struct with local var V05
LocalAddressVisitor modified statement:
STMT00002 (IL 0x00C...0x00F)
               [000013] -A----------              *  ASG       int   
               [000012] D------N----              +--*  LCL_VAR   int    V05 tmp4         
               [000011] ------------              \--*  CNS_INT   int    -1

LocalAddressVisitor visiting statement:
STMT00007 (IL 0x014...  ???)
               [000038] --C-G-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
               [000036] ------------ arg0         \--*  ADDR      byref 
               [000037] -------N----                 \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24>(P) V00 loc0         
                                                     \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                     \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                     \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         

Local V05 should not be enregistered because: it is address exposed

Local V06 should not be enregistered because: it is address exposed

Local V07 should not be enregistered because: it is address exposed

Local V00 should not be enregistered because: it is address exposed

LocalAddressVisitor visiting statement:
STMT00008 (IL 0x022...  ???)
               [000046] -A--G-------              *  ASG       ref   
               [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         
               [000044] ----G-------              \--*  FIELD     ref    m_task
               [000040] ----G-------                 \--*  ADDR      byref 
               [000041] ----G--N----                    \--*  FIELD     struct <>t__builder
               [000042] ------------                       \--*  ADDR      byref 
               [000043] -------N----                          \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24>(AX)(P) V00 loc0         
                                                              \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                              \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                              \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
Replacing the field in promoted struct with local var V06
LocalAddressVisitor modified statement:
STMT00008 (IL 0x022...  ???)
               [000046] -A--G-------              *  ASG       ref   
               [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         
               [000044] ----G-------              \--*  FIELD     ref    m_task
               [000040] ----G-------                 \--*  ADDR      byref 
               [000041] ------------                    \--*  LCL_VAR   ref   (AX) V06 tmp5         

LocalAddressVisitor visiting statement:
STMT00010 (IL 0x022...  ???)
               [000053] -A----------              *  ASG       ref   
               [000052] D------N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000047] ------------              \--*  LCL_VAR   ref    V03 tmp2         

LocalAddressVisitor visiting statement:
STMT00009 (IL 0x022...  ???)
               [000051] ------------              *  JTRUE     void  
               [000050] ------------              \--*  NE        int   
               [000048] ------------                 +--*  LCL_VAR   ref    V03 tmp2         
               [000049] ------------                 \--*  CNS_INT   ref    null

LocalAddressVisitor visiting statement:
STMT00011 (IL 0x022...  ???)
               [000064] -AC-G-------              *  ASG       ref   
               [000063] D------N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000061] --C-G-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].InitializeTaskAsPromise
               [000057] ----G------- this in rcx     +--*  ADDR      byref 
               [000058] ----G--N----                 |  \--*  FIELD     struct <>t__builder
               [000059] ------------                 |     \--*  ADDR      byref 
               [000060] -------N----                 |        \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24>(AX)(P) V00 loc0         
                                                     |        \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                     |        \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                     |        \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
               [000062] H----------- arg1            \--*  CNS_INT(h) long   0xd1ffab1e class
Replacing the field in promoted struct with local var V06

Local V06 should not be enregistered because: it is address exposed
LocalAddressVisitor modified statement:
STMT00011 (IL 0x022...  ???)
               [000064] -AC-G-------              *  ASG       ref   
               [000063] D------N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000061] --C-G-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].InitializeTaskAsPromise
               [000057] ----G------- this in rcx     +--*  ADDR      byref 
               [000058] ------------                 |  \--*  LCL_VAR   ref   (AX) V06 tmp5         
               [000062] H----------- arg1            \--*  CNS_INT(h) long   0xd1ffab1e class

LocalAddressVisitor visiting statement:
STMT00005 (IL   ???...  ???)
               [000029] --C---------              *  RETURN    ref   
               [000056] ------------              \--*  LCL_VAR   ref    V04 tmp3         


*************** Finishing PHASE Morph - Structs/AddrExp

*************** Starting PHASE Morph - ByRefs

*************** In fgRetypeImplicitByRefArgs()

*************** Finishing PHASE Morph - ByRefs

*************** Starting PHASE Morph - Global

*************** In fgMorphBlocks()

Morphing BB01 of 'HotkeyedMusicPlayer.ArgsTransport:ConsumeArgs():System.Threading.Tasks.Task`1[[System.String[], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'

fgMorphTree BB01, STMT00006 (before)
               [000033] IA----------              *  ASG       struct (init)
               [000030] D------N----              +--*  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon], 8>(P) V02 tmp1         
                                                  +--*    ref    V02.m_task (offs=0x00) -> V08 tmp7         
               [000032] ------------              \--*  CNS_INT   int    0
fgMorphBlkNode for dst tree, before:
               [000030] D----+-N----              *  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon], 8>(P) V02 tmp1         
                                                  *    ref    V02.m_task (offs=0x00) -> V08 tmp7         
fgMorphBlkNode after:
               [000030] D----+-N----              *  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon], 8>(P) V02 tmp1         
                                                  *    ref    V02.m_task (offs=0x00) -> V08 tmp7         

fgMorphInitBlock: using field by field initialization.
GenTreeNode creates assertion:
               [000069] -A----------              *  ASG       ref   
In BB01 New Local Constant Assertion: V08 == null index=#01, mask=0000000000000001
fgMorphInitBlock (after):
               [000069] -A---+------              *  ASG       ref   
               [000067] D------N----              +--*  LCL_VAR   ref    V08 tmp7         
               [000068] ------------              \--*  CNS_INT   ref    null

The assignment [000069] using V08 removes: Constant Assertion: V08 == null
GenTreeNode creates assertion:
               [000069] -A---+------              *  ASG       ref   
In BB01 New Local Constant Assertion: V08 == null index=#01, mask=0000000000000001

fgMorphTree BB01, STMT00006 (after)
               [000069] -A---+------              *  ASG       ref   
               [000067] D------N----              +--*  LCL_VAR   ref    V08 tmp7         
               [000068] ------------              \--*  CNS_INT   ref    null

fgMorphTree BB01, STMT00001 (before)
               [000008] -AC---------              *  ASG       struct (copy)
               [000007] *-----------              +--*  OBJ       struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.String[], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 8>
               [000006] ------------              |  \--*  ADDR      byref 
               [000005] ------------              |     \--*  LCL_VAR   ref   (AX) V06 tmp5         
               [000034] ------------              \--*  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon], 8>(P) V02 tmp1         
                                                  \--*    ref    V02.m_task (offs=0x00) -> V08 tmp7         
fgMorphCopyBlock:
fgMorphBlkNode for dst tree, before:
               [000007] *---G+------              *  OBJ       struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.String[], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 8>
               [000006] -----+------              \--*  ADDR      byref 
               [000005] D---G+-N----                 \--*  LCL_VAR   ref   (AX) V06 tmp5         
fgMorphBlkNode after:
               [000007] *---G+------              *  OBJ       struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.String[], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 8>
               [000006] -----+------              \--*  ADDR      byref 
               [000005] D---G+-N----                 \--*  LCL_VAR   ref   (AX) V06 tmp5         
fgMorphBlkNode for src tree, before:
               [000034] -----+------              *  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon], 8>(P) V02 tmp1         
                                                  *    ref    V02.m_task (offs=0x00) -> V08 tmp7         
fgMorphBlkNode after:
               [000034] -----+------              *  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon], 8>(P) V02 tmp1         
                                                  *    ref    V02.m_task (offs=0x00) -> V08 tmp7         
block assignment to morph:
               [000008] -A--G-------              *  ASG       struct (copy)
               [000007] *---G+------              +--*  OBJ       struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.String[], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], 8>
               [000006] -----+------              |  \--*  ADDR      byref 
               [000005] D---G+-N----              |     \--*  LCL_VAR   ref   (AX) V06 tmp5         
               [000034] -----+------              \--*  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon], 8>(P) V02 tmp1         
                                                  \--*    ref    V02.m_task (offs=0x00) -> V08 tmp7         
 (srcDoFldAsg=true) using field by field assignments.

fgMorphCopyBlock (after):
               [000072] -A---+------              *  ASG       ref   
               [000070] D------N----              +--*  LCL_VAR   ref   (AX) V06 tmp5         
               [000071] ------------              \--*  LCL_VAR   ref    V08 tmp7         

fgMorphTree BB01, STMT00001 (after)
               [000072] -A---+------              *  ASG       ref   
               [000070] D------N----              +--*  LCL_VAR   ref   (AX) V06 tmp5         
               [000071] ------------              \--*  LCL_VAR   ref    V08 tmp7         

fgMorphTree BB01, STMT00002 (before)
               [000013] -A----------              *  ASG       int   
               [000012] D------N----              +--*  LCL_VAR   int   (AX) V05 tmp4         
               [000011] ------------              \--*  CNS_INT   int    -1

fgMorphTree BB01, STMT00007 (before)
               [000038] --C-G-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
               [000036] ------------ arg0         \--*  ADDR      byref 
               [000037] -------N----                 \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24>(AX)(P) V00 loc0         
                                                     \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                     \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                     \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
Initializing arg info for 38.CALL:
ArgTable for 38.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 36.ADDR long (By ref), 1 reg: rcx, byteAlignment=8]

Morphing args for 38.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000036] -----+------              *  ADDR      long  
               [000037] ----G+-N----              \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24>(AX)(P) V00 loc0         
                                                  \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                  \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                  \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
Replaced with placeholder node:
               [000073] ----------L-              *  ARGPLACE  long  

Shuffled argument table:    rcx 
ArgTable for 38.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 36.ADDR long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]


fgMorphTree BB01, STMT00007 (after)
               [000038] --CXG+------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
               [000036] -----+------ arg0 in rcx  \--*  ADDR      long  
               [000037] ----G+-N----                 \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24>(AX)(P) V00 loc0         
                                                     \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                     \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                     \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         

fgMorphTree BB01, STMT00008 (before)
               [000046] -A--G-------              *  ASG       ref   
               [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         
               [000044] ----G-------              \--*  FIELD     ref    m_task
               [000040] ----G-------                 \--*  ADDR      byref 
               [000041] ------------                    \--*  LCL_VAR   ref   (AX) V06 tmp5         

Before calling fgAddFieldSeqForZeroOffset:
               [000044] *---G-------              *  IND       ref   
               [000040] ----G-------              \--*  ADDR      byref 
               [000041] ------------                 \--*  LCL_VAR   ref   (AX) V06 tmp5         

fgAddFieldSeqForZeroOffset for Fseq[m_task]
addr (Before)
               [000040] ----G-------                ADDR      byref 
     (After)
               [000040] ----G-------                ADDR      byref  Zero Fseq[m_task]

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000041] ----G+------              *  LCL_VAR   ref   (AX) V06 tmp5         

fgMorphTree BB01, STMT00008 (after)
               [000046] -A--G+------              *  ASG       ref   
               [000045] D----+-N----              +--*  LCL_VAR   ref    V03 tmp2         
               [000041] ----G+------              \--*  LCL_VAR   ref   (AX) V06 tmp5         

fgMorphTree BB01, STMT00010 (before)
               [000053] -A----------              *  ASG       ref   
               [000052] D------N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000047] ------------              \--*  LCL_VAR   ref    V03 tmp2         
GenTreeNode creates assertion:
               [000053] -A----------              *  ASG       ref   
In BB01 New Local Copy     Assertion: V04 == V03 index=#02, mask=0000000000000002

fgMorphTree BB01, STMT00009 (before)
               [000051] ------------              *  JTRUE     void  
               [000050] ------------              \--*  NE        int   
               [000048] ------------                 +--*  LCL_VAR   ref    V03 tmp2         
               [000049] ------------                 \--*  CNS_INT   ref    null

Morphing BB03 of 'HotkeyedMusicPlayer.ArgsTransport:ConsumeArgs():System.Threading.Tasks.Task`1[[System.String[], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'

fgMorphTree BB03, STMT00011 (before)
               [000064] -AC-G-------              *  ASG       ref   
               [000063] D------N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000061] --C-G-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].InitializeTaskAsPromise
               [000057] ----G------- this in rcx     +--*  ADDR      byref 
               [000058] ------------                 |  \--*  LCL_VAR   ref   (AX) V06 tmp5         
               [000062] H----------- arg1            \--*  CNS_INT(h) long   0xd1ffab1e class

Rejecting tail call in morph for call [000061]: Local address taken V00
Initializing arg info for 61.CALL:
ArgTable for 61.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 57.ADDR byref (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 62.CNS_INT long (By ref), 1 reg: rdx, byteAlignment=8]

Morphing args for 61.CALL:
argSlots=2, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000057] -----+------              *  ADDR      byref 
               [000058] ----G+-N----              \--*  LCL_VAR   ref   (AX) V06 tmp5         
Replaced with placeholder node:
               [000074] ----------L-              *  ARGPLACE  byref 
Deferred argument ('rdx'):
               [000062] H----+------              *  CNS_INT(h) long   0xd1ffab1e class
Replaced with placeholder node:
               [000075] ----------L-              *  ARGPLACE  long  

Shuffled argument table:    rcx rdx 
ArgTable for 61.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 57.ADDR byref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 62.CNS_INT long (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]


fgMorphTree BB03, STMT00011 (after)
               [000064] -ACXG+------              *  ASG       ref   
               [000063] D----+-N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000061] --CXG+------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].InitializeTaskAsPromise
               [000057] -----+------ this in rcx     +--*  ADDR      byref 
               [000058] ----G+-N----                 |  \--*  LCL_VAR   ref   (AX) V06 tmp5         
               [000062] H----+------ arg1 in rdx     \--*  CNS_INT(h) long   0xd1ffab1e class

Morphing BB04 of 'HotkeyedMusicPlayer.ArgsTransport:ConsumeArgs():System.Threading.Tasks.Task`1[[System.String[], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'

fgMorphTree BB04, STMT00005 (before)
               [000029] --C---------              *  RETURN    ref   
               [000056] ------------              \--*  LCL_VAR   ref    V04 tmp3         

*************** Finishing PHASE Morph - Global
Trees after Morph - Global

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)-> BB04 ( cond )                     i label target hascall gcsafe 
BB03 [0004]  1       BB01                  0.50    [022..023)                                     i hascall gcsafe 
BB04 [0005]  2       BB01,BB03             1       [022..023)        (return)                     i label target 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..02F) -> BB04 (cond), preds={} succs={BB03,BB04}

***** BB01
STMT00006 (IL 0x000...  ???)
               [000069] -A---+------              *  ASG       ref   
               [000067] D------N----              +--*  LCL_VAR   ref    V08 tmp7         
               [000068] ------------              \--*  CNS_INT   ref    null

***** BB01
STMT00001 (IL   ???...  ???)
               [000072] -A---+------              *  ASG       ref   
               [000070] D------N----              +--*  LCL_VAR   ref   (AX) V06 tmp5         
               [000071] ------------              \--*  LCL_VAR   ref    V08 tmp7         

***** BB01
STMT00002 (IL 0x00C...0x00F)
               [000013] -A--G+------              *  ASG       int   
               [000012] D---G+-N----              +--*  LCL_VAR   int   (AX) V05 tmp4         
               [000011] -----+------              \--*  CNS_INT   int    -1

***** BB01
STMT00007 (IL 0x014...  ???)
               [000038] --CXG+------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
               [000036] -----+------ arg0 in rcx  \--*  ADDR      long  
               [000037] ----G+-N----                 \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24>(AX)(P) V00 loc0         
                                                     \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                     \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                     \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         

***** BB01
STMT00008 (IL 0x022...  ???)
               [000046] -A--G+------              *  ASG       ref   
               [000045] D----+-N----              +--*  LCL_VAR   ref    V03 tmp2         
               [000041] ----G+------              \--*  LCL_VAR   ref   (AX) V06 tmp5         

***** BB01
STMT00010 (IL 0x022...  ???)
               [000053] -A---+------              *  ASG       ref   
               [000052] D----+-N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000047] -----+------              \--*  LCL_VAR   ref    V03 tmp2         

***** BB01
STMT00009 (IL 0x022...  ???)
               [000051] -----+------              *  JTRUE     void  
               [000050] J----+-N----              \--*  NE        int   
               [000048] -----+------                 +--*  LCL_VAR   ref    V03 tmp2         
               [000049] -----+------                 \--*  CNS_INT   ref    null

------------ BB03 [022..023), preds={BB01} succs={BB04}

***** BB03
STMT00011 (IL 0x022...  ???)
               [000064] -ACXG+------              *  ASG       ref   
               [000063] D----+-N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000061] --CXG+------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].InitializeTaskAsPromise
               [000057] -----+------ this in rcx     +--*  ADDR      byref 
               [000058] ----G+-N----                 |  \--*  LCL_VAR   ref   (AX) V06 tmp5         
               [000062] H----+------ arg1 in rdx     \--*  CNS_INT(h) long   0xd1ffab1e class

------------ BB04 [022..023) (return), preds={BB01,BB03} succs={}

***** BB04
STMT00005 (IL   ???...  ???)
               [000029] -----+------              *  RETURN    ref   
               [000056] -----+------              \--*  LCL_VAR   ref    V04 tmp3         

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist

*************** Starting PHASE GS Cookie
No GS security needed

*************** Finishing PHASE GS Cookie

*************** Starting PHASE Compute edge weights (1, false)
*************** In fgComputeBlockAndEdgeWeights()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)-> BB04 ( cond )                     i label target hascall gcsafe 
BB03 [0004]  1       BB01                  0.50    [022..023)                                     i hascall gcsafe 
BB04 [0005]  2       BB01,BB03             1       [022..023)        (return)                     i label target 
-----------------------------------------------------------------------------------------------------------------------------------------

 -- no profile data, so using default called count
 -- not optimizing or no profile data, so not computing edge weights

*************** Finishing PHASE Compute edge weights (1, false)

*************** Starting PHASE Create EH funclets
*************** In fgCreateFunclets()

After fgCreateFunclets()
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)-> BB04 ( cond )                     i label target hascall gcsafe 
BB03 [0004]  1       BB01                  0.50    [022..023)                                     i hascall gcsafe 
BB04 [0005]  2       BB01,BB03             1       [022..023)        (return)                     i label target 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Create EH funclets

*************** Starting PHASE Optimize layout
*************** In optOptimizeLayout()

***************  Exception Handling table is empty
*************** In fgDebugCheckBBlist

*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)-> BB04 ( cond )                     i label target hascall gcsafe 
BB03 [0004]  1       BB01                  0.50    [022..023)                                     i hascall gcsafe 
BB04 [0005]  2       BB01,BB03             1       [022..023)        (return)                     i label target 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist

*************** In fgExpandRarelyRunBlocks()
*************** In fgReorderBlocks()

Initial BasicBlocks
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)-> BB04 ( cond )                     i label target hascall gcsafe 
BB03 [0004]  1       BB01                  0.50    [022..023)                                     i hascall gcsafe 
BB04 [0005]  2       BB01,BB03             1       [022..023)        (return)                     i label target 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)-> BB04 ( cond )                     i label target hascall gcsafe 
BB03 [0004]  1       BB01                  0.50    [022..023)                                     i hascall gcsafe 
BB04 [0005]  2       BB01,BB03             1       [022..023)        (return)                     i label target 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist

*************** Finishing PHASE Optimize layout

*************** Starting PHASE Compute blocks reachability
*************** In fgComputeReachability
*************** In fgDebugCheckBBlist

Renumbering the basic blocks for fgComputeReachability pass #1

*************** Before renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)-> BB04 ( cond )                     i label target hascall gcsafe 
BB03 [0004]  1       BB01                  0.50    [022..023)                                     i hascall gcsafe 
BB04 [0005]  2       BB01,BB03             1       [022..023)        (return)                     i label target 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
Renumber BB03 to BB02
Renumber BB04 to BB03

*************** After renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)-> BB03 ( cond )                     i label target hascall gcsafe 
BB02 [0004]  1       BB01                  0.50    [022..023)                                     i hascall gcsafe 
BB03 [0005]  2       BB01,BB02             1       [022..023)        (return)                     i label target 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty

New BlockSet epoch 3, # of blocks (including unused BB00): 4, bitset array size: 1 (short)
Enter blocks: BB01 

After computing reachability sets:
------------------------------------------------
BBnum  Reachable by 
------------------------------------------------
BB01 : BB01 
BB02 : BB01 BB02 
BB03 : BB01 BB02 BB03 

After computing reachability:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)-> BB03 ( cond )                     i label target hascall gcsafe 
BB02 [0004]  1       BB01                  0.50    [022..023)                                     i hascall gcsafe 
BB03 [0005]  2       BB01,BB02             1       [022..023)        (return)                     i label target gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist
*************** In fgComputeDoms
*************** In fgDebugCheckBBlist

Dominator computation start blocks (those blocks with no incoming edges):
BB01 
------------------------------------------------
BBnum  Dominated by
------------------------------------------------
BB01:  BB01 
BB02:  BB02 BB01 
BB03:  BB03 BB01 

Inside fgBuildDomTree

After computing the Dominance Tree:
BB01 : BB03 BB02 


After numbering the dominator tree:
BB01: pre=01, post=03
BB02: pre=03, post=02
BB03: pre=02, post=01

*************** Finishing PHASE Compute blocks reachability

*************** Starting PHASE Optimize loops
*************** In optOptimizeLoops()

After optSetBlockWeights:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)-> BB03 ( cond )                     i label target hascall gcsafe 
BB02 [0004]  1       BB01                  0.25    [022..023)                                     i hascall gcsafe 
BB03 [0005]  2       BB01,BB02             1       [022..023)        (return)                     i label target gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist

*************** Finishing PHASE Optimize loops

*************** Starting PHASE Clone loops

*************** In optCloneLoops()

*************** Finishing PHASE Clone loops

*************** Starting PHASE Unroll loops

*************** Finishing PHASE Unroll loops

*************** Starting PHASE Mark local vars

*************** In lvaMarkLocalVars()
*** lvaComputeRefCounts ***

*** lvaComputeRefCounts -- explicit counts ***

*** marking local variables in block BB01 (weight=1   )
STMT00006 (IL 0x000...  ???)
               [000069] -A---+------              *  ASG       ref   
               [000067] D------N----              +--*  LCL_VAR   ref    V08 tmp7         
               [000068] ------------              \--*  CNS_INT   ref    null
New refCnts for V08: refCnt =  1, refCntWtd = 1   
STMT00001 (IL   ???...  ???)
               [000072] -A---+------              *  ASG       ref   
               [000070] D------N----              +--*  LCL_VAR   ref   (AX) V06 tmp5         
               [000071] ------------              \--*  LCL_VAR   ref    V08 tmp7         
New refCnts for V00: refCnt =  1, refCntWtd = 1   
New refCnts for V06: refCnt =  1, refCntWtd = 1   
New refCnts for V08: refCnt =  2, refCntWtd = 2   
STMT00002 (IL 0x00C...0x00F)
               [000013] -A--G+------              *  ASG       int   
               [000012] D---G+-N----              +--*  LCL_VAR   int   (AX) V05 tmp4         
               [000011] -----+------              \--*  CNS_INT   int    -1
New refCnts for V00: refCnt =  2, refCntWtd = 2   
New refCnts for V05: refCnt =  1, refCntWtd = 1   
STMT00007 (IL 0x014...  ???)
               [000038] --CXG+------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
               [000036] -----+------ arg0 in rcx  \--*  ADDR      long  
               [000037] ----G+-N----                 \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24>(AX)(P) V00 loc0         
                                                     \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                     \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                     \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
New refCnts for V05: refCnt =  2, refCntWtd = 2   
New refCnts for V06: refCnt =  2, refCntWtd = 2   
New refCnts for V07: refCnt =  1, refCntWtd = 1   
New refCnts for V00: refCnt =  3, refCntWtd = 3   
STMT00008 (IL 0x022...  ???)
               [000046] -A--G+------              *  ASG       ref   
               [000045] D----+-N----              +--*  LCL_VAR   ref    V03 tmp2         
               [000041] ----G+------              \--*  LCL_VAR   ref   (AX) V06 tmp5         
New refCnts for V03: refCnt =  1, refCntWtd = 2   
New refCnts for V00: refCnt =  4, refCntWtd = 4   
New refCnts for V06: refCnt =  3, refCntWtd = 3   
STMT00010 (IL 0x022...  ???)
               [000053] -A---+------              *  ASG       ref   
               [000052] D----+-N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000047] -----+------              \--*  LCL_VAR   ref    V03 tmp2         
New refCnts for V04: refCnt =  1, refCntWtd = 1   
New refCnts for V03: refCnt =  2, refCntWtd = 4   
STMT00009 (IL 0x022...  ???)
               [000051] -----+------              *  JTRUE     void  
               [000050] J----+-N----              \--*  NE        int   
               [000048] -----+------                 +--*  LCL_VAR   ref    V03 tmp2         
               [000049] -----+------                 \--*  CNS_INT   ref    null
New refCnts for V03: refCnt =  3, refCntWtd = 6   

*** marking local variables in block BB02 (weight=0.25)
STMT00011 (IL 0x022...  ???)
               [000064] -ACXG+------              *  ASG       ref   
               [000063] D----+-N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000061] --CXG+------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].InitializeTaskAsPromise
               [000057] -----+------ this in rcx     +--*  ADDR      byref 
               [000058] ----G+-N----                 |  \--*  LCL_VAR   ref   (AX) V06 tmp5         
               [000062] H----+------ arg1 in rdx     \--*  CNS_INT(h) long   0xd1ffab1e class
New refCnts for V04: refCnt =  2, refCntWtd = 1.25
New refCnts for V00: refCnt =  5, refCntWtd = 4.25
New refCnts for V06: refCnt =  4, refCntWtd = 3.25

*** marking local variables in block BB03 (weight=1   )
STMT00005 (IL   ???...  ???)
               [000029] -----+------              *  RETURN    ref   
               [000056] -----+------              \--*  LCL_VAR   ref    V04 tmp3         
New refCnts for V04: refCnt =  3, refCntWtd = 2.25

*** lvaComputeRefCounts -- implicit counts ***

*************** In optAddCopies()


*************** Finishing PHASE Mark local vars

*************** Starting PHASE Optimize bools
*************** In optOptimizeBools()
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Optimize bools

*************** Starting PHASE Find oper order
*************** In fgFindOperOrder()

*************** Finishing PHASE Find oper order

*************** Starting PHASE Set block order
*************** In fgSetBlockOrder()
The biggest BB has    8 tree nodes

*************** Finishing PHASE Set block order
Trees before Build SSA representation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)-> BB03 ( cond )                     i label target hascall gcsafe 
BB02 [0004]  1       BB01                  0.25    [022..023)                                     i hascall gcsafe 
BB03 [0005]  2       BB01,BB02             1       [022..023)        (return)                     i label target gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..02F) -> BB03 (cond), preds={} succs={BB02,BB03}

***** BB01
STMT00006 (IL 0x000...  ???)
N003 (  5,  4) [000069] -A------R---              *  ASG       ref   
N002 (  3,  2) [000067] D------N----              +--*  LCL_VAR   ref    V08 tmp7         
N001 (  1,  1) [000068] ------------              \--*  CNS_INT   ref    null

***** BB01
STMT00001 (IL   ???...  ???)
N003 (  7,  5) [000072] -A------R---              *  ASG       ref   
N002 (  3,  2) [000070] D------N----              +--*  LCL_VAR   ref   (AX) V06 tmp5         
N001 (  3,  2) [000071] ------------              \--*  LCL_VAR   ref    V08 tmp7         

***** BB01
STMT00002 (IL 0x00C...0x00F)
N003 (  5,  4) [000013] -A--G---R---              *  ASG       int   
N002 (  3,  2) [000012] D---G--N----              +--*  LCL_VAR   int   (AX) V05 tmp4         
N001 (  1,  1) [000011] ------------              \--*  CNS_INT   int    -1

***** BB01
STMT00007 (IL 0x014...  ???)
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
N003 (  3,  3) [000036] ------------ arg0 in rcx  \--*  ADDR      long  
N002 (  3,  2) [000037] ----G--N----                 \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24>(AX)(P) V00 loc0         
                                                     \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                     \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                     \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         

***** BB01
STMT00008 (IL 0x022...  ???)
N003 (  3,  3) [000046] -A--G---R---              *  ASG       ref   
N002 (  1,  1) [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         
N001 (  3,  2) [000041] ----G-------              \--*  LCL_VAR   ref   (AX) V06 tmp5         

***** BB01
STMT00010 (IL 0x022...  ???)
N003 (  5,  4) [000053] -A------R---              *  ASG       ref   
N002 (  3,  2) [000052] D------N----              +--*  LCL_VAR   ref    V04 tmp3         
N001 (  1,  1) [000047] ------------              \--*  LCL_VAR   ref    V03 tmp2         

***** BB01
STMT00009 (IL 0x022...  ???)
N004 (  5,  5) [000051] ------------              *  JTRUE     void  
N003 (  3,  3) [000050] J------N----              \--*  NE        int   
N001 (  1,  1) [000048] ------------                 +--*  LCL_VAR   ref    V03 tmp2         
N002 (  1,  1) [000049] ------------                 \--*  CNS_INT   ref    null

------------ BB02 [022..023), preds={BB01} succs={BB03}

***** BB02
STMT00011 (IL 0x022...  ???)
N008 ( 23, 24) [000064] -ACXG---R---              *  ASG       ref   
N007 (  3,  2) [000063] D------N----              +--*  LCL_VAR   ref    V04 tmp3         
N006 ( 19, 21) [000061] --CXG-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].InitializeTaskAsPromise
N004 (  3,  3) [000057] ------------ this in rcx     +--*  ADDR      byref 
N003 (  3,  2) [000058] ----G--N----                 |  \--*  LCL_VAR   ref   (AX) V06 tmp5         
N005 (  2, 10) [000062] H----------- arg1 in rdx     \--*  CNS_INT(h) long   0xd1ffab1e class

------------ BB03 [022..023) (return), preds={BB01,BB02} succs={}

***** BB03
STMT00005 (IL   ???...  ???)
N002 (  4,  3) [000029] ------------              *  RETURN    ref   
N001 (  3,  2) [000056] ------------              \--*  LCL_VAR   ref    V04 tmp3         

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Build SSA representation
*************** In SsaBuilder::Build()
[SsaBuilder] Max block count is 4.

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)-> BB03 ( cond )                     i label target hascall gcsafe 
BB02 [0004]  1       BB01                  0.25    [022..023)                                     i hascall gcsafe 
BB03 [0005]  2       BB01,BB02             1       [022..023)        (return)                     i label target gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
[SsaBuilder] Topologically sorted the graph.
[SsaBuilder::ComputeImmediateDom]

Inside fgBuildDomTree

After computing the Dominance Tree:
BB01 : BB03 BB02 

*************** In fgLocalVarLiveness()
In fgLocalVarLivenessInit
Tracked variable (3 out of 9) table:
V03 tmp2          [   ref]: refCnt =    3, refCntWtd =   6   
V04 tmp3          [   ref]: refCnt =    3, refCntWtd =   2.25
V08 tmp7          [   ref]: refCnt =    2, refCntWtd =   2   

*************** In fgPerBlockLocalVarLiveness()
BB01 USE(0)={           } + ByrefExposed + GcHeap
     DEF(3)={V03 V04 V08} + ByrefExposed* + GcHeap*

BB02 USE(0)={   } + ByrefExposed + GcHeap
     DEF(1)={V04} + ByrefExposed* + GcHeap*

BB03 USE(1)={V04}
     DEF(0)={   }

** Memory liveness computed, GcHeap states and ByrefExposed states diverge
*************** In fgInterBlockLocalVarLiveness()

BB liveness after fgLiveVarAnalysis():

BB01 IN (0)={   } + ByrefExposed + GcHeap
     OUT(1)={V04} + ByrefExposed + GcHeap

BB02 IN (0)={   } + ByrefExposed + GcHeap
     OUT(1)={V04}

BB03 IN (1)={V04}
     OUT(0)={   }

*************** In optRemoveRedundantZeroInits()
*************** In SsaBuilder::InsertPhiFunctions()
Inserting phi functions:
Added PHI definition for V04 at start of BB03.
*************** In SsaBuilder::RenameVariables()

After fgSsaBuild:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)-> BB03 ( cond )                     i label target hascall gcsafe 
BB02 [0004]  1       BB01                  0.25    [022..023)                                     i hascall gcsafe 
BB03 [0005]  2       BB01,BB02             1       [022..023)        (return)                     i label target gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..02F) -> BB03 (cond), preds={} succs={BB02,BB03}

***** BB01
STMT00006 (IL 0x000...  ???)
N003 (  5,  4) [000069] -A------R---              *  ASG       ref   
N002 (  3,  2) [000067] D------N----              +--*  LCL_VAR   ref    V08 tmp7         d:2
N001 (  1,  1) [000068] ------------              \--*  CNS_INT   ref    null

***** BB01
STMT00001 (IL   ???...  ???)
N003 (  7,  5) [000072] -A------R---              *  ASG       ref   
N002 (  3,  2) [000070] D------N----              +--*  LCL_VAR   ref   (AX) V06 tmp5         
N001 (  3,  2) [000071] ------------              \--*  LCL_VAR   ref    V08 tmp7         u:2 (last use)

***** BB01
STMT00002 (IL 0x00C...0x00F)
N003 (  5,  4) [000013] -A--G---R---              *  ASG       int   
N002 (  3,  2) [000012] D---G--N----              +--*  LCL_VAR   int   (AX) V05 tmp4         
N001 (  1,  1) [000011] ------------              \--*  CNS_INT   int    -1

***** BB01
STMT00007 (IL 0x014...  ???)
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
N003 (  3,  3) [000036] ------------ arg0 in rcx  \--*  ADDR      long  
N002 (  3,  2) [000037] ----G--N----                 \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24>(AX)(P) V00 loc0         
                                                     \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                     \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                     \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         

***** BB01
STMT00008 (IL 0x022...  ???)
N003 (  3,  3) [000046] -A--G---R---              *  ASG       ref   
N002 (  1,  1) [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         d:2
N001 (  3,  2) [000041] ----G-------              \--*  LCL_VAR   ref   (AX) V06 tmp5         

***** BB01
STMT00010 (IL 0x022...  ???)
N003 (  5,  4) [000053] -A------R---              *  ASG       ref   
N002 (  3,  2) [000052] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:2
N001 (  1,  1) [000047] ------------              \--*  LCL_VAR   ref    V03 tmp2         u:2

***** BB01
STMT00009 (IL 0x022...  ???)
N004 (  5,  5) [000051] ------------              *  JTRUE     void  
N003 (  3,  3) [000050] J------N----              \--*  NE        int   
N001 (  1,  1) [000048] ------------                 +--*  LCL_VAR   ref    V03 tmp2         u:2 (last use)
N002 (  1,  1) [000049] ------------                 \--*  CNS_INT   ref    null

------------ BB02 [022..023), preds={BB01} succs={BB03}

***** BB02
STMT00011 (IL 0x022...  ???)
N008 ( 23, 24) [000064] -ACXG---R---              *  ASG       ref   
N007 (  3,  2) [000063] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:4
N006 ( 19, 21) [000061] --CXG-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].InitializeTaskAsPromise
N004 (  3,  3) [000057] ------------ this in rcx     +--*  ADDR      byref 
N003 (  3,  2) [000058] ----G--N----                 |  \--*  LCL_VAR   ref   (AX) V06 tmp5         
N005 (  2, 10) [000062] H----------- arg1 in rdx     \--*  CNS_INT(h) long   0xd1ffab1e class

------------ BB03 [022..023) (return), preds={BB01,BB02} succs={}

***** BB03
STMT00012 (IL   ???...  ???)
N005 (  0,  0) [000078] -A------R---              *  ASG       ref   
N004 (  0,  0) [000076] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:3
N003 (  0,  0) [000077] ------------              \--*  PHI       ref   
N001 (  0,  0) [000080] ------------ pred BB02       +--*  PHI_ARG   ref    V04 tmp3         u:4
N002 (  0,  0) [000079] ------------ pred BB01       \--*  PHI_ARG   ref    V04 tmp3         u:2

***** BB03
STMT00005 (IL   ???...  ???)
N002 (  4,  3) [000029] ------------              *  RETURN    ref   
N001 (  3,  2) [000056] ------------              \--*  LCL_VAR   ref    V04 tmp3         u:3 (last use)

-------------------------------------------------------------------------------------------------------------------

*************** Finishing PHASE Build SSA representation
Trees after Build SSA representation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)-> BB03 ( cond )                     i label target hascall gcsafe 
BB02 [0004]  1       BB01                  0.25    [022..023)                                     i hascall gcsafe 
BB03 [0005]  2       BB01,BB02             1       [022..023)        (return)                     i label target gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..02F) -> BB03 (cond), preds={} succs={BB02,BB03}

***** BB01
STMT00006 (IL 0x000...  ???)
N003 (  5,  4) [000069] -A------R---              *  ASG       ref   
N002 (  3,  2) [000067] D------N----              +--*  LCL_VAR   ref    V08 tmp7         d:2
N001 (  1,  1) [000068] ------------              \--*  CNS_INT   ref    null

***** BB01
STMT00001 (IL   ???...  ???)
N003 (  7,  5) [000072] -A------R---              *  ASG       ref   
N002 (  3,  2) [000070] D------N----              +--*  LCL_VAR   ref   (AX) V06 tmp5         
N001 (  3,  2) [000071] ------------              \--*  LCL_VAR   ref    V08 tmp7         u:2 (last use)

***** BB01
STMT00002 (IL 0x00C...0x00F)
N003 (  5,  4) [000013] -A--G---R---              *  ASG       int   
N002 (  3,  2) [000012] D---G--N----              +--*  LCL_VAR   int   (AX) V05 tmp4         
N001 (  1,  1) [000011] ------------              \--*  CNS_INT   int    -1

***** BB01
STMT00007 (IL 0x014...  ???)
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
N003 (  3,  3) [000036] ------------ arg0 in rcx  \--*  ADDR      long  
N002 (  3,  2) [000037] ----G--N----                 \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24>(AX)(P) V00 loc0         
                                                     \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                     \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                     \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         

***** BB01
STMT00008 (IL 0x022...  ???)
N003 (  3,  3) [000046] -A--G---R---              *  ASG       ref   
N002 (  1,  1) [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         d:2
N001 (  3,  2) [000041] ----G-------              \--*  LCL_VAR   ref   (AX) V06 tmp5         

***** BB01
STMT00010 (IL 0x022...  ???)
N003 (  5,  4) [000053] -A------R---              *  ASG       ref   
N002 (  3,  2) [000052] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:2
N001 (  1,  1) [000047] ------------              \--*  LCL_VAR   ref    V03 tmp2         u:2

***** BB01
STMT00009 (IL 0x022...  ???)
N004 (  5,  5) [000051] ------------              *  JTRUE     void  
N003 (  3,  3) [000050] J------N----              \--*  NE        int   
N001 (  1,  1) [000048] ------------                 +--*  LCL_VAR   ref    V03 tmp2         u:2 (last use)
N002 (  1,  1) [000049] ------------                 \--*  CNS_INT   ref    null

------------ BB02 [022..023), preds={BB01} succs={BB03}

***** BB02
STMT00011 (IL 0x022...  ???)
N008 ( 23, 24) [000064] -ACXG---R---              *  ASG       ref   
N007 (  3,  2) [000063] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:4
N006 ( 19, 21) [000061] --CXG-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].InitializeTaskAsPromise
N004 (  3,  3) [000057] ------------ this in rcx     +--*  ADDR      byref 
N003 (  3,  2) [000058] ----G--N----                 |  \--*  LCL_VAR   ref   (AX) V06 tmp5         
N005 (  2, 10) [000062] H----------- arg1 in rdx     \--*  CNS_INT(h) long   0xd1ffab1e class

------------ BB03 [022..023) (return), preds={BB01,BB02} succs={}

***** BB03
STMT00012 (IL   ???...  ???)
N005 (  0,  0) [000078] -A------R---              *  ASG       ref   
N004 (  0,  0) [000076] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:3
N003 (  0,  0) [000077] ------------              \--*  PHI       ref   
N001 (  0,  0) [000080] ------------ pred BB02       +--*  PHI_ARG   ref    V04 tmp3         u:4
N002 (  0,  0) [000079] ------------ pred BB01       \--*  PHI_ARG   ref    V04 tmp3         u:2

***** BB03
STMT00005 (IL   ???...  ???)
N002 (  4,  3) [000029] ------------              *  RETURN    ref   
N001 (  3,  2) [000056] ------------              \--*  LCL_VAR   ref    V04 tmp3         u:3 (last use)

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist

*************** Starting PHASE Early Value Propagation
*************** In optEarlyProp()

After optEarlyProp:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)-> BB03 ( cond )                     i label target hascall gcsafe 
BB02 [0004]  1       BB01                  0.25    [022..023)                                     i hascall gcsafe 
BB03 [0005]  2       BB01,BB02             1       [022..023)        (return)                     i label target gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..02F) -> BB03 (cond), preds={} succs={BB02,BB03}

***** BB01
STMT00006 (IL 0x000...  ???)
N003 (  5,  4) [000069] -A------R---              *  ASG       ref   
N002 (  3,  2) [000067] D------N----              +--*  LCL_VAR   ref    V08 tmp7         d:2
N001 (  1,  1) [000068] ------------              \--*  CNS_INT   ref    null

***** BB01
STMT00001 (IL   ???...  ???)
N003 (  7,  5) [000072] -A------R---              *  ASG       ref   
N002 (  3,  2) [000070] D------N----              +--*  LCL_VAR   ref   (AX) V06 tmp5         
N001 (  3,  2) [000071] ------------              \--*  LCL_VAR   ref    V08 tmp7         u:2 (last use)

***** BB01
STMT00002 (IL 0x00C...0x00F)
N003 (  5,  4) [000013] -A--G---R---              *  ASG       int   
N002 (  3,  2) [000012] D---G--N----              +--*  LCL_VAR   int   (AX) V05 tmp4         
N001 (  1,  1) [000011] ------------              \--*  CNS_INT   int    -1

***** BB01
STMT00007 (IL 0x014...  ???)
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
N003 (  3,  3) [000036] ------------ arg0 in rcx  \--*  ADDR      long  
N002 (  3,  2) [000037] ----G--N----                 \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24>(AX)(P) V00 loc0         
                                                     \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                     \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                     \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         

***** BB01
STMT00008 (IL 0x022...  ???)
N003 (  3,  3) [000046] -A--G---R---              *  ASG       ref   
N002 (  1,  1) [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         d:2
N001 (  3,  2) [000041] ----G-------              \--*  LCL_VAR   ref   (AX) V06 tmp5         

***** BB01
STMT00010 (IL 0x022...  ???)
N003 (  5,  4) [000053] -A------R---              *  ASG       ref   
N002 (  3,  2) [000052] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:2
N001 (  1,  1) [000047] ------------              \--*  LCL_VAR   ref    V03 tmp2         u:2

***** BB01
STMT00009 (IL 0x022...  ???)
N004 (  5,  5) [000051] ------------              *  JTRUE     void  
N003 (  3,  3) [000050] J------N----              \--*  NE        int   
N001 (  1,  1) [000048] ------------                 +--*  LCL_VAR   ref    V03 tmp2         u:2 (last use)
N002 (  1,  1) [000049] ------------                 \--*  CNS_INT   ref    null

------------ BB02 [022..023), preds={BB01} succs={BB03}

***** BB02
STMT00011 (IL 0x022...  ???)
N008 ( 23, 24) [000064] -ACXG---R---              *  ASG       ref   
N007 (  3,  2) [000063] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:4
N006 ( 19, 21) [000061] --CXG-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].InitializeTaskAsPromise
N004 (  3,  3) [000057] ------------ this in rcx     +--*  ADDR      byref 
N003 (  3,  2) [000058] ----G--N----                 |  \--*  LCL_VAR   ref   (AX) V06 tmp5         
N005 (  2, 10) [000062] H----------- arg1 in rdx     \--*  CNS_INT(h) long   0xd1ffab1e class

------------ BB03 [022..023) (return), preds={BB01,BB02} succs={}

***** BB03
STMT00012 (IL   ???...  ???)
N005 (  0,  0) [000078] -A------R---              *  ASG       ref   
N004 (  0,  0) [000076] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:3
N003 (  0,  0) [000077] ------------              \--*  PHI       ref   
N001 (  0,  0) [000080] ------------ pred BB02       +--*  PHI_ARG   ref    V04 tmp3         u:4
N002 (  0,  0) [000079] ------------ pred BB01       \--*  PHI_ARG   ref    V04 tmp3         u:2

***** BB03
STMT00005 (IL   ???...  ???)
N002 (  4,  3) [000029] ------------              *  RETURN    ref   
N001 (  3,  2) [000056] ------------              \--*  LCL_VAR   ref    V04 tmp3         u:3 (last use)

-------------------------------------------------------------------------------------------------------------------

*************** Finishing PHASE Early Value Propagation

*************** Starting PHASE Do value numbering

*************** In fgValueNumber()
Memory Initial Value in BB01 is: $80
The SSA definition for ByrefExposed (#1) at start of BB01 is $80 {InitVal($40)}
The SSA definition for GcHeap (#1) at start of BB01 is $80 {InitVal($40)}

***** BB01, STMT00006(before)
N003 (  5,  4) [000069] -A------R---              *  ASG       ref   
N002 (  3,  2) [000067] D------N----              +--*  LCL_VAR   ref    V08 tmp7         d:2
N001 (  1,  1) [000068] ------------              \--*  CNS_INT   ref    null

N001 [000068]   CNS_INT   null => $VN.Null
N002 [000067]   LCL_VAR   V08 tmp7         d:2 => $VN.Null
N003 [000069]   ASG       => $VN.Null

***** BB01, STMT00006(after)
N003 (  5,  4) [000069] -A------R---              *  ASG       ref    $VN.Null
N002 (  3,  2) [000067] D------N----              +--*  LCL_VAR   ref    V08 tmp7         d:2 $VN.Null
N001 (  1,  1) [000068] ------------              \--*  CNS_INT   ref    null $VN.Null

---------

***** BB01, STMT00001(before)
N003 (  7,  5) [000072] -A------R---              *  ASG       ref   
N002 (  3,  2) [000070] D------N----              +--*  LCL_VAR   ref   (AX) V06 tmp5         
N001 (  3,  2) [000071] ------------              \--*  LCL_VAR   ref    V08 tmp7         u:2 (last use)

N001 [000071]   LCL_VAR   V08 tmp7         u:2 (last use) => $VN.Null
  fgCurMemoryVN[ByrefExposed] assigned for local assign at [000072] to VN: $100.
N003 [000072]   ASG       => $VN.Null

***** BB01, STMT00001(after)
N003 (  7,  5) [000072] -A------R---              *  ASG       ref    $VN.Null
N002 (  3,  2) [000070] D------N----              +--*  LCL_VAR   ref   (AX) V06 tmp5         
N001 (  3,  2) [000071] ------------              \--*  LCL_VAR   ref    V08 tmp7         u:2 (last use) $VN.Null

---------

***** BB01, STMT00002(before)
N003 (  5,  4) [000013] -A--G---R---              *  ASG       int   
N002 (  3,  2) [000012] D---G--N----              +--*  LCL_VAR   int   (AX) V05 tmp4         
N001 (  1,  1) [000011] ------------              \--*  CNS_INT   int    -1

N001 [000011]   CNS_INT   -1 => $40 {IntCns -1}
  fgCurMemoryVN[ByrefExposed] assigned for local assign at [000013] to VN: $101.
N003 [000013]   ASG       => $40 {IntCns -1}

***** BB01, STMT00002(after)
N003 (  5,  4) [000013] -A--G---R---              *  ASG       int    $40
N002 (  3,  2) [000012] D---G--N----              +--*  LCL_VAR   int   (AX) V05 tmp4         
N001 (  1,  1) [000011] ------------              \--*  CNS_INT   int    -1 $40

---------

***** BB01, STMT00007(before)
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
N003 (  3,  3) [000036] ------------ arg0 in rcx  \--*  ADDR      long  
N002 (  3,  2) [000037] ----G--N----                 \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24>(AX)(P) V00 loc0         
                                                     \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                     \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                     \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         

N001 [000073]   ARGPLACE  => $140 {140}
N002 [000037]   LCL_VAR   V00 loc0         
                                                      int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                      ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                      ref    V00.<>u__1 (offs=0x10) -> V07 tmp6          => $1c0 {1c0}
N003 [000036]   ADDR      => $200 {200}
VN of ARGPLACE tree [000073] updated to $200 {200}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000038] to VN: $c1.
N004 [000038]   CALL      => $VN.Void

***** BB01, STMT00007(after)
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void
N003 (  3,  3) [000036] ------------ arg0 in rcx  \--*  ADDR      long   $200
N002 (  3,  2) [000037] ----G--N----                 \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24>(AX)(P) V00 loc0         
                                                     \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                     \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                     \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6          $1c0

---------

***** BB01, STMT00008(before)
N003 (  3,  3) [000046] -A--G---R---              *  ASG       ref   
N002 (  1,  1) [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         d:2
N001 (  3,  2) [000041] ----G-------              \--*  LCL_VAR   ref   (AX) V06 tmp5         

N001 [000041]   LCL_VAR   V06 tmp5          => $240 {ByrefExposedLoad($43, $181, $102)}
N002 [000045]   LCL_VAR   V03 tmp2         d:2 => $240 {ByrefExposedLoad($43, $181, $102)}
N003 [000046]   ASG       => $240 {ByrefExposedLoad($43, $181, $102)}

***** BB01, STMT00008(after)
N003 (  3,  3) [000046] -A--G---R---              *  ASG       ref    $240
N002 (  1,  1) [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         d:2 $240
N001 (  3,  2) [000041] ----G-------              \--*  LCL_VAR   ref   (AX) V06 tmp5          $240

---------

***** BB01, STMT00010(before)
N003 (  5,  4) [000053] -A------R---              *  ASG       ref   
N002 (  3,  2) [000052] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:2
N001 (  1,  1) [000047] ------------              \--*  LCL_VAR   ref    V03 tmp2         u:2

N001 [000047]   LCL_VAR   V03 tmp2         u:2 => $240 {ByrefExposedLoad($43, $181, $102)}
N002 [000052]   LCL_VAR   V04 tmp3         d:2 => $240 {ByrefExposedLoad($43, $181, $102)}
N003 [000053]   ASG       => $240 {ByrefExposedLoad($43, $181, $102)}

***** BB01, STMT00010(after)
N003 (  5,  4) [000053] -A------R---              *  ASG       ref    $240
N002 (  3,  2) [000052] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:2 $240
N001 (  1,  1) [000047] ------------              \--*  LCL_VAR   ref    V03 tmp2         u:2 $240

---------

***** BB01, STMT00009(before)
N004 (  5,  5) [000051] ------------              *  JTRUE     void  
N003 (  3,  3) [000050] J------N----              \--*  NE        int   
N001 (  1,  1) [000048] ------------                 +--*  LCL_VAR   ref    V03 tmp2         u:2 (last use)
N002 (  1,  1) [000049] ------------                 \--*  CNS_INT   ref    null

N001 [000048]   LCL_VAR   V03 tmp2         u:2 (last use) => $240 {ByrefExposedLoad($43, $181, $102)}
N002 [000049]   CNS_INT   null => $VN.Null
N003 [000050]   NE        => $280 {NE($240, $0)}

***** BB01, STMT00009(after)
N004 (  5,  5) [000051] ------------              *  JTRUE     void  
N003 (  3,  3) [000050] J------N----              \--*  NE        int    $280
N001 (  1,  1) [000048] ------------                 +--*  LCL_VAR   ref    V03 tmp2         u:2 (last use) $240
N002 (  1,  1) [000049] ------------                 \--*  CNS_INT   ref    null $VN.Null

finish(BB01).
   Succ(BB02).
     Not yet completed.
     All preds complete, adding to allDone.
   Succ(BB03).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
       Was necessary.
The SSA definition for ByrefExposed (#2) at start of BB02 is $102 {102}
The SSA definition for GcHeap (#3) at start of BB02 is $c1 {c1}

***** BB02, STMT00011(before)
N008 ( 23, 24) [000064] -ACXG---R---              *  ASG       ref   
N007 (  3,  2) [000063] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:4
N006 ( 19, 21) [000061] --CXG-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].InitializeTaskAsPromise
N004 (  3,  3) [000057] ------------ this in rcx     +--*  ADDR      byref 
N003 (  3,  2) [000058] ----G--N----                 |  \--*  LCL_VAR   ref   (AX) V06 tmp5         
N005 (  2, 10) [000062] H----------- arg1 in rdx     \--*  CNS_INT(h) long   0xd1ffab1e class

N001 [000074]   ARGPLACE  => $201 {201}
N002 [000075]   ARGPLACE  => $141 {141}
N003 [000058]   LCL_VAR   V06 tmp5          => $240 {ByrefExposedLoad($43, $181, $102)}
N004 [000057]   ADDR      => $202 {202}
N005 [000062]   CNS_INT(h) 0xd1ffab1e class => $2c0 {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000075] updated to $202 {202}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000061] to VN: $c5.
N006 [000061]   CALL      => $c4 {c4}
N007 [000063]   LCL_VAR   V04 tmp3         d:4 => $c4 {c4}
N008 [000064]   ASG       => $c4 {c4}

***** BB02, STMT00011(after)
N008 ( 23, 24) [000064] -ACXG---R---              *  ASG       ref    $c4
N007 (  3,  2) [000063] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:4 $c4
N006 ( 19, 21) [000061] --CXG-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].InitializeTaskAsPromise $c4
N004 (  3,  3) [000057] ------------ this in rcx     +--*  ADDR      byref  $202
N003 (  3,  2) [000058] ----G--N----                 |  \--*  LCL_VAR   ref   (AX) V06 tmp5          $240
N005 (  2, 10) [000062] H----------- arg1 in rdx     \--*  CNS_INT(h) long   0xd1ffab1e class $2c0

finish(BB02).
   Succ(BB03).
     Not yet completed.
     All preds complete, adding to allDone.
SSA PHI definition: set VN of local 4/3 to $241 {PhiDef($4, $3, $300)} .
The SSA definition for ByrefExposed (#2) at start of BB03 is $102 {102}
The SSA definition for GcHeap (#3) at start of BB03 is $c1 {c1}

***** BB03, STMT00005(before)
N002 (  4,  3) [000029] ------------              *  RETURN    ref   
N001 (  3,  2) [000056] ------------              \--*  LCL_VAR   ref    V04 tmp3         u:3 (last use)

N001 [000056]   LCL_VAR   V04 tmp3         u:3 (last use) => $241 {PhiDef($4, $3, $300)}
N002 [000029]   RETURN    => $c7 {c7}

***** BB03, STMT00005(after)
N002 (  4,  3) [000029] ------------              *  RETURN    ref    $c7
N001 (  3,  2) [000056] ------------              \--*  LCL_VAR   ref    V04 tmp3         u:3 (last use) $241

finish(BB03).

*************** Finishing PHASE Do value numbering

*************** Starting PHASE Hoist loop code

*************** Finishing PHASE Hoist loop code

*************** Starting PHASE VN based copy prop
*************** In optVnCopyProp()
Copy Assertion for BB01
  curSsaName stack: { }

							Live vars: {} => {V08}
							Live vars: {V08} => {}
							Live vars: {} => {V03}
							Live vars: {V03} => {V03 V04}
							Live vars: {V03 V04} => {V04}
VN based copy assertion for [000048] V03 @00000240 by [000052] V04 @00000240.
N001 (  1,  1) [000048] ------------              *  LCL_VAR   ref    V03 tmp2         u:2 (last use) $240
copy propagated to:
N001 (  1,  1) [000048] ------------              *  LCL_VAR   ref    V04 tmp3         u:2 (last use) $240
Copy Assertion for BB03
  curSsaName stack: { 3-[000045]:V03 4-[000052]:V04 8-[000067]:V08 }

							Live vars: {V04} => {}
Copy Assertion for BB02
  curSsaName stack: { 3-[000045]:V03 4-[000052]:V04 8-[000067]:V08 }

							Live vars: {} => {V04}

*************** Finishing PHASE VN based copy prop

*************** Starting PHASE Optimize Valnum CSEs

*************** In optOptimizeCSEs()
Blocks/Trees at start of optOptimizeCSE phase

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)-> BB03 ( cond )                     i label target hascall gcsafe 
BB02 [0004]  1       BB01                  0.25    [022..023)                                     i hascall gcsafe 
BB03 [0005]  2       BB01,BB02             1       [022..023)        (return)                     i label target gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..02F) -> BB03 (cond), preds={} succs={BB02,BB03}

***** BB01
STMT00006 (IL 0x000...  ???)
N003 (  5,  4) [000069] -A------R---              *  ASG       ref    $VN.Null
N002 (  3,  2) [000067] D------N----              +--*  LCL_VAR   ref    V08 tmp7         d:2 $VN.Null
N001 (  1,  1) [000068] ------------              \--*  CNS_INT   ref    null $VN.Null

***** BB01
STMT00001 (IL   ???...  ???)
N003 (  7,  5) [000072] -A------R---              *  ASG       ref    $VN.Null
N002 (  3,  2) [000070] D------N----              +--*  LCL_VAR   ref   (AX) V06 tmp5         
N001 (  3,  2) [000071] ------------              \--*  LCL_VAR   ref    V08 tmp7         u:2 (last use) $VN.Null

***** BB01
STMT00002 (IL 0x00C...0x00F)
N003 (  5,  4) [000013] -A--G---R---              *  ASG       int    $40
N002 (  3,  2) [000012] D---G--N----              +--*  LCL_VAR   int   (AX) V05 tmp4         
N001 (  1,  1) [000011] ------------              \--*  CNS_INT   int    -1 $40

***** BB01
STMT00007 (IL 0x014...  ???)
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void
N003 (  3,  3) [000036] ------------ arg0 in rcx  \--*  ADDR      long   $200
N002 (  3,  2) [000037] ----G--N----                 \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24>(AX)(P) V00 loc0         
                                                     \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                     \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                     \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6          $1c0

***** BB01
STMT00008 (IL 0x022...  ???)
N003 (  3,  3) [000046] -A--G---R---              *  ASG       ref    $240
N002 (  1,  1) [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         d:2 $240
N001 (  3,  2) [000041] ----G-------              \--*  LCL_VAR   ref   (AX) V06 tmp5          $240

***** BB01
STMT00010 (IL 0x022...  ???)
N003 (  5,  4) [000053] -A------R---              *  ASG       ref    $240
N002 (  3,  2) [000052] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:2 $240
N001 (  1,  1) [000047] ------------              \--*  LCL_VAR   ref    V03 tmp2         u:2 $240

***** BB01
STMT00009 (IL 0x022...  ???)
N004 (  5,  5) [000051] ------------              *  JTRUE     void  
N003 (  3,  3) [000050] J------N----              \--*  NE        int    $280
N001 (  1,  1) [000048] ------------                 +--*  LCL_VAR   ref    V04 tmp3         u:2 (last use) $240
N002 (  1,  1) [000049] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB02 [022..023), preds={BB01} succs={BB03}

***** BB02
STMT00011 (IL 0x022...  ???)
N008 ( 23, 24) [000064] -ACXG---R---              *  ASG       ref    $c4
N007 (  3,  2) [000063] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:4 $c4
N006 ( 19, 21) [000061] --CXG-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].InitializeTaskAsPromise $c4
N004 (  3,  3) [000057] ------------ this in rcx     +--*  ADDR      byref  $202
N003 (  3,  2) [000058] ----G--N----                 |  \--*  LCL_VAR   ref   (AX) V06 tmp5          $240
N005 (  2, 10) [000062] H----------- arg1 in rdx     \--*  CNS_INT(h) long   0xd1ffab1e class $2c0

------------ BB03 [022..023) (return), preds={BB01,BB02} succs={}

***** BB03
STMT00012 (IL   ???...  ???)
N005 (  0,  0) [000078] -A------R---              *  ASG       ref   
N004 (  0,  0) [000076] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:3
N003 (  0,  0) [000077] ------------              \--*  PHI       ref   
N001 (  0,  0) [000080] ------------ pred BB02       +--*  PHI_ARG   ref    V04 tmp3         u:4 $c4
N002 (  0,  0) [000079] ------------ pred BB01       \--*  PHI_ARG   ref    V04 tmp3         u:2 $240

***** BB03
STMT00005 (IL   ???...  ???)
N002 (  4,  3) [000029] ------------              *  RETURN    ref    $c7
N001 (  3,  2) [000056] ------------              \--*  LCL_VAR   ref    V04 tmp3         u:3 (last use) $241

-------------------------------------------------------------------------------------------------------------------

*************** In optOptimizeValnumCSEs()

*************** Finishing PHASE Optimize Valnum CSEs

*************** Starting PHASE Assertion prop
*************** In optAssertionPropMain()
Blocks/Trees at start of phase

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)-> BB03 ( cond )                     i label target hascall gcsafe 
BB02 [0004]  1       BB01                  0.25    [022..023)                                     i hascall gcsafe 
BB03 [0005]  2       BB01,BB02             1       [022..023)        (return)                     i label target gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..02F) -> BB03 (cond), preds={} succs={BB02,BB03}

***** BB01
STMT00006 (IL 0x000...  ???)
N003 (  5,  4) [000069] -A------R---              *  ASG       ref    $VN.Null
N002 (  3,  2) [000067] D------N----              +--*  LCL_VAR   ref    V08 tmp7         d:2 $VN.Null
N001 (  1,  1) [000068] ------------              \--*  CNS_INT   ref    null $VN.Null

***** BB01
STMT00001 (IL   ???...  ???)
N003 (  7,  5) [000072] -A------R---              *  ASG       ref    $VN.Null
N002 (  3,  2) [000070] D------N----              +--*  LCL_VAR   ref   (AX) V06 tmp5         
N001 (  3,  2) [000071] ------------              \--*  LCL_VAR   ref    V08 tmp7         u:2 (last use) $VN.Null

***** BB01
STMT00002 (IL 0x00C...0x00F)
N003 (  5,  4) [000013] -A--G---R---              *  ASG       int    $40
N002 (  3,  2) [000012] D---G--N----              +--*  LCL_VAR   int   (AX) V05 tmp4         
N001 (  1,  1) [000011] ------------              \--*  CNS_INT   int    -1 $40

***** BB01
STMT00007 (IL 0x014...  ???)
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void
N003 (  3,  3) [000036] ------------ arg0 in rcx  \--*  ADDR      long   $200
N002 (  3,  2) [000037] ----G--N----                 \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24>(AX)(P) V00 loc0         
                                                     \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                     \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                     \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6          $1c0

***** BB01
STMT00008 (IL 0x022...  ???)
N003 (  3,  3) [000046] -A--G---R---              *  ASG       ref    $240
N002 (  1,  1) [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         d:2 $240
N001 (  3,  2) [000041] ----G-------              \--*  LCL_VAR   ref   (AX) V06 tmp5          $240

***** BB01
STMT00010 (IL 0x022...  ???)
N003 (  5,  4) [000053] -A------R---              *  ASG       ref    $240
N002 (  3,  2) [000052] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:2 $240
N001 (  1,  1) [000047] ------------              \--*  LCL_VAR   ref    V03 tmp2         u:2 $240

***** BB01
STMT00009 (IL 0x022...  ???)
N004 (  5,  5) [000051] ------------              *  JTRUE     void  
N003 (  3,  3) [000050] J------N----              \--*  NE        int    $280
N001 (  1,  1) [000048] ------------                 +--*  LCL_VAR   ref    V04 tmp3         u:2 (last use) $240
N002 (  1,  1) [000049] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB02 [022..023), preds={BB01} succs={BB03}

***** BB02
STMT00011 (IL 0x022...  ???)
N008 ( 23, 24) [000064] -ACXG---R---              *  ASG       ref    $c4
N007 (  3,  2) [000063] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:4 $c4
N006 ( 19, 21) [000061] --CXG-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].InitializeTaskAsPromise $c4
N004 (  3,  3) [000057] ------------ this in rcx     +--*  ADDR      byref  $202
N003 (  3,  2) [000058] ----G--N----                 |  \--*  LCL_VAR   ref   (AX) V06 tmp5          $240
N005 (  2, 10) [000062] H----------- arg1 in rdx     \--*  CNS_INT(h) long   0xd1ffab1e class $2c0

------------ BB03 [022..023) (return), preds={BB01,BB02} succs={}

***** BB03
STMT00012 (IL   ???...  ???)
N005 (  0,  0) [000078] -A------R---              *  ASG       ref   
N004 (  0,  0) [000076] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:3
N003 (  0,  0) [000077] ------------              \--*  PHI       ref   
N001 (  0,  0) [000080] ------------ pred BB02       +--*  PHI_ARG   ref    V04 tmp3         u:4 $c4
N002 (  0,  0) [000079] ------------ pred BB01       \--*  PHI_ARG   ref    V04 tmp3         u:2 $240

***** BB03
STMT00005 (IL   ???...  ???)
N002 (  4,  3) [000029] ------------              *  RETURN    ref    $c7
N001 (  3,  2) [000056] ------------              \--*  LCL_VAR   ref    V04 tmp3         u:3 (last use) $241

-------------------------------------------------------------------------------------------------------------------
After constant propagation on [000071]:
STMT00001 (IL   ???...  ???)
N003 (  7,  5) [000072] -A------R---              *  ASG       ref    $VN.Null
N002 (  3,  2) [000070] D------N----              +--*  LCL_VAR   ref   (AX) V06 tmp5         
               [000081] ------------              \--*  CNS_INT   ref    null $VN.Null
optVNAssertionPropCurStmt morphed tree:
N003 (  5,  4) [000072] -A--G---R---              *  ASG       ref    $VN.Null
N002 (  3,  2) [000070] D---G--N----              +--*  LCL_VAR   ref   (AX) V06 tmp5         
N001 (  1,  1) [000081] ------------              \--*  CNS_INT   ref    null $VN.Null

GenTreeNode creates assertion:
N004 (  5,  5) [000051] ------------              *  JTRUE     void  
In BB01 New Global Constant Assertion: (576, 0) ($240,$0) V04.02 != null index=#01, mask=0000000000000001
GenTreeNode creates assertion:
N004 (  5,  5) [000051] ------------              *  JTRUE     void  
In BB01 New Global Constant Assertion: (576, 0) ($240,$0) V04.02 == null index=#02, mask=0000000000000002
BB01 valueGen = 0000000000000002 => BB03 valueGen = 0000000000000001,
BB02 valueGen = 0000000000000000
BB03 valueGen = 0000000000000000
AssertionPropCallback::StartMerge: BB01 in -> 0000000000000000
AssertionPropCallback::EndMerge  : BB01 in -> 0000000000000000

AssertionPropCallback::Changed   : BB01 before out -> 0000000000000003; after out -> 0000000000000002;
		jumpDest before out -> 0000000000000003; jumpDest after out -> 0000000000000001;

AssertionPropCallback::StartMerge: BB02 in -> 0000000000000003
AssertionPropCallback::Merge     : BB02 in -> 0000000000000003, predBlock BB01 out -> 0000000000000002
AssertionPropCallback::EndMerge  : BB02 in -> 0000000000000002

AssertionPropCallback::Changed   : BB02 before out -> 0000000000000003; after out -> 0000000000000002;
		jumpDest before out -> 0000000000000003; jumpDest after out -> 0000000000000002;

AssertionPropCallback::StartMerge: BB03 in -> 0000000000000003
AssertionPropCallback::Merge     : BB03 in -> 0000000000000003, predBlock BB01 out -> 0000000000000002
AssertionPropCallback::Merge     : BB03 in -> 0000000000000001, predBlock BB02 out -> 0000000000000002
AssertionPropCallback::EndMerge  : BB03 in -> 0000000000000000

AssertionPropCallback::Changed   : BB03 before out -> 0000000000000003; after out -> 0000000000000000;
		jumpDest before out -> 0000000000000003; jumpDest after out -> 0000000000000000;

AssertionPropCallback::StartMerge: BB03 in -> 0000000000000000
AssertionPropCallback::Merge     : BB03 in -> 0000000000000000, predBlock BB01 out -> 0000000000000002
AssertionPropCallback::Merge     : BB03 in -> 0000000000000000, predBlock BB02 out -> 0000000000000002
AssertionPropCallback::EndMerge  : BB03 in -> 0000000000000000

AssertionPropCallback::Unchanged  : BB03 out -> 0000000000000000; 		jumpDest out -> 0000000000000000



BB01 valueIn  = 0000000000000000 valueOut = 0000000000000002 => BB03 valueOut= 0000000000000001
BB02 valueIn  = 0000000000000002 valueOut = 0000000000000002
BB03 valueIn  = 0000000000000000 valueOut = 0000000000000000
Propagating 0000000000000000 assertions for BB01, stmt STMT00006, tree [000068], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00006, tree [000067], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00006, tree [000069], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00001, tree [000081], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00001, tree [000070], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00001, tree [000072], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00002, tree [000011], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00002, tree [000012], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00002, tree [000013], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00007, tree [000073], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00007, tree [000037], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00007, tree [000036], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00007, tree [000038], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00008, tree [000041], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00008, tree [000045], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00008, tree [000046], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00010, tree [000047], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00010, tree [000052], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00010, tree [000053], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00009, tree [000048], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00009, tree [000049], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00009, tree [000050], tree -> 0
Failed to find a suitable dominating compare, so we won't optimize
Propagating 0000000000000000 assertions for BB01, stmt STMT00009, tree [000051], tree -> 1
Propagating 0000000000000002 assertions for BB02, stmt STMT00011, tree [000074], tree -> 0
Propagating 0000000000000002 assertions for BB02, stmt STMT00011, tree [000075], tree -> 0
Propagating 0000000000000002 assertions for BB02, stmt STMT00011, tree [000058], tree -> 0
Propagating 0000000000000002 assertions for BB02, stmt STMT00011, tree [000057], tree -> 0
Propagating 0000000000000002 assertions for BB02, stmt STMT00011, tree [000062], tree -> 0
Propagating 0000000000000002 assertions for BB02, stmt STMT00011, tree [000061], tree -> 0
Propagating 0000000000000002 assertions for BB02, stmt STMT00011, tree [000063], tree -> 0
Propagating 0000000000000002 assertions for BB02, stmt STMT00011, tree [000064], tree -> 0
Propagating 0000000000000000 assertions for BB03, stmt STMT00005, tree [000056], tree -> 0
Propagating 0000000000000000 assertions for BB03, stmt STMT00005, tree [000029], tree -> 0
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Assertion prop

*************** Starting PHASE Optimize index checks
*************** In OptimizeRangeChecks()
Blocks/trees before phase

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)-> BB03 ( cond )                     i label target hascall gcsafe 
BB02 [0004]  1       BB01                  0.25    [022..023)                                     i hascall gcsafe 
BB03 [0005]  2       BB01,BB02             1       [022..023)        (return)                     i label target gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..02F) -> BB03 (cond), preds={} succs={BB02,BB03}

***** BB01
STMT00006 (IL 0x000...  ???)
N003 (  5,  4) [000069] -A------R---              *  ASG       ref    $VN.Null
N002 (  3,  2) [000067] D------N----              +--*  LCL_VAR   ref    V08 tmp7         d:2 $VN.Null
N001 (  1,  1) [000068] ------------              \--*  CNS_INT   ref    null $VN.Null

***** BB01
STMT00001 (IL   ???...  ???)
N003 (  5,  4) [000072] -A--G---R---              *  ASG       ref    $VN.Null
N002 (  3,  2) [000070] D---G--N----              +--*  LCL_VAR   ref   (AX) V06 tmp5         
N001 (  1,  1) [000081] ------------              \--*  CNS_INT   ref    null $VN.Null

***** BB01
STMT00002 (IL 0x00C...0x00F)
N003 (  5,  4) [000013] -A--G---R---              *  ASG       int    $40
N002 (  3,  2) [000012] D---G--N----              +--*  LCL_VAR   int   (AX) V05 tmp4         
N001 (  1,  1) [000011] ------------              \--*  CNS_INT   int    -1 $40

***** BB01
STMT00007 (IL 0x014...  ???)
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void
N003 (  3,  3) [000036] ------------ arg0 in rcx  \--*  ADDR      long   $200
N002 (  3,  2) [000037] ----G--N----                 \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24>(AX)(P) V00 loc0         
                                                     \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                     \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                     \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6          $1c0

***** BB01
STMT00008 (IL 0x022...  ???)
N003 (  3,  3) [000046] -A--G---R---              *  ASG       ref    $240
N002 (  1,  1) [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         d:2 $240
N001 (  3,  2) [000041] ----G-------              \--*  LCL_VAR   ref   (AX) V06 tmp5          $240

***** BB01
STMT00010 (IL 0x022...  ???)
N003 (  5,  4) [000053] -A------R---              *  ASG       ref    $240
N002 (  3,  2) [000052] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:2 $240
N001 (  1,  1) [000047] ------------              \--*  LCL_VAR   ref    V03 tmp2         u:2 $240

***** BB01
STMT00009 (IL 0x022...  ???)
N004 (  5,  5) [000051] ------------              *  JTRUE     void  
N003 (  3,  3) [000050] J------N----              \--*  NE        int    $280
N001 (  1,  1) [000048] ------------                 +--*  LCL_VAR   ref    V04 tmp3         u:2 (last use) $240
N002 (  1,  1) [000049] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB02 [022..023), preds={BB01} succs={BB03}

***** BB02
STMT00011 (IL 0x022...  ???)
N008 ( 23, 24) [000064] -ACXG---R---              *  ASG       ref    $c4
N007 (  3,  2) [000063] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:4 $c4
N006 ( 19, 21) [000061] --CXG-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].InitializeTaskAsPromise $c4
N004 (  3,  3) [000057] ------------ this in rcx     +--*  ADDR      byref  $202
N003 (  3,  2) [000058] ----G--N----                 |  \--*  LCL_VAR   ref   (AX) V06 tmp5          $240
N005 (  2, 10) [000062] H----------- arg1 in rdx     \--*  CNS_INT(h) long   0xd1ffab1e class $2c0

------------ BB03 [022..023) (return), preds={BB01,BB02} succs={}

***** BB03
STMT00012 (IL   ???...  ???)
N005 (  0,  0) [000078] -A------R---              *  ASG       ref   
N004 (  0,  0) [000076] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:3
N003 (  0,  0) [000077] ------------              \--*  PHI       ref   
N001 (  0,  0) [000080] ------------ pred BB02       +--*  PHI_ARG   ref    V04 tmp3         u:4 $c4
N002 (  0,  0) [000079] ------------ pred BB01       \--*  PHI_ARG   ref    V04 tmp3         u:2 $240

***** BB03
STMT00005 (IL   ???...  ???)
N002 (  4,  3) [000029] ------------              *  RETURN    ref    $c7
N001 (  3,  2) [000056] ------------              \--*  LCL_VAR   ref    V04 tmp3         u:3 (last use) $241

-------------------------------------------------------------------------------------------------------------------

*************** Finishing PHASE Optimize index checks

*************** Starting PHASE Insert GC Polls

*************** Finishing PHASE Insert GC Polls [no changes]

*************** Starting PHASE Determine first cold block

*************** In fgDetermineFirstColdBlock()
No procedure splitting will be done for this method

*************** Finishing PHASE Determine first cold block
Trees before Rationalize IR

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)-> BB03 ( cond )                     i label target hascall gcsafe 
BB02 [0004]  1       BB01                  0.25    [022..023)                                     i hascall gcsafe 
BB03 [0005]  2       BB01,BB02             1       [022..023)        (return)                     i label target gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..02F) -> BB03 (cond), preds={} succs={BB02,BB03}

***** BB01
STMT00006 (IL 0x000...  ???)
N003 (  5,  4) [000069] -A------R---              *  ASG       ref    $VN.Null
N002 (  3,  2) [000067] D------N----              +--*  LCL_VAR   ref    V08 tmp7         d:2 $VN.Null
N001 (  1,  1) [000068] ------------              \--*  CNS_INT   ref    null $VN.Null

***** BB01
STMT00001 (IL   ???...  ???)
N003 (  5,  4) [000072] -A--G---R---              *  ASG       ref    $VN.Null
N002 (  3,  2) [000070] D---G--N----              +--*  LCL_VAR   ref   (AX) V06 tmp5         
N001 (  1,  1) [000081] ------------              \--*  CNS_INT   ref    null $VN.Null

***** BB01
STMT00002 (IL 0x00C...0x00F)
N003 (  5,  4) [000013] -A--G---R---              *  ASG       int    $40
N002 (  3,  2) [000012] D---G--N----              +--*  LCL_VAR   int   (AX) V05 tmp4         
N001 (  1,  1) [000011] ------------              \--*  CNS_INT   int    -1 $40

***** BB01
STMT00007 (IL 0x014...  ???)
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void
N003 (  3,  3) [000036] ------------ arg0 in rcx  \--*  ADDR      long   $200
N002 (  3,  2) [000037] ----G--N----                 \--*  LCL_VAR   struct<<ConsumeArgs>d__6, 24>(AX)(P) V00 loc0         
                                                     \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                     \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                     \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6          $1c0

***** BB01
STMT00008 (IL 0x022...  ???)
N003 (  3,  3) [000046] -A--G---R---              *  ASG       ref    $240
N002 (  1,  1) [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         d:2 $240
N001 (  3,  2) [000041] ----G-------              \--*  LCL_VAR   ref   (AX) V06 tmp5          $240

***** BB01
STMT00010 (IL 0x022...  ???)
N003 (  5,  4) [000053] -A------R---              *  ASG       ref    $240
N002 (  3,  2) [000052] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:2 $240
N001 (  1,  1) [000047] ------------              \--*  LCL_VAR   ref    V03 tmp2         u:2 $240

***** BB01
STMT00009 (IL 0x022...  ???)
N004 (  5,  5) [000051] ------------              *  JTRUE     void  
N003 (  3,  3) [000050] J------N----              \--*  NE        int    $280
N001 (  1,  1) [000048] ------------                 +--*  LCL_VAR   ref    V04 tmp3         u:2 (last use) $240
N002 (  1,  1) [000049] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB02 [022..023), preds={BB01} succs={BB03}

***** BB02
STMT00011 (IL 0x022...  ???)
N008 ( 23, 24) [000064] -ACXG---R---              *  ASG       ref    $c4
N007 (  3,  2) [000063] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:4 $c4
N006 ( 19, 21) [000061] --CXG-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].InitializeTaskAsPromise $c4
N004 (  3,  3) [000057] ------------ this in rcx     +--*  ADDR      byref  $202
N003 (  3,  2) [000058] ----G--N----                 |  \--*  LCL_VAR   ref   (AX) V06 tmp5          $240
N005 (  2, 10) [000062] H----------- arg1 in rdx     \--*  CNS_INT(h) long   0xd1ffab1e class $2c0

------------ BB03 [022..023) (return), preds={BB01,BB02} succs={}

***** BB03
STMT00012 (IL   ???...  ???)
N005 (  0,  0) [000078] -A------R---              *  ASG       ref   
N004 (  0,  0) [000076] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:3
N003 (  0,  0) [000077] ------------              \--*  PHI       ref   
N001 (  0,  0) [000080] ------------ pred BB02       +--*  PHI_ARG   ref    V04 tmp3         u:4 $c4
N002 (  0,  0) [000079] ------------ pred BB01       \--*  PHI_ARG   ref    V04 tmp3         u:2 $240

***** BB03
STMT00005 (IL   ???...  ???)
N002 (  4,  3) [000029] ------------              *  RETURN    ref    $c7
N001 (  3,  2) [000056] ------------              \--*  LCL_VAR   ref    V04 tmp3         u:3 (last use) $241

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Rationalize IR
rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  5,  4) [000069] DA----------              *  STORE_LCL_VAR ref    V08 tmp7         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  5,  4) [000072] DA--G-------              *  STORE_LCL_VAR ref   (AX) V06 tmp5         

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  5,  4) [000013] DA--G-------              *  STORE_LCL_VAR int   (AX) V05 tmp4         

Rewriting GT_ADDR(GT_LCL_VAR) to GT_LCL_VAR_ADDR:
N002 (  3,  2) [000037] -------N----        t37 =    LCL_VAR_ADDR byref  V00 loc0         
                                                  *    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                  *    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                  *    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  3,  3) [000046] DA--G-------              *  STORE_LCL_VAR ref    V03 tmp2         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  5,  4) [000053] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:2

Rewriting GT_ADDR(GT_LCL_VAR) to GT_LCL_VAR_ADDR:
N003 (  3,  2) [000058] -------N----        t58 =    LCL_VAR_ADDR byref  V06 tmp5         

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N008 ( 23, 24) [000064] DACXG-------              *  STORE_LCL_VAR ref    V04 tmp3         d:4

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 (  0,  0) [000078] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:3


*************** Finishing PHASE Rationalize IR
Trees after Rationalize IR

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)-> BB03 ( cond )                     i label target hascall gcsafe LIR 
BB02 [0004]  1       BB01                  0.25    [022..023)                                     i hascall gcsafe LIR 
BB03 [0005]  2       BB01,BB02             1       [022..023)        (return)                     i label target gcsafe LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..02F) -> BB03 (cond), preds={} succs={BB02,BB03}
               [000082] ------------                 IL_OFFSET void   IL offset: 0x0
N001 (  1,  1) [000068] ------------        t68 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t68    ref    
N003 (  5,  4) [000069] DA----------              *  STORE_LCL_VAR ref    V08 tmp7         d:2
N001 (  1,  1) [000081] ------------        t81 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t81    ref    
N003 (  5,  4) [000072] DA--G-------              *  STORE_LCL_VAR ref   (AX) V06 tmp5         
               [000083] ------------                 IL_OFFSET void   IL offset: 0xc
N001 (  1,  1) [000011] ------------        t11 =    CNS_INT   int    -1 $40
                                                  /--*  t11    int    
N003 (  5,  4) [000013] DA--G-------              *  STORE_LCL_VAR int   (AX) V05 tmp4         
               [000084] ------------                 IL_OFFSET void   IL offset: 0x14
N002 (  3,  2) [000037] -------N----        t37 =    LCL_VAR_ADDR byref  V00 loc0         
                                                  *    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                  *    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                  *    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
                                                  /--*  t37    byref  arg0 in rcx
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void
               [000085] ------------                 IL_OFFSET void   IL offset: 0x22
N001 (  3,  2) [000041] ------------        t41 =    LCL_VAR   ref   (AX) V06 tmp5          $240
                                                  /--*  t41    ref    
N003 (  3,  3) [000046] DA--G-------              *  STORE_LCL_VAR ref    V03 tmp2         d:2
               [000086] ------------                 IL_OFFSET void   IL offset: 0x22
N001 (  1,  1) [000047] ------------        t47 =    LCL_VAR   ref    V03 tmp2         u:2 $240
                                                  /--*  t47    ref    
N003 (  5,  4) [000053] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:2
               [000087] ------------                 IL_OFFSET void   IL offset: 0x22
N001 (  1,  1) [000048] ------------        t48 =    LCL_VAR   ref    V04 tmp3         u:2 (last use) $240
N002 (  1,  1) [000049] ------------        t49 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t48    ref    
                                                  +--*  t49    ref    
N003 (  3,  3) [000050] J------N----        t50 = *  NE        int    $280
                                                  /--*  t50    int    
N004 (  5,  5) [000051] ------------              *  JTRUE     void  

------------ BB02 [022..023), preds={BB01} succs={BB03}
               [000088] ------------                 IL_OFFSET void   IL offset: 0x22
N003 (  3,  2) [000058] -------N----        t58 =    LCL_VAR_ADDR byref  V06 tmp5         
N005 (  2, 10) [000062] H-----------        t62 =    CNS_INT(h) long   0xd1ffab1e class $2c0
                                                  /--*  t58    byref  this in rcx
                                                  +--*  t62    long   arg1 in rdx
N006 ( 19, 21) [000061] --CXG-------        t61 = *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].InitializeTaskAsPromise $c4
                                                  /--*  t61    ref    
N008 ( 23, 24) [000064] DA-XG-------              *  STORE_LCL_VAR ref    V04 tmp3         d:4

------------ BB03 [022..023) (return), preds={BB01,BB02} succs={}
N001 (  0,  0) [000080] ------------        t80 =    PHI_ARG   ref    V04 tmp3         u:4 $c4
N002 (  0,  0) [000079] ------------        t79 =    PHI_ARG   ref    V04 tmp3         u:2 $240
                                                  /--*  t80    ref    
                                                  +--*  t79    ref    
N003 (  0,  0) [000077] ------------        t77 = *  PHI       ref   
                                                  /--*  t77    ref    
N005 (  0,  0) [000078] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:3
N001 (  3,  2) [000056] ------------        t56 =    LCL_VAR   ref    V04 tmp3         u:3 (last use) $241
                                                  /--*  t56    ref    
N002 (  4,  3) [000029] ------------              *  RETURN    ref    $c7

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist

*************** Starting PHASE Do 'simple' lowering
Bumping outgoingArgSpaceSize to 32 for call [000038]
outgoingArgSpaceSize 32 sufficient for call [000061], which needs 32

*************** Finishing PHASE Do 'simple' lowering
*************** In fgDebugCheckBBlist
Trees before Lowering nodeinfo

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)-> BB03 ( cond )                     i label target hascall gcsafe LIR 
BB02 [0004]  1       BB01                  0.25    [022..023)                                     i hascall gcsafe LIR 
BB03 [0005]  2       BB01,BB02             1       [022..023)        (return)                     i label target gcsafe LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..02F) -> BB03 (cond), preds={} succs={BB02,BB03}
               [000082] ------------                 IL_OFFSET void   IL offset: 0x0
N001 (  1,  1) [000068] ------------        t68 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t68    ref    
N003 (  5,  4) [000069] DA----------              *  STORE_LCL_VAR ref    V08 tmp7         d:2
N001 (  1,  1) [000081] ------------        t81 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t81    ref    
N003 (  5,  4) [000072] DA--G-------              *  STORE_LCL_VAR ref   (AX) V06 tmp5         
               [000083] ------------                 IL_OFFSET void   IL offset: 0xc
N001 (  1,  1) [000011] ------------        t11 =    CNS_INT   int    -1 $40
                                                  /--*  t11    int    
N003 (  5,  4) [000013] DA--G-------              *  STORE_LCL_VAR int   (AX) V05 tmp4         
               [000084] ------------                 IL_OFFSET void   IL offset: 0x14
N002 (  3,  2) [000037] -------N----        t37 =    LCL_VAR_ADDR byref  V00 loc0         
                                                  *    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                  *    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                  *    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
                                                  /--*  t37    byref  arg0 in rcx
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void
               [000085] ------------                 IL_OFFSET void   IL offset: 0x22
N001 (  3,  2) [000041] ------------        t41 =    LCL_VAR   ref   (AX) V06 tmp5          $240
                                                  /--*  t41    ref    
N003 (  3,  3) [000046] DA--G-------              *  STORE_LCL_VAR ref    V03 tmp2         d:2
               [000086] ------------                 IL_OFFSET void   IL offset: 0x22
N001 (  1,  1) [000047] ------------        t47 =    LCL_VAR   ref    V03 tmp2         u:2 $240
                                                  /--*  t47    ref    
N003 (  5,  4) [000053] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:2
               [000087] ------------                 IL_OFFSET void   IL offset: 0x22
N001 (  1,  1) [000048] ------------        t48 =    LCL_VAR   ref    V04 tmp3         u:2 (last use) $240
N002 (  1,  1) [000049] ------------        t49 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t48    ref    
                                                  +--*  t49    ref    
N003 (  3,  3) [000050] J------N----        t50 = *  NE        int    $280
                                                  /--*  t50    int    
N004 (  5,  5) [000051] ------------              *  JTRUE     void  

------------ BB02 [022..023), preds={BB01} succs={BB03}
               [000088] ------------                 IL_OFFSET void   IL offset: 0x22
N003 (  3,  2) [000058] -------N----        t58 =    LCL_VAR_ADDR byref  V06 tmp5         
N005 (  2, 10) [000062] H-----------        t62 =    CNS_INT(h) long   0xd1ffab1e class $2c0
                                                  /--*  t58    byref  this in rcx
                                                  +--*  t62    long   arg1 in rdx
N006 ( 19, 21) [000061] --CXG-------        t61 = *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].InitializeTaskAsPromise $c4
                                                  /--*  t61    ref    
N008 ( 23, 24) [000064] DA-XG-------              *  STORE_LCL_VAR ref    V04 tmp3         d:4

------------ BB03 [022..023) (return), preds={BB01,BB02} succs={}
N001 (  0,  0) [000080] ------------        t80 =    PHI_ARG   ref    V04 tmp3         u:4 $c4
N002 (  0,  0) [000079] ------------        t79 =    PHI_ARG   ref    V04 tmp3         u:2 $240
                                                  /--*  t80    ref    
                                                  +--*  t79    ref    
N003 (  0,  0) [000077] ------------        t77 = *  PHI       ref   
                                                  /--*  t77    ref    
N005 (  0,  0) [000078] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:3
N001 (  3,  2) [000056] ------------        t56 =    LCL_VAR   ref    V04 tmp3         u:3 (last use) $241
                                                  /--*  t56    ref    
N002 (  4,  3) [000029] ------------              *  RETURN    ref    $c7

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Lowering nodeinfo
lowering store lcl var/field (before):
N001 (  1,  1) [000068] ------------        t68 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t68    ref    
N003 (  5,  4) [000069] DA----------              *  STORE_LCL_VAR ref    V08 tmp7         d:2

lowering store lcl var/field (after):
N001 (  1,  1) [000068] ------------        t68 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t68    ref    
N003 (  5,  4) [000069] DA----------              *  STORE_LCL_VAR ref    V08 tmp7         d:2

lowering store lcl var/field (before):
N001 (  1,  1) [000081] ------------        t81 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t81    ref    
N003 (  5,  4) [000072] DA--G-------              *  STORE_LCL_VAR ref   (AX) V06 tmp5         

lowering store lcl var/field (after):
N001 (  1,  1) [000081] ------------        t81 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t81    ref    
N003 (  5,  4) [000072] DA--G-------              *  STORE_LCL_VAR ref   (AX) V06 tmp5         

lowering store lcl var/field (before):
N001 (  1,  1) [000011] ------------        t11 =    CNS_INT   int    -1 $40
                                                  /--*  t11    int    
N003 (  5,  4) [000013] DA--G-------              *  STORE_LCL_VAR int   (AX) V05 tmp4         

lowering store lcl var/field (after):
N001 (  1,  1) [000011] -c----------        t11 =    CNS_INT   int    -1 $40
                                                  /--*  t11    int    
N003 (  5,  4) [000013] DA--G-------              *  STORE_LCL_VAR int   (AX) V05 tmp4         

lowering call (before):
N002 (  3,  2) [000037] -------N----        t37 =    LCL_VAR_ADDR byref  V00 loc0         
                                                  *    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                  *    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                  *    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
                                                  /--*  t37    byref  arg0 in rcx
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000073] ----------L-              *  ARGPLACE  long   $200

late:
======
lowering arg : N002 (  3,  2) [000037] -------N----              *  LCL_VAR_ADDR byref  V00 loc0         
                                                  *    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                  *    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                  *    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
new node is :                [000089] ------------              *  PUTARG_REG byref  REG rcx

lowering call (after):
N002 (  3,  2) [000037] -------N----        t37 =    LCL_VAR_ADDR byref  V00 loc0         
                                                  *    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                  *    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                  *    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
                                                  /--*  t37    byref  
               [000089] ------------        t89 = *  PUTARG_REG byref  REG rcx
                                                  /--*  t89    byref  arg0 in rcx
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void

lowering store lcl var/field (before):
N001 (  3,  2) [000041] ------------        t41 =    LCL_VAR   ref   (AX) V06 tmp5          $240
                                                  /--*  t41    ref    
N003 (  3,  3) [000046] DA--G-------              *  STORE_LCL_VAR ref    V03 tmp2         d:2

lowering store lcl var/field (after):
N001 (  3,  2) [000041] ------------        t41 =    LCL_VAR   ref   (AX) V06 tmp5          $240
                                                  /--*  t41    ref    
N003 (  3,  3) [000046] DA--G-------              *  STORE_LCL_VAR ref    V03 tmp2         d:2

lowering store lcl var/field (before):
N001 (  1,  1) [000047] ------------        t47 =    LCL_VAR   ref    V03 tmp2         u:2 $240
                                                  /--*  t47    ref    
N003 (  5,  4) [000053] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:2

lowering store lcl var/field (after):
N001 (  1,  1) [000047] ------------        t47 =    LCL_VAR   ref    V03 tmp2         u:2 $240
                                                  /--*  t47    ref    
N003 (  5,  4) [000053] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:2

lowering call (before):
N003 (  3,  2) [000058] -------N----        t58 =    LCL_VAR_ADDR byref  V06 tmp5         
N005 (  2, 10) [000062] H-----------        t62 =    CNS_INT(h) long   0xd1ffab1e class $2c0
                                                  /--*  t58    byref  this in rcx
                                                  +--*  t62    long   arg1 in rdx
N006 ( 19, 21) [000061] --CXG-------        t61 = *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].InitializeTaskAsPromise $c4

objp:
======
lowering arg : N001 (  0,  0) [000074] ----------L-              *  ARGPLACE  byref  $201

args:
======
lowering arg : N002 (  0,  0) [000075] ----------L-              *  ARGPLACE  long   $202

late:
======
lowering arg : N003 (  3,  2) [000058] -------N----              *  LCL_VAR_ADDR byref  V06 tmp5         
new node is :                [000090] ------------              *  PUTARG_REG byref  REG rcx

lowering arg : N005 (  2, 10) [000062] H-----------              *  CNS_INT(h) long   0xd1ffab1e class $2c0
new node is :                [000091] ------------              *  PUTARG_REG long   REG rdx

lowering call (after):
N003 (  3,  2) [000058] -------N----        t58 =    LCL_VAR_ADDR byref  V06 tmp5         
                                                  /--*  t58    byref  
               [000090] ------------        t90 = *  PUTARG_REG byref  REG rcx
N005 (  2, 10) [000062] H-----------        t62 =    CNS_INT(h) long   0xd1ffab1e class $2c0
                                                  /--*  t62    long   
               [000091] ------------        t91 = *  PUTARG_REG long   REG rdx
                                                  /--*  t90    byref  this in rcx
                                                  +--*  t91    long   arg1 in rdx
N006 ( 19, 21) [000061] --CXG-------        t61 = *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].InitializeTaskAsPromise $c4

lowering store lcl var/field (before):
N003 (  3,  2) [000058] -------N----        t58 =    LCL_VAR_ADDR byref  V06 tmp5         
                                                  /--*  t58    byref  
               [000090] ------------        t90 = *  PUTARG_REG byref  REG rcx
N005 (  2, 10) [000062] H-----------        t62 =    CNS_INT(h) long   0xd1ffab1e class $2c0
                                                  /--*  t62    long   
               [000091] ------------        t91 = *  PUTARG_REG long   REG rdx
                                                  /--*  t90    byref  this in rcx
                                                  +--*  t91    long   arg1 in rdx
N006 ( 19, 21) [000061] --CXG-------        t61 = *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].InitializeTaskAsPromise $c4
                                                  /--*  t61    ref    
N008 ( 23, 24) [000064] DA-XG-------              *  STORE_LCL_VAR ref    V04 tmp3         d:4

lowering store lcl var/field (after):
N003 (  3,  2) [000058] -------N----        t58 =    LCL_VAR_ADDR byref  V06 tmp5         
                                                  /--*  t58    byref  
               [000090] ------------        t90 = *  PUTARG_REG byref  REG rcx
N005 (  2, 10) [000062] H-----------        t62 =    CNS_INT(h) long   0xd1ffab1e class $2c0
                                                  /--*  t62    long   
               [000091] ------------        t91 = *  PUTARG_REG long   REG rdx
                                                  /--*  t90    byref  this in rcx
                                                  +--*  t91    long   arg1 in rdx
N006 ( 19, 21) [000061] --CXG-------        t61 = *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].InitializeTaskAsPromise $c4
                                                  /--*  t61    ref    
N008 ( 23, 24) [000064] DA-XG-------              *  STORE_LCL_VAR ref    V04 tmp3         d:4

lowering store lcl var/field (before):
N001 (  0,  0) [000080] ------------        t80 =    PHI_ARG   ref    V04 tmp3         u:4 $c4
N002 (  0,  0) [000079] ------------        t79 =    PHI_ARG   ref    V04 tmp3         u:2 $240
                                                  /--*  t80    ref    
                                                  +--*  t79    ref    
N003 (  0,  0) [000077] ------------        t77 = *  PHI       ref   
                                                  /--*  t77    ref    
N005 (  0,  0) [000078] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:3

lowering store lcl var/field (after):
N001 (  0,  0) [000080] ------------        t80 =    PHI_ARG   ref    V04 tmp3         u:4 $c4
N002 (  0,  0) [000079] ------------        t79 =    PHI_ARG   ref    V04 tmp3         u:2 $240
                                                  /--*  t80    ref    
                                                  +--*  t79    ref    
N003 (  0,  0) [000077] ------------        t77 = *  PHI       ref   
                                                  /--*  t77    ref    
N005 (  0,  0) [000078] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:3

lowering GT_RETURN
N002 (  4,  3) [000029] ------------              *  RETURN    ref    $c7
============Lower has completed modifying nodes.

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)-> BB03 ( cond )                     i label target hascall gcsafe LIR 
BB02 [0004]  1       BB01                  0.25    [022..023)                                     i hascall gcsafe LIR 
BB03 [0005]  2       BB01,BB02             1       [022..023)        (return)                     i label target gcsafe LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..02F) -> BB03 (cond), preds={} succs={BB02,BB03}
               [000082] ------------                 IL_OFFSET void   IL offset: 0x0
N001 (  1,  1) [000068] ------------        t68 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t68    ref    
N003 (  5,  4) [000069] DA----------              *  STORE_LCL_VAR ref    V08 tmp7         d:2
N001 (  1,  1) [000081] ------------        t81 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t81    ref    
N003 (  5,  4) [000072] DA--G-------              *  STORE_LCL_VAR ref   (AX) V06 tmp5         
               [000083] ------------                 IL_OFFSET void   IL offset: 0xc
N001 (  1,  1) [000011] -c----------        t11 =    CNS_INT   int    -1 $40
                                                  /--*  t11    int    
N003 (  5,  4) [000013] DA--G-------              *  STORE_LCL_VAR int   (AX) V05 tmp4         
               [000084] ------------                 IL_OFFSET void   IL offset: 0x14
N002 (  3,  2) [000037] -------N----        t37 =    LCL_VAR_ADDR byref  V00 loc0         
                                                  *    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                  *    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                  *    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
                                                  /--*  t37    byref  
               [000089] ------------        t89 = *  PUTARG_REG byref  REG rcx
                                                  /--*  t89    byref  arg0 in rcx
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void
               [000085] ------------                 IL_OFFSET void   IL offset: 0x22
N001 (  3,  2) [000041] ------------        t41 =    LCL_VAR   ref   (AX) V06 tmp5          $240
                                                  /--*  t41    ref    
N003 (  3,  3) [000046] DA--G-------              *  STORE_LCL_VAR ref    V03 tmp2         d:2
               [000086] ------------                 IL_OFFSET void   IL offset: 0x22
N001 (  1,  1) [000047] ------------        t47 =    LCL_VAR   ref    V03 tmp2         u:2 $240
                                                  /--*  t47    ref    
N003 (  5,  4) [000053] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:2
               [000087] ------------                 IL_OFFSET void   IL offset: 0x22
N001 (  1,  1) [000048] ------------        t48 =    LCL_VAR   ref    V04 tmp3         u:2 (last use) $240
N002 (  1,  1) [000049] -c----------        t49 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t48    ref    
                                                  +--*  t49    ref    
N003 (  3,  3) [000050] J------N----              *  NE        void   $280
N004 (  5,  5) [000051] ------------              *  JTRUE     void  

------------ BB02 [022..023), preds={BB01} succs={BB03}
               [000088] ------------                 IL_OFFSET void   IL offset: 0x22
N003 (  3,  2) [000058] -------N----        t58 =    LCL_VAR_ADDR byref  V06 tmp5         
                                                  /--*  t58    byref  
               [000090] ------------        t90 = *  PUTARG_REG byref  REG rcx
N005 (  2, 10) [000062] H-----------        t62 =    CNS_INT(h) long   0xd1ffab1e class $2c0
                                                  /--*  t62    long   
               [000091] ------------        t91 = *  PUTARG_REG long   REG rdx
                                                  /--*  t90    byref  this in rcx
                                                  +--*  t91    long   arg1 in rdx
N006 ( 19, 21) [000061] --CXG-------        t61 = *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].InitializeTaskAsPromise $c4
                                                  /--*  t61    ref    
N008 ( 23, 24) [000064] DA-XG-------              *  STORE_LCL_VAR ref    V04 tmp3         d:4

------------ BB03 [022..023) (return), preds={BB01,BB02} succs={}
N001 (  0,  0) [000080] ------------        t80 =    PHI_ARG   ref    V04 tmp3         u:4 $c4
N002 (  0,  0) [000079] ------------        t79 =    PHI_ARG   ref    V04 tmp3         u:2 $240
                                                  /--*  t80    ref    
                                                  +--*  t79    ref    
N003 (  0,  0) [000077] ------------        t77 = *  PHI       ref   
                                                  /--*  t77    ref    
N005 (  0,  0) [000078] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:3
N001 (  3,  2) [000056] ------------        t56 =    LCL_VAR   ref    V04 tmp3         u:3 (last use) $241
                                                  /--*  t56    ref    
N002 (  4,  3) [000029] ------------              *  RETURN    ref    $c7

-------------------------------------------------------------------------------------------------------------------

*** lvaComputeRefCounts ***

*** lvaComputeRefCounts -- explicit counts ***
New refCnts for V08: refCnt =  1, refCntWtd = 1   
New refCnts for V00: refCnt =  1, refCntWtd = 1   
New refCnts for V06: refCnt =  1, refCntWtd = 1   
New refCnts for V00: refCnt =  2, refCntWtd = 2   
New refCnts for V05: refCnt =  1, refCntWtd = 1   
New refCnts for V05: refCnt =  2, refCntWtd = 2   
New refCnts for V06: refCnt =  2, refCntWtd = 2   
New refCnts for V07: refCnt =  1, refCntWtd = 1   
New refCnts for V00: refCnt =  3, refCntWtd = 3   
New refCnts for V00: refCnt =  4, refCntWtd = 4   
New refCnts for V06: refCnt =  3, refCntWtd = 3   
New refCnts for V03: refCnt =  1, refCntWtd = 2   
New refCnts for V03: refCnt =  2, refCntWtd = 4   
New refCnts for V04: refCnt =  1, refCntWtd = 1   
New refCnts for V04: refCnt =  2, refCntWtd = 2   
New refCnts for V00: refCnt =  5, refCntWtd = 4.25
New refCnts for V06: refCnt =  4, refCntWtd = 3.25
New refCnts for V04: refCnt =  3, refCntWtd = 2.25
New refCnts for V04: refCnt =  4, refCntWtd = 3.25

*** lvaComputeRefCounts -- implicit counts ***
*************** In fgLocalVarLiveness()
; Initial local variable assignments
;
;  V00 loc0           struct <<ConsumeArgs>d__6, 24> do-not-enreg[XS] addr-exposed ld-addr-op
;  V01 OutArgs        lclBlk <32>  "OutgoingArgSpace"
;  V02 tmp1           struct <System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon], 8> ld-addr-op "Inline ldloca(s) first use temp"
;  V03 tmp2              ref  class-hnd "dup spill"
;  V04 tmp3              ref 
;  V05 tmp4              int  do-not-enreg[X] addr-exposed V00.<>1__state(offs=0x00) P-DEP "field V00.<>1__state (fldOffset=0x0)"
;  V06 tmp5              ref  do-not-enreg[X] addr-exposed V00.<>t__builder(offs=0x08) P-DEP "field V00.<>t__builder (fldOffset=0x8)"
;  V07 tmp6              ref  do-not-enreg[X] addr-exposed V00.<>u__1(offs=0x10) P-DEP "field V00.<>u__1 (fldOffset=0x10)"
;  V08 tmp7              ref  V02.m_task(offs=0x00) P-INDEP "field V02.m_task (fldOffset=0x0)"
In fgLocalVarLivenessInit
Tracked variable (3 out of 9) table:
V03 tmp2          [   ref]: refCnt =    2, refCntWtd =   4   
V04 tmp3          [   ref]: refCnt =    4, refCntWtd =   3.25
V08 tmp7          [   ref]: refCnt =    1, refCntWtd =   1   

*************** In fgPerBlockLocalVarLiveness()
BB01 USE(0)={           } + ByrefExposed + GcHeap
     DEF(3)={V03 V04 V08} + ByrefExposed* + GcHeap*

BB02 USE(0)={   } + ByrefExposed + GcHeap
     DEF(1)={V04} + ByrefExposed* + GcHeap*

BB03 USE(1)={V04}
     DEF(0)={   }

** Memory liveness computed, GcHeap states and ByrefExposed states diverge
*************** In fgInterBlockLocalVarLiveness()

BB liveness after fgLiveVarAnalysis():

BB01 IN (0)={   } + ByrefExposed + GcHeap
     OUT(1)={V04} + ByrefExposed + GcHeap

BB02 IN (0)={   } + ByrefExposed + GcHeap
     OUT(1)={V04}

BB03 IN (1)={V04}
     OUT(0)={   }

Removing dead store:
N003 (  5,  4) [000069] DA----------              *  STORE_LCL_VAR ref    V08 tmp7         d:2 (last use)
Removing dead node:
N001 (  1,  1) [000068] ------------              *  CNS_INT   ref    null $VN.Null

*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)-> BB03 ( cond )                     i label target hascall gcsafe LIR 
BB02 [0004]  1       BB01                  0.25    [022..023)                                     i hascall gcsafe LIR 
BB03 [0005]  2       BB01,BB02             1       [022..023)        (return)                     i label target gcsafe LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist

*** lvaComputeRefCounts ***

*** lvaComputeRefCounts -- explicit counts ***
New refCnts for V00: refCnt =  1, refCntWtd = 1   
New refCnts for V06: refCnt =  1, refCntWtd = 1   
New refCnts for V00: refCnt =  2, refCntWtd = 2   
New refCnts for V05: refCnt =  1, refCntWtd = 1   
New refCnts for V05: refCnt =  2, refCntWtd = 2   
New refCnts for V06: refCnt =  2, refCntWtd = 2   
New refCnts for V07: refCnt =  1, refCntWtd = 1   
New refCnts for V00: refCnt =  3, refCntWtd = 3   
New refCnts for V00: refCnt =  4, refCntWtd = 4   
New refCnts for V06: refCnt =  3, refCntWtd = 3   
New refCnts for V03: refCnt =  1, refCntWtd = 2   
New refCnts for V03: refCnt =  2, refCntWtd = 4   
New refCnts for V04: refCnt =  1, refCntWtd = 1   
New refCnts for V04: refCnt =  2, refCntWtd = 2   
New refCnts for V00: refCnt =  5, refCntWtd = 4.25
New refCnts for V06: refCnt =  4, refCntWtd = 3.25
New refCnts for V04: refCnt =  3, refCntWtd = 2.25
New refCnts for V04: refCnt =  4, refCntWtd = 3.25

*** lvaComputeRefCounts -- implicit counts ***

*************** Finishing PHASE Lowering nodeinfo
Trees after Lowering nodeinfo

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)-> BB03 ( cond )                     i label target hascall gcsafe LIR 
BB02 [0004]  1       BB01                  0.25    [022..023)                                     i hascall gcsafe LIR 
BB03 [0005]  2       BB01,BB02             1       [022..023)        (return)                     i label target gcsafe LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..02F) -> BB03 (cond), preds={} succs={BB02,BB03}
               [000082] ------------                 IL_OFFSET void   IL offset: 0x0
N001 (  1,  1) [000081] ------------        t81 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t81    ref    
N003 (  5,  4) [000072] DA--G-------              *  STORE_LCL_VAR ref   (AX) V06 tmp5         
               [000083] ------------                 IL_OFFSET void   IL offset: 0xc
N001 (  1,  1) [000011] -c----------        t11 =    CNS_INT   int    -1 $40
                                                  /--*  t11    int    
N003 (  5,  4) [000013] DA--G-------              *  STORE_LCL_VAR int   (AX) V05 tmp4         
               [000084] ------------                 IL_OFFSET void   IL offset: 0x14
N002 (  3,  2) [000037] -------N----        t37 =    LCL_VAR_ADDR byref  V00 loc0         
                                                  *    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                  *    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                  *    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
                                                  /--*  t37    byref  
               [000089] ------------        t89 = *  PUTARG_REG byref  REG rcx
                                                  /--*  t89    byref  arg0 in rcx
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void
               [000085] ------------                 IL_OFFSET void   IL offset: 0x22
N001 (  3,  2) [000041] ------------        t41 =    LCL_VAR   ref   (AX) V06 tmp5          $240
                                                  /--*  t41    ref    
N003 (  3,  3) [000046] DA--G-------              *  STORE_LCL_VAR ref    V03 tmp2         d:2
               [000086] ------------                 IL_OFFSET void   IL offset: 0x22
N001 (  1,  1) [000047] ------------        t47 =    LCL_VAR   ref    V03 tmp2         u:2 (last use) $240
                                                  /--*  t47    ref    
N003 (  5,  4) [000053] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:2
               [000087] ------------                 IL_OFFSET void   IL offset: 0x22
N001 (  1,  1) [000048] ------------        t48 =    LCL_VAR   ref    V04 tmp3         u:2 $240
N002 (  1,  1) [000049] -c----------        t49 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t48    ref    
                                                  +--*  t49    ref    
N003 (  3,  3) [000050] J------N----              *  NE        void   $280
N004 (  5,  5) [000051] ------------              *  JTRUE     void  

------------ BB02 [022..023), preds={BB01} succs={BB03}
               [000088] ------------                 IL_OFFSET void   IL offset: 0x22
N003 (  3,  2) [000058] -------N----        t58 =    LCL_VAR_ADDR byref  V06 tmp5         
                                                  /--*  t58    byref  
               [000090] ------------        t90 = *  PUTARG_REG byref  REG rcx
N005 (  2, 10) [000062] H-----------        t62 =    CNS_INT(h) long   0xd1ffab1e class $2c0
                                                  /--*  t62    long   
               [000091] ------------        t91 = *  PUTARG_REG long   REG rdx
                                                  /--*  t90    byref  this in rcx
                                                  +--*  t91    long   arg1 in rdx
N006 ( 19, 21) [000061] --CXG-------        t61 = *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].InitializeTaskAsPromise $c4
                                                  /--*  t61    ref    
N008 ( 23, 24) [000064] DA-XG-------              *  STORE_LCL_VAR ref    V04 tmp3         d:4

------------ BB03 [022..023) (return), preds={BB01,BB02} succs={}
N001 (  0,  0) [000080] ------------        t80 =    PHI_ARG   ref    V04 tmp3         u:4 $c4
N002 (  0,  0) [000079] ------------        t79 =    PHI_ARG   ref    V04 tmp3         u:2 $240
                                                  /--*  t80    ref    
                                                  +--*  t79    ref    
N003 (  0,  0) [000077] ------------        t77 = *  PHI       ref   
                                                  /--*  t77    ref    
N005 (  0,  0) [000078] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:3
N001 (  3,  2) [000056] ------------        t56 =    LCL_VAR   ref    V04 tmp3         u:3 (last use) $241
                                                  /--*  t56    ref    
N002 (  4,  3) [000029] ------------              *  RETURN    ref    $c7

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Trees before Calculate stack level slots

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)-> BB03 ( cond )                     i label target hascall gcsafe LIR 
BB02 [0004]  1       BB01                  0.25    [022..023)                                     i hascall gcsafe LIR 
BB03 [0005]  2       BB01,BB02             1       [022..023)        (return)                     i label target gcsafe LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..02F) -> BB03 (cond), preds={} succs={BB02,BB03}
               [000082] ------------                 IL_OFFSET void   IL offset: 0x0
N001 (  1,  1) [000081] ------------        t81 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t81    ref    
N003 (  5,  4) [000072] DA--G-------              *  STORE_LCL_VAR ref   (AX) V06 tmp5         
               [000083] ------------                 IL_OFFSET void   IL offset: 0xc
N001 (  1,  1) [000011] -c----------        t11 =    CNS_INT   int    -1 $40
                                                  /--*  t11    int    
N003 (  5,  4) [000013] DA--G-------              *  STORE_LCL_VAR int   (AX) V05 tmp4         
               [000084] ------------                 IL_OFFSET void   IL offset: 0x14
N002 (  3,  2) [000037] -------N----        t37 =    LCL_VAR_ADDR byref  V00 loc0         
                                                  *    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                  *    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                  *    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
                                                  /--*  t37    byref  
               [000089] ------------        t89 = *  PUTARG_REG byref  REG rcx
                                                  /--*  t89    byref  arg0 in rcx
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void
               [000085] ------------                 IL_OFFSET void   IL offset: 0x22
N001 (  3,  2) [000041] ------------        t41 =    LCL_VAR   ref   (AX) V06 tmp5          $240
                                                  /--*  t41    ref    
N003 (  3,  3) [000046] DA--G-------              *  STORE_LCL_VAR ref    V03 tmp2         d:2
               [000086] ------------                 IL_OFFSET void   IL offset: 0x22
N001 (  1,  1) [000047] ------------        t47 =    LCL_VAR   ref    V03 tmp2         u:2 (last use) $240
                                                  /--*  t47    ref    
N003 (  5,  4) [000053] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:2
               [000087] ------------                 IL_OFFSET void   IL offset: 0x22
N001 (  1,  1) [000048] ------------        t48 =    LCL_VAR   ref    V04 tmp3         u:2 $240
N002 (  1,  1) [000049] -c----------        t49 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t48    ref    
                                                  +--*  t49    ref    
N003 (  3,  3) [000050] J------N----              *  NE        void   $280
N004 (  5,  5) [000051] ------------              *  JTRUE     void  

------------ BB02 [022..023), preds={BB01} succs={BB03}
               [000088] ------------                 IL_OFFSET void   IL offset: 0x22
N003 (  3,  2) [000058] -------N----        t58 =    LCL_VAR_ADDR byref  V06 tmp5         
                                                  /--*  t58    byref  
               [000090] ------------        t90 = *  PUTARG_REG byref  REG rcx
N005 (  2, 10) [000062] H-----------        t62 =    CNS_INT(h) long   0xd1ffab1e class $2c0
                                                  /--*  t62    long   
               [000091] ------------        t91 = *  PUTARG_REG long   REG rdx
                                                  /--*  t90    byref  this in rcx
                                                  +--*  t91    long   arg1 in rdx
N006 ( 19, 21) [000061] --CXG-------        t61 = *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].InitializeTaskAsPromise $c4
                                                  /--*  t61    ref    
N008 ( 23, 24) [000064] DA-XG-------              *  STORE_LCL_VAR ref    V04 tmp3         d:4

------------ BB03 [022..023) (return), preds={BB01,BB02} succs={}
N001 (  0,  0) [000080] ------------        t80 =    PHI_ARG   ref    V04 tmp3         u:4 $c4
N002 (  0,  0) [000079] ------------        t79 =    PHI_ARG   ref    V04 tmp3         u:2 $240
                                                  /--*  t80    ref    
                                                  +--*  t79    ref    
N003 (  0,  0) [000077] ------------        t77 = *  PHI       ref   
                                                  /--*  t77    ref    
N005 (  0,  0) [000078] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:3
N001 (  3,  2) [000056] ------------        t56 =    LCL_VAR   ref    V04 tmp3         u:3 (last use) $241
                                                  /--*  t56    ref    
N002 (  4,  3) [000029] ------------              *  RETURN    ref    $c7

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Calculate stack level slots

*************** Finishing PHASE Calculate stack level slots [no changes]

*************** Starting PHASE Linear scan register alloc
Clearing modified regs.

buildIntervals ========

-----------------
LIVENESS:
-----------------
BB01 use def in out
{}
{V03 V04 V08}
{}
{V04}
BB02 use def in out
{}
{V04}
{}
{V04}
BB03 use def in out
{V04}
{}
{V04}
{}
Interval  0: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  0: (V03) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  1: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  1: (V04) ref RefPositions {} physReg:NA Preferences=[allInt]

FP callee save candidate vars: None

floatVarCount = 0; hasLoops = 0, singleExit = 1
TUPLE STYLE DUMP BEFORE LSRA
LSRA Block Sequence: BB01(  1   ) 
BB02(  0.25) 
BB03(  1   ) 

BB01 [000..02F) -> BB03 (cond), preds={} succs={BB02,BB03}
=====
  N000.                    IL_OFFSET IL offset: 0x0
  N001. t81             =  CNS_INT   null
  N003.                    V06 MEM; t81
  N000.                    IL_OFFSET IL offset: 0xc
  N001.                    CNS_INT   -1
  N003.                    V05 MEM
  N000.                    IL_OFFSET IL offset: 0x14
  N002. t37             =  LCL_VAR_ADDR V00 loc0         
                                                      int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                      ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                      ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
  N000. t89             =  PUTARG_REG; t37
  N004.                    CALL     ; t89
  N000.                    IL_OFFSET IL offset: 0x22
  N001. t41             =  V06 MEM
  N003.                    V03(t46); t41
  N000.                    IL_OFFSET IL offset: 0x22
  N001.                    V03(t47*)
  N003.                    V04(t53); t47*
  N000.                    IL_OFFSET IL offset: 0x22
  N001.                    V04(t48)
  N002.                    CNS_INT   null
  N003.                    NE       ; t48
  N004.                    JTRUE    

BB02 [022..023), preds={BB01} succs={BB03}
=====
  N000.                    IL_OFFSET IL offset: 0x22
  N003. t58             =  LCL_VAR_ADDR V06 tmp5         
  N000. t90             =  PUTARG_REG; t58
  N005. t62             =  CNS_INT(h) 0xd1ffab1e class
  N000. t91             =  PUTARG_REG; t62
  N006. t61             =  CALL     ; t90,t91
  N008.                    V04(t64); t61

BB03 [022..023) (return), preds={BB01,BB02} succs={}
=====
  N001.                    V04(t56*)
  N002.                    RETURN   ; t56*




buildIntervals second part ========

NEW BLOCK BB01
<RefPosition #0   @1   RefTypeBB  BB01 regmask=[] minReg=1>

DefList: {  }
N003 (???,???) [000082] ------------              *  IL_OFFSET void   IL offset: 0x0 REG NA

DefList: {  }
N005 (  1,  1) [000081] ------------              *  CNS_INT   ref    null REG NA $VN.Null
Interval  2: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #1   @6   RefTypeDef <Ivl:2> CNS_INT BB01 regmask=[allInt] minReg=1>

DefList: { N005.t81. CNS_INT }
N007 (  5,  4) [000072] DA--G-------              *  STORE_LCL_VAR ref   (AX) V06 tmp5          NA REG NA
<RefPosition #2   @7   RefTypeUse <Ivl:2>  BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N009 (???,???) [000083] ------------              *  IL_OFFSET void   IL offset: 0xc REG NA

DefList: {  }
N011 (  1,  1) [000011] -c----------              *  CNS_INT   int    -1 REG NA $40
Contained
DefList: {  }
N013 (  5,  4) [000013] DA--G-------              *  STORE_LCL_VAR int   (AX) V05 tmp4          NA REG NA

DefList: {  }
N015 (???,???) [000084] ------------              *  IL_OFFSET void   IL offset: 0x14 REG NA

DefList: {  }
N017 (  3,  2) [000037] -------N----              *  LCL_VAR_ADDR byref  V00 loc0          NA
                                                  *    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                  *    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                  *    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6          REG NA
Interval  3: byref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #3   @18  RefTypeDef <Ivl:3> LCL_VAR_ADDR BB01 regmask=[allInt] minReg=1>

DefList: { N017.t37. LCL_VAR_ADDR }
N019 (???,???) [000089] ------------              *  PUTARG_REG byref  REG rcx
<RefPosition #4   @19  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #5   @19  RefTypeUse <Ivl:3>  BB01 regmask=[rcx] minReg=1 last fixed>
Interval  4: byref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #6   @20  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #7   @20  RefTypeDef <Ivl:4> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>

DefList: { N019.t89. PUTARG_REG }
N021 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start REG NA $VN.Void
<RefPosition #8   @21  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #9   @21  RefTypeUse <Ivl:4>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #10  @22  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #11  @22  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #12  @22  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #13  @22  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #14  @22  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #15  @22  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #16  @22  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>

DefList: {  }
N023 (???,???) [000085] ------------              *  IL_OFFSET void   IL offset: 0x22 REG NA

DefList: {  }
N025 (  3,  2) [000041] ------------              *  LCL_VAR   ref   (AX) V06 tmp5          NA REG NA $240
Interval  5: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #17  @26  RefTypeDef <Ivl:5> LCL_VAR BB01 regmask=[allInt] minReg=1>

DefList: { N025.t41. LCL_VAR }
N027 (  3,  3) [000046] DA--G-------              *  STORE_LCL_VAR ref    V03 tmp2         d:2 NA REG NA
<RefPosition #18  @27  RefTypeUse <Ivl:5>  BB01 regmask=[allInt] minReg=1 last>
Assigning related <V03/L0> to <I5>
<RefPosition #19  @28  RefTypeDef <Ivl:0 V03> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N029 (???,???) [000086] ------------              *  IL_OFFSET void   IL offset: 0x22 REG NA

DefList: {  }
N031 (  1,  1) [000047] ------------              *  LCL_VAR   ref    V03 tmp2         u:2 NA (last use) REG NA $240

DefList: {  }
N033 (  5,  4) [000053] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:2 NA REG NA
<RefPosition #20  @33  RefTypeUse <Ivl:0 V03> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
Assigning related <V04/L1> to <V03/L0>
<RefPosition #21  @34  RefTypeDef <Ivl:1 V04> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N035 (???,???) [000087] ------------              *  IL_OFFSET void   IL offset: 0x22 REG NA

DefList: {  }
N037 (  1,  1) [000048] ------------              *  LCL_VAR   ref    V04 tmp3         u:2 NA REG NA $240

DefList: {  }
N039 (  1,  1) [000049] -c----------              *  CNS_INT   ref    null REG NA $VN.Null
Contained
DefList: {  }
N041 (  3,  3) [000050] J------N----              *  NE        void   REG NA $280
<RefPosition #22  @41  RefTypeUse <Ivl:1 V04> LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N043 (  5,  5) [000051] ------------              *  JTRUE     void   REG NA



CHECKING LAST USES for BB01, liveout={V04}
==============================
use: {}
def: {V03 V04 V08}

NEW BLOCK BB02


Setting BB01 as the predecessor for determining incoming variable registers of BB02
<RefPosition #23  @45  RefTypeBB  BB02 regmask=[] minReg=1>

DefList: {  }
N047 (???,???) [000088] ------------              *  IL_OFFSET void   IL offset: 0x22 REG NA

DefList: {  }
N049 (  3,  2) [000058] -------N----              *  LCL_VAR_ADDR byref  V06 tmp5          NA REG NA
Interval  6: byref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #24  @50  RefTypeDef <Ivl:6> LCL_VAR_ADDR BB02 regmask=[allInt] minReg=1>

DefList: { N049.t58. LCL_VAR_ADDR }
N051 (???,???) [000090] ------------              *  PUTARG_REG byref  REG rcx
<RefPosition #25  @51  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #26  @51  RefTypeUse <Ivl:6>  BB02 regmask=[rcx] minReg=1 last fixed>
Interval  7: byref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #27  @52  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #28  @52  RefTypeDef <Ivl:7> PUTARG_REG BB02 regmask=[rcx] minReg=1 fixed>

DefList: { N051.t90. PUTARG_REG }
N053 (  2, 10) [000062] H-----------              *  CNS_INT(h) long   0xd1ffab1e class REG NA $2c0
Interval  8: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #29  @54  RefTypeDef <Ivl:8> CNS_INT BB02 regmask=[allInt] minReg=1>

DefList: { N051.t90. PUTARG_REG; N053.t62. CNS_INT }
N055 (???,???) [000091] ------------              *  PUTARG_REG long   REG rdx
<RefPosition #30  @55  RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #31  @55  RefTypeUse <Ivl:8>  BB02 regmask=[rdx] minReg=1 last fixed>
Interval  9: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #32  @56  RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #33  @56  RefTypeDef <Ivl:9> PUTARG_REG BB02 regmask=[rdx] minReg=1 fixed>

DefList: { N051.t90. PUTARG_REG; N055.t91. PUTARG_REG }
N057 ( 19, 21) [000061] --CXG-------              *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].InitializeTaskAsPromise REG NA $c4
<RefPosition #34  @57  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #35  @57  RefTypeUse <Ivl:7>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #36  @57  RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #37  @57  RefTypeUse <Ivl:9>  BB02 regmask=[rdx] minReg=1 last fixed>
<RefPosition #38  @58  RefTypeKill <Reg:rax>  BB02 regmask=[rax] minReg=1>
<RefPosition #39  @58  RefTypeKill <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #40  @58  RefTypeKill <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #41  @58  RefTypeKill <Reg:r8 >  BB02 regmask=[r8] minReg=1>
<RefPosition #42  @58  RefTypeKill <Reg:r9 >  BB02 regmask=[r9] minReg=1>
<RefPosition #43  @58  RefTypeKill <Reg:r10>  BB02 regmask=[r10] minReg=1>
<RefPosition #44  @58  RefTypeKill <Reg:r11>  BB02 regmask=[r11] minReg=1>
Interval 10: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #45  @58  RefTypeFixedReg <Reg:rax>  BB02 regmask=[rax] minReg=1>
<RefPosition #46  @58  RefTypeDef <Ivl:10> CALL BB02 regmask=[rax] minReg=1 fixed>

DefList: { N057.t61. CALL }
N059 ( 23, 24) [000064] DA-XG-------              *  STORE_LCL_VAR ref    V04 tmp3         d:4 NA REG NA
<RefPosition #47  @59  RefTypeUse <Ivl:10>  BB02 regmask=[allInt] minReg=1 last>
Assigning related <V04/L1> to <I10>
<RefPosition #48  @60  RefTypeDef <Ivl:1 V04> STORE_LCL_VAR BB02 regmask=[allInt] minReg=1 last>



CHECKING LAST USES for BB02, liveout={V04}
==============================
use: {}
def: {V04}

NEW BLOCK BB03


Setting BB01 as the predecessor for determining incoming variable registers of BB03
<RefPosition #49  @61  RefTypeBB  BB03 regmask=[] minReg=1>

DefList: {  }
N063 (  3,  2) [000056] ------------              *  LCL_VAR   ref    V04 tmp3         u:3 NA (last use) REG NA $241

DefList: {  }
N065 (  4,  3) [000029] ------------              *  RETURN    ref    REG NA $c7
<RefPosition #50  @65  RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #51  @65  RefTypeUse <Ivl:1 V04> LCL_VAR BB03 regmask=[rax] minReg=1 last fixed>



CHECKING LAST USES for BB03, liveout={}
==============================
use: {V04}
def: {}

Linear scan intervals BEFORE VALIDATING INTERVALS:
Interval  0: (V03) ref RefPositions {#19@28 #20@33} physReg:NA Preferences=[allInt] RelatedInterval <V04/L1>
Interval  1: (V04) ref RefPositions {#21@34 #22@41 #48@60 #51@65} physReg:NA Preferences=[rax]
Interval  2: ref (constant) RefPositions {#1@6 #2@7} physReg:NA Preferences=[allInt]
Interval  3: byref RefPositions {#3@18 #5@19} physReg:NA Preferences=[rcx]
Interval  4: byref RefPositions {#7@20 #9@21} physReg:NA Preferences=[rcx]
Interval  5: ref RefPositions {#17@26 #18@27} physReg:NA Preferences=[allInt] RelatedInterval <V03/L0>
Interval  6: byref RefPositions {#24@50 #26@51} physReg:NA Preferences=[rcx]
Interval  7: byref RefPositions {#28@52 #35@57} physReg:NA Preferences=[rcx]
Interval  8: long (constant) RefPositions {#29@54 #31@55} physReg:NA Preferences=[rdx]
Interval  9: long RefPositions {#33@56 #37@57} physReg:NA Preferences=[rdx]
Interval 10: ref RefPositions {#46@58 #47@59} physReg:NA Preferences=[rax] RelatedInterval <V04/L1>

------------
REFPOSITIONS BEFORE VALIDATING INTERVALS: 
------------
<RefPosition #0   @1   RefTypeBB  BB01 regmask=[] minReg=1>
<RefPosition #1   @6   RefTypeDef <Ivl:2> CNS_INT BB01 regmask=[allInt] minReg=1>
<RefPosition #2   @7   RefTypeUse <Ivl:2>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #3   @18  RefTypeDef <Ivl:3> LCL_VAR_ADDR BB01 regmask=[rcx] minReg=1>
<RefPosition #4   @19  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #5   @19  RefTypeUse <Ivl:3>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #6   @20  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #7   @20  RefTypeDef <Ivl:4> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #8   @21  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #9   @21  RefTypeUse <Ivl:4>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #10  @22  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #11  @22  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #12  @22  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #13  @22  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #14  @22  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #15  @22  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #16  @22  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #17  @26  RefTypeDef <Ivl:5> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #18  @27  RefTypeUse <Ivl:5>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #19  @28  RefTypeDef <Ivl:0 V03> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #20  @33  RefTypeUse <Ivl:0 V03> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #21  @34  RefTypeDef <Ivl:1 V04> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #22  @41  RefTypeUse <Ivl:1 V04> LCL_VAR BB01 regmask=[allInt] minReg=1 regOptional>
<RefPosition #23  @45  RefTypeBB  BB02 regmask=[] minReg=1>
<RefPosition #24  @50  RefTypeDef <Ivl:6> LCL_VAR_ADDR BB02 regmask=[rcx] minReg=1>
<RefPosition #25  @51  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #26  @51  RefTypeUse <Ivl:6>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #27  @52  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #28  @52  RefTypeDef <Ivl:7> PUTARG_REG BB02 regmask=[rcx] minReg=1 fixed>
<RefPosition #29  @54  RefTypeDef <Ivl:8> CNS_INT BB02 regmask=[rdx] minReg=1>
<RefPosition #30  @55  RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #31  @55  RefTypeUse <Ivl:8>  BB02 regmask=[rdx] minReg=1 last fixed>
<RefPosition #32  @56  RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #33  @56  RefTypeDef <Ivl:9> PUTARG_REG BB02 regmask=[rdx] minReg=1 fixed>
<RefPosition #34  @57  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #35  @57  RefTypeUse <Ivl:7>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #36  @57  RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #37  @57  RefTypeUse <Ivl:9>  BB02 regmask=[rdx] minReg=1 last fixed>
<RefPosition #38  @58  RefTypeKill <Reg:rax>  BB02 regmask=[rax] minReg=1 last>
<RefPosition #39  @58  RefTypeKill <Reg:rcx>  BB02 regmask=[rcx] minReg=1 last>
<RefPosition #40  @58  RefTypeKill <Reg:rdx>  BB02 regmask=[rdx] minReg=1 last>
<RefPosition #41  @58  RefTypeKill <Reg:r8 >  BB02 regmask=[r8] minReg=1 last>
<RefPosition #42  @58  RefTypeKill <Reg:r9 >  BB02 regmask=[r9] minReg=1 last>
<RefPosition #43  @58  RefTypeKill <Reg:r10>  BB02 regmask=[r10] minReg=1 last>
<RefPosition #44  @58  RefTypeKill <Reg:r11>  BB02 regmask=[r11] minReg=1 last>
<RefPosition #45  @58  RefTypeFixedReg <Reg:rax>  BB02 regmask=[rax] minReg=1>
<RefPosition #46  @58  RefTypeDef <Ivl:10> CALL BB02 regmask=[rax] minReg=1 fixed>
<RefPosition #47  @59  RefTypeUse <Ivl:10>  BB02 regmask=[allInt] minReg=1 last>
<RefPosition #48  @60  RefTypeDef <Ivl:1 V04> STORE_LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #49  @61  RefTypeBB  BB03 regmask=[] minReg=1>
<RefPosition #50  @65  RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #51  @65  RefTypeUse <Ivl:1 V04> LCL_VAR BB03 regmask=[rax] minReg=1 last fixed>
-----------------
<RefPosition #19  @28  RefTypeDef <Ivl:0 V03> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #20  @33  RefTypeUse <Ivl:0 V03> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
-----------------
<RefPosition #21  @34  RefTypeDef <Ivl:1 V04> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #22  @41  RefTypeUse <Ivl:1 V04> LCL_VAR BB01 regmask=[allInt] minReg=1 regOptional>
<RefPosition #48  @60  RefTypeDef <Ivl:1 V04> STORE_LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #51  @65  RefTypeUse <Ivl:1 V04> LCL_VAR BB03 regmask=[rax] minReg=1 last fixed>
TUPLE STYLE DUMP WITH REF POSITIONS
Incoming Parameters: 
BB01 [000..02F) -> BB03 (cond), preds={} succs={BB02,BB03}
=====
  N003.                    IL_OFFSET IL offset: 0x0
  N005.                    CNS_INT   null
        Def:<I2>(#1)
  N007.                    V06 MEM
                               Use:<I2>(#2) *
  N009.                    IL_OFFSET IL offset: 0xc
  N011.                    CNS_INT   -1
  N013.                    V05 MEM
  N015.                    IL_OFFSET IL offset: 0x14
  N017.                    LCL_VAR_ADDR V00 loc0          NA
                                                      int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                      ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                      ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
        Def:<I3>(#3)
  N019.                    PUTARG_REG
                               Use:<I3>(#5) Fixed:rcx(#4) *
        Def:<I4>(#7) rcx
  N021.                    CALL     
                               Use:<I4>(#9) Fixed:rcx(#8) *
        Kill: rax rcx rdx r8 r9 r10 r11 
  N023.                    IL_OFFSET IL offset: 0x22
  N025.                    V06 MEM
        Def:<I5>(#17) Pref:<V03/L0>
  N027.                    V03(L0)
                               Use:<I5>(#18) *
        Def:<V03/L0>(#19) Pref:<V04/L1>
  N029.                    IL_OFFSET IL offset: 0x22
  N031.                    V03(L0)
  N033.                    V04(L1)
                               Use:<V03/L0>(#20) *
        Def:<V04/L1>(#21)
  N035.                    IL_OFFSET IL offset: 0x22
  N037.                    V04(L1)
  N039.                    CNS_INT   null
  N041.                    NE       
                               Use:<V04/L1>(#22)
  N043.                    JTRUE    

BB02 [022..023), preds={BB01} succs={BB03}
=====
  N047.                    IL_OFFSET IL offset: 0x22
  N049.                    LCL_VAR_ADDR V06 tmp5          NA
        Def:<I6>(#24)
  N051.                    PUTARG_REG
                               Use:<I6>(#26) Fixed:rcx(#25) *
        Def:<I7>(#28) rcx
  N053.                    CNS_INT(h) 0xd1ffab1e class
        Def:<I8>(#29)
  N055.                    PUTARG_REG
                               Use:<I8>(#31) Fixed:rdx(#30) *
        Def:<I9>(#33) rdx
  N057.                    CALL     
                               Use:<I7>(#35) Fixed:rcx(#34) *
                               Use:<I9>(#37) Fixed:rdx(#36) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I10>(#46) rax Pref:<V04/L1>
  N059.                    V04(L1)
                               Use:<I10>(#47) *
        Def:<V04/L1>(#48)

BB03 [022..023) (return), preds={BB01,BB02} succs={}
=====
  N063.                    V04(L1)
  N065.                    RETURN   
                               Use:<V04/L1>(#51) Fixed:rax(#50) *




Linear scan intervals after buildIntervals:
Interval  0: (V03) ref RefPositions {#19@28 #20@33} physReg:NA Preferences=[allInt] RelatedInterval <V04/L1>
Interval  1: (V04) ref RefPositions {#21@34 #22@41 #48@60 #51@65} physReg:NA Preferences=[rax]
Interval  2: ref (constant) RefPositions {#1@6 #2@7} physReg:NA Preferences=[allInt]
Interval  3: byref RefPositions {#3@18 #5@19} physReg:NA Preferences=[rcx]
Interval  4: byref RefPositions {#7@20 #9@21} physReg:NA Preferences=[rcx]
Interval  5: ref RefPositions {#17@26 #18@27} physReg:NA Preferences=[allInt] RelatedInterval <V03/L0>
Interval  6: byref RefPositions {#24@50 #26@51} physReg:NA Preferences=[rcx]
Interval  7: byref RefPositions {#28@52 #35@57} physReg:NA Preferences=[rcx]
Interval  8: long (constant) RefPositions {#29@54 #31@55} physReg:NA Preferences=[rdx]
Interval  9: long RefPositions {#33@56 #37@57} physReg:NA Preferences=[rdx]
Interval 10: ref RefPositions {#46@58 #47@59} physReg:NA Preferences=[rax] RelatedInterval <V04/L1>

*************** In LinearScan::allocateRegisters()

Linear scan intervals before allocateRegisters:
Interval  0: (V03) ref RefPositions {#19@28 #20@33} physReg:NA Preferences=[allInt] RelatedInterval <V04/L1>
Interval  1: (V04) ref RefPositions {#21@34 #22@41 #48@60 #51@65} physReg:NA Preferences=[rax]
Interval  2: ref (constant) RefPositions {#1@6 #2@7} physReg:NA Preferences=[allInt]
Interval  3: byref RefPositions {#3@18 #5@19} physReg:NA Preferences=[rcx]
Interval  4: byref RefPositions {#7@20 #9@21} physReg:NA Preferences=[rcx]
Interval  5: ref RefPositions {#17@26 #18@27} physReg:NA Preferences=[allInt] RelatedInterval <V03/L0>
Interval  6: byref RefPositions {#24@50 #26@51} physReg:NA Preferences=[rcx]
Interval  7: byref RefPositions {#28@52 #35@57} physReg:NA Preferences=[rcx]
Interval  8: long (constant) RefPositions {#29@54 #31@55} physReg:NA Preferences=[rdx]
Interval  9: long RefPositions {#33@56 #37@57} physReg:NA Preferences=[rdx]
Interval 10: ref RefPositions {#46@58 #47@59} physReg:NA Preferences=[rax] RelatedInterval <V04/L1>

------------
REFPOSITIONS BEFORE ALLOCATION: 
------------
<RefPosition #0   @1   RefTypeBB  BB01 regmask=[] minReg=1>
<RefPosition #1   @6   RefTypeDef <Ivl:2> CNS_INT BB01 regmask=[allInt] minReg=1>
<RefPosition #2   @7   RefTypeUse <Ivl:2>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #3   @18  RefTypeDef <Ivl:3> LCL_VAR_ADDR BB01 regmask=[rcx] minReg=1>
<RefPosition #4   @19  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #5   @19  RefTypeUse <Ivl:3>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #6   @20  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #7   @20  RefTypeDef <Ivl:4> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #8   @21  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #9   @21  RefTypeUse <Ivl:4>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #10  @22  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #11  @22  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #12  @22  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #13  @22  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #14  @22  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #15  @22  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #16  @22  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #17  @26  RefTypeDef <Ivl:5> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #18  @27  RefTypeUse <Ivl:5>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #19  @28  RefTypeDef <Ivl:0 V03> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #20  @33  RefTypeUse <Ivl:0 V03> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #21  @34  RefTypeDef <Ivl:1 V04> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #22  @41  RefTypeUse <Ivl:1 V04> LCL_VAR BB01 regmask=[allInt] minReg=1 regOptional>
<RefPosition #23  @45  RefTypeBB  BB02 regmask=[] minReg=1>
<RefPosition #24  @50  RefTypeDef <Ivl:6> LCL_VAR_ADDR BB02 regmask=[rcx] minReg=1>
<RefPosition #25  @51  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #26  @51  RefTypeUse <Ivl:6>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #27  @52  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #28  @52  RefTypeDef <Ivl:7> PUTARG_REG BB02 regmask=[rcx] minReg=1 fixed>
<RefPosition #29  @54  RefTypeDef <Ivl:8> CNS_INT BB02 regmask=[rdx] minReg=1>
<RefPosition #30  @55  RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #31  @55  RefTypeUse <Ivl:8>  BB02 regmask=[rdx] minReg=1 last fixed>
<RefPosition #32  @56  RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #33  @56  RefTypeDef <Ivl:9> PUTARG_REG BB02 regmask=[rdx] minReg=1 fixed>
<RefPosition #34  @57  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #35  @57  RefTypeUse <Ivl:7>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #36  @57  RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #37  @57  RefTypeUse <Ivl:9>  BB02 regmask=[rdx] minReg=1 last fixed>
<RefPosition #38  @58  RefTypeKill <Reg:rax>  BB02 regmask=[rax] minReg=1 last>
<RefPosition #39  @58  RefTypeKill <Reg:rcx>  BB02 regmask=[rcx] minReg=1 last>
<RefPosition #40  @58  RefTypeKill <Reg:rdx>  BB02 regmask=[rdx] minReg=1 last>
<RefPosition #41  @58  RefTypeKill <Reg:r8 >  BB02 regmask=[r8] minReg=1 last>
<RefPosition #42  @58  RefTypeKill <Reg:r9 >  BB02 regmask=[r9] minReg=1 last>
<RefPosition #43  @58  RefTypeKill <Reg:r10>  BB02 regmask=[r10] minReg=1 last>
<RefPosition #44  @58  RefTypeKill <Reg:r11>  BB02 regmask=[r11] minReg=1 last>
<RefPosition #45  @58  RefTypeFixedReg <Reg:rax>  BB02 regmask=[rax] minReg=1>
<RefPosition #46  @58  RefTypeDef <Ivl:10> CALL BB02 regmask=[rax] minReg=1 fixed>
<RefPosition #47  @59  RefTypeUse <Ivl:10>  BB02 regmask=[allInt] minReg=1 last>
<RefPosition #48  @60  RefTypeDef <Ivl:1 V04> STORE_LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #49  @61  RefTypeBB  BB03 regmask=[] minReg=1>
<RefPosition #50  @65  RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #51  @65  RefTypeUse <Ivl:1 V04> LCL_VAR BB03 regmask=[rax] minReg=1 last fixed>

VAR REFPOSITIONS BEFORE ALLOCATION
--- V00
--- V01
--- V02
--- V03  (Interval 0)
<RefPosition #19  @28  RefTypeDef <Ivl:0 V03> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #20  @33  RefTypeUse <Ivl:0 V03> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
--- V04  (Interval 1)
<RefPosition #21  @34  RefTypeDef <Ivl:1 V04> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #22  @41  RefTypeUse <Ivl:1 V04> LCL_VAR BB01 regmask=[allInt] minReg=1 regOptional>
<RefPosition #48  @60  RefTypeDef <Ivl:1 V04> STORE_LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #51  @65  RefTypeUse <Ivl:1 V04> LCL_VAR BB03 regmask=[rax] minReg=1 last fixed>
--- V05
--- V06
--- V07
--- V08



Allocating Registers
--------------------
The following table has one or more rows for each RefPosition that is handled during allocation.
The first column provides the basic information about the RefPosition, with its type (e.g. Def,
Use, Fixd) followed by a '*' if it is a last use, and a 'D' if it is delayRegFree, and then the
action taken during allocation (e.g. Alloc a new register, or Keep an existing one).
The subsequent columns show the Interval occupying each register, if any, followed by 'a' if it is
active, a 'p' if it is a large vector that has been partially spilled, and 'i'if it is inactive.
Columns are only printed up to the last modifed register, which may increase during allocation,
in which case additional columns will appear.  
Registers which are not marked modified have ---- in their column.

------------------------------+----+----+----+----+----+----+----+----+----+
LocRP# Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
------------------------------+----+----+----+----+----+----+----+----+----+
                              |    |    |    |    |    |    |    |    |    |
 1.#0  BB1 PredBB0            |    |    |    |    |    |    |    |    |    |
 6.#1  C2   Def    Alloc rcx  |    |C2 a|    |    |    |    |    |    |    |
 7.#2  C2   Use *  Keep  rcx  |    |C2 a|    |    |    |    |    |    |    |
18.#3  I3   Def    Alloc rcx  |    |I3 a|    |    |    |    |    |    |    |
19.#4  rcx  Fixd   Keep  rcx  |    |I3 a|    |    |    |    |    |    |    |
19.#5  I3   Use *  Keep  rcx  |    |I3 a|    |    |    |    |    |    |    |
20.#6  rcx  Fixd   Keep  rcx  |    |    |    |    |    |    |    |    |    |
20.#7  I4   Def    Alloc rcx  |    |I4 a|    |    |    |    |    |    |    |
21.#8  rcx  Fixd   Keep  rcx  |    |I4 a|    |    |    |    |    |    |    |
21.#9  I4   Use *  Keep  rcx  |    |I4 a|    |    |    |    |    |    |    |
22.#10 rax  Kill   Keep  rax  |    |    |    |    |    |    |    |    |    |
22.#11 rcx  Kill   Keep  rcx  |    |    |    |    |    |    |    |    |    |
22.#12 rdx  Kill   Keep  rdx  |    |    |    |    |    |    |    |    |    |
22.#13 r8   Kill   Keep  r8   |    |    |    |    |    |    |    |    |    |
22.#14 r9   Kill   Keep  r9   |    |    |    |    |    |    |    |    |    |
22.#15 r10  Kill   Keep  r10  |    |    |    |    |    |    |    |    |    |
22.#16 r11  Kill   Keep  r11  |    |    |    |    |    |    |    |    |    |
26.#17 I5   Def    Alloc rax  |I5 a|    |    |    |    |    |    |    |    |
27.#18 I5   Use *  Keep  rax  |I5 a|    |    |    |    |    |    |    |    |
28.#19 V3   Def    Alloc rax  |V3 a|    |    |    |    |    |    |    |    |
33.#20 V3   Use *  Keep  rax  |V3 a|    |    |    |    |    |    |    |    |
34.#21 V4   Def    Alloc rax  |V4 a|    |    |    |    |    |    |    |    |
41.#22 V4   Use    Keep  rax  |V4 a|    |    |    |    |    |    |    |    |
------------------------------+----+----+----+----+----+----+----+----+----+
LocRP# Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
------------------------------+----+----+----+----+----+----+----+----+----+
45.#23 BB2 PredBB1            |V4 i|    |    |    |    |    |    |    |    |
50.#24 I6   Def    Alloc rcx  |V4 i|I6 a|    |    |    |    |    |    |    |
51.#25 rcx  Fixd   Keep  rcx  |V4 i|I6 a|    |    |    |    |    |    |    |
51.#26 I6   Use *  Keep  rcx  |V4 i|I6 a|    |    |    |    |    |    |    |
52.#27 rcx  Fixd   Keep  rcx  |V4 i|    |    |    |    |    |    |    |    |
52.#28 I7   Def    Alloc rcx  |V4 i|I7 a|    |    |    |    |    |    |    |
54.#29 C8   Def    Alloc rdx  |V4 i|I7 a|C8 a|    |    |    |    |    |    |
55.#30 rdx  Fixd   Keep  rdx  |V4 i|I7 a|C8 a|    |    |    |    |    |    |
55.#31 C8   Use *  Keep  rdx  |V4 i|I7 a|C8 a|    |    |    |    |    |    |
56.#32 rdx  Fixd   Keep  rdx  |V4 i|I7 a|    |    |    |    |    |    |    |
56.#33 I9   Def    Alloc rdx  |V4 i|I7 a|I9 a|    |    |    |    |    |    |
57.#34 rcx  Fixd   Keep  rcx  |V4 i|I7 a|I9 a|    |    |    |    |    |    |
57.#35 I7   Use *  Keep  rcx  |V4 i|I7 a|I9 a|    |    |    |    |    |    |
57.#36 rdx  Fixd   Keep  rdx  |V4 i|I7 a|I9 a|    |    |    |    |    |    |
57.#37 I9   Use *  Keep  rdx  |V4 i|I7 a|I9 a|    |    |    |    |    |    |
58.#38 rax  Kill   Keep  rax  |    |    |    |    |    |    |    |    |    |
58.#39 rcx  Kill   Keep  rcx  |    |    |    |    |    |    |    |    |    |
58.#40 rdx  Kill   Keep  rdx  |    |    |    |    |    |    |    |    |    |
58.#41 r8   Kill   Keep  r8   |    |    |    |    |    |    |    |    |    |
58.#42 r9   Kill   Keep  r9   |    |    |    |    |    |    |    |    |    |
58.#43 r10  Kill   Keep  r10  |    |    |    |    |    |    |    |    |    |
58.#44 r11  Kill   Keep  r11  |    |    |    |    |    |    |    |    |    |
58.#45 rax  Fixd   Keep  rax  |    |    |    |    |    |    |    |    |    |
58.#46 I10  Def    Alloc rax  |I10a|    |    |    |    |    |    |    |    |
59.#47 I10  Use *  Keep  rax  |I10a|    |    |    |    |    |    |    |    |
60.#48 V4   Def    Alloc rax  |V4 a|    |    |    |    |    |    |    |    |
------------------------------+----+----+----+----+----+----+----+----+----+
LocRP# Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
------------------------------+----+----+----+----+----+----+----+----+----+
61.#49 BB3 PredBB1            |V4 a|    |    |    |    |    |    |    |    |
65.#50 rax  Fixd   Keep  rax  |V4 a|    |    |    |    |    |    |    |    |
65.#51 V4   Use *  Keep  rax  |    |    |    |    |    |    |    |    |    |

------------
REFPOSITIONS AFTER ALLOCATION: 
------------
<RefPosition #0   @1   RefTypeBB  BB01 regmask=[] minReg=1>
<RefPosition #1   @6   RefTypeDef <Ivl:2> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #2   @7   RefTypeUse <Ivl:2>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #3   @18  RefTypeDef <Ivl:3> LCL_VAR_ADDR BB01 regmask=[rcx] minReg=1>
<RefPosition #4   @19  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #5   @19  RefTypeUse <Ivl:3>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #6   @20  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #7   @20  RefTypeDef <Ivl:4> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #8   @21  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #9   @21  RefTypeUse <Ivl:4>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #10  @22  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #11  @22  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #12  @22  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #13  @22  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #14  @22  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #15  @22  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #16  @22  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #17  @26  RefTypeDef <Ivl:5> LCL_VAR BB01 regmask=[rax] minReg=1>
<RefPosition #18  @27  RefTypeUse <Ivl:5>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #19  @28  RefTypeDef <Ivl:0 V03> STORE_LCL_VAR BB01 regmask=[rax] minReg=1>
<RefPosition #20  @33  RefTypeUse <Ivl:0 V03> LCL_VAR BB01 regmask=[rax] minReg=1 last>
<RefPosition #21  @34  RefTypeDef <Ivl:1 V04> STORE_LCL_VAR BB01 regmask=[rax] minReg=1>
<RefPosition #22  @41  RefTypeUse <Ivl:1 V04> LCL_VAR BB01 regmask=[rax] minReg=1 regOptional>
<RefPosition #23  @45  RefTypeBB  BB02 regmask=[] minReg=1>
<RefPosition #24  @50  RefTypeDef <Ivl:6> LCL_VAR_ADDR BB02 regmask=[rcx] minReg=1>
<RefPosition #25  @51  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #26  @51  RefTypeUse <Ivl:6>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #27  @52  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #28  @52  RefTypeDef <Ivl:7> PUTARG_REG BB02 regmask=[rcx] minReg=1 fixed>
<RefPosition #29  @54  RefTypeDef <Ivl:8> CNS_INT BB02 regmask=[rdx] minReg=1>
<RefPosition #30  @55  RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #31  @55  RefTypeUse <Ivl:8>  BB02 regmask=[rdx] minReg=1 last fixed>
<RefPosition #32  @56  RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #33  @56  RefTypeDef <Ivl:9> PUTARG_REG BB02 regmask=[rdx] minReg=1 fixed>
<RefPosition #34  @57  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #35  @57  RefTypeUse <Ivl:7>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #36  @57  RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #37  @57  RefTypeUse <Ivl:9>  BB02 regmask=[rdx] minReg=1 last fixed>
<RefPosition #38  @58  RefTypeKill <Reg:rax>  BB02 regmask=[rax] minReg=1 last>
<RefPosition #39  @58  RefTypeKill <Reg:rcx>  BB02 regmask=[rcx] minReg=1 last>
<RefPosition #40  @58  RefTypeKill <Reg:rdx>  BB02 regmask=[rdx] minReg=1 last>
<RefPosition #41  @58  RefTypeKill <Reg:r8 >  BB02 regmask=[r8] minReg=1 last>
<RefPosition #42  @58  RefTypeKill <Reg:r9 >  BB02 regmask=[r9] minReg=1 last>
<RefPosition #43  @58  RefTypeKill <Reg:r10>  BB02 regmask=[r10] minReg=1 last>
<RefPosition #44  @58  RefTypeKill <Reg:r11>  BB02 regmask=[r11] minReg=1 last>
<RefPosition #45  @58  RefTypeFixedReg <Reg:rax>  BB02 regmask=[rax] minReg=1>
<RefPosition #46  @58  RefTypeDef <Ivl:10> CALL BB02 regmask=[rax] minReg=1 fixed>
<RefPosition #47  @59  RefTypeUse <Ivl:10>  BB02 regmask=[rax] minReg=1 last>
<RefPosition #48  @60  RefTypeDef <Ivl:1 V04> STORE_LCL_VAR BB02 regmask=[rax] minReg=1>
<RefPosition #49  @61  RefTypeBB  BB03 regmask=[] minReg=1>
<RefPosition #50  @65  RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #51  @65  RefTypeUse <Ivl:1 V04> LCL_VAR BB03 regmask=[rax] minReg=1 last fixed>

VAR REFPOSITIONS AFTER ALLOCATION
--- V00
--- V01
--- V02
--- V03  (Interval 0)
<RefPosition #19  @28  RefTypeDef <Ivl:0 V03> STORE_LCL_VAR BB01 regmask=[rax] minReg=1>
<RefPosition #20  @33  RefTypeUse <Ivl:0 V03> LCL_VAR BB01 regmask=[rax] minReg=1 last>
--- V04  (Interval 1)
<RefPosition #21  @34  RefTypeDef <Ivl:1 V04> STORE_LCL_VAR BB01 regmask=[rax] minReg=1>
<RefPosition #22  @41  RefTypeUse <Ivl:1 V04> LCL_VAR BB01 regmask=[rax] minReg=1 regOptional>
<RefPosition #48  @60  RefTypeDef <Ivl:1 V04> STORE_LCL_VAR BB02 regmask=[rax] minReg=1>
<RefPosition #51  @65  RefTypeUse <Ivl:1 V04> LCL_VAR BB03 regmask=[rax] minReg=1 last fixed>
--- V05
--- V06
--- V07
--- V08

Active intervals at end of allocation:

-----------------------
RESOLVING BB BOUNDARIES
-----------------------
Resolution Candidates: {V04}
Has Critical Edges

Prior to Resolution

BB01
use def in out
{}
{V03 V04 V08}
{}
{V04}
Var=Reg beg of BB01: none
Var=Reg end of BB01: V04=rax 

BB02
use def in out
{}
{V04}
{}
{V04}
Var=Reg beg of BB02: none
Var=Reg end of BB02: V04=rax 

BB03
use def in out
{V04}
{}
{V04}
{}
Var=Reg beg of BB03: V04=rax 
Var=Reg end of BB03: none


RESOLVING EDGES
Trees after linear scan register allocator (LSRA)

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)-> BB03 ( cond )                     i label target hascall gcsafe LIR 
BB02 [0004]  1       BB01                  0.25    [022..023)                                     i hascall gcsafe LIR 
BB03 [0005]  2       BB01,BB02             1       [022..023)        (return)                     i label target gcsafe LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..02F) -> BB03 (cond), preds={} succs={BB02,BB03}
N003 (???,???) [000082] ------------                 IL_OFFSET void   IL offset: 0x0 REG NA
N005 (  1,  1) [000081] ------------        t81 =    CNS_INT   ref    null REG rcx $VN.Null
                                                  /--*  t81    ref    
N007 (  5,  4) [000072] DA--G-------              *  STORE_LCL_VAR ref   (AX) V06 tmp5          NA REG NA
N009 (???,???) [000083] ------------                 IL_OFFSET void   IL offset: 0xc REG NA
N011 (  1,  1) [000011] -c----------        t11 =    CNS_INT   int    -1 REG NA $40
                                                  /--*  t11    int    
N013 (  5,  4) [000013] DA--G-------              *  STORE_LCL_VAR int   (AX) V05 tmp4          NA REG NA
N015 (???,???) [000084] ------------                 IL_OFFSET void   IL offset: 0x14 REG NA
N017 (  3,  2) [000037] -------N----        t37 =    LCL_VAR_ADDR byref  V00 loc0          rcx
                                                  *    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                  *    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                  *    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6          REG rcx
                                                  /--*  t37    byref  
N019 (???,???) [000089] ------------        t89 = *  PUTARG_REG byref  REG rcx
                                                  /--*  t89    byref  arg0 in rcx
N021 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start REG NA $VN.Void
N023 (???,???) [000085] ------------                 IL_OFFSET void   IL offset: 0x22 REG NA
N025 (  3,  2) [000041] ------------        t41 =    LCL_VAR   ref   (AX) V06 tmp5          rax REG rax $240
                                                  /--*  t41    ref    
N027 (  3,  3) [000046] DA--G-------              *  STORE_LCL_VAR ref    V03 tmp2         d:2 rax REG rax
N029 (???,???) [000086] ------------                 IL_OFFSET void   IL offset: 0x22 REG NA
N031 (  1,  1) [000047] ------------        t47 =    LCL_VAR   ref    V03 tmp2         u:2 rax (last use) REG rax $240
                                                  /--*  t47    ref    
N033 (  5,  4) [000053] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:2 rax REG rax
N035 (???,???) [000087] ------------                 IL_OFFSET void   IL offset: 0x22 REG NA
N037 (  1,  1) [000048] ------------        t48 =    LCL_VAR   ref    V04 tmp3         u:2 rax REG rax $240
N039 (  1,  1) [000049] -c----------        t49 =    CNS_INT   ref    null REG NA $VN.Null
                                                  /--*  t48    ref    
                                                  +--*  t49    ref    
N041 (  3,  3) [000050] J------N----              *  NE        void   REG NA $280
N043 (  5,  5) [000051] ------------              *  JTRUE     void   REG NA

------------ BB02 [022..023), preds={BB01} succs={BB03}
N047 (???,???) [000088] ------------                 IL_OFFSET void   IL offset: 0x22 REG NA
N049 (  3,  2) [000058] -------N----        t58 =    LCL_VAR_ADDR byref  V06 tmp5          rcx REG rcx
                                                  /--*  t58    byref  
N051 (???,???) [000090] ------------        t90 = *  PUTARG_REG byref  REG rcx
N053 (  2, 10) [000062] H-----------        t62 =    CNS_INT(h) long   0xd1ffab1e class REG rdx $2c0
                                                  /--*  t62    long   
N055 (???,???) [000091] ------------        t91 = *  PUTARG_REG long   REG rdx
                                                  /--*  t90    byref  this in rcx
                                                  +--*  t91    long   arg1 in rdx
N057 ( 19, 21) [000061] --CXG-------        t61 = *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].InitializeTaskAsPromise REG rax $c4
                                                  /--*  t61    ref    
N059 ( 23, 24) [000064] DA-XG-------              *  STORE_LCL_VAR ref    V04 tmp3         d:4 rax REG rax

------------ BB03 [022..023) (return), preds={BB01,BB02} succs={}
N001 (  0,  0) [000080] ------------        t80 =    PHI_ARG   ref    V04 tmp3         u:4 rax $c4
N002 (  0,  0) [000079] ------------        t79 =    PHI_ARG   ref    V04 tmp3         u:2 rax $240
                                                  /--*  t80    ref    
                                                  +--*  t79    ref    
N003 (  0,  0) [000077] ------------        t77 = *  PHI       ref   
                                                  /--*  t77    ref    
N005 (  0,  0) [000078] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:3 rax
N063 (  3,  2) [000056] ------------        t56 =    LCL_VAR   ref    V04 tmp3         u:3 rax (last use) REG rax $241
                                                  /--*  t56    ref    
N065 (  4,  3) [000029] ------------              *  RETURN    ref    REG NA $c7

-------------------------------------------------------------------------------------------------------------------

Final allocation
------------------------------+----+----+----+----+----+----+----+----+----+
LocRP# Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
------------------------------+----+----+----+----+----+----+----+----+----+
 1.#0  BB1 PredBB0            |    |    |    |    |    |    |    |    |    |
 6.#1  C2   Def    Alloc rcx  |    |C2 a|    |    |    |    |    |    |    |
 7.#2  C2   Use *  Keep  rcx  |    |C2 i|    |    |    |    |    |    |    |
18.#3  I3   Def    Alloc rcx  |    |I3 a|    |    |    |    |    |    |    |
19.#4  rcx  Fixd   Keep  rcx  |    |I3 a|    |    |    |    |    |    |    |
19.#5  I3   Use *  Keep  rcx  |    |I3 i|    |    |    |    |    |    |    |
20.#6  rcx  Fixd   Keep  rcx  |    |    |    |    |    |    |    |    |    |
20.#7  I4   Def    Alloc rcx  |    |I4 a|    |    |    |    |    |    |    |
21.#8  rcx  Fixd   Keep  rcx  |    |I4 a|    |    |    |    |    |    |    |
21.#9  I4   Use *  Keep  rcx  |    |I4 i|    |    |    |    |    |    |    |
22.#10 rax  Kill   Keep  rax  |    |    |    |    |    |    |    |    |    |
22.#11 rcx  Kill   Keep  rcx  |    |    |    |    |    |    |    |    |    |
22.#12 rdx  Kill   Keep  rdx  |    |    |    |    |    |    |    |    |    |
22.#13 r8   Kill   Keep  r8   |    |    |    |    |    |    |    |    |    |
22.#14 r9   Kill   Keep  r9   |    |    |    |    |    |    |    |    |    |
22.#15 r10  Kill   Keep  r10  |    |    |    |    |    |    |    |    |    |
22.#16 r11  Kill   Keep  r11  |    |    |    |    |    |    |    |    |    |
26.#17 I5   Def    Alloc rax  |I5 a|    |    |    |    |    |    |    |    |
27.#18 I5   Use *  Keep  rax  |I5 i|    |    |    |    |    |    |    |    |
28.#19 V3   Def    Alloc rax  |V3 a|    |    |    |    |    |    |    |    |
33.#20 V3   Use *  Keep  rax  |V3 i|    |    |    |    |    |    |    |    |
34.#21 V4   Def    Alloc rax  |V4 a|    |    |    |    |    |    |    |    |
41.#22 V4   Use    Keep  rax  |V4 a|    |    |    |    |    |    |    |    |
------------------------------+----+----+----+----+----+----+----+----+----+
LocRP# Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
------------------------------+----+----+----+----+----+----+----+----+----+
45.#23 BB2 PredBB1            |    |    |    |    |    |    |    |    |    |
50.#24 I6   Def    Alloc rcx  |    |I6 a|    |    |    |    |    |    |    |
51.#25 rcx  Fixd   Keep  rcx  |    |I6 a|    |    |    |    |    |    |    |
51.#26 I6   Use *  Keep  rcx  |    |I6 i|    |    |    |    |    |    |    |
52.#27 rcx  Fixd   Keep  rcx  |    |    |    |    |    |    |    |    |    |
52.#28 I7   Def    Alloc rcx  |    |I7 a|    |    |    |    |    |    |    |
54.#29 C8   Def    Alloc rdx  |    |I7 a|C8 a|    |    |    |    |    |    |
55.#30 rdx  Fixd   Keep  rdx  |    |I7 a|C8 a|    |    |    |    |    |    |
55.#31 C8   Use *  Keep  rdx  |    |I7 a|C8 i|    |    |    |    |    |    |
56.#32 rdx  Fixd   Keep  rdx  |    |I7 a|    |    |    |    |    |    |    |
56.#33 I9   Def    Alloc rdx  |    |I7 a|I9 a|    |    |    |    |    |    |
57.#34 rcx  Fixd   Keep  rcx  |    |I7 a|I9 a|    |    |    |    |    |    |
57.#35 I7   Use *  Keep  rcx  |    |I7 i|I9 a|    |    |    |    |    |    |
57.#36 rdx  Fixd   Keep  rdx  |    |    |I9 a|    |    |    |    |    |    |
57.#37 I9   Use *  Keep  rdx  |    |    |I9 i|    |    |    |    |    |    |
58.#38 rax  Kill   Keep  rax  |    |    |    |    |    |    |    |    |    |
58.#39 rcx  Kill   Keep  rcx  |    |    |    |    |    |    |    |    |    |
58.#40 rdx  Kill   Keep  rdx  |    |    |    |    |    |    |    |    |    |
58.#41 r8   Kill   Keep  r8   |    |    |    |    |    |    |    |    |    |
58.#42 r9   Kill   Keep  r9   |    |    |    |    |    |    |    |    |    |
58.#43 r10  Kill   Keep  r10  |    |    |    |    |    |    |    |    |    |
58.#44 r11  Kill   Keep  r11  |    |    |    |    |    |    |    |    |    |
58.#45 rax  Fixd   Keep  rax  |    |    |    |    |    |    |    |    |    |
58.#46 I10  Def    Alloc rax  |I10a|    |    |    |    |    |    |    |    |
59.#47 I10  Use *  Keep  rax  |I10i|    |    |    |    |    |    |    |    |
60.#48 V4   Def    Alloc rax  |V4 a|    |    |    |    |    |    |    |    |
------------------------------+----+----+----+----+----+----+----+----+----+
LocRP# Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
------------------------------+----+----+----+----+----+----+----+----+----+
61.#49 BB3 PredBB1            |V4 a|    |    |    |    |    |    |    |    |
65.#50 rax  Fixd   Keep  rax  |V4 a|    |    |    |    |    |    |    |    |
65.#51 V4   Use *  Keep  rax  |V4 i|    |    |    |    |    |    |    |    |

Recording the maximum number of concurrent spills:

----------
LSRA Stats
----------
Total Tracked Vars:  3
Total Reg Cand Vars: 2
Total number of Intervals: 10
Total number of RefPositions: 51
Total Spill Count: 0    Weighted: 0.000000
Total CopyReg Count: 0   Weighted: 0.000000
Total ResolutionMov Count: 0    Weighted: 0.000000
Total number of split edges: 0
Total Number of spill temps created: 0

TUPLE STYLE DUMP WITH REGISTER ASSIGNMENTS
Incoming Parameters: 
BB01 [000..02F) -> BB03 (cond), preds={} succs={BB02,BB03}
=====
  N003.                    IL_OFFSET IL offset: 0x0
  N005. rcx             =  CNS_INT   null
  N007.                    V06 MEM; rcx
  N009.                    IL_OFFSET IL offset: 0xc
  N011.                    CNS_INT   -1
  N013.                    V05 MEM
  N015.                    IL_OFFSET IL offset: 0x14
  N017. rcx             =  LCL_VAR_ADDR V00 loc0          rcx
                                                      int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                      ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                      ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
  N019. rcx             =  PUTARG_REG; rcx
  N021.                    CALL     ; rcx
  N023.                    IL_OFFSET IL offset: 0x22
  N025. rax             =  V06 MEM
* N027.                    V03(rax); rax
  N029.                    IL_OFFSET IL offset: 0x22
  N031.                    V03(rax*)
* N033.                    V04(rax); rax*
  N035.                    IL_OFFSET IL offset: 0x22
  N037.                    V04(rax)
  N039.                    CNS_INT   null
  N041.                    NE       ; rax
  N043.                    JTRUE    
Var=Reg end of BB01: V04=rax 

BB02 [022..023), preds={BB01} succs={BB03}
=====
Predecessor for variable locations: BB01
Var=Reg beg of BB02: none
  N047.                    IL_OFFSET IL offset: 0x22
  N049. rcx             =  LCL_VAR_ADDR V06 tmp5          rcx
  N051. rcx             =  PUTARG_REG; rcx
  N053. rdx             =  CNS_INT(h) 0xd1ffab1e class
  N055. rdx             =  PUTARG_REG; rdx
  N057. rax             =  CALL     ; rcx,rdx
* N059.                    V04(rax); rax
Var=Reg end of BB02: V04=rax 

BB03 [022..023) (return), preds={BB01,BB02} succs={}
=====
Predecessor for variable locations: BB01
Var=Reg beg of BB03: V04=rax 
  N063.                    V04(rax*)
  N065.                    RETURN   ; rax*
Var=Reg end of BB03: none




*************** Finishing PHASE Linear scan register alloc
*************** In genGenerateCode()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)-> BB03 ( cond )                     i label target hascall gcsafe LIR 
BB02 [0004]  1       BB01                  0.25    [022..023)                                     i hascall gcsafe LIR 
BB03 [0005]  2       BB01,BB02             1       [022..023)        (return)                     i label target gcsafe LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Generate code
*************** In fgDebugCheckBBlist
Finalizing stack frame
Recording Var Locations at start of BB01
  <none>

Modified regs: [rax rcx rdx r8-r11]
Callee-saved registers pushed: 0 []
*************** In lvaAssignFrameOffsets(FINAL_FRAME_LAYOUT)
Assign V00 loc0, size=24, stkOffs=-0x20
Assign V01 OutArgs, size=32, stkOffs=-0x40
--- delta bump 8 for RA
--- delta bump 56 for RSP frame
--- virtual stack offset to actual stack offset delta is 64
-- V00 was -32, now 32
-- V01 was -64, now 0
; Final local variable assignments
;
;  V00 loc0         [V00    ] (  5,  4.25)  struct (24) [rsp+0x20]   do-not-enreg[XS] must-init addr-exposed ld-addr-op
;  V01 OutArgs      [V01    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V02 tmp1         [V02    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;  V03 tmp2         [V03,T00] (  2,  4   )     ref  ->  rax         class-hnd "dup spill"
;  V04 tmp3         [V04,T01] (  4,  3.25)     ref  ->  rax        
;  V05 tmp4         [V05    ] (  2,  2   )     int  ->  [rsp+0x20]   do-not-enreg[X] addr-exposed V00.<>1__state(offs=0x00) P-DEP "field V00.<>1__state (fldOffset=0x0)"
;  V06 tmp5         [V06    ] (  4,  3.25)     ref  ->  [rsp+0x28]   do-not-enreg[X] addr-exposed V00.<>t__builder(offs=0x08) P-DEP "field V00.<>t__builder (fldOffset=0x8)"
;  V07 tmp6         [V07    ] (  1,  1   )     ref  ->  [rsp+0x30]   do-not-enreg[X] addr-exposed V00.<>u__1(offs=0x10) P-DEP "field V00.<>u__1 (fldOffset=0x10)"
;* V08 tmp7         [V08,T02] (  0,  0   )     ref  ->  zero-ref    V02.m_task(offs=0x00) P-INDEP "field V02.m_task (fldOffset=0x0)"
;
; Lcl frame size = 56
Setting stack level from -572662307 to 0

=============== Generating BB01 [000..02F) -> BB03 (cond), preds={} succs={BB02,BB03} flags=0x00000002.200b0020: i label target hascall gcsafe LIR 
BB01 IN (0)={   } + ByrefExposed + GcHeap
     OUT(1)={V04} + ByrefExposed + GcHeap

Recording Var Locations at start of BB01
  <none>

Liveness not changing: 0000000000000000 {}
							Live regs: (unchanged) 00000000 {}
							GC regs: (unchanged) 00000000 {}
							Byref regs: (unchanged) 00000000 {}

      L_M43923_BB01:
Label: IG02, GCvars=0000000000000000 {}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}

Scope info: begin block BB01, IL range [000..02F)
Scope info: open scopes =
   <none>
Added IP mapping: 0x0000 STACK_EMPTY (G_M43923_IG02,ins#0,ofs#0) label
Generating: N003 (???,???) [000082] ------------                 IL_OFFSET void   IL offset: 0x0 REG NA
Generating: N005 (  1,  1) [000081] ------------        t81 =    CNS_INT   ref    null REG rcx $VN.Null
IN0001:        xor      rcx, rcx
							GC regs: 00000000 {} => 00000002 {rcx}
                                                              /--*  t81    ref    
Generating: N007 (  5,  4) [000072] DA--G-------              *  STORE_LCL_VAR ref   (AX) V06 tmp5          NA REG NA
							GC regs: 00000002 {rcx} => 00000000 {}
IN0002:        mov      gword ptr [V06 rsp+28H], rcx
Added IP mapping: 0x000C STACK_EMPTY (G_M43923_IG02,ins#2,ofs#7)
Generating: N009 (???,???) [000083] ------------                 IL_OFFSET void   IL offset: 0xc REG NA
Generating: N011 (  1,  1) [000011] -c----------        t11 =    CNS_INT   int    -1 REG NA $40
                                                              /--*  t11    int    
Generating: N013 (  5,  4) [000013] DA--G-------              *  STORE_LCL_VAR int   (AX) V05 tmp4          NA REG NA
IN0003:        mov      dword ptr [V05 rsp+20H], -1
Added IP mapping: 0x0014 STACK_EMPTY (G_M43923_IG02,ins#3,ofs#15)
Generating: N015 (???,???) [000084] ------------                 IL_OFFSET void   IL offset: 0x14 REG NA
Generating: N017 (  3,  2) [000037] -------N----        t37 =    LCL_VAR_ADDR byref  V00 loc0          rcx
                                                  *    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                  *    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                  *    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6          REG rcx
IN0004:        lea      rcx, bword ptr [V00 rsp+20H]
							Byref regs: 00000000 {} => 00000002 {rcx}
                                                              /--*  t37    byref  
Generating: N019 (???,???) [000089] ------------        t89 = *  PUTARG_REG byref  REG rcx
							Byref regs: 00000002 {rcx} => 00000000 {}
							Byref regs: 00000000 {} => 00000002 {rcx}
                                                              /--*  t89    byref  arg0 in rcx
Generating: N021 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start REG NA $VN.Void
							Byref regs: 00000002 {rcx} => 00000000 {}
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}
IN0005:        call     System.Runtime.CompilerServices.AsyncMethodBuilderCore:Start(byref)
Added IP mapping: 0x0022 STACK_EMPTY (G_M43923_IG02,ins#5,ofs#25)
Generating: N023 (???,???) [000085] ------------                 IL_OFFSET void   IL offset: 0x22 REG NA
Generating: N025 (  3,  2) [000041] ------------        t41 =    LCL_VAR   ref   (AX) V06 tmp5          rax REG rax $240
IN0006:        mov      rax, gword ptr [V06 rsp+28H]
							GC regs: 00000000 {} => 00000001 {rax}
                                                              /--*  t41    ref    
Generating: N027 (  3,  3) [000046] DA--G-------              *  STORE_LCL_VAR ref    V03 tmp2         d:2 rax REG rax
							GC regs: 00000001 {rax} => 00000000 {}
							V03 in reg rax is becoming live  [000046]
							Live regs: 00000000 {} => 00000001 {rax}
							Live vars: {} => {V03}
							GC regs: 00000000 {} => 00000001 {rax}
genIPmappingAdd: ignoring duplicate IL offset 0x22
Generating: N029 (???,???) [000086] ------------                 IL_OFFSET void   IL offset: 0x22 REG NA
Generating: N031 (  1,  1) [000047] ------------        t47 =    LCL_VAR   ref    V03 tmp2         u:2 rax (last use) REG rax $240
                                                              /--*  t47    ref    
Generating: N033 (  5,  4) [000053] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:2 rax REG rax
							V03 in reg rax is becoming dead  [000047]
							Live regs: 00000001 {rax} => 00000000 {}
							Live vars: {V03} => {}
							GC regs: 00000001 {rax} => 00000000 {}
							V04 in reg rax is becoming live  [000053]
							Live regs: 00000000 {} => 00000001 {rax}
							Live vars: {} => {V04}
							GC regs: 00000000 {} => 00000001 {rax}
genIPmappingAdd: ignoring duplicate IL offset 0x22
Generating: N035 (???,???) [000087] ------------                 IL_OFFSET void   IL offset: 0x22 REG NA
Generating: N037 (  1,  1) [000048] ------------        t48 =    LCL_VAR   ref    V04 tmp3         u:2 rax REG rax $240
Generating: N039 (  1,  1) [000049] -c----------        t49 =    CNS_INT   ref    null REG NA $VN.Null
                                                              /--*  t48    ref    
                                                              +--*  t49    ref    
Generating: N041 (  3,  3) [000050] J------N----              *  NE        void   REG NA $280
IN0007:        test     rax, rax
Generating: N043 (  5,  5) [000051] ------------              *  JTRUE     void   REG NA
IN0008:        jne      L_M43923_BB03

Scope info: end block BB01, IL range [000..02F)
Scope info: ending scope, LVnum=0 [000..02F)
siEndScope: Failed to end scope for V00
Scope info: open scopes =
   <none>

=============== Generating BB02 [022..023), preds={BB01} succs={BB03} flags=0x00000002.20080020: i hascall gcsafe LIR 
BB02 IN (0)={   } + ByrefExposed + GcHeap
     OUT(1)={V04}

Recording Var Locations at start of BB02
  <none>

Change life 0000000000000002 {V04} -> 0000000000000000 {}
							V04 in reg rax is becoming dead  [------]
							Live regs: (unchanged) 00000000 {}
							Live regs: (unchanged) 00000000 {}
							GC regs: (unchanged) 00000000 {}
							Byref regs: (unchanged) 00000000 {}

      L_M43923_BB02:

      G_M43923_IG02:        ; offs=000000H, funclet=00, bbWeight=1   
Label: IG03, GCvars=0000000000000000 {}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}

Scope info: begin block BB02, IL range [022..023)
Scope info: open scopes =
   <none>
genIPmappingAdd: ignoring duplicate IL offset 0x22
Generating: N047 (???,???) [000088] ------------                 IL_OFFSET void   IL offset: 0x22 REG NA
Generating: N049 (  3,  2) [000058] -------N----        t58 =    LCL_VAR_ADDR byref  V06 tmp5          rcx REG rcx
IN0009:        lea      rcx, bword ptr [V06 rsp+28H]
							Byref regs: 00000000 {} => 00000002 {rcx}
                                                              /--*  t58    byref  
Generating: N051 (???,???) [000090] ------------        t90 = *  PUTARG_REG byref  REG rcx
							Byref regs: 00000002 {rcx} => 00000000 {}
							Byref regs: 00000000 {} => 00000002 {rcx}
Generating: N053 (  2, 10) [000062] H-----------        t62 =    CNS_INT(h) long   0xd1ffab1e class REG rdx $2c0
IN000a:        mov      rdx, 0xD1FFAB1E
                                                              /--*  t62    long   
Generating: N055 (???,???) [000091] ------------        t91 = *  PUTARG_REG long   REG rdx
                                                              /--*  t90    byref  this in rcx
                                                              +--*  t91    long   arg1 in rdx
Generating: N057 ( 19, 21) [000061] --CXG-------        t61 = *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon].InitializeTaskAsPromise REG rax $c4
							Byref regs: 00000002 {rcx} => 00000000 {}
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}
IN000b:        call     System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:InitializeTaskAsPromise():System.Threading.Tasks.Task`1[__Canon]:this
							GC regs: 00000000 {} => 00000001 {rax}
                                                              /--*  t61    ref    
Generating: N059 ( 23, 24) [000064] DA-XG-------              *  STORE_LCL_VAR ref    V04 tmp3         d:4 rax REG rax
							GC regs: 00000001 {rax} => 00000000 {}
							V04 in reg rax is becoming live  [000064]
							Live regs: 00000000 {} => 00000001 {rax}
							Live vars: {} => {V04}
							GC regs: 00000000 {} => 00000001 {rax}

Scope info: end block BB02, IL range [022..023)
Scope info: open scopes =
   <none>

=============== Generating BB03 [022..023) (return), preds={BB01,BB02} succs={} flags=0x00000000.200b0020: i label target gcsafe LIR 
BB03 IN (1)={V04}
     OUT(0)={   }

Recording Var Locations at start of BB03
  V04(rax)
Liveness not changing: 0000000000000002 {V04}
							Live regs: 00000000 {} => 00000001 {rax}
							GC regs: 00000000 {} => 00000001 {rax}
							Byref regs: (unchanged) 00000000 {}

      L_M43923_BB03:

      G_M43923_IG03:        ; offs=000027H, funclet=00, bbWeight=0.25
Label: IG04, GCvars=0000000000000000 {}, gcrefRegs=00000001 {rax}, byrefRegs=00000000 {}

Scope info: begin block BB03, IL range [022..023)
Scope info: open scopes =
   <none>
Generating: N063 (  3,  2) [000056] ------------        t56 =    LCL_VAR   ref    V04 tmp3         u:3 rax (last use) REG rax $241
                                                              /--*  t56    ref    
Generating: N065 (  4,  3) [000029] ------------              *  RETURN    ref    REG NA $c7
							V04 in reg rax is becoming dead  [000056]
							Live regs: 00000001 {rax} => 00000000 {}
							Live vars: {V04} => {}
							GC regs: 00000001 {rax} => 00000000 {}

Scope info: end block BB03, IL range [022..023)
Scope info: open scopes =
   <none>
Added IP mapping: EPILOG STACK_EMPTY (G_M43923_IG04,ins#0,ofs#0) label
							GC regs: 00000000 {} => 00000001 {rax}
Extending return value GC liveness to epilog
Reserving epilog IG for block BB03
IN000c:        nop      

      G_M43923_IG04:        ; offs=00003BH, funclet=00, bbWeight=1   
*************** After placeholder IG creation
G_M43923_IG01:        ; func=00, offs=000000H, size=0000H, gcrefRegs=00000000 {} <-- Prolog IG
G_M43923_IG02:        ; offs=000000H, size=0027H, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref
G_M43923_IG03:        ; offs=000027H, size=0014H, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref
G_M43923_IG04:        ; offs=00003BH, size=0001H, gcrefRegs=00000001 {rax}, byrefRegs=00000000 {}, byref
G_M43923_IG05:        ; epilog placeholder, next placeholder=<END>, BB03 [0005], epilog, extend <-- First placeholder <-- Last placeholder
                      ;   PrevGCVars=0000000000000000 {}, PrevGCrefRegs=00000000 {}, PrevByrefRegs=00000000 {}
                      ;   InitGCVars=0000000000000000 {}, InitGCrefRegs=00000001 {rax}, InitByrefRegs=00000000 {}
Liveness not changing: 0000000000000000 {}

# compCycleEstimate =     72, compSizeEstimate =    60 HotkeyedMusicPlayer.ArgsTransport:ConsumeArgs():System.Threading.Tasks.Task`1[[System.String[], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]
; Final local variable assignments
;
;  V00 loc0         [V00    ] (  5,  4.25)  struct (24) [rsp+0x20]   do-not-enreg[XS] must-init addr-exposed ld-addr-op
;  V01 OutArgs      [V01    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V02 tmp1         [V02    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;  V03 tmp2         [V03,T00] (  2,  4   )     ref  ->  rax         class-hnd "dup spill"
;  V04 tmp3         [V04,T01] (  4,  3.25)     ref  ->  rax        
;  V05 tmp4         [V05    ] (  2,  2   )     int  ->  [rsp+0x20]   do-not-enreg[X] addr-exposed V00.<>1__state(offs=0x00) P-DEP "field V00.<>1__state (fldOffset=0x0)"
;  V06 tmp5         [V06    ] (  4,  3.25)     ref  ->  [rsp+0x28]   do-not-enreg[X] addr-exposed V00.<>t__builder(offs=0x08) P-DEP "field V00.<>t__builder (fldOffset=0x8)"
;  V07 tmp6         [V07    ] (  1,  1   )     ref  ->  [rsp+0x30]   do-not-enreg[X] addr-exposed V00.<>u__1(offs=0x10) P-DEP "field V00.<>u__1 (fldOffset=0x10)"
;* V08 tmp7         [V08,T02] (  0,  0   )     ref  ->  zero-ref    V02.m_task(offs=0x00) P-INDEP "field V02.m_task (fldOffset=0x0)"
;
; Lcl frame size = 56
*************** Before prolog / epilog generation
G_M43923_IG01:        ; func=00, offs=000000H, size=0000H, gcrefRegs=00000000 {} <-- Prolog IG
G_M43923_IG02:        ; offs=000000H, size=0027H, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref
G_M43923_IG03:        ; offs=000027H, size=0014H, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref
G_M43923_IG04:        ; offs=00003BH, size=0001H, gcrefRegs=00000001 {rax}, byrefRegs=00000000 {}, byref
G_M43923_IG05:        ; epilog placeholder, next placeholder=<END>, BB03 [0005], epilog, extend <-- First placeholder <-- Last placeholder
                      ;   PrevGCVars=0000000000000000 {}, PrevGCrefRegs=00000000 {}, PrevByrefRegs=00000000 {}
                      ;   InitGCVars=0000000000000000 {}, InitGCrefRegs=00000001 {rax}, InitByrefRegs=00000000 {}
Recording Var Locations at start of BB01
  <none>

*************** In genFnProlog()
Added IP mapping to front: PROLOG STACK_EMPTY (G_M43923_IG01,ins#0,ofs#0) label

__prolog:
Found 6 lvMustInit int-sized stack slots, frame offsets -32 through -56
IN000d:        sub      rsp, 56
Notify VM instruction set (SSE42) must be supported.
IN000e:        vxorps   xmm4, xmm4
IN000f:        vmovdqa  xmmword ptr [rsp+20H], xmm4
IN0010:        xor      rax, rax
IN0011:        mov      qword ptr [rsp+30H], rax
*************** In genEnregisterIncomingStackArgs()


      G_M43923_IG01:        ; offs=000000H, funclet=00, bbWeight=1   
*************** In genFnEpilog()

__epilog:
gcVarPtrSetCur=0000000000000000 {}, gcRegGCrefSetCur=00000001 {rax}, gcRegByrefSetCur=00000000 {}
IN0012:        add      rsp, 56
IN0013:        ret      

      G_M43923_IG05:        ; offs=00003CH, funclet=00, bbWeight=1   
0 prologs, 1 epilogs, 0 funclet prologs, 0 funclet epilogs
*************** After prolog / epilog generation
G_M43923_IG01:        ; func=00, offs=000000H, size=0017H, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref, nogc <-- Prolog IG
G_M43923_IG02:        ; offs=000017H, size=0027H, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref
G_M43923_IG03:        ; offs=00003EH, size=0014H, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref
G_M43923_IG04:        ; offs=000052H, size=0001H, gcrefRegs=00000001 {rax}, byrefRegs=00000000 {}, byref
G_M43923_IG05:        ; offs=000053H, size=0005H, epilog, nogc, extend
*************** In emitJumpDistBind()
Binding: IN0008: 000000 jne      L_M43923_BB03
Binding L_M43923_BB03 to G_M43923_IG04
Estimate of fwd jump [D1FFAB1E/008]: 0038 -> 0052 = 0018
Shrinking jump [D1FFAB1E/008]
Adjusted offset of BB03 from 003E to 003A
Adjusted offset of BB04 from 0052 to 004E
Adjusted offset of BB05 from 0053 to 004F
Total shrinkage =   4, min extra jump size = 4294967295

*************** Finishing PHASE Generate code

*************** Starting PHASE Emit code

Hot  code size = 0x54 bytes
Cold code size = 0x0 bytes
reserveUnwindInfo(isFunclet=FALSE, isColdCode=FALSE, unwindSize=0x6)
*************** In emitEndCodeGen()
Converting emitMaxStackDepth from bytes (0) to elements (0)

***************************************************************************
Instructions as they come out of the scheduler


G_M43923_IG01:        ; func=00, offs=000000H, size=0017H, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref, nogc <-- Prolog IG
IN000d: 000000 sub      rsp, 56
IN000e: 000004 vxorps   xmm4, xmm4 (ECS:5, ACS:4)
Instruction predicted size = 5, actual = 4
IN000f: 000008 vmovdqa  xmmword ptr [rsp+20H], xmm4 (ECS:7, ACS:6)
Instruction predicted size = 7, actual = 6
IN0010: 00000E xor      rax, rax
IN0011: 000010 mov      qword ptr [rsp+30H], rax
						;; bbWeight=1    PerfScore 2.83
G_M43923_IG02:        ; func=00, offs=000017H, size=0023H, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref, isz
Block predicted offs = 00000017, actual = 00000015 -> size adj = 2
IN0001: 000015 xor      rcx, rcx
       ; gcrRegs +[rcx]
IN0002: 000017 mov      gword ptr [rsp+28H], rcx
IN0003: 00001C mov      dword ptr [rsp+20H], -1
IN0004: 000024 lea      rcx, bword ptr [rsp+20H]
       ; gcrRegs -[rcx]
       ; byrRegs +[rcx]
IN0005: 000029 call     System.Runtime.CompilerServices.AsyncMethodBuilderCore:Start(byref)
       ; byrRegs -[rcx]
       ; gcr arg pop 0
IN0006: 00002E mov      rax, gword ptr [rsp+28H]
       ; gcrRegs +[rax]
IN0007: 000033 test     rax, rax
IN0008: 000036 jne      SHORT G_M43923_IG04
						;; bbWeight=1    PerfScore 6.00
G_M43923_IG03:        ; func=00, offs=00003AH, size=0014H, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref
Block predicted offs = 0000003A, actual = 00000038 -> size adj = 2
       ; gcrRegs -[rax]
IN0009: 000038 lea      rcx, bword ptr [rsp+28H]
       ; byrRegs +[rcx]
IN000a: 00003D mov      rdx, 0xD1FFAB1E
IN000b: 000047 call     System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:InitializeTaskAsPromise():System.Threading.Tasks.Task`1[__Canon]:this
       ; gcrRegs +[rax]
       ; byrRegs -[rcx]
       ; gcr arg pop 0
						;; bbWeight=0.25 PerfScore 0.44
G_M43923_IG04:        ; func=00, offs=00004EH, size=0001H, gcrefRegs=00000001 {rax}, byrefRegs=00000000 {}, byref
Block predicted offs = 0000004E, actual = 0000004C -> size adj = 2
IN000c: 00004C nop      
						;; bbWeight=1    PerfScore 0.25
G_M43923_IG05:        ; func=00, offs=00004FH, size=0005H, epilog, nogc, extend
Block predicted offs = 0000004F, actual = 0000004D -> size adj = 2
IN0012: 00004D add      rsp, 56
IN0013: 000051 ret      
						;; bbWeight=1    PerfScore 1.25Allocated method code size =   84 , actual size =   82

; Total bytes of code 82, prolog size 21, PerfScore 19.17, instruction count 19 (MethodHash=6b10546c) for method HotkeyedMusicPlayer.ArgsTransport:ConsumeArgs():System.Threading.Tasks.Task`1[[System.String[], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]
; ============================================================

*************** After end code gen, before unwindEmit()
G_M43923_IG01:        ; func=00, offs=000000H, size=0015H, bbWeight=1    PerfScore 2.83, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref, nogc, isz <-- Prolog IG

IN000d: 000000 sub      rsp, 56
IN000e: 000004 vxorps   xmm4, xmm4
IN000f: 000008 vmovdqa  xmmword ptr [rsp+20H], xmm4
IN0010: 00000E xor      rax, rax
IN0011: 000010 mov      qword ptr [rsp+30H], rax

G_M43923_IG02:        ; offs=000015H, size=0023H, bbWeight=1    PerfScore 6.00, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref, isz

IN0001: 000015 xor      rcx, rcx
IN0002: 000017 mov      gword ptr [V06 rsp+28H], rcx
IN0003: 00001C mov      dword ptr [V05 rsp+20H], -1
IN0004: 000024 lea      rcx, bword ptr [V00 rsp+20H]
IN0005: 000029 call     System.Runtime.CompilerServices.AsyncMethodBuilderCore:Start(byref)
IN0006: 00002E mov      rax, gword ptr [V06 rsp+28H]
IN0007: 000033 test     rax, rax
IN0008: 000036 jne      SHORT G_M43923_IG04

G_M43923_IG03:        ; offs=000038H, size=0014H, bbWeight=0.25 PerfScore 0.44, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref

IN0009: 000038 lea      rcx, bword ptr [V06 rsp+28H]
IN000a: 00003D mov      rdx, 0xD1FFAB1E
IN000b: 000047 call     System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[__Canon][System.__Canon]:InitializeTaskAsPromise():System.Threading.Tasks.Task`1[__Canon]:this

G_M43923_IG04:        ; offs=00004CH, size=0001H, bbWeight=1    PerfScore 0.25, gcrefRegs=00000001 {rax}, byrefRegs=00000000 {}, byref

IN000c: 00004C nop      

G_M43923_IG05:        ; offs=00004DH, size=0005H, bbWeight=1    PerfScore 1.25, epilog, nogc, extend

IN0012: 00004D add      rsp, 56
IN0013: 000051 ret      


*************** Finishing PHASE Emit code

*************** Starting PHASE Emit GC+EH tables
Unwind Info:
  >> Start offset   : 0x000000 (not in unwind data)
  >>   End offset   : 0xd1ffab1e (not in unwind data)
  Version           : 1
  Flags             : 0x00
  SizeOfProlog      : 0x04
  CountOfUnwindCodes: 1
  FrameRegister     : none (0)
  FrameOffset       : N/A (no FrameRegister) (Value=0)
  UnwindCodes       :
    CodeOffset: 0x04 UnwindOp: UWOP_ALLOC_SMALL (2)     OpInfo: 6 * 8 + 8 = 56 = 0x38
allocUnwindInfo(pHotCode=0x00000000D1FFAB1E, pColdCode=0x0000000000000000, startOffset=0x0, endOffset=0x52, unwindSize=0x6, pUnwindBlock=0x00000000D1FFAB1E, funKind=0 (main function))
*************** In genIPmappingGen()
IP mapping count : 6
IL offs PROLOG : 0x00000000 ( STACK_EMPTY )
IL offs 0x0000 : 0x00000015 ( STACK_EMPTY )
IL offs 0x000C : 0x0000001C ( STACK_EMPTY )
IL offs 0x0014 : 0x00000024 ( STACK_EMPTY )
IL offs 0x0022 : 0x0000002E ( STACK_EMPTY )
IL offs EPILOG : 0x0000004C ( STACK_EMPTY )

*************** In genSetScopeInfo()
VarLocInfo count is 0
; Variable debug info: 0 live range(s), 0 var(s) for method HotkeyedMusicPlayer.ArgsTransport:ConsumeArgs():System.Threading.Tasks.Task`1[[System.String[], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]
*************** In gcInfoBlockHdrSave()
Set code length to 82.
Set ReturnKind to Object.
Set Outgoing stack arg area size to 32.
Stack slot id for offset 40 (0x28) (sp) (untracked) = 0.
Stack slot id for offset 48 (0x30) (sp) (untracked) = 1.
Defining 2 call sites:
    Offset 0x29, size 5.
    Offset 0x47, size 5.

*************** Finishing PHASE Emit GC+EH tables
Method code size: 82

Allocations for HotkeyedMusicPlayer.ArgsTransport:ConsumeArgs():System.Threading.Tasks.Task`1[[System.String[], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] (MethodHash=6b10546c)
count:        960, size:      83194, max =       3072
allocateMemory:     131072, nraUsed:      88528

Alloc'd bytes by kind:
                  kind |       size |     pct
  ---------------------+------------+--------
         AssertionProp |       6460 |   7.76%
               ASTNode |      12376 |  14.88%
              InstDesc |       3224 |   3.88%
              ImpStack |        432 |   0.52%
            BasicBlock |       2568 |   3.09%
             fgArgInfo |        192 |   0.23%
       fgArgInfoPtrArr |         24 |   0.03%
              FlowList |        208 |   0.25%
     TreeStatementList |          0 |   0.00%
               SiScope |         24 |   0.03%
       DominatorMemory |        192 |   0.23%
                  LSRA |       3396 |   4.08%
         LSRA_Interval |        880 |   1.06%
      LSRA_RefPosition |       3328 |   4.00%
          Reachability |         16 |   0.02%
                   SSA |        816 |   0.98%
           ValueNumber |       9348 |  11.24%
              LvaTable |       1956 |   2.35%
            UnwindInfo |          0 |   0.00%
                hashBv |        120 |   0.14%
                bitset |        296 |   0.36%
          FixedBitVect |         36 |   0.04%
               Generic |       2390 |   2.87%
   LocalAddressVisitor |          0 |   0.00%
         FieldSeqStore |        176 |   0.21%
    ZeroOffsetFieldMap |        256 |   0.31%
          ArrayInfoMap |         80 |   0.10%
          MemoryPhiArg |          0 |   0.00%
                   CSE |       1024 |   1.23%
                    GC |       1806 |   2.17%
       CorTailCallInfo |          0 |   0.00%
              Inlining |       2760 |   3.32%
            ArrayStack |          0 |   0.00%
             DebugInfo |        232 |   0.28%
             DebugOnly |      26065 |  31.33%
               Codegen |       1176 |   1.41%
               LoopOpt |          0 |   0.00%
             LoopHoist |          0 |   0.00%
               Unknown |        489 |   0.59%
            RangeCheck |          0 |   0.00%
              CopyProp |        408 |   0.49%
           SideEffects |          0 |   0.00%
       ObjectAllocator |          0 |   0.00%
    VariableLiveRanges |          0 |   0.00%
           ClassLayout |        152 |   0.18%
       TailMergeThrows |          0 |   0.00%
             EarlyProp |          0 |   0.00%
              ZeroInit |        288 |   0.35%

****** DONE compiling HotkeyedMusicPlayer.ArgsTransport:ConsumeArgs():System.Threading.Tasks.Task`1[[System.String[], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]