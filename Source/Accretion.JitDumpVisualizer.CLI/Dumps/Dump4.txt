****** START compiling SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace (MethodHash=b0d87247)
Generating code for Windows x64
OPTIONS: compCodeOpt = BLENDED_CODE
OPTIONS: compDbgCode = false
OPTIONS: compDbgInfo = true
OPTIONS: compDbgEnC  = false
OPTIONS: compProcedureSplitting   = false
OPTIONS: compProcedureSplittingEH = false
IL to import:
IL_0000  73 81 00 00 06    newobj       0x6000081
IL_0005  0a                stloc.0     
IL_0006  06                ldloc.0     
IL_0007  02                ldarg.0     
IL_0008  7d 57 00 00 04    stfld        0x4000057
IL_000d  28 79 00 00 0a    call         0xA000079
IL_0012  73 7a 00 00 0a    newobj       0xA00007A
IL_0017  25                dup         
IL_0018  72 bb 01 00 70    ldstr        0x700001BB
IL_001d  7e 7b 00 00 0a    ldsfld       0xA00007B
IL_0022  6f 7c 00 00 0a    callvirt     0xA00007C
IL_0027  28 7d 00 00 0a    call         0xA00007D
IL_002c  25                dup         
IL_002d  17                ldc.i4.1    
IL_002e  6f 7e 00 00 0a    callvirt     0xA00007E
IL_0033  25                dup         
IL_0034  17                ldc.i4.1    
IL_0035  6f 7f 00 00 0a    callvirt     0xA00007F
IL_003a  25                dup         
IL_003b  72 0d 02 00 70    ldstr        0x7000020D
IL_0040  72 1b 02 00 70    ldstr        0x7000021B
IL_0045  6f 80 00 00 0a    callvirt     0xA000080
IL_004a  25                dup         
IL_004b  72 21 02 00 70    ldstr        0x70000221
IL_0050  72 31 02 00 70    ldstr        0x70000231
IL_0055  6f 80 00 00 0a    callvirt     0xA000080
IL_005a  25                dup         
IL_005b  06                ldloc.0     
IL_005c  fe 06 82 00 00 06 ldftn        0x6000082
IL_0062  73 81 00 00 0a    newobj       0xA000081
IL_0067  6f 82 00 00 0a    callvirt     0xA000082
IL_006c  2a                ret         

lvaSetClass: setting class for V00 to (00000000D1FFAB1E) System.String 
Arg #0    passed in register(s) rcx

lvaSetClass: setting class for V01 to (00000000D1FFAB1E) <>c__DisplayClass1_0 

lvaGrabTemp returning 2 (V02 tmp0) (a long lifetime temp) called for OutgoingArgSpace.
; Initial local variable assignments
;
;  V00 arg0              ref  class-hnd
;  V01 loc0              ref  class-hnd
;  V02 OutArgs        lclBlk <na>  "OutgoingArgSpace"
*************** In compInitDebuggingInfo() for SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace
getVars() returned cVars = 0, extendOthers = true
info.compVarScopesCount = 2
    	VarNum 	LVNum 	      Name 	Beg 	End
 0: 	00h 	00h 	  V00 arg0 	000h   	06Dh
 1: 	01h 	01h 	  V01 loc0 	000h   	06Dh
info.compStmtOffsetsCount    = 0
info.compStmtOffsetsImplicit = 0005h ( STACK_EMPTY CALL_SITE )
*************** In fgFindBasicBlocks() for SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace
Marked V01 as a single def local
Jump targets:
  none
New Basic Block BB01 [0000] created.
BB01 [000..06D)
IL Code Size,Instr  109,  32, Basic Block count   1, Local Variable Num,Ref count   3,  4 for method SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace
OPTIONS: opts.MinOpts() == false
Basic block list for 'SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Pre-import

*************** Finishing PHASE Pre-import

*************** Starting PHASE Importation
*************** In impImport() for SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace

impImportBlockPending for BB01

Importing BB01 (PC=000) of 'SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace'
    [ 0]   0 (0x000) newobj
lvaGrabTemp returning 3 (V03 tmp1) called for NewObj constructor temp.


STMT00000 (IL 0x000...  ???)
               [000003] -A----------              *  ASG       ref   
               [000002] D------N----              +--*  LCL_VAR   ref    V03 tmp1         
               [000001] ------------              \--*  ALLOCOBJ  ref   
               [000000] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e method
Marked V03 as a single def local

lvaSetClass: setting class for V03 to (00000000D1FFAB1E) <>c__DisplayClass1_0  [exact]
 06000081
In Compiler::impImportCall: opcode is newobj, kind=0, callRetType is void, structSize is 0


STMT00001 (IL   ???...  ???)
               [000005] I-C-G-------              *  CALL      void   <>c__DisplayClass1_0..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000004] ------------ this in rcx  \--*  LCL_VAR   ref    V03 tmp1         

    [ 1]   5 (0x005) stloc.0
lvaUpdateClass: Updating class for V01 from (00000000D1FFAB1E) <>c__DisplayClass1_0 to (00000000D1FFAB1E) <>c__DisplayClass1_0 [exact]


STMT00002 (IL 0x005...  ???)
               [000008] -A----------              *  ASG       ref   
               [000007] D------N----              +--*  LCL_VAR   ref    V01 loc0         
               [000006] ------------              \--*  LCL_VAR   ref    V03 tmp1         

    [ 0]   6 (0x006) ldloc.0
    [ 1]   7 (0x007) ldarg.0
    [ 2]   8 (0x008) stfld 04000057

STMT00003 (IL 0x006...  ???)
               [000012] -A-XG-------              *  ASG       ref   
               [000011] ---XG--N----              +--*  FIELD     ref    projectPath
               [000009] ------------              |  \--*  LCL_VAR   ref    V01 loc0         
               [000010] ------------              \--*  LCL_VAR   ref    V00 arg0         

    [ 0]  13 (0x00d) call 0A000079
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0


STMT00004 (IL 0x00D...  ???)
               [000013] I-C-G-------              *  CALL      ref    System.StringComparer.get_Ordinal (exactContextHnd=0x00000000D1FFAB1E)

    [ 1]  18 (0x012) newobj
lvaGrabTemp returning 4 (V04 tmp2) called for NewObj constructor temp.


STMT00005 (IL   ???...  ???)
               [000018] -A----------              *  ASG       ref   
               [000017] D------N----              +--*  LCL_VAR   ref    V04 tmp2         
               [000016] ------------              \--*  ALLOCOBJ  ref   
               [000015] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token
Marked V04 as a single def local

lvaSetClass: setting class for V04 to (00000000D1FFAB1E) System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]  [exact]
 0A00007A
In Compiler::impImportCall: opcode is newobj, kind=0, callRetType is void, structSize is 0


STMT00006 (IL   ???...  ???)
               [000020] I-C-G-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000019] ------------ this in rcx  +--*  LCL_VAR   ref    V04 tmp2         
               [000014] --C--------- arg1         \--*  RET_EXPR  ref   (inl return from call [000013])

    [ 1]  23 (0x017) dup
    [ 2]  24 (0x018) ldstr 700001BB
    [ 3]  29 (0x01d) ldsfld 0A00007B
    [ 4]  34 (0x022) callvirt 0A00007C
In Compiler::impImportCall: opcode is callvirt, kind=0, callRetType is void, structSize is 0


STMT00007 (IL 0x017...  ???)
               [000030] I-CXG-------              *  CALL nullcheck void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].Add (exactContextHnd=0x00000000D1FFAB1E)
               [000022] ------------ this in rcx  +--*  LCL_VAR   ref    V04 tmp2         
               [000023] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000029] --CXG------- arg2         \--*  COMMA     ref   
               [000028] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000026] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc86100028
               [000027] ------------ arg1            |  \--*  CNS_INT   int    215
               [000024] ----G-------                 \--*  FIELD     ref    FalseString

    [ 1]  39 (0x027) call 0A00007D
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0


STMT00008 (IL 0x027...  ???)
               [000031] I-C-G-------              *  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create (exactContextHnd=0x00000000D1FFAB1E)
               [000021] ------------ arg0         \--*  LCL_VAR   ref    V04 tmp2         

    [ 1]  44 (0x02c) dup
lvaGrabTemp returning 5 (V05 tmp3) called for dup spill.


STMT00009 (IL   ???...  ???)
               [000034] -AC---------              *  ASG       ref   
               [000033] D------N----              +--*  LCL_VAR   ref    V05 tmp3         
               [000032] --C---------              \--*  RET_EXPR  ref   (inl return from call [000031])
Marked V05 as a single def local
Named Intrinsic Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create: Not recognized

lvaSetClass: setting class for V05 to (00000000D1FFAB1E) Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace 

    [ 2]  45 (0x02d) ldc.i4.1 1
    [ 3]  46 (0x02e) callvirt 0A00007E
In Compiler::impImportCall: opcode is callvirt, kind=0, callRetType is void, structSize is 0


STMT00010 (IL   ???...  ???)
               [000038] I-C-G-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.set_LoadMetadataForReferencedProjects (exactContextHnd=0x00000000D1FFAB1E)
               [000036] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         
               [000039] ------------ arg1         \--*  PUTARG_TYPE bool  
               [000037] ------------                 \--*  CNS_INT   int    1

    [ 1]  51 (0x033) dup
    [ 2]  52 (0x034) ldc.i4.1 1
    [ 3]  53 (0x035) callvirt 0A00007F
In Compiler::impImportCall: opcode is callvirt, kind=0, callRetType is void, structSize is 0


STMT00011 (IL 0x033...  ???)
               [000042] I-C-G-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.set_SkipUnrecognizedProjects (exactContextHnd=0x00000000D1FFAB1E)
               [000040] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         
               [000043] ------------ arg1         \--*  PUTARG_TYPE bool  
               [000041] ------------                 \--*  CNS_INT   int    1

    [ 1]  58 (0x03a) dup
    [ 2]  59 (0x03b) ldstr 7000020D
    [ 3]  64 (0x040) ldstr 7000021B
    [ 4]  69 (0x045) callvirt 0A000080
In Compiler::impImportCall: opcode is callvirt, kind=0, callRetType is void, structSize is 0


STMT00012 (IL 0x03A...  ???)
               [000047] I-C-G-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.AssociateFileExtensionWithLanguage (exactContextHnd=0x00000000D1FFAB1E)
               [000044] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         
               [000045] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000046] ------------ arg2         \--*  CNS_STR   ref   <string constant>

    [ 1]  74 (0x04a) dup
    [ 2]  75 (0x04b) ldstr 70000221
    [ 3]  80 (0x050) ldstr 70000231
    [ 4]  85 (0x055) callvirt 0A000080
In Compiler::impImportCall: opcode is callvirt, kind=0, callRetType is void, structSize is 0


STMT00013 (IL 0x04A...  ???)
               [000051] I-C-G-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.AssociateFileExtensionWithLanguage (exactContextHnd=0x00000000D1FFAB1E)
               [000048] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         
               [000049] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000050] ------------ arg2         \--*  CNS_STR   ref   <string constant>

    [ 1]  90 (0x05a) dup
    [ 2]  91 (0x05b) ldloc.0
    [ 3]  92 (0x05c) ldftn 06000082
    [ 4]  98 (0x062) newobj
lvaGrabTemp returning 6 (V06 tmp4) called for NewObj constructor temp.


STMT00014 (IL 0x05A...  ???)
               [000058] -A----------              *  ASG       ref   
               [000057] D------N----              +--*  LCL_VAR   ref    V06 tmp4         
               [000056] ------------              \--*  ALLOCOBJ  ref   
               [000055] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token
Marked V06 as a single def local

lvaSetClass: setting class for V06 to (00000000D1FFAB1E) System.EventHandler`1[[Microsoft.CodeAnalysis.WorkspaceDiagnosticEventArgs, Microsoft.CodeAnalysis.Workspaces, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]]  [exact]
 0A000081
In Compiler::impImportCall: opcode is newobj, kind=0, callRetType is void, structSize is 0

fgOptimizeDelegateConstructor: optimized


STMT00015 (IL   ???...  ???)
               [000060] I-C-G-------              *  CALL      void   System.MulticastDelegate.CtorClosed (exactContextHnd=0x00000000D1FFAB1E)
               [000059] ------------ this in rcx  +--*  LCL_VAR   ref    V06 tmp4         
               [000053] ------------ arg1         +--*  LCL_VAR   ref    V01 loc0         
               [000054] ------------ arg2         \--*  FTN_ADDR  long   <>c__DisplayClass1_0.<GetWorkspace>b__0


    [ 3] 103 (0x067) callvirt 0A000082 (Implicit Tail call: prefixFlags |= PREFIX_TAILCALL_IMPLICIT)
In Compiler::impImportCall: opcode is callvirt, kind=0, callRetType is void, structSize is 0

Rejecting implicit tail call for  [000062]


STMT00016 (IL 0x067...  ???)
               [000062] I-C-G-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed (exactContextHnd=0x00000000D1FFAB1E)
               [000052] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         
               [000061] ------------ arg1         \--*  LCL_VAR   ref    V06 tmp4         

    [ 1] 108 (0x06c) ret

STMT00017 (IL 0x06C...  ???)
               [000063] ------------              *  RETURN    ref   
               [000035] ------------              \--*  LCL_VAR   ref    V05 tmp3         

*************** Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)        (return)                     i newobj 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06D) (return), preds={} succs={}

***** BB01
STMT00000 (IL 0x000...0x005)
               [000003] -A----------              *  ASG       ref   
               [000002] D------N----              +--*  LCL_VAR   ref    V03 tmp1         
               [000001] ------------              \--*  ALLOCOBJ  ref   
               [000000] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB01
STMT00001 (IL   ???...  ???)
               [000005] I-C-G-------              *  CALL      void   <>c__DisplayClass1_0..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000004] ------------ this in rcx  \--*  LCL_VAR   ref    V03 tmp1         

***** BB01
STMT00002 (IL 0x005...  ???)
               [000008] -A----------              *  ASG       ref   
               [000007] D------N----              +--*  LCL_VAR   ref    V01 loc0         
               [000006] ------------              \--*  LCL_VAR   ref    V03 tmp1         

***** BB01
STMT00003 (IL 0x006...0x008)
               [000012] -A-XG-------              *  ASG       ref   
               [000011] ---XG--N----              +--*  FIELD     ref    projectPath
               [000009] ------------              |  \--*  LCL_VAR   ref    V01 loc0         
               [000010] ------------              \--*  LCL_VAR   ref    V00 arg0         

***** BB01
STMT00004 (IL 0x00D...0x06C)
               [000013] I-C-G-------              *  CALL      ref    System.StringComparer.get_Ordinal (exactContextHnd=0x00000000D1FFAB1E)

***** BB01
STMT00005 (IL   ???...  ???)
               [000018] -A----------              *  ASG       ref   
               [000017] D------N----              +--*  LCL_VAR   ref    V04 tmp2         
               [000016] ------------              \--*  ALLOCOBJ  ref   
               [000015] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00006 (IL   ???...  ???)
               [000020] I-C-G-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000019] ------------ this in rcx  +--*  LCL_VAR   ref    V04 tmp2         
               [000014] --C--------- arg1         \--*  RET_EXPR  ref   (inl return from call [000013])

***** BB01
STMT00007 (IL 0x017...  ???)
               [000030] I-CXG-------              *  CALL nullcheck void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].Add (exactContextHnd=0x00000000D1FFAB1E)
               [000022] ------------ this in rcx  +--*  LCL_VAR   ref    V04 tmp2         
               [000023] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000029] --CXG------- arg2         \--*  COMMA     ref   
               [000028] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000026] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc86100028
               [000027] ------------ arg1            |  \--*  CNS_INT   int    215
               [000024] ----G-------                 \--*  FIELD     ref    FalseString

***** BB01
STMT00008 (IL 0x027...  ???)
               [000031] I-C-G-------              *  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create (exactContextHnd=0x00000000D1FFAB1E)
               [000021] ------------ arg0         \--*  LCL_VAR   ref    V04 tmp2         

***** BB01
STMT00009 (IL   ???...  ???)
               [000034] -AC---------              *  ASG       ref   
               [000033] D------N----              +--*  LCL_VAR   ref    V05 tmp3         
               [000032] --C---------              \--*  RET_EXPR  ref   (inl return from call [000031])

***** BB01
STMT00010 (IL   ???...  ???)
               [000038] I-C-G-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.set_LoadMetadataForReferencedProjects (exactContextHnd=0x00000000D1FFAB1E)
               [000036] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         
               [000039] ------------ arg1         \--*  PUTARG_TYPE bool  
               [000037] ------------                 \--*  CNS_INT   int    1

***** BB01
STMT00011 (IL 0x033...  ???)
               [000042] I-C-G-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.set_SkipUnrecognizedProjects (exactContextHnd=0x00000000D1FFAB1E)
               [000040] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         
               [000043] ------------ arg1         \--*  PUTARG_TYPE bool  
               [000041] ------------                 \--*  CNS_INT   int    1

***** BB01
STMT00012 (IL 0x03A...  ???)
               [000047] I-C-G-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.AssociateFileExtensionWithLanguage (exactContextHnd=0x00000000D1FFAB1E)
               [000044] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         
               [000045] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000046] ------------ arg2         \--*  CNS_STR   ref   <string constant>

***** BB01
STMT00013 (IL 0x04A...  ???)
               [000051] I-C-G-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.AssociateFileExtensionWithLanguage (exactContextHnd=0x00000000D1FFAB1E)
               [000048] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         
               [000049] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000050] ------------ arg2         \--*  CNS_STR   ref   <string constant>

***** BB01
STMT00014 (IL 0x05A...  ???)
               [000058] -A----------              *  ASG       ref   
               [000057] D------N----              +--*  LCL_VAR   ref    V06 tmp4         
               [000056] ------------              \--*  ALLOCOBJ  ref   
               [000055] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00015 (IL   ???...  ???)
               [000060] I-C-G-------              *  CALL      void   System.MulticastDelegate.CtorClosed (exactContextHnd=0x00000000D1FFAB1E)
               [000059] ------------ this in rcx  +--*  LCL_VAR   ref    V06 tmp4         
               [000053] ------------ arg1         +--*  LCL_VAR   ref    V01 loc0         
               [000054] ------------ arg2         \--*  FTN_ADDR  long   <>c__DisplayClass1_0.<GetWorkspace>b__0


***** BB01
STMT00016 (IL 0x067...  ???)
               [000062] I-C-G-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed (exactContextHnd=0x00000000D1FFAB1E)
               [000052] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         
               [000061] ------------ arg1         \--*  LCL_VAR   ref    V06 tmp4         

***** BB01
STMT00017 (IL 0x06C...  ???)
               [000063] ------------              *  RETURN    ref   
               [000035] ------------              \--*  LCL_VAR   ref    V05 tmp3         

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Finishing PHASE Indirect call transform [no changes]

*************** Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Finishing PHASE Expand patchpoints [no changes]

*************** Starting PHASE Post-import

*************** Finishing PHASE Post-import

*************** Starting PHASE Morph - Init

New BlockSet epoch 1, # of blocks (including unused BB00): 2, bitset array size: 1 (short)

*************** In fgRemoveEmptyBlocks

*************** Finishing PHASE Morph - Init
*************** In fgDebugCheckBBlist

*************** Starting PHASE Morph - Inlining
Expanding INLINE_CANDIDATE in statement STMT00001 in BB01:
STMT00001 (IL   ???...  ???)
               [000005] I-C-G-------              *  CALL      void   <>c__DisplayClass1_0..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000004] ------------ this in rcx  \--*  LCL_VAR   ref    V03 tmp1         
thisArg: is a local var
               [000004] ------------              *  LCL_VAR   ref    V03 tmp1         

INLINER: inlineInfo.tokenLookupContextHandle for <>c__DisplayClass1_0:.ctor():this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method <>c__DisplayClass1_0:.ctor():this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  28 28 00 00 0a    call         0xA000028
IL_0006  2a                ret         

INLINER impTokenLookupContextHandle for <>c__DisplayClass1_0:.ctor():this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for <>c__DisplayClass1_0:.ctor():this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB02 [0001] created.
BB02 [000..007)
Basic block list for '<>c__DisplayClass1_0:.ctor():this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB02 [0001]  1                             1       [000..007)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000005] Starting PHASE Pre-import

*************** Inline @[000005] Finishing PHASE Pre-import

*************** Inline @[000005] Starting PHASE Importation
*************** In impImport() for <>c__DisplayClass1_0:.ctor():this

impImportBlockPending for BB02

Importing BB02 (PC=000) of '<>c__DisplayClass1_0:.ctor():this'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) call 0A000028
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0


               [000064] I-C-G-------              *  CALL      void   System.Object..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000004] ------------ this in rcx  \--*  LCL_VAR   ref    V03 tmp1         

    [ 0]   6 (0x006) ret
*************** Inline @[000005] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB02 [0001]  1                             1       [000..007)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB02 [000..007) (return), preds={} succs={}

***** BB02
               [000064] I-C-G-------              *  CALL      void   System.Object..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000004] ------------ this in rcx  \--*  LCL_VAR   ref    V03 tmp1         

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000005] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000005] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000005] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000005] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000005] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000005] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000005] -----------

Arguments setup:

Inlinee method body:
STMT00018 (IL   ???...  ???)
               [000064] I-C-G-------              *  CALL      void   System.Object..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000004] ------------ this in rcx  \--*  LCL_VAR   ref    V03 tmp1         

fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined <>c__DisplayClass1_0:.ctor():this (7 IL bytes) (depth 1) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace' calling '<>c__DisplayClass1_0:.ctor():this'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Expanding INLINE_CANDIDATE in statement STMT00018 in BB01:
STMT00018 (IL   ???...  ???)
               [000064] I-C-G-------              *  CALL      void   System.Object..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000004] ------------ this in rcx  \--*  LCL_VAR   ref    V03 tmp1         
thisArg: is a local var
               [000004] ------------              *  LCL_VAR   ref    V03 tmp1         

INLINER: inlineInfo.tokenLookupContextHandle for System.Object:.ctor():this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Object:.ctor():this :
IL to import:
IL_0000  2a                ret         

INLINER impTokenLookupContextHandle for System.Object:.ctor():this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Object:.ctor():this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB03 [0002] created.
BB03 [000..001)
Basic block list for 'System.Object:.ctor():this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB03 [0002]  1                             1       [000..001)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000064] Starting PHASE Pre-import

*************** Inline @[000064] Finishing PHASE Pre-import

*************** Inline @[000064] Starting PHASE Importation
*************** In impImport() for System.Object:.ctor():this

impImportBlockPending for BB03

Importing BB03 (PC=000) of 'System.Object:.ctor():this'
    [ 0]   0 (0x000) ret
** Note: inlinee IL was partially imported -- imported 0 of 1 bytes of method IL

*************** Inline @[000064] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB03 [0002]  1                             1       [000..001)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB03 [000..001) (return), preds={} succs={}

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000064] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000064] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000064] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000064] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000064] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000064] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000064] -----------

Arguments setup:

Inlinee method body:fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined System.Object:.ctor():this (1 IL bytes) (depth 2) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace' calling 'System.Object:.ctor():this'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Expanding INLINE_CANDIDATE in statement STMT00004 in BB01:
STMT00004 (IL 0x00D...0x06C)
               [000013] I-C-G-------              *  CALL      ref    System.StringComparer.get_Ordinal (exactContextHnd=0x00000000D1FFAB1E)
INLINER: inlineInfo.tokenLookupContextHandle for System.StringComparer:get_Ordinal():System.StringComparer set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.StringComparer:get_Ordinal():System.StringComparer :
IL to import:
IL_0000  7e b9 04 00 04    ldsfld       0x40004B9
IL_0005  2a                ret         

INLINER impTokenLookupContextHandle for System.StringComparer:get_Ordinal():System.StringComparer is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.StringComparer:get_Ordinal():System.StringComparer
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB04 [0003] created.
BB04 [000..006)
Basic block list for 'System.StringComparer:get_Ordinal():System.StringComparer'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB04 [0003]  1                             1       [000..006)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000013] Starting PHASE Pre-import

*************** Inline @[000013] Finishing PHASE Pre-import

*************** Inline @[000013] Starting PHASE Importation
*************** In impImport() for System.StringComparer:get_Ordinal():System.StringComparer

impImportBlockPending for BB04

Importing BB04 (PC=000) of 'System.StringComparer:get_Ordinal():System.StringComparer'
    [ 0]   0 (0x000) ldsfld 040004B9
    [ 1]   5 (0x005) ret

    Inlinee Return expression (before normalization)  =>
               [000067] ----G-------              *  FIELD     ref    Instance


    Inlinee Return expression (after normalization) =>
               [000067] ----G-------              *  FIELD     ref    Instance

** Note: inlinee IL was partially imported -- imported 0 of 6 bytes of method IL

*************** Inline @[000013] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB04 [0003]  1                             1       [000..006)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB04 [000..006) (return), preds={} succs={}

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000013] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000013] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000013] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000013] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000013] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000013] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000013] -----------

Inlinee method body:fgInlineAppendStatements: no gc ref inline locals.

Return expression for call at [000013] is
               [000067] ----G-------              *  FIELD     ref    Instance
Successfully inlined System.StringComparer:get_Ordinal():System.StringComparer (6 IL bytes) (depth 1) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace' calling 'System.StringComparer:get_Ordinal():System.StringComparer'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Expanding INLINE_CANDIDATE in statement STMT00006 in BB01:
STMT00006 (IL   ???...  ???)
               [000020] I-C-G-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000019] ------------ this in rcx  +--*  LCL_VAR   ref    V04 tmp2         
               [000014] --C--------- arg1         \--*  RET_EXPR  ref   (inl return from call [000067])
thisArg: is a local var
               [000019] ------------              *  LCL_VAR   ref    V04 tmp2         


Argument #1: has global refs
               [000067] ----G-------              *  FIELD     ref    Instance

INLINER: inlineInfo.tokenLookupContextHandle for System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:.ctor(System.Collections.Generic.IEqualityComparer`1[__Canon]):this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:.ctor(System.Collections.Generic.IEqualityComparer`1[__Canon]):this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  16                ldc.i4.0    
IL_0002  03                ldarg.1     
IL_0003  28 bb 0b 00 0a    call         0xA000BBB
IL_0008  2a                ret         

INLINER impTokenLookupContextHandle for System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:.ctor(System.Collections.Generic.IEqualityComparer`1[__Canon]):this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:.ctor(System.Collections.Generic.IEqualityComparer`1[__Canon]):this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB05 [0004] created.
BB05 [000..009)
Basic block list for 'System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:.ctor(System.Collections.Generic.IEqualityComparer`1[__Canon]):this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB05 [0004]  1                             1       [000..009)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000020] Starting PHASE Pre-import

*************** Inline @[000020] Finishing PHASE Pre-import

*************** Inline @[000020] Starting PHASE Importation
*************** In impImport() for System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:.ctor(System.Collections.Generic.IEqualityComparer`1[__Canon]):this

impImportBlockPending for BB05

Importing BB05 (PC=000) of 'System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:.ctor(System.Collections.Generic.IEqualityComparer`1[__Canon]):this'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) ldc.i4.0 0
    [ 2]   2 (0x002) ldarg.1
lvaGrabTemp returning 7 (V07 tmp5) called for Inlining Arg.
Marked V07 as a single def temp
Querying runtime about current class of field System.OrdinalCaseSensitiveComparer.Instance (declared as System.OrdinalCaseSensitiveComparer)
Runtime reports field is init-only and initialized and has class System.OrdinalCaseSensitiveComparer

lvaSetClass: setting class for V07 to (00000000D1FFAB1E) System.OrdinalCaseSensitiveComparer  [exact]

    [ 3]   3 (0x003) call 0A000BBB
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'noinline per IL/cached result' for 'System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:.ctor(System.Collections.Generic.IEqualityComparer`1[__Canon]):this' calling 'System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:.ctor(int,System.Collections.Generic.IEqualityComparer`1[__Canon]):this'
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'noinline per IL/cached result'


               [000071] --C-G-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor
               [000019] ------------ this in rcx  +--*  LCL_VAR   ref    V04 tmp2         
               [000069] ------------ arg1         +--*  CNS_INT   int    0
               [000070] ------------ arg2         \--*  LCL_VAR   ref    V07 tmp5         

    [ 0]   8 (0x008) ret
*************** Inline @[000020] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB05 [0004]  1                             1       [000..009)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB05 [000..009) (return), preds={} succs={}

***** BB05
               [000071] --C-G-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor
               [000019] ------------ this in rcx  +--*  LCL_VAR   ref    V04 tmp2         
               [000069] ------------ arg1         +--*  CNS_INT   int    0
               [000070] ------------ arg2         \--*  LCL_VAR   ref    V07 tmp5         

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000020] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000020] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000020] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000020] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000020] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000020] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000020] -----------

Arguments setup:
STMT00020 (IL   ???...  ???)
               [000073] -A--G-------              *  ASG       ref   
               [000072] D------N----              +--*  LCL_VAR   ref    V07 tmp5         
               [000067] ----G-------              \--*  FIELD     ref    Instance

Inlinee method body:
STMT00019 (IL   ???...  ???)
               [000071] --C-G-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor
               [000019] ------------ this in rcx  +--*  LCL_VAR   ref    V04 tmp2         
               [000069] ------------ arg1         +--*  CNS_INT   int    0
               [000070] ------------ arg2         \--*  LCL_VAR   ref    V07 tmp5         

fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:.ctor(System.Collections.Generic.IEqualityComparer`1[__Canon]):this (9 IL bytes) (depth 1) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace' calling 'System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:.ctor(System.Collections.Generic.IEqualityComparer`1[__Canon]):this'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Querying runtime about current class of field System.OrdinalCaseSensitiveComparer.Instance (declared as System.OrdinalCaseSensitiveComparer)
Runtime reports field is init-only and initialized and has class System.OrdinalCaseSensitiveComparer
Expanding INLINE_CANDIDATE in statement STMT00007 in BB01:
STMT00007 (IL 0x017...  ???)
               [000030] I-CXG-------              *  CALL nullcheck void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].Add (exactContextHnd=0x00000000D1FFAB1E)
               [000022] ------------ this in rcx  +--*  LCL_VAR   ref    V04 tmp2         
               [000023] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000029] --CXG------- arg2         \--*  COMMA     ref   
               [000028] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000026] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc86100028
               [000027] ------------ arg1            |  \--*  CNS_INT   int    215
               [000024] ----G-------                 \--*  FIELD     ref    FalseString
thisArg: is a local var
               [000022] ------------              *  LCL_VAR   ref    V04 tmp2         


Argument #1: is a constant
               [000023] ------------              *  CNS_STR   ref   <string constant>


Argument #2: has global refs has side effects
               [000029] --CXG-------              *  COMMA     ref   
               [000028] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000026] ------------ arg0         |  +--*  CNS_INT   long   0x7ffc86100028
               [000027] ------------ arg1         |  \--*  CNS_INT   int    215
               [000024] ----G-------              \--*  FIELD     ref    FalseString

INLINER: inlineInfo.tokenLookupContextHandle for System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:Add(System.__Canon,System.__Canon):this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:Add(System.__Canon,System.__Canon):this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  03                ldarg.1     
IL_0002  04                ldarg.2     
IL_0003  18                ldc.i4.2    
IL_0004  28 d9 0b 00 0a    call         0xA000BD9
IL_0009  0a                stloc.0     
IL_000a  06                ldloc.0     
IL_000b  28 a6 59 00 06    call         0x60059A6
IL_0010  2a                ret         

INLINER impTokenLookupContextHandle for System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:Add(System.__Canon,System.__Canon):this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:Add(System.__Canon,System.__Canon):this
weight= 10 : state   3 [ ldarg.0 ]
weight= 16 : state   4 [ ldarg.1 ]
weight= 35 : state   5 [ ldarg.2 ]
weight= 34 : state  25 [ ldc.i4.2 ]
weight= 79 : state  40 [ call ]
weight= 20 : state 199 [ stloc.0 -> ldloc.0 ]
weight= 79 : state  40 [ call ]
weight= 19 : state  42 [ ret ]

Inline candidate looks like a wrapper method.  Multiplier increased to 1.
Inline candidate is mostly loads and stores.  Multiplier increased to 4.
Inline candidate callsite is boring.  Multiplier increased to 5.3.
calleeNativeSizeEstimate=292
callsiteNativeSizeEstimate=145
benefit multiplier=5.3
threshold=768
Native estimate for function size is within threshold for inlining 29.2 <= 76.8 (multiplier = 5.3)
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB06 [0005] created.
BB06 [000..011)
Basic block list for 'System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:Add(System.__Canon,System.__Canon):this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB06 [0005]  1                             1       [000..011)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000030] Starting PHASE Pre-import

*************** Inline @[000030] Finishing PHASE Pre-import

*************** Inline @[000030] Starting PHASE Importation
*************** In impImport() for System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:Add(System.__Canon,System.__Canon):this

impImportBlockPending for BB06

Importing BB06 (PC=000) of 'System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:Add(System.__Canon,System.__Canon):this'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) ldarg.1
    [ 2]   2 (0x002) ldarg.2
lvaGrabTemp returning 8 (V08 tmp6) called for Inlining Arg.
Marked V08 as a single def temp
Querying runtime about current class of field System.Boolean.FalseString (declared as System.String)
Field's current class not available

lvaSetClass: setting class for V08 to (00000000D1FFAB1E) System.String 

    [ 3]   3 (0x003) ldc.i4.2 2
    [ 4]   4 (0x004) call 0A000BD9
In Compiler::impImportCall: opcode is call, kind=0, callRetType is bool, structSize is 0
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'noinline per IL/cached result' for 'System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:Add(System.__Canon,System.__Canon):this' calling 'System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:TryInsert(System.__Canon,System.__Canon,ubyte):bool:this'
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'noinline per IL/cached result'

    [ 1]   9 (0x009) stloc.0
lvaGrabTemp returning 9 (V09 tmp7) (a long lifetime temp) called for Inline stloc first use temp.


               [000081] -AC-G-------              *  ASG       bool  
               [000080] D------N----              +--*  LCL_VAR   bool   V09 tmp7         
               [000078] --C-G-------              \--*  CALL      int    System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].TryInsert
               [000022] ------------ this in rcx     +--*  LCL_VAR   ref    V04 tmp2         
               [000075] ------------ arg1            +--*  CNS_STR   ref   <string constant>
               [000076] ------------ arg2            +--*  LCL_VAR   ref    V08 tmp6         
               [000079] ------------ arg3            \--*  PUTARG_TYPE ubyte 
               [000077] ------------                    \--*  CNS_INT   int    2

    [ 0]  10 (0x00a) ldloc.0
    [ 1]  11 (0x00b) call 060059A6
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0


               [000083] I-C-G-------              *  CALL      void   System.Diagnostics.Debug.Assert (exactContextHnd=0x00000000D1FFAB1E)
               [000084] ------------ arg0         \--*  PUTARG_TYPE bool  
               [000082] ------------                 \--*  LCL_VAR   int    V09 tmp7         

    [ 0]  16 (0x010) ret
*************** Inline @[000030] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB06 [0005]  1                             1       [000..011)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB06 [000..011) (return), preds={} succs={}

***** BB06
               [000081] -AC-G-------              *  ASG       bool  
               [000080] D------N----              +--*  LCL_VAR   bool   V09 tmp7         
               [000078] --C-G-------              \--*  CALL      int    System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].TryInsert
               [000022] ------------ this in rcx     +--*  LCL_VAR   ref    V04 tmp2         
               [000075] ------------ arg1            +--*  CNS_STR   ref   <string constant>
               [000076] ------------ arg2            +--*  LCL_VAR   ref    V08 tmp6         
               [000079] ------------ arg3            \--*  PUTARG_TYPE ubyte 
               [000077] ------------                    \--*  CNS_INT   int    2

***** BB06
               [000083] I-C-G-------              *  CALL      void   System.Diagnostics.Debug.Assert (exactContextHnd=0x00000000D1FFAB1E)
               [000084] ------------ arg0         \--*  PUTARG_TYPE bool  
               [000082] ------------                 \--*  LCL_VAR   int    V09 tmp7         

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000030] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000030] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000030] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000030] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000030] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000030] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000030] -----------

Arguments setup:
STMT00023 (IL 0x017...  ???)
               [000088] -ACXG-------              *  ASG       ref   
               [000087] D------N----              +--*  LCL_VAR   ref    V08 tmp6         
               [000029] --CXG-------              \--*  COMMA     ref   
               [000028] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000026] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc86100028
               [000027] ------------ arg1            |  \--*  CNS_INT   int    215
               [000024] ----G-------                 \--*  FIELD     ref    FalseString

Inlinee method body:
STMT00021 (IL 0x017...  ???)
               [000081] -AC-G-------              *  ASG       bool  
               [000080] D------N----              +--*  LCL_VAR   bool   V09 tmp7         
               [000078] --C-G-------              \--*  CALL      int    System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].TryInsert
               [000022] ------------ this in rcx     +--*  LCL_VAR   ref    V04 tmp2         
               [000075] ------------ arg1            +--*  CNS_STR   ref   <string constant>
               [000076] ------------ arg2            +--*  LCL_VAR   ref    V08 tmp6         
               [000079] ------------ arg3            \--*  PUTARG_TYPE ubyte 
               [000077] ------------                    \--*  CNS_INT   int    2


STMT00022 (IL 0x017...  ???)
               [000083] I-C-G-------              *  CALL      void   System.Diagnostics.Debug.Assert (exactContextHnd=0x00000000D1FFAB1E)
               [000084] ------------ arg0         \--*  PUTARG_TYPE bool  
               [000082] ------------                 \--*  LCL_VAR   int    V09 tmp7         

fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:Add(System.__Canon,System.__Canon):this (17 IL bytes) (depth 1) [profitable inline]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'profitable inline' for 'SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace' calling 'System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:Add(System.__Canon,System.__Canon):this'
INLINER: during 'fgInline' result 'success' reason 'profitable inline'
Querying runtime about current class of field System.Boolean.FalseString (declared as System.String)
Field's current class not available
Expanding INLINE_CANDIDATE in statement STMT00022 in BB01:
STMT00022 (IL 0x017...  ???)
               [000083] I-C-G-------              *  CALL      void   System.Diagnostics.Debug.Assert (exactContextHnd=0x00000000D1FFAB1E)
               [000084] ------------ arg0         \--*  PUTARG_TYPE bool  
               [000082] ------------                 \--*  LCL_VAR   int    V09 tmp7         

Argument #0: is a local var
               [000082] ------------              *  LCL_VAR   int    V09 tmp7         

INLINER: inlineInfo.tokenLookupContextHandle for System.Diagnostics.Debug:Assert(bool) set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Diagnostics.Debug:Assert(bool) :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  7e 1b 02 00 04    ldsfld       0x400021B
IL_0006  7e 1b 02 00 04    ldsfld       0x400021B
IL_000b  28 a8 59 00 06    call         0x60059A8
IL_0010  2a                ret         

INLINER impTokenLookupContextHandle for System.Diagnostics.Debug:Assert(bool) is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Diagnostics.Debug:Assert(bool)
weight= 10 : state   3 [ ldarg.0 ]
weight=159 : state 112 [ ldsfld ]
weight=159 : state 112 [ ldsfld ]
weight= 79 : state  40 [ call ]
weight= 19 : state  42 [ ret ]

Inline candidate looks like a wrapper method.  Multiplier increased to 1.
Inline candidate is mostly loads and stores.  Multiplier increased to 4.
Inline candidate callsite is boring.  Multiplier increased to 5.3.
calleeNativeSizeEstimate=426
callsiteNativeSizeEstimate=85
benefit multiplier=5.3
threshold=450
Native estimate for function size is within threshold for inlining 42.6 <= 45 (multiplier = 5.3)
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB07 [0006] created.
BB07 [000..011)
Basic block list for 'System.Diagnostics.Debug:Assert(bool)'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB07 [0006]  1                             1       [000..011)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000083] Starting PHASE Pre-import

*************** Inline @[000083] Finishing PHASE Pre-import

*************** Inline @[000083] Starting PHASE Importation
*************** In impImport() for System.Diagnostics.Debug:Assert(bool)

impImportBlockPending for BB07

Importing BB07 (PC=000) of 'System.Diagnostics.Debug:Assert(bool)'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) ldsfld 0400021B
    [ 2]   6 (0x006) ldsfld 0400021B
    [ 3]  11 (0x00b) call 060059A8
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0


               [000095] I-C-G-------              *  CALL      void   System.Diagnostics.Debug.Assert (exactContextHnd=0x00000000D1FFAB1E)
               [000096] ------------ arg0         +--*  PUTARG_TYPE bool  
               [000090] ------------              |  \--*  LCL_VAR   int    V09 tmp7         
               [000092] #---G------- arg1         +--*  IND       ref   
               [000091] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL]
               [000094] #---G------- arg2         \--*  IND       ref   
               [000093] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL]

    [ 0]  16 (0x010) ret
*************** Inline @[000083] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB07 [0006]  1                             1       [000..011)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB07 [000..011) (return), preds={} succs={}

***** BB07
               [000095] I-C-G-------              *  CALL      void   System.Diagnostics.Debug.Assert (exactContextHnd=0x00000000D1FFAB1E)
               [000096] ------------ arg0         +--*  PUTARG_TYPE bool  
               [000090] ------------              |  \--*  LCL_VAR   int    V09 tmp7         
               [000092] #---G------- arg1         +--*  IND       ref   
               [000091] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL]
               [000094] #---G------- arg2         \--*  IND       ref   
               [000093] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL]

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000083] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000083] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000083] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000083] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000083] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000083] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000083] -----------

Arguments setup:

Inlinee method body:
STMT00025 (IL 0x017...  ???)
               [000095] I-C-G-------              *  CALL      void   System.Diagnostics.Debug.Assert (exactContextHnd=0x00000000D1FFAB1E)
               [000096] ------------ arg0         +--*  PUTARG_TYPE bool  
               [000090] ------------              |  \--*  LCL_VAR   int    V09 tmp7         
               [000092] #---G------- arg1         +--*  IND       ref   
               [000091] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL]
               [000094] #---G------- arg2         \--*  IND       ref   
               [000093] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL]

fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined System.Diagnostics.Debug:Assert(bool) (17 IL bytes) (depth 2) [profitable inline]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'profitable inline' for 'SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace' calling 'System.Diagnostics.Debug:Assert(bool)'
INLINER: during 'fgInline' result 'success' reason 'profitable inline'
Expanding INLINE_CANDIDATE in statement STMT00025 in BB01:
STMT00025 (IL 0x017...  ???)
               [000095] I-C-G-------              *  CALL      void   System.Diagnostics.Debug.Assert (exactContextHnd=0x00000000D1FFAB1E)
               [000096] ------------ arg0         +--*  PUTARG_TYPE bool  
               [000090] ------------              |  \--*  LCL_VAR   int    V09 tmp7         
               [000092] #---G------- arg1         +--*  IND       ref   
               [000091] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL]
               [000094] #---G------- arg2         \--*  IND       ref   
               [000093] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL]

Argument #0: is a local var
               [000090] ------------              *  LCL_VAR   int    V09 tmp7         


Argument #1: has global refs
               [000092] #---G-------              *  IND       ref   
               [000091] H-----------              \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL]


Argument #2: has global refs
               [000094] #---G-------              *  IND       ref   
               [000093] H-----------              \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL]

INLINER: inlineInfo.tokenLookupContextHandle for System.Diagnostics.Debug:Assert(bool,System.String,System.String) set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Diagnostics.Debug:Assert(bool,System.String,System.String) :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  2d 07             brtrue.s     7 (IL_000a)
IL_0003  03                ldarg.1     
IL_0004  04                ldarg.2     
IL_0005  28 ab 59 00 06    call         0x60059AB
IL_000a  2a                ret         

INLINER impTokenLookupContextHandle for System.Diagnostics.Debug:Assert(bool,System.String,System.String) is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Diagnostics.Debug:Assert(bool,System.String,System.String)
Jump targets:
  IL_000a
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB08 [0007] created.
BB08 [000..003)
New Basic Block BB09 [0008] created.
BB09 [003..00A)
New Basic Block BB10 [0009] created.
BB10 [00A..00B)
Basic block list for 'System.Diagnostics.Debug:Assert(bool,System.String,System.String)'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB08 [0007]  1                             1       [000..003)-> BB10 ( cond )                     
BB09 [0008]  1                             1       [003..00A)                                     
BB10 [0009]  2                             1       [00A..00B)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000095] Starting PHASE Pre-import

*************** Inline @[000095] Finishing PHASE Pre-import

*************** Inline @[000095] Starting PHASE Importation
*************** In impImport() for System.Diagnostics.Debug:Assert(bool,System.String,System.String)

impImportBlockPending for BB08

Importing BB08 (PC=000) of 'System.Diagnostics.Debug:Assert(bool,System.String,System.String)'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) brtrue.s

               [000101] ------------              *  JTRUE     void  
               [000100] ------------              \--*  NE        int   
               [000098] ------------                 +--*  LCL_VAR   int    V09 tmp7         
               [000099] ------------                 \--*  CNS_INT   int    0

impImportBlockPending for BB09

impImportBlockPending for BB10

Importing BB10 (PC=010) of 'System.Diagnostics.Debug:Assert(bool,System.String,System.String)'
    [ 0]  10 (0x00a) ret
Importing BB09 (PC=003) of 'System.Diagnostics.Debug:Assert(bool,System.String,System.String)'
    [ 0]   3 (0x003) ldarg.1
lvaGrabTemp returning 10 (V10 tmp8) called for Inlining Arg.
Marked V10 as a single def temp

lvaSetClass: setting class for V10 to (00000000D1FFAB1E) System.String 

    [ 1]   4 (0x004) ldarg.2
lvaGrabTemp returning 11 (V11 tmp9) called for Inlining Arg.
Marked V11 as a single def temp

lvaSetClass: setting class for V11 to (00000000D1FFAB1E) System.String 

    [ 2]   5 (0x005) call 060059AB
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'noinline per IL/cached result' for 'System.Diagnostics.Debug:Assert(bool,System.String,System.String)' calling 'System.Diagnostics.Debug:Fail(System.String,System.String)'
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'noinline per IL/cached result'


               [000104] --C-G-------              *  CALL      void   System.Diagnostics.Debug.Fail
               [000102] ------------ arg0         +--*  LCL_VAR   ref    V10 tmp8         
               [000103] ------------ arg1         \--*  LCL_VAR   ref    V11 tmp9         

impImportBlockPending for BB10

** Note: inlinee IL was partially imported -- imported 10 of 11 bytes of method IL

*************** Inline @[000095] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB08 [0007]  1                             1       [000..003)-> BB10 ( cond )                     i 
BB09 [0008]  1                             1       [003..00A)                                     i 
BB10 [0009]  2                             1       [00A..00B)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB08 [000..003) -> BB10 (cond), preds={} succs={BB09,BB10}

***** BB08
               [000101] ------------              *  JTRUE     void  
               [000100] ------------              \--*  NE        int   
               [000098] ------------                 +--*  LCL_VAR   int    V09 tmp7         
               [000099] ------------                 \--*  CNS_INT   int    0

------------ BB09 [003..00A), preds={} succs={BB10}

***** BB09
               [000104] --C-G-------              *  CALL      void   System.Diagnostics.Debug.Fail
               [000102] ------------ arg0         +--*  LCL_VAR   ref    V10 tmp8         
               [000103] ------------ arg1         \--*  LCL_VAR   ref    V11 tmp9         

------------ BB10 [00A..00B) (return), preds={} succs={}

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000095] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000095] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000095] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000095] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000095] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000095] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000095] -----------

Arguments setup:
STMT00028 (IL 0x017...  ???)
               [000106] -A--G-------              *  ASG       ref   
               [000105] D------N----              +--*  LCL_VAR   ref    V10 tmp8         
               [000092] #---G-------              \--*  IND       ref   
               [000091] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL]
STMT00029 (IL 0x017...  ???)
               [000108] -A--G-------              *  ASG       ref   
               [000107] D------N----              +--*  LCL_VAR   ref    V11 tmp9         
               [000094] #---G-------              \--*  IND       ref   
               [000093] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL]

Inlinee method body:New Basic Block BB11 [0010] created.

Convert bbJumpKind of BB10 to BBJ_NONE
fgInlineAppendStatements: no gc ref inline locals.

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB08 [0007]  1                             1       [017..018)-> BB10 ( cond )                     i 
BB09 [0008]  1                             0.50    [017..018)                                     i 
BB10 [0009]  2                             1       [017..018)                                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB08 [017..018) -> BB10 (cond), preds={} succs={BB09,BB10}

***** BB08
STMT00026 (IL 0x017...  ???)
               [000101] ------------              *  JTRUE     void  
               [000100] ------------              \--*  NE        int   
               [000098] ------------                 +--*  LCL_VAR   int    V09 tmp7         
               [000099] ------------                 \--*  CNS_INT   int    0

------------ BB09 [017..018), preds={} succs={BB10}

***** BB09
STMT00027 (IL 0x017...  ???)
               [000104] --C-G-------              *  CALL      void   System.Diagnostics.Debug.Fail
               [000102] ------------ arg0         +--*  LCL_VAR   ref    V10 tmp8         
               [000103] ------------ arg1         \--*  LCL_VAR   ref    V11 tmp9         

------------ BB10 [017..018), preds={} succs={BB11}

-------------------------------------------------------------------------------------------------------------------
Successfully inlined System.Diagnostics.Debug:Assert(bool,System.String,System.String) (11 IL bytes) (depth 3) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace' calling 'System.Diagnostics.Debug:Assert(bool,System.String,System.String)'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Expanding INLINE_CANDIDATE in statement STMT00008 in BB11:
STMT00008 (IL 0x027...  ???)
               [000031] I-C-G-------              *  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create (exactContextHnd=0x00000000D1FFAB1E)
               [000021] ------------ arg0         \--*  LCL_VAR   ref    V04 tmp2         

Argument #0: is a local var
               [000021] ------------              *  LCL_VAR   ref    V04 tmp2         

INLINER: inlineInfo.tokenLookupContextHandle for Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:Create(System.Collections.Generic.IDictionary`2[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:Create(System.Collections.Generic.IDictionary`2[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  28 3d 01 00 06    call         0x600013D
IL_0006  28 4c 00 00 06    call         0x600004C
IL_000b  2a                ret         

INLINER impTokenLookupContextHandle for Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:Create(System.Collections.Generic.IDictionary`2[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:Create(System.Collections.Generic.IDictionary`2[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB12 [0011] created.
BB12 [000..00C)
Basic block list for 'Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:Create(System.Collections.Generic.IDictionary`2[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB12 [0011]  1                             1       [000..00C)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000031] Starting PHASE Pre-import

*************** Inline @[000031] Finishing PHASE Pre-import

*************** Inline @[000031] Starting PHASE Importation
*************** In impImport() for Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:Create(System.Collections.Generic.IDictionary`2[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace

impImportBlockPending for BB12

Importing BB12 (PC=000) of 'Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:Create(System.Collections.Generic.IDictionary`2[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) call 0600013D
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0


               [000110] I-C-G-------              *  CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices (exactContextHnd=0x00000000D1FFAB1E)

    [ 2]   6 (0x006) call 0600004C
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0


               [000112] I-C-G-------              *  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create (exactContextHnd=0x00000000D1FFAB1E)
               [000021] ------------ arg0         +--*  LCL_VAR   ref    V04 tmp2         
               [000111] --C--------- arg1         \--*  RET_EXPR  ref   (inl return from call [000110])

    [ 1]  11 (0x00b) ret

    Inlinee Return expression (before normalization)  =>
               [000113] --C---------              *  RET_EXPR  ref   (inl return from call [000112])


    Inlinee Return expression (after normalization) =>
               [000113] --C---------              *  RET_EXPR  ref   (inl return from call [000112])

*************** Inline @[000031] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB12 [0011]  1                             1       [000..00C)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB12 [000..00C) (return), preds={} succs={}

***** BB12
               [000110] I-C-G-------              *  CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices (exactContextHnd=0x00000000D1FFAB1E)

***** BB12
               [000112] I-C-G-------              *  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create (exactContextHnd=0x00000000D1FFAB1E)
               [000021] ------------ arg0         +--*  LCL_VAR   ref    V04 tmp2         
               [000111] --C--------- arg1         \--*  RET_EXPR  ref   (inl return from call [000110])

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000031] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000031] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000031] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000031] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000031] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000031] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000031] -----------

Arguments setup:

Inlinee method body:
STMT00030 (IL 0x027...  ???)
               [000110] I-C-G-------              *  CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices (exactContextHnd=0x00000000D1FFAB1E)


STMT00031 (IL 0x027...  ???)
               [000112] I-C-G-------              *  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create (exactContextHnd=0x00000000D1FFAB1E)
               [000021] ------------ arg0         +--*  LCL_VAR   ref    V04 tmp2         
               [000111] --C--------- arg1         \--*  RET_EXPR  ref   (inl return from call [000110])

fgInlineAppendStatements: no gc ref inline locals.

Return expression for call at [000031] is
               [000113] --C---------              *  RET_EXPR  ref   (inl return from call [000112])
Successfully inlined Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:Create(System.Collections.Generic.IDictionary`2[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace (12 IL bytes) (depth 1) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace' calling 'Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:Create(System.Collections.Generic.IDictionary`2[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Expanding INLINE_CANDIDATE in statement STMT00030 in BB11:
STMT00030 (IL 0x027...  ???)
               [000110] I-C-G-------              *  CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices (exactContextHnd=0x00000000D1FFAB1E)
INLINER: inlineInfo.tokenLookupContextHandle for Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices:get_DefaultServices():Microsoft.CodeAnalysis.Host.Mef.MefHostServices set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices:get_DefaultServices():Microsoft.CodeAnalysis.Host.Mef.MefHostServices :
IL to import:
IL_0000  7e b1 00 00 04    ldsfld       0x40000B1
IL_0005  2d 1b             brtrue.s     27 (IL_0022)
IL_0007  7f b1 00 00 04    ldsflda      0x40000B1
IL_000c  28 3e 01 00 06    call         0x600013E
IL_0011  8c 41 00 00 1b    box          0x1B000041
IL_0016  28 82 01 00 0a    call         0xA000182
IL_001b  14                ldnull      
IL_001c  28 33 00 00 2b    call         0x2B000033
IL_0021  26                pop         
IL_0022  7e b1 00 00 04    ldsfld       0x40000B1
IL_0027  2a                ret         

INLINER impTokenLookupContextHandle for Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices:get_DefaultServices():Microsoft.CodeAnalysis.Host.Mef.MefHostServices is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices:get_DefaultServices():Microsoft.CodeAnalysis.Host.Mef.MefHostServices
weight=159 : state 112 [ ldsfld ]
weight= 25 : state  45 [ brtrue.s ]
weight=177 : state 113 [ ldsflda ]
weight= 79 : state  40 [ call ]
weight=247 : state 117 [ box ]
weight= 79 : state  40 [ call ]
weight=  7 : state  21 [ ldnull ]
weight= 79 : state  40 [ call ]
weight=-24 : state  39 [ pop ]
weight=159 : state 112 [ ldsfld ]
weight= 19 : state  42 [ ret ]

Inline candidate callsite is boring.  Multiplier increased to 1.3.
calleeNativeSizeEstimate=1006
callsiteNativeSizeEstimate=55
benefit multiplier=1.3
threshold=71
Native estimate for function size exceeds threshold for inlining 100.6 > 7.1 (multiplier = 1.3)


Inline expansion aborted, inline not profitable
Inlining [000110] failed, so bashing STMT00030 to NOP

INLINER: during 'fgInline' result 'failed this call site' reason 'unprofitable inline' for 'SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace' calling 'Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices:get_DefaultServices():Microsoft.CodeAnalysis.Host.Mef.MefHostServices'
INLINER: during 'fgInline' result 'failed this call site' reason 'unprofitable inline'
Expanding INLINE_CANDIDATE in statement STMT00031 in BB11:
STMT00031 (IL 0x027...  ???)
               [000112] I-C-G-------              *  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create (exactContextHnd=0x00000000D1FFAB1E)
               [000021] ------------ arg0         +--*  LCL_VAR   ref    V04 tmp2         
               [000111] --C--------- arg1         \--*  RET_EXPR  ref   (inl return from call [000110])

Argument #0: is a local var
               [000021] ------------              *  LCL_VAR   ref    V04 tmp2         


Argument #1: has global refs has side effects
               [000110] --C-G-------              *  CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices

INLINER: inlineInfo.tokenLookupContextHandle for Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:Create(System.Collections.Generic.IDictionary`2[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],Microsoft.CodeAnalysis.Host.HostServices):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:Create(System.Collections.Generic.IDictionary`2[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],Microsoft.CodeAnalysis.Host.HostServices):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  2d 0b             brtrue.s     11 (IL_000e)
IL_0003  72 1e 0c 00 70    ldstr        0x70000C1E
IL_0008  73 43 00 00 0a    newobj       0xA000043
IL_000d  7a                throw       
IL_000e  03                ldarg.1     
IL_000f  2d 0b             brtrue.s     11 (IL_001c)
IL_0011  72 34 0c 00 70    ldstr        0x70000C34
IL_0016  73 43 00 00 0a    newobj       0xA000043
IL_001b  7a                throw       
IL_001c  03                ldarg.1     
IL_001d  02                ldarg.0     
IL_001e  28 06 00 00 2b    call         0x2B000006
IL_0023  73 48 00 00 06    newobj       0x6000048
IL_0028  2a                ret         

INLINER impTokenLookupContextHandle for Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:Create(System.Collections.Generic.IDictionary`2[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],Microsoft.CodeAnalysis.Host.HostServices):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:Create(System.Collections.Generic.IDictionary`2[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],Microsoft.CodeAnalysis.Host.HostServices):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace
weight= 10 : state   3 [ ldarg.0 ]
weight= 25 : state  45 [ brtrue.s ]
weight= 66 : state 102 [ ldstr ]
weight=227 : state 103 [ newobj ]
weight=210 : state 108 [ throw ]
weight= 16 : state   4 [ ldarg.1 ]
weight= 25 : state  45 [ brtrue.s ]
weight= 66 : state 102 [ ldstr ]
weight=227 : state 103 [ newobj ]
weight=210 : state 108 [ throw ]
weight= 16 : state   4 [ ldarg.1 ]
weight= 10 : state   3 [ ldarg.0 ]
weight= 79 : state  40 [ call ]
weight=227 : state 103 [ newobj ]
weight= 19 : state  42 [ ret ]

Inline candidate has an arg that feeds a constant test.  Multiplier increased to 1.
Inline candidate callsite is boring.  Multiplier increased to 2.3.
calleeNativeSizeEstimate=1433
callsiteNativeSizeEstimate=115
benefit multiplier=2.3
threshold=264
Native estimate for function size exceeds threshold for inlining 143.3 > 26.4 (multiplier = 2.3)


Inline expansion aborted, inline not profitable
Inlining [000112] failed, so bashing STMT00031 to NOP

INLINER: during 'fgInline' result 'failed this call site' reason 'unprofitable inline' for 'SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace' calling 'Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:Create(System.Collections.Generic.IDictionary`2[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],Microsoft.CodeAnalysis.Host.HostServices):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace'
INLINER: during 'fgInline' result 'failed this call site' reason 'unprofitable inline'

Replacing the return expression placeholder [000032] with [000112]
               [000032] --C---------              *  RET_EXPR  ref   (inl return from call [000113])

Inserting the inline return expression
               [000112] --C-G-------              *  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create
               [000021] ------------ arg0         +--*  LCL_VAR   ref    V04 tmp2         
               [000111] --C--------- arg1         \--*  RET_EXPR  ref   (inl return from call [000110])


Replacing the return expression placeholder [000111] with [000110]
               [000111] --C---------              *  RET_EXPR  ref   (inl return from call [000110])

Inserting the inline return expression
               [000110] --C-G-------              *  CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices

Expanding INLINE_CANDIDATE in statement STMT00010 in BB11:
STMT00010 (IL   ???...  ???)
               [000038] I-C-G-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.set_LoadMetadataForReferencedProjects (exactContextHnd=0x00000000D1FFAB1E)
               [000036] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         
               [000039] ------------ arg1         \--*  PUTARG_TYPE bool  
               [000037] ------------                 \--*  CNS_INT   int    1
thisArg: is a local var
               [000036] ------------              *  LCL_VAR   ref    V05 tmp3         


Argument #1: is a constant
               [000037] ------------              *  CNS_INT   int    1


Folding operator with constant nodes into a constant:
               [000117] ------------              *  CAST      int <- bool <- int
               [000037] ------------              \--*  CNS_INT   int    1
Bashed to int constant:
               [000117] ------------              *  CNS_INT   int    1
INLINER: inlineInfo.tokenLookupContextHandle for Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:set_LoadMetadataForReferencedProjects(bool):this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:set_LoadMetadataForReferencedProjects(bool):this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  7b 69 00 00 04    ldfld        0x4000069
IL_0006  03                ldarg.1     
IL_0007  6f 40 00 00 06    callvirt     0x6000040
IL_000c  2a                ret         

INLINER impTokenLookupContextHandle for Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:set_LoadMetadataForReferencedProjects(bool):this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:set_LoadMetadataForReferencedProjects(bool):this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB13 [0012] created.
BB13 [000..00D)
Basic block list for 'Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:set_LoadMetadataForReferencedProjects(bool):this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB13 [0012]  1                             1       [000..00D)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000038] Starting PHASE Pre-import

*************** Inline @[000038] Finishing PHASE Pre-import

*************** Inline @[000038] Starting PHASE Importation
*************** In impImport() for Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:set_LoadMetadataForReferencedProjects(bool):this

impImportBlockPending for BB13

Importing BB13 (PC=000) of 'Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:set_LoadMetadataForReferencedProjects(bool):this'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) ldfld 04000069
    [ 1]   6 (0x006) ldarg.1
    [ 2]   7 (0x007) callvirt 06000040
In Compiler::impImportCall: opcode is callvirt, kind=0, callRetType is void, structSize is 0


               [000120] I-CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.set_LoadMetadataForReferencedProjects (exactContextHnd=0x00000000D1FFAB1E)
               [000118] ---XG------- this in rcx  +--*  FIELD     ref    _loader
               [000036] ------------              |  \--*  LCL_VAR   ref    V05 tmp3         
               [000121] ------------ arg1         \--*  PUTARG_TYPE bool  
               [000119] ------------                 \--*  CNS_INT   int    1

    [ 0]  12 (0x00c) ret
*************** Inline @[000038] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB13 [0012]  1                             1       [000..00D)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB13 [000..00D) (return), preds={} succs={}

***** BB13
               [000120] I-CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.set_LoadMetadataForReferencedProjects (exactContextHnd=0x00000000D1FFAB1E)
               [000118] ---XG------- this in rcx  +--*  FIELD     ref    _loader
               [000036] ------------              |  \--*  LCL_VAR   ref    V05 tmp3         
               [000121] ------------ arg1         \--*  PUTARG_TYPE bool  
               [000119] ------------                 \--*  CNS_INT   int    1

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000038] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000038] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000038] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000038] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000038] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000038] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000038] -----------

Arguments setup:

Inlinee method body:
STMT00032 (IL   ???...  ???)
               [000120] I-CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.set_LoadMetadataForReferencedProjects (exactContextHnd=0x00000000D1FFAB1E)
               [000118] ---XG------- this in rcx  +--*  FIELD     ref    _loader
               [000036] ------------              |  \--*  LCL_VAR   ref    V05 tmp3         
               [000121] ------------ arg1         \--*  PUTARG_TYPE bool  
               [000119] ------------                 \--*  CNS_INT   int    1

fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:set_LoadMetadataForReferencedProjects(bool):this (13 IL bytes) (depth 1) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace' calling 'Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:set_LoadMetadataForReferencedProjects(bool):this'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Expanding INLINE_CANDIDATE in statement STMT00032 in BB11:
STMT00032 (IL   ???...  ???)
               [000120] I-CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.set_LoadMetadataForReferencedProjects (exactContextHnd=0x00000000D1FFAB1E)
               [000118] ---XG------- this in rcx  +--*  FIELD     ref    _loader
               [000036] ------------              |  \--*  LCL_VAR   ref    V05 tmp3         
               [000121] ------------ arg1         \--*  PUTARG_TYPE bool  
               [000119] ------------                 \--*  CNS_INT   int    1
thisArg: has global refs has side effects
               [000118] ---XG-------              *  FIELD     ref    _loader
               [000036] ------------              \--*  LCL_VAR   ref    V05 tmp3         


Argument #1: is a constant
               [000119] ------------              *  CNS_INT   int    1


Folding operator with constant nodes into a constant:
               [000123] ------------              *  CAST      int <- bool <- int
               [000119] ------------              \--*  CNS_INT   int    1
Bashed to int constant:
               [000123] ------------              *  CNS_INT   int    1
INLINER: inlineInfo.tokenLookupContextHandle for Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:set_LoadMetadataForReferencedProjects(bool):this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:set_LoadMetadataForReferencedProjects(bool):this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  03                ldarg.1     
IL_0002  7d 66 00 00 04    stfld        0x4000066
IL_0007  2a                ret         

INLINER impTokenLookupContextHandle for Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:set_LoadMetadataForReferencedProjects(bool):this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:set_LoadMetadataForReferencedProjects(bool):this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB14 [0013] created.
BB14 [000..008)
Basic block list for 'Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:set_LoadMetadataForReferencedProjects(bool):this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB14 [0013]  1                             1       [000..008)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000120] Starting PHASE Pre-import

*************** Inline @[000120] Finishing PHASE Pre-import

*************** Inline @[000120] Starting PHASE Importation
*************** In impImport() for Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:set_LoadMetadataForReferencedProjects(bool):this

impImportBlockPending for BB14

Importing BB14 (PC=000) of 'Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:set_LoadMetadataForReferencedProjects(bool):this'
    [ 0]   0 (0x000) ldarg.0
lvaGrabTemp returning 12 (V12 tmp10) called for Inlining Arg.
Marked V12 as a single def temp
Querying runtime about current class of field Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace._loader (declared as Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader)
Field's current class not available

lvaSetClass: setting class for V12 to (00000000D1FFAB1E) Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader 

    [ 1]   1 (0x001) ldarg.1
    [ 2]   2 (0x002) stfld 04000066

               [000127] -A-XG-------              *  ASG       bool  
               [000126] ---XG--N----              +--*  FIELD     bool   <LoadMetadataForReferencedProjects>k__BackingField
               [000124] ------------              |  \--*  LCL_VAR   ref    V12 tmp10        
               [000125] ------------              \--*  CNS_INT   int    1

    [ 0]   7 (0x007) ret
*************** Inline @[000120] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB14 [0013]  1                             1       [000..008)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB14 [000..008) (return), preds={} succs={}

***** BB14
               [000127] -A-XG-------              *  ASG       bool  
               [000126] ---XG--N----              +--*  FIELD     bool   <LoadMetadataForReferencedProjects>k__BackingField
               [000124] ------------              |  \--*  LCL_VAR   ref    V12 tmp10        
               [000125] ------------              \--*  CNS_INT   int    1

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000120] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000120] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000120] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000120] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000120] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000120] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000120] -----------

Arguments setup:
STMT00034 (IL   ???...  ???)
               [000129] -A-XG-------              *  ASG       ref   
               [000128] D------N----              +--*  LCL_VAR   ref    V12 tmp10        
               [000118] ---XG-------              \--*  FIELD     ref    _loader
               [000036] ------------                 \--*  LCL_VAR   ref    V05 tmp3         

Inlinee method body:
STMT00033 (IL   ???...  ???)
               [000127] -A-XG-------              *  ASG       bool  
               [000126] ---XG--N----              +--*  FIELD     bool   <LoadMetadataForReferencedProjects>k__BackingField
               [000124] ------------              |  \--*  LCL_VAR   ref    V12 tmp10        
               [000125] ------------              \--*  CNS_INT   int    1

fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:set_LoadMetadataForReferencedProjects(bool):this (8 IL bytes) (depth 2) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace' calling 'Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:set_LoadMetadataForReferencedProjects(bool):this'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Querying runtime about current class of field Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace._loader (declared as Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader)
Field's current class not available
Expanding INLINE_CANDIDATE in statement STMT00011 in BB11:
STMT00011 (IL 0x033...  ???)
               [000042] I-C-G-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.set_SkipUnrecognizedProjects (exactContextHnd=0x00000000D1FFAB1E)
               [000040] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         
               [000043] ------------ arg1         \--*  PUTARG_TYPE bool  
               [000041] ------------                 \--*  CNS_INT   int    1
thisArg: is a local var
               [000040] ------------              *  LCL_VAR   ref    V05 tmp3         


Argument #1: is a constant
               [000041] ------------              *  CNS_INT   int    1


Folding operator with constant nodes into a constant:
               [000131] ------------              *  CAST      int <- bool <- int
               [000041] ------------              \--*  CNS_INT   int    1
Bashed to int constant:
               [000131] ------------              *  CNS_INT   int    1
INLINER: inlineInfo.tokenLookupContextHandle for Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:set_SkipUnrecognizedProjects(bool):this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:set_SkipUnrecognizedProjects(bool):this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  7b 69 00 00 04    ldfld        0x4000069
IL_0006  03                ldarg.1     
IL_0007  6f 42 00 00 06    callvirt     0x6000042
IL_000c  2a                ret         

INLINER impTokenLookupContextHandle for Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:set_SkipUnrecognizedProjects(bool):this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:set_SkipUnrecognizedProjects(bool):this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB15 [0014] created.
BB15 [000..00D)
Basic block list for 'Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:set_SkipUnrecognizedProjects(bool):this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB15 [0014]  1                             1       [000..00D)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000042] Starting PHASE Pre-import

*************** Inline @[000042] Finishing PHASE Pre-import

*************** Inline @[000042] Starting PHASE Importation
*************** In impImport() for Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:set_SkipUnrecognizedProjects(bool):this

impImportBlockPending for BB15

Importing BB15 (PC=000) of 'Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:set_SkipUnrecognizedProjects(bool):this'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) ldfld 04000069
    [ 1]   6 (0x006) ldarg.1
    [ 2]   7 (0x007) callvirt 06000042
In Compiler::impImportCall: opcode is callvirt, kind=0, callRetType is void, structSize is 0


               [000134] I-CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.set_SkipUnrecognizedProjects (exactContextHnd=0x00000000D1FFAB1E)
               [000132] ---XG------- this in rcx  +--*  FIELD     ref    _loader
               [000040] ------------              |  \--*  LCL_VAR   ref    V05 tmp3         
               [000135] ------------ arg1         \--*  PUTARG_TYPE bool  
               [000133] ------------                 \--*  CNS_INT   int    1

    [ 0]  12 (0x00c) ret
*************** Inline @[000042] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB15 [0014]  1                             1       [000..00D)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB15 [000..00D) (return), preds={} succs={}

***** BB15
               [000134] I-CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.set_SkipUnrecognizedProjects (exactContextHnd=0x00000000D1FFAB1E)
               [000132] ---XG------- this in rcx  +--*  FIELD     ref    _loader
               [000040] ------------              |  \--*  LCL_VAR   ref    V05 tmp3         
               [000135] ------------ arg1         \--*  PUTARG_TYPE bool  
               [000133] ------------                 \--*  CNS_INT   int    1

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000042] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000042] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000042] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000042] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000042] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000042] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000042] -----------

Arguments setup:

Inlinee method body:
STMT00035 (IL 0x033...  ???)
               [000134] I-CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.set_SkipUnrecognizedProjects (exactContextHnd=0x00000000D1FFAB1E)
               [000132] ---XG------- this in rcx  +--*  FIELD     ref    _loader
               [000040] ------------              |  \--*  LCL_VAR   ref    V05 tmp3         
               [000135] ------------ arg1         \--*  PUTARG_TYPE bool  
               [000133] ------------                 \--*  CNS_INT   int    1

fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:set_SkipUnrecognizedProjects(bool):this (13 IL bytes) (depth 1) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace' calling 'Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:set_SkipUnrecognizedProjects(bool):this'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Expanding INLINE_CANDIDATE in statement STMT00035 in BB11:
STMT00035 (IL 0x033...  ???)
               [000134] I-CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.set_SkipUnrecognizedProjects (exactContextHnd=0x00000000D1FFAB1E)
               [000132] ---XG------- this in rcx  +--*  FIELD     ref    _loader
               [000040] ------------              |  \--*  LCL_VAR   ref    V05 tmp3         
               [000135] ------------ arg1         \--*  PUTARG_TYPE bool  
               [000133] ------------                 \--*  CNS_INT   int    1
thisArg: has global refs has side effects
               [000132] ---XG-------              *  FIELD     ref    _loader
               [000040] ------------              \--*  LCL_VAR   ref    V05 tmp3         


Argument #1: is a constant
               [000133] ------------              *  CNS_INT   int    1


Folding operator with constant nodes into a constant:
               [000137] ------------              *  CAST      int <- bool <- int
               [000133] ------------              \--*  CNS_INT   int    1
Bashed to int constant:
               [000137] ------------              *  CNS_INT   int    1
INLINER: inlineInfo.tokenLookupContextHandle for Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:set_SkipUnrecognizedProjects(bool):this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:set_SkipUnrecognizedProjects(bool):this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  03                ldarg.1     
IL_0002  7d 67 00 00 04    stfld        0x4000067
IL_0007  2a                ret         

INLINER impTokenLookupContextHandle for Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:set_SkipUnrecognizedProjects(bool):this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:set_SkipUnrecognizedProjects(bool):this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB16 [0015] created.
BB16 [000..008)
Basic block list for 'Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:set_SkipUnrecognizedProjects(bool):this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB16 [0015]  1                             1       [000..008)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000134] Starting PHASE Pre-import

*************** Inline @[000134] Finishing PHASE Pre-import

*************** Inline @[000134] Starting PHASE Importation
*************** In impImport() for Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:set_SkipUnrecognizedProjects(bool):this

impImportBlockPending for BB16

Importing BB16 (PC=000) of 'Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:set_SkipUnrecognizedProjects(bool):this'
    [ 0]   0 (0x000) ldarg.0
lvaGrabTemp returning 13 (V13 tmp11) called for Inlining Arg.
Marked V13 as a single def temp
Querying runtime about current class of field Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace._loader (declared as Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader)
Field's current class not available

lvaSetClass: setting class for V13 to (00000000D1FFAB1E) Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader 

    [ 1]   1 (0x001) ldarg.1
    [ 2]   2 (0x002) stfld 04000067

               [000141] -A-XG-------              *  ASG       bool  
               [000140] ---XG--N----              +--*  FIELD     bool   <SkipUnrecognizedProjects>k__BackingField
               [000138] ------------              |  \--*  LCL_VAR   ref    V13 tmp11        
               [000139] ------------              \--*  CNS_INT   int    1

    [ 0]   7 (0x007) ret
*************** Inline @[000134] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB16 [0015]  1                             1       [000..008)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB16 [000..008) (return), preds={} succs={}

***** BB16
               [000141] -A-XG-------              *  ASG       bool  
               [000140] ---XG--N----              +--*  FIELD     bool   <SkipUnrecognizedProjects>k__BackingField
               [000138] ------------              |  \--*  LCL_VAR   ref    V13 tmp11        
               [000139] ------------              \--*  CNS_INT   int    1

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000134] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000134] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000134] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000134] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000134] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000134] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000134] -----------

Arguments setup:
STMT00037 (IL 0x033...  ???)
               [000143] -A-XG-------              *  ASG       ref   
               [000142] D------N----              +--*  LCL_VAR   ref    V13 tmp11        
               [000132] ---XG-------              \--*  FIELD     ref    _loader
               [000040] ------------                 \--*  LCL_VAR   ref    V05 tmp3         

Inlinee method body:
STMT00036 (IL 0x033...  ???)
               [000141] -A-XG-------              *  ASG       bool  
               [000140] ---XG--N----              +--*  FIELD     bool   <SkipUnrecognizedProjects>k__BackingField
               [000138] ------------              |  \--*  LCL_VAR   ref    V13 tmp11        
               [000139] ------------              \--*  CNS_INT   int    1

fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:set_SkipUnrecognizedProjects(bool):this (8 IL bytes) (depth 2) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace' calling 'Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:set_SkipUnrecognizedProjects(bool):this'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Querying runtime about current class of field Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace._loader (declared as Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader)
Field's current class not available
Expanding INLINE_CANDIDATE in statement STMT00012 in BB11:
STMT00012 (IL 0x03A...  ???)
               [000047] I-C-G-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.AssociateFileExtensionWithLanguage (exactContextHnd=0x00000000D1FFAB1E)
               [000044] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         
               [000045] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000046] ------------ arg2         \--*  CNS_STR   ref   <string constant>
thisArg: is a local var
               [000044] ------------              *  LCL_VAR   ref    V05 tmp3         


Argument #1: is a constant
               [000045] ------------              *  CNS_STR   ref   <string constant>


Argument #2: is a constant
               [000046] ------------              *  CNS_STR   ref   <string constant>

INLINER: inlineInfo.tokenLookupContextHandle for Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:AssociateFileExtensionWithLanguage(System.String,System.String):this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:AssociateFileExtensionWithLanguage(System.String,System.String):this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  7b 69 00 00 04    ldfld        0x4000069
IL_0006  03                ldarg.1     
IL_0007  04                ldarg.2     
IL_0008  6f 43 00 00 06    callvirt     0x6000043
IL_000d  2a                ret         

INLINER impTokenLookupContextHandle for Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:AssociateFileExtensionWithLanguage(System.String,System.String):this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:AssociateFileExtensionWithLanguage(System.String,System.String):this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB17 [0016] created.
BB17 [000..00E)
Basic block list for 'Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:AssociateFileExtensionWithLanguage(System.String,System.String):this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB17 [0016]  1                             1       [000..00E)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000047] Starting PHASE Pre-import

*************** Inline @[000047] Finishing PHASE Pre-import

*************** Inline @[000047] Starting PHASE Importation
*************** In impImport() for Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:AssociateFileExtensionWithLanguage(System.String,System.String):this

impImportBlockPending for BB17

Importing BB17 (PC=000) of 'Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:AssociateFileExtensionWithLanguage(System.String,System.String):this'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) ldfld 04000069
    [ 1]   6 (0x006) ldarg.1
    [ 2]   7 (0x007) ldarg.2
    [ 3]   8 (0x008) callvirt 06000043
In Compiler::impImportCall: opcode is callvirt, kind=0, callRetType is void, structSize is 0


               [000148] I-CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage (exactContextHnd=0x00000000D1FFAB1E)
               [000145] ---XG------- this in rcx  +--*  FIELD     ref    _loader
               [000044] ------------              |  \--*  LCL_VAR   ref    V05 tmp3         
               [000146] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000147] ------------ arg2         \--*  CNS_STR   ref   <string constant>

    [ 0]  13 (0x00d) ret
*************** Inline @[000047] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB17 [0016]  1                             1       [000..00E)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB17 [000..00E) (return), preds={} succs={}

***** BB17
               [000148] I-CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage (exactContextHnd=0x00000000D1FFAB1E)
               [000145] ---XG------- this in rcx  +--*  FIELD     ref    _loader
               [000044] ------------              |  \--*  LCL_VAR   ref    V05 tmp3         
               [000146] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000147] ------------ arg2         \--*  CNS_STR   ref   <string constant>

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000047] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000047] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000047] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000047] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000047] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000047] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000047] -----------

Arguments setup:

Inlinee method body:
STMT00038 (IL 0x03A...  ???)
               [000148] I-CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage (exactContextHnd=0x00000000D1FFAB1E)
               [000145] ---XG------- this in rcx  +--*  FIELD     ref    _loader
               [000044] ------------              |  \--*  LCL_VAR   ref    V05 tmp3         
               [000146] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000147] ------------ arg2         \--*  CNS_STR   ref   <string constant>

fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:AssociateFileExtensionWithLanguage(System.String,System.String):this (14 IL bytes) (depth 1) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace' calling 'Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:AssociateFileExtensionWithLanguage(System.String,System.String):this'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Expanding INLINE_CANDIDATE in statement STMT00038 in BB11:
STMT00038 (IL 0x03A...  ???)
               [000148] I-CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage (exactContextHnd=0x00000000D1FFAB1E)
               [000145] ---XG------- this in rcx  +--*  FIELD     ref    _loader
               [000044] ------------              |  \--*  LCL_VAR   ref    V05 tmp3         
               [000146] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000147] ------------ arg2         \--*  CNS_STR   ref   <string constant>
thisArg: has global refs has side effects
               [000145] ---XG-------              *  FIELD     ref    _loader
               [000044] ------------              \--*  LCL_VAR   ref    V05 tmp3         


Argument #1: is a constant
               [000146] ------------              *  CNS_STR   ref   <string constant>


Argument #2: is a constant
               [000147] ------------              *  CNS_STR   ref   <string constant>

INLINER: inlineInfo.tokenLookupContextHandle for Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:AssociateFileExtensionWithLanguage(System.String,System.String):this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:AssociateFileExtensionWithLanguage(System.String,System.String):this :
IL to import:
IL_0000  03                ldarg.1     
IL_0001  2d 0b             brtrue.s     11 (IL_000e)
IL_0003  72 a8 0b 00 70    ldstr        0x70000BA8
IL_0008  73 43 00 00 0a    newobj       0xA000043
IL_000d  7a                throw       
IL_000e  04                ldarg.2     
IL_000f  2d 0b             brtrue.s     11 (IL_001c)
IL_0011  72 d2 0b 00 70    ldstr        0x70000BD2
IL_0016  73 43 00 00 0a    newobj       0xA000043
IL_001b  7a                throw       
IL_001c  02                ldarg.0     
IL_001d  7b 63 00 00 04    ldfld        0x4000063
IL_0022  03                ldarg.1     
IL_0023  04                ldarg.2     
IL_0024  6f f3 00 00 06    callvirt     0x60000F3
IL_0029  2a                ret         

INLINER impTokenLookupContextHandle for Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:AssociateFileExtensionWithLanguage(System.String,System.String):this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:AssociateFileExtensionWithLanguage(System.String,System.String):this
weight= 16 : state   4 [ ldarg.1 ]
weight= 25 : state  45 [ brtrue.s ]
weight= 66 : state 102 [ ldstr ]
weight=227 : state 103 [ newobj ]
weight=210 : state 108 [ throw ]
weight= 35 : state   5 [ ldarg.2 ]
weight= 25 : state  45 [ brtrue.s ]
weight= 66 : state 102 [ ldstr ]
weight=227 : state 103 [ newobj ]
weight=210 : state 108 [ throw ]
weight= 31 : state 191 [ ldarg.0 -> ldfld ]
weight= 16 : state   4 [ ldarg.1 ]
weight= 35 : state   5 [ ldarg.2 ]
weight= 83 : state  99 [ callvirt ]
weight= 19 : state  42 [ ret ]

Inline candidate looks like a wrapper method.  Multiplier increased to 1.
Inline candidate has an arg that feeds a constant test.  Multiplier increased to 2.
Inline candidate has const arg that feeds a conditional.  Multiplier increased to 5.
Inline candidate callsite is boring.  Multiplier increased to 6.3.
calleeNativeSizeEstimate=1291
callsiteNativeSizeEstimate=145
benefit multiplier=6.3
threshold=913
Native estimate for function size exceeds threshold for inlining 129.1 > 91.3 (multiplier = 6.3)


Inline expansion aborted, inline not profitable
INLINER: during 'fgInline' result 'failed this call site' reason 'unprofitable inline' for 'SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace' calling 'Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:AssociateFileExtensionWithLanguage(System.String,System.String):this'
INLINER: during 'fgInline' result 'failed this call site' reason 'unprofitable inline'
Expanding INLINE_CANDIDATE in statement STMT00013 in BB11:
STMT00013 (IL 0x04A...  ???)
               [000051] I-C-G-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.AssociateFileExtensionWithLanguage (exactContextHnd=0x00000000D1FFAB1E)
               [000048] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         
               [000049] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000050] ------------ arg2         \--*  CNS_STR   ref   <string constant>
thisArg: is a local var
               [000048] ------------              *  LCL_VAR   ref    V05 tmp3         


Argument #1: is a constant
               [000049] ------------              *  CNS_STR   ref   <string constant>


Argument #2: is a constant
               [000050] ------------              *  CNS_STR   ref   <string constant>

INLINER: inlineInfo.tokenLookupContextHandle for Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:AssociateFileExtensionWithLanguage(System.String,System.String):this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:AssociateFileExtensionWithLanguage(System.String,System.String):this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  7b 69 00 00 04    ldfld        0x4000069
IL_0006  03                ldarg.1     
IL_0007  04                ldarg.2     
IL_0008  6f 43 00 00 06    callvirt     0x6000043
IL_000d  2a                ret         

INLINER impTokenLookupContextHandle for Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:AssociateFileExtensionWithLanguage(System.String,System.String):this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:AssociateFileExtensionWithLanguage(System.String,System.String):this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB18 [0017] created.
BB18 [000..00E)
Basic block list for 'Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:AssociateFileExtensionWithLanguage(System.String,System.String):this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB18 [0017]  1                             1       [000..00E)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000051] Starting PHASE Pre-import

*************** Inline @[000051] Finishing PHASE Pre-import

*************** Inline @[000051] Starting PHASE Importation
*************** In impImport() for Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:AssociateFileExtensionWithLanguage(System.String,System.String):this

impImportBlockPending for BB18

Importing BB18 (PC=000) of 'Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:AssociateFileExtensionWithLanguage(System.String,System.String):this'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) ldfld 04000069
    [ 1]   6 (0x006) ldarg.1
    [ 2]   7 (0x007) ldarg.2
    [ 3]   8 (0x008) callvirt 06000043
In Compiler::impImportCall: opcode is callvirt, kind=0, callRetType is void, structSize is 0


               [000153] I-CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage (exactContextHnd=0x00000000D1FFAB1E)
               [000150] ---XG------- this in rcx  +--*  FIELD     ref    _loader
               [000048] ------------              |  \--*  LCL_VAR   ref    V05 tmp3         
               [000151] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000152] ------------ arg2         \--*  CNS_STR   ref   <string constant>

    [ 0]  13 (0x00d) ret
*************** Inline @[000051] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB18 [0017]  1                             1       [000..00E)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB18 [000..00E) (return), preds={} succs={}

***** BB18
               [000153] I-CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage (exactContextHnd=0x00000000D1FFAB1E)
               [000150] ---XG------- this in rcx  +--*  FIELD     ref    _loader
               [000048] ------------              |  \--*  LCL_VAR   ref    V05 tmp3         
               [000151] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000152] ------------ arg2         \--*  CNS_STR   ref   <string constant>

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000051] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000051] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000051] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000051] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000051] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000051] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000051] -----------

Arguments setup:

Inlinee method body:
STMT00039 (IL 0x04A...  ???)
               [000153] I-CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage (exactContextHnd=0x00000000D1FFAB1E)
               [000150] ---XG------- this in rcx  +--*  FIELD     ref    _loader
               [000048] ------------              |  \--*  LCL_VAR   ref    V05 tmp3         
               [000151] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000152] ------------ arg2         \--*  CNS_STR   ref   <string constant>

fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:AssociateFileExtensionWithLanguage(System.String,System.String):this (14 IL bytes) (depth 1) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace' calling 'Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:AssociateFileExtensionWithLanguage(System.String,System.String):this'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Expanding INLINE_CANDIDATE in statement STMT00039 in BB11:
STMT00039 (IL 0x04A...  ???)
               [000153] I-CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage (exactContextHnd=0x00000000D1FFAB1E)
               [000150] ---XG------- this in rcx  +--*  FIELD     ref    _loader
               [000048] ------------              |  \--*  LCL_VAR   ref    V05 tmp3         
               [000151] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000152] ------------ arg2         \--*  CNS_STR   ref   <string constant>
thisArg: has global refs has side effects
               [000150] ---XG-------              *  FIELD     ref    _loader
               [000048] ------------              \--*  LCL_VAR   ref    V05 tmp3         


Argument #1: is a constant
               [000151] ------------              *  CNS_STR   ref   <string constant>


Argument #2: is a constant
               [000152] ------------              *  CNS_STR   ref   <string constant>

INLINER: inlineInfo.tokenLookupContextHandle for Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:AssociateFileExtensionWithLanguage(System.String,System.String):this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:AssociateFileExtensionWithLanguage(System.String,System.String):this :
IL to import:
IL_0000  03                ldarg.1     
IL_0001  2d 0b             brtrue.s     11 (IL_000e)
IL_0003  72 a8 0b 00 70    ldstr        0x70000BA8
IL_0008  73 43 00 00 0a    newobj       0xA000043
IL_000d  7a                throw       
IL_000e  04                ldarg.2     
IL_000f  2d 0b             brtrue.s     11 (IL_001c)
IL_0011  72 d2 0b 00 70    ldstr        0x70000BD2
IL_0016  73 43 00 00 0a    newobj       0xA000043
IL_001b  7a                throw       
IL_001c  02                ldarg.0     
IL_001d  7b 63 00 00 04    ldfld        0x4000063
IL_0022  03                ldarg.1     
IL_0023  04                ldarg.2     
IL_0024  6f f3 00 00 06    callvirt     0x60000F3
IL_0029  2a                ret         

INLINER impTokenLookupContextHandle for Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:AssociateFileExtensionWithLanguage(System.String,System.String):this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:AssociateFileExtensionWithLanguage(System.String,System.String):this
weight= 16 : state   4 [ ldarg.1 ]
weight= 25 : state  45 [ brtrue.s ]
weight= 66 : state 102 [ ldstr ]
weight=227 : state 103 [ newobj ]
weight=210 : state 108 [ throw ]
weight= 35 : state   5 [ ldarg.2 ]
weight= 25 : state  45 [ brtrue.s ]
weight= 66 : state 102 [ ldstr ]
weight=227 : state 103 [ newobj ]
weight=210 : state 108 [ throw ]
weight= 31 : state 191 [ ldarg.0 -> ldfld ]
weight= 16 : state   4 [ ldarg.1 ]
weight= 35 : state   5 [ ldarg.2 ]
weight= 83 : state  99 [ callvirt ]
weight= 19 : state  42 [ ret ]

Inline candidate looks like a wrapper method.  Multiplier increased to 1.
Inline candidate has an arg that feeds a constant test.  Multiplier increased to 2.
Inline candidate has const arg that feeds a conditional.  Multiplier increased to 5.
Inline candidate callsite is boring.  Multiplier increased to 6.3.
calleeNativeSizeEstimate=1291
callsiteNativeSizeEstimate=145
benefit multiplier=6.3
threshold=913
Native estimate for function size exceeds threshold for inlining 129.1 > 91.3 (multiplier = 6.3)


Inline expansion aborted, inline not profitable
INLINER: during 'fgInline' result 'failed this call site' reason 'unprofitable inline' for 'SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace' calling 'Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:AssociateFileExtensionWithLanguage(System.String,System.String):this'
INLINER: during 'fgInline' result 'failed this call site' reason 'unprofitable inline'
Expanding INLINE_CANDIDATE in statement STMT00015 in BB11:
STMT00015 (IL   ???...  ???)
               [000060] I-C-G-------              *  CALL      void   System.MulticastDelegate.CtorClosed (exactContextHnd=0x00000000D1FFAB1E)
               [000059] ------------ this in rcx  +--*  LCL_VAR   ref    V06 tmp4         
               [000053] ------------ arg1         +--*  LCL_VAR   ref    V01 loc0         
               [000054] ------------ arg2         \--*  FTN_ADDR  long   <>c__DisplayClass1_0.<GetWorkspace>b__0

thisArg: is a local var
               [000059] ------------              *  LCL_VAR   ref    V06 tmp4         


Argument #1: is a local var
               [000053] ------------              *  LCL_VAR   ref    V01 loc0         


Argument #2:
               [000054] ------------              *  FTN_ADDR  long   <>c__DisplayClass1_0.<GetWorkspace>b__0


INLINER: inlineInfo.tokenLookupContextHandle for System.MulticastDelegate:CtorClosed(System.Object,long):this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.MulticastDelegate:CtorClosed(System.Object,long):this :
IL to import:
IL_0000  03                ldarg.1     
IL_0001  2d 05             brtrue.s     5 (IL_0008)
IL_0003  28 9c 04 00 06    call         0x600049C
IL_0008  02                ldarg.0     
IL_0009  03                ldarg.1     
IL_000a  7d 0d 01 00 04    stfld        0x400010D
IL_000f  02                ldarg.0     
IL_0010  04                ldarg.2     
IL_0011  7d 0f 01 00 04    stfld        0x400010F
IL_0016  2a                ret         

INLINER impTokenLookupContextHandle for System.MulticastDelegate:CtorClosed(System.Object,long):this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.MulticastDelegate:CtorClosed(System.Object,long):this
weight= 16 : state   4 [ ldarg.1 ]
weight= 25 : state  45 [ brtrue.s ]
weight= 79 : state  40 [ call ]
weight= 69 : state 226 [ ldarg.0 -> ldarg.1 -> stfld ]
weight= 98 : state 228 [ ldarg.0 -> ldarg.2 -> stfld ]
weight= 19 : state  42 [ ret ]

Inline candidate has an arg that feeds a constant test.  Multiplier increased to 1.
Inline candidate is mostly loads and stores.  Multiplier increased to 4.
Inline candidate callsite is boring.  Multiplier increased to 5.3.
calleeNativeSizeEstimate=306
callsiteNativeSizeEstimate=145
benefit multiplier=5.3
threshold=768
Native estimate for function size is within threshold for inlining 30.6 <= 76.8 (multiplier = 5.3)
Jump targets:
  IL_0008
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB19 [0018] created.
BB19 [000..003)
New Basic Block BB20 [0019] created.
BB20 [003..008)
New Basic Block BB21 [0020] created.
BB21 [008..017)
Basic block list for 'System.MulticastDelegate:CtorClosed(System.Object,long):this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB19 [0018]  1                             1       [000..003)-> BB21 ( cond )                     
BB20 [0019]  1                             1       [003..008)                                     
BB21 [0020]  2                             1       [008..017)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000060] Starting PHASE Pre-import

*************** Inline @[000060] Finishing PHASE Pre-import

*************** Inline @[000060] Starting PHASE Importation
*************** In impImport() for System.MulticastDelegate:CtorClosed(System.Object,long):this

impImportBlockPending for BB19

Importing BB19 (PC=000) of 'System.MulticastDelegate:CtorClosed(System.Object,long):this'
    [ 0]   0 (0x000) ldarg.1
    [ 1]   1 (0x001) brtrue.s

               [000157] ------------              *  JTRUE     void  
               [000156] ------------              \--*  NE        int   
               [000053] ------------                 +--*  LCL_VAR   ref    V01 loc0         
               [000155] ------------                 \--*  CNS_INT   ref    null

impImportBlockPending for BB20

impImportBlockPending for BB21

Importing BB21 (PC=008) of 'System.MulticastDelegate:CtorClosed(System.Object,long):this'
    [ 0]   8 (0x008) ldarg.0
    [ 1]   9 (0x009) ldarg.1
    [ 2]  10 (0x00a) stfld 0400010D

               [000160] -A-XG-------              *  ASG       ref   
               [000159] ---XG--N----              +--*  FIELD     ref    _target
               [000059] ------------              |  \--*  LCL_VAR   ref    V06 tmp4         
               [000158] ------------              \--*  LCL_VAR   ref    V01 loc0         

    [ 0]  15 (0x00f) ldarg.0
    [ 1]  16 (0x010) ldarg.2
lvaGrabTemp returning 14 (V14 tmp12) called for Inlining Arg.

    [ 2]  17 (0x011) stfld 0400010F

               [000164] -A-XG-------              *  ASG       long  
               [000163] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000161] ------------              |  \--*  LCL_VAR   ref    V06 tmp4         
               [000162] ------------              \--*  LCL_VAR   long   V14 tmp12        

    [ 0]  22 (0x016) ret
Importing BB20 (PC=003) of 'System.MulticastDelegate:CtorClosed(System.Object,long):this'
    [ 0]   3 (0x003) call 0600049C
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0


               [000165] I-C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance (exactContextHnd=0x00000000D1FFAB1E)

impImportBlockPending for BB21

*************** Inline @[000060] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB19 [0018]  1                             1       [000..003)-> BB21 ( cond )                     i 
BB20 [0019]  1                             1       [003..008)                                     i 
BB21 [0020]  2                             1       [008..017)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB19 [000..003) -> BB21 (cond), preds={} succs={BB20,BB21}

***** BB19
               [000157] ------------              *  JTRUE     void  
               [000156] ------------              \--*  NE        int   
               [000053] ------------                 +--*  LCL_VAR   ref    V01 loc0         
               [000155] ------------                 \--*  CNS_INT   ref    null

------------ BB20 [003..008), preds={} succs={BB21}

***** BB20
               [000165] I-C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance (exactContextHnd=0x00000000D1FFAB1E)

------------ BB21 [008..017) (return), preds={} succs={}

***** BB21
               [000160] -A-XG-------              *  ASG       ref   
               [000159] ---XG--N----              +--*  FIELD     ref    _target
               [000059] ------------              |  \--*  LCL_VAR   ref    V06 tmp4         
               [000158] ------------              \--*  LCL_VAR   ref    V01 loc0         

***** BB21
               [000164] -A-XG-------              *  ASG       long  
               [000163] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000161] ------------              |  \--*  LCL_VAR   ref    V06 tmp4         
               [000162] ------------              \--*  LCL_VAR   long   V14 tmp12        

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000060] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000060] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000060] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000060] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000060] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000060] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000060] -----------

Arguments setup:

Inlinee method body:New Basic Block BB22 [0021] created.

Convert bbJumpKind of BB21 to BBJ_NONE
fgInlineAppendStatements: no gc ref inline locals.

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB19 [0018]  1                             1       [000..000)-> BB21 ( cond )                     i internal 
BB20 [0019]  1                             0.50    [000..000)                                     i internal 
BB21 [0020]  2                             1       [000..000)                                     i internal 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB19 [000..000) -> BB21 (cond), preds={} succs={BB20,BB21}

***** BB19
STMT00040 (IL   ???...  ???)
               [000157] ------------              *  JTRUE     void  
               [000156] ------------              \--*  NE        int   
               [000053] ------------                 +--*  LCL_VAR   ref    V01 loc0         
               [000155] ------------                 \--*  CNS_INT   ref    null

------------ BB20 [000..000), preds={} succs={BB21}

***** BB20
STMT00043 (IL   ???...  ???)
               [000165] I-C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance (exactContextHnd=0x00000000D1FFAB1E)

------------ BB21 [000..000), preds={} succs={BB22}

***** BB21
STMT00041 (IL   ???...  ???)
               [000160] -A-XG-------              *  ASG       ref   
               [000159] ---XG--N----              +--*  FIELD     ref    _target
               [000059] ------------              |  \--*  LCL_VAR   ref    V06 tmp4         
               [000158] ------------              \--*  LCL_VAR   ref    V01 loc0         

***** BB21
STMT00042 (IL   ???...  ???)
               [000164] -A-XG-------              *  ASG       long  
               [000163] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000161] ------------              |  \--*  LCL_VAR   ref    V06 tmp4         
               [000054] ------------              \--*  FTN_ADDR  long   <>c__DisplayClass1_0.<GetWorkspace>b__0


-------------------------------------------------------------------------------------------------------------------
Successfully inlined System.MulticastDelegate:CtorClosed(System.Object,long):this (23 IL bytes) (depth 1) [profitable inline]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'profitable inline' for 'SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace' calling 'System.MulticastDelegate:CtorClosed(System.Object,long):this'
INLINER: during 'fgInline' result 'success' reason 'profitable inline'
Expanding INLINE_CANDIDATE in statement STMT00043 in BB20:
STMT00043 (IL   ???...  ???)
               [000165] I-C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance (exactContextHnd=0x00000000D1FFAB1E)
INLINER: inlineInfo.tokenLookupContextHandle for System.MulticastDelegate:ThrowNullThisInDelegateToInstance() set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.MulticastDelegate:ThrowNullThisInDelegateToInstance() :
IL to import:
IL_0000  28 04 14 00 06    call         0x6001404
IL_0005  73 4a 0a 00 06    newobj       0x6000A4A
IL_000a  7a                throw       

INLINER impTokenLookupContextHandle for System.MulticastDelegate:ThrowNullThisInDelegateToInstance() is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.MulticastDelegate:ThrowNullThisInDelegateToInstance()
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB23 [0022] created.
BB23 [000..00B)
Basic block list for 'System.MulticastDelegate:ThrowNullThisInDelegateToInstance()'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB23 [0022]  1                             0       [000..00B)        (throw )                     rare 
-----------------------------------------------------------------------------------------------------------------------------------------
INLINER: during 'fgInline' result 'failed this callee' reason 'does not return' for 'SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace' calling 'System.MulticastDelegate:ThrowNullThisInDelegateToInstance()'
INLINER: during 'fgInline' result 'failed this callee' reason 'does not return'
Expanding INLINE_CANDIDATE in statement STMT00016 in BB22:
STMT00016 (IL 0x067...  ???)
               [000062] I-C-G-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed (exactContextHnd=0x00000000D1FFAB1E)
               [000052] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         
               [000061] ------------ arg1         \--*  LCL_VAR   ref    V06 tmp4         
thisArg: is a local var
               [000052] ------------              *  LCL_VAR   ref    V05 tmp3         


Argument #1: is a local var
               [000061] ------------              *  LCL_VAR   ref    V06 tmp4         

INLINER: inlineInfo.tokenLookupContextHandle for Microsoft.CodeAnalysis.Workspace:add_WorkspaceFailed(System.EventHandler`1[[Microsoft.CodeAnalysis.WorkspaceDiagnosticEventArgs, Microsoft.CodeAnalysis.Workspaces, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]]):this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method Microsoft.CodeAnalysis.Workspace:add_WorkspaceFailed(System.EventHandler`1[[Microsoft.CodeAnalysis.WorkspaceDiagnosticEventArgs, Microsoft.CodeAnalysis.Workspaces, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]]):this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  7b fd 01 00 04    ldfld        0x40001FD
IL_0006  72 dd 1b 00 70    ldstr        0x70001BDD
IL_000b  03                ldarg.1     
IL_000c  6f ca 01 00 2b    callvirt     0x2B0001CA
IL_0011  2a                ret         

INLINER impTokenLookupContextHandle for Microsoft.CodeAnalysis.Workspace:add_WorkspaceFailed(System.EventHandler`1[[Microsoft.CodeAnalysis.WorkspaceDiagnosticEventArgs, Microsoft.CodeAnalysis.Workspaces, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]]):this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for Microsoft.CodeAnalysis.Workspace:add_WorkspaceFailed(System.EventHandler`1[[Microsoft.CodeAnalysis.WorkspaceDiagnosticEventArgs, Microsoft.CodeAnalysis.Workspaces, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]]):this
weight= 31 : state 191 [ ldarg.0 -> ldfld ]
weight= 66 : state 102 [ ldstr ]
weight= 16 : state   4 [ ldarg.1 ]
weight= 83 : state  99 [ callvirt ]
weight= 19 : state  42 [ ret ]

Inline candidate looks like a wrapper method.  Multiplier increased to 1.
Inline candidate is mostly loads and stores.  Multiplier increased to 4.
Inline candidate callsite is boring.  Multiplier increased to 5.3.
calleeNativeSizeEstimate=215
callsiteNativeSizeEstimate=115
benefit multiplier=5.3
threshold=609
Native estimate for function size is within threshold for inlining 21.5 <= 60.9 (multiplier = 5.3)
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB24 [0022] created.
BB24 [000..012)
Basic block list for 'Microsoft.CodeAnalysis.Workspace:add_WorkspaceFailed(System.EventHandler`1[[Microsoft.CodeAnalysis.WorkspaceDiagnosticEventArgs, Microsoft.CodeAnalysis.Workspaces, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]]):this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB24 [0022]  1                             1       [000..012)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000062] Starting PHASE Pre-import

*************** Inline @[000062] Finishing PHASE Pre-import

*************** Inline @[000062] Starting PHASE Importation
*************** In impImport() for Microsoft.CodeAnalysis.Workspace:add_WorkspaceFailed(System.EventHandler`1[[Microsoft.CodeAnalysis.WorkspaceDiagnosticEventArgs, Microsoft.CodeAnalysis.Workspaces, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]]):this

impImportBlockPending for BB24

Importing BB24 (PC=000) of 'Microsoft.CodeAnalysis.Workspace:add_WorkspaceFailed(System.EventHandler`1[[Microsoft.CodeAnalysis.WorkspaceDiagnosticEventArgs, Microsoft.CodeAnalysis.Workspaces, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]]):this'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) ldfld 040001FD
    [ 1]   6 (0x006) ldstr
** Note: inlinee IL was partially imported -- imported 0 of 18 bytes of method IL

*************** Inline @[000062] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB24 [0022]  1                             1       [000..012)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB24 [000..012) (return), preds={} succs={}

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000062] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000062] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000062] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000062] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000062] Starting PHASE Post-import

*************** Inline @[000062] Finishing PHASE Post-import
INLINER: during 'fgInline' result 'failed this call site' reason 'has ldstr VM restriction' for 'SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace' calling 'Microsoft.CodeAnalysis.Workspace:add_WorkspaceFailed(System.EventHandler`1[[Microsoft.CodeAnalysis.WorkspaceDiagnosticEventArgs, Microsoft.CodeAnalysis.Workspaces, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]]):this'
INLINER: during 'fgInline' result 'failed this call site' reason 'has ldstr VM restriction'
**************** Inline Tree
Inlines into 06000037 [via DefaultPolicy] SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace
  [1 IL=0000 TR=000005 06000081] [below ALWAYS_INLINE size] <>c__DisplayClass1_0:.ctor():this
    [2 IL=0001 TR=000064 060004A7] [below ALWAYS_INLINE size] System.Object:.ctor():this
  [3 IL=0013 TR=000013 06001805] [below ALWAYS_INLINE size] System.StringComparer:get_Ordinal():System.StringComparer
  [4 IL=0018 TR=000020 060061EB] [below ALWAYS_INLINE size] System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:.ctor(System.Collections.Generic.IEqualityComparer`1[__Canon]):this
    [0 IL=0003 TR=000071 060061EC] [FAILED: noinline per IL/cached result] System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:.ctor(int,System.Collections.Generic.IEqualityComparer`1[__Canon]):this
  [5 IL=0034 TR=000030 060061FD] [profitable inline] System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:Add(System.__Canon,System.__Canon):this
    [0 IL=0004 TR=000078 0600620A] [FAILED: noinline per IL/cached result] System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:TryInsert(System.__Canon,System.__Canon,ubyte):bool:this
    [6 IL=0011 TR=000083 060059A6] [profitable inline] System.Diagnostics.Debug:Assert(bool)
      [7 IL=0011 TR=000095 060059A8] [below ALWAYS_INLINE size] System.Diagnostics.Debug:Assert(bool,System.String,System.String)
        [0 IL=0005 TR=000104 060059AB] [FAILED: noinline per IL/cached result] System.Diagnostics.Debug:Fail(System.String,System.String)
  [8 IL=0039 TR=000031 0600004A] [below ALWAYS_INLINE size] Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:Create(System.Collections.Generic.IDictionary`2[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace
    [0 IL=0001 TR=000110 0600013D] [FAILED: unprofitable inline] Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices:get_DefaultServices():Microsoft.CodeAnalysis.Host.Mef.MefHostServices
    [0 IL=0006 TR=000112 0600004C] [FAILED: unprofitable inline] Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:Create(System.Collections.Generic.IDictionary`2[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],Microsoft.CodeAnalysis.Host.HostServices):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace
  [9 IL=0046 TR=000038 06000051] [below ALWAYS_INLINE size] Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:set_LoadMetadataForReferencedProjects(bool):this
    [10 IL=0007 TR=000120 06000040] [below ALWAYS_INLINE size] Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:set_LoadMetadataForReferencedProjects(bool):this
  [11 IL=0053 TR=000042 06000053] [below ALWAYS_INLINE size] Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:set_SkipUnrecognizedProjects(bool):this
    [12 IL=0007 TR=000134 06000042] [below ALWAYS_INLINE size] Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:set_SkipUnrecognizedProjects(bool):this
  [13 IL=0069 TR=000047 06000054] [below ALWAYS_INLINE size] Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:AssociateFileExtensionWithLanguage(System.String,System.String):this
    [0 IL=0008 TR=000148 06000043] [FAILED: unprofitable inline] Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:AssociateFileExtensionWithLanguage(System.String,System.String):this
  [14 IL=0085 TR=000051 06000054] [below ALWAYS_INLINE size] Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:AssociateFileExtensionWithLanguage(System.String,System.String):this
    [0 IL=0008 TR=000153 06000043] [FAILED: unprofitable inline] Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:AssociateFileExtensionWithLanguage(System.String,System.String):this
  [15 IL=0098 TR=000060 0600049D] [profitable inline] System.MulticastDelegate:CtorClosed(System.Object,long):this
    [0 IL=0003 TR=000165 0600049C] [FAILED: does not return] System.MulticastDelegate:ThrowNullThisInDelegateToInstance()
  [0 IL=0103 TR=000062 060008CB] [FAILED: has ldstr VM restriction] Microsoft.CodeAnalysis.Workspace:add_WorkspaceFailed(System.EventHandler`1[[Microsoft.CodeAnalysis.WorkspaceDiagnosticEventArgs, Microsoft.CodeAnalysis.Workspaces, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]]):this
Budget: initialTime=387, finalTime=507, initialBudget=3870, currentBudget=3870
Budget: initialSize=2616, finalSize=3265

*************** Finishing PHASE Morph - Inlining
Trees after Morph - Inlining

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)                                     i newobj nullcheck 
BB08 [0007]  1                             1       [017..018)-> BB10 ( cond )                     i 
BB09 [0008]  1                             0.50    [017..018)                                     i 
BB10 [0009]  2                             1       [017..018)                                     i 
BB11 [0010]  1                             1       [???..???)                                     i internal newobj nullcheck 
BB19 [0018]  1                             1       [000..000)-> BB21 ( cond )                     i internal 
BB20 [0019]  1                             0.50    [000..000)                                     i internal 
BB21 [0020]  2                             1       [000..000)                                     i internal 
BB22 [0021]  1                             1       [???..???)        (return)                     internal newobj nullcheck 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06D), preds={} succs={BB08}

***** BB01
STMT00000 (IL 0x000...0x005)
               [000003] -A----------              *  ASG       ref   
               [000002] D------N----              +--*  LCL_VAR   ref    V03 tmp1         
               [000001] ------------              \--*  ALLOCOBJ  ref   
               [000000] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB01
STMT00002 (IL 0x005...  ???)
               [000008] -A----------              *  ASG       ref   
               [000007] D------N----              +--*  LCL_VAR   ref    V01 loc0         
               [000006] ------------              \--*  LCL_VAR   ref    V03 tmp1         

***** BB01
STMT00003 (IL 0x006...0x008)
               [000012] -A-XG-------              *  ASG       ref   
               [000011] ---XG--N----              +--*  FIELD     ref    projectPath
               [000009] ------------              |  \--*  LCL_VAR   ref    V01 loc0         
               [000010] ------------              \--*  LCL_VAR   ref    V00 arg0         

***** BB01
STMT00005 (IL   ???...  ???)
               [000018] -A----------              *  ASG       ref   
               [000017] D------N----              +--*  LCL_VAR   ref    V04 tmp2         
               [000016] ------------              \--*  ALLOCOBJ  ref   
               [000015] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00020 (IL   ???...  ???)
               [000073] -A--G-------              *  ASG       ref   
               [000072] D------N----              +--*  LCL_VAR   ref    V07 tmp5         
               [000067] ----G-------              \--*  FIELD     ref    Instance

***** BB01
STMT00019 (IL   ???...  ???)
               [000071] --C-G-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor
               [000019] ------------ this in rcx  +--*  LCL_VAR   ref    V04 tmp2         
               [000069] ------------ arg1         +--*  CNS_INT   int    0
               [000070] ------------ arg2         \--*  LCL_VAR   ref    V07 tmp5         

***** BB01
STMT00023 (IL 0x017...  ???)
               [000088] -ACXG-------              *  ASG       ref   
               [000087] D------N----              +--*  LCL_VAR   ref    V08 tmp6         
               [000029] --CXG-------              \--*  COMMA     ref   
               [000028] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000026] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc86100028
               [000027] ------------ arg1            |  \--*  CNS_INT   int    215
               [000024] ----G-------                 \--*  FIELD     ref    FalseString

***** BB01
STMT00024 (IL 0x017...  ???)
               [000086] ---X--------              *  NULLCHECK byte  
               [000085] ------------              \--*  LCL_VAR   ref    V04 tmp2         

***** BB01
STMT00021 (IL 0x017...  ???)
               [000081] -AC-G-------              *  ASG       bool  
               [000080] D------N----              +--*  LCL_VAR   bool   V09 tmp7         
               [000078] --C-G-------              \--*  CALL      int    System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].TryInsert
               [000022] ------------ this in rcx     +--*  LCL_VAR   ref    V04 tmp2         
               [000075] ------------ arg1            +--*  CNS_STR   ref   <string constant>
               [000076] ------------ arg2            +--*  LCL_VAR   ref    V08 tmp6         
               [000079] ------------ arg3            \--*  PUTARG_TYPE ubyte 
               [000077] ------------                    \--*  CNS_INT   int    2

***** BB01
STMT00028 (IL 0x017...  ???)
               [000106] -A--G-------              *  ASG       ref   
               [000105] D------N----              +--*  LCL_VAR   ref    V10 tmp8         
               [000092] #---G-------              \--*  IND       ref   
               [000091] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL]

***** BB01
STMT00029 (IL 0x017...  ???)
               [000108] -A--G-------              *  ASG       ref   
               [000107] D------N----              +--*  LCL_VAR   ref    V11 tmp9         
               [000094] #---G-------              \--*  IND       ref   
               [000093] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL]

------------ BB08 [017..018) -> BB10 (cond), preds={} succs={BB09,BB10}

***** BB08
STMT00026 (IL 0x017...  ???)
               [000101] ------------              *  JTRUE     void  
               [000100] ------------              \--*  NE        int   
               [000098] ------------                 +--*  LCL_VAR   int    V09 tmp7         
               [000099] ------------                 \--*  CNS_INT   int    0

------------ BB09 [017..018), preds={} succs={BB10}

***** BB09
STMT00027 (IL 0x017...  ???)
               [000104] --C-G-------              *  CALL      void   System.Diagnostics.Debug.Fail
               [000102] ------------ arg0         +--*  LCL_VAR   ref    V10 tmp8         
               [000103] ------------ arg1         \--*  LCL_VAR   ref    V11 tmp9         

------------ BB10 [017..018), preds={} succs={BB11}

------------ BB11 [???..???), preds={} succs={BB19}

***** BB11
STMT00009 (IL   ???...  ???)
               [000034] -AC---------              *  ASG       ref   
               [000033] D------N----              +--*  LCL_VAR   ref    V05 tmp3         
               [000112] --C-G-------              \--*  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create
               [000021] ------------ arg0            +--*  LCL_VAR   ref    V04 tmp2         
               [000110] --C-G------- arg1            \--*  CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices

***** BB11
STMT00034 (IL   ???...  ???)
               [000129] -A-XG-------              *  ASG       ref   
               [000128] D------N----              +--*  LCL_VAR   ref    V12 tmp10        
               [000118] ---XG-------              \--*  FIELD     ref    _loader
               [000036] ------------                 \--*  LCL_VAR   ref    V05 tmp3         

***** BB11
STMT00033 (IL   ???...  ???)
               [000127] -A-XG-------              *  ASG       bool  
               [000126] ---XG--N----              +--*  FIELD     bool   <LoadMetadataForReferencedProjects>k__BackingField
               [000124] ------------              |  \--*  LCL_VAR   ref    V12 tmp10        
               [000125] ------------              \--*  CNS_INT   int    1

***** BB11
STMT00037 (IL 0x033...  ???)
               [000143] -A-XG-------              *  ASG       ref   
               [000142] D------N----              +--*  LCL_VAR   ref    V13 tmp11        
               [000132] ---XG-------              \--*  FIELD     ref    _loader
               [000040] ------------                 \--*  LCL_VAR   ref    V05 tmp3         

***** BB11
STMT00036 (IL 0x033...  ???)
               [000141] -A-XG-------              *  ASG       bool  
               [000140] ---XG--N----              +--*  FIELD     bool   <SkipUnrecognizedProjects>k__BackingField
               [000138] ------------              |  \--*  LCL_VAR   ref    V13 tmp11        
               [000139] ------------              \--*  CNS_INT   int    1

***** BB11
STMT00038 (IL 0x03A...  ???)
               [000148] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage
               [000145] ---XG------- this in rcx  +--*  FIELD     ref    _loader
               [000044] ------------              |  \--*  LCL_VAR   ref    V05 tmp3         
               [000146] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000147] ------------ arg2         \--*  CNS_STR   ref   <string constant>

***** BB11
STMT00039 (IL 0x04A...  ???)
               [000153] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage
               [000150] ---XG------- this in rcx  +--*  FIELD     ref    _loader
               [000048] ------------              |  \--*  LCL_VAR   ref    V05 tmp3         
               [000151] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000152] ------------ arg2         \--*  CNS_STR   ref   <string constant>

***** BB11
STMT00014 (IL 0x05A...  ???)
               [000058] -A----------              *  ASG       ref   
               [000057] D------N----              +--*  LCL_VAR   ref    V06 tmp4         
               [000056] ------------              \--*  ALLOCOBJ  ref   
               [000055] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token

------------ BB19 [000..000) -> BB21 (cond), preds={} succs={BB20,BB21}

***** BB19
STMT00040 (IL   ???...  ???)
               [000157] ------------              *  JTRUE     void  
               [000156] ------------              \--*  NE        int   
               [000053] ------------                 +--*  LCL_VAR   ref    V01 loc0         
               [000155] ------------                 \--*  CNS_INT   ref    null

------------ BB20 [000..000), preds={} succs={BB21}

***** BB20
STMT00043 (IL   ???...  ???)
               [000165] --C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

------------ BB21 [000..000), preds={} succs={BB22}

***** BB21
STMT00041 (IL   ???...  ???)
               [000160] -A-XG-------              *  ASG       ref   
               [000159] ---XG--N----              +--*  FIELD     ref    _target
               [000059] ------------              |  \--*  LCL_VAR   ref    V06 tmp4         
               [000158] ------------              \--*  LCL_VAR   ref    V01 loc0         

***** BB21
STMT00042 (IL   ???...  ???)
               [000164] -A-XG-------              *  ASG       long  
               [000163] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000161] ------------              |  \--*  LCL_VAR   ref    V06 tmp4         
               [000054] ------------              \--*  FTN_ADDR  long   <>c__DisplayClass1_0.<GetWorkspace>b__0


------------ BB22 [???..???) (return), preds={} succs={}

***** BB22
STMT00016 (IL 0x067...  ???)
               [000062] --C-G-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed
               [000052] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         
               [000061] ------------ arg1         \--*  LCL_VAR   ref    V06 tmp4         

***** BB22
STMT00017 (IL 0x06C...  ???)
               [000063] ------------              *  RETURN    ref   
               [000035] ------------              \--*  LCL_VAR   ref    V05 tmp3         

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Allocate Objects
disabled, punting

*************** Finishing PHASE Allocate Objects [no changes]

*************** Starting PHASE Morph - Add internal blocks

*************** After fgAddInternal()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)                                     i newobj nullcheck 
BB08 [0007]  1                             1       [017..018)-> BB10 ( cond )                     i 
BB09 [0008]  1                             0.50    [017..018)                                     i 
BB10 [0009]  2                             1       [017..018)                                     i 
BB11 [0010]  1                             1       [???..???)                                     i internal newobj nullcheck 
BB19 [0018]  1                             1       [000..000)-> BB21 ( cond )                     i internal 
BB20 [0019]  1                             0.50    [000..000)                                     i internal 
BB21 [0020]  2                             1       [000..000)                                     i internal 
BB22 [0021]  1                             1       [???..???)        (return)                     internal newobj nullcheck 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty

*************** Finishing PHASE Morph - Add internal blocks

*************** Starting PHASE Remove empty try

*************** In fgRemoveEmptyTry()
No EH in this method, nothing to remove.

*************** Finishing PHASE Remove empty try [no changes]

*************** Starting PHASE Remove empty finally
No EH in this method, nothing to remove.

*************** Finishing PHASE Remove empty finally [no changes]

*************** Starting PHASE Merge callfinally chains
No EH in this method, nothing to merge.

*************** Finishing PHASE Merge callfinally chains [no changes]

*************** Starting PHASE Clone finally
No EH in this method, no cloning.

*************** Finishing PHASE Clone finally [no changes]

*************** Starting PHASE Compute preds

Renumbering the basic blocks for fgComputePred

*************** Before renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)                                     i newobj nullcheck 
BB08 [0007]  1                             1       [017..018)-> BB10 ( cond )                     i 
BB09 [0008]  1                             0.50    [017..018)                                     i 
BB10 [0009]  2                             1       [017..018)                                     i 
BB11 [0010]  1                             1       [???..???)                                     i internal newobj nullcheck 
BB19 [0018]  1                             1       [000..000)-> BB21 ( cond )                     i internal 
BB20 [0019]  1                             0.50    [000..000)                                     i internal 
BB21 [0020]  2                             1       [000..000)                                     i internal 
BB22 [0021]  1                             1       [???..???)        (return)                     internal newobj nullcheck 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
Renumber BB08 to BB02
Renumber BB09 to BB03
Renumber BB10 to BB04
Renumber BB11 to BB05
Renumber BB19 to BB06
Renumber BB20 to BB07
Renumber BB21 to BB08
Renumber BB22 to BB09

*************** After renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)                                     i newobj nullcheck 
BB02 [0007]  1                             1       [017..018)-> BB04 ( cond )                     i 
BB03 [0008]  1                             0.50    [017..018)                                     i 
BB04 [0009]  2                             1       [017..018)                                     i 
BB05 [0010]  1                             1       [???..???)                                     i internal newobj nullcheck 
BB06 [0018]  1                             1       [000..000)-> BB08 ( cond )                     i internal 
BB07 [0019]  1                             0.50    [000..000)                                     i internal 
BB08 [0020]  2                             1       [000..000)                                     i internal 
BB09 [0021]  1                             1       [???..???)        (return)                     internal newobj nullcheck 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty

New BlockSet epoch 2, # of blocks (including unused BB00): 10, bitset array size: 1 (short)

*************** In fgComputePreds()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)                                     i newobj nullcheck 
BB02 [0007]  1                             1       [017..018)-> BB04 ( cond )                     i 
BB03 [0008]  1                             0.50    [017..018)                                     i 
BB04 [0009]  2                             1       [017..018)                                     i 
BB05 [0010]  1                             1       [???..???)                                     i internal newobj nullcheck 
BB06 [0018]  1                             1       [000..000)-> BB08 ( cond )                     i internal 
BB07 [0019]  1                             0.50    [000..000)                                     i internal 
BB08 [0020]  2                             1       [000..000)                                     i internal 
BB09 [0021]  1                             1       [???..???)        (return)                     internal newobj nullcheck 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** After fgComputePreds()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)                                     i label target newobj nullcheck 
BB02 [0007]  1       BB01                  1       [017..018)-> BB04 ( cond )                     i 
BB03 [0008]  1       BB02                  0.50    [017..018)                                     i 
BB04 [0009]  2       BB02,BB03             1       [017..018)                                     i label target 
BB05 [0010]  1       BB04                  1       [???..???)                                     i internal newobj nullcheck 
BB06 [0018]  1       BB05                  1       [000..000)-> BB08 ( cond )                     i internal 
BB07 [0019]  1       BB06                  0.50    [000..000)                                     i internal 
BB08 [0020]  2       BB06,BB07             1       [000..000)                                     i internal label target 
BB09 [0021]  1       BB08                  1       [???..???)        (return)                     internal newobj nullcheck 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** Finishing PHASE Compute preds

*************** Starting PHASE Merge throw blocks

*************** In fgTailMergeThrows
Method does not have multiple noreturn calls.

*************** Finishing PHASE Merge throw blocks [no changes]

*************** Starting PHASE Update flow graph early pass

*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)                                     i label target newobj nullcheck 
BB02 [0007]  1       BB01                  1       [017..018)-> BB04 ( cond )                     i 
BB03 [0008]  1       BB02                  0.50    [017..018)                                     i 
BB04 [0009]  2       BB02,BB03             1       [017..018)                                     i label target 
BB05 [0010]  1       BB04                  1       [???..???)                                     i internal newobj nullcheck 
BB06 [0018]  1       BB05                  1       [000..000)-> BB08 ( cond )                     i internal 
BB07 [0019]  1       BB06                  0.50    [000..000)                                     i internal 
BB08 [0020]  2       BB06,BB07             1       [000..000)                                     i internal label target 
BB09 [0021]  1       BB08                  1       [???..???)        (return)                     internal newobj nullcheck 
-----------------------------------------------------------------------------------------------------------------------------------------


Compacting blocks BB01 and BB02:
*************** In fgDebugCheckBBlist

Compacting blocks BB04 and BB05:
*************** In fgDebugCheckBBlist

Compacting blocks BB04 and BB06:
*************** In fgDebugCheckBBlist

Compacting blocks BB08 and BB09:
*************** In fgDebugCheckBBlist

After updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)-> BB04 ( cond )                     i label target newobj nullcheck 
BB03 [0008]  1       BB01                  0.50    [017..018)                                     i 
BB04 [0009]  2       BB01,BB03             1       [000..018)-> BB08 ( cond )                     i label target newobj nullcheck 
BB07 [0019]  1       BB04                  0.50    [000..000)                                     i internal 
BB08 [0020]  2       BB04,BB07             1       [000..000)        (return)                     i internal label target newobj nullcheck 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Update flow graph early pass

*************** Starting PHASE Morph - Promote Structs

*************** In fgResetImplicitByRefRefCount()
*************** In fgPromoteStructs()

lvaTable before fgPromoteStructs
; Initial local variable assignments
;
;  V00 arg0              ref  class-hnd
;  V01 loc0              ref  class-hnd exact
;  V02 OutArgs        lclBlk <na>  "OutgoingArgSpace"
;  V03 tmp1              ref  class-hnd exact "NewObj constructor temp"
;  V04 tmp2              ref  class-hnd exact "NewObj constructor temp"
;  V05 tmp3              ref  class-hnd "dup spill"
;  V06 tmp4              ref  class-hnd exact "NewObj constructor temp"
;  V07 tmp5              ref  class-hnd exact "Inlining Arg"
;  V08 tmp6              ref  class-hnd "Inlining Arg"
;  V09 tmp7             bool  "Inline stloc first use temp"
;  V10 tmp8              ref  class-hnd "Inlining Arg"
;  V11 tmp9              ref  class-hnd "Inlining Arg"
;  V12 tmp10             ref  class-hnd "Inlining Arg"
;  V13 tmp11             ref  class-hnd "Inlining Arg"
;  V14 tmp12            long  "Inlining Arg"

lvaTable after fgPromoteStructs
; Initial local variable assignments
;
;  V00 arg0              ref  class-hnd
;  V01 loc0              ref  class-hnd exact
;  V02 OutArgs        lclBlk <na>  "OutgoingArgSpace"
;  V03 tmp1              ref  class-hnd exact "NewObj constructor temp"
;  V04 tmp2              ref  class-hnd exact "NewObj constructor temp"
;  V05 tmp3              ref  class-hnd "dup spill"
;  V06 tmp4              ref  class-hnd exact "NewObj constructor temp"
;  V07 tmp5              ref  class-hnd exact "Inlining Arg"
;  V08 tmp6              ref  class-hnd "Inlining Arg"
;  V09 tmp7             bool  "Inline stloc first use temp"
;  V10 tmp8              ref  class-hnd "Inlining Arg"
;  V11 tmp9              ref  class-hnd "Inlining Arg"
;  V12 tmp10             ref  class-hnd "Inlining Arg"
;  V13 tmp11             ref  class-hnd "Inlining Arg"
;  V14 tmp12            long  "Inlining Arg"

*************** Finishing PHASE Morph - Promote Structs

*************** Starting PHASE Morph - Structs/AddrExp

*************** In fgMarkAddressExposedLocals()
LocalAddressVisitor visiting statement:
STMT00000 (IL 0x000...0x005)
               [000003] -AC---------              *  ASG       ref   
               [000002] D------N----              +--*  LCL_VAR   ref    V03 tmp1         
               [000001] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000000] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e method

LocalAddressVisitor visiting statement:
STMT00002 (IL 0x005...  ???)
               [000008] -A----------              *  ASG       ref   
               [000007] D------N----              +--*  LCL_VAR   ref    V01 loc0         
               [000006] ------------              \--*  LCL_VAR   ref    V03 tmp1         

LocalAddressVisitor visiting statement:
STMT00003 (IL 0x006...0x008)
               [000012] -A-XG-------              *  ASG       ref   
               [000011] ---XG--N----              +--*  FIELD     ref    projectPath
               [000009] ------------              |  \--*  LCL_VAR   ref    V01 loc0         
               [000010] ------------              \--*  LCL_VAR   ref    V00 arg0         

LocalAddressVisitor visiting statement:
STMT00005 (IL   ???...  ???)
               [000018] -AC---------              *  ASG       ref   
               [000017] D------N----              +--*  LCL_VAR   ref    V04 tmp2         
               [000016] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000015] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token

LocalAddressVisitor visiting statement:
STMT00020 (IL   ???...  ???)
               [000073] -A--G-------              *  ASG       ref   
               [000072] D------N----              +--*  LCL_VAR   ref    V07 tmp5         
               [000067] ----G-------              \--*  FIELD     ref    Instance

LocalAddressVisitor visiting statement:
STMT00019 (IL   ???...  ???)
               [000071] --C-G-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor
               [000019] ------------ this in rcx  +--*  LCL_VAR   ref    V04 tmp2         
               [000069] ------------ arg1         +--*  CNS_INT   int    0
               [000070] ------------ arg2         \--*  LCL_VAR   ref    V07 tmp5         

LocalAddressVisitor visiting statement:
STMT00023 (IL 0x017...  ???)
               [000088] -ACXG-------              *  ASG       ref   
               [000087] D------N----              +--*  LCL_VAR   ref    V08 tmp6         
               [000029] --CXG-------              \--*  COMMA     ref   
               [000028] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000026] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc86100028
               [000027] ------------ arg1            |  \--*  CNS_INT   int    215
               [000024] ----G-------                 \--*  FIELD     ref    FalseString

LocalAddressVisitor visiting statement:
STMT00024 (IL 0x017...  ???)
               [000086] ---X--------              *  NULLCHECK byte  
               [000085] ------------              \--*  LCL_VAR   ref    V04 tmp2         

LocalAddressVisitor visiting statement:
STMT00021 (IL 0x017...  ???)
               [000081] -AC-G-------              *  ASG       bool  
               [000080] D------N----              +--*  LCL_VAR   bool   V09 tmp7         
               [000078] --C-G-------              \--*  CALL      int    System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].TryInsert
               [000022] ------------ this in rcx     +--*  LCL_VAR   ref    V04 tmp2         
               [000075] ------------ arg1            +--*  CNS_STR   ref   <string constant>
               [000076] ------------ arg2            +--*  LCL_VAR   ref    V08 tmp6         
               [000079] ------------ arg3            \--*  PUTARG_TYPE ubyte 
               [000077] ------------                    \--*  CNS_INT   int    2

LocalAddressVisitor visiting statement:
STMT00028 (IL 0x017...  ???)
               [000106] -A--G-------              *  ASG       ref   
               [000105] D------N----              +--*  LCL_VAR   ref    V10 tmp8         
               [000092] #---G-------              \--*  IND       ref   
               [000091] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL]

LocalAddressVisitor visiting statement:
STMT00029 (IL 0x017...  ???)
               [000108] -A--G-------              *  ASG       ref   
               [000107] D------N----              +--*  LCL_VAR   ref    V11 tmp9         
               [000094] #---G-------              \--*  IND       ref   
               [000093] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL]

LocalAddressVisitor visiting statement:
STMT00026 (IL 0x017...  ???)
               [000101] ------------              *  JTRUE     void  
               [000100] ------------              \--*  NE        int   
               [000098] ------------                 +--*  LCL_VAR   int    V09 tmp7         
               [000099] ------------                 \--*  CNS_INT   int    0

LocalAddressVisitor visiting statement:
STMT00027 (IL 0x017...  ???)
               [000104] --C-G-------              *  CALL      void   System.Diagnostics.Debug.Fail
               [000102] ------------ arg0         +--*  LCL_VAR   ref    V10 tmp8         
               [000103] ------------ arg1         \--*  LCL_VAR   ref    V11 tmp9         

LocalAddressVisitor visiting statement:
STMT00009 (IL   ???...  ???)
               [000034] -AC---------              *  ASG       ref   
               [000033] D------N----              +--*  LCL_VAR   ref    V05 tmp3         
               [000112] --C-G-------              \--*  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create
               [000021] ------------ arg0            +--*  LCL_VAR   ref    V04 tmp2         
               [000110] --C-G------- arg1            \--*  CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices

LocalAddressVisitor visiting statement:
STMT00034 (IL   ???...  ???)
               [000129] -A-XG-------              *  ASG       ref   
               [000128] D------N----              +--*  LCL_VAR   ref    V12 tmp10        
               [000118] ---XG-------              \--*  FIELD     ref    _loader
               [000036] ------------                 \--*  LCL_VAR   ref    V05 tmp3         

LocalAddressVisitor visiting statement:
STMT00033 (IL   ???...  ???)
               [000127] -A-XG-------              *  ASG       bool  
               [000126] ---XG--N----              +--*  FIELD     bool   <LoadMetadataForReferencedProjects>k__BackingField
               [000124] ------------              |  \--*  LCL_VAR   ref    V12 tmp10        
               [000125] ------------              \--*  CNS_INT   int    1

LocalAddressVisitor visiting statement:
STMT00037 (IL 0x033...  ???)
               [000143] -A-XG-------              *  ASG       ref   
               [000142] D------N----              +--*  LCL_VAR   ref    V13 tmp11        
               [000132] ---XG-------              \--*  FIELD     ref    _loader
               [000040] ------------                 \--*  LCL_VAR   ref    V05 tmp3         

LocalAddressVisitor visiting statement:
STMT00036 (IL 0x033...  ???)
               [000141] -A-XG-------              *  ASG       bool  
               [000140] ---XG--N----              +--*  FIELD     bool   <SkipUnrecognizedProjects>k__BackingField
               [000138] ------------              |  \--*  LCL_VAR   ref    V13 tmp11        
               [000139] ------------              \--*  CNS_INT   int    1

LocalAddressVisitor visiting statement:
STMT00038 (IL 0x03A...  ???)
               [000148] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage
               [000145] ---XG------- this in rcx  +--*  FIELD     ref    _loader
               [000044] ------------              |  \--*  LCL_VAR   ref    V05 tmp3         
               [000146] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000147] ------------ arg2         \--*  CNS_STR   ref   <string constant>

LocalAddressVisitor visiting statement:
STMT00039 (IL 0x04A...  ???)
               [000153] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage
               [000150] ---XG------- this in rcx  +--*  FIELD     ref    _loader
               [000048] ------------              |  \--*  LCL_VAR   ref    V05 tmp3         
               [000151] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000152] ------------ arg2         \--*  CNS_STR   ref   <string constant>

LocalAddressVisitor visiting statement:
STMT00014 (IL 0x05A...  ???)
               [000058] -AC---------              *  ASG       ref   
               [000057] D------N----              +--*  LCL_VAR   ref    V06 tmp4         
               [000056] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000055] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token

LocalAddressVisitor visiting statement:
STMT00040 (IL   ???...  ???)
               [000157] ------------              *  JTRUE     void  
               [000156] ------------              \--*  NE        int   
               [000053] ------------                 +--*  LCL_VAR   ref    V01 loc0         
               [000155] ------------                 \--*  CNS_INT   ref    null

LocalAddressVisitor visiting statement:
STMT00043 (IL   ???...  ???)
               [000165] --C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

LocalAddressVisitor visiting statement:
STMT00041 (IL   ???...  ???)
               [000160] -A-XG-------              *  ASG       ref   
               [000159] ---XG--N----              +--*  FIELD     ref    _target
               [000059] ------------              |  \--*  LCL_VAR   ref    V06 tmp4         
               [000158] ------------              \--*  LCL_VAR   ref    V01 loc0         

LocalAddressVisitor visiting statement:
STMT00042 (IL   ???...  ???)
               [000164] -A-XG-------              *  ASG       long  
               [000163] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000161] ------------              |  \--*  LCL_VAR   ref    V06 tmp4         
               [000054] ------------              \--*  FTN_ADDR  long   <>c__DisplayClass1_0.<GetWorkspace>b__0


LocalAddressVisitor visiting statement:
STMT00016 (IL 0x067...  ???)
               [000062] --C-G-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed
               [000052] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         
               [000061] ------------ arg1         \--*  LCL_VAR   ref    V06 tmp4         

LocalAddressVisitor visiting statement:
STMT00017 (IL 0x06C...  ???)
               [000063] ------------              *  RETURN    ref   
               [000035] ------------              \--*  LCL_VAR   ref    V05 tmp3         


*************** Finishing PHASE Morph - Structs/AddrExp

*************** Starting PHASE Morph - ByRefs

*************** In fgRetypeImplicitByRefArgs()

*************** Finishing PHASE Morph - ByRefs

*************** Starting PHASE Morph - Global

*************** In fgMorphBlocks()

Morphing BB01 of 'SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace'

fgMorphTree BB01, STMT00000 (before)
               [000003] -AC---------              *  ASG       ref   
               [000002] D------N----              +--*  LCL_VAR   ref    V03 tmp1         
               [000001] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000000] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e method
Initializing arg info for 1.CALL:
ArgTable for 1.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 0.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]

Morphing args for 1.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000000] H----+------              *  CNS_INT(h) long   0xd1ffab1e method
Replaced with placeholder node:
               [000168] ----------L-              *  ARGPLACE  long  

Shuffled argument table:    rcx 
ArgTable for 1.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 0.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]


fgMorphTree BB01, STMT00000 (after)
               [000003] -AC--+------              *  ASG       ref   
               [000002] D----+-N----              +--*  LCL_VAR   ref    V03 tmp1         
               [000001] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000000] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

fgMorphTree BB01, STMT00002 (before)
               [000008] -A----------              *  ASG       ref   
               [000007] D------N----              +--*  LCL_VAR   ref    V01 loc0         
               [000006] ------------              \--*  LCL_VAR   ref    V03 tmp1         
GenTreeNode creates assertion:
               [000008] -A----------              *  ASG       ref   
In BB01 New Local Copy     Assertion: V01 == V03 index=#01, mask=0000000000000001

fgMorphTree BB01, STMT00003 (before)
               [000012] -A-XG-------              *  ASG       ref   
               [000011] ---XG--N----              +--*  FIELD     ref    projectPath
               [000009] ------------              |  \--*  LCL_VAR   ref    V01 loc0         
               [000010] ------------              \--*  LCL_VAR   ref    V00 arg0         

Assertion prop in BB01:
Copy     Assertion: V01 == V03 index=#01, mask=0000000000000001
               [000009] ------------              *  LCL_VAR   ref    V03 tmp1         

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000011] ---XG--N----              *  IND       ref   
               [000170] -----+------              \--*  ADD       byref 
               [000009] -----+------                 +--*  LCL_VAR   ref    V03 tmp1         
               [000169] -----+------                 \--*  CNS_INT   long   8 field offset Fseq[projectPath]
GenTreeNode creates assertion:
               [000011] ---XG--N----              *  IND       ref   
In BB01 New Local Constant Assertion: V03 != null index=#02, mask=0000000000000002

fgMorphTree BB01, STMT00003 (after)
               [000012] -A-XG+------              *  ASG       ref   
               [000011] ---XG+-N----              +--*  IND       ref   
               [000170] -----+------              |  \--*  ADD       byref 
               [000009] -----+------              |     +--*  LCL_VAR   ref    V03 tmp1         
               [000169] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[projectPath]
               [000010] -----+------              \--*  LCL_VAR   ref    V00 arg0         

fgMorphTree BB01, STMT00005 (before)
               [000018] -AC---------              *  ASG       ref   
               [000017] D------N----              +--*  LCL_VAR   ref    V04 tmp2         
               [000016] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000015] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token
Initializing arg info for 16.CALL:
ArgTable for 16.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 15.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]

Morphing args for 16.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000015] H----+------              *  CNS_INT(h) long   0xd1ffab1e token
Replaced with placeholder node:
               [000171] ----------L-              *  ARGPLACE  long  

Shuffled argument table:    rcx 
ArgTable for 16.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 15.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]


fgMorphTree BB01, STMT00005 (after)
               [000018] -AC--+------              *  ASG       ref   
               [000017] D----+-N----              +--*  LCL_VAR   ref    V04 tmp2         
               [000016] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000015] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

fgMorphTree BB01, STMT00020 (before)
               [000073] -A--G-------              *  ASG       ref   
               [000072] D------N----              +--*  LCL_VAR   ref    V07 tmp5         
               [000067] ----G-------              \--*  FIELD     ref    Instance

fgMorphTree BB01, STMT00020 (after)
               [000073] -A--G+------              *  ASG       ref   
               [000072] D----+-N----              +--*  LCL_VAR   ref    V07 tmp5         
               [000067] n---G+------              \--*  IND       ref   
               [000172] I----+------                 \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[Instance]

fgMorphTree BB01, STMT00019 (before)
               [000071] --C-G-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor
               [000019] ------------ this in rcx  +--*  LCL_VAR   ref    V04 tmp2         
               [000069] ------------ arg1         +--*  CNS_INT   int    0
               [000070] ------------ arg2         \--*  LCL_VAR   ref    V07 tmp5         
Initializing arg info for 71.CALL:
ArgTable for 71.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 19.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 69.CNS_INT int (By ref), 1 reg: rdx, byteAlignment=8]
fgArgTabEntry[arg 2 70.LCL_VAR ref (By ref), 1 reg: r8, byteAlignment=8]

Morphing args for 71.CALL:
argSlots=3, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000019] -----+------              *  LCL_VAR   ref    V04 tmp2         
Replaced with placeholder node:
               [000173] ----------L-              *  ARGPLACE  ref   
Deferred argument ('r8'):
               [000070] -----+------              *  LCL_VAR   ref    V07 tmp5         
Replaced with placeholder node:
               [000174] ----------L-              *  ARGPLACE  ref   
Deferred argument ('rdx'):
               [000069] -----+------              *  CNS_INT   int    0
Replaced with placeholder node:
               [000175] ----------L-              *  ARGPLACE  int   

Shuffled argument table:    rcx r8 rdx 
ArgTable for 71.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 19.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 2 70.LCL_VAR ref (By ref), 1 reg: r8, byteAlignment=8, lateArgInx=1, processed]
fgArgTabEntry[arg 1 69.CNS_INT int (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=2, processed]


fgMorphTree BB01, STMT00019 (after)
               [000071] --CXG+------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor
               [000019] -----+------ this in rcx  +--*  LCL_VAR   ref    V04 tmp2         
               [000070] -----+------ arg2 in r8   +--*  LCL_VAR   ref    V07 tmp5         
               [000069] -----+------ arg1 in rdx  \--*  CNS_INT   int    0

fgMorphTree BB01, STMT00023 (before)
               [000088] -ACXG-------              *  ASG       ref   
               [000087] D------N----              +--*  LCL_VAR   ref    V08 tmp6         
               [000029] --CXG-------              \--*  COMMA     ref   
               [000028] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000026] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc86100028
               [000027] ------------ arg1            |  \--*  CNS_INT   int    215
               [000024] ----G-------                 \--*  FIELD     ref    FalseString
Initializing arg info for 28.CALL:
ArgTable for 28.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 26.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 27.CNS_INT int (By ref), 1 reg: rdx, byteAlignment=8]

Morphing args for 28.CALL:
argSlots=2, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000026] -----+------              *  CNS_INT   long   0x7ffc86100028
Replaced with placeholder node:
               [000176] ----------L-              *  ARGPLACE  long  
Deferred argument ('rdx'):
               [000027] -----+------              *  CNS_INT   int    215
Replaced with placeholder node:
               [000177] ----------L-              *  ARGPLACE  int   

Shuffled argument table:    rcx rdx 
ArgTable for 28.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 26.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 27.CNS_INT int (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]


fgMorphTree BB01, STMT00023 (after)
               [000088] -ACXG+------              *  ASG       ref   
               [000087] D----+-N----              +--*  LCL_VAR   ref    V08 tmp6         
               [000029] --CXG+------              \--*  COMMA     ref   
               [000028] H-CXG+------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000026] -----+------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc86100028
               [000027] -----+------ arg1 in rdx     |  \--*  CNS_INT   int    215
               [000024] n---G+------                 \--*  IND       ref   
               [000178] I----+------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[FalseString]

fgMorphTree BB01, STMT00024 (before)
               [000086] ---X--------              *  NULLCHECK byte  
               [000085] ------------              \--*  LCL_VAR   ref    V04 tmp2         
GenTreeNode creates assertion:
               [000086] ---X--------              *  NULLCHECK byte  
In BB01 New Local Constant Assertion: V04 != null index=#03, mask=0000000000000004

fgMorphTree BB01, STMT00021 (before)
               [000081] -AC-G-------              *  ASG       bool  
               [000080] D------N----              +--*  LCL_VAR   bool   V09 tmp7         
               [000078] --C-G-------              \--*  CALL      int    System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].TryInsert
               [000022] ------------ this in rcx     +--*  LCL_VAR   ref    V04 tmp2         
               [000075] ------------ arg1            +--*  CNS_STR   ref   <string constant>
               [000076] ------------ arg2            +--*  LCL_VAR   ref    V08 tmp6         
               [000079] ------------ arg3            \--*  PUTARG_TYPE ubyte 
               [000077] ------------                    \--*  CNS_INT   int    2
Initializing arg info for 78.CALL:
ArgTable for 78.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 22.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 75.CNS_STR ref (By ref), 1 reg: rdx, byteAlignment=8]
fgArgTabEntry[arg 2 76.LCL_VAR ref (By ref), 1 reg: r8, byteAlignment=8]
fgArgTabEntry[arg 3 79.PUTARG_TYPE int (By ref), 1 reg: r9, byteAlignment=8]

Morphing args for 78.CALL:
argSlots=4, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rdx'):
               [000180] #---G+------              *  IND       ref   
               [000179] H----+------              \--*  CNS_INT(h) long   0xD1FFAB1E "AlwaysCompileMarkupFilesInSeparateDomain"
Replaced with placeholder node:
               [000181] ----------L-              *  ARGPLACE  ref   
Deferred argument ('rcx'):
               [000022] -----+------              *  LCL_VAR   ref    V04 tmp2         
Replaced with placeholder node:
               [000182] ----------L-              *  ARGPLACE  ref   
Deferred argument ('r8'):
               [000076] -----+------              *  LCL_VAR   ref    V08 tmp6         
Replaced with placeholder node:
               [000183] ----------L-              *  ARGPLACE  ref   
Deferred argument ('r9'):
               [000077] -----+------              *  CNS_INT   int    2
Replaced with placeholder node:
               [000184] ----------L-              *  ARGPLACE  int   

Shuffled argument table:    rdx rcx r8 r9 
ArgTable for 78.CALL after fgMorphArgs:
fgArgTabEntry[arg 1 180.IND ref (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 0 22.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=1, processed]
fgArgTabEntry[arg 2 76.LCL_VAR ref (By ref), 1 reg: r8, byteAlignment=8, lateArgInx=2, processed]
fgArgTabEntry[arg 3 77.CNS_INT int (By ref), 1 reg: r9, byteAlignment=8, lateArgInx=3, processed]


fgMorphTree BB01, STMT00021 (after)
               [000081] -ACXG+------              *  ASG       bool  
               [000080] D----+-N----              +--*  LCL_VAR   int    V09 tmp7         
               [000078] --CXG+------              \--*  CALL      int    System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].TryInsert
               [000180] #---G+------ arg1 in rdx     +--*  IND       ref   
               [000179] H----+------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "AlwaysCompileMarkupFilesInSeparateDomain"
               [000022] -----+------ this in rcx     +--*  LCL_VAR   ref    V04 tmp2         
               [000076] -----+------ arg2 in r8      +--*  LCL_VAR   ref    V08 tmp6         
               [000077] -----+------ arg3 in r9      \--*  CNS_INT   int    2

fgMorphTree BB01, STMT00028 (before)
               [000106] -A--G-------              *  ASG       ref   
               [000105] D------N----              +--*  LCL_VAR   ref    V10 tmp8         
               [000092] #---G-------              \--*  IND       ref   
               [000091] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL]

fgMorphTree BB01, STMT00029 (before)
               [000108] -A--G-------              *  ASG       ref   
               [000107] D------N----              +--*  LCL_VAR   ref    V11 tmp9         
               [000094] #---G-------              \--*  IND       ref   
               [000093] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL]

fgMorphTree BB01, STMT00026 (before)
               [000101] ------------              *  JTRUE     void  
               [000100] ------------              \--*  NE        int   
               [000098] ------------                 +--*  LCL_VAR   int    V09 tmp7         
               [000099] ------------                 \--*  CNS_INT   int    0

Morphing BB03 of 'SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace'

fgMorphTree BB03, STMT00027 (before)
               [000104] --C-G-------              *  CALL      void   System.Diagnostics.Debug.Fail
               [000102] ------------ arg0         +--*  LCL_VAR   ref    V10 tmp8         
               [000103] ------------ arg1         \--*  LCL_VAR   ref    V11 tmp9         
Initializing arg info for 104.CALL:
ArgTable for 104.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 102.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 103.LCL_VAR ref (By ref), 1 reg: rdx, byteAlignment=8]

Morphing args for 104.CALL:
argSlots=2, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000102] -----+------              *  LCL_VAR   ref    V10 tmp8         
Replaced with placeholder node:
               [000185] ----------L-              *  ARGPLACE  ref   
Deferred argument ('rdx'):
               [000103] -----+------              *  LCL_VAR   ref    V11 tmp9         
Replaced with placeholder node:
               [000186] ----------L-              *  ARGPLACE  ref   

Shuffled argument table:    rcx rdx 
ArgTable for 104.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 102.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 103.LCL_VAR ref (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]


fgMorphTree BB03, STMT00027 (after)
               [000104] --CXG+------              *  CALL      void   System.Diagnostics.Debug.Fail
               [000102] -----+------ arg0 in rcx  +--*  LCL_VAR   ref    V10 tmp8         
               [000103] -----+------ arg1 in rdx  \--*  LCL_VAR   ref    V11 tmp9         

Morphing BB04 of 'SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace'

fgMorphTree BB04, STMT00009 (before)
               [000034] -AC---------              *  ASG       ref   
               [000033] D------N----              +--*  LCL_VAR   ref    V05 tmp3         
               [000112] --C-G-------              \--*  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create
               [000021] ------------ arg0            +--*  LCL_VAR   ref    V04 tmp2         
               [000110] --C-G------- arg1            \--*  CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices
Initializing arg info for 112.CALL:
ArgTable for 112.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 21.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 110.CALL ref (By ref), 1 reg: rdx, byteAlignment=8]

Morphing args for 112.CALL:
Initializing arg info for 110.CALL:
ArgTable for 110.CALL after fgInitArgInfo:

Morphing args for 110.CALL:
argSlots=0, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32
ArgTable for 110.CALL after fgMorphArgs:

argSlots=2, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Argument with 'side effect'...
               [000110] --CXG+------              *  CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices

lvaGrabTemp returning 15 (V15 tmp13) called for argument with side effect.

  Evaluate to a temp:
               [000188] -ACXG-----L-              *  ASG       ref   
               [000187] D------N----              +--*  LCL_VAR   ref    V15 tmp13        
               [000110] --CXG+------              \--*  CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices
Deferred argument ('rcx'):
               [000021] -----+------              *  LCL_VAR   ref    V04 tmp2         
Replaced with placeholder node:
               [000190] ----------L-              *  ARGPLACE  ref   

Shuffled argument table:    rdx rcx 
ArgTable for 112.CALL after fgMorphArgs:
fgArgTabEntry[arg 1 189.LCL_VAR ref (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=0, tmpNum=V15, isTmp, processed]
fgArgTabEntry[arg 0 21.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=1, processed]


fgMorphTree BB04, STMT00009 (after)
               [000034] -ACXG+------              *  ASG       ref   
               [000033] D----+-N----              +--*  LCL_VAR   ref    V05 tmp3         
               [000112] --CXG+------              \--*  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create
               [000188] -ACXG-----L- arg1 SETUP      +--*  ASG       ref   
               [000187] D------N----                 |  +--*  LCL_VAR   ref    V15 tmp13        
               [000110] --CXG+------                 |  \--*  CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices
               [000189] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V15 tmp13        
               [000021] -----+------ arg0 in rcx     \--*  LCL_VAR   ref    V04 tmp2         

fgMorphTree BB04, STMT00034 (before)
               [000129] -A-XG-------              *  ASG       ref   
               [000128] D------N----              +--*  LCL_VAR   ref    V12 tmp10        
               [000118] ---XG-------              \--*  FIELD     ref    _loader
               [000036] ------------                 \--*  LCL_VAR   ref    V05 tmp3         

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000118] ---XG-------              *  IND       ref   
               [000192] -----+------              \--*  ADD       byref 
               [000036] -----+------                 +--*  LCL_VAR   ref    V05 tmp3         
               [000191] -----+------                 \--*  CNS_INT   long   136 field offset Fseq[_loader]
GenTreeNode creates assertion:
               [000118] ---XG-------              *  IND       ref   
In BB04 New Local Constant Assertion: V05 != null index=#01, mask=0000000000000001

fgMorphTree BB04, STMT00034 (after)
               [000129] -A-XG+------              *  ASG       ref   
               [000128] D----+-N----              +--*  LCL_VAR   ref    V12 tmp10        
               [000118] ---XG+------              \--*  IND       ref   
               [000192] -----+------                 \--*  ADD       byref 
               [000036] -----+------                    +--*  LCL_VAR   ref    V05 tmp3         
               [000191] -----+------                    \--*  CNS_INT   long   136 field offset Fseq[_loader]

fgMorphTree BB04, STMT00033 (before)
               [000127] -A-XG-------              *  ASG       bool  
               [000126] ---XG--N----              +--*  FIELD     bool   <LoadMetadataForReferencedProjects>k__BackingField
               [000124] ------------              |  \--*  LCL_VAR   ref    V12 tmp10        
               [000125] ------------              \--*  CNS_INT   int    1

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000126] ---XG--N----              *  IND       bool  
               [000194] -----+------              \--*  ADD       byref 
               [000124] -----+------                 +--*  LCL_VAR   ref    V12 tmp10        
               [000193] -----+------                 \--*  CNS_INT   long   56 field offset Fseq[<LoadMetadataForReferencedProjects>k__BackingField]
GenTreeNode creates assertion:
               [000126] ---XG--N----              *  IND       bool  
In BB04 New Local Constant Assertion: V12 != null index=#02, mask=0000000000000002

fgMorphTree BB04, STMT00033 (after)
               [000127] -A-XG+------              *  ASG       bool  
               [000126] ---XG+-N----              +--*  IND       bool  
               [000194] -----+------              |  \--*  ADD       byref 
               [000124] -----+------              |     +--*  LCL_VAR   ref    V12 tmp10        
               [000193] -----+------              |     \--*  CNS_INT   long   56 field offset Fseq[<LoadMetadataForReferencedProjects>k__BackingField]
               [000125] -----+------              \--*  CNS_INT   int    1

fgMorphTree BB04, STMT00037 (before)
               [000143] -A-XG-------              *  ASG       ref   
               [000142] D------N----              +--*  LCL_VAR   ref    V13 tmp11        
               [000132] ---XG-------              \--*  FIELD     ref    _loader
               [000040] ------------                 \--*  LCL_VAR   ref    V05 tmp3         

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000132] ---XG-------              *  IND       ref   
               [000196] -----+------              \--*  ADD       byref 
               [000040] -----+------                 +--*  LCL_VAR   ref    V05 tmp3         
               [000195] -----+------                 \--*  CNS_INT   long   136 field offset Fseq[_loader]

fgMorphTree BB04, STMT00037 (after)
               [000143] -A-XG+------              *  ASG       ref   
               [000142] D----+-N----              +--*  LCL_VAR   ref    V13 tmp11        
               [000132] ---XG+------              \--*  IND       ref   
               [000196] -----+------                 \--*  ADD       byref 
               [000040] -----+------                    +--*  LCL_VAR   ref    V05 tmp3         
               [000195] -----+------                    \--*  CNS_INT   long   136 field offset Fseq[_loader]

fgMorphTree BB04, STMT00036 (before)
               [000141] -A-XG-------              *  ASG       bool  
               [000140] ---XG--N----              +--*  FIELD     bool   <SkipUnrecognizedProjects>k__BackingField
               [000138] ------------              |  \--*  LCL_VAR   ref    V13 tmp11        
               [000139] ------------              \--*  CNS_INT   int    1

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000140] ---XG--N----              *  IND       bool  
               [000198] -----+------              \--*  ADD       byref 
               [000138] -----+------                 +--*  LCL_VAR   ref    V13 tmp11        
               [000197] -----+------                 \--*  CNS_INT   long   57 field offset Fseq[<SkipUnrecognizedProjects>k__BackingField]
GenTreeNode creates assertion:
               [000140] ---XG--N----              *  IND       bool  
In BB04 New Local Constant Assertion: V13 != null index=#03, mask=0000000000000004

fgMorphTree BB04, STMT00036 (after)
               [000141] -A-XG+------              *  ASG       bool  
               [000140] ---XG+-N----              +--*  IND       bool  
               [000198] -----+------              |  \--*  ADD       byref 
               [000138] -----+------              |     +--*  LCL_VAR   ref    V13 tmp11        
               [000197] -----+------              |     \--*  CNS_INT   long   57 field offset Fseq[<SkipUnrecognizedProjects>k__BackingField]
               [000139] -----+------              \--*  CNS_INT   int    1

fgMorphTree BB04, STMT00038 (before)
               [000148] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage
               [000145] ---XG------- this in rcx  +--*  FIELD     ref    _loader
               [000044] ------------              |  \--*  LCL_VAR   ref    V05 tmp3         
               [000146] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000147] ------------ arg2         \--*  CNS_STR   ref   <string constant>
Initializing arg info for 148.CALL:
ArgTable for 148.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 145.FIELD ref (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 146.CNS_STR ref (By ref), 1 reg: rdx, byteAlignment=8]
fgArgTabEntry[arg 2 147.CNS_STR ref (By ref), 1 reg: r8, byteAlignment=8]

Morphing args for 148.CALL:

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000145] ---XG-------              *  IND       ref   
               [000200] -----+------              \--*  ADD       byref 
               [000044] -----+------                 +--*  LCL_VAR   ref    V05 tmp3         
               [000199] -----+------                 \--*  CNS_INT   long   136 field offset Fseq[_loader]
argSlots=3, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
     (  6,  8) [000145] ---XG-------              *  IND       ref   
     (  4,  6) [000200] -------N----              \--*  ADD       byref 
     (  3,  2) [000044] ------------                 +--*  LCL_VAR   ref    V05 tmp3         
     (  1,  4) [000199] ------------                 \--*  CNS_INT   long   136 field offset Fseq[_loader]
Replaced with placeholder node:
               [000205] ----------L-              *  ARGPLACE  ref   
Deferred argument ('rdx'):
     (  4, 12) [000202] #---G-------              *  IND       ref   
     (  2, 10) [000201] H-----------              \--*  CNS_INT(h) long   0xD1FFAB1E "ilproj"
Replaced with placeholder node:
               [000206] ----------L-              *  ARGPLACE  ref   
Deferred argument ('r8'):
     (  4, 12) [000204] #---G-------              *  IND       ref   
     (  2, 10) [000203] H-----------              \--*  CNS_INT(h) long   0xD1FFAB1E "IL"
Replaced with placeholder node:
               [000207] ----------L-              *  ARGPLACE  ref   

Shuffled argument table:    rcx rdx r8 
ArgTable for 148.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 145.IND ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 202.IND ref (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]
fgArgTabEntry[arg 2 204.IND ref (By ref), 1 reg: r8, byteAlignment=8, lateArgInx=2, processed]


fgMorphTree BB04, STMT00038 (after)
               [000148] --CXG+------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage
     (  6,  8) [000145] ---XG------- this in rcx  +--*  IND       ref   
     (  4,  6) [000200] -------N----              |  \--*  ADD       byref 
     (  3,  2) [000044] ------------              |     +--*  LCL_VAR   ref    V05 tmp3         
     (  1,  4) [000199] ------------              |     \--*  CNS_INT   long   136 field offset Fseq[_loader]
     (  4, 12) [000202] #---G------- arg1 in rdx  +--*  IND       ref   
     (  2, 10) [000201] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "ilproj"
     (  4, 12) [000204] #---G------- arg2 in r8   \--*  IND       ref   
     (  2, 10) [000203] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "IL"

fgMorphTree BB04, STMT00039 (before)
               [000153] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage
               [000150] ---XG------- this in rcx  +--*  FIELD     ref    _loader
               [000048] ------------              |  \--*  LCL_VAR   ref    V05 tmp3         
               [000151] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000152] ------------ arg2         \--*  CNS_STR   ref   <string constant>
Initializing arg info for 153.CALL:
ArgTable for 153.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 150.FIELD ref (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 151.CNS_STR ref (By ref), 1 reg: rdx, byteAlignment=8]
fgArgTabEntry[arg 2 152.CNS_STR ref (By ref), 1 reg: r8, byteAlignment=8]

Morphing args for 153.CALL:

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000150] ---XG-------              *  IND       ref   
               [000209] -----+------              \--*  ADD       byref 
               [000048] -----+------                 +--*  LCL_VAR   ref    V05 tmp3         
               [000208] -----+------                 \--*  CNS_INT   long   136 field offset Fseq[_loader]
argSlots=3, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
     (  6,  8) [000150] ---XG-------              *  IND       ref   
     (  4,  6) [000209] -------N----              \--*  ADD       byref 
     (  3,  2) [000048] ------------                 +--*  LCL_VAR   ref    V05 tmp3         
     (  1,  4) [000208] ------------                 \--*  CNS_INT   long   136 field offset Fseq[_loader]
Replaced with placeholder node:
               [000214] ----------L-              *  ARGPLACE  ref   
Deferred argument ('rdx'):
     (  4, 12) [000211] #---G-------              *  IND       ref   
     (  2, 10) [000210] H-----------              \--*  CNS_INT(h) long   0xD1FFAB1E "vcxproj"
Replaced with placeholder node:
               [000215] ----------L-              *  ARGPLACE  ref   
Deferred argument ('r8'):
     (  4, 12) [000213] #---G-------              *  IND       ref   
     (  2, 10) [000212] H-----------              \--*  CNS_INT(h) long   0xD1FFAB1E "C++"
Replaced with placeholder node:
               [000216] ----------L-              *  ARGPLACE  ref   

Shuffled argument table:    rcx rdx r8 
ArgTable for 153.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 150.IND ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 211.IND ref (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]
fgArgTabEntry[arg 2 213.IND ref (By ref), 1 reg: r8, byteAlignment=8, lateArgInx=2, processed]


fgMorphTree BB04, STMT00039 (after)
               [000153] --CXG+------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage
     (  6,  8) [000150] ---XG------- this in rcx  +--*  IND       ref   
     (  4,  6) [000209] -------N----              |  \--*  ADD       byref 
     (  3,  2) [000048] ------------              |     +--*  LCL_VAR   ref    V05 tmp3         
     (  1,  4) [000208] ------------              |     \--*  CNS_INT   long   136 field offset Fseq[_loader]
     (  4, 12) [000211] #---G------- arg1 in rdx  +--*  IND       ref   
     (  2, 10) [000210] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "vcxproj"
     (  4, 12) [000213] #---G------- arg2 in r8   \--*  IND       ref   
     (  2, 10) [000212] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "C++"

fgMorphTree BB04, STMT00014 (before)
               [000058] -AC---------              *  ASG       ref   
               [000057] D------N----              +--*  LCL_VAR   ref    V06 tmp4         
               [000056] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000055] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token
Initializing arg info for 56.CALL:
ArgTable for 56.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 55.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]

Morphing args for 56.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000055] H----+------              *  CNS_INT(h) long   0xd1ffab1e token
Replaced with placeholder node:
               [000217] ----------L-              *  ARGPLACE  long  

Shuffled argument table:    rcx 
ArgTable for 56.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 55.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]


fgMorphTree BB04, STMT00014 (after)
               [000058] -AC--+------              *  ASG       ref   
               [000057] D----+-N----              +--*  LCL_VAR   ref    V06 tmp4         
               [000056] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000055] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

fgMorphTree BB04, STMT00040 (before)
               [000157] ------------              *  JTRUE     void  
               [000156] ------------              \--*  NE        int   
               [000053] ------------                 +--*  LCL_VAR   ref    V01 loc0         
               [000155] ------------                 \--*  CNS_INT   ref    null

Morphing BB07 of 'SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace'

fgMorphTree BB07, STMT00043 (before)
               [000165] --C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance
Initializing arg info for 165.CALL:
ArgTable for 165.CALL after fgInitArgInfo:

Morphing args for 165.CALL:
argSlots=0, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32
ArgTable for 165.CALL after fgMorphArgs:

Converting BB07 to BBJ_THROW

Morphing BB08 of 'SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace'

fgMorphTree BB08, STMT00041 (before)
               [000160] -A-XG-------              *  ASG       ref   
               [000159] ---XG--N----              +--*  FIELD     ref    _target
               [000059] ------------              |  \--*  LCL_VAR   ref    V06 tmp4         
               [000158] ------------              \--*  LCL_VAR   ref    V01 loc0         

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000159] ---XG--N----              *  IND       ref   
               [000219] -----+------              \--*  ADD       byref 
               [000059] -----+------                 +--*  LCL_VAR   ref    V06 tmp4         
               [000218] -----+------                 \--*  CNS_INT   long   8 field offset Fseq[_target]
GenTreeNode creates assertion:
               [000159] ---XG--N----              *  IND       ref   
In BB08 New Local Constant Assertion: V06 != null index=#01, mask=0000000000000001

fgMorphTree BB08, STMT00041 (after)
               [000160] -A-XG+------              *  ASG       ref   
               [000159] ---XG+-N----              +--*  IND       ref   
               [000219] -----+------              |  \--*  ADD       byref 
               [000059] -----+------              |     +--*  LCL_VAR   ref    V06 tmp4         
               [000218] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
               [000158] -----+------              \--*  LCL_VAR   ref    V01 loc0         

fgMorphTree BB08, STMT00042 (before)
               [000164] -A-XG-------              *  ASG       long  
               [000163] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000161] ------------              |  \--*  LCL_VAR   ref    V06 tmp4         
               [000054] ------------              \--*  FTN_ADDR  long   <>c__DisplayClass1_0.<GetWorkspace>b__0


Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000163] ---XG--N----              *  IND       long  
               [000221] -----+------              \--*  ADD       byref 
               [000161] -----+------                 +--*  LCL_VAR   ref    V06 tmp4         
               [000220] -----+------                 \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]

fgMorphTree BB08, STMT00042 (after)
               [000164] -A-XG+------              *  ASG       long  
               [000163] ---XG+-N----              +--*  IND       long  
               [000221] -----+------              |  \--*  ADD       byref 
               [000161] -----+------              |     +--*  LCL_VAR   ref    V06 tmp4         
               [000220] -----+------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
               [000054] H----+------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

fgMorphTree BB08, STMT00016 (before)
               [000062] --C-G-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed
               [000052] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         
               [000061] ------------ arg1         \--*  LCL_VAR   ref    V06 tmp4         
Initializing arg info for 62.CALL:
ArgTable for 62.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 52.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 61.LCL_VAR ref (By ref), 1 reg: rdx, byteAlignment=8]

Morphing args for 62.CALL:
argSlots=2, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000052] -----+------              *  LCL_VAR   ref    V05 tmp3         
Replaced with placeholder node:
               [000222] ----------L-              *  ARGPLACE  ref   
Deferred argument ('rdx'):
               [000061] -----+------              *  LCL_VAR   ref    V06 tmp4         
Replaced with placeholder node:
               [000223] ----------L-              *  ARGPLACE  ref   

Shuffled argument table:    rcx rdx 
ArgTable for 62.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 52.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 61.LCL_VAR ref (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]

GenTreeNode creates assertion:
               [000062] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed
In BB08 New Local Constant Assertion: V05 != null index=#02, mask=0000000000000002

fgMorphTree BB08, STMT00016 (after)
               [000062] --CXG+------              *  CALL nullcheck void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed
               [000052] -----+------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         
               [000061] -----+------ arg1 in rdx  \--*  LCL_VAR   ref    V06 tmp4         

fgMorphTree BB08, STMT00017 (before)
               [000063] ------------              *  RETURN    ref   
               [000035] ------------              \--*  LCL_VAR   ref    V05 tmp3         

*************** Finishing PHASE Morph - Global
Trees after Morph - Global

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)-> BB04 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB03 [0008]  1       BB01                  0.50    [017..018)                                     i hascall gcsafe 
BB04 [0009]  2       BB01,BB03             1       [000..018)-> BB08 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB07 [0019]  1       BB04                  0       [000..000)        (throw )                     i internal rare hascall gcsafe 
BB08 [0020]  1       BB04                  1       [000..000)        (return)                     i internal label target hascall gcsafe newobj nullcheck 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06D) -> BB04 (cond), preds={} succs={BB03,BB04}

***** BB01
STMT00000 (IL 0x000...0x005)
               [000003] -AC--+------              *  ASG       ref   
               [000002] D----+-N----              +--*  LCL_VAR   ref    V03 tmp1         
               [000001] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000000] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB01
STMT00002 (IL 0x005...  ???)
               [000008] -A---+------              *  ASG       ref   
               [000007] D----+-N----              +--*  LCL_VAR   ref    V01 loc0         
               [000006] -----+------              \--*  LCL_VAR   ref    V03 tmp1         

***** BB01
STMT00003 (IL 0x006...0x008)
               [000012] -A-XG+------              *  ASG       ref   
               [000011] ---XG+-N----              +--*  IND       ref   
               [000170] -----+------              |  \--*  ADD       byref 
               [000009] -----+------              |     +--*  LCL_VAR   ref    V03 tmp1         
               [000169] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[projectPath]
               [000010] -----+------              \--*  LCL_VAR   ref    V00 arg0         

***** BB01
STMT00005 (IL   ???...  ???)
               [000018] -AC--+------              *  ASG       ref   
               [000017] D----+-N----              +--*  LCL_VAR   ref    V04 tmp2         
               [000016] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000015] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00020 (IL   ???...  ???)
               [000073] -A--G+------              *  ASG       ref   
               [000072] D----+-N----              +--*  LCL_VAR   ref    V07 tmp5         
               [000067] n---G+------              \--*  IND       ref   
               [000172] I----+------                 \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[Instance]

***** BB01
STMT00019 (IL   ???...  ???)
               [000071] --CXG+------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor
               [000019] -----+------ this in rcx  +--*  LCL_VAR   ref    V04 tmp2         
               [000070] -----+------ arg2 in r8   +--*  LCL_VAR   ref    V07 tmp5         
               [000069] -----+------ arg1 in rdx  \--*  CNS_INT   int    0

***** BB01
STMT00023 (IL 0x017...  ???)
               [000088] -ACXG+------              *  ASG       ref   
               [000087] D----+-N----              +--*  LCL_VAR   ref    V08 tmp6         
               [000029] --CXG+------              \--*  COMMA     ref   
               [000028] H-CXG+------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000026] -----+------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc86100028
               [000027] -----+------ arg1 in rdx     |  \--*  CNS_INT   int    215
               [000024] n---G+------                 \--*  IND       ref   
               [000178] I----+------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[FalseString]

***** BB01
STMT00024 (IL 0x017...  ???)
               [000086] ---X-+------              *  NULLCHECK byte  
               [000085] -----+------              \--*  LCL_VAR   ref    V04 tmp2         

***** BB01
STMT00021 (IL 0x017...  ???)
               [000081] -ACXG+------              *  ASG       bool  
               [000080] D----+-N----              +--*  LCL_VAR   int    V09 tmp7         
               [000078] --CXG+------              \--*  CALL      int    System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].TryInsert
               [000180] #---G+------ arg1 in rdx     +--*  IND       ref   
               [000179] H----+------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "AlwaysCompileMarkupFilesInSeparateDomain"
               [000022] -----+------ this in rcx     +--*  LCL_VAR   ref    V04 tmp2         
               [000076] -----+------ arg2 in r8      +--*  LCL_VAR   ref    V08 tmp6         
               [000077] -----+------ arg3 in r9      \--*  CNS_INT   int    2

***** BB01
STMT00028 (IL 0x017...  ???)
               [000106] -A--G+------              *  ASG       ref   
               [000105] D----+-N----              +--*  LCL_VAR   ref    V10 tmp8         
               [000092] #---G+------              \--*  IND       ref   
               [000091] H----+------                 \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL]

***** BB01
STMT00029 (IL 0x017...  ???)
               [000108] -A--G+------              *  ASG       ref   
               [000107] D----+-N----              +--*  LCL_VAR   ref    V11 tmp9         
               [000094] #---G+------              \--*  IND       ref   
               [000093] H----+------                 \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL]

***** BB01
STMT00026 (IL 0x017...  ???)
               [000101] -----+------              *  JTRUE     void  
               [000100] J----+-N----              \--*  NE        int   
               [000098] -----+------                 +--*  LCL_VAR   int    V09 tmp7         
               [000099] -----+------                 \--*  CNS_INT   int    0

------------ BB03 [017..018), preds={BB01} succs={BB04}

***** BB03
STMT00027 (IL 0x017...  ???)
               [000104] --CXG+------              *  CALL      void   System.Diagnostics.Debug.Fail
               [000102] -----+------ arg0 in rcx  +--*  LCL_VAR   ref    V10 tmp8         
               [000103] -----+------ arg1 in rdx  \--*  LCL_VAR   ref    V11 tmp9         

------------ BB04 [000..018) -> BB08 (cond), preds={BB01,BB03} succs={BB07,BB08}

***** BB04
STMT00009 (IL   ???...  ???)
               [000034] -ACXG+------              *  ASG       ref   
               [000033] D----+-N----              +--*  LCL_VAR   ref    V05 tmp3         
               [000112] --CXG+------              \--*  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create
               [000188] -ACXG-----L- arg1 SETUP      +--*  ASG       ref   
               [000187] D------N----                 |  +--*  LCL_VAR   ref    V15 tmp13        
               [000110] --CXG+------                 |  \--*  CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices
               [000189] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V15 tmp13        
               [000021] -----+------ arg0 in rcx     \--*  LCL_VAR   ref    V04 tmp2         

***** BB04
STMT00034 (IL   ???...  ???)
               [000129] -A-XG+------              *  ASG       ref   
               [000128] D----+-N----              +--*  LCL_VAR   ref    V12 tmp10        
               [000118] ---XG+------              \--*  IND       ref   
               [000192] -----+------                 \--*  ADD       byref 
               [000036] -----+------                    +--*  LCL_VAR   ref    V05 tmp3         
               [000191] -----+------                    \--*  CNS_INT   long   136 field offset Fseq[_loader]

***** BB04
STMT00033 (IL   ???...  ???)
               [000127] -A-XG+------              *  ASG       bool  
               [000126] ---XG+-N----              +--*  IND       bool  
               [000194] -----+------              |  \--*  ADD       byref 
               [000124] -----+------              |     +--*  LCL_VAR   ref    V12 tmp10        
               [000193] -----+------              |     \--*  CNS_INT   long   56 field offset Fseq[<LoadMetadataForReferencedProjects>k__BackingField]
               [000125] -----+------              \--*  CNS_INT   int    1

***** BB04
STMT00037 (IL 0x033...  ???)
               [000143] -A-XG+------              *  ASG       ref   
               [000142] D----+-N----              +--*  LCL_VAR   ref    V13 tmp11        
               [000132] ---XG+------              \--*  IND       ref   
               [000196] -----+------                 \--*  ADD       byref 
               [000040] -----+------                    +--*  LCL_VAR   ref    V05 tmp3         
               [000195] -----+------                    \--*  CNS_INT   long   136 field offset Fseq[_loader]

***** BB04
STMT00036 (IL 0x033...  ???)
               [000141] -A-XG+------              *  ASG       bool  
               [000140] ---XG+-N----              +--*  IND       bool  
               [000198] -----+------              |  \--*  ADD       byref 
               [000138] -----+------              |     +--*  LCL_VAR   ref    V13 tmp11        
               [000197] -----+------              |     \--*  CNS_INT   long   57 field offset Fseq[<SkipUnrecognizedProjects>k__BackingField]
               [000139] -----+------              \--*  CNS_INT   int    1

***** BB04
STMT00038 (IL 0x03A...  ???)
               [000148] --CXG+------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage
     (  6,  8) [000145] ---XG------- this in rcx  +--*  IND       ref   
     (  4,  6) [000200] -------N----              |  \--*  ADD       byref 
     (  3,  2) [000044] ------------              |     +--*  LCL_VAR   ref    V05 tmp3         
     (  1,  4) [000199] ------------              |     \--*  CNS_INT   long   136 field offset Fseq[_loader]
     (  4, 12) [000202] #---G------- arg1 in rdx  +--*  IND       ref   
     (  2, 10) [000201] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "ilproj"
     (  4, 12) [000204] #---G------- arg2 in r8   \--*  IND       ref   
     (  2, 10) [000203] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "IL"

***** BB04
STMT00039 (IL 0x04A...  ???)
               [000153] --CXG+------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage
     (  6,  8) [000150] ---XG------- this in rcx  +--*  IND       ref   
     (  4,  6) [000209] -------N----              |  \--*  ADD       byref 
     (  3,  2) [000048] ------------              |     +--*  LCL_VAR   ref    V05 tmp3         
     (  1,  4) [000208] ------------              |     \--*  CNS_INT   long   136 field offset Fseq[_loader]
     (  4, 12) [000211] #---G------- arg1 in rdx  +--*  IND       ref   
     (  2, 10) [000210] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "vcxproj"
     (  4, 12) [000213] #---G------- arg2 in r8   \--*  IND       ref   
     (  2, 10) [000212] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "C++"

***** BB04
STMT00014 (IL 0x05A...  ???)
               [000058] -AC--+------              *  ASG       ref   
               [000057] D----+-N----              +--*  LCL_VAR   ref    V06 tmp4         
               [000056] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000055] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB04
STMT00040 (IL   ???...  ???)
               [000157] -----+------              *  JTRUE     void  
               [000156] J----+-N----              \--*  NE        int   
               [000053] -----+------                 +--*  LCL_VAR   ref    V01 loc0         
               [000155] -----+------                 \--*  CNS_INT   ref    null

------------ BB07 [000..000) (throw), preds={BB04} succs={}

***** BB07
STMT00043 (IL   ???...  ???)
               [000165] --CXG+------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

------------ BB08 [000..000) (return), preds={BB04} succs={}

***** BB08
STMT00041 (IL   ???...  ???)
               [000160] -A-XG+------              *  ASG       ref   
               [000159] ---XG+-N----              +--*  IND       ref   
               [000219] -----+------              |  \--*  ADD       byref 
               [000059] -----+------              |     +--*  LCL_VAR   ref    V06 tmp4         
               [000218] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
               [000158] -----+------              \--*  LCL_VAR   ref    V01 loc0         

***** BB08
STMT00042 (IL   ???...  ???)
               [000164] -A-XG+------              *  ASG       long  
               [000163] ---XG+-N----              +--*  IND       long  
               [000221] -----+------              |  \--*  ADD       byref 
               [000161] -----+------              |     +--*  LCL_VAR   ref    V06 tmp4         
               [000220] -----+------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
               [000054] H----+------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

***** BB08
STMT00016 (IL 0x067...  ???)
               [000062] --CXG+------              *  CALL nullcheck void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed
               [000052] -----+------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         
               [000061] -----+------ arg1 in rdx  \--*  LCL_VAR   ref    V06 tmp4         

***** BB08
STMT00017 (IL 0x06C...  ???)
               [000063] -----+------              *  RETURN    ref   
               [000035] -----+------              \--*  LCL_VAR   ref    V05 tmp3         

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist

*************** Starting PHASE GS Cookie
No GS security needed

*************** Finishing PHASE GS Cookie

*************** Starting PHASE Compute edge weights (1, false)
*************** In fgComputeBlockAndEdgeWeights()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)-> BB04 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB03 [0008]  1       BB01                  0.50    [017..018)                                     i hascall gcsafe 
BB04 [0009]  2       BB01,BB03             1       [000..018)-> BB08 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB07 [0019]  1       BB04                  0       [000..000)        (throw )                     i internal rare hascall gcsafe 
BB08 [0020]  1       BB04                  1       [000..000)        (return)                     i internal label target hascall gcsafe newobj nullcheck 
-----------------------------------------------------------------------------------------------------------------------------------------

 -- no profile data, so using default called count
 -- not optimizing or no profile data, so not computing edge weights

*************** Finishing PHASE Compute edge weights (1, false)

*************** Starting PHASE Create EH funclets
*************** In fgCreateFunclets()

After fgCreateFunclets()
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)-> BB04 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB03 [0008]  1       BB01                  0.50    [017..018)                                     i hascall gcsafe 
BB04 [0009]  2       BB01,BB03             1       [000..018)-> BB08 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB07 [0019]  1       BB04                  0       [000..000)        (throw )                     i internal rare hascall gcsafe 
BB08 [0020]  1       BB04                  1       [000..000)        (return)                     i internal label target hascall gcsafe newobj nullcheck 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Create EH funclets

*************** Starting PHASE Optimize layout
*************** In optOptimizeLayout()

***************  Exception Handling table is empty
*************** In fgDebugCheckBBlist

*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)-> BB04 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB03 [0008]  1       BB01                  0.50    [017..018)                                     i hascall gcsafe 
BB04 [0009]  2       BB01,BB03             1       [000..018)-> BB08 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB07 [0019]  1       BB04                  0       [000..000)        (throw )                     i internal rare hascall gcsafe 
BB08 [0020]  1       BB04                  1       [000..000)        (return)                     i internal label target hascall gcsafe newobj nullcheck 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist

*************** In fgExpandRarelyRunBlocks()
*************** In fgReorderBlocks()

Initial BasicBlocks
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)-> BB04 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB03 [0008]  1       BB01                  0.50    [017..018)                                     i hascall gcsafe 
BB04 [0009]  2       BB01,BB03             1       [000..018)-> BB08 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB07 [0019]  1       BB04                  0       [000..000)        (throw )                     i internal rare hascall gcsafe 
BB08 [0020]  1       BB04                  1       [000..000)        (return)                     i internal label target hascall gcsafe newobj nullcheck 
-----------------------------------------------------------------------------------------------------------------------------------------

Decided to reverse conditional branch at block BB04 branch to BB08 since it falls into a rarely run block
Relocated rarely run block BB07 by reversing conditional jump at BB04
Relocated block [BB07..BB07] inserted after BB08 at the end of method

After this change in fgReorderBlocks the BB graph is:
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)-> BB04 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB03 [0008]  1       BB01                  0.50    [017..018)                                     i hascall gcsafe 
BB04 [0009]  2       BB01,BB03             1       [000..018)-> BB07 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB08 [0020]  1       BB04                  1       [000..000)        (return)                     i internal label target hascall gcsafe newobj nullcheck 
BB07 [0019]  1       BB04                  0       [000..000)        (throw )                     i internal rare label target hascall gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)-> BB04 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB03 [0008]  1       BB01                  0.50    [017..018)                                     i hascall gcsafe 
BB04 [0009]  2       BB01,BB03             1       [000..018)-> BB07 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB08 [0020]  1       BB04                  1       [000..000)        (return)                     i internal label target hascall gcsafe newobj nullcheck 
BB07 [0019]  1       BB04                  0       [000..000)        (throw )                     i internal rare label target hascall gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist

*************** Finishing PHASE Optimize layout

*************** Starting PHASE Compute blocks reachability
*************** In fgComputeReachability
*************** In fgDebugCheckBBlist

Renumbering the basic blocks for fgComputeReachability pass #1

*************** Before renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)-> BB04 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB03 [0008]  1       BB01                  0.50    [017..018)                                     i hascall gcsafe 
BB04 [0009]  2       BB01,BB03             1       [000..018)-> BB07 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB08 [0020]  1       BB04                  1       [000..000)        (return)                     i internal label target hascall gcsafe newobj nullcheck 
BB07 [0019]  1       BB04                  0       [000..000)        (throw )                     i internal rare label target hascall gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
Renumber BB03 to BB02
Renumber BB04 to BB03
Renumber BB08 to BB04
Renumber BB07 to BB05

*************** After renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)-> BB03 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB02 [0008]  1       BB01                  0.50    [017..018)                                     i hascall gcsafe 
BB03 [0009]  2       BB01,BB02             1       [000..018)-> BB05 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB04 [0020]  1       BB03                  1       [000..000)        (return)                     i internal label target hascall gcsafe newobj nullcheck 
BB05 [0019]  1       BB03                  0       [000..000)        (throw )                     i internal rare label target hascall gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty

New BlockSet epoch 3, # of blocks (including unused BB00): 6, bitset array size: 1 (short)
Enter blocks: BB01 

After computing reachability sets:
------------------------------------------------
BBnum  Reachable by 
------------------------------------------------
BB01 : BB01 
BB02 : BB01 BB02 
BB03 : BB01 BB02 BB03 
BB04 : BB01 BB02 BB03 BB04 
BB05 : BB01 BB02 BB03 BB05 

After computing reachability:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)-> BB03 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB02 [0008]  1       BB01                  0.50    [017..018)                                     i hascall gcsafe 
BB03 [0009]  2       BB01,BB02             1       [000..018)-> BB05 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB04 [0020]  1       BB03                  1       [000..000)        (return)                     i internal label target hascall gcsafe newobj nullcheck 
BB05 [0019]  1       BB03                  0       [000..000)        (throw )                     i internal rare label target hascall gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist
*************** In fgComputeDoms
*************** In fgDebugCheckBBlist

Dominator computation start blocks (those blocks with no incoming edges):
BB01 
------------------------------------------------
BBnum  Dominated by
------------------------------------------------
BB01:  BB01 
BB02:  BB02 BB01 
BB03:  BB03 BB01 
BB04:  BB04 BB03 BB01 
BB05:  BB05 BB03 BB01 

Inside fgBuildDomTree

After computing the Dominance Tree:
BB01 : BB03 BB02 
BB03 : BB05 BB04 


After numbering the dominator tree:
BB01: pre=01, post=05
BB02: pre=05, post=04
BB03: pre=02, post=03
BB04: pre=04, post=02
BB05: pre=03, post=01

*************** Finishing PHASE Compute blocks reachability

*************** Starting PHASE Optimize loops
*************** In optOptimizeLoops()

After optSetBlockWeights:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)-> BB03 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB02 [0008]  1       BB01                  0.25    [017..018)                                     i hascall gcsafe 
BB03 [0009]  2       BB01,BB02             1       [000..018)-> BB05 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB04 [0020]  1       BB03                  1       [000..000)        (return)                     i internal label target hascall gcsafe newobj nullcheck 
BB05 [0019]  1       BB03                  0       [000..000)        (throw )                     i internal rare label target hascall gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist

*************** Finishing PHASE Optimize loops

*************** Starting PHASE Clone loops

*************** In optCloneLoops()

*************** Finishing PHASE Clone loops

*************** Starting PHASE Unroll loops

*************** Finishing PHASE Unroll loops

*************** Starting PHASE Mark local vars

*************** In lvaMarkLocalVars()
*** lvaComputeRefCounts ***

*** lvaComputeRefCounts -- explicit counts ***

*** marking local variables in block BB01 (weight=1   )
STMT00000 (IL 0x000...0x005)
               [000003] -AC--+------              *  ASG       ref   
               [000002] D----+-N----              +--*  LCL_VAR   ref    V03 tmp1         
               [000001] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000000] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method
New refCnts for V03: refCnt =  1, refCntWtd = 2   
STMT00002 (IL 0x005...  ???)
               [000008] -A---+------              *  ASG       ref   
               [000007] D----+-N----              +--*  LCL_VAR   ref    V01 loc0         
               [000006] -----+------              \--*  LCL_VAR   ref    V03 tmp1         
New refCnts for V01: refCnt =  1, refCntWtd = 1   
New refCnts for V03: refCnt =  2, refCntWtd = 4   
STMT00003 (IL 0x006...0x008)
               [000012] -A-XG+------              *  ASG       ref   
               [000011] ---XG+-N----              +--*  IND       ref   
               [000170] -----+------              |  \--*  ADD       byref 
               [000009] -----+------              |     +--*  LCL_VAR   ref    V03 tmp1         
               [000169] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[projectPath]
               [000010] -----+------              \--*  LCL_VAR   ref    V00 arg0         
New refCnts for V03: refCnt =  3, refCntWtd = 6   
New refCnts for V00: refCnt =  1, refCntWtd = 1   
STMT00005 (IL   ???...  ???)
               [000018] -AC--+------              *  ASG       ref   
               [000017] D----+-N----              +--*  LCL_VAR   ref    V04 tmp2         
               [000016] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000015] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token
New refCnts for V04: refCnt =  1, refCntWtd = 2   
STMT00020 (IL   ???...  ???)
               [000073] -A--G+------              *  ASG       ref   
               [000072] D----+-N----              +--*  LCL_VAR   ref    V07 tmp5         
               [000067] n---G+------              \--*  IND       ref   
               [000172] I----+------                 \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[Instance]
New refCnts for V07: refCnt =  1, refCntWtd = 2   
STMT00019 (IL   ???...  ???)
               [000071] --CXG+------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor
               [000019] -----+------ this in rcx  +--*  LCL_VAR   ref    V04 tmp2         
               [000070] -----+------ arg2 in r8   +--*  LCL_VAR   ref    V07 tmp5         
               [000069] -----+------ arg1 in rdx  \--*  CNS_INT   int    0
New refCnts for V04: refCnt =  2, refCntWtd = 4   
New refCnts for V07: refCnt =  2, refCntWtd = 4   
STMT00023 (IL 0x017...  ???)
               [000088] -ACXG+------              *  ASG       ref   
               [000087] D----+-N----              +--*  LCL_VAR   ref    V08 tmp6         
               [000029] --CXG+------              \--*  COMMA     ref   
               [000028] H-CXG+------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000026] -----+------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc86100028
               [000027] -----+------ arg1 in rdx     |  \--*  CNS_INT   int    215
               [000024] n---G+------                 \--*  IND       ref   
               [000178] I----+------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[FalseString]
New refCnts for V08: refCnt =  1, refCntWtd = 2   
STMT00024 (IL 0x017...  ???)
               [000086] ---X-+------              *  NULLCHECK byte  
               [000085] -----+------              \--*  LCL_VAR   ref    V04 tmp2         
New refCnts for V04: refCnt =  3, refCntWtd = 6   
STMT00021 (IL 0x017...  ???)
               [000081] -ACXG+------              *  ASG       bool  
               [000080] D----+-N----              +--*  LCL_VAR   int    V09 tmp7         
               [000078] --CXG+------              \--*  CALL      int    System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].TryInsert
               [000180] #---G+------ arg1 in rdx     +--*  IND       ref   
               [000179] H----+------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "AlwaysCompileMarkupFilesInSeparateDomain"
               [000022] -----+------ this in rcx     +--*  LCL_VAR   ref    V04 tmp2         
               [000076] -----+------ arg2 in r8      +--*  LCL_VAR   ref    V08 tmp6         
               [000077] -----+------ arg3 in r9      \--*  CNS_INT   int    2
New refCnts for V09: refCnt =  1, refCntWtd = 1   
New refCnts for V04: refCnt =  4, refCntWtd = 8   
New refCnts for V08: refCnt =  2, refCntWtd = 4   
STMT00028 (IL 0x017...  ???)
               [000106] -A--G+------              *  ASG       ref   
               [000105] D----+-N----              +--*  LCL_VAR   ref    V10 tmp8         
               [000092] #---G+------              \--*  IND       ref   
               [000091] H----+------                 \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL]
New refCnts for V10: refCnt =  1, refCntWtd = 2   
STMT00029 (IL 0x017...  ???)
               [000108] -A--G+------              *  ASG       ref   
               [000107] D----+-N----              +--*  LCL_VAR   ref    V11 tmp9         
               [000094] #---G+------              \--*  IND       ref   
               [000093] H----+------                 \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL]
New refCnts for V11: refCnt =  1, refCntWtd = 2   
STMT00026 (IL 0x017...  ???)
               [000101] -----+------              *  JTRUE     void  
               [000100] J----+-N----              \--*  NE        int   
               [000098] -----+------                 +--*  LCL_VAR   int    V09 tmp7         
               [000099] -----+------                 \--*  CNS_INT   int    0
New refCnts for V09: refCnt =  2, refCntWtd = 2   

*** marking local variables in block BB02 (weight=0.25)
STMT00027 (IL 0x017...  ???)
               [000104] --CXG+------              *  CALL      void   System.Diagnostics.Debug.Fail
               [000102] -----+------ arg0 in rcx  +--*  LCL_VAR   ref    V10 tmp8         
               [000103] -----+------ arg1 in rdx  \--*  LCL_VAR   ref    V11 tmp9         
New refCnts for V10: refCnt =  2, refCntWtd = 2.50
New refCnts for V11: refCnt =  2, refCntWtd = 2.50

*** marking local variables in block BB03 (weight=1   )
STMT00009 (IL   ???...  ???)
               [000034] -ACXG+------              *  ASG       ref   
               [000033] D----+-N----              +--*  LCL_VAR   ref    V05 tmp3         
               [000112] --CXG+------              \--*  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create
               [000188] -ACXG-----L- arg1 SETUP      +--*  ASG       ref   
               [000187] D------N----                 |  +--*  LCL_VAR   ref    V15 tmp13        
               [000110] --CXG+------                 |  \--*  CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices
               [000189] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V15 tmp13        
               [000021] -----+------ arg0 in rcx     \--*  LCL_VAR   ref    V04 tmp2         
New refCnts for V05: refCnt =  1, refCntWtd = 2   
New refCnts for V15: refCnt =  1, refCntWtd = 2   
New refCnts for V15: refCnt =  2, refCntWtd = 4   
New refCnts for V04: refCnt =  5, refCntWtd = 10   
STMT00034 (IL   ???...  ???)
               [000129] -A-XG+------              *  ASG       ref   
               [000128] D----+-N----              +--*  LCL_VAR   ref    V12 tmp10        
               [000118] ---XG+------              \--*  IND       ref   
               [000192] -----+------                 \--*  ADD       byref 
               [000036] -----+------                    +--*  LCL_VAR   ref    V05 tmp3         
               [000191] -----+------                    \--*  CNS_INT   long   136 field offset Fseq[_loader]
New refCnts for V12: refCnt =  1, refCntWtd = 2   
New refCnts for V05: refCnt =  2, refCntWtd = 4   
STMT00033 (IL   ???...  ???)
               [000127] -A-XG+------              *  ASG       bool  
               [000126] ---XG+-N----              +--*  IND       bool  
               [000194] -----+------              |  \--*  ADD       byref 
               [000124] -----+------              |     +--*  LCL_VAR   ref    V12 tmp10        
               [000193] -----+------              |     \--*  CNS_INT   long   56 field offset Fseq[<LoadMetadataForReferencedProjects>k__BackingField]
               [000125] -----+------              \--*  CNS_INT   int    1
New refCnts for V12: refCnt =  2, refCntWtd = 4   
STMT00037 (IL 0x033...  ???)
               [000143] -A-XG+------              *  ASG       ref   
               [000142] D----+-N----              +--*  LCL_VAR   ref    V13 tmp11        
               [000132] ---XG+------              \--*  IND       ref   
               [000196] -----+------                 \--*  ADD       byref 
               [000040] -----+------                    +--*  LCL_VAR   ref    V05 tmp3         
               [000195] -----+------                    \--*  CNS_INT   long   136 field offset Fseq[_loader]
New refCnts for V13: refCnt =  1, refCntWtd = 2   
New refCnts for V05: refCnt =  3, refCntWtd = 6   
STMT00036 (IL 0x033...  ???)
               [000141] -A-XG+------              *  ASG       bool  
               [000140] ---XG+-N----              +--*  IND       bool  
               [000198] -----+------              |  \--*  ADD       byref 
               [000138] -----+------              |     +--*  LCL_VAR   ref    V13 tmp11        
               [000197] -----+------              |     \--*  CNS_INT   long   57 field offset Fseq[<SkipUnrecognizedProjects>k__BackingField]
               [000139] -----+------              \--*  CNS_INT   int    1
New refCnts for V13: refCnt =  2, refCntWtd = 4   
STMT00038 (IL 0x03A...  ???)
               [000148] --CXG+------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage
     (  6,  8) [000145] ---XG------- this in rcx  +--*  IND       ref   
     (  4,  6) [000200] -------N----              |  \--*  ADD       byref 
     (  3,  2) [000044] ------------              |     +--*  LCL_VAR   ref    V05 tmp3         
     (  1,  4) [000199] ------------              |     \--*  CNS_INT   long   136 field offset Fseq[_loader]
     (  4, 12) [000202] #---G------- arg1 in rdx  +--*  IND       ref   
     (  2, 10) [000201] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "ilproj"
     (  4, 12) [000204] #---G------- arg2 in r8   \--*  IND       ref   
     (  2, 10) [000203] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "IL"
New refCnts for V05: refCnt =  4, refCntWtd = 8   
STMT00039 (IL 0x04A...  ???)
               [000153] --CXG+------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage
     (  6,  8) [000150] ---XG------- this in rcx  +--*  IND       ref   
     (  4,  6) [000209] -------N----              |  \--*  ADD       byref 
     (  3,  2) [000048] ------------              |     +--*  LCL_VAR   ref    V05 tmp3         
     (  1,  4) [000208] ------------              |     \--*  CNS_INT   long   136 field offset Fseq[_loader]
     (  4, 12) [000211] #---G------- arg1 in rdx  +--*  IND       ref   
     (  2, 10) [000210] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "vcxproj"
     (  4, 12) [000213] #---G------- arg2 in r8   \--*  IND       ref   
     (  2, 10) [000212] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "C++"
New refCnts for V05: refCnt =  5, refCntWtd = 10   
STMT00014 (IL 0x05A...  ???)
               [000058] -AC--+------              *  ASG       ref   
               [000057] D----+-N----              +--*  LCL_VAR   ref    V06 tmp4         
               [000056] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000055] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token
New refCnts for V06: refCnt =  1, refCntWtd = 2   
STMT00040 (IL   ???...  ???)
               [000157] -----+------              *  JTRUE     void  
               [000156] J----+-N----              \--*  EQ        int   
               [000053] -----+------                 +--*  LCL_VAR   ref    V01 loc0         
               [000155] -----+------                 \--*  CNS_INT   ref    null
New refCnts for V01: refCnt =  2, refCntWtd = 2   

*** marking local variables in block BB04 (weight=1   )
STMT00041 (IL   ???...  ???)
               [000160] -A-XG+------              *  ASG       ref   
               [000159] ---XG+-N----              +--*  IND       ref   
               [000219] -----+------              |  \--*  ADD       byref 
               [000059] -----+------              |     +--*  LCL_VAR   ref    V06 tmp4         
               [000218] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
               [000158] -----+------              \--*  LCL_VAR   ref    V01 loc0         
New refCnts for V06: refCnt =  2, refCntWtd = 4   
New refCnts for V01: refCnt =  3, refCntWtd = 3   
STMT00042 (IL   ???...  ???)
               [000164] -A-XG+------              *  ASG       long  
               [000163] ---XG+-N----              +--*  IND       long  
               [000221] -----+------              |  \--*  ADD       byref 
               [000161] -----+------              |     +--*  LCL_VAR   ref    V06 tmp4         
               [000220] -----+------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
               [000054] H----+------              \--*  CNS_INT(h) long   0xd1ffab1e ftn
New refCnts for V06: refCnt =  3, refCntWtd = 6   
STMT00016 (IL 0x067...  ???)
               [000062] --CXG+------              *  CALL nullcheck void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed
               [000052] -----+------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         
               [000061] -----+------ arg1 in rdx  \--*  LCL_VAR   ref    V06 tmp4         
New refCnts for V05: refCnt =  6, refCntWtd = 12   
New refCnts for V06: refCnt =  4, refCntWtd = 8   
STMT00017 (IL 0x06C...  ???)
               [000063] -----+------              *  RETURN    ref   
               [000035] -----+------              \--*  LCL_VAR   ref    V05 tmp3         
New refCnts for V05: refCnt =  7, refCntWtd = 14   

*** marking local variables in block BB05 (weight=0   )
STMT00043 (IL   ???...  ???)
               [000165] --CXG+------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

*** lvaComputeRefCounts -- implicit counts ***
New refCnts for V00: refCnt =  2, refCntWtd = 2   
New refCnts for V00: refCnt =  3, refCntWtd = 3   

*************** In optAddCopies()


*************** Finishing PHASE Mark local vars

*************** Starting PHASE Optimize bools
*************** In optOptimizeBools()
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Optimize bools

*************** Starting PHASE Find oper order
*************** In fgFindOperOrder()

*************** Finishing PHASE Find oper order

*************** Starting PHASE Set block order
*************** In fgSetBlockOrder()
The biggest BB has   12 tree nodes

*************** Finishing PHASE Set block order
Trees before Build SSA representation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)-> BB03 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB02 [0008]  1       BB01                  0.25    [017..018)                                     i hascall gcsafe 
BB03 [0009]  2       BB01,BB02             1       [000..018)-> BB05 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB04 [0020]  1       BB03                  1       [000..000)        (return)                     i internal label target hascall gcsafe newobj nullcheck 
BB05 [0019]  1       BB03                  0       [000..000)        (throw )                     i internal rare label target hascall gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06D) -> BB03 (cond), preds={} succs={BB02,BB03}

***** BB01
STMT00000 (IL 0x000...0x005)
N005 ( 16, 16) [000003] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000002] D------N----              +--*  LCL_VAR   ref    V03 tmp1         
N003 ( 16, 16) [000001] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000000] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB01
STMT00002 (IL 0x005...  ???)
N003 (  1,  3) [000008] -A------R---              *  ASG       ref   
N002 (  1,  1) [000007] D------N----              +--*  LCL_VAR   ref    V01 loc0         
N001 (  1,  1) [000006] ------------              \--*  LCL_VAR   ref    V03 tmp1         

***** BB01
STMT00003 (IL 0x006...0x008)
N006 (  6,  6) [000012] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000011] ---XG--N----              +--*  IND       ref   
N003 (  2,  2) [000170] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000009] ------------              |     +--*  LCL_VAR   ref    V03 tmp1         
N002 (  1,  1) [000169] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[projectPath]
N005 (  1,  1) [000010] ------------              \--*  LCL_VAR   ref    V00 arg0         

***** BB01
STMT00005 (IL   ???...  ???)
N005 ( 16, 16) [000018] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000017] D------N----              +--*  LCL_VAR   ref    V04 tmp2         
N003 ( 16, 16) [000016] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000015] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00020 (IL   ???...  ???)
N004 (  4, 12) [000073] -A--G---R---              *  ASG       ref   
N003 (  1,  1) [000072] D------N----              +--*  LCL_VAR   ref    V07 tmp5         
N002 (  4, 12) [000067] n---G-------              \--*  IND       ref   
N001 (  2, 10) [000172] I-----------                 \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[Instance]

***** BB01
STMT00019 (IL   ???...  ???)
N007 ( 17, 12) [000071] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor
N004 (  1,  1) [000019] ------------ this in rcx  +--*  LCL_VAR   ref    V04 tmp2         
N005 (  1,  1) [000070] ------------ arg2 in r8   +--*  LCL_VAR   ref    V07 tmp5         
N006 (  1,  1) [000069] ------------ arg1 in rdx  \--*  CNS_INT   int    0

***** BB01
STMT00023 (IL 0x017...  ???)
N010 ( 21, 33) [000088] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000087] D------N----              +--*  LCL_VAR   ref    V08 tmp6         
N008 ( 21, 33) [000029] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 21) [000028] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000026] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc86100028
N004 (  1,  4) [000027] ------------ arg1 in rdx     |  \--*  CNS_INT   int    215
N007 (  4, 12) [000024] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000178] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[FalseString]

***** BB01
STMT00024 (IL 0x017...  ???)
N002 (  2,  2) [000086] ---X--------              *  NULLCHECK byte  
N001 (  1,  1) [000085] ------------              \--*  LCL_VAR   ref    V04 tmp2         

***** BB01
STMT00021 (IL 0x017...  ???)
N012 ( 25, 28) [000081] -ACXG---R---              *  ASG       bool  
N011 (  3,  2) [000080] D------N----              +--*  LCL_VAR   int    V09 tmp7         
N010 ( 21, 25) [000078] --CXG-------              \--*  CALL      int    System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].TryInsert
N006 (  4, 12) [000180] #---G------- arg1 in rdx     +--*  IND       ref   
N005 (  2, 10) [000179] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "AlwaysCompileMarkupFilesInSeparateDomain"
N007 (  1,  1) [000022] ------------ this in rcx     +--*  LCL_VAR   ref    V04 tmp2         
N008 (  1,  1) [000076] ------------ arg2 in r8      +--*  LCL_VAR   ref    V08 tmp6         
N009 (  1,  1) [000077] ------------ arg3 in r9      \--*  CNS_INT   int    2

***** BB01
STMT00028 (IL 0x017...  ???)
N004 (  8, 15) [000106] -A--G---R---              *  ASG       ref   
N003 (  3,  2) [000105] D------N----              +--*  LCL_VAR   ref    V10 tmp8         
N002 (  4, 12) [000092] #---G-------              \--*  IND       ref   
N001 (  2, 10) [000091] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL]

***** BB01
STMT00029 (IL 0x017...  ???)
N004 (  8, 15) [000108] -A--G---R---              *  ASG       ref   
N003 (  3,  2) [000107] D------N----              +--*  LCL_VAR   ref    V11 tmp9         
N002 (  4, 12) [000094] #---G-------              \--*  IND       ref   
N001 (  2, 10) [000093] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL]

***** BB01
STMT00026 (IL 0x017...  ???)
N004 (  7,  6) [000101] ------------              *  JTRUE     void  
N003 (  5,  4) [000100] J------N----              \--*  NE        int   
N001 (  3,  2) [000098] ------------                 +--*  LCL_VAR   int    V09 tmp7         
N002 (  1,  1) [000099] ------------                 \--*  CNS_INT   int    0

------------ BB02 [017..018), preds={BB01} succs={BB03}

***** BB02
STMT00027 (IL 0x017...  ???)
N005 ( 20, 11) [000104] --CXG-------              *  CALL      void   System.Diagnostics.Debug.Fail
N003 (  3,  2) [000102] ------------ arg0 in rcx  +--*  LCL_VAR   ref    V10 tmp8         
N004 (  3,  2) [000103] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V11 tmp9         

------------ BB03 [000..018) -> BB05 (cond), preds={BB01,BB02} succs={BB04,BB05}

***** BB03
STMT00009 (IL   ???...  ???)
N009 ( 33, 14) [000034] -ACXG---R---              *  ASG       ref   
N008 (  1,  1) [000033] D------N----              +--*  LCL_VAR   ref    V05 tmp3         
N007 ( 33, 14) [000112] --CXG-------              \--*  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create
N004 ( 14,  5) [000188] -ACXG---R-L- arg1 SETUP      +--*  ASG       ref   
N003 (  1,  1) [000187] D------N----                 |  +--*  LCL_VAR   ref    V15 tmp13        
N002 ( 14,  5) [000110] --CXG-------                 |  \--*  CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices
N005 (  1,  1) [000189] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V15 tmp13        
N006 (  1,  1) [000021] ------------ arg0 in rcx     \--*  LCL_VAR   ref    V04 tmp2         

***** BB03
STMT00034 (IL   ???...  ???)
N006 (  4,  7) [000129] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000128] D------N----              +--*  LCL_VAR   ref    V12 tmp10        
N004 (  4,  7) [000118] ---XG-------              \--*  IND       ref   
N003 (  2,  5) [000192] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000036] ------------                    +--*  LCL_VAR   ref    V05 tmp3         
N002 (  1,  4) [000191] ------------                    \--*  CNS_INT   long   136 field offset Fseq[_loader]

***** BB03
STMT00033 (IL   ???...  ???)
N006 (  7,  7) [000127] -A-XG-------              *  ASG       bool  
N004 (  5,  5) [000126] ---XG--N----              +--*  IND       bool  
N003 (  2,  2) [000194] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000124] ------------              |     +--*  LCL_VAR   ref    V12 tmp10        
N002 (  1,  1) [000193] ------------              |     \--*  CNS_INT   long   56 field offset Fseq[<LoadMetadataForReferencedProjects>k__BackingField]
N005 (  1,  1) [000125] ------------              \--*  CNS_INT   int    1

***** BB03
STMT00037 (IL 0x033...  ???)
N006 (  4,  7) [000143] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000142] D------N----              +--*  LCL_VAR   ref    V13 tmp11        
N004 (  4,  7) [000132] ---XG-------              \--*  IND       ref   
N003 (  2,  5) [000196] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000040] ------------                    +--*  LCL_VAR   ref    V05 tmp3         
N002 (  1,  4) [000195] ------------                    \--*  CNS_INT   long   136 field offset Fseq[_loader]

***** BB03
STMT00036 (IL 0x033...  ???)
N006 (  7,  7) [000141] -A-XG-------              *  ASG       bool  
N004 (  5,  5) [000140] ---XG--N----              +--*  IND       bool  
N003 (  2,  2) [000198] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000138] ------------              |     +--*  LCL_VAR   ref    V13 tmp11        
N002 (  1,  1) [000197] ------------              |     \--*  CNS_INT   long   57 field offset Fseq[<SkipUnrecognizedProjects>k__BackingField]
N005 (  1,  1) [000139] ------------              \--*  CNS_INT   int    1

***** BB03
STMT00038 (IL 0x03A...  ???)
N012 ( 26, 40) [000148] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage
N007 (  4,  7) [000145] ---XG------- this in rcx  +--*  IND       ref   
N006 (  2,  5) [000200] -------N----              |  \--*  ADD       byref 
N004 (  1,  1) [000044] ------------              |     +--*  LCL_VAR   ref    V05 tmp3         
N005 (  1,  4) [000199] ------------              |     \--*  CNS_INT   long   136 field offset Fseq[_loader]
N009 (  4, 12) [000202] #---G------- arg1 in rdx  +--*  IND       ref   
N008 (  2, 10) [000201] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "ilproj"
N011 (  4, 12) [000204] #---G------- arg2 in r8   \--*  IND       ref   
N010 (  2, 10) [000203] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "IL"

***** BB03
STMT00039 (IL 0x04A...  ???)
N012 ( 26, 40) [000153] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage
N007 (  4,  7) [000150] ---XG------- this in rcx  +--*  IND       ref   
N006 (  2,  5) [000209] -------N----              |  \--*  ADD       byref 
N004 (  1,  1) [000048] ------------              |     +--*  LCL_VAR   ref    V05 tmp3         
N005 (  1,  4) [000208] ------------              |     \--*  CNS_INT   long   136 field offset Fseq[_loader]
N009 (  4, 12) [000211] #---G------- arg1 in rdx  +--*  IND       ref   
N008 (  2, 10) [000210] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "vcxproj"
N011 (  4, 12) [000213] #---G------- arg2 in r8   \--*  IND       ref   
N010 (  2, 10) [000212] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "C++"

***** BB03
STMT00014 (IL 0x05A...  ???)
N005 ( 16, 16) [000058] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000057] D------N----              +--*  LCL_VAR   ref    V06 tmp4         
N003 ( 16, 16) [000056] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000055] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB03
STMT00040 (IL   ???...  ???)
N004 (  5,  5) [000157] ------------              *  JTRUE     void  
N003 (  3,  3) [000156] J------N----              \--*  EQ        int   
N001 (  1,  1) [000053] ------------                 +--*  LCL_VAR   ref    V01 loc0         
N002 (  1,  1) [000155] ------------                 \--*  CNS_INT   ref    null

------------ BB04 [000..000) (return), preds={BB03} succs={}

***** BB04
STMT00041 (IL   ???...  ???)
N006 (  6,  6) [000160] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000159] ---XG--N----              +--*  IND       ref   
N003 (  2,  2) [000219] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000059] ------------              |     +--*  LCL_VAR   ref    V06 tmp4         
N002 (  1,  1) [000218] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
N005 (  1,  1) [000158] ------------              \--*  LCL_VAR   ref    V01 loc0         

***** BB04
STMT00042 (IL   ???...  ???)
N006 (  7, 15) [000164] -A-XG-------              *  ASG       long  
N004 (  4,  4) [000163] ---XG--N----              +--*  IND       long  
N003 (  2,  2) [000221] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000161] ------------              |     +--*  LCL_VAR   ref    V06 tmp4         
N002 (  1,  1) [000220] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
N005 (  2, 10) [000054] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

***** BB04
STMT00016 (IL 0x067...  ???)
N005 ( 16, 10) [000062] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed
N003 (  1,  1) [000052] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         
N004 (  1,  1) [000061] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V06 tmp4         

***** BB04
STMT00017 (IL 0x06C...  ???)
N002 (  2,  2) [000063] ------------              *  RETURN    ref   
N001 (  1,  1) [000035] ------------              \--*  LCL_VAR   ref    V05 tmp3         

------------ BB05 [000..000) (throw), preds={BB03} succs={}

***** BB05
STMT00043 (IL   ???...  ???)
N001 ( 14,  5) [000165] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Build SSA representation
*************** In SsaBuilder::Build()
[SsaBuilder] Max block count is 6.

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)-> BB03 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB02 [0008]  1       BB01                  0.25    [017..018)                                     i hascall gcsafe 
BB03 [0009]  2       BB01,BB02             1       [000..018)-> BB05 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB04 [0020]  1       BB03                  1       [000..000)        (return)                     i internal label target hascall gcsafe newobj nullcheck 
BB05 [0019]  1       BB03                  0       [000..000)        (throw )                     i internal rare label target hascall gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
[SsaBuilder] Topologically sorted the graph.
[SsaBuilder::ComputeImmediateDom]

Inside fgBuildDomTree

After computing the Dominance Tree:
BB01 : BB03 BB02 
BB03 : BB05 BB04 

*************** In fgLocalVarLiveness()
In fgLocalVarLivenessInit
Tracked variable (14 out of 16) table:
V05 tmp3          [   ref]: refCnt =    7, refCntWtd =  14   
V04 tmp2          [   ref]: refCnt =    5, refCntWtd =  10   
V06 tmp4          [   ref]: refCnt =    4, refCntWtd =   8   
V03 tmp1          [   ref]: refCnt =    3, refCntWtd =   6   
V00 arg0          [   ref]: refCnt =    3, refCntWtd =   3   
V07 tmp5          [   ref]: refCnt =    2, refCntWtd =   4   
V08 tmp6          [   ref]: refCnt =    2, refCntWtd =   4   
V12 tmp10         [   ref]: refCnt =    2, refCntWtd =   4   
V13 tmp11         [   ref]: refCnt =    2, refCntWtd =   4   
V15 tmp13         [   ref]: refCnt =    2, refCntWtd =   4   
V01 loc0          [   ref]: refCnt =    3, refCntWtd =   3   
V10 tmp8          [   ref]: refCnt =    2, refCntWtd =   2.50
V11 tmp9          [   ref]: refCnt =    2, refCntWtd =   2.50
V09 tmp7          [  bool]: refCnt =    2, refCntWtd =   2   

*************** In fgPerBlockLocalVarLiveness()
BB01 USE(1)={        V00                        } + ByrefExposed + GcHeap
     DEF(8)={V04 V03     V07 V08 V01 V10 V11 V09} + ByrefExposed* + GcHeap*

BB02 USE(2)={V10 V11} + ByrefExposed + GcHeap
     DEF(0)={       } + ByrefExposed* + GcHeap*

BB03 USE(2)={    V04                 V01} + ByrefExposed + GcHeap
     DEF(5)={V05     V06 V12 V13 V15    } + ByrefExposed* + GcHeap*

BB04 USE(3)={V05 V06 V01} + ByrefExposed + GcHeap
     DEF(0)={           } + ByrefExposed* + GcHeap*

BB05 USE(0)={} + ByrefExposed + GcHeap
     DEF(0)={} + ByrefExposed* + GcHeap*

** Memory liveness computed, GcHeap states and ByrefExposed states match
*************** In fgInterBlockLocalVarLiveness()

BB liveness after fgLiveVarAnalysis():

BB01 IN (1)={    V00            } + ByrefExposed + GcHeap
     OUT(4)={V04     V01 V10 V11} + ByrefExposed + GcHeap

BB02 IN (4)={V04 V01 V10 V11} + ByrefExposed + GcHeap
     OUT(2)={V04 V01        } + ByrefExposed + GcHeap

BB03 IN (2)={    V04     V01} + ByrefExposed + GcHeap
     OUT(3)={V05     V06 V01} + ByrefExposed + GcHeap

BB04 IN (3)={V05 V06 V01} + ByrefExposed + GcHeap
     OUT(0)={           }

BB05 IN (0)={} + ByrefExposed + GcHeap
     OUT(0)={}

*************** In optRemoveRedundantZeroInits()
*************** In SsaBuilder::InsertPhiFunctions()
Inserting phi functions:
Inserting phi definition for ByrefExposed at start of BB03.
*************** In SsaBuilder::RenameVariables()

After fgSsaBuild:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)-> BB03 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB02 [0008]  1       BB01                  0.25    [017..018)                                     i hascall gcsafe 
BB03 [0009]  2       BB01,BB02             1       [000..018)-> BB05 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB04 [0020]  1       BB03                  1       [000..000)        (return)                     i internal label target hascall gcsafe newobj nullcheck 
BB05 [0019]  1       BB03                  0       [000..000)        (throw )                     i internal rare label target hascall gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06D) -> BB03 (cond), preds={} succs={BB02,BB03}

***** BB01
STMT00000 (IL 0x000...0x005)
N005 ( 16, 16) [000003] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000002] D------N----              +--*  LCL_VAR   ref    V03 tmp1         d:2
N003 ( 16, 16) [000001] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000000] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB01
STMT00002 (IL 0x005...  ???)
N003 (  1,  3) [000008] -A------R---              *  ASG       ref   
N002 (  1,  1) [000007] D------N----              +--*  LCL_VAR   ref    V01 loc0         d:2
N001 (  1,  1) [000006] ------------              \--*  LCL_VAR   ref    V03 tmp1         u:2

***** BB01
STMT00003 (IL 0x006...0x008)
N006 (  6,  6) [000012] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000011] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000170] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000009] ------------              |     +--*  LCL_VAR   ref    V03 tmp1         u:2 (last use)
N002 (  1,  1) [000169] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[projectPath]
N005 (  1,  1) [000010] ------------              \--*  LCL_VAR   ref    V00 arg0         u:1 (last use)

***** BB01
STMT00005 (IL   ???...  ???)
N005 ( 16, 16) [000018] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000017] D------N----              +--*  LCL_VAR   ref    V04 tmp2         d:2
N003 ( 16, 16) [000016] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000015] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00020 (IL   ???...  ???)
N004 (  4, 12) [000073] -A--G---R---              *  ASG       ref   
N003 (  1,  1) [000072] D------N----              +--*  LCL_VAR   ref    V07 tmp5         d:2
N002 (  4, 12) [000067] n---G-------              \--*  IND       ref   
N001 (  2, 10) [000172] I-----------                 \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[Instance]

***** BB01
STMT00019 (IL   ???...  ???)
N007 ( 17, 12) [000071] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor
N004 (  1,  1) [000019] ------------ this in rcx  +--*  LCL_VAR   ref    V04 tmp2         u:2
N005 (  1,  1) [000070] ------------ arg2 in r8   +--*  LCL_VAR   ref    V07 tmp5         u:2 (last use)
N006 (  1,  1) [000069] ------------ arg1 in rdx  \--*  CNS_INT   int    0

***** BB01
STMT00023 (IL 0x017...  ???)
N010 ( 21, 33) [000088] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000087] D------N----              +--*  LCL_VAR   ref    V08 tmp6         d:2
N008 ( 21, 33) [000029] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 21) [000028] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000026] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc86100028
N004 (  1,  4) [000027] ------------ arg1 in rdx     |  \--*  CNS_INT   int    215
N007 (  4, 12) [000024] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000178] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[FalseString]

***** BB01
STMT00024 (IL 0x017...  ???)
N002 (  2,  2) [000086] ---X--------              *  NULLCHECK byte  
N001 (  1,  1) [000085] ------------              \--*  LCL_VAR   ref    V04 tmp2         u:2

***** BB01
STMT00021 (IL 0x017...  ???)
N012 ( 25, 28) [000081] -ACXG---R---              *  ASG       bool  
N011 (  3,  2) [000080] D------N----              +--*  LCL_VAR   int    V09 tmp7         d:2
N010 ( 21, 25) [000078] --CXG-------              \--*  CALL      int    System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].TryInsert
N006 (  4, 12) [000180] #---G------- arg1 in rdx     +--*  IND       ref   
N005 (  2, 10) [000179] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "AlwaysCompileMarkupFilesInSeparateDomain"
N007 (  1,  1) [000022] ------------ this in rcx     +--*  LCL_VAR   ref    V04 tmp2         u:2
N008 (  1,  1) [000076] ------------ arg2 in r8      +--*  LCL_VAR   ref    V08 tmp6         u:2 (last use)
N009 (  1,  1) [000077] ------------ arg3 in r9      \--*  CNS_INT   int    2

***** BB01
STMT00028 (IL 0x017...  ???)
N004 (  8, 15) [000106] -A--G---R---              *  ASG       ref   
N003 (  3,  2) [000105] D------N----              +--*  LCL_VAR   ref    V10 tmp8         d:2
N002 (  4, 12) [000092] #---G-------              \--*  IND       ref   
N001 (  2, 10) [000091] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL]

***** BB01
STMT00029 (IL 0x017...  ???)
N004 (  8, 15) [000108] -A--G---R---              *  ASG       ref   
N003 (  3,  2) [000107] D------N----              +--*  LCL_VAR   ref    V11 tmp9         d:2
N002 (  4, 12) [000094] #---G-------              \--*  IND       ref   
N001 (  2, 10) [000093] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL]

***** BB01
STMT00026 (IL 0x017...  ???)
N004 (  7,  6) [000101] ------------              *  JTRUE     void  
N003 (  5,  4) [000100] J------N----              \--*  NE        int   
N001 (  3,  2) [000098] ------------                 +--*  LCL_VAR   int    V09 tmp7         u:2 (last use)
N002 (  1,  1) [000099] ------------                 \--*  CNS_INT   int    0

------------ BB02 [017..018), preds={BB01} succs={BB03}

***** BB02
STMT00027 (IL 0x017...  ???)
N005 ( 20, 11) [000104] --CXG-------              *  CALL      void   System.Diagnostics.Debug.Fail
N003 (  3,  2) [000102] ------------ arg0 in rcx  +--*  LCL_VAR   ref    V10 tmp8         u:2 (last use)
N004 (  3,  2) [000103] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V11 tmp9         u:2 (last use)

------------ BB03 [000..018) -> BB05 (cond), preds={BB01,BB02} succs={BB04,BB05}

***** BB03
STMT00009 (IL   ???...  ???)
N009 ( 33, 14) [000034] -ACXG---R---              *  ASG       ref   
N008 (  1,  1) [000033] D------N----              +--*  LCL_VAR   ref    V05 tmp3         d:2
N007 ( 33, 14) [000112] --CXG-------              \--*  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create
N004 ( 14,  5) [000188] -ACXG---R-L- arg1 SETUP      +--*  ASG       ref   
N003 (  1,  1) [000187] D------N----                 |  +--*  LCL_VAR   ref    V15 tmp13        d:2
N002 ( 14,  5) [000110] --CXG-------                 |  \--*  CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices
N005 (  1,  1) [000189] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V15 tmp13        u:2 (last use)
N006 (  1,  1) [000021] ------------ arg0 in rcx     \--*  LCL_VAR   ref    V04 tmp2         u:2 (last use)

***** BB03
STMT00034 (IL   ???...  ???)
N006 (  4,  7) [000129] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000128] D------N----              +--*  LCL_VAR   ref    V12 tmp10        d:2
N004 (  4,  7) [000118] ---XG-------              \--*  IND       ref   
N003 (  2,  5) [000192] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000036] ------------                    +--*  LCL_VAR   ref    V05 tmp3         u:2
N002 (  1,  4) [000191] ------------                    \--*  CNS_INT   long   136 field offset Fseq[_loader]

***** BB03
STMT00033 (IL   ???...  ???)
N006 (  7,  7) [000127] -A-XG-------              *  ASG       bool  
N004 (  5,  5) [000126] D--XG--N----              +--*  IND       bool  
N003 (  2,  2) [000194] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000124] ------------              |     +--*  LCL_VAR   ref    V12 tmp10        u:2 (last use)
N002 (  1,  1) [000193] ------------              |     \--*  CNS_INT   long   56 field offset Fseq[<LoadMetadataForReferencedProjects>k__BackingField]
N005 (  1,  1) [000125] ------------              \--*  CNS_INT   int    1

***** BB03
STMT00037 (IL 0x033...  ???)
N006 (  4,  7) [000143] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000142] D------N----              +--*  LCL_VAR   ref    V13 tmp11        d:2
N004 (  4,  7) [000132] ---XG-------              \--*  IND       ref   
N003 (  2,  5) [000196] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000040] ------------                    +--*  LCL_VAR   ref    V05 tmp3         u:2
N002 (  1,  4) [000195] ------------                    \--*  CNS_INT   long   136 field offset Fseq[_loader]

***** BB03
STMT00036 (IL 0x033...  ???)
N006 (  7,  7) [000141] -A-XG-------              *  ASG       bool  
N004 (  5,  5) [000140] D--XG--N----              +--*  IND       bool  
N003 (  2,  2) [000198] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000138] ------------              |     +--*  LCL_VAR   ref    V13 tmp11        u:2 (last use)
N002 (  1,  1) [000197] ------------              |     \--*  CNS_INT   long   57 field offset Fseq[<SkipUnrecognizedProjects>k__BackingField]
N005 (  1,  1) [000139] ------------              \--*  CNS_INT   int    1

***** BB03
STMT00038 (IL 0x03A...  ???)
N012 ( 26, 40) [000148] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage
N007 (  4,  7) [000145] ---XG------- this in rcx  +--*  IND       ref   
N006 (  2,  5) [000200] -------N----              |  \--*  ADD       byref 
N004 (  1,  1) [000044] ------------              |     +--*  LCL_VAR   ref    V05 tmp3         u:2
N005 (  1,  4) [000199] ------------              |     \--*  CNS_INT   long   136 field offset Fseq[_loader]
N009 (  4, 12) [000202] #---G------- arg1 in rdx  +--*  IND       ref   
N008 (  2, 10) [000201] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "ilproj"
N011 (  4, 12) [000204] #---G------- arg2 in r8   \--*  IND       ref   
N010 (  2, 10) [000203] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "IL"

***** BB03
STMT00039 (IL 0x04A...  ???)
N012 ( 26, 40) [000153] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage
N007 (  4,  7) [000150] ---XG------- this in rcx  +--*  IND       ref   
N006 (  2,  5) [000209] -------N----              |  \--*  ADD       byref 
N004 (  1,  1) [000048] ------------              |     +--*  LCL_VAR   ref    V05 tmp3         u:2
N005 (  1,  4) [000208] ------------              |     \--*  CNS_INT   long   136 field offset Fseq[_loader]
N009 (  4, 12) [000211] #---G------- arg1 in rdx  +--*  IND       ref   
N008 (  2, 10) [000210] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "vcxproj"
N011 (  4, 12) [000213] #---G------- arg2 in r8   \--*  IND       ref   
N010 (  2, 10) [000212] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "C++"

***** BB03
STMT00014 (IL 0x05A...  ???)
N005 ( 16, 16) [000058] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000057] D------N----              +--*  LCL_VAR   ref    V06 tmp4         d:2
N003 ( 16, 16) [000056] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000055] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB03
STMT00040 (IL   ???...  ???)
N004 (  5,  5) [000157] ------------              *  JTRUE     void  
N003 (  3,  3) [000156] J------N----              \--*  EQ        int   
N001 (  1,  1) [000053] ------------                 +--*  LCL_VAR   ref    V01 loc0         u:2
N002 (  1,  1) [000155] ------------                 \--*  CNS_INT   ref    null

------------ BB04 [000..000) (return), preds={BB03} succs={}

***** BB04
STMT00041 (IL   ???...  ???)
N006 (  6,  6) [000160] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000159] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000219] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000059] ------------              |     +--*  LCL_VAR   ref    V06 tmp4         u:2
N002 (  1,  1) [000218] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
N005 (  1,  1) [000158] ------------              \--*  LCL_VAR   ref    V01 loc0         u:2 (last use)

***** BB04
STMT00042 (IL   ???...  ???)
N006 (  7, 15) [000164] -A-XG-------              *  ASG       long  
N004 (  4,  4) [000163] D--XG--N----              +--*  IND       long  
N003 (  2,  2) [000221] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000161] ------------              |     +--*  LCL_VAR   ref    V06 tmp4         u:2
N002 (  1,  1) [000220] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
N005 (  2, 10) [000054] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

***** BB04
STMT00016 (IL 0x067...  ???)
N005 ( 16, 10) [000062] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed
N003 (  1,  1) [000052] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         u:2
N004 (  1,  1) [000061] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V06 tmp4         u:2 (last use)

***** BB04
STMT00017 (IL 0x06C...  ???)
N002 (  2,  2) [000063] ------------              *  RETURN    ref   
N001 (  1,  1) [000035] ------------              \--*  LCL_VAR   ref    V05 tmp3         u:2 (last use)

------------ BB05 [000..000) (throw), preds={BB03} succs={}

***** BB05
STMT00043 (IL   ???...  ???)
N001 ( 14,  5) [000165] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

-------------------------------------------------------------------------------------------------------------------

*************** Finishing PHASE Build SSA representation
Trees after Build SSA representation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)-> BB03 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB02 [0008]  1       BB01                  0.25    [017..018)                                     i hascall gcsafe 
BB03 [0009]  2       BB01,BB02             1       [000..018)-> BB05 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB04 [0020]  1       BB03                  1       [000..000)        (return)                     i internal label target hascall gcsafe newobj nullcheck 
BB05 [0019]  1       BB03                  0       [000..000)        (throw )                     i internal rare label target hascall gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06D) -> BB03 (cond), preds={} succs={BB02,BB03}

***** BB01
STMT00000 (IL 0x000...0x005)
N005 ( 16, 16) [000003] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000002] D------N----              +--*  LCL_VAR   ref    V03 tmp1         d:2
N003 ( 16, 16) [000001] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000000] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB01
STMT00002 (IL 0x005...  ???)
N003 (  1,  3) [000008] -A------R---              *  ASG       ref   
N002 (  1,  1) [000007] D------N----              +--*  LCL_VAR   ref    V01 loc0         d:2
N001 (  1,  1) [000006] ------------              \--*  LCL_VAR   ref    V03 tmp1         u:2

***** BB01
STMT00003 (IL 0x006...0x008)
N006 (  6,  6) [000012] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000011] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000170] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000009] ------------              |     +--*  LCL_VAR   ref    V03 tmp1         u:2 (last use)
N002 (  1,  1) [000169] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[projectPath]
N005 (  1,  1) [000010] ------------              \--*  LCL_VAR   ref    V00 arg0         u:1 (last use)

***** BB01
STMT00005 (IL   ???...  ???)
N005 ( 16, 16) [000018] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000017] D------N----              +--*  LCL_VAR   ref    V04 tmp2         d:2
N003 ( 16, 16) [000016] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000015] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00020 (IL   ???...  ???)
N004 (  4, 12) [000073] -A--G---R---              *  ASG       ref   
N003 (  1,  1) [000072] D------N----              +--*  LCL_VAR   ref    V07 tmp5         d:2
N002 (  4, 12) [000067] n---G-------              \--*  IND       ref   
N001 (  2, 10) [000172] I-----------                 \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[Instance]

***** BB01
STMT00019 (IL   ???...  ???)
N007 ( 17, 12) [000071] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor
N004 (  1,  1) [000019] ------------ this in rcx  +--*  LCL_VAR   ref    V04 tmp2         u:2
N005 (  1,  1) [000070] ------------ arg2 in r8   +--*  LCL_VAR   ref    V07 tmp5         u:2 (last use)
N006 (  1,  1) [000069] ------------ arg1 in rdx  \--*  CNS_INT   int    0

***** BB01
STMT00023 (IL 0x017...  ???)
N010 ( 21, 33) [000088] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000087] D------N----              +--*  LCL_VAR   ref    V08 tmp6         d:2
N008 ( 21, 33) [000029] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 21) [000028] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000026] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc86100028
N004 (  1,  4) [000027] ------------ arg1 in rdx     |  \--*  CNS_INT   int    215
N007 (  4, 12) [000024] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000178] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[FalseString]

***** BB01
STMT00024 (IL 0x017...  ???)
N002 (  2,  2) [000086] ---X--------              *  NULLCHECK byte  
N001 (  1,  1) [000085] ------------              \--*  LCL_VAR   ref    V04 tmp2         u:2

***** BB01
STMT00021 (IL 0x017...  ???)
N012 ( 25, 28) [000081] -ACXG---R---              *  ASG       bool  
N011 (  3,  2) [000080] D------N----              +--*  LCL_VAR   int    V09 tmp7         d:2
N010 ( 21, 25) [000078] --CXG-------              \--*  CALL      int    System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].TryInsert
N006 (  4, 12) [000180] #---G------- arg1 in rdx     +--*  IND       ref   
N005 (  2, 10) [000179] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "AlwaysCompileMarkupFilesInSeparateDomain"
N007 (  1,  1) [000022] ------------ this in rcx     +--*  LCL_VAR   ref    V04 tmp2         u:2
N008 (  1,  1) [000076] ------------ arg2 in r8      +--*  LCL_VAR   ref    V08 tmp6         u:2 (last use)
N009 (  1,  1) [000077] ------------ arg3 in r9      \--*  CNS_INT   int    2

***** BB01
STMT00028 (IL 0x017...  ???)
N004 (  8, 15) [000106] -A--G---R---              *  ASG       ref   
N003 (  3,  2) [000105] D------N----              +--*  LCL_VAR   ref    V10 tmp8         d:2
N002 (  4, 12) [000092] #---G-------              \--*  IND       ref   
N001 (  2, 10) [000091] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL]

***** BB01
STMT00029 (IL 0x017...  ???)
N004 (  8, 15) [000108] -A--G---R---              *  ASG       ref   
N003 (  3,  2) [000107] D------N----              +--*  LCL_VAR   ref    V11 tmp9         d:2
N002 (  4, 12) [000094] #---G-------              \--*  IND       ref   
N001 (  2, 10) [000093] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL]

***** BB01
STMT00026 (IL 0x017...  ???)
N004 (  7,  6) [000101] ------------              *  JTRUE     void  
N003 (  5,  4) [000100] J------N----              \--*  NE        int   
N001 (  3,  2) [000098] ------------                 +--*  LCL_VAR   int    V09 tmp7         u:2 (last use)
N002 (  1,  1) [000099] ------------                 \--*  CNS_INT   int    0

------------ BB02 [017..018), preds={BB01} succs={BB03}

***** BB02
STMT00027 (IL 0x017...  ???)
N005 ( 20, 11) [000104] --CXG-------              *  CALL      void   System.Diagnostics.Debug.Fail
N003 (  3,  2) [000102] ------------ arg0 in rcx  +--*  LCL_VAR   ref    V10 tmp8         u:2 (last use)
N004 (  3,  2) [000103] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V11 tmp9         u:2 (last use)

------------ BB03 [000..018) -> BB05 (cond), preds={BB01,BB02} succs={BB04,BB05}

***** BB03
STMT00009 (IL   ???...  ???)
N009 ( 33, 14) [000034] -ACXG---R---              *  ASG       ref   
N008 (  1,  1) [000033] D------N----              +--*  LCL_VAR   ref    V05 tmp3         d:2
N007 ( 33, 14) [000112] --CXG-------              \--*  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create
N004 ( 14,  5) [000188] -ACXG---R-L- arg1 SETUP      +--*  ASG       ref   
N003 (  1,  1) [000187] D------N----                 |  +--*  LCL_VAR   ref    V15 tmp13        d:2
N002 ( 14,  5) [000110] --CXG-------                 |  \--*  CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices
N005 (  1,  1) [000189] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V15 tmp13        u:2 (last use)
N006 (  1,  1) [000021] ------------ arg0 in rcx     \--*  LCL_VAR   ref    V04 tmp2         u:2 (last use)

***** BB03
STMT00034 (IL   ???...  ???)
N006 (  4,  7) [000129] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000128] D------N----              +--*  LCL_VAR   ref    V12 tmp10        d:2
N004 (  4,  7) [000118] ---XG-------              \--*  IND       ref   
N003 (  2,  5) [000192] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000036] ------------                    +--*  LCL_VAR   ref    V05 tmp3         u:2
N002 (  1,  4) [000191] ------------                    \--*  CNS_INT   long   136 field offset Fseq[_loader]

***** BB03
STMT00033 (IL   ???...  ???)
N006 (  7,  7) [000127] -A-XG-------              *  ASG       bool  
N004 (  5,  5) [000126] D--XG--N----              +--*  IND       bool  
N003 (  2,  2) [000194] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000124] ------------              |     +--*  LCL_VAR   ref    V12 tmp10        u:2 (last use)
N002 (  1,  1) [000193] ------------              |     \--*  CNS_INT   long   56 field offset Fseq[<LoadMetadataForReferencedProjects>k__BackingField]
N005 (  1,  1) [000125] ------------              \--*  CNS_INT   int    1

***** BB03
STMT00037 (IL 0x033...  ???)
N006 (  4,  7) [000143] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000142] D------N----              +--*  LCL_VAR   ref    V13 tmp11        d:2
N004 (  4,  7) [000132] ---XG-------              \--*  IND       ref   
N003 (  2,  5) [000196] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000040] ------------                    +--*  LCL_VAR   ref    V05 tmp3         u:2
N002 (  1,  4) [000195] ------------                    \--*  CNS_INT   long   136 field offset Fseq[_loader]

***** BB03
STMT00036 (IL 0x033...  ???)
N006 (  7,  7) [000141] -A-XG-------              *  ASG       bool  
N004 (  5,  5) [000140] D--XG--N----              +--*  IND       bool  
N003 (  2,  2) [000198] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000138] ------------              |     +--*  LCL_VAR   ref    V13 tmp11        u:2 (last use)
N002 (  1,  1) [000197] ------------              |     \--*  CNS_INT   long   57 field offset Fseq[<SkipUnrecognizedProjects>k__BackingField]
N005 (  1,  1) [000139] ------------              \--*  CNS_INT   int    1

***** BB03
STMT00038 (IL 0x03A...  ???)
N012 ( 26, 40) [000148] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage
N007 (  4,  7) [000145] ---XG------- this in rcx  +--*  IND       ref   
N006 (  2,  5) [000200] -------N----              |  \--*  ADD       byref 
N004 (  1,  1) [000044] ------------              |     +--*  LCL_VAR   ref    V05 tmp3         u:2
N005 (  1,  4) [000199] ------------              |     \--*  CNS_INT   long   136 field offset Fseq[_loader]
N009 (  4, 12) [000202] #---G------- arg1 in rdx  +--*  IND       ref   
N008 (  2, 10) [000201] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "ilproj"
N011 (  4, 12) [000204] #---G------- arg2 in r8   \--*  IND       ref   
N010 (  2, 10) [000203] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "IL"

***** BB03
STMT00039 (IL 0x04A...  ???)
N012 ( 26, 40) [000153] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage
N007 (  4,  7) [000150] ---XG------- this in rcx  +--*  IND       ref   
N006 (  2,  5) [000209] -------N----              |  \--*  ADD       byref 
N004 (  1,  1) [000048] ------------              |     +--*  LCL_VAR   ref    V05 tmp3         u:2
N005 (  1,  4) [000208] ------------              |     \--*  CNS_INT   long   136 field offset Fseq[_loader]
N009 (  4, 12) [000211] #---G------- arg1 in rdx  +--*  IND       ref   
N008 (  2, 10) [000210] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "vcxproj"
N011 (  4, 12) [000213] #---G------- arg2 in r8   \--*  IND       ref   
N010 (  2, 10) [000212] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "C++"

***** BB03
STMT00014 (IL 0x05A...  ???)
N005 ( 16, 16) [000058] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000057] D------N----              +--*  LCL_VAR   ref    V06 tmp4         d:2
N003 ( 16, 16) [000056] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000055] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB03
STMT00040 (IL   ???...  ???)
N004 (  5,  5) [000157] ------------              *  JTRUE     void  
N003 (  3,  3) [000156] J------N----              \--*  EQ        int   
N001 (  1,  1) [000053] ------------                 +--*  LCL_VAR   ref    V01 loc0         u:2
N002 (  1,  1) [000155] ------------                 \--*  CNS_INT   ref    null

------------ BB04 [000..000) (return), preds={BB03} succs={}

***** BB04
STMT00041 (IL   ???...  ???)
N006 (  6,  6) [000160] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000159] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000219] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000059] ------------              |     +--*  LCL_VAR   ref    V06 tmp4         u:2
N002 (  1,  1) [000218] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
N005 (  1,  1) [000158] ------------              \--*  LCL_VAR   ref    V01 loc0         u:2 (last use)

***** BB04
STMT00042 (IL   ???...  ???)
N006 (  7, 15) [000164] -A-XG-------              *  ASG       long  
N004 (  4,  4) [000163] D--XG--N----              +--*  IND       long  
N003 (  2,  2) [000221] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000161] ------------              |     +--*  LCL_VAR   ref    V06 tmp4         u:2
N002 (  1,  1) [000220] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
N005 (  2, 10) [000054] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

***** BB04
STMT00016 (IL 0x067...  ???)
N005 ( 16, 10) [000062] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed
N003 (  1,  1) [000052] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         u:2
N004 (  1,  1) [000061] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V06 tmp4         u:2 (last use)

***** BB04
STMT00017 (IL 0x06C...  ???)
N002 (  2,  2) [000063] ------------              *  RETURN    ref   
N001 (  1,  1) [000035] ------------              \--*  LCL_VAR   ref    V05 tmp3         u:2 (last use)

------------ BB05 [000..000) (throw), preds={BB03} succs={}

***** BB05
STMT00043 (IL   ???...  ???)
N001 ( 14,  5) [000165] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist

*************** Starting PHASE Early Value Propagation
*************** In optEarlyProp()

After optEarlyProp:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)-> BB03 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB02 [0008]  1       BB01                  0.25    [017..018)                                     i hascall gcsafe 
BB03 [0009]  2       BB01,BB02             1       [000..018)-> BB05 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB04 [0020]  1       BB03                  1       [000..000)        (return)                     i internal label target hascall gcsafe newobj nullcheck 
BB05 [0019]  1       BB03                  0       [000..000)        (throw )                     i internal rare label target hascall gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06D) -> BB03 (cond), preds={} succs={BB02,BB03}

***** BB01
STMT00000 (IL 0x000...0x005)
N005 ( 16, 16) [000003] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000002] D------N----              +--*  LCL_VAR   ref    V03 tmp1         d:2
N003 ( 16, 16) [000001] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000000] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB01
STMT00002 (IL 0x005...  ???)
N003 (  1,  3) [000008] -A------R---              *  ASG       ref   
N002 (  1,  1) [000007] D------N----              +--*  LCL_VAR   ref    V01 loc0         d:2
N001 (  1,  1) [000006] ------------              \--*  LCL_VAR   ref    V03 tmp1         u:2

***** BB01
STMT00003 (IL 0x006...0x008)
N006 (  6,  6) [000012] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000011] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000170] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000009] ------------              |     +--*  LCL_VAR   ref    V03 tmp1         u:2 (last use)
N002 (  1,  1) [000169] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[projectPath]
N005 (  1,  1) [000010] ------------              \--*  LCL_VAR   ref    V00 arg0         u:1 (last use)

***** BB01
STMT00005 (IL   ???...  ???)
N005 ( 16, 16) [000018] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000017] D------N----              +--*  LCL_VAR   ref    V04 tmp2         d:2
N003 ( 16, 16) [000016] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000015] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00020 (IL   ???...  ???)
N004 (  4, 12) [000073] -A--G---R---              *  ASG       ref   
N003 (  1,  1) [000072] D------N----              +--*  LCL_VAR   ref    V07 tmp5         d:2
N002 (  4, 12) [000067] n---G-------              \--*  IND       ref   
N001 (  2, 10) [000172] I-----------                 \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[Instance]

***** BB01
STMT00019 (IL   ???...  ???)
N007 ( 17, 12) [000071] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor
N004 (  1,  1) [000019] ------------ this in rcx  +--*  LCL_VAR   ref    V04 tmp2         u:2
N005 (  1,  1) [000070] ------------ arg2 in r8   +--*  LCL_VAR   ref    V07 tmp5         u:2 (last use)
N006 (  1,  1) [000069] ------------ arg1 in rdx  \--*  CNS_INT   int    0

***** BB01
STMT00023 (IL 0x017...  ???)
N010 ( 21, 33) [000088] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000087] D------N----              +--*  LCL_VAR   ref    V08 tmp6         d:2
N008 ( 21, 33) [000029] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 21) [000028] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000026] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc86100028
N004 (  1,  4) [000027] ------------ arg1 in rdx     |  \--*  CNS_INT   int    215
N007 (  4, 12) [000024] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000178] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[FalseString]

***** BB01
STMT00024 (IL 0x017...  ???)
N002 (  2,  2) [000086] ---X--------              *  NULLCHECK byte  
N001 (  1,  1) [000085] ------------              \--*  LCL_VAR   ref    V04 tmp2         u:2

***** BB01
STMT00021 (IL 0x017...  ???)
N012 ( 25, 28) [000081] -ACXG---R---              *  ASG       bool  
N011 (  3,  2) [000080] D------N----              +--*  LCL_VAR   int    V09 tmp7         d:2
N010 ( 21, 25) [000078] --CXG-------              \--*  CALL      int    System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].TryInsert
N006 (  4, 12) [000180] #---G------- arg1 in rdx     +--*  IND       ref   
N005 (  2, 10) [000179] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "AlwaysCompileMarkupFilesInSeparateDomain"
N007 (  1,  1) [000022] ------------ this in rcx     +--*  LCL_VAR   ref    V04 tmp2         u:2
N008 (  1,  1) [000076] ------------ arg2 in r8      +--*  LCL_VAR   ref    V08 tmp6         u:2 (last use)
N009 (  1,  1) [000077] ------------ arg3 in r9      \--*  CNS_INT   int    2

***** BB01
STMT00028 (IL 0x017...  ???)
N004 (  8, 15) [000106] -A--G---R---              *  ASG       ref   
N003 (  3,  2) [000105] D------N----              +--*  LCL_VAR   ref    V10 tmp8         d:2
N002 (  4, 12) [000092] #---G-------              \--*  IND       ref   
N001 (  2, 10) [000091] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL]

***** BB01
STMT00029 (IL 0x017...  ???)
N004 (  8, 15) [000108] -A--G---R---              *  ASG       ref   
N003 (  3,  2) [000107] D------N----              +--*  LCL_VAR   ref    V11 tmp9         d:2
N002 (  4, 12) [000094] #---G-------              \--*  IND       ref   
N001 (  2, 10) [000093] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL]

***** BB01
STMT00026 (IL 0x017...  ???)
N004 (  7,  6) [000101] ------------              *  JTRUE     void  
N003 (  5,  4) [000100] J------N----              \--*  NE        int   
N001 (  3,  2) [000098] ------------                 +--*  LCL_VAR   int    V09 tmp7         u:2 (last use)
N002 (  1,  1) [000099] ------------                 \--*  CNS_INT   int    0

------------ BB02 [017..018), preds={BB01} succs={BB03}

***** BB02
STMT00027 (IL 0x017...  ???)
N005 ( 20, 11) [000104] --CXG-------              *  CALL      void   System.Diagnostics.Debug.Fail
N003 (  3,  2) [000102] ------------ arg0 in rcx  +--*  LCL_VAR   ref    V10 tmp8         u:2 (last use)
N004 (  3,  2) [000103] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V11 tmp9         u:2 (last use)

------------ BB03 [000..018) -> BB05 (cond), preds={BB01,BB02} succs={BB04,BB05}

***** BB03
STMT00009 (IL   ???...  ???)
N009 ( 33, 14) [000034] -ACXG---R---              *  ASG       ref   
N008 (  1,  1) [000033] D------N----              +--*  LCL_VAR   ref    V05 tmp3         d:2
N007 ( 33, 14) [000112] --CXG-------              \--*  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create
N004 ( 14,  5) [000188] -ACXG---R-L- arg1 SETUP      +--*  ASG       ref   
N003 (  1,  1) [000187] D------N----                 |  +--*  LCL_VAR   ref    V15 tmp13        d:2
N002 ( 14,  5) [000110] --CXG-------                 |  \--*  CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices
N005 (  1,  1) [000189] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V15 tmp13        u:2 (last use)
N006 (  1,  1) [000021] ------------ arg0 in rcx     \--*  LCL_VAR   ref    V04 tmp2         u:2 (last use)

***** BB03
STMT00034 (IL   ???...  ???)
N006 (  4,  7) [000129] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000128] D------N----              +--*  LCL_VAR   ref    V12 tmp10        d:2
N004 (  4,  7) [000118] ---XG-------              \--*  IND       ref   
N003 (  2,  5) [000192] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000036] ------------                    +--*  LCL_VAR   ref    V05 tmp3         u:2
N002 (  1,  4) [000191] ------------                    \--*  CNS_INT   long   136 field offset Fseq[_loader]

***** BB03
STMT00033 (IL   ???...  ???)
N006 (  7,  7) [000127] -A-XG-------              *  ASG       bool  
N004 (  5,  5) [000126] D--XG--N----              +--*  IND       bool  
N003 (  2,  2) [000194] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000124] ------------              |     +--*  LCL_VAR   ref    V12 tmp10        u:2 (last use)
N002 (  1,  1) [000193] ------------              |     \--*  CNS_INT   long   56 field offset Fseq[<LoadMetadataForReferencedProjects>k__BackingField]
N005 (  1,  1) [000125] ------------              \--*  CNS_INT   int    1

***** BB03
STMT00037 (IL 0x033...  ???)
N006 (  4,  7) [000143] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000142] D------N----              +--*  LCL_VAR   ref    V13 tmp11        d:2
N004 (  4,  7) [000132] ---XG-------              \--*  IND       ref   
N003 (  2,  5) [000196] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000040] ------------                    +--*  LCL_VAR   ref    V05 tmp3         u:2
N002 (  1,  4) [000195] ------------                    \--*  CNS_INT   long   136 field offset Fseq[_loader]

***** BB03
STMT00036 (IL 0x033...  ???)
N006 (  7,  7) [000141] -A-XG-------              *  ASG       bool  
N004 (  5,  5) [000140] D--XG--N----              +--*  IND       bool  
N003 (  2,  2) [000198] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000138] ------------              |     +--*  LCL_VAR   ref    V13 tmp11        u:2 (last use)
N002 (  1,  1) [000197] ------------              |     \--*  CNS_INT   long   57 field offset Fseq[<SkipUnrecognizedProjects>k__BackingField]
N005 (  1,  1) [000139] ------------              \--*  CNS_INT   int    1

***** BB03
STMT00038 (IL 0x03A...  ???)
N012 ( 26, 40) [000148] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage
N007 (  4,  7) [000145] ---XG------- this in rcx  +--*  IND       ref   
N006 (  2,  5) [000200] -------N----              |  \--*  ADD       byref 
N004 (  1,  1) [000044] ------------              |     +--*  LCL_VAR   ref    V05 tmp3         u:2
N005 (  1,  4) [000199] ------------              |     \--*  CNS_INT   long   136 field offset Fseq[_loader]
N009 (  4, 12) [000202] #---G------- arg1 in rdx  +--*  IND       ref   
N008 (  2, 10) [000201] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "ilproj"
N011 (  4, 12) [000204] #---G------- arg2 in r8   \--*  IND       ref   
N010 (  2, 10) [000203] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "IL"

***** BB03
STMT00039 (IL 0x04A...  ???)
N012 ( 26, 40) [000153] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage
N007 (  4,  7) [000150] ---XG------- this in rcx  +--*  IND       ref   
N006 (  2,  5) [000209] -------N----              |  \--*  ADD       byref 
N004 (  1,  1) [000048] ------------              |     +--*  LCL_VAR   ref    V05 tmp3         u:2
N005 (  1,  4) [000208] ------------              |     \--*  CNS_INT   long   136 field offset Fseq[_loader]
N009 (  4, 12) [000211] #---G------- arg1 in rdx  +--*  IND       ref   
N008 (  2, 10) [000210] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "vcxproj"
N011 (  4, 12) [000213] #---G------- arg2 in r8   \--*  IND       ref   
N010 (  2, 10) [000212] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "C++"

***** BB03
STMT00014 (IL 0x05A...  ???)
N005 ( 16, 16) [000058] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000057] D------N----              +--*  LCL_VAR   ref    V06 tmp4         d:2
N003 ( 16, 16) [000056] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000055] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB03
STMT00040 (IL   ???...  ???)
N004 (  5,  5) [000157] ------------              *  JTRUE     void  
N003 (  3,  3) [000156] J------N----              \--*  EQ        int   
N001 (  1,  1) [000053] ------------                 +--*  LCL_VAR   ref    V01 loc0         u:2
N002 (  1,  1) [000155] ------------                 \--*  CNS_INT   ref    null

------------ BB04 [000..000) (return), preds={BB03} succs={}

***** BB04
STMT00041 (IL   ???...  ???)
N006 (  6,  6) [000160] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000159] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000219] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000059] ------------              |     +--*  LCL_VAR   ref    V06 tmp4         u:2
N002 (  1,  1) [000218] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
N005 (  1,  1) [000158] ------------              \--*  LCL_VAR   ref    V01 loc0         u:2 (last use)

***** BB04
STMT00042 (IL   ???...  ???)
N006 (  7, 15) [000164] -A-XG-------              *  ASG       long  
N004 (  4,  4) [000163] D--XG--N----              +--*  IND       long  
N003 (  2,  2) [000221] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000161] ------------              |     +--*  LCL_VAR   ref    V06 tmp4         u:2
N002 (  1,  1) [000220] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
N005 (  2, 10) [000054] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

***** BB04
STMT00016 (IL 0x067...  ???)
N005 ( 16, 10) [000062] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed
N003 (  1,  1) [000052] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         u:2
N004 (  1,  1) [000061] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V06 tmp4         u:2 (last use)

***** BB04
STMT00017 (IL 0x06C...  ???)
N002 (  2,  2) [000063] ------------              *  RETURN    ref   
N001 (  1,  1) [000035] ------------              \--*  LCL_VAR   ref    V05 tmp3         u:2 (last use)

------------ BB05 [000..000) (throw), preds={BB03} succs={}

***** BB05
STMT00043 (IL   ???...  ???)
N001 ( 14,  5) [000165] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

-------------------------------------------------------------------------------------------------------------------

*************** Finishing PHASE Early Value Propagation

*************** Starting PHASE Do value numbering

*************** In fgValueNumber()
Memory Initial Value in BB01 is: $81
The SSA definition for ByrefExposed (#1) at start of BB01 is $81 {InitVal($41)}
The SSA definition for GcHeap (#1) at start of BB01 is $81 {InitVal($41)}

***** BB01, STMT00000(before)
N005 ( 16, 16) [000003] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000002] D------N----              +--*  LCL_VAR   ref    V03 tmp1         d:2
N003 ( 16, 16) [000001] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000000] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

N001 [000168]   ARGPLACE  => $c0 {c0}
N002 [000000]   CNS_INT(h) 0xd1ffab1e method => $100 {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000168] updated to $100 {Hnd const: 0x00000000D1FFAB1E}
N003 [000001]   CALL help => $180 {JitNew($100, $140)}
N004 [000002]   LCL_VAR   V03 tmp1         d:2 => $180 {JitNew($100, $140)}
N005 [000003]   ASG       => $180 {JitNew($100, $140)}

***** BB01, STMT00000(after)
N005 ( 16, 16) [000003] -AC-----R---              *  ASG       ref    $180
N004 (  1,  1) [000002] D------N----              +--*  LCL_VAR   ref    V03 tmp1         d:2 $180
N003 ( 16, 16) [000001] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $180
N002 (  2, 10) [000000] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $100

---------

***** BB01, STMT00002(before)
N003 (  1,  3) [000008] -A------R---              *  ASG       ref   
N002 (  1,  1) [000007] D------N----              +--*  LCL_VAR   ref    V01 loc0         d:2
N001 (  1,  1) [000006] ------------              \--*  LCL_VAR   ref    V03 tmp1         u:2

N001 [000006]   LCL_VAR   V03 tmp1         u:2 => $180 {JitNew($100, $140)}
N002 [000007]   LCL_VAR   V01 loc0         d:2 => $180 {JitNew($100, $140)}
N003 [000008]   ASG       => $180 {JitNew($100, $140)}

***** BB01, STMT00002(after)
N003 (  1,  3) [000008] -A------R---              *  ASG       ref    $180
N002 (  1,  1) [000007] D------N----              +--*  LCL_VAR   ref    V01 loc0         d:2 $180
N001 (  1,  1) [000006] ------------              \--*  LCL_VAR   ref    V03 tmp1         u:2 $180

---------

***** BB01, STMT00003(before)
N006 (  6,  6) [000012] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000011] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000170] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000009] ------------              |     +--*  LCL_VAR   ref    V03 tmp1         u:2 (last use)
N002 (  1,  1) [000169] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[projectPath]
N005 (  1,  1) [000010] ------------              \--*  LCL_VAR   ref    V00 arg0         u:1 (last use)

N001 [000009]   LCL_VAR   V03 tmp1         u:2 (last use) => $180 {JitNew($100, $140)}
N002 [000169]   CNS_INT   8 field offset Fseq[projectPath] => $1c0 {LngCns:  8}
N003 [000170]   ADD       => $200 {ADD($180, $1c0)}
N005 [000010]   LCL_VAR   V00 arg0         u:1 (last use) => $80 {InitVal($40)}
  VNApplySelectors:
    VNForHandle(projectPath) is $101, fieldType is ref
    VNForMapSelect($81, $101):ref returns $181 {$81[$101]}
    VNForMapSelect($181, $180):ref returns $182 {$181[$180]}
    VNForMapStore($181, $180, $80):ref returns $240 {$181[$180 := $80]}
  VNApplySelectorsAssign:
    VNForHandle(projectPath) is $101, fieldType is ref
    VNForMapStore($81, $101, $240):ref returns $241 {$81[$101 := $240]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000012] to VN: $241.
N006 [000012]   ASG       => $VN.Void

***** BB01, STMT00003(after)
N006 (  6,  6) [000012] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000011] D--XG--N----              +--*  IND       ref    $80
N003 (  2,  2) [000170] -------N----              |  \--*  ADD       byref  $200
N001 (  1,  1) [000009] ------------              |     +--*  LCL_VAR   ref    V03 tmp1         u:2 (last use) $180
N002 (  1,  1) [000169] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[projectPath] $1c0
N005 (  1,  1) [000010] ------------              \--*  LCL_VAR   ref    V00 arg0         u:1 (last use) $80

---------

***** BB01, STMT00005(before)
N005 ( 16, 16) [000018] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000017] D------N----              +--*  LCL_VAR   ref    V04 tmp2         d:2
N003 ( 16, 16) [000016] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000015] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

N001 [000171]   ARGPLACE  => $c1 {c1}
N002 [000015]   CNS_INT(h) 0xd1ffab1e token => $102 {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000171] updated to $102 {Hnd const: 0x00000000D1FFAB1E}
N003 [000016]   CALL help => $183 {JitNew($102, $143)}
N004 [000017]   LCL_VAR   V04 tmp2         d:2 => $183 {JitNew($102, $143)}
N005 [000018]   ASG       => $183 {JitNew($102, $143)}

***** BB01, STMT00005(after)
N005 ( 16, 16) [000018] -AC-----R---              *  ASG       ref    $183
N004 (  1,  1) [000017] D------N----              +--*  LCL_VAR   ref    V04 tmp2         d:2 $183
N003 ( 16, 16) [000016] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $183
N002 (  2, 10) [000015] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $102

---------

***** BB01, STMT00020(before)
N004 (  4, 12) [000073] -A--G---R---              *  ASG       ref   
N003 (  1,  1) [000072] D------N----              +--*  LCL_VAR   ref    V07 tmp5         d:2
N002 (  4, 12) [000067] n---G-------              \--*  IND       ref   
N001 (  2, 10) [000172] I-----------                 \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[Instance]

N001 [000172]   CNS_INT(h) 0xd1ffab1e static Fseq[Instance] => $103 {Hnd const: 0x00000000D1FFAB1E}
N002 [000067]   IND       => <l:$242 {ByrefExposedLoad($42, $103, $241)}, c:$145 {145}>
N003 [000072]   LCL_VAR   V07 tmp5         d:2 => <l:$242 {ByrefExposedLoad($42, $103, $241)}, c:$145 {145}>
N004 [000073]   ASG       => <l:$242 {ByrefExposedLoad($42, $103, $241)}, c:$145 {145}>

***** BB01, STMT00020(after)
N004 (  4, 12) [000073] -A--G---R---              *  ASG       ref    <l:$242, c:$145>
N003 (  1,  1) [000072] D------N----              +--*  LCL_VAR   ref    V07 tmp5         d:2 <l:$242, c:$145>
N002 (  4, 12) [000067] n---G-------              \--*  IND       ref    <l:$242, c:$145>
N001 (  2, 10) [000172] I-----------                 \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[Instance] $103

---------

***** BB01, STMT00019(before)
N007 ( 17, 12) [000071] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor
N004 (  1,  1) [000019] ------------ this in rcx  +--*  LCL_VAR   ref    V04 tmp2         u:2
N005 (  1,  1) [000070] ------------ arg2 in r8   +--*  LCL_VAR   ref    V07 tmp5         u:2 (last use)
N006 (  1,  1) [000069] ------------ arg1 in rdx  \--*  CNS_INT   int    0

N001 [000173]   ARGPLACE  => $147 {147}
N002 [000175]   ARGPLACE  => $280 {280}
N003 [000174]   ARGPLACE  => $148 {148}
N004 [000019]   LCL_VAR   V04 tmp2         u:2 => $183 {JitNew($102, $143)}
N005 [000070]   LCL_VAR   V07 tmp5         u:2 (last use) => <l:$242 {ByrefExposedLoad($42, $103, $241)}, c:$145 {145}>
N006 [000069]   CNS_INT   0 => $40 {IntCns 0}
VN of ARGPLACE tree [000175] updated to $183 {JitNew($102, $143)}
VN of ARGPLACE tree [000174] updated to $40 {IntCns 0}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000071] to VN: $149.
N007 [000071]   CALL      => $VN.Void

***** BB01, STMT00019(after)
N007 ( 17, 12) [000071] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor $VN.Void
N004 (  1,  1) [000019] ------------ this in rcx  +--*  LCL_VAR   ref    V04 tmp2         u:2 $183
N005 (  1,  1) [000070] ------------ arg2 in r8   +--*  LCL_VAR   ref    V07 tmp5         u:2 (last use) <l:$242, c:$145>
N006 (  1,  1) [000069] ------------ arg1 in rdx  \--*  CNS_INT   int    0 $40

---------

***** BB01, STMT00023(before)
N010 ( 21, 33) [000088] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000087] D------N----              +--*  LCL_VAR   ref    V08 tmp6         d:2
N008 ( 21, 33) [000029] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 21) [000028] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000026] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc86100028
N004 (  1,  4) [000027] ------------ arg1 in rdx     |  \--*  CNS_INT   int    215
N007 (  4, 12) [000024] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000178] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[FalseString]

N001 [000176]   ARGPLACE  => $c2 {c2}
N002 [000177]   ARGPLACE  => $281 {281}
N003 [000026]   CNS_INT   0x7ffc86100028 => $1c1 {LngCns:  0x7ffc86100028}
N004 [000027]   CNS_INT   215 => $43 {IntCns 215}
VN of ARGPLACE tree [000176] updated to $1c1 {LngCns:  0x7ffc86100028}
VN of ARGPLACE tree [000177] updated to $43 {IntCns 215}
N005 [000028]   CALL help => $301 {norm=$300 {GetsharedNongcstaticBase($1c1, $43)}, exc=$184 {HelperMultipleExc()}}
N006 [000178]   CNS_INT(h) 0xd1ffab1e static Fseq[FalseString] => $104 {Hnd const: 0x00000000D1FFAB1E}
N007 [000024]   IND       => <l:$243 {ByrefExposedLoad($42, $104, $149)}, c:$14a {14a}>
N008 [000029]   COMMA     => <l:$186 {norm=$243 {ByrefExposedLoad($42, $104, $149)}, exc=$184 {HelperMultipleExc()}}, c:$185 {norm=$14a {14a}, exc=$184 {HelperMultipleExc()}}>
N009 [000087]   LCL_VAR   V08 tmp6         d:2 => <l:$243 {ByrefExposedLoad($42, $104, $149)}, c:$14a {14a}>
N010 [000088]   ASG       => <l:$186 {norm=$243 {ByrefExposedLoad($42, $104, $149)}, exc=$184 {HelperMultipleExc()}}, c:$185 {norm=$14a {14a}, exc=$184 {HelperMultipleExc()}}>

***** BB01, STMT00023(after)
N010 ( 21, 33) [000088] -ACXG---R---              *  ASG       ref    <l:$186, c:$185>
N009 (  1,  1) [000087] D------N----              +--*  LCL_VAR   ref    V08 tmp6         d:2 <l:$243, c:$14a>
N008 ( 21, 33) [000029] --CXG-------              \--*  COMMA     ref    <l:$186, c:$185>
N005 ( 17, 21) [000028] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $301
N003 (  2, 10) [000026] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc86100028 $1c1
N004 (  1,  4) [000027] ------------ arg1 in rdx     |  \--*  CNS_INT   int    215 $43
N007 (  4, 12) [000024] n---G-------                 \--*  IND       ref    <l:$243, c:$14a>
N006 (  2, 10) [000178] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[FalseString] $104

---------

***** BB01, STMT00024(before)
N002 (  2,  2) [000086] ---X--------              *  NULLCHECK byte  
N001 (  1,  1) [000085] ------------              \--*  LCL_VAR   ref    V04 tmp2         u:2

N001 [000085]   LCL_VAR   V04 tmp2         u:2 => $183 {JitNew($102, $143)}
N002 [000086]   NULLCHECK => $188 {norm=$3 {3}, exc=$187 {NullPtrExc($183)}}

***** BB01, STMT00024(after)
N002 (  2,  2) [000086] ---X--------              *  NULLCHECK byte   $188
N001 (  1,  1) [000085] ------------              \--*  LCL_VAR   ref    V04 tmp2         u:2 $183

---------

***** BB01, STMT00021(before)
N012 ( 25, 28) [000081] -ACXG---R---              *  ASG       bool  
N011 (  3,  2) [000080] D------N----              +--*  LCL_VAR   int    V09 tmp7         d:2
N010 ( 21, 25) [000078] --CXG-------              \--*  CALL      int    System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].TryInsert
N006 (  4, 12) [000180] #---G------- arg1 in rdx     +--*  IND       ref   
N005 (  2, 10) [000179] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "AlwaysCompileMarkupFilesInSeparateDomain"
N007 (  1,  1) [000022] ------------ this in rcx     +--*  LCL_VAR   ref    V04 tmp2         u:2
N008 (  1,  1) [000076] ------------ arg2 in r8      +--*  LCL_VAR   ref    V08 tmp6         u:2 (last use)
N009 (  1,  1) [000077] ------------ arg3 in r9      \--*  CNS_INT   int    2

N001 [000182]   ARGPLACE  => $14c {14c}
N002 [000181]   ARGPLACE  => $14d {14d}
N003 [000183]   ARGPLACE  => $14e {14e}
N004 [000184]   ARGPLACE  => $282 {282}
N005 [000179]   CNS_INT(h) 0xD1FFAB1E "AlwaysCompileMarkupFilesInSeparateDomain" => $105 {Hnd const: 0x00000000D1FFAB1E}
    VNForMapSelect($2, $105):ref returns $189 {$VN.ReadOnlyHeap[$105]}
    VNForMapSelect($2, $105):ref returns $189 {$VN.ReadOnlyHeap[$105]}
N006 [000180]   IND       => $189 {$VN.ReadOnlyHeap[$105]}
N007 [000022]   LCL_VAR   V04 tmp2         u:2 => $183 {JitNew($102, $143)}
N008 [000076]   LCL_VAR   V08 tmp6         u:2 (last use) => <l:$243 {ByrefExposedLoad($42, $104, $149)}, c:$14a {14a}>
N009 [000077]   CNS_INT   2 => $44 {IntCns 2}
VN of ARGPLACE tree [000181] updated to $183 {JitNew($102, $143)}
VN of ARGPLACE tree [000183] updated to $189 {$VN.ReadOnlyHeap[$105]}
VN of ARGPLACE tree [000184] updated to <l:$243 {ByrefExposedLoad($42, $104, $149)}, c:$14a {14a}>
  fgCurMemoryVN[GcHeap] assigned for CALL at [000078] to VN: $14f.
N010 [000078]   CALL      => $283 {283}
N011 [000080]   LCL_VAR   V09 tmp7         d:2 => $283 {283}
N012 [000081]   ASG       => $283 {283}

***** BB01, STMT00021(after)
N012 ( 25, 28) [000081] -ACXG---R---              *  ASG       bool   $283
N011 (  3,  2) [000080] D------N----              +--*  LCL_VAR   int    V09 tmp7         d:2 $283
N010 ( 21, 25) [000078] --CXG-------              \--*  CALL      int    System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].TryInsert $283
N006 (  4, 12) [000180] #---G------- arg1 in rdx     +--*  IND       ref    $189
N005 (  2, 10) [000179] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "AlwaysCompileMarkupFilesInSeparateDomain" $105
N007 (  1,  1) [000022] ------------ this in rcx     +--*  LCL_VAR   ref    V04 tmp2         u:2 $183
N008 (  1,  1) [000076] ------------ arg2 in r8      +--*  LCL_VAR   ref    V08 tmp6         u:2 (last use) <l:$243, c:$14a>
N009 (  1,  1) [000077] ------------ arg3 in r9      \--*  CNS_INT   int    2 $44

---------

***** BB01, STMT00028(before)
N004 (  8, 15) [000106] -A--G---R---              *  ASG       ref   
N003 (  3,  2) [000105] D------N----              +--*  LCL_VAR   ref    V10 tmp8         d:2
N002 (  4, 12) [000092] #---G-------              \--*  IND       ref   
N001 (  2, 10) [000091] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL]

N001 [000091]   CNS_INT(h) 0xD1FFAB1E [ICON_STR_HDL] => $106 {Hnd const: 0x00000000D1FFAB1E}
    VNForMapSelect($2, $106):ref returns $18a {$VN.ReadOnlyHeap[$106]}
    VNForMapSelect($2, $106):ref returns $18a {$VN.ReadOnlyHeap[$106]}
N002 [000092]   IND       => $18a {$VN.ReadOnlyHeap[$106]}
N003 [000105]   LCL_VAR   V10 tmp8         d:2 => $18a {$VN.ReadOnlyHeap[$106]}
N004 [000106]   ASG       => $18a {$VN.ReadOnlyHeap[$106]}

***** BB01, STMT00028(after)
N004 (  8, 15) [000106] -A--G---R---              *  ASG       ref    $18a
N003 (  3,  2) [000105] D------N----              +--*  LCL_VAR   ref    V10 tmp8         d:2 $18a
N002 (  4, 12) [000092] #---G-------              \--*  IND       ref    $18a
N001 (  2, 10) [000091] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL] $106

---------

***** BB01, STMT00029(before)
N004 (  8, 15) [000108] -A--G---R---              *  ASG       ref   
N003 (  3,  2) [000107] D------N----              +--*  LCL_VAR   ref    V11 tmp9         d:2
N002 (  4, 12) [000094] #---G-------              \--*  IND       ref   
N001 (  2, 10) [000093] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL]

N001 [000093]   CNS_INT(h) 0xD1FFAB1E [ICON_STR_HDL] => $106 {Hnd const: 0x00000000D1FFAB1E}
    VNForMapSelect($2, $106):ref returns $18a {$VN.ReadOnlyHeap[$106]}
    VNForMapSelect($2, $106):ref returns $18a {$VN.ReadOnlyHeap[$106]}
N002 [000094]   IND       => $18a {$VN.ReadOnlyHeap[$106]}
N003 [000107]   LCL_VAR   V11 tmp9         d:2 => $18a {$VN.ReadOnlyHeap[$106]}
N004 [000108]   ASG       => $18a {$VN.ReadOnlyHeap[$106]}

***** BB01, STMT00029(after)
N004 (  8, 15) [000108] -A--G---R---              *  ASG       ref    $18a
N003 (  3,  2) [000107] D------N----              +--*  LCL_VAR   ref    V11 tmp9         d:2 $18a
N002 (  4, 12) [000094] #---G-------              \--*  IND       ref    $18a
N001 (  2, 10) [000093] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL] $106

---------

***** BB01, STMT00026(before)
N004 (  7,  6) [000101] ------------              *  JTRUE     void  
N003 (  5,  4) [000100] J------N----              \--*  NE        int   
N001 (  3,  2) [000098] ------------                 +--*  LCL_VAR   int    V09 tmp7         u:2 (last use)
N002 (  1,  1) [000099] ------------                 \--*  CNS_INT   int    0

N001 [000098]   LCL_VAR   V09 tmp7         u:2 (last use) => $283 {283}
N002 [000099]   CNS_INT   0 => $40 {IntCns 0}
N003 [000100]   NE        => $340 {NE($283, $40)}

***** BB01, STMT00026(after)
N004 (  7,  6) [000101] ------------              *  JTRUE     void  
N003 (  5,  4) [000100] J------N----              \--*  NE        int    $340
N001 (  3,  2) [000098] ------------                 +--*  LCL_VAR   int    V09 tmp7         u:2 (last use) $283
N002 (  1,  1) [000099] ------------                 \--*  CNS_INT   int    0 $40

finish(BB01).
   Succ(BB02).
     Not yet completed.
     All preds complete, adding to allDone.
   Succ(BB03).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
       Was necessary.
The SSA definition for ByrefExposed (#2) at start of BB02 is $14f {14f}
The SSA definition for GcHeap (#2) at start of BB02 is $14f {14f}

***** BB02, STMT00027(before)
N005 ( 20, 11) [000104] --CXG-------              *  CALL      void   System.Diagnostics.Debug.Fail
N003 (  3,  2) [000102] ------------ arg0 in rcx  +--*  LCL_VAR   ref    V10 tmp8         u:2 (last use)
N004 (  3,  2) [000103] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V11 tmp9         u:2 (last use)

N001 [000185]   ARGPLACE  => $152 {152}
N002 [000186]   ARGPLACE  => $153 {153}
N003 [000102]   LCL_VAR   V10 tmp8         u:2 (last use) => $18a {$VN.ReadOnlyHeap[$106]}
N004 [000103]   LCL_VAR   V11 tmp9         u:2 (last use) => $18a {$VN.ReadOnlyHeap[$106]}
VN of ARGPLACE tree [000185] updated to $18a {$VN.ReadOnlyHeap[$106]}
VN of ARGPLACE tree [000186] updated to $18a {$VN.ReadOnlyHeap[$106]}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000104] to VN: $154.
N005 [000104]   CALL      => $VN.Void

***** BB02, STMT00027(after)
N005 ( 20, 11) [000104] --CXG-------              *  CALL      void   System.Diagnostics.Debug.Fail $VN.Void
N003 (  3,  2) [000102] ------------ arg0 in rcx  +--*  LCL_VAR   ref    V10 tmp8         u:2 (last use) $18a
N004 (  3,  2) [000103] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V11 tmp9         u:2 (last use) $18a

finish(BB02).
   Succ(BB03).
     Not yet completed.
     All preds complete, adding to allDone.
  Building phi application: $45 = SSA# 7.
  Building phi application: $44 = SSA# 2.
  Building phi application: $18b = phi($44, $45).
The SSA definition for GcHeap (#3) at start of BB03 is $18c {PhiMemoryDef($107, $18b)}

***** BB03, STMT00009(before)
N009 ( 33, 14) [000034] -ACXG---R---              *  ASG       ref   
N008 (  1,  1) [000033] D------N----              +--*  LCL_VAR   ref    V05 tmp3         d:2
N007 ( 33, 14) [000112] --CXG-------              \--*  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create
N004 ( 14,  5) [000188] -ACXG---R-L- arg1 SETUP      +--*  ASG       ref   
N003 (  1,  1) [000187] D------N----                 |  +--*  LCL_VAR   ref    V15 tmp13        d:2
N002 ( 14,  5) [000110] --CXG-------                 |  \--*  CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices
N005 (  1,  1) [000189] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V15 tmp13        u:2 (last use)
N006 (  1,  1) [000021] ------------ arg0 in rcx     \--*  LCL_VAR   ref    V04 tmp2         u:2 (last use)

N001 [000190]   ARGPLACE  => $155 {155}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000110] to VN: $157.
N002 [000110]   CALL      => $156 {156}
N003 [000187]   LCL_VAR   V15 tmp13        d:2 => $156 {156}
N004 [000188]   ASG       => $156 {156}
N005 [000189]   LCL_VAR   V15 tmp13        u:2 (last use) => $156 {156}
N006 [000021]   LCL_VAR   V04 tmp2         u:2 (last use) => $183 {JitNew($102, $143)}
VN of ARGPLACE tree [000190] updated to $183 {JitNew($102, $143)}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000112] to VN: $15a.
N007 [000112]   CALL      => $159 {159}
N008 [000033]   LCL_VAR   V05 tmp3         d:2 => $159 {159}
N009 [000034]   ASG       => $159 {159}

***** BB03, STMT00009(after)
N009 ( 33, 14) [000034] -ACXG---R---              *  ASG       ref    $159
N008 (  1,  1) [000033] D------N----              +--*  LCL_VAR   ref    V05 tmp3         d:2 $159
N007 ( 33, 14) [000112] --CXG-------              \--*  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create $159
N004 ( 14,  5) [000188] -ACXG---R-L- arg1 SETUP      +--*  ASG       ref    $156
N003 (  1,  1) [000187] D------N----                 |  +--*  LCL_VAR   ref    V15 tmp13        d:2 $156
N002 ( 14,  5) [000110] --CXG-------                 |  \--*  CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices $156
N005 (  1,  1) [000189] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V15 tmp13        u:2 (last use) $156
N006 (  1,  1) [000021] ------------ arg0 in rcx     \--*  LCL_VAR   ref    V04 tmp2         u:2 (last use) $183

---------

***** BB03, STMT00034(before)
N006 (  4,  7) [000129] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000128] D------N----              +--*  LCL_VAR   ref    V12 tmp10        d:2
N004 (  4,  7) [000118] ---XG-------              \--*  IND       ref   
N003 (  2,  5) [000192] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000036] ------------                    +--*  LCL_VAR   ref    V05 tmp3         u:2
N002 (  1,  4) [000191] ------------                    \--*  CNS_INT   long   136 field offset Fseq[_loader]

N001 [000036]   LCL_VAR   V05 tmp3         u:2 => $159 {159}
N002 [000191]   CNS_INT   136 field offset Fseq[_loader] => $1c2 {LngCns:  136}
N003 [000192]   ADD       => $201 {ADD($159, $1c2)}
  VNApplySelectors:
    VNForHandle(_loader) is $108, fieldType is ref
    VNForMapSelect($15a, $108):ref returns $18d {$15a[$108]}
    VNForMapSelect($18d, $159):ref returns $18e {$18d[$159]}
N004 [000118]   IND       => <l:$191 {norm=$18e {$18d[$159]}, exc=$18f {NullPtrExc($159)}}, c:$190 {norm=$15c {15c}, exc=$18f {NullPtrExc($159)}}>
N005 [000128]   LCL_VAR   V12 tmp10        d:2 => <l:$18e {$18d[$159]}, c:$15c {15c}>
N006 [000129]   ASG       => <l:$191 {norm=$18e {$18d[$159]}, exc=$18f {NullPtrExc($159)}}, c:$190 {norm=$15c {15c}, exc=$18f {NullPtrExc($159)}}>

***** BB03, STMT00034(after)
N006 (  4,  7) [000129] -A-XG---R---              *  ASG       ref    <l:$191, c:$190>
N005 (  1,  1) [000128] D------N----              +--*  LCL_VAR   ref    V12 tmp10        d:2 <l:$18e, c:$15c>
N004 (  4,  7) [000118] ---XG-------              \--*  IND       ref    <l:$191, c:$190>
N003 (  2,  5) [000192] -------N----                 \--*  ADD       byref  $201
N001 (  1,  1) [000036] ------------                    +--*  LCL_VAR   ref    V05 tmp3         u:2 $159
N002 (  1,  4) [000191] ------------                    \--*  CNS_INT   long   136 field offset Fseq[_loader] $1c2

---------

***** BB03, STMT00033(before)
N006 (  7,  7) [000127] -A-XG-------              *  ASG       bool  
N004 (  5,  5) [000126] D--XG--N----              +--*  IND       bool  
N003 (  2,  2) [000194] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000124] ------------              |     +--*  LCL_VAR   ref    V12 tmp10        u:2 (last use)
N002 (  1,  1) [000193] ------------              |     \--*  CNS_INT   long   56 field offset Fseq[<LoadMetadataForReferencedProjects>k__BackingField]
N005 (  1,  1) [000125] ------------              \--*  CNS_INT   int    1

N001 [000124]   LCL_VAR   V12 tmp10        u:2 (last use) => <l:$18e {$18d[$159]}, c:$15c {15c}>
N002 [000193]   CNS_INT   56 field offset Fseq[<LoadMetadataForReferencedProjects>k__BackingField] => $1c3 {LngCns:  56}
N003 [000194]   ADD       => <l:$203 {ADD($18e, $1c3)}, c:$202 {ADD($15c, $1c3)}>
N005 [000125]   CNS_INT   1 => $46 {IntCns 1}
    VNForCastOper(bool) is $47
  VNApplySelectors:
    VNForHandle(<LoadMetadataForReferencedProjects>k__BackingField) is $109, fieldType is bool
    VNForMapSelect($15a, $109):bool returns $380 {$15a[$109]}
    VNForMapSelect($380, $18e):bool returns $381 {$380[$18e]}
    VNForMapStore($380, $18e, $46):bool returns $3c0 {$380[$18e := $46]}
  VNApplySelectorsAssign:
    VNForHandle(<LoadMetadataForReferencedProjects>k__BackingField) is $109, fieldType is bool
    VNForMapStore($15a, $109, $3c0):bool returns $3c1 {$15a[$109 := $3c0]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000127] to VN: $3c1.
N006 [000127]   ASG       => $VN.Void

***** BB03, STMT00033(after)
N006 (  7,  7) [000127] -A-XG-------              *  ASG       bool   $VN.Void
N004 (  5,  5) [000126] D--XG--N----              +--*  IND       bool   $46
N003 (  2,  2) [000194] -------N----              |  \--*  ADD       byref  <l:$203, c:$202>
N001 (  1,  1) [000124] ------------              |     +--*  LCL_VAR   ref    V12 tmp10        u:2 (last use) <l:$18e, c:$15c>
N002 (  1,  1) [000193] ------------              |     \--*  CNS_INT   long   56 field offset Fseq[<LoadMetadataForReferencedProjects>k__BackingField] $1c3
N005 (  1,  1) [000125] ------------              \--*  CNS_INT   int    1 $46

---------

***** BB03, STMT00037(before)
N006 (  4,  7) [000143] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000142] D------N----              +--*  LCL_VAR   ref    V13 tmp11        d:2
N004 (  4,  7) [000132] ---XG-------              \--*  IND       ref   
N003 (  2,  5) [000196] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000040] ------------                    +--*  LCL_VAR   ref    V05 tmp3         u:2
N002 (  1,  4) [000195] ------------                    \--*  CNS_INT   long   136 field offset Fseq[_loader]

N001 [000040]   LCL_VAR   V05 tmp3         u:2 => $159 {159}
N002 [000195]   CNS_INT   136 field offset Fseq[_loader] => $1c2 {LngCns:  136}
N003 [000196]   ADD       => $201 {ADD($159, $1c2)}
  VNApplySelectors:
    VNForHandle(_loader) is $108, fieldType is ref
      AX2: $108 != $109 ==> select([$3c1]store($15a, $109, $3c0), $108) ==> select($15a, $108).
    VNForMapSelect($3c1, $108):ref returns $18d {$15a[$108]}
    VNForMapSelect($18d, $159):ref returns $18e {$18d[$159]}
N004 [000132]   IND       => <l:$191 {norm=$18e {$18d[$159]}, exc=$18f {NullPtrExc($159)}}, c:$192 {norm=$15e {15e}, exc=$18f {NullPtrExc($159)}}>
N005 [000142]   LCL_VAR   V13 tmp11        d:2 => <l:$18e {$18d[$159]}, c:$15e {15e}>
N006 [000143]   ASG       => <l:$191 {norm=$18e {$18d[$159]}, exc=$18f {NullPtrExc($159)}}, c:$192 {norm=$15e {15e}, exc=$18f {NullPtrExc($159)}}>

***** BB03, STMT00037(after)
N006 (  4,  7) [000143] -A-XG---R---              *  ASG       ref    <l:$191, c:$192>
N005 (  1,  1) [000142] D------N----              +--*  LCL_VAR   ref    V13 tmp11        d:2 <l:$18e, c:$15e>
N004 (  4,  7) [000132] ---XG-------              \--*  IND       ref    <l:$191, c:$192>
N003 (  2,  5) [000196] -------N----                 \--*  ADD       byref  $201
N001 (  1,  1) [000040] ------------                    +--*  LCL_VAR   ref    V05 tmp3         u:2 $159
N002 (  1,  4) [000195] ------------                    \--*  CNS_INT   long   136 field offset Fseq[_loader] $1c2

---------

***** BB03, STMT00036(before)
N006 (  7,  7) [000141] -A-XG-------              *  ASG       bool  
N004 (  5,  5) [000140] D--XG--N----              +--*  IND       bool  
N003 (  2,  2) [000198] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000138] ------------              |     +--*  LCL_VAR   ref    V13 tmp11        u:2 (last use)
N002 (  1,  1) [000197] ------------              |     \--*  CNS_INT   long   57 field offset Fseq[<SkipUnrecognizedProjects>k__BackingField]
N005 (  1,  1) [000139] ------------              \--*  CNS_INT   int    1

N001 [000138]   LCL_VAR   V13 tmp11        u:2 (last use) => <l:$18e {$18d[$159]}, c:$15e {15e}>
N002 [000197]   CNS_INT   57 field offset Fseq[<SkipUnrecognizedProjects>k__BackingField] => $1c4 {LngCns:  57}
N003 [000198]   ADD       => <l:$205 {ADD($18e, $1c4)}, c:$204 {ADD($15e, $1c4)}>
N005 [000139]   CNS_INT   1 => $46 {IntCns 1}
    VNForCastOper(bool) is $47
  VNApplySelectors:
    VNForHandle(<SkipUnrecognizedProjects>k__BackingField) is $10a, fieldType is bool
      AX2: $10a != $109 ==> select([$3c1]store($15a, $109, $3c0), $10a) ==> select($15a, $10a).
    VNForMapSelect($3c1, $10a):bool returns $382 {$15a[$10a]}
    VNForMapSelect($382, $18e):bool returns $383 {$382[$18e]}
    VNForMapStore($382, $18e, $46):bool returns $3c2 {$382[$18e := $46]}
  VNApplySelectorsAssign:
    VNForHandle(<SkipUnrecognizedProjects>k__BackingField) is $10a, fieldType is bool
    VNForMapStore($3c1, $10a, $3c2):bool returns $3c3 {$3c1[$10a := $3c2]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000141] to VN: $3c3.
N006 [000141]   ASG       => $VN.Void

***** BB03, STMT00036(after)
N006 (  7,  7) [000141] -A-XG-------              *  ASG       bool   $VN.Void
N004 (  5,  5) [000140] D--XG--N----              +--*  IND       bool   $46
N003 (  2,  2) [000198] -------N----              |  \--*  ADD       byref  <l:$205, c:$204>
N001 (  1,  1) [000138] ------------              |     +--*  LCL_VAR   ref    V13 tmp11        u:2 (last use) <l:$18e, c:$15e>
N002 (  1,  1) [000197] ------------              |     \--*  CNS_INT   long   57 field offset Fseq[<SkipUnrecognizedProjects>k__BackingField] $1c4
N005 (  1,  1) [000139] ------------              \--*  CNS_INT   int    1 $46

---------

***** BB03, STMT00038(before)
N012 ( 26, 40) [000148] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage
N007 (  4,  7) [000145] ---XG------- this in rcx  +--*  IND       ref   
N006 (  2,  5) [000200] -------N----              |  \--*  ADD       byref 
N004 (  1,  1) [000044] ------------              |     +--*  LCL_VAR   ref    V05 tmp3         u:2
N005 (  1,  4) [000199] ------------              |     \--*  CNS_INT   long   136 field offset Fseq[_loader]
N009 (  4, 12) [000202] #---G------- arg1 in rdx  +--*  IND       ref   
N008 (  2, 10) [000201] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "ilproj"
N011 (  4, 12) [000204] #---G------- arg2 in r8   \--*  IND       ref   
N010 (  2, 10) [000203] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "IL"

N001 [000205]   ARGPLACE  => $160 {160}
N002 [000206]   ARGPLACE  => $161 {161}
N003 [000207]   ARGPLACE  => $162 {162}
N004 [000044]   LCL_VAR   V05 tmp3         u:2 => $159 {159}
N005 [000199]   CNS_INT   136 field offset Fseq[_loader] => $1c2 {LngCns:  136}
N006 [000200]   ADD       => $201 {ADD($159, $1c2)}
  VNApplySelectors:
    VNForHandle(_loader) is $108, fieldType is ref
      AX2: $108 != $10a ==> select([$3c3]store($3c1, $10a, $3c2), $108) ==> select($3c1, $108).
      AX2: $108 != $109 ==> select([$3c1]store($15a, $109, $3c0), $108) ==> select($15a, $108).
    VNForMapSelect($3c3, $108):ref returns $18d {$15a[$108]}
    VNForMapSelect($18d, $159):ref returns $18e {$18d[$159]}
N007 [000145]   IND       => <l:$191 {norm=$18e {$18d[$159]}, exc=$18f {NullPtrExc($159)}}, c:$193 {norm=$163 {163}, exc=$18f {NullPtrExc($159)}}>
N008 [000201]   CNS_INT(h) 0xD1FFAB1E "ilproj" => $10b {Hnd const: 0x00000000D1FFAB1E}
    VNForMapSelect($2, $10b):ref returns $194 {$VN.ReadOnlyHeap[$10b]}
    VNForMapSelect($2, $10b):ref returns $194 {$VN.ReadOnlyHeap[$10b]}
N009 [000202]   IND       => $194 {$VN.ReadOnlyHeap[$10b]}
N010 [000203]   CNS_INT(h) 0xD1FFAB1E "IL" => $10c {Hnd const: 0x00000000D1FFAB1E}
    VNForMapSelect($2, $10c):ref returns $195 {$VN.ReadOnlyHeap[$10c]}
    VNForMapSelect($2, $10c):ref returns $195 {$VN.ReadOnlyHeap[$10c]}
N011 [000204]   IND       => $195 {$VN.ReadOnlyHeap[$10c]}
VN of ARGPLACE tree [000206] updated to <l:$191 {norm=$18e {$18d[$159]}, exc=$18f {NullPtrExc($159)}}, c:$193 {norm=$163 {163}, exc=$18f {NullPtrExc($159)}}>
VN of ARGPLACE tree [000207] updated to $194 {$VN.ReadOnlyHeap[$10b]}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000148] to VN: $164.
N012 [000148]   CALL nullcheck => $VN.Void

***** BB03, STMT00038(after)
N012 ( 26, 40) [000148] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage $VN.Void
N007 (  4,  7) [000145] ---XG------- this in rcx  +--*  IND       ref    <l:$191, c:$193>
N006 (  2,  5) [000200] -------N----              |  \--*  ADD       byref  $201
N004 (  1,  1) [000044] ------------              |     +--*  LCL_VAR   ref    V05 tmp3         u:2 $159
N005 (  1,  4) [000199] ------------              |     \--*  CNS_INT   long   136 field offset Fseq[_loader] $1c2
N009 (  4, 12) [000202] #---G------- arg1 in rdx  +--*  IND       ref    $194
N008 (  2, 10) [000201] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "ilproj" $10b
N011 (  4, 12) [000204] #---G------- arg2 in r8   \--*  IND       ref    $195
N010 (  2, 10) [000203] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "IL" $10c

---------

***** BB03, STMT00039(before)
N012 ( 26, 40) [000153] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage
N007 (  4,  7) [000150] ---XG------- this in rcx  +--*  IND       ref   
N006 (  2,  5) [000209] -------N----              |  \--*  ADD       byref 
N004 (  1,  1) [000048] ------------              |     +--*  LCL_VAR   ref    V05 tmp3         u:2
N005 (  1,  4) [000208] ------------              |     \--*  CNS_INT   long   136 field offset Fseq[_loader]
N009 (  4, 12) [000211] #---G------- arg1 in rdx  +--*  IND       ref   
N008 (  2, 10) [000210] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "vcxproj"
N011 (  4, 12) [000213] #---G------- arg2 in r8   \--*  IND       ref   
N010 (  2, 10) [000212] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "C++"

N001 [000214]   ARGPLACE  => $165 {165}
N002 [000215]   ARGPLACE  => $166 {166}
N003 [000216]   ARGPLACE  => $167 {167}
N004 [000048]   LCL_VAR   V05 tmp3         u:2 => $159 {159}
N005 [000208]   CNS_INT   136 field offset Fseq[_loader] => $1c2 {LngCns:  136}
N006 [000209]   ADD       => $201 {ADD($159, $1c2)}
  VNApplySelectors:
    VNForHandle(_loader) is $108, fieldType is ref
    VNForMapSelect($164, $108):ref returns $196 {$164[$108]}
    VNForMapSelect($196, $159):ref returns $197 {$196[$159]}
N007 [000150]   IND       => <l:$199 {norm=$197 {$196[$159]}, exc=$18f {NullPtrExc($159)}}, c:$198 {norm=$168 {168}, exc=$18f {NullPtrExc($159)}}>
N008 [000210]   CNS_INT(h) 0xD1FFAB1E "vcxproj" => $10d {Hnd const: 0x00000000D1FFAB1E}
    VNForMapSelect($2, $10d):ref returns $19a {$VN.ReadOnlyHeap[$10d]}
    VNForMapSelect($2, $10d):ref returns $19a {$VN.ReadOnlyHeap[$10d]}
N009 [000211]   IND       => $19a {$VN.ReadOnlyHeap[$10d]}
N010 [000212]   CNS_INT(h) 0xD1FFAB1E "C++" => $10e {Hnd const: 0x00000000D1FFAB1E}
    VNForMapSelect($2, $10e):ref returns $19b {$VN.ReadOnlyHeap[$10e]}
    VNForMapSelect($2, $10e):ref returns $19b {$VN.ReadOnlyHeap[$10e]}
N011 [000213]   IND       => $19b {$VN.ReadOnlyHeap[$10e]}
VN of ARGPLACE tree [000215] updated to <l:$199 {norm=$197 {$196[$159]}, exc=$18f {NullPtrExc($159)}}, c:$198 {norm=$168 {168}, exc=$18f {NullPtrExc($159)}}>
VN of ARGPLACE tree [000216] updated to $19a {$VN.ReadOnlyHeap[$10d]}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000153] to VN: $169.
N012 [000153]   CALL nullcheck => $VN.Void

***** BB03, STMT00039(after)
N012 ( 26, 40) [000153] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage $VN.Void
N007 (  4,  7) [000150] ---XG------- this in rcx  +--*  IND       ref    <l:$199, c:$198>
N006 (  2,  5) [000209] -------N----              |  \--*  ADD       byref  $201
N004 (  1,  1) [000048] ------------              |     +--*  LCL_VAR   ref    V05 tmp3         u:2 $159
N005 (  1,  4) [000208] ------------              |     \--*  CNS_INT   long   136 field offset Fseq[_loader] $1c2
N009 (  4, 12) [000211] #---G------- arg1 in rdx  +--*  IND       ref    $19a
N008 (  2, 10) [000210] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "vcxproj" $10d
N011 (  4, 12) [000213] #---G------- arg2 in r8   \--*  IND       ref    $19b
N010 (  2, 10) [000212] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "C++" $10e

---------

***** BB03, STMT00014(before)
N005 ( 16, 16) [000058] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000057] D------N----              +--*  LCL_VAR   ref    V06 tmp4         d:2
N003 ( 16, 16) [000056] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000055] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

N001 [000217]   ARGPLACE  => $c3 {c3}
N002 [000055]   CNS_INT(h) 0xd1ffab1e token => $10f {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000217] updated to $10f {Hnd const: 0x00000000D1FFAB1E}
N003 [000056]   CALL help => $19c {JitNew($10f, $16a)}
N004 [000057]   LCL_VAR   V06 tmp4         d:2 => $19c {JitNew($10f, $16a)}
N005 [000058]   ASG       => $19c {JitNew($10f, $16a)}

***** BB03, STMT00014(after)
N005 ( 16, 16) [000058] -AC-----R---              *  ASG       ref    $19c
N004 (  1,  1) [000057] D------N----              +--*  LCL_VAR   ref    V06 tmp4         d:2 $19c
N003 ( 16, 16) [000056] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $19c
N002 (  2, 10) [000055] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $10f

---------

***** BB03, STMT00040(before)
N004 (  5,  5) [000157] ------------              *  JTRUE     void  
N003 (  3,  3) [000156] J------N----              \--*  EQ        int   
N001 (  1,  1) [000053] ------------                 +--*  LCL_VAR   ref    V01 loc0         u:2
N002 (  1,  1) [000155] ------------                 \--*  CNS_INT   ref    null

N001 [000053]   LCL_VAR   V01 loc0         u:2 => $180 {JitNew($100, $140)}
N002 [000155]   CNS_INT   null => $VN.Null
N003 [000156]   EQ        => $40 {IntCns 0}

***** BB03, STMT00040(after)
N004 (  5,  5) [000157] ------------              *  JTRUE     void  
N003 (  3,  3) [000156] J------N----              \--*  EQ        int    $40
N001 (  1,  1) [000053] ------------                 +--*  LCL_VAR   ref    V01 loc0         u:2 $180
N002 (  1,  1) [000155] ------------                 \--*  CNS_INT   ref    null $VN.Null

finish(BB03).
   Succ(BB04).
     Not yet completed.
     All preds complete, adding to allDone.
   Succ(BB05).
     Not yet completed.
     All preds complete, adding to allDone.
The SSA definition for ByrefExposed (#4) at start of BB05 is $169 {169}
The SSA definition for GcHeap (#4) at start of BB05 is $169 {169}

***** BB05, STMT00043(before)
N001 ( 14,  5) [000165] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

  fgCurMemoryVN[GcHeap] assigned for CALL at [000165] to VN: $16c.
N001 [000165]   CALL      => $VN.Void

***** BB05, STMT00043(after)
N001 ( 14,  5) [000165] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance $VN.Void

finish(BB05).
The SSA definition for ByrefExposed (#4) at start of BB04 is $169 {169}
The SSA definition for GcHeap (#4) at start of BB04 is $169 {169}

***** BB04, STMT00041(before)
N006 (  6,  6) [000160] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000159] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000219] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000059] ------------              |     +--*  LCL_VAR   ref    V06 tmp4         u:2
N002 (  1,  1) [000218] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
N005 (  1,  1) [000158] ------------              \--*  LCL_VAR   ref    V01 loc0         u:2 (last use)

N001 [000059]   LCL_VAR   V06 tmp4         u:2 => $19c {JitNew($10f, $16a)}
N002 [000218]   CNS_INT   8 field offset Fseq[_target] => $1c0 {LngCns:  8}
N003 [000219]   ADD       => $206 {ADD($19c, $1c0)}
N005 [000158]   LCL_VAR   V01 loc0         u:2 (last use) => $180 {JitNew($100, $140)}
  VNApplySelectors:
    VNForHandle(_target) is $110, fieldType is ref
    VNForMapSelect($169, $110):ref returns $19d {$169[$110]}
    VNForMapSelect($19d, $19c):ref returns $19e {$19d[$19c]}
    VNForMapStore($19d, $19c, $180):ref returns $244 {$19d[$19c := $180]}
  VNApplySelectorsAssign:
    VNForHandle(_target) is $110, fieldType is ref
    VNForMapStore($169, $110, $244):ref returns $245 {$169[$110 := $244]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000160] to VN: $245.
N006 [000160]   ASG       => $VN.Void

***** BB04, STMT00041(after)
N006 (  6,  6) [000160] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000159] D--XG--N----              +--*  IND       ref    $180
N003 (  2,  2) [000219] -------N----              |  \--*  ADD       byref  $206
N001 (  1,  1) [000059] ------------              |     +--*  LCL_VAR   ref    V06 tmp4         u:2 $19c
N002 (  1,  1) [000218] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $1c0
N005 (  1,  1) [000158] ------------              \--*  LCL_VAR   ref    V01 loc0         u:2 (last use) $180

---------

***** BB04, STMT00042(before)
N006 (  7, 15) [000164] -A-XG-------              *  ASG       long  
N004 (  4,  4) [000163] D--XG--N----              +--*  IND       long  
N003 (  2,  2) [000221] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000161] ------------              |     +--*  LCL_VAR   ref    V06 tmp4         u:2
N002 (  1,  1) [000220] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
N005 (  2, 10) [000054] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

N001 [000161]   LCL_VAR   V06 tmp4         u:2 => $19c {JitNew($10f, $16a)}
N002 [000220]   CNS_INT   24 field offset Fseq[_methodPtr] => $1c5 {LngCns:  24}
N003 [000221]   ADD       => $207 {ADD($19c, $1c5)}
N005 [000054]   CNS_INT(h) 0xd1ffab1e ftn => $111 {Hnd const: 0x00000000D1FFAB1E}
  VNApplySelectors:
    VNForHandle(_methodPtr) is $112, fieldType is long
      AX2: $112 != $110 ==> select([$245]store($169, $110, $244), $112) ==> select($169, $112).
    VNForMapSelect($245, $112):long returns $302 {$169[$112]}
    VNForMapSelect($302, $19c):long returns $303 {$302[$19c]}
    VNForMapStore($302, $19c, $111):long returns $400 {$302[$19c := $111]}
  VNApplySelectorsAssign:
    VNForHandle(_methodPtr) is $112, fieldType is long
    VNForMapStore($245, $112, $400):long returns $401 {$245[$112 := $400]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000164] to VN: $401.
N006 [000164]   ASG       => $VN.Void

***** BB04, STMT00042(after)
N006 (  7, 15) [000164] -A-XG-------              *  ASG       long   $VN.Void
N004 (  4,  4) [000163] D--XG--N----              +--*  IND       long   $111
N003 (  2,  2) [000221] -------N----              |  \--*  ADD       byref  $207
N001 (  1,  1) [000161] ------------              |     +--*  LCL_VAR   ref    V06 tmp4         u:2 $19c
N002 (  1,  1) [000220] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $1c5
N005 (  2, 10) [000054] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $111

---------

***** BB04, STMT00016(before)
N005 ( 16, 10) [000062] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed
N003 (  1,  1) [000052] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         u:2
N004 (  1,  1) [000061] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V06 tmp4         u:2 (last use)

N001 [000222]   ARGPLACE  => $16d {16d}
N002 [000223]   ARGPLACE  => $16e {16e}
N003 [000052]   LCL_VAR   V05 tmp3         u:2 => $159 {159}
N004 [000061]   LCL_VAR   V06 tmp4         u:2 (last use) => $19c {JitNew($10f, $16a)}
VN of ARGPLACE tree [000223] updated to $159 {159}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000062] to VN: $16f.
N005 [000062]   CALL nullcheck => $VN.Void

***** BB04, STMT00016(after)
N005 ( 16, 10) [000062] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed $VN.Void
N003 (  1,  1) [000052] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         u:2 $159
N004 (  1,  1) [000061] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V06 tmp4         u:2 (last use) $19c

---------

***** BB04, STMT00017(before)
N002 (  2,  2) [000063] ------------              *  RETURN    ref   
N001 (  1,  1) [000035] ------------              \--*  LCL_VAR   ref    V05 tmp3         u:2 (last use)

N001 [000035]   LCL_VAR   V05 tmp3         u:2 (last use) => $159 {159}
N002 [000063]   RETURN    => $170 {170}

***** BB04, STMT00017(after)
N002 (  2,  2) [000063] ------------              *  RETURN    ref    $170
N001 (  1,  1) [000035] ------------              \--*  LCL_VAR   ref    V05 tmp3         u:2 (last use) $159

finish(BB04).

*************** Finishing PHASE Do value numbering

*************** Starting PHASE Hoist loop code

*************** Finishing PHASE Hoist loop code

*************** Starting PHASE VN based copy prop
*************** In optVnCopyProp()
Copy Assertion for BB01
  curSsaName stack: { }

							Live vars: {V00} => {V00 V03}
							Live vars: {V00 V03} => {V00 V01 V03}
							Live vars: {V00 V01 V03} => {V00 V01}
VN based copy assertion for [000009] V03 @00000180 by [000007] V01 @00000180.
N001 (  1,  1) [000009] ------------              *  LCL_VAR   ref    V03 tmp1         u:2 (last use) $180
copy propagated to:
N001 (  1,  1) [000009] ------------              *  LCL_VAR   ref    V01 loc0         u:2 (last use) $180
							Live vars: {V00 V01} => {V01}
							Live vars: {V01} => {V01 V04}
							Live vars: {V01 V04} => {V01 V04 V07}
							Live vars: {V01 V04 V07} => {V01 V04}
							Live vars: {V01 V04} => {V01 V04 V08}
							Live vars: {V01 V04 V08} => {V01 V04}
							Live vars: {V01 V04} => {V01 V04 V09}
							Live vars: {V01 V04 V09} => {V01 V04 V09 V10}
							Live vars: {V01 V04 V09 V10} => {V01 V04 V09 V10 V11}
							Live vars: {V01 V04 V09 V10 V11} => {V01 V04 V10 V11}
Copy Assertion for BB03
  curSsaName stack: { 0-[000010]:V00 1-[000007]:V01 3-[000002]:V03 4-[000017]:V04 7-[000072]:V07 8-[000087]:V08 9-[000080]:V09 10-[000105]:V10 11-[000107]:V11 }

							Live vars: {V01 V04} => {V01 V04 V15}
							Live vars: {V01 V04 V15} => {V01 V04}
							Live vars: {V01 V04} => {V01}
							Live vars: {V01} => {V01 V05}
							Live vars: {V01 V05} => {V01 V05 V12}
							Live vars: {V01 V05 V12} => {V01 V05}
							Live vars: {V01 V05} => {V01 V05 V13}
							Live vars: {V01 V05 V13} => {V01 V05}
							Live vars: {V01 V05} => {V01 V05 V06}
Copy Assertion for BB05
  curSsaName stack: { 0-[000010]:V00 1-[000007]:V01 3-[000002]:V03 4-[000017]:V04 5-[000033]:V05 6-[000057]:V06 7-[000072]:V07 8-[000087]:V08 9-[000080]:V09 10-[000105]:V10 11-[000107]:V11 12-[000128]:V12 13-[000142]:V13 15-[000187]:V15 }

Copy Assertion for BB04
  curSsaName stack: { 0-[000010]:V00 1-[000007]:V01 3-[000002]:V03 4-[000017]:V04 5-[000033]:V05 6-[000057]:V06 7-[000072]:V07 8-[000087]:V08 9-[000080]:V09 10-[000105]:V10 11-[000107]:V11 12-[000128]:V12 13-[000142]:V13 15-[000187]:V15 }

							Live vars: {V01 V05 V06} => {V05 V06}
							Live vars: {V05 V06} => {V05}
							Live vars: {V05} => {}
Copy Assertion for BB02
  curSsaName stack: { 0-[000010]:V00 1-[000007]:V01 3-[000002]:V03 4-[000017]:V04 7-[000072]:V07 8-[000087]:V08 9-[000080]:V09 10-[000105]:V10 11-[000107]:V11 }

							Live vars: {V01 V04 V10 V11} => {V01 V04 V11}
VN based copy assertion for [000102] V10 @0000018A by [000107] V11 @0000018A.
N003 (  3,  2) [000102] ------------              *  LCL_VAR   ref    V10 tmp8         u:2 (last use) $18a
copy propagated to:
N003 (  3,  2) [000102] ------------              *  LCL_VAR   ref    V11 tmp9         u:2 (last use) $18a
							Live vars: {V01 V04 V11} => {V01 V04}

*************** Finishing PHASE VN based copy prop

*************** Starting PHASE Optimize Valnum CSEs

*************** In optOptimizeCSEs()
Blocks/Trees at start of optOptimizeCSE phase

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)-> BB03 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB02 [0008]  1       BB01                  0.25    [017..018)                                     i hascall gcsafe 
BB03 [0009]  2       BB01,BB02             1       [000..018)-> BB05 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB04 [0020]  1       BB03                  1       [000..000)        (return)                     i internal label target hascall gcsafe newobj nullcheck 
BB05 [0019]  1       BB03                  0       [000..000)        (throw )                     i internal rare label target hascall gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06D) -> BB03 (cond), preds={} succs={BB02,BB03}

***** BB01
STMT00000 (IL 0x000...0x005)
N005 ( 16, 16) [000003] -AC-----R---              *  ASG       ref    $180
N004 (  1,  1) [000002] D------N----              +--*  LCL_VAR   ref    V03 tmp1         d:2 $180
N003 ( 16, 16) [000001] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $180
N002 (  2, 10) [000000] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $100

***** BB01
STMT00002 (IL 0x005...  ???)
N003 (  1,  3) [000008] -A------R---              *  ASG       ref    $180
N002 (  1,  1) [000007] D------N----              +--*  LCL_VAR   ref    V01 loc0         d:2 $180
N001 (  1,  1) [000006] ------------              \--*  LCL_VAR   ref    V03 tmp1         u:2 $180

***** BB01
STMT00003 (IL 0x006...0x008)
N006 (  6,  6) [000012] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000011] D--XG--N----              +--*  IND       ref    $80
N003 (  2,  2) [000170] -------N----              |  \--*  ADD       byref  $200
N001 (  1,  1) [000009] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 (last use) $180
N002 (  1,  1) [000169] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[projectPath] $1c0
N005 (  1,  1) [000010] ------------              \--*  LCL_VAR   ref    V00 arg0         u:1 (last use) $80

***** BB01
STMT00005 (IL   ???...  ???)
N005 ( 16, 16) [000018] -AC-----R---              *  ASG       ref    $183
N004 (  1,  1) [000017] D------N----              +--*  LCL_VAR   ref    V04 tmp2         d:2 $183
N003 ( 16, 16) [000016] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $183
N002 (  2, 10) [000015] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $102

***** BB01
STMT00020 (IL   ???...  ???)
N004 (  4, 12) [000073] -A--G---R---              *  ASG       ref    <l:$242, c:$145>
N003 (  1,  1) [000072] D------N----              +--*  LCL_VAR   ref    V07 tmp5         d:2 <l:$242, c:$145>
N002 (  4, 12) [000067] n---G-------              \--*  IND       ref    <l:$242, c:$145>
N001 (  2, 10) [000172] I-----------                 \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[Instance] $103

***** BB01
STMT00019 (IL   ???...  ???)
N007 ( 17, 12) [000071] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor $VN.Void
N004 (  1,  1) [000019] ------------ this in rcx  +--*  LCL_VAR   ref    V04 tmp2         u:2 $183
N005 (  1,  1) [000070] ------------ arg2 in r8   +--*  LCL_VAR   ref    V07 tmp5         u:2 (last use) <l:$242, c:$145>
N006 (  1,  1) [000069] ------------ arg1 in rdx  \--*  CNS_INT   int    0 $40

***** BB01
STMT00023 (IL 0x017...  ???)
N010 ( 21, 33) [000088] -ACXG---R---              *  ASG       ref    <l:$186, c:$185>
N009 (  1,  1) [000087] D------N----              +--*  LCL_VAR   ref    V08 tmp6         d:2 <l:$243, c:$14a>
N008 ( 21, 33) [000029] --CXG-------              \--*  COMMA     ref    <l:$186, c:$185>
N005 ( 17, 21) [000028] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $301
N003 (  2, 10) [000026] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc86100028 $1c1
N004 (  1,  4) [000027] ------------ arg1 in rdx     |  \--*  CNS_INT   int    215 $43
N007 (  4, 12) [000024] n---G-------                 \--*  IND       ref    <l:$243, c:$14a>
N006 (  2, 10) [000178] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[FalseString] $104

***** BB01
STMT00024 (IL 0x017...  ???)
N002 (  2,  2) [000086] ---X--------              *  NULLCHECK byte   $188
N001 (  1,  1) [000085] ------------              \--*  LCL_VAR   ref    V04 tmp2         u:2 $183

***** BB01
STMT00021 (IL 0x017...  ???)
N012 ( 25, 28) [000081] -ACXG---R---              *  ASG       bool   $283
N011 (  3,  2) [000080] D------N----              +--*  LCL_VAR   int    V09 tmp7         d:2 $283
N010 ( 21, 25) [000078] --CXG-------              \--*  CALL      int    System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].TryInsert $283
N006 (  4, 12) [000180] #---G------- arg1 in rdx     +--*  IND       ref    $189
N005 (  2, 10) [000179] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "AlwaysCompileMarkupFilesInSeparateDomain" $105
N007 (  1,  1) [000022] ------------ this in rcx     +--*  LCL_VAR   ref    V04 tmp2         u:2 $183
N008 (  1,  1) [000076] ------------ arg2 in r8      +--*  LCL_VAR   ref    V08 tmp6         u:2 (last use) <l:$243, c:$14a>
N009 (  1,  1) [000077] ------------ arg3 in r9      \--*  CNS_INT   int    2 $44

***** BB01
STMT00028 (IL 0x017...  ???)
N004 (  8, 15) [000106] -A--G---R---              *  ASG       ref    $18a
N003 (  3,  2) [000105] D------N----              +--*  LCL_VAR   ref    V10 tmp8         d:2 $18a
N002 (  4, 12) [000092] #---G-------              \--*  IND       ref    $18a
N001 (  2, 10) [000091] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL] $106

***** BB01
STMT00029 (IL 0x017...  ???)
N004 (  8, 15) [000108] -A--G---R---              *  ASG       ref    $18a
N003 (  3,  2) [000107] D------N----              +--*  LCL_VAR   ref    V11 tmp9         d:2 $18a
N002 (  4, 12) [000094] #---G-------              \--*  IND       ref    $18a
N001 (  2, 10) [000093] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL] $106

***** BB01
STMT00026 (IL 0x017...  ???)
N004 (  7,  6) [000101] ------------              *  JTRUE     void  
N003 (  5,  4) [000100] J------N----              \--*  NE        int    $340
N001 (  3,  2) [000098] ------------                 +--*  LCL_VAR   int    V09 tmp7         u:2 (last use) $283
N002 (  1,  1) [000099] ------------                 \--*  CNS_INT   int    0 $40

------------ BB02 [017..018), preds={BB01} succs={BB03}

***** BB02
STMT00027 (IL 0x017...  ???)
N005 ( 20, 11) [000104] --CXG-------              *  CALL      void   System.Diagnostics.Debug.Fail $VN.Void
N003 (  3,  2) [000102] ------------ arg0 in rcx  +--*  LCL_VAR   ref    V11 tmp9         u:2 (last use) $18a
N004 (  3,  2) [000103] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V11 tmp9         u:2 (last use) $18a

------------ BB03 [000..018) -> BB05 (cond), preds={BB01,BB02} succs={BB04,BB05}

***** BB03
STMT00009 (IL   ???...  ???)
N009 ( 33, 14) [000034] -ACXG---R---              *  ASG       ref    $159
N008 (  1,  1) [000033] D------N----              +--*  LCL_VAR   ref    V05 tmp3         d:2 $159
N007 ( 33, 14) [000112] --CXG-------              \--*  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create $159
N004 ( 14,  5) [000188] -ACXG---R-L- arg1 SETUP      +--*  ASG       ref    $156
N003 (  1,  1) [000187] D------N----                 |  +--*  LCL_VAR   ref    V15 tmp13        d:2 $156
N002 ( 14,  5) [000110] --CXG-------                 |  \--*  CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices $156
N005 (  1,  1) [000189] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V15 tmp13        u:2 (last use) $156
N006 (  1,  1) [000021] ------------ arg0 in rcx     \--*  LCL_VAR   ref    V04 tmp2         u:2 (last use) $183

***** BB03
STMT00034 (IL   ???...  ???)
N006 (  4,  7) [000129] -A-XG---R---              *  ASG       ref    <l:$191, c:$190>
N005 (  1,  1) [000128] D------N----              +--*  LCL_VAR   ref    V12 tmp10        d:2 <l:$18e, c:$15c>
N004 (  4,  7) [000118] ---XG-------              \--*  IND       ref    <l:$191, c:$190>
N003 (  2,  5) [000192] -------N----                 \--*  ADD       byref  $201
N001 (  1,  1) [000036] ------------                    +--*  LCL_VAR   ref    V05 tmp3         u:2 $159
N002 (  1,  4) [000191] ------------                    \--*  CNS_INT   long   136 field offset Fseq[_loader] $1c2

***** BB03
STMT00033 (IL   ???...  ???)
N006 (  7,  7) [000127] -A-XG-------              *  ASG       bool   $VN.Void
N004 (  5,  5) [000126] D--XG--N----              +--*  IND       bool   $46
N003 (  2,  2) [000194] -------N----              |  \--*  ADD       byref  <l:$203, c:$202>
N001 (  1,  1) [000124] ------------              |     +--*  LCL_VAR   ref    V12 tmp10        u:2 (last use) <l:$18e, c:$15c>
N002 (  1,  1) [000193] ------------              |     \--*  CNS_INT   long   56 field offset Fseq[<LoadMetadataForReferencedProjects>k__BackingField] $1c3
N005 (  1,  1) [000125] ------------              \--*  CNS_INT   int    1 $46

***** BB03
STMT00037 (IL 0x033...  ???)
N006 (  4,  7) [000143] -A-XG---R---              *  ASG       ref    <l:$191, c:$192>
N005 (  1,  1) [000142] D------N----              +--*  LCL_VAR   ref    V13 tmp11        d:2 <l:$18e, c:$15e>
N004 (  4,  7) [000132] ---XG-------              \--*  IND       ref    <l:$191, c:$192>
N003 (  2,  5) [000196] -------N----                 \--*  ADD       byref  $201
N001 (  1,  1) [000040] ------------                    +--*  LCL_VAR   ref    V05 tmp3         u:2 $159
N002 (  1,  4) [000195] ------------                    \--*  CNS_INT   long   136 field offset Fseq[_loader] $1c2

***** BB03
STMT00036 (IL 0x033...  ???)
N006 (  7,  7) [000141] -A-XG-------              *  ASG       bool   $VN.Void
N004 (  5,  5) [000140] D--XG--N----              +--*  IND       bool   $46
N003 (  2,  2) [000198] -------N----              |  \--*  ADD       byref  <l:$205, c:$204>
N001 (  1,  1) [000138] ------------              |     +--*  LCL_VAR   ref    V13 tmp11        u:2 (last use) <l:$18e, c:$15e>
N002 (  1,  1) [000197] ------------              |     \--*  CNS_INT   long   57 field offset Fseq[<SkipUnrecognizedProjects>k__BackingField] $1c4
N005 (  1,  1) [000139] ------------              \--*  CNS_INT   int    1 $46

***** BB03
STMT00038 (IL 0x03A...  ???)
N012 ( 26, 40) [000148] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage $VN.Void
N007 (  4,  7) [000145] ---XG------- this in rcx  +--*  IND       ref    <l:$191, c:$193>
N006 (  2,  5) [000200] -------N----              |  \--*  ADD       byref  $201
N004 (  1,  1) [000044] ------------              |     +--*  LCL_VAR   ref    V05 tmp3         u:2 $159
N005 (  1,  4) [000199] ------------              |     \--*  CNS_INT   long   136 field offset Fseq[_loader] $1c2
N009 (  4, 12) [000202] #---G------- arg1 in rdx  +--*  IND       ref    $194
N008 (  2, 10) [000201] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "ilproj" $10b
N011 (  4, 12) [000204] #---G------- arg2 in r8   \--*  IND       ref    $195
N010 (  2, 10) [000203] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "IL" $10c

***** BB03
STMT00039 (IL 0x04A...  ???)
N012 ( 26, 40) [000153] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage $VN.Void
N007 (  4,  7) [000150] ---XG------- this in rcx  +--*  IND       ref    <l:$199, c:$198>
N006 (  2,  5) [000209] -------N----              |  \--*  ADD       byref  $201
N004 (  1,  1) [000048] ------------              |     +--*  LCL_VAR   ref    V05 tmp3         u:2 $159
N005 (  1,  4) [000208] ------------              |     \--*  CNS_INT   long   136 field offset Fseq[_loader] $1c2
N009 (  4, 12) [000211] #---G------- arg1 in rdx  +--*  IND       ref    $19a
N008 (  2, 10) [000210] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "vcxproj" $10d
N011 (  4, 12) [000213] #---G------- arg2 in r8   \--*  IND       ref    $19b
N010 (  2, 10) [000212] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "C++" $10e

***** BB03
STMT00014 (IL 0x05A...  ???)
N005 ( 16, 16) [000058] -AC-----R---              *  ASG       ref    $19c
N004 (  1,  1) [000057] D------N----              +--*  LCL_VAR   ref    V06 tmp4         d:2 $19c
N003 ( 16, 16) [000056] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $19c
N002 (  2, 10) [000055] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $10f

***** BB03
STMT00040 (IL   ???...  ???)
N004 (  5,  5) [000157] ------------              *  JTRUE     void  
N003 (  3,  3) [000156] J------N----              \--*  EQ        int    $40
N001 (  1,  1) [000053] ------------                 +--*  LCL_VAR   ref    V01 loc0         u:2 $180
N002 (  1,  1) [000155] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB04 [000..000) (return), preds={BB03} succs={}

***** BB04
STMT00041 (IL   ???...  ???)
N006 (  6,  6) [000160] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000159] D--XG--N----              +--*  IND       ref    $180
N003 (  2,  2) [000219] -------N----              |  \--*  ADD       byref  $206
N001 (  1,  1) [000059] ------------              |     +--*  LCL_VAR   ref    V06 tmp4         u:2 $19c
N002 (  1,  1) [000218] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $1c0
N005 (  1,  1) [000158] ------------              \--*  LCL_VAR   ref    V01 loc0         u:2 (last use) $180

***** BB04
STMT00042 (IL   ???...  ???)
N006 (  7, 15) [000164] -A-XG-------              *  ASG       long   $VN.Void
N004 (  4,  4) [000163] D--XG--N----              +--*  IND       long   $111
N003 (  2,  2) [000221] -------N----              |  \--*  ADD       byref  $207
N001 (  1,  1) [000161] ------------              |     +--*  LCL_VAR   ref    V06 tmp4         u:2 $19c
N002 (  1,  1) [000220] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $1c5
N005 (  2, 10) [000054] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $111

***** BB04
STMT00016 (IL 0x067...  ???)
N005 ( 16, 10) [000062] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed $VN.Void
N003 (  1,  1) [000052] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         u:2 $159
N004 (  1,  1) [000061] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V06 tmp4         u:2 (last use) $19c

***** BB04
STMT00017 (IL 0x06C...  ???)
N002 (  2,  2) [000063] ------------              *  RETURN    ref    $170
N001 (  1,  1) [000035] ------------              \--*  LCL_VAR   ref    V05 tmp3         u:2 (last use) $159

------------ BB05 [000..000) (throw), preds={BB03} succs={}

***** BB05
STMT00043 (IL   ???...  ???)
N001 ( 14,  5) [000165] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance $VN.Void

-------------------------------------------------------------------------------------------------------------------

*************** In optOptimizeValnumCSEs()

CSE candidate #01, key=$18a in BB01, [cost= 4, size=12]: 
N002 (  4, 12) CSE #01 (use)[000094] #---G-------              *  IND       ref    $18a
N001 (  2, 10)              [000093] H-----------              \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL] $106

CSE candidate #02, key=$18e in BB03, [cost= 4, size= 7]: 
N004 (  4,  7) CSE #02 (use)[000132] ---XG-------              *  IND       ref    <l:$191, c:$192>
N003 (  2,  5)              [000196] -------N----              \--*  ADD       byref  $201
N001 (  1,  1)              [000040] ------------                 +--*  LCL_VAR   ref    V05 tmp3         u:2 $159
N002 (  1,  4)              [000195] ------------                 \--*  CNS_INT   long   136 field offset Fseq[_loader] $1c2

Blocks that generate CSE def/uses
BB01 cseGen = 0000000000000003
BB03 cseGen = 0000000000000004

Performing DataFlow for ValnumCSE's
StartMerge BB01
  :: cseOut    = 000000000000001F
EndMerge BB01
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000003
  => cseOut    = 0000000000000003
  != preMerge  = 000000000000001F, => true
StartMerge BB02
  :: cseOut    = 000000000000001F
Merge BB02 and BB01
  :: cseIn     = 000000000000001F
  :: cseOut    = 000000000000001F
  => cseIn     = 0000000000000003
EndMerge BB02
  :: cseIn     = 0000000000000003
  -- cseKill   = 0000000000000005
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000001
  != preMerge  = 000000000000001F, => true
StartMerge BB03
  :: cseOut    = 000000000000001F
Merge BB03 and BB01
  :: cseIn     = 000000000000001F
  :: cseOut    = 000000000000001F
  => cseIn     = 0000000000000003
Merge BB03 and BB02
  :: cseIn     = 0000000000000003
  :: cseOut    = 000000000000001F
  => cseIn     = 0000000000000001
EndMerge BB03
  :: cseIn     = 0000000000000001
  -- cseKill   = 0000000000000005
  :: cseGen    = 0000000000000004
  => cseOut    = 0000000000000005
  != preMerge  = 000000000000001F, => true
StartMerge BB03
  :: cseOut    = 0000000000000005
Merge BB03 and BB01
  :: cseIn     = 0000000000000001
  :: cseOut    = 0000000000000005
  => cseIn     = 0000000000000001
Merge BB03 and BB02
  :: cseIn     = 0000000000000001
  :: cseOut    = 0000000000000005
  => cseIn     = 0000000000000001
EndMerge BB03
  :: cseIn     = 0000000000000001
  -- cseKill   = 0000000000000005
  :: cseGen    = 0000000000000004
  => cseOut    = 0000000000000005
  != preMerge  = 0000000000000005, => false
StartMerge BB04
  :: cseOut    = 000000000000001F
Merge BB04 and BB03
  :: cseIn     = 000000000000001F
  :: cseOut    = 000000000000001F
  => cseIn     = 0000000000000005
EndMerge BB04
  :: cseIn     = 0000000000000005
  -- cseKill   = 0000000000000005
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000005
  != preMerge  = 000000000000001F, => true
StartMerge BB05
  :: cseOut    = 000000000000001F
Merge BB05 and BB03
  :: cseIn     = 000000000000001F
  :: cseOut    = 000000000000001F
  => cseIn     = 0000000000000005
EndMerge BB05
  :: cseIn     = 0000000000000005
  -- cseKill   = 0000000000000005
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000005
  != preMerge  = 000000000000001F, => true

After performing DataFlow for ValnumCSE's
BB01 cseIn  = 0000000000000000, cseGen = 0000000000000003, cseOut = 0000000000000003
BB02 cseIn  = 0000000000000003, cseGen = 0000000000000000, cseOut = 0000000000000001
BB03 cseIn  = 0000000000000001, cseGen = 0000000000000004, cseOut = 0000000000000005
BB04 cseIn  = 0000000000000005, cseGen = 0000000000000000, cseOut = 0000000000000005
BB05 cseIn  = 0000000000000005, cseGen = 0000000000000000, cseOut = 0000000000000005

Labeling the CSEs with Use/Def information
BB01 [000092] Def of CSE #01 [weight=1   ]
BB01 [000094] Use of CSE #01 [weight=1   ]
BB03 [000118] Def of CSE #02 [weight=1   ]
BB03 [000132] Use of CSE #02 [weight=1   ]
BB03 [000145] Use of CSE #02 [weight=1   ]

************ Trees at start of optValnumCSE_Heuristic()

------------ BB01 [000..06D) -> BB03 (cond), preds={} succs={BB02,BB03}

***** BB01
STMT00000 (IL 0x000...0x005)
N005 ( 16, 16)              [000003] -AC-----R---              *  ASG       ref    $180
N004 (  1,  1)              [000002] D------N----              +--*  LCL_VAR   ref    V03 tmp1         d:2 $180
N003 ( 16, 16)              [000001] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $180
N002 (  2, 10)              [000000] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $100

***** BB01
STMT00002 (IL 0x005...  ???)
N003 (  1,  3)              [000008] -A------R---              *  ASG       ref    $180
N002 (  1,  1)              [000007] D------N----              +--*  LCL_VAR   ref    V01 loc0         d:2 $180
N001 (  1,  1)              [000006] ------------              \--*  LCL_VAR   ref    V03 tmp1         u:2 $180

***** BB01
STMT00003 (IL 0x006...0x008)
N006 (  6,  6)              [000012] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4)              [000011] D--XG--N----              +--*  IND       ref    $80
N003 (  2,  2)              [000170] -------N----              |  \--*  ADD       byref  $200
N001 (  1,  1)              [000009] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 (last use) $180
N002 (  1,  1)              [000169] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[projectPath] $1c0
N005 (  1,  1)              [000010] ------------              \--*  LCL_VAR   ref    V00 arg0         u:1 (last use) $80

***** BB01
STMT00005 (IL   ???...  ???)
N005 ( 16, 16)              [000018] -AC-----R---              *  ASG       ref    $183
N004 (  1,  1)              [000017] D------N----              +--*  LCL_VAR   ref    V04 tmp2         d:2 $183
N003 ( 16, 16)              [000016] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $183
N002 (  2, 10)              [000015] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $102

***** BB01
STMT00020 (IL   ???...  ???)
N004 (  4, 12)              [000073] -A--G---R---              *  ASG       ref    <l:$242, c:$145>
N003 (  1,  1)              [000072] D------N----              +--*  LCL_VAR   ref    V07 tmp5         d:2 <l:$242, c:$145>
N002 (  4, 12)              [000067] n---G-------              \--*  IND       ref    <l:$242, c:$145>
N001 (  2, 10)              [000172] I-----------                 \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[Instance] $103

***** BB01
STMT00019 (IL   ???...  ???)
N007 ( 17, 12)              [000071] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor $VN.Void
N004 (  1,  1)              [000019] ------------ this in rcx  +--*  LCL_VAR   ref    V04 tmp2         u:2 $183
N005 (  1,  1)              [000070] ------------ arg2 in r8   +--*  LCL_VAR   ref    V07 tmp5         u:2 (last use) <l:$242, c:$145>
N006 (  1,  1)              [000069] ------------ arg1 in rdx  \--*  CNS_INT   int    0 $40

***** BB01
STMT00023 (IL 0x017...  ???)
N010 ( 21, 33)              [000088] -ACXG---R---              *  ASG       ref    <l:$186, c:$185>
N009 (  1,  1)              [000087] D------N----              +--*  LCL_VAR   ref    V08 tmp6         d:2 <l:$243, c:$14a>
N008 ( 21, 33)              [000029] --CXG-------              \--*  COMMA     ref    <l:$186, c:$185>
N005 ( 17, 21)              [000028] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $301
N003 (  2, 10)              [000026] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc86100028 $1c1
N004 (  1,  4)              [000027] ------------ arg1 in rdx     |  \--*  CNS_INT   int    215 $43
N007 (  4, 12)              [000024] n---G-------                 \--*  IND       ref    <l:$243, c:$14a>
N006 (  2, 10)              [000178] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[FalseString] $104

***** BB01
STMT00024 (IL 0x017...  ???)
N002 (  2,  2)              [000086] ---X--------              *  NULLCHECK byte   $188
N001 (  1,  1)              [000085] ------------              \--*  LCL_VAR   ref    V04 tmp2         u:2 $183

***** BB01
STMT00021 (IL 0x017...  ???)
N012 ( 25, 28)              [000081] -ACXG---R---              *  ASG       bool   $283
N011 (  3,  2)              [000080] D------N----              +--*  LCL_VAR   int    V09 tmp7         d:2 $283
N010 ( 21, 25)              [000078] --CXG-------              \--*  CALL      int    System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].TryInsert $283
N006 (  4, 12)              [000180] #---G------- arg1 in rdx     +--*  IND       ref    $189
N005 (  2, 10)              [000179] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "AlwaysCompileMarkupFilesInSeparateDomain" $105
N007 (  1,  1)              [000022] ------------ this in rcx     +--*  LCL_VAR   ref    V04 tmp2         u:2 $183
N008 (  1,  1)              [000076] ------------ arg2 in r8      +--*  LCL_VAR   ref    V08 tmp6         u:2 (last use) <l:$243, c:$14a>
N009 (  1,  1)              [000077] ------------ arg3 in r9      \--*  CNS_INT   int    2 $44

***** BB01
STMT00028 (IL 0x017...  ???)
N004 (  8, 15)              [000106] -A--G---R---              *  ASG       ref    $18a
N003 (  3,  2)              [000105] D------N----              +--*  LCL_VAR   ref    V10 tmp8         d:2 $18a
N002 (  4, 12) CSE #01 (def)[000092] #---G-------              \--*  IND       ref    $18a
N001 (  2, 10)              [000091] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL] $106

***** BB01
STMT00029 (IL 0x017...  ???)
N004 (  8, 15)              [000108] -A--G---R---              *  ASG       ref    $18a
N003 (  3,  2)              [000107] D------N----              +--*  LCL_VAR   ref    V11 tmp9         d:2 $18a
N002 (  4, 12) CSE #01 (use)[000094] #---G-------              \--*  IND       ref    $18a
N001 (  2, 10)              [000093] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL] $106

***** BB01
STMT00026 (IL 0x017...  ???)
N004 (  7,  6)              [000101] ------------              *  JTRUE     void  
N003 (  5,  4)              [000100] J------N----              \--*  NE        int    $340
N001 (  3,  2)              [000098] ------------                 +--*  LCL_VAR   int    V09 tmp7         u:2 (last use) $283
N002 (  1,  1)              [000099] ------------                 \--*  CNS_INT   int    0 $40

------------ BB02 [017..018), preds={BB01} succs={BB03}

***** BB02
STMT00027 (IL 0x017...  ???)
N005 ( 20, 11)              [000104] --CXG-------              *  CALL      void   System.Diagnostics.Debug.Fail $VN.Void
N003 (  3,  2)              [000102] ------------ arg0 in rcx  +--*  LCL_VAR   ref    V11 tmp9         u:2 (last use) $18a
N004 (  3,  2)              [000103] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V11 tmp9         u:2 (last use) $18a

------------ BB03 [000..018) -> BB05 (cond), preds={BB01,BB02} succs={BB04,BB05}

***** BB03
STMT00009 (IL   ???...  ???)
N009 ( 33, 14)              [000034] -ACXG---R---              *  ASG       ref    $159
N008 (  1,  1)              [000033] D------N----              +--*  LCL_VAR   ref    V05 tmp3         d:2 $159
N007 ( 33, 14)              [000112] --CXG-------              \--*  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create $159
N004 ( 14,  5)              [000188] -ACXG---R-L- arg1 SETUP      +--*  ASG       ref    $156
N003 (  1,  1)              [000187] D------N----                 |  +--*  LCL_VAR   ref    V15 tmp13        d:2 $156
N002 ( 14,  5)              [000110] --CXG-------                 |  \--*  CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices $156
N005 (  1,  1)              [000189] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V15 tmp13        u:2 (last use) $156
N006 (  1,  1)              [000021] ------------ arg0 in rcx     \--*  LCL_VAR   ref    V04 tmp2         u:2 (last use) $183

***** BB03
STMT00034 (IL   ???...  ???)
N006 (  4,  7)              [000129] -A-XG---R---              *  ASG       ref    <l:$191, c:$190>
N005 (  1,  1)              [000128] D------N----              +--*  LCL_VAR   ref    V12 tmp10        d:2 <l:$18e, c:$15c>
N004 (  4,  7) CSE #02 (def)[000118] ---XG-------              \--*  IND       ref    <l:$191, c:$190>
N003 (  2,  5)              [000192] -------N----                 \--*  ADD       byref  $201
N001 (  1,  1)              [000036] ------------                    +--*  LCL_VAR   ref    V05 tmp3         u:2 $159
N002 (  1,  4)              [000191] ------------                    \--*  CNS_INT   long   136 field offset Fseq[_loader] $1c2

***** BB03
STMT00033 (IL   ???...  ???)
N006 (  7,  7)              [000127] -A-XG-------              *  ASG       bool   $VN.Void
N004 (  5,  5)              [000126] D--XG--N----              +--*  IND       bool   $46
N003 (  2,  2)              [000194] -------N----              |  \--*  ADD       byref  <l:$203, c:$202>
N001 (  1,  1)              [000124] ------------              |     +--*  LCL_VAR   ref    V12 tmp10        u:2 (last use) <l:$18e, c:$15c>
N002 (  1,  1)              [000193] ------------              |     \--*  CNS_INT   long   56 field offset Fseq[<LoadMetadataForReferencedProjects>k__BackingField] $1c3
N005 (  1,  1)              [000125] ------------              \--*  CNS_INT   int    1 $46

***** BB03
STMT00037 (IL 0x033...  ???)
N006 (  4,  7)              [000143] -A-XG---R---              *  ASG       ref    <l:$191, c:$192>
N005 (  1,  1)              [000142] D------N----              +--*  LCL_VAR   ref    V13 tmp11        d:2 <l:$18e, c:$15e>
N004 (  4,  7) CSE #02 (use)[000132] ---XG-------              \--*  IND       ref    <l:$191, c:$192>
N003 (  2,  5)              [000196] -------N----                 \--*  ADD       byref  $201
N001 (  1,  1)              [000040] ------------                    +--*  LCL_VAR   ref    V05 tmp3         u:2 $159
N002 (  1,  4)              [000195] ------------                    \--*  CNS_INT   long   136 field offset Fseq[_loader] $1c2

***** BB03
STMT00036 (IL 0x033...  ???)
N006 (  7,  7)              [000141] -A-XG-------              *  ASG       bool   $VN.Void
N004 (  5,  5)              [000140] D--XG--N----              +--*  IND       bool   $46
N003 (  2,  2)              [000198] -------N----              |  \--*  ADD       byref  <l:$205, c:$204>
N001 (  1,  1)              [000138] ------------              |     +--*  LCL_VAR   ref    V13 tmp11        u:2 (last use) <l:$18e, c:$15e>
N002 (  1,  1)              [000197] ------------              |     \--*  CNS_INT   long   57 field offset Fseq[<SkipUnrecognizedProjects>k__BackingField] $1c4
N005 (  1,  1)              [000139] ------------              \--*  CNS_INT   int    1 $46

***** BB03
STMT00038 (IL 0x03A...  ???)
N012 ( 26, 40)              [000148] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage $VN.Void
N007 (  4,  7) CSE #02 (use)[000145] ---XG------- this in rcx  +--*  IND       ref    <l:$191, c:$193>
N006 (  2,  5)              [000200] -------N----              |  \--*  ADD       byref  $201
N004 (  1,  1)              [000044] ------------              |     +--*  LCL_VAR   ref    V05 tmp3         u:2 $159
N005 (  1,  4)              [000199] ------------              |     \--*  CNS_INT   long   136 field offset Fseq[_loader] $1c2
N009 (  4, 12)              [000202] #---G------- arg1 in rdx  +--*  IND       ref    $194
N008 (  2, 10)              [000201] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "ilproj" $10b
N011 (  4, 12)              [000204] #---G------- arg2 in r8   \--*  IND       ref    $195
N010 (  2, 10)              [000203] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "IL" $10c

***** BB03
STMT00039 (IL 0x04A...  ???)
N012 ( 26, 40)              [000153] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage $VN.Void
N007 (  4,  7)              [000150] ---XG------- this in rcx  +--*  IND       ref    <l:$199, c:$198>
N006 (  2,  5)              [000209] -------N----              |  \--*  ADD       byref  $201
N004 (  1,  1)              [000048] ------------              |     +--*  LCL_VAR   ref    V05 tmp3         u:2 $159
N005 (  1,  4)              [000208] ------------              |     \--*  CNS_INT   long   136 field offset Fseq[_loader] $1c2
N009 (  4, 12)              [000211] #---G------- arg1 in rdx  +--*  IND       ref    $19a
N008 (  2, 10)              [000210] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "vcxproj" $10d
N011 (  4, 12)              [000213] #---G------- arg2 in r8   \--*  IND       ref    $19b
N010 (  2, 10)              [000212] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "C++" $10e

***** BB03
STMT00014 (IL 0x05A...  ???)
N005 ( 16, 16)              [000058] -AC-----R---              *  ASG       ref    $19c
N004 (  1,  1)              [000057] D------N----              +--*  LCL_VAR   ref    V06 tmp4         d:2 $19c
N003 ( 16, 16)              [000056] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $19c
N002 (  2, 10)              [000055] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $10f

***** BB03
STMT00040 (IL   ???...  ???)
N004 (  5,  5)              [000157] ------------              *  JTRUE     void  
N003 (  3,  3)              [000156] J------N----              \--*  EQ        int    $40
N001 (  1,  1)              [000053] ------------                 +--*  LCL_VAR   ref    V01 loc0         u:2 $180
N002 (  1,  1)              [000155] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB04 [000..000) (return), preds={BB03} succs={}

***** BB04
STMT00041 (IL   ???...  ???)
N006 (  6,  6)              [000160] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4)              [000159] D--XG--N----              +--*  IND       ref    $180
N003 (  2,  2)              [000219] -------N----              |  \--*  ADD       byref  $206
N001 (  1,  1)              [000059] ------------              |     +--*  LCL_VAR   ref    V06 tmp4         u:2 $19c
N002 (  1,  1)              [000218] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $1c0
N005 (  1,  1)              [000158] ------------              \--*  LCL_VAR   ref    V01 loc0         u:2 (last use) $180

***** BB04
STMT00042 (IL   ???...  ???)
N006 (  7, 15)              [000164] -A-XG-------              *  ASG       long   $VN.Void
N004 (  4,  4)              [000163] D--XG--N----              +--*  IND       long   $111
N003 (  2,  2)              [000221] -------N----              |  \--*  ADD       byref  $207
N001 (  1,  1)              [000161] ------------              |     +--*  LCL_VAR   ref    V06 tmp4         u:2 $19c
N002 (  1,  1)              [000220] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $1c5
N005 (  2, 10)              [000054] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $111

***** BB04
STMT00016 (IL 0x067...  ???)
N005 ( 16, 10)              [000062] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed $VN.Void
N003 (  1,  1)              [000052] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         u:2 $159
N004 (  1,  1)              [000061] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V06 tmp4         u:2 (last use) $19c

***** BB04
STMT00017 (IL 0x06C...  ???)
N002 (  2,  2)              [000063] ------------              *  RETURN    ref    $170
N001 (  1,  1)              [000035] ------------              \--*  LCL_VAR   ref    V05 tmp3         u:2 (last use) $159

------------ BB05 [000..000) (throw), preds={BB03} succs={}

***** BB05
STMT00043 (IL   ???...  ???)
N001 ( 14,  5)              [000165] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance $VN.Void

-------------------------------------------------------------------------------------------------------------------


Aggressive CSE Promotion cutoff is 350.000000
Moderate CSE Promotion cutoff is 100.000000
enregCount is 14
Framesize estimate is 0x0000
We have a small frame

Sorted CSE candidates:
CSE #02, {$18e, $18f} useCnt=2: [def=100.000000, use=200.000000, cost=  4      ]
        :: N004 (  4,  7) CSE #02 (def)[000118] ---XG-------              *  IND       ref    <l:$191, c:$190>
CSE #01, {$18a, $4  } useCnt=1: [def=100.000000, use=100.000000, cost=  4      ]
        :: N002 (  4, 12) CSE #01 (def)[000092] #---G-------              *  IND       ref    $18a


Considering CSE #02 {$18e, $18f} [def=100.000000, use=200.000000, cost=  4      ]
CSE Expression : 
N004 (  4,  7) CSE #02 (def)[000118] ---XG-------              *  IND       ref    <l:$191, c:$190>
N003 (  2,  5)              [000192] -------N----              \--*  ADD       byref  $201
N001 (  1,  1)              [000036] ------------                 +--*  LCL_VAR   ref    V05 tmp3         u:2 $159
N002 (  1,  4)              [000191] ------------                 \--*  CNS_INT   long   136 field offset Fseq[_loader] $1c2

Aggressive CSE Promotion (400.000000 >= 350.000000)
cseRefCnt=400.000000, aggressiveRefCnt=350.000000, moderateRefCnt=100.000000
defCnt=100.000000, useCnt=200.000000, cost=4, size=7
def_cost=1, use_cost=1, extra_no_cost=24, extra_yes_cost=0
CSE cost savings check (824.000000 >= 300.000000) passes

Promoting CSE:

lvaGrabTemp returning 16 (V16 rat0) (a long lifetime temp) called for CSE - aggressive.
CSE #02 is single-def, so associated CSE temp V16 will be in SSA
New refCnts for V16: refCnt =  2, refCntWtd = 2   
New refCnts for V16: refCnt =  3, refCntWtd = 3   
New refCnts for V16: refCnt =  4, refCntWtd = 4   

CSE #02 def at [000118] replaced in BB03 with def of V16
optValnumCSE morphed tree:
N010 (  5,  8)              [000129] -A-XG---R---              *  ASG       ref    <l:$191, c:$190>
N009 (  1,  1)              [000128] D------N----              +--*  LCL_VAR   ref    V12 tmp10        d:2 <l:$18e, c:$15c>
N008 (  5,  8)              [000227] -A-XG-------              \--*  COMMA     ref    <l:$191, c:$190>
N006 (  4,  7)              [000225] -A-XG---R---                 +--*  ASG       ref    $VN.Void
N005 (  1,  1)              [000224] D------N----                 |  +--*  LCL_VAR   ref    V16 cse0         d:1 <l:$191, c:$190>
N004 (  4,  7)              [000118] ---XG-------                 |  \--*  IND       ref    <l:$191, c:$190>
N003 (  2,  5)              [000192] -------N----                 |     \--*  ADD       byref  $201
N001 (  1,  1)              [000036] ------------                 |        +--*  LCL_VAR   ref    V05 tmp3         u:2 $159
N002 (  1,  4)              [000191] ------------                 |        \--*  CNS_INT   long   136 field offset Fseq[_loader] $1c2
N007 (  1,  1)              [000226] ------------                 \--*  LCL_VAR   ref    V16 cse0         u:1 <l:$191, c:$190>


Working on the replacement of the CSE #02 use at [000132] in BB03
optValnumCSE morphed tree:
N003 (  1,  3)              [000143] -A--G---R---              *  ASG       ref    <l:$191, c:$192>
N002 (  1,  1)              [000142] D------N----              +--*  LCL_VAR   ref    V13 tmp11        d:2 <l:$18e, c:$15e>
N001 (  1,  1)              [000228] ------------              \--*  LCL_VAR   ref    V16 cse0         u:1 <l:$18e, c:$15c>


Working on the replacement of the CSE #02 use at [000145] in BB03
ReMorphing args for 148.CALL:
argSlots=3, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32
ArgTable for 148.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 229.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 202.IND ref (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]
fgArgTabEntry[arg 2 204.IND ref (By ref), 1 reg: r8, byteAlignment=8, lateArgInx=2, processed]

optValnumCSE morphed tree:
N009 ( 23, 34)              [000148] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage $VN.Void
N004 (  1,  1)              [000229] ------------ this in rcx  +--*  LCL_VAR   ref    V16 cse0         u:1 <l:$18e, c:$15c>
N006 (  4, 12)              [000202] #---G------- arg1 in rdx  +--*  IND       ref    $194
N005 (  2, 10)              [000201] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "ilproj" $10b
N008 (  4, 12)              [000204] #---G------- arg2 in r8   \--*  IND       ref    $195
N007 (  2, 10)              [000203] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "IL" $10c


Considering CSE #01 {$18a, $4  } [def=100.000000, use=100.000000, cost=  4      ]
CSE Expression : 
N002 (  4, 12) CSE #01 (def)[000092] #---G-------              *  IND       ref    $18a
N001 (  2, 10)              [000091] H-----------              \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL] $106

Moderate CSE Promotion (CSE never live at call) (300.000000 >= 100.000000)
cseRefCnt=300.000000, aggressiveRefCnt=350.000000, moderateRefCnt=100.000000
defCnt=100.000000, useCnt=100.000000, cost=4, size=12
def_cost=2, use_cost=1, extra_no_cost=22, extra_yes_cost=0
CSE cost savings check (422.000000 >= 300.000000) passes

Promoting CSE:

lvaGrabTemp returning 17 (V17 rat0) (a long lifetime temp) called for CSE - moderate.
CSE #01 is single-def, so associated CSE temp V17 will be in SSA
New refCnts for V17: refCnt =  2, refCntWtd = 2   
New refCnts for V17: refCnt =  3, refCntWtd = 3   

CSE #01 def at [000092] replaced in BB01 with def of V17
optValnumCSE morphed tree:
N008 (  9, 16)              [000106] -A--G---R---              *  ASG       ref    $18a
N007 (  3,  2)              [000105] D------N----              +--*  LCL_VAR   ref    V10 tmp8         d:2 $18a
N006 (  5, 13)              [000233] -A--G-------              \--*  COMMA     ref    $18a
N004 (  4, 12)              [000231] -A--G---R---                 +--*  ASG       ref    $VN.Void
N003 (  1,  1)              [000230] D------N----                 |  +--*  LCL_VAR   ref    V17 cse1         d:1 $18a
N002 (  4, 12)              [000092] #---G-------                 |  \--*  IND       ref    $18a
N001 (  2, 10)              [000091] H-----------                 |     \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL] $106
N005 (  1,  1)              [000232] ------------                 \--*  LCL_VAR   ref    V17 cse1         u:1 $18a


Working on the replacement of the CSE #01 use at [000094] in BB01
optValnumCSE morphed tree:
N003 (  5,  4)              [000108] -A--G---R---              *  ASG       ref    $18a
N002 (  3,  2)              [000107] D------N----              +--*  LCL_VAR   ref    V11 tmp9         d:2 $18a
N001 (  1,  1)              [000234] ------------              \--*  LCL_VAR   ref    V17 cse1         u:1 $18a


*************** Finishing PHASE Optimize Valnum CSEs

*************** Starting PHASE Assertion prop
*************** In optAssertionPropMain()
Blocks/Trees at start of phase

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)-> BB03 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB02 [0008]  1       BB01                  0.25    [017..018)                                     i hascall gcsafe 
BB03 [0009]  2       BB01,BB02             1       [000..018)-> BB05 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB04 [0020]  1       BB03                  1       [000..000)        (return)                     i internal label target hascall gcsafe newobj nullcheck 
BB05 [0019]  1       BB03                  0       [000..000)        (throw )                     i internal rare label target hascall gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06D) -> BB03 (cond), preds={} succs={BB02,BB03}

***** BB01
STMT00000 (IL 0x000...0x005)
N005 ( 16, 16) [000003] -AC-----R---              *  ASG       ref    $180
N004 (  1,  1) [000002] D------N----              +--*  LCL_VAR   ref    V03 tmp1         d:2 $180
N003 ( 16, 16) [000001] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $180
N002 (  2, 10) [000000] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $100

***** BB01
STMT00002 (IL 0x005...  ???)
N003 (  1,  3) [000008] -A------R---              *  ASG       ref    $180
N002 (  1,  1) [000007] D------N----              +--*  LCL_VAR   ref    V01 loc0         d:2 $180
N001 (  1,  1) [000006] ------------              \--*  LCL_VAR   ref    V03 tmp1         u:2 $180

***** BB01
STMT00003 (IL 0x006...0x008)
N006 (  6,  6) [000012] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000011] D--XG--N----              +--*  IND       ref    $80
N003 (  2,  2) [000170] -------N----              |  \--*  ADD       byref  $200
N001 (  1,  1) [000009] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 (last use) $180
N002 (  1,  1) [000169] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[projectPath] $1c0
N005 (  1,  1) [000010] ------------              \--*  LCL_VAR   ref    V00 arg0         u:1 (last use) $80

***** BB01
STMT00005 (IL   ???...  ???)
N005 ( 16, 16) [000018] -AC-----R---              *  ASG       ref    $183
N004 (  1,  1) [000017] D------N----              +--*  LCL_VAR   ref    V04 tmp2         d:2 $183
N003 ( 16, 16) [000016] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $183
N002 (  2, 10) [000015] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $102

***** BB01
STMT00020 (IL   ???...  ???)
N004 (  4, 12) [000073] -A--G---R---              *  ASG       ref    <l:$242, c:$145>
N003 (  1,  1) [000072] D------N----              +--*  LCL_VAR   ref    V07 tmp5         d:2 <l:$242, c:$145>
N002 (  4, 12) [000067] n---G-------              \--*  IND       ref    <l:$242, c:$145>
N001 (  2, 10) [000172] I-----------                 \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[Instance] $103

***** BB01
STMT00019 (IL   ???...  ???)
N007 ( 17, 12) [000071] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor $VN.Void
N004 (  1,  1) [000019] ------------ this in rcx  +--*  LCL_VAR   ref    V04 tmp2         u:2 $183
N005 (  1,  1) [000070] ------------ arg2 in r8   +--*  LCL_VAR   ref    V07 tmp5         u:2 (last use) <l:$242, c:$145>
N006 (  1,  1) [000069] ------------ arg1 in rdx  \--*  CNS_INT   int    0 $40

***** BB01
STMT00023 (IL 0x017...  ???)
N010 ( 21, 33) [000088] -ACXG---R---              *  ASG       ref    <l:$186, c:$185>
N009 (  1,  1) [000087] D------N----              +--*  LCL_VAR   ref    V08 tmp6         d:2 <l:$243, c:$14a>
N008 ( 21, 33) [000029] --CXG-------              \--*  COMMA     ref    <l:$186, c:$185>
N005 ( 17, 21) [000028] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $301
N003 (  2, 10) [000026] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc86100028 $1c1
N004 (  1,  4) [000027] ------------ arg1 in rdx     |  \--*  CNS_INT   int    215 $43
N007 (  4, 12) [000024] n---G-------                 \--*  IND       ref    <l:$243, c:$14a>
N006 (  2, 10) [000178] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[FalseString] $104

***** BB01
STMT00024 (IL 0x017...  ???)
N002 (  2,  2) [000086] ---X--------              *  NULLCHECK byte   $188
N001 (  1,  1) [000085] ------------              \--*  LCL_VAR   ref    V04 tmp2         u:2 $183

***** BB01
STMT00021 (IL 0x017...  ???)
N012 ( 25, 28) [000081] -ACXG---R---              *  ASG       bool   $283
N011 (  3,  2) [000080] D------N----              +--*  LCL_VAR   int    V09 tmp7         d:2 $283
N010 ( 21, 25) [000078] --CXG-------              \--*  CALL      int    System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].TryInsert $283
N006 (  4, 12) [000180] #---G------- arg1 in rdx     +--*  IND       ref    $189
N005 (  2, 10) [000179] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "AlwaysCompileMarkupFilesInSeparateDomain" $105
N007 (  1,  1) [000022] ------------ this in rcx     +--*  LCL_VAR   ref    V04 tmp2         u:2 $183
N008 (  1,  1) [000076] ------------ arg2 in r8      +--*  LCL_VAR   ref    V08 tmp6         u:2 (last use) <l:$243, c:$14a>
N009 (  1,  1) [000077] ------------ arg3 in r9      \--*  CNS_INT   int    2 $44

***** BB01
STMT00028 (IL 0x017...  ???)
N008 (  9, 16) [000106] -A--G---R---              *  ASG       ref    $18a
N007 (  3,  2) [000105] D------N----              +--*  LCL_VAR   ref    V10 tmp8         d:2 $18a
N006 (  5, 13) [000233] -A--G-------              \--*  COMMA     ref    $18a
N004 (  4, 12) [000231] -A--G---R---                 +--*  ASG       ref    $VN.Void
N003 (  1,  1) [000230] D------N----                 |  +--*  LCL_VAR   ref    V17 cse1         d:1 $18a
N002 (  4, 12) [000092] #---G-------                 |  \--*  IND       ref    $18a
N001 (  2, 10) [000091] H-----------                 |     \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL] $106
N005 (  1,  1) [000232] ------------                 \--*  LCL_VAR   ref    V17 cse1         u:1 $18a

***** BB01
STMT00029 (IL 0x017...  ???)
N003 (  5,  4) [000108] -A--G---R---              *  ASG       ref    $18a
N002 (  3,  2) [000107] D------N----              +--*  LCL_VAR   ref    V11 tmp9         d:2 $18a
N001 (  1,  1) [000234] ------------              \--*  LCL_VAR   ref    V17 cse1         u:1 $18a

***** BB01
STMT00026 (IL 0x017...  ???)
N004 (  7,  6) [000101] ------------              *  JTRUE     void  
N003 (  5,  4) [000100] J------N----              \--*  NE        int    $340
N001 (  3,  2) [000098] ------------                 +--*  LCL_VAR   int    V09 tmp7         u:2 (last use) $283
N002 (  1,  1) [000099] ------------                 \--*  CNS_INT   int    0 $40

------------ BB02 [017..018), preds={BB01} succs={BB03}

***** BB02
STMT00027 (IL 0x017...  ???)
N005 ( 20, 11) [000104] --CXG-------              *  CALL      void   System.Diagnostics.Debug.Fail $VN.Void
N003 (  3,  2) [000102] ------------ arg0 in rcx  +--*  LCL_VAR   ref    V11 tmp9         u:2 (last use) $18a
N004 (  3,  2) [000103] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V11 tmp9         u:2 (last use) $18a

------------ BB03 [000..018) -> BB05 (cond), preds={BB01,BB02} succs={BB04,BB05}

***** BB03
STMT00009 (IL   ???...  ???)
N009 ( 33, 14) [000034] -ACXG---R---              *  ASG       ref    $159
N008 (  1,  1) [000033] D------N----              +--*  LCL_VAR   ref    V05 tmp3         d:2 $159
N007 ( 33, 14) [000112] --CXG-------              \--*  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create $159
N004 ( 14,  5) [000188] -ACXG---R-L- arg1 SETUP      +--*  ASG       ref    $156
N003 (  1,  1) [000187] D------N----                 |  +--*  LCL_VAR   ref    V15 tmp13        d:2 $156
N002 ( 14,  5) [000110] --CXG-------                 |  \--*  CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices $156
N005 (  1,  1) [000189] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V15 tmp13        u:2 (last use) $156
N006 (  1,  1) [000021] ------------ arg0 in rcx     \--*  LCL_VAR   ref    V04 tmp2         u:2 (last use) $183

***** BB03
STMT00034 (IL   ???...  ???)
N010 (  5,  8) [000129] -A-XG---R---              *  ASG       ref    <l:$191, c:$190>
N009 (  1,  1) [000128] D------N----              +--*  LCL_VAR   ref    V12 tmp10        d:2 <l:$18e, c:$15c>
N008 (  5,  8) [000227] -A-XG-------              \--*  COMMA     ref    <l:$191, c:$190>
N006 (  4,  7) [000225] -A-XG---R---                 +--*  ASG       ref    $VN.Void
N005 (  1,  1) [000224] D------N----                 |  +--*  LCL_VAR   ref    V16 cse0         d:1 <l:$191, c:$190>
N004 (  4,  7) [000118] ---XG-------                 |  \--*  IND       ref    <l:$191, c:$190>
N003 (  2,  5) [000192] -------N----                 |     \--*  ADD       byref  $201
N001 (  1,  1) [000036] ------------                 |        +--*  LCL_VAR   ref    V05 tmp3         u:2 $159
N002 (  1,  4) [000191] ------------                 |        \--*  CNS_INT   long   136 field offset Fseq[_loader] $1c2
N007 (  1,  1) [000226] ------------                 \--*  LCL_VAR   ref    V16 cse0         u:1 <l:$191, c:$190>

***** BB03
STMT00033 (IL   ???...  ???)
N006 (  7,  7) [000127] -A-XG-------              *  ASG       bool   $VN.Void
N004 (  5,  5) [000126] D--XG--N----              +--*  IND       bool   $46
N003 (  2,  2) [000194] -------N----              |  \--*  ADD       byref  <l:$203, c:$202>
N001 (  1,  1) [000124] ------------              |     +--*  LCL_VAR   ref    V12 tmp10        u:2 (last use) <l:$18e, c:$15c>
N002 (  1,  1) [000193] ------------              |     \--*  CNS_INT   long   56 field offset Fseq[<LoadMetadataForReferencedProjects>k__BackingField] $1c3
N005 (  1,  1) [000125] ------------              \--*  CNS_INT   int    1 $46

***** BB03
STMT00037 (IL 0x033...  ???)
N003 (  1,  3) [000143] -A--G---R---              *  ASG       ref    <l:$191, c:$192>
N002 (  1,  1) [000142] D------N----              +--*  LCL_VAR   ref    V13 tmp11        d:2 <l:$18e, c:$15e>
N001 (  1,  1) [000228] ------------              \--*  LCL_VAR   ref    V16 cse0         u:1 <l:$18e, c:$15c>

***** BB03
STMT00036 (IL 0x033...  ???)
N006 (  7,  7) [000141] -A-XG-------              *  ASG       bool   $VN.Void
N004 (  5,  5) [000140] D--XG--N----              +--*  IND       bool   $46
N003 (  2,  2) [000198] -------N----              |  \--*  ADD       byref  <l:$205, c:$204>
N001 (  1,  1) [000138] ------------              |     +--*  LCL_VAR   ref    V13 tmp11        u:2 (last use) <l:$18e, c:$15e>
N002 (  1,  1) [000197] ------------              |     \--*  CNS_INT   long   57 field offset Fseq[<SkipUnrecognizedProjects>k__BackingField] $1c4
N005 (  1,  1) [000139] ------------              \--*  CNS_INT   int    1 $46

***** BB03
STMT00038 (IL 0x03A...  ???)
N009 ( 23, 34) [000148] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage $VN.Void
N004 (  1,  1) [000229] ------------ this in rcx  +--*  LCL_VAR   ref    V16 cse0         u:1 <l:$18e, c:$15c>
N006 (  4, 12) [000202] #---G------- arg1 in rdx  +--*  IND       ref    $194
N005 (  2, 10) [000201] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "ilproj" $10b
N008 (  4, 12) [000204] #---G------- arg2 in r8   \--*  IND       ref    $195
N007 (  2, 10) [000203] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "IL" $10c

***** BB03
STMT00039 (IL 0x04A...  ???)
N012 ( 26, 40) [000153] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage $VN.Void
N007 (  4,  7) [000150] ---XG------- this in rcx  +--*  IND       ref    <l:$199, c:$198>
N006 (  2,  5) [000209] -------N----              |  \--*  ADD       byref  $201
N004 (  1,  1) [000048] ------------              |     +--*  LCL_VAR   ref    V05 tmp3         u:2 $159
N005 (  1,  4) [000208] ------------              |     \--*  CNS_INT   long   136 field offset Fseq[_loader] $1c2
N009 (  4, 12) [000211] #---G------- arg1 in rdx  +--*  IND       ref    $19a
N008 (  2, 10) [000210] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "vcxproj" $10d
N011 (  4, 12) [000213] #---G------- arg2 in r8   \--*  IND       ref    $19b
N010 (  2, 10) [000212] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "C++" $10e

***** BB03
STMT00014 (IL 0x05A...  ???)
N005 ( 16, 16) [000058] -AC-----R---              *  ASG       ref    $19c
N004 (  1,  1) [000057] D------N----              +--*  LCL_VAR   ref    V06 tmp4         d:2 $19c
N003 ( 16, 16) [000056] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $19c
N002 (  2, 10) [000055] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $10f

***** BB03
STMT00040 (IL   ???...  ???)
N004 (  5,  5) [000157] ------------              *  JTRUE     void  
N003 (  3,  3) [000156] J------N----              \--*  EQ        int    $40
N001 (  1,  1) [000053] ------------                 +--*  LCL_VAR   ref    V01 loc0         u:2 $180
N002 (  1,  1) [000155] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB04 [000..000) (return), preds={BB03} succs={}

***** BB04
STMT00041 (IL   ???...  ???)
N006 (  6,  6) [000160] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000159] D--XG--N----              +--*  IND       ref    $180
N003 (  2,  2) [000219] -------N----              |  \--*  ADD       byref  $206
N001 (  1,  1) [000059] ------------              |     +--*  LCL_VAR   ref    V06 tmp4         u:2 $19c
N002 (  1,  1) [000218] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $1c0
N005 (  1,  1) [000158] ------------              \--*  LCL_VAR   ref    V01 loc0         u:2 (last use) $180

***** BB04
STMT00042 (IL   ???...  ???)
N006 (  7, 15) [000164] -A-XG-------              *  ASG       long   $VN.Void
N004 (  4,  4) [000163] D--XG--N----              +--*  IND       long   $111
N003 (  2,  2) [000221] -------N----              |  \--*  ADD       byref  $207
N001 (  1,  1) [000161] ------------              |     +--*  LCL_VAR   ref    V06 tmp4         u:2 $19c
N002 (  1,  1) [000220] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $1c5
N005 (  2, 10) [000054] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $111

***** BB04
STMT00016 (IL 0x067...  ???)
N005 ( 16, 10) [000062] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed $VN.Void
N003 (  1,  1) [000052] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         u:2 $159
N004 (  1,  1) [000061] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V06 tmp4         u:2 (last use) $19c

***** BB04
STMT00017 (IL 0x06C...  ???)
N002 (  2,  2) [000063] ------------              *  RETURN    ref    $170
N001 (  1,  1) [000035] ------------              \--*  LCL_VAR   ref    V05 tmp3         u:2 (last use) $159

------------ BB05 [000..000) (throw), preds={BB03} succs={}

***** BB05
STMT00043 (IL   ???...  ???)
N001 ( 14,  5) [000165] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance $VN.Void

-------------------------------------------------------------------------------------------------------------------

VN based non-null prop in BB01:
N004 (  4,  4) [000011] D--XG--N----              *  IND       ref    $80
optVNAssertionPropCurStmt morphed tree:
N006 (  6,  6) [000012] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000011] n---GO-N----              +--*  IND       ref    $80
N003 (  2,  2) [000170] -------N----              |  \--*  ADD       byref  $200
N001 (  1,  1) [000009] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 (last use) $180
N002 (  1,  1) [000169] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[projectPath] $1c0
N005 (  1,  1) [000010] ------------              \--*  LCL_VAR   ref    V00 arg0         u:1 (last use) $80

GenTreeNode creates assertion:
N004 (  4,  4) [000011] n---GO-N----              *  IND       ref    $80
In BB01 New Global Constant Assertion: (384, 0) ($180,$0) V01.02 != null index=#01, mask=0000000000000001

VN based non-null prop in BB01:
N002 (  2,  2) [000086] ---X--------              *  NULLCHECK byte   $188

Removing statement STMT00024 (IL 0x017...  ???)
N002 (  2,  2) [000086] -----O------              *  NULLCHECK byte   $188
N001 (  1,  1) [000085] ------------              \--*  LCL_VAR   ref    V04 tmp2         u:2 $183
 in BB01 as useless:

optVNAssertionPropCurStmt removed tree:
N002 (  2,  2) [000086] -----O------              *  NULLCHECK byte   $188
N001 (  1,  1) [000085] ------------              \--*  LCL_VAR   ref    V04 tmp2         u:2 $183

GenTreeNode creates assertion:
N004 (  7,  6) [000101] ------------              *  JTRUE     void  
In BB01 New Global Constant Assertion: (643, 64) ($283,$40) V09.02 != 0 index=#02, mask=0000000000000002
GenTreeNode creates assertion:
N004 (  7,  6) [000101] ------------              *  JTRUE     void  
In BB01 New Global Constant Assertion: (643, 64) ($283,$40) V09.02 == 0 index=#03, mask=0000000000000004
GenTreeNode creates assertion:
N004 (  4,  7) [000118] ---XG-------              *  IND       ref    <l:$191, c:$190>
In BB03 New Global Constant Assertion: (345, 0) ($159,$0) V05.02 != null index=#04, mask=0000000000000008
GenTreeNode creates assertion:
N004 (  5,  5) [000126] D--XG--N----              *  IND       bool   $46
In BB03 New Global Constant Assertion: (348, 0) ($15c,$0) V12.02 != null index=#05, mask=0000000000000010
GenTreeNode creates assertion:
N004 (  5,  5) [000140] D--XG--N----              *  IND       bool   $46
In BB03 New Global Constant Assertion: (350, 0) ($15e,$0) V13.02 != null index=#06, mask=0000000000000020
After constant propagation on [000157]:
STMT00040 (IL   ???...  ???)
N004 (  5,  5) [000157] ------------              *  JTRUE     void  
N003 (  3,  3) [000156] J------N----              \--*  NE        int    $40
               [000235] ------------                 +--*  CNS_INT   int    0 $40
               [000236] ------------                 \--*  CNS_INT   int    0 $40

Folding operator with constant nodes into a constant:
N003 (  3,  3) [000156] J------N----              *  NE        int    $40
               [000235] ------------              +--*  CNS_INT   int    0 $40
               [000236] ------------              \--*  CNS_INT   int    0 $40
Bashed to int constant:
N003 (  3,  3) [000156] ------------              *  CNS_INT   int    0 $40

Removing statement STMT00040 (IL   ???...  ???)
N004 (  5,  5) [000157] ------------              *  JTRUE     void  
N003 (  3,  3) [000156] ------------              \--*  CNS_INT   int    0 $40
 in BB03 as useless:


Conditional folded at BB03
BB03 becomes a BBJ_NONE
optVNAssertionPropCurStmt removed tree:
N004 (  5,  5) [000157] ------------              *  JTRUE     void  
N003 (  3,  3) [000156] ------------              \--*  CNS_INT   int    0 $40


VN based non-null prop in BB04:
N004 (  4,  4) [000159] D--XG--N----              *  IND       ref    $180
optVNAssertionPropCurStmt morphed tree:
N006 (  6,  6) [000160] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000159] n---GO-N----              +--*  IND       ref    $180
N003 (  2,  2) [000219] -------N----              |  \--*  ADD       byref  $206
N001 (  1,  1) [000059] ------------              |     +--*  LCL_VAR   ref    V06 tmp4         u:2 $19c
N002 (  1,  1) [000218] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $1c0
N005 (  1,  1) [000158] ------------              \--*  LCL_VAR   ref    V01 loc0         u:2 (last use) $180

GenTreeNode creates assertion:
N004 (  4,  4) [000159] n---GO-N----              *  IND       ref    $180
In BB04 New Global Constant Assertion: (412, 0) ($19c,$0) V06.02 != null index=#07, mask=0000000000000040

VN based non-null prop in BB04:
N004 (  4,  4) [000163] D--XG--N----              *  IND       long   $111
optVNAssertionPropCurStmt morphed tree:
N006 (  7, 15) [000164] -A--GO------              *  ASG       long   $VN.Void
N004 (  4,  4) [000163] n---GO-N----              +--*  IND       long   $111
N003 (  2,  2) [000221] -------N----              |  \--*  ADD       byref  $207
N001 (  1,  1) [000161] ------------              |     +--*  LCL_VAR   ref    V06 tmp4         u:2 $19c
N002 (  1,  1) [000220] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $1c5
N005 (  2, 10) [000054] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $111

BB01 valueGen = 0000000000000005 => BB03 valueGen = 0000000000000003,
BB02 valueGen = 0000000000000000
BB03 valueGen = 0000000000000038
BB04 valueGen = 0000000000000048
BB05 valueGen = 0000000000000000
AssertionPropCallback::StartMerge: BB01 in -> 0000000000000000
AssertionPropCallback::EndMerge  : BB01 in -> 0000000000000000

AssertionPropCallback::Changed   : BB01 before out -> 000000000000007F; after out -> 0000000000000005;
		jumpDest before out -> 000000000000007F; jumpDest after out -> 0000000000000003;

AssertionPropCallback::StartMerge: BB02 in -> 000000000000007F
AssertionPropCallback::Merge     : BB02 in -> 000000000000007F, predBlock BB01 out -> 0000000000000005
AssertionPropCallback::EndMerge  : BB02 in -> 0000000000000005

AssertionPropCallback::Changed   : BB02 before out -> 000000000000007F; after out -> 0000000000000005;
		jumpDest before out -> 000000000000007F; jumpDest after out -> 0000000000000005;

AssertionPropCallback::StartMerge: BB03 in -> 000000000000007F
AssertionPropCallback::Merge     : BB03 in -> 000000000000007F, predBlock BB01 out -> 0000000000000005
AssertionPropCallback::Merge     : BB03 in -> 0000000000000003, predBlock BB02 out -> 0000000000000005
AssertionPropCallback::EndMerge  : BB03 in -> 0000000000000001

AssertionPropCallback::Changed   : BB03 before out -> 000000000000007F; after out -> 0000000000000039;
		jumpDest before out -> 000000000000007F; jumpDest after out -> 0000000000000001;

AssertionPropCallback::StartMerge: BB03 in -> 0000000000000001
AssertionPropCallback::Merge     : BB03 in -> 0000000000000001, predBlock BB01 out -> 0000000000000005
AssertionPropCallback::Merge     : BB03 in -> 0000000000000001, predBlock BB02 out -> 0000000000000005
AssertionPropCallback::EndMerge  : BB03 in -> 0000000000000001

AssertionPropCallback::Unchanged  : BB03 out -> 0000000000000039; 		jumpDest out -> 0000000000000001

AssertionPropCallback::StartMerge: BB04 in -> 000000000000007F
AssertionPropCallback::Merge     : BB04 in -> 000000000000007F, predBlock BB03 out -> 0000000000000039
AssertionPropCallback::EndMerge  : BB04 in -> 0000000000000039

AssertionPropCallback::Changed   : BB04 before out -> 000000000000007F; after out -> 0000000000000079;
		jumpDest before out -> 000000000000007F; jumpDest after out -> 0000000000000039;



BB01 valueIn  = 0000000000000000 valueOut = 0000000000000005 => BB03 valueOut= 0000000000000003
BB02 valueIn  = 0000000000000005 valueOut = 0000000000000005
BB03 valueIn  = 0000000000000001 valueOut = 0000000000000039
BB04 valueIn  = 0000000000000039 valueOut = 0000000000000079
BB05 valueIn  = 000000000000007F valueOut = 000000000000007F
Propagating 0000000000000000 assertions for BB01, stmt STMT00000, tree [000168], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00000, tree [000000], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00000, tree [000001], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00000, tree [000002], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00000, tree [000003], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00002, tree [000006], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00002, tree [000007], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00002, tree [000008], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00003, tree [000009], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00003, tree [000169], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00003, tree [000170], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00003, tree [000011], tree -> 1
Propagating 0000000000000001 assertions for BB01, stmt STMT00003, tree [000010], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00003, tree [000012], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00005, tree [000171], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00005, tree [000015], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00005, tree [000016], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00005, tree [000017], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00005, tree [000018], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00020, tree [000172], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00020, tree [000067], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00020, tree [000072], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00020, tree [000073], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00019, tree [000173], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00019, tree [000175], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00019, tree [000174], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00019, tree [000019], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00019, tree [000070], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00019, tree [000069], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00019, tree [000071], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00023, tree [000176], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00023, tree [000177], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00023, tree [000026], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00023, tree [000027], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00023, tree [000028], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00023, tree [000178], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00023, tree [000024], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00023, tree [000029], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00023, tree [000087], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00023, tree [000088], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00021, tree [000182], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00021, tree [000181], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00021, tree [000183], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00021, tree [000184], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00021, tree [000179], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00021, tree [000180], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00021, tree [000022], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00021, tree [000076], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00021, tree [000077], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00021, tree [000078], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00021, tree [000080], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00021, tree [000081], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00028, tree [000091], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00028, tree [000092], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00028, tree [000230], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00028, tree [000231], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00028, tree [000232], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00028, tree [000233], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00028, tree [000105], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00028, tree [000106], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00029, tree [000234], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00029, tree [000107], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00029, tree [000108], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00026, tree [000098], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00026, tree [000099], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00026, tree [000100], tree -> 0
Failed to find a suitable dominating compare, so we won't optimize
Propagating 0000000000000001 assertions for BB01, stmt STMT00026, tree [000101], tree -> 2
Propagating 0000000000000005 assertions for BB02, stmt STMT00027, tree [000185], tree -> 0
Propagating 0000000000000005 assertions for BB02, stmt STMT00027, tree [000186], tree -> 0
Propagating 0000000000000005 assertions for BB02, stmt STMT00027, tree [000102], tree -> 0
Propagating 0000000000000005 assertions for BB02, stmt STMT00027, tree [000103], tree -> 0
Propagating 0000000000000005 assertions for BB02, stmt STMT00027, tree [000104], tree -> 0
Propagating 0000000000000001 assertions for BB03, stmt STMT00009, tree [000190], tree -> 0
Propagating 0000000000000001 assertions for BB03, stmt STMT00009, tree [000110], tree -> 0
Propagating 0000000000000001 assertions for BB03, stmt STMT00009, tree [000187], tree -> 0
Propagating 0000000000000001 assertions for BB03, stmt STMT00009, tree [000188], tree -> 0
Propagating 0000000000000001 assertions for BB03, stmt STMT00009, tree [000189], tree -> 0
Propagating 0000000000000001 assertions for BB03, stmt STMT00009, tree [000021], tree -> 0
Propagating 0000000000000001 assertions for BB03, stmt STMT00009, tree [000112], tree -> 0
Propagating 0000000000000001 assertions for BB03, stmt STMT00009, tree [000033], tree -> 0
Propagating 0000000000000001 assertions for BB03, stmt STMT00009, tree [000034], tree -> 0
Propagating 0000000000000001 assertions for BB03, stmt STMT00034, tree [000036], tree -> 0
Propagating 0000000000000001 assertions for BB03, stmt STMT00034, tree [000191], tree -> 0
Propagating 0000000000000001 assertions for BB03, stmt STMT00034, tree [000192], tree -> 0
Propagating 0000000000000001 assertions for BB03, stmt STMT00034, tree [000118], tree -> 4
Propagating 0000000000000009 assertions for BB03, stmt STMT00034, tree [000224], tree -> 0
Propagating 0000000000000009 assertions for BB03, stmt STMT00034, tree [000225], tree -> 0
Propagating 0000000000000009 assertions for BB03, stmt STMT00034, tree [000226], tree -> 0
Propagating 0000000000000009 assertions for BB03, stmt STMT00034, tree [000227], tree -> 0
Propagating 0000000000000009 assertions for BB03, stmt STMT00034, tree [000128], tree -> 0
Propagating 0000000000000009 assertions for BB03, stmt STMT00034, tree [000129], tree -> 0
Propagating 0000000000000009 assertions for BB03, stmt STMT00033, tree [000124], tree -> 0
Propagating 0000000000000009 assertions for BB03, stmt STMT00033, tree [000193], tree -> 0
Propagating 0000000000000009 assertions for BB03, stmt STMT00033, tree [000194], tree -> 0
Propagating 0000000000000009 assertions for BB03, stmt STMT00033, tree [000126], tree -> 5
Propagating 0000000000000019 assertions for BB03, stmt STMT00033, tree [000125], tree -> 0
Propagating 0000000000000019 assertions for BB03, stmt STMT00033, tree [000127], tree -> 0
Propagating 0000000000000019 assertions for BB03, stmt STMT00037, tree [000228], tree -> 0
Propagating 0000000000000019 assertions for BB03, stmt STMT00037, tree [000142], tree -> 0
Propagating 0000000000000019 assertions for BB03, stmt STMT00037, tree [000143], tree -> 0
Propagating 0000000000000019 assertions for BB03, stmt STMT00036, tree [000138], tree -> 0
Propagating 0000000000000019 assertions for BB03, stmt STMT00036, tree [000197], tree -> 0
Propagating 0000000000000019 assertions for BB03, stmt STMT00036, tree [000198], tree -> 0
Propagating 0000000000000019 assertions for BB03, stmt STMT00036, tree [000140], tree -> 6
Propagating 0000000000000039 assertions for BB03, stmt STMT00036, tree [000139], tree -> 0
Propagating 0000000000000039 assertions for BB03, stmt STMT00036, tree [000141], tree -> 0
Propagating 0000000000000039 assertions for BB03, stmt STMT00038, tree [000205], tree -> 0
Propagating 0000000000000039 assertions for BB03, stmt STMT00038, tree [000206], tree -> 0
Propagating 0000000000000039 assertions for BB03, stmt STMT00038, tree [000207], tree -> 0
Propagating 0000000000000039 assertions for BB03, stmt STMT00038, tree [000229], tree -> 0
Propagating 0000000000000039 assertions for BB03, stmt STMT00038, tree [000201], tree -> 0
Propagating 0000000000000039 assertions for BB03, stmt STMT00038, tree [000202], tree -> 0
Propagating 0000000000000039 assertions for BB03, stmt STMT00038, tree [000203], tree -> 0
Propagating 0000000000000039 assertions for BB03, stmt STMT00038, tree [000204], tree -> 0
Propagating 0000000000000039 assertions for BB03, stmt STMT00038, tree [000148], tree -> 5

Non-null prop for index #05 in BB03:
N009 ( 23, 34) [000148] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage $VN.Void
Re-morphing this stmt:
STMT00038 (IL 0x03A...  ???)
N009 ( 23, 34) [000148] --C-G-------              *  CALL      void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage $VN.Void
N004 (  1,  1) [000229] ------------ this in rcx  +--*  LCL_VAR   ref    V16 cse0         u:1 <l:$18e, c:$15c>
N006 (  4, 12) [000202] #---G------- arg1 in rdx  +--*  IND       ref    $194
N005 (  2, 10) [000201] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "ilproj" $10b
N008 (  4, 12) [000204] #---G------- arg2 in r8   \--*  IND       ref    $195
N007 (  2, 10) [000203] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "IL" $10c

ReMorphing args for 148.CALL:
argSlots=3, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32
ArgTable for 148.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 229.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 202.IND ref (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]
fgArgTabEntry[arg 2 204.IND ref (By ref), 1 reg: r8, byteAlignment=8, lateArgInx=2, processed]

optAssertionPropMain morphed tree:
N009 ( 23, 34) [000148] --CXG-------              *  CALL      void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage $VN.Void
N004 (  1,  1) [000229] ------------ this in rcx  +--*  LCL_VAR   ref    V16 cse0         u:1 <l:$18e, c:$15c>
N006 (  4, 12) [000202] #---G------- arg1 in rdx  +--*  IND       ref    $194
N005 (  2, 10) [000201] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "ilproj" $10b
N008 (  4, 12) [000204] #---G------- arg2 in r8   \--*  IND       ref    $195
N007 (  2, 10) [000203] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "IL" $10c

Propagating 0000000000000039 assertions for BB03, stmt STMT00039, tree [000214], tree -> 0
Propagating 0000000000000039 assertions for BB03, stmt STMT00039, tree [000215], tree -> 0
Propagating 0000000000000039 assertions for BB03, stmt STMT00039, tree [000216], tree -> 0
Propagating 0000000000000039 assertions for BB03, stmt STMT00039, tree [000048], tree -> 0
Propagating 0000000000000039 assertions for BB03, stmt STMT00039, tree [000208], tree -> 0
Propagating 0000000000000039 assertions for BB03, stmt STMT00039, tree [000209], tree -> 0
Propagating 0000000000000039 assertions for BB03, stmt STMT00039, tree [000150], tree -> 4

Non-null prop for index #04 in BB03:
N007 (  4,  7) [000150] ---XG-------              *  IND       ref    <l:$199, c:$198>
Propagating 0000000000000039 assertions for BB03, stmt STMT00039, tree [000210], tree -> 0
Propagating 0000000000000039 assertions for BB03, stmt STMT00039, tree [000211], tree -> 0
Propagating 0000000000000039 assertions for BB03, stmt STMT00039, tree [000212], tree -> 0
Propagating 0000000000000039 assertions for BB03, stmt STMT00039, tree [000213], tree -> 0
Propagating 0000000000000039 assertions for BB03, stmt STMT00039, tree [000153], tree -> 0
Re-morphing this stmt:
STMT00039 (IL 0x04A...  ???)
N012 ( 26, 40) [000153] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage $VN.Void
N007 (  4,  7) [000150] n---GO------ this in rcx  +--*  IND       ref    <l:$199, c:$198>
N006 (  2,  5) [000209] -------N----              |  \--*  ADD       byref  $201
N004 (  1,  1) [000048] ------------              |     +--*  LCL_VAR   ref    V05 tmp3         u:2 $159
N005 (  1,  4) [000208] ------------              |     \--*  CNS_INT   long   136 field offset Fseq[_loader] $1c2
N009 (  4, 12) [000211] #---G------- arg1 in rdx  +--*  IND       ref    $19a
N008 (  2, 10) [000210] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "vcxproj" $10d
N011 (  4, 12) [000213] #---G------- arg2 in r8   \--*  IND       ref    $19b
N010 (  2, 10) [000212] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "C++" $10e

ReMorphing args for 153.CALL:
argSlots=3, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32
ArgTable for 153.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 150.IND ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 211.IND ref (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]
fgArgTabEntry[arg 2 213.IND ref (By ref), 1 reg: r8, byteAlignment=8, lateArgInx=2, processed]

optAssertionPropMain morphed tree:
N012 ( 26, 40) [000153] --CXGO------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage $VN.Void
N007 (  4,  7) [000150] n---GO------ this in rcx  +--*  IND       ref    <l:$199, c:$198>
N006 (  2,  5) [000209] -------N----              |  \--*  ADD       byref  $201
N004 (  1,  1) [000048] ------------              |     +--*  LCL_VAR   ref    V05 tmp3         u:2 $159
N005 (  1,  4) [000208] ------------              |     \--*  CNS_INT   long   136 field offset Fseq[_loader] $1c2
N009 (  4, 12) [000211] #---G------- arg1 in rdx  +--*  IND       ref    $19a
N008 (  2, 10) [000210] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "vcxproj" $10d
N011 (  4, 12) [000213] #---G------- arg2 in r8   \--*  IND       ref    $19b
N010 (  2, 10) [000212] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "C++" $10e

Propagating 0000000000000039 assertions for BB03, stmt STMT00014, tree [000217], tree -> 0
Propagating 0000000000000039 assertions for BB03, stmt STMT00014, tree [000055], tree -> 0
Propagating 0000000000000039 assertions for BB03, stmt STMT00014, tree [000056], tree -> 0
Propagating 0000000000000039 assertions for BB03, stmt STMT00014, tree [000057], tree -> 0
Propagating 0000000000000039 assertions for BB03, stmt STMT00014, tree [000058], tree -> 0
Propagating 0000000000000039 assertions for BB04, stmt STMT00041, tree [000059], tree -> 0
Propagating 0000000000000039 assertions for BB04, stmt STMT00041, tree [000218], tree -> 0
Propagating 0000000000000039 assertions for BB04, stmt STMT00041, tree [000219], tree -> 0
Propagating 0000000000000039 assertions for BB04, stmt STMT00041, tree [000159], tree -> 7
Propagating 0000000000000079 assertions for BB04, stmt STMT00041, tree [000158], tree -> 0
Propagating 0000000000000079 assertions for BB04, stmt STMT00041, tree [000160], tree -> 0
Propagating 0000000000000079 assertions for BB04, stmt STMT00042, tree [000161], tree -> 0
Propagating 0000000000000079 assertions for BB04, stmt STMT00042, tree [000220], tree -> 0
Propagating 0000000000000079 assertions for BB04, stmt STMT00042, tree [000221], tree -> 0
Propagating 0000000000000079 assertions for BB04, stmt STMT00042, tree [000163], tree -> 7
Propagating 0000000000000079 assertions for BB04, stmt STMT00042, tree [000054], tree -> 0
Propagating 0000000000000079 assertions for BB04, stmt STMT00042, tree [000164], tree -> 0
Propagating 0000000000000079 assertions for BB04, stmt STMT00016, tree [000222], tree -> 0
Propagating 0000000000000079 assertions for BB04, stmt STMT00016, tree [000223], tree -> 0
Propagating 0000000000000079 assertions for BB04, stmt STMT00016, tree [000052], tree -> 0
Propagating 0000000000000079 assertions for BB04, stmt STMT00016, tree [000061], tree -> 0
Propagating 0000000000000079 assertions for BB04, stmt STMT00016, tree [000062], tree -> 4

Non-null prop for index #04 in BB04:
N005 ( 16, 10) [000062] --CXG-------              *  CALL nullcheck void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed $VN.Void
Re-morphing this stmt:
STMT00016 (IL 0x067...  ???)
N005 ( 16, 10) [000062] --C-G-------              *  CALL      void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed $VN.Void
N003 (  1,  1) [000052] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         u:2 $159
N004 (  1,  1) [000061] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V06 tmp4         u:2 (last use) $19c

ReMorphing args for 62.CALL:
argSlots=2, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32
ArgTable for 62.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 52.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 61.LCL_VAR ref (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]

optAssertionPropMain morphed tree:
N005 ( 16, 10) [000062] --CXG-------              *  CALL      void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed $VN.Void
N003 (  1,  1) [000052] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         u:2 $159
N004 (  1,  1) [000061] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V06 tmp4         u:2 (last use) $19c

Propagating 0000000000000079 assertions for BB04, stmt STMT00017, tree [000035], tree -> 0
Propagating 0000000000000079 assertions for BB04, stmt STMT00017, tree [000063], tree -> 0
Propagating 000000000000007F assertions for BB05, stmt STMT00043, tree [000165], tree -> 0
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Assertion prop

*************** Starting PHASE Optimize index checks
*************** In OptimizeRangeChecks()
Blocks/trees before phase

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)-> BB03 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB02 [0008]  1       BB01                  0.25    [017..018)                                     i hascall gcsafe 
BB03 [0009]  2       BB01,BB02             1       [000..018)                                     i label target hascall gcsafe newobj nullcheck 
BB04 [0020]  1       BB03                  1       [000..000)        (return)                     i internal label target hascall gcsafe newobj nullcheck 
BB05 [0019]  0                             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06D) -> BB03 (cond), preds={} succs={BB02,BB03}

***** BB01
STMT00000 (IL 0x000...0x005)
N005 ( 16, 16) [000003] -AC-----R---              *  ASG       ref    $180
N004 (  1,  1) [000002] D------N----              +--*  LCL_VAR   ref    V03 tmp1         d:2 $180
N003 ( 16, 16) [000001] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $180
N002 (  2, 10) [000000] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $100

***** BB01
STMT00002 (IL 0x005...  ???)
N003 (  1,  3) [000008] -A------R---              *  ASG       ref    $180
N002 (  1,  1) [000007] D------N----              +--*  LCL_VAR   ref    V01 loc0         d:2 $180
N001 (  1,  1) [000006] ------------              \--*  LCL_VAR   ref    V03 tmp1         u:2 $180

***** BB01
STMT00003 (IL 0x006...0x008)
N006 (  6,  6) [000012] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000011] n---GO-N----              +--*  IND       ref    $80
N003 (  2,  2) [000170] -------N----              |  \--*  ADD       byref  $200
N001 (  1,  1) [000009] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 (last use) $180
N002 (  1,  1) [000169] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[projectPath] $1c0
N005 (  1,  1) [000010] ------------              \--*  LCL_VAR   ref    V00 arg0         u:1 (last use) $80

***** BB01
STMT00005 (IL   ???...  ???)
N005 ( 16, 16) [000018] -AC-----R---              *  ASG       ref    $183
N004 (  1,  1) [000017] D------N----              +--*  LCL_VAR   ref    V04 tmp2         d:2 $183
N003 ( 16, 16) [000016] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $183
N002 (  2, 10) [000015] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $102

***** BB01
STMT00020 (IL   ???...  ???)
N004 (  4, 12) [000073] -A--G---R---              *  ASG       ref    <l:$242, c:$145>
N003 (  1,  1) [000072] D------N----              +--*  LCL_VAR   ref    V07 tmp5         d:2 <l:$242, c:$145>
N002 (  4, 12) [000067] n---G-------              \--*  IND       ref    <l:$242, c:$145>
N001 (  2, 10) [000172] I-----------                 \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[Instance] $103

***** BB01
STMT00019 (IL   ???...  ???)
N007 ( 17, 12) [000071] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor $VN.Void
N004 (  1,  1) [000019] ------------ this in rcx  +--*  LCL_VAR   ref    V04 tmp2         u:2 $183
N005 (  1,  1) [000070] ------------ arg2 in r8   +--*  LCL_VAR   ref    V07 tmp5         u:2 (last use) <l:$242, c:$145>
N006 (  1,  1) [000069] ------------ arg1 in rdx  \--*  CNS_INT   int    0 $40

***** BB01
STMT00023 (IL 0x017...  ???)
N010 ( 21, 33) [000088] -ACXG---R---              *  ASG       ref    <l:$186, c:$185>
N009 (  1,  1) [000087] D------N----              +--*  LCL_VAR   ref    V08 tmp6         d:2 <l:$243, c:$14a>
N008 ( 21, 33) [000029] --CXG-------              \--*  COMMA     ref    <l:$186, c:$185>
N005 ( 17, 21) [000028] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $301
N003 (  2, 10) [000026] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc86100028 $1c1
N004 (  1,  4) [000027] ------------ arg1 in rdx     |  \--*  CNS_INT   int    215 $43
N007 (  4, 12) [000024] n---G-------                 \--*  IND       ref    <l:$243, c:$14a>
N006 (  2, 10) [000178] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[FalseString] $104

***** BB01
STMT00021 (IL 0x017...  ???)
N012 ( 25, 28) [000081] -ACXG---R---              *  ASG       bool   $283
N011 (  3,  2) [000080] D------N----              +--*  LCL_VAR   int    V09 tmp7         d:2 $283
N010 ( 21, 25) [000078] --CXG-------              \--*  CALL      int    System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].TryInsert $283
N006 (  4, 12) [000180] #---G------- arg1 in rdx     +--*  IND       ref    $189
N005 (  2, 10) [000179] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "AlwaysCompileMarkupFilesInSeparateDomain" $105
N007 (  1,  1) [000022] ------------ this in rcx     +--*  LCL_VAR   ref    V04 tmp2         u:2 $183
N008 (  1,  1) [000076] ------------ arg2 in r8      +--*  LCL_VAR   ref    V08 tmp6         u:2 (last use) <l:$243, c:$14a>
N009 (  1,  1) [000077] ------------ arg3 in r9      \--*  CNS_INT   int    2 $44

***** BB01
STMT00028 (IL 0x017...  ???)
N008 (  9, 16) [000106] -A--G---R---              *  ASG       ref    $18a
N007 (  3,  2) [000105] D------N----              +--*  LCL_VAR   ref    V10 tmp8         d:2 $18a
N006 (  5, 13) [000233] -A--G-------              \--*  COMMA     ref    $18a
N004 (  4, 12) [000231] -A--G---R---                 +--*  ASG       ref    $VN.Void
N003 (  1,  1) [000230] D------N----                 |  +--*  LCL_VAR   ref    V17 cse1         d:1 $18a
N002 (  4, 12) [000092] #---G-------                 |  \--*  IND       ref    $18a
N001 (  2, 10) [000091] H-----------                 |     \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL] $106
N005 (  1,  1) [000232] ------------                 \--*  LCL_VAR   ref    V17 cse1         u:1 $18a

***** BB01
STMT00029 (IL 0x017...  ???)
N003 (  5,  4) [000108] -A--G---R---              *  ASG       ref    $18a
N002 (  3,  2) [000107] D------N----              +--*  LCL_VAR   ref    V11 tmp9         d:2 $18a
N001 (  1,  1) [000234] ------------              \--*  LCL_VAR   ref    V17 cse1         u:1 $18a

***** BB01
STMT00026 (IL 0x017...  ???)
N004 (  7,  6) [000101] ------------              *  JTRUE     void  
N003 (  5,  4) [000100] J------N----              \--*  NE        int    $340
N001 (  3,  2) [000098] ------------                 +--*  LCL_VAR   int    V09 tmp7         u:2 (last use) $283
N002 (  1,  1) [000099] ------------                 \--*  CNS_INT   int    0 $40

------------ BB02 [017..018), preds={BB01} succs={BB03}

***** BB02
STMT00027 (IL 0x017...  ???)
N005 ( 20, 11) [000104] --CXG-------              *  CALL      void   System.Diagnostics.Debug.Fail $VN.Void
N003 (  3,  2) [000102] ------------ arg0 in rcx  +--*  LCL_VAR   ref    V11 tmp9         u:2 (last use) $18a
N004 (  3,  2) [000103] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V11 tmp9         u:2 (last use) $18a

------------ BB03 [000..018), preds={BB01,BB02} succs={BB04}

***** BB03
STMT00009 (IL   ???...  ???)
N009 ( 33, 14) [000034] -ACXG---R---              *  ASG       ref    $159
N008 (  1,  1) [000033] D------N----              +--*  LCL_VAR   ref    V05 tmp3         d:2 $159
N007 ( 33, 14) [000112] --CXG-------              \--*  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create $159
N004 ( 14,  5) [000188] -ACXG---R-L- arg1 SETUP      +--*  ASG       ref    $156
N003 (  1,  1) [000187] D------N----                 |  +--*  LCL_VAR   ref    V15 tmp13        d:2 $156
N002 ( 14,  5) [000110] --CXG-------                 |  \--*  CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices $156
N005 (  1,  1) [000189] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V15 tmp13        u:2 (last use) $156
N006 (  1,  1) [000021] ------------ arg0 in rcx     \--*  LCL_VAR   ref    V04 tmp2         u:2 (last use) $183

***** BB03
STMT00034 (IL   ???...  ???)
N010 (  5,  8) [000129] -A-XG---R---              *  ASG       ref    <l:$191, c:$190>
N009 (  1,  1) [000128] D------N----              +--*  LCL_VAR   ref    V12 tmp10        d:2 <l:$18e, c:$15c>
N008 (  5,  8) [000227] -A-XG-------              \--*  COMMA     ref    <l:$191, c:$190>
N006 (  4,  7) [000225] -A-XG---R---                 +--*  ASG       ref    $VN.Void
N005 (  1,  1) [000224] D------N----                 |  +--*  LCL_VAR   ref    V16 cse0         d:1 <l:$191, c:$190>
N004 (  4,  7) [000118] ---XG-------                 |  \--*  IND       ref    <l:$191, c:$190>
N003 (  2,  5) [000192] -------N----                 |     \--*  ADD       byref  $201
N001 (  1,  1) [000036] ------------                 |        +--*  LCL_VAR   ref    V05 tmp3         u:2 $159
N002 (  1,  4) [000191] ------------                 |        \--*  CNS_INT   long   136 field offset Fseq[_loader] $1c2
N007 (  1,  1) [000226] ------------                 \--*  LCL_VAR   ref    V16 cse0         u:1 <l:$191, c:$190>

***** BB03
STMT00033 (IL   ???...  ???)
N006 (  7,  7) [000127] -A-XG-------              *  ASG       bool   $VN.Void
N004 (  5,  5) [000126] D--XG--N----              +--*  IND       bool   $46
N003 (  2,  2) [000194] -------N----              |  \--*  ADD       byref  <l:$203, c:$202>
N001 (  1,  1) [000124] ------------              |     +--*  LCL_VAR   ref    V12 tmp10        u:2 (last use) <l:$18e, c:$15c>
N002 (  1,  1) [000193] ------------              |     \--*  CNS_INT   long   56 field offset Fseq[<LoadMetadataForReferencedProjects>k__BackingField] $1c3
N005 (  1,  1) [000125] ------------              \--*  CNS_INT   int    1 $46

***** BB03
STMT00037 (IL 0x033...  ???)
N003 (  1,  3) [000143] -A--G---R---              *  ASG       ref    <l:$191, c:$192>
N002 (  1,  1) [000142] D------N----              +--*  LCL_VAR   ref    V13 tmp11        d:2 <l:$18e, c:$15e>
N001 (  1,  1) [000228] ------------              \--*  LCL_VAR   ref    V16 cse0         u:1 <l:$18e, c:$15c>

***** BB03
STMT00036 (IL 0x033...  ???)
N006 (  7,  7) [000141] -A-XG-------              *  ASG       bool   $VN.Void
N004 (  5,  5) [000140] D--XG--N----              +--*  IND       bool   $46
N003 (  2,  2) [000198] -------N----              |  \--*  ADD       byref  <l:$205, c:$204>
N001 (  1,  1) [000138] ------------              |     +--*  LCL_VAR   ref    V13 tmp11        u:2 (last use) <l:$18e, c:$15e>
N002 (  1,  1) [000197] ------------              |     \--*  CNS_INT   long   57 field offset Fseq[<SkipUnrecognizedProjects>k__BackingField] $1c4
N005 (  1,  1) [000139] ------------              \--*  CNS_INT   int    1 $46

***** BB03
STMT00038 (IL 0x03A...  ???)
N009 ( 23, 34) [000148] --CXG-------              *  CALL      void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage $VN.Void
N004 (  1,  1) [000229] ------------ this in rcx  +--*  LCL_VAR   ref    V16 cse0         u:1 <l:$18e, c:$15c>
N006 (  4, 12) [000202] #---G------- arg1 in rdx  +--*  IND       ref    $194
N005 (  2, 10) [000201] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "ilproj" $10b
N008 (  4, 12) [000204] #---G------- arg2 in r8   \--*  IND       ref    $195
N007 (  2, 10) [000203] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "IL" $10c

***** BB03
STMT00039 (IL 0x04A...  ???)
N012 ( 26, 40) [000153] --CXGO------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage $VN.Void
N007 (  4,  7) [000150] n---GO------ this in rcx  +--*  IND       ref    <l:$199, c:$198>
N006 (  2,  5) [000209] -------N----              |  \--*  ADD       byref  $201
N004 (  1,  1) [000048] ------------              |     +--*  LCL_VAR   ref    V05 tmp3         u:2 $159
N005 (  1,  4) [000208] ------------              |     \--*  CNS_INT   long   136 field offset Fseq[_loader] $1c2
N009 (  4, 12) [000211] #---G------- arg1 in rdx  +--*  IND       ref    $19a
N008 (  2, 10) [000210] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "vcxproj" $10d
N011 (  4, 12) [000213] #---G------- arg2 in r8   \--*  IND       ref    $19b
N010 (  2, 10) [000212] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "C++" $10e

***** BB03
STMT00014 (IL 0x05A...  ???)
N005 ( 16, 16) [000058] -AC-----R---              *  ASG       ref    $19c
N004 (  1,  1) [000057] D------N----              +--*  LCL_VAR   ref    V06 tmp4         d:2 $19c
N003 ( 16, 16) [000056] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $19c
N002 (  2, 10) [000055] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $10f

------------ BB04 [000..000) (return), preds={BB03} succs={}

***** BB04
STMT00041 (IL   ???...  ???)
N006 (  6,  6) [000160] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000159] n---GO-N----              +--*  IND       ref    $180
N003 (  2,  2) [000219] -------N----              |  \--*  ADD       byref  $206
N001 (  1,  1) [000059] ------------              |     +--*  LCL_VAR   ref    V06 tmp4         u:2 $19c
N002 (  1,  1) [000218] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $1c0
N005 (  1,  1) [000158] ------------              \--*  LCL_VAR   ref    V01 loc0         u:2 (last use) $180

***** BB04
STMT00042 (IL   ???...  ???)
N006 (  7, 15) [000164] -A--GO------              *  ASG       long   $VN.Void
N004 (  4,  4) [000163] n---GO-N----              +--*  IND       long   $111
N003 (  2,  2) [000221] -------N----              |  \--*  ADD       byref  $207
N001 (  1,  1) [000161] ------------              |     +--*  LCL_VAR   ref    V06 tmp4         u:2 $19c
N002 (  1,  1) [000220] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $1c5
N005 (  2, 10) [000054] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $111

***** BB04
STMT00016 (IL 0x067...  ???)
N005 ( 16, 10) [000062] --CXG-------              *  CALL      void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed $VN.Void
N003 (  1,  1) [000052] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         u:2 $159
N004 (  1,  1) [000061] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V06 tmp4         u:2 (last use) $19c

***** BB04
STMT00017 (IL 0x06C...  ???)
N002 (  2,  2) [000063] ------------              *  RETURN    ref    $170
N001 (  1,  1) [000035] ------------              \--*  LCL_VAR   ref    V05 tmp3         u:2 (last use) $159

------------ BB05 [000..000) (throw), preds={} succs={}

***** BB05
STMT00043 (IL   ???...  ???)
N001 ( 14,  5) [000165] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance $VN.Void

-------------------------------------------------------------------------------------------------------------------

*************** Finishing PHASE Optimize index checks

*************** Starting PHASE Update flow graph opt pass

*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)-> BB03 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB02 [0008]  1       BB01                  0.25    [017..018)                                     i hascall gcsafe 
BB03 [0009]  2       BB01,BB02             1       [000..018)                                     i label target hascall gcsafe newobj nullcheck 
BB04 [0020]  1       BB03                  1       [000..000)        (return)                     i internal label target hascall gcsafe newobj nullcheck 
BB05 [0019]  0                             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------


Compacting blocks BB03 and BB04:
*************** In fgDebugCheckBBlist
fgRemoveBlock BB05

Removing unreachable BB05

Removing statement STMT00043 (IL   ???...  ???)
N001 ( 14,  5) [000165] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance $VN.Void
 in BB05 as useless:

BB05 becomes empty

After updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)-> BB03 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB02 [0008]  1       BB01                  0.25    [017..018)                                     i hascall gcsafe 
BB03 [0009]  2       BB01,BB02             1       [000..018)        (return)                     i label target hascall gcsafe newobj nullcheck 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Update flow graph opt pass

*************** Starting PHASE Compute edge weights (2, false)
fgComputeEdgeWeights() was able to compute exact edge weights for all of the   3 edges, using 1 passes.
    Edge weights into BB02 :BB01 (25.000000)
    Edge weights into BB03 :BB01 (75.000000), BB02 (25.000000)

*************** Finishing PHASE Compute edge weights (2, false)

*************** Starting PHASE Insert GC Polls

*************** Finishing PHASE Insert GC Polls [no changes]

*************** Starting PHASE Determine first cold block

*************** In fgDetermineFirstColdBlock()
No procedure splitting will be done for this method

*************** Finishing PHASE Determine first cold block
Trees before Rationalize IR

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)-> BB03 ( cond )                     i label target hascall gcsafe newobj nullcheck 
BB02 [0008]  1       BB01                  0.25    [017..018)                                     i hascall gcsafe 
BB03 [0009]  2       BB01,BB02             1       [000..018)        (return)                     i label target hascall gcsafe newobj nullcheck 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06D) -> BB03 (cond), preds={} succs={BB02,BB03}

***** BB01
STMT00000 (IL 0x000...0x005)
N005 ( 16, 16) [000003] -AC-----R---              *  ASG       ref    $180
N004 (  1,  1) [000002] D------N----              +--*  LCL_VAR   ref    V03 tmp1         d:2 $180
N003 ( 16, 16) [000001] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $180
N002 (  2, 10) [000000] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $100

***** BB01
STMT00002 (IL 0x005...  ???)
N003 (  1,  3) [000008] -A------R---              *  ASG       ref    $180
N002 (  1,  1) [000007] D------N----              +--*  LCL_VAR   ref    V01 loc0         d:2 $180
N001 (  1,  1) [000006] ------------              \--*  LCL_VAR   ref    V03 tmp1         u:2 $180

***** BB01
STMT00003 (IL 0x006...0x008)
N006 (  6,  6) [000012] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000011] n---GO-N----              +--*  IND       ref    $80
N003 (  2,  2) [000170] -------N----              |  \--*  ADD       byref  $200
N001 (  1,  1) [000009] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 (last use) $180
N002 (  1,  1) [000169] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[projectPath] $1c0
N005 (  1,  1) [000010] ------------              \--*  LCL_VAR   ref    V00 arg0         u:1 (last use) $80

***** BB01
STMT00005 (IL   ???...  ???)
N005 ( 16, 16) [000018] -AC-----R---              *  ASG       ref    $183
N004 (  1,  1) [000017] D------N----              +--*  LCL_VAR   ref    V04 tmp2         d:2 $183
N003 ( 16, 16) [000016] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $183
N002 (  2, 10) [000015] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $102

***** BB01
STMT00020 (IL   ???...  ???)
N004 (  4, 12) [000073] -A--G---R---              *  ASG       ref    <l:$242, c:$145>
N003 (  1,  1) [000072] D------N----              +--*  LCL_VAR   ref    V07 tmp5         d:2 <l:$242, c:$145>
N002 (  4, 12) [000067] n---G-------              \--*  IND       ref    <l:$242, c:$145>
N001 (  2, 10) [000172] I-----------                 \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[Instance] $103

***** BB01
STMT00019 (IL   ???...  ???)
N007 ( 17, 12) [000071] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor $VN.Void
N004 (  1,  1) [000019] ------------ this in rcx  +--*  LCL_VAR   ref    V04 tmp2         u:2 $183
N005 (  1,  1) [000070] ------------ arg2 in r8   +--*  LCL_VAR   ref    V07 tmp5         u:2 (last use) <l:$242, c:$145>
N006 (  1,  1) [000069] ------------ arg1 in rdx  \--*  CNS_INT   int    0 $40

***** BB01
STMT00023 (IL 0x017...  ???)
N010 ( 21, 33) [000088] -ACXG---R---              *  ASG       ref    <l:$186, c:$185>
N009 (  1,  1) [000087] D------N----              +--*  LCL_VAR   ref    V08 tmp6         d:2 <l:$243, c:$14a>
N008 ( 21, 33) [000029] --CXG-------              \--*  COMMA     ref    <l:$186, c:$185>
N005 ( 17, 21) [000028] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $301
N003 (  2, 10) [000026] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc86100028 $1c1
N004 (  1,  4) [000027] ------------ arg1 in rdx     |  \--*  CNS_INT   int    215 $43
N007 (  4, 12) [000024] n---G-------                 \--*  IND       ref    <l:$243, c:$14a>
N006 (  2, 10) [000178] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[FalseString] $104

***** BB01
STMT00021 (IL 0x017...  ???)
N012 ( 25, 28) [000081] -ACXG---R---              *  ASG       bool   $283
N011 (  3,  2) [000080] D------N----              +--*  LCL_VAR   int    V09 tmp7         d:2 $283
N010 ( 21, 25) [000078] --CXG-------              \--*  CALL      int    System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].TryInsert $283
N006 (  4, 12) [000180] #---G------- arg1 in rdx     +--*  IND       ref    $189
N005 (  2, 10) [000179] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "AlwaysCompileMarkupFilesInSeparateDomain" $105
N007 (  1,  1) [000022] ------------ this in rcx     +--*  LCL_VAR   ref    V04 tmp2         u:2 $183
N008 (  1,  1) [000076] ------------ arg2 in r8      +--*  LCL_VAR   ref    V08 tmp6         u:2 (last use) <l:$243, c:$14a>
N009 (  1,  1) [000077] ------------ arg3 in r9      \--*  CNS_INT   int    2 $44

***** BB01
STMT00028 (IL 0x017...  ???)
N008 (  9, 16) [000106] -A--G---R---              *  ASG       ref    $18a
N007 (  3,  2) [000105] D------N----              +--*  LCL_VAR   ref    V10 tmp8         d:2 $18a
N006 (  5, 13) [000233] -A--G-------              \--*  COMMA     ref    $18a
N004 (  4, 12) [000231] -A--G---R---                 +--*  ASG       ref    $VN.Void
N003 (  1,  1) [000230] D------N----                 |  +--*  LCL_VAR   ref    V17 cse1         d:1 $18a
N002 (  4, 12) [000092] #---G-------                 |  \--*  IND       ref    $18a
N001 (  2, 10) [000091] H-----------                 |     \--*  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL] $106
N005 (  1,  1) [000232] ------------                 \--*  LCL_VAR   ref    V17 cse1         u:1 $18a

***** BB01
STMT00029 (IL 0x017...  ???)
N003 (  5,  4) [000108] -A--G---R---              *  ASG       ref    $18a
N002 (  3,  2) [000107] D------N----              +--*  LCL_VAR   ref    V11 tmp9         d:2 $18a
N001 (  1,  1) [000234] ------------              \--*  LCL_VAR   ref    V17 cse1         u:1 $18a

***** BB01
STMT00026 (IL 0x017...  ???)
N004 (  7,  6) [000101] ------------              *  JTRUE     void  
N003 (  5,  4) [000100] J------N----              \--*  NE        int    $340
N001 (  3,  2) [000098] ------------                 +--*  LCL_VAR   int    V09 tmp7         u:2 (last use) $283
N002 (  1,  1) [000099] ------------                 \--*  CNS_INT   int    0 $40

------------ BB02 [017..018), preds={BB01} succs={BB03}

***** BB02
STMT00027 (IL 0x017...  ???)
N005 ( 20, 11) [000104] --CXG-------              *  CALL      void   System.Diagnostics.Debug.Fail $VN.Void
N003 (  3,  2) [000102] ------------ arg0 in rcx  +--*  LCL_VAR   ref    V11 tmp9         u:2 (last use) $18a
N004 (  3,  2) [000103] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V11 tmp9         u:2 (last use) $18a

------------ BB03 [000..018) (return), preds={BB01,BB02} succs={}

***** BB03
STMT00009 (IL   ???...  ???)
N009 ( 33, 14) [000034] -ACXG---R---              *  ASG       ref    $159
N008 (  1,  1) [000033] D------N----              +--*  LCL_VAR   ref    V05 tmp3         d:2 $159
N007 ( 33, 14) [000112] --CXG-------              \--*  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create $159
N004 ( 14,  5) [000188] -ACXG---R-L- arg1 SETUP      +--*  ASG       ref    $156
N003 (  1,  1) [000187] D------N----                 |  +--*  LCL_VAR   ref    V15 tmp13        d:2 $156
N002 ( 14,  5) [000110] --CXG-------                 |  \--*  CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices $156
N005 (  1,  1) [000189] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V15 tmp13        u:2 (last use) $156
N006 (  1,  1) [000021] ------------ arg0 in rcx     \--*  LCL_VAR   ref    V04 tmp2         u:2 (last use) $183

***** BB03
STMT00034 (IL   ???...  ???)
N010 (  5,  8) [000129] -A-XG---R---              *  ASG       ref    <l:$191, c:$190>
N009 (  1,  1) [000128] D------N----              +--*  LCL_VAR   ref    V12 tmp10        d:2 <l:$18e, c:$15c>
N008 (  5,  8) [000227] -A-XG-------              \--*  COMMA     ref    <l:$191, c:$190>
N006 (  4,  7) [000225] -A-XG---R---                 +--*  ASG       ref    $VN.Void
N005 (  1,  1) [000224] D------N----                 |  +--*  LCL_VAR   ref    V16 cse0         d:1 <l:$191, c:$190>
N004 (  4,  7) [000118] ---XG-------                 |  \--*  IND       ref    <l:$191, c:$190>
N003 (  2,  5) [000192] -------N----                 |     \--*  ADD       byref  $201
N001 (  1,  1) [000036] ------------                 |        +--*  LCL_VAR   ref    V05 tmp3         u:2 $159
N002 (  1,  4) [000191] ------------                 |        \--*  CNS_INT   long   136 field offset Fseq[_loader] $1c2
N007 (  1,  1) [000226] ------------                 \--*  LCL_VAR   ref    V16 cse0         u:1 <l:$191, c:$190>

***** BB03
STMT00033 (IL   ???...  ???)
N006 (  7,  7) [000127] -A-XG-------              *  ASG       bool   $VN.Void
N004 (  5,  5) [000126] D--XG--N----              +--*  IND       bool   $46
N003 (  2,  2) [000194] -------N----              |  \--*  ADD       byref  <l:$203, c:$202>
N001 (  1,  1) [000124] ------------              |     +--*  LCL_VAR   ref    V12 tmp10        u:2 (last use) <l:$18e, c:$15c>
N002 (  1,  1) [000193] ------------              |     \--*  CNS_INT   long   56 field offset Fseq[<LoadMetadataForReferencedProjects>k__BackingField] $1c3
N005 (  1,  1) [000125] ------------              \--*  CNS_INT   int    1 $46

***** BB03
STMT00037 (IL 0x033...  ???)
N003 (  1,  3) [000143] -A--G---R---              *  ASG       ref    <l:$191, c:$192>
N002 (  1,  1) [000142] D------N----              +--*  LCL_VAR   ref    V13 tmp11        d:2 <l:$18e, c:$15e>
N001 (  1,  1) [000228] ------------              \--*  LCL_VAR   ref    V16 cse0         u:1 <l:$18e, c:$15c>

***** BB03
STMT00036 (IL 0x033...  ???)
N006 (  7,  7) [000141] -A-XG-------              *  ASG       bool   $VN.Void
N004 (  5,  5) [000140] D--XG--N----              +--*  IND       bool   $46
N003 (  2,  2) [000198] -------N----              |  \--*  ADD       byref  <l:$205, c:$204>
N001 (  1,  1) [000138] ------------              |     +--*  LCL_VAR   ref    V13 tmp11        u:2 (last use) <l:$18e, c:$15e>
N002 (  1,  1) [000197] ------------              |     \--*  CNS_INT   long   57 field offset Fseq[<SkipUnrecognizedProjects>k__BackingField] $1c4
N005 (  1,  1) [000139] ------------              \--*  CNS_INT   int    1 $46

***** BB03
STMT00038 (IL 0x03A...  ???)
N009 ( 23, 34) [000148] --CXG-------              *  CALL      void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage $VN.Void
N004 (  1,  1) [000229] ------------ this in rcx  +--*  LCL_VAR   ref    V16 cse0         u:1 <l:$18e, c:$15c>
N006 (  4, 12) [000202] #---G------- arg1 in rdx  +--*  IND       ref    $194
N005 (  2, 10) [000201] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "ilproj" $10b
N008 (  4, 12) [000204] #---G------- arg2 in r8   \--*  IND       ref    $195
N007 (  2, 10) [000203] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "IL" $10c

***** BB03
STMT00039 (IL 0x04A...  ???)
N012 ( 26, 40) [000153] --CXGO------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage $VN.Void
N007 (  4,  7) [000150] n---GO------ this in rcx  +--*  IND       ref    <l:$199, c:$198>
N006 (  2,  5) [000209] -------N----              |  \--*  ADD       byref  $201
N004 (  1,  1) [000048] ------------              |     +--*  LCL_VAR   ref    V05 tmp3         u:2 $159
N005 (  1,  4) [000208] ------------              |     \--*  CNS_INT   long   136 field offset Fseq[_loader] $1c2
N009 (  4, 12) [000211] #---G------- arg1 in rdx  +--*  IND       ref    $19a
N008 (  2, 10) [000210] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "vcxproj" $10d
N011 (  4, 12) [000213] #---G------- arg2 in r8   \--*  IND       ref    $19b
N010 (  2, 10) [000212] H-----------                 \--*  CNS_INT(h) long   0xD1FFAB1E "C++" $10e

***** BB03
STMT00014 (IL 0x05A...  ???)
N005 ( 16, 16) [000058] -AC-----R---              *  ASG       ref    $19c
N004 (  1,  1) [000057] D------N----              +--*  LCL_VAR   ref    V06 tmp4         d:2 $19c
N003 ( 16, 16) [000056] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $19c
N002 (  2, 10) [000055] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $10f

***** BB03
STMT00041 (IL   ???...  ???)
N006 (  6,  6) [000160] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000159] n---GO-N----              +--*  IND       ref    $180
N003 (  2,  2) [000219] -------N----              |  \--*  ADD       byref  $206
N001 (  1,  1) [000059] ------------              |     +--*  LCL_VAR   ref    V06 tmp4         u:2 $19c
N002 (  1,  1) [000218] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $1c0
N005 (  1,  1) [000158] ------------              \--*  LCL_VAR   ref    V01 loc0         u:2 (last use) $180

***** BB03
STMT00042 (IL   ???...  ???)
N006 (  7, 15) [000164] -A--GO------              *  ASG       long   $VN.Void
N004 (  4,  4) [000163] n---GO-N----              +--*  IND       long   $111
N003 (  2,  2) [000221] -------N----              |  \--*  ADD       byref  $207
N001 (  1,  1) [000161] ------------              |     +--*  LCL_VAR   ref    V06 tmp4         u:2 $19c
N002 (  1,  1) [000220] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $1c5
N005 (  2, 10) [000054] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $111

***** BB03
STMT00016 (IL 0x067...  ???)
N005 ( 16, 10) [000062] --CXG-------              *  CALL      void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed $VN.Void
N003 (  1,  1) [000052] ------------ this in rcx  +--*  LCL_VAR   ref    V05 tmp3         u:2 $159
N004 (  1,  1) [000061] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V06 tmp4         u:2 (last use) $19c

***** BB03
STMT00017 (IL 0x06C...  ???)
N002 (  2,  2) [000063] ------------              *  RETURN    ref    $170
N001 (  1,  1) [000035] ------------              \--*  LCL_VAR   ref    V05 tmp3         u:2 (last use) $159

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Rationalize IR
rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 ( 16, 16) [000003] DAC---------              *  STORE_LCL_VAR ref    V03 tmp1         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  1,  3) [000008] DA----------              *  STORE_LCL_VAR ref    V01 loc0         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 ( 16, 16) [000018] DAC---------              *  STORE_LCL_VAR ref    V04 tmp2         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N004 (  4, 12) [000073] DA--G-------              *  STORE_LCL_VAR ref    V07 tmp5         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N010 ( 21, 33) [000088] DACXG-------              *  STORE_LCL_VAR ref    V08 tmp6         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N012 ( 25, 28) [000081] DACXG-------              *  STORE_LCL_VAR int    V09 tmp7         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N004 (  4, 12) [000231] DA--G-------              *  STORE_LCL_VAR ref    V17 cse1         d:1

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N008 (  9, 16) [000106] DA--G-------              *  STORE_LCL_VAR ref    V10 tmp8         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  5,  4) [000108] DA--G-------              *  STORE_LCL_VAR ref    V11 tmp9         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N004 ( 14,  5) [000188] DACXG-----L-              *  STORE_LCL_VAR ref    V15 tmp13        d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N009 ( 33, 14) [000034] DACXG-------              *  STORE_LCL_VAR ref    V05 tmp3         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N006 (  4,  7) [000225] DA-XG-------              *  STORE_LCL_VAR ref    V16 cse0         d:1

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N010 (  5,  8) [000129] DA-XG-------              *  STORE_LCL_VAR ref    V12 tmp10        d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  1,  3) [000143] DA--G-------              *  STORE_LCL_VAR ref    V13 tmp11        d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 ( 16, 16) [000058] DAC---------              *  STORE_LCL_VAR ref    V06 tmp4         d:2


*************** Finishing PHASE Rationalize IR
Trees after Rationalize IR

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)-> BB03 ( cond )                     i label target hascall gcsafe newobj nullcheck LIR 
BB02 [0008]  1       BB01                  0.25    [017..018)                                     i hascall gcsafe LIR 
BB03 [0009]  2       BB01,BB02             1       [000..018)        (return)                     i label target hascall gcsafe newobj nullcheck LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06D) -> BB03 (cond), preds={} succs={BB02,BB03}
               [000237] ------------                 IL_OFFSET void   IL offset: 0x0
N002 (  2, 10) [000000] H-----------         t0 =    CNS_INT(h) long   0xd1ffab1e method $100
                                                  /--*  t0     long   arg0 in rcx
N003 ( 16, 16) [000001] --C---------         t1 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $180
                                                  /--*  t1     ref    
N005 ( 16, 16) [000003] DA----------              *  STORE_LCL_VAR ref    V03 tmp1         d:2
               [000238] ------------                 IL_OFFSET void   IL offset: 0x5
N001 (  1,  1) [000006] ------------         t6 =    LCL_VAR   ref    V03 tmp1         u:2 $180
                                                  /--*  t6     ref    
N003 (  1,  3) [000008] DA----------              *  STORE_LCL_VAR ref    V01 loc0         d:2
               [000239] ------------                 IL_OFFSET void   IL offset: 0x6
N001 (  1,  1) [000009] ------------         t9 =    LCL_VAR   ref    V01 loc0         u:2 (last use) $180
N002 (  1,  1) [000169] ------------       t169 =    CNS_INT   long   8 field offset Fseq[projectPath] $1c0
                                                  /--*  t9     ref    
                                                  +--*  t169   long   
N003 (  2,  2) [000170] -------N----       t170 = *  ADD       byref  $200
N005 (  1,  1) [000010] ------------        t10 =    LCL_VAR   ref    V00 arg0         u:1 (last use) $80
                                                  /--*  t170   byref  
                                                  +--*  t10    ref    
               [000240] -A--GO------              *  STOREIND  ref   
N002 (  2, 10) [000015] H-----------        t15 =    CNS_INT(h) long   0xd1ffab1e token $102
                                                  /--*  t15    long   arg0 in rcx
N003 ( 16, 16) [000016] --C---------        t16 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $183
                                                  /--*  t16    ref    
N005 ( 16, 16) [000018] DA----------              *  STORE_LCL_VAR ref    V04 tmp2         d:2
N001 (  2, 10) [000172] I-----------       t172 =    CNS_INT(h) long   0xd1ffab1e static Fseq[Instance] $103
                                                  /--*  t172   long   
N002 (  4, 12) [000067] n---G-------        t67 = *  IND       ref    <l:$242, c:$145>
                                                  /--*  t67    ref    
N004 (  4, 12) [000073] DA--G-------              *  STORE_LCL_VAR ref    V07 tmp5         d:2
N004 (  1,  1) [000019] ------------        t19 =    LCL_VAR   ref    V04 tmp2         u:2 $183
N005 (  1,  1) [000070] ------------        t70 =    LCL_VAR   ref    V07 tmp5         u:2 (last use) <l:$242, c:$145>
N006 (  1,  1) [000069] ------------        t69 =    CNS_INT   int    0 $40
                                                  /--*  t19    ref    this in rcx
                                                  +--*  t70    ref    arg2 in r8
                                                  +--*  t69    int    arg1 in rdx
N007 ( 17, 12) [000071] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor $VN.Void
               [000241] ------------                 IL_OFFSET void   IL offset: 0x17
N003 (  2, 10) [000026] ------------        t26 =    CNS_INT   long   0x7ffc86100028 $1c1
N004 (  1,  4) [000027] ------------        t27 =    CNS_INT   int    215 $43
                                                  /--*  t26    long   arg0 in rcx
                                                  +--*  t27    int    arg1 in rdx
N005 ( 17, 21) [000028] H-CXG-------        t28 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $301
N006 (  2, 10) [000178] I-----------       t178 =    CNS_INT(h) long   0xd1ffab1e static Fseq[FalseString] $104
                                                  /--*  t178   long   
N007 (  4, 12) [000024] n---G-------        t24 = *  IND       ref    <l:$243, c:$14a>
                                                  /--*  t24    ref    
N010 ( 21, 33) [000088] DA-XG-------              *  STORE_LCL_VAR ref    V08 tmp6         d:2
               [000242] ------------                 IL_OFFSET void   IL offset: 0x17
N005 (  2, 10) [000179] H-----------       t179 =    CNS_INT(h) long   0xD1FFAB1E "AlwaysCompileMarkupFilesInSeparateDomain" $105
                                                  /--*  t179   long   
N006 (  4, 12) [000180] #---G-------       t180 = *  IND       ref    $189
N007 (  1,  1) [000022] ------------        t22 =    LCL_VAR   ref    V04 tmp2         u:2 $183
N008 (  1,  1) [000076] ------------        t76 =    LCL_VAR   ref    V08 tmp6         u:2 (last use) <l:$243, c:$14a>
N009 (  1,  1) [000077] ------------        t77 =    CNS_INT   int    2 $44
                                                  /--*  t180   ref    arg1 in rdx
                                                  +--*  t22    ref    this in rcx
                                                  +--*  t76    ref    arg2 in r8
                                                  +--*  t77    int    arg3 in r9
N010 ( 21, 25) [000078] --CXG-------        t78 = *  CALL      int    System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].TryInsert $283
                                                  /--*  t78    int    
N012 ( 25, 28) [000081] DA-XG-------              *  STORE_LCL_VAR int    V09 tmp7         d:2
               [000243] ------------                 IL_OFFSET void   IL offset: 0x17
N001 (  2, 10) [000091] H-----------        t91 =    CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL] $106
                                                  /--*  t91    long   
N002 (  4, 12) [000092] #---G-------        t92 = *  IND       ref    $18a
                                                  /--*  t92    ref    
N004 (  4, 12) [000231] DA--G-------              *  STORE_LCL_VAR ref    V17 cse1         d:1
N005 (  1,  1) [000232] ------------       t232 =    LCL_VAR   ref    V17 cse1         u:1 $18a
                                                  /--*  t232   ref    
N008 (  9, 16) [000106] DA--G-------              *  STORE_LCL_VAR ref    V10 tmp8         d:2
               [000244] ------------                 IL_OFFSET void   IL offset: 0x17
N001 (  1,  1) [000234] ------------       t234 =    LCL_VAR   ref    V17 cse1         u:1 $18a
                                                  /--*  t234   ref    
N003 (  5,  4) [000108] DA--G-------              *  STORE_LCL_VAR ref    V11 tmp9         d:2
               [000245] ------------                 IL_OFFSET void   IL offset: 0x17
N001 (  3,  2) [000098] ------------        t98 =    LCL_VAR   int    V09 tmp7         u:2 (last use) $283
N002 (  1,  1) [000099] ------------        t99 =    CNS_INT   int    0 $40
                                                  /--*  t98    int    
                                                  +--*  t99    int    
N003 (  5,  4) [000100] J------N----       t100 = *  NE        int    $340
                                                  /--*  t100   int    
N004 (  7,  6) [000101] ------------              *  JTRUE     void  

------------ BB02 [017..018), preds={BB01} succs={BB03}
               [000246] ------------                 IL_OFFSET void   IL offset: 0x17
N003 (  3,  2) [000102] ------------       t102 =    LCL_VAR   ref    V11 tmp9         u:2 (last use) $18a
N004 (  3,  2) [000103] ------------       t103 =    LCL_VAR   ref    V11 tmp9         u:2 (last use) $18a
                                                  /--*  t102   ref    arg0 in rcx
                                                  +--*  t103   ref    arg1 in rdx
N005 ( 20, 11) [000104] --CXG-------              *  CALL      void   System.Diagnostics.Debug.Fail $VN.Void

------------ BB03 [000..018) (return), preds={BB01,BB02} succs={}
N002 ( 14,  5) [000110] --CXG-------       t110 =    CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices $156
                                                  /--*  t110   ref    
N004 ( 14,  5) [000188] DA-XG-----L-              *  STORE_LCL_VAR ref    V15 tmp13        d:2
N005 (  1,  1) [000189] ------------       t189 =    LCL_VAR   ref    V15 tmp13        u:2 (last use) $156
N006 (  1,  1) [000021] ------------        t21 =    LCL_VAR   ref    V04 tmp2         u:2 (last use) $183
                                                  /--*  t189   ref    arg1 in rdx
                                                  +--*  t21    ref    arg0 in rcx
N007 ( 33, 14) [000112] --CXG-------       t112 = *  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create $159
                                                  /--*  t112   ref    
N009 ( 33, 14) [000034] DA-XG-------              *  STORE_LCL_VAR ref    V05 tmp3         d:2
N001 (  1,  1) [000036] ------------        t36 =    LCL_VAR   ref    V05 tmp3         u:2 $159
N002 (  1,  4) [000191] ------------       t191 =    CNS_INT   long   136 field offset Fseq[_loader] $1c2
                                                  /--*  t36    ref    
                                                  +--*  t191   long   
N003 (  2,  5) [000192] -------N----       t192 = *  ADD       byref  $201
                                                  /--*  t192   byref  
N004 (  4,  7) [000118] ---XG-------       t118 = *  IND       ref    <l:$191, c:$190>
                                                  /--*  t118   ref    
N006 (  4,  7) [000225] DA-XG-------              *  STORE_LCL_VAR ref    V16 cse0         d:1
N007 (  1,  1) [000226] ------------       t226 =    LCL_VAR   ref    V16 cse0         u:1 <l:$191, c:$190>
                                                  /--*  t226   ref    
N010 (  5,  8) [000129] DA-XG-------              *  STORE_LCL_VAR ref    V12 tmp10        d:2
N001 (  1,  1) [000124] ------------       t124 =    LCL_VAR   ref    V12 tmp10        u:2 (last use) <l:$18e, c:$15c>
N002 (  1,  1) [000193] ------------       t193 =    CNS_INT   long   56 field offset Fseq[<LoadMetadataForReferencedProjects>k__BackingField] $1c3
                                                  /--*  t124   ref    
                                                  +--*  t193   long   
N003 (  2,  2) [000194] -------N----       t194 = *  ADD       byref  <l:$203, c:$202>
N005 (  1,  1) [000125] ------------       t125 =    CNS_INT   int    1 $46
                                                  /--*  t194   byref  
                                                  +--*  t125   int    
               [000247] -A-XG-------              *  STOREIND  bool  
               [000248] ------------                 IL_OFFSET void   IL offset: 0x33
N001 (  1,  1) [000228] ------------       t228 =    LCL_VAR   ref    V16 cse0         u:1 <l:$18e, c:$15c>
                                                  /--*  t228   ref    
N003 (  1,  3) [000143] DA--G-------              *  STORE_LCL_VAR ref    V13 tmp11        d:2
               [000249] ------------                 IL_OFFSET void   IL offset: 0x33
N001 (  1,  1) [000138] ------------       t138 =    LCL_VAR   ref    V13 tmp11        u:2 (last use) <l:$18e, c:$15e>
N002 (  1,  1) [000197] ------------       t197 =    CNS_INT   long   57 field offset Fseq[<SkipUnrecognizedProjects>k__BackingField] $1c4
                                                  /--*  t138   ref    
                                                  +--*  t197   long   
N003 (  2,  2) [000198] -------N----       t198 = *  ADD       byref  <l:$205, c:$204>
N005 (  1,  1) [000139] ------------       t139 =    CNS_INT   int    1 $46
                                                  /--*  t198   byref  
                                                  +--*  t139   int    
               [000250] -A-XG-------              *  STOREIND  bool  
               [000251] ------------                 IL_OFFSET void   IL offset: 0x3a
N004 (  1,  1) [000229] ------------       t229 =    LCL_VAR   ref    V16 cse0         u:1 <l:$18e, c:$15c>
N005 (  2, 10) [000201] H-----------       t201 =    CNS_INT(h) long   0xD1FFAB1E "ilproj" $10b
                                                  /--*  t201   long   
N006 (  4, 12) [000202] #---G-------       t202 = *  IND       ref    $194
N007 (  2, 10) [000203] H-----------       t203 =    CNS_INT(h) long   0xD1FFAB1E "IL" $10c
                                                  /--*  t203   long   
N008 (  4, 12) [000204] #---G-------       t204 = *  IND       ref    $195
                                                  /--*  t229   ref    this in rcx
                                                  +--*  t202   ref    arg1 in rdx
                                                  +--*  t204   ref    arg2 in r8
N009 ( 23, 34) [000148] --CXG-------              *  CALL      void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage $VN.Void
               [000252] ------------                 IL_OFFSET void   IL offset: 0x4a
N004 (  1,  1) [000048] ------------        t48 =    LCL_VAR   ref    V05 tmp3         u:2 $159
N005 (  1,  4) [000208] ------------       t208 =    CNS_INT   long   136 field offset Fseq[_loader] $1c2
                                                  /--*  t48    ref    
                                                  +--*  t208   long   
N006 (  2,  5) [000209] -------N----       t209 = *  ADD       byref  $201
                                                  /--*  t209   byref  
N007 (  4,  7) [000150] n---GO------       t150 = *  IND       ref    <l:$199, c:$198>
N008 (  2, 10) [000210] H-----------       t210 =    CNS_INT(h) long   0xD1FFAB1E "vcxproj" $10d
                                                  /--*  t210   long   
N009 (  4, 12) [000211] #---G-------       t211 = *  IND       ref    $19a
N010 (  2, 10) [000212] H-----------       t212 =    CNS_INT(h) long   0xD1FFAB1E "C++" $10e
                                                  /--*  t212   long   
N011 (  4, 12) [000213] #---G-------       t213 = *  IND       ref    $19b
                                                  /--*  t150   ref    this in rcx
                                                  +--*  t211   ref    arg1 in rdx
                                                  +--*  t213   ref    arg2 in r8
N012 ( 26, 40) [000153] --CXGO------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage $VN.Void
               [000253] ------------                 IL_OFFSET void   IL offset: 0x5a
N002 (  2, 10) [000055] H-----------        t55 =    CNS_INT(h) long   0xd1ffab1e token $10f
                                                  /--*  t55    long   arg0 in rcx
N003 ( 16, 16) [000056] --C---------        t56 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $19c
                                                  /--*  t56    ref    
N005 ( 16, 16) [000058] DA----------              *  STORE_LCL_VAR ref    V06 tmp4         d:2
N001 (  1,  1) [000059] ------------        t59 =    LCL_VAR   ref    V06 tmp4         u:2 $19c
N002 (  1,  1) [000218] ------------       t218 =    CNS_INT   long   8 field offset Fseq[_target] $1c0
                                                  /--*  t59    ref    
                                                  +--*  t218   long   
N003 (  2,  2) [000219] -------N----       t219 = *  ADD       byref  $206
N005 (  1,  1) [000158] ------------       t158 =    LCL_VAR   ref    V01 loc0         u:2 (last use) $180
                                                  /--*  t219   byref  
                                                  +--*  t158   ref    
               [000254] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000161] ------------       t161 =    LCL_VAR   ref    V06 tmp4         u:2 $19c
N002 (  1,  1) [000220] ------------       t220 =    CNS_INT   long   24 field offset Fseq[_methodPtr] $1c5
                                                  /--*  t161   ref    
                                                  +--*  t220   long   
N003 (  2,  2) [000221] -------N----       t221 = *  ADD       byref  $207
N005 (  2, 10) [000054] H-----------        t54 =    CNS_INT(h) long   0xd1ffab1e ftn $111
                                                  /--*  t221   byref  
                                                  +--*  t54    long   
               [000255] -A--GO------              *  STOREIND  long  
               [000256] ------------                 IL_OFFSET void   IL offset: 0x67
N003 (  1,  1) [000052] ------------        t52 =    LCL_VAR   ref    V05 tmp3         u:2 $159
N004 (  1,  1) [000061] ------------        t61 =    LCL_VAR   ref    V06 tmp4         u:2 (last use) $19c
                                                  /--*  t52    ref    this in rcx
                                                  +--*  t61    ref    arg1 in rdx
N005 ( 16, 10) [000062] --CXG-------              *  CALL      void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed $VN.Void
               [000257] ------------                 IL_OFFSET void   IL offset: 0x6c
N001 (  1,  1) [000035] ------------        t35 =    LCL_VAR   ref    V05 tmp3         u:2 (last use) $159
                                                  /--*  t35    ref    
N002 (  2,  2) [000063] ------------              *  RETURN    ref    $170

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist

*************** Starting PHASE Do 'simple' lowering
Bumping outgoingArgSpaceSize to 32 for call [000001]
outgoingArgSpaceSize 32 sufficient for call [000016], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000071], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000028], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000078], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000104], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000110], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000112], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000148], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000153], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000056], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000062], which needs 32

*************** Finishing PHASE Do 'simple' lowering
*************** In fgDebugCheckBBlist
Trees before Lowering nodeinfo

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)-> BB03 ( cond )                     i label target hascall gcsafe newobj nullcheck LIR 
BB02 [0008]  1       BB01                  0.25    [017..018)                                     i hascall gcsafe LIR 
BB03 [0009]  2       BB01,BB02             1       [000..018)        (return)                     i label target hascall gcsafe newobj nullcheck LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06D) -> BB03 (cond), preds={} succs={BB02,BB03}
               [000237] ------------                 IL_OFFSET void   IL offset: 0x0
N002 (  2, 10) [000000] H-----------         t0 =    CNS_INT(h) long   0xd1ffab1e method $100
                                                  /--*  t0     long   arg0 in rcx
N003 ( 16, 16) [000001] --C---------         t1 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $180
                                                  /--*  t1     ref    
N005 ( 16, 16) [000003] DA----------              *  STORE_LCL_VAR ref    V03 tmp1         d:2
               [000238] ------------                 IL_OFFSET void   IL offset: 0x5
N001 (  1,  1) [000006] ------------         t6 =    LCL_VAR   ref    V03 tmp1         u:2 $180
                                                  /--*  t6     ref    
N003 (  1,  3) [000008] DA----------              *  STORE_LCL_VAR ref    V01 loc0         d:2
               [000239] ------------                 IL_OFFSET void   IL offset: 0x6
N001 (  1,  1) [000009] ------------         t9 =    LCL_VAR   ref    V01 loc0         u:2 (last use) $180
N002 (  1,  1) [000169] ------------       t169 =    CNS_INT   long   8 field offset Fseq[projectPath] $1c0
                                                  /--*  t9     ref    
                                                  +--*  t169   long   
N003 (  2,  2) [000170] -------N----       t170 = *  ADD       byref  $200
N005 (  1,  1) [000010] ------------        t10 =    LCL_VAR   ref    V00 arg0         u:1 (last use) $80
                                                  /--*  t170   byref  
                                                  +--*  t10    ref    
               [000240] -A--GO------              *  STOREIND  ref   
N002 (  2, 10) [000015] H-----------        t15 =    CNS_INT(h) long   0xd1ffab1e token $102
                                                  /--*  t15    long   arg0 in rcx
N003 ( 16, 16) [000016] --C---------        t16 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $183
                                                  /--*  t16    ref    
N005 ( 16, 16) [000018] DA----------              *  STORE_LCL_VAR ref    V04 tmp2         d:2
N001 (  2, 10) [000172] I-----------       t172 =    CNS_INT(h) long   0xd1ffab1e static Fseq[Instance] $103
                                                  /--*  t172   long   
N002 (  4, 12) [000067] n---G-------        t67 = *  IND       ref    <l:$242, c:$145>
                                                  /--*  t67    ref    
N004 (  4, 12) [000073] DA--G-------              *  STORE_LCL_VAR ref    V07 tmp5         d:2
N004 (  1,  1) [000019] ------------        t19 =    LCL_VAR   ref    V04 tmp2         u:2 $183
N005 (  1,  1) [000070] ------------        t70 =    LCL_VAR   ref    V07 tmp5         u:2 (last use) <l:$242, c:$145>
N006 (  1,  1) [000069] ------------        t69 =    CNS_INT   int    0 $40
                                                  /--*  t19    ref    this in rcx
                                                  +--*  t70    ref    arg2 in r8
                                                  +--*  t69    int    arg1 in rdx
N007 ( 17, 12) [000071] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor $VN.Void
               [000241] ------------                 IL_OFFSET void   IL offset: 0x17
N003 (  2, 10) [000026] ------------        t26 =    CNS_INT   long   0x7ffc86100028 $1c1
N004 (  1,  4) [000027] ------------        t27 =    CNS_INT   int    215 $43
                                                  /--*  t26    long   arg0 in rcx
                                                  +--*  t27    int    arg1 in rdx
N005 ( 17, 21) [000028] H-CXG-------        t28 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $301
N006 (  2, 10) [000178] I-----------       t178 =    CNS_INT(h) long   0xd1ffab1e static Fseq[FalseString] $104
                                                  /--*  t178   long   
N007 (  4, 12) [000024] n---G-------        t24 = *  IND       ref    <l:$243, c:$14a>
                                                  /--*  t24    ref    
N010 ( 21, 33) [000088] DA-XG-------              *  STORE_LCL_VAR ref    V08 tmp6         d:2
               [000242] ------------                 IL_OFFSET void   IL offset: 0x17
N005 (  2, 10) [000179] H-----------       t179 =    CNS_INT(h) long   0xD1FFAB1E "AlwaysCompileMarkupFilesInSeparateDomain" $105
                                                  /--*  t179   long   
N006 (  4, 12) [000180] #---G-------       t180 = *  IND       ref    $189
N007 (  1,  1) [000022] ------------        t22 =    LCL_VAR   ref    V04 tmp2         u:2 $183
N008 (  1,  1) [000076] ------------        t76 =    LCL_VAR   ref    V08 tmp6         u:2 (last use) <l:$243, c:$14a>
N009 (  1,  1) [000077] ------------        t77 =    CNS_INT   int    2 $44
                                                  /--*  t180   ref    arg1 in rdx
                                                  +--*  t22    ref    this in rcx
                                                  +--*  t76    ref    arg2 in r8
                                                  +--*  t77    int    arg3 in r9
N010 ( 21, 25) [000078] --CXG-------        t78 = *  CALL      int    System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].TryInsert $283
                                                  /--*  t78    int    
N012 ( 25, 28) [000081] DA-XG-------              *  STORE_LCL_VAR int    V09 tmp7         d:2
               [000243] ------------                 IL_OFFSET void   IL offset: 0x17
N001 (  2, 10) [000091] H-----------        t91 =    CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL] $106
                                                  /--*  t91    long   
N002 (  4, 12) [000092] #---G-------        t92 = *  IND       ref    $18a
                                                  /--*  t92    ref    
N004 (  4, 12) [000231] DA--G-------              *  STORE_LCL_VAR ref    V17 cse1         d:1
N005 (  1,  1) [000232] ------------       t232 =    LCL_VAR   ref    V17 cse1         u:1 $18a
                                                  /--*  t232   ref    
N008 (  9, 16) [000106] DA--G-------              *  STORE_LCL_VAR ref    V10 tmp8         d:2
               [000244] ------------                 IL_OFFSET void   IL offset: 0x17
N001 (  1,  1) [000234] ------------       t234 =    LCL_VAR   ref    V17 cse1         u:1 $18a
                                                  /--*  t234   ref    
N003 (  5,  4) [000108] DA--G-------              *  STORE_LCL_VAR ref    V11 tmp9         d:2
               [000245] ------------                 IL_OFFSET void   IL offset: 0x17
N001 (  3,  2) [000098] ------------        t98 =    LCL_VAR   int    V09 tmp7         u:2 (last use) $283
N002 (  1,  1) [000099] ------------        t99 =    CNS_INT   int    0 $40
                                                  /--*  t98    int    
                                                  +--*  t99    int    
N003 (  5,  4) [000100] J------N----       t100 = *  NE        int    $340
                                                  /--*  t100   int    
N004 (  7,  6) [000101] ------------              *  JTRUE     void  

------------ BB02 [017..018), preds={BB01} succs={BB03}
               [000246] ------------                 IL_OFFSET void   IL offset: 0x17
N003 (  3,  2) [000102] ------------       t102 =    LCL_VAR   ref    V11 tmp9         u:2 (last use) $18a
N004 (  3,  2) [000103] ------------       t103 =    LCL_VAR   ref    V11 tmp9         u:2 (last use) $18a
                                                  /--*  t102   ref    arg0 in rcx
                                                  +--*  t103   ref    arg1 in rdx
N005 ( 20, 11) [000104] --CXG-------              *  CALL      void   System.Diagnostics.Debug.Fail $VN.Void

------------ BB03 [000..018) (return), preds={BB01,BB02} succs={}
N002 ( 14,  5) [000110] --CXG-------       t110 =    CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices $156
                                                  /--*  t110   ref    
N004 ( 14,  5) [000188] DA-XG-----L-              *  STORE_LCL_VAR ref    V15 tmp13        d:2
N005 (  1,  1) [000189] ------------       t189 =    LCL_VAR   ref    V15 tmp13        u:2 (last use) $156
N006 (  1,  1) [000021] ------------        t21 =    LCL_VAR   ref    V04 tmp2         u:2 (last use) $183
                                                  /--*  t189   ref    arg1 in rdx
                                                  +--*  t21    ref    arg0 in rcx
N007 ( 33, 14) [000112] --CXG-------       t112 = *  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create $159
                                                  /--*  t112   ref    
N009 ( 33, 14) [000034] DA-XG-------              *  STORE_LCL_VAR ref    V05 tmp3         d:2
N001 (  1,  1) [000036] ------------        t36 =    LCL_VAR   ref    V05 tmp3         u:2 $159
N002 (  1,  4) [000191] ------------       t191 =    CNS_INT   long   136 field offset Fseq[_loader] $1c2
                                                  /--*  t36    ref    
                                                  +--*  t191   long   
N003 (  2,  5) [000192] -------N----       t192 = *  ADD       byref  $201
                                                  /--*  t192   byref  
N004 (  4,  7) [000118] ---XG-------       t118 = *  IND       ref    <l:$191, c:$190>
                                                  /--*  t118   ref    
N006 (  4,  7) [000225] DA-XG-------              *  STORE_LCL_VAR ref    V16 cse0         d:1
N007 (  1,  1) [000226] ------------       t226 =    LCL_VAR   ref    V16 cse0         u:1 <l:$191, c:$190>
                                                  /--*  t226   ref    
N010 (  5,  8) [000129] DA-XG-------              *  STORE_LCL_VAR ref    V12 tmp10        d:2
N001 (  1,  1) [000124] ------------       t124 =    LCL_VAR   ref    V12 tmp10        u:2 (last use) <l:$18e, c:$15c>
N002 (  1,  1) [000193] ------------       t193 =    CNS_INT   long   56 field offset Fseq[<LoadMetadataForReferencedProjects>k__BackingField] $1c3
                                                  /--*  t124   ref    
                                                  +--*  t193   long   
N003 (  2,  2) [000194] -------N----       t194 = *  ADD       byref  <l:$203, c:$202>
N005 (  1,  1) [000125] ------------       t125 =    CNS_INT   int    1 $46
                                                  /--*  t194   byref  
                                                  +--*  t125   int    
               [000247] -A-XG-------              *  STOREIND  bool  
               [000248] ------------                 IL_OFFSET void   IL offset: 0x33
N001 (  1,  1) [000228] ------------       t228 =    LCL_VAR   ref    V16 cse0         u:1 <l:$18e, c:$15c>
                                                  /--*  t228   ref    
N003 (  1,  3) [000143] DA--G-------              *  STORE_LCL_VAR ref    V13 tmp11        d:2
               [000249] ------------                 IL_OFFSET void   IL offset: 0x33
N001 (  1,  1) [000138] ------------       t138 =    LCL_VAR   ref    V13 tmp11        u:2 (last use) <l:$18e, c:$15e>
N002 (  1,  1) [000197] ------------       t197 =    CNS_INT   long   57 field offset Fseq[<SkipUnrecognizedProjects>k__BackingField] $1c4
                                                  /--*  t138   ref    
                                                  +--*  t197   long   
N003 (  2,  2) [000198] -------N----       t198 = *  ADD       byref  <l:$205, c:$204>
N005 (  1,  1) [000139] ------------       t139 =    CNS_INT   int    1 $46
                                                  /--*  t198   byref  
                                                  +--*  t139   int    
               [000250] -A-XG-------              *  STOREIND  bool  
               [000251] ------------                 IL_OFFSET void   IL offset: 0x3a
N004 (  1,  1) [000229] ------------       t229 =    LCL_VAR   ref    V16 cse0         u:1 <l:$18e, c:$15c>
N005 (  2, 10) [000201] H-----------       t201 =    CNS_INT(h) long   0xD1FFAB1E "ilproj" $10b
                                                  /--*  t201   long   
N006 (  4, 12) [000202] #---G-------       t202 = *  IND       ref    $194
N007 (  2, 10) [000203] H-----------       t203 =    CNS_INT(h) long   0xD1FFAB1E "IL" $10c
                                                  /--*  t203   long   
N008 (  4, 12) [000204] #---G-------       t204 = *  IND       ref    $195
                                                  /--*  t229   ref    this in rcx
                                                  +--*  t202   ref    arg1 in rdx
                                                  +--*  t204   ref    arg2 in r8
N009 ( 23, 34) [000148] --CXG-------              *  CALL      void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage $VN.Void
               [000252] ------------                 IL_OFFSET void   IL offset: 0x4a
N004 (  1,  1) [000048] ------------        t48 =    LCL_VAR   ref    V05 tmp3         u:2 $159
N005 (  1,  4) [000208] ------------       t208 =    CNS_INT   long   136 field offset Fseq[_loader] $1c2
                                                  /--*  t48    ref    
                                                  +--*  t208   long   
N006 (  2,  5) [000209] -------N----       t209 = *  ADD       byref  $201
                                                  /--*  t209   byref  
N007 (  4,  7) [000150] n---GO------       t150 = *  IND       ref    <l:$199, c:$198>
N008 (  2, 10) [000210] H-----------       t210 =    CNS_INT(h) long   0xD1FFAB1E "vcxproj" $10d
                                                  /--*  t210   long   
N009 (  4, 12) [000211] #---G-------       t211 = *  IND       ref    $19a
N010 (  2, 10) [000212] H-----------       t212 =    CNS_INT(h) long   0xD1FFAB1E "C++" $10e
                                                  /--*  t212   long   
N011 (  4, 12) [000213] #---G-------       t213 = *  IND       ref    $19b
                                                  /--*  t150   ref    this in rcx
                                                  +--*  t211   ref    arg1 in rdx
                                                  +--*  t213   ref    arg2 in r8
N012 ( 26, 40) [000153] --CXGO------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage $VN.Void
               [000253] ------------                 IL_OFFSET void   IL offset: 0x5a
N002 (  2, 10) [000055] H-----------        t55 =    CNS_INT(h) long   0xd1ffab1e token $10f
                                                  /--*  t55    long   arg0 in rcx
N003 ( 16, 16) [000056] --C---------        t56 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $19c
                                                  /--*  t56    ref    
N005 ( 16, 16) [000058] DA----------              *  STORE_LCL_VAR ref    V06 tmp4         d:2
N001 (  1,  1) [000059] ------------        t59 =    LCL_VAR   ref    V06 tmp4         u:2 $19c
N002 (  1,  1) [000218] ------------       t218 =    CNS_INT   long   8 field offset Fseq[_target] $1c0
                                                  /--*  t59    ref    
                                                  +--*  t218   long   
N003 (  2,  2) [000219] -------N----       t219 = *  ADD       byref  $206
N005 (  1,  1) [000158] ------------       t158 =    LCL_VAR   ref    V01 loc0         u:2 (last use) $180
                                                  /--*  t219   byref  
                                                  +--*  t158   ref    
               [000254] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000161] ------------       t161 =    LCL_VAR   ref    V06 tmp4         u:2 $19c
N002 (  1,  1) [000220] ------------       t220 =    CNS_INT   long   24 field offset Fseq[_methodPtr] $1c5
                                                  /--*  t161   ref    
                                                  +--*  t220   long   
N003 (  2,  2) [000221] -------N----       t221 = *  ADD       byref  $207
N005 (  2, 10) [000054] H-----------        t54 =    CNS_INT(h) long   0xd1ffab1e ftn $111
                                                  /--*  t221   byref  
                                                  +--*  t54    long   
               [000255] -A--GO------              *  STOREIND  long  
               [000256] ------------                 IL_OFFSET void   IL offset: 0x67
N003 (  1,  1) [000052] ------------        t52 =    LCL_VAR   ref    V05 tmp3         u:2 $159
N004 (  1,  1) [000061] ------------        t61 =    LCL_VAR   ref    V06 tmp4         u:2 (last use) $19c
                                                  /--*  t52    ref    this in rcx
                                                  +--*  t61    ref    arg1 in rdx
N005 ( 16, 10) [000062] --CXG-------              *  CALL      void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed $VN.Void
               [000257] ------------                 IL_OFFSET void   IL offset: 0x6c
N001 (  1,  1) [000035] ------------        t35 =    LCL_VAR   ref    V05 tmp3         u:2 (last use) $159
                                                  /--*  t35    ref    
N002 (  2,  2) [000063] ------------              *  RETURN    ref    $170

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Lowering nodeinfo
lowering call (before):
N002 (  2, 10) [000000] H-----------         t0 =    CNS_INT(h) long   0xd1ffab1e method $100
                                                  /--*  t0     long   arg0 in rcx
N003 ( 16, 16) [000001] --C---------         t1 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $180

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000168] ----------L-              *  ARGPLACE  long   $100

late:
======
lowering arg : N002 (  2, 10) [000000] H-----------              *  CNS_INT(h) long   0xd1ffab1e method $100
new node is :                [000258] ------------              *  PUTARG_REG long   REG rcx

lowering call (after):
N002 (  2, 10) [000000] H-----------         t0 =    CNS_INT(h) long   0xd1ffab1e method $100
                                                  /--*  t0     long   
               [000258] ------------       t258 = *  PUTARG_REG long   REG rcx
                                                  /--*  t258   long   arg0 in rcx
N003 ( 16, 16) [000001] --C---------         t1 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $180

lowering store lcl var/field (before):
N002 (  2, 10) [000000] H-----------         t0 =    CNS_INT(h) long   0xd1ffab1e method $100
                                                  /--*  t0     long   
               [000258] ------------       t258 = *  PUTARG_REG long   REG rcx
                                                  /--*  t258   long   arg0 in rcx
N003 ( 16, 16) [000001] --C---------         t1 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $180
                                                  /--*  t1     ref    
N005 ( 16, 16) [000003] DA----------              *  STORE_LCL_VAR ref    V03 tmp1         d:2

lowering store lcl var/field (after):
N002 (  2, 10) [000000] H-----------         t0 =    CNS_INT(h) long   0xd1ffab1e method $100
                                                  /--*  t0     long   
               [000258] ------------       t258 = *  PUTARG_REG long   REG rcx
                                                  /--*  t258   long   arg0 in rcx
N003 ( 16, 16) [000001] --C---------         t1 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $180
                                                  /--*  t1     ref    
N005 ( 16, 16) [000003] DA----------              *  STORE_LCL_VAR ref    V03 tmp1         d:2

lowering store lcl var/field (before):
N001 (  1,  1) [000006] ------------         t6 =    LCL_VAR   ref    V03 tmp1         u:2 $180
                                                  /--*  t6     ref    
N003 (  1,  3) [000008] DA----------              *  STORE_LCL_VAR ref    V01 loc0         d:2

lowering store lcl var/field (after):
N001 (  1,  1) [000006] ------------         t6 =    LCL_VAR   ref    V03 tmp1         u:2 $180
                                                  /--*  t6     ref    
N003 (  1,  3) [000008] DA----------              *  STORE_LCL_VAR ref    V01 loc0         d:2

Addressing mode:
  Base
    N001 (  1,  1) [000009] ------------              *  LCL_VAR   ref    V01 loc0         u:2 (last use) $180
  + 8
Removing unused node:
  N002 (  1,  1) [000169] -c----------              *  CNS_INT   long   8 field offset Fseq[projectPath] $1c0
New addressing mode node:
  N003 (  2,  2) [000170] ------------              *  LEA(b+8)  byref 

lowering call (before):
N002 (  2, 10) [000015] H-----------        t15 =    CNS_INT(h) long   0xd1ffab1e token $102
                                                  /--*  t15    long   arg0 in rcx
N003 ( 16, 16) [000016] --C---------        t16 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $183

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000171] ----------L-              *  ARGPLACE  long   $102

late:
======
lowering arg : N002 (  2, 10) [000015] H-----------              *  CNS_INT(h) long   0xd1ffab1e token $102
new node is :                [000259] ------------              *  PUTARG_REG long   REG rcx

lowering call (after):
N002 (  2, 10) [000015] H-----------        t15 =    CNS_INT(h) long   0xd1ffab1e token $102
                                                  /--*  t15    long   
               [000259] ------------       t259 = *  PUTARG_REG long   REG rcx
                                                  /--*  t259   long   arg0 in rcx
N003 ( 16, 16) [000016] --C---------        t16 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $183

lowering store lcl var/field (before):
N002 (  2, 10) [000015] H-----------        t15 =    CNS_INT(h) long   0xd1ffab1e token $102
                                                  /--*  t15    long   
               [000259] ------------       t259 = *  PUTARG_REG long   REG rcx
                                                  /--*  t259   long   arg0 in rcx
N003 ( 16, 16) [000016] --C---------        t16 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $183
                                                  /--*  t16    ref    
N005 ( 16, 16) [000018] DA----------              *  STORE_LCL_VAR ref    V04 tmp2         d:2

lowering store lcl var/field (after):
N002 (  2, 10) [000015] H-----------        t15 =    CNS_INT(h) long   0xd1ffab1e token $102
                                                  /--*  t15    long   
               [000259] ------------       t259 = *  PUTARG_REG long   REG rcx
                                                  /--*  t259   long   arg0 in rcx
N003 ( 16, 16) [000016] --C---------        t16 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $183
                                                  /--*  t16    ref    
N005 ( 16, 16) [000018] DA----------              *  STORE_LCL_VAR ref    V04 tmp2         d:2

lowering store lcl var/field (before):
N001 (  2, 10) [000172] I-----------       t172 =    CNS_INT(h) long   0xd1ffab1e static Fseq[Instance] $103
                                                  /--*  t172   long   
N002 (  4, 12) [000067] n---G-------        t67 = *  IND       ref    <l:$242, c:$145>
                                                  /--*  t67    ref    
N004 (  4, 12) [000073] DA--G-------              *  STORE_LCL_VAR ref    V07 tmp5         d:2

lowering store lcl var/field (after):
N001 (  2, 10) [000172] I-----------       t172 =    CNS_INT(h) long   0xd1ffab1e static Fseq[Instance] $103
                                                  /--*  t172   long   
N002 (  4, 12) [000067] n---G-------        t67 = *  IND       ref    <l:$242, c:$145>
                                                  /--*  t67    ref    
N004 (  4, 12) [000073] DA--G-------              *  STORE_LCL_VAR ref    V07 tmp5         d:2

lowering call (before):
N004 (  1,  1) [000019] ------------        t19 =    LCL_VAR   ref    V04 tmp2         u:2 $183
N005 (  1,  1) [000070] ------------        t70 =    LCL_VAR   ref    V07 tmp5         u:2 (last use) <l:$242, c:$145>
N006 (  1,  1) [000069] ------------        t69 =    CNS_INT   int    0 $40
                                                  /--*  t19    ref    this in rcx
                                                  +--*  t70    ref    arg2 in r8
                                                  +--*  t69    int    arg1 in rdx
N007 ( 17, 12) [000071] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor $VN.Void

objp:
======
lowering arg : N001 (  0,  0) [000173] ----------L-              *  ARGPLACE  ref    $147

args:
======
lowering arg : N002 (  0,  0) [000175] ----------L-              *  ARGPLACE  int    $183
lowering arg : N003 (  0,  0) [000174] ----------L-              *  ARGPLACE  ref    $40

late:
======
lowering arg : N004 (  1,  1) [000019] ------------              *  LCL_VAR   ref    V04 tmp2         u:2 $183
new node is :                [000260] ------------              *  PUTARG_REG ref    REG rcx

lowering arg : N005 (  1,  1) [000070] ------------              *  LCL_VAR   ref    V07 tmp5         u:2 (last use) <l:$242, c:$145>
new node is :                [000261] ------------              *  PUTARG_REG ref    REG r8

lowering arg : N006 (  1,  1) [000069] ------------              *  CNS_INT   int    0 $40
new node is :                [000262] ------------              *  PUTARG_REG int    REG rdx

lowering call (after):
N004 (  1,  1) [000019] ------------        t19 =    LCL_VAR   ref    V04 tmp2         u:2 $183
                                                  /--*  t19    ref    
               [000260] ------------       t260 = *  PUTARG_REG ref    REG rcx
N005 (  1,  1) [000070] ------------        t70 =    LCL_VAR   ref    V07 tmp5         u:2 (last use) <l:$242, c:$145>
                                                  /--*  t70    ref    
               [000261] ------------       t261 = *  PUTARG_REG ref    REG r8
N006 (  1,  1) [000069] ------------        t69 =    CNS_INT   int    0 $40
                                                  /--*  t69    int    
               [000262] ------------       t262 = *  PUTARG_REG int    REG rdx
                                                  /--*  t260   ref    this in rcx
                                                  +--*  t261   ref    arg2 in r8
                                                  +--*  t262   int    arg1 in rdx
N007 ( 17, 12) [000071] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor $VN.Void

lowering call (before):
N003 (  2, 10) [000026] ------------        t26 =    CNS_INT   long   0x7ffc86100028 $1c1
N004 (  1,  4) [000027] ------------        t27 =    CNS_INT   int    215 $43
                                                  /--*  t26    long   arg0 in rcx
                                                  +--*  t27    int    arg1 in rdx
N005 ( 17, 21) [000028] H-CXG-------        t28 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $301

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000176] ----------L-              *  ARGPLACE  long   $1c1
lowering arg : N002 (  0,  0) [000177] ----------L-              *  ARGPLACE  int    $43

late:
======
lowering arg : N003 (  2, 10) [000026] ------------              *  CNS_INT   long   0x7ffc86100028 $1c1
new node is :                [000263] ------------              *  PUTARG_REG long   REG rcx

lowering arg : N004 (  1,  4) [000027] ------------              *  CNS_INT   int    215 $43
new node is :                [000264] ------------              *  PUTARG_REG int    REG rdx

lowering call (after):
N003 (  2, 10) [000026] ------------        t26 =    CNS_INT   long   0x7ffc86100028 $1c1
                                                  /--*  t26    long   
               [000263] ------------       t263 = *  PUTARG_REG long   REG rcx
N004 (  1,  4) [000027] ------------        t27 =    CNS_INT   int    215 $43
                                                  /--*  t27    int    
               [000264] ------------       t264 = *  PUTARG_REG int    REG rdx
                                                  /--*  t263   long   arg0 in rcx
                                                  +--*  t264   int    arg1 in rdx
N005 ( 17, 21) [000028] H-CXG-------        t28 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $301

lowering store lcl var/field (before):
N006 (  2, 10) [000178] I-----------       t178 =    CNS_INT(h) long   0xd1ffab1e static Fseq[FalseString] $104
                                                  /--*  t178   long   
N007 (  4, 12) [000024] n---G-------        t24 = *  IND       ref    <l:$243, c:$14a>
                                                  /--*  t24    ref    
N010 ( 21, 33) [000088] DA-XG-------              *  STORE_LCL_VAR ref    V08 tmp6         d:2

lowering store lcl var/field (after):
N006 (  2, 10) [000178] I-----------       t178 =    CNS_INT(h) long   0xd1ffab1e static Fseq[FalseString] $104
                                                  /--*  t178   long   
N007 (  4, 12) [000024] n---G-------        t24 = *  IND       ref    <l:$243, c:$14a>
                                                  /--*  t24    ref    
N010 ( 21, 33) [000088] DA-XG-------              *  STORE_LCL_VAR ref    V08 tmp6         d:2

lowering call (before):
N005 (  2, 10) [000179] H-----------       t179 =    CNS_INT(h) long   0xD1FFAB1E "AlwaysCompileMarkupFilesInSeparateDomain" $105
                                                  /--*  t179   long   
N006 (  4, 12) [000180] #---G-------       t180 = *  IND       ref    $189
N007 (  1,  1) [000022] ------------        t22 =    LCL_VAR   ref    V04 tmp2         u:2 $183
N008 (  1,  1) [000076] ------------        t76 =    LCL_VAR   ref    V08 tmp6         u:2 (last use) <l:$243, c:$14a>
N009 (  1,  1) [000077] ------------        t77 =    CNS_INT   int    2 $44
                                                  /--*  t180   ref    arg1 in rdx
                                                  +--*  t22    ref    this in rcx
                                                  +--*  t76    ref    arg2 in r8
                                                  +--*  t77    int    arg3 in r9
N010 ( 21, 25) [000078] --CXG-------        t78 = *  CALL      int    System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].TryInsert $283

objp:
======
lowering arg : N001 (  0,  0) [000182] ----------L-              *  ARGPLACE  ref    $14c

args:
======
lowering arg : N002 (  0,  0) [000181] ----------L-              *  ARGPLACE  ref    $183
lowering arg : N003 (  0,  0) [000183] ----------L-              *  ARGPLACE  ref    $189
lowering arg : N004 (  0,  0) [000184] ----------L-              *  ARGPLACE  int    <l:$243, c:$14a>

late:
======
lowering arg : N006 (  4, 12) [000180] #---G-------              *  IND       ref    $189
new node is :                [000265] ----G-------              *  PUTARG_REG ref    REG rdx

lowering arg : N007 (  1,  1) [000022] ------------              *  LCL_VAR   ref    V04 tmp2         u:2 $183
new node is :                [000266] ------------              *  PUTARG_REG ref    REG rcx

lowering arg : N008 (  1,  1) [000076] ------------              *  LCL_VAR   ref    V08 tmp6         u:2 (last use) <l:$243, c:$14a>
new node is :                [000267] ------------              *  PUTARG_REG ref    REG r8

lowering arg : N009 (  1,  1) [000077] ------------              *  CNS_INT   int    2 $44
new node is :                [000268] ------------              *  PUTARG_REG int    REG r9

lowering call (after):
N005 (  2, 10) [000179] H-----------       t179 =    CNS_INT(h) long   0xD1FFAB1E "AlwaysCompileMarkupFilesInSeparateDomain" $105
                                                  /--*  t179   long   
N006 (  4, 12) [000180] #---G-------       t180 = *  IND       ref    $189
                                                  /--*  t180   ref    
               [000265] ----G-------       t265 = *  PUTARG_REG ref    REG rdx
N007 (  1,  1) [000022] ------------        t22 =    LCL_VAR   ref    V04 tmp2         u:2 $183
                                                  /--*  t22    ref    
               [000266] ------------       t266 = *  PUTARG_REG ref    REG rcx
N008 (  1,  1) [000076] ------------        t76 =    LCL_VAR   ref    V08 tmp6         u:2 (last use) <l:$243, c:$14a>
                                                  /--*  t76    ref    
               [000267] ------------       t267 = *  PUTARG_REG ref    REG r8
N009 (  1,  1) [000077] ------------        t77 =    CNS_INT   int    2 $44
                                                  /--*  t77    int    
               [000268] ------------       t268 = *  PUTARG_REG int    REG r9
                                                  /--*  t265   ref    arg1 in rdx
                                                  +--*  t266   ref    this in rcx
                                                  +--*  t267   ref    arg2 in r8
                                                  +--*  t268   int    arg3 in r9
N010 ( 21, 25) [000078] --CXG-------        t78 = *  CALL      int    System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].TryInsert $283

lowering store lcl var/field (before):
N005 (  2, 10) [000179] H-----------       t179 =    CNS_INT(h) long   0xD1FFAB1E "AlwaysCompileMarkupFilesInSeparateDomain" $105
                                                  /--*  t179   long   
N006 (  4, 12) [000180] #---G-------       t180 = *  IND       ref    $189
                                                  /--*  t180   ref    
               [000265] ----G-------       t265 = *  PUTARG_REG ref    REG rdx
N007 (  1,  1) [000022] ------------        t22 =    LCL_VAR   ref    V04 tmp2         u:2 $183
                                                  /--*  t22    ref    
               [000266] ------------       t266 = *  PUTARG_REG ref    REG rcx
N008 (  1,  1) [000076] ------------        t76 =    LCL_VAR   ref    V08 tmp6         u:2 (last use) <l:$243, c:$14a>
                                                  /--*  t76    ref    
               [000267] ------------       t267 = *  PUTARG_REG ref    REG r8
N009 (  1,  1) [000077] ------------        t77 =    CNS_INT   int    2 $44
                                                  /--*  t77    int    
               [000268] ------------       t268 = *  PUTARG_REG int    REG r9
                                                  /--*  t265   ref    arg1 in rdx
                                                  +--*  t266   ref    this in rcx
                                                  +--*  t267   ref    arg2 in r8
                                                  +--*  t268   int    arg3 in r9
N010 ( 21, 25) [000078] --CXG-------        t78 = *  CALL      int    System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].TryInsert $283
                                                  /--*  t78    int    
N012 ( 25, 28) [000081] DA-XG-------              *  STORE_LCL_VAR int    V09 tmp7         d:2

lowering store lcl var/field (after):
N005 (  2, 10) [000179] H-----------       t179 =    CNS_INT(h) long   0xD1FFAB1E "AlwaysCompileMarkupFilesInSeparateDomain" $105
                                                  /--*  t179   long   
N006 (  4, 12) [000180] #---G-------       t180 = *  IND       ref    $189
                                                  /--*  t180   ref    
               [000265] ----G-------       t265 = *  PUTARG_REG ref    REG rdx
N007 (  1,  1) [000022] ------------        t22 =    LCL_VAR   ref    V04 tmp2         u:2 $183
                                                  /--*  t22    ref    
               [000266] ------------       t266 = *  PUTARG_REG ref    REG rcx
N008 (  1,  1) [000076] ------------        t76 =    LCL_VAR   ref    V08 tmp6         u:2 (last use) <l:$243, c:$14a>
                                                  /--*  t76    ref    
               [000267] ------------       t267 = *  PUTARG_REG ref    REG r8
N009 (  1,  1) [000077] ------------        t77 =    CNS_INT   int    2 $44
                                                  /--*  t77    int    
               [000268] ------------       t268 = *  PUTARG_REG int    REG r9
                                                  /--*  t265   ref    arg1 in rdx
                                                  +--*  t266   ref    this in rcx
                                                  +--*  t267   ref    arg2 in r8
                                                  +--*  t268   int    arg3 in r9
N010 ( 21, 25) [000078] --CXG-------        t78 = *  CALL      int    System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].TryInsert $283
                                                  /--*  t78    int    
N012 ( 25, 28) [000081] DA-XG-------              *  STORE_LCL_VAR int    V09 tmp7         d:2

lowering store lcl var/field (before):
N001 (  2, 10) [000091] H-----------        t91 =    CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL] $106
                                                  /--*  t91    long   
N002 (  4, 12) [000092] #---G-------        t92 = *  IND       ref    $18a
                                                  /--*  t92    ref    
N004 (  4, 12) [000231] DA--G-------              *  STORE_LCL_VAR ref    V17 cse1         d:1

lowering store lcl var/field (after):
N001 (  2, 10) [000091] H-----------        t91 =    CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL] $106
                                                  /--*  t91    long   
N002 (  4, 12) [000092] #---G-------        t92 = *  IND       ref    $18a
                                                  /--*  t92    ref    
N004 (  4, 12) [000231] DA--G-------              *  STORE_LCL_VAR ref    V17 cse1         d:1

lowering store lcl var/field (before):
N005 (  1,  1) [000232] ------------       t232 =    LCL_VAR   ref    V17 cse1         u:1 $18a
                                                  /--*  t232   ref    
N008 (  9, 16) [000106] DA--G-------              *  STORE_LCL_VAR ref    V10 tmp8         d:2

lowering store lcl var/field (after):
N005 (  1,  1) [000232] ------------       t232 =    LCL_VAR   ref    V17 cse1         u:1 $18a
                                                  /--*  t232   ref    
N008 (  9, 16) [000106] DA--G-------              *  STORE_LCL_VAR ref    V10 tmp8         d:2

lowering store lcl var/field (before):
N001 (  1,  1) [000234] ------------       t234 =    LCL_VAR   ref    V17 cse1         u:1 $18a
                                                  /--*  t234   ref    
N003 (  5,  4) [000108] DA--G-------              *  STORE_LCL_VAR ref    V11 tmp9         d:2

lowering store lcl var/field (after):
N001 (  1,  1) [000234] ------------       t234 =    LCL_VAR   ref    V17 cse1         u:1 $18a
                                                  /--*  t234   ref    
N003 (  5,  4) [000108] DA--G-------              *  STORE_LCL_VAR ref    V11 tmp9         d:2

lowering call (before):
N003 (  3,  2) [000102] ------------       t102 =    LCL_VAR   ref    V11 tmp9         u:2 (last use) $18a
N004 (  3,  2) [000103] ------------       t103 =    LCL_VAR   ref    V11 tmp9         u:2 (last use) $18a
                                                  /--*  t102   ref    arg0 in rcx
                                                  +--*  t103   ref    arg1 in rdx
N005 ( 20, 11) [000104] --CXG-------              *  CALL      void   System.Diagnostics.Debug.Fail $VN.Void

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000185] ----------L-              *  ARGPLACE  ref    $18a
lowering arg : N002 (  0,  0) [000186] ----------L-              *  ARGPLACE  ref    $18a

late:
======
lowering arg : N003 (  3,  2) [000102] ------------              *  LCL_VAR   ref    V11 tmp9         u:2 (last use) $18a
new node is :                [000269] ------------              *  PUTARG_REG ref    REG rcx

lowering arg : N004 (  3,  2) [000103] ------------              *  LCL_VAR   ref    V11 tmp9         u:2 (last use) $18a
new node is :                [000270] ------------              *  PUTARG_REG ref    REG rdx

lowering call (after):
N003 (  3,  2) [000102] ------------       t102 =    LCL_VAR   ref    V11 tmp9         u:2 (last use) $18a
                                                  /--*  t102   ref    
               [000269] ------------       t269 = *  PUTARG_REG ref    REG rcx
N004 (  3,  2) [000103] ------------       t103 =    LCL_VAR   ref    V11 tmp9         u:2 (last use) $18a
                                                  /--*  t103   ref    
               [000270] ------------       t270 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t269   ref    arg0 in rcx
                                                  +--*  t270   ref    arg1 in rdx
N005 ( 20, 11) [000104] --CXG-------              *  CALL      void   System.Diagnostics.Debug.Fail $VN.Void

lowering call (before):
N002 ( 14,  5) [000110] --CXG-------       t110 =    CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices $156

objp:
======

args:
======

late:
======
lowering call (after):
N002 ( 14,  5) [000110] --CXG-------       t110 =    CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices $156

lowering store lcl var/field (before):
N002 ( 14,  5) [000110] --CXG-------       t110 =    CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices $156
                                                  /--*  t110   ref    
N004 ( 14,  5) [000188] DA-XG-----L-              *  STORE_LCL_VAR ref    V15 tmp13        d:2

lowering store lcl var/field (after):
N002 ( 14,  5) [000110] --CXG-------       t110 =    CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices $156
                                                  /--*  t110   ref    
N004 ( 14,  5) [000188] DA-XG-----L-              *  STORE_LCL_VAR ref    V15 tmp13        d:2

lowering call (before):
N002 ( 14,  5) [000110] --CXG-------       t110 =    CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices $156
                                                  /--*  t110   ref    
N004 ( 14,  5) [000188] DA-XG-----L-              *  STORE_LCL_VAR ref    V15 tmp13        d:2
N005 (  1,  1) [000189] ------------       t189 =    LCL_VAR   ref    V15 tmp13        u:2 (last use) $156
N006 (  1,  1) [000021] ------------        t21 =    LCL_VAR   ref    V04 tmp2         u:2 (last use) $183
                                                  /--*  t189   ref    arg1 in rdx
                                                  +--*  t21    ref    arg0 in rcx
N007 ( 33, 14) [000112] --CXG-------       t112 = *  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create $159

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000190] ----------L-              *  ARGPLACE  ref    $183
lowering arg : N004 ( 14,  5) [000188] DA-XG-----L-              *  STORE_LCL_VAR ref    V15 tmp13        d:2

late:
======
lowering arg : N005 (  1,  1) [000189] ------------              *  LCL_VAR   ref    V15 tmp13        u:2 (last use) $156
new node is :                [000271] ------------              *  PUTARG_REG ref    REG rdx

lowering arg : N006 (  1,  1) [000021] ------------              *  LCL_VAR   ref    V04 tmp2         u:2 (last use) $183
new node is :                [000272] ------------              *  PUTARG_REG ref    REG rcx

lowering call (after):
N002 ( 14,  5) [000110] --CXG-------       t110 =    CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices $156
                                                  /--*  t110   ref    
N004 ( 14,  5) [000188] DA-XG-----L-              *  STORE_LCL_VAR ref    V15 tmp13        d:2
N005 (  1,  1) [000189] ------------       t189 =    LCL_VAR   ref    V15 tmp13        u:2 (last use) $156
                                                  /--*  t189   ref    
               [000271] ------------       t271 = *  PUTARG_REG ref    REG rdx
N006 (  1,  1) [000021] ------------        t21 =    LCL_VAR   ref    V04 tmp2         u:2 (last use) $183
                                                  /--*  t21    ref    
               [000272] ------------       t272 = *  PUTARG_REG ref    REG rcx
                                                  /--*  t271   ref    arg1 in rdx
                                                  +--*  t272   ref    arg0 in rcx
N007 ( 33, 14) [000112] --CXG-------       t112 = *  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create $159

lowering store lcl var/field (before):
N002 ( 14,  5) [000110] --CXG-------       t110 =    CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices $156
                                                  /--*  t110   ref    
N004 ( 14,  5) [000188] DA-XG-----L-              *  STORE_LCL_VAR ref    V15 tmp13        d:2
N005 (  1,  1) [000189] ------------       t189 =    LCL_VAR   ref    V15 tmp13        u:2 (last use) $156
                                                  /--*  t189   ref    
               [000271] ------------       t271 = *  PUTARG_REG ref    REG rdx
N006 (  1,  1) [000021] ------------        t21 =    LCL_VAR   ref    V04 tmp2         u:2 (last use) $183
                                                  /--*  t21    ref    
               [000272] ------------       t272 = *  PUTARG_REG ref    REG rcx
                                                  /--*  t271   ref    arg1 in rdx
                                                  +--*  t272   ref    arg0 in rcx
N007 ( 33, 14) [000112] --CXG-------       t112 = *  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create $159
                                                  /--*  t112   ref    
N009 ( 33, 14) [000034] DA-XG-------              *  STORE_LCL_VAR ref    V05 tmp3         d:2

lowering store lcl var/field (after):
N002 ( 14,  5) [000110] --CXG-------       t110 =    CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices $156
                                                  /--*  t110   ref    
N004 ( 14,  5) [000188] DA-XG-----L-              *  STORE_LCL_VAR ref    V15 tmp13        d:2
N005 (  1,  1) [000189] ------------       t189 =    LCL_VAR   ref    V15 tmp13        u:2 (last use) $156
                                                  /--*  t189   ref    
               [000271] ------------       t271 = *  PUTARG_REG ref    REG rdx
N006 (  1,  1) [000021] ------------        t21 =    LCL_VAR   ref    V04 tmp2         u:2 (last use) $183
                                                  /--*  t21    ref    
               [000272] ------------       t272 = *  PUTARG_REG ref    REG rcx
                                                  /--*  t271   ref    arg1 in rdx
                                                  +--*  t272   ref    arg0 in rcx
N007 ( 33, 14) [000112] --CXG-------       t112 = *  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create $159
                                                  /--*  t112   ref    
N009 ( 33, 14) [000034] DA-XG-------              *  STORE_LCL_VAR ref    V05 tmp3         d:2

Addressing mode:
  Base
    N001 (  1,  1) [000036] ------------              *  LCL_VAR   ref    V05 tmp3         u:2 $159
  + 136
Removing unused node:
  N002 (  1,  4) [000191] -c----------              *  CNS_INT   long   136 field offset Fseq[_loader] $1c2
New addressing mode node:
  N003 (  2,  5) [000192] ------------              *  LEA(b+136) byref 

lowering store lcl var/field (before):
N001 (  1,  1) [000036] ------------        t36 =    LCL_VAR   ref    V05 tmp3         u:2 $159
                                                  /--*  t36    ref    
N003 (  2,  5) [000192] -c----------       t192 = *  LEA(b+136) byref 
                                                  /--*  t192   byref  
N004 (  4,  7) [000118] ---XG-------       t118 = *  IND       ref    <l:$191, c:$190>
                                                  /--*  t118   ref    
N006 (  4,  7) [000225] DA-XG-------              *  STORE_LCL_VAR ref    V16 cse0         d:1

lowering store lcl var/field (after):
N001 (  1,  1) [000036] ------------        t36 =    LCL_VAR   ref    V05 tmp3         u:2 $159
                                                  /--*  t36    ref    
N003 (  2,  5) [000192] -c----------       t192 = *  LEA(b+136) byref 
                                                  /--*  t192   byref  
N004 (  4,  7) [000118] ---XG-------       t118 = *  IND       ref    <l:$191, c:$190>
                                                  /--*  t118   ref    
N006 (  4,  7) [000225] DA-XG-------              *  STORE_LCL_VAR ref    V16 cse0         d:1

lowering store lcl var/field (before):
N007 (  1,  1) [000226] ------------       t226 =    LCL_VAR   ref    V16 cse0         u:1 <l:$191, c:$190>
                                                  /--*  t226   ref    
N010 (  5,  8) [000129] DA-XG-------              *  STORE_LCL_VAR ref    V12 tmp10        d:2

lowering store lcl var/field (after):
N007 (  1,  1) [000226] ------------       t226 =    LCL_VAR   ref    V16 cse0         u:1 <l:$191, c:$190>
                                                  /--*  t226   ref    
N010 (  5,  8) [000129] DA-XG-------              *  STORE_LCL_VAR ref    V12 tmp10        d:2

Addressing mode:
  Base
    N001 (  1,  1) [000124] ------------              *  LCL_VAR   ref    V12 tmp10        u:2 (last use) <l:$18e, c:$15c>
  + 56
Removing unused node:
  N002 (  1,  1) [000193] -c----------              *  CNS_INT   long   56 field offset Fseq[<LoadMetadataForReferencedProjects>k__BackingField] $1c3
New addressing mode node:
  N003 (  2,  2) [000194] ------------              *  LEA(b+56) byref 

Lower of StoreInd didn't mark the node as self contained for reason: 4
N001 (  1,  1) [000124] ------------       t124 =    LCL_VAR   ref    V12 tmp10        u:2 (last use) <l:$18e, c:$15c>
                                                  /--*  t124   ref    
N003 (  2,  2) [000194] ------------       t194 = *  LEA(b+56) byref 
N005 (  1,  1) [000125] ------------       t125 =    CNS_INT   int    1 $46
                                                  /--*  t194   byref  
                                                  +--*  t125   int    
               [000247] -A-XG-------              *  STOREIND  bool  
lowering store lcl var/field (before):
N001 (  1,  1) [000228] ------------       t228 =    LCL_VAR   ref    V16 cse0         u:1 <l:$18e, c:$15c>
                                                  /--*  t228   ref    
N003 (  1,  3) [000143] DA--G-------              *  STORE_LCL_VAR ref    V13 tmp11        d:2

lowering store lcl var/field (after):
N001 (  1,  1) [000228] ------------       t228 =    LCL_VAR   ref    V16 cse0         u:1 <l:$18e, c:$15c>
                                                  /--*  t228   ref    
N003 (  1,  3) [000143] DA--G-------              *  STORE_LCL_VAR ref    V13 tmp11        d:2

Addressing mode:
  Base
    N001 (  1,  1) [000138] ------------              *  LCL_VAR   ref    V13 tmp11        u:2 (last use) <l:$18e, c:$15e>
  + 57
Removing unused node:
  N002 (  1,  1) [000197] -c----------              *  CNS_INT   long   57 field offset Fseq[<SkipUnrecognizedProjects>k__BackingField] $1c4
New addressing mode node:
  N003 (  2,  2) [000198] ------------              *  LEA(b+57) byref 

Lower of StoreInd didn't mark the node as self contained for reason: 4
N001 (  1,  1) [000138] ------------       t138 =    LCL_VAR   ref    V13 tmp11        u:2 (last use) <l:$18e, c:$15e>
                                                  /--*  t138   ref    
N003 (  2,  2) [000198] ------------       t198 = *  LEA(b+57) byref 
N005 (  1,  1) [000139] ------------       t139 =    CNS_INT   int    1 $46
                                                  /--*  t198   byref  
                                                  +--*  t139   int    
               [000250] -A-XG-------              *  STOREIND  bool  
lowering call (before):
N004 (  1,  1) [000229] ------------       t229 =    LCL_VAR   ref    V16 cse0         u:1 <l:$18e, c:$15c>
N005 (  2, 10) [000201] H-----------       t201 =    CNS_INT(h) long   0xD1FFAB1E "ilproj" $10b
                                                  /--*  t201   long   
N006 (  4, 12) [000202] #---G-------       t202 = *  IND       ref    $194
N007 (  2, 10) [000203] H-----------       t203 =    CNS_INT(h) long   0xD1FFAB1E "IL" $10c
                                                  /--*  t203   long   
N008 (  4, 12) [000204] #---G-------       t204 = *  IND       ref    $195
                                                  /--*  t229   ref    this in rcx
                                                  +--*  t202   ref    arg1 in rdx
                                                  +--*  t204   ref    arg2 in r8
N009 ( 23, 34) [000148] --CXG-------              *  CALL      void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage $VN.Void

objp:
======
lowering arg : N001 (  0,  0) [000205] ----------L-              *  ARGPLACE  ref    $160

args:
======
lowering arg : N002 (  0,  0) [000206] ----------L-              *  ARGPLACE  ref    <l:$191, c:$193>
lowering arg : N003 (  0,  0) [000207] ----------L-              *  ARGPLACE  ref    $194

late:
======
lowering arg : N004 (  1,  1) [000229] ------------              *  LCL_VAR   ref    V16 cse0         u:1 <l:$18e, c:$15c>
new node is :                [000273] ------------              *  PUTARG_REG ref    REG rcx

lowering arg : N006 (  4, 12) [000202] #---G-------              *  IND       ref    $194
new node is :                [000274] ----G-------              *  PUTARG_REG ref    REG rdx

lowering arg : N008 (  4, 12) [000204] #---G-------              *  IND       ref    $195
new node is :                [000275] ----G-------              *  PUTARG_REG ref    REG r8

lowering call (after):
N004 (  1,  1) [000229] ------------       t229 =    LCL_VAR   ref    V16 cse0         u:1 <l:$18e, c:$15c>
                                                  /--*  t229   ref    
               [000273] ------------       t273 = *  PUTARG_REG ref    REG rcx
N005 (  2, 10) [000201] H-----------       t201 =    CNS_INT(h) long   0xD1FFAB1E "ilproj" $10b
                                                  /--*  t201   long   
N006 (  4, 12) [000202] #---G-------       t202 = *  IND       ref    $194
                                                  /--*  t202   ref    
               [000274] ----G-------       t274 = *  PUTARG_REG ref    REG rdx
N007 (  2, 10) [000203] H-----------       t203 =    CNS_INT(h) long   0xD1FFAB1E "IL" $10c
                                                  /--*  t203   long   
N008 (  4, 12) [000204] #---G-------       t204 = *  IND       ref    $195
                                                  /--*  t204   ref    
               [000275] ----G-------       t275 = *  PUTARG_REG ref    REG r8
                                                  /--*  t273   ref    this in rcx
                                                  +--*  t274   ref    arg1 in rdx
                                                  +--*  t275   ref    arg2 in r8
N009 ( 23, 34) [000148] --CXG-------              *  CALL      void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage $VN.Void

Addressing mode:
  Base
    N004 (  1,  1) [000048] ------------              *  LCL_VAR   ref    V05 tmp3         u:2 $159
  + 136
Removing unused node:
  N005 (  1,  4) [000208] -c----------              *  CNS_INT   long   136 field offset Fseq[_loader] $1c2
New addressing mode node:
  N006 (  2,  5) [000209] ------------              *  LEA(b+136) byref 

lowering call (before):
N004 (  1,  1) [000048] ------------        t48 =    LCL_VAR   ref    V05 tmp3         u:2 $159
                                                  /--*  t48    ref    
N006 (  2,  5) [000209] -c----------       t209 = *  LEA(b+136) byref 
                                                  /--*  t209   byref  
N007 (  4,  7) [000150] n---GO------       t150 = *  IND       ref    <l:$199, c:$198>
N008 (  2, 10) [000210] H-----------       t210 =    CNS_INT(h) long   0xD1FFAB1E "vcxproj" $10d
                                                  /--*  t210   long   
N009 (  4, 12) [000211] #---G-------       t211 = *  IND       ref    $19a
N010 (  2, 10) [000212] H-----------       t212 =    CNS_INT(h) long   0xD1FFAB1E "C++" $10e
                                                  /--*  t212   long   
N011 (  4, 12) [000213] #---G-------       t213 = *  IND       ref    $19b
                                                  /--*  t150   ref    this in rcx
                                                  +--*  t211   ref    arg1 in rdx
                                                  +--*  t213   ref    arg2 in r8
N012 ( 26, 40) [000153] --CXGO------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage $VN.Void

objp:
======
lowering arg : N001 (  0,  0) [000214] ----------L-              *  ARGPLACE  ref    $165

args:
======
lowering arg : N002 (  0,  0) [000215] ----------L-              *  ARGPLACE  ref    <l:$199, c:$198>
lowering arg : N003 (  0,  0) [000216] ----------L-              *  ARGPLACE  ref    $19a

late:
======
lowering arg : N007 (  4,  7) [000150] n---GO------              *  IND       ref    <l:$199, c:$198>
new node is :                [000276] ----GO------              *  PUTARG_REG ref    REG rcx

lowering arg : N009 (  4, 12) [000211] #---G-------              *  IND       ref    $19a
new node is :                [000277] ----G-------              *  PUTARG_REG ref    REG rdx

lowering arg : N011 (  4, 12) [000213] #---G-------              *  IND       ref    $19b
new node is :                [000278] ----G-------              *  PUTARG_REG ref    REG r8

lowering call (after):
N004 (  1,  1) [000048] ------------        t48 =    LCL_VAR   ref    V05 tmp3         u:2 $159
                                                  /--*  t48    ref    
N006 (  2,  5) [000209] -c----------       t209 = *  LEA(b+136) byref 
                                                  /--*  t209   byref  
N007 (  4,  7) [000150] n---GO------       t150 = *  IND       ref    <l:$199, c:$198>
                                                  /--*  t150   ref    
               [000276] ----GO------       t276 = *  PUTARG_REG ref    REG rcx
N008 (  2, 10) [000210] H-----------       t210 =    CNS_INT(h) long   0xD1FFAB1E "vcxproj" $10d
                                                  /--*  t210   long   
N009 (  4, 12) [000211] #---G-------       t211 = *  IND       ref    $19a
                                                  /--*  t211   ref    
               [000277] ----G-------       t277 = *  PUTARG_REG ref    REG rdx
N010 (  2, 10) [000212] H-----------       t212 =    CNS_INT(h) long   0xD1FFAB1E "C++" $10e
                                                  /--*  t212   long   
N011 (  4, 12) [000213] #---G-------       t213 = *  IND       ref    $19b
                                                  /--*  t213   ref    
               [000278] ----G-------       t278 = *  PUTARG_REG ref    REG r8
                                                  /--*  t276   ref    this in rcx
                                                  +--*  t277   ref    arg1 in rdx
                                                  +--*  t278   ref    arg2 in r8
N012 ( 26, 40) [000153] --CXGO------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage $VN.Void

lowering call (before):
N002 (  2, 10) [000055] H-----------        t55 =    CNS_INT(h) long   0xd1ffab1e token $10f
                                                  /--*  t55    long   arg0 in rcx
N003 ( 16, 16) [000056] --C---------        t56 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $19c

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000217] ----------L-              *  ARGPLACE  long   $10f

late:
======
lowering arg : N002 (  2, 10) [000055] H-----------              *  CNS_INT(h) long   0xd1ffab1e token $10f
new node is :                [000279] ------------              *  PUTARG_REG long   REG rcx

lowering call (after):
N002 (  2, 10) [000055] H-----------        t55 =    CNS_INT(h) long   0xd1ffab1e token $10f
                                                  /--*  t55    long   
               [000279] ------------       t279 = *  PUTARG_REG long   REG rcx
                                                  /--*  t279   long   arg0 in rcx
N003 ( 16, 16) [000056] --C---------        t56 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $19c

lowering store lcl var/field (before):
N002 (  2, 10) [000055] H-----------        t55 =    CNS_INT(h) long   0xd1ffab1e token $10f
                                                  /--*  t55    long   
               [000279] ------------       t279 = *  PUTARG_REG long   REG rcx
                                                  /--*  t279   long   arg0 in rcx
N003 ( 16, 16) [000056] --C---------        t56 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $19c
                                                  /--*  t56    ref    
N005 ( 16, 16) [000058] DA----------              *  STORE_LCL_VAR ref    V06 tmp4         d:2

lowering store lcl var/field (after):
N002 (  2, 10) [000055] H-----------        t55 =    CNS_INT(h) long   0xd1ffab1e token $10f
                                                  /--*  t55    long   
               [000279] ------------       t279 = *  PUTARG_REG long   REG rcx
                                                  /--*  t279   long   arg0 in rcx
N003 ( 16, 16) [000056] --C---------        t56 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $19c
                                                  /--*  t56    ref    
N005 ( 16, 16) [000058] DA----------              *  STORE_LCL_VAR ref    V06 tmp4         d:2

Addressing mode:
  Base
    N001 (  1,  1) [000059] ------------              *  LCL_VAR   ref    V06 tmp4         u:2 $19c
  + 8
Removing unused node:
  N002 (  1,  1) [000218] -c----------              *  CNS_INT   long   8 field offset Fseq[_target] $1c0
New addressing mode node:
  N003 (  2,  2) [000219] ------------              *  LEA(b+8)  byref 

Addressing mode:
  Base
    N001 (  1,  1) [000161] ------------              *  LCL_VAR   ref    V06 tmp4         u:2 $19c
  + 24
Removing unused node:
  N002 (  1,  1) [000220] -c----------              *  CNS_INT   long   24 field offset Fseq[_methodPtr] $1c5
New addressing mode node:
  N003 (  2,  2) [000221] ------------              *  LEA(b+24) byref 

Lower of StoreInd didn't mark the node as self contained for reason: 4
N001 (  1,  1) [000161] ------------       t161 =    LCL_VAR   ref    V06 tmp4         u:2 $19c
                                                  /--*  t161   ref    
N003 (  2,  2) [000221] ------------       t221 = *  LEA(b+24) byref 
N005 (  2, 10) [000054] H-----------        t54 =    CNS_INT(h) long   0xd1ffab1e ftn $111
                                                  /--*  t221   byref  
                                                  +--*  t54    long   
               [000255] -A--GO------              *  STOREIND  long  
lowering call (before):
N003 (  1,  1) [000052] ------------        t52 =    LCL_VAR   ref    V05 tmp3         u:2 $159
N004 (  1,  1) [000061] ------------        t61 =    LCL_VAR   ref    V06 tmp4         u:2 (last use) $19c
                                                  /--*  t52    ref    this in rcx
                                                  +--*  t61    ref    arg1 in rdx
N005 ( 16, 10) [000062] --CXG-------              *  CALL      void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed $VN.Void

objp:
======
lowering arg : N001 (  0,  0) [000222] ----------L-              *  ARGPLACE  ref    $16d

args:
======
lowering arg : N002 (  0,  0) [000223] ----------L-              *  ARGPLACE  ref    $159

late:
======
lowering arg : N003 (  1,  1) [000052] ------------              *  LCL_VAR   ref    V05 tmp3         u:2 $159
new node is :                [000280] ------------              *  PUTARG_REG ref    REG rcx

lowering arg : N004 (  1,  1) [000061] ------------              *  LCL_VAR   ref    V06 tmp4         u:2 (last use) $19c
new node is :                [000281] ------------              *  PUTARG_REG ref    REG rdx

lowering call (after):
N003 (  1,  1) [000052] ------------        t52 =    LCL_VAR   ref    V05 tmp3         u:2 $159
                                                  /--*  t52    ref    
               [000280] ------------       t280 = *  PUTARG_REG ref    REG rcx
N004 (  1,  1) [000061] ------------        t61 =    LCL_VAR   ref    V06 tmp4         u:2 (last use) $19c
                                                  /--*  t61    ref    
               [000281] ------------       t281 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t280   ref    this in rcx
                                                  +--*  t281   ref    arg1 in rdx
N005 ( 16, 10) [000062] --CXG-------              *  CALL      void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed $VN.Void

lowering GT_RETURN
N002 (  2,  2) [000063] ------------              *  RETURN    ref    $170
============Lower has completed modifying nodes.

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)-> BB03 ( cond )                     i label target hascall gcsafe newobj nullcheck LIR 
BB02 [0008]  1       BB01                  0.25    [017..018)                                     i hascall gcsafe LIR 
BB03 [0009]  2       BB01,BB02             1       [000..018)        (return)                     i label target hascall gcsafe newobj nullcheck LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06D) -> BB03 (cond), preds={} succs={BB02,BB03}
               [000237] ------------                 IL_OFFSET void   IL offset: 0x0
N002 (  2, 10) [000000] H-----------         t0 =    CNS_INT(h) long   0xd1ffab1e method $100
                                                  /--*  t0     long   
               [000258] ------------       t258 = *  PUTARG_REG long   REG rcx
                                                  /--*  t258   long   arg0 in rcx
N003 ( 16, 16) [000001] --C---------         t1 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $180
                                                  /--*  t1     ref    
N005 ( 16, 16) [000003] DA----------              *  STORE_LCL_VAR ref    V03 tmp1         d:2
               [000238] ------------                 IL_OFFSET void   IL offset: 0x5
N001 (  1,  1) [000006] ------------         t6 =    LCL_VAR   ref    V03 tmp1         u:2 $180
                                                  /--*  t6     ref    
N003 (  1,  3) [000008] DA----------              *  STORE_LCL_VAR ref    V01 loc0         d:2
               [000239] ------------                 IL_OFFSET void   IL offset: 0x6
N001 (  1,  1) [000009] ------------         t9 =    LCL_VAR   ref    V01 loc0         u:2 (last use) $180
                                                  /--*  t9     ref    
N003 (  2,  2) [000170] ------------       t170 = *  LEA(b+8)  byref 
N005 (  1,  1) [000010] ------------        t10 =    LCL_VAR   ref    V00 arg0         u:1 (last use) $80
                                                  /--*  t170   byref  
                                                  +--*  t10    ref    
               [000240] -A--GO------              *  STOREIND  ref   
N002 (  2, 10) [000015] H-----------        t15 =    CNS_INT(h) long   0xd1ffab1e token $102
                                                  /--*  t15    long   
               [000259] ------------       t259 = *  PUTARG_REG long   REG rcx
                                                  /--*  t259   long   arg0 in rcx
N003 ( 16, 16) [000016] --C---------        t16 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $183
                                                  /--*  t16    ref    
N005 ( 16, 16) [000018] DA----------              *  STORE_LCL_VAR ref    V04 tmp2         d:2
N001 (  2, 10) [000172] I-----------       t172 =    CNS_INT(h) long   0xd1ffab1e static Fseq[Instance] $103
                                                  /--*  t172   long   
N002 (  4, 12) [000067] n---G-------        t67 = *  IND       ref    <l:$242, c:$145>
                                                  /--*  t67    ref    
N004 (  4, 12) [000073] DA--G-------              *  STORE_LCL_VAR ref    V07 tmp5         d:2
N004 (  1,  1) [000019] ------------        t19 =    LCL_VAR   ref    V04 tmp2         u:2 $183
                                                  /--*  t19    ref    
               [000260] ------------       t260 = *  PUTARG_REG ref    REG rcx
N005 (  1,  1) [000070] ------------        t70 =    LCL_VAR   ref    V07 tmp5         u:2 (last use) <l:$242, c:$145>
                                                  /--*  t70    ref    
               [000261] ------------       t261 = *  PUTARG_REG ref    REG r8
N006 (  1,  1) [000069] ------------        t69 =    CNS_INT   int    0 $40
                                                  /--*  t69    int    
               [000262] ------------       t262 = *  PUTARG_REG int    REG rdx
                                                  /--*  t260   ref    this in rcx
                                                  +--*  t261   ref    arg2 in r8
                                                  +--*  t262   int    arg1 in rdx
N007 ( 17, 12) [000071] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor $VN.Void
               [000241] ------------                 IL_OFFSET void   IL offset: 0x17
N003 (  2, 10) [000026] ------------        t26 =    CNS_INT   long   0x7ffc86100028 $1c1
                                                  /--*  t26    long   
               [000263] ------------       t263 = *  PUTARG_REG long   REG rcx
N004 (  1,  4) [000027] ------------        t27 =    CNS_INT   int    215 $43
                                                  /--*  t27    int    
               [000264] ------------       t264 = *  PUTARG_REG int    REG rdx
                                                  /--*  t263   long   arg0 in rcx
                                                  +--*  t264   int    arg1 in rdx
N005 ( 17, 21) [000028] H-CXG-------        t28 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $301
N006 (  2, 10) [000178] I-----------       t178 =    CNS_INT(h) long   0xd1ffab1e static Fseq[FalseString] $104
                                                  /--*  t178   long   
N007 (  4, 12) [000024] n---G-------        t24 = *  IND       ref    <l:$243, c:$14a>
                                                  /--*  t24    ref    
N010 ( 21, 33) [000088] DA-XG-------              *  STORE_LCL_VAR ref    V08 tmp6         d:2
               [000242] ------------                 IL_OFFSET void   IL offset: 0x17
N005 (  2, 10) [000179] H-----------       t179 =    CNS_INT(h) long   0xD1FFAB1E "AlwaysCompileMarkupFilesInSeparateDomain" $105
                                                  /--*  t179   long   
N006 (  4, 12) [000180] #---G-------       t180 = *  IND       ref    $189
                                                  /--*  t180   ref    
               [000265] ----G-------       t265 = *  PUTARG_REG ref    REG rdx
N007 (  1,  1) [000022] ------------        t22 =    LCL_VAR   ref    V04 tmp2         u:2 $183
                                                  /--*  t22    ref    
               [000266] ------------       t266 = *  PUTARG_REG ref    REG rcx
N008 (  1,  1) [000076] ------------        t76 =    LCL_VAR   ref    V08 tmp6         u:2 (last use) <l:$243, c:$14a>
                                                  /--*  t76    ref    
               [000267] ------------       t267 = *  PUTARG_REG ref    REG r8
N009 (  1,  1) [000077] ------------        t77 =    CNS_INT   int    2 $44
                                                  /--*  t77    int    
               [000268] ------------       t268 = *  PUTARG_REG int    REG r9
                                                  /--*  t265   ref    arg1 in rdx
                                                  +--*  t266   ref    this in rcx
                                                  +--*  t267   ref    arg2 in r8
                                                  +--*  t268   int    arg3 in r9
N010 ( 21, 25) [000078] --CXG-------        t78 = *  CALL      int    System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].TryInsert $283
                                                  /--*  t78    int    
N012 ( 25, 28) [000081] DA-XG-------              *  STORE_LCL_VAR int    V09 tmp7         d:2
               [000243] ------------                 IL_OFFSET void   IL offset: 0x17
N001 (  2, 10) [000091] H-----------        t91 =    CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL] $106
                                                  /--*  t91    long   
N002 (  4, 12) [000092] #---G-------        t92 = *  IND       ref    $18a
                                                  /--*  t92    ref    
N004 (  4, 12) [000231] DA--G-------              *  STORE_LCL_VAR ref    V17 cse1         d:1
N005 (  1,  1) [000232] ------------       t232 =    LCL_VAR   ref    V17 cse1         u:1 $18a
                                                  /--*  t232   ref    
N008 (  9, 16) [000106] DA--G-------              *  STORE_LCL_VAR ref    V10 tmp8         d:2
               [000244] ------------                 IL_OFFSET void   IL offset: 0x17
N001 (  1,  1) [000234] ------------       t234 =    LCL_VAR   ref    V17 cse1         u:1 $18a
                                                  /--*  t234   ref    
N003 (  5,  4) [000108] DA--G-------              *  STORE_LCL_VAR ref    V11 tmp9         d:2
               [000245] ------------                 IL_OFFSET void   IL offset: 0x17
N001 (  3,  2) [000098] ------------        t98 =    LCL_VAR   int    V09 tmp7         u:2 (last use) $283
N002 (  1,  1) [000099] -c----------        t99 =    CNS_INT   int    0 $40
                                                  /--*  t98    int    
                                                  +--*  t99    int    
N003 (  5,  4) [000100] J------N----              *  NE        void   $340
N004 (  7,  6) [000101] ------------              *  JTRUE     void  

------------ BB02 [017..018), preds={BB01} succs={BB03}
               [000246] ------------                 IL_OFFSET void   IL offset: 0x17
N003 (  3,  2) [000102] ------------       t102 =    LCL_VAR   ref    V11 tmp9         u:2 (last use) $18a
                                                  /--*  t102   ref    
               [000269] ------------       t269 = *  PUTARG_REG ref    REG rcx
N004 (  3,  2) [000103] ------------       t103 =    LCL_VAR   ref    V11 tmp9         u:2 (last use) $18a
                                                  /--*  t103   ref    
               [000270] ------------       t270 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t269   ref    arg0 in rcx
                                                  +--*  t270   ref    arg1 in rdx
N005 ( 20, 11) [000104] --CXG-------              *  CALL      void   System.Diagnostics.Debug.Fail $VN.Void

------------ BB03 [000..018) (return), preds={BB01,BB02} succs={}
N002 ( 14,  5) [000110] --CXG-------       t110 =    CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices $156
                                                  /--*  t110   ref    
N004 ( 14,  5) [000188] DA-XG-----L-              *  STORE_LCL_VAR ref    V15 tmp13        d:2
N005 (  1,  1) [000189] ------------       t189 =    LCL_VAR   ref    V15 tmp13        u:2 (last use) $156
                                                  /--*  t189   ref    
               [000271] ------------       t271 = *  PUTARG_REG ref    REG rdx
N006 (  1,  1) [000021] ------------        t21 =    LCL_VAR   ref    V04 tmp2         u:2 (last use) $183
                                                  /--*  t21    ref    
               [000272] ------------       t272 = *  PUTARG_REG ref    REG rcx
                                                  /--*  t271   ref    arg1 in rdx
                                                  +--*  t272   ref    arg0 in rcx
N007 ( 33, 14) [000112] --CXG-------       t112 = *  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create $159
                                                  /--*  t112   ref    
N009 ( 33, 14) [000034] DA-XG-------              *  STORE_LCL_VAR ref    V05 tmp3         d:2
N001 (  1,  1) [000036] ------------        t36 =    LCL_VAR   ref    V05 tmp3         u:2 $159
                                                  /--*  t36    ref    
N003 (  2,  5) [000192] -c----------       t192 = *  LEA(b+136) byref 
                                                  /--*  t192   byref  
N004 (  4,  7) [000118] ---XG-------       t118 = *  IND       ref    <l:$191, c:$190>
                                                  /--*  t118   ref    
N006 (  4,  7) [000225] DA-XG-------              *  STORE_LCL_VAR ref    V16 cse0         d:1
N007 (  1,  1) [000226] ------------       t226 =    LCL_VAR   ref    V16 cse0         u:1 <l:$191, c:$190>
                                                  /--*  t226   ref    
N010 (  5,  8) [000129] DA-XG-------              *  STORE_LCL_VAR ref    V12 tmp10        d:2
N001 (  1,  1) [000124] ------------       t124 =    LCL_VAR   ref    V12 tmp10        u:2 (last use) <l:$18e, c:$15c>
                                                  /--*  t124   ref    
N003 (  2,  2) [000194] -c----------       t194 = *  LEA(b+56) byref 
N005 (  1,  1) [000125] -c----------       t125 =    CNS_INT   int    1 $46
                                                  /--*  t194   byref  
                                                  +--*  t125   int    
               [000247] -A-XG-------              *  STOREIND  bool  
               [000248] ------------                 IL_OFFSET void   IL offset: 0x33
N001 (  1,  1) [000228] ------------       t228 =    LCL_VAR   ref    V16 cse0         u:1 <l:$18e, c:$15c>
                                                  /--*  t228   ref    
N003 (  1,  3) [000143] DA--G-------              *  STORE_LCL_VAR ref    V13 tmp11        d:2
               [000249] ------------                 IL_OFFSET void   IL offset: 0x33
N001 (  1,  1) [000138] ------------       t138 =    LCL_VAR   ref    V13 tmp11        u:2 (last use) <l:$18e, c:$15e>
                                                  /--*  t138   ref    
N003 (  2,  2) [000198] -c----------       t198 = *  LEA(b+57) byref 
N005 (  1,  1) [000139] -c----------       t139 =    CNS_INT   int    1 $46
                                                  /--*  t198   byref  
                                                  +--*  t139   int    
               [000250] -A-XG-------              *  STOREIND  bool  
               [000251] ------------                 IL_OFFSET void   IL offset: 0x3a
N004 (  1,  1) [000229] ------------       t229 =    LCL_VAR   ref    V16 cse0         u:1 <l:$18e, c:$15c>
                                                  /--*  t229   ref    
               [000273] ------------       t273 = *  PUTARG_REG ref    REG rcx
N005 (  2, 10) [000201] H-----------       t201 =    CNS_INT(h) long   0xD1FFAB1E "ilproj" $10b
                                                  /--*  t201   long   
N006 (  4, 12) [000202] #---G-------       t202 = *  IND       ref    $194
                                                  /--*  t202   ref    
               [000274] ----G-------       t274 = *  PUTARG_REG ref    REG rdx
N007 (  2, 10) [000203] H-----------       t203 =    CNS_INT(h) long   0xD1FFAB1E "IL" $10c
                                                  /--*  t203   long   
N008 (  4, 12) [000204] #---G-------       t204 = *  IND       ref    $195
                                                  /--*  t204   ref    
               [000275] ----G-------       t275 = *  PUTARG_REG ref    REG r8
                                                  /--*  t273   ref    this in rcx
                                                  +--*  t274   ref    arg1 in rdx
                                                  +--*  t275   ref    arg2 in r8
N009 ( 23, 34) [000148] --CXG-------              *  CALL      void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage $VN.Void
               [000252] ------------                 IL_OFFSET void   IL offset: 0x4a
N004 (  1,  1) [000048] ------------        t48 =    LCL_VAR   ref    V05 tmp3         u:2 $159
                                                  /--*  t48    ref    
N006 (  2,  5) [000209] -c----------       t209 = *  LEA(b+136) byref 
                                                  /--*  t209   byref  
N007 (  4,  7) [000150] n---GO------       t150 = *  IND       ref    <l:$199, c:$198>
                                                  /--*  t150   ref    
               [000276] ----GO------       t276 = *  PUTARG_REG ref    REG rcx
N008 (  2, 10) [000210] H-----------       t210 =    CNS_INT(h) long   0xD1FFAB1E "vcxproj" $10d
                                                  /--*  t210   long   
N009 (  4, 12) [000211] #---G-------       t211 = *  IND       ref    $19a
                                                  /--*  t211   ref    
               [000277] ----G-------       t277 = *  PUTARG_REG ref    REG rdx
N010 (  2, 10) [000212] H-----------       t212 =    CNS_INT(h) long   0xD1FFAB1E "C++" $10e
                                                  /--*  t212   long   
N011 (  4, 12) [000213] #---G-------       t213 = *  IND       ref    $19b
                                                  /--*  t213   ref    
               [000278] ----G-------       t278 = *  PUTARG_REG ref    REG r8
                                                  /--*  t276   ref    this in rcx
                                                  +--*  t277   ref    arg1 in rdx
                                                  +--*  t278   ref    arg2 in r8
N012 ( 26, 40) [000153] --CXGO------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage $VN.Void
               [000253] ------------                 IL_OFFSET void   IL offset: 0x5a
N002 (  2, 10) [000055] H-----------        t55 =    CNS_INT(h) long   0xd1ffab1e token $10f
                                                  /--*  t55    long   
               [000279] ------------       t279 = *  PUTARG_REG long   REG rcx
                                                  /--*  t279   long   arg0 in rcx
N003 ( 16, 16) [000056] --C---------        t56 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $19c
                                                  /--*  t56    ref    
N005 ( 16, 16) [000058] DA----------              *  STORE_LCL_VAR ref    V06 tmp4         d:2
N001 (  1,  1) [000059] ------------        t59 =    LCL_VAR   ref    V06 tmp4         u:2 $19c
                                                  /--*  t59    ref    
N003 (  2,  2) [000219] ------------       t219 = *  LEA(b+8)  byref 
N005 (  1,  1) [000158] ------------       t158 =    LCL_VAR   ref    V01 loc0         u:2 (last use) $180
                                                  /--*  t219   byref  
                                                  +--*  t158   ref    
               [000254] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000161] ------------       t161 =    LCL_VAR   ref    V06 tmp4         u:2 $19c
                                                  /--*  t161   ref    
N003 (  2,  2) [000221] -c----------       t221 = *  LEA(b+24) byref 
N005 (  2, 10) [000054] H-----------        t54 =    CNS_INT(h) long   0xd1ffab1e ftn $111
                                                  /--*  t221   byref  
                                                  +--*  t54    long   
               [000255] -A--GO------              *  STOREIND  long  
               [000256] ------------                 IL_OFFSET void   IL offset: 0x67
N003 (  1,  1) [000052] ------------        t52 =    LCL_VAR   ref    V05 tmp3         u:2 $159
                                                  /--*  t52    ref    
               [000280] ------------       t280 = *  PUTARG_REG ref    REG rcx
N004 (  1,  1) [000061] ------------        t61 =    LCL_VAR   ref    V06 tmp4         u:2 (last use) $19c
                                                  /--*  t61    ref    
               [000281] ------------       t281 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t280   ref    this in rcx
                                                  +--*  t281   ref    arg1 in rdx
N005 ( 16, 10) [000062] --CXG-------              *  CALL      void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed $VN.Void
               [000257] ------------                 IL_OFFSET void   IL offset: 0x6c
N001 (  1,  1) [000035] ------------        t35 =    LCL_VAR   ref    V05 tmp3         u:2 (last use) $159
                                                  /--*  t35    ref    
N002 (  2,  2) [000063] ------------              *  RETURN    ref    $170

-------------------------------------------------------------------------------------------------------------------

*** lvaComputeRefCounts ***

*** lvaComputeRefCounts -- explicit counts ***
New refCnts for V03: refCnt =  1, refCntWtd = 2   
New refCnts for V03: refCnt =  2, refCntWtd = 4   
New refCnts for V01: refCnt =  1, refCntWtd = 1   
New refCnts for V01: refCnt =  2, refCntWtd = 2   
New refCnts for V00: refCnt =  1, refCntWtd = 1   
New refCnts for V04: refCnt =  1, refCntWtd = 2   
New refCnts for V07: refCnt =  1, refCntWtd = 2   
New refCnts for V04: refCnt =  2, refCntWtd = 4   
New refCnts for V07: refCnt =  2, refCntWtd = 4   
New refCnts for V08: refCnt =  1, refCntWtd = 2   
New refCnts for V04: refCnt =  3, refCntWtd = 6   
New refCnts for V08: refCnt =  2, refCntWtd = 4   
New refCnts for V09: refCnt =  1, refCntWtd = 1   
New refCnts for V17: refCnt =  1, refCntWtd = 1   
New refCnts for V17: refCnt =  2, refCntWtd = 2   
New refCnts for V10: refCnt =  1, refCntWtd = 2   
New refCnts for V17: refCnt =  3, refCntWtd = 3   
New refCnts for V11: refCnt =  1, refCntWtd = 2   
New refCnts for V09: refCnt =  2, refCntWtd = 2   
New refCnts for V11: refCnt =  2, refCntWtd = 2.50
New refCnts for V11: refCnt =  3, refCntWtd = 3   
New refCnts for V15: refCnt =  1, refCntWtd = 2   
New refCnts for V15: refCnt =  2, refCntWtd = 4   
New refCnts for V04: refCnt =  4, refCntWtd = 8   
New refCnts for V05: refCnt =  1, refCntWtd = 2   
New refCnts for V05: refCnt =  2, refCntWtd = 4   
New refCnts for V16: refCnt =  1, refCntWtd = 1   
New refCnts for V16: refCnt =  2, refCntWtd = 2   
New refCnts for V12: refCnt =  1, refCntWtd = 2   
New refCnts for V12: refCnt =  2, refCntWtd = 4   
New refCnts for V16: refCnt =  3, refCntWtd = 3   
New refCnts for V13: refCnt =  1, refCntWtd = 2   
New refCnts for V13: refCnt =  2, refCntWtd = 4   
New refCnts for V16: refCnt =  4, refCntWtd = 4   
New refCnts for V05: refCnt =  3, refCntWtd = 6   
New refCnts for V06: refCnt =  1, refCntWtd = 2   
New refCnts for V06: refCnt =  2, refCntWtd = 4   
New refCnts for V01: refCnt =  3, refCntWtd = 3   
New refCnts for V06: refCnt =  3, refCntWtd = 6   
New refCnts for V05: refCnt =  4, refCntWtd = 8   
New refCnts for V06: refCnt =  4, refCntWtd = 8   
New refCnts for V05: refCnt =  5, refCntWtd = 10   

*** lvaComputeRefCounts -- implicit counts ***
New refCnts for V00: refCnt =  2, refCntWtd = 2   
New refCnts for V00: refCnt =  3, refCntWtd = 3   
*************** In fgLocalVarLiveness()
; Initial local variable assignments
;
;  V00 arg0              ref  class-hnd
;  V01 loc0              ref  class-hnd exact
;  V02 OutArgs        lclBlk <32>  "OutgoingArgSpace"
;  V03 tmp1              ref  class-hnd exact "NewObj constructor temp"
;  V04 tmp2              ref  class-hnd exact "NewObj constructor temp"
;  V05 tmp3              ref  class-hnd "dup spill"
;  V06 tmp4              ref  class-hnd exact "NewObj constructor temp"
;  V07 tmp5              ref  class-hnd exact "Inlining Arg"
;  V08 tmp6              ref  class-hnd "Inlining Arg"
;  V09 tmp7             bool  "Inline stloc first use temp"
;  V10 tmp8              ref  class-hnd "Inlining Arg"
;  V11 tmp9              ref  class-hnd "Inlining Arg"
;  V12 tmp10             ref  class-hnd "Inlining Arg"
;  V13 tmp11             ref  class-hnd "Inlining Arg"
;  V14 tmp12            long  "Inlining Arg"
;  V15 tmp13             ref  "argument with side effect"
;  V16 cse0              ref  "CSE - aggressive"
;  V17 cse1              ref  "CSE - moderate"
In fgLocalVarLivenessInit
Tracked variable (16 out of 18) table:
V05 tmp3          [   ref]: refCnt =    5, refCntWtd =  10   
V04 tmp2          [   ref]: refCnt =    4, refCntWtd =   8   
V06 tmp4          [   ref]: refCnt =    4, refCntWtd =   8   
V00 arg0          [   ref]: refCnt =    3, refCntWtd =   3   
V16 cse0          [   ref]: refCnt =    4, refCntWtd =   4   
V03 tmp1          [   ref]: refCnt =    2, refCntWtd =   4   
V07 tmp5          [   ref]: refCnt =    2, refCntWtd =   4   
V08 tmp6          [   ref]: refCnt =    2, refCntWtd =   4   
V12 tmp10         [   ref]: refCnt =    2, refCntWtd =   4   
V13 tmp11         [   ref]: refCnt =    2, refCntWtd =   4   
V15 tmp13         [   ref]: refCnt =    2, refCntWtd =   4   
V01 loc0          [   ref]: refCnt =    3, refCntWtd =   3   
V11 tmp9          [   ref]: refCnt =    3, refCntWtd =   3   
V17 cse1          [   ref]: refCnt =    3, refCntWtd =   3   
V09 tmp7          [  bool]: refCnt =    2, refCntWtd =   2   
V10 tmp8          [   ref]: refCnt =    1, refCntWtd =   2   

*************** In fgPerBlockLocalVarLiveness()
BB01 USE(1)={    V00                                } + ByrefExposed + GcHeap
     DEF(9)={V04     V03 V07 V08 V01 V11 V17 V09 V10} + ByrefExposed* + GcHeap*

BB02 USE(1)={V11} + ByrefExposed + GcHeap
     DEF(0)={   } + ByrefExposed* + GcHeap*

BB03 USE(2)={    V04                     V01} + ByrefExposed + GcHeap
     DEF(6)={V05     V06 V16 V12 V13 V15    } + ByrefExposed* + GcHeap*

** Memory liveness computed, GcHeap states and ByrefExposed states match
*************** In fgInterBlockLocalVarLiveness()

BB liveness after fgLiveVarAnalysis():

BB01 IN (1)={    V00        } + ByrefExposed + GcHeap
     OUT(3)={V04     V01 V11} + ByrefExposed + GcHeap

BB02 IN (3)={V04 V01 V11} + ByrefExposed + GcHeap
     OUT(2)={V04 V01    } + ByrefExposed + GcHeap

BB03 IN (2)={V04 V01} + ByrefExposed + GcHeap
     OUT(0)={       }

Removing dead store:
N008 (  9, 16) [000106] DA--G-------              *  STORE_LCL_VAR ref    V10 tmp8         d:2 (last use)
Removing dead LclVar use:
N005 (  1,  1) [000232] ------------              *  LCL_VAR   ref    V17 cse1         u:1 $18a

*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)-> BB03 ( cond )                     i label target hascall gcsafe newobj nullcheck LIR 
BB02 [0008]  1       BB01                  0.25    [017..018)                                     i hascall gcsafe LIR 
BB03 [0009]  2       BB01,BB02             1       [000..018)        (return)                     i label target hascall gcsafe newobj nullcheck LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist

*** lvaComputeRefCounts ***

*** lvaComputeRefCounts -- explicit counts ***
New refCnts for V03: refCnt =  1, refCntWtd = 2   
New refCnts for V03: refCnt =  2, refCntWtd = 4   
New refCnts for V01: refCnt =  1, refCntWtd = 1   
New refCnts for V01: refCnt =  2, refCntWtd = 2   
New refCnts for V00: refCnt =  1, refCntWtd = 1   
New refCnts for V04: refCnt =  1, refCntWtd = 2   
New refCnts for V07: refCnt =  1, refCntWtd = 2   
New refCnts for V04: refCnt =  2, refCntWtd = 4   
New refCnts for V07: refCnt =  2, refCntWtd = 4   
New refCnts for V08: refCnt =  1, refCntWtd = 2   
New refCnts for V04: refCnt =  3, refCntWtd = 6   
New refCnts for V08: refCnt =  2, refCntWtd = 4   
New refCnts for V09: refCnt =  1, refCntWtd = 1   
New refCnts for V17: refCnt =  1, refCntWtd = 1   
New refCnts for V17: refCnt =  2, refCntWtd = 2   
New refCnts for V11: refCnt =  1, refCntWtd = 2   
New refCnts for V09: refCnt =  2, refCntWtd = 2   
New refCnts for V11: refCnt =  2, refCntWtd = 2.50
New refCnts for V11: refCnt =  3, refCntWtd = 3   
New refCnts for V15: refCnt =  1, refCntWtd = 2   
New refCnts for V15: refCnt =  2, refCntWtd = 4   
New refCnts for V04: refCnt =  4, refCntWtd = 8   
New refCnts for V05: refCnt =  1, refCntWtd = 2   
New refCnts for V05: refCnt =  2, refCntWtd = 4   
New refCnts for V16: refCnt =  1, refCntWtd = 1   
New refCnts for V16: refCnt =  2, refCntWtd = 2   
New refCnts for V12: refCnt =  1, refCntWtd = 2   
New refCnts for V12: refCnt =  2, refCntWtd = 4   
New refCnts for V16: refCnt =  3, refCntWtd = 3   
New refCnts for V13: refCnt =  1, refCntWtd = 2   
New refCnts for V13: refCnt =  2, refCntWtd = 4   
New refCnts for V16: refCnt =  4, refCntWtd = 4   
New refCnts for V05: refCnt =  3, refCntWtd = 6   
New refCnts for V06: refCnt =  1, refCntWtd = 2   
New refCnts for V06: refCnt =  2, refCntWtd = 4   
New refCnts for V01: refCnt =  3, refCntWtd = 3   
New refCnts for V06: refCnt =  3, refCntWtd = 6   
New refCnts for V05: refCnt =  4, refCntWtd = 8   
New refCnts for V06: refCnt =  4, refCntWtd = 8   
New refCnts for V05: refCnt =  5, refCntWtd = 10   

*** lvaComputeRefCounts -- implicit counts ***
New refCnts for V00: refCnt =  2, refCntWtd = 2   
New refCnts for V00: refCnt =  3, refCntWtd = 3   

*************** Finishing PHASE Lowering nodeinfo
Trees after Lowering nodeinfo

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)-> BB03 ( cond )                     i label target hascall gcsafe newobj nullcheck LIR 
BB02 [0008]  1       BB01                  0.25    [017..018)                                     i hascall gcsafe LIR 
BB03 [0009]  2       BB01,BB02             1       [000..018)        (return)                     i label target hascall gcsafe newobj nullcheck LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06D) -> BB03 (cond), preds={} succs={BB02,BB03}
               [000237] ------------                 IL_OFFSET void   IL offset: 0x0
N002 (  2, 10) [000000] H-----------         t0 =    CNS_INT(h) long   0xd1ffab1e method $100
                                                  /--*  t0     long   
               [000258] ------------       t258 = *  PUTARG_REG long   REG rcx
                                                  /--*  t258   long   arg0 in rcx
N003 ( 16, 16) [000001] --C---------         t1 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $180
                                                  /--*  t1     ref    
N005 ( 16, 16) [000003] DA----------              *  STORE_LCL_VAR ref    V03 tmp1         d:2
               [000238] ------------                 IL_OFFSET void   IL offset: 0x5
N001 (  1,  1) [000006] ------------         t6 =    LCL_VAR   ref    V03 tmp1         u:2 (last use) $180
                                                  /--*  t6     ref    
N003 (  1,  3) [000008] DA----------              *  STORE_LCL_VAR ref    V01 loc0         d:2
               [000239] ------------                 IL_OFFSET void   IL offset: 0x6
N001 (  1,  1) [000009] ------------         t9 =    LCL_VAR   ref    V01 loc0         u:2 $180
                                                  /--*  t9     ref    
N003 (  2,  2) [000170] ------------       t170 = *  LEA(b+8)  byref 
N005 (  1,  1) [000010] ------------        t10 =    LCL_VAR   ref    V00 arg0         u:1 (last use) $80
                                                  /--*  t170   byref  
                                                  +--*  t10    ref    
               [000240] -A--GO------              *  STOREIND  ref   
N002 (  2, 10) [000015] H-----------        t15 =    CNS_INT(h) long   0xd1ffab1e token $102
                                                  /--*  t15    long   
               [000259] ------------       t259 = *  PUTARG_REG long   REG rcx
                                                  /--*  t259   long   arg0 in rcx
N003 ( 16, 16) [000016] --C---------        t16 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $183
                                                  /--*  t16    ref    
N005 ( 16, 16) [000018] DA----------              *  STORE_LCL_VAR ref    V04 tmp2         d:2
N001 (  2, 10) [000172] I-----------       t172 =    CNS_INT(h) long   0xd1ffab1e static Fseq[Instance] $103
                                                  /--*  t172   long   
N002 (  4, 12) [000067] n---G-------        t67 = *  IND       ref    <l:$242, c:$145>
                                                  /--*  t67    ref    
N004 (  4, 12) [000073] DA--G-------              *  STORE_LCL_VAR ref    V07 tmp5         d:2
N004 (  1,  1) [000019] ------------        t19 =    LCL_VAR   ref    V04 tmp2         u:2 $183
                                                  /--*  t19    ref    
               [000260] ------------       t260 = *  PUTARG_REG ref    REG rcx
N005 (  1,  1) [000070] ------------        t70 =    LCL_VAR   ref    V07 tmp5         u:2 (last use) <l:$242, c:$145>
                                                  /--*  t70    ref    
               [000261] ------------       t261 = *  PUTARG_REG ref    REG r8
N006 (  1,  1) [000069] ------------        t69 =    CNS_INT   int    0 $40
                                                  /--*  t69    int    
               [000262] ------------       t262 = *  PUTARG_REG int    REG rdx
                                                  /--*  t260   ref    this in rcx
                                                  +--*  t261   ref    arg2 in r8
                                                  +--*  t262   int    arg1 in rdx
N007 ( 17, 12) [000071] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor $VN.Void
               [000241] ------------                 IL_OFFSET void   IL offset: 0x17
N003 (  2, 10) [000026] ------------        t26 =    CNS_INT   long   0x7ffc86100028 $1c1
                                                  /--*  t26    long   
               [000263] ------------       t263 = *  PUTARG_REG long   REG rcx
N004 (  1,  4) [000027] ------------        t27 =    CNS_INT   int    215 $43
                                                  /--*  t27    int    
               [000264] ------------       t264 = *  PUTARG_REG int    REG rdx
                                                  /--*  t263   long   arg0 in rcx
                                                  +--*  t264   int    arg1 in rdx
N005 ( 17, 21) [000028] H-CXG-------        t28 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $301
N006 (  2, 10) [000178] I-----------       t178 =    CNS_INT(h) long   0xd1ffab1e static Fseq[FalseString] $104
                                                  /--*  t178   long   
N007 (  4, 12) [000024] n---G-------        t24 = *  IND       ref    <l:$243, c:$14a>
                                                  /--*  t24    ref    
N010 ( 21, 33) [000088] DA-XG-------              *  STORE_LCL_VAR ref    V08 tmp6         d:2
               [000242] ------------                 IL_OFFSET void   IL offset: 0x17
N005 (  2, 10) [000179] H-----------       t179 =    CNS_INT(h) long   0xD1FFAB1E "AlwaysCompileMarkupFilesInSeparateDomain" $105
                                                  /--*  t179   long   
N006 (  4, 12) [000180] #---G-------       t180 = *  IND       ref    $189
                                                  /--*  t180   ref    
               [000265] ----G-------       t265 = *  PUTARG_REG ref    REG rdx
N007 (  1,  1) [000022] ------------        t22 =    LCL_VAR   ref    V04 tmp2         u:2 $183
                                                  /--*  t22    ref    
               [000266] ------------       t266 = *  PUTARG_REG ref    REG rcx
N008 (  1,  1) [000076] ------------        t76 =    LCL_VAR   ref    V08 tmp6         u:2 (last use) <l:$243, c:$14a>
                                                  /--*  t76    ref    
               [000267] ------------       t267 = *  PUTARG_REG ref    REG r8
N009 (  1,  1) [000077] ------------        t77 =    CNS_INT   int    2 $44
                                                  /--*  t77    int    
               [000268] ------------       t268 = *  PUTARG_REG int    REG r9
                                                  /--*  t265   ref    arg1 in rdx
                                                  +--*  t266   ref    this in rcx
                                                  +--*  t267   ref    arg2 in r8
                                                  +--*  t268   int    arg3 in r9
N010 ( 21, 25) [000078] --CXG-------        t78 = *  CALL      int    System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].TryInsert $283
                                                  /--*  t78    int    
N012 ( 25, 28) [000081] DA-XG-------              *  STORE_LCL_VAR int    V09 tmp7         d:2
               [000243] ------------                 IL_OFFSET void   IL offset: 0x17
N001 (  2, 10) [000091] H-----------        t91 =    CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL] $106
                                                  /--*  t91    long   
N002 (  4, 12) [000092] #---G-------        t92 = *  IND       ref    $18a
                                                  /--*  t92    ref    
N004 (  4, 12) [000231] DA--G-------              *  STORE_LCL_VAR ref    V17 cse1         d:1
               [000244] ------------                 IL_OFFSET void   IL offset: 0x17
N001 (  1,  1) [000234] ------------       t234 =    LCL_VAR   ref    V17 cse1         u:1 (last use) $18a
                                                  /--*  t234   ref    
N003 (  5,  4) [000108] DA--G-------              *  STORE_LCL_VAR ref    V11 tmp9         d:2
               [000245] ------------                 IL_OFFSET void   IL offset: 0x17
N001 (  3,  2) [000098] ------------        t98 =    LCL_VAR   int    V09 tmp7         u:2 (last use) $283
N002 (  1,  1) [000099] -c----------        t99 =    CNS_INT   int    0 $40
                                                  /--*  t98    int    
                                                  +--*  t99    int    
N003 (  5,  4) [000100] J------N----              *  NE        void   $340
N004 (  7,  6) [000101] ------------              *  JTRUE     void  

------------ BB02 [017..018), preds={BB01} succs={BB03}
               [000246] ------------                 IL_OFFSET void   IL offset: 0x17
N003 (  3,  2) [000102] ------------       t102 =    LCL_VAR   ref    V11 tmp9         u:2 $18a
                                                  /--*  t102   ref    
               [000269] ------------       t269 = *  PUTARG_REG ref    REG rcx
N004 (  3,  2) [000103] ------------       t103 =    LCL_VAR   ref    V11 tmp9         u:2 (last use) $18a
                                                  /--*  t103   ref    
               [000270] ------------       t270 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t269   ref    arg0 in rcx
                                                  +--*  t270   ref    arg1 in rdx
N005 ( 20, 11) [000104] --CXG-------              *  CALL      void   System.Diagnostics.Debug.Fail $VN.Void

------------ BB03 [000..018) (return), preds={BB01,BB02} succs={}
N002 ( 14,  5) [000110] --CXG-------       t110 =    CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices $156
                                                  /--*  t110   ref    
N004 ( 14,  5) [000188] DA-XG-----L-              *  STORE_LCL_VAR ref    V15 tmp13        d:2
N005 (  1,  1) [000189] ------------       t189 =    LCL_VAR   ref    V15 tmp13        u:2 (last use) $156
                                                  /--*  t189   ref    
               [000271] ------------       t271 = *  PUTARG_REG ref    REG rdx
N006 (  1,  1) [000021] ------------        t21 =    LCL_VAR   ref    V04 tmp2         u:2 (last use) $183
                                                  /--*  t21    ref    
               [000272] ------------       t272 = *  PUTARG_REG ref    REG rcx
                                                  /--*  t271   ref    arg1 in rdx
                                                  +--*  t272   ref    arg0 in rcx
N007 ( 33, 14) [000112] --CXG-------       t112 = *  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create $159
                                                  /--*  t112   ref    
N009 ( 33, 14) [000034] DA-XG-------              *  STORE_LCL_VAR ref    V05 tmp3         d:2
N001 (  1,  1) [000036] ------------        t36 =    LCL_VAR   ref    V05 tmp3         u:2 $159
                                                  /--*  t36    ref    
N003 (  2,  5) [000192] -c----------       t192 = *  LEA(b+136) byref 
                                                  /--*  t192   byref  
N004 (  4,  7) [000118] ---XG-------       t118 = *  IND       ref    <l:$191, c:$190>
                                                  /--*  t118   ref    
N006 (  4,  7) [000225] DA-XG-------              *  STORE_LCL_VAR ref    V16 cse0         d:1
N007 (  1,  1) [000226] ------------       t226 =    LCL_VAR   ref    V16 cse0         u:1 <l:$191, c:$190>
                                                  /--*  t226   ref    
N010 (  5,  8) [000129] DA-XG-------              *  STORE_LCL_VAR ref    V12 tmp10        d:2
N001 (  1,  1) [000124] ------------       t124 =    LCL_VAR   ref    V12 tmp10        u:2 (last use) <l:$18e, c:$15c>
                                                  /--*  t124   ref    
N003 (  2,  2) [000194] -c----------       t194 = *  LEA(b+56) byref 
N005 (  1,  1) [000125] -c----------       t125 =    CNS_INT   int    1 $46
                                                  /--*  t194   byref  
                                                  +--*  t125   int    
               [000247] -A-XG-------              *  STOREIND  bool  
               [000248] ------------                 IL_OFFSET void   IL offset: 0x33
N001 (  1,  1) [000228] ------------       t228 =    LCL_VAR   ref    V16 cse0         u:1 <l:$18e, c:$15c>
                                                  /--*  t228   ref    
N003 (  1,  3) [000143] DA--G-------              *  STORE_LCL_VAR ref    V13 tmp11        d:2
               [000249] ------------                 IL_OFFSET void   IL offset: 0x33
N001 (  1,  1) [000138] ------------       t138 =    LCL_VAR   ref    V13 tmp11        u:2 (last use) <l:$18e, c:$15e>
                                                  /--*  t138   ref    
N003 (  2,  2) [000198] -c----------       t198 = *  LEA(b+57) byref 
N005 (  1,  1) [000139] -c----------       t139 =    CNS_INT   int    1 $46
                                                  /--*  t198   byref  
                                                  +--*  t139   int    
               [000250] -A-XG-------              *  STOREIND  bool  
               [000251] ------------                 IL_OFFSET void   IL offset: 0x3a
N004 (  1,  1) [000229] ------------       t229 =    LCL_VAR   ref    V16 cse0         u:1 (last use) <l:$18e, c:$15c>
                                                  /--*  t229   ref    
               [000273] ------------       t273 = *  PUTARG_REG ref    REG rcx
N005 (  2, 10) [000201] H-----------       t201 =    CNS_INT(h) long   0xD1FFAB1E "ilproj" $10b
                                                  /--*  t201   long   
N006 (  4, 12) [000202] #---G-------       t202 = *  IND       ref    $194
                                                  /--*  t202   ref    
               [000274] ----G-------       t274 = *  PUTARG_REG ref    REG rdx
N007 (  2, 10) [000203] H-----------       t203 =    CNS_INT(h) long   0xD1FFAB1E "IL" $10c
                                                  /--*  t203   long   
N008 (  4, 12) [000204] #---G-------       t204 = *  IND       ref    $195
                                                  /--*  t204   ref    
               [000275] ----G-------       t275 = *  PUTARG_REG ref    REG r8
                                                  /--*  t273   ref    this in rcx
                                                  +--*  t274   ref    arg1 in rdx
                                                  +--*  t275   ref    arg2 in r8
N009 ( 23, 34) [000148] --CXG-------              *  CALL      void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage $VN.Void
               [000252] ------------                 IL_OFFSET void   IL offset: 0x4a
N004 (  1,  1) [000048] ------------        t48 =    LCL_VAR   ref    V05 tmp3         u:2 $159
                                                  /--*  t48    ref    
N006 (  2,  5) [000209] -c----------       t209 = *  LEA(b+136) byref 
                                                  /--*  t209   byref  
N007 (  4,  7) [000150] n---GO------       t150 = *  IND       ref    <l:$199, c:$198>
                                                  /--*  t150   ref    
               [000276] ----GO------       t276 = *  PUTARG_REG ref    REG rcx
N008 (  2, 10) [000210] H-----------       t210 =    CNS_INT(h) long   0xD1FFAB1E "vcxproj" $10d
                                                  /--*  t210   long   
N009 (  4, 12) [000211] #---G-------       t211 = *  IND       ref    $19a
                                                  /--*  t211   ref    
               [000277] ----G-------       t277 = *  PUTARG_REG ref    REG rdx
N010 (  2, 10) [000212] H-----------       t212 =    CNS_INT(h) long   0xD1FFAB1E "C++" $10e
                                                  /--*  t212   long   
N011 (  4, 12) [000213] #---G-------       t213 = *  IND       ref    $19b
                                                  /--*  t213   ref    
               [000278] ----G-------       t278 = *  PUTARG_REG ref    REG r8
                                                  /--*  t276   ref    this in rcx
                                                  +--*  t277   ref    arg1 in rdx
                                                  +--*  t278   ref    arg2 in r8
N012 ( 26, 40) [000153] --CXGO------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage $VN.Void
               [000253] ------------                 IL_OFFSET void   IL offset: 0x5a
N002 (  2, 10) [000055] H-----------        t55 =    CNS_INT(h) long   0xd1ffab1e token $10f
                                                  /--*  t55    long   
               [000279] ------------       t279 = *  PUTARG_REG long   REG rcx
                                                  /--*  t279   long   arg0 in rcx
N003 ( 16, 16) [000056] --C---------        t56 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $19c
                                                  /--*  t56    ref    
N005 ( 16, 16) [000058] DA----------              *  STORE_LCL_VAR ref    V06 tmp4         d:2
N001 (  1,  1) [000059] ------------        t59 =    LCL_VAR   ref    V06 tmp4         u:2 $19c
                                                  /--*  t59    ref    
N003 (  2,  2) [000219] ------------       t219 = *  LEA(b+8)  byref 
N005 (  1,  1) [000158] ------------       t158 =    LCL_VAR   ref    V01 loc0         u:2 (last use) $180
                                                  /--*  t219   byref  
                                                  +--*  t158   ref    
               [000254] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000161] ------------       t161 =    LCL_VAR   ref    V06 tmp4         u:2 $19c
                                                  /--*  t161   ref    
N003 (  2,  2) [000221] -c----------       t221 = *  LEA(b+24) byref 
N005 (  2, 10) [000054] H-----------        t54 =    CNS_INT(h) long   0xd1ffab1e ftn $111
                                                  /--*  t221   byref  
                                                  +--*  t54    long   
               [000255] -A--GO------              *  STOREIND  long  
               [000256] ------------                 IL_OFFSET void   IL offset: 0x67
N003 (  1,  1) [000052] ------------        t52 =    LCL_VAR   ref    V05 tmp3         u:2 $159
                                                  /--*  t52    ref    
               [000280] ------------       t280 = *  PUTARG_REG ref    REG rcx
N004 (  1,  1) [000061] ------------        t61 =    LCL_VAR   ref    V06 tmp4         u:2 (last use) $19c
                                                  /--*  t61    ref    
               [000281] ------------       t281 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t280   ref    this in rcx
                                                  +--*  t281   ref    arg1 in rdx
N005 ( 16, 10) [000062] --CXG-------              *  CALL      void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed $VN.Void
               [000257] ------------                 IL_OFFSET void   IL offset: 0x6c
N001 (  1,  1) [000035] ------------        t35 =    LCL_VAR   ref    V05 tmp3         u:2 (last use) $159
                                                  /--*  t35    ref    
N002 (  2,  2) [000063] ------------              *  RETURN    ref    $170

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Trees before Calculate stack level slots

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)-> BB03 ( cond )                     i label target hascall gcsafe newobj nullcheck LIR 
BB02 [0008]  1       BB01                  0.25    [017..018)                                     i hascall gcsafe LIR 
BB03 [0009]  2       BB01,BB02             1       [000..018)        (return)                     i label target hascall gcsafe newobj nullcheck LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06D) -> BB03 (cond), preds={} succs={BB02,BB03}
               [000237] ------------                 IL_OFFSET void   IL offset: 0x0
N002 (  2, 10) [000000] H-----------         t0 =    CNS_INT(h) long   0xd1ffab1e method $100
                                                  /--*  t0     long   
               [000258] ------------       t258 = *  PUTARG_REG long   REG rcx
                                                  /--*  t258   long   arg0 in rcx
N003 ( 16, 16) [000001] --C---------         t1 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $180
                                                  /--*  t1     ref    
N005 ( 16, 16) [000003] DA----------              *  STORE_LCL_VAR ref    V03 tmp1         d:2
               [000238] ------------                 IL_OFFSET void   IL offset: 0x5
N001 (  1,  1) [000006] ------------         t6 =    LCL_VAR   ref    V03 tmp1         u:2 (last use) $180
                                                  /--*  t6     ref    
N003 (  1,  3) [000008] DA----------              *  STORE_LCL_VAR ref    V01 loc0         d:2
               [000239] ------------                 IL_OFFSET void   IL offset: 0x6
N001 (  1,  1) [000009] ------------         t9 =    LCL_VAR   ref    V01 loc0         u:2 $180
                                                  /--*  t9     ref    
N003 (  2,  2) [000170] ------------       t170 = *  LEA(b+8)  byref 
N005 (  1,  1) [000010] ------------        t10 =    LCL_VAR   ref    V00 arg0         u:1 (last use) $80
                                                  /--*  t170   byref  
                                                  +--*  t10    ref    
               [000240] -A--GO------              *  STOREIND  ref   
N002 (  2, 10) [000015] H-----------        t15 =    CNS_INT(h) long   0xd1ffab1e token $102
                                                  /--*  t15    long   
               [000259] ------------       t259 = *  PUTARG_REG long   REG rcx
                                                  /--*  t259   long   arg0 in rcx
N003 ( 16, 16) [000016] --C---------        t16 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $183
                                                  /--*  t16    ref    
N005 ( 16, 16) [000018] DA----------              *  STORE_LCL_VAR ref    V04 tmp2         d:2
N001 (  2, 10) [000172] I-----------       t172 =    CNS_INT(h) long   0xd1ffab1e static Fseq[Instance] $103
                                                  /--*  t172   long   
N002 (  4, 12) [000067] n---G-------        t67 = *  IND       ref    <l:$242, c:$145>
                                                  /--*  t67    ref    
N004 (  4, 12) [000073] DA--G-------              *  STORE_LCL_VAR ref    V07 tmp5         d:2
N004 (  1,  1) [000019] ------------        t19 =    LCL_VAR   ref    V04 tmp2         u:2 $183
                                                  /--*  t19    ref    
               [000260] ------------       t260 = *  PUTARG_REG ref    REG rcx
N005 (  1,  1) [000070] ------------        t70 =    LCL_VAR   ref    V07 tmp5         u:2 (last use) <l:$242, c:$145>
                                                  /--*  t70    ref    
               [000261] ------------       t261 = *  PUTARG_REG ref    REG r8
N006 (  1,  1) [000069] ------------        t69 =    CNS_INT   int    0 $40
                                                  /--*  t69    int    
               [000262] ------------       t262 = *  PUTARG_REG int    REG rdx
                                                  /--*  t260   ref    this in rcx
                                                  +--*  t261   ref    arg2 in r8
                                                  +--*  t262   int    arg1 in rdx
N007 ( 17, 12) [000071] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor $VN.Void
               [000241] ------------                 IL_OFFSET void   IL offset: 0x17
N003 (  2, 10) [000026] ------------        t26 =    CNS_INT   long   0x7ffc86100028 $1c1
                                                  /--*  t26    long   
               [000263] ------------       t263 = *  PUTARG_REG long   REG rcx
N004 (  1,  4) [000027] ------------        t27 =    CNS_INT   int    215 $43
                                                  /--*  t27    int    
               [000264] ------------       t264 = *  PUTARG_REG int    REG rdx
                                                  /--*  t263   long   arg0 in rcx
                                                  +--*  t264   int    arg1 in rdx
N005 ( 17, 21) [000028] H-CXG-------        t28 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $301
N006 (  2, 10) [000178] I-----------       t178 =    CNS_INT(h) long   0xd1ffab1e static Fseq[FalseString] $104
                                                  /--*  t178   long   
N007 (  4, 12) [000024] n---G-------        t24 = *  IND       ref    <l:$243, c:$14a>
                                                  /--*  t24    ref    
N010 ( 21, 33) [000088] DA-XG-------              *  STORE_LCL_VAR ref    V08 tmp6         d:2
               [000242] ------------                 IL_OFFSET void   IL offset: 0x17
N005 (  2, 10) [000179] H-----------       t179 =    CNS_INT(h) long   0xD1FFAB1E "AlwaysCompileMarkupFilesInSeparateDomain" $105
                                                  /--*  t179   long   
N006 (  4, 12) [000180] #---G-------       t180 = *  IND       ref    $189
                                                  /--*  t180   ref    
               [000265] ----G-------       t265 = *  PUTARG_REG ref    REG rdx
N007 (  1,  1) [000022] ------------        t22 =    LCL_VAR   ref    V04 tmp2         u:2 $183
                                                  /--*  t22    ref    
               [000266] ------------       t266 = *  PUTARG_REG ref    REG rcx
N008 (  1,  1) [000076] ------------        t76 =    LCL_VAR   ref    V08 tmp6         u:2 (last use) <l:$243, c:$14a>
                                                  /--*  t76    ref    
               [000267] ------------       t267 = *  PUTARG_REG ref    REG r8
N009 (  1,  1) [000077] ------------        t77 =    CNS_INT   int    2 $44
                                                  /--*  t77    int    
               [000268] ------------       t268 = *  PUTARG_REG int    REG r9
                                                  /--*  t265   ref    arg1 in rdx
                                                  +--*  t266   ref    this in rcx
                                                  +--*  t267   ref    arg2 in r8
                                                  +--*  t268   int    arg3 in r9
N010 ( 21, 25) [000078] --CXG-------        t78 = *  CALL      int    System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].TryInsert $283
                                                  /--*  t78    int    
N012 ( 25, 28) [000081] DA-XG-------              *  STORE_LCL_VAR int    V09 tmp7         d:2
               [000243] ------------                 IL_OFFSET void   IL offset: 0x17
N001 (  2, 10) [000091] H-----------        t91 =    CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL] $106
                                                  /--*  t91    long   
N002 (  4, 12) [000092] #---G-------        t92 = *  IND       ref    $18a
                                                  /--*  t92    ref    
N004 (  4, 12) [000231] DA--G-------              *  STORE_LCL_VAR ref    V17 cse1         d:1
               [000244] ------------                 IL_OFFSET void   IL offset: 0x17
N001 (  1,  1) [000234] ------------       t234 =    LCL_VAR   ref    V17 cse1         u:1 (last use) $18a
                                                  /--*  t234   ref    
N003 (  5,  4) [000108] DA--G-------              *  STORE_LCL_VAR ref    V11 tmp9         d:2
               [000245] ------------                 IL_OFFSET void   IL offset: 0x17
N001 (  3,  2) [000098] ------------        t98 =    LCL_VAR   int    V09 tmp7         u:2 (last use) $283
N002 (  1,  1) [000099] -c----------        t99 =    CNS_INT   int    0 $40
                                                  /--*  t98    int    
                                                  +--*  t99    int    
N003 (  5,  4) [000100] J------N----              *  NE        void   $340
N004 (  7,  6) [000101] ------------              *  JTRUE     void  

------------ BB02 [017..018), preds={BB01} succs={BB03}
               [000246] ------------                 IL_OFFSET void   IL offset: 0x17
N003 (  3,  2) [000102] ------------       t102 =    LCL_VAR   ref    V11 tmp9         u:2 $18a
                                                  /--*  t102   ref    
               [000269] ------------       t269 = *  PUTARG_REG ref    REG rcx
N004 (  3,  2) [000103] ------------       t103 =    LCL_VAR   ref    V11 tmp9         u:2 (last use) $18a
                                                  /--*  t103   ref    
               [000270] ------------       t270 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t269   ref    arg0 in rcx
                                                  +--*  t270   ref    arg1 in rdx
N005 ( 20, 11) [000104] --CXG-------              *  CALL      void   System.Diagnostics.Debug.Fail $VN.Void

------------ BB03 [000..018) (return), preds={BB01,BB02} succs={}
N002 ( 14,  5) [000110] --CXG-------       t110 =    CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices $156
                                                  /--*  t110   ref    
N004 ( 14,  5) [000188] DA-XG-----L-              *  STORE_LCL_VAR ref    V15 tmp13        d:2
N005 (  1,  1) [000189] ------------       t189 =    LCL_VAR   ref    V15 tmp13        u:2 (last use) $156
                                                  /--*  t189   ref    
               [000271] ------------       t271 = *  PUTARG_REG ref    REG rdx
N006 (  1,  1) [000021] ------------        t21 =    LCL_VAR   ref    V04 tmp2         u:2 (last use) $183
                                                  /--*  t21    ref    
               [000272] ------------       t272 = *  PUTARG_REG ref    REG rcx
                                                  /--*  t271   ref    arg1 in rdx
                                                  +--*  t272   ref    arg0 in rcx
N007 ( 33, 14) [000112] --CXG-------       t112 = *  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create $159
                                                  /--*  t112   ref    
N009 ( 33, 14) [000034] DA-XG-------              *  STORE_LCL_VAR ref    V05 tmp3         d:2
N001 (  1,  1) [000036] ------------        t36 =    LCL_VAR   ref    V05 tmp3         u:2 $159
                                                  /--*  t36    ref    
N003 (  2,  5) [000192] -c----------       t192 = *  LEA(b+136) byref 
                                                  /--*  t192   byref  
N004 (  4,  7) [000118] ---XG-------       t118 = *  IND       ref    <l:$191, c:$190>
                                                  /--*  t118   ref    
N006 (  4,  7) [000225] DA-XG-------              *  STORE_LCL_VAR ref    V16 cse0         d:1
N007 (  1,  1) [000226] ------------       t226 =    LCL_VAR   ref    V16 cse0         u:1 <l:$191, c:$190>
                                                  /--*  t226   ref    
N010 (  5,  8) [000129] DA-XG-------              *  STORE_LCL_VAR ref    V12 tmp10        d:2
N001 (  1,  1) [000124] ------------       t124 =    LCL_VAR   ref    V12 tmp10        u:2 (last use) <l:$18e, c:$15c>
                                                  /--*  t124   ref    
N003 (  2,  2) [000194] -c----------       t194 = *  LEA(b+56) byref 
N005 (  1,  1) [000125] -c----------       t125 =    CNS_INT   int    1 $46
                                                  /--*  t194   byref  
                                                  +--*  t125   int    
               [000247] -A-XG-------              *  STOREIND  bool  
               [000248] ------------                 IL_OFFSET void   IL offset: 0x33
N001 (  1,  1) [000228] ------------       t228 =    LCL_VAR   ref    V16 cse0         u:1 <l:$18e, c:$15c>
                                                  /--*  t228   ref    
N003 (  1,  3) [000143] DA--G-------              *  STORE_LCL_VAR ref    V13 tmp11        d:2
               [000249] ------------                 IL_OFFSET void   IL offset: 0x33
N001 (  1,  1) [000138] ------------       t138 =    LCL_VAR   ref    V13 tmp11        u:2 (last use) <l:$18e, c:$15e>
                                                  /--*  t138   ref    
N003 (  2,  2) [000198] -c----------       t198 = *  LEA(b+57) byref 
N005 (  1,  1) [000139] -c----------       t139 =    CNS_INT   int    1 $46
                                                  /--*  t198   byref  
                                                  +--*  t139   int    
               [000250] -A-XG-------              *  STOREIND  bool  
               [000251] ------------                 IL_OFFSET void   IL offset: 0x3a
N004 (  1,  1) [000229] ------------       t229 =    LCL_VAR   ref    V16 cse0         u:1 (last use) <l:$18e, c:$15c>
                                                  /--*  t229   ref    
               [000273] ------------       t273 = *  PUTARG_REG ref    REG rcx
N005 (  2, 10) [000201] H-----------       t201 =    CNS_INT(h) long   0xD1FFAB1E "ilproj" $10b
                                                  /--*  t201   long   
N006 (  4, 12) [000202] #---G-------       t202 = *  IND       ref    $194
                                                  /--*  t202   ref    
               [000274] ----G-------       t274 = *  PUTARG_REG ref    REG rdx
N007 (  2, 10) [000203] H-----------       t203 =    CNS_INT(h) long   0xD1FFAB1E "IL" $10c
                                                  /--*  t203   long   
N008 (  4, 12) [000204] #---G-------       t204 = *  IND       ref    $195
                                                  /--*  t204   ref    
               [000275] ----G-------       t275 = *  PUTARG_REG ref    REG r8
                                                  /--*  t273   ref    this in rcx
                                                  +--*  t274   ref    arg1 in rdx
                                                  +--*  t275   ref    arg2 in r8
N009 ( 23, 34) [000148] --CXG-------              *  CALL      void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage $VN.Void
               [000252] ------------                 IL_OFFSET void   IL offset: 0x4a
N004 (  1,  1) [000048] ------------        t48 =    LCL_VAR   ref    V05 tmp3         u:2 $159
                                                  /--*  t48    ref    
N006 (  2,  5) [000209] -c----------       t209 = *  LEA(b+136) byref 
                                                  /--*  t209   byref  
N007 (  4,  7) [000150] n---GO------       t150 = *  IND       ref    <l:$199, c:$198>
                                                  /--*  t150   ref    
               [000276] ----GO------       t276 = *  PUTARG_REG ref    REG rcx
N008 (  2, 10) [000210] H-----------       t210 =    CNS_INT(h) long   0xD1FFAB1E "vcxproj" $10d
                                                  /--*  t210   long   
N009 (  4, 12) [000211] #---G-------       t211 = *  IND       ref    $19a
                                                  /--*  t211   ref    
               [000277] ----G-------       t277 = *  PUTARG_REG ref    REG rdx
N010 (  2, 10) [000212] H-----------       t212 =    CNS_INT(h) long   0xD1FFAB1E "C++" $10e
                                                  /--*  t212   long   
N011 (  4, 12) [000213] #---G-------       t213 = *  IND       ref    $19b
                                                  /--*  t213   ref    
               [000278] ----G-------       t278 = *  PUTARG_REG ref    REG r8
                                                  /--*  t276   ref    this in rcx
                                                  +--*  t277   ref    arg1 in rdx
                                                  +--*  t278   ref    arg2 in r8
N012 ( 26, 40) [000153] --CXGO------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage $VN.Void
               [000253] ------------                 IL_OFFSET void   IL offset: 0x5a
N002 (  2, 10) [000055] H-----------        t55 =    CNS_INT(h) long   0xd1ffab1e token $10f
                                                  /--*  t55    long   
               [000279] ------------       t279 = *  PUTARG_REG long   REG rcx
                                                  /--*  t279   long   arg0 in rcx
N003 ( 16, 16) [000056] --C---------        t56 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $19c
                                                  /--*  t56    ref    
N005 ( 16, 16) [000058] DA----------              *  STORE_LCL_VAR ref    V06 tmp4         d:2
N001 (  1,  1) [000059] ------------        t59 =    LCL_VAR   ref    V06 tmp4         u:2 $19c
                                                  /--*  t59    ref    
N003 (  2,  2) [000219] ------------       t219 = *  LEA(b+8)  byref 
N005 (  1,  1) [000158] ------------       t158 =    LCL_VAR   ref    V01 loc0         u:2 (last use) $180
                                                  /--*  t219   byref  
                                                  +--*  t158   ref    
               [000254] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000161] ------------       t161 =    LCL_VAR   ref    V06 tmp4         u:2 $19c
                                                  /--*  t161   ref    
N003 (  2,  2) [000221] -c----------       t221 = *  LEA(b+24) byref 
N005 (  2, 10) [000054] H-----------        t54 =    CNS_INT(h) long   0xd1ffab1e ftn $111
                                                  /--*  t221   byref  
                                                  +--*  t54    long   
               [000255] -A--GO------              *  STOREIND  long  
               [000256] ------------                 IL_OFFSET void   IL offset: 0x67
N003 (  1,  1) [000052] ------------        t52 =    LCL_VAR   ref    V05 tmp3         u:2 $159
                                                  /--*  t52    ref    
               [000280] ------------       t280 = *  PUTARG_REG ref    REG rcx
N004 (  1,  1) [000061] ------------        t61 =    LCL_VAR   ref    V06 tmp4         u:2 (last use) $19c
                                                  /--*  t61    ref    
               [000281] ------------       t281 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t280   ref    this in rcx
                                                  +--*  t281   ref    arg1 in rdx
N005 ( 16, 10) [000062] --CXG-------              *  CALL      void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed $VN.Void
               [000257] ------------                 IL_OFFSET void   IL offset: 0x6c
N001 (  1,  1) [000035] ------------        t35 =    LCL_VAR   ref    V05 tmp3         u:2 (last use) $159
                                                  /--*  t35    ref    
N002 (  2,  2) [000063] ------------              *  RETURN    ref    $170

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Calculate stack level slots

*************** Finishing PHASE Calculate stack level slots [no changes]

*************** Starting PHASE Linear scan register alloc
Clearing modified regs.

buildIntervals ========

-----------------
LIVENESS:
-----------------
BB01 use def in out
{V00}
{V01 V03 V04 V07 V08 V09 V10 V11 V17}
{V00}
{V01 V04 V11}
BB02 use def in out
{V11}
{}
{V01 V04 V11}
{V01 V04}
BB03 use def in out
{V01 V04}
{V05 V06 V12 V13 V15 V16}
{V01 V04}
{}
Interval  0: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  0: (V00) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  1: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  1: (V01) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  2: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  2: (V03) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  3: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  3: (V04) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  4: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  4: (V05) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  5: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  5: (V06) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  6: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  6: (V07) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  7: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  7: (V08) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  8: int RefPositions {} physReg:NA Preferences=[allInt]
  Interval  8: (V09) int RefPositions {} physReg:NA Preferences=[allInt]
Interval  9: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  9: (V11) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 10: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 10: (V12) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 11: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 11: (V13) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 12: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 12: (V15) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 13: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 13: (V16) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 14: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 14: (V17) ref RefPositions {} physReg:NA Preferences=[allInt]

FP callee save candidate vars: None

floatVarCount = 0; hasLoops = 0, singleExit = 1
TUPLE STYLE DUMP BEFORE LSRA
LSRA Block Sequence: BB01(  1   ) 
BB02(  0.25) 
BB03(  1   ) 

BB01 [000..06D) -> BB03 (cond), preds={} succs={BB02,BB03}
=====
  N000.                    IL_OFFSET IL offset: 0x0
  N002. t0              =  CNS_INT(h) 0xd1ffab1e method
  N000. t258            =  PUTARG_REG; t0
  N003. t1              =  CALL help; t258
  N005.                    V03(t3); t1
  N000.                    IL_OFFSET IL offset: 0x5
  N001.                    V03(t6*)
  N003.                    V01(t8); t6*
  N000.                    IL_OFFSET IL offset: 0x6
  N001.                    V01(t9)
  N003. t170            =  LEA(b+8) ; t9
  N005.                    V00(t10*)
  N000.                    STOREIND ; t170,t10*
  N002. t15             =  CNS_INT(h) 0xd1ffab1e token
  N000. t259            =  PUTARG_REG; t15
  N003. t16             =  CALL help; t259
  N005.                    V04(t18); t16
  N001. t172            =  CNS_INT(h) 0xd1ffab1e static Fseq[Instance]
  N002. t67             =  IND      ; t172
  N004.                    V07(t73); t67
  N004.                    V04(t19)
  N000. t260            =  PUTARG_REG; t19
  N005.                    V07(t70*)
  N000. t261            =  PUTARG_REG; t70*
  N006. t69             =  CNS_INT   0
  N000. t262            =  PUTARG_REG; t69
  N007.                    CALL     ; t260,t261,t262
  N000.                    IL_OFFSET IL offset: 0x17
  N003. t26             =  CNS_INT   0x7ffc86100028
  N000. t263            =  PUTARG_REG; t26
  N004. t27             =  CNS_INT   215
  N000. t264            =  PUTARG_REG; t27
  N005.                    CALL help; t263,t264
  N006. t178            =  CNS_INT(h) 0xd1ffab1e static Fseq[FalseString]
  N007. t24             =  IND      ; t178
  N010.                    V08(t88); t24
  N000.                    IL_OFFSET IL offset: 0x17
  N005. t179            =  CNS_INT(h) 0xD1FFAB1E "AlwaysCompileMarkupFilesInSeparateDomain"
  N006. t180            =  IND      ; t179
  N000. t265            =  PUTARG_REG; t180
  N007.                    V04(t22)
  N000. t266            =  PUTARG_REG; t22
  N008.                    V08(t76*)
  N000. t267            =  PUTARG_REG; t76*
  N009. t77             =  CNS_INT   2
  N000. t268            =  PUTARG_REG; t77
  N010. t78             =  CALL     ; t265,t266,t267,t268
  N012.                    V09(t81); t78
  N000.                    IL_OFFSET IL offset: 0x17
  N001. t91             =  CNS_INT(h) 0xD1FFAB1E [ICON_STR_HDL]
  N002. t92             =  IND      ; t91
  N004.                    V17(t231); t92
  N000.                    IL_OFFSET IL offset: 0x17
  N001.                    V17(t234*)
  N003.                    V11(t108); t234*
  N000.                    IL_OFFSET IL offset: 0x17
  N001.                    V09(t98*)
  N002.                    CNS_INT   0
  N003.                    NE       ; t98*
  N004.                    JTRUE    

BB02 [017..018), preds={BB01} succs={BB03}
=====
  N000.                    IL_OFFSET IL offset: 0x17
  N003.                    V11(t102)
  N000. t269            =  PUTARG_REG; t102
  N004.                    V11(t103*)
  N000. t270            =  PUTARG_REG; t103*
  N005.                    CALL     ; t269,t270

BB03 [000..018) (return), preds={BB01,BB02} succs={}
=====
  N002. t110            =  CALL     
  N004.                    V15(t188); t110
  N005.                    V15(t189*)
  N000. t271            =  PUTARG_REG; t189*
  N006.                    V04(t21*)
  N000. t272            =  PUTARG_REG; t21*
  N007. t112            =  CALL     ; t271,t272
  N009.                    V05(t34); t112
  N001.                    V05(t36)
  N003. t192            =  LEA(b+136); t36
  N004. t118            =  IND      ; t192
  N006.                    V16(t225); t118
  N007.                    V16(t226)
  N010.                    V12(t129); t226
  N001.                    V12(t124*)
  N003. t194            =  LEA(b+56); t124*
  N005.                    CNS_INT   1
  N000.                    STOREIND ; t194
  N000.                    IL_OFFSET IL offset: 0x33
  N001.                    V16(t228)
  N003.                    V13(t143); t228
  N000.                    IL_OFFSET IL offset: 0x33
  N001.                    V13(t138*)
  N003. t198            =  LEA(b+57); t138*
  N005.                    CNS_INT   1
  N000.                    STOREIND ; t198
  N000.                    IL_OFFSET IL offset: 0x3a
  N004.                    V16(t229*)
  N000. t273            =  PUTARG_REG; t229*
  N005. t201            =  CNS_INT(h) 0xD1FFAB1E "ilproj"
  N006. t202            =  IND      ; t201
  N000. t274            =  PUTARG_REG; t202
  N007. t203            =  CNS_INT(h) 0xD1FFAB1E "IL"
  N008. t204            =  IND      ; t203
  N000. t275            =  PUTARG_REG; t204
  N009.                    CALL     ; t273,t274,t275
  N000.                    IL_OFFSET IL offset: 0x4a
  N004.                    V05(t48)
  N006. t209            =  LEA(b+136); t48
  N007. t150            =  IND      ; t209
  N000. t276            =  PUTARG_REG; t150
  N008. t210            =  CNS_INT(h) 0xD1FFAB1E "vcxproj"
  N009. t211            =  IND      ; t210
  N000. t277            =  PUTARG_REG; t211
  N010. t212            =  CNS_INT(h) 0xD1FFAB1E "C++"
  N011. t213            =  IND      ; t212
  N000. t278            =  PUTARG_REG; t213
  N012.                    CALL nullcheck; t276,t277,t278
  N000.                    IL_OFFSET IL offset: 0x5a
  N002. t55             =  CNS_INT(h) 0xd1ffab1e token
  N000. t279            =  PUTARG_REG; t55
  N003. t56             =  CALL help; t279
  N005.                    V06(t58); t56
  N001.                    V06(t59)
  N003. t219            =  LEA(b+8) ; t59
  N005.                    V01(t158*)
  N000.                    STOREIND ; t219,t158*
  N001.                    V06(t161)
  N003. t221            =  LEA(b+24); t161
  N005. t54             =  CNS_INT(h) 0xd1ffab1e ftn
  N000.                    STOREIND ; t221,t54
  N000.                    IL_OFFSET IL offset: 0x67
  N003.                    V05(t52)
  N000. t280            =  PUTARG_REG; t52
  N004.                    V06(t61*)
  N000. t281            =  PUTARG_REG; t61*
  N005.                    CALL     ; t280,t281
  N000.                    IL_OFFSET IL offset: 0x6c
  N001.                    V05(t35*)
  N002.                    RETURN   ; t35*




buildIntervals second part ========
Int arg V00 in reg rcx
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00>  BB00 regmask=[rcx] minReg=1 fixed>

NEW BLOCK BB01
<RefPosition #1   @1   RefTypeBB  BB01 regmask=[] minReg=1>

DefList: {  }
N003 (???,???) [000237] ------------              *  IL_OFFSET void   IL offset: 0x0 REG NA

DefList: {  }
N005 (  2, 10) [000000] H-----------              *  CNS_INT(h) long   0xd1ffab1e method REG NA $100
Interval 15: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #2   @6   RefTypeDef <Ivl:15> CNS_INT BB01 regmask=[allInt] minReg=1>

DefList: { N005.t0. CNS_INT }
N007 (???,???) [000258] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #3   @7   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #4   @7   RefTypeUse <Ivl:15>  BB01 regmask=[rcx] minReg=1 last fixed>
Interval 16: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #5   @8   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #6   @8   RefTypeDef <Ivl:16> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>

DefList: { N007.t258. PUTARG_REG }
N009 ( 16, 16) [000001] --C---------              *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG NA $180
<RefPosition #7   @9   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #8   @9   RefTypeUse <Ivl:16>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #9   @10  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #10  @10  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #11  @10  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #12  @10  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #13  @10  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #14  @10  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #15  @10  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
Interval 17: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #16  @10  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #17  @10  RefTypeDef <Ivl:17> CALL BB01 regmask=[rax] minReg=1 fixed>

DefList: { N009.t1. CALL }
N011 ( 16, 16) [000003] DA----------              *  STORE_LCL_VAR ref    V03 tmp1         d:2 NA REG NA
<RefPosition #18  @11  RefTypeUse <Ivl:17>  BB01 regmask=[allInt] minReg=1 last>
Assigning related <V03/L2> to <I17>
<RefPosition #19  @12  RefTypeDef <Ivl:2 V03> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N013 (???,???) [000238] ------------              *  IL_OFFSET void   IL offset: 0x5 REG NA

DefList: {  }
N015 (  1,  1) [000006] ------------              *  LCL_VAR   ref    V03 tmp1         u:2 NA (last use) REG NA $180

DefList: {  }
N017 (  1,  3) [000008] DA----------              *  STORE_LCL_VAR ref    V01 loc0         d:2 NA REG NA
<RefPosition #20  @17  RefTypeUse <Ivl:2 V03> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
Assigning related <V01/L1> to <V03/L2>
<RefPosition #21  @18  RefTypeDef <Ivl:1 V01> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N019 (???,???) [000239] ------------              *  IL_OFFSET void   IL offset: 0x6 REG NA

DefList: {  }
N021 (  1,  1) [000009] ------------              *  LCL_VAR   ref    V01 loc0         u:2 NA REG NA $180

DefList: {  }
N023 (  2,  2) [000170] ------------              *  LEA(b+8)  byref  REG NA
<RefPosition #22  @23  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
Interval 18: byref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #23  @24  RefTypeDef <Ivl:18> LEA BB01 regmask=[allInt] minReg=1>

DefList: { N023.t170. LEA }
N025 (  1,  1) [000010] ------------              *  LCL_VAR   ref    V00 arg0         u:1 NA (last use) REG NA $80

DefList: { N023.t170. LEA }
N027 (???,???) [000240] -A--GO------              *  STOREIND  ref    REG NA
<RefPosition #24  @27  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #25  @27  RefTypeUse <Ivl:18>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #26  @27  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #27  @27  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #28  @28  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #29  @28  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #30  @28  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #31  @28  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #32  @28  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #33  @28  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #34  @28  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
<RefPosition #35  @28  RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1>
<RefPosition #36  @28  RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1>
<RefPosition #37  @28  RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1>
<RefPosition #38  @28  RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1>
<RefPosition #39  @28  RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1>
<RefPosition #40  @28  RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1>

DefList: {  }
N029 (  2, 10) [000015] H-----------              *  CNS_INT(h) long   0xd1ffab1e token REG NA $102
Interval 19: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #41  @30  RefTypeDef <Ivl:19> CNS_INT BB01 regmask=[allInt] minReg=1>

DefList: { N029.t15. CNS_INT }
N031 (???,???) [000259] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #42  @31  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #43  @31  RefTypeUse <Ivl:19>  BB01 regmask=[rcx] minReg=1 last fixed>
Interval 20: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #44  @32  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #45  @32  RefTypeDef <Ivl:20> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>

DefList: { N031.t259. PUTARG_REG }
N033 ( 16, 16) [000016] --C---------              *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG NA $183
<RefPosition #46  @33  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #47  @33  RefTypeUse <Ivl:20>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #48  @34  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #49  @34  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #50  @34  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #51  @34  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #52  @34  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #53  @34  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #54  @34  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
Interval 21: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #55  @34  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #56  @34  RefTypeDef <Ivl:21> CALL BB01 regmask=[rax] minReg=1 fixed>

DefList: { N033.t16. CALL }
N035 ( 16, 16) [000018] DA----------              *  STORE_LCL_VAR ref    V04 tmp2         d:2 NA REG NA
<RefPosition #57  @35  RefTypeUse <Ivl:21>  BB01 regmask=[allInt] minReg=1 last>
Assigning related <V04/L3> to <I21>
<RefPosition #58  @36  RefTypeDef <Ivl:3 V04> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N037 (  2, 10) [000172] I-----------              *  CNS_INT(h) long   0xd1ffab1e static Fseq[Instance] REG NA $103
Interval 22: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #59  @38  RefTypeDef <Ivl:22> CNS_INT BB01 regmask=[allInt] minReg=1>

DefList: { N037.t172. CNS_INT }
N039 (  4, 12) [000067] n---G-------              *  IND       ref    REG NA <l:$242, c:$145>
<RefPosition #60  @39  RefTypeUse <Ivl:22>  BB01 regmask=[allInt] minReg=1 last>
Interval 23: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #61  @40  RefTypeDef <Ivl:23> IND BB01 regmask=[allInt] minReg=1>

DefList: { N039.t67. IND }
N041 (  4, 12) [000073] DA--G-------              *  STORE_LCL_VAR ref    V07 tmp5         d:2 NA REG NA
<RefPosition #62  @41  RefTypeUse <Ivl:23>  BB01 regmask=[allInt] minReg=1 last>
Assigning related <V07/L6> to <I23>
<RefPosition #63  @42  RefTypeDef <Ivl:6 V07> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N043 (  1,  1) [000019] ------------              *  LCL_VAR   ref    V04 tmp2         u:2 NA REG NA $183

DefList: {  }
N045 (???,???) [000260] ------------              *  PUTARG_REG ref    REG rcx
<RefPosition #64  @45  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #65  @45  RefTypeUse <Ivl:3 V04> LCL_VAR BB01 regmask=[rcx] minReg=1 last fixed>
Setting putarg_reg as a pass-through of a non-last use lclVar
Interval 24: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #66  @46  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #67  @46  RefTypeDef <Ivl:24> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
Assigning related <V04/L3> to <I24>

DefList: { N045.t260. PUTARG_REG }
N047 (  1,  1) [000070] ------------              *  LCL_VAR   ref    V07 tmp5         u:2 NA (last use) REG NA <l:$242, c:$145>

DefList: { N045.t260. PUTARG_REG }
N049 (???,???) [000261] ------------              *  PUTARG_REG ref    REG r8
<RefPosition #68  @49  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #69  @49  RefTypeUse <Ivl:6 V07> LCL_VAR BB01 regmask=[r8] minReg=1 last fixed>
Interval 25: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #70  @50  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #71  @50  RefTypeDef <Ivl:25> PUTARG_REG BB01 regmask=[r8] minReg=1 fixed>

DefList: { N045.t260. PUTARG_REG; N049.t261. PUTARG_REG }
N051 (  1,  1) [000069] ------------              *  CNS_INT   int    0 REG NA $40
Interval 26: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #72  @52  RefTypeDef <Ivl:26> CNS_INT BB01 regmask=[allInt] minReg=1>

DefList: { N045.t260. PUTARG_REG; N049.t261. PUTARG_REG; N051.t69. CNS_INT }
N053 (???,???) [000262] ------------              *  PUTARG_REG int    REG rdx
<RefPosition #73  @53  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #74  @53  RefTypeUse <Ivl:26>  BB01 regmask=[rdx] minReg=1 last fixed>
Interval 27: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #75  @54  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #76  @54  RefTypeDef <Ivl:27> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>

DefList: { N045.t260. PUTARG_REG; N049.t261. PUTARG_REG; N053.t262. PUTARG_REG }
N055 ( 17, 12) [000071] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor REG NA $VN.Void
<RefPosition #77  @55  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #78  @55  RefTypeUse <Ivl:24>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #79  @55  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #80  @55  RefTypeUse <Ivl:25>  BB01 regmask=[r8] minReg=1 last fixed>
<RefPosition #81  @55  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #82  @55  RefTypeUse <Ivl:27>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #83  @56  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #84  @56  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #85  @56  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #86  @56  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #87  @56  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #88  @56  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #89  @56  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>

DefList: {  }
N057 (???,???) [000241] ------------              *  IL_OFFSET void   IL offset: 0x17 REG NA

DefList: {  }
N059 (  2, 10) [000026] ------------              *  CNS_INT   long   0x7ffc86100028 REG NA $1c1
Interval 28: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #90  @60  RefTypeDef <Ivl:28> CNS_INT BB01 regmask=[allInt] minReg=1>

DefList: { N059.t26. CNS_INT }
N061 (???,???) [000263] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #91  @61  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #92  @61  RefTypeUse <Ivl:28>  BB01 regmask=[rcx] minReg=1 last fixed>
Interval 29: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #93  @62  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #94  @62  RefTypeDef <Ivl:29> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>

DefList: { N061.t263. PUTARG_REG }
N063 (  1,  4) [000027] ------------              *  CNS_INT   int    215 REG NA $43
Interval 30: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #95  @64  RefTypeDef <Ivl:30> CNS_INT BB01 regmask=[allInt] minReg=1>

DefList: { N061.t263. PUTARG_REG; N063.t27. CNS_INT }
N065 (???,???) [000264] ------------              *  PUTARG_REG int    REG rdx
<RefPosition #96  @65  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #97  @65  RefTypeUse <Ivl:30>  BB01 regmask=[rdx] minReg=1 last fixed>
Interval 31: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #98  @66  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #99  @66  RefTypeDef <Ivl:31> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>

DefList: { N061.t263. PUTARG_REG; N065.t264. PUTARG_REG }
N067 ( 17, 21) [000028] H-CXG-------              *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE REG NA $301
<RefPosition #100 @67  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #101 @67  RefTypeUse <Ivl:29>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #102 @67  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #103 @67  RefTypeUse <Ivl:31>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #104 @68  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #105 @68  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #106 @68  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #107 @68  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #108 @68  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #109 @68  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #110 @68  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
Interval 32: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #111 @68  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #112 @68  RefTypeDef <Ivl:32> CALL BB01 regmask=[rax] minReg=1 fixed>

DefList: {  }
N069 (  2, 10) [000178] I-----------              *  CNS_INT(h) long   0xd1ffab1e static Fseq[FalseString] REG NA $104
Interval 33: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #113 @70  RefTypeDef <Ivl:33> CNS_INT BB01 regmask=[allInt] minReg=1>

DefList: { N069.t178. CNS_INT }
N071 (  4, 12) [000024] n---G-------              *  IND       ref    REG NA <l:$243, c:$14a>
<RefPosition #114 @71  RefTypeUse <Ivl:33>  BB01 regmask=[allInt] minReg=1 last>
Interval 34: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #115 @72  RefTypeDef <Ivl:34> IND BB01 regmask=[allInt] minReg=1>

DefList: { N071.t24. IND }
N073 ( 21, 33) [000088] DA-XG-------              *  STORE_LCL_VAR ref    V08 tmp6         d:2 NA REG NA
<RefPosition #116 @73  RefTypeUse <Ivl:34>  BB01 regmask=[allInt] minReg=1 last>
Assigning related <V08/L7> to <I34>
<RefPosition #117 @74  RefTypeDef <Ivl:7 V08> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N075 (???,???) [000242] ------------              *  IL_OFFSET void   IL offset: 0x17 REG NA

DefList: {  }
N077 (  2, 10) [000179] H-----------              *  CNS_INT(h) long   0xD1FFAB1E "AlwaysCompileMarkupFilesInSeparateDomain" REG NA $105
Interval 35: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #118 @78  RefTypeDef <Ivl:35> CNS_INT BB01 regmask=[allInt] minReg=1>

DefList: { N077.t179. CNS_INT }
N079 (  4, 12) [000180] #---G-------              *  IND       ref    REG NA $189
<RefPosition #119 @79  RefTypeUse <Ivl:35>  BB01 regmask=[allInt] minReg=1 last>
Interval 36: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #120 @80  RefTypeDef <Ivl:36> IND BB01 regmask=[allInt] minReg=1>

DefList: { N079.t180. IND }
N081 (???,???) [000265] ----G-------              *  PUTARG_REG ref    REG rdx
<RefPosition #121 @81  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #122 @81  RefTypeUse <Ivl:36>  BB01 regmask=[rdx] minReg=1 last fixed>
Interval 37: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #123 @82  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #124 @82  RefTypeDef <Ivl:37> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>

DefList: { N081.t265. PUTARG_REG }
N083 (  1,  1) [000022] ------------              *  LCL_VAR   ref    V04 tmp2         u:2 NA REG NA $183

DefList: { N081.t265. PUTARG_REG }
N085 (???,???) [000266] ------------              *  PUTARG_REG ref    REG rcx
<RefPosition #125 @85  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #126 @85  RefTypeUse <Ivl:3 V04> LCL_VAR BB01 regmask=[rcx] minReg=1 last fixed>
Setting putarg_reg as a pass-through of a non-last use lclVar
Interval 38: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #127 @86  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #128 @86  RefTypeDef <Ivl:38> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
Assigning related <V04/L3> to <I38>

DefList: { N081.t265. PUTARG_REG; N085.t266. PUTARG_REG }
N087 (  1,  1) [000076] ------------              *  LCL_VAR   ref    V08 tmp6         u:2 NA (last use) REG NA <l:$243, c:$14a>

DefList: { N081.t265. PUTARG_REG; N085.t266. PUTARG_REG }
N089 (???,???) [000267] ------------              *  PUTARG_REG ref    REG r8
<RefPosition #129 @89  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #130 @89  RefTypeUse <Ivl:7 V08> LCL_VAR BB01 regmask=[r8] minReg=1 last fixed>
Interval 39: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #131 @90  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #132 @90  RefTypeDef <Ivl:39> PUTARG_REG BB01 regmask=[r8] minReg=1 fixed>

DefList: { N081.t265. PUTARG_REG; N085.t266. PUTARG_REG; N089.t267. PUTARG_REG }
N091 (  1,  1) [000077] ------------              *  CNS_INT   int    2 REG NA $44
Interval 40: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #133 @92  RefTypeDef <Ivl:40> CNS_INT BB01 regmask=[allInt] minReg=1>

DefList: { N081.t265. PUTARG_REG; N085.t266. PUTARG_REG; N089.t267. PUTARG_REG; N091.t77. CNS_INT }
N093 (???,???) [000268] ------------              *  PUTARG_REG int    REG r9
<RefPosition #134 @93  RefTypeFixedReg <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #135 @93  RefTypeUse <Ivl:40>  BB01 regmask=[r9] minReg=1 last fixed>
Interval 41: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #136 @94  RefTypeFixedReg <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #137 @94  RefTypeDef <Ivl:41> PUTARG_REG BB01 regmask=[r9] minReg=1 fixed>

DefList: { N081.t265. PUTARG_REG; N085.t266. PUTARG_REG; N089.t267. PUTARG_REG; N093.t268. PUTARG_REG }
N095 ( 21, 25) [000078] --CXG-------              *  CALL      int    System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].TryInsert REG NA $283
<RefPosition #138 @95  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #139 @95  RefTypeUse <Ivl:37>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #140 @95  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #141 @95  RefTypeUse <Ivl:38>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #142 @95  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #143 @95  RefTypeUse <Ivl:39>  BB01 regmask=[r8] minReg=1 last fixed>
<RefPosition #144 @95  RefTypeFixedReg <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #145 @95  RefTypeUse <Ivl:41>  BB01 regmask=[r9] minReg=1 last fixed>
<RefPosition #146 @96  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #147 @96  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #148 @96  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #149 @96  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #150 @96  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #151 @96  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #152 @96  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
Interval 42: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #153 @96  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #154 @96  RefTypeDef <Ivl:42> CALL BB01 regmask=[rax] minReg=1 fixed>

DefList: { N095.t78. CALL }
N097 ( 25, 28) [000081] DA-XG-------              *  STORE_LCL_VAR int    V09 tmp7         d:2 NA REG NA
<RefPosition #155 @97  RefTypeUse <Ivl:42>  BB01 regmask=[allInt] minReg=1 last>
Assigning related <V09/L8> to <I42>
<RefPosition #156 @98  RefTypeDef <Ivl:8 V09> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N099 (???,???) [000243] ------------              *  IL_OFFSET void   IL offset: 0x17 REG NA

DefList: {  }
N101 (  2, 10) [000091] H-----------              *  CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL] REG NA $106
Interval 43: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #157 @102 RefTypeDef <Ivl:43> CNS_INT BB01 regmask=[allInt] minReg=1>

DefList: { N101.t91. CNS_INT }
N103 (  4, 12) [000092] #---G-------              *  IND       ref    REG NA $18a
<RefPosition #158 @103 RefTypeUse <Ivl:43>  BB01 regmask=[allInt] minReg=1 last>
Interval 44: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #159 @104 RefTypeDef <Ivl:44> IND BB01 regmask=[allInt] minReg=1>

DefList: { N103.t92. IND }
N105 (  4, 12) [000231] DA--G-------              *  STORE_LCL_VAR ref    V17 cse1         d:1 NA REG NA
<RefPosition #160 @105 RefTypeUse <Ivl:44>  BB01 regmask=[allInt] minReg=1 last>
Assigning related <V17/L14> to <I44>
<RefPosition #161 @106 RefTypeDef <Ivl:14 V17> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N107 (???,???) [000244] ------------              *  IL_OFFSET void   IL offset: 0x17 REG NA

DefList: {  }
N109 (  1,  1) [000234] ------------              *  LCL_VAR   ref    V17 cse1         u:1 NA (last use) REG NA $18a

DefList: {  }
N111 (  5,  4) [000108] DA--G-------              *  STORE_LCL_VAR ref    V11 tmp9         d:2 NA REG NA
<RefPosition #162 @111 RefTypeUse <Ivl:14 V17> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
Assigning related <V11/L9> to <V17/L14>
<RefPosition #163 @112 RefTypeDef <Ivl:9 V11> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N113 (???,???) [000245] ------------              *  IL_OFFSET void   IL offset: 0x17 REG NA

DefList: {  }
N115 (  3,  2) [000098] ------------              *  LCL_VAR   int    V09 tmp7         u:2 NA (last use) REG NA $283

DefList: {  }
N117 (  1,  1) [000099] -c----------              *  CNS_INT   int    0 REG NA $40
Contained
DefList: {  }
N119 (  5,  4) [000100] J------N----              *  NE        void   REG NA $340
<RefPosition #164 @119 RefTypeUse <Ivl:8 V09> LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N121 (  7,  6) [000101] ------------              *  JTRUE     void   REG NA



CHECKING LAST USES for BB01, liveout={V01 V04 V11}
==============================
use: {V00}
def: {V01 V03 V04 V07 V08 V09 V10 V11 V17}

NEW BLOCK BB02


Setting BB01 as the predecessor for determining incoming variable registers of BB02
<RefPosition #165 @123 RefTypeBB  BB02 regmask=[] minReg=1>

DefList: {  }
N125 (???,???) [000246] ------------              *  IL_OFFSET void   IL offset: 0x17 REG NA

DefList: {  }
N127 (  3,  2) [000102] ------------              *  LCL_VAR   ref    V11 tmp9         u:2 NA REG NA $18a

DefList: {  }
N129 (???,???) [000269] ------------              *  PUTARG_REG ref    REG rcx
<RefPosition #166 @129 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #167 @129 RefTypeUse <Ivl:9 V11> LCL_VAR BB02 regmask=[rcx] minReg=1 last fixed>
Setting putarg_reg as a pass-through of a non-last use lclVar
Interval 45: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #168 @130 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #169 @130 RefTypeDef <Ivl:45> PUTARG_REG BB02 regmask=[rcx] minReg=1 fixed>
Assigning related <V11/L9> to <I45>

DefList: { N129.t269. PUTARG_REG }
N131 (  3,  2) [000103] ------------              *  LCL_VAR   ref    V11 tmp9         u:2 NA (last use) REG NA $18a

DefList: { N129.t269. PUTARG_REG }
N133 (???,???) [000270] ------------              *  PUTARG_REG ref    REG rdx
<RefPosition #170 @133 RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #171 @133 RefTypeUse <Ivl:9 V11> LCL_VAR BB02 regmask=[rdx] minReg=1 last fixed>
Interval 46: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #172 @134 RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #173 @134 RefTypeDef <Ivl:46> PUTARG_REG BB02 regmask=[rdx] minReg=1 fixed>

DefList: { N129.t269. PUTARG_REG; N133.t270. PUTARG_REG }
N135 ( 20, 11) [000104] --CXG-------              *  CALL      void   System.Diagnostics.Debug.Fail REG NA $VN.Void
<RefPosition #174 @135 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #175 @135 RefTypeUse <Ivl:45>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #176 @135 RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #177 @135 RefTypeUse <Ivl:46>  BB02 regmask=[rdx] minReg=1 last fixed>
<RefPosition #178 @136 RefTypeKill <Reg:rax>  BB02 regmask=[rax] minReg=1>
<RefPosition #179 @136 RefTypeKill <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #180 @136 RefTypeKill <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #181 @136 RefTypeKill <Reg:r8 >  BB02 regmask=[r8] minReg=1>
<RefPosition #182 @136 RefTypeKill <Reg:r9 >  BB02 regmask=[r9] minReg=1>
<RefPosition #183 @136 RefTypeKill <Reg:r10>  BB02 regmask=[r10] minReg=1>
<RefPosition #184 @136 RefTypeKill <Reg:r11>  BB02 regmask=[r11] minReg=1>



CHECKING LAST USES for BB02, liveout={V01 V04}
==============================
use: {V11}
def: {}

NEW BLOCK BB03


Setting BB01 as the predecessor for determining incoming variable registers of BB03
<RefPosition #185 @137 RefTypeBB  BB03 regmask=[] minReg=1>

DefList: {  }
N139 ( 14,  5) [000110] --CXG-------              *  CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices REG NA $156
<RefPosition #186 @140 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #187 @140 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #188 @140 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #189 @140 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #190 @140 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1>
<RefPosition #191 @140 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1>
<RefPosition #192 @140 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1>
Interval 47: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #193 @140 RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #194 @140 RefTypeDef <Ivl:47> CALL BB03 regmask=[rax] minReg=1 fixed>

DefList: { N139.t110. CALL }
N141 ( 14,  5) [000188] DA-XG-----L-              *  STORE_LCL_VAR ref    V15 tmp13        d:2 NA REG NA
<RefPosition #195 @141 RefTypeUse <Ivl:47>  BB03 regmask=[allInt] minReg=1 last>
Assigning related <V15/L12> to <I47>
<RefPosition #196 @142 RefTypeDef <Ivl:12 V15> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1 last>

DefList: {  }
N143 (  1,  1) [000189] ------------              *  LCL_VAR   ref    V15 tmp13        u:2 NA (last use) REG NA $156

DefList: {  }
N145 (???,???) [000271] ------------              *  PUTARG_REG ref    REG rdx
<RefPosition #197 @145 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #198 @145 RefTypeUse <Ivl:12 V15> LCL_VAR BB03 regmask=[rdx] minReg=1 last fixed>
Interval 48: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #199 @146 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #200 @146 RefTypeDef <Ivl:48> PUTARG_REG BB03 regmask=[rdx] minReg=1 fixed>

DefList: { N145.t271. PUTARG_REG }
N147 (  1,  1) [000021] ------------              *  LCL_VAR   ref    V04 tmp2         u:2 NA (last use) REG NA $183

DefList: { N145.t271. PUTARG_REG }
N149 (???,???) [000272] ------------              *  PUTARG_REG ref    REG rcx
<RefPosition #201 @149 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #202 @149 RefTypeUse <Ivl:3 V04> LCL_VAR BB03 regmask=[rcx] minReg=1 last fixed>
Interval 49: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #203 @150 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #204 @150 RefTypeDef <Ivl:49> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>

DefList: { N145.t271. PUTARG_REG; N149.t272. PUTARG_REG }
N151 ( 33, 14) [000112] --CXG-------              *  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create REG NA $159
<RefPosition #205 @151 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #206 @151 RefTypeUse <Ivl:48>  BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #207 @151 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #208 @151 RefTypeUse <Ivl:49>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #209 @152 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #210 @152 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #211 @152 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #212 @152 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #213 @152 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1>
<RefPosition #214 @152 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1>
<RefPosition #215 @152 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1>
Interval 50: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #216 @152 RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #217 @152 RefTypeDef <Ivl:50> CALL BB03 regmask=[rax] minReg=1 fixed>

DefList: { N151.t112. CALL }
N153 ( 33, 14) [000034] DA-XG-------              *  STORE_LCL_VAR ref    V05 tmp3         d:2 NA REG NA
<RefPosition #218 @153 RefTypeUse <Ivl:50>  BB03 regmask=[allInt] minReg=1 last>
Assigning related <V05/L4> to <I50>
<RefPosition #219 @154 RefTypeDef <Ivl:4 V05> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1 last>

DefList: {  }
N155 (  1,  1) [000036] ------------              *  LCL_VAR   ref    V05 tmp3         u:2 NA REG NA $159

DefList: {  }
N157 (  2,  5) [000192] -c----------              *  LEA(b+136) byref  REG NA
Contained
DefList: {  }
N159 (  4,  7) [000118] ---XG-------              *  IND       ref    REG NA <l:$191, c:$190>
<RefPosition #220 @159 RefTypeUse <Ivl:4 V05> LCL_VAR BB03 regmask=[allInt] minReg=1 last>
Interval 51: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #221 @160 RefTypeDef <Ivl:51> IND BB03 regmask=[allInt] minReg=1>

DefList: { N159.t118. IND }
N161 (  4,  7) [000225] DA-XG-------              *  STORE_LCL_VAR ref    V16 cse0         d:1 NA REG NA
<RefPosition #222 @161 RefTypeUse <Ivl:51>  BB03 regmask=[allInt] minReg=1 last>
Assigning related <V16/L13> to <I51>
<RefPosition #223 @162 RefTypeDef <Ivl:13 V16> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1 last>

DefList: {  }
N163 (  1,  1) [000226] ------------              *  LCL_VAR   ref    V16 cse0         u:1 NA REG NA <l:$191, c:$190>

DefList: {  }
N165 (  5,  8) [000129] DA-XG-------              *  STORE_LCL_VAR ref    V12 tmp10        d:2 NA REG NA
<RefPosition #224 @165 RefTypeUse <Ivl:13 V16> LCL_VAR BB03 regmask=[allInt] minReg=1 last>
<RefPosition #225 @166 RefTypeDef <Ivl:10 V12> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1 last>

DefList: {  }
N167 (  1,  1) [000124] ------------              *  LCL_VAR   ref    V12 tmp10        u:2 NA (last use) REG NA <l:$18e, c:$15c>

DefList: {  }
N169 (  2,  2) [000194] -c----------              *  LEA(b+56) byref  REG NA
Contained
DefList: {  }
N171 (  1,  1) [000125] -c----------              *  CNS_INT   int    1 REG NA $46
Contained
DefList: {  }
N173 (???,???) [000247] -A-XG-------              *  STOREIND  bool   REG NA
<RefPosition #226 @173 RefTypeUse <Ivl:10 V12> LCL_VAR BB03 regmask=[allInt] minReg=1 last>

DefList: {  }
N175 (???,???) [000248] ------------              *  IL_OFFSET void   IL offset: 0x33 REG NA

DefList: {  }
N177 (  1,  1) [000228] ------------              *  LCL_VAR   ref    V16 cse0         u:1 NA REG NA <l:$18e, c:$15c>

DefList: {  }
N179 (  1,  3) [000143] DA--G-------              *  STORE_LCL_VAR ref    V13 tmp11        d:2 NA REG NA
<RefPosition #227 @179 RefTypeUse <Ivl:13 V16> LCL_VAR BB03 regmask=[allInt] minReg=1 last>
<RefPosition #228 @180 RefTypeDef <Ivl:11 V13> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1 last>

DefList: {  }
N181 (???,???) [000249] ------------              *  IL_OFFSET void   IL offset: 0x33 REG NA

DefList: {  }
N183 (  1,  1) [000138] ------------              *  LCL_VAR   ref    V13 tmp11        u:2 NA (last use) REG NA <l:$18e, c:$15e>

DefList: {  }
N185 (  2,  2) [000198] -c----------              *  LEA(b+57) byref  REG NA
Contained
DefList: {  }
N187 (  1,  1) [000139] -c----------              *  CNS_INT   int    1 REG NA $46
Contained
DefList: {  }
N189 (???,???) [000250] -A-XG-------              *  STOREIND  bool   REG NA
<RefPosition #229 @189 RefTypeUse <Ivl:11 V13> LCL_VAR BB03 regmask=[allInt] minReg=1 last>

DefList: {  }
N191 (???,???) [000251] ------------              *  IL_OFFSET void   IL offset: 0x3a REG NA

DefList: {  }
N193 (  1,  1) [000229] ------------              *  LCL_VAR   ref    V16 cse0         u:1 NA (last use) REG NA <l:$18e, c:$15c>

DefList: {  }
N195 (???,???) [000273] ------------              *  PUTARG_REG ref    REG rcx
<RefPosition #230 @195 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #231 @195 RefTypeUse <Ivl:13 V16> LCL_VAR BB03 regmask=[rcx] minReg=1 last fixed>
Interval 52: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #232 @196 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #233 @196 RefTypeDef <Ivl:52> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>

DefList: { N195.t273. PUTARG_REG }
N197 (  2, 10) [000201] H-----------              *  CNS_INT(h) long   0xD1FFAB1E "ilproj" REG NA $10b
Interval 53: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #234 @198 RefTypeDef <Ivl:53> CNS_INT BB03 regmask=[allInt] minReg=1>

DefList: { N195.t273. PUTARG_REG; N197.t201. CNS_INT }
N199 (  4, 12) [000202] #---G-------              *  IND       ref    REG NA $194
<RefPosition #235 @199 RefTypeUse <Ivl:53>  BB03 regmask=[allInt] minReg=1 last>
Interval 54: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #236 @200 RefTypeDef <Ivl:54> IND BB03 regmask=[allInt] minReg=1>

DefList: { N195.t273. PUTARG_REG; N199.t202. IND }
N201 (???,???) [000274] ----G-------              *  PUTARG_REG ref    REG rdx
<RefPosition #237 @201 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #238 @201 RefTypeUse <Ivl:54>  BB03 regmask=[rdx] minReg=1 last fixed>
Interval 55: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #239 @202 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #240 @202 RefTypeDef <Ivl:55> PUTARG_REG BB03 regmask=[rdx] minReg=1 fixed>

DefList: { N195.t273. PUTARG_REG; N201.t274. PUTARG_REG }
N203 (  2, 10) [000203] H-----------              *  CNS_INT(h) long   0xD1FFAB1E "IL" REG NA $10c
Interval 56: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #241 @204 RefTypeDef <Ivl:56> CNS_INT BB03 regmask=[allInt] minReg=1>

DefList: { N195.t273. PUTARG_REG; N201.t274. PUTARG_REG; N203.t203. CNS_INT }
N205 (  4, 12) [000204] #---G-------              *  IND       ref    REG NA $195
<RefPosition #242 @205 RefTypeUse <Ivl:56>  BB03 regmask=[allInt] minReg=1 last>
Interval 57: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #243 @206 RefTypeDef <Ivl:57> IND BB03 regmask=[allInt] minReg=1>

DefList: { N195.t273. PUTARG_REG; N201.t274. PUTARG_REG; N205.t204. IND }
N207 (???,???) [000275] ----G-------              *  PUTARG_REG ref    REG r8
<RefPosition #244 @207 RefTypeFixedReg <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #245 @207 RefTypeUse <Ivl:57>  BB03 regmask=[r8] minReg=1 last fixed>
Interval 58: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #246 @208 RefTypeFixedReg <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #247 @208 RefTypeDef <Ivl:58> PUTARG_REG BB03 regmask=[r8] minReg=1 fixed>

DefList: { N195.t273. PUTARG_REG; N201.t274. PUTARG_REG; N207.t275. PUTARG_REG }
N209 ( 23, 34) [000148] --CXG-------              *  CALL      void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage REG NA $VN.Void
<RefPosition #248 @209 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #249 @209 RefTypeUse <Ivl:52>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #250 @209 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #251 @209 RefTypeUse <Ivl:55>  BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #252 @209 RefTypeFixedReg <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #253 @209 RefTypeUse <Ivl:58>  BB03 regmask=[r8] minReg=1 last fixed>
<RefPosition #254 @210 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #255 @210 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #256 @210 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #257 @210 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #258 @210 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1>
<RefPosition #259 @210 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1>
<RefPosition #260 @210 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1>

DefList: {  }
N211 (???,???) [000252] ------------              *  IL_OFFSET void   IL offset: 0x4a REG NA

DefList: {  }
N213 (  1,  1) [000048] ------------              *  LCL_VAR   ref    V05 tmp3         u:2 NA REG NA $159

DefList: {  }
N215 (  2,  5) [000209] -c----------              *  LEA(b+136) byref  REG NA
Contained
DefList: {  }
N217 (  4,  7) [000150] n---GO------              *  IND       ref    REG NA <l:$199, c:$198>
<RefPosition #261 @217 RefTypeUse <Ivl:4 V05> LCL_VAR BB03 regmask=[allInt] minReg=1 last>
Interval 59: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #262 @218 RefTypeDef <Ivl:59> IND BB03 regmask=[allInt] minReg=1>

DefList: { N217.t150. IND }
N219 (???,???) [000276] ----GO------              *  PUTARG_REG ref    REG rcx
<RefPosition #263 @219 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #264 @219 RefTypeUse <Ivl:59>  BB03 regmask=[rcx] minReg=1 last fixed>
Interval 60: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #265 @220 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #266 @220 RefTypeDef <Ivl:60> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>

DefList: { N219.t276. PUTARG_REG }
N221 (  2, 10) [000210] H-----------              *  CNS_INT(h) long   0xD1FFAB1E "vcxproj" REG NA $10d
Interval 61: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #267 @222 RefTypeDef <Ivl:61> CNS_INT BB03 regmask=[allInt] minReg=1>

DefList: { N219.t276. PUTARG_REG; N221.t210. CNS_INT }
N223 (  4, 12) [000211] #---G-------              *  IND       ref    REG NA $19a
<RefPosition #268 @223 RefTypeUse <Ivl:61>  BB03 regmask=[allInt] minReg=1 last>
Interval 62: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #269 @224 RefTypeDef <Ivl:62> IND BB03 regmask=[allInt] minReg=1>

DefList: { N219.t276. PUTARG_REG; N223.t211. IND }
N225 (???,???) [000277] ----G-------              *  PUTARG_REG ref    REG rdx
<RefPosition #270 @225 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #271 @225 RefTypeUse <Ivl:62>  BB03 regmask=[rdx] minReg=1 last fixed>
Interval 63: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #272 @226 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #273 @226 RefTypeDef <Ivl:63> PUTARG_REG BB03 regmask=[rdx] minReg=1 fixed>

DefList: { N219.t276. PUTARG_REG; N225.t277. PUTARG_REG }
N227 (  2, 10) [000212] H-----------              *  CNS_INT(h) long   0xD1FFAB1E "C++" REG NA $10e
Interval 64: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #274 @228 RefTypeDef <Ivl:64> CNS_INT BB03 regmask=[allInt] minReg=1>

DefList: { N219.t276. PUTARG_REG; N225.t277. PUTARG_REG; N227.t212. CNS_INT }
N229 (  4, 12) [000213] #---G-------              *  IND       ref    REG NA $19b
<RefPosition #275 @229 RefTypeUse <Ivl:64>  BB03 regmask=[allInt] minReg=1 last>
Interval 65: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #276 @230 RefTypeDef <Ivl:65> IND BB03 regmask=[allInt] minReg=1>

DefList: { N219.t276. PUTARG_REG; N225.t277. PUTARG_REG; N229.t213. IND }
N231 (???,???) [000278] ----G-------              *  PUTARG_REG ref    REG r8
<RefPosition #277 @231 RefTypeFixedReg <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #278 @231 RefTypeUse <Ivl:65>  BB03 regmask=[r8] minReg=1 last fixed>
Interval 66: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #279 @232 RefTypeFixedReg <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #280 @232 RefTypeDef <Ivl:66> PUTARG_REG BB03 regmask=[r8] minReg=1 fixed>

DefList: { N219.t276. PUTARG_REG; N225.t277. PUTARG_REG; N231.t278. PUTARG_REG }
N233 ( 26, 40) [000153] --CXGO------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage REG NA $VN.Void
<RefPosition #281 @233 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #282 @233 RefTypeUse <Ivl:60>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #283 @233 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #284 @233 RefTypeUse <Ivl:63>  BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #285 @233 RefTypeFixedReg <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #286 @233 RefTypeUse <Ivl:66>  BB03 regmask=[r8] minReg=1 last fixed>
<RefPosition #287 @234 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #288 @234 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #289 @234 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #290 @234 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #291 @234 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1>
<RefPosition #292 @234 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1>
<RefPosition #293 @234 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1>

DefList: {  }
N235 (???,???) [000253] ------------              *  IL_OFFSET void   IL offset: 0x5a REG NA

DefList: {  }
N237 (  2, 10) [000055] H-----------              *  CNS_INT(h) long   0xd1ffab1e token REG NA $10f
Interval 67: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #294 @238 RefTypeDef <Ivl:67> CNS_INT BB03 regmask=[allInt] minReg=1>

DefList: { N237.t55. CNS_INT }
N239 (???,???) [000279] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #295 @239 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #296 @239 RefTypeUse <Ivl:67>  BB03 regmask=[rcx] minReg=1 last fixed>
Interval 68: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #297 @240 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #298 @240 RefTypeDef <Ivl:68> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>

DefList: { N239.t279. PUTARG_REG }
N241 ( 16, 16) [000056] --C---------              *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG NA $19c
<RefPosition #299 @241 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #300 @241 RefTypeUse <Ivl:68>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #301 @242 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #302 @242 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #303 @242 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #304 @242 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #305 @242 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1>
<RefPosition #306 @242 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1>
<RefPosition #307 @242 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1>
Interval 69: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #308 @242 RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #309 @242 RefTypeDef <Ivl:69> CALL BB03 regmask=[rax] minReg=1 fixed>

DefList: { N241.t56. CALL }
N243 ( 16, 16) [000058] DA----------              *  STORE_LCL_VAR ref    V06 tmp4         d:2 NA REG NA
<RefPosition #310 @243 RefTypeUse <Ivl:69>  BB03 regmask=[allInt] minReg=1 last>
Assigning related <V06/L5> to <I69>
<RefPosition #311 @244 RefTypeDef <Ivl:5 V06> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1 last>

DefList: {  }
N245 (  1,  1) [000059] ------------              *  LCL_VAR   ref    V06 tmp4         u:2 NA REG NA $19c

DefList: {  }
N247 (  2,  2) [000219] ------------              *  LEA(b+8)  byref  REG NA
<RefPosition #312 @247 RefTypeUse <Ivl:5 V06> LCL_VAR BB03 regmask=[allInt] minReg=1 last>
Interval 70: byref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #313 @248 RefTypeDef <Ivl:70> LEA BB03 regmask=[allInt] minReg=1>

DefList: { N247.t219. LEA }
N249 (  1,  1) [000158] ------------              *  LCL_VAR   ref    V01 loc0         u:2 NA (last use) REG NA $180

DefList: { N247.t219. LEA }
N251 (???,???) [000254] -A--GO------              *  STOREIND  ref    REG NA
<RefPosition #314 @251 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #315 @251 RefTypeUse <Ivl:70>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #316 @251 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #317 @251 RefTypeUse <Ivl:1 V01> LCL_VAR BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #318 @252 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #319 @252 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #320 @252 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #321 @252 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #322 @252 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1>
<RefPosition #323 @252 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1>
<RefPosition #324 @252 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1>
<RefPosition #325 @252 RefTypeKill <Reg:mm0>  BB03 regmask=[mm0] minReg=1>
<RefPosition #326 @252 RefTypeKill <Reg:mm1>  BB03 regmask=[mm1] minReg=1>
<RefPosition #327 @252 RefTypeKill <Reg:mm2>  BB03 regmask=[mm2] minReg=1>
<RefPosition #328 @252 RefTypeKill <Reg:mm3>  BB03 regmask=[mm3] minReg=1>
<RefPosition #329 @252 RefTypeKill <Reg:mm4>  BB03 regmask=[mm4] minReg=1>
<RefPosition #330 @252 RefTypeKill <Reg:mm5>  BB03 regmask=[mm5] minReg=1>

DefList: {  }
N253 (  1,  1) [000161] ------------              *  LCL_VAR   ref    V06 tmp4         u:2 NA REG NA $19c

DefList: {  }
N255 (  2,  2) [000221] -c----------              *  LEA(b+24) byref  REG NA
Contained
DefList: {  }
N257 (  2, 10) [000054] H-----------              *  CNS_INT(h) long   0xd1ffab1e ftn REG NA $111
Interval 71: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #331 @258 RefTypeDef <Ivl:71> CNS_INT BB03 regmask=[allInt] minReg=1>

DefList: { N257.t54. CNS_INT }
N259 (???,???) [000255] -A--GO------              *  STOREIND  long   REG NA
<RefPosition #332 @259 RefTypeUse <Ivl:5 V06> LCL_VAR BB03 regmask=[allInt] minReg=1 last>
<RefPosition #333 @259 RefTypeUse <Ivl:71>  BB03 regmask=[allInt] minReg=1 last>

DefList: {  }
N261 (???,???) [000256] ------------              *  IL_OFFSET void   IL offset: 0x67 REG NA

DefList: {  }
N263 (  1,  1) [000052] ------------              *  LCL_VAR   ref    V05 tmp3         u:2 NA REG NA $159

DefList: {  }
N265 (???,???) [000280] ------------              *  PUTARG_REG ref    REG rcx
<RefPosition #334 @265 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #335 @265 RefTypeUse <Ivl:4 V05> LCL_VAR BB03 regmask=[rcx] minReg=1 last fixed>
Setting putarg_reg as a pass-through of a non-last use lclVar
Interval 72: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #336 @266 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #337 @266 RefTypeDef <Ivl:72> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>
Assigning related <V05/L4> to <I72>

DefList: { N265.t280. PUTARG_REG }
N267 (  1,  1) [000061] ------------              *  LCL_VAR   ref    V06 tmp4         u:2 NA (last use) REG NA $19c

DefList: { N265.t280. PUTARG_REG }
N269 (???,???) [000281] ------------              *  PUTARG_REG ref    REG rdx
<RefPosition #338 @269 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #339 @269 RefTypeUse <Ivl:5 V06> LCL_VAR BB03 regmask=[rdx] minReg=1 last fixed>
Interval 73: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #340 @270 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #341 @270 RefTypeDef <Ivl:73> PUTARG_REG BB03 regmask=[rdx] minReg=1 fixed>

DefList: { N265.t280. PUTARG_REG; N269.t281. PUTARG_REG }
N271 ( 16, 10) [000062] --CXG-------              *  CALL      void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed REG NA $VN.Void
<RefPosition #342 @271 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #343 @271 RefTypeUse <Ivl:72>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #344 @271 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #345 @271 RefTypeUse <Ivl:73>  BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #346 @272 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #347 @272 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #348 @272 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #349 @272 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #350 @272 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1>
<RefPosition #351 @272 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1>
<RefPosition #352 @272 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1>

DefList: {  }
N273 (???,???) [000257] ------------              *  IL_OFFSET void   IL offset: 0x6c REG NA

DefList: {  }
N275 (  1,  1) [000035] ------------              *  LCL_VAR   ref    V05 tmp3         u:2 NA (last use) REG NA $159

DefList: {  }
N277 (  2,  2) [000063] ------------              *  RETURN    ref    REG NA $170
<RefPosition #353 @277 RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #354 @277 RefTypeUse <Ivl:4 V05> LCL_VAR BB03 regmask=[rax] minReg=1 last fixed>



CHECKING LAST USES for BB03, liveout={}
==============================
use: {V01 V04}
def: {V05 V06 V12 V13 V15 V16}

Linear scan intervals BEFORE VALIDATING INTERVALS:
Interval  0: (V00) ref RefPositions {#0@0 #27@27} physReg:rcx Preferences=[rbx rbp rsi rdi r12-r15]
Interval  1: (V01) ref RefPositions {#21@18 #22@23 #317@251} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  2: (V03) ref RefPositions {#19@12 #20@17} physReg:NA Preferences=[allInt] RelatedInterval <V01/L1>
Interval  3: (V04) ref RefPositions {#58@36 #65@45 #126@85 #202@149} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  4: (V05) ref RefPositions {#219@154 #220@159 #261@217 #335@265 #354@277} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  5: (V06) ref RefPositions {#311@244 #312@247 #332@259 #339@269} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  6: (V07) ref RefPositions {#63@42 #69@49} physReg:NA Preferences=[r8]
Interval  7: (V08) ref RefPositions {#117@74 #130@89} physReg:NA Preferences=[r8]
Interval  8: (V09) int RefPositions {#156@98 #164@119} physReg:NA Preferences=[allInt]
Interval  9: (V11) ref RefPositions {#163@112 #167@129 #171@133} physReg:NA Preferences=[rcx rdx]
Interval 10: (V12) ref RefPositions {#225@166 #226@173} physReg:NA Preferences=[allInt]
Interval 11: (V13) ref RefPositions {#228@180 #229@189} physReg:NA Preferences=[allInt]
Interval 12: (V15) ref RefPositions {#196@142 #198@145} physReg:NA Preferences=[rdx]
Interval 13: (V16) ref RefPositions {#223@162 #224@165 #227@179 #231@195} physReg:NA Preferences=[rcx]
Interval 14: (V17) ref RefPositions {#161@106 #162@111} physReg:NA Preferences=[allInt] RelatedInterval <V11/L9>
Interval 15: long (constant) RefPositions {#2@6 #4@7} physReg:NA Preferences=[rcx]
Interval 16: long RefPositions {#6@8 #8@9} physReg:NA Preferences=[rcx]
Interval 17: ref RefPositions {#17@10 #18@11} physReg:NA Preferences=[rax] RelatedInterval <V03/L2>
Interval 18: byref RefPositions {#23@24 #25@27} physReg:NA Preferences=[rcx]
Interval 19: long (constant) RefPositions {#41@30 #43@31} physReg:NA Preferences=[rcx]
Interval 20: long RefPositions {#45@32 #47@33} physReg:NA Preferences=[rcx]
Interval 21: ref RefPositions {#56@34 #57@35} physReg:NA Preferences=[rax] RelatedInterval <V04/L3>
Interval 22: long (constant) RefPositions {#59@38 #60@39} physReg:NA Preferences=[allInt]
Interval 23: ref RefPositions {#61@40 #62@41} physReg:NA Preferences=[allInt] RelatedInterval <V07/L6>
Interval 24: ref (specialPutArg) RefPositions {#67@46 #78@55} physReg:NA Preferences=[rcx] RelatedInterval <V04/L3>
Interval 25: ref RefPositions {#71@50 #80@55} physReg:NA Preferences=[r8]
Interval 26: int (constant) RefPositions {#72@52 #74@53} physReg:NA Preferences=[rdx]
Interval 27: int RefPositions {#76@54 #82@55} physReg:NA Preferences=[rdx]
Interval 28: long (constant) RefPositions {#90@60 #92@61} physReg:NA Preferences=[rcx]
Interval 29: long RefPositions {#94@62 #101@67} physReg:NA Preferences=[rcx]
Interval 30: int (constant) RefPositions {#95@64 #97@65} physReg:NA Preferences=[rdx]
Interval 31: int RefPositions {#99@66 #103@67} physReg:NA Preferences=[rdx]
Interval 32: long RefPositions {#112@68} physReg:NA Preferences=[rax]
Interval 33: long (constant) RefPositions {#113@70 #114@71} physReg:NA Preferences=[allInt]
Interval 34: ref RefPositions {#115@72 #116@73} physReg:NA Preferences=[allInt] RelatedInterval <V08/L7>
Interval 35: long (constant) RefPositions {#118@78 #119@79} physReg:NA Preferences=[allInt]
Interval 36: ref RefPositions {#120@80 #122@81} physReg:NA Preferences=[rdx]
Interval 37: ref RefPositions {#124@82 #139@95} physReg:NA Preferences=[rdx]
Interval 38: ref (specialPutArg) RefPositions {#128@86 #141@95} physReg:NA Preferences=[rcx] RelatedInterval <V04/L3>
Interval 39: ref RefPositions {#132@90 #143@95} physReg:NA Preferences=[r8]
Interval 40: int (constant) RefPositions {#133@92 #135@93} physReg:NA Preferences=[r9]
Interval 41: int RefPositions {#137@94 #145@95} physReg:NA Preferences=[r9]
Interval 42: int RefPositions {#154@96 #155@97} physReg:NA Preferences=[rax] RelatedInterval <V09/L8>
Interval 43: long (constant) RefPositions {#157@102 #158@103} physReg:NA Preferences=[allInt]
Interval 44: ref RefPositions {#159@104 #160@105} physReg:NA Preferences=[allInt] RelatedInterval <V17/L14>
Interval 45: ref (specialPutArg) RefPositions {#169@130 #175@135} physReg:NA Preferences=[rcx] RelatedInterval <V11/L9>
Interval 46: ref RefPositions {#173@134 #177@135} physReg:NA Preferences=[rdx]
Interval 47: ref RefPositions {#194@140 #195@141} physReg:NA Preferences=[rax] RelatedInterval <V15/L12>
Interval 48: ref RefPositions {#200@146 #206@151} physReg:NA Preferences=[rdx]
Interval 49: ref RefPositions {#204@150 #208@151} physReg:NA Preferences=[rcx]
Interval 50: ref RefPositions {#217@152 #218@153} physReg:NA Preferences=[rax] RelatedInterval <V05/L4>
Interval 51: ref RefPositions {#221@160 #222@161} physReg:NA Preferences=[allInt] RelatedInterval <V16/L13>
Interval 52: ref RefPositions {#233@196 #249@209} physReg:NA Preferences=[rcx]
Interval 53: long (constant) RefPositions {#234@198 #235@199} physReg:NA Preferences=[allInt]
Interval 54: ref RefPositions {#236@200 #238@201} physReg:NA Preferences=[rdx]
Interval 55: ref RefPositions {#240@202 #251@209} physReg:NA Preferences=[rdx]
Interval 56: long (constant) RefPositions {#241@204 #242@205} physReg:NA Preferences=[allInt]
Interval 57: ref RefPositions {#243@206 #245@207} physReg:NA Preferences=[r8]
Interval 58: ref RefPositions {#247@208 #253@209} physReg:NA Preferences=[r8]
Interval 59: ref RefPositions {#262@218 #264@219} physReg:NA Preferences=[rcx]
Interval 60: ref RefPositions {#266@220 #282@233} physReg:NA Preferences=[rcx]
Interval 61: long (constant) RefPositions {#267@222 #268@223} physReg:NA Preferences=[allInt]
Interval 62: ref RefPositions {#269@224 #271@225} physReg:NA Preferences=[rdx]
Interval 63: ref RefPositions {#273@226 #284@233} physReg:NA Preferences=[rdx]
Interval 64: long (constant) RefPositions {#274@228 #275@229} physReg:NA Preferences=[allInt]
Interval 65: ref RefPositions {#276@230 #278@231} physReg:NA Preferences=[r8]
Interval 66: ref RefPositions {#280@232 #286@233} physReg:NA Preferences=[r8]
Interval 67: long (constant) RefPositions {#294@238 #296@239} physReg:NA Preferences=[rcx]
Interval 68: long RefPositions {#298@240 #300@241} physReg:NA Preferences=[rcx]
Interval 69: ref RefPositions {#309@242 #310@243} physReg:NA Preferences=[rax] RelatedInterval <V06/L5>
Interval 70: byref RefPositions {#313@248 #315@251} physReg:NA Preferences=[rcx]
Interval 71: long (constant) RefPositions {#331@258 #333@259} physReg:NA Preferences=[allInt]
Interval 72: ref (specialPutArg) RefPositions {#337@266 #343@271} physReg:NA Preferences=[rcx] RelatedInterval <V05/L4>
Interval 73: ref RefPositions {#341@270 #345@271} physReg:NA Preferences=[rdx]

------------
REFPOSITIONS BEFORE VALIDATING INTERVALS: 
------------
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00>  BB00 regmask=[rcx] minReg=1 fixed regOptional>
<RefPosition #1   @1   RefTypeBB  BB01 regmask=[] minReg=1>
<RefPosition #2   @6   RefTypeDef <Ivl:15> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #3   @7   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #4   @7   RefTypeUse <Ivl:15>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #5   @8   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #6   @8   RefTypeDef <Ivl:16> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #7   @9   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #8   @9   RefTypeUse <Ivl:16>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #9   @10  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #10  @10  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #11  @10  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #12  @10  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #13  @10  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #14  @10  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #15  @10  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #16  @10  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #17  @10  RefTypeDef <Ivl:17> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #18  @11  RefTypeUse <Ivl:17>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #19  @12  RefTypeDef <Ivl:2 V03> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #20  @17  RefTypeUse <Ivl:2 V03> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #21  @18  RefTypeDef <Ivl:1 V01> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #22  @23  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #23  @24  RefTypeDef <Ivl:18> LEA BB01 regmask=[rcx] minReg=1>
<RefPosition #24  @27  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #25  @27  RefTypeUse <Ivl:18>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #26  @27  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #27  @27  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #28  @28  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #29  @28  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #30  @28  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #31  @28  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #32  @28  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #33  @28  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #34  @28  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #35  @28  RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1 last>
<RefPosition #36  @28  RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1 last>
<RefPosition #37  @28  RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1 last>
<RefPosition #38  @28  RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1 last>
<RefPosition #39  @28  RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1 last>
<RefPosition #40  @28  RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1 last>
<RefPosition #41  @30  RefTypeDef <Ivl:19> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #42  @31  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #43  @31  RefTypeUse <Ivl:19>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #44  @32  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #45  @32  RefTypeDef <Ivl:20> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #46  @33  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #47  @33  RefTypeUse <Ivl:20>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #48  @34  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #49  @34  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #50  @34  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #51  @34  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #52  @34  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #53  @34  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #54  @34  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #55  @34  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #56  @34  RefTypeDef <Ivl:21> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #57  @35  RefTypeUse <Ivl:21>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #58  @36  RefTypeDef <Ivl:3 V04> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #59  @38  RefTypeDef <Ivl:22> CNS_INT BB01 regmask=[allInt] minReg=1>
<RefPosition #60  @39  RefTypeUse <Ivl:22>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #61  @40  RefTypeDef <Ivl:23> IND BB01 regmask=[allInt] minReg=1>
<RefPosition #62  @41  RefTypeUse <Ivl:23>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #63  @42  RefTypeDef <Ivl:6 V07> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #64  @45  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #65  @45  RefTypeUse <Ivl:3 V04> LCL_VAR BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #66  @46  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #67  @46  RefTypeDef <Ivl:24> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #68  @49  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #69  @49  RefTypeUse <Ivl:6 V07> LCL_VAR BB01 regmask=[r8] minReg=1 last fixed>
<RefPosition #70  @50  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #71  @50  RefTypeDef <Ivl:25> PUTARG_REG BB01 regmask=[r8] minReg=1 fixed>
<RefPosition #72  @52  RefTypeDef <Ivl:26> CNS_INT BB01 regmask=[rdx] minReg=1>
<RefPosition #73  @53  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #74  @53  RefTypeUse <Ivl:26>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #75  @54  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #76  @54  RefTypeDef <Ivl:27> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>
<RefPosition #77  @55  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #78  @55  RefTypeUse <Ivl:24>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #79  @55  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #80  @55  RefTypeUse <Ivl:25>  BB01 regmask=[r8] minReg=1 last fixed>
<RefPosition #81  @55  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #82  @55  RefTypeUse <Ivl:27>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #83  @56  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #84  @56  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #85  @56  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #86  @56  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #87  @56  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #88  @56  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #89  @56  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #90  @60  RefTypeDef <Ivl:28> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #91  @61  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #92  @61  RefTypeUse <Ivl:28>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #93  @62  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #94  @62  RefTypeDef <Ivl:29> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #95  @64  RefTypeDef <Ivl:30> CNS_INT BB01 regmask=[rdx] minReg=1>
<RefPosition #96  @65  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #97  @65  RefTypeUse <Ivl:30>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #98  @66  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #99  @66  RefTypeDef <Ivl:31> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>
<RefPosition #100 @67  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #101 @67  RefTypeUse <Ivl:29>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #102 @67  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #103 @67  RefTypeUse <Ivl:31>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #104 @68  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #105 @68  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #106 @68  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #107 @68  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #108 @68  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #109 @68  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #110 @68  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #111 @68  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #112 @68  RefTypeDef <Ivl:32> CALL BB01 regmask=[rax] minReg=1 last fixed local>
<RefPosition #113 @70  RefTypeDef <Ivl:33> CNS_INT BB01 regmask=[allInt] minReg=1>
<RefPosition #114 @71  RefTypeUse <Ivl:33>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #115 @72  RefTypeDef <Ivl:34> IND BB01 regmask=[allInt] minReg=1>
<RefPosition #116 @73  RefTypeUse <Ivl:34>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #117 @74  RefTypeDef <Ivl:7 V08> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #118 @78  RefTypeDef <Ivl:35> CNS_INT BB01 regmask=[allInt] minReg=1>
<RefPosition #119 @79  RefTypeUse <Ivl:35>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #120 @80  RefTypeDef <Ivl:36> IND BB01 regmask=[rdx] minReg=1>
<RefPosition #121 @81  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #122 @81  RefTypeUse <Ivl:36>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #123 @82  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #124 @82  RefTypeDef <Ivl:37> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>
<RefPosition #125 @85  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #126 @85  RefTypeUse <Ivl:3 V04> LCL_VAR BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #127 @86  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #128 @86  RefTypeDef <Ivl:38> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #129 @89  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #130 @89  RefTypeUse <Ivl:7 V08> LCL_VAR BB01 regmask=[r8] minReg=1 last fixed>
<RefPosition #131 @90  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #132 @90  RefTypeDef <Ivl:39> PUTARG_REG BB01 regmask=[r8] minReg=1 fixed>
<RefPosition #133 @92  RefTypeDef <Ivl:40> CNS_INT BB01 regmask=[r9] minReg=1>
<RefPosition #134 @93  RefTypeFixedReg <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #135 @93  RefTypeUse <Ivl:40>  BB01 regmask=[r9] minReg=1 last fixed>
<RefPosition #136 @94  RefTypeFixedReg <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #137 @94  RefTypeDef <Ivl:41> PUTARG_REG BB01 regmask=[r9] minReg=1 fixed>
<RefPosition #138 @95  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #139 @95  RefTypeUse <Ivl:37>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #140 @95  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #141 @95  RefTypeUse <Ivl:38>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #142 @95  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #143 @95  RefTypeUse <Ivl:39>  BB01 regmask=[r8] minReg=1 last fixed>
<RefPosition #144 @95  RefTypeFixedReg <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #145 @95  RefTypeUse <Ivl:41>  BB01 regmask=[r9] minReg=1 last fixed>
<RefPosition #146 @96  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #147 @96  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #148 @96  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #149 @96  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #150 @96  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #151 @96  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #152 @96  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #153 @96  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #154 @96  RefTypeDef <Ivl:42> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #155 @97  RefTypeUse <Ivl:42>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #156 @98  RefTypeDef <Ivl:8 V09> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #157 @102 RefTypeDef <Ivl:43> CNS_INT BB01 regmask=[allInt] minReg=1>
<RefPosition #158 @103 RefTypeUse <Ivl:43>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #159 @104 RefTypeDef <Ivl:44> IND BB01 regmask=[allInt] minReg=1>
<RefPosition #160 @105 RefTypeUse <Ivl:44>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #161 @106 RefTypeDef <Ivl:14 V17> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #162 @111 RefTypeUse <Ivl:14 V17> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #163 @112 RefTypeDef <Ivl:9 V11> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #164 @119 RefTypeUse <Ivl:8 V09> LCL_VAR BB01 regmask=[allInt] minReg=1 last regOptional>
<RefPosition #165 @123 RefTypeBB  BB02 regmask=[] minReg=1>
<RefPosition #166 @129 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #167 @129 RefTypeUse <Ivl:9 V11> LCL_VAR BB02 regmask=[rcx] minReg=1 fixed>
<RefPosition #168 @130 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #169 @130 RefTypeDef <Ivl:45> PUTARG_REG BB02 regmask=[rcx] minReg=1 fixed>
<RefPosition #170 @133 RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #171 @133 RefTypeUse <Ivl:9 V11> LCL_VAR BB02 regmask=[rdx] minReg=1 last fixed>
<RefPosition #172 @134 RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #173 @134 RefTypeDef <Ivl:46> PUTARG_REG BB02 regmask=[rdx] minReg=1 fixed>
<RefPosition #174 @135 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #175 @135 RefTypeUse <Ivl:45>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #176 @135 RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #177 @135 RefTypeUse <Ivl:46>  BB02 regmask=[rdx] minReg=1 last fixed>
<RefPosition #178 @136 RefTypeKill <Reg:rax>  BB02 regmask=[rax] minReg=1 last>
<RefPosition #179 @136 RefTypeKill <Reg:rcx>  BB02 regmask=[rcx] minReg=1 last>
<RefPosition #180 @136 RefTypeKill <Reg:rdx>  BB02 regmask=[rdx] minReg=1 last>
<RefPosition #181 @136 RefTypeKill <Reg:r8 >  BB02 regmask=[r8] minReg=1 last>
<RefPosition #182 @136 RefTypeKill <Reg:r9 >  BB02 regmask=[r9] minReg=1 last>
<RefPosition #183 @136 RefTypeKill <Reg:r10>  BB02 regmask=[r10] minReg=1 last>
<RefPosition #184 @136 RefTypeKill <Reg:r11>  BB02 regmask=[r11] minReg=1 last>
<RefPosition #185 @137 RefTypeBB  BB03 regmask=[] minReg=1>
<RefPosition #186 @140 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #187 @140 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #188 @140 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #189 @140 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #190 @140 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #191 @140 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #192 @140 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #193 @140 RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #194 @140 RefTypeDef <Ivl:47> CALL BB03 regmask=[rax] minReg=1 fixed>
<RefPosition #195 @141 RefTypeUse <Ivl:47>  BB03 regmask=[allInt] minReg=1 last>
<RefPosition #196 @142 RefTypeDef <Ivl:12 V15> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #197 @145 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #198 @145 RefTypeUse <Ivl:12 V15> LCL_VAR BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #199 @146 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #200 @146 RefTypeDef <Ivl:48> PUTARG_REG BB03 regmask=[rdx] minReg=1 fixed>
<RefPosition #201 @149 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #202 @149 RefTypeUse <Ivl:3 V04> LCL_VAR BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #203 @150 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #204 @150 RefTypeDef <Ivl:49> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>
<RefPosition #205 @151 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #206 @151 RefTypeUse <Ivl:48>  BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #207 @151 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #208 @151 RefTypeUse <Ivl:49>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #209 @152 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #210 @152 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #211 @152 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #212 @152 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #213 @152 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #214 @152 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #215 @152 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #216 @152 RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #217 @152 RefTypeDef <Ivl:50> CALL BB03 regmask=[rax] minReg=1 fixed>
<RefPosition #218 @153 RefTypeUse <Ivl:50>  BB03 regmask=[allInt] minReg=1 last>
<RefPosition #219 @154 RefTypeDef <Ivl:4 V05> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #220 @159 RefTypeUse <Ivl:4 V05> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #221 @160 RefTypeDef <Ivl:51> IND BB03 regmask=[allInt] minReg=1>
<RefPosition #222 @161 RefTypeUse <Ivl:51>  BB03 regmask=[allInt] minReg=1 last>
<RefPosition #223 @162 RefTypeDef <Ivl:13 V16> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #224 @165 RefTypeUse <Ivl:13 V16> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #225 @166 RefTypeDef <Ivl:10 V12> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #226 @173 RefTypeUse <Ivl:10 V12> LCL_VAR BB03 regmask=[allInt] minReg=1 last>
<RefPosition #227 @179 RefTypeUse <Ivl:13 V16> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #228 @180 RefTypeDef <Ivl:11 V13> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #229 @189 RefTypeUse <Ivl:11 V13> LCL_VAR BB03 regmask=[allInt] minReg=1 last>
<RefPosition #230 @195 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #231 @195 RefTypeUse <Ivl:13 V16> LCL_VAR BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #232 @196 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #233 @196 RefTypeDef <Ivl:52> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>
<RefPosition #234 @198 RefTypeDef <Ivl:53> CNS_INT BB03 regmask=[allInt] minReg=1>
<RefPosition #235 @199 RefTypeUse <Ivl:53>  BB03 regmask=[allInt] minReg=1 last>
<RefPosition #236 @200 RefTypeDef <Ivl:54> IND BB03 regmask=[rdx] minReg=1>
<RefPosition #237 @201 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #238 @201 RefTypeUse <Ivl:54>  BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #239 @202 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #240 @202 RefTypeDef <Ivl:55> PUTARG_REG BB03 regmask=[rdx] minReg=1 fixed>
<RefPosition #241 @204 RefTypeDef <Ivl:56> CNS_INT BB03 regmask=[allInt] minReg=1>
<RefPosition #242 @205 RefTypeUse <Ivl:56>  BB03 regmask=[allInt] minReg=1 last>
<RefPosition #243 @206 RefTypeDef <Ivl:57> IND BB03 regmask=[r8] minReg=1>
<RefPosition #244 @207 RefTypeFixedReg <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #245 @207 RefTypeUse <Ivl:57>  BB03 regmask=[r8] minReg=1 last fixed>
<RefPosition #246 @208 RefTypeFixedReg <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #247 @208 RefTypeDef <Ivl:58> PUTARG_REG BB03 regmask=[r8] minReg=1 fixed>
<RefPosition #248 @209 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #249 @209 RefTypeUse <Ivl:52>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #250 @209 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #251 @209 RefTypeUse <Ivl:55>  BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #252 @209 RefTypeFixedReg <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #253 @209 RefTypeUse <Ivl:58>  BB03 regmask=[r8] minReg=1 last fixed>
<RefPosition #254 @210 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #255 @210 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #256 @210 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #257 @210 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #258 @210 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #259 @210 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #260 @210 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #261 @217 RefTypeUse <Ivl:4 V05> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #262 @218 RefTypeDef <Ivl:59> IND BB03 regmask=[rcx] minReg=1>
<RefPosition #263 @219 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #264 @219 RefTypeUse <Ivl:59>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #265 @220 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #266 @220 RefTypeDef <Ivl:60> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>
<RefPosition #267 @222 RefTypeDef <Ivl:61> CNS_INT BB03 regmask=[allInt] minReg=1>
<RefPosition #268 @223 RefTypeUse <Ivl:61>  BB03 regmask=[allInt] minReg=1 last>
<RefPosition #269 @224 RefTypeDef <Ivl:62> IND BB03 regmask=[rdx] minReg=1>
<RefPosition #270 @225 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #271 @225 RefTypeUse <Ivl:62>  BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #272 @226 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #273 @226 RefTypeDef <Ivl:63> PUTARG_REG BB03 regmask=[rdx] minReg=1 fixed>
<RefPosition #274 @228 RefTypeDef <Ivl:64> CNS_INT BB03 regmask=[allInt] minReg=1>
<RefPosition #275 @229 RefTypeUse <Ivl:64>  BB03 regmask=[allInt] minReg=1 last>
<RefPosition #276 @230 RefTypeDef <Ivl:65> IND BB03 regmask=[r8] minReg=1>
<RefPosition #277 @231 RefTypeFixedReg <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #278 @231 RefTypeUse <Ivl:65>  BB03 regmask=[r8] minReg=1 last fixed>
<RefPosition #279 @232 RefTypeFixedReg <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #280 @232 RefTypeDef <Ivl:66> PUTARG_REG BB03 regmask=[r8] minReg=1 fixed>
<RefPosition #281 @233 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #282 @233 RefTypeUse <Ivl:60>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #283 @233 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #284 @233 RefTypeUse <Ivl:63>  BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #285 @233 RefTypeFixedReg <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #286 @233 RefTypeUse <Ivl:66>  BB03 regmask=[r8] minReg=1 last fixed>
<RefPosition #287 @234 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #288 @234 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #289 @234 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #290 @234 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #291 @234 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #292 @234 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #293 @234 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #294 @238 RefTypeDef <Ivl:67> CNS_INT BB03 regmask=[rcx] minReg=1>
<RefPosition #295 @239 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #296 @239 RefTypeUse <Ivl:67>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #297 @240 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #298 @240 RefTypeDef <Ivl:68> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>
<RefPosition #299 @241 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #300 @241 RefTypeUse <Ivl:68>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #301 @242 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #302 @242 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #303 @242 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #304 @242 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #305 @242 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #306 @242 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #307 @242 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #308 @242 RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #309 @242 RefTypeDef <Ivl:69> CALL BB03 regmask=[rax] minReg=1 fixed>
<RefPosition #310 @243 RefTypeUse <Ivl:69>  BB03 regmask=[allInt] minReg=1 last>
<RefPosition #311 @244 RefTypeDef <Ivl:5 V06> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #312 @247 RefTypeUse <Ivl:5 V06> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #313 @248 RefTypeDef <Ivl:70> LEA BB03 regmask=[rcx] minReg=1>
<RefPosition #314 @251 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #315 @251 RefTypeUse <Ivl:70>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #316 @251 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #317 @251 RefTypeUse <Ivl:1 V01> LCL_VAR BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #318 @252 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #319 @252 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #320 @252 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #321 @252 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #322 @252 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #323 @252 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #324 @252 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #325 @252 RefTypeKill <Reg:mm0>  BB03 regmask=[mm0] minReg=1 last>
<RefPosition #326 @252 RefTypeKill <Reg:mm1>  BB03 regmask=[mm1] minReg=1 last>
<RefPosition #327 @252 RefTypeKill <Reg:mm2>  BB03 regmask=[mm2] minReg=1 last>
<RefPosition #328 @252 RefTypeKill <Reg:mm3>  BB03 regmask=[mm3] minReg=1 last>
<RefPosition #329 @252 RefTypeKill <Reg:mm4>  BB03 regmask=[mm4] minReg=1 last>
<RefPosition #330 @252 RefTypeKill <Reg:mm5>  BB03 regmask=[mm5] minReg=1 last>
<RefPosition #331 @258 RefTypeDef <Ivl:71> CNS_INT BB03 regmask=[allInt] minReg=1>
<RefPosition #332 @259 RefTypeUse <Ivl:5 V06> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #333 @259 RefTypeUse <Ivl:71>  BB03 regmask=[allInt] minReg=1 last>
<RefPosition #334 @265 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #335 @265 RefTypeUse <Ivl:4 V05> LCL_VAR BB03 regmask=[rcx] minReg=1 fixed>
<RefPosition #336 @266 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #337 @266 RefTypeDef <Ivl:72> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>
<RefPosition #338 @269 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #339 @269 RefTypeUse <Ivl:5 V06> LCL_VAR BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #340 @270 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #341 @270 RefTypeDef <Ivl:73> PUTARG_REG BB03 regmask=[rdx] minReg=1 fixed>
<RefPosition #342 @271 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #343 @271 RefTypeUse <Ivl:72>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #344 @271 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #345 @271 RefTypeUse <Ivl:73>  BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #346 @272 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #347 @272 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #348 @272 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #349 @272 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #350 @272 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #351 @272 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #352 @272 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #353 @277 RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #354 @277 RefTypeUse <Ivl:4 V05> LCL_VAR BB03 regmask=[rax] minReg=1 last fixed>
-----------------
<RefPosition #219 @154 RefTypeDef <Ivl:4 V05> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #220 @159 RefTypeUse <Ivl:4 V05> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #261 @217 RefTypeUse <Ivl:4 V05> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #335 @265 RefTypeUse <Ivl:4 V05> LCL_VAR BB03 regmask=[rcx] minReg=1 fixed>
<RefPosition #354 @277 RefTypeUse <Ivl:4 V05> LCL_VAR BB03 regmask=[rax] minReg=1 last fixed>
-----------------
<RefPosition #58  @36  RefTypeDef <Ivl:3 V04> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #65  @45  RefTypeUse <Ivl:3 V04> LCL_VAR BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #126 @85  RefTypeUse <Ivl:3 V04> LCL_VAR BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #202 @149 RefTypeUse <Ivl:3 V04> LCL_VAR BB03 regmask=[rcx] minReg=1 last fixed>
-----------------
<RefPosition #311 @244 RefTypeDef <Ivl:5 V06> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #312 @247 RefTypeUse <Ivl:5 V06> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #332 @259 RefTypeUse <Ivl:5 V06> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #339 @269 RefTypeUse <Ivl:5 V06> LCL_VAR BB03 regmask=[rdx] minReg=1 last fixed>
-----------------
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00>  BB00 regmask=[rcx] minReg=1 fixed regOptional>
<RefPosition #27  @27  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
-----------------
<RefPosition #223 @162 RefTypeDef <Ivl:13 V16> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #224 @165 RefTypeUse <Ivl:13 V16> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #227 @179 RefTypeUse <Ivl:13 V16> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #231 @195 RefTypeUse <Ivl:13 V16> LCL_VAR BB03 regmask=[rcx] minReg=1 last fixed>
-----------------
<RefPosition #19  @12  RefTypeDef <Ivl:2 V03> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #20  @17  RefTypeUse <Ivl:2 V03> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
-----------------
<RefPosition #63  @42  RefTypeDef <Ivl:6 V07> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #69  @49  RefTypeUse <Ivl:6 V07> LCL_VAR BB01 regmask=[r8] minReg=1 last fixed>
-----------------
<RefPosition #117 @74  RefTypeDef <Ivl:7 V08> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #130 @89  RefTypeUse <Ivl:7 V08> LCL_VAR BB01 regmask=[r8] minReg=1 last fixed>
-----------------
<RefPosition #225 @166 RefTypeDef <Ivl:10 V12> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #226 @173 RefTypeUse <Ivl:10 V12> LCL_VAR BB03 regmask=[allInt] minReg=1 last>
-----------------
<RefPosition #228 @180 RefTypeDef <Ivl:11 V13> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #229 @189 RefTypeUse <Ivl:11 V13> LCL_VAR BB03 regmask=[allInt] minReg=1 last>
-----------------
<RefPosition #196 @142 RefTypeDef <Ivl:12 V15> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #198 @145 RefTypeUse <Ivl:12 V15> LCL_VAR BB03 regmask=[rdx] minReg=1 last fixed>
-----------------
<RefPosition #21  @18  RefTypeDef <Ivl:1 V01> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #22  @23  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #317 @251 RefTypeUse <Ivl:1 V01> LCL_VAR BB03 regmask=[rdx] minReg=1 last fixed>
-----------------
<RefPosition #163 @112 RefTypeDef <Ivl:9 V11> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #167 @129 RefTypeUse <Ivl:9 V11> LCL_VAR BB02 regmask=[rcx] minReg=1 fixed>
<RefPosition #171 @133 RefTypeUse <Ivl:9 V11> LCL_VAR BB02 regmask=[rdx] minReg=1 last fixed>
-----------------
<RefPosition #161 @106 RefTypeDef <Ivl:14 V17> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #162 @111 RefTypeUse <Ivl:14 V17> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
-----------------
<RefPosition #156 @98  RefTypeDef <Ivl:8 V09> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #164 @119 RefTypeUse <Ivl:8 V09> LCL_VAR BB01 regmask=[allInt] minReg=1 last regOptional>
TUPLE STYLE DUMP WITH REF POSITIONS
Incoming Parameters:  V00
BB01 [000..06D) -> BB03 (cond), preds={} succs={BB02,BB03}
=====
  N003.                    IL_OFFSET IL offset: 0x0
  N005.                    CNS_INT(h) 0xd1ffab1e method
        Def:<I15>(#2)
  N007.                    PUTARG_REG
                               Use:<I15>(#4) Fixed:rcx(#3) *
        Def:<I16>(#6) rcx
  N009.                    CALL help
                               Use:<I16>(#8) Fixed:rcx(#7) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I17>(#17) rax Pref:<V03/L2>
  N011.                    V03(L2)
                               Use:<I17>(#18) *
        Def:<V03/L2>(#19) Pref:<V01/L1>
  N013.                    IL_OFFSET IL offset: 0x5
  N015.                    V03(L2)
  N017.                    V01(L1)
                               Use:<V03/L2>(#20) *
        Def:<V01/L1>(#21)
  N019.                    IL_OFFSET IL offset: 0x6
  N021.                    V01(L1)
  N023.                    LEA(b+8) 
                               Use:<V01/L1>(#22)
        Def:<I18>(#23)
  N025.                    V00(L0)
  N027.                    STOREIND 
                               Use:<I18>(#25) Fixed:rcx(#24) *
                               Use:<V00/L0>(#27) Fixed:rdx(#26) *
        Kill: rax rcx rdx r8 r9 r10 r11 mm0 mm1 mm2 mm3 mm4 mm5 
  N029.                    CNS_INT(h) 0xd1ffab1e token
        Def:<I19>(#41)
  N031.                    PUTARG_REG
                               Use:<I19>(#43) Fixed:rcx(#42) *
        Def:<I20>(#45) rcx
  N033.                    CALL help
                               Use:<I20>(#47) Fixed:rcx(#46) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I21>(#56) rax Pref:<V04/L3>
  N035.                    V04(L3)
                               Use:<I21>(#57) *
        Def:<V04/L3>(#58)
  N037.                    CNS_INT(h) 0xd1ffab1e static Fseq[Instance]
        Def:<I22>(#59)
  N039.                    IND      
                               Use:<I22>(#60) *
        Def:<I23>(#61) Pref:<V07/L6>
  N041.                    V07(L6)
                               Use:<I23>(#62) *
        Def:<V07/L6>(#63)
  N043.                    V04(L3)
  N045.                    PUTARG_REG
                               Use:<V04/L3>(#65) Fixed:rcx(#64)
        Def:<I24>(#67) rcx Pref:<V04/L3>
  N047.                    V07(L6)
  N049.                    PUTARG_REG
                               Use:<V07/L6>(#69) Fixed:r8(#68) *
        Def:<I25>(#71) r8
  N051.                    CNS_INT   0
        Def:<I26>(#72)
  N053.                    PUTARG_REG
                               Use:<I26>(#74) Fixed:rdx(#73) *
        Def:<I27>(#76) rdx
  N055.                    CALL     
                               Use:<I24>(#78) Fixed:rcx(#77) *
                               Use:<I25>(#80) Fixed:r8(#79) *
                               Use:<I27>(#82) Fixed:rdx(#81) *
        Kill: rax rcx rdx r8 r9 r10 r11 
  N057.                    IL_OFFSET IL offset: 0x17
  N059.                    CNS_INT   0x7ffc86100028
        Def:<I28>(#90)
  N061.                    PUTARG_REG
                               Use:<I28>(#92) Fixed:rcx(#91) *
        Def:<I29>(#94) rcx
  N063.                    CNS_INT   215
        Def:<I30>(#95)
  N065.                    PUTARG_REG
                               Use:<I30>(#97) Fixed:rdx(#96) *
        Def:<I31>(#99) rdx
  N067.                    CALL help
                               Use:<I29>(#101) Fixed:rcx(#100) *
                               Use:<I31>(#103) Fixed:rdx(#102) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I32>(#112) rax LocalDefUse *
  N069.                    CNS_INT(h) 0xd1ffab1e static Fseq[FalseString]
        Def:<I33>(#113)
  N071.                    IND      
                               Use:<I33>(#114) *
        Def:<I34>(#115) Pref:<V08/L7>
  N073.                    V08(L7)
                               Use:<I34>(#116) *
        Def:<V08/L7>(#117)
  N075.                    IL_OFFSET IL offset: 0x17
  N077.                    CNS_INT(h) 0xD1FFAB1E "AlwaysCompileMarkupFilesInSeparateDomain"
        Def:<I35>(#118)
  N079.                    IND      
                               Use:<I35>(#119) *
        Def:<I36>(#120)
  N081.                    PUTARG_REG
                               Use:<I36>(#122) Fixed:rdx(#121) *
        Def:<I37>(#124) rdx
  N083.                    V04(L3)
  N085.                    PUTARG_REG
                               Use:<V04/L3>(#126) Fixed:rcx(#125)
        Def:<I38>(#128) rcx Pref:<V04/L3>
  N087.                    V08(L7)
  N089.                    PUTARG_REG
                               Use:<V08/L7>(#130) Fixed:r8(#129) *
        Def:<I39>(#132) r8
  N091.                    CNS_INT   2
        Def:<I40>(#133)
  N093.                    PUTARG_REG
                               Use:<I40>(#135) Fixed:r9(#134) *
        Def:<I41>(#137) r9
  N095.                    CALL     
                               Use:<I37>(#139) Fixed:rdx(#138) *
                               Use:<I38>(#141) Fixed:rcx(#140) *
                               Use:<I39>(#143) Fixed:r8(#142) *
                               Use:<I41>(#145) Fixed:r9(#144) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I42>(#154) rax Pref:<V09/L8>
  N097.                    V09(L8)
                               Use:<I42>(#155) *
        Def:<V09/L8>(#156)
  N099.                    IL_OFFSET IL offset: 0x17
  N101.                    CNS_INT(h) 0xD1FFAB1E [ICON_STR_HDL]
        Def:<I43>(#157)
  N103.                    IND      
                               Use:<I43>(#158) *
        Def:<I44>(#159) Pref:<V17/L14>
  N105.                    V17(L14)
                               Use:<I44>(#160) *
        Def:<V17/L14>(#161) Pref:<V11/L9>
  N107.                    IL_OFFSET IL offset: 0x17
  N109.                    V17(L14)
  N111.                    V11(L9)
                               Use:<V17/L14>(#162) *
        Def:<V11/L9>(#163)
  N113.                    IL_OFFSET IL offset: 0x17
  N115.                    V09(L8)
  N117.                    CNS_INT   0
  N119.                    NE       
                               Use:<V09/L8>(#164) *
  N121.                    JTRUE    

BB02 [017..018), preds={BB01} succs={BB03}
=====
  N125.                    IL_OFFSET IL offset: 0x17
  N127.                    V11(L9)
  N129.                    PUTARG_REG
                               Use:<V11/L9>(#167) Fixed:rcx(#166)
        Def:<I45>(#169) rcx Pref:<V11/L9>
  N131.                    V11(L9)
  N133.                    PUTARG_REG
                               Use:<V11/L9>(#171) Fixed:rdx(#170) *
        Def:<I46>(#173) rdx
  N135.                    CALL     
                               Use:<I45>(#175) Fixed:rcx(#174) *
                               Use:<I46>(#177) Fixed:rdx(#176) *
        Kill: rax rcx rdx r8 r9 r10 r11 

BB03 [000..018) (return), preds={BB01,BB02} succs={}
=====
  N139.                    CALL     
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I47>(#194) rax Pref:<V15/L12>
  N141.                    V15(L12)
                               Use:<I47>(#195) *
        Def:<V15/L12>(#196)
  N143.                    V15(L12)
  N145.                    PUTARG_REG
                               Use:<V15/L12>(#198) Fixed:rdx(#197) *
        Def:<I48>(#200) rdx
  N147.                    V04(L3)
  N149.                    PUTARG_REG
                               Use:<V04/L3>(#202) Fixed:rcx(#201) *
        Def:<I49>(#204) rcx
  N151.                    CALL     
                               Use:<I48>(#206) Fixed:rdx(#205) *
                               Use:<I49>(#208) Fixed:rcx(#207) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I50>(#217) rax Pref:<V05/L4>
  N153.                    V05(L4)
                               Use:<I50>(#218) *
        Def:<V05/L4>(#219)
  N155.                    V05(L4)
  N157.                    LEA(b+136)
  N159.                    IND      
                               Use:<V05/L4>(#220)
        Def:<I51>(#221) Pref:<V16/L13>
  N161.                    V16(L13)
                               Use:<I51>(#222) *
        Def:<V16/L13>(#223)
  N163.                    V16(L13)
  N165.                    V12(L10)
                               Use:<V16/L13>(#224)
        Def:<V12/L10>(#225)
  N167.                    V12(L10)
  N169.                    LEA(b+56)
  N171.                    CNS_INT   1
  N173.                    STOREIND 
                               Use:<V12/L10>(#226) *
  N175.                    IL_OFFSET IL offset: 0x33
  N177.                    V16(L13)
  N179.                    V13(L11)
                               Use:<V16/L13>(#227)
        Def:<V13/L11>(#228)
  N181.                    IL_OFFSET IL offset: 0x33
  N183.                    V13(L11)
  N185.                    LEA(b+57)
  N187.                    CNS_INT   1
  N189.                    STOREIND 
                               Use:<V13/L11>(#229) *
  N191.                    IL_OFFSET IL offset: 0x3a
  N193.                    V16(L13)
  N195.                    PUTARG_REG
                               Use:<V16/L13>(#231) Fixed:rcx(#230) *
        Def:<I52>(#233) rcx
  N197.                    CNS_INT(h) 0xD1FFAB1E "ilproj"
        Def:<I53>(#234)
  N199.                    IND      
                               Use:<I53>(#235) *
        Def:<I54>(#236)
  N201.                    PUTARG_REG
                               Use:<I54>(#238) Fixed:rdx(#237) *
        Def:<I55>(#240) rdx
  N203.                    CNS_INT(h) 0xD1FFAB1E "IL"
        Def:<I56>(#241)
  N205.                    IND      
                               Use:<I56>(#242) *
        Def:<I57>(#243)
  N207.                    PUTARG_REG
                               Use:<I57>(#245) Fixed:r8(#244) *
        Def:<I58>(#247) r8
  N209.                    CALL     
                               Use:<I52>(#249) Fixed:rcx(#248) *
                               Use:<I55>(#251) Fixed:rdx(#250) *
                               Use:<I58>(#253) Fixed:r8(#252) *
        Kill: rax rcx rdx r8 r9 r10 r11 
  N211.                    IL_OFFSET IL offset: 0x4a
  N213.                    V05(L4)
  N215.                    LEA(b+136)
  N217.                    IND      
                               Use:<V05/L4>(#261)
        Def:<I59>(#262)
  N219.                    PUTARG_REG
                               Use:<I59>(#264) Fixed:rcx(#263) *
        Def:<I60>(#266) rcx
  N221.                    CNS_INT(h) 0xD1FFAB1E "vcxproj"
        Def:<I61>(#267)
  N223.                    IND      
                               Use:<I61>(#268) *
        Def:<I62>(#269)
  N225.                    PUTARG_REG
                               Use:<I62>(#271) Fixed:rdx(#270) *
        Def:<I63>(#273) rdx
  N227.                    CNS_INT(h) 0xD1FFAB1E "C++"
        Def:<I64>(#274)
  N229.                    IND      
                               Use:<I64>(#275) *
        Def:<I65>(#276)
  N231.                    PUTARG_REG
                               Use:<I65>(#278) Fixed:r8(#277) *
        Def:<I66>(#280) r8
  N233.                    CALL nullcheck
                               Use:<I60>(#282) Fixed:rcx(#281) *
                               Use:<I63>(#284) Fixed:rdx(#283) *
                               Use:<I66>(#286) Fixed:r8(#285) *
        Kill: rax rcx rdx r8 r9 r10 r11 
  N235.                    IL_OFFSET IL offset: 0x5a
  N237.                    CNS_INT(h) 0xd1ffab1e token
        Def:<I67>(#294)
  N239.                    PUTARG_REG
                               Use:<I67>(#296) Fixed:rcx(#295) *
        Def:<I68>(#298) rcx
  N241.                    CALL help
                               Use:<I68>(#300) Fixed:rcx(#299) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I69>(#309) rax Pref:<V06/L5>
  N243.                    V06(L5)
                               Use:<I69>(#310) *
        Def:<V06/L5>(#311)
  N245.                    V06(L5)
  N247.                    LEA(b+8) 
                               Use:<V06/L5>(#312)
        Def:<I70>(#313)
  N249.                    V01(L1)
  N251.                    STOREIND 
                               Use:<I70>(#315) Fixed:rcx(#314) *
                               Use:<V01/L1>(#317) Fixed:rdx(#316) *
        Kill: rax rcx rdx r8 r9 r10 r11 mm0 mm1 mm2 mm3 mm4 mm5 
  N253.                    V06(L5)
  N255.                    LEA(b+24)
  N257.                    CNS_INT(h) 0xd1ffab1e ftn
        Def:<I71>(#331)
  N259.                    STOREIND 
                               Use:<V06/L5>(#332)
                               Use:<I71>(#333) *
  N261.                    IL_OFFSET IL offset: 0x67
  N263.                    V05(L4)
  N265.                    PUTARG_REG
                               Use:<V05/L4>(#335) Fixed:rcx(#334)
        Def:<I72>(#337) rcx Pref:<V05/L4>
  N267.                    V06(L5)
  N269.                    PUTARG_REG
                               Use:<V06/L5>(#339) Fixed:rdx(#338) *
        Def:<I73>(#341) rdx
  N271.                    CALL     
                               Use:<I72>(#343) Fixed:rcx(#342) *
                               Use:<I73>(#345) Fixed:rdx(#344) *
        Kill: rax rcx rdx r8 r9 r10 r11 
  N273.                    IL_OFFSET IL offset: 0x6c
  N275.                    V05(L4)
  N277.                    RETURN   
                               Use:<V05/L4>(#354) Fixed:rax(#353) *




Linear scan intervals after buildIntervals:
Interval  0: (V00) ref RefPositions {#0@0 #27@27} physReg:rcx Preferences=[rbx rbp rsi rdi r12-r15]
Interval  1: (V01) ref RefPositions {#21@18 #22@23 #317@251} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  2: (V03) ref RefPositions {#19@12 #20@17} physReg:NA Preferences=[allInt] RelatedInterval <V01/L1>
Interval  3: (V04) ref RefPositions {#58@36 #65@45 #126@85 #202@149} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  4: (V05) ref RefPositions {#219@154 #220@159 #261@217 #335@265 #354@277} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  5: (V06) ref RefPositions {#311@244 #312@247 #332@259 #339@269} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  6: (V07) ref RefPositions {#63@42 #69@49} physReg:NA Preferences=[r8]
Interval  7: (V08) ref RefPositions {#117@74 #130@89} physReg:NA Preferences=[r8]
Interval  8: (V09) int RefPositions {#156@98 #164@119} physReg:NA Preferences=[allInt]
Interval  9: (V11) ref RefPositions {#163@112 #167@129 #171@133} physReg:NA Preferences=[rcx rdx]
Interval 10: (V12) ref RefPositions {#225@166 #226@173} physReg:NA Preferences=[allInt]
Interval 11: (V13) ref RefPositions {#228@180 #229@189} physReg:NA Preferences=[allInt]
Interval 12: (V15) ref RefPositions {#196@142 #198@145} physReg:NA Preferences=[rdx]
Interval 13: (V16) ref RefPositions {#223@162 #224@165 #227@179 #231@195} physReg:NA Preferences=[rcx]
Interval 14: (V17) ref RefPositions {#161@106 #162@111} physReg:NA Preferences=[allInt] RelatedInterval <V11/L9>
Interval 15: long (constant) RefPositions {#2@6 #4@7} physReg:NA Preferences=[rcx]
Interval 16: long RefPositions {#6@8 #8@9} physReg:NA Preferences=[rcx]
Interval 17: ref RefPositions {#17@10 #18@11} physReg:NA Preferences=[rax] RelatedInterval <V03/L2>
Interval 18: byref RefPositions {#23@24 #25@27} physReg:NA Preferences=[rcx]
Interval 19: long (constant) RefPositions {#41@30 #43@31} physReg:NA Preferences=[rcx]
Interval 20: long RefPositions {#45@32 #47@33} physReg:NA Preferences=[rcx]
Interval 21: ref RefPositions {#56@34 #57@35} physReg:NA Preferences=[rax] RelatedInterval <V04/L3>
Interval 22: long (constant) RefPositions {#59@38 #60@39} physReg:NA Preferences=[allInt]
Interval 23: ref RefPositions {#61@40 #62@41} physReg:NA Preferences=[allInt] RelatedInterval <V07/L6>
Interval 24: ref (specialPutArg) RefPositions {#67@46 #78@55} physReg:NA Preferences=[rcx] RelatedInterval <V04/L3>
Interval 25: ref RefPositions {#71@50 #80@55} physReg:NA Preferences=[r8]
Interval 26: int (constant) RefPositions {#72@52 #74@53} physReg:NA Preferences=[rdx]
Interval 27: int RefPositions {#76@54 #82@55} physReg:NA Preferences=[rdx]
Interval 28: long (constant) RefPositions {#90@60 #92@61} physReg:NA Preferences=[rcx]
Interval 29: long RefPositions {#94@62 #101@67} physReg:NA Preferences=[rcx]
Interval 30: int (constant) RefPositions {#95@64 #97@65} physReg:NA Preferences=[rdx]
Interval 31: int RefPositions {#99@66 #103@67} physReg:NA Preferences=[rdx]
Interval 32: long RefPositions {#112@68} physReg:NA Preferences=[rax]
Interval 33: long (constant) RefPositions {#113@70 #114@71} physReg:NA Preferences=[allInt]
Interval 34: ref RefPositions {#115@72 #116@73} physReg:NA Preferences=[allInt] RelatedInterval <V08/L7>
Interval 35: long (constant) RefPositions {#118@78 #119@79} physReg:NA Preferences=[allInt]
Interval 36: ref RefPositions {#120@80 #122@81} physReg:NA Preferences=[rdx]
Interval 37: ref RefPositions {#124@82 #139@95} physReg:NA Preferences=[rdx]
Interval 38: ref (specialPutArg) RefPositions {#128@86 #141@95} physReg:NA Preferences=[rcx] RelatedInterval <V04/L3>
Interval 39: ref RefPositions {#132@90 #143@95} physReg:NA Preferences=[r8]
Interval 40: int (constant) RefPositions {#133@92 #135@93} physReg:NA Preferences=[r9]
Interval 41: int RefPositions {#137@94 #145@95} physReg:NA Preferences=[r9]
Interval 42: int RefPositions {#154@96 #155@97} physReg:NA Preferences=[rax] RelatedInterval <V09/L8>
Interval 43: long (constant) RefPositions {#157@102 #158@103} physReg:NA Preferences=[allInt]
Interval 44: ref RefPositions {#159@104 #160@105} physReg:NA Preferences=[allInt] RelatedInterval <V17/L14>
Interval 45: ref (specialPutArg) RefPositions {#169@130 #175@135} physReg:NA Preferences=[rcx] RelatedInterval <V11/L9>
Interval 46: ref RefPositions {#173@134 #177@135} physReg:NA Preferences=[rdx]
Interval 47: ref RefPositions {#194@140 #195@141} physReg:NA Preferences=[rax] RelatedInterval <V15/L12>
Interval 48: ref RefPositions {#200@146 #206@151} physReg:NA Preferences=[rdx]
Interval 49: ref RefPositions {#204@150 #208@151} physReg:NA Preferences=[rcx]
Interval 50: ref RefPositions {#217@152 #218@153} physReg:NA Preferences=[rax] RelatedInterval <V05/L4>
Interval 51: ref RefPositions {#221@160 #222@161} physReg:NA Preferences=[allInt] RelatedInterval <V16/L13>
Interval 52: ref RefPositions {#233@196 #249@209} physReg:NA Preferences=[rcx]
Interval 53: long (constant) RefPositions {#234@198 #235@199} physReg:NA Preferences=[allInt]
Interval 54: ref RefPositions {#236@200 #238@201} physReg:NA Preferences=[rdx]
Interval 55: ref RefPositions {#240@202 #251@209} physReg:NA Preferences=[rdx]
Interval 56: long (constant) RefPositions {#241@204 #242@205} physReg:NA Preferences=[allInt]
Interval 57: ref RefPositions {#243@206 #245@207} physReg:NA Preferences=[r8]
Interval 58: ref RefPositions {#247@208 #253@209} physReg:NA Preferences=[r8]
Interval 59: ref RefPositions {#262@218 #264@219} physReg:NA Preferences=[rcx]
Interval 60: ref RefPositions {#266@220 #282@233} physReg:NA Preferences=[rcx]
Interval 61: long (constant) RefPositions {#267@222 #268@223} physReg:NA Preferences=[allInt]
Interval 62: ref RefPositions {#269@224 #271@225} physReg:NA Preferences=[rdx]
Interval 63: ref RefPositions {#273@226 #284@233} physReg:NA Preferences=[rdx]
Interval 64: long (constant) RefPositions {#274@228 #275@229} physReg:NA Preferences=[allInt]
Interval 65: ref RefPositions {#276@230 #278@231} physReg:NA Preferences=[r8]
Interval 66: ref RefPositions {#280@232 #286@233} physReg:NA Preferences=[r8]
Interval 67: long (constant) RefPositions {#294@238 #296@239} physReg:NA Preferences=[rcx]
Interval 68: long RefPositions {#298@240 #300@241} physReg:NA Preferences=[rcx]
Interval 69: ref RefPositions {#309@242 #310@243} physReg:NA Preferences=[rax] RelatedInterval <V06/L5>
Interval 70: byref RefPositions {#313@248 #315@251} physReg:NA Preferences=[rcx]
Interval 71: long (constant) RefPositions {#331@258 #333@259} physReg:NA Preferences=[allInt]
Interval 72: ref (specialPutArg) RefPositions {#337@266 #343@271} physReg:NA Preferences=[rcx] RelatedInterval <V05/L4>
Interval 73: ref RefPositions {#341@270 #345@271} physReg:NA Preferences=[rdx]

*************** In LinearScan::allocateRegisters()

Linear scan intervals before allocateRegisters:
Interval  0: (V00) ref RefPositions {#0@0 #27@27} physReg:rcx Preferences=[rbx rbp rsi rdi r12-r15]
Interval  1: (V01) ref RefPositions {#21@18 #22@23 #317@251} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  2: (V03) ref RefPositions {#19@12 #20@17} physReg:NA Preferences=[allInt] RelatedInterval <V01/L1>
Interval  3: (V04) ref RefPositions {#58@36 #65@45 #126@85 #202@149} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  4: (V05) ref RefPositions {#219@154 #220@159 #261@217 #335@265 #354@277} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  5: (V06) ref RefPositions {#311@244 #312@247 #332@259 #339@269} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  6: (V07) ref RefPositions {#63@42 #69@49} physReg:NA Preferences=[r8]
Interval  7: (V08) ref RefPositions {#117@74 #130@89} physReg:NA Preferences=[r8]
Interval  8: (V09) int RefPositions {#156@98 #164@119} physReg:NA Preferences=[allInt]
Interval  9: (V11) ref RefPositions {#163@112 #167@129 #171@133} physReg:NA Preferences=[rcx rdx]
Interval 10: (V12) ref RefPositions {#225@166 #226@173} physReg:NA Preferences=[allInt]
Interval 11: (V13) ref RefPositions {#228@180 #229@189} physReg:NA Preferences=[allInt]
Interval 12: (V15) ref RefPositions {#196@142 #198@145} physReg:NA Preferences=[rdx]
Interval 13: (V16) ref RefPositions {#223@162 #224@165 #227@179 #231@195} physReg:NA Preferences=[rcx]
Interval 14: (V17) ref RefPositions {#161@106 #162@111} physReg:NA Preferences=[allInt] RelatedInterval <V11/L9>
Interval 15: long (constant) RefPositions {#2@6 #4@7} physReg:NA Preferences=[rcx]
Interval 16: long RefPositions {#6@8 #8@9} physReg:NA Preferences=[rcx]
Interval 17: ref RefPositions {#17@10 #18@11} physReg:NA Preferences=[rax] RelatedInterval <V03/L2>
Interval 18: byref RefPositions {#23@24 #25@27} physReg:NA Preferences=[rcx]
Interval 19: long (constant) RefPositions {#41@30 #43@31} physReg:NA Preferences=[rcx]
Interval 20: long RefPositions {#45@32 #47@33} physReg:NA Preferences=[rcx]
Interval 21: ref RefPositions {#56@34 #57@35} physReg:NA Preferences=[rax] RelatedInterval <V04/L3>
Interval 22: long (constant) RefPositions {#59@38 #60@39} physReg:NA Preferences=[allInt]
Interval 23: ref RefPositions {#61@40 #62@41} physReg:NA Preferences=[allInt] RelatedInterval <V07/L6>
Interval 24: ref (specialPutArg) RefPositions {#67@46 #78@55} physReg:NA Preferences=[rcx] RelatedInterval <V04/L3>
Interval 25: ref RefPositions {#71@50 #80@55} physReg:NA Preferences=[r8]
Interval 26: int (constant) RefPositions {#72@52 #74@53} physReg:NA Preferences=[rdx]
Interval 27: int RefPositions {#76@54 #82@55} physReg:NA Preferences=[rdx]
Interval 28: long (constant) RefPositions {#90@60 #92@61} physReg:NA Preferences=[rcx]
Interval 29: long RefPositions {#94@62 #101@67} physReg:NA Preferences=[rcx]
Interval 30: int (constant) RefPositions {#95@64 #97@65} physReg:NA Preferences=[rdx]
Interval 31: int RefPositions {#99@66 #103@67} physReg:NA Preferences=[rdx]
Interval 32: long RefPositions {#112@68} physReg:NA Preferences=[rax]
Interval 33: long (constant) RefPositions {#113@70 #114@71} physReg:NA Preferences=[allInt]
Interval 34: ref RefPositions {#115@72 #116@73} physReg:NA Preferences=[allInt] RelatedInterval <V08/L7>
Interval 35: long (constant) RefPositions {#118@78 #119@79} physReg:NA Preferences=[allInt]
Interval 36: ref RefPositions {#120@80 #122@81} physReg:NA Preferences=[rdx]
Interval 37: ref RefPositions {#124@82 #139@95} physReg:NA Preferences=[rdx]
Interval 38: ref (specialPutArg) RefPositions {#128@86 #141@95} physReg:NA Preferences=[rcx] RelatedInterval <V04/L3>
Interval 39: ref RefPositions {#132@90 #143@95} physReg:NA Preferences=[r8]
Interval 40: int (constant) RefPositions {#133@92 #135@93} physReg:NA Preferences=[r9]
Interval 41: int RefPositions {#137@94 #145@95} physReg:NA Preferences=[r9]
Interval 42: int RefPositions {#154@96 #155@97} physReg:NA Preferences=[rax] RelatedInterval <V09/L8>
Interval 43: long (constant) RefPositions {#157@102 #158@103} physReg:NA Preferences=[allInt]
Interval 44: ref RefPositions {#159@104 #160@105} physReg:NA Preferences=[allInt] RelatedInterval <V17/L14>
Interval 45: ref (specialPutArg) RefPositions {#169@130 #175@135} physReg:NA Preferences=[rcx] RelatedInterval <V11/L9>
Interval 46: ref RefPositions {#173@134 #177@135} physReg:NA Preferences=[rdx]
Interval 47: ref RefPositions {#194@140 #195@141} physReg:NA Preferences=[rax] RelatedInterval <V15/L12>
Interval 48: ref RefPositions {#200@146 #206@151} physReg:NA Preferences=[rdx]
Interval 49: ref RefPositions {#204@150 #208@151} physReg:NA Preferences=[rcx]
Interval 50: ref RefPositions {#217@152 #218@153} physReg:NA Preferences=[rax] RelatedInterval <V05/L4>
Interval 51: ref RefPositions {#221@160 #222@161} physReg:NA Preferences=[allInt] RelatedInterval <V16/L13>
Interval 52: ref RefPositions {#233@196 #249@209} physReg:NA Preferences=[rcx]
Interval 53: long (constant) RefPositions {#234@198 #235@199} physReg:NA Preferences=[allInt]
Interval 54: ref RefPositions {#236@200 #238@201} physReg:NA Preferences=[rdx]
Interval 55: ref RefPositions {#240@202 #251@209} physReg:NA Preferences=[rdx]
Interval 56: long (constant) RefPositions {#241@204 #242@205} physReg:NA Preferences=[allInt]
Interval 57: ref RefPositions {#243@206 #245@207} physReg:NA Preferences=[r8]
Interval 58: ref RefPositions {#247@208 #253@209} physReg:NA Preferences=[r8]
Interval 59: ref RefPositions {#262@218 #264@219} physReg:NA Preferences=[rcx]
Interval 60: ref RefPositions {#266@220 #282@233} physReg:NA Preferences=[rcx]
Interval 61: long (constant) RefPositions {#267@222 #268@223} physReg:NA Preferences=[allInt]
Interval 62: ref RefPositions {#269@224 #271@225} physReg:NA Preferences=[rdx]
Interval 63: ref RefPositions {#273@226 #284@233} physReg:NA Preferences=[rdx]
Interval 64: long (constant) RefPositions {#274@228 #275@229} physReg:NA Preferences=[allInt]
Interval 65: ref RefPositions {#276@230 #278@231} physReg:NA Preferences=[r8]
Interval 66: ref RefPositions {#280@232 #286@233} physReg:NA Preferences=[r8]
Interval 67: long (constant) RefPositions {#294@238 #296@239} physReg:NA Preferences=[rcx]
Interval 68: long RefPositions {#298@240 #300@241} physReg:NA Preferences=[rcx]
Interval 69: ref RefPositions {#309@242 #310@243} physReg:NA Preferences=[rax] RelatedInterval <V06/L5>
Interval 70: byref RefPositions {#313@248 #315@251} physReg:NA Preferences=[rcx]
Interval 71: long (constant) RefPositions {#331@258 #333@259} physReg:NA Preferences=[allInt]
Interval 72: ref (specialPutArg) RefPositions {#337@266 #343@271} physReg:NA Preferences=[rcx] RelatedInterval <V05/L4>
Interval 73: ref RefPositions {#341@270 #345@271} physReg:NA Preferences=[rdx]

------------
REFPOSITIONS BEFORE ALLOCATION: 
------------
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00>  BB00 regmask=[rcx] minReg=1 fixed regOptional>
<RefPosition #1   @1   RefTypeBB  BB01 regmask=[] minReg=1>
<RefPosition #2   @6   RefTypeDef <Ivl:15> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #3   @7   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #4   @7   RefTypeUse <Ivl:15>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #5   @8   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #6   @8   RefTypeDef <Ivl:16> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #7   @9   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #8   @9   RefTypeUse <Ivl:16>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #9   @10  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #10  @10  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #11  @10  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #12  @10  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #13  @10  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #14  @10  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #15  @10  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #16  @10  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #17  @10  RefTypeDef <Ivl:17> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #18  @11  RefTypeUse <Ivl:17>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #19  @12  RefTypeDef <Ivl:2 V03> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #20  @17  RefTypeUse <Ivl:2 V03> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #21  @18  RefTypeDef <Ivl:1 V01> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #22  @23  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #23  @24  RefTypeDef <Ivl:18> LEA BB01 regmask=[rcx] minReg=1>
<RefPosition #24  @27  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #25  @27  RefTypeUse <Ivl:18>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #26  @27  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #27  @27  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #28  @28  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #29  @28  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #30  @28  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #31  @28  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #32  @28  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #33  @28  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #34  @28  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #35  @28  RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1 last>
<RefPosition #36  @28  RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1 last>
<RefPosition #37  @28  RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1 last>
<RefPosition #38  @28  RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1 last>
<RefPosition #39  @28  RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1 last>
<RefPosition #40  @28  RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1 last>
<RefPosition #41  @30  RefTypeDef <Ivl:19> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #42  @31  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #43  @31  RefTypeUse <Ivl:19>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #44  @32  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #45  @32  RefTypeDef <Ivl:20> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #46  @33  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #47  @33  RefTypeUse <Ivl:20>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #48  @34  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #49  @34  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #50  @34  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #51  @34  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #52  @34  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #53  @34  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #54  @34  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #55  @34  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #56  @34  RefTypeDef <Ivl:21> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #57  @35  RefTypeUse <Ivl:21>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #58  @36  RefTypeDef <Ivl:3 V04> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #59  @38  RefTypeDef <Ivl:22> CNS_INT BB01 regmask=[allInt] minReg=1>
<RefPosition #60  @39  RefTypeUse <Ivl:22>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #61  @40  RefTypeDef <Ivl:23> IND BB01 regmask=[allInt] minReg=1>
<RefPosition #62  @41  RefTypeUse <Ivl:23>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #63  @42  RefTypeDef <Ivl:6 V07> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #64  @45  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #65  @45  RefTypeUse <Ivl:3 V04> LCL_VAR BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #66  @46  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #67  @46  RefTypeDef <Ivl:24> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #68  @49  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #69  @49  RefTypeUse <Ivl:6 V07> LCL_VAR BB01 regmask=[r8] minReg=1 last fixed>
<RefPosition #70  @50  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #71  @50  RefTypeDef <Ivl:25> PUTARG_REG BB01 regmask=[r8] minReg=1 fixed>
<RefPosition #72  @52  RefTypeDef <Ivl:26> CNS_INT BB01 regmask=[rdx] minReg=1>
<RefPosition #73  @53  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #74  @53  RefTypeUse <Ivl:26>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #75  @54  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #76  @54  RefTypeDef <Ivl:27> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>
<RefPosition #77  @55  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #78  @55  RefTypeUse <Ivl:24>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #79  @55  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #80  @55  RefTypeUse <Ivl:25>  BB01 regmask=[r8] minReg=1 last fixed>
<RefPosition #81  @55  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #82  @55  RefTypeUse <Ivl:27>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #83  @56  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #84  @56  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #85  @56  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #86  @56  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #87  @56  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #88  @56  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #89  @56  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #90  @60  RefTypeDef <Ivl:28> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #91  @61  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #92  @61  RefTypeUse <Ivl:28>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #93  @62  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #94  @62  RefTypeDef <Ivl:29> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #95  @64  RefTypeDef <Ivl:30> CNS_INT BB01 regmask=[rdx] minReg=1>
<RefPosition #96  @65  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #97  @65  RefTypeUse <Ivl:30>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #98  @66  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #99  @66  RefTypeDef <Ivl:31> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>
<RefPosition #100 @67  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #101 @67  RefTypeUse <Ivl:29>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #102 @67  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #103 @67  RefTypeUse <Ivl:31>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #104 @68  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #105 @68  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #106 @68  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #107 @68  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #108 @68  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #109 @68  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #110 @68  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #111 @68  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #112 @68  RefTypeDef <Ivl:32> CALL BB01 regmask=[rax] minReg=1 last fixed local>
<RefPosition #113 @70  RefTypeDef <Ivl:33> CNS_INT BB01 regmask=[allInt] minReg=1>
<RefPosition #114 @71  RefTypeUse <Ivl:33>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #115 @72  RefTypeDef <Ivl:34> IND BB01 regmask=[allInt] minReg=1>
<RefPosition #116 @73  RefTypeUse <Ivl:34>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #117 @74  RefTypeDef <Ivl:7 V08> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #118 @78  RefTypeDef <Ivl:35> CNS_INT BB01 regmask=[allInt] minReg=1>
<RefPosition #119 @79  RefTypeUse <Ivl:35>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #120 @80  RefTypeDef <Ivl:36> IND BB01 regmask=[rdx] minReg=1>
<RefPosition #121 @81  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #122 @81  RefTypeUse <Ivl:36>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #123 @82  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #124 @82  RefTypeDef <Ivl:37> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>
<RefPosition #125 @85  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #126 @85  RefTypeUse <Ivl:3 V04> LCL_VAR BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #127 @86  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #128 @86  RefTypeDef <Ivl:38> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #129 @89  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #130 @89  RefTypeUse <Ivl:7 V08> LCL_VAR BB01 regmask=[r8] minReg=1 last fixed>
<RefPosition #131 @90  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #132 @90  RefTypeDef <Ivl:39> PUTARG_REG BB01 regmask=[r8] minReg=1 fixed>
<RefPosition #133 @92  RefTypeDef <Ivl:40> CNS_INT BB01 regmask=[r9] minReg=1>
<RefPosition #134 @93  RefTypeFixedReg <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #135 @93  RefTypeUse <Ivl:40>  BB01 regmask=[r9] minReg=1 last fixed>
<RefPosition #136 @94  RefTypeFixedReg <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #137 @94  RefTypeDef <Ivl:41> PUTARG_REG BB01 regmask=[r9] minReg=1 fixed>
<RefPosition #138 @95  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #139 @95  RefTypeUse <Ivl:37>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #140 @95  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #141 @95  RefTypeUse <Ivl:38>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #142 @95  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #143 @95  RefTypeUse <Ivl:39>  BB01 regmask=[r8] minReg=1 last fixed>
<RefPosition #144 @95  RefTypeFixedReg <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #145 @95  RefTypeUse <Ivl:41>  BB01 regmask=[r9] minReg=1 last fixed>
<RefPosition #146 @96  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #147 @96  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #148 @96  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #149 @96  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #150 @96  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #151 @96  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #152 @96  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #153 @96  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #154 @96  RefTypeDef <Ivl:42> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #155 @97  RefTypeUse <Ivl:42>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #156 @98  RefTypeDef <Ivl:8 V09> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #157 @102 RefTypeDef <Ivl:43> CNS_INT BB01 regmask=[allInt] minReg=1>
<RefPosition #158 @103 RefTypeUse <Ivl:43>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #159 @104 RefTypeDef <Ivl:44> IND BB01 regmask=[allInt] minReg=1>
<RefPosition #160 @105 RefTypeUse <Ivl:44>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #161 @106 RefTypeDef <Ivl:14 V17> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #162 @111 RefTypeUse <Ivl:14 V17> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #163 @112 RefTypeDef <Ivl:9 V11> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #164 @119 RefTypeUse <Ivl:8 V09> LCL_VAR BB01 regmask=[allInt] minReg=1 last regOptional>
<RefPosition #165 @123 RefTypeBB  BB02 regmask=[] minReg=1>
<RefPosition #166 @129 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #167 @129 RefTypeUse <Ivl:9 V11> LCL_VAR BB02 regmask=[rcx] minReg=1 fixed>
<RefPosition #168 @130 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #169 @130 RefTypeDef <Ivl:45> PUTARG_REG BB02 regmask=[rcx] minReg=1 fixed>
<RefPosition #170 @133 RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #171 @133 RefTypeUse <Ivl:9 V11> LCL_VAR BB02 regmask=[rdx] minReg=1 last fixed>
<RefPosition #172 @134 RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #173 @134 RefTypeDef <Ivl:46> PUTARG_REG BB02 regmask=[rdx] minReg=1 fixed>
<RefPosition #174 @135 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #175 @135 RefTypeUse <Ivl:45>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #176 @135 RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #177 @135 RefTypeUse <Ivl:46>  BB02 regmask=[rdx] minReg=1 last fixed>
<RefPosition #178 @136 RefTypeKill <Reg:rax>  BB02 regmask=[rax] minReg=1 last>
<RefPosition #179 @136 RefTypeKill <Reg:rcx>  BB02 regmask=[rcx] minReg=1 last>
<RefPosition #180 @136 RefTypeKill <Reg:rdx>  BB02 regmask=[rdx] minReg=1 last>
<RefPosition #181 @136 RefTypeKill <Reg:r8 >  BB02 regmask=[r8] minReg=1 last>
<RefPosition #182 @136 RefTypeKill <Reg:r9 >  BB02 regmask=[r9] minReg=1 last>
<RefPosition #183 @136 RefTypeKill <Reg:r10>  BB02 regmask=[r10] minReg=1 last>
<RefPosition #184 @136 RefTypeKill <Reg:r11>  BB02 regmask=[r11] minReg=1 last>
<RefPosition #185 @137 RefTypeBB  BB03 regmask=[] minReg=1>
<RefPosition #186 @140 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #187 @140 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #188 @140 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #189 @140 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #190 @140 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #191 @140 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #192 @140 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #193 @140 RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #194 @140 RefTypeDef <Ivl:47> CALL BB03 regmask=[rax] minReg=1 fixed>
<RefPosition #195 @141 RefTypeUse <Ivl:47>  BB03 regmask=[allInt] minReg=1 last>
<RefPosition #196 @142 RefTypeDef <Ivl:12 V15> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #197 @145 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #198 @145 RefTypeUse <Ivl:12 V15> LCL_VAR BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #199 @146 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #200 @146 RefTypeDef <Ivl:48> PUTARG_REG BB03 regmask=[rdx] minReg=1 fixed>
<RefPosition #201 @149 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #202 @149 RefTypeUse <Ivl:3 V04> LCL_VAR BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #203 @150 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #204 @150 RefTypeDef <Ivl:49> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>
<RefPosition #205 @151 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #206 @151 RefTypeUse <Ivl:48>  BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #207 @151 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #208 @151 RefTypeUse <Ivl:49>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #209 @152 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #210 @152 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #211 @152 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #212 @152 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #213 @152 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #214 @152 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #215 @152 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #216 @152 RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #217 @152 RefTypeDef <Ivl:50> CALL BB03 regmask=[rax] minReg=1 fixed>
<RefPosition #218 @153 RefTypeUse <Ivl:50>  BB03 regmask=[allInt] minReg=1 last>
<RefPosition #219 @154 RefTypeDef <Ivl:4 V05> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #220 @159 RefTypeUse <Ivl:4 V05> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #221 @160 RefTypeDef <Ivl:51> IND BB03 regmask=[allInt] minReg=1>
<RefPosition #222 @161 RefTypeUse <Ivl:51>  BB03 regmask=[allInt] minReg=1 last>
<RefPosition #223 @162 RefTypeDef <Ivl:13 V16> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #224 @165 RefTypeUse <Ivl:13 V16> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #225 @166 RefTypeDef <Ivl:10 V12> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #226 @173 RefTypeUse <Ivl:10 V12> LCL_VAR BB03 regmask=[allInt] minReg=1 last>
<RefPosition #227 @179 RefTypeUse <Ivl:13 V16> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #228 @180 RefTypeDef <Ivl:11 V13> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #229 @189 RefTypeUse <Ivl:11 V13> LCL_VAR BB03 regmask=[allInt] minReg=1 last>
<RefPosition #230 @195 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #231 @195 RefTypeUse <Ivl:13 V16> LCL_VAR BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #232 @196 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #233 @196 RefTypeDef <Ivl:52> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>
<RefPosition #234 @198 RefTypeDef <Ivl:53> CNS_INT BB03 regmask=[allInt] minReg=1>
<RefPosition #235 @199 RefTypeUse <Ivl:53>  BB03 regmask=[allInt] minReg=1 last>
<RefPosition #236 @200 RefTypeDef <Ivl:54> IND BB03 regmask=[rdx] minReg=1>
<RefPosition #237 @201 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #238 @201 RefTypeUse <Ivl:54>  BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #239 @202 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #240 @202 RefTypeDef <Ivl:55> PUTARG_REG BB03 regmask=[rdx] minReg=1 fixed>
<RefPosition #241 @204 RefTypeDef <Ivl:56> CNS_INT BB03 regmask=[allInt] minReg=1>
<RefPosition #242 @205 RefTypeUse <Ivl:56>  BB03 regmask=[allInt] minReg=1 last>
<RefPosition #243 @206 RefTypeDef <Ivl:57> IND BB03 regmask=[r8] minReg=1>
<RefPosition #244 @207 RefTypeFixedReg <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #245 @207 RefTypeUse <Ivl:57>  BB03 regmask=[r8] minReg=1 last fixed>
<RefPosition #246 @208 RefTypeFixedReg <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #247 @208 RefTypeDef <Ivl:58> PUTARG_REG BB03 regmask=[r8] minReg=1 fixed>
<RefPosition #248 @209 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #249 @209 RefTypeUse <Ivl:52>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #250 @209 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #251 @209 RefTypeUse <Ivl:55>  BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #252 @209 RefTypeFixedReg <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #253 @209 RefTypeUse <Ivl:58>  BB03 regmask=[r8] minReg=1 last fixed>
<RefPosition #254 @210 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #255 @210 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #256 @210 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #257 @210 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #258 @210 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #259 @210 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #260 @210 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #261 @217 RefTypeUse <Ivl:4 V05> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #262 @218 RefTypeDef <Ivl:59> IND BB03 regmask=[rcx] minReg=1>
<RefPosition #263 @219 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #264 @219 RefTypeUse <Ivl:59>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #265 @220 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #266 @220 RefTypeDef <Ivl:60> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>
<RefPosition #267 @222 RefTypeDef <Ivl:61> CNS_INT BB03 regmask=[allInt] minReg=1>
<RefPosition #268 @223 RefTypeUse <Ivl:61>  BB03 regmask=[allInt] minReg=1 last>
<RefPosition #269 @224 RefTypeDef <Ivl:62> IND BB03 regmask=[rdx] minReg=1>
<RefPosition #270 @225 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #271 @225 RefTypeUse <Ivl:62>  BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #272 @226 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #273 @226 RefTypeDef <Ivl:63> PUTARG_REG BB03 regmask=[rdx] minReg=1 fixed>
<RefPosition #274 @228 RefTypeDef <Ivl:64> CNS_INT BB03 regmask=[allInt] minReg=1>
<RefPosition #275 @229 RefTypeUse <Ivl:64>  BB03 regmask=[allInt] minReg=1 last>
<RefPosition #276 @230 RefTypeDef <Ivl:65> IND BB03 regmask=[r8] minReg=1>
<RefPosition #277 @231 RefTypeFixedReg <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #278 @231 RefTypeUse <Ivl:65>  BB03 regmask=[r8] minReg=1 last fixed>
<RefPosition #279 @232 RefTypeFixedReg <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #280 @232 RefTypeDef <Ivl:66> PUTARG_REG BB03 regmask=[r8] minReg=1 fixed>
<RefPosition #281 @233 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #282 @233 RefTypeUse <Ivl:60>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #283 @233 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #284 @233 RefTypeUse <Ivl:63>  BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #285 @233 RefTypeFixedReg <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #286 @233 RefTypeUse <Ivl:66>  BB03 regmask=[r8] minReg=1 last fixed>
<RefPosition #287 @234 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #288 @234 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #289 @234 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #290 @234 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #291 @234 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #292 @234 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #293 @234 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #294 @238 RefTypeDef <Ivl:67> CNS_INT BB03 regmask=[rcx] minReg=1>
<RefPosition #295 @239 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #296 @239 RefTypeUse <Ivl:67>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #297 @240 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #298 @240 RefTypeDef <Ivl:68> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>
<RefPosition #299 @241 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #300 @241 RefTypeUse <Ivl:68>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #301 @242 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #302 @242 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #303 @242 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #304 @242 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #305 @242 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #306 @242 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #307 @242 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #308 @242 RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #309 @242 RefTypeDef <Ivl:69> CALL BB03 regmask=[rax] minReg=1 fixed>
<RefPosition #310 @243 RefTypeUse <Ivl:69>  BB03 regmask=[allInt] minReg=1 last>
<RefPosition #311 @244 RefTypeDef <Ivl:5 V06> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #312 @247 RefTypeUse <Ivl:5 V06> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #313 @248 RefTypeDef <Ivl:70> LEA BB03 regmask=[rcx] minReg=1>
<RefPosition #314 @251 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #315 @251 RefTypeUse <Ivl:70>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #316 @251 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #317 @251 RefTypeUse <Ivl:1 V01> LCL_VAR BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #318 @252 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #319 @252 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #320 @252 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #321 @252 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #322 @252 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #323 @252 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #324 @252 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #325 @252 RefTypeKill <Reg:mm0>  BB03 regmask=[mm0] minReg=1 last>
<RefPosition #326 @252 RefTypeKill <Reg:mm1>  BB03 regmask=[mm1] minReg=1 last>
<RefPosition #327 @252 RefTypeKill <Reg:mm2>  BB03 regmask=[mm2] minReg=1 last>
<RefPosition #328 @252 RefTypeKill <Reg:mm3>  BB03 regmask=[mm3] minReg=1 last>
<RefPosition #329 @252 RefTypeKill <Reg:mm4>  BB03 regmask=[mm4] minReg=1 last>
<RefPosition #330 @252 RefTypeKill <Reg:mm5>  BB03 regmask=[mm5] minReg=1 last>
<RefPosition #331 @258 RefTypeDef <Ivl:71> CNS_INT BB03 regmask=[allInt] minReg=1>
<RefPosition #332 @259 RefTypeUse <Ivl:5 V06> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #333 @259 RefTypeUse <Ivl:71>  BB03 regmask=[allInt] minReg=1 last>
<RefPosition #334 @265 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #335 @265 RefTypeUse <Ivl:4 V05> LCL_VAR BB03 regmask=[rcx] minReg=1 fixed>
<RefPosition #336 @266 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #337 @266 RefTypeDef <Ivl:72> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>
<RefPosition #338 @269 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #339 @269 RefTypeUse <Ivl:5 V06> LCL_VAR BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #340 @270 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #341 @270 RefTypeDef <Ivl:73> PUTARG_REG BB03 regmask=[rdx] minReg=1 fixed>
<RefPosition #342 @271 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #343 @271 RefTypeUse <Ivl:72>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #344 @271 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #345 @271 RefTypeUse <Ivl:73>  BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #346 @272 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #347 @272 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #348 @272 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #349 @272 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #350 @272 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #351 @272 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #352 @272 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #353 @277 RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #354 @277 RefTypeUse <Ivl:4 V05> LCL_VAR BB03 regmask=[rax] minReg=1 last fixed>

VAR REFPOSITIONS BEFORE ALLOCATION
--- V00  (Interval 0)
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00>  BB00 regmask=[rcx] minReg=1 fixed regOptional>
<RefPosition #27  @27  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rdx] minReg=1 last fixed>
--- V01  (Interval 1)
<RefPosition #21  @18  RefTypeDef <Ivl:1 V01> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #22  @23  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #317 @251 RefTypeUse <Ivl:1 V01> LCL_VAR BB03 regmask=[rdx] minReg=1 last fixed>
--- V02
--- V03  (Interval 2)
<RefPosition #19  @12  RefTypeDef <Ivl:2 V03> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #20  @17  RefTypeUse <Ivl:2 V03> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
--- V04  (Interval 3)
<RefPosition #58  @36  RefTypeDef <Ivl:3 V04> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #65  @45  RefTypeUse <Ivl:3 V04> LCL_VAR BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #126 @85  RefTypeUse <Ivl:3 V04> LCL_VAR BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #202 @149 RefTypeUse <Ivl:3 V04> LCL_VAR BB03 regmask=[rcx] minReg=1 last fixed>
--- V05  (Interval 4)
<RefPosition #219 @154 RefTypeDef <Ivl:4 V05> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #220 @159 RefTypeUse <Ivl:4 V05> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #261 @217 RefTypeUse <Ivl:4 V05> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #335 @265 RefTypeUse <Ivl:4 V05> LCL_VAR BB03 regmask=[rcx] minReg=1 fixed>
<RefPosition #354 @277 RefTypeUse <Ivl:4 V05> LCL_VAR BB03 regmask=[rax] minReg=1 last fixed>
--- V06  (Interval 5)
<RefPosition #311 @244 RefTypeDef <Ivl:5 V06> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #312 @247 RefTypeUse <Ivl:5 V06> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #332 @259 RefTypeUse <Ivl:5 V06> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #339 @269 RefTypeUse <Ivl:5 V06> LCL_VAR BB03 regmask=[rdx] minReg=1 last fixed>
--- V07  (Interval 6)
<RefPosition #63  @42  RefTypeDef <Ivl:6 V07> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #69  @49  RefTypeUse <Ivl:6 V07> LCL_VAR BB01 regmask=[r8] minReg=1 last fixed>
--- V08  (Interval 7)
<RefPosition #117 @74  RefTypeDef <Ivl:7 V08> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #130 @89  RefTypeUse <Ivl:7 V08> LCL_VAR BB01 regmask=[r8] minReg=1 last fixed>
--- V09  (Interval 8)
<RefPosition #156 @98  RefTypeDef <Ivl:8 V09> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #164 @119 RefTypeUse <Ivl:8 V09> LCL_VAR BB01 regmask=[allInt] minReg=1 last regOptional>
--- V10
--- V11  (Interval 9)
<RefPosition #163 @112 RefTypeDef <Ivl:9 V11> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #167 @129 RefTypeUse <Ivl:9 V11> LCL_VAR BB02 regmask=[rcx] minReg=1 fixed>
<RefPosition #171 @133 RefTypeUse <Ivl:9 V11> LCL_VAR BB02 regmask=[rdx] minReg=1 last fixed>
--- V12  (Interval 10)
<RefPosition #225 @166 RefTypeDef <Ivl:10 V12> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #226 @173 RefTypeUse <Ivl:10 V12> LCL_VAR BB03 regmask=[allInt] minReg=1 last>
--- V13  (Interval 11)
<RefPosition #228 @180 RefTypeDef <Ivl:11 V13> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #229 @189 RefTypeUse <Ivl:11 V13> LCL_VAR BB03 regmask=[allInt] minReg=1 last>
--- V14
--- V15  (Interval 12)
<RefPosition #196 @142 RefTypeDef <Ivl:12 V15> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #198 @145 RefTypeUse <Ivl:12 V15> LCL_VAR BB03 regmask=[rdx] minReg=1 last fixed>
--- V16  (Interval 13)
<RefPosition #223 @162 RefTypeDef <Ivl:13 V16> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #224 @165 RefTypeUse <Ivl:13 V16> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #227 @179 RefTypeUse <Ivl:13 V16> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #231 @195 RefTypeUse <Ivl:13 V16> LCL_VAR BB03 regmask=[rcx] minReg=1 last fixed>
--- V17  (Interval 14)
<RefPosition #161 @106 RefTypeDef <Ivl:14 V17> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #162 @111 RefTypeUse <Ivl:14 V17> LCL_VAR BB01 regmask=[allInt] minReg=1 last>



Allocating Registers
--------------------
The following table has one or more rows for each RefPosition that is handled during allocation.
The first column provides the basic information about the RefPosition, with its type (e.g. Def,
Use, Fixd) followed by a '*' if it is a last use, and a 'D' if it is delayRegFree, and then the
action taken during allocation (e.g. Alloc a new register, or Keep an existing one).
The subsequent columns show the Interval occupying each register, if any, followed by 'a' if it is
active, a 'p' if it is a large vector that has been partially spilled, and 'i'if it is inactive.
Columns are only printed up to the last modifed register, which may increase during allocation,
in which case additional columns will appear.  
Registers which are not marked modified have ---- in their column.

--------------------------------+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
--------------------------------+----+----+----+----+----+----+----+----+----+
                                |    |V0 a|    |    |    |    |    |    |    |
  0.#0   V0   Parm   Alloc rsi  |    |    |    |    |    |V0 a|    |    |    |
  1.#1   BB1 PredBB0            |    |    |    |    |    |V0 a|    |    |    |
  6.#2   C15  Def    Alloc rcx  |    |C15a|    |    |    |V0 a|    |    |    |
  7.#3   rcx  Fixd   Keep  rcx  |    |C15a|    |    |    |V0 a|    |    |    |
  7.#4   C15  Use *  Keep  rcx  |    |C15a|    |    |    |V0 a|    |    |    |
  8.#5   rcx  Fixd   Keep  rcx  |    |    |    |    |    |V0 a|    |    |    |
  8.#6   I16  Def    Alloc rcx  |    |I16a|    |    |    |V0 a|    |    |    |
  9.#7   rcx  Fixd   Keep  rcx  |    |I16a|    |    |    |V0 a|    |    |    |
  9.#8   I16  Use *  Keep  rcx  |    |I16a|    |    |    |V0 a|    |    |    |
 10.#9   rax  Kill   Keep  rax  |    |    |    |    |    |V0 a|    |    |    |
 10.#10  rcx  Kill   Keep  rcx  |    |    |    |    |    |V0 a|    |    |    |
 10.#11  rdx  Kill   Keep  rdx  |    |    |    |    |    |V0 a|    |    |    |
 10.#12  r8   Kill   Keep  r8   |    |    |    |    |    |V0 a|    |    |    |
 10.#13  r9   Kill   Keep  r9   |    |    |    |    |    |V0 a|    |    |    |
 10.#14  r10  Kill   Keep  r10  |    |    |    |    |    |V0 a|    |    |    |
 10.#15  r11  Kill   Keep  r11  |    |    |    |    |    |V0 a|    |    |    |
 10.#16  rax  Fixd   Keep  rax  |    |    |    |    |    |V0 a|    |    |    |
 10.#17  I17  Def    Alloc rax  |I17a|    |    |    |    |V0 a|    |    |    |
 11.#18  I17  Use *  Keep  rax  |I17a|    |    |    |    |V0 a|    |    |    |
 12.#19  V3   Def    Alloc rdi  |    |    |    |    |    |V0 a|V3 a|    |    |
 17.#20  V3   Use *  Keep  rdi  |    |    |    |    |    |V0 a|V3 a|    |    |
 18.#21  V1   Def    Alloc rdi  |    |    |    |    |    |V0 a|V1 a|    |    |
 23.#22  V1   Use    Keep  rdi  |    |    |    |    |    |V0 a|V1 a|    |    |
 24.#23  I18  Def    Alloc rcx  |    |I18a|    |    |    |V0 a|V1 a|    |    |
 27.#24  rcx  Fixd   Keep  rcx  |    |I18a|    |    |    |V0 a|V1 a|    |    |
 27.#25  I18  Use *  Keep  rcx  |    |I18a|    |    |    |V0 a|V1 a|    |    |
 27.#26  rdx  Fixd   Keep  rdx  |    |I18a|    |    |    |V0 a|V1 a|    |    |
 27.#27  V0   Use *  Copy  rdx  |    |I18a|V0 a|    |    |V0 a|V1 a|    |    |
 28.#28  rax  Kill   Keep  rax  |    |    |    |    |    |    |V1 a|    |    |
 28.#29  rcx  Kill   Keep  rcx  |    |    |    |    |    |    |V1 a|    |    |
 28.#30  rdx  Kill   Keep  rdx  |    |    |    |    |    |    |V1 a|    |    |
 28.#31  r8   Kill   Keep  r8   |    |    |    |    |    |    |V1 a|    |    |
 28.#32  r9   Kill   Keep  r9   |    |    |    |    |    |    |V1 a|    |    |
 28.#33  r10  Kill   Keep  r10  |    |    |    |    |    |    |V1 a|    |    |
 28.#34  r11  Kill   Keep  r11  |    |    |    |    |    |    |V1 a|    |    |
 28.#35  mm0  Kill   Keep  mm0  |    |    |    |    |    |    |V1 a|    |    |
 28.#36  mm1  Kill   Keep  mm1  |    |    |    |    |    |    |V1 a|    |    |
 28.#37  mm2  Kill   Keep  mm2  |    |    |    |    |    |    |V1 a|    |    |
 28.#38  mm3  Kill   Keep  mm3  |    |    |    |    |    |    |V1 a|    |    |
 28.#39  mm4  Kill   Keep  mm4  |    |    |    |    |    |    |V1 a|    |    |
 28.#40  mm5  Kill   Keep  mm5  |    |    |    |    |    |    |V1 a|    |    |
 30.#41  C19  Def    Alloc rcx  |    |C19a|    |    |    |    |V1 a|    |    |
 31.#42  rcx  Fixd   Keep  rcx  |    |C19a|    |    |    |    |V1 a|    |    |
 31.#43  C19  Use *  Keep  rcx  |    |C19a|    |    |    |    |V1 a|    |    |
 32.#44  rcx  Fixd   Keep  rcx  |    |    |    |    |    |    |V1 a|    |    |
 32.#45  I20  Def    Alloc rcx  |    |I20a|    |    |    |    |V1 a|    |    |
 33.#46  rcx  Fixd   Keep  rcx  |    |I20a|    |    |    |    |V1 a|    |    |
 33.#47  I20  Use *  Keep  rcx  |    |I20a|    |    |    |    |V1 a|    |    |
 34.#48  rax  Kill   Keep  rax  |    |    |    |    |    |    |V1 a|    |    |
 34.#49  rcx  Kill   Keep  rcx  |    |    |    |    |    |    |V1 a|    |    |
 34.#50  rdx  Kill   Keep  rdx  |    |    |    |    |    |    |V1 a|    |    |
 34.#51  r8   Kill   Keep  r8   |    |    |    |    |    |    |V1 a|    |    |
 34.#52  r9   Kill   Keep  r9   |    |    |    |    |    |    |V1 a|    |    |
 34.#53  r10  Kill   Keep  r10  |    |    |    |    |    |    |V1 a|    |    |
 34.#54  r11  Kill   Keep  r11  |    |    |    |    |    |    |V1 a|    |    |
 34.#55  rax  Fixd   Keep  rax  |    |    |    |    |    |    |V1 a|    |    |
--------------------------------+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
--------------------------------+----+----+----+----+----+----+----+----+----+
 34.#56  I21  Def    Alloc rax  |I21a|    |    |    |    |    |V1 a|    |    |
 35.#57  I21  Use *  Keep  rax  |I21a|    |    |    |    |    |V1 a|    |    |
 36.#58  V4   Def    Alloc rsi  |    |    |    |    |    |V4 a|V1 a|    |    |
 38.#59  C22  Def    Alloc rcx  |    |C22a|    |    |    |V4 a|V1 a|    |    |
 39.#60  C22  Use *  Keep  rcx  |    |C22a|    |    |    |V4 a|V1 a|    |    |
 40.#61  I23  Def    Alloc r8   |    |C22i|    |    |    |V4 a|V1 a|I23a|    |
 41.#62  I23  Use *  Keep  r8   |    |C22i|    |    |    |V4 a|V1 a|I23a|    |
 42.#63  V7   Def    Alloc r8   |    |C22i|    |    |    |V4 a|V1 a|V7 a|    |
 45.#64  rcx  Fixd   Keep  rcx  |    |    |    |    |    |V4 a|V1 a|V7 a|    |
 45.#65  V4   Use    Copy  rcx  |    |V4 a|    |    |    |V4 a|V1 a|V7 a|    |
 46.#66  rcx  Fixd   Keep  rcx  |    |V4 a|    |    |    |V4 a|V1 a|V7 a|    |
 46.#67  I24  Def    Alloc rcx  |    |I24a|    |    |    |V4 a|V1 a|V7 a|    |
 49.#68  r8   Fixd   Keep  r8   |    |I24a|    |    |    |V4 a|V1 a|V7 a|    |
 49.#69  V7   Use *  Keep  r8   |    |I24a|    |    |    |V4 a|V1 a|V7 a|    |
 50.#70  r8   Fixd   Keep  r8   |    |I24a|    |    |    |V4 a|V1 a|    |    |
 50.#71  I25  Def    Alloc r8   |    |I24a|    |    |    |V4 a|V1 a|I25a|    |
 52.#72  C26  Def    Alloc rdx  |    |I24a|C26a|    |    |V4 a|V1 a|I25a|    |
 53.#73  rdx  Fixd   Keep  rdx  |    |I24a|C26a|    |    |V4 a|V1 a|I25a|    |
 53.#74  C26  Use *  Keep  rdx  |    |I24a|C26a|    |    |V4 a|V1 a|I25a|    |
 54.#75  rdx  Fixd   Keep  rdx  |    |I24a|    |    |    |V4 a|V1 a|I25a|    |
 54.#76  I27  Def    Alloc rdx  |    |I24a|I27a|    |    |V4 a|V1 a|I25a|    |
 55.#77  rcx  Fixd   Keep  rcx  |    |I24a|I27a|    |    |V4 a|V1 a|I25a|    |
 55.#78  I24  Use *  Keep  rcx  |    |I24a|I27a|    |    |V4 a|V1 a|I25a|    |
 55.#79  r8   Fixd   Keep  r8   |    |I24a|I27a|    |    |V4 a|V1 a|I25a|    |
 55.#80  I25  Use *  Keep  r8   |    |I24a|I27a|    |    |V4 a|V1 a|I25a|    |
 55.#81  rdx  Fixd   Keep  rdx  |    |I24a|I27a|    |    |V4 a|V1 a|I25a|    |
 55.#82  I27  Use *  Keep  rdx  |    |I24a|I27a|    |    |V4 a|V1 a|I25a|    |
 56.#83  rax  Kill   Keep  rax  |    |    |    |    |    |V4 a|V1 a|    |    |
 56.#84  rcx  Kill   Keep  rcx  |    |    |    |    |    |V4 a|V1 a|    |    |
 56.#85  rdx  Kill   Keep  rdx  |    |    |    |    |    |V4 a|V1 a|    |    |
 56.#86  r8   Kill   Keep  r8   |    |    |    |    |    |V4 a|V1 a|    |    |
 56.#87  r9   Kill   Keep  r9   |    |    |    |    |    |V4 a|V1 a|    |    |
 56.#88  r10  Kill   Keep  r10  |    |    |    |    |    |V4 a|V1 a|    |    |
 56.#89  r11  Kill   Keep  r11  |    |    |    |    |    |V4 a|V1 a|    |    |
 60.#90  C28  Def    Alloc rcx  |    |C28a|    |    |    |V4 a|V1 a|    |    |
 61.#91  rcx  Fixd   Keep  rcx  |    |C28a|    |    |    |V4 a|V1 a|    |    |
 61.#92  C28  Use *  Keep  rcx  |    |C28a|    |    |    |V4 a|V1 a|    |    |
 62.#93  rcx  Fixd   Keep  rcx  |    |    |    |    |    |V4 a|V1 a|    |    |
 62.#94  I29  Def    Alloc rcx  |    |I29a|    |    |    |V4 a|V1 a|    |    |
 64.#95  C30  Def    Alloc rdx  |    |I29a|C30a|    |    |V4 a|V1 a|    |    |
 65.#96  rdx  Fixd   Keep  rdx  |    |I29a|C30a|    |    |V4 a|V1 a|    |    |
 65.#97  C30  Use *  Keep  rdx  |    |I29a|C30a|    |    |V4 a|V1 a|    |    |
 66.#98  rdx  Fixd   Keep  rdx  |    |I29a|    |    |    |V4 a|V1 a|    |    |
 66.#99  I31  Def    Alloc rdx  |    |I29a|I31a|    |    |V4 a|V1 a|    |    |
 67.#100 rcx  Fixd   Keep  rcx  |    |I29a|I31a|    |    |V4 a|V1 a|    |    |
 67.#101 I29  Use *  Keep  rcx  |    |I29a|I31a|    |    |V4 a|V1 a|    |    |
 67.#102 rdx  Fixd   Keep  rdx  |    |I29a|I31a|    |    |V4 a|V1 a|    |    |
 67.#103 I31  Use *  Keep  rdx  |    |I29a|I31a|    |    |V4 a|V1 a|    |    |
 68.#104 rax  Kill   Keep  rax  |    |    |    |    |    |V4 a|V1 a|    |    |
 68.#105 rcx  Kill   Keep  rcx  |    |    |    |    |    |V4 a|V1 a|    |    |
 68.#106 rdx  Kill   Keep  rdx  |    |    |    |    |    |V4 a|V1 a|    |    |
 68.#107 r8   Kill   Keep  r8   |    |    |    |    |    |V4 a|V1 a|    |    |
 68.#108 r9   Kill   Keep  r9   |    |    |    |    |    |V4 a|V1 a|    |    |
 68.#109 r10  Kill   Keep  r10  |    |    |    |    |    |V4 a|V1 a|    |    |
 68.#110 r11  Kill   Keep  r11  |    |    |    |    |    |V4 a|V1 a|    |    |
 68.#111 rax  Fixd   Keep  rax  |    |    |    |    |    |V4 a|V1 a|    |    |
--------------------------------+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
--------------------------------+----+----+----+----+----+----+----+----+----+
 68.#112 I32  Def *  Alloc rax  |I32a|    |    |    |    |V4 a|V1 a|    |    |
 70.#113 C33  Def    Alloc rdx  |    |    |C33a|    |    |V4 a|V1 a|    |    |
 71.#114 C33  Use *  Keep  rdx  |    |    |C33a|    |    |V4 a|V1 a|    |    |
 72.#115 I34  Def    Alloc r8   |    |    |C33i|    |    |V4 a|V1 a|I34a|    |
 73.#116 I34  Use *  Keep  r8   |    |    |C33i|    |    |V4 a|V1 a|I34a|    |
 74.#117 V8   Def    Alloc r8   |    |    |C33i|    |    |V4 a|V1 a|V8 a|    |
 78.#118 C35  Def    Alloc rdx  |    |    |C35a|    |    |V4 a|V1 a|V8 a|    |
 79.#119 C35  Use *  Keep  rdx  |    |    |C35a|    |    |V4 a|V1 a|V8 a|    |
 80.#120 I36  Def    Alloc rdx  |    |    |I36a|    |    |V4 a|V1 a|V8 a|    |
 81.#121 rdx  Fixd   Keep  rdx  |    |    |I36a|    |    |V4 a|V1 a|V8 a|    |
 81.#122 I36  Use *  Keep  rdx  |    |    |I36a|    |    |V4 a|V1 a|V8 a|    |
 82.#123 rdx  Fixd   Keep  rdx  |    |    |    |    |    |V4 a|V1 a|V8 a|    |
 82.#124 I37  Def    Alloc rdx  |    |    |I37a|    |    |V4 a|V1 a|V8 a|    |
 85.#125 rcx  Fixd   Keep  rcx  |    |    |I37a|    |    |V4 a|V1 a|V8 a|    |
 85.#126 V4   Use    Copy  rcx  |    |V4 a|I37a|    |    |V4 a|V1 a|V8 a|    |
 86.#127 rcx  Fixd   Keep  rcx  |    |V4 a|I37a|    |    |V4 a|V1 a|V8 a|    |
 86.#128 I38  Def    Alloc rcx  |    |I38a|I37a|    |    |V4 a|V1 a|V8 a|    |
 89.#129 r8   Fixd   Keep  r8   |    |I38a|I37a|    |    |V4 a|V1 a|V8 a|    |
 89.#130 V8   Use *  Keep  r8   |    |I38a|I37a|    |    |V4 a|V1 a|V8 a|    |
 90.#131 r8   Fixd   Keep  r8   |    |I38a|I37a|    |    |V4 a|V1 a|    |    |
 90.#132 I39  Def    Alloc r8   |    |I38a|I37a|    |    |V4 a|V1 a|I39a|    |
 92.#133 C40  Def    Alloc r9   |    |I38a|I37a|    |    |V4 a|V1 a|I39a|C40a|
 93.#134 r9   Fixd   Keep  r9   |    |I38a|I37a|    |    |V4 a|V1 a|I39a|C40a|
 93.#135 C40  Use *  Keep  r9   |    |I38a|I37a|    |    |V4 a|V1 a|I39a|C40a|
 94.#136 r9   Fixd   Keep  r9   |    |I38a|I37a|    |    |V4 a|V1 a|I39a|    |
 94.#137 I41  Def    Alloc r9   |    |I38a|I37a|    |    |V4 a|V1 a|I39a|I41a|
 95.#138 rdx  Fixd   Keep  rdx  |    |I38a|I37a|    |    |V4 a|V1 a|I39a|I41a|
 95.#139 I37  Use *  Keep  rdx  |    |I38a|I37a|    |    |V4 a|V1 a|I39a|I41a|
 95.#140 rcx  Fixd   Keep  rcx  |    |I38a|I37a|    |    |V4 a|V1 a|I39a|I41a|
 95.#141 I38  Use *  Keep  rcx  |    |I38a|I37a|    |    |V4 a|V1 a|I39a|I41a|
 95.#142 r8   Fixd   Keep  r8   |    |I38a|I37a|    |    |V4 a|V1 a|I39a|I41a|
 95.#143 I39  Use *  Keep  r8   |    |I38a|I37a|    |    |V4 a|V1 a|I39a|I41a|
 95.#144 r9   Fixd   Keep  r9   |    |I38a|I37a|    |    |V4 a|V1 a|I39a|I41a|
 95.#145 I41  Use *  Keep  r9   |    |I38a|I37a|    |    |V4 a|V1 a|I39a|I41a|
 96.#146 rax  Kill   Keep  rax  |    |    |    |    |    |V4 a|V1 a|    |    |
 96.#147 rcx  Kill   Keep  rcx  |    |    |    |    |    |V4 a|V1 a|    |    |
 96.#148 rdx  Kill   Keep  rdx  |    |    |    |    |    |V4 a|V1 a|    |    |
 96.#149 r8   Kill   Keep  r8   |    |    |    |    |    |V4 a|V1 a|    |    |
 96.#150 r9   Kill   Keep  r9   |    |    |    |    |    |V4 a|V1 a|    |    |
 96.#151 r10  Kill   Keep  r10  |    |    |    |    |    |V4 a|V1 a|    |    |
 96.#152 r11  Kill   Keep  r11  |    |    |    |    |    |V4 a|V1 a|    |    |
 96.#153 rax  Fixd   Keep  rax  |    |    |    |    |    |V4 a|V1 a|    |    |
 96.#154 I42  Def    Alloc rax  |I42a|    |    |    |    |V4 a|V1 a|    |    |
 97.#155 I42  Use *  Keep  rax  |I42a|    |    |    |    |V4 a|V1 a|    |    |
 98.#156 V9   Def    Alloc rax  |V9 a|    |    |    |    |V4 a|V1 a|    |    |
102.#157 C43  Def    Alloc rcx  |V9 a|C43a|    |    |    |V4 a|V1 a|    |    |
103.#158 C43  Use *  Keep  rcx  |V9 a|C43a|    |    |    |V4 a|V1 a|    |    |
104.#159 I44  Def    Alloc rdx  |V9 a|C43i|I44a|    |    |V4 a|V1 a|    |    |
105.#160 I44  Use *  Keep  rdx  |V9 a|C43i|I44a|    |    |V4 a|V1 a|    |    |
106.#161 V17  Def    Alloc rdx  |V9 a|C43i|V17a|    |    |V4 a|V1 a|    |    |
111.#162 V17  Use *  Keep  rdx  |V9 a|C43i|V17a|    |    |V4 a|V1 a|    |    |
--------------------------------+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
--------------------------------+----+----+----+----+----+----+----+----+----+
112.#163 V11  Def    Alloc rdx  |V9 a|C43i|V11a|    |    |V4 a|V1 a|    |    |
119.#164 V9   Use *  Keep  rax  |V9 a|C43i|V11a|    |    |V4 a|V1 a|    |    |
--------------------------------+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
--------------------------------+----+----+----+----+----+----+----+----+----+
123.#165 BB2 PredBB1            |    |    |V11a|    |    |V4 a|V1 a|    |    |
129.#166 rcx  Fixd   Keep  rcx  |    |    |V11a|    |    |V4 a|V1 a|    |    |
129.#167 V11  Use    Copy  rcx  |    |V11a|V11a|    |    |V4 a|V1 a|    |    |
130.#168 rcx  Fixd   Keep  rcx  |    |V11a|V11a|    |    |V4 a|V1 a|    |    |
130.#169 I45  Def    Alloc rcx  |    |I45a|V11a|    |    |V4 a|V1 a|    |    |
133.#170 rdx  Fixd   Keep  rdx  |    |I45a|V11a|    |    |V4 a|V1 a|    |    |
133.#171 V11  Use *  Keep  rdx  |    |I45a|V11a|    |    |V4 a|V1 a|    |    |
134.#172 rdx  Fixd   Keep  rdx  |    |I45a|    |    |    |V4 a|V1 a|    |    |
134.#173 I46  Def    Alloc rdx  |    |I45a|I46a|    |    |V4 a|V1 a|    |    |
135.#174 rcx  Fixd   Keep  rcx  |    |I45a|I46a|    |    |V4 a|V1 a|    |    |
135.#175 I45  Use *  Keep  rcx  |    |I45a|I46a|    |    |V4 a|V1 a|    |    |
135.#176 rdx  Fixd   Keep  rdx  |    |I45a|I46a|    |    |V4 a|V1 a|    |    |
135.#177 I46  Use *  Keep  rdx  |    |I45a|I46a|    |    |V4 a|V1 a|    |    |
136.#178 rax  Kill   Keep  rax  |    |    |    |    |    |V4 a|V1 a|    |    |
136.#179 rcx  Kill   Keep  rcx  |    |    |    |    |    |V4 a|V1 a|    |    |
136.#180 rdx  Kill   Keep  rdx  |    |    |    |    |    |V4 a|V1 a|    |    |
136.#181 r8   Kill   Keep  r8   |    |    |    |    |    |V4 a|V1 a|    |    |
136.#182 r9   Kill   Keep  r9   |    |    |    |    |    |V4 a|V1 a|    |    |
136.#183 r10  Kill   Keep  r10  |    |    |    |    |    |V4 a|V1 a|    |    |
136.#184 r11  Kill   Keep  r11  |    |    |    |    |    |V4 a|V1 a|    |    |
--------------------------------+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
--------------------------------+----+----+----+----+----+----+----+----+----+
137.#185 BB3 PredBB1            |    |    |    |    |    |V4 a|V1 a|    |    |
140.#186 rax  Kill   Keep  rax  |    |    |    |    |    |V4 a|V1 a|    |    |
140.#187 rcx  Kill   Keep  rcx  |    |    |    |    |    |V4 a|V1 a|    |    |
140.#188 rdx  Kill   Keep  rdx  |    |    |    |    |    |V4 a|V1 a|    |    |
140.#189 r8   Kill   Keep  r8   |    |    |    |    |    |V4 a|V1 a|    |    |
140.#190 r9   Kill   Keep  r9   |    |    |    |    |    |V4 a|V1 a|    |    |
140.#191 r10  Kill   Keep  r10  |    |    |    |    |    |V4 a|V1 a|    |    |
140.#192 r11  Kill   Keep  r11  |    |    |    |    |    |V4 a|V1 a|    |    |
140.#193 rax  Fixd   Keep  rax  |    |    |    |    |    |V4 a|V1 a|    |    |
140.#194 I47  Def    Alloc rax  |I47a|    |    |    |    |V4 a|V1 a|    |    |
141.#195 I47  Use *  Keep  rax  |I47a|    |    |    |    |V4 a|V1 a|    |    |
142.#196 V15  Def    Alloc rdx  |    |    |V15a|    |    |V4 a|V1 a|    |    |
145.#197 rdx  Fixd   Keep  rdx  |    |    |V15a|    |    |V4 a|V1 a|    |    |
145.#198 V15  Use *  Keep  rdx  |    |    |V15a|    |    |V4 a|V1 a|    |    |
146.#199 rdx  Fixd   Keep  rdx  |    |    |    |    |    |V4 a|V1 a|    |    |
146.#200 I48  Def    Alloc rdx  |    |    |I48a|    |    |V4 a|V1 a|    |    |
149.#201 rcx  Fixd   Keep  rcx  |    |    |I48a|    |    |V4 a|V1 a|    |    |
149.#202 V4   Use *  Copy  rcx  |    |V4 a|I48a|    |    |V4 a|V1 a|    |    |
150.#203 rcx  Fixd   Keep  rcx  |    |    |I48a|    |    |    |V1 a|    |    |
150.#204 I49  Def    Alloc rcx  |    |I49a|I48a|    |    |    |V1 a|    |    |
151.#205 rdx  Fixd   Keep  rdx  |    |I49a|I48a|    |    |    |V1 a|    |    |
151.#206 I48  Use *  Keep  rdx  |    |I49a|I48a|    |    |    |V1 a|    |    |
151.#207 rcx  Fixd   Keep  rcx  |    |I49a|I48a|    |    |    |V1 a|    |    |
151.#208 I49  Use *  Keep  rcx  |    |I49a|I48a|    |    |    |V1 a|    |    |
152.#209 rax  Kill   Keep  rax  |    |    |    |    |    |    |V1 a|    |    |
152.#210 rcx  Kill   Keep  rcx  |    |    |    |    |    |    |V1 a|    |    |
152.#211 rdx  Kill   Keep  rdx  |    |    |    |    |    |    |V1 a|    |    |
152.#212 r8   Kill   Keep  r8   |    |    |    |    |    |    |V1 a|    |    |
152.#213 r9   Kill   Keep  r9   |    |    |    |    |    |    |V1 a|    |    |
152.#214 r10  Kill   Keep  r10  |    |    |    |    |    |    |V1 a|    |    |
152.#215 r11  Kill   Keep  r11  |    |    |    |    |    |    |V1 a|    |    |
152.#216 rax  Fixd   Keep  rax  |    |    |    |    |    |    |V1 a|    |    |
152.#217 I50  Def    Alloc rax  |I50a|    |    |    |    |    |V1 a|    |    |
153.#218 I50  Use *  Keep  rax  |I50a|    |    |    |    |    |V1 a|    |    |
154.#219 V5   Def    Alloc rsi  |    |    |    |    |    |V5 a|V1 a|    |    |
159.#220 V5   Use    Keep  rsi  |    |    |    |    |    |V5 a|V1 a|    |    |
160.#221 I51  Def    Alloc rcx  |    |I51a|    |    |    |V5 a|V1 a|    |    |
161.#222 I51  Use *  Keep  rcx  |    |I51a|    |    |    |V5 a|V1 a|    |    |
162.#223 V16  Def    Alloc rcx  |    |V16a|    |    |    |V5 a|V1 a|    |    |
165.#224 V16  Use    Keep  rcx  |    |V16a|    |    |    |V5 a|V1 a|    |    |
166.#225 V12  Def    Alloc rdx  |    |V16a|V12a|    |    |V5 a|V1 a|    |    |
173.#226 V12  Use *  Keep  rdx  |    |V16a|V12a|    |    |V5 a|V1 a|    |    |
179.#227 V16  Use    Keep  rcx  |    |V16a|    |    |    |V5 a|V1 a|    |    |
180.#228 V13  Def    Alloc rdx  |    |V16a|V13a|    |    |V5 a|V1 a|    |    |
189.#229 V13  Use *  Keep  rdx  |    |V16a|V13a|    |    |V5 a|V1 a|    |    |
195.#230 rcx  Fixd   Keep  rcx  |    |V16a|    |    |    |V5 a|V1 a|    |    |
195.#231 V16  Use *  Keep  rcx  |    |V16a|    |    |    |V5 a|V1 a|    |    |
196.#232 rcx  Fixd   Keep  rcx  |    |    |    |    |    |V5 a|V1 a|    |    |
196.#233 I52  Def    Alloc rcx  |    |I52a|    |    |    |V5 a|V1 a|    |    |
198.#234 C53  Def    Alloc rdx  |    |I52a|C53a|    |    |V5 a|V1 a|    |    |
199.#235 C53  Use *  Keep  rdx  |    |I52a|C53a|    |    |V5 a|V1 a|    |    |
--------------------------------+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
--------------------------------+----+----+----+----+----+----+----+----+----+
200.#236 I54  Def    Alloc rdx  |    |I52a|I54a|    |    |V5 a|V1 a|    |    |
201.#237 rdx  Fixd   Keep  rdx  |    |I52a|I54a|    |    |V5 a|V1 a|    |    |
201.#238 I54  Use *  Keep  rdx  |    |I52a|I54a|    |    |V5 a|V1 a|    |    |
202.#239 rdx  Fixd   Keep  rdx  |    |I52a|    |    |    |V5 a|V1 a|    |    |
202.#240 I55  Def    Alloc rdx  |    |I52a|I55a|    |    |V5 a|V1 a|    |    |
204.#241 C56  Def    Alloc r8   |    |I52a|I55a|    |    |V5 a|V1 a|C56a|    |
205.#242 C56  Use *  Keep  r8   |    |I52a|I55a|    |    |V5 a|V1 a|C56a|    |
206.#243 I57  Def    Alloc r8   |    |I52a|I55a|    |    |V5 a|V1 a|I57a|    |
207.#244 r8   Fixd   Keep  r8   |    |I52a|I55a|    |    |V5 a|V1 a|I57a|    |
207.#245 I57  Use *  Keep  r8   |    |I52a|I55a|    |    |V5 a|V1 a|I57a|    |
208.#246 r8   Fixd   Keep  r8   |    |I52a|I55a|    |    |V5 a|V1 a|    |    |
208.#247 I58  Def    Alloc r8   |    |I52a|I55a|    |    |V5 a|V1 a|I58a|    |
209.#248 rcx  Fixd   Keep  rcx  |    |I52a|I55a|    |    |V5 a|V1 a|I58a|    |
209.#249 I52  Use *  Keep  rcx  |    |I52a|I55a|    |    |V5 a|V1 a|I58a|    |
209.#250 rdx  Fixd   Keep  rdx  |    |I52a|I55a|    |    |V5 a|V1 a|I58a|    |
209.#251 I55  Use *  Keep  rdx  |    |I52a|I55a|    |    |V5 a|V1 a|I58a|    |
209.#252 r8   Fixd   Keep  r8   |    |I52a|I55a|    |    |V5 a|V1 a|I58a|    |
209.#253 I58  Use *  Keep  r8   |    |I52a|I55a|    |    |V5 a|V1 a|I58a|    |
210.#254 rax  Kill   Keep  rax  |    |    |    |    |    |V5 a|V1 a|    |    |
210.#255 rcx  Kill   Keep  rcx  |    |    |    |    |    |V5 a|V1 a|    |    |
210.#256 rdx  Kill   Keep  rdx  |    |    |    |    |    |V5 a|V1 a|    |    |
210.#257 r8   Kill   Keep  r8   |    |    |    |    |    |V5 a|V1 a|    |    |
210.#258 r9   Kill   Keep  r9   |    |    |    |    |    |V5 a|V1 a|    |    |
210.#259 r10  Kill   Keep  r10  |    |    |    |    |    |V5 a|V1 a|    |    |
210.#260 r11  Kill   Keep  r11  |    |    |    |    |    |V5 a|V1 a|    |    |
217.#261 V5   Use    Keep  rsi  |    |    |    |    |    |V5 a|V1 a|    |    |
218.#262 I59  Def    Alloc rcx  |    |I59a|    |    |    |V5 a|V1 a|    |    |
219.#263 rcx  Fixd   Keep  rcx  |    |I59a|    |    |    |V5 a|V1 a|    |    |
219.#264 I59  Use *  Keep  rcx  |    |I59a|    |    |    |V5 a|V1 a|    |    |
220.#265 rcx  Fixd   Keep  rcx  |    |    |    |    |    |V5 a|V1 a|    |    |
220.#266 I60  Def    Alloc rcx  |    |I60a|    |    |    |V5 a|V1 a|    |    |
222.#267 C61  Def    Alloc rdx  |    |I60a|C61a|    |    |V5 a|V1 a|    |    |
223.#268 C61  Use *  Keep  rdx  |    |I60a|C61a|    |    |V5 a|V1 a|    |    |
224.#269 I62  Def    Alloc rdx  |    |I60a|I62a|    |    |V5 a|V1 a|    |    |
225.#270 rdx  Fixd   Keep  rdx  |    |I60a|I62a|    |    |V5 a|V1 a|    |    |
225.#271 I62  Use *  Keep  rdx  |    |I60a|I62a|    |    |V5 a|V1 a|    |    |
226.#272 rdx  Fixd   Keep  rdx  |    |I60a|    |    |    |V5 a|V1 a|    |    |
226.#273 I63  Def    Alloc rdx  |    |I60a|I63a|    |    |V5 a|V1 a|    |    |
228.#274 C64  Def    Alloc r8   |    |I60a|I63a|    |    |V5 a|V1 a|C64a|    |
229.#275 C64  Use *  Keep  r8   |    |I60a|I63a|    |    |V5 a|V1 a|C64a|    |
230.#276 I65  Def    Alloc r8   |    |I60a|I63a|    |    |V5 a|V1 a|I65a|    |
231.#277 r8   Fixd   Keep  r8   |    |I60a|I63a|    |    |V5 a|V1 a|I65a|    |
231.#278 I65  Use *  Keep  r8   |    |I60a|I63a|    |    |V5 a|V1 a|I65a|    |
232.#279 r8   Fixd   Keep  r8   |    |I60a|I63a|    |    |V5 a|V1 a|    |    |
232.#280 I66  Def    Alloc r8   |    |I60a|I63a|    |    |V5 a|V1 a|I66a|    |
233.#281 rcx  Fixd   Keep  rcx  |    |I60a|I63a|    |    |V5 a|V1 a|I66a|    |
233.#282 I60  Use *  Keep  rcx  |    |I60a|I63a|    |    |V5 a|V1 a|I66a|    |
233.#283 rdx  Fixd   Keep  rdx  |    |I60a|I63a|    |    |V5 a|V1 a|I66a|    |
233.#284 I63  Use *  Keep  rdx  |    |I60a|I63a|    |    |V5 a|V1 a|I66a|    |
233.#285 r8   Fixd   Keep  r8   |    |I60a|I63a|    |    |V5 a|V1 a|I66a|    |
233.#286 I66  Use *  Keep  r8   |    |I60a|I63a|    |    |V5 a|V1 a|I66a|    |
234.#287 rax  Kill   Keep  rax  |    |    |    |    |    |V5 a|V1 a|    |    |
234.#288 rcx  Kill   Keep  rcx  |    |    |    |    |    |V5 a|V1 a|    |    |
234.#289 rdx  Kill   Keep  rdx  |    |    |    |    |    |V5 a|V1 a|    |    |
234.#290 r8   Kill   Keep  r8   |    |    |    |    |    |V5 a|V1 a|    |    |
234.#291 r9   Kill   Keep  r9   |    |    |    |    |    |V5 a|V1 a|    |    |
234.#292 r10  Kill   Keep  r10  |    |    |    |    |    |V5 a|V1 a|    |    |
234.#293 r11  Kill   Keep  r11  |    |    |    |    |    |V5 a|V1 a|    |    |
--------------------------------+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
--------------------------------+----+----+----+----+----+----+----+----+----+
238.#294 C67  Def    Alloc rcx  |    |C67a|    |    |    |V5 a|V1 a|    |    |
239.#295 rcx  Fixd   Keep  rcx  |    |C67a|    |    |    |V5 a|V1 a|    |    |
239.#296 C67  Use *  Keep  rcx  |    |C67a|    |    |    |V5 a|V1 a|    |    |
240.#297 rcx  Fixd   Keep  rcx  |    |    |    |    |    |V5 a|V1 a|    |    |
240.#298 I68  Def    Alloc rcx  |    |I68a|    |    |    |V5 a|V1 a|    |    |
241.#299 rcx  Fixd   Keep  rcx  |    |I68a|    |    |    |V5 a|V1 a|    |    |
241.#300 I68  Use *  Keep  rcx  |    |I68a|    |    |    |V5 a|V1 a|    |    |
242.#301 rax  Kill   Keep  rax  |    |    |    |    |    |V5 a|V1 a|    |    |
242.#302 rcx  Kill   Keep  rcx  |    |    |    |    |    |V5 a|V1 a|    |    |
242.#303 rdx  Kill   Keep  rdx  |    |    |    |    |    |V5 a|V1 a|    |    |
242.#304 r8   Kill   Keep  r8   |    |    |    |    |    |V5 a|V1 a|    |    |
242.#305 r9   Kill   Keep  r9   |    |    |    |    |    |V5 a|V1 a|    |    |
242.#306 r10  Kill   Keep  r10  |    |    |    |    |    |V5 a|V1 a|    |    |
242.#307 r11  Kill   Keep  r11  |    |    |    |    |    |V5 a|V1 a|    |    |
242.#308 rax  Fixd   Keep  rax  |    |    |    |    |    |V5 a|V1 a|    |    |
242.#309 I69  Def    Alloc rax  |I69a|    |    |    |    |V5 a|V1 a|    |    |
243.#310 I69  Use *  Keep  rax  |I69a|    |    |    |    |V5 a|V1 a|    |    |
244.#311 V6   Def    Alloc rbx  |    |    |    |V6 a|    |V5 a|V1 a|    |    |
247.#312 V6   Use    Keep  rbx  |    |    |    |V6 a|    |V5 a|V1 a|    |    |
248.#313 I70  Def    Alloc rcx  |    |I70a|    |V6 a|    |V5 a|V1 a|    |    |
251.#314 rcx  Fixd   Keep  rcx  |    |I70a|    |V6 a|    |V5 a|V1 a|    |    |
251.#315 I70  Use *  Keep  rcx  |    |I70a|    |V6 a|    |V5 a|V1 a|    |    |
251.#316 rdx  Fixd   Keep  rdx  |    |I70a|    |V6 a|    |V5 a|V1 a|    |    |
251.#317 V1   Use *  Copy  rdx  |    |I70a|V1 a|V6 a|    |V5 a|V1 a|    |    |
252.#318 rax  Kill   Keep  rax  |    |    |    |V6 a|    |V5 a|    |    |    |
252.#319 rcx  Kill   Keep  rcx  |    |    |    |V6 a|    |V5 a|    |    |    |
252.#320 rdx  Kill   Keep  rdx  |    |    |    |V6 a|    |V5 a|    |    |    |
252.#321 r8   Kill   Keep  r8   |    |    |    |V6 a|    |V5 a|    |    |    |
252.#322 r9   Kill   Keep  r9   |    |    |    |V6 a|    |V5 a|    |    |    |
252.#323 r10  Kill   Keep  r10  |    |    |    |V6 a|    |V5 a|    |    |    |
252.#324 r11  Kill   Keep  r11  |    |    |    |V6 a|    |V5 a|    |    |    |
252.#325 mm0  Kill   Keep  mm0  |    |    |    |V6 a|    |V5 a|    |    |    |
252.#326 mm1  Kill   Keep  mm1  |    |    |    |V6 a|    |V5 a|    |    |    |
252.#327 mm2  Kill   Keep  mm2  |    |    |    |V6 a|    |V5 a|    |    |    |
252.#328 mm3  Kill   Keep  mm3  |    |    |    |V6 a|    |V5 a|    |    |    |
252.#329 mm4  Kill   Keep  mm4  |    |    |    |V6 a|    |V5 a|    |    |    |
252.#330 mm5  Kill   Keep  mm5  |    |    |    |V6 a|    |V5 a|    |    |    |
258.#331 C71  Def    Alloc rcx  |    |C71a|    |V6 a|    |V5 a|    |    |    |
259.#332 V6   Use    Keep  rbx  |    |C71a|    |V6 a|    |V5 a|    |    |    |
259.#333 C71  Use *  Keep  rcx  |    |C71a|    |V6 a|    |V5 a|    |    |    |
265.#334 rcx  Fixd   Keep  rcx  |    |    |    |V6 a|    |V5 a|    |    |    |
265.#335 V5   Use    Copy  rcx  |    |V5 a|    |V6 a|    |V5 a|    |    |    |
266.#336 rcx  Fixd   Keep  rcx  |    |V5 a|    |V6 a|    |V5 a|    |    |    |
266.#337 I72  Def    Alloc rcx  |    |I72a|    |V6 a|    |V5 a|    |    |    |
269.#338 rdx  Fixd   Keep  rdx  |    |I72a|    |V6 a|    |V5 a|    |    |    |
269.#339 V6   Use *  Copy  rdx  |    |I72a|V6 a|V6 a|    |V5 a|    |    |    |
270.#340 rdx  Fixd   Keep  rdx  |    |I72a|    |    |    |V5 a|    |    |    |
270.#341 I73  Def    Alloc rdx  |    |I72a|I73a|    |    |V5 a|    |    |    |
271.#342 rcx  Fixd   Keep  rcx  |    |I72a|I73a|    |    |V5 a|    |    |    |
271.#343 I72  Use *  Keep  rcx  |    |I72a|I73a|    |    |V5 a|    |    |    |
271.#344 rdx  Fixd   Keep  rdx  |    |I72a|I73a|    |    |V5 a|    |    |    |
--------------------------------+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
--------------------------------+----+----+----+----+----+----+----+----+----+
271.#345 I73  Use *  Keep  rdx  |    |I72a|I73a|    |    |V5 a|    |    |    |
272.#346 rax  Kill   Keep  rax  |    |    |    |    |    |V5 a|    |    |    |
272.#347 rcx  Kill   Keep  rcx  |    |    |    |    |    |V5 a|    |    |    |
272.#348 rdx  Kill   Keep  rdx  |    |    |    |    |    |V5 a|    |    |    |
272.#349 r8   Kill   Keep  r8   |    |    |    |    |    |V5 a|    |    |    |
272.#350 r9   Kill   Keep  r9   |    |    |    |    |    |V5 a|    |    |    |
272.#351 r10  Kill   Keep  r10  |    |    |    |    |    |V5 a|    |    |    |
272.#352 r11  Kill   Keep  r11  |    |    |    |    |    |V5 a|    |    |    |
277.#353 rax  Fixd   Keep  rax  |    |    |    |    |    |V5 a|    |    |    |
277.#354 V5   Use *  Copy  rax  |    |    |    |    |    |    |    |    |    |

------------
REFPOSITIONS AFTER ALLOCATION: 
------------
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00>  BB00 regmask=[rsi] minReg=1 regOptional>
<RefPosition #1   @1   RefTypeBB  BB01 regmask=[] minReg=1>
<RefPosition #2   @6   RefTypeDef <Ivl:15> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #3   @7   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #4   @7   RefTypeUse <Ivl:15>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #5   @8   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #6   @8   RefTypeDef <Ivl:16> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #7   @9   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #8   @9   RefTypeUse <Ivl:16>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #9   @10  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #10  @10  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #11  @10  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #12  @10  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #13  @10  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #14  @10  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #15  @10  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #16  @10  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #17  @10  RefTypeDef <Ivl:17> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #18  @11  RefTypeUse <Ivl:17>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #19  @12  RefTypeDef <Ivl:2 V03> STORE_LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #20  @17  RefTypeUse <Ivl:2 V03> LCL_VAR BB01 regmask=[rdi] minReg=1 last>
<RefPosition #21  @18  RefTypeDef <Ivl:1 V01> STORE_LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #22  @23  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #23  @24  RefTypeDef <Ivl:18> LEA BB01 regmask=[rcx] minReg=1>
<RefPosition #24  @27  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #25  @27  RefTypeUse <Ivl:18>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #26  @27  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #27  @27  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rdx] minReg=1 last copy fixed>
<RefPosition #28  @28  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #29  @28  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #30  @28  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #31  @28  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #32  @28  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #33  @28  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #34  @28  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #35  @28  RefTypeKill <Reg:mm0>  BB01 regmask=[mm0] minReg=1 last>
<RefPosition #36  @28  RefTypeKill <Reg:mm1>  BB01 regmask=[mm1] minReg=1 last>
<RefPosition #37  @28  RefTypeKill <Reg:mm2>  BB01 regmask=[mm2] minReg=1 last>
<RefPosition #38  @28  RefTypeKill <Reg:mm3>  BB01 regmask=[mm3] minReg=1 last>
<RefPosition #39  @28  RefTypeKill <Reg:mm4>  BB01 regmask=[mm4] minReg=1 last>
<RefPosition #40  @28  RefTypeKill <Reg:mm5>  BB01 regmask=[mm5] minReg=1 last>
<RefPosition #41  @30  RefTypeDef <Ivl:19> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #42  @31  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #43  @31  RefTypeUse <Ivl:19>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #44  @32  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #45  @32  RefTypeDef <Ivl:20> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #46  @33  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #47  @33  RefTypeUse <Ivl:20>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #48  @34  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #49  @34  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #50  @34  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #51  @34  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #52  @34  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #53  @34  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #54  @34  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #55  @34  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #56  @34  RefTypeDef <Ivl:21> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #57  @35  RefTypeUse <Ivl:21>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #58  @36  RefTypeDef <Ivl:3 V04> STORE_LCL_VAR BB01 regmask=[rsi] minReg=1>
<RefPosition #59  @38  RefTypeDef <Ivl:22> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #60  @39  RefTypeUse <Ivl:22>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #61  @40  RefTypeDef <Ivl:23> IND BB01 regmask=[r8] minReg=1>
<RefPosition #62  @41  RefTypeUse <Ivl:23>  BB01 regmask=[r8] minReg=1 last>
<RefPosition #63  @42  RefTypeDef <Ivl:6 V07> STORE_LCL_VAR BB01 regmask=[r8] minReg=1>
<RefPosition #64  @45  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #65  @45  RefTypeUse <Ivl:3 V04> LCL_VAR BB01 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #66  @46  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #67  @46  RefTypeDef <Ivl:24> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #68  @49  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #69  @49  RefTypeUse <Ivl:6 V07> LCL_VAR BB01 regmask=[r8] minReg=1 last fixed>
<RefPosition #70  @50  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #71  @50  RefTypeDef <Ivl:25> PUTARG_REG BB01 regmask=[r8] minReg=1 fixed>
<RefPosition #72  @52  RefTypeDef <Ivl:26> CNS_INT BB01 regmask=[rdx] minReg=1>
<RefPosition #73  @53  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #74  @53  RefTypeUse <Ivl:26>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #75  @54  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #76  @54  RefTypeDef <Ivl:27> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>
<RefPosition #77  @55  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #78  @55  RefTypeUse <Ivl:24>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #79  @55  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #80  @55  RefTypeUse <Ivl:25>  BB01 regmask=[r8] minReg=1 last fixed>
<RefPosition #81  @55  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #82  @55  RefTypeUse <Ivl:27>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #83  @56  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #84  @56  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #85  @56  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #86  @56  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #87  @56  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #88  @56  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #89  @56  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #90  @60  RefTypeDef <Ivl:28> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #91  @61  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #92  @61  RefTypeUse <Ivl:28>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #93  @62  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #94  @62  RefTypeDef <Ivl:29> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #95  @64  RefTypeDef <Ivl:30> CNS_INT BB01 regmask=[rdx] minReg=1>
<RefPosition #96  @65  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #97  @65  RefTypeUse <Ivl:30>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #98  @66  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #99  @66  RefTypeDef <Ivl:31> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>
<RefPosition #100 @67  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #101 @67  RefTypeUse <Ivl:29>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #102 @67  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #103 @67  RefTypeUse <Ivl:31>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #104 @68  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #105 @68  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #106 @68  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #107 @68  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #108 @68  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #109 @68  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #110 @68  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #111 @68  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #112 @68  RefTypeDef <Ivl:32> CALL BB01 regmask=[rax] minReg=1 last fixed local>
<RefPosition #113 @70  RefTypeDef <Ivl:33> CNS_INT BB01 regmask=[rdx] minReg=1>
<RefPosition #114 @71  RefTypeUse <Ivl:33>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #115 @72  RefTypeDef <Ivl:34> IND BB01 regmask=[r8] minReg=1>
<RefPosition #116 @73  RefTypeUse <Ivl:34>  BB01 regmask=[r8] minReg=1 last>
<RefPosition #117 @74  RefTypeDef <Ivl:7 V08> STORE_LCL_VAR BB01 regmask=[r8] minReg=1>
<RefPosition #118 @78  RefTypeDef <Ivl:35> CNS_INT BB01 regmask=[rdx] minReg=1>
<RefPosition #119 @79  RefTypeUse <Ivl:35>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #120 @80  RefTypeDef <Ivl:36> IND BB01 regmask=[rdx] minReg=1>
<RefPosition #121 @81  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #122 @81  RefTypeUse <Ivl:36>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #123 @82  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #124 @82  RefTypeDef <Ivl:37> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>
<RefPosition #125 @85  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #126 @85  RefTypeUse <Ivl:3 V04> LCL_VAR BB01 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #127 @86  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #128 @86  RefTypeDef <Ivl:38> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #129 @89  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #130 @89  RefTypeUse <Ivl:7 V08> LCL_VAR BB01 regmask=[r8] minReg=1 last fixed>
<RefPosition #131 @90  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #132 @90  RefTypeDef <Ivl:39> PUTARG_REG BB01 regmask=[r8] minReg=1 fixed>
<RefPosition #133 @92  RefTypeDef <Ivl:40> CNS_INT BB01 regmask=[r9] minReg=1>
<RefPosition #134 @93  RefTypeFixedReg <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #135 @93  RefTypeUse <Ivl:40>  BB01 regmask=[r9] minReg=1 last fixed>
<RefPosition #136 @94  RefTypeFixedReg <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #137 @94  RefTypeDef <Ivl:41> PUTARG_REG BB01 regmask=[r9] minReg=1 fixed>
<RefPosition #138 @95  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #139 @95  RefTypeUse <Ivl:37>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #140 @95  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #141 @95  RefTypeUse <Ivl:38>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #142 @95  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #143 @95  RefTypeUse <Ivl:39>  BB01 regmask=[r8] minReg=1 last fixed>
<RefPosition #144 @95  RefTypeFixedReg <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #145 @95  RefTypeUse <Ivl:41>  BB01 regmask=[r9] minReg=1 last fixed>
<RefPosition #146 @96  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #147 @96  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #148 @96  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #149 @96  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #150 @96  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #151 @96  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #152 @96  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #153 @96  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #154 @96  RefTypeDef <Ivl:42> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #155 @97  RefTypeUse <Ivl:42>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #156 @98  RefTypeDef <Ivl:8 V09> STORE_LCL_VAR BB01 regmask=[rax] minReg=1>
<RefPosition #157 @102 RefTypeDef <Ivl:43> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #158 @103 RefTypeUse <Ivl:43>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #159 @104 RefTypeDef <Ivl:44> IND BB01 regmask=[rdx] minReg=1>
<RefPosition #160 @105 RefTypeUse <Ivl:44>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #161 @106 RefTypeDef <Ivl:14 V17> STORE_LCL_VAR BB01 regmask=[rdx] minReg=1>
<RefPosition #162 @111 RefTypeUse <Ivl:14 V17> LCL_VAR BB01 regmask=[rdx] minReg=1 last>
<RefPosition #163 @112 RefTypeDef <Ivl:9 V11> STORE_LCL_VAR BB01 regmask=[rdx] minReg=1>
<RefPosition #164 @119 RefTypeUse <Ivl:8 V09> LCL_VAR BB01 regmask=[rax] minReg=1 last regOptional>
<RefPosition #165 @123 RefTypeBB  BB02 regmask=[] minReg=1>
<RefPosition #166 @129 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #167 @129 RefTypeUse <Ivl:9 V11> LCL_VAR BB02 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #168 @130 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #169 @130 RefTypeDef <Ivl:45> PUTARG_REG BB02 regmask=[rcx] minReg=1 fixed>
<RefPosition #170 @133 RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #171 @133 RefTypeUse <Ivl:9 V11> LCL_VAR BB02 regmask=[rdx] minReg=1 last fixed>
<RefPosition #172 @134 RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #173 @134 RefTypeDef <Ivl:46> PUTARG_REG BB02 regmask=[rdx] minReg=1 fixed>
<RefPosition #174 @135 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #175 @135 RefTypeUse <Ivl:45>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #176 @135 RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #177 @135 RefTypeUse <Ivl:46>  BB02 regmask=[rdx] minReg=1 last fixed>
<RefPosition #178 @136 RefTypeKill <Reg:rax>  BB02 regmask=[rax] minReg=1 last>
<RefPosition #179 @136 RefTypeKill <Reg:rcx>  BB02 regmask=[rcx] minReg=1 last>
<RefPosition #180 @136 RefTypeKill <Reg:rdx>  BB02 regmask=[rdx] minReg=1 last>
<RefPosition #181 @136 RefTypeKill <Reg:r8 >  BB02 regmask=[r8] minReg=1 last>
<RefPosition #182 @136 RefTypeKill <Reg:r9 >  BB02 regmask=[r9] minReg=1 last>
<RefPosition #183 @136 RefTypeKill <Reg:r10>  BB02 regmask=[r10] minReg=1 last>
<RefPosition #184 @136 RefTypeKill <Reg:r11>  BB02 regmask=[r11] minReg=1 last>
<RefPosition #185 @137 RefTypeBB  BB03 regmask=[] minReg=1>
<RefPosition #186 @140 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #187 @140 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #188 @140 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #189 @140 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #190 @140 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #191 @140 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #192 @140 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #193 @140 RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #194 @140 RefTypeDef <Ivl:47> CALL BB03 regmask=[rax] minReg=1 fixed>
<RefPosition #195 @141 RefTypeUse <Ivl:47>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #196 @142 RefTypeDef <Ivl:12 V15> STORE_LCL_VAR BB03 regmask=[rdx] minReg=1>
<RefPosition #197 @145 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #198 @145 RefTypeUse <Ivl:12 V15> LCL_VAR BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #199 @146 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #200 @146 RefTypeDef <Ivl:48> PUTARG_REG BB03 regmask=[rdx] minReg=1 fixed>
<RefPosition #201 @149 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #202 @149 RefTypeUse <Ivl:3 V04> LCL_VAR BB03 regmask=[rcx] minReg=1 last copy fixed>
<RefPosition #203 @150 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #204 @150 RefTypeDef <Ivl:49> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>
<RefPosition #205 @151 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #206 @151 RefTypeUse <Ivl:48>  BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #207 @151 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #208 @151 RefTypeUse <Ivl:49>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #209 @152 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #210 @152 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #211 @152 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #212 @152 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #213 @152 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #214 @152 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #215 @152 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #216 @152 RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #217 @152 RefTypeDef <Ivl:50> CALL BB03 regmask=[rax] minReg=1 fixed>
<RefPosition #218 @153 RefTypeUse <Ivl:50>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #219 @154 RefTypeDef <Ivl:4 V05> STORE_LCL_VAR BB03 regmask=[rsi] minReg=1>
<RefPosition #220 @159 RefTypeUse <Ivl:4 V05> LCL_VAR BB03 regmask=[rsi] minReg=1>
<RefPosition #221 @160 RefTypeDef <Ivl:51> IND BB03 regmask=[rcx] minReg=1>
<RefPosition #222 @161 RefTypeUse <Ivl:51>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #223 @162 RefTypeDef <Ivl:13 V16> STORE_LCL_VAR BB03 regmask=[rcx] minReg=1>
<RefPosition #224 @165 RefTypeUse <Ivl:13 V16> LCL_VAR BB03 regmask=[rcx] minReg=1>
<RefPosition #225 @166 RefTypeDef <Ivl:10 V12> STORE_LCL_VAR BB03 regmask=[rdx] minReg=1>
<RefPosition #226 @173 RefTypeUse <Ivl:10 V12> LCL_VAR BB03 regmask=[rdx] minReg=1 last>
<RefPosition #227 @179 RefTypeUse <Ivl:13 V16> LCL_VAR BB03 regmask=[rcx] minReg=1>
<RefPosition #228 @180 RefTypeDef <Ivl:11 V13> STORE_LCL_VAR BB03 regmask=[rdx] minReg=1>
<RefPosition #229 @189 RefTypeUse <Ivl:11 V13> LCL_VAR BB03 regmask=[rdx] minReg=1 last>
<RefPosition #230 @195 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #231 @195 RefTypeUse <Ivl:13 V16> LCL_VAR BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #232 @196 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #233 @196 RefTypeDef <Ivl:52> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>
<RefPosition #234 @198 RefTypeDef <Ivl:53> CNS_INT BB03 regmask=[rdx] minReg=1>
<RefPosition #235 @199 RefTypeUse <Ivl:53>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #236 @200 RefTypeDef <Ivl:54> IND BB03 regmask=[rdx] minReg=1>
<RefPosition #237 @201 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #238 @201 RefTypeUse <Ivl:54>  BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #239 @202 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #240 @202 RefTypeDef <Ivl:55> PUTARG_REG BB03 regmask=[rdx] minReg=1 fixed>
<RefPosition #241 @204 RefTypeDef <Ivl:56> CNS_INT BB03 regmask=[r8] minReg=1>
<RefPosition #242 @205 RefTypeUse <Ivl:56>  BB03 regmask=[r8] minReg=1 last>
<RefPosition #243 @206 RefTypeDef <Ivl:57> IND BB03 regmask=[r8] minReg=1>
<RefPosition #244 @207 RefTypeFixedReg <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #245 @207 RefTypeUse <Ivl:57>  BB03 regmask=[r8] minReg=1 last fixed>
<RefPosition #246 @208 RefTypeFixedReg <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #247 @208 RefTypeDef <Ivl:58> PUTARG_REG BB03 regmask=[r8] minReg=1 fixed>
<RefPosition #248 @209 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #249 @209 RefTypeUse <Ivl:52>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #250 @209 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #251 @209 RefTypeUse <Ivl:55>  BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #252 @209 RefTypeFixedReg <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #253 @209 RefTypeUse <Ivl:58>  BB03 regmask=[r8] minReg=1 last fixed>
<RefPosition #254 @210 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #255 @210 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #256 @210 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #257 @210 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #258 @210 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #259 @210 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #260 @210 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #261 @217 RefTypeUse <Ivl:4 V05> LCL_VAR BB03 regmask=[rsi] minReg=1>
<RefPosition #262 @218 RefTypeDef <Ivl:59> IND BB03 regmask=[rcx] minReg=1>
<RefPosition #263 @219 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #264 @219 RefTypeUse <Ivl:59>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #265 @220 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #266 @220 RefTypeDef <Ivl:60> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>
<RefPosition #267 @222 RefTypeDef <Ivl:61> CNS_INT BB03 regmask=[rdx] minReg=1>
<RefPosition #268 @223 RefTypeUse <Ivl:61>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #269 @224 RefTypeDef <Ivl:62> IND BB03 regmask=[rdx] minReg=1>
<RefPosition #270 @225 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #271 @225 RefTypeUse <Ivl:62>  BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #272 @226 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #273 @226 RefTypeDef <Ivl:63> PUTARG_REG BB03 regmask=[rdx] minReg=1 fixed>
<RefPosition #274 @228 RefTypeDef <Ivl:64> CNS_INT BB03 regmask=[r8] minReg=1>
<RefPosition #275 @229 RefTypeUse <Ivl:64>  BB03 regmask=[r8] minReg=1 last>
<RefPosition #276 @230 RefTypeDef <Ivl:65> IND BB03 regmask=[r8] minReg=1>
<RefPosition #277 @231 RefTypeFixedReg <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #278 @231 RefTypeUse <Ivl:65>  BB03 regmask=[r8] minReg=1 last fixed>
<RefPosition #279 @232 RefTypeFixedReg <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #280 @232 RefTypeDef <Ivl:66> PUTARG_REG BB03 regmask=[r8] minReg=1 fixed>
<RefPosition #281 @233 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #282 @233 RefTypeUse <Ivl:60>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #283 @233 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #284 @233 RefTypeUse <Ivl:63>  BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #285 @233 RefTypeFixedReg <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #286 @233 RefTypeUse <Ivl:66>  BB03 regmask=[r8] minReg=1 last fixed>
<RefPosition #287 @234 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #288 @234 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #289 @234 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #290 @234 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #291 @234 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #292 @234 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #293 @234 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #294 @238 RefTypeDef <Ivl:67> CNS_INT BB03 regmask=[rcx] minReg=1>
<RefPosition #295 @239 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #296 @239 RefTypeUse <Ivl:67>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #297 @240 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #298 @240 RefTypeDef <Ivl:68> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>
<RefPosition #299 @241 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #300 @241 RefTypeUse <Ivl:68>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #301 @242 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #302 @242 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #303 @242 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #304 @242 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #305 @242 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #306 @242 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #307 @242 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #308 @242 RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #309 @242 RefTypeDef <Ivl:69> CALL BB03 regmask=[rax] minReg=1 fixed>
<RefPosition #310 @243 RefTypeUse <Ivl:69>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #311 @244 RefTypeDef <Ivl:5 V06> STORE_LCL_VAR BB03 regmask=[rbx] minReg=1>
<RefPosition #312 @247 RefTypeUse <Ivl:5 V06> LCL_VAR BB03 regmask=[rbx] minReg=1>
<RefPosition #313 @248 RefTypeDef <Ivl:70> LEA BB03 regmask=[rcx] minReg=1>
<RefPosition #314 @251 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #315 @251 RefTypeUse <Ivl:70>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #316 @251 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #317 @251 RefTypeUse <Ivl:1 V01> LCL_VAR BB03 regmask=[rdx] minReg=1 last copy fixed>
<RefPosition #318 @252 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #319 @252 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #320 @252 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #321 @252 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #322 @252 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #323 @252 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #324 @252 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #325 @252 RefTypeKill <Reg:mm0>  BB03 regmask=[mm0] minReg=1 last>
<RefPosition #326 @252 RefTypeKill <Reg:mm1>  BB03 regmask=[mm1] minReg=1 last>
<RefPosition #327 @252 RefTypeKill <Reg:mm2>  BB03 regmask=[mm2] minReg=1 last>
<RefPosition #328 @252 RefTypeKill <Reg:mm3>  BB03 regmask=[mm3] minReg=1 last>
<RefPosition #329 @252 RefTypeKill <Reg:mm4>  BB03 regmask=[mm4] minReg=1 last>
<RefPosition #330 @252 RefTypeKill <Reg:mm5>  BB03 regmask=[mm5] minReg=1 last>
<RefPosition #331 @258 RefTypeDef <Ivl:71> CNS_INT BB03 regmask=[rcx] minReg=1>
<RefPosition #332 @259 RefTypeUse <Ivl:5 V06> LCL_VAR BB03 regmask=[rbx] minReg=1>
<RefPosition #333 @259 RefTypeUse <Ivl:71>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #334 @265 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #335 @265 RefTypeUse <Ivl:4 V05> LCL_VAR BB03 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #336 @266 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #337 @266 RefTypeDef <Ivl:72> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>
<RefPosition #338 @269 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #339 @269 RefTypeUse <Ivl:5 V06> LCL_VAR BB03 regmask=[rdx] minReg=1 last copy fixed>
<RefPosition #340 @270 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #341 @270 RefTypeDef <Ivl:73> PUTARG_REG BB03 regmask=[rdx] minReg=1 fixed>
<RefPosition #342 @271 RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #343 @271 RefTypeUse <Ivl:72>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #344 @271 RefTypeFixedReg <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #345 @271 RefTypeUse <Ivl:73>  BB03 regmask=[rdx] minReg=1 last fixed>
<RefPosition #346 @272 RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #347 @272 RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #348 @272 RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #349 @272 RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #350 @272 RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #351 @272 RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #352 @272 RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #353 @277 RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #354 @277 RefTypeUse <Ivl:4 V05> LCL_VAR BB03 regmask=[rax] minReg=1 last copy fixed>

VAR REFPOSITIONS AFTER ALLOCATION
--- V00  (Interval 0)
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00>  BB00 regmask=[rsi] minReg=1 regOptional>
<RefPosition #27  @27  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rdx] minReg=1 last copy fixed>
--- V01  (Interval 1)
<RefPosition #21  @18  RefTypeDef <Ivl:1 V01> STORE_LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #22  @23  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #317 @251 RefTypeUse <Ivl:1 V01> LCL_VAR BB03 regmask=[rdx] minReg=1 last copy fixed>
--- V02
--- V03  (Interval 2)
<RefPosition #19  @12  RefTypeDef <Ivl:2 V03> STORE_LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #20  @17  RefTypeUse <Ivl:2 V03> LCL_VAR BB01 regmask=[rdi] minReg=1 last>
--- V04  (Interval 3)
<RefPosition #58  @36  RefTypeDef <Ivl:3 V04> STORE_LCL_VAR BB01 regmask=[rsi] minReg=1>
<RefPosition #65  @45  RefTypeUse <Ivl:3 V04> LCL_VAR BB01 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #126 @85  RefTypeUse <Ivl:3 V04> LCL_VAR BB01 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #202 @149 RefTypeUse <Ivl:3 V04> LCL_VAR BB03 regmask=[rcx] minReg=1 last copy fixed>
--- V05  (Interval 4)
<RefPosition #219 @154 RefTypeDef <Ivl:4 V05> STORE_LCL_VAR BB03 regmask=[rsi] minReg=1>
<RefPosition #220 @159 RefTypeUse <Ivl:4 V05> LCL_VAR BB03 regmask=[rsi] minReg=1>
<RefPosition #261 @217 RefTypeUse <Ivl:4 V05> LCL_VAR BB03 regmask=[rsi] minReg=1>
<RefPosition #335 @265 RefTypeUse <Ivl:4 V05> LCL_VAR BB03 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #354 @277 RefTypeUse <Ivl:4 V05> LCL_VAR BB03 regmask=[rax] minReg=1 last copy fixed>
--- V06  (Interval 5)
<RefPosition #311 @244 RefTypeDef <Ivl:5 V06> STORE_LCL_VAR BB03 regmask=[rbx] minReg=1>
<RefPosition #312 @247 RefTypeUse <Ivl:5 V06> LCL_VAR BB03 regmask=[rbx] minReg=1>
<RefPosition #332 @259 RefTypeUse <Ivl:5 V06> LCL_VAR BB03 regmask=[rbx] minReg=1>
<RefPosition #339 @269 RefTypeUse <Ivl:5 V06> LCL_VAR BB03 regmask=[rdx] minReg=1 last copy fixed>
--- V07  (Interval 6)
<RefPosition #63  @42  RefTypeDef <Ivl:6 V07> STORE_LCL_VAR BB01 regmask=[r8] minReg=1>
<RefPosition #69  @49  RefTypeUse <Ivl:6 V07> LCL_VAR BB01 regmask=[r8] minReg=1 last fixed>
--- V08  (Interval 7)
<RefPosition #117 @74  RefTypeDef <Ivl:7 V08> STORE_LCL_VAR BB01 regmask=[r8] minReg=1>
<RefPosition #130 @89  RefTypeUse <Ivl:7 V08> LCL_VAR BB01 regmask=[r8] minReg=1 last fixed>
--- V09  (Interval 8)
<RefPosition #156 @98  RefTypeDef <Ivl:8 V09> STORE_LCL_VAR BB01 regmask=[rax] minReg=1>
<RefPosition #164 @119 RefTypeUse <Ivl:8 V09> LCL_VAR BB01 regmask=[rax] minReg=1 last regOptional>
--- V10
--- V11  (Interval 9)
<RefPosition #163 @112 RefTypeDef <Ivl:9 V11> STORE_LCL_VAR BB01 regmask=[rdx] minReg=1>
<RefPosition #167 @129 RefTypeUse <Ivl:9 V11> LCL_VAR BB02 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #171 @133 RefTypeUse <Ivl:9 V11> LCL_VAR BB02 regmask=[rdx] minReg=1 last fixed>
--- V12  (Interval 10)
<RefPosition #225 @166 RefTypeDef <Ivl:10 V12> STORE_LCL_VAR BB03 regmask=[rdx] minReg=1>
<RefPosition #226 @173 RefTypeUse <Ivl:10 V12> LCL_VAR BB03 regmask=[rdx] minReg=1 last>
--- V13  (Interval 11)
<RefPosition #228 @180 RefTypeDef <Ivl:11 V13> STORE_LCL_VAR BB03 regmask=[rdx] minReg=1>
<RefPosition #229 @189 RefTypeUse <Ivl:11 V13> LCL_VAR BB03 regmask=[rdx] minReg=1 last>
--- V14
--- V15  (Interval 12)
<RefPosition #196 @142 RefTypeDef <Ivl:12 V15> STORE_LCL_VAR BB03 regmask=[rdx] minReg=1>
<RefPosition #198 @145 RefTypeUse <Ivl:12 V15> LCL_VAR BB03 regmask=[rdx] minReg=1 last fixed>
--- V16  (Interval 13)
<RefPosition #223 @162 RefTypeDef <Ivl:13 V16> STORE_LCL_VAR BB03 regmask=[rcx] minReg=1>
<RefPosition #224 @165 RefTypeUse <Ivl:13 V16> LCL_VAR BB03 regmask=[rcx] minReg=1>
<RefPosition #227 @179 RefTypeUse <Ivl:13 V16> LCL_VAR BB03 regmask=[rcx] minReg=1>
<RefPosition #231 @195 RefTypeUse <Ivl:13 V16> LCL_VAR BB03 regmask=[rcx] minReg=1 last fixed>
--- V17  (Interval 14)
<RefPosition #161 @106 RefTypeDef <Ivl:14 V17> STORE_LCL_VAR BB01 regmask=[rdx] minReg=1>
<RefPosition #162 @111 RefTypeUse <Ivl:14 V17> LCL_VAR BB01 regmask=[rdx] minReg=1 last>

Active intervals at end of allocation:

-----------------------
RESOLVING BB BOUNDARIES
-----------------------
Resolution Candidates: {V00 V01 V04 V11}
Has Critical Edges

Prior to Resolution

BB01
use def in out
{V00}
{V01 V03 V04 V07 V08 V09 V10 V11 V17}
{V00}
{V01 V04 V11}
Var=Reg beg of BB01: V00=rsi 
Var=Reg end of BB01: V04=rsi V01=rdi V11=rdx 

BB02
use def in out
{V11}
{}
{V01 V04 V11}
{V01 V04}
Var=Reg beg of BB02: V04=rsi V01=rdi V11=rdx 
Var=Reg end of BB02: V04=rsi V01=rdi 

BB03
use def in out
{V01 V04}
{V05 V06 V12 V13 V15 V16}
{V01 V04}
{}
Var=Reg beg of BB03: V04=rsi V01=rdi 
Var=Reg end of BB03: none


RESOLVING EDGES
  Set V00 argument initial register to rsi
Trees after linear scan register allocator (LSRA)

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)-> BB03 ( cond )                     i label target hascall gcsafe newobj nullcheck LIR 
BB02 [0008]  1       BB01                  0.25    [017..018)                                     i hascall gcsafe LIR 
BB03 [0009]  2       BB01,BB02             1       [000..018)        (return)                     i label target hascall gcsafe newobj nullcheck LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06D) -> BB03 (cond), preds={} succs={BB02,BB03}
N003 (???,???) [000237] ------------                 IL_OFFSET void   IL offset: 0x0 REG NA
N005 (  2, 10) [000000] H-----------         t0 =    CNS_INT(h) long   0xd1ffab1e method REG rcx $100
                                                  /--*  t0     long   
N007 (???,???) [000258] ------------       t258 = *  PUTARG_REG long   REG rcx
                                                  /--*  t258   long   arg0 in rcx
N009 ( 16, 16) [000001] --C---------         t1 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $180
                                                  /--*  t1     ref    
N011 ( 16, 16) [000003] DA----------              *  STORE_LCL_VAR ref    V03 tmp1         d:2 rdi REG rdi
N013 (???,???) [000238] ------------                 IL_OFFSET void   IL offset: 0x5 REG NA
N015 (  1,  1) [000006] ------------         t6 =    LCL_VAR   ref    V03 tmp1         u:2 rdi (last use) REG rdi $180
                                                  /--*  t6     ref    
N017 (  1,  3) [000008] DA----------              *  STORE_LCL_VAR ref    V01 loc0         d:2 rdi REG rdi
N019 (???,???) [000239] ------------                 IL_OFFSET void   IL offset: 0x6 REG NA
N021 (  1,  1) [000009] ------------         t9 =    LCL_VAR   ref    V01 loc0         u:2 rdi REG rdi $180
                                                  /--*  t9     ref    
N023 (  2,  2) [000170] ------------       t170 = *  LEA(b+8)  byref  REG rcx
N025 (  1,  1) [000010] ------------        t10 =    LCL_VAR   ref    V00 arg0         u:1 rsi (last use) REG rsi $80
                                                  /--*  t170   byref  
                                                  +--*  t10    ref    
N027 (???,???) [000240] -A--GO------              *  STOREIND  ref    REG NA
N029 (  2, 10) [000015] H-----------        t15 =    CNS_INT(h) long   0xd1ffab1e token REG rcx $102
                                                  /--*  t15    long   
N031 (???,???) [000259] ------------       t259 = *  PUTARG_REG long   REG rcx
                                                  /--*  t259   long   arg0 in rcx
N033 ( 16, 16) [000016] --C---------        t16 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $183
                                                  /--*  t16    ref    
N035 ( 16, 16) [000018] DA----------              *  STORE_LCL_VAR ref    V04 tmp2         d:2 rsi REG rsi
N037 (  2, 10) [000172] I-----------       t172 =    CNS_INT(h) long   0xd1ffab1e static Fseq[Instance] REG rcx $103
                                                  /--*  t172   long   
N039 (  4, 12) [000067] n---G-------        t67 = *  IND       ref    REG r8 <l:$242, c:$145>
                                                  /--*  t67    ref    
N041 (  4, 12) [000073] DA--G-------              *  STORE_LCL_VAR ref    V07 tmp5         d:2 r8 REG r8
N043 (  1,  1) [000019] ------------        t19 =    LCL_VAR   ref    V04 tmp2         u:2 rsi REG rsi $183
                                                  /--*  t19    ref    
N045 (???,???) [000260] ------------       t260 = *  PUTARG_REG ref    REG rcx
N047 (  1,  1) [000070] ------------        t70 =    LCL_VAR   ref    V07 tmp5         u:2 r8 (last use) REG r8 <l:$242, c:$145>
                                                  /--*  t70    ref    
N049 (???,???) [000261] ------------       t261 = *  PUTARG_REG ref    REG r8
N051 (  1,  1) [000069] ------------        t69 =    CNS_INT   int    0 REG rdx $40
                                                  /--*  t69    int    
N053 (???,???) [000262] ------------       t262 = *  PUTARG_REG int    REG rdx
                                                  /--*  t260   ref    this in rcx
                                                  +--*  t261   ref    arg2 in r8
                                                  +--*  t262   int    arg1 in rdx
N055 ( 17, 12) [000071] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor REG NA $VN.Void
N057 (???,???) [000241] ------------                 IL_OFFSET void   IL offset: 0x17 REG NA
N059 (  2, 10) [000026] ------------        t26 =    CNS_INT   long   0x7ffc86100028 REG rcx $1c1
                                                  /--*  t26    long   
N061 (???,???) [000263] ------------       t263 = *  PUTARG_REG long   REG rcx
N063 (  1,  4) [000027] ------------        t27 =    CNS_INT   int    215 REG rdx $43
                                                  /--*  t27    int    
N065 (???,???) [000264] ------------       t264 = *  PUTARG_REG int    REG rdx
                                                  /--*  t263   long   arg0 in rcx
                                                  +--*  t264   int    arg1 in rdx
N067 ( 17, 21) [000028] H-CXG-------        t28 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE REG rax $301
N069 (  2, 10) [000178] I-----------       t178 =    CNS_INT(h) long   0xd1ffab1e static Fseq[FalseString] REG rdx $104
                                                  /--*  t178   long   
N071 (  4, 12) [000024] n---G-------        t24 = *  IND       ref    REG r8 <l:$243, c:$14a>
                                                  /--*  t24    ref    
N073 ( 21, 33) [000088] DA-XG-------              *  STORE_LCL_VAR ref    V08 tmp6         d:2 r8 REG r8
N075 (???,???) [000242] ------------                 IL_OFFSET void   IL offset: 0x17 REG NA
N077 (  2, 10) [000179] H-----------       t179 =    CNS_INT(h) long   0xD1FFAB1E "AlwaysCompileMarkupFilesInSeparateDomain" REG rdx $105
                                                  /--*  t179   long   
N079 (  4, 12) [000180] #---G-------       t180 = *  IND       ref    REG rdx $189
                                                  /--*  t180   ref    
N081 (???,???) [000265] ----G-------       t265 = *  PUTARG_REG ref    REG rdx
N083 (  1,  1) [000022] ------------        t22 =    LCL_VAR   ref    V04 tmp2         u:2 rsi REG rsi $183
                                                  /--*  t22    ref    
N085 (???,???) [000266] ------------       t266 = *  PUTARG_REG ref    REG rcx
N087 (  1,  1) [000076] ------------        t76 =    LCL_VAR   ref    V08 tmp6         u:2 r8 (last use) REG r8 <l:$243, c:$14a>
                                                  /--*  t76    ref    
N089 (???,???) [000267] ------------       t267 = *  PUTARG_REG ref    REG r8
N091 (  1,  1) [000077] ------------        t77 =    CNS_INT   int    2 REG r9 $44
                                                  /--*  t77    int    
N093 (???,???) [000268] ------------       t268 = *  PUTARG_REG int    REG r9
                                                  /--*  t265   ref    arg1 in rdx
                                                  +--*  t266   ref    this in rcx
                                                  +--*  t267   ref    arg2 in r8
                                                  +--*  t268   int    arg3 in r9
N095 ( 21, 25) [000078] --CXG-------        t78 = *  CALL      int    System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].TryInsert REG rax $283
                                                  /--*  t78    int    
N097 ( 25, 28) [000081] DA-XG-------              *  STORE_LCL_VAR int    V09 tmp7         d:2 rax REG rax
N099 (???,???) [000243] ------------                 IL_OFFSET void   IL offset: 0x17 REG NA
N101 (  2, 10) [000091] H-----------        t91 =    CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL] REG rcx $106
                                                  /--*  t91    long   
N103 (  4, 12) [000092] #---G-------        t92 = *  IND       ref    REG rdx $18a
                                                  /--*  t92    ref    
N105 (  4, 12) [000231] DA--G-------              *  STORE_LCL_VAR ref    V17 cse1         d:1 rdx REG rdx
N107 (???,???) [000244] ------------                 IL_OFFSET void   IL offset: 0x17 REG NA
N109 (  1,  1) [000234] ------------       t234 =    LCL_VAR   ref    V17 cse1         u:1 rdx (last use) REG rdx $18a
                                                  /--*  t234   ref    
N111 (  5,  4) [000108] DA--G-------              *  STORE_LCL_VAR ref    V11 tmp9         d:2 rdx REG rdx
N113 (???,???) [000245] ------------                 IL_OFFSET void   IL offset: 0x17 REG NA
N115 (  3,  2) [000098] ------------        t98 =    LCL_VAR   int    V09 tmp7         u:2 rax (last use) REG rax $283
N117 (  1,  1) [000099] -c----------        t99 =    CNS_INT   int    0 REG NA $40
                                                  /--*  t98    int    
                                                  +--*  t99    int    
N119 (  5,  4) [000100] J------N----              *  NE        void   REG NA $340
N121 (  7,  6) [000101] ------------              *  JTRUE     void   REG NA

------------ BB02 [017..018), preds={BB01} succs={BB03}
N125 (???,???) [000246] ------------                 IL_OFFSET void   IL offset: 0x17 REG NA
N127 (  3,  2) [000102] ------------       t102 =    LCL_VAR   ref    V11 tmp9         u:2 rdx REG rdx $18a
                                                  /--*  t102   ref    
N129 (???,???) [000269] ------------       t269 = *  PUTARG_REG ref    REG rcx
N131 (  3,  2) [000103] ------------       t103 =    LCL_VAR   ref    V11 tmp9         u:2 rdx (last use) REG rdx $18a
                                                  /--*  t103   ref    
N133 (???,???) [000270] ------------       t270 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t269   ref    arg0 in rcx
                                                  +--*  t270   ref    arg1 in rdx
N135 ( 20, 11) [000104] --CXG-------              *  CALL      void   System.Diagnostics.Debug.Fail REG NA $VN.Void

------------ BB03 [000..018) (return), preds={BB01,BB02} succs={}
N139 ( 14,  5) [000110] --CXG-------       t110 =    CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices REG rax $156
                                                  /--*  t110   ref    
N141 ( 14,  5) [000188] DA-XG-----L-              *  STORE_LCL_VAR ref    V15 tmp13        d:2 rdx REG rdx
N143 (  1,  1) [000189] ------------       t189 =    LCL_VAR   ref    V15 tmp13        u:2 rdx (last use) REG rdx $156
                                                  /--*  t189   ref    
N145 (???,???) [000271] ------------       t271 = *  PUTARG_REG ref    REG rdx
N147 (  1,  1) [000021] ------------        t21 =    LCL_VAR   ref    V04 tmp2         u:2 rsi (last use) REG rsi $183
                                                  /--*  t21    ref    
N149 (???,???) [000272] ------------       t272 = *  PUTARG_REG ref    REG rcx
                                                  /--*  t271   ref    arg1 in rdx
                                                  +--*  t272   ref    arg0 in rcx
N151 ( 33, 14) [000112] --CXG-------       t112 = *  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create REG rax $159
                                                  /--*  t112   ref    
N153 ( 33, 14) [000034] DA-XG-------              *  STORE_LCL_VAR ref    V05 tmp3         d:2 rsi REG rsi
N155 (  1,  1) [000036] ------------        t36 =    LCL_VAR   ref    V05 tmp3         u:2 rsi REG rsi $159
                                                  /--*  t36    ref    
N157 (  2,  5) [000192] -c----------       t192 = *  LEA(b+136) byref  REG NA
                                                  /--*  t192   byref  
N159 (  4,  7) [000118] ---XG-------       t118 = *  IND       ref    REG rcx <l:$191, c:$190>
                                                  /--*  t118   ref    
N161 (  4,  7) [000225] DA-XG-------              *  STORE_LCL_VAR ref    V16 cse0         d:1 rcx REG rcx
N163 (  1,  1) [000226] ------------       t226 =    LCL_VAR   ref    V16 cse0         u:1 rcx REG rcx <l:$191, c:$190>
                                                  /--*  t226   ref    
N165 (  5,  8) [000129] DA-XG-------              *  STORE_LCL_VAR ref    V12 tmp10        d:2 rdx REG rdx
N167 (  1,  1) [000124] ------------       t124 =    LCL_VAR   ref    V12 tmp10        u:2 rdx (last use) REG rdx <l:$18e, c:$15c>
                                                  /--*  t124   ref    
N169 (  2,  2) [000194] -c----------       t194 = *  LEA(b+56) byref  REG NA
N171 (  1,  1) [000125] -c----------       t125 =    CNS_INT   int    1 REG NA $46
                                                  /--*  t194   byref  
                                                  +--*  t125   int    
N173 (???,???) [000247] -A-XG-------              *  STOREIND  bool   REG NA
N175 (???,???) [000248] ------------                 IL_OFFSET void   IL offset: 0x33 REG NA
N177 (  1,  1) [000228] ------------       t228 =    LCL_VAR   ref    V16 cse0         u:1 rcx REG rcx <l:$18e, c:$15c>
                                                  /--*  t228   ref    
N179 (  1,  3) [000143] DA--G-------              *  STORE_LCL_VAR ref    V13 tmp11        d:2 rdx REG rdx
N181 (???,???) [000249] ------------                 IL_OFFSET void   IL offset: 0x33 REG NA
N183 (  1,  1) [000138] ------------       t138 =    LCL_VAR   ref    V13 tmp11        u:2 rdx (last use) REG rdx <l:$18e, c:$15e>
                                                  /--*  t138   ref    
N185 (  2,  2) [000198] -c----------       t198 = *  LEA(b+57) byref  REG NA
N187 (  1,  1) [000139] -c----------       t139 =    CNS_INT   int    1 REG NA $46
                                                  /--*  t198   byref  
                                                  +--*  t139   int    
N189 (???,???) [000250] -A-XG-------              *  STOREIND  bool   REG NA
N191 (???,???) [000251] ------------                 IL_OFFSET void   IL offset: 0x3a REG NA
N193 (  1,  1) [000229] ------------       t229 =    LCL_VAR   ref    V16 cse0         u:1 rcx (last use) REG rcx <l:$18e, c:$15c>
                                                  /--*  t229   ref    
N195 (???,???) [000273] ------------       t273 = *  PUTARG_REG ref    REG rcx
N197 (  2, 10) [000201] H-----------       t201 =    CNS_INT(h) long   0xD1FFAB1E "ilproj" REG rdx $10b
                                                  /--*  t201   long   
N199 (  4, 12) [000202] #---G-------       t202 = *  IND       ref    REG rdx $194
                                                  /--*  t202   ref    
N201 (???,???) [000274] ----G-------       t274 = *  PUTARG_REG ref    REG rdx
N203 (  2, 10) [000203] H-----------       t203 =    CNS_INT(h) long   0xD1FFAB1E "IL" REG r8 $10c
                                                  /--*  t203   long   
N205 (  4, 12) [000204] #---G-------       t204 = *  IND       ref    REG r8 $195
                                                  /--*  t204   ref    
N207 (???,???) [000275] ----G-------       t275 = *  PUTARG_REG ref    REG r8
                                                  /--*  t273   ref    this in rcx
                                                  +--*  t274   ref    arg1 in rdx
                                                  +--*  t275   ref    arg2 in r8
N209 ( 23, 34) [000148] --CXG-------              *  CALL      void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage REG NA $VN.Void
N211 (???,???) [000252] ------------                 IL_OFFSET void   IL offset: 0x4a REG NA
N213 (  1,  1) [000048] ------------        t48 =    LCL_VAR   ref    V05 tmp3         u:2 rsi REG rsi $159
                                                  /--*  t48    ref    
N215 (  2,  5) [000209] -c----------       t209 = *  LEA(b+136) byref  REG NA
                                                  /--*  t209   byref  
N217 (  4,  7) [000150] n---GO------       t150 = *  IND       ref    REG rcx <l:$199, c:$198>
                                                  /--*  t150   ref    
N219 (???,???) [000276] ----GO------       t276 = *  PUTARG_REG ref    REG rcx
N221 (  2, 10) [000210] H-----------       t210 =    CNS_INT(h) long   0xD1FFAB1E "vcxproj" REG rdx $10d
                                                  /--*  t210   long   
N223 (  4, 12) [000211] #---G-------       t211 = *  IND       ref    REG rdx $19a
                                                  /--*  t211   ref    
N225 (???,???) [000277] ----G-------       t277 = *  PUTARG_REG ref    REG rdx
N227 (  2, 10) [000212] H-----------       t212 =    CNS_INT(h) long   0xD1FFAB1E "C++" REG r8 $10e
                                                  /--*  t212   long   
N229 (  4, 12) [000213] #---G-------       t213 = *  IND       ref    REG r8 $19b
                                                  /--*  t213   ref    
N231 (???,???) [000278] ----G-------       t278 = *  PUTARG_REG ref    REG r8
                                                  /--*  t276   ref    this in rcx
                                                  +--*  t277   ref    arg1 in rdx
                                                  +--*  t278   ref    arg2 in r8
N233 ( 26, 40) [000153] --CXGO------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage REG NA $VN.Void
N235 (???,???) [000253] ------------                 IL_OFFSET void   IL offset: 0x5a REG NA
N237 (  2, 10) [000055] H-----------        t55 =    CNS_INT(h) long   0xd1ffab1e token REG rcx $10f
                                                  /--*  t55    long   
N239 (???,???) [000279] ------------       t279 = *  PUTARG_REG long   REG rcx
                                                  /--*  t279   long   arg0 in rcx
N241 ( 16, 16) [000056] --C---------        t56 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $19c
                                                  /--*  t56    ref    
N243 ( 16, 16) [000058] DA----------              *  STORE_LCL_VAR ref    V06 tmp4         d:2 rbx REG rbx
N245 (  1,  1) [000059] ------------        t59 =    LCL_VAR   ref    V06 tmp4         u:2 rbx REG rbx $19c
                                                  /--*  t59    ref    
N247 (  2,  2) [000219] ------------       t219 = *  LEA(b+8)  byref  REG rcx
N249 (  1,  1) [000158] ------------       t158 =    LCL_VAR   ref    V01 loc0         u:2 rdi (last use) REG rdi $180
                                                  /--*  t219   byref  
                                                  +--*  t158   ref    
N251 (???,???) [000254] -A--GO------              *  STOREIND  ref    REG NA
N253 (  1,  1) [000161] ------------       t161 =    LCL_VAR   ref    V06 tmp4         u:2 rbx REG rbx $19c
                                                  /--*  t161   ref    
N255 (  2,  2) [000221] -c----------       t221 = *  LEA(b+24) byref  REG NA
N257 (  2, 10) [000054] H-----------        t54 =    CNS_INT(h) long   0xd1ffab1e ftn REG rcx $111
                                                  /--*  t221   byref  
                                                  +--*  t54    long   
N259 (???,???) [000255] -A--GO------              *  STOREIND  long   REG NA
N261 (???,???) [000256] ------------                 IL_OFFSET void   IL offset: 0x67 REG NA
N263 (  1,  1) [000052] ------------        t52 =    LCL_VAR   ref    V05 tmp3         u:2 rsi REG rsi $159
                                                  /--*  t52    ref    
N265 (???,???) [000280] ------------       t280 = *  PUTARG_REG ref    REG rcx
N267 (  1,  1) [000061] ------------        t61 =    LCL_VAR   ref    V06 tmp4         u:2 rbx (last use) REG rbx $19c
                                                  /--*  t61    ref    
N269 (???,???) [000281] ------------       t281 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t280   ref    this in rcx
                                                  +--*  t281   ref    arg1 in rdx
N271 ( 16, 10) [000062] --CXG-------              *  CALL      void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed REG NA $VN.Void
N273 (???,???) [000257] ------------                 IL_OFFSET void   IL offset: 0x6c REG NA
N275 (  1,  1) [000035] ------------        t35 =    LCL_VAR   ref    V05 tmp3         u:2 rsi (last use) REG rsi $159
                                                  /--*  t35    ref    
N277 (  2,  2) [000063] ------------              *  RETURN    ref    REG NA $170

-------------------------------------------------------------------------------------------------------------------

Final allocation
--------------------------------+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
--------------------------------+----+----+----+----+----+----+----+----+----+
  0.#0   V0   Parm   Alloc rsi  |    |    |    |    |    |V0 a|    |    |    |
  1.#1   BB1 PredBB0            |    |    |    |    |    |V0 a|    |    |    |
  6.#2   C15  Def    Alloc rcx  |    |C15a|    |    |    |V0 a|    |    |    |
  7.#3   rcx  Fixd   Keep  rcx  |    |C15a|    |    |    |V0 a|    |    |    |
  7.#4   C15  Use *  Keep  rcx  |    |C15i|    |    |    |V0 a|    |    |    |
  8.#5   rcx  Fixd   Keep  rcx  |    |    |    |    |    |V0 a|    |    |    |
  8.#6   I16  Def    Alloc rcx  |    |I16a|    |    |    |V0 a|    |    |    |
  9.#7   rcx  Fixd   Keep  rcx  |    |I16a|    |    |    |V0 a|    |    |    |
  9.#8   I16  Use *  Keep  rcx  |    |I16i|    |    |    |V0 a|    |    |    |
 10.#9   rax  Kill   Keep  rax  |    |    |    |    |    |V0 a|    |    |    |
 10.#10  rcx  Kill   Keep  rcx  |    |    |    |    |    |V0 a|    |    |    |
 10.#11  rdx  Kill   Keep  rdx  |    |    |    |    |    |V0 a|    |    |    |
 10.#12  r8   Kill   Keep  r8   |    |    |    |    |    |V0 a|    |    |    |
 10.#13  r9   Kill   Keep  r9   |    |    |    |    |    |V0 a|    |    |    |
 10.#14  r10  Kill   Keep  r10  |    |    |    |    |    |V0 a|    |    |    |
 10.#15  r11  Kill   Keep  r11  |    |    |    |    |    |V0 a|    |    |    |
 10.#16  rax  Fixd   Keep  rax  |    |    |    |    |    |V0 a|    |    |    |
 10.#17  I17  Def    Alloc rax  |I17a|    |    |    |    |V0 a|    |    |    |
 11.#18  I17  Use *  Keep  rax  |I17i|    |    |    |    |V0 a|    |    |    |
 12.#19  V3   Def    Alloc rdi  |    |    |    |    |    |V0 a|V3 a|    |    |
 17.#20  V3   Use *  Keep  rdi  |    |    |    |    |    |V0 a|V3 i|    |    |
 18.#21  V1   Def    Alloc rdi  |    |    |    |    |    |V0 a|V1 a|    |    |
 23.#22  V1   Use    Keep  rdi  |    |    |    |    |    |V0 a|V1 a|    |    |
 24.#23  I18  Def    Alloc rcx  |    |I18a|    |    |    |V0 a|V1 a|    |    |
 27.#24  rcx  Fixd   Keep  rcx  |    |I18a|    |    |    |V0 a|V1 a|    |    |
 27.#25  I18  Use *  Keep  rcx  |    |I18i|    |    |    |V0 a|V1 a|    |    |
 27.#26  rdx  Fixd   Keep  rdx  |    |    |    |    |    |V0 a|V1 a|    |    |
 27.#27  V0   Use *  Copy  rdx  |    |    |V0 i|    |    |V0 i|V1 a|    |    |
 28.#28  rax  Kill   Keep  rax  |    |    |    |    |    |    |V1 a|    |    |
 28.#29  rcx  Kill   Keep  rcx  |    |    |    |    |    |    |V1 a|    |    |
 28.#30  rdx  Kill   Keep  rdx  |    |    |    |    |    |    |V1 a|    |    |
 28.#31  r8   Kill   Keep  r8   |    |    |    |    |    |    |V1 a|    |    |
 28.#32  r9   Kill   Keep  r9   |    |    |    |    |    |    |V1 a|    |    |
 28.#33  r10  Kill   Keep  r10  |    |    |    |    |    |    |V1 a|    |    |
 28.#34  r11  Kill   Keep  r11  |    |    |    |    |    |    |V1 a|    |    |
 28.#35  mm0  Kill   Keep  mm0  |    |    |    |    |    |    |V1 a|    |    |
 28.#36  mm1  Kill   Keep  mm1  |    |    |    |    |    |    |V1 a|    |    |
 28.#37  mm2  Kill   Keep  mm2  |    |    |    |    |    |    |V1 a|    |    |
 28.#38  mm3  Kill   Keep  mm3  |    |    |    |    |    |    |V1 a|    |    |
 28.#39  mm4  Kill   Keep  mm4  |    |    |    |    |    |    |V1 a|    |    |
 28.#40  mm5  Kill   Keep  mm5  |    |    |    |    |    |    |V1 a|    |    |
 30.#41  C19  Def    Alloc rcx  |    |C19a|    |    |    |    |V1 a|    |    |
 31.#42  rcx  Fixd   Keep  rcx  |    |C19a|    |    |    |    |V1 a|    |    |
 31.#43  C19  Use *  Keep  rcx  |    |C19i|    |    |    |    |V1 a|    |    |
 32.#44  rcx  Fixd   Keep  rcx  |    |    |    |    |    |    |V1 a|    |    |
 32.#45  I20  Def    Alloc rcx  |    |I20a|    |    |    |    |V1 a|    |    |
 33.#46  rcx  Fixd   Keep  rcx  |    |I20a|    |    |    |    |V1 a|    |    |
 33.#47  I20  Use *  Keep  rcx  |    |I20i|    |    |    |    |V1 a|    |    |
 34.#48  rax  Kill   Keep  rax  |    |    |    |    |    |    |V1 a|    |    |
 34.#49  rcx  Kill   Keep  rcx  |    |    |    |    |    |    |V1 a|    |    |
 34.#50  rdx  Kill   Keep  rdx  |    |    |    |    |    |    |V1 a|    |    |
 34.#51  r8   Kill   Keep  r8   |    |    |    |    |    |    |V1 a|    |    |
 34.#52  r9   Kill   Keep  r9   |    |    |    |    |    |    |V1 a|    |    |
 34.#53  r10  Kill   Keep  r10  |    |    |    |    |    |    |V1 a|    |    |
 34.#54  r11  Kill   Keep  r11  |    |    |    |    |    |    |V1 a|    |    |
 34.#55  rax  Fixd   Keep  rax  |    |    |    |    |    |    |V1 a|    |    |
 34.#56  I21  Def    Alloc rax  |I21a|    |    |    |    |    |V1 a|    |    |
 35.#57  I21  Use *  Keep  rax  |I21i|    |    |    |    |    |V1 a|    |    |
 36.#58  V4   Def    Alloc rsi  |    |    |    |    |    |V4 a|V1 a|    |    |
 38.#59  C22  Def    Alloc rcx  |    |C22a|    |    |    |V4 a|V1 a|    |    |
 39.#60  C22  Use *  Keep  rcx  |    |C22i|    |    |    |V4 a|V1 a|    |    |
 40.#61  I23  Def    Alloc r8   |    |    |    |    |    |V4 a|V1 a|I23a|    |
 41.#62  I23  Use *  Keep  r8   |    |    |    |    |    |V4 a|V1 a|I23i|    |
 42.#63  V7   Def    Alloc r8   |    |    |    |    |    |V4 a|V1 a|V7 a|    |
 45.#64  rcx  Fixd   Keep  rcx  |    |    |    |    |    |V4 a|V1 a|V7 a|    |
--------------------------------+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
--------------------------------+----+----+----+----+----+----+----+----+----+
 45.#65  V4   Use    Copy  rcx  |    |V4 a|    |    |    |V4 a|V1 a|V7 a|    |
 46.#66  rcx  Fixd   Keep  rcx  |    |    |    |    |    |V4 a|V1 a|V7 a|    |
 46.#67  I24  Def    Alloc rcx  |    |I24a|    |    |    |V4 a|V1 a|V7 a|    |
 49.#68  r8   Fixd   Keep  r8   |    |I24a|    |    |    |V4 a|V1 a|V7 a|    |
 49.#69  V7   Use *  Keep  r8   |    |I24a|    |    |    |V4 a|V1 a|V7 i|    |
 50.#70  r8   Fixd   Keep  r8   |    |I24a|    |    |    |V4 a|V1 a|    |    |
 50.#71  I25  Def    Alloc r8   |    |I24a|    |    |    |V4 a|V1 a|I25a|    |
 52.#72  C26  Def    Alloc rdx  |    |I24a|C26a|    |    |V4 a|V1 a|I25a|    |
 53.#73  rdx  Fixd   Keep  rdx  |    |I24a|C26a|    |    |V4 a|V1 a|I25a|    |
 53.#74  C26  Use *  Keep  rdx  |    |I24a|C26i|    |    |V4 a|V1 a|I25a|    |
 54.#75  rdx  Fixd   Keep  rdx  |    |I24a|    |    |    |V4 a|V1 a|I25a|    |
 54.#76  I27  Def    Alloc rdx  |    |I24a|I27a|    |    |V4 a|V1 a|I25a|    |
 55.#77  rcx  Fixd   Keep  rcx  |    |I24a|I27a|    |    |V4 a|V1 a|I25a|    |
 55.#78  I24  Use *  Keep  rcx  |    |I24i|I27a|    |    |V4 a|V1 a|I25a|    |
 55.#79  r8   Fixd   Keep  r8   |    |    |I27a|    |    |V4 a|V1 a|I25a|    |
 55.#80  I25  Use *  Keep  r8   |    |    |I27a|    |    |V4 a|V1 a|I25i|    |
 55.#81  rdx  Fixd   Keep  rdx  |    |    |I27a|    |    |V4 a|V1 a|    |    |
 55.#82  I27  Use *  Keep  rdx  |    |    |I27i|    |    |V4 a|V1 a|    |    |
 56.#83  rax  Kill   Keep  rax  |    |    |    |    |    |V4 a|V1 a|    |    |
 56.#84  rcx  Kill   Keep  rcx  |    |    |    |    |    |V4 a|V1 a|    |    |
 56.#85  rdx  Kill   Keep  rdx  |    |    |    |    |    |V4 a|V1 a|    |    |
 56.#86  r8   Kill   Keep  r8   |    |    |    |    |    |V4 a|V1 a|    |    |
 56.#87  r9   Kill   Keep  r9   |    |    |    |    |    |V4 a|V1 a|    |    |
 56.#88  r10  Kill   Keep  r10  |    |    |    |    |    |V4 a|V1 a|    |    |
 56.#89  r11  Kill   Keep  r11  |    |    |    |    |    |V4 a|V1 a|    |    |
 60.#90  C28  Def    Alloc rcx  |    |C28a|    |    |    |V4 a|V1 a|    |    |
 61.#91  rcx  Fixd   Keep  rcx  |    |C28a|    |    |    |V4 a|V1 a|    |    |
 61.#92  C28  Use *  Keep  rcx  |    |C28i|    |    |    |V4 a|V1 a|    |    |
 62.#93  rcx  Fixd   Keep  rcx  |    |    |    |    |    |V4 a|V1 a|    |    |
 62.#94  I29  Def    Alloc rcx  |    |I29a|    |    |    |V4 a|V1 a|    |    |
 64.#95  C30  Def    Alloc rdx  |    |I29a|C30a|    |    |V4 a|V1 a|    |    |
 65.#96  rdx  Fixd   Keep  rdx  |    |I29a|C30a|    |    |V4 a|V1 a|    |    |
 65.#97  C30  Use *  Keep  rdx  |    |I29a|C30i|    |    |V4 a|V1 a|    |    |
 66.#98  rdx  Fixd   Keep  rdx  |    |I29a|    |    |    |V4 a|V1 a|    |    |
 66.#99  I31  Def    Alloc rdx  |    |I29a|I31a|    |    |V4 a|V1 a|    |    |
 67.#100 rcx  Fixd   Keep  rcx  |    |I29a|I31a|    |    |V4 a|V1 a|    |    |
 67.#101 I29  Use *  Keep  rcx  |    |I29i|I31a|    |    |V4 a|V1 a|    |    |
 67.#102 rdx  Fixd   Keep  rdx  |    |    |I31a|    |    |V4 a|V1 a|    |    |
 67.#103 I31  Use *  Keep  rdx  |    |    |I31i|    |    |V4 a|V1 a|    |    |
 68.#104 rax  Kill   Keep  rax  |    |    |    |    |    |V4 a|V1 a|    |    |
 68.#105 rcx  Kill   Keep  rcx  |    |    |    |    |    |V4 a|V1 a|    |    |
 68.#106 rdx  Kill   Keep  rdx  |    |    |    |    |    |V4 a|V1 a|    |    |
 68.#107 r8   Kill   Keep  r8   |    |    |    |    |    |V4 a|V1 a|    |    |
 68.#108 r9   Kill   Keep  r9   |    |    |    |    |    |V4 a|V1 a|    |    |
 68.#109 r10  Kill   Keep  r10  |    |    |    |    |    |V4 a|V1 a|    |    |
 68.#110 r11  Kill   Keep  r11  |    |    |    |    |    |V4 a|V1 a|    |    |
 68.#111 rax  Fixd   Keep  rax  |    |    |    |    |    |V4 a|V1 a|    |    |
 68.#112 I32  Def *  Alloc rax  |I32i|    |    |    |    |V4 a|V1 a|    |    |
 70.#113 C33  Def    Alloc rdx  |    |    |C33a|    |    |V4 a|V1 a|    |    |
 71.#114 C33  Use *  Keep  rdx  |    |    |C33i|    |    |V4 a|V1 a|    |    |
 72.#115 I34  Def    Alloc r8   |    |    |    |    |    |V4 a|V1 a|I34a|    |
 73.#116 I34  Use *  Keep  r8   |    |    |    |    |    |V4 a|V1 a|I34i|    |
 74.#117 V8   Def    Alloc r8   |    |    |    |    |    |V4 a|V1 a|V8 a|    |
 78.#118 C35  Def    Alloc rdx  |    |    |C35a|    |    |V4 a|V1 a|V8 a|    |
 79.#119 C35  Use *  Keep  rdx  |    |    |C35i|    |    |V4 a|V1 a|V8 a|    |
 80.#120 I36  Def    Alloc rdx  |    |    |I36a|    |    |V4 a|V1 a|V8 a|    |
 81.#121 rdx  Fixd   Keep  rdx  |    |    |I36a|    |    |V4 a|V1 a|V8 a|    |
 81.#122 I36  Use *  Keep  rdx  |    |    |I36i|    |    |V4 a|V1 a|V8 a|    |
 82.#123 rdx  Fixd   Keep  rdx  |    |    |    |    |    |V4 a|V1 a|V8 a|    |
 82.#124 I37  Def    Alloc rdx  |    |    |I37a|    |    |V4 a|V1 a|V8 a|    |
 85.#125 rcx  Fixd   Keep  rcx  |    |    |I37a|    |    |V4 a|V1 a|V8 a|    |
--------------------------------+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
--------------------------------+----+----+----+----+----+----+----+----+----+
 85.#126 V4   Use    Copy  rcx  |    |V4 a|I37a|    |    |V4 a|V1 a|V8 a|    |
 86.#127 rcx  Fixd   Keep  rcx  |    |    |I37a|    |    |V4 a|V1 a|V8 a|    |
 86.#128 I38  Def    Alloc rcx  |    |I38a|I37a|    |    |V4 a|V1 a|V8 a|    |
 89.#129 r8   Fixd   Keep  r8   |    |I38a|I37a|    |    |V4 a|V1 a|V8 a|    |
 89.#130 V8   Use *  Keep  r8   |    |I38a|I37a|    |    |V4 a|V1 a|V8 i|    |
 90.#131 r8   Fixd   Keep  r8   |    |I38a|I37a|    |    |V4 a|V1 a|    |    |
 90.#132 I39  Def    Alloc r8   |    |I38a|I37a|    |    |V4 a|V1 a|I39a|    |
 92.#133 C40  Def    Alloc r9   |    |I38a|I37a|    |    |V4 a|V1 a|I39a|C40a|
 93.#134 r9   Fixd   Keep  r9   |    |I38a|I37a|    |    |V4 a|V1 a|I39a|C40a|
 93.#135 C40  Use *  Keep  r9   |    |I38a|I37a|    |    |V4 a|V1 a|I39a|C40i|
 94.#136 r9   Fixd   Keep  r9   |    |I38a|I37a|    |    |V4 a|V1 a|I39a|    |
 94.#137 I41  Def    Alloc r9   |    |I38a|I37a|    |    |V4 a|V1 a|I39a|I41a|
 95.#138 rdx  Fixd   Keep  rdx  |    |I38a|I37a|    |    |V4 a|V1 a|I39a|I41a|
 95.#139 I37  Use *  Keep  rdx  |    |I38a|I37i|    |    |V4 a|V1 a|I39a|I41a|
 95.#140 rcx  Fixd   Keep  rcx  |    |I38a|    |    |    |V4 a|V1 a|I39a|I41a|
 95.#141 I38  Use *  Keep  rcx  |    |I38i|    |    |    |V4 a|V1 a|I39a|I41a|
 95.#142 r8   Fixd   Keep  r8   |    |    |    |    |    |V4 a|V1 a|I39a|I41a|
 95.#143 I39  Use *  Keep  r8   |    |    |    |    |    |V4 a|V1 a|I39i|I41a|
 95.#144 r9   Fixd   Keep  r9   |    |    |    |    |    |V4 a|V1 a|    |I41a|
 95.#145 I41  Use *  Keep  r9   |    |    |    |    |    |V4 a|V1 a|    |I41i|
 96.#146 rax  Kill   Keep  rax  |    |    |    |    |    |V4 a|V1 a|    |    |
 96.#147 rcx  Kill   Keep  rcx  |    |    |    |    |    |V4 a|V1 a|    |    |
 96.#148 rdx  Kill   Keep  rdx  |    |    |    |    |    |V4 a|V1 a|    |    |
 96.#149 r8   Kill   Keep  r8   |    |    |    |    |    |V4 a|V1 a|    |    |
 96.#150 r9   Kill   Keep  r9   |    |    |    |    |    |V4 a|V1 a|    |    |
 96.#151 r10  Kill   Keep  r10  |    |    |    |    |    |V4 a|V1 a|    |    |
 96.#152 r11  Kill   Keep  r11  |    |    |    |    |    |V4 a|V1 a|    |    |
 96.#153 rax  Fixd   Keep  rax  |    |    |    |    |    |V4 a|V1 a|    |    |
 96.#154 I42  Def    Alloc rax  |I42a|    |    |    |    |V4 a|V1 a|    |    |
 97.#155 I42  Use *  Keep  rax  |I42i|    |    |    |    |V4 a|V1 a|    |    |
 98.#156 V9   Def    Alloc rax  |V9 a|    |    |    |    |V4 a|V1 a|    |    |
102.#157 C43  Def    Alloc rcx  |V9 a|C43a|    |    |    |V4 a|V1 a|    |    |
103.#158 C43  Use *  Keep  rcx  |V9 a|C43i|    |    |    |V4 a|V1 a|    |    |
104.#159 I44  Def    Alloc rdx  |V9 a|    |I44a|    |    |V4 a|V1 a|    |    |
105.#160 I44  Use *  Keep  rdx  |V9 a|    |I44i|    |    |V4 a|V1 a|    |    |
106.#161 V17  Def    Alloc rdx  |V9 a|    |V17a|    |    |V4 a|V1 a|    |    |
111.#162 V17  Use *  Keep  rdx  |V9 a|    |V17i|    |    |V4 a|V1 a|    |    |
112.#163 V11  Def    Alloc rdx  |V9 a|    |V11a|    |    |V4 a|V1 a|    |    |
119.#164 V9   Use *  Keep  rax  |V9 i|    |V11a|    |    |V4 a|V1 a|    |    |
--------------------------------+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
--------------------------------+----+----+----+----+----+----+----+----+----+
123.#165 BB2 PredBB1            |    |    |V11a|    |    |V4 a|V1 a|    |    |
129.#166 rcx  Fixd   Keep  rcx  |    |    |V11a|    |    |V4 a|V1 a|    |    |
129.#167 V11  Use    Copy  rcx  |    |V11a|V11a|    |    |V4 a|V1 a|    |    |
130.#168 rcx  Fixd   Keep  rcx  |    |    |V11a|    |    |V4 a|V1 a|    |    |
130.#169 I45  Def    Alloc rcx  |    |I45a|V11a|    |    |V4 a|V1 a|    |    |
133.#170 rdx  Fixd   Keep  rdx  |    |I45a|V11a|    |    |V4 a|V1 a|    |    |
133.#171 V11  Use *  Keep  rdx  |    |I45a|V11i|    |    |V4 a|V1 a|    |    |
134.#172 rdx  Fixd   Keep  rdx  |    |I45a|    |    |    |V4 a|V1 a|    |    |
134.#173 I46  Def    Alloc rdx  |    |I45a|I46a|    |    |V4 a|V1 a|    |    |
135.#174 rcx  Fixd   Keep  rcx  |    |I45a|I46a|    |    |V4 a|V1 a|    |    |
135.#175 I45  Use *  Keep  rcx  |    |I45i|I46a|    |    |V4 a|V1 a|    |    |
135.#176 rdx  Fixd   Keep  rdx  |    |    |I46a|    |    |V4 a|V1 a|    |    |
135.#177 I46  Use *  Keep  rdx  |    |    |I46i|    |    |V4 a|V1 a|    |    |
136.#178 rax  Kill   Keep  rax  |    |    |    |    |    |V4 a|V1 a|    |    |
136.#179 rcx  Kill   Keep  rcx  |    |    |    |    |    |V4 a|V1 a|    |    |
136.#180 rdx  Kill   Keep  rdx  |    |    |    |    |    |V4 a|V1 a|    |    |
136.#181 r8   Kill   Keep  r8   |    |    |    |    |    |V4 a|V1 a|    |    |
136.#182 r9   Kill   Keep  r9   |    |    |    |    |    |V4 a|V1 a|    |    |
136.#183 r10  Kill   Keep  r10  |    |    |    |    |    |V4 a|V1 a|    |    |
136.#184 r11  Kill   Keep  r11  |    |    |    |    |    |V4 a|V1 a|    |    |
--------------------------------+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
--------------------------------+----+----+----+----+----+----+----+----+----+
137.#185 BB3 PredBB1            |    |    |    |    |    |V4 a|V1 a|    |    |
140.#186 rax  Kill   Keep  rax  |    |    |    |    |    |V4 a|V1 a|    |    |
140.#187 rcx  Kill   Keep  rcx  |    |    |    |    |    |V4 a|V1 a|    |    |
140.#188 rdx  Kill   Keep  rdx  |    |    |    |    |    |V4 a|V1 a|    |    |
140.#189 r8   Kill   Keep  r8   |    |    |    |    |    |V4 a|V1 a|    |    |
140.#190 r9   Kill   Keep  r9   |    |    |    |    |    |V4 a|V1 a|    |    |
140.#191 r10  Kill   Keep  r10  |    |    |    |    |    |V4 a|V1 a|    |    |
140.#192 r11  Kill   Keep  r11  |    |    |    |    |    |V4 a|V1 a|    |    |
140.#193 rax  Fixd   Keep  rax  |    |    |    |    |    |V4 a|V1 a|    |    |
140.#194 I47  Def    Alloc rax  |I47a|    |    |    |    |V4 a|V1 a|    |    |
141.#195 I47  Use *  Keep  rax  |I47i|    |    |    |    |V4 a|V1 a|    |    |
142.#196 V15  Def    Alloc rdx  |    |    |V15a|    |    |V4 a|V1 a|    |    |
145.#197 rdx  Fixd   Keep  rdx  |    |    |V15a|    |    |V4 a|V1 a|    |    |
145.#198 V15  Use *  Keep  rdx  |    |    |V15i|    |    |V4 a|V1 a|    |    |
146.#199 rdx  Fixd   Keep  rdx  |    |    |    |    |    |V4 a|V1 a|    |    |
146.#200 I48  Def    Alloc rdx  |    |    |I48a|    |    |V4 a|V1 a|    |    |
149.#201 rcx  Fixd   Keep  rcx  |    |    |I48a|    |    |V4 a|V1 a|    |    |
149.#202 V4   Use *  Copy  rcx  |    |V4 i|I48a|    |    |V4 i|V1 a|    |    |
150.#203 rcx  Fixd   Keep  rcx  |    |    |I48a|    |    |    |V1 a|    |    |
150.#204 I49  Def    Alloc rcx  |    |I49a|I48a|    |    |    |V1 a|    |    |
151.#205 rdx  Fixd   Keep  rdx  |    |I49a|I48a|    |    |    |V1 a|    |    |
151.#206 I48  Use *  Keep  rdx  |    |I49a|I48i|    |    |    |V1 a|    |    |
151.#207 rcx  Fixd   Keep  rcx  |    |I49a|    |    |    |    |V1 a|    |    |
151.#208 I49  Use *  Keep  rcx  |    |I49i|    |    |    |    |V1 a|    |    |
152.#209 rax  Kill   Keep  rax  |    |    |    |    |    |    |V1 a|    |    |
152.#210 rcx  Kill   Keep  rcx  |    |    |    |    |    |    |V1 a|    |    |
152.#211 rdx  Kill   Keep  rdx  |    |    |    |    |    |    |V1 a|    |    |
152.#212 r8   Kill   Keep  r8   |    |    |    |    |    |    |V1 a|    |    |
152.#213 r9   Kill   Keep  r9   |    |    |    |    |    |    |V1 a|    |    |
152.#214 r10  Kill   Keep  r10  |    |    |    |    |    |    |V1 a|    |    |
152.#215 r11  Kill   Keep  r11  |    |    |    |    |    |    |V1 a|    |    |
152.#216 rax  Fixd   Keep  rax  |    |    |    |    |    |    |V1 a|    |    |
152.#217 I50  Def    Alloc rax  |I50a|    |    |    |    |    |V1 a|    |    |
153.#218 I50  Use *  Keep  rax  |I50i|    |    |    |    |    |V1 a|    |    |
154.#219 V5   Def    Alloc rsi  |    |    |    |    |    |V5 a|V1 a|    |    |
159.#220 V5   Use    Keep  rsi  |    |    |    |    |    |V5 a|V1 a|    |    |
160.#221 I51  Def    Alloc rcx  |    |I51a|    |    |    |V5 a|V1 a|    |    |
161.#222 I51  Use *  Keep  rcx  |    |I51i|    |    |    |V5 a|V1 a|    |    |
162.#223 V16  Def    Alloc rcx  |    |V16a|    |    |    |V5 a|V1 a|    |    |
165.#224 V16  Use    Keep  rcx  |    |V16a|    |    |    |V5 a|V1 a|    |    |
166.#225 V12  Def    Alloc rdx  |    |V16a|V12a|    |    |V5 a|V1 a|    |    |
173.#226 V12  Use *  Keep  rdx  |    |V16a|V12i|    |    |V5 a|V1 a|    |    |
179.#227 V16  Use    Keep  rcx  |    |V16a|    |    |    |V5 a|V1 a|    |    |
180.#228 V13  Def    Alloc rdx  |    |V16a|V13a|    |    |V5 a|V1 a|    |    |
189.#229 V13  Use *  Keep  rdx  |    |V16a|V13i|    |    |V5 a|V1 a|    |    |
195.#230 rcx  Fixd   Keep  rcx  |    |V16a|    |    |    |V5 a|V1 a|    |    |
195.#231 V16  Use *  Keep  rcx  |    |V16i|    |    |    |V5 a|V1 a|    |    |
196.#232 rcx  Fixd   Keep  rcx  |    |    |    |    |    |V5 a|V1 a|    |    |
196.#233 I52  Def    Alloc rcx  |    |I52a|    |    |    |V5 a|V1 a|    |    |
198.#234 C53  Def    Alloc rdx  |    |I52a|C53a|    |    |V5 a|V1 a|    |    |
199.#235 C53  Use *  Keep  rdx  |    |I52a|C53i|    |    |V5 a|V1 a|    |    |
200.#236 I54  Def    Alloc rdx  |    |I52a|I54a|    |    |V5 a|V1 a|    |    |
201.#237 rdx  Fixd   Keep  rdx  |    |I52a|I54a|    |    |V5 a|V1 a|    |    |
201.#238 I54  Use *  Keep  rdx  |    |I52a|I54i|    |    |V5 a|V1 a|    |    |
202.#239 rdx  Fixd   Keep  rdx  |    |I52a|    |    |    |V5 a|V1 a|    |    |
202.#240 I55  Def    Alloc rdx  |    |I52a|I55a|    |    |V5 a|V1 a|    |    |
204.#241 C56  Def    Alloc r8   |    |I52a|I55a|    |    |V5 a|V1 a|C56a|    |
205.#242 C56  Use *  Keep  r8   |    |I52a|I55a|    |    |V5 a|V1 a|C56i|    |
206.#243 I57  Def    Alloc r8   |    |I52a|I55a|    |    |V5 a|V1 a|I57a|    |
207.#244 r8   Fixd   Keep  r8   |    |I52a|I55a|    |    |V5 a|V1 a|I57a|    |
207.#245 I57  Use *  Keep  r8   |    |I52a|I55a|    |    |V5 a|V1 a|I57i|    |
208.#246 r8   Fixd   Keep  r8   |    |I52a|I55a|    |    |V5 a|V1 a|    |    |
208.#247 I58  Def    Alloc r8   |    |I52a|I55a|    |    |V5 a|V1 a|I58a|    |
209.#248 rcx  Fixd   Keep  rcx  |    |I52a|I55a|    |    |V5 a|V1 a|I58a|    |
209.#249 I52  Use *  Keep  rcx  |    |I52i|I55a|    |    |V5 a|V1 a|I58a|    |
209.#250 rdx  Fixd   Keep  rdx  |    |    |I55a|    |    |V5 a|V1 a|I58a|    |
209.#251 I55  Use *  Keep  rdx  |    |    |I55i|    |    |V5 a|V1 a|I58a|    |
209.#252 r8   Fixd   Keep  r8   |    |    |    |    |    |V5 a|V1 a|I58a|    |
209.#253 I58  Use *  Keep  r8   |    |    |    |    |    |V5 a|V1 a|I58i|    |
210.#254 rax  Kill   Keep  rax  |    |    |    |    |    |V5 a|V1 a|    |    |
210.#255 rcx  Kill   Keep  rcx  |    |    |    |    |    |V5 a|V1 a|    |    |
210.#256 rdx  Kill   Keep  rdx  |    |    |    |    |    |V5 a|V1 a|    |    |
210.#257 r8   Kill   Keep  r8   |    |    |    |    |    |V5 a|V1 a|    |    |
210.#258 r9   Kill   Keep  r9   |    |    |    |    |    |V5 a|V1 a|    |    |
210.#259 r10  Kill   Keep  r10  |    |    |    |    |    |V5 a|V1 a|    |    |
210.#260 r11  Kill   Keep  r11  |    |    |    |    |    |V5 a|V1 a|    |    |
217.#261 V5   Use    Keep  rsi  |    |    |    |    |    |V5 a|V1 a|    |    |
218.#262 I59  Def    Alloc rcx  |    |I59a|    |    |    |V5 a|V1 a|    |    |
219.#263 rcx  Fixd   Keep  rcx  |    |I59a|    |    |    |V5 a|V1 a|    |    |
219.#264 I59  Use *  Keep  rcx  |    |I59i|    |    |    |V5 a|V1 a|    |    |
220.#265 rcx  Fixd   Keep  rcx  |    |    |    |    |    |V5 a|V1 a|    |    |
220.#266 I60  Def    Alloc rcx  |    |I60a|    |    |    |V5 a|V1 a|    |    |
222.#267 C61  Def    Alloc rdx  |    |I60a|C61a|    |    |V5 a|V1 a|    |    |
223.#268 C61  Use *  Keep  rdx  |    |I60a|C61i|    |    |V5 a|V1 a|    |    |
224.#269 I62  Def    Alloc rdx  |    |I60a|I62a|    |    |V5 a|V1 a|    |    |
225.#270 rdx  Fixd   Keep  rdx  |    |I60a|I62a|    |    |V5 a|V1 a|    |    |
225.#271 I62  Use *  Keep  rdx  |    |I60a|I62i|    |    |V5 a|V1 a|    |    |
226.#272 rdx  Fixd   Keep  rdx  |    |I60a|    |    |    |V5 a|V1 a|    |    |
226.#273 I63  Def    Alloc rdx  |    |I60a|I63a|    |    |V5 a|V1 a|    |    |
228.#274 C64  Def    Alloc r8   |    |I60a|I63a|    |    |V5 a|V1 a|C64a|    |
229.#275 C64  Use *  Keep  r8   |    |I60a|I63a|    |    |V5 a|V1 a|C64i|    |
230.#276 I65  Def    Alloc r8   |    |I60a|I63a|    |    |V5 a|V1 a|I65a|    |
231.#277 r8   Fixd   Keep  r8   |    |I60a|I63a|    |    |V5 a|V1 a|I65a|    |
231.#278 I65  Use *  Keep  r8   |    |I60a|I63a|    |    |V5 a|V1 a|I65i|    |
232.#279 r8   Fixd   Keep  r8   |    |I60a|I63a|    |    |V5 a|V1 a|    |    |
232.#280 I66  Def    Alloc r8   |    |I60a|I63a|    |    |V5 a|V1 a|I66a|    |
233.#281 rcx  Fixd   Keep  rcx  |    |I60a|I63a|    |    |V5 a|V1 a|I66a|    |
233.#282 I60  Use *  Keep  rcx  |    |I60i|I63a|    |    |V5 a|V1 a|I66a|    |
233.#283 rdx  Fixd   Keep  rdx  |    |    |I63a|    |    |V5 a|V1 a|I66a|    |
233.#284 I63  Use *  Keep  rdx  |    |    |I63i|    |    |V5 a|V1 a|I66a|    |
233.#285 r8   Fixd   Keep  r8   |    |    |    |    |    |V5 a|V1 a|I66a|    |
233.#286 I66  Use *  Keep  r8   |    |    |    |    |    |V5 a|V1 a|I66i|    |
234.#287 rax  Kill   Keep  rax  |    |    |    |    |    |V5 a|V1 a|    |    |
234.#288 rcx  Kill   Keep  rcx  |    |    |    |    |    |V5 a|V1 a|    |    |
234.#289 rdx  Kill   Keep  rdx  |    |    |    |    |    |V5 a|V1 a|    |    |
234.#290 r8   Kill   Keep  r8   |    |    |    |    |    |V5 a|V1 a|    |    |
234.#291 r9   Kill   Keep  r9   |    |    |    |    |    |V5 a|V1 a|    |    |
234.#292 r10  Kill   Keep  r10  |    |    |    |    |    |V5 a|V1 a|    |    |
234.#293 r11  Kill   Keep  r11  |    |    |    |    |    |V5 a|V1 a|    |    |
238.#294 C67  Def    Alloc rcx  |    |C67a|    |    |    |V5 a|V1 a|    |    |
239.#295 rcx  Fixd   Keep  rcx  |    |C67a|    |    |    |V5 a|V1 a|    |    |
239.#296 C67  Use *  Keep  rcx  |    |C67i|    |    |    |V5 a|V1 a|    |    |
240.#297 rcx  Fixd   Keep  rcx  |    |    |    |    |    |V5 a|V1 a|    |    |
240.#298 I68  Def    Alloc rcx  |    |I68a|    |    |    |V5 a|V1 a|    |    |
241.#299 rcx  Fixd   Keep  rcx  |    |I68a|    |    |    |V5 a|V1 a|    |    |
241.#300 I68  Use *  Keep  rcx  |    |I68i|    |    |    |V5 a|V1 a|    |    |
242.#301 rax  Kill   Keep  rax  |    |    |    |    |    |V5 a|V1 a|    |    |
242.#302 rcx  Kill   Keep  rcx  |    |    |    |    |    |V5 a|V1 a|    |    |
242.#303 rdx  Kill   Keep  rdx  |    |    |    |    |    |V5 a|V1 a|    |    |
242.#304 r8   Kill   Keep  r8   |    |    |    |    |    |V5 a|V1 a|    |    |
242.#305 r9   Kill   Keep  r9   |    |    |    |    |    |V5 a|V1 a|    |    |
242.#306 r10  Kill   Keep  r10  |    |    |    |    |    |V5 a|V1 a|    |    |
242.#307 r11  Kill   Keep  r11  |    |    |    |    |    |V5 a|V1 a|    |    |
242.#308 rax  Fixd   Keep  rax  |    |    |    |    |    |V5 a|V1 a|    |    |
242.#309 I69  Def    Alloc rax  |I69a|    |    |    |    |V5 a|V1 a|    |    |
243.#310 I69  Use *  Keep  rax  |I69i|    |    |    |    |V5 a|V1 a|    |    |
244.#311 V6   Def    Alloc rbx  |    |    |    |V6 a|    |V5 a|V1 a|    |    |
247.#312 V6   Use    Keep  rbx  |    |    |    |V6 a|    |V5 a|V1 a|    |    |
248.#313 I70  Def    Alloc rcx  |    |I70a|    |V6 a|    |V5 a|V1 a|    |    |
251.#314 rcx  Fixd   Keep  rcx  |    |I70a|    |V6 a|    |V5 a|V1 a|    |    |
251.#315 I70  Use *  Keep  rcx  |    |I70i|    |V6 a|    |V5 a|V1 a|    |    |
251.#316 rdx  Fixd   Keep  rdx  |    |    |    |V6 a|    |V5 a|V1 a|    |    |
--------------------------------+----+----+----+----+----+----+----+----+----+
Loc RP#  Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
--------------------------------+----+----+----+----+----+----+----+----+----+
251.#317 V1   Use *  Copy  rdx  |    |    |V1 i|V6 a|    |V5 a|V1 i|    |    |
252.#318 rax  Kill   Keep  rax  |    |    |    |V6 a|    |V5 a|    |    |    |
252.#319 rcx  Kill   Keep  rcx  |    |    |    |V6 a|    |V5 a|    |    |    |
252.#320 rdx  Kill   Keep  rdx  |    |    |    |V6 a|    |V5 a|    |    |    |
252.#321 r8   Kill   Keep  r8   |    |    |    |V6 a|    |V5 a|    |    |    |
252.#322 r9   Kill   Keep  r9   |    |    |    |V6 a|    |V5 a|    |    |    |
252.#323 r10  Kill   Keep  r10  |    |    |    |V6 a|    |V5 a|    |    |    |
252.#324 r11  Kill   Keep  r11  |    |    |    |V6 a|    |V5 a|    |    |    |
252.#325 mm0  Kill   Keep  mm0  |    |    |    |V6 a|    |V5 a|    |    |    |
252.#326 mm1  Kill   Keep  mm1  |    |    |    |V6 a|    |V5 a|    |    |    |
252.#327 mm2  Kill   Keep  mm2  |    |    |    |V6 a|    |V5 a|    |    |    |
252.#328 mm3  Kill   Keep  mm3  |    |    |    |V6 a|    |V5 a|    |    |    |
252.#329 mm4  Kill   Keep  mm4  |    |    |    |V6 a|    |V5 a|    |    |    |
252.#330 mm5  Kill   Keep  mm5  |    |    |    |V6 a|    |V5 a|    |    |    |
258.#331 C71  Def    Alloc rcx  |    |C71a|    |V6 a|    |V5 a|    |    |    |
259.#332 V6   Use    Keep  rbx  |    |C71a|    |V6 a|    |V5 a|    |    |    |
259.#333 C71  Use *  Keep  rcx  |    |C71i|    |V6 a|    |V5 a|    |    |    |
265.#334 rcx  Fixd   Keep  rcx  |    |    |    |V6 a|    |V5 a|    |    |    |
265.#335 V5   Use    Copy  rcx  |    |V5 a|    |V6 a|    |V5 a|    |    |    |
266.#336 rcx  Fixd   Keep  rcx  |    |    |    |V6 a|    |V5 a|    |    |    |
266.#337 I72  Def    Alloc rcx  |    |I72a|    |V6 a|    |V5 a|    |    |    |
269.#338 rdx  Fixd   Keep  rdx  |    |I72a|    |V6 a|    |V5 a|    |    |    |
269.#339 V6   Use *  Copy  rdx  |    |I72a|V6 i|V6 i|    |V5 a|    |    |    |
270.#340 rdx  Fixd   Keep  rdx  |    |I72a|    |    |    |V5 a|    |    |    |
270.#341 I73  Def    Alloc rdx  |    |I72a|I73a|    |    |V5 a|    |    |    |
271.#342 rcx  Fixd   Keep  rcx  |    |I72a|I73a|    |    |V5 a|    |    |    |
271.#343 I72  Use *  Keep  rcx  |    |I72i|I73a|    |    |V5 a|    |    |    |
271.#344 rdx  Fixd   Keep  rdx  |    |    |I73a|    |    |V5 a|    |    |    |
271.#345 I73  Use *  Keep  rdx  |    |    |I73i|    |    |V5 a|    |    |    |
272.#346 rax  Kill   Keep  rax  |    |    |    |    |    |V5 a|    |    |    |
272.#347 rcx  Kill   Keep  rcx  |    |    |    |    |    |V5 a|    |    |    |
272.#348 rdx  Kill   Keep  rdx  |    |    |    |    |    |V5 a|    |    |    |
272.#349 r8   Kill   Keep  r8   |    |    |    |    |    |V5 a|    |    |    |
272.#350 r9   Kill   Keep  r9   |    |    |    |    |    |V5 a|    |    |    |
272.#351 r10  Kill   Keep  r10  |    |    |    |    |    |V5 a|    |    |    |
272.#352 r11  Kill   Keep  r11  |    |    |    |    |    |V5 a|    |    |    |
277.#353 rax  Fixd   Keep  rax  |    |    |    |    |    |V5 a|    |    |    |
277.#354 V5   Use *  Copy  rax  |V5 i|    |    |    |    |V5 i|    |    |    |

Recording the maximum number of concurrent spills:

----------
LSRA Stats
----------
Total Tracked Vars:  16
Total Reg Cand Vars: 15
Total number of Intervals: 73
Total number of RefPositions: 354
Total Spill Count: 0    Weighted: 0.000000
Total CopyReg Count: 0   Weighted: 0.000000
Total ResolutionMov Count: 0    Weighted: 0.000000
Total number of split edges: 0
Total Number of spill temps created: 0

TUPLE STYLE DUMP WITH REGISTER ASSIGNMENTS
Incoming Parameters:  V00(rcx=>rsi)
BB01 [000..06D) -> BB03 (cond), preds={} succs={BB02,BB03}
=====
  N003.                    IL_OFFSET IL offset: 0x0
  N005. rcx             =  CNS_INT(h) 0xd1ffab1e method
  N007. rcx             =  PUTARG_REG; rcx
  N009. rax             =  CALL help; rcx
* N011.                    V03(rdi); rax
  N013.                    IL_OFFSET IL offset: 0x5
  N015.                    V03(rdi*)
* N017.                    V01(rdi); rdi*
  N019.                    IL_OFFSET IL offset: 0x6
  N021.                    V01(rdi)
  N023. rcx             =  LEA(b+8) ; rdi
  N025.                    V00(rsi*)
  N027.                    STOREIND ; rcx,rsi*
  N029. rcx             =  CNS_INT(h) 0xd1ffab1e token
  N031. rcx             =  PUTARG_REG; rcx
  N033. rax             =  CALL help; rcx
* N035.                    V04(rsi); rax
  N037. rcx             =  CNS_INT(h) 0xd1ffab1e static Fseq[Instance]
  N039. r8              =  IND      ; rcx
* N041.                    V07(r8); r8
  N043.                    V04(rsi)
  N045. rcx             =  PUTARG_REG; rsi
  N047.                    V07(r8*)
  N049. r8              =  PUTARG_REG; r8*
  N051. rdx             =  CNS_INT   0
  N053. rdx             =  PUTARG_REG; rdx
  N055.                    CALL     ; rcx,r8,rdx
  N057.                    IL_OFFSET IL offset: 0x17
  N059. rcx             =  CNS_INT   0x7ffc86100028
  N061. rcx             =  PUTARG_REG; rcx
  N063. rdx             =  CNS_INT   215
  N065. rdx             =  PUTARG_REG; rdx
* N067. rax             =  CALL help; rcx,rdx
  N069. rdx             =  CNS_INT(h) 0xd1ffab1e static Fseq[FalseString]
  N071. r8              =  IND      ; rdx
* N073.                    V08(r8); r8
  N075.                    IL_OFFSET IL offset: 0x17
  N077. rdx             =  CNS_INT(h) 0xD1FFAB1E "AlwaysCompileMarkupFilesInSeparateDomain"
  N079. rdx             =  IND      ; rdx
  N081. rdx             =  PUTARG_REG; rdx
  N083.                    V04(rsi)
  N085. rcx             =  PUTARG_REG; rsi
  N087.                    V08(r8*)
  N089. r8              =  PUTARG_REG; r8*
  N091. r9              =  CNS_INT   2
  N093. r9              =  PUTARG_REG; r9
  N095. rax             =  CALL     ; rdx,rcx,r8,r9
* N097.                    V09(rax); rax
  N099.                    IL_OFFSET IL offset: 0x17
  N101. rcx             =  CNS_INT(h) 0xD1FFAB1E [ICON_STR_HDL]
  N103. rdx             =  IND      ; rcx
* N105.                    V17(rdx); rdx
  N107.                    IL_OFFSET IL offset: 0x17
  N109.                    V17(rdx*)
* N111.                    V11(rdx); rdx*
  N113.                    IL_OFFSET IL offset: 0x17
  N115.                    V09(rax*)
  N117.                    CNS_INT   0
  N119.                    NE       ; rax*
  N121.                    JTRUE    
Var=Reg end of BB01: V04=rsi V01=rdi V11=rdx 

BB02 [017..018), preds={BB01} succs={BB03}
=====
Predecessor for variable locations: BB01
Var=Reg beg of BB02: V04=rsi V01=rdi V11=rdx 
  N125.                    IL_OFFSET IL offset: 0x17
  N127.                    V11(rdx)
  N129. rcx             =  PUTARG_REG; rdx
  N131.                    V11(rdx*)
  N133. rdx             =  PUTARG_REG; rdx*
  N135.                    CALL     ; rcx,rdx
Var=Reg end of BB02: V04=rsi V01=rdi 

BB03 [000..018) (return), preds={BB01,BB02} succs={}
=====
Predecessor for variable locations: BB01
Var=Reg beg of BB03: V04=rsi V01=rdi 
  N139. rax             =  CALL     
* N141.                    V15(rdx); rax
  N143.                    V15(rdx*)
  N145. rdx             =  PUTARG_REG; rdx*
  N147.                    V04(rsi*)
  N149. rcx             =  PUTARG_REG; rsi*
  N151. rax             =  CALL     ; rdx,rcx
* N153.                    V05(rsi); rax
  N155.                    V05(rsi)
  N157. STK             =  LEA(b+136); rsi
  N159. rcx             =  IND      ; STK
* N161.                    V16(rcx); rcx
  N163.                    V16(rcx)
* N165.                    V12(rdx); rcx
  N167.                    V12(rdx*)
  N169. STK             =  LEA(b+56); rdx*
  N171.                    CNS_INT   1
  N173.                    STOREIND ; STK
  N175.                    IL_OFFSET IL offset: 0x33
  N177.                    V16(rcx)
* N179.                    V13(rdx); rcx
  N181.                    IL_OFFSET IL offset: 0x33
  N183.                    V13(rdx*)
  N185. STK             =  LEA(b+57); rdx*
  N187.                    CNS_INT   1
  N189.                    STOREIND ; STK
  N191.                    IL_OFFSET IL offset: 0x3a
  N193.                    V16(rcx*)
  N195. rcx             =  PUTARG_REG; rcx*
  N197. rdx             =  CNS_INT(h) 0xD1FFAB1E "ilproj"
  N199. rdx             =  IND      ; rdx
  N201. rdx             =  PUTARG_REG; rdx
  N203. r8              =  CNS_INT(h) 0xD1FFAB1E "IL"
  N205. r8              =  IND      ; r8
  N207. r8              =  PUTARG_REG; r8
  N209.                    CALL     ; rcx,rdx,r8
  N211.                    IL_OFFSET IL offset: 0x4a
  N213.                    V05(rsi)
  N215. STK             =  LEA(b+136); rsi
  N217. rcx             =  IND      ; STK
  N219. rcx             =  PUTARG_REG; rcx
  N221. rdx             =  CNS_INT(h) 0xD1FFAB1E "vcxproj"
  N223. rdx             =  IND      ; rdx
  N225. rdx             =  PUTARG_REG; rdx
  N227. r8              =  CNS_INT(h) 0xD1FFAB1E "C++"
  N229. r8              =  IND      ; r8
  N231. r8              =  PUTARG_REG; r8
  N233.                    CALL nullcheck; rcx,rdx,r8
  N235.                    IL_OFFSET IL offset: 0x5a
  N237. rcx             =  CNS_INT(h) 0xd1ffab1e token
  N239. rcx             =  PUTARG_REG; rcx
  N241. rax             =  CALL help; rcx
* N243.                    V06(rbx); rax
  N245.                    V06(rbx)
  N247. rcx             =  LEA(b+8) ; rbx
  N249.                    V01(rdi*)
  N251.                    STOREIND ; rcx,rdi*
  N253.                    V06(rbx)
  N255. STK             =  LEA(b+24); rbx
  N257. rcx             =  CNS_INT(h) 0xd1ffab1e ftn
  N259.                    STOREIND ; STK,rcx
  N261.                    IL_OFFSET IL offset: 0x67
  N263.                    V05(rsi)
  N265. rcx             =  PUTARG_REG; rsi
  N267.                    V06(rbx*)
  N269. rdx             =  PUTARG_REG; rbx*
  N271.                    CALL     ; rcx,rdx
  N273.                    IL_OFFSET IL offset: 0x6c
  N275.                    V05(rsi*)
  N277.                    RETURN   ; rsi*
Var=Reg end of BB03: none




*************** Finishing PHASE Linear scan register alloc
*************** In genGenerateCode()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06D)-> BB03 ( cond )                     i label target hascall gcsafe newobj nullcheck LIR 
BB02 [0008]  1       BB01                  0.25    [017..018)                                     i hascall gcsafe LIR 
BB03 [0009]  2       BB01,BB02             1       [000..018)        (return)                     i label target hascall gcsafe newobj nullcheck LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Generate code
*************** In fgDebugCheckBBlist
Finalizing stack frame
Recording Var Locations at start of BB01
  V00(rsi)
Modified regs: [rax rcx rdx rbx rsi rdi r8-r11 mm0-mm5]
Callee-saved registers pushed: 3 [rbx rsi rdi]
*************** In lvaAssignFrameOffsets(FINAL_FRAME_LAYOUT)
Assign V02 OutArgs, size=32, stkOffs=-0x40
--- delta bump 8 for RA
--- delta bump 56 for RSP frame
--- virtual stack offset to actual stack offset delta is 64
-- V00 was 0, now 64
-- V02 was -64, now 0
; Final local variable assignments
;
;  V00 arg0         [V00,T03] (  3,  3   )     ref  ->  rsi         class-hnd
;  V01 loc0         [V01,T11] (  3,  3   )     ref  ->  rdi         class-hnd exact
;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V03 tmp1         [V03,T05] (  2,  4   )     ref  ->  rdi         class-hnd exact "NewObj constructor temp"
;  V04 tmp2         [V04,T01] (  4,  8   )     ref  ->  rsi         class-hnd exact "NewObj constructor temp"
;  V05 tmp3         [V05,T00] (  5, 10   )     ref  ->  rsi         class-hnd "dup spill"
;  V06 tmp4         [V06,T02] (  4,  8   )     ref  ->  rbx         class-hnd exact "NewObj constructor temp"
;  V07 tmp5         [V07,T06] (  2,  4   )     ref  ->   r8         class-hnd exact "Inlining Arg"
;  V08 tmp6         [V08,T07] (  2,  4   )     ref  ->   r8         class-hnd "Inlining Arg"
;  V09 tmp7         [V09,T14] (  2,  2   )    bool  ->  rax         "Inline stloc first use temp"
;* V10 tmp8         [V10,T15] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;  V11 tmp9         [V11,T12] (  3,  3   )     ref  ->  rdx         class-hnd "Inlining Arg"
;  V12 tmp10        [V12,T08] (  2,  4   )     ref  ->  rdx         class-hnd "Inlining Arg"
;  V13 tmp11        [V13,T09] (  2,  4   )     ref  ->  rdx         class-hnd "Inlining Arg"
;* V14 tmp12        [V14    ] (  0,  0   )    long  ->  zero-ref    "Inlining Arg"
;  V15 tmp13        [V15,T10] (  2,  4   )     ref  ->  rdx         "argument with side effect"
;  V16 cse0         [V16,T04] (  4,  4   )     ref  ->  rcx         "CSE - aggressive"
;  V17 cse1         [V17,T13] (  2,  2   )     ref  ->  rdx         "CSE - moderate"
;
; Lcl frame size = 32
Setting stack level from -572662307 to 0

=============== Generating BB01 [000..06D) -> BB03 (cond), preds={} succs={BB02,BB03} flags=0x00000002.204b0420: i label target hascall gcsafe newobj nullcheck LIR 
BB01 IN (1)={    V00        } + ByrefExposed + GcHeap
     OUT(3)={V04     V01 V11} + ByrefExposed + GcHeap

Recording Var Locations at start of BB01
  V00(rsi)
Change life 0000000000000000 {} -> 0000000000000008 {V00}
							V00 in reg rsi is becoming live  [------]
							Live regs: 00000000 {} => 00000040 {rsi}
							Live regs: (unchanged) 00000040 {rsi}
							GC regs: (unchanged) 00000040 {rsi}
							Byref regs: (unchanged) 00000000 {}

      L_M36280_BB01:
Label: IG02, GCvars=0000000000000000 {}, gcrefRegs=00000040 {rsi}, byrefRegs=00000000 {}

Scope info: begin block BB01, IL range [000..06D)
Scope info: open scopes =
   0 (V00 arg0) [000..06D)
Added IP mapping: 0x0000 STACK_EMPTY (G_M36280_IG02,ins#0,ofs#0) label
Generating: N003 (???,???) [000237] ------------                 IL_OFFSET void   IL offset: 0x0 REG NA
Generating: N005 (  2, 10) [000000] H-----------         t0 =    CNS_INT(h) long   0xd1ffab1e method REG rcx $100
IN0001:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t0     long   
Generating: N007 (???,???) [000258] ------------       t258 = *  PUTARG_REG long   REG rcx
                                                              /--*  t258   long   arg0 in rcx
Generating: N009 ( 16, 16) [000001] --C---------         t1 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $180
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000040 {rsi}, byrefRegs=00000000 {}
IN0002:        call     CORINFO_HELP_NEWSFAST
							GC regs: 00000040 {rsi} => 00000041 {rax rsi}
                                                              /--*  t1     ref    
Generating: N011 ( 16, 16) [000003] DA----------              *  STORE_LCL_VAR ref    V03 tmp1         d:2 rdi REG rdi
							GC regs: 00000041 {rax rsi} => 00000040 {rsi}
IN0003:        mov      rdi, rax
							V03 in reg rdi is becoming live  [000003]
							Live regs: 00000040 {rsi} => 000000C0 {rsi rdi}
							Live vars: {V00} => {V00 V03}
							GC regs: 00000040 {rsi} => 000000C0 {rsi rdi}
Added IP mapping: 0x0005 (G_M36280_IG02,ins#3,ofs#18)
Generating: N013 (???,???) [000238] ------------                 IL_OFFSET void   IL offset: 0x5 REG NA
Generating: N015 (  1,  1) [000006] ------------         t6 =    LCL_VAR   ref    V03 tmp1         u:2 rdi (last use) REG rdi $180
                                                              /--*  t6     ref    
Generating: N017 (  1,  3) [000008] DA----------              *  STORE_LCL_VAR ref    V01 loc0         d:2 rdi REG rdi
							V03 in reg rdi is becoming dead  [000006]
							Live regs: 000000C0 {rsi rdi} => 00000040 {rsi}
							Live vars: {V00 V03} => {V00}
							GC regs: 000000C0 {rsi rdi} => 00000040 {rsi}
							V01 in reg rdi is becoming live  [000008]
							Live regs: 00000040 {rsi} => 000000C0 {rsi rdi}
							Live vars: {V00} => {V00 V01}
							GC regs: 00000040 {rsi} => 000000C0 {rsi rdi}
Added IP mapping: 0x0006 STACK_EMPTY (G_M36280_IG02,ins#3,ofs#18)
Generating: N019 (???,???) [000239] ------------                 IL_OFFSET void   IL offset: 0x6 REG NA
Generating: N021 (  1,  1) [000009] ------------         t9 =    LCL_VAR   ref    V01 loc0         u:2 rdi REG rdi $180
                                                              /--*  t9     ref    
Generating: N023 (  2,  2) [000170] ------------       t170 = *  LEA(b+8)  byref  REG rcx
IN0004:        lea      rcx, bword ptr [rdi+8]
							Byref regs: 00000000 {} => 00000002 {rcx}
Generating: N025 (  1,  1) [000010] ------------        t10 =    LCL_VAR   ref    V00 arg0         u:1 rsi (last use) REG rsi $80
                                                              /--*  t170   byref  
                                                              +--*  t10    ref    
Generating: N027 (???,???) [000240] -A--GO------              *  STOREIND  ref    REG NA
							Byref regs: 00000002 {rcx} => 00000000 {}
							V00 in reg rsi is becoming dead  [000010]
							Live regs: 000000C0 {rsi rdi} => 00000080 {rdi}
							Live vars: {V00 V01} => {V01}
							GC regs: 000000C0 {rsi rdi} => 00000080 {rdi}
IN0005:        mov      rdx, rsi
NoGC Call: savedSet=0000F0E8 {rbx rbp rsi rdi r12 r13 r14 r15}
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000080 {rdi}, byrefRegs=00000000 {}
IN0006:        call     CORINFO_HELP_ASSIGN_REF
Generating: N029 (  2, 10) [000015] H-----------        t15 =    CNS_INT(h) long   0xd1ffab1e token REG rcx $102
IN0007:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t15    long   
Generating: N031 (???,???) [000259] ------------       t259 = *  PUTARG_REG long   REG rcx
                                                              /--*  t259   long   arg0 in rcx
Generating: N033 ( 16, 16) [000016] --C---------        t16 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $183
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000080 {rdi}, byrefRegs=00000000 {}
IN0008:        call     CORINFO_HELP_NEWSFAST
							GC regs: 00000080 {rdi} => 00000081 {rax rdi}
                                                              /--*  t16    ref    
Generating: N035 ( 16, 16) [000018] DA----------              *  STORE_LCL_VAR ref    V04 tmp2         d:2 rsi REG rsi
							GC regs: 00000081 {rax rdi} => 00000080 {rdi}
IN0009:        mov      rsi, rax
							V04 in reg rsi is becoming live  [000018]
							Live regs: 00000080 {rdi} => 000000C0 {rsi rdi}
							Live vars: {V01} => {V01 V04}
							GC regs: 00000080 {rdi} => 000000C0 {rsi rdi}
Generating: N037 (  2, 10) [000172] I-----------       t172 =    CNS_INT(h) long   0xd1ffab1e static Fseq[Instance] REG rcx $103
IN000a:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t172   long   
Generating: N039 (  4, 12) [000067] n---G-------        t67 = *  IND       ref    REG r8 <l:$242, c:$145>
IN000b:        mov      r8, gword ptr [rcx]
							GC regs: 000000C0 {rsi rdi} => 000001C0 {rsi rdi r8}
                                                              /--*  t67    ref    
Generating: N041 (  4, 12) [000073] DA--G-------              *  STORE_LCL_VAR ref    V07 tmp5         d:2 r8 REG r8
							GC regs: 000001C0 {rsi rdi r8} => 000000C0 {rsi rdi}
							V07 in reg r8 is becoming live  [000073]
							Live regs: 000000C0 {rsi rdi} => 000001C0 {rsi rdi r8}
							Live vars: {V01 V04} => {V01 V04 V07}
							GC regs: 000000C0 {rsi rdi} => 000001C0 {rsi rdi r8}
Generating: N043 (  1,  1) [000019] ------------        t19 =    LCL_VAR   ref    V04 tmp2         u:2 rsi REG rsi $183
                                                              /--*  t19    ref    
Generating: N045 (???,???) [000260] ------------       t260 = *  PUTARG_REG ref    REG rcx
IN000c:        mov      rcx, rsi
							GC regs: 000001C0 {rsi rdi r8} => 000001C2 {rcx rsi rdi r8}
Generating: N047 (  1,  1) [000070] ------------        t70 =    LCL_VAR   ref    V07 tmp5         u:2 r8 (last use) REG r8 <l:$242, c:$145>
                                                              /--*  t70    ref    
Generating: N049 (???,???) [000261] ------------       t261 = *  PUTARG_REG ref    REG r8
							V07 in reg r8 is becoming dead  [000070]
							Live regs: 000001C0 {rsi rdi r8} => 000000C0 {rsi rdi}
							Live vars: {V01 V04 V07} => {V01 V04}
							GC regs: 000001C2 {rcx rsi rdi r8} => 000000C2 {rcx rsi rdi}
							GC regs: 000000C2 {rcx rsi rdi} => 000001C2 {rcx rsi rdi r8}
Generating: N051 (  1,  1) [000069] ------------        t69 =    CNS_INT   int    0 REG rdx $40
IN000d:        xor      edx, edx
                                                              /--*  t69    int    
Generating: N053 (???,???) [000262] ------------       t262 = *  PUTARG_REG int    REG rdx
                                                              /--*  t260   ref    this in rcx
                                                              +--*  t261   ref    arg2 in r8
                                                              +--*  t262   int    arg1 in rdx
Generating: N055 ( 17, 12) [000071] --CXG-------              *  CALL      void   System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]..ctor REG NA $VN.Void
							GC regs: 000001C2 {rcx rsi rdi r8} => 000001C0 {rsi rdi r8}
							GC regs: 000001C0 {rsi rdi r8} => 000000C0 {rsi rdi}
							Call: GCvars=0000000000000000 {}, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}
IN000e:        call     System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:.ctor(int,System.Collections.Generic.IEqualityComparer`1[__Canon]):this
Added IP mapping: 0x0017 (G_M36280_IG02,ins#14,ofs#71)
Generating: N057 (???,???) [000241] ------------                 IL_OFFSET void   IL offset: 0x17 REG NA
Generating: N059 (  2, 10) [000026] ------------        t26 =    CNS_INT   long   0x7ffc86100028 REG rcx $1c1
IN000f:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t26    long   
Generating: N061 (???,???) [000263] ------------       t263 = *  PUTARG_REG long   REG rcx
Generating: N063 (  1,  4) [000027] ------------        t27 =    CNS_INT   int    215 REG rdx $43
IN0010:        mov      edx, 215
                                                              /--*  t27    int    
Generating: N065 (???,???) [000264] ------------       t264 = *  PUTARG_REG int    REG rdx
                                                              /--*  t263   long   arg0 in rcx
                                                              +--*  t264   int    arg1 in rdx
Generating: N067 ( 17, 21) [000028] H-CXG-------        t28 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE REG rax $301
							Call: GCvars=0000000000000000 {}, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}
IN0011:        call     CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
Generating: N069 (  2, 10) [000178] I-----------       t178 =    CNS_INT(h) long   0xd1ffab1e static Fseq[FalseString] REG rdx $104
IN0012:        mov      rdx, 0xD1FFAB1E
                                                              /--*  t178   long   
Generating: N071 (  4, 12) [000024] n---G-------        t24 = *  IND       ref    REG r8 <l:$243, c:$14a>
IN0013:        mov      r8, gword ptr [rdx]
							GC regs: 000000C0 {rsi rdi} => 000001C0 {rsi rdi r8}
                                                              /--*  t24    ref    
Generating: N073 ( 21, 33) [000088] DA-XG-------              *  STORE_LCL_VAR ref    V08 tmp6         d:2 r8 REG r8
							GC regs: 000001C0 {rsi rdi r8} => 000000C0 {rsi rdi}
							V08 in reg r8 is becoming live  [000088]
							Live regs: 000000C0 {rsi rdi} => 000001C0 {rsi rdi r8}
							Live vars: {V01 V04} => {V01 V04 V08}
							GC regs: 000000C0 {rsi rdi} => 000001C0 {rsi rdi r8}
genIPmappingAdd: ignoring duplicate IL offset 0x80000017
Generating: N075 (???,???) [000242] ------------                 IL_OFFSET void   IL offset: 0x17 REG NA
Generating: N077 (  2, 10) [000179] H-----------       t179 =    CNS_INT(h) long   0xD1FFAB1E "AlwaysCompileMarkupFilesInSeparateDomain" REG rdx $105
IN0014:        mov      rdx, 0xD1FFAB1E
                                                              /--*  t179   long   
Generating: N079 (  4, 12) [000180] #---G-------       t180 = *  IND       ref    REG rdx $189
IN0015:        mov      rdx, gword ptr [rdx]
							GC regs: 000001C0 {rsi rdi r8} => 000001C4 {rdx rsi rdi r8}
                                                              /--*  t180   ref    
Generating: N081 (???,???) [000265] ----G-------       t265 = *  PUTARG_REG ref    REG rdx
							GC regs: 000001C4 {rdx rsi rdi r8} => 000001C0 {rsi rdi r8}
							GC regs: 000001C0 {rsi rdi r8} => 000001C4 {rdx rsi rdi r8}
Generating: N083 (  1,  1) [000022] ------------        t22 =    LCL_VAR   ref    V04 tmp2         u:2 rsi REG rsi $183
                                                              /--*  t22    ref    
Generating: N085 (???,???) [000266] ------------       t266 = *  PUTARG_REG ref    REG rcx
IN0016:        mov      rcx, rsi
							GC regs: 000001C4 {rdx rsi rdi r8} => 000001C6 {rcx rdx rsi rdi r8}
Generating: N087 (  1,  1) [000076] ------------        t76 =    LCL_VAR   ref    V08 tmp6         u:2 r8 (last use) REG r8 <l:$243, c:$14a>
                                                              /--*  t76    ref    
Generating: N089 (???,???) [000267] ------------       t267 = *  PUTARG_REG ref    REG r8
							V08 in reg r8 is becoming dead  [000076]
							Live regs: 000001C0 {rsi rdi r8} => 000000C0 {rsi rdi}
							Live vars: {V01 V04 V08} => {V01 V04}
							GC regs: 000001C6 {rcx rdx rsi rdi r8} => 000000C6 {rcx rdx rsi rdi}
							GC regs: 000000C6 {rcx rdx rsi rdi} => 000001C6 {rcx rdx rsi rdi r8}
Generating: N091 (  1,  1) [000077] ------------        t77 =    CNS_INT   int    2 REG r9 $44
IN0017:        mov      r9d, 2
                                                              /--*  t77    int    
Generating: N093 (???,???) [000268] ------------       t268 = *  PUTARG_REG int    REG r9
                                                              /--*  t265   ref    arg1 in rdx
                                                              +--*  t266   ref    this in rcx
                                                              +--*  t267   ref    arg2 in r8
                                                              +--*  t268   int    arg3 in r9
Generating: N095 ( 21, 25) [000078] --CXG-------        t78 = *  CALL      int    System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon].TryInsert REG rax $283
							GC regs: 000001C6 {rcx rdx rsi rdi r8} => 000001C2 {rcx rsi rdi r8}
							GC regs: 000001C2 {rcx rsi rdi r8} => 000001C0 {rsi rdi r8}
							GC regs: 000001C0 {rsi rdi r8} => 000000C0 {rsi rdi}
							Call: GCvars=0000000000000000 {}, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}
IN0018:        call     System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:TryInsert(System.__Canon,System.__Canon,ubyte):bool:this
                                                              /--*  t78    int    
Generating: N097 ( 25, 28) [000081] DA-XG-------              *  STORE_LCL_VAR int    V09 tmp7         d:2 rax REG rax
							V09 in reg rax is becoming live  [000081]
							Live regs: 000000C0 {rsi rdi} => 000000C1 {rax rsi rdi}
							Live vars: {V01 V04} => {V01 V04 V09}
genIPmappingAdd: ignoring duplicate IL offset 0x80000017
Generating: N099 (???,???) [000243] ------------                 IL_OFFSET void   IL offset: 0x17 REG NA
Generating: N101 (  2, 10) [000091] H-----------        t91 =    CNS_INT(h) long   0xD1FFAB1E [ICON_STR_HDL] REG rcx $106
IN0019:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t91    long   
Generating: N103 (  4, 12) [000092] #---G-------        t92 = *  IND       ref    REG rdx $18a
IN001a:        mov      rdx, gword ptr [rcx]
							GC regs: 000000C0 {rsi rdi} => 000000C4 {rdx rsi rdi}
                                                              /--*  t92    ref    
Generating: N105 (  4, 12) [000231] DA--G-------              *  STORE_LCL_VAR ref    V17 cse1         d:1 rdx REG rdx
							GC regs: 000000C4 {rdx rsi rdi} => 000000C0 {rsi rdi}
							V17 in reg rdx is becoming live  [000231]
							Live regs: 000000C1 {rax rsi rdi} => 000000C5 {rax rdx rsi rdi}
							Live vars: {V01 V04 V09} => {V01 V04 V09 V17}
							GC regs: 000000C0 {rsi rdi} => 000000C4 {rdx rsi rdi}
genIPmappingAdd: ignoring duplicate IL offset 0x80000017
Generating: N107 (???,???) [000244] ------------                 IL_OFFSET void   IL offset: 0x17 REG NA
Generating: N109 (  1,  1) [000234] ------------       t234 =    LCL_VAR   ref    V17 cse1         u:1 rdx (last use) REG rdx $18a
                                                              /--*  t234   ref    
Generating: N111 (  5,  4) [000108] DA--G-------              *  STORE_LCL_VAR ref    V11 tmp9         d:2 rdx REG rdx
							V17 in reg rdx is becoming dead  [000234]
							Live regs: 000000C5 {rax rdx rsi rdi} => 000000C1 {rax rsi rdi}
							Live vars: {V01 V04 V09 V17} => {V01 V04 V09}
							GC regs: 000000C4 {rdx rsi rdi} => 000000C0 {rsi rdi}
							V11 in reg rdx is becoming live  [000108]
							Live regs: 000000C1 {rax rsi rdi} => 000000C5 {rax rdx rsi rdi}
							Live vars: {V01 V04 V09} => {V01 V04 V09 V11}
							GC regs: 000000C0 {rsi rdi} => 000000C4 {rdx rsi rdi}
genIPmappingAdd: ignoring duplicate IL offset 0x80000017
Generating: N113 (???,???) [000245] ------------                 IL_OFFSET void   IL offset: 0x17 REG NA
Generating: N115 (  3,  2) [000098] ------------        t98 =    LCL_VAR   int    V09 tmp7         u:2 rax (last use) REG rax $283
Generating: N117 (  1,  1) [000099] -c----------        t99 =    CNS_INT   int    0 REG NA $40
                                                              /--*  t98    int    
                                                              +--*  t99    int    
Generating: N119 (  5,  4) [000100] J------N----              *  NE        void   REG NA $340
							V09 in reg rax is becoming dead  [000098]
							Live regs: 000000C5 {rax rdx rsi rdi} => 000000C4 {rdx rsi rdi}
							Live vars: {V01 V04 V09 V11} => {V01 V04 V11}
IN001b:        test     eax, eax
Generating: N121 (  7,  6) [000101] ------------              *  JTRUE     void   REG NA
IN001c:        jne      L_M36280_BB03

Scope info: end block BB01, IL range [000..06D)
Scope info: ending scope, LVnum=0 [000..06D)
Scope info: ending scope, LVnum=1 [000..06D)
Scope info: open scopes =
   <none>

=============== Generating BB02 [017..018), preds={BB01} succs={BB03} flags=0x00000002.20080020: i hascall gcsafe LIR 
BB02 IN (3)={V04 V01 V11} + ByrefExposed + GcHeap
     OUT(2)={V04 V01    } + ByrefExposed + GcHeap

Recording Var Locations at start of BB02
  V04(rsi)  V01(rdi)  V11(rdx)
Liveness not changing: 0000000000001802 {V01 V04 V11}
							Live regs: 00000000 {} => 000000C4 {rdx rsi rdi}
							GC regs: 00000000 {} => 000000C4 {rdx rsi rdi}
							Byref regs: (unchanged) 00000000 {}

      L_M36280_BB02:

      G_M36280_IG02:        ; offs=000000H, funclet=00, bbWeight=1   
Label: IG03, GCvars=0000000000000000 {}, gcrefRegs=000000C4 {rdx rsi rdi}, byrefRegs=00000000 {}

Scope info: begin block BB02, IL range [017..018)
Scope info: open scopes =
   1 (V01 loc0) [000..06D)
genIPmappingAdd: ignoring duplicate IL offset 0x80000017
Generating: N125 (???,???) [000246] ------------                 IL_OFFSET void   IL offset: 0x17 REG NA
Generating: N127 (  3,  2) [000102] ------------       t102 =    LCL_VAR   ref    V11 tmp9         u:2 rdx REG rdx $18a
                                                              /--*  t102   ref    
Generating: N129 (???,???) [000269] ------------       t269 = *  PUTARG_REG ref    REG rcx
IN001d:        mov      rcx, rdx
							GC regs: 000000C4 {rdx rsi rdi} => 000000C6 {rcx rdx rsi rdi}
Generating: N131 (  3,  2) [000103] ------------       t103 =    LCL_VAR   ref    V11 tmp9         u:2 rdx (last use) REG rdx $18a
                                                              /--*  t103   ref    
Generating: N133 (???,???) [000270] ------------       t270 = *  PUTARG_REG ref    REG rdx
							V11 in reg rdx is becoming dead  [000103]
							Live regs: 000000C4 {rdx rsi rdi} => 000000C0 {rsi rdi}
							Live vars: {V01 V04 V11} => {V01 V04}
							GC regs: 000000C6 {rcx rdx rsi rdi} => 000000C2 {rcx rsi rdi}
							GC regs: 000000C2 {rcx rsi rdi} => 000000C6 {rcx rdx rsi rdi}
                                                              /--*  t269   ref    arg0 in rcx
                                                              +--*  t270   ref    arg1 in rdx
Generating: N135 ( 20, 11) [000104] --CXG-------              *  CALL      void   System.Diagnostics.Debug.Fail REG NA $VN.Void
							GC regs: 000000C6 {rcx rdx rsi rdi} => 000000C4 {rdx rsi rdi}
							GC regs: 000000C4 {rdx rsi rdi} => 000000C0 {rsi rdi}
							Call: GCvars=0000000000000000 {}, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}
IN001e:        call     System.Diagnostics.Debug:Fail(System.String,System.String)

Scope info: end block BB02, IL range [017..018)
Scope info: open scopes =
   1 (V01 loc0) [000..06D)

=============== Generating BB03 [000..018) (return), preds={BB01,BB02} succs={} flags=0x00000002.204b0420: i label target hascall gcsafe newobj nullcheck LIR 
BB03 IN (2)={V04 V01} + ByrefExposed + GcHeap
     OUT(0)={       }

Recording Var Locations at start of BB03
  V04(rsi)  V01(rdi)
Liveness not changing: 0000000000000802 {V01 V04}
							Live regs: 00000000 {} => 000000C0 {rsi rdi}
							GC regs: 00000000 {} => 000000C0 {rsi rdi}
							Byref regs: (unchanged) 00000000 {}

      L_M36280_BB03:

      G_M36280_IG03:        ; offs=000098H, funclet=00, bbWeight=0.25
Label: IG04, GCvars=0000000000000000 {}, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}

Scope info: begin block BB03, IL range [000..018)
Scope info: open scopes =
   1 (V01 loc0) [000..06D)
Generating: N139 ( 14,  5) [000110] --CXG-------       t110 =    CALL      ref    Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices.get_DefaultServices REG rax $156
							Call: GCvars=0000000000000000 {}, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}
IN001f:        call     Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices:get_DefaultServices():Microsoft.CodeAnalysis.Host.Mef.MefHostServices
							GC regs: 000000C0 {rsi rdi} => 000000C1 {rax rsi rdi}
                                                              /--*  t110   ref    
Generating: N141 ( 14,  5) [000188] DA-XG-----L-              *  STORE_LCL_VAR ref    V15 tmp13        d:2 rdx REG rdx
							GC regs: 000000C1 {rax rsi rdi} => 000000C0 {rsi rdi}
IN0020:        mov      rdx, rax
							V15 in reg rdx is becoming live  [000188]
							Live regs: 000000C0 {rsi rdi} => 000000C4 {rdx rsi rdi}
							Live vars: {V01 V04} => {V01 V04 V15}
							GC regs: 000000C0 {rsi rdi} => 000000C4 {rdx rsi rdi}
Generating: N143 (  1,  1) [000189] ------------       t189 =    LCL_VAR   ref    V15 tmp13        u:2 rdx (last use) REG rdx $156
                                                              /--*  t189   ref    
Generating: N145 (???,???) [000271] ------------       t271 = *  PUTARG_REG ref    REG rdx
							V15 in reg rdx is becoming dead  [000189]
							Live regs: 000000C4 {rdx rsi rdi} => 000000C0 {rsi rdi}
							Live vars: {V01 V04 V15} => {V01 V04}
							GC regs: 000000C4 {rdx rsi rdi} => 000000C0 {rsi rdi}
							GC regs: 000000C0 {rsi rdi} => 000000C4 {rdx rsi rdi}
Generating: N147 (  1,  1) [000021] ------------        t21 =    LCL_VAR   ref    V04 tmp2         u:2 rsi (last use) REG rsi $183
                                                              /--*  t21    ref    
Generating: N149 (???,???) [000272] ------------       t272 = *  PUTARG_REG ref    REG rcx
							V04 in reg rsi is becoming dead  [000021]
							Live regs: 000000C0 {rsi rdi} => 00000080 {rdi}
							Live vars: {V01 V04} => {V01}
							GC regs: 000000C4 {rdx rsi rdi} => 00000084 {rdx rdi}
IN0021:        mov      rcx, rsi
							GC regs: 00000084 {rdx rdi} => 00000086 {rcx rdx rdi}
                                                              /--*  t271   ref    arg1 in rdx
                                                              +--*  t272   ref    arg0 in rcx
Generating: N151 ( 33, 14) [000112] --CXG-------       t112 = *  CALL      ref    Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create REG rax $159
							GC regs: 00000086 {rcx rdx rdi} => 00000082 {rcx rdi}
							GC regs: 00000082 {rcx rdi} => 00000080 {rdi}
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000080 {rdi}, byrefRegs=00000000 {}
IN0022:        call     Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:Create(System.Collections.Generic.IDictionary`2[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],Microsoft.CodeAnalysis.Host.HostServices):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace
							GC regs: 00000080 {rdi} => 00000081 {rax rdi}
                                                              /--*  t112   ref    
Generating: N153 ( 33, 14) [000034] DA-XG-------              *  STORE_LCL_VAR ref    V05 tmp3         d:2 rsi REG rsi
							GC regs: 00000081 {rax rdi} => 00000080 {rdi}
IN0023:        mov      rsi, rax
							V05 in reg rsi is becoming live  [000034]
							Live regs: 00000080 {rdi} => 000000C0 {rsi rdi}
							Live vars: {V01} => {V01 V05}
							GC regs: 00000080 {rdi} => 000000C0 {rsi rdi}
Generating: N155 (  1,  1) [000036] ------------        t36 =    LCL_VAR   ref    V05 tmp3         u:2 rsi REG rsi $159
                                                              /--*  t36    ref    
Generating: N157 (  2,  5) [000192] -c----------       t192 = *  LEA(b+136) byref  REG NA
                                                              /--*  t192   byref  
Generating: N159 (  4,  7) [000118] ---XG-------       t118 = *  IND       ref    REG rcx <l:$191, c:$190>
IN0024:        mov      rcx, gword ptr [rsi+136]
							GC regs: 000000C0 {rsi rdi} => 000000C2 {rcx rsi rdi}
                                                              /--*  t118   ref    
Generating: N161 (  4,  7) [000225] DA-XG-------              *  STORE_LCL_VAR ref    V16 cse0         d:1 rcx REG rcx
							GC regs: 000000C2 {rcx rsi rdi} => 000000C0 {rsi rdi}
							V16 in reg rcx is becoming live  [000225]
							Live regs: 000000C0 {rsi rdi} => 000000C2 {rcx rsi rdi}
							Live vars: {V01 V05} => {V01 V05 V16}
							GC regs: 000000C0 {rsi rdi} => 000000C2 {rcx rsi rdi}
Generating: N163 (  1,  1) [000226] ------------       t226 =    LCL_VAR   ref    V16 cse0         u:1 rcx REG rcx <l:$191, c:$190>
                                                              /--*  t226   ref    
Generating: N165 (  5,  8) [000129] DA-XG-------              *  STORE_LCL_VAR ref    V12 tmp10        d:2 rdx REG rdx
IN0025:        mov      rdx, rcx
							V12 in reg rdx is becoming live  [000129]
							Live regs: 000000C2 {rcx rsi rdi} => 000000C6 {rcx rdx rsi rdi}
							Live vars: {V01 V05 V16} => {V01 V05 V12 V16}
							GC regs: 000000C2 {rcx rsi rdi} => 000000C6 {rcx rdx rsi rdi}
Generating: N167 (  1,  1) [000124] ------------       t124 =    LCL_VAR   ref    V12 tmp10        u:2 rdx (last use) REG rdx <l:$18e, c:$15c>
                                                              /--*  t124   ref    
Generating: N169 (  2,  2) [000194] -c----------       t194 = *  LEA(b+56) byref  REG NA
Generating: N171 (  1,  1) [000125] -c----------       t125 =    CNS_INT   int    1 REG NA $46
                                                              /--*  t194   byref  
                                                              +--*  t125   int    
Generating: N173 (???,???) [000247] -A-XG-------              *  STOREIND  bool   REG NA
							V12 in reg rdx is becoming dead  [000124]
							Live regs: 000000C6 {rcx rdx rsi rdi} => 000000C2 {rcx rsi rdi}
							Live vars: {V01 V05 V12 V16} => {V01 V05 V16}
							GC regs: 000000C6 {rcx rdx rsi rdi} => 000000C2 {rcx rsi rdi}
IN0026:        mov      byte  ptr [rdx+56], 1
Added IP mapping: 0x0033 (G_M36280_IG04,ins#8,ofs#33) label
Generating: N175 (???,???) [000248] ------------                 IL_OFFSET void   IL offset: 0x33 REG NA
Generating: N177 (  1,  1) [000228] ------------       t228 =    LCL_VAR   ref    V16 cse0         u:1 rcx REG rcx <l:$18e, c:$15c>
                                                              /--*  t228   ref    
Generating: N179 (  1,  3) [000143] DA--G-------              *  STORE_LCL_VAR ref    V13 tmp11        d:2 rdx REG rdx
IN0027:        mov      rdx, rcx
							V13 in reg rdx is becoming live  [000143]
							Live regs: 000000C2 {rcx rsi rdi} => 000000C6 {rcx rdx rsi rdi}
							Live vars: {V01 V05 V16} => {V01 V05 V13 V16}
							GC regs: 000000C2 {rcx rsi rdi} => 000000C6 {rcx rdx rsi rdi}
genIPmappingAdd: ignoring duplicate IL offset 0x80000033
Generating: N181 (???,???) [000249] ------------                 IL_OFFSET void   IL offset: 0x33 REG NA
Generating: N183 (  1,  1) [000138] ------------       t138 =    LCL_VAR   ref    V13 tmp11        u:2 rdx (last use) REG rdx <l:$18e, c:$15e>
                                                              /--*  t138   ref    
Generating: N185 (  2,  2) [000198] -c----------       t198 = *  LEA(b+57) byref  REG NA
Generating: N187 (  1,  1) [000139] -c----------       t139 =    CNS_INT   int    1 REG NA $46
                                                              /--*  t198   byref  
                                                              +--*  t139   int    
Generating: N189 (???,???) [000250] -A-XG-------              *  STOREIND  bool   REG NA
							V13 in reg rdx is becoming dead  [000138]
							Live regs: 000000C6 {rcx rdx rsi rdi} => 000000C2 {rcx rsi rdi}
							Live vars: {V01 V05 V13 V16} => {V01 V05 V16}
							GC regs: 000000C6 {rcx rdx rsi rdi} => 000000C2 {rcx rsi rdi}
IN0028:        mov      byte  ptr [rdx+57], 1
Added IP mapping: 0x003A (G_M36280_IG04,ins#10,ofs#40)
Generating: N191 (???,???) [000251] ------------                 IL_OFFSET void   IL offset: 0x3a REG NA
Generating: N193 (  1,  1) [000229] ------------       t229 =    LCL_VAR   ref    V16 cse0         u:1 rcx (last use) REG rcx <l:$18e, c:$15c>
                                                              /--*  t229   ref    
Generating: N195 (???,???) [000273] ------------       t273 = *  PUTARG_REG ref    REG rcx
							V16 in reg rcx is becoming dead  [000229]
							Live regs: 000000C2 {rcx rsi rdi} => 000000C0 {rsi rdi}
							Live vars: {V01 V05 V16} => {V01 V05}
							GC regs: 000000C2 {rcx rsi rdi} => 000000C0 {rsi rdi}
							GC regs: 000000C0 {rsi rdi} => 000000C2 {rcx rsi rdi}
Generating: N197 (  2, 10) [000201] H-----------       t201 =    CNS_INT(h) long   0xD1FFAB1E "ilproj" REG rdx $10b
IN0029:        mov      rdx, 0xD1FFAB1E
                                                              /--*  t201   long   
Generating: N199 (  4, 12) [000202] #---G-------       t202 = *  IND       ref    REG rdx $194
IN002a:        mov      rdx, gword ptr [rdx]
							GC regs: 000000C2 {rcx rsi rdi} => 000000C6 {rcx rdx rsi rdi}
                                                              /--*  t202   ref    
Generating: N201 (???,???) [000274] ----G-------       t274 = *  PUTARG_REG ref    REG rdx
							GC regs: 000000C6 {rcx rdx rsi rdi} => 000000C2 {rcx rsi rdi}
							GC regs: 000000C2 {rcx rsi rdi} => 000000C6 {rcx rdx rsi rdi}
Generating: N203 (  2, 10) [000203] H-----------       t203 =    CNS_INT(h) long   0xD1FFAB1E "IL" REG r8 $10c
IN002b:        mov      r8, 0xD1FFAB1E
                                                              /--*  t203   long   
Generating: N205 (  4, 12) [000204] #---G-------       t204 = *  IND       ref    REG r8 $195
IN002c:        mov      r8, gword ptr [r8]
							GC regs: 000000C6 {rcx rdx rsi rdi} => 000001C6 {rcx rdx rsi rdi r8}
                                                              /--*  t204   ref    
Generating: N207 (???,???) [000275] ----G-------       t275 = *  PUTARG_REG ref    REG r8
							GC regs: 000001C6 {rcx rdx rsi rdi r8} => 000000C6 {rcx rdx rsi rdi}
							GC regs: 000000C6 {rcx rdx rsi rdi} => 000001C6 {rcx rdx rsi rdi r8}
                                                              /--*  t273   ref    this in rcx
                                                              +--*  t274   ref    arg1 in rdx
                                                              +--*  t275   ref    arg2 in r8
Generating: N209 ( 23, 34) [000148] --CXG-------              *  CALL      void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage REG NA $VN.Void
							GC regs: 000001C6 {rcx rdx rsi rdi r8} => 000001C4 {rdx rsi rdi r8}
							GC regs: 000001C4 {rdx rsi rdi r8} => 000001C0 {rsi rdi r8}
							GC regs: 000001C0 {rsi rdi r8} => 000000C0 {rsi rdi}
							Call: GCvars=0000000000000000 {}, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}
IN002d:        call     Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:AssociateFileExtensionWithLanguage(System.String,System.String):this
Added IP mapping: 0x004A (G_M36280_IG04,ins#15,ofs#71)
Generating: N211 (???,???) [000252] ------------                 IL_OFFSET void   IL offset: 0x4a REG NA
Generating: N213 (  1,  1) [000048] ------------        t48 =    LCL_VAR   ref    V05 tmp3         u:2 rsi REG rsi $159
                                                              /--*  t48    ref    
Generating: N215 (  2,  5) [000209] -c----------       t209 = *  LEA(b+136) byref  REG NA
                                                              /--*  t209   byref  
Generating: N217 (  4,  7) [000150] n---GO------       t150 = *  IND       ref    REG rcx <l:$199, c:$198>
IN002e:        mov      rcx, gword ptr [rsi+136]
							GC regs: 000000C0 {rsi rdi} => 000000C2 {rcx rsi rdi}
                                                              /--*  t150   ref    
Generating: N219 (???,???) [000276] ----GO------       t276 = *  PUTARG_REG ref    REG rcx
							GC regs: 000000C2 {rcx rsi rdi} => 000000C0 {rsi rdi}
							GC regs: 000000C0 {rsi rdi} => 000000C2 {rcx rsi rdi}
Generating: N221 (  2, 10) [000210] H-----------       t210 =    CNS_INT(h) long   0xD1FFAB1E "vcxproj" REG rdx $10d
IN002f:        mov      rdx, 0xD1FFAB1E
                                                              /--*  t210   long   
Generating: N223 (  4, 12) [000211] #---G-------       t211 = *  IND       ref    REG rdx $19a
IN0030:        mov      rdx, gword ptr [rdx]
							GC regs: 000000C2 {rcx rsi rdi} => 000000C6 {rcx rdx rsi rdi}
                                                              /--*  t211   ref    
Generating: N225 (???,???) [000277] ----G-------       t277 = *  PUTARG_REG ref    REG rdx
							GC regs: 000000C6 {rcx rdx rsi rdi} => 000000C2 {rcx rsi rdi}
							GC regs: 000000C2 {rcx rsi rdi} => 000000C6 {rcx rdx rsi rdi}
Generating: N227 (  2, 10) [000212] H-----------       t212 =    CNS_INT(h) long   0xD1FFAB1E "C++" REG r8 $10e
IN0031:        mov      r8, 0xD1FFAB1E
                                                              /--*  t212   long   
Generating: N229 (  4, 12) [000213] #---G-------       t213 = *  IND       ref    REG r8 $19b
IN0032:        mov      r8, gword ptr [r8]
							GC regs: 000000C6 {rcx rdx rsi rdi} => 000001C6 {rcx rdx rsi rdi r8}
                                                              /--*  t213   ref    
Generating: N231 (???,???) [000278] ----G-------       t278 = *  PUTARG_REG ref    REG r8
							GC regs: 000001C6 {rcx rdx rsi rdi r8} => 000000C6 {rcx rdx rsi rdi}
							GC regs: 000000C6 {rcx rdx rsi rdi} => 000001C6 {rcx rdx rsi rdi r8}
                                                              /--*  t276   ref    this in rcx
                                                              +--*  t277   ref    arg1 in rdx
                                                              +--*  t278   ref    arg2 in r8
Generating: N233 ( 26, 40) [000153] --CXGO------              *  CALL nullcheck void   Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.AssociateFileExtensionWithLanguage REG NA $VN.Void
							GC regs: 000001C6 {rcx rdx rsi rdi r8} => 000001C4 {rdx rsi rdi r8}
							GC regs: 000001C4 {rdx rsi rdi r8} => 000001C0 {rsi rdi r8}
							GC regs: 000001C0 {rsi rdi r8} => 000000C0 {rsi rdi}
IN0033:        cmp      dword ptr [rcx], ecx
							Call: GCvars=0000000000000000 {}, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}
IN0034:        call     Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:AssociateFileExtensionWithLanguage(System.String,System.String):this
Added IP mapping: 0x005A (G_M36280_IG04,ins#22,ofs#111)
Generating: N235 (???,???) [000253] ------------                 IL_OFFSET void   IL offset: 0x5a REG NA
Generating: N237 (  2, 10) [000055] H-----------        t55 =    CNS_INT(h) long   0xd1ffab1e token REG rcx $10f
IN0035:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t55    long   
Generating: N239 (???,???) [000279] ------------       t279 = *  PUTARG_REG long   REG rcx
                                                              /--*  t279   long   arg0 in rcx
Generating: N241 ( 16, 16) [000056] --C---------        t56 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $19c
							Call: GCvars=0000000000000000 {}, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}
IN0036:        call     CORINFO_HELP_NEWSFAST
							GC regs: 000000C0 {rsi rdi} => 000000C1 {rax rsi rdi}
                                                              /--*  t56    ref    
Generating: N243 ( 16, 16) [000058] DA----------              *  STORE_LCL_VAR ref    V06 tmp4         d:2 rbx REG rbx
							GC regs: 000000C1 {rax rsi rdi} => 000000C0 {rsi rdi}
IN0037:        mov      rbx, rax
							V06 in reg rbx is becoming live  [000058]
							Live regs: 000000C0 {rsi rdi} => 000000C8 {rbx rsi rdi}
							Live vars: {V01 V05} => {V01 V05 V06}
							GC regs: 000000C0 {rsi rdi} => 000000C8 {rbx rsi rdi}
Generating: N245 (  1,  1) [000059] ------------        t59 =    LCL_VAR   ref    V06 tmp4         u:2 rbx REG rbx $19c
                                                              /--*  t59    ref    
Generating: N247 (  2,  2) [000219] ------------       t219 = *  LEA(b+8)  byref  REG rcx
IN0038:        lea      rcx, bword ptr [rbx+8]
							Byref regs: 00000000 {} => 00000002 {rcx}
Generating: N249 (  1,  1) [000158] ------------       t158 =    LCL_VAR   ref    V01 loc0         u:2 rdi (last use) REG rdi $180
                                                              /--*  t219   byref  
                                                              +--*  t158   ref    
Generating: N251 (???,???) [000254] -A--GO------              *  STOREIND  ref    REG NA
							Byref regs: 00000002 {rcx} => 00000000 {}
							V01 in reg rdi is becoming dead  [000158]
							Live regs: 000000C8 {rbx rsi rdi} => 00000048 {rbx rsi}
							Live vars: {V01 V05 V06} => {V05 V06}
							GC regs: 000000C8 {rbx rsi rdi} => 00000048 {rbx rsi}
IN0039:        mov      rdx, rdi
NoGC Call: savedSet=0000F0E8 {rbx rbp rsi rdi r12 r13 r14 r15}
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000048 {rbx rsi}, byrefRegs=00000000 {}
IN003a:        call     CORINFO_HELP_ASSIGN_REF
Generating: N253 (  1,  1) [000161] ------------       t161 =    LCL_VAR   ref    V06 tmp4         u:2 rbx REG rbx $19c
                                                              /--*  t161   ref    
Generating: N255 (  2,  2) [000221] -c----------       t221 = *  LEA(b+24) byref  REG NA
Generating: N257 (  2, 10) [000054] H-----------        t54 =    CNS_INT(h) long   0xd1ffab1e ftn REG rcx $111
IN003b:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t221   byref  
                                                              +--*  t54    long   
Generating: N259 (???,???) [000255] -A--GO------              *  STOREIND  long   REG NA
IN003c:        mov      qword ptr [rbx+24], rcx
Added IP mapping: 0x0067 (G_M36280_IG04,ins#30,ofs#155)
Generating: N261 (???,???) [000256] ------------                 IL_OFFSET void   IL offset: 0x67 REG NA
Generating: N263 (  1,  1) [000052] ------------        t52 =    LCL_VAR   ref    V05 tmp3         u:2 rsi REG rsi $159
                                                              /--*  t52    ref    
Generating: N265 (???,???) [000280] ------------       t280 = *  PUTARG_REG ref    REG rcx
IN003d:        mov      rcx, rsi
							GC regs: 00000048 {rbx rsi} => 0000004A {rcx rbx rsi}
Generating: N267 (  1,  1) [000061] ------------        t61 =    LCL_VAR   ref    V06 tmp4         u:2 rbx (last use) REG rbx $19c
                                                              /--*  t61    ref    
Generating: N269 (???,???) [000281] ------------       t281 = *  PUTARG_REG ref    REG rdx
							V06 in reg rbx is becoming dead  [000061]
							Live regs: 00000048 {rbx rsi} => 00000040 {rsi}
							Live vars: {V05 V06} => {V05}
							GC regs: 0000004A {rcx rbx rsi} => 00000042 {rcx rsi}
IN003e:        mov      rdx, rbx
							GC regs: 00000042 {rcx rsi} => 00000046 {rcx rdx rsi}
                                                              /--*  t280   ref    this in rcx
                                                              +--*  t281   ref    arg1 in rdx
Generating: N271 ( 16, 10) [000062] --CXG-------              *  CALL      void   Microsoft.CodeAnalysis.Workspace.add_WorkspaceFailed REG NA $VN.Void
							GC regs: 00000046 {rcx rdx rsi} => 00000044 {rdx rsi}
							GC regs: 00000044 {rdx rsi} => 00000040 {rsi}
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000040 {rsi}, byrefRegs=00000000 {}
IN003f:        call     Microsoft.CodeAnalysis.Workspace:add_WorkspaceFailed(System.EventHandler`1[[Microsoft.CodeAnalysis.WorkspaceDiagnosticEventArgs, Microsoft.CodeAnalysis.Workspaces, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]]):this
Added IP mapping: 0x006C (G_M36280_IG04,ins#33,ofs#166)
Generating: N273 (???,???) [000257] ------------                 IL_OFFSET void   IL offset: 0x6c REG NA
Generating: N275 (  1,  1) [000035] ------------        t35 =    LCL_VAR   ref    V05 tmp3         u:2 rsi (last use) REG rsi $159
                                                              /--*  t35    ref    
Generating: N277 (  2,  2) [000063] ------------              *  RETURN    ref    REG NA $170
							V05 in reg rsi is becoming dead  [000035]
							Live regs: 00000040 {rsi} => 00000000 {}
							Live vars: {V05} => {}
							GC regs: 00000040 {rsi} => 00000000 {}
IN0040:        mov      rax, rsi

Scope info: end block BB03, IL range [000..018)
Scope info: open scopes =
   <none>
Added IP mapping: EPILOG STACK_EMPTY (G_M36280_IG04,ins#34,ofs#169) label
							GC regs: 00000000 {} => 00000001 {rax}
Extending return value GC liveness to epilog
Reserving epilog IG for block BB03

      G_M36280_IG04:        ; offs=0000A0H, funclet=00, bbWeight=1   
*************** After placeholder IG creation
G_M36280_IG01:        ; func=00, offs=000000H, size=0000H, gcrefRegs=00000000 {} <-- Prolog IG
G_M36280_IG02:        ; offs=000000H, size=0098H, gcrefRegs=00000040 {rsi}, byrefRegs=00000000 {}, byref
G_M36280_IG03:        ; offs=000098H, size=0008H, gcrefRegs=000000C4 {rdx rsi rdi}, byrefRegs=00000000 {}, byref
G_M36280_IG04:        ; offs=0000A0H, size=00A9H, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}, byref
G_M36280_IG05:        ; epilog placeholder, next placeholder=<END>, BB03 [0009], epilog, extend <-- First placeholder <-- Last placeholder
                      ;   PrevGCVars=0000000000000000 {}, PrevGCrefRegs=000000C0 {rsi rdi}, PrevByrefRegs=00000000 {}
                      ;   InitGCVars=0000000000000000 {}, InitGCrefRegs=000000C0 {rsi rdi}, InitByrefRegs=00000000 {}
Liveness not changing: 0000000000000000 {}

# compCycleEstimate =    296, compSizeEstimate =   325 SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace
; Final local variable assignments
;
;  V00 arg0         [V00,T03] (  3,  3   )     ref  ->  rsi         class-hnd
;  V01 loc0         [V01,T11] (  3,  3   )     ref  ->  rdi         class-hnd exact
;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V03 tmp1         [V03,T05] (  2,  4   )     ref  ->  rdi         class-hnd exact "NewObj constructor temp"
;  V04 tmp2         [V04,T01] (  4,  8   )     ref  ->  rsi         class-hnd exact "NewObj constructor temp"
;  V05 tmp3         [V05,T00] (  5, 10   )     ref  ->  rsi         class-hnd "dup spill"
;  V06 tmp4         [V06,T02] (  4,  8   )     ref  ->  rbx         class-hnd exact "NewObj constructor temp"
;  V07 tmp5         [V07,T06] (  2,  4   )     ref  ->   r8         class-hnd exact "Inlining Arg"
;  V08 tmp6         [V08,T07] (  2,  4   )     ref  ->   r8         class-hnd "Inlining Arg"
;  V09 tmp7         [V09,T14] (  2,  2   )    bool  ->  rax         "Inline stloc first use temp"
;* V10 tmp8         [V10,T15] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;  V11 tmp9         [V11,T12] (  3,  3   )     ref  ->  rdx         class-hnd "Inlining Arg"
;  V12 tmp10        [V12,T08] (  2,  4   )     ref  ->  rdx         class-hnd "Inlining Arg"
;  V13 tmp11        [V13,T09] (  2,  4   )     ref  ->  rdx         class-hnd "Inlining Arg"
;* V14 tmp12        [V14    ] (  0,  0   )    long  ->  zero-ref    "Inlining Arg"
;  V15 tmp13        [V15,T10] (  2,  4   )     ref  ->  rdx         "argument with side effect"
;  V16 cse0         [V16,T04] (  4,  4   )     ref  ->  rcx         "CSE - aggressive"
;  V17 cse1         [V17,T13] (  2,  2   )     ref  ->  rdx         "CSE - moderate"
;
; Lcl frame size = 32
*************** Before prolog / epilog generation
G_M36280_IG01:        ; func=00, offs=000000H, size=0000H, gcrefRegs=00000000 {} <-- Prolog IG
G_M36280_IG02:        ; offs=000000H, size=0098H, gcrefRegs=00000040 {rsi}, byrefRegs=00000000 {}, byref
G_M36280_IG03:        ; offs=000098H, size=0008H, gcrefRegs=000000C4 {rdx rsi rdi}, byrefRegs=00000000 {}, byref
G_M36280_IG04:        ; offs=0000A0H, size=00A9H, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}, byref
G_M36280_IG05:        ; epilog placeholder, next placeholder=<END>, BB03 [0009], epilog, extend <-- First placeholder <-- Last placeholder
                      ;   PrevGCVars=0000000000000000 {}, PrevGCrefRegs=000000C0 {rsi rdi}, PrevByrefRegs=00000000 {}
                      ;   InitGCVars=0000000000000000 {}, InitGCrefRegs=000000C0 {rsi rdi}, InitByrefRegs=00000000 {}
Recording Var Locations at start of BB01
  V00(rsi)
*************** In genFnProlog()
Added IP mapping to front: PROLOG STACK_EMPTY (G_M36280_IG01,ins#0,ofs#0) label

__prolog:
IN0041:        push     rdi
IN0042:        push     rsi
IN0043:        push     rbx
IN0044:        sub      rsp, 32
*************** In genFnPrologCalleeRegArgs() for int regs
IN0045:        mov      rsi, rcx
*************** In genEnregisterIncomingStackArgs()


      G_M36280_IG01:        ; offs=000000H, funclet=00, bbWeight=1   
*************** In genFnEpilog()

__epilog:
gcVarPtrSetCur=0000000000000000 {}, gcRegGCrefSetCur=000000C0 {rsi rdi}, gcRegByrefSetCur=00000000 {}
IN0046:        add      rsp, 32
IN0047:        pop      rbx
IN0048:        pop      rsi
IN0049:        pop      rdi
IN004a:        ret      

      G_M36280_IG05:        ; offs=000149H, funclet=00, bbWeight=1   
0 prologs, 1 epilogs, 0 funclet prologs, 0 funclet epilogs
*************** After prolog / epilog generation
G_M36280_IG01:        ; func=00, offs=000000H, size=000AH, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref, nogc <-- Prolog IG
G_M36280_IG02:        ; offs=00000AH, size=0098H, gcrefRegs=00000040 {rsi}, byrefRegs=00000000 {}, byref
G_M36280_IG03:        ; offs=0000A2H, size=0008H, gcrefRegs=000000C4 {rdx rsi rdi}, byrefRegs=00000000 {}, byref
G_M36280_IG04:        ; offs=0000AAH, size=00A9H, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}, byref
G_M36280_IG05:        ; offs=000153H, size=0008H, epilog, nogc, extend
*************** In emitJumpDistBind()
Binding: IN001c: 000000 jne      L_M36280_BB03
Binding L_M36280_BB03 to G_M36280_IG04
Estimate of fwd jump [D1FFAB1E/028]: 009C -> 00AA = 000C
Shrinking jump [D1FFAB1E/028]
Adjusted offset of BB03 from 00A2 to 009E
Adjusted offset of BB04 from 00AA to 00A6
Adjusted offset of BB05 from 0153 to 014F
Total shrinkage =   4, min extra jump size = 4294967295

*************** Finishing PHASE Generate code

*************** Starting PHASE Emit code

Hot  code size = 0x157 bytes
Cold code size = 0x0 bytes
reserveUnwindInfo(isFunclet=FALSE, isColdCode=FALSE, unwindSize=0xc)
*************** In emitEndCodeGen()
Converting emitMaxStackDepth from bytes (0) to elements (0)

***************************************************************************
Instructions as they come out of the scheduler


G_M36280_IG01:        ; func=00, offs=000000H, size=000AH, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref, nogc <-- Prolog IG
IN0041: 000000 push     rdi
IN0042: 000001 push     rsi
IN0043: 000002 push     rbx
IN0044: 000003 sub      rsp, 32
IN0045: 000007 mov      rsi, rcx
       ; gcrRegs +[rsi]
						;; bbWeight=1    PerfScore 3.50
G_M36280_IG02:        ; func=00, offs=00000AH, size=0094H, gcrefRegs=00000040 {rsi}, byrefRegs=00000000 {}, byref, isz
IN0001: 00000A mov      rcx, 0xD1FFAB1E
IN0002: 000014 call     CORINFO_HELP_NEWSFAST
       ; gcrRegs +[rax]
       ; gcr arg pop 0
IN0003: 000019 mov      rdi, rax
       ; gcrRegs +[rdi]
IN0004: 00001C lea      rcx, bword ptr [rdi+8]
       ; byrRegs +[rcx]
IN0005: 000020 mov      rdx, rsi
       ; gcrRegs +[rdx]
IN0006: 000023 call     CORINFO_HELP_ASSIGN_REF
       ; gcrRegs -[rax rdx rsi]
       ; byrRegs -[rcx]
IN0007: 000028 mov      rcx, 0xD1FFAB1E
IN0008: 000032 call     CORINFO_HELP_NEWSFAST
       ; gcrRegs +[rax]
       ; gcr arg pop 0
IN0009: 000037 mov      rsi, rax
       ; gcrRegs +[rsi]
IN000a: 00003A mov      rcx, 0xD1FFAB1E
IN000b: 000044 mov      r8, gword ptr [rcx]
       ; gcrRegs +[r8]
IN000c: 000047 mov      rcx, rsi
       ; gcrRegs +[rcx]
IN000d: 00004A xor      edx, edx
IN000e: 00004C call     System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:.ctor(int,System.Collections.Generic.IEqualityComparer`1[__Canon]):this
       ; gcrRegs -[rax rcx r8]
       ; gcr arg pop 0
IN000f: 000051 mov      rcx, 0xD1FFAB1E
IN0010: 00005B mov      edx, 215
IN0011: 000060 call     CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
       ; gcr arg pop 0
IN0012: 000065 mov      rdx, 0xD1FFAB1E
IN0013: 00006F mov      r8, gword ptr [rdx]
       ; gcrRegs +[r8]
IN0014: 000072 mov      rdx, 0xD1FFAB1E
IN0015: 00007C mov      rdx, gword ptr [rdx]
       ; gcrRegs +[rdx]
IN0016: 00007F mov      rcx, rsi
       ; gcrRegs +[rcx]
IN0017: 000082 mov      r9d, 2
IN0018: 000088 call     System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:TryInsert(System.__Canon,System.__Canon,ubyte):bool:this
       ; gcrRegs -[rcx rdx r8]
       ; gcr arg pop 0
IN0019: 00008D mov      rcx, 0xD1FFAB1E
IN001a: 000097 mov      rdx, gword ptr [rcx]
       ; gcrRegs +[rdx]
IN001b: 00009A test     eax, eax
IN001c: 00009C jne      SHORT G_M36280_IG04
						;; bbWeight=1    PerfScore 19.50
G_M36280_IG03:        ; func=00, offs=00009EH, size=0008H, gcrefRegs=000000C4 {rdx rsi rdi}, byrefRegs=00000000 {}, byref
IN001d: 00009E mov      rcx, rdx
       ; gcrRegs +[rcx]
IN001e: 0000A1 call     System.Diagnostics.Debug:Fail(System.String,System.String)
       ; gcrRegs -[rcx rdx]
       ; gcr arg pop 0
						;; bbWeight=0.25 PerfScore 0.31
G_M36280_IG04:        ; func=00, offs=0000A6H, size=00A9H, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}, byref
IN001f: 0000A6 call     Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices:get_DefaultServices():Microsoft.CodeAnalysis.Host.Mef.MefHostServices
       ; gcrRegs +[rax]
       ; gcr arg pop 0
IN0020: 0000AB mov      rdx, rax
       ; gcrRegs +[rdx]
IN0021: 0000AE mov      rcx, rsi
       ; gcrRegs +[rcx]
IN0022: 0000B1 call     Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:Create(System.Collections.Generic.IDictionary`2[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],Microsoft.CodeAnalysis.Host.HostServices):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace
       ; gcrRegs -[rcx rdx rsi]
       ; gcr arg pop 0
IN0023: 0000B6 mov      rsi, rax
       ; gcrRegs +[rsi]
IN0024: 0000B9 mov      rcx, gword ptr [rsi+136]
       ; gcrRegs +[rcx]
IN0025: 0000C0 mov      rdx, rcx
       ; gcrRegs +[rdx]
IN0026: 0000C3 mov      byte  ptr [rdx+56], 1
IN0027: 0000C7 mov      rdx, rcx
IN0028: 0000CA mov      byte  ptr [rdx+57], 1
IN0029: 0000CE mov      rdx, 0xD1FFAB1E
       ; gcrRegs -[rdx]
IN002a: 0000D8 mov      rdx, gword ptr [rdx]
       ; gcrRegs +[rdx]
IN002b: 0000DB mov      r8, 0xD1FFAB1E
IN002c: 0000E5 mov      r8, gword ptr [r8]
       ; gcrRegs +[r8]
IN002d: 0000E8 call     Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:AssociateFileExtensionWithLanguage(System.String,System.String):this
       ; gcrRegs -[rax rcx rdx r8]
       ; gcr arg pop 0
IN002e: 0000ED mov      rcx, gword ptr [rsi+136]
       ; gcrRegs +[rcx]
IN002f: 0000F4 mov      rdx, 0xD1FFAB1E
IN0030: 0000FE mov      rdx, gword ptr [rdx]
       ; gcrRegs +[rdx]
IN0031: 000101 mov      r8, 0xD1FFAB1E
IN0032: 00010B mov      r8, gword ptr [r8]
       ; gcrRegs +[r8]
IN0033: 00010E cmp      dword ptr [rcx], ecx
IN0034: 000110 call     Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:AssociateFileExtensionWithLanguage(System.String,System.String):this
       ; gcrRegs -[rcx rdx r8]
       ; gcr arg pop 0
IN0035: 000115 mov      rcx, 0xD1FFAB1E
IN0036: 00011F call     CORINFO_HELP_NEWSFAST
       ; gcrRegs +[rax]
       ; gcr arg pop 0
IN0037: 000124 mov      rbx, rax
       ; gcrRegs +[rbx]
IN0038: 000127 lea      rcx, bword ptr [rbx+8]
       ; byrRegs +[rcx]
IN0039: 00012B mov      rdx, rdi
       ; gcrRegs +[rdx]
IN003a: 00012E call     CORINFO_HELP_ASSIGN_REF
       ; gcrRegs -[rax rdx rdi]
       ; byrRegs -[rcx]
IN003b: 000133 mov      rcx, 0xD1FFAB1E
IN003c: 00013D mov      qword ptr [rbx+24], rcx
IN003d: 000141 mov      rcx, rsi
       ; gcrRegs +[rcx]
IN003e: 000144 mov      rdx, rbx
       ; gcrRegs +[rdx]
IN003f: 000147 call     Microsoft.CodeAnalysis.Workspace:add_WorkspaceFailed(System.EventHandler`1[[Microsoft.CodeAnalysis.WorkspaceDiagnosticEventArgs, Microsoft.CodeAnalysis.Workspaces, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]]):this
       ; gcrRegs -[rcx rdx rbx]
       ; gcr arg pop 0
IN0040: 00014C mov      rax, rsi
       ; gcrRegs +[rax]
						;; bbWeight=1    PerfScore 28.50
G_M36280_IG05:        ; func=00, offs=00014FH, size=0008H, epilog, nogc, extend
IN0046: 00014F add      rsp, 32
IN0047: 000153 pop      rbx
IN0048: 000154 pop      rsi
IN0049: 000155 pop      rdi
IN004a: 000156 ret      
						;; bbWeight=1    PerfScore 2.75Allocated method code size =  343 , actual size =  343

; Total bytes of code 343, prolog size 7, PerfScore 88.86, instruction count 74 (MethodHash=b0d87247) for method SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace
; ============================================================

*************** After end code gen, before unwindEmit()
G_M36280_IG01:        ; func=00, offs=000000H, size=000AH, bbWeight=1    PerfScore 3.50, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref, nogc <-- Prolog IG

IN0041: 000000 push     rdi
IN0042: 000001 push     rsi
IN0043: 000002 push     rbx
IN0044: 000003 sub      rsp, 32
IN0045: 000007 mov      rsi, rcx

G_M36280_IG02:        ; offs=00000AH, size=0094H, bbWeight=1    PerfScore 19.50, gcrefRegs=00000040 {rsi}, byrefRegs=00000000 {}, byref, isz

IN0001: 00000A mov      rcx, 0xD1FFAB1E
IN0002: 000014 call     CORINFO_HELP_NEWSFAST
IN0003: 000019 mov      rdi, rax
IN0004: 00001C lea      rcx, bword ptr [rdi+8]
IN0005: 000020 mov      rdx, rsi
IN0006: 000023 call     CORINFO_HELP_ASSIGN_REF
IN0007: 000028 mov      rcx, 0xD1FFAB1E
IN0008: 000032 call     CORINFO_HELP_NEWSFAST
IN0009: 000037 mov      rsi, rax
IN000a: 00003A mov      rcx, 0xD1FFAB1E
IN000b: 000044 mov      r8, gword ptr [rcx]
IN000c: 000047 mov      rcx, rsi
IN000d: 00004A xor      edx, edx
IN000e: 00004C call     System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:.ctor(int,System.Collections.Generic.IEqualityComparer`1[__Canon]):this
IN000f: 000051 mov      rcx, 0xD1FFAB1E
IN0010: 00005B mov      edx, 215
IN0011: 000060 call     CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
IN0012: 000065 mov      rdx, 0xD1FFAB1E
IN0013: 00006F mov      r8, gword ptr [rdx]
IN0014: 000072 mov      rdx, 0xD1FFAB1E
IN0015: 00007C mov      rdx, gword ptr [rdx]
IN0016: 00007F mov      rcx, rsi
IN0017: 000082 mov      r9d, 2
IN0018: 000088 call     System.Collections.Generic.Dictionary`2[__Canon,__Canon][System.__Canon,System.__Canon]:TryInsert(System.__Canon,System.__Canon,ubyte):bool:this
IN0019: 00008D mov      rcx, 0xD1FFAB1E
IN001a: 000097 mov      rdx, gword ptr [rcx]
IN001b: 00009A test     eax, eax
IN001c: 00009C jne      SHORT G_M36280_IG04

G_M36280_IG03:        ; offs=00009EH, size=0008H, bbWeight=0.25 PerfScore 0.31, gcrefRegs=000000C4 {rdx rsi rdi}, byrefRegs=00000000 {}, byref

IN001d: 00009E mov      rcx, rdx
IN001e: 0000A1 call     System.Diagnostics.Debug:Fail(System.String,System.String)

G_M36280_IG04:        ; offs=0000A6H, size=00A9H, bbWeight=1    PerfScore 28.50, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}, byref

IN001f: 0000A6 call     Microsoft.CodeAnalysis.Host.Mef.MSBuildMefHostServices:get_DefaultServices():Microsoft.CodeAnalysis.Host.Mef.MefHostServices
IN0020: 0000AB mov      rdx, rax
IN0021: 0000AE mov      rcx, rsi
IN0022: 0000B1 call     Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace:Create(System.Collections.Generic.IDictionary`2[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]],Microsoft.CodeAnalysis.Host.HostServices):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace
IN0023: 0000B6 mov      rsi, rax
IN0024: 0000B9 mov      rcx, gword ptr [rsi+136]
IN0025: 0000C0 mov      rdx, rcx
IN0026: 0000C3 mov      byte  ptr [rdx+56], 1
IN0027: 0000C7 mov      rdx, rcx
IN0028: 0000CA mov      byte  ptr [rdx+57], 1
IN0029: 0000CE mov      rdx, 0xD1FFAB1E
IN002a: 0000D8 mov      rdx, gword ptr [rdx]
IN002b: 0000DB mov      r8, 0xD1FFAB1E
IN002c: 0000E5 mov      r8, gword ptr [r8]
IN002d: 0000E8 call     Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:AssociateFileExtensionWithLanguage(System.String,System.String):this
IN002e: 0000ED mov      rcx, gword ptr [rsi+136]
IN002f: 0000F4 mov      rdx, 0xD1FFAB1E
IN0030: 0000FE mov      rdx, gword ptr [rdx]
IN0031: 000101 mov      r8, 0xD1FFAB1E
IN0032: 00010B mov      r8, gword ptr [r8]
IN0033: 00010E cmp      dword ptr [rcx], ecx
IN0034: 000110 call     Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader:AssociateFileExtensionWithLanguage(System.String,System.String):this
IN0035: 000115 mov      rcx, 0xD1FFAB1E
IN0036: 00011F call     CORINFO_HELP_NEWSFAST
IN0037: 000124 mov      rbx, rax
IN0038: 000127 lea      rcx, bword ptr [rbx+8]
IN0039: 00012B mov      rdx, rdi
IN003a: 00012E call     CORINFO_HELP_ASSIGN_REF
IN003b: 000133 mov      rcx, 0xD1FFAB1E
IN003c: 00013D mov      qword ptr [rbx+24], rcx
IN003d: 000141 mov      rcx, rsi
IN003e: 000144 mov      rdx, rbx
IN003f: 000147 call     Microsoft.CodeAnalysis.Workspace:add_WorkspaceFailed(System.EventHandler`1[[Microsoft.CodeAnalysis.WorkspaceDiagnosticEventArgs, Microsoft.CodeAnalysis.Workspaces, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]]):this
IN0040: 00014C mov      rax, rsi

G_M36280_IG05:        ; offs=00014FH, size=0008H, bbWeight=1    PerfScore 2.75, epilog, nogc, extend

IN0046: 00014F add      rsp, 32
IN0047: 000153 pop      rbx
IN0048: 000154 pop      rsi
IN0049: 000155 pop      rdi
IN004a: 000156 ret      


*************** Finishing PHASE Emit code

*************** Starting PHASE Emit GC+EH tables
Unwind Info:
  >> Start offset   : 0x000000 (not in unwind data)
  >>   End offset   : 0xd1ffab1e (not in unwind data)
  Version           : 1
  Flags             : 0x00
  SizeOfProlog      : 0x07
  CountOfUnwindCodes: 4
  FrameRegister     : none (0)
  FrameOffset       : N/A (no FrameRegister) (Value=0)
  UnwindCodes       :
    CodeOffset: 0x07 UnwindOp: UWOP_ALLOC_SMALL (2)     OpInfo: 3 * 8 + 8 = 32 = 0x20
    CodeOffset: 0x03 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: rbx (3)
    CodeOffset: 0x02 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: rsi (6)
    CodeOffset: 0x01 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: rdi (7)
allocUnwindInfo(pHotCode=0x00000000D1FFAB1E, pColdCode=0x0000000000000000, startOffset=0x0, endOffset=0x157, unwindSize=0xc, pUnwindBlock=0x00000000D1FFAB1E, funKind=0 (main function))
*************** In genIPmappingGen()
IP mapping count : 11
IL offs PROLOG : 0x00000000 ( STACK_EMPTY )
IL offs 0x0000 : 0x0000000A ( STACK_EMPTY )
IL offs 0x0006 : 0x0000001C ( STACK_EMPTY )
IL offs 0x0017 : 0x00000051
IL offs 0x0033 : 0x000000C7
IL offs 0x003A : 0x000000CE
IL offs 0x004A : 0x000000ED
IL offs 0x005A : 0x00000115
IL offs 0x0067 : 0x00000141
IL offs 0x006C : 0x0000014C
IL offs EPILOG : 0x0000014F ( STACK_EMPTY )

*************** In genSetScopeInfo()
VarLocInfo count is 3
; Variable debug info: 3 live range(s), 2 var(s) for method SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace
  0(   UNKNOWN) : From 00000000h to 0000000Ah, in rcx
  0(   UNKNOWN) : From 0000000Ah to 00000020h, in rsi
  1(   UNKNOWN) : From 0000009Eh to 0000012Bh, in rdi
*************** In gcInfoBlockHdrSave()
Set code length to 343.
Set ReturnKind to Object.
Set Outgoing stack arg area size to 32.
Register slot id for reg rsi = 0.
Register slot id for reg rdi = 1.
Set state of slot 0 at instr offset 0x14 to Live.
Set state of slot 0 at instr offset 0x19 to Dead.
Set state of slot 1 at instr offset 0x32 to Live.
Set state of slot 1 at instr offset 0x37 to Dead.
Set state of slot 0 at instr offset 0x4c to Live.
Set state of slot 1 at instr offset 0x4c to Live.
Set state of slot 0 at instr offset 0x51 to Dead.
Set state of slot 1 at instr offset 0x51 to Dead.
Set state of slot 0 at instr offset 0x60 to Live.
Set state of slot 1 at instr offset 0x60 to Live.
Set state of slot 0 at instr offset 0x65 to Dead.
Set state of slot 1 at instr offset 0x65 to Dead.
Set state of slot 0 at instr offset 0x88 to Live.
Set state of slot 1 at instr offset 0x88 to Live.
Set state of slot 0 at instr offset 0x8d to Dead.
Set state of slot 1 at instr offset 0x8d to Dead.
Set state of slot 0 at instr offset 0xa1 to Live.
Set state of slot 1 at instr offset 0xa1 to Live.
Set state of slot 0 at instr offset 0xa6 to Dead.
Set state of slot 1 at instr offset 0xa6 to Dead.
Set state of slot 0 at instr offset 0xa6 to Live.
Set state of slot 1 at instr offset 0xa6 to Live.
Set state of slot 0 at instr offset 0xab to Dead.
Set state of slot 1 at instr offset 0xab to Dead.
Set state of slot 1 at instr offset 0xb1 to Live.
Set state of slot 1 at instr offset 0xb6 to Dead.
Set state of slot 0 at instr offset 0xe8 to Live.
Set state of slot 1 at instr offset 0xe8 to Live.
Set state of slot 0 at instr offset 0xed to Dead.
Set state of slot 1 at instr offset 0xed to Dead.
Set state of slot 0 at instr offset 0x110 to Live.
Set state of slot 1 at instr offset 0x110 to Live.
Set state of slot 0 at instr offset 0x115 to Dead.
Set state of slot 1 at instr offset 0x115 to Dead.
Set state of slot 0 at instr offset 0x11f to Live.
Set state of slot 1 at instr offset 0x11f to Live.
Set state of slot 0 at instr offset 0x124 to Dead.
Set state of slot 1 at instr offset 0x124 to Dead.
Set state of slot 0 at instr offset 0x147 to Live.
Set state of slot 0 at instr offset 0x14c to Dead.
Defining 12 call sites:
    Offset 0x14, size 5.
    Offset 0x32, size 5.
    Offset 0x4c, size 5.
    Offset 0x60, size 5.
    Offset 0x88, size 5.
    Offset 0xa1, size 5.
    Offset 0xa6, size 5.
    Offset 0xb1, size 5.
    Offset 0xe8, size 5.
    Offset 0x110, size 5.
    Offset 0x11f, size 5.
    Offset 0x147, size 5.

*************** Finishing PHASE Emit GC+EH tables
Method code size: 343

Allocations for SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace (MethodHash=b0d87247)
count:       3521, size:     262921, max =       3072
allocateMemory:     327680, nraUsed:     269872

Alloc'd bytes by kind:
                  kind |       size |     pct
  ---------------------+------------+--------
         AssertionProp |       6460 |   2.46%
               ASTNode |      40080 |  15.24%
              InstDesc |       7088 |   2.70%
              ImpStack |        384 |   0.15%
            BasicBlock |       7272 |   2.77%
             fgArgInfo |       1536 |   0.58%
       fgArgInfoPtrArr |        192 |   0.07%
              FlowList |        320 |   0.12%
     TreeStatementList |        160 |   0.06%
               SiScope |        328 |   0.12%
       DominatorMemory |        288 |   0.11%
                  LSRA |       3776 |   1.44%
         LSRA_Interval |       5920 |   2.25%
      LSRA_RefPosition |      22720 |   8.64%
          Reachability |         16 |   0.01%
                   SSA |       1848 |   0.70%
           ValueNumber |      19222 |   7.31%
              LvaTable |       5056 |   1.92%
            UnwindInfo |          0 |   0.00%
                hashBv |        200 |   0.08%
                bitset |        616 |   0.23%
          FixedBitVect |        204 |   0.08%
               Generic |       7298 |   2.78%
   LocalAddressVisitor |          0 |   0.00%
         FieldSeqStore |        696 |   0.26%
    ZeroOffsetFieldMap |        600 |   0.23%
          ArrayInfoMap |         40 |   0.02%
          MemoryPhiArg |         32 |   0.01%
                   CSE |       2400 |   0.91%
                    GC |       5728 |   2.18%
       CorTailCallInfo |          0 |   0.00%
              Inlining |      14928 |   5.68%
            ArrayStack |          0 |   0.00%
             DebugInfo |        464 |   0.18%
             DebugOnly |     101327 |  38.54%
               Codegen |       1176 |   0.45%
               LoopOpt |          0 |   0.00%
             LoopHoist |          0 |   0.00%
               Unknown |       1842 |   0.70%
            RangeCheck |          0 |   0.00%
              CopyProp |       1824 |   0.69%
           SideEffects |          0 |   0.00%
       ObjectAllocator |          0 |   0.00%
    VariableLiveRanges |          0 |   0.00%
           ClassLayout |          0 |   0.00%
       TailMergeThrows |          0 |   0.00%
             EarlyProp |         96 |   0.04%
              ZeroInit |        784 |   0.30%

****** DONE compiling SolutionAnalyzer.MSBuildSetup:GetWorkspace(System.String):Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace