****** START compiling SolutionAnalyzer.Results:Obtain(System.String[],System.String,System.String,int,System.String,bool,System.Func`3[[Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[Microsoft.CodeAnalysis.SemanticModel, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]):System.Threading.Tasks.Task (MethodHash=d0d2d4c9)
Generating code for Windows x64
OPTIONS: compCodeOpt = BLENDED_CODE
OPTIONS: compDbgCode = false
OPTIONS: compDbgInfo = true
OPTIONS: compDbgEnC  = false
OPTIONS: compProcedureSplitting   = false
OPTIONS: compProcedureSplittingEH = false
IL to import:
IL_0000  12 00             ldloca.s     0x0
IL_0002  28 84 00 00 0a    call         0xA000084
IL_0007  7d 69 00 00 04    stfld        0x4000069
IL_000c  12 00             ldloca.s     0x0
IL_000e  02                ldarg.0     
IL_000f  7d 6d 00 00 04    stfld        0x400006D
IL_0014  12 00             ldloca.s     0x0
IL_0016  03                ldarg.1     
IL_0017  7d 6a 00 00 04    stfld        0x400006A
IL_001c  12 00             ldloca.s     0x0
IL_001e  04                ldarg.2     
IL_001f  7d 6b 00 00 04    stfld        0x400006B
IL_0024  12 00             ldloca.s     0x0
IL_0026  05                ldarg.3     
IL_0027  7d 6c 00 00 04    stfld        0x400006C
IL_002c  12 00             ldloca.s     0x0
IL_002e  0e 04             ldarg.s      0x4
IL_0030  7d 6f 00 00 04    stfld        0x400006F
IL_0035  12 00             ldloca.s     0x0
IL_0037  0e 05             ldarg.s      0x5
IL_0039  7d 6e 00 00 04    stfld        0x400006E
IL_003e  12 00             ldloca.s     0x0
IL_0040  0e 06             ldarg.s      0x6
IL_0042  7d 70 00 00 04    stfld        0x4000070
IL_0047  12 00             ldloca.s     0x0
IL_0049  15                ldc.i4.m1   
IL_004a  7d 68 00 00 04    stfld        0x4000068
IL_004f  12 00             ldloca.s     0x0
IL_0051  7c 69 00 00 04    ldflda       0x4000069
IL_0056  12 00             ldloca.s     0x0
IL_0058  28 0d 00 00 2b    call         0x2B00000D
IL_005d  12 00             ldloca.s     0x0
IL_005f  7c 69 00 00 04    ldflda       0x4000069
IL_0064  28 86 00 00 0a    call         0xA000086
IL_0069  2a                ret         

lvaSetClass: setting class for V00 to (00000000D1FFAB1E) System.String[] 
Arg #0    passed in register(s) rcx

lvaSetClass: setting class for V01 to (00000000D1FFAB1E) System.String 
Arg #1    passed in register(s) rdx

lvaSetClass: setting class for V02 to (00000000D1FFAB1E) System.String 
Arg #2    passed in register(s) r8
Arg #3    passed in register(s) r9

lvaSetClass: setting class for V04 to (00000000D1FFAB1E) System.String 
set user arg V00 offset to 1
set user arg V08 offset to 1

lvaSetClass: setting class for V06 to (00000000D1FFAB1E) System.Func`3[[Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[Microsoft.CodeAnalysis.SemanticModel, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] 
set user arg V16 offset to 1

lvaGrabTemp returning 8 (V08 tmp0) (a long lifetime temp) called for OutgoingArgSpace.
; Initial local variable assignments
;
;  V00 arg0              ref  class-hnd
;  V01 arg1              ref  class-hnd
;  V02 arg2              ref  class-hnd
;  V03 arg3              int 
;  V04 arg4              ref  class-hnd
;  V05 arg5             bool 
;  V06 arg6              ref  class-hnd
;  V07 loc0           struct <<Obtain>d__1, 120>
;  V08 OutArgs        lclBlk <na>  "OutgoingArgSpace"
*************** In compInitDebuggingInfo() for SolutionAnalyzer.Results:Obtain(System.String[],System.String,System.String,int,System.String,bool,System.Func`3[[Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[Microsoft.CodeAnalysis.SemanticModel, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]):System.Threading.Tasks.Task
getVars() returned cVars = 0, extendOthers = true
info.compVarScopesCount = 8
    	VarNum 	LVNum 	      Name 	Beg 	End
 0: 	00h 	00h 	  V00 arg0 	000h   	06Ah
 1: 	01h 	01h 	  V01 arg1 	000h   	06Ah
 2: 	02h 	02h 	  V02 arg2 	000h   	06Ah
 3: 	03h 	03h 	  V03 arg3 	000h   	06Ah
 4: 	04h 	04h 	  V04 arg4 	000h   	06Ah
 5: 	05h 	05h 	  V05 arg5 	000h   	06Ah
 6: 	06h 	06h 	  V06 arg6 	000h   	06Ah
 7: 	07h 	07h 	  V07 loc0 	000h   	06Ah
info.compStmtOffsetsCount    = 0
info.compStmtOffsetsImplicit = 0005h ( STACK_EMPTY CALL_SITE )
*************** In fgFindBasicBlocks() for SolutionAnalyzer.Results:Obtain(System.String[],System.String,System.String,int,System.String,bool,System.Func`3[[Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[Microsoft.CodeAnalysis.SemanticModel, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]):System.Threading.Tasks.Task
Jump targets:
  none
New Basic Block BB01 [0000] created.
BB01 [000..06A)
IL Code Size,Instr  106,  35, Basic Block count   1, Local Variable Num,Ref count   9, 19 for method SolutionAnalyzer.Results:Obtain(System.String[],System.String,System.String,int,System.String,bool,System.Func`3[[Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[Microsoft.CodeAnalysis.SemanticModel, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]):System.Threading.Tasks.Task
OPTIONS: opts.MinOpts() == false
Basic block list for 'SolutionAnalyzer.Results:Obtain(System.String[],System.String,System.String,int,System.String,bool,System.Func`3[[Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[Microsoft.CodeAnalysis.SemanticModel, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]):System.Threading.Tasks.Task'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Pre-import

*************** Finishing PHASE Pre-import

*************** Starting PHASE Importation
*************** In impImport() for SolutionAnalyzer.Results:Obtain(System.String[],System.String,System.String,int,System.String,bool,System.Func`3[[Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[Microsoft.CodeAnalysis.SemanticModel, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]):System.Threading.Tasks.Task

impImportBlockPending for BB01

Importing BB01 (PC=000) of 'SolutionAnalyzer.Results:Obtain(System.String[],System.String,System.String,int,System.String,bool,System.Func`3[[Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[Microsoft.CodeAnalysis.SemanticModel, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]):System.Threading.Tasks.Task'
    [ 0]   0 (0x000) ldloca.s 0
    [ 1]   2 (0x002) call 0A000084
In Compiler::impImportCall: opcode is call, kind=0, callRetType is struct, structSize is 8


STMT00000 (IL 0x000...  ???)
               [000002] I-C-G-------              *  CALL      struct System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Create (exactContextHnd=0x00000000D1FFAB1E)

    [ 2]   7 (0x007) stfld 04000069

STMT00001 (IL   ???...  ???)
               [000007] -AC---------              *  ASG       struct (copy)
               [000006] *-----------              +--*  OBJ       struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>
               [000005] ------------              |  \--*  ADDR      byref 
               [000004] -------N----              |     \--*  FIELD     struct <>t__builder
               [000001] ------------              |        \--*  ADDR      byref 
               [000000] -------N----              |           \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000003] --C---------              \--*  RET_EXPR  struct(inl return from call [000002])

    [ 0]  12 (0x00c) ldloca.s 0
    [ 1]  14 (0x00e) ldarg.0
    [ 2]  15 (0x00f) stfld 0400006D

STMT00002 (IL 0x00C...  ???)
               [000012] -A----------              *  ASG       ref   
               [000011] -------N----              +--*  FIELD     ref    paths
               [000009] ------------              |  \--*  ADDR      byref 
               [000008] -------N----              |     \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000010] ------------              \--*  LCL_VAR   ref    V00 arg0         

    [ 0]  20 (0x014) ldloca.s 0
    [ 1]  22 (0x016) ldarg.1
    [ 2]  23 (0x017) stfld 0400006A

STMT00003 (IL 0x014...  ???)
               [000017] -A----------              *  ASG       ref   
               [000016] -------N----              +--*  FIELD     ref    outputPath
               [000014] ------------              |  \--*  ADDR      byref 
               [000013] -------N----              |     \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000015] ------------              \--*  LCL_VAR   ref    V01 arg1         

    [ 0]  28 (0x01c) ldloca.s 0
    [ 1]  30 (0x01e) ldarg.2
    [ 2]  31 (0x01f) stfld 0400006B

STMT00004 (IL 0x01C...  ???)
               [000022] -A----------              *  ASG       ref   
               [000021] -------N----              +--*  FIELD     ref    msBuildPath
               [000019] ------------              |  \--*  ADDR      byref 
               [000018] -------N----              |     \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000020] ------------              \--*  LCL_VAR   ref    V02 arg2         

    [ 0]  36 (0x024) ldloca.s 0
    [ 1]  38 (0x026) ldarg.3
    [ 2]  39 (0x027) stfld 0400006C

STMT00005 (IL 0x024...  ???)
               [000027] -A----------              *  ASG       int   
               [000026] -------N----              +--*  FIELD     int    logLevel
               [000024] ------------              |  \--*  ADDR      byref 
               [000023] -------N----              |     \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000025] ------------              \--*  LCL_VAR   int    V03 arg3         

    [ 0]  44 (0x02c) ldloca.s 0
    [ 1]  46 (0x02e) ldarg.s 4
    [ 2]  48 (0x030) stfld 0400006F

STMT00006 (IL 0x02C...  ???)
               [000032] -A----------              *  ASG       ref   
               [000031] -------N----              +--*  FIELD     ref    jobName
               [000029] ------------              |  \--*  ADDR      byref 
               [000028] -------N----              |     \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000030] ------------              \--*  LCL_VAR   ref    V04 arg4         

    [ 0]  53 (0x035) ldloca.s 0
    [ 1]  55 (0x037) ldarg.s 5
    [ 2]  57 (0x039) stfld 0400006E

STMT00007 (IL 0x035...  ???)
               [000037] -A----------              *  ASG       bool  
               [000036] -------N----              +--*  FIELD     bool   isParent
               [000034] ------------              |  \--*  ADDR      byref 
               [000033] -------N----              |     \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000035] ------------              \--*  LCL_VAR   bool   V05 arg5         

    [ 0]  62 (0x03e) ldloca.s 0
    [ 1]  64 (0x040) ldarg.s 6
    [ 2]  66 (0x042) stfld 04000070

STMT00008 (IL 0x03E...  ???)
               [000042] -A----------              *  ASG       ref   
               [000041] -------N----              +--*  FIELD     ref    matches
               [000039] ------------              |  \--*  ADDR      byref 
               [000038] -------N----              |     \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000040] ------------              \--*  LCL_VAR   ref    V06 arg6         

    [ 0]  71 (0x047) ldloca.s 0
    [ 1]  73 (0x049) ldc.i4.m1 -1
    [ 2]  74 (0x04a) stfld 04000068

STMT00009 (IL 0x047...  ???)
               [000047] -A----------              *  ASG       int   
               [000046] -------N----              +--*  FIELD     int    <>1__state
               [000044] ------------              |  \--*  ADDR      byref 
               [000043] -------N----              |     \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000045] ------------              \--*  CNS_INT   int    -1

    [ 0]  79 (0x04f) ldloca.s 0
    [ 1]  81 (0x051) ldflda 04000069
    [ 1]  86 (0x056) ldloca.s 0
    [ 2]  88 (0x058) call 2B00000D
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0


STMT00010 (IL 0x04F...  ???)
               [000054] I-C-G-------              *  CALL      void   System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start (exactContextHnd=0x00000000D1FFAB1E)
               [000051] ------------ this in rcx  +--*  ADDR      byref 
               [000050] -------N----              |  \--*  FIELD     struct <>t__builder
               [000049] ------------              |     \--*  ADDR      byref 
               [000048] -------N----              |        \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000053] ------------ arg1         \--*  ADDR      byref 
               [000052] -------N----                 \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         

    [ 0]  93 (0x05d) ldloca.s 0
    [ 1]  95 (0x05f) ldflda 04000069
    [ 1] 100 (0x064) call 0A000086 (Implicit Tail call: prefixFlags |= PREFIX_TAILCALL_IMPLICIT)
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0

GTF_CALL_M_IMPLICIT_TAILCALL set for call [000059]


STMT00011 (IL 0x05D...  ???)
               [000059] I-C-G-------              *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.get_Task (exactContextHnd=0x00000000D1FFAB1E)
               [000058] ------------ this in rcx  \--*  ADDR      byref 
               [000057] -------N----                 \--*  FIELD     struct <>t__builder
               [000056] ------------                    \--*  ADDR      byref 
               [000055] -------N----                       \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         

    [ 1] 105 (0x069) ret

STMT00012 (IL   ???...  ???)
               [000061] --C---------              *  RETURN    ref   
               [000060] --C---------              \--*  RET_EXPR  ref   (inl return from call [000059])

*************** Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06A) (return), preds={} succs={}

***** BB01
STMT00000 (IL 0x000...0x007)
               [000002] I-C-G-------              *  CALL      struct System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Create (exactContextHnd=0x00000000D1FFAB1E)

***** BB01
STMT00001 (IL   ???...  ???)
               [000007] -AC---------              *  ASG       struct (copy)
               [000006] *-----------              +--*  OBJ       struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>
               [000005] ------------              |  \--*  ADDR      byref 
               [000004] -------N----              |     \--*  FIELD     struct <>t__builder
               [000001] ------------              |        \--*  ADDR      byref 
               [000000] -------N----              |           \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000003] --C---------              \--*  RET_EXPR  struct(inl return from call [000002])

***** BB01
STMT00002 (IL 0x00C...0x00F)
               [000012] -A----------              *  ASG       ref   
               [000011] -------N----              +--*  FIELD     ref    paths
               [000009] ------------              |  \--*  ADDR      byref 
               [000008] -------N----              |     \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000010] ------------              \--*  LCL_VAR   ref    V00 arg0         

***** BB01
STMT00003 (IL 0x014...0x017)
               [000017] -A----------              *  ASG       ref   
               [000016] -------N----              +--*  FIELD     ref    outputPath
               [000014] ------------              |  \--*  ADDR      byref 
               [000013] -------N----              |     \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000015] ------------              \--*  LCL_VAR   ref    V01 arg1         

***** BB01
STMT00004 (IL 0x01C...0x01F)
               [000022] -A----------              *  ASG       ref   
               [000021] -------N----              +--*  FIELD     ref    msBuildPath
               [000019] ------------              |  \--*  ADDR      byref 
               [000018] -------N----              |     \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000020] ------------              \--*  LCL_VAR   ref    V02 arg2         

***** BB01
STMT00005 (IL 0x024...0x027)
               [000027] -A----------              *  ASG       int   
               [000026] -------N----              +--*  FIELD     int    logLevel
               [000024] ------------              |  \--*  ADDR      byref 
               [000023] -------N----              |     \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000025] ------------              \--*  LCL_VAR   int    V03 arg3         

***** BB01
STMT00006 (IL 0x02C...0x030)
               [000032] -A----------              *  ASG       ref   
               [000031] -------N----              +--*  FIELD     ref    jobName
               [000029] ------------              |  \--*  ADDR      byref 
               [000028] -------N----              |     \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000030] ------------              \--*  LCL_VAR   ref    V04 arg4         

***** BB01
STMT00007 (IL 0x035...0x039)
               [000037] -A----------              *  ASG       bool  
               [000036] -------N----              +--*  FIELD     bool   isParent
               [000034] ------------              |  \--*  ADDR      byref 
               [000033] -------N----              |     \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000035] ------------              \--*  LCL_VAR   bool   V05 arg5         

***** BB01
STMT00008 (IL 0x03E...0x042)
               [000042] -A----------              *  ASG       ref   
               [000041] -------N----              +--*  FIELD     ref    matches
               [000039] ------------              |  \--*  ADDR      byref 
               [000038] -------N----              |     \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000040] ------------              \--*  LCL_VAR   ref    V06 arg6         

***** BB01
STMT00009 (IL 0x047...0x04A)
               [000047] -A----------              *  ASG       int   
               [000046] -------N----              +--*  FIELD     int    <>1__state
               [000044] ------------              |  \--*  ADDR      byref 
               [000043] -------N----              |     \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000045] ------------              \--*  CNS_INT   int    -1

***** BB01
STMT00010 (IL 0x04F...0x069)
               [000054] I-C-G-------              *  CALL      void   System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start (exactContextHnd=0x00000000D1FFAB1E)
               [000051] ------------ this in rcx  +--*  ADDR      byref 
               [000050] -------N----              |  \--*  FIELD     struct <>t__builder
               [000049] ------------              |     \--*  ADDR      byref 
               [000048] -------N----              |        \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000053] ------------ arg1         \--*  ADDR      byref 
               [000052] -------N----                 \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         

***** BB01
STMT00011 (IL 0x05D...  ???)
               [000059] I-C-G-------              *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.get_Task (exactContextHnd=0x00000000D1FFAB1E)
               [000058] ------------ this in rcx  \--*  ADDR      byref 
               [000057] -------N----                 \--*  FIELD     struct <>t__builder
               [000056] ------------                    \--*  ADDR      byref 
               [000055] -------N----                       \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         

***** BB01
STMT00012 (IL   ???...  ???)
               [000061] --C---------              *  RETURN    ref   
               [000060] --C---------              \--*  RET_EXPR  ref   (inl return from call [000059])

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Finishing PHASE Indirect call transform [no changes]

*************** Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Finishing PHASE Expand patchpoints [no changes]

*************** Starting PHASE Post-import

*************** Finishing PHASE Post-import

*************** Starting PHASE Morph - Init

New BlockSet epoch 1, # of blocks (including unused BB00): 2, bitset array size: 1 (short)

*************** In fgRemoveEmptyBlocks

*************** Finishing PHASE Morph - Init
*************** In fgDebugCheckBBlist

*************** Starting PHASE Morph - Inlining
Expanding INLINE_CANDIDATE in statement STMT00000 in BB01:
STMT00000 (IL 0x000...0x007)
               [000002] I-C-G-------              *  CALL      struct System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Create (exactContextHnd=0x00000000D1FFAB1E)
INLINER: inlineInfo.tokenLookupContextHandle for System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Create():System.Runtime.CompilerServices.AsyncTaskMethodBuilder set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Create():System.Runtime.CompilerServices.AsyncTaskMethodBuilder :
IL to import:
IL_0000  12 00             ldloca.s     0x0
IL_0002  fe 15 2b 05 00 02 initobj      0x200052B
IL_0008  06                ldloc.0     
IL_0009  2a                ret         

INLINER impTokenLookupContextHandle for System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Create():System.Runtime.CompilerServices.AsyncTaskMethodBuilder is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Create():System.Runtime.CompilerServices.AsyncTaskMethodBuilder
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB02 [0001] created.
BB02 [000..00A)
Basic block list for 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Create():System.Runtime.CompilerServices.AsyncTaskMethodBuilder'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB02 [0001]  1                             1       [000..00A)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000002] Starting PHASE Pre-import

*************** Inline @[000002] Finishing PHASE Pre-import

*************** Inline @[000002] Starting PHASE Importation
*************** In impImport() for System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Create():System.Runtime.CompilerServices.AsyncTaskMethodBuilder

impImportBlockPending for BB02

Importing BB02 (PC=000) of 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Create():System.Runtime.CompilerServices.AsyncTaskMethodBuilder'
    [ 0]   0 (0x000) ldloca.s 0
lvaGrabTemp returning 9 (V09 tmp1) (a long lifetime temp) called for Inline ldloca(s) first use temp.

    [ 1]   2 (0x002) initobj 0200052B

               [000065] IA----------              *  ASG       struct (init)
               [000062] D------N----              +--*  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8> V09 tmp1         
               [000064] ------------              \--*  CNS_INT   int    0

    [ 0]   8 (0x008) ldloc.0
    [ 1]   9 (0x009) ret

    Inlinee Return expression (before normalization)  =>
               [000066] ------------              *  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8> V09 tmp1         

impFixupStructReturnType: retyping
               [000066] ------------              *  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8> V09 tmp1         


    Inlinee Return expression (after normalization) =>
               [000066] ------------              *  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8> V09 tmp1         

*************** Inline @[000002] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB02 [0001]  1                             1       [000..00A)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB02 [000..00A) (return), preds={} succs={}

***** BB02
               [000065] IA----------              *  ASG       struct (init)
               [000062] D------N----              +--*  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8> V09 tmp1         
               [000064] ------------              \--*  CNS_INT   int    0

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000002] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000002] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000002] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000002] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000002] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000002] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000002] -----------

Inlinee method body:
STMT00013 (IL 0x000...  ???)
               [000065] IA----------              *  ASG       struct (init)
               [000062] D------N----              +--*  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8> V09 tmp1         
               [000064] ------------              \--*  CNS_INT   int    0

fgInlineAppendStatements: no gc ref inline locals.

Return expression for call at [000002] is
               [000066] ------------              *  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8> V09 tmp1         
Successfully inlined System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Create():System.Runtime.CompilerServices.AsyncTaskMethodBuilder (10 IL bytes) (depth 1) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.Results:Obtain(System.String[],System.String,System.String,int,System.String,bool,System.Func`3[[Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[Microsoft.CodeAnalysis.SemanticModel, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]):System.Threading.Tasks.Task' calling 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Create():System.Runtime.CompilerServices.AsyncTaskMethodBuilder'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'

Replacing the return expression placeholder [000003] with [000066]
               [000003] --C---------              *  RET_EXPR  struct(inl return from call [000066])

Inserting the inline return expression
               [000066] ------------              *  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8> V09 tmp1         

Expanding INLINE_CANDIDATE in statement STMT00010 in BB01:
STMT00010 (IL 0x04F...0x069)
               [000054] I-C-G-------              *  CALL      void   System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start (exactContextHnd=0x00000000D1FFAB1E)
               [000051] ------------ this in rcx  +--*  ADDR      byref 
               [000050] -------N----              |  \--*  FIELD     struct <>t__builder
               [000049] ------------              |     \--*  ADDR      byref 
               [000048] -------N----              |        \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000053] ------------ arg1         \--*  ADDR      byref 
               [000052] -------N----                 \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
thisArg: is a constant is byref to a struct local
               [000051] ------------              *  ADDR      byref 
               [000050] -------N----              \--*  FIELD     struct <>t__builder
               [000049] ------------                 \--*  ADDR      byref 
               [000048] -------N----                    \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         


Argument #1: is a constant is byref to a struct local
               [000053] ------------              *  ADDR      byref 
               [000052] -------N----              \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         

INLINER: inlineInfo.tokenLookupContextHandle for System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Start(byref):this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Start(byref):this :
IL to import:
IL_0000  03                ldarg.1     
IL_0001  28 59 04 00 2b    call         0x2B000459
IL_0006  2a                ret         

INLINER impTokenLookupContextHandle for System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Start(byref):this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Start(byref):this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB03 [0002] created.
BB03 [000..007)
Basic block list for 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Start(byref):this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB03 [0002]  1                             1       [000..007)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000054] Starting PHASE Pre-import

*************** Inline @[000054] Finishing PHASE Pre-import

*************** Inline @[000054] Starting PHASE Importation
*************** In impImport() for System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Start(byref):this

impImportBlockPending for BB03

Importing BB03 (PC=000) of 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Start(byref):this'
    [ 0]   0 (0x000) ldarg.1
    [ 1]   1 (0x001) call 2B000459
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'has exception handling' for 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Start(byref):this' calling 'System.Runtime.CompilerServices.AsyncMethodBuilderCore:Start(byref)'

INLINER: Marking System.Runtime.CompilerServices.AsyncMethodBuilderCore:Start(byref) as NOINLINE because of has exception handling
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'has exception handling'


               [000070] --C-G-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
               [000068] ------------ arg0         \--*  ADDR      byref 
               [000069] -------N----                 \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         

    [ 0]   6 (0x006) ret
*************** Inline @[000054] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB03 [0002]  1                             1       [000..007)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB03 [000..007) (return), preds={} succs={}

***** BB03
               [000070] --C-G-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
               [000068] ------------ arg0         \--*  ADDR      byref 
               [000069] -------N----                 \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000054] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000054] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000054] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000054] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000054] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000054] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000054] -----------

Arguments setup:

Inlinee method body:
STMT00014 (IL 0x04F...  ???)
               [000070] --C-G-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
               [000068] ------------ arg0         \--*  ADDR      byref 
               [000069] -------N----                 \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         

fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Start(byref):this (7 IL bytes) (depth 1) [aggressive inline attribute]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'aggressive inline attribute' for 'SolutionAnalyzer.Results:Obtain(System.String[],System.String,System.String,int,System.String,bool,System.Func`3[[Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[Microsoft.CodeAnalysis.SemanticModel, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]):System.Threading.Tasks.Task' calling 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Start(byref):this'
INLINER: during 'fgInline' result 'success' reason 'aggressive inline attribute'
Expanding INLINE_CANDIDATE in statement STMT00011 in BB01:
STMT00011 (IL 0x05D...  ???)
               [000059] I-C-G-------              *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.get_Task (exactContextHnd=0x00000000D1FFAB1E)
               [000058] ------------ this in rcx  \--*  ADDR      byref 
               [000057] -------N----                 \--*  FIELD     struct <>t__builder
               [000056] ------------                    \--*  ADDR      byref 
               [000055] -------N----                       \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
Note: candidate is implicit tail call
thisArg: is a constant is byref to a struct local
               [000058] ------------              *  ADDR      byref 
               [000057] -------N----              \--*  FIELD     struct <>t__builder
               [000056] ------------                 \--*  ADDR      byref 
               [000055] -------N----                    \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         

INLINER: inlineInfo.tokenLookupContextHandle for System.Runtime.CompilerServices.AsyncTaskMethodBuilder:get_Task():System.Threading.Tasks.Task:this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Runtime.CompilerServices.AsyncTaskMethodBuilder:get_Task():System.Threading.Tasks.Task:this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  7b 9e 11 00 04    ldfld        0x400119E
IL_0006  25                dup         
IL_0007  2d 07             brtrue.s     7 (IL_0010)
IL_0009  26                pop         
IL_000a  02                ldarg.0     
IL_000b  28 d0 47 00 06    call         0x60047D0
IL_0010  2a                ret         

INLINER impTokenLookupContextHandle for System.Runtime.CompilerServices.AsyncTaskMethodBuilder:get_Task():System.Threading.Tasks.Task:this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Runtime.CompilerServices.AsyncTaskMethodBuilder:get_Task():System.Threading.Tasks.Task:this
Jump targets:
  IL_0010
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB04 [0003] created.
BB04 [000..009)
New Basic Block BB05 [0004] created.
BB05 [009..010)
New Basic Block BB06 [0005] created.
BB06 [010..011)
Basic block list for 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder:get_Task():System.Threading.Tasks.Task:this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB04 [0003]  1                             1       [000..009)-> BB06 ( cond )                     
BB05 [0004]  1                             1       [009..010)                                     
BB06 [0005]  2                             1       [010..011)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000059] Starting PHASE Pre-import

*************** Inline @[000059] Finishing PHASE Pre-import

*************** Inline @[000059] Starting PHASE Importation
*************** In impImport() for System.Runtime.CompilerServices.AsyncTaskMethodBuilder:get_Task():System.Threading.Tasks.Task:this

impImportBlockPending for BB04

Importing BB04 (PC=000) of 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder:get_Task():System.Threading.Tasks.Task:this'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) ldfld 0400119E
    [ 1]   6 (0x006) dup
lvaGrabTemp returning 10 (V10 tmp2) called for dup spill.


               [000078] -A--G-------              *  ASG       ref   
               [000077] D------N----              +--*  LCL_VAR   ref    V10 tmp2         
               [000076] ----G-------              \--*  FIELD     ref    m_task
               [000072] ----G-------                 \--*  ADDR      byref 
               [000073] ----G--N----                    \--*  FIELD     struct <>t__builder
               [000074] ------------                       \--*  ADDR      byref 
               [000075] -------N----                          \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
Marked V10 as a single def local
Querying runtime about current class of field System.Runtime.CompilerServices.AsyncTaskMethodBuilder.m_task (declared as System.Threading.Tasks.Task`1[VoidTaskResult])
Field's current class not available

lvaSetClass: setting class for V10 to (00000000D1FFAB1E) System.Threading.Tasks.Task`1[VoidTaskResult] 

    [ 2]   7 (0x007) brtrue.s

               [000083] ------------              *  JTRUE     void  
               [000082] ------------              \--*  NE        int   
               [000080] ------------                 +--*  LCL_VAR   ref    V10 tmp2         
               [000081] ------------                 \--*  CNS_INT   ref    null

*************** In impGetSpillTmpBase(BB04)

lvaGrabTemps(1) returning 11..11 (long lifetime temps) called for IL Stack Entries
*************** In fgComputeCheapPreds()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB04 [0003]  1                             1       [000..009)-> BB06 ( cond )                     
BB05 [0004]  1                             1       [009..010)                                     
BB06 [0005]  2                             1       [010..011)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------


*************** After fgComputeCheapPreds()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd cheap preds     weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB04 [0003]  1                             1       [000..009)-> BB06 ( cond )                     
BB05 [0004]  1       BB04                  1       [009..010)                                     
BB06 [0005]  2       BB05,BB04             1       [010..011)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------


Spilling stack entries into temps


               [000085] -A----------              *  ASG       ref   
               [000084] D------N----              +--*  LCL_VAR   ref    V11 tmp3         
               [000079] ------------              \--*  LCL_VAR   ref    V10 tmp2         


               [000083] ------------              *  JTRUE     void  
               [000082] ------------              \--*  NE        int   
               [000080] ------------                 +--*  LCL_VAR   ref    V10 tmp2         
               [000081] ------------                 \--*  CNS_INT   ref    null

impImportBlockPending for BB05

impImportBlockPending for BB06

Importing BB06 (PC=016) of 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder:get_Task():System.Threading.Tasks.Task:this'
    [ 1]  16 (0x010) ret

    Inlinee Return expression (before normalization)  =>
               [000088] ------------              *  LCL_VAR   ref    V11 tmp3         


    Inlinee Return expression (after normalization) =>
               [000088] ------------              *  LCL_VAR   ref    V11 tmp3         

Importing BB05 (PC=009) of 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder:get_Task():System.Threading.Tasks.Task:this'
    [ 1]   9 (0x009) pop
    [ 0]  10 (0x00a) ldarg.0
    [ 1]  11 (0x00b) call 060047D0 (Inline Implicit Tail call: prefixFlags |= PREFIX_TAILCALL_IMPLICIT)
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0

GTF_CALL_M_IMPLICIT_TAILCALL set for call [000093]
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'noinline per IL/cached result' for 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder:get_Task():System.Threading.Tasks.Task:this' calling 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder:InitializeTaskAsPromise():System.Threading.Tasks.Task`1[VoidTaskResult]:this'
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'noinline per IL/cached result'

Spilling stack entries into temps


               [000095] -AC-G-------              *  ASG       ref   
               [000094] D------N----              +--*  LCL_VAR   ref    V11 tmp3         
               [000093] --C-G-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise
               [000089] ----G------- this in rcx     \--*  ADDR      byref 
               [000090] ----G--N----                    \--*  FIELD     struct <>t__builder
               [000091] ------------                       \--*  ADDR      byref 
               [000092] -------N----                          \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         

impImportBlockPending for BB06

** Note: inlinee IL was partially imported -- imported 16 of 17 bytes of method IL

*************** Inline @[000059] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB04 [0003]  1                             1       [000..009)-> BB06 ( cond )                     i 
BB05 [0004]  1                             1       [009..010)                                     i 
BB06 [0005]  2                             1       [010..011)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB04 [000..009) -> BB06 (cond), preds={} succs={BB05,BB06}

***** BB04
               [000078] -A--G-------              *  ASG       ref   
               [000077] D------N----              +--*  LCL_VAR   ref    V10 tmp2         
               [000076] ----G-------              \--*  FIELD     ref    m_task
               [000072] ----G-------                 \--*  ADDR      byref 
               [000073] ----G--N----                    \--*  FIELD     struct <>t__builder
               [000074] ------------                       \--*  ADDR      byref 
               [000075] -------N----                          \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         

***** BB04
               [000085] -A----------              *  ASG       ref   
               [000084] D------N----              +--*  LCL_VAR   ref    V11 tmp3         
               [000079] ------------              \--*  LCL_VAR   ref    V10 tmp2         

***** BB04
               [000083] ------------              *  JTRUE     void  
               [000082] ------------              \--*  NE        int   
               [000080] ------------                 +--*  LCL_VAR   ref    V10 tmp2         
               [000081] ------------                 \--*  CNS_INT   ref    null

------------ BB05 [009..010), preds={} succs={BB06}

***** BB05
               [000095] -AC-G-------              *  ASG       ref   
               [000094] D------N----              +--*  LCL_VAR   ref    V11 tmp3         
               [000093] --C-G-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise
               [000089] ----G------- this in rcx     \--*  ADDR      byref 
               [000090] ----G--N----                    \--*  FIELD     struct <>t__builder
               [000091] ------------                       \--*  ADDR      byref 
               [000092] -------N----                          \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         

------------ BB06 [010..011) (return), preds={} succs={}

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000059] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000059] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000059] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000059] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000059] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000059] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000059] -----------

Arguments setup:

Inlinee method body:New Basic Block BB07 [0006] created.

Convert bbJumpKind of BB06 to BBJ_NONE
fgInlineAppendStatements: no gc ref inline locals.

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB04 [0003]  1                             1       [05D..05E)-> BB06 ( cond )                     i 
BB05 [0004]  1                             0.50    [05D..05E)                                     i 
BB06 [0005]  2                             1       [05D..05E)                                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB04 [05D..05E) -> BB06 (cond), preds={} succs={BB05,BB06}

***** BB04
STMT00015 (IL 0x05D...  ???)
               [000078] -A--G-------              *  ASG       ref   
               [000077] D------N----              +--*  LCL_VAR   ref    V10 tmp2         
               [000076] ----G-------              \--*  FIELD     ref    m_task
               [000072] ----G-------                 \--*  ADDR      byref 
               [000073] ----G--N----                    \--*  FIELD     struct <>t__builder
               [000074] ------------                       \--*  ADDR      byref 
               [000075] -------N----                          \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         

***** BB04
STMT00017 (IL 0x05D...  ???)
               [000085] -A----------              *  ASG       ref   
               [000084] D------N----              +--*  LCL_VAR   ref    V11 tmp3         
               [000079] ------------              \--*  LCL_VAR   ref    V10 tmp2         

***** BB04
STMT00016 (IL 0x05D...  ???)
               [000083] ------------              *  JTRUE     void  
               [000082] ------------              \--*  NE        int   
               [000080] ------------                 +--*  LCL_VAR   ref    V10 tmp2         
               [000081] ------------                 \--*  CNS_INT   ref    null

------------ BB05 [05D..05E), preds={} succs={BB06}

***** BB05
STMT00018 (IL 0x05D...  ???)
               [000095] -AC-G-------              *  ASG       ref   
               [000094] D------N----              +--*  LCL_VAR   ref    V11 tmp3         
               [000093] --C-G-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise
               [000089] ----G------- this in rcx     \--*  ADDR      byref 
               [000090] ----G--N----                    \--*  FIELD     struct <>t__builder
               [000091] ------------                       \--*  ADDR      byref 
               [000092] -------N----                          \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         

------------ BB06 [05D..05E), preds={} succs={BB07}

-------------------------------------------------------------------------------------------------------------------

Return expression for call at [000059] is
               [000088] ------------              *  LCL_VAR   ref    V11 tmp3         
Successfully inlined System.Runtime.CompilerServices.AsyncTaskMethodBuilder:get_Task():System.Threading.Tasks.Task:this (17 IL bytes) (depth 1) [aggressive inline attribute]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'aggressive inline attribute' for 'SolutionAnalyzer.Results:Obtain(System.String[],System.String,System.String,int,System.String,bool,System.Func`3[[Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[Microsoft.CodeAnalysis.SemanticModel, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]):System.Threading.Tasks.Task' calling 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder:get_Task():System.Threading.Tasks.Task:this'
INLINER: during 'fgInline' result 'success' reason 'aggressive inline attribute'
Querying runtime about current class of field System.Runtime.CompilerServices.AsyncTaskMethodBuilder.m_task (declared as System.Threading.Tasks.Task`1[VoidTaskResult])
Field's current class not available

Replacing the return expression placeholder [000060] with [000088]
               [000060] --C---------              *  RET_EXPR  ref   (inl return from call [000088])

Inserting the inline return expression
               [000088] ------------              *  LCL_VAR   ref    V11 tmp3         

**************** Inline Tree
Inlines into 06000043 [via DefaultPolicy] SolutionAnalyzer.Results:Obtain(System.String[],System.String,System.String,int,System.String,bool,System.Func`3[[Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[Microsoft.CodeAnalysis.SemanticModel, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]):System.Threading.Tasks.Task
  [1 IL=0002 TR=000002 060047CA] [below ALWAYS_INLINE size] System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Create():System.Runtime.CompilerServices.AsyncTaskMethodBuilder
  [2 IL=0088 TR=000054 060047CB] [aggressive inline attribute] System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Start(byref):this
    [0 IL=0001 TR=000070 060047C0] [FAILED: has exception handling] System.Runtime.CompilerServices.AsyncMethodBuilderCore:Start(byref)
  [3 IL=0100 TR=000059 060047CF] [aggressive inline attribute] System.Runtime.CompilerServices.AsyncTaskMethodBuilder:get_Task():System.Threading.Tasks.Task:this
    [0 IL=0011 TR=000093 060047D0] [FAILED: noinline per IL/cached result] System.Runtime.CompilerServices.AsyncTaskMethodBuilder:InitializeTaskAsPromise():System.Threading.Tasks.Task`1[VoidTaskResult]:this
Budget: initialTime=378, finalTime=402, initialBudget=3780, currentBudget=3798
Budget: increased by 18 because of force inlines
Budget: initialSize=2548, finalSize=2548

*************** Finishing PHASE Morph - Inlining
Trees after Morph - Inlining

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)                                     i 
BB04 [0003]  1                             1       [05D..05E)-> BB06 ( cond )                     i 
BB05 [0004]  1                             0.50    [05D..05E)                                     i 
BB06 [0005]  2                             1       [05D..05E)                                     i 
BB07 [0006]  1                             1       [???..???)        (return)                     internal 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06A), preds={} succs={BB04}

***** BB01
STMT00013 (IL 0x000...  ???)
               [000065] IA----------              *  ASG       struct (init)
               [000062] D------N----              +--*  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8> V09 tmp1         
               [000064] ------------              \--*  CNS_INT   int    0

***** BB01
STMT00001 (IL   ???...  ???)
               [000007] -AC---------              *  ASG       struct (copy)
               [000006] *-----------              +--*  OBJ       struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>
               [000005] ------------              |  \--*  ADDR      byref 
               [000004] -------N----              |     \--*  FIELD     struct <>t__builder
               [000001] ------------              |        \--*  ADDR      byref 
               [000000] -------N----              |           \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000066] ------------              \--*  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8> V09 tmp1         

***** BB01
STMT00002 (IL 0x00C...0x00F)
               [000012] -A----------              *  ASG       ref   
               [000011] -------N----              +--*  FIELD     ref    paths
               [000009] ------------              |  \--*  ADDR      byref 
               [000008] -------N----              |     \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000010] ------------              \--*  LCL_VAR   ref    V00 arg0         

***** BB01
STMT00003 (IL 0x014...0x017)
               [000017] -A----------              *  ASG       ref   
               [000016] -------N----              +--*  FIELD     ref    outputPath
               [000014] ------------              |  \--*  ADDR      byref 
               [000013] -------N----              |     \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000015] ------------              \--*  LCL_VAR   ref    V01 arg1         

***** BB01
STMT00004 (IL 0x01C...0x01F)
               [000022] -A----------              *  ASG       ref   
               [000021] -------N----              +--*  FIELD     ref    msBuildPath
               [000019] ------------              |  \--*  ADDR      byref 
               [000018] -------N----              |     \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000020] ------------              \--*  LCL_VAR   ref    V02 arg2         

***** BB01
STMT00005 (IL 0x024...0x027)
               [000027] -A----------              *  ASG       int   
               [000026] -------N----              +--*  FIELD     int    logLevel
               [000024] ------------              |  \--*  ADDR      byref 
               [000023] -------N----              |     \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000025] ------------              \--*  LCL_VAR   int    V03 arg3         

***** BB01
STMT00006 (IL 0x02C...0x030)
               [000032] -A----------              *  ASG       ref   
               [000031] -------N----              +--*  FIELD     ref    jobName
               [000029] ------------              |  \--*  ADDR      byref 
               [000028] -------N----              |     \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000030] ------------              \--*  LCL_VAR   ref    V04 arg4         

***** BB01
STMT00007 (IL 0x035...0x039)
               [000037] -A----------              *  ASG       bool  
               [000036] -------N----              +--*  FIELD     bool   isParent
               [000034] ------------              |  \--*  ADDR      byref 
               [000033] -------N----              |     \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000035] ------------              \--*  LCL_VAR   bool   V05 arg5         

***** BB01
STMT00008 (IL 0x03E...0x042)
               [000042] -A----------              *  ASG       ref   
               [000041] -------N----              +--*  FIELD     ref    matches
               [000039] ------------              |  \--*  ADDR      byref 
               [000038] -------N----              |     \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000040] ------------              \--*  LCL_VAR   ref    V06 arg6         

***** BB01
STMT00009 (IL 0x047...0x04A)
               [000047] -A----------              *  ASG       int   
               [000046] -------N----              +--*  FIELD     int    <>1__state
               [000044] ------------              |  \--*  ADDR      byref 
               [000043] -------N----              |     \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000045] ------------              \--*  CNS_INT   int    -1

***** BB01
STMT00014 (IL 0x04F...  ???)
               [000070] --C-G-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
               [000068] ------------ arg0         \--*  ADDR      byref 
               [000069] -------N----                 \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         

------------ BB04 [05D..05E) -> BB06 (cond), preds={} succs={BB05,BB06}

***** BB04
STMT00015 (IL 0x05D...  ???)
               [000078] -A--G-------              *  ASG       ref   
               [000077] D------N----              +--*  LCL_VAR   ref    V10 tmp2         
               [000076] ----G-------              \--*  FIELD     ref    m_task
               [000072] ----G-------                 \--*  ADDR      byref 
               [000073] ----G--N----                    \--*  FIELD     struct <>t__builder
               [000074] ------------                       \--*  ADDR      byref 
               [000075] -------N----                          \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         

***** BB04
STMT00017 (IL 0x05D...  ???)
               [000085] -A----------              *  ASG       ref   
               [000084] D------N----              +--*  LCL_VAR   ref    V11 tmp3         
               [000079] ------------              \--*  LCL_VAR   ref    V10 tmp2         

***** BB04
STMT00016 (IL 0x05D...  ???)
               [000083] ------------              *  JTRUE     void  
               [000082] ------------              \--*  NE        int   
               [000080] ------------                 +--*  LCL_VAR   ref    V10 tmp2         
               [000081] ------------                 \--*  CNS_INT   ref    null

------------ BB05 [05D..05E), preds={} succs={BB06}

***** BB05
STMT00018 (IL 0x05D...  ???)
               [000095] -AC-G-------              *  ASG       ref   
               [000094] D------N----              +--*  LCL_VAR   ref    V11 tmp3         
               [000093] --C-G-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise
               [000089] ----G------- this in rcx     \--*  ADDR      byref 
               [000090] ----G--N----                    \--*  FIELD     struct <>t__builder
               [000091] ------------                       \--*  ADDR      byref 
               [000092] -------N----                          \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         

------------ BB06 [05D..05E), preds={} succs={BB07}

------------ BB07 [???..???) (return), preds={} succs={}

***** BB07
STMT00012 (IL   ???...  ???)
               [000061] --C---------              *  RETURN    ref   
               [000088] ------------              \--*  LCL_VAR   ref    V11 tmp3         

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Allocate Objects
no newobjs in this method; punting

*************** Finishing PHASE Allocate Objects [no changes]

*************** Starting PHASE Morph - Add internal blocks

*************** After fgAddInternal()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)                                     i 
BB04 [0003]  1                             1       [05D..05E)-> BB06 ( cond )                     i 
BB05 [0004]  1                             0.50    [05D..05E)                                     i 
BB06 [0005]  2                             1       [05D..05E)                                     i 
BB07 [0006]  1                             1       [???..???)        (return)                     internal 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty

*************** Finishing PHASE Morph - Add internal blocks

*************** Starting PHASE Remove empty try

*************** In fgRemoveEmptyTry()
No EH in this method, nothing to remove.

*************** Finishing PHASE Remove empty try [no changes]

*************** Starting PHASE Remove empty finally
No EH in this method, nothing to remove.

*************** Finishing PHASE Remove empty finally [no changes]

*************** Starting PHASE Merge callfinally chains
No EH in this method, nothing to merge.

*************** Finishing PHASE Merge callfinally chains [no changes]

*************** Starting PHASE Clone finally
No EH in this method, no cloning.

*************** Finishing PHASE Clone finally [no changes]

*************** Starting PHASE Compute preds

Renumbering the basic blocks for fgComputePred

*************** Before renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)                                     i 
BB04 [0003]  1                             1       [05D..05E)-> BB06 ( cond )                     i 
BB05 [0004]  1                             0.50    [05D..05E)                                     i 
BB06 [0005]  2                             1       [05D..05E)                                     i 
BB07 [0006]  1                             1       [???..???)        (return)                     internal 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
Renumber BB04 to BB02
Renumber BB05 to BB03
Renumber BB06 to BB04
Renumber BB07 to BB05

*************** After renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)                                     i 
BB02 [0003]  1                             1       [05D..05E)-> BB04 ( cond )                     i 
BB03 [0004]  1                             0.50    [05D..05E)                                     i 
BB04 [0005]  2                             1       [05D..05E)                                     i 
BB05 [0006]  1                             1       [???..???)        (return)                     internal 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty

New BlockSet epoch 2, # of blocks (including unused BB00): 6, bitset array size: 1 (short)

*************** In fgComputePreds()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)                                     i 
BB02 [0003]  1                             1       [05D..05E)-> BB04 ( cond )                     i 
BB03 [0004]  1                             0.50    [05D..05E)                                     i 
BB04 [0005]  2                             1       [05D..05E)                                     i 
BB05 [0006]  1                             1       [???..???)        (return)                     internal 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** After fgComputePreds()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)                                     i label target 
BB02 [0003]  1       BB01                  1       [05D..05E)-> BB04 ( cond )                     i 
BB03 [0004]  1       BB02                  0.50    [05D..05E)                                     i 
BB04 [0005]  2       BB02,BB03             1       [05D..05E)                                     i label target 
BB05 [0006]  1       BB04                  1       [???..???)        (return)                     internal 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** Finishing PHASE Compute preds

*************** Starting PHASE Merge throw blocks

*************** In fgTailMergeThrows
Method does not have multiple noreturn calls.

*************** Finishing PHASE Merge throw blocks [no changes]

*************** Starting PHASE Update flow graph early pass

*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)                                     i label target 
BB02 [0003]  1       BB01                  1       [05D..05E)-> BB04 ( cond )                     i 
BB03 [0004]  1       BB02                  0.50    [05D..05E)                                     i 
BB04 [0005]  2       BB02,BB03             1       [05D..05E)                                     i label target 
BB05 [0006]  1       BB04                  1       [???..???)        (return)                     internal 
-----------------------------------------------------------------------------------------------------------------------------------------


Compacting blocks BB01 and BB02:
*************** In fgDebugCheckBBlist

Compacting blocks BB04 and BB05:
*************** In fgDebugCheckBBlist

After updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)-> BB04 ( cond )                     i label target 
BB03 [0004]  1       BB01                  0.50    [05D..05E)                                     i 
BB04 [0005]  2       BB01,BB03             1       [05D..05E)        (return)                     i label target 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Update flow graph early pass

*************** Starting PHASE Morph - Promote Structs

*************** In fgResetImplicitByRefRefCount()
*************** In fgPromoteStructs()

lvaTable before fgPromoteStructs
; Initial local variable assignments
;
;  V00 arg0              ref  class-hnd
;  V01 arg1              ref  class-hnd
;  V02 arg2              ref  class-hnd
;  V03 arg3              int 
;  V04 arg4              ref  class-hnd
;  V05 arg5             bool 
;  V06 arg6              ref  class-hnd
;  V07 loc0           struct <<Obtain>d__1, 120> ld-addr-op
;  V08 OutArgs        lclBlk <na>  "OutgoingArgSpace"
;  V09 tmp1           struct <System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8> ld-addr-op "Inline ldloca(s) first use temp"
;  V10 tmp2              ref  class-hnd "dup spill"
;  V11 tmp3              ref 

Promoting struct local V09 (System.Runtime.CompilerServices.AsyncTaskMethodBuilder):
lvaGrabTemp returning 12 (V12 tmp4) (a long lifetime temp) called for field V09.m_task (fldOffset=0x0).

lvaTable after fgPromoteStructs
; Initial local variable assignments
;
;  V00 arg0              ref  class-hnd
;  V01 arg1              ref  class-hnd
;  V02 arg2              ref  class-hnd
;  V03 arg3              int 
;  V04 arg4              ref  class-hnd
;  V05 arg5             bool 
;  V06 arg6              ref  class-hnd
;  V07 loc0           struct <<Obtain>d__1, 120> ld-addr-op
;  V08 OutArgs        lclBlk <na>  "OutgoingArgSpace"
;  V09 tmp1           struct <System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8> ld-addr-op "Inline ldloca(s) first use temp"
;  V10 tmp2              ref  class-hnd "dup spill"
;  V11 tmp3              ref 
;  V12 tmp4              ref  V09.m_task(offs=0x00) P-INDEP "field V09.m_task (fldOffset=0x0)"

*************** Finishing PHASE Morph - Promote Structs

*************** Starting PHASE Morph - Structs/AddrExp

*************** In fgMarkAddressExposedLocals()
LocalAddressVisitor visiting statement:
STMT00013 (IL 0x000...  ???)
               [000065] IA----------              *  ASG       struct (init)
               [000062] D------N----              +--*  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>(P) V09 tmp1         
                                                  +--*    ref    V09.m_task (offs=0x00) -> V12 tmp4         
               [000064] ------------              \--*  CNS_INT   int    0

LocalAddressVisitor visiting statement:
STMT00001 (IL   ???...  ???)
               [000007] -AC---------              *  ASG       struct (copy)
               [000006] *-----------              +--*  OBJ       struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>
               [000005] ------------              |  \--*  ADDR      byref 
               [000004] -------N----              |     \--*  FIELD     struct <>t__builder
               [000001] ------------              |        \--*  ADDR      byref 
               [000000] -------N----              |           \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000066] ------------              \--*  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>(P) V09 tmp1         
                                                  \--*    ref    V09.m_task (offs=0x00) -> V12 tmp4         

LocalAddressVisitor visiting statement:
STMT00002 (IL 0x00C...0x00F)
               [000012] -A----------              *  ASG       ref   
               [000011] -------N----              +--*  FIELD     ref    paths
               [000009] ------------              |  \--*  ADDR      byref 
               [000008] -------N----              |     \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000010] ------------              \--*  LCL_VAR   ref    V00 arg0         

Local V07 should not be enregistered because: was accessed as a local field
LocalAddressVisitor modified statement:
STMT00002 (IL 0x00C...0x00F)
               [000012] -A----------              *  ASG       ref   
               [000011] U------N----              +--*  LCL_FLD   ref    V07 loc0         [+16] Fseq[paths]
               [000010] ------------              \--*  LCL_VAR   ref    V00 arg0         

LocalAddressVisitor visiting statement:
STMT00003 (IL 0x014...0x017)
               [000017] -A----------              *  ASG       ref   
               [000016] -------N----              +--*  FIELD     ref    outputPath
               [000014] ------------              |  \--*  ADDR      byref 
               [000013] -------N----              |     \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000015] ------------              \--*  LCL_VAR   ref    V01 arg1         

Local V07 should not be enregistered because: was accessed as a local field
LocalAddressVisitor modified statement:
STMT00003 (IL 0x014...0x017)
               [000017] -A----------              *  ASG       ref   
               [000016] U------N----              +--*  LCL_FLD   ref    V07 loc0         [+0] Fseq[outputPath]
               [000015] ------------              \--*  LCL_VAR   ref    V01 arg1         

LocalAddressVisitor visiting statement:
STMT00004 (IL 0x01C...0x01F)
               [000022] -A----------              *  ASG       ref   
               [000021] -------N----              +--*  FIELD     ref    msBuildPath
               [000019] ------------              |  \--*  ADDR      byref 
               [000018] -------N----              |     \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000020] ------------              \--*  LCL_VAR   ref    V02 arg2         

Local V07 should not be enregistered because: was accessed as a local field
LocalAddressVisitor modified statement:
STMT00004 (IL 0x01C...0x01F)
               [000022] -A----------              *  ASG       ref   
               [000021] U------N----              +--*  LCL_FLD   ref    V07 loc0         [+8] Fseq[msBuildPath]
               [000020] ------------              \--*  LCL_VAR   ref    V02 arg2         

LocalAddressVisitor visiting statement:
STMT00005 (IL 0x024...0x027)
               [000027] -A----------              *  ASG       int   
               [000026] -------N----              +--*  FIELD     int    logLevel
               [000024] ------------              |  \--*  ADDR      byref 
               [000023] -------N----              |     \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000025] ------------              \--*  LCL_VAR   int    V03 arg3         

Local V07 should not be enregistered because: was accessed as a local field
LocalAddressVisitor modified statement:
STMT00005 (IL 0x024...0x027)
               [000027] -A----------              *  ASG       int   
               [000026] U------N----              +--*  LCL_FLD   int    V07 loc0         [+60] Fseq[logLevel]
               [000025] ------------              \--*  LCL_VAR   int    V03 arg3         

LocalAddressVisitor visiting statement:
STMT00006 (IL 0x02C...0x030)
               [000032] -A----------              *  ASG       ref   
               [000031] -------N----              +--*  FIELD     ref    jobName
               [000029] ------------              |  \--*  ADDR      byref 
               [000028] -------N----              |     \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000030] ------------              \--*  LCL_VAR   ref    V04 arg4         

Local V07 should not be enregistered because: was accessed as a local field
LocalAddressVisitor modified statement:
STMT00006 (IL 0x02C...0x030)
               [000032] -A----------              *  ASG       ref   
               [000031] U------N----              +--*  LCL_FLD   ref    V07 loc0         [+24] Fseq[jobName]
               [000030] ------------              \--*  LCL_VAR   ref    V04 arg4         

LocalAddressVisitor visiting statement:
STMT00007 (IL 0x035...0x039)
               [000037] -A----------              *  ASG       bool  
               [000036] -------N----              +--*  FIELD     bool   isParent
               [000034] ------------              |  \--*  ADDR      byref 
               [000033] -------N----              |     \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000035] ------------              \--*  LCL_VAR   bool   V05 arg5         

Local V07 should not be enregistered because: was accessed as a local field
LocalAddressVisitor modified statement:
STMT00007 (IL 0x035...0x039)
               [000037] -A----------              *  ASG       bool  
               [000036] U------N----              +--*  LCL_FLD   bool   V07 loc0         [+68] Fseq[isParent]
               [000035] ------------              \--*  LCL_VAR   bool   V05 arg5         

LocalAddressVisitor visiting statement:
STMT00008 (IL 0x03E...0x042)
               [000042] -A----------              *  ASG       ref   
               [000041] -------N----              +--*  FIELD     ref    matches
               [000039] ------------              |  \--*  ADDR      byref 
               [000038] -------N----              |     \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000040] ------------              \--*  LCL_VAR   ref    V06 arg6         

Local V07 should not be enregistered because: was accessed as a local field
LocalAddressVisitor modified statement:
STMT00008 (IL 0x03E...0x042)
               [000042] -A----------              *  ASG       ref   
               [000041] U------N----              +--*  LCL_FLD   ref    V07 loc0         [+32] Fseq[matches]
               [000040] ------------              \--*  LCL_VAR   ref    V06 arg6         

LocalAddressVisitor visiting statement:
STMT00009 (IL 0x047...0x04A)
               [000047] -A----------              *  ASG       int   
               [000046] -------N----              +--*  FIELD     int    <>1__state
               [000044] ------------              |  \--*  ADDR      byref 
               [000043] -------N----              |     \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         
               [000045] ------------              \--*  CNS_INT   int    -1

Local V07 should not be enregistered because: was accessed as a local field
LocalAddressVisitor modified statement:
STMT00009 (IL 0x047...0x04A)
               [000047] -A----------              *  ASG       int   
               [000046] U------N----              +--*  LCL_FLD   int    V07 loc0         [+56] Fseq[<>1__state]
               [000045] ------------              \--*  CNS_INT   int    -1

LocalAddressVisitor visiting statement:
STMT00014 (IL 0x04F...  ???)
               [000070] --C-G-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
               [000068] ------------ arg0         \--*  ADDR      byref 
               [000069] -------N----                 \--*  LCL_VAR   struct<<Obtain>d__1, 120> V07 loc0         

Local V07 should not be enregistered because: it is address exposed
LocalAddressVisitor modified statement:
STMT00014 (IL 0x04F...  ???)
               [000070] --C-G-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
               [000068] ------------ arg0         \--*  LCL_VAR_ADDR byref  V07 loc0         

LocalAddressVisitor visiting statement:
STMT00015 (IL 0x05D...  ???)
               [000078] -A--G-------              *  ASG       ref   
               [000077] D------N----              +--*  LCL_VAR   ref    V10 tmp2         
               [000076] ----G-------              \--*  FIELD     ref    m_task
               [000072] ----G-------                 \--*  ADDR      byref 
               [000073] ----G--N----                    \--*  FIELD     struct <>t__builder
               [000074] ------------                       \--*  ADDR      byref 
               [000075] -------N----                          \--*  LCL_VAR   struct<<Obtain>d__1, 120>(AX) V07 loc0         

Local V07 should not be enregistered because: was accessed as a local field
LocalAddressVisitor modified statement:
STMT00015 (IL 0x05D...  ???)
               [000078] -A--G-------              *  ASG       ref   
               [000077] D------N----              +--*  LCL_VAR   ref    V10 tmp2         
               [000076] ------------              \--*  LCL_FLD   ref    V07 loc0         [+72] Fseq[<>t__builder, m_task]

LocalAddressVisitor visiting statement:
STMT00017 (IL 0x05D...  ???)
               [000085] -A----------              *  ASG       ref   
               [000084] D------N----              +--*  LCL_VAR   ref    V11 tmp3         
               [000079] ------------              \--*  LCL_VAR   ref    V10 tmp2         

LocalAddressVisitor visiting statement:
STMT00016 (IL 0x05D...  ???)
               [000083] ------------              *  JTRUE     void  
               [000082] ------------              \--*  NE        int   
               [000080] ------------                 +--*  LCL_VAR   ref    V10 tmp2         
               [000081] ------------                 \--*  CNS_INT   ref    null

LocalAddressVisitor visiting statement:
STMT00018 (IL 0x05D...  ???)
               [000095] -AC-G-------              *  ASG       ref   
               [000094] D------N----              +--*  LCL_VAR   ref    V11 tmp3         
               [000093] --C-G-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise
               [000089] ----G------- this in rcx     \--*  ADDR      byref 
               [000090] ----G--N----                    \--*  FIELD     struct <>t__builder
               [000091] ------------                       \--*  ADDR      byref 
               [000092] -------N----                          \--*  LCL_VAR   struct<<Obtain>d__1, 120>(AX) V07 loc0         

Local V07 should not be enregistered because: it is address exposed
LocalAddressVisitor modified statement:
STMT00018 (IL 0x05D...  ???)
               [000095] -AC-G-------              *  ASG       ref   
               [000094] D------N----              +--*  LCL_VAR   ref    V11 tmp3         
               [000093] --C-G-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise
               [000089] ------------ this in rcx     \--*  LCL_FLD_ADDR byref  V07 loc0         [+72] Fseq[<>t__builder]

LocalAddressVisitor visiting statement:
STMT00012 (IL   ???...  ???)
               [000061] --C---------              *  RETURN    ref   
               [000088] ------------              \--*  LCL_VAR   ref    V11 tmp3         


*************** Finishing PHASE Morph - Structs/AddrExp

*************** Starting PHASE Morph - ByRefs

*************** In fgRetypeImplicitByRefArgs()

*************** Finishing PHASE Morph - ByRefs

*************** Starting PHASE Morph - Global

*************** In fgMorphBlocks()

Morphing BB01 of 'SolutionAnalyzer.Results:Obtain(System.String[],System.String,System.String,int,System.String,bool,System.Func`3[[Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[Microsoft.CodeAnalysis.SemanticModel, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]):System.Threading.Tasks.Task'

fgMorphTree BB01, STMT00013 (before)
               [000065] IA----------              *  ASG       struct (init)
               [000062] D------N----              +--*  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>(P) V09 tmp1         
                                                  +--*    ref    V09.m_task (offs=0x00) -> V12 tmp4         
               [000064] ------------              \--*  CNS_INT   int    0
fgMorphBlkNode for dst tree, before:
               [000062] D----+-N----              *  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>(P) V09 tmp1         
                                                  *    ref    V09.m_task (offs=0x00) -> V12 tmp4         
fgMorphBlkNode after:
               [000062] D----+-N----              *  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>(P) V09 tmp1         
                                                  *    ref    V09.m_task (offs=0x00) -> V12 tmp4         

fgMorphInitBlock: using field by field initialization.
GenTreeNode creates assertion:
               [000100] -A----------              *  ASG       ref   
In BB01 New Local Constant Assertion: V12 == null index=#01, mask=0000000000000001
fgMorphInitBlock (after):
               [000100] -A---+------              *  ASG       ref   
               [000098] D------N----              +--*  LCL_VAR   ref    V12 tmp4         
               [000099] ------------              \--*  CNS_INT   ref    null

The assignment [000100] using V12 removes: Constant Assertion: V12 == null
GenTreeNode creates assertion:
               [000100] -A---+------              *  ASG       ref   
In BB01 New Local Constant Assertion: V12 == null index=#01, mask=0000000000000001

fgMorphTree BB01, STMT00013 (after)
               [000100] -A---+------              *  ASG       ref   
               [000098] D------N----              +--*  LCL_VAR   ref    V12 tmp4         
               [000099] ------------              \--*  CNS_INT   ref    null

fgMorphTree BB01, STMT00001 (before)
               [000007] -AC---------              *  ASG       struct (copy)
               [000006] *-----------              +--*  OBJ       struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>
               [000005] ------------              |  \--*  ADDR      byref 
               [000004] -------N----              |     \--*  FIELD     struct <>t__builder
               [000001] ------------              |        \--*  ADDR      byref 
               [000000] -------N----              |           \--*  LCL_VAR   struct<<Obtain>d__1, 120>(AX) V07 loc0         
               [000066] ------------              \--*  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>(P) V09 tmp1         
                                                  \--*    ref    V09.m_task (offs=0x00) -> V12 tmp4         

Local V07 should not be enregistered because: was accessed as a local field

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000000] ----G+-N----              *  LCL_FLD   struct V07 loc0         [+72] Fseq[<>t__builder]
fgMorphCopyBlock:
fgMorphBlkNode for dst tree, before:
               [000006] *---G+------              *  OBJ       struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>
               [000005] ----G+------              \--*  ADDR      byref 
               [000000] U---G+-N----                 \--*  LCL_FLD   struct V07 loc0         [+72] Fseq[<>t__builder]
fgMorphBlkNode after:
               [000006] *---G+------              *  OBJ       struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>
               [000005] ----G+------              \--*  ADDR      byref 
               [000000] U---G+-N----                 \--*  LCL_FLD   struct V07 loc0         [+72] Fseq[<>t__builder]
fgMorphBlkNode for src tree, before:
               [000066] -----+------              *  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>(P) V09 tmp1         
                                                  *    ref    V09.m_task (offs=0x00) -> V12 tmp4         
fgMorphBlkNode after:
               [000066] -----+------              *  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>(P) V09 tmp1         
                                                  *    ref    V09.m_task (offs=0x00) -> V12 tmp4         
block assignment to morph:
               [000007] -A--G-------              *  ASG       struct (copy)
               [000006] *---G+------              +--*  OBJ       struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>
               [000005] ----G+------              |  \--*  ADDR      byref 
               [000000] U---G+-N----              |     \--*  LCL_FLD   struct V07 loc0         [+72] Fseq[<>t__builder]
               [000066] -----+------              \--*  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>(P) V09 tmp1         
                                                  \--*    ref    V09.m_task (offs=0x00) -> V12 tmp4         
 (srcDoFldAsg=true) using field by field assignments.

Local V07 should not be enregistered because: written in a block op

fgAddFieldSeqForZeroOffset for Fseq[m_task]
addr (Before)
               [000103] ----G-------                ADDR      byref 
     (After)
               [000104] U---G--N----                LCL_FLD   struct

fgMorphCopyBlock (after):
               [000107] -A--G+------              *  ASG       ref   
               [000105] *---G--N----              +--*  IND       ref   
               [000103] ----G-------              |  \--*  ADDR      byref 
               [000104] U---G--N----              |     \--*  LCL_FLD   struct V07 loc0         [+72] Fseq[<>t__builder, m_task]
               [000106] ------------              \--*  LCL_VAR   ref    V12 tmp4         

fgMorphTree BB01, STMT00001 (after)
               [000107] -A--G+------              *  ASG       ref   
               [000105] *---G--N----              +--*  IND       ref   
               [000103] ----G-------              |  \--*  ADDR      byref 
               [000104] U---G--N----              |     \--*  LCL_FLD   struct V07 loc0         [+72] Fseq[<>t__builder, m_task]
               [000106] ------------              \--*  LCL_VAR   ref    V12 tmp4         

fgMorphTree BB01, STMT00002 (before)
               [000012] -A----------              *  ASG       ref   
               [000011] U------N----              +--*  LCL_FLD   ref    V07 loc0         [+16] Fseq[paths]
               [000010] ------------              \--*  LCL_VAR   ref    V00 arg0         

fgMorphTree BB01, STMT00003 (before)
               [000017] -A----------              *  ASG       ref   
               [000016] U------N----              +--*  LCL_FLD   ref    V07 loc0         [+0] Fseq[outputPath]
               [000015] ------------              \--*  LCL_VAR   ref    V01 arg1         

fgMorphTree BB01, STMT00004 (before)
               [000022] -A----------              *  ASG       ref   
               [000021] U------N----              +--*  LCL_FLD   ref    V07 loc0         [+8] Fseq[msBuildPath]
               [000020] ------------              \--*  LCL_VAR   ref    V02 arg2         

fgMorphTree BB01, STMT00005 (before)
               [000027] -A----------              *  ASG       int   
               [000026] U------N----              +--*  LCL_FLD   int    V07 loc0         [+60] Fseq[logLevel]
               [000025] ------------              \--*  LCL_VAR   int    V03 arg3         

fgMorphTree BB01, STMT00006 (before)
               [000032] -A----------              *  ASG       ref   
               [000031] U------N----              +--*  LCL_FLD   ref    V07 loc0         [+24] Fseq[jobName]
               [000030] ------------              \--*  LCL_VAR   ref    V04 arg4         

fgMorphTree BB01, STMT00007 (before)
               [000037] -A----------              *  ASG       bool  
               [000036] U------N----              +--*  LCL_FLD   bool   V07 loc0         [+68] Fseq[isParent]
               [000035] ------------              \--*  LCL_VAR   bool   V05 arg5         

fgMorphTree BB01, STMT00007 (after)
               [000037] -A--G+------              *  ASG       bool  
               [000036] U---G+-N----              +--*  LCL_FLD   bool   V07 loc0         [+68] Fseq[isParent]
               [000108] -----+------              \--*  CAST      int <- bool <- int
               [000035] -----+------                 \--*  LCL_VAR   int    V05 arg5         

fgMorphTree BB01, STMT00008 (before)
               [000042] -A----------              *  ASG       ref   
               [000041] U------N----              +--*  LCL_FLD   ref    V07 loc0         [+32] Fseq[matches]
               [000040] ------------              \--*  LCL_VAR   ref    V06 arg6         

fgMorphTree BB01, STMT00009 (before)
               [000047] -A----------              *  ASG       int   
               [000046] U------N----              +--*  LCL_FLD   int    V07 loc0         [+56] Fseq[<>1__state]
               [000045] ------------              \--*  CNS_INT   int    -1

fgMorphTree BB01, STMT00014 (before)
               [000070] --C-G-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
               [000068] ------------ arg0         \--*  LCL_VAR_ADDR byref  V07 loc0         
Initializing arg info for 70.CALL:
ArgTable for 70.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 68.LCL_VAR_ADDR long (By ref), 1 reg: rcx, byteAlignment=8]

Morphing args for 70.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000068] -----+------              *  LCL_VAR_ADDR long   V07 loc0         
Replaced with placeholder node:
               [000109] ----------L-              *  ARGPLACE  long  

Shuffled argument table:    rcx 
ArgTable for 70.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 68.LCL_VAR_ADDR long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]


fgMorphTree BB01, STMT00014 (after)
               [000070] --CXG+------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
               [000068] -----+------ arg0 in rcx  \--*  LCL_VAR_ADDR long   V07 loc0         

fgMorphTree BB01, STMT00015 (before)
               [000078] -A--G-------              *  ASG       ref   
               [000077] D------N----              +--*  LCL_VAR   ref    V10 tmp2         
               [000076] ------------              \--*  LCL_FLD   ref    V07 loc0         [+72] Fseq[<>t__builder, m_task]

fgMorphTree BB01, STMT00017 (before)
               [000085] -A----------              *  ASG       ref   
               [000084] D------N----              +--*  LCL_VAR   ref    V11 tmp3         
               [000079] ------------              \--*  LCL_VAR   ref    V10 tmp2         
GenTreeNode creates assertion:
               [000085] -A----------              *  ASG       ref   
In BB01 New Local Copy     Assertion: V11 == V10 index=#02, mask=0000000000000002

fgMorphTree BB01, STMT00016 (before)
               [000083] ------------              *  JTRUE     void  
               [000082] ------------              \--*  NE        int   
               [000080] ------------                 +--*  LCL_VAR   ref    V10 tmp2         
               [000081] ------------                 \--*  CNS_INT   ref    null

Morphing BB03 of 'SolutionAnalyzer.Results:Obtain(System.String[],System.String,System.String,int,System.String,bool,System.Func`3[[Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[Microsoft.CodeAnalysis.SemanticModel, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]):System.Threading.Tasks.Task'

fgMorphTree BB03, STMT00018 (before)
               [000095] -AC-G-------              *  ASG       ref   
               [000094] D------N----              +--*  LCL_VAR   ref    V11 tmp3         
               [000093] --C-G-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise
               [000089] ------------ this in rcx     \--*  LCL_FLD_ADDR byref  V07 loc0         [+72] Fseq[<>t__builder]

Rejecting tail call in morph for call [000093]: Local address taken V07
Initializing arg info for 93.CALL:
ArgTable for 93.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 89.LCL_FLD_ADDR byref (By ref), 1 reg: rcx, byteAlignment=8]

Morphing args for 93.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000089] -----+------              *  LCL_FLD_ADDR byref  V07 loc0         [+72] Fseq[<>t__builder]
Replaced with placeholder node:
               [000110] ----------L-              *  ARGPLACE  byref 

Shuffled argument table:    rcx 
ArgTable for 93.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 89.LCL_FLD_ADDR byref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]


fgMorphTree BB03, STMT00018 (after)
               [000095] -ACXG+------              *  ASG       ref   
               [000094] D----+-N----              +--*  LCL_VAR   ref    V11 tmp3         
               [000093] --CXG+------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise
               [000089] -----+------ this in rcx     \--*  LCL_FLD_ADDR byref  V07 loc0         [+72] Fseq[<>t__builder]

Morphing BB04 of 'SolutionAnalyzer.Results:Obtain(System.String[],System.String,System.String,int,System.String,bool,System.Func`3[[Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[Microsoft.CodeAnalysis.SemanticModel, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]):System.Threading.Tasks.Task'

fgMorphTree BB04, STMT00012 (before)
               [000061] --C---------              *  RETURN    ref   
               [000088] ------------              \--*  LCL_VAR   ref    V11 tmp3         

*************** Finishing PHASE Morph - Global
Trees after Morph - Global

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)-> BB04 ( cond )                     i label target hascall gcsafe 
BB03 [0004]  1       BB01                  0.50    [05D..05E)                                     i hascall gcsafe 
BB04 [0005]  2       BB01,BB03             1       [05D..05E)        (return)                     i label target 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06A) -> BB04 (cond), preds={} succs={BB03,BB04}

***** BB01
STMT00013 (IL 0x000...  ???)
               [000100] -A---+------              *  ASG       ref   
               [000098] D------N----              +--*  LCL_VAR   ref    V12 tmp4         
               [000099] ------------              \--*  CNS_INT   ref    null

***** BB01
STMT00001 (IL   ???...  ???)
               [000107] -A--G+------              *  ASG       ref   
               [000105] *---G--N----              +--*  IND       ref   
               [000103] ----G-------              |  \--*  ADDR      byref 
               [000104] U---G--N----              |     \--*  LCL_FLD   struct V07 loc0         [+72] Fseq[<>t__builder, m_task]
               [000106] ------------              \--*  LCL_VAR   ref    V12 tmp4         

***** BB01
STMT00002 (IL 0x00C...0x00F)
               [000012] -A--G+------              *  ASG       ref   
               [000011] U---G+-N----              +--*  LCL_FLD   ref    V07 loc0         [+16] Fseq[paths]
               [000010] -----+------              \--*  LCL_VAR   ref    V00 arg0         

***** BB01
STMT00003 (IL 0x014...0x017)
               [000017] -A--G+------              *  ASG       ref   
               [000016] U---G+-N----              +--*  LCL_FLD   ref    V07 loc0         [+0] Fseq[outputPath]
               [000015] -----+------              \--*  LCL_VAR   ref    V01 arg1         

***** BB01
STMT00004 (IL 0x01C...0x01F)
               [000022] -A--G+------              *  ASG       ref   
               [000021] U---G+-N----              +--*  LCL_FLD   ref    V07 loc0         [+8] Fseq[msBuildPath]
               [000020] -----+------              \--*  LCL_VAR   ref    V02 arg2         

***** BB01
STMT00005 (IL 0x024...0x027)
               [000027] -A--G+------              *  ASG       int   
               [000026] U---G+-N----              +--*  LCL_FLD   int    V07 loc0         [+60] Fseq[logLevel]
               [000025] -----+------              \--*  LCL_VAR   int    V03 arg3         

***** BB01
STMT00006 (IL 0x02C...0x030)
               [000032] -A--G+------              *  ASG       ref   
               [000031] U---G+-N----              +--*  LCL_FLD   ref    V07 loc0         [+24] Fseq[jobName]
               [000030] -----+------              \--*  LCL_VAR   ref    V04 arg4         

***** BB01
STMT00007 (IL 0x035...0x039)
               [000037] -A--G+------              *  ASG       bool  
               [000036] U---G+-N----              +--*  LCL_FLD   bool   V07 loc0         [+68] Fseq[isParent]
               [000108] -----+------              \--*  CAST      int <- bool <- int
               [000035] -----+------                 \--*  LCL_VAR   int    V05 arg5         

***** BB01
STMT00008 (IL 0x03E...0x042)
               [000042] -A--G+------              *  ASG       ref   
               [000041] U---G+-N----              +--*  LCL_FLD   ref    V07 loc0         [+32] Fseq[matches]
               [000040] -----+------              \--*  LCL_VAR   ref    V06 arg6         

***** BB01
STMT00009 (IL 0x047...0x04A)
               [000047] -A--G+------              *  ASG       int   
               [000046] U---G+-N----              +--*  LCL_FLD   int    V07 loc0         [+56] Fseq[<>1__state]
               [000045] -----+------              \--*  CNS_INT   int    -1

***** BB01
STMT00014 (IL 0x04F...  ???)
               [000070] --CXG+------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
               [000068] -----+------ arg0 in rcx  \--*  LCL_VAR_ADDR long   V07 loc0         

***** BB01
STMT00015 (IL 0x05D...  ???)
               [000078] -A--G+------              *  ASG       ref   
               [000077] D----+-N----              +--*  LCL_VAR   ref    V10 tmp2         
               [000076] ----G+------              \--*  LCL_FLD   ref    V07 loc0         [+72] Fseq[<>t__builder, m_task]

***** BB01
STMT00017 (IL 0x05D...  ???)
               [000085] -A---+------              *  ASG       ref   
               [000084] D----+-N----              +--*  LCL_VAR   ref    V11 tmp3         
               [000079] -----+------              \--*  LCL_VAR   ref    V10 tmp2         

***** BB01
STMT00016 (IL 0x05D...  ???)
               [000083] -----+------              *  JTRUE     void  
               [000082] J----+-N----              \--*  NE        int   
               [000080] -----+------                 +--*  LCL_VAR   ref    V10 tmp2         
               [000081] -----+------                 \--*  CNS_INT   ref    null

------------ BB03 [05D..05E), preds={BB01} succs={BB04}

***** BB03
STMT00018 (IL 0x05D...  ???)
               [000095] -ACXG+------              *  ASG       ref   
               [000094] D----+-N----              +--*  LCL_VAR   ref    V11 tmp3         
               [000093] --CXG+------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise
               [000089] -----+------ this in rcx     \--*  LCL_FLD_ADDR byref  V07 loc0         [+72] Fseq[<>t__builder]

------------ BB04 [05D..05E) (return), preds={BB01,BB03} succs={}

***** BB04
STMT00012 (IL   ???...  ???)
               [000061] -----+------              *  RETURN    ref   
               [000088] -----+------              \--*  LCL_VAR   ref    V11 tmp3         

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist

*************** Starting PHASE GS Cookie
No GS security needed

*************** Finishing PHASE GS Cookie

*************** Starting PHASE Compute edge weights (1, false)
*************** In fgComputeBlockAndEdgeWeights()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)-> BB04 ( cond )                     i label target hascall gcsafe 
BB03 [0004]  1       BB01                  0.50    [05D..05E)                                     i hascall gcsafe 
BB04 [0005]  2       BB01,BB03             1       [05D..05E)        (return)                     i label target 
-----------------------------------------------------------------------------------------------------------------------------------------

 -- no profile data, so using default called count
 -- not optimizing or no profile data, so not computing edge weights

*************** Finishing PHASE Compute edge weights (1, false)

*************** Starting PHASE Create EH funclets
*************** In fgCreateFunclets()

After fgCreateFunclets()
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)-> BB04 ( cond )                     i label target hascall gcsafe 
BB03 [0004]  1       BB01                  0.50    [05D..05E)                                     i hascall gcsafe 
BB04 [0005]  2       BB01,BB03             1       [05D..05E)        (return)                     i label target 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Create EH funclets

*************** Starting PHASE Optimize layout
*************** In optOptimizeLayout()

***************  Exception Handling table is empty
*************** In fgDebugCheckBBlist

*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)-> BB04 ( cond )                     i label target hascall gcsafe 
BB03 [0004]  1       BB01                  0.50    [05D..05E)                                     i hascall gcsafe 
BB04 [0005]  2       BB01,BB03             1       [05D..05E)        (return)                     i label target 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist

*************** In fgExpandRarelyRunBlocks()
*************** In fgReorderBlocks()

Initial BasicBlocks
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)-> BB04 ( cond )                     i label target hascall gcsafe 
BB03 [0004]  1       BB01                  0.50    [05D..05E)                                     i hascall gcsafe 
BB04 [0005]  2       BB01,BB03             1       [05D..05E)        (return)                     i label target 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)-> BB04 ( cond )                     i label target hascall gcsafe 
BB03 [0004]  1       BB01                  0.50    [05D..05E)                                     i hascall gcsafe 
BB04 [0005]  2       BB01,BB03             1       [05D..05E)        (return)                     i label target 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist

*************** Finishing PHASE Optimize layout

*************** Starting PHASE Compute blocks reachability
*************** In fgComputeReachability
*************** In fgDebugCheckBBlist

Renumbering the basic blocks for fgComputeReachability pass #1

*************** Before renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)-> BB04 ( cond )                     i label target hascall gcsafe 
BB03 [0004]  1       BB01                  0.50    [05D..05E)                                     i hascall gcsafe 
BB04 [0005]  2       BB01,BB03             1       [05D..05E)        (return)                     i label target 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
Renumber BB03 to BB02
Renumber BB04 to BB03

*************** After renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)-> BB03 ( cond )                     i label target hascall gcsafe 
BB02 [0004]  1       BB01                  0.50    [05D..05E)                                     i hascall gcsafe 
BB03 [0005]  2       BB01,BB02             1       [05D..05E)        (return)                     i label target 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty

New BlockSet epoch 3, # of blocks (including unused BB00): 4, bitset array size: 1 (short)
Enter blocks: BB01 

After computing reachability sets:
------------------------------------------------
BBnum  Reachable by 
------------------------------------------------
BB01 : BB01 
BB02 : BB01 BB02 
BB03 : BB01 BB02 BB03 

After computing reachability:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)-> BB03 ( cond )                     i label target hascall gcsafe 
BB02 [0004]  1       BB01                  0.50    [05D..05E)                                     i hascall gcsafe 
BB03 [0005]  2       BB01,BB02             1       [05D..05E)        (return)                     i label target gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist
*************** In fgComputeDoms
*************** In fgDebugCheckBBlist

Dominator computation start blocks (those blocks with no incoming edges):
BB01 
------------------------------------------------
BBnum  Dominated by
------------------------------------------------
BB01:  BB01 
BB02:  BB02 BB01 
BB03:  BB03 BB01 

Inside fgBuildDomTree

After computing the Dominance Tree:
BB01 : BB03 BB02 


After numbering the dominator tree:
BB01: pre=01, post=03
BB02: pre=03, post=02
BB03: pre=02, post=01

*************** Finishing PHASE Compute blocks reachability

*************** Starting PHASE Optimize loops
*************** In optOptimizeLoops()

After optSetBlockWeights:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)-> BB03 ( cond )                     i label target hascall gcsafe 
BB02 [0004]  1       BB01                  0.25    [05D..05E)                                     i hascall gcsafe 
BB03 [0005]  2       BB01,BB02             1       [05D..05E)        (return)                     i label target gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist

*************** Finishing PHASE Optimize loops

*************** Starting PHASE Clone loops

*************** In optCloneLoops()

*************** Finishing PHASE Clone loops

*************** Starting PHASE Unroll loops

*************** Finishing PHASE Unroll loops

*************** Starting PHASE Mark local vars

*************** In lvaMarkLocalVars()
*** lvaComputeRefCounts ***

*** lvaComputeRefCounts -- explicit counts ***

*** marking local variables in block BB01 (weight=1   )
STMT00013 (IL 0x000...  ???)
               [000100] -A---+------              *  ASG       ref   
               [000098] D------N----              +--*  LCL_VAR   ref    V12 tmp4         
               [000099] ------------              \--*  CNS_INT   ref    null
New refCnts for V12: refCnt =  1, refCntWtd = 1   
STMT00001 (IL   ???...  ???)
               [000107] -A--G+------              *  ASG       ref   
               [000105] *---G--N----              +--*  IND       ref   
               [000103] ----G-------              |  \--*  ADDR      byref 
               [000104] U---G--N----              |     \--*  LCL_FLD   struct V07 loc0         [+72] Fseq[<>t__builder, m_task]
               [000106] ------------              \--*  LCL_VAR   ref    V12 tmp4         
New refCnts for V07: refCnt =  1, refCntWtd = 1   
New refCnts for V12: refCnt =  2, refCntWtd = 2   
STMT00002 (IL 0x00C...0x00F)
               [000012] -A--G+------              *  ASG       ref   
               [000011] U---G+-N----              +--*  LCL_FLD   ref    V07 loc0         [+16] Fseq[paths]
               [000010] -----+------              \--*  LCL_VAR   ref    V00 arg0         
New refCnts for V07: refCnt =  2, refCntWtd = 2   
New refCnts for V00: refCnt =  1, refCntWtd = 1   
STMT00003 (IL 0x014...0x017)
               [000017] -A--G+------              *  ASG       ref   
               [000016] U---G+-N----              +--*  LCL_FLD   ref    V07 loc0         [+0] Fseq[outputPath]
               [000015] -----+------              \--*  LCL_VAR   ref    V01 arg1         
New refCnts for V07: refCnt =  3, refCntWtd = 3   
New refCnts for V01: refCnt =  1, refCntWtd = 1   
STMT00004 (IL 0x01C...0x01F)
               [000022] -A--G+------              *  ASG       ref   
               [000021] U---G+-N----              +--*  LCL_FLD   ref    V07 loc0         [+8] Fseq[msBuildPath]
               [000020] -----+------              \--*  LCL_VAR   ref    V02 arg2         
New refCnts for V07: refCnt =  4, refCntWtd = 4   
New refCnts for V02: refCnt =  1, refCntWtd = 1   
STMT00005 (IL 0x024...0x027)
               [000027] -A--G+------              *  ASG       int   
               [000026] U---G+-N----              +--*  LCL_FLD   int    V07 loc0         [+60] Fseq[logLevel]
               [000025] -----+------              \--*  LCL_VAR   int    V03 arg3         
New refCnts for V07: refCnt =  5, refCntWtd = 5   
New refCnts for V03: refCnt =  1, refCntWtd = 1   
STMT00006 (IL 0x02C...0x030)
               [000032] -A--G+------              *  ASG       ref   
               [000031] U---G+-N----              +--*  LCL_FLD   ref    V07 loc0         [+24] Fseq[jobName]
               [000030] -----+------              \--*  LCL_VAR   ref    V04 arg4         
New refCnts for V07: refCnt =  6, refCntWtd = 6   
New refCnts for V04: refCnt =  1, refCntWtd = 1   
STMT00007 (IL 0x035...0x039)
               [000037] -A--G+------              *  ASG       bool  
               [000036] U---G+-N----              +--*  LCL_FLD   bool   V07 loc0         [+68] Fseq[isParent]
               [000108] -----+------              \--*  CAST      int <- bool <- int
               [000035] -----+------                 \--*  LCL_VAR   int    V05 arg5         
New refCnts for V07: refCnt =  7, refCntWtd = 7   
New refCnts for V05: refCnt =  1, refCntWtd = 1   
STMT00008 (IL 0x03E...0x042)
               [000042] -A--G+------              *  ASG       ref   
               [000041] U---G+-N----              +--*  LCL_FLD   ref    V07 loc0         [+32] Fseq[matches]
               [000040] -----+------              \--*  LCL_VAR   ref    V06 arg6         
New refCnts for V07: refCnt =  8, refCntWtd = 8   
New refCnts for V06: refCnt =  1, refCntWtd = 1   
STMT00009 (IL 0x047...0x04A)
               [000047] -A--G+------              *  ASG       int   
               [000046] U---G+-N----              +--*  LCL_FLD   int    V07 loc0         [+56] Fseq[<>1__state]
               [000045] -----+------              \--*  CNS_INT   int    -1
New refCnts for V07: refCnt =  9, refCntWtd = 9   
STMT00014 (IL 0x04F...  ???)
               [000070] --CXG+------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
               [000068] -----+------ arg0 in rcx  \--*  LCL_VAR_ADDR long   V07 loc0         
New refCnts for V07: refCnt = 10, refCntWtd = 10   
STMT00015 (IL 0x05D...  ???)
               [000078] -A--G+------              *  ASG       ref   
               [000077] D----+-N----              +--*  LCL_VAR   ref    V10 tmp2         
               [000076] ----G+------              \--*  LCL_FLD   ref    V07 loc0         [+72] Fseq[<>t__builder, m_task]
New refCnts for V10: refCnt =  1, refCntWtd = 2   
New refCnts for V07: refCnt = 11, refCntWtd = 11   
STMT00017 (IL 0x05D...  ???)
               [000085] -A---+------              *  ASG       ref   
               [000084] D----+-N----              +--*  LCL_VAR   ref    V11 tmp3         
               [000079] -----+------              \--*  LCL_VAR   ref    V10 tmp2         
New refCnts for V11: refCnt =  1, refCntWtd = 1   
New refCnts for V10: refCnt =  2, refCntWtd = 4   
STMT00016 (IL 0x05D...  ???)
               [000083] -----+------              *  JTRUE     void  
               [000082] J----+-N----              \--*  NE        int   
               [000080] -----+------                 +--*  LCL_VAR   ref    V10 tmp2         
               [000081] -----+------                 \--*  CNS_INT   ref    null
New refCnts for V10: refCnt =  3, refCntWtd = 6   

*** marking local variables in block BB02 (weight=0.25)
STMT00018 (IL 0x05D...  ???)
               [000095] -ACXG+------              *  ASG       ref   
               [000094] D----+-N----              +--*  LCL_VAR   ref    V11 tmp3         
               [000093] --CXG+------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise
               [000089] -----+------ this in rcx     \--*  LCL_FLD_ADDR byref  V07 loc0         [+72] Fseq[<>t__builder]
New refCnts for V11: refCnt =  2, refCntWtd = 1.25
New refCnts for V07: refCnt = 12, refCntWtd = 11.25

*** marking local variables in block BB03 (weight=1   )
STMT00012 (IL   ???...  ???)
               [000061] -----+------              *  RETURN    ref   
               [000088] -----+------              \--*  LCL_VAR   ref    V11 tmp3         
New refCnts for V11: refCnt =  3, refCntWtd = 2.25

*** lvaComputeRefCounts -- implicit counts ***
New refCnts for V00: refCnt =  2, refCntWtd = 2   
New refCnts for V00: refCnt =  3, refCntWtd = 3   
New refCnts for V01: refCnt =  2, refCntWtd = 2   
New refCnts for V01: refCnt =  3, refCntWtd = 3   
New refCnts for V02: refCnt =  2, refCntWtd = 2   
New refCnts for V02: refCnt =  3, refCntWtd = 3   
New refCnts for V03: refCnt =  2, refCntWtd = 2   
New refCnts for V03: refCnt =  3, refCntWtd = 3   

*************** In optAddCopies()


*************** Finishing PHASE Mark local vars

*************** Starting PHASE Optimize bools
*************** In optOptimizeBools()
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Optimize bools

*************** Starting PHASE Find oper order
*************** In fgFindOperOrder()

*************** Finishing PHASE Find oper order

*************** Starting PHASE Set block order
*************** In fgSetBlockOrder()
The biggest BB has    5 tree nodes

*************** Finishing PHASE Set block order
Trees before Build SSA representation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)-> BB03 ( cond )                     i label target hascall gcsafe 
BB02 [0004]  1       BB01                  0.25    [05D..05E)                                     i hascall gcsafe 
BB03 [0005]  2       BB01,BB02             1       [05D..05E)        (return)                     i label target gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06A) -> BB03 (cond), preds={} succs={BB02,BB03}

***** BB01
STMT00013 (IL 0x000...  ???)
N003 (  5,  4) [000100] -A------R---              *  ASG       ref   
N002 (  3,  2) [000098] D------N----              +--*  LCL_VAR   ref    V12 tmp4         
N001 (  1,  1) [000099] ------------              \--*  CNS_INT   ref    null

***** BB01
STMT00001 (IL   ???...  ???)
N005 ( 10, 10) [000107] -A--G---R---              *  ASG       ref   
N004 (  6,  7) [000105] *---G--N----              +--*  IND       ref   
N003 (  3,  5) [000103] ----G-------              |  \--*  ADDR      byref 
N002 (  3,  4) [000104] U---G--N----              |     \--*  LCL_FLD   struct V07 loc0         [+72] Fseq[<>t__builder, m_task]
N001 (  3,  2) [000106] ------------              \--*  LCL_VAR   ref    V12 tmp4         

***** BB01
STMT00002 (IL 0x00C...0x00F)
N003 (  5,  6) [000012] -A--G---R---              *  ASG       ref   
N002 (  3,  4) [000011] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+16] Fseq[paths]
N001 (  1,  1) [000010] ------------              \--*  LCL_VAR   ref    V00 arg0         

***** BB01
STMT00003 (IL 0x014...0x017)
N003 (  5,  6) [000017] -A--G---R---              *  ASG       ref   
N002 (  3,  4) [000016] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+0] Fseq[outputPath]
N001 (  1,  1) [000015] ------------              \--*  LCL_VAR   ref    V01 arg1         

***** BB01
STMT00004 (IL 0x01C...0x01F)
N003 (  5,  6) [000022] -A--G---R---              *  ASG       ref   
N002 (  3,  4) [000021] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+8] Fseq[msBuildPath]
N001 (  1,  1) [000020] ------------              \--*  LCL_VAR   ref    V02 arg2         

***** BB01
STMT00005 (IL 0x024...0x027)
N003 (  5,  6) [000027] -A--G---R---              *  ASG       int   
N002 (  3,  4) [000026] U---G--N----              +--*  LCL_FLD   int    V07 loc0         [+60] Fseq[logLevel]
N001 (  1,  1) [000025] ------------              \--*  LCL_VAR   int    V03 arg3         

***** BB01
STMT00006 (IL 0x02C...0x030)
N003 (  7,  7) [000032] -A--G---R---              *  ASG       ref   
N002 (  3,  4) [000031] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+24] Fseq[jobName]
N001 (  3,  2) [000030] ------------              \--*  LCL_VAR   ref    V04 arg4         

***** BB01
STMT00007 (IL 0x035...0x039)
N004 (  9, 10) [000037] -A--G---R---              *  ASG       bool  
N003 (  4,  5) [000036] U---G--N----              +--*  LCL_FLD   bool   V07 loc0         [+68] Fseq[isParent]
N002 (  4,  4) [000108] ------------              \--*  CAST      int <- bool <- int
N001 (  3,  2) [000035] ------------                 \--*  LCL_VAR   int    V05 arg5         

***** BB01
STMT00008 (IL 0x03E...0x042)
N003 (  7,  7) [000042] -A--G---R---              *  ASG       ref   
N002 (  3,  4) [000041] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+32] Fseq[matches]
N001 (  3,  2) [000040] ------------              \--*  LCL_VAR   ref    V06 arg6         

***** BB01
STMT00009 (IL 0x047...0x04A)
N003 (  5,  6) [000047] -A--G---R---              *  ASG       int   
N002 (  3,  4) [000046] U---G--N----              +--*  LCL_FLD   int    V07 loc0         [+56] Fseq[<>1__state]
N001 (  1,  1) [000045] ------------              \--*  CNS_INT   int    -1

***** BB01
STMT00014 (IL 0x04F...  ???)
N003 ( 17,  9) [000070] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
N002 (  3,  3) [000068] ------------ arg0 in rcx  \--*  LCL_VAR_ADDR long   V07 loc0         

***** BB01
STMT00015 (IL 0x05D...  ???)
N003 (  3,  4) [000078] -A--G---R---              *  ASG       ref   
N002 (  1,  1) [000077] D------N----              +--*  LCL_VAR   ref    V10 tmp2         
N001 (  3,  4) [000076] ----G-------              \--*  LCL_FLD   ref    V07 loc0         [+72] Fseq[<>t__builder, m_task]

***** BB01
STMT00017 (IL 0x05D...  ???)
N003 (  5,  4) [000085] -A------R---              *  ASG       ref   
N002 (  3,  2) [000084] D------N----              +--*  LCL_VAR   ref    V11 tmp3         
N001 (  1,  1) [000079] ------------              \--*  LCL_VAR   ref    V10 tmp2         

***** BB01
STMT00016 (IL 0x05D...  ???)
N004 (  5,  5) [000083] ------------              *  JTRUE     void  
N003 (  3,  3) [000082] J------N----              \--*  NE        int   
N001 (  1,  1) [000080] ------------                 +--*  LCL_VAR   ref    V10 tmp2         
N002 (  1,  1) [000081] ------------                 \--*  CNS_INT   ref    null

------------ BB02 [05D..05E), preds={BB01} succs={BB03}

***** BB02
STMT00018 (IL 0x05D...  ???)
N005 ( 21, 13) [000095] -ACXG---R---              *  ASG       ref   
N004 (  3,  2) [000094] D------N----              +--*  LCL_VAR   ref    V11 tmp3         
N003 ( 17, 10) [000093] --CXG-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise
N002 (  3,  3) [000089] ------------ this in rcx     \--*  LCL_FLD_ADDR byref  V07 loc0         [+72] Fseq[<>t__builder]

------------ BB03 [05D..05E) (return), preds={BB01,BB02} succs={}

***** BB03
STMT00012 (IL   ???...  ???)
N002 (  4,  3) [000061] ------------              *  RETURN    ref   
N001 (  3,  2) [000088] ------------              \--*  LCL_VAR   ref    V11 tmp3         

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Build SSA representation
*************** In SsaBuilder::Build()
[SsaBuilder] Max block count is 4.

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)-> BB03 ( cond )                     i label target hascall gcsafe 
BB02 [0004]  1       BB01                  0.25    [05D..05E)                                     i hascall gcsafe 
BB03 [0005]  2       BB01,BB02             1       [05D..05E)        (return)                     i label target gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
[SsaBuilder] Topologically sorted the graph.
[SsaBuilder::ComputeImmediateDom]

Inside fgBuildDomTree

After computing the Dominance Tree:
BB01 : BB03 BB02 

*************** In fgLocalVarLiveness()
In fgLocalVarLivenessInit
Tracked variable (10 out of 13) table:
V10 tmp2          [   ref]: refCnt =    3, refCntWtd =   6   
V00 arg0          [   ref]: refCnt =    3, refCntWtd =   3   
V01 arg1          [   ref]: refCnt =    3, refCntWtd =   3   
V02 arg2          [   ref]: refCnt =    3, refCntWtd =   3   
V03 arg3          [   int]: refCnt =    3, refCntWtd =   3   
V11 tmp3          [   ref]: refCnt =    3, refCntWtd =   2.25
V12 tmp4          [   ref]: refCnt =    2, refCntWtd =   2   
V04 arg4          [   ref]: refCnt =    1, refCntWtd =   1   
V06 arg6          [   ref]: refCnt =    1, refCntWtd =   1   
V05 arg5          [  bool]: refCnt =    1, refCntWtd =   1   

*************** In fgPerBlockLocalVarLiveness()
BB01 USE(7)={    V00 V01 V02 V03         V04 V06 V05} + ByrefExposed + GcHeap
     DEF(3)={V10                 V11 V12            } + ByrefExposed* + GcHeap*

BB02 USE(0)={   } + ByrefExposed + GcHeap
     DEF(1)={V11} + ByrefExposed* + GcHeap*

BB03 USE(1)={V11}
     DEF(0)={   }

** Memory liveness computed, GcHeap states and ByrefExposed states diverge
*************** In fgInterBlockLocalVarLiveness()

BB liveness after fgLiveVarAnalysis():

BB01 IN (7)={V00 V01 V02 V03     V04 V06 V05} + ByrefExposed + GcHeap
     OUT(1)={                V11            } + ByrefExposed + GcHeap

BB02 IN (0)={   } + ByrefExposed + GcHeap
     OUT(1)={V11}

BB03 IN (1)={V11}
     OUT(0)={   }

*************** In optRemoveRedundantZeroInits()
*************** In SsaBuilder::InsertPhiFunctions()
Inserting phi functions:
Added PHI definition for V11 at start of BB03.
*************** In SsaBuilder::RenameVariables()

After fgSsaBuild:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)-> BB03 ( cond )                     i label target hascall gcsafe 
BB02 [0004]  1       BB01                  0.25    [05D..05E)                                     i hascall gcsafe 
BB03 [0005]  2       BB01,BB02             1       [05D..05E)        (return)                     i label target gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06A) -> BB03 (cond), preds={} succs={BB02,BB03}

***** BB01
STMT00013 (IL 0x000...  ???)
N003 (  5,  4) [000100] -A------R---              *  ASG       ref   
N002 (  3,  2) [000098] D------N----              +--*  LCL_VAR   ref    V12 tmp4         d:2
N001 (  1,  1) [000099] ------------              \--*  CNS_INT   ref    null

***** BB01
STMT00001 (IL   ???...  ???)
N005 ( 10, 10) [000107] -A--G---R---              *  ASG       ref   
N004 (  6,  7) [000105] *---G--N----              +--*  IND       ref   
N003 (  3,  5) [000103] ----G-------              |  \--*  ADDR      byref 
N002 (  3,  4) [000104] U---G--N----              |     \--*  LCL_FLD   struct V07 loc0         [+72] Fseq[<>t__builder, m_task]
N001 (  3,  2) [000106] ------------              \--*  LCL_VAR   ref    V12 tmp4         u:2 (last use)

***** BB01
STMT00002 (IL 0x00C...0x00F)
N003 (  5,  6) [000012] -A--G---R---              *  ASG       ref   
N002 (  3,  4) [000011] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+16] Fseq[paths]
N001 (  1,  1) [000010] ------------              \--*  LCL_VAR   ref    V00 arg0         u:1 (last use)

***** BB01
STMT00003 (IL 0x014...0x017)
N003 (  5,  6) [000017] -A--G---R---              *  ASG       ref   
N002 (  3,  4) [000016] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+0] Fseq[outputPath]
N001 (  1,  1) [000015] ------------              \--*  LCL_VAR   ref    V01 arg1         u:1 (last use)

***** BB01
STMT00004 (IL 0x01C...0x01F)
N003 (  5,  6) [000022] -A--G---R---              *  ASG       ref   
N002 (  3,  4) [000021] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+8] Fseq[msBuildPath]
N001 (  1,  1) [000020] ------------              \--*  LCL_VAR   ref    V02 arg2         u:1 (last use)

***** BB01
STMT00005 (IL 0x024...0x027)
N003 (  5,  6) [000027] -A--G---R---              *  ASG       int   
N002 (  3,  4) [000026] U---G--N----              +--*  LCL_FLD   int    V07 loc0         [+60] Fseq[logLevel]
N001 (  1,  1) [000025] ------------              \--*  LCL_VAR   int    V03 arg3         u:1 (last use)

***** BB01
STMT00006 (IL 0x02C...0x030)
N003 (  7,  7) [000032] -A--G---R---              *  ASG       ref   
N002 (  3,  4) [000031] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+24] Fseq[jobName]
N001 (  3,  2) [000030] ------------              \--*  LCL_VAR   ref    V04 arg4         u:1 (last use)

***** BB01
STMT00007 (IL 0x035...0x039)
N004 (  9, 10) [000037] -A--G---R---              *  ASG       bool  
N003 (  4,  5) [000036] U---G--N----              +--*  LCL_FLD   bool   V07 loc0         [+68] Fseq[isParent]
N002 (  4,  4) [000108] ------------              \--*  CAST      int <- bool <- int
N001 (  3,  2) [000035] ------------                 \--*  LCL_VAR   int    V05 arg5         u:1 (last use)

***** BB01
STMT00008 (IL 0x03E...0x042)
N003 (  7,  7) [000042] -A--G---R---              *  ASG       ref   
N002 (  3,  4) [000041] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+32] Fseq[matches]
N001 (  3,  2) [000040] ------------              \--*  LCL_VAR   ref    V06 arg6         u:1 (last use)

***** BB01
STMT00009 (IL 0x047...0x04A)
N003 (  5,  6) [000047] -A--G---R---              *  ASG       int   
N002 (  3,  4) [000046] U---G--N----              +--*  LCL_FLD   int    V07 loc0         [+56] Fseq[<>1__state]
N001 (  1,  1) [000045] ------------              \--*  CNS_INT   int    -1

***** BB01
STMT00014 (IL 0x04F...  ???)
N003 ( 17,  9) [000070] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
N002 (  3,  3) [000068] ------------ arg0 in rcx  \--*  LCL_VAR_ADDR long   V07 loc0         

***** BB01
STMT00015 (IL 0x05D...  ???)
N003 (  3,  4) [000078] -A--G---R---              *  ASG       ref   
N002 (  1,  1) [000077] D------N----              +--*  LCL_VAR   ref    V10 tmp2         d:2
N001 (  3,  4) [000076] ----G-------              \--*  LCL_FLD   ref    V07 loc0         [+72] Fseq[<>t__builder, m_task]

***** BB01
STMT00017 (IL 0x05D...  ???)
N003 (  5,  4) [000085] -A------R---              *  ASG       ref   
N002 (  3,  2) [000084] D------N----              +--*  LCL_VAR   ref    V11 tmp3         d:2
N001 (  1,  1) [000079] ------------              \--*  LCL_VAR   ref    V10 tmp2         u:2

***** BB01
STMT00016 (IL 0x05D...  ???)
N004 (  5,  5) [000083] ------------              *  JTRUE     void  
N003 (  3,  3) [000082] J------N----              \--*  NE        int   
N001 (  1,  1) [000080] ------------                 +--*  LCL_VAR   ref    V10 tmp2         u:2 (last use)
N002 (  1,  1) [000081] ------------                 \--*  CNS_INT   ref    null

------------ BB02 [05D..05E), preds={BB01} succs={BB03}

***** BB02
STMT00018 (IL 0x05D...  ???)
N005 ( 21, 13) [000095] -ACXG---R---              *  ASG       ref   
N004 (  3,  2) [000094] D------N----              +--*  LCL_VAR   ref    V11 tmp3         d:4
N003 ( 17, 10) [000093] --CXG-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise
N002 (  3,  3) [000089] ------------ this in rcx     \--*  LCL_FLD_ADDR byref  V07 loc0         [+72] Fseq[<>t__builder]

------------ BB03 [05D..05E) (return), preds={BB01,BB02} succs={}

***** BB03
STMT00019 (IL   ???...  ???)
N005 (  0,  0) [000113] -A------R---              *  ASG       ref   
N004 (  0,  0) [000111] D------N----              +--*  LCL_VAR   ref    V11 tmp3         d:3
N003 (  0,  0) [000112] ------------              \--*  PHI       ref   
N001 (  0,  0) [000115] ------------ pred BB02       +--*  PHI_ARG   ref    V11 tmp3         u:4
N002 (  0,  0) [000114] ------------ pred BB01       \--*  PHI_ARG   ref    V11 tmp3         u:2

***** BB03
STMT00012 (IL   ???...  ???)
N002 (  4,  3) [000061] ------------              *  RETURN    ref   
N001 (  3,  2) [000088] ------------              \--*  LCL_VAR   ref    V11 tmp3         u:3 (last use)

-------------------------------------------------------------------------------------------------------------------

*************** Finishing PHASE Build SSA representation
Trees after Build SSA representation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)-> BB03 ( cond )                     i label target hascall gcsafe 
BB02 [0004]  1       BB01                  0.25    [05D..05E)                                     i hascall gcsafe 
BB03 [0005]  2       BB01,BB02             1       [05D..05E)        (return)                     i label target gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06A) -> BB03 (cond), preds={} succs={BB02,BB03}

***** BB01
STMT00013 (IL 0x000...  ???)
N003 (  5,  4) [000100] -A------R---              *  ASG       ref   
N002 (  3,  2) [000098] D------N----              +--*  LCL_VAR   ref    V12 tmp4         d:2
N001 (  1,  1) [000099] ------------              \--*  CNS_INT   ref    null

***** BB01
STMT00001 (IL   ???...  ???)
N005 ( 10, 10) [000107] -A--G---R---              *  ASG       ref   
N004 (  6,  7) [000105] *---G--N----              +--*  IND       ref   
N003 (  3,  5) [000103] ----G-------              |  \--*  ADDR      byref 
N002 (  3,  4) [000104] U---G--N----              |     \--*  LCL_FLD   struct V07 loc0         [+72] Fseq[<>t__builder, m_task]
N001 (  3,  2) [000106] ------------              \--*  LCL_VAR   ref    V12 tmp4         u:2 (last use)

***** BB01
STMT00002 (IL 0x00C...0x00F)
N003 (  5,  6) [000012] -A--G---R---              *  ASG       ref   
N002 (  3,  4) [000011] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+16] Fseq[paths]
N001 (  1,  1) [000010] ------------              \--*  LCL_VAR   ref    V00 arg0         u:1 (last use)

***** BB01
STMT00003 (IL 0x014...0x017)
N003 (  5,  6) [000017] -A--G---R---              *  ASG       ref   
N002 (  3,  4) [000016] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+0] Fseq[outputPath]
N001 (  1,  1) [000015] ------------              \--*  LCL_VAR   ref    V01 arg1         u:1 (last use)

***** BB01
STMT00004 (IL 0x01C...0x01F)
N003 (  5,  6) [000022] -A--G---R---              *  ASG       ref   
N002 (  3,  4) [000021] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+8] Fseq[msBuildPath]
N001 (  1,  1) [000020] ------------              \--*  LCL_VAR   ref    V02 arg2         u:1 (last use)

***** BB01
STMT00005 (IL 0x024...0x027)
N003 (  5,  6) [000027] -A--G---R---              *  ASG       int   
N002 (  3,  4) [000026] U---G--N----              +--*  LCL_FLD   int    V07 loc0         [+60] Fseq[logLevel]
N001 (  1,  1) [000025] ------------              \--*  LCL_VAR   int    V03 arg3         u:1 (last use)

***** BB01
STMT00006 (IL 0x02C...0x030)
N003 (  7,  7) [000032] -A--G---R---              *  ASG       ref   
N002 (  3,  4) [000031] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+24] Fseq[jobName]
N001 (  3,  2) [000030] ------------              \--*  LCL_VAR   ref    V04 arg4         u:1 (last use)

***** BB01
STMT00007 (IL 0x035...0x039)
N004 (  9, 10) [000037] -A--G---R---              *  ASG       bool  
N003 (  4,  5) [000036] U---G--N----              +--*  LCL_FLD   bool   V07 loc0         [+68] Fseq[isParent]
N002 (  4,  4) [000108] ------------              \--*  CAST      int <- bool <- int
N001 (  3,  2) [000035] ------------                 \--*  LCL_VAR   int    V05 arg5         u:1 (last use)

***** BB01
STMT00008 (IL 0x03E...0x042)
N003 (  7,  7) [000042] -A--G---R---              *  ASG       ref   
N002 (  3,  4) [000041] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+32] Fseq[matches]
N001 (  3,  2) [000040] ------------              \--*  LCL_VAR   ref    V06 arg6         u:1 (last use)

***** BB01
STMT00009 (IL 0x047...0x04A)
N003 (  5,  6) [000047] -A--G---R---              *  ASG       int   
N002 (  3,  4) [000046] U---G--N----              +--*  LCL_FLD   int    V07 loc0         [+56] Fseq[<>1__state]
N001 (  1,  1) [000045] ------------              \--*  CNS_INT   int    -1

***** BB01
STMT00014 (IL 0x04F...  ???)
N003 ( 17,  9) [000070] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
N002 (  3,  3) [000068] ------------ arg0 in rcx  \--*  LCL_VAR_ADDR long   V07 loc0         

***** BB01
STMT00015 (IL 0x05D...  ???)
N003 (  3,  4) [000078] -A--G---R---              *  ASG       ref   
N002 (  1,  1) [000077] D------N----              +--*  LCL_VAR   ref    V10 tmp2         d:2
N001 (  3,  4) [000076] ----G-------              \--*  LCL_FLD   ref    V07 loc0         [+72] Fseq[<>t__builder, m_task]

***** BB01
STMT00017 (IL 0x05D...  ???)
N003 (  5,  4) [000085] -A------R---              *  ASG       ref   
N002 (  3,  2) [000084] D------N----              +--*  LCL_VAR   ref    V11 tmp3         d:2
N001 (  1,  1) [000079] ------------              \--*  LCL_VAR   ref    V10 tmp2         u:2

***** BB01
STMT00016 (IL 0x05D...  ???)
N004 (  5,  5) [000083] ------------              *  JTRUE     void  
N003 (  3,  3) [000082] J------N----              \--*  NE        int   
N001 (  1,  1) [000080] ------------                 +--*  LCL_VAR   ref    V10 tmp2         u:2 (last use)
N002 (  1,  1) [000081] ------------                 \--*  CNS_INT   ref    null

------------ BB02 [05D..05E), preds={BB01} succs={BB03}

***** BB02
STMT00018 (IL 0x05D...  ???)
N005 ( 21, 13) [000095] -ACXG---R---              *  ASG       ref   
N004 (  3,  2) [000094] D------N----              +--*  LCL_VAR   ref    V11 tmp3         d:4
N003 ( 17, 10) [000093] --CXG-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise
N002 (  3,  3) [000089] ------------ this in rcx     \--*  LCL_FLD_ADDR byref  V07 loc0         [+72] Fseq[<>t__builder]

------------ BB03 [05D..05E) (return), preds={BB01,BB02} succs={}

***** BB03
STMT00019 (IL   ???...  ???)
N005 (  0,  0) [000113] -A------R---              *  ASG       ref   
N004 (  0,  0) [000111] D------N----              +--*  LCL_VAR   ref    V11 tmp3         d:3
N003 (  0,  0) [000112] ------------              \--*  PHI       ref   
N001 (  0,  0) [000115] ------------ pred BB02       +--*  PHI_ARG   ref    V11 tmp3         u:4
N002 (  0,  0) [000114] ------------ pred BB01       \--*  PHI_ARG   ref    V11 tmp3         u:2

***** BB03
STMT00012 (IL   ???...  ???)
N002 (  4,  3) [000061] ------------              *  RETURN    ref   
N001 (  3,  2) [000088] ------------              \--*  LCL_VAR   ref    V11 tmp3         u:3 (last use)

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist

*************** Starting PHASE Early Value Propagation
*************** In optEarlyProp()

After optEarlyProp:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)-> BB03 ( cond )                     i label target hascall gcsafe 
BB02 [0004]  1       BB01                  0.25    [05D..05E)                                     i hascall gcsafe 
BB03 [0005]  2       BB01,BB02             1       [05D..05E)        (return)                     i label target gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06A) -> BB03 (cond), preds={} succs={BB02,BB03}

***** BB01
STMT00013 (IL 0x000...  ???)
N003 (  5,  4) [000100] -A------R---              *  ASG       ref   
N002 (  3,  2) [000098] D------N----              +--*  LCL_VAR   ref    V12 tmp4         d:2
N001 (  1,  1) [000099] ------------              \--*  CNS_INT   ref    null

***** BB01
STMT00001 (IL   ???...  ???)
N005 ( 10, 10) [000107] -A--G---R---              *  ASG       ref   
N004 (  6,  7) [000105] *---G--N----              +--*  IND       ref   
N003 (  3,  5) [000103] ----G-------              |  \--*  ADDR      byref 
N002 (  3,  4) [000104] U---G--N----              |     \--*  LCL_FLD   struct V07 loc0         [+72] Fseq[<>t__builder, m_task]
N001 (  3,  2) [000106] ------------              \--*  LCL_VAR   ref    V12 tmp4         u:2 (last use)

***** BB01
STMT00002 (IL 0x00C...0x00F)
N003 (  5,  6) [000012] -A--G---R---              *  ASG       ref   
N002 (  3,  4) [000011] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+16] Fseq[paths]
N001 (  1,  1) [000010] ------------              \--*  LCL_VAR   ref    V00 arg0         u:1 (last use)

***** BB01
STMT00003 (IL 0x014...0x017)
N003 (  5,  6) [000017] -A--G---R---              *  ASG       ref   
N002 (  3,  4) [000016] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+0] Fseq[outputPath]
N001 (  1,  1) [000015] ------------              \--*  LCL_VAR   ref    V01 arg1         u:1 (last use)

***** BB01
STMT00004 (IL 0x01C...0x01F)
N003 (  5,  6) [000022] -A--G---R---              *  ASG       ref   
N002 (  3,  4) [000021] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+8] Fseq[msBuildPath]
N001 (  1,  1) [000020] ------------              \--*  LCL_VAR   ref    V02 arg2         u:1 (last use)

***** BB01
STMT00005 (IL 0x024...0x027)
N003 (  5,  6) [000027] -A--G---R---              *  ASG       int   
N002 (  3,  4) [000026] U---G--N----              +--*  LCL_FLD   int    V07 loc0         [+60] Fseq[logLevel]
N001 (  1,  1) [000025] ------------              \--*  LCL_VAR   int    V03 arg3         u:1 (last use)

***** BB01
STMT00006 (IL 0x02C...0x030)
N003 (  7,  7) [000032] -A--G---R---              *  ASG       ref   
N002 (  3,  4) [000031] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+24] Fseq[jobName]
N001 (  3,  2) [000030] ------------              \--*  LCL_VAR   ref    V04 arg4         u:1 (last use)

***** BB01
STMT00007 (IL 0x035...0x039)
N004 (  9, 10) [000037] -A--G---R---              *  ASG       bool  
N003 (  4,  5) [000036] U---G--N----              +--*  LCL_FLD   bool   V07 loc0         [+68] Fseq[isParent]
N002 (  4,  4) [000108] ------------              \--*  CAST      int <- bool <- int
N001 (  3,  2) [000035] ------------                 \--*  LCL_VAR   int    V05 arg5         u:1 (last use)

***** BB01
STMT00008 (IL 0x03E...0x042)
N003 (  7,  7) [000042] -A--G---R---              *  ASG       ref   
N002 (  3,  4) [000041] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+32] Fseq[matches]
N001 (  3,  2) [000040] ------------              \--*  LCL_VAR   ref    V06 arg6         u:1 (last use)

***** BB01
STMT00009 (IL 0x047...0x04A)
N003 (  5,  6) [000047] -A--G---R---              *  ASG       int   
N002 (  3,  4) [000046] U---G--N----              +--*  LCL_FLD   int    V07 loc0         [+56] Fseq[<>1__state]
N001 (  1,  1) [000045] ------------              \--*  CNS_INT   int    -1

***** BB01
STMT00014 (IL 0x04F...  ???)
N003 ( 17,  9) [000070] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
N002 (  3,  3) [000068] ------------ arg0 in rcx  \--*  LCL_VAR_ADDR long   V07 loc0         

***** BB01
STMT00015 (IL 0x05D...  ???)
N003 (  3,  4) [000078] -A--G---R---              *  ASG       ref   
N002 (  1,  1) [000077] D------N----              +--*  LCL_VAR   ref    V10 tmp2         d:2
N001 (  3,  4) [000076] ----G-------              \--*  LCL_FLD   ref    V07 loc0         [+72] Fseq[<>t__builder, m_task]

***** BB01
STMT00017 (IL 0x05D...  ???)
N003 (  5,  4) [000085] -A------R---              *  ASG       ref   
N002 (  3,  2) [000084] D------N----              +--*  LCL_VAR   ref    V11 tmp3         d:2
N001 (  1,  1) [000079] ------------              \--*  LCL_VAR   ref    V10 tmp2         u:2

***** BB01
STMT00016 (IL 0x05D...  ???)
N004 (  5,  5) [000083] ------------              *  JTRUE     void  
N003 (  3,  3) [000082] J------N----              \--*  NE        int   
N001 (  1,  1) [000080] ------------                 +--*  LCL_VAR   ref    V10 tmp2         u:2 (last use)
N002 (  1,  1) [000081] ------------                 \--*  CNS_INT   ref    null

------------ BB02 [05D..05E), preds={BB01} succs={BB03}

***** BB02
STMT00018 (IL 0x05D...  ???)
N005 ( 21, 13) [000095] -ACXG---R---              *  ASG       ref   
N004 (  3,  2) [000094] D------N----              +--*  LCL_VAR   ref    V11 tmp3         d:4
N003 ( 17, 10) [000093] --CXG-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise
N002 (  3,  3) [000089] ------------ this in rcx     \--*  LCL_FLD_ADDR byref  V07 loc0         [+72] Fseq[<>t__builder]

------------ BB03 [05D..05E) (return), preds={BB01,BB02} succs={}

***** BB03
STMT00019 (IL   ???...  ???)
N005 (  0,  0) [000113] -A------R---              *  ASG       ref   
N004 (  0,  0) [000111] D------N----              +--*  LCL_VAR   ref    V11 tmp3         d:3
N003 (  0,  0) [000112] ------------              \--*  PHI       ref   
N001 (  0,  0) [000115] ------------ pred BB02       +--*  PHI_ARG   ref    V11 tmp3         u:4
N002 (  0,  0) [000114] ------------ pred BB01       \--*  PHI_ARG   ref    V11 tmp3         u:2

***** BB03
STMT00012 (IL   ???...  ???)
N002 (  4,  3) [000061] ------------              *  RETURN    ref   
N001 (  3,  2) [000088] ------------              \--*  LCL_VAR   ref    V11 tmp3         u:3 (last use)

-------------------------------------------------------------------------------------------------------------------

*************** Finishing PHASE Early Value Propagation

*************** Starting PHASE Do value numbering

*************** In fgValueNumber()
Memory Initial Value in BB01 is: $85
The SSA definition for ByrefExposed (#1) at start of BB01 is $85 {InitVal($47)}
The SSA definition for GcHeap (#1) at start of BB01 is $85 {InitVal($47)}

***** BB01, STMT00013(before)
N003 (  5,  4) [000100] -A------R---              *  ASG       ref   
N002 (  3,  2) [000098] D------N----              +--*  LCL_VAR   ref    V12 tmp4         d:2
N001 (  1,  1) [000099] ------------              \--*  CNS_INT   ref    null

N001 [000099]   CNS_INT   null => $VN.Null
N002 [000098]   LCL_VAR   V12 tmp4         d:2 => $VN.Null
N003 [000100]   ASG       => $VN.Null

***** BB01, STMT00013(after)
N003 (  5,  4) [000100] -A------R---              *  ASG       ref    $VN.Null
N002 (  3,  2) [000098] D------N----              +--*  LCL_VAR   ref    V12 tmp4         d:2 $VN.Null
N001 (  1,  1) [000099] ------------              \--*  CNS_INT   ref    null $VN.Null

---------

***** BB01, STMT00001(before)
N005 ( 10, 10) [000107] -A--G---R---              *  ASG       ref   
N004 (  6,  7) [000105] *---G--N----              +--*  IND       ref   
N003 (  3,  5) [000103] ----G-------              |  \--*  ADDR      byref 
N002 (  3,  4) [000104] U---G--N----              |     \--*  LCL_FLD   struct V07 loc0         [+72] Fseq[<>t__builder, m_task]
N001 (  3,  2) [000106] ------------              \--*  LCL_VAR   ref    V12 tmp4         u:2 (last use)

N001 [000106]   LCL_VAR   V12 tmp4         u:2 (last use) => $VN.Null
N002 [000104]   LCL_FLD   V07 loc0         [+72] Fseq[<>t__builder, m_task] => $180 {180}
N003 [000103]   ADDR      => $1c0 {1c0}
  fgCurMemoryVN[ByrefExposed] assigned for PtrToLoc indir at [000107] to VN: $200.
N005 [000107]   ASG       => $VN.Void

***** BB01, STMT00001(after)
N005 ( 10, 10) [000107] -A--G---R---              *  ASG       ref    $VN.Void
N004 (  6,  7) [000105] *---G--N----              +--*  IND       ref    $VN.Null
N003 (  3,  5) [000103] ----G-------              |  \--*  ADDR      byref  $1c0
N002 (  3,  4) [000104] U---G--N----              |     \--*  LCL_FLD   struct V07 loc0         [+72] Fseq[<>t__builder, m_task] $180
N001 (  3,  2) [000106] ------------              \--*  LCL_VAR   ref    V12 tmp4         u:2 (last use) $VN.Null

---------

***** BB01, STMT00002(before)
N003 (  5,  6) [000012] -A--G---R---              *  ASG       ref   
N002 (  3,  4) [000011] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+16] Fseq[paths]
N001 (  1,  1) [000010] ------------              \--*  LCL_VAR   ref    V00 arg0         u:1 (last use)

N001 [000010]   LCL_VAR   V00 arg0         u:1 (last use) => $80 {InitVal($40)}
N002 [000011]   LCL_FLD   V07 loc0         [+16] Fseq[paths] => $141 {141}
  fgCurMemoryVN[ByrefExposed] assigned for local field assign at [000012] to VN: $201.
N003 [000012]   ASG       => $80 {InitVal($40)}

***** BB01, STMT00002(after)
N003 (  5,  6) [000012] -A--G---R---              *  ASG       ref    $80
N002 (  3,  4) [000011] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+16] Fseq[paths] $141
N001 (  1,  1) [000010] ------------              \--*  LCL_VAR   ref    V00 arg0         u:1 (last use) $80

---------

***** BB01, STMT00003(before)
N003 (  5,  6) [000017] -A--G---R---              *  ASG       ref   
N002 (  3,  4) [000016] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+0] Fseq[outputPath]
N001 (  1,  1) [000015] ------------              \--*  LCL_VAR   ref    V01 arg1         u:1 (last use)

N001 [000015]   LCL_VAR   V01 arg1         u:1 (last use) => $81 {InitVal($41)}
N002 [000016]   LCL_FLD   V07 loc0         [+0] Fseq[outputPath] => $142 {142}
  fgCurMemoryVN[ByrefExposed] assigned for local field assign at [000017] to VN: $202.
N003 [000017]   ASG       => $81 {InitVal($41)}

***** BB01, STMT00003(after)
N003 (  5,  6) [000017] -A--G---R---              *  ASG       ref    $81
N002 (  3,  4) [000016] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+0] Fseq[outputPath] $142
N001 (  1,  1) [000015] ------------              \--*  LCL_VAR   ref    V01 arg1         u:1 (last use) $81

---------

***** BB01, STMT00004(before)
N003 (  5,  6) [000022] -A--G---R---              *  ASG       ref   
N002 (  3,  4) [000021] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+8] Fseq[msBuildPath]
N001 (  1,  1) [000020] ------------              \--*  LCL_VAR   ref    V02 arg2         u:1 (last use)

N001 [000020]   LCL_VAR   V02 arg2         u:1 (last use) => $82 {InitVal($42)}
N002 [000021]   LCL_FLD   V07 loc0         [+8] Fseq[msBuildPath] => $143 {143}
  fgCurMemoryVN[ByrefExposed] assigned for local field assign at [000022] to VN: $203.
N003 [000022]   ASG       => $82 {InitVal($42)}

***** BB01, STMT00004(after)
N003 (  5,  6) [000022] -A--G---R---              *  ASG       ref    $82
N002 (  3,  4) [000021] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+8] Fseq[msBuildPath] $143
N001 (  1,  1) [000020] ------------              \--*  LCL_VAR   ref    V02 arg2         u:1 (last use) $82

---------

***** BB01, STMT00005(before)
N003 (  5,  6) [000027] -A--G---R---              *  ASG       int   
N002 (  3,  4) [000026] U---G--N----              +--*  LCL_FLD   int    V07 loc0         [+60] Fseq[logLevel]
N001 (  1,  1) [000025] ------------              \--*  LCL_VAR   int    V03 arg3         u:1 (last use)

N001 [000025]   LCL_VAR   V03 arg3         u:1 (last use) => $c0 {InitVal($43)}
N002 [000026]   LCL_FLD   V07 loc0         [+60] Fseq[logLevel] => $240 {240}
  fgCurMemoryVN[ByrefExposed] assigned for local field assign at [000027] to VN: $204.
N003 [000027]   ASG       => $c0 {InitVal($43)}

***** BB01, STMT00005(after)
N003 (  5,  6) [000027] -A--G---R---              *  ASG       int    $c0
N002 (  3,  4) [000026] U---G--N----              +--*  LCL_FLD   int    V07 loc0         [+60] Fseq[logLevel] $240
N001 (  1,  1) [000025] ------------              \--*  LCL_VAR   int    V03 arg3         u:1 (last use) $c0

---------

***** BB01, STMT00006(before)
N003 (  7,  7) [000032] -A--G---R---              *  ASG       ref   
N002 (  3,  4) [000031] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+24] Fseq[jobName]
N001 (  3,  2) [000030] ------------              \--*  LCL_VAR   ref    V04 arg4         u:1 (last use)

N001 [000030]   LCL_VAR   V04 arg4         u:1 (last use) => $83 {InitVal($44)}
N002 [000031]   LCL_FLD   V07 loc0         [+24] Fseq[jobName] => $144 {144}
  fgCurMemoryVN[ByrefExposed] assigned for local field assign at [000032] to VN: $205.
N003 [000032]   ASG       => $83 {InitVal($44)}

***** BB01, STMT00006(after)
N003 (  7,  7) [000032] -A--G---R---              *  ASG       ref    $83
N002 (  3,  4) [000031] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+24] Fseq[jobName] $144
N001 (  3,  2) [000030] ------------              \--*  LCL_VAR   ref    V04 arg4         u:1 (last use) $83

---------

***** BB01, STMT00007(before)
N004 (  9, 10) [000037] -A--G---R---              *  ASG       bool  
N003 (  4,  5) [000036] U---G--N----              +--*  LCL_FLD   bool   V07 loc0         [+68] Fseq[isParent]
N002 (  4,  4) [000108] ------------              \--*  CAST      int <- bool <- int
N001 (  3,  2) [000035] ------------                 \--*  LCL_VAR   int    V05 arg5         u:1 (last use)

N001 [000035]   LCL_VAR   V05 arg5         u:1 (last use) => $100 {InitVal($45)}
    VNForCastOper(bool) is $44
N002 [000108]   CAST      => $280 {Cast($100, $44)}
N003 [000036]   LCL_FLD   V07 loc0         [+68] Fseq[isParent] => $2c0 {2c0}
    VNForCastOper(bool) is $44
  fgCurMemoryVN[ByrefExposed] assigned for local field assign at [000037] to VN: $206.
N004 [000037]   ASG       => $281 {Cast($280, $44)}

***** BB01, STMT00007(after)
N004 (  9, 10) [000037] -A--G---R---              *  ASG       bool   $281
N003 (  4,  5) [000036] U---G--N----              +--*  LCL_FLD   bool   V07 loc0         [+68] Fseq[isParent] $2c0
N002 (  4,  4) [000108] ------------              \--*  CAST      int <- bool <- int $280
N001 (  3,  2) [000035] ------------                 \--*  LCL_VAR   int    V05 arg5         u:1 (last use) $100

---------

***** BB01, STMT00008(before)
N003 (  7,  7) [000042] -A--G---R---              *  ASG       ref   
N002 (  3,  4) [000041] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+32] Fseq[matches]
N001 (  3,  2) [000040] ------------              \--*  LCL_VAR   ref    V06 arg6         u:1 (last use)

N001 [000040]   LCL_VAR   V06 arg6         u:1 (last use) => $84 {InitVal($46)}
N002 [000041]   LCL_FLD   V07 loc0         [+32] Fseq[matches] => $145 {145}
  fgCurMemoryVN[ByrefExposed] assigned for local field assign at [000042] to VN: $207.
N003 [000042]   ASG       => $84 {InitVal($46)}

***** BB01, STMT00008(after)
N003 (  7,  7) [000042] -A--G---R---              *  ASG       ref    $84
N002 (  3,  4) [000041] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+32] Fseq[matches] $145
N001 (  3,  2) [000040] ------------              \--*  LCL_VAR   ref    V06 arg6         u:1 (last use) $84

---------

***** BB01, STMT00009(before)
N003 (  5,  6) [000047] -A--G---R---              *  ASG       int   
N002 (  3,  4) [000046] U---G--N----              +--*  LCL_FLD   int    V07 loc0         [+56] Fseq[<>1__state]
N001 (  1,  1) [000045] ------------              \--*  CNS_INT   int    -1

N001 [000045]   CNS_INT   -1 => $47 {IntCns -1}
N002 [000046]   LCL_FLD   V07 loc0         [+56] Fseq[<>1__state] => $241 {241}
  fgCurMemoryVN[ByrefExposed] assigned for local field assign at [000047] to VN: $208.
N003 [000047]   ASG       => $47 {IntCns -1}

***** BB01, STMT00009(after)
N003 (  5,  6) [000047] -A--G---R---              *  ASG       int    $47
N002 (  3,  4) [000046] U---G--N----              +--*  LCL_FLD   int    V07 loc0         [+56] Fseq[<>1__state] $241
N001 (  1,  1) [000045] ------------              \--*  CNS_INT   int    -1 $47

---------

***** BB01, STMT00014(before)
N003 ( 17,  9) [000070] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
N002 (  3,  3) [000068] ------------ arg0 in rcx  \--*  LCL_VAR_ADDR long   V07 loc0         

N001 [000109]   ARGPLACE  => $300 {300}
N002 [000068]   LCL_VAR_ADDR V07 loc0          => $301 {301}
VN of ARGPLACE tree [000109] updated to $301 {301}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000070] to VN: $146.
N003 [000070]   CALL      => $VN.Void

***** BB01, STMT00014(after)
N003 ( 17,  9) [000070] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void
N002 (  3,  3) [000068] ------------ arg0 in rcx  \--*  LCL_VAR_ADDR long   V07 loc0          $301

---------

***** BB01, STMT00015(before)
N003 (  3,  4) [000078] -A--G---R---              *  ASG       ref   
N002 (  1,  1) [000077] D------N----              +--*  LCL_VAR   ref    V10 tmp2         d:2
N001 (  3,  4) [000076] ----G-------              \--*  LCL_FLD   ref    V07 loc0         [+72] Fseq[<>t__builder, m_task]

N001 [000076]   LCL_FLD   V07 loc0         [+72] Fseq[<>t__builder, m_task] => $147 {147}
N002 [000077]   LCL_VAR   V10 tmp2         d:2 => $147 {147}
N003 [000078]   ASG       => $147 {147}

***** BB01, STMT00015(after)
N003 (  3,  4) [000078] -A--G---R---              *  ASG       ref    $147
N002 (  1,  1) [000077] D------N----              +--*  LCL_VAR   ref    V10 tmp2         d:2 $147
N001 (  3,  4) [000076] ----G-------              \--*  LCL_FLD   ref    V07 loc0         [+72] Fseq[<>t__builder, m_task] $147

---------

***** BB01, STMT00017(before)
N003 (  5,  4) [000085] -A------R---              *  ASG       ref   
N002 (  3,  2) [000084] D------N----              +--*  LCL_VAR   ref    V11 tmp3         d:2
N001 (  1,  1) [000079] ------------              \--*  LCL_VAR   ref    V10 tmp2         u:2

N001 [000079]   LCL_VAR   V10 tmp2         u:2 => $147 {147}
N002 [000084]   LCL_VAR   V11 tmp3         d:2 => $147 {147}
N003 [000085]   ASG       => $147 {147}

***** BB01, STMT00017(after)
N003 (  5,  4) [000085] -A------R---              *  ASG       ref    $147
N002 (  3,  2) [000084] D------N----              +--*  LCL_VAR   ref    V11 tmp3         d:2 $147
N001 (  1,  1) [000079] ------------              \--*  LCL_VAR   ref    V10 tmp2         u:2 $147

---------

***** BB01, STMT00016(before)
N004 (  5,  5) [000083] ------------              *  JTRUE     void  
N003 (  3,  3) [000082] J------N----              \--*  NE        int   
N001 (  1,  1) [000080] ------------                 +--*  LCL_VAR   ref    V10 tmp2         u:2 (last use)
N002 (  1,  1) [000081] ------------                 \--*  CNS_INT   ref    null

N001 [000080]   LCL_VAR   V10 tmp2         u:2 (last use) => $147 {147}
N002 [000081]   CNS_INT   null => $VN.Null
N003 [000082]   NE        => $282 {NE($147, $0)}

***** BB01, STMT00016(after)
N004 (  5,  5) [000083] ------------              *  JTRUE     void  
N003 (  3,  3) [000082] J------N----              \--*  NE        int    $282
N001 (  1,  1) [000080] ------------                 +--*  LCL_VAR   ref    V10 tmp2         u:2 (last use) $147
N002 (  1,  1) [000081] ------------                 \--*  CNS_INT   ref    null $VN.Null

finish(BB01).
   Succ(BB02).
     Not yet completed.
     All preds complete, adding to allDone.
   Succ(BB03).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
       Was necessary.
The SSA definition for ByrefExposed (#2) at start of BB02 is $209 {209}
The SSA definition for GcHeap (#3) at start of BB02 is $146 {146}

***** BB02, STMT00018(before)
N005 ( 21, 13) [000095] -ACXG---R---              *  ASG       ref   
N004 (  3,  2) [000094] D------N----              +--*  LCL_VAR   ref    V11 tmp3         d:4
N003 ( 17, 10) [000093] --CXG-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise
N002 (  3,  3) [000089] ------------ this in rcx     \--*  LCL_FLD_ADDR byref  V07 loc0         [+72] Fseq[<>t__builder]

N001 [000110]   ARGPLACE  => $1c1 {1c1}
N002 [000089]   LCL_FLD_ADDR V07 loc0         [+72] Fseq[<>t__builder] => $1c2 {1c2}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000093] to VN: $14b.
N003 [000093]   CALL      => $14a {14a}
N004 [000094]   LCL_VAR   V11 tmp3         d:4 => $14a {14a}
N005 [000095]   ASG       => $14a {14a}

***** BB02, STMT00018(after)
N005 ( 21, 13) [000095] -ACXG---R---              *  ASG       ref    $14a
N004 (  3,  2) [000094] D------N----              +--*  LCL_VAR   ref    V11 tmp3         d:4 $14a
N003 ( 17, 10) [000093] --CXG-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise $14a
N002 (  3,  3) [000089] ------------ this in rcx     \--*  LCL_FLD_ADDR byref  V07 loc0         [+72] Fseq[<>t__builder] $1c2

finish(BB02).
   Succ(BB03).
     Not yet completed.
     All preds complete, adding to allDone.
SSA PHI definition: set VN of local 11/3 to $380 {PhiDef($b, $3, $340)} .
The SSA definition for ByrefExposed (#2) at start of BB03 is $209 {209}
The SSA definition for GcHeap (#3) at start of BB03 is $146 {146}

***** BB03, STMT00012(before)
N002 (  4,  3) [000061] ------------              *  RETURN    ref   
N001 (  3,  2) [000088] ------------              \--*  LCL_VAR   ref    V11 tmp3         u:3 (last use)

N001 [000088]   LCL_VAR   V11 tmp3         u:3 (last use) => $380 {PhiDef($b, $3, $340)}
N002 [000061]   RETURN    => $14d {14d}

***** BB03, STMT00012(after)
N002 (  4,  3) [000061] ------------              *  RETURN    ref    $14d
N001 (  3,  2) [000088] ------------              \--*  LCL_VAR   ref    V11 tmp3         u:3 (last use) $380

finish(BB03).

*************** Finishing PHASE Do value numbering

*************** Starting PHASE Hoist loop code

*************** Finishing PHASE Hoist loop code

*************** Starting PHASE VN based copy prop
*************** In optVnCopyProp()
Copy Assertion for BB01
  curSsaName stack: { }

							Live vars: {V00 V01 V02 V03 V04 V05 V06} => {V00 V01 V02 V03 V04 V05 V06 V12}
							Live vars: {V00 V01 V02 V03 V04 V05 V06 V12} => {V00 V01 V02 V03 V04 V05 V06}
							Live vars: {V00 V01 V02 V03 V04 V05 V06} => {V01 V02 V03 V04 V05 V06}
							Live vars: {V01 V02 V03 V04 V05 V06} => {V02 V03 V04 V05 V06}
							Live vars: {V02 V03 V04 V05 V06} => {V03 V04 V05 V06}
							Live vars: {V03 V04 V05 V06} => {V04 V05 V06}
							Live vars: {V04 V05 V06} => {V05 V06}
							Live vars: {V05 V06} => {V06}
							Live vars: {V06} => {}
							Live vars: {} => {V10}
							Live vars: {V10} => {V10 V11}
							Live vars: {V10 V11} => {V11}
VN based copy assertion for [000080] V10 @00000147 by [000084] V11 @00000147.
N001 (  1,  1) [000080] ------------              *  LCL_VAR   ref    V10 tmp2         u:2 (last use) $147
copy propagated to:
N001 (  1,  1) [000080] ------------              *  LCL_VAR   ref    V11 tmp3         u:2 (last use) $147
Copy Assertion for BB03
  curSsaName stack: { 0-[000010]:V00 1-[000015]:V01 2-[000020]:V02 3-[000025]:V03 4-[000030]:V04 5-[000035]:V05 6-[000040]:V06 10-[000077]:V10 11-[000084]:V11 12-[000098]:V12 }

							Live vars: {V11} => {}
Copy Assertion for BB02
  curSsaName stack: { 0-[000010]:V00 1-[000015]:V01 2-[000020]:V02 3-[000025]:V03 4-[000030]:V04 5-[000035]:V05 6-[000040]:V06 10-[000077]:V10 11-[000084]:V11 12-[000098]:V12 }

							Live vars: {} => {V11}

*************** Finishing PHASE VN based copy prop

*************** Starting PHASE Optimize Valnum CSEs

*************** In optOptimizeCSEs()
Blocks/Trees at start of optOptimizeCSE phase

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)-> BB03 ( cond )                     i label target hascall gcsafe 
BB02 [0004]  1       BB01                  0.25    [05D..05E)                                     i hascall gcsafe 
BB03 [0005]  2       BB01,BB02             1       [05D..05E)        (return)                     i label target gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06A) -> BB03 (cond), preds={} succs={BB02,BB03}

***** BB01
STMT00013 (IL 0x000...  ???)
N003 (  5,  4) [000100] -A------R---              *  ASG       ref    $VN.Null
N002 (  3,  2) [000098] D------N----              +--*  LCL_VAR   ref    V12 tmp4         d:2 $VN.Null
N001 (  1,  1) [000099] ------------              \--*  CNS_INT   ref    null $VN.Null

***** BB01
STMT00001 (IL   ???...  ???)
N005 ( 10, 10) [000107] -A--G---R---              *  ASG       ref    $VN.Void
N004 (  6,  7) [000105] *---G--N----              +--*  IND       ref    $VN.Null
N003 (  3,  5) [000103] ----G-------              |  \--*  ADDR      byref  $1c0
N002 (  3,  4) [000104] U---G--N----              |     \--*  LCL_FLD   struct V07 loc0         [+72] Fseq[<>t__builder, m_task] $180
N001 (  3,  2) [000106] ------------              \--*  LCL_VAR   ref    V12 tmp4         u:2 (last use) $VN.Null

***** BB01
STMT00002 (IL 0x00C...0x00F)
N003 (  5,  6) [000012] -A--G---R---              *  ASG       ref    $80
N002 (  3,  4) [000011] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+16] Fseq[paths] $141
N001 (  1,  1) [000010] ------------              \--*  LCL_VAR   ref    V00 arg0         u:1 (last use) $80

***** BB01
STMT00003 (IL 0x014...0x017)
N003 (  5,  6) [000017] -A--G---R---              *  ASG       ref    $81
N002 (  3,  4) [000016] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+0] Fseq[outputPath] $142
N001 (  1,  1) [000015] ------------              \--*  LCL_VAR   ref    V01 arg1         u:1 (last use) $81

***** BB01
STMT00004 (IL 0x01C...0x01F)
N003 (  5,  6) [000022] -A--G---R---              *  ASG       ref    $82
N002 (  3,  4) [000021] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+8] Fseq[msBuildPath] $143
N001 (  1,  1) [000020] ------------              \--*  LCL_VAR   ref    V02 arg2         u:1 (last use) $82

***** BB01
STMT00005 (IL 0x024...0x027)
N003 (  5,  6) [000027] -A--G---R---              *  ASG       int    $c0
N002 (  3,  4) [000026] U---G--N----              +--*  LCL_FLD   int    V07 loc0         [+60] Fseq[logLevel] $240
N001 (  1,  1) [000025] ------------              \--*  LCL_VAR   int    V03 arg3         u:1 (last use) $c0

***** BB01
STMT00006 (IL 0x02C...0x030)
N003 (  7,  7) [000032] -A--G---R---              *  ASG       ref    $83
N002 (  3,  4) [000031] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+24] Fseq[jobName] $144
N001 (  3,  2) [000030] ------------              \--*  LCL_VAR   ref    V04 arg4         u:1 (last use) $83

***** BB01
STMT00007 (IL 0x035...0x039)
N004 (  9, 10) [000037] -A--G---R---              *  ASG       bool   $281
N003 (  4,  5) [000036] U---G--N----              +--*  LCL_FLD   bool   V07 loc0         [+68] Fseq[isParent] $2c0
N002 (  4,  4) [000108] ------------              \--*  CAST      int <- bool <- int $280
N001 (  3,  2) [000035] ------------                 \--*  LCL_VAR   int    V05 arg5         u:1 (last use) $100

***** BB01
STMT00008 (IL 0x03E...0x042)
N003 (  7,  7) [000042] -A--G---R---              *  ASG       ref    $84
N002 (  3,  4) [000041] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+32] Fseq[matches] $145
N001 (  3,  2) [000040] ------------              \--*  LCL_VAR   ref    V06 arg6         u:1 (last use) $84

***** BB01
STMT00009 (IL 0x047...0x04A)
N003 (  5,  6) [000047] -A--G---R---              *  ASG       int    $47
N002 (  3,  4) [000046] U---G--N----              +--*  LCL_FLD   int    V07 loc0         [+56] Fseq[<>1__state] $241
N001 (  1,  1) [000045] ------------              \--*  CNS_INT   int    -1 $47

***** BB01
STMT00014 (IL 0x04F...  ???)
N003 ( 17,  9) [000070] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void
N002 (  3,  3) [000068] ------------ arg0 in rcx  \--*  LCL_VAR_ADDR long   V07 loc0          $301

***** BB01
STMT00015 (IL 0x05D...  ???)
N003 (  3,  4) [000078] -A--G---R---              *  ASG       ref    $147
N002 (  1,  1) [000077] D------N----              +--*  LCL_VAR   ref    V10 tmp2         d:2 $147
N001 (  3,  4) [000076] ----G-------              \--*  LCL_FLD   ref    V07 loc0         [+72] Fseq[<>t__builder, m_task] $147

***** BB01
STMT00017 (IL 0x05D...  ???)
N003 (  5,  4) [000085] -A------R---              *  ASG       ref    $147
N002 (  3,  2) [000084] D------N----              +--*  LCL_VAR   ref    V11 tmp3         d:2 $147
N001 (  1,  1) [000079] ------------              \--*  LCL_VAR   ref    V10 tmp2         u:2 $147

***** BB01
STMT00016 (IL 0x05D...  ???)
N004 (  5,  5) [000083] ------------              *  JTRUE     void  
N003 (  3,  3) [000082] J------N----              \--*  NE        int    $282
N001 (  1,  1) [000080] ------------                 +--*  LCL_VAR   ref    V11 tmp3         u:2 (last use) $147
N002 (  1,  1) [000081] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB02 [05D..05E), preds={BB01} succs={BB03}

***** BB02
STMT00018 (IL 0x05D...  ???)
N005 ( 21, 13) [000095] -ACXG---R---              *  ASG       ref    $14a
N004 (  3,  2) [000094] D------N----              +--*  LCL_VAR   ref    V11 tmp3         d:4 $14a
N003 ( 17, 10) [000093] --CXG-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise $14a
N002 (  3,  3) [000089] ------------ this in rcx     \--*  LCL_FLD_ADDR byref  V07 loc0         [+72] Fseq[<>t__builder] $1c2

------------ BB03 [05D..05E) (return), preds={BB01,BB02} succs={}

***** BB03
STMT00019 (IL   ???...  ???)
N005 (  0,  0) [000113] -A------R---              *  ASG       ref   
N004 (  0,  0) [000111] D------N----              +--*  LCL_VAR   ref    V11 tmp3         d:3
N003 (  0,  0) [000112] ------------              \--*  PHI       ref   
N001 (  0,  0) [000115] ------------ pred BB02       +--*  PHI_ARG   ref    V11 tmp3         u:4 $14a
N002 (  0,  0) [000114] ------------ pred BB01       \--*  PHI_ARG   ref    V11 tmp3         u:2 $147

***** BB03
STMT00012 (IL   ???...  ???)
N002 (  4,  3) [000061] ------------              *  RETURN    ref    $14d
N001 (  3,  2) [000088] ------------              \--*  LCL_VAR   ref    V11 tmp3         u:3 (last use) $380

-------------------------------------------------------------------------------------------------------------------

*************** In optOptimizeValnumCSEs()

*************** Finishing PHASE Optimize Valnum CSEs

*************** Starting PHASE Assertion prop
*************** In optAssertionPropMain()
Blocks/Trees at start of phase

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)-> BB03 ( cond )                     i label target hascall gcsafe 
BB02 [0004]  1       BB01                  0.25    [05D..05E)                                     i hascall gcsafe 
BB03 [0005]  2       BB01,BB02             1       [05D..05E)        (return)                     i label target gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06A) -> BB03 (cond), preds={} succs={BB02,BB03}

***** BB01
STMT00013 (IL 0x000...  ???)
N003 (  5,  4) [000100] -A------R---              *  ASG       ref    $VN.Null
N002 (  3,  2) [000098] D------N----              +--*  LCL_VAR   ref    V12 tmp4         d:2 $VN.Null
N001 (  1,  1) [000099] ------------              \--*  CNS_INT   ref    null $VN.Null

***** BB01
STMT00001 (IL   ???...  ???)
N005 ( 10, 10) [000107] -A--G---R---              *  ASG       ref    $VN.Void
N004 (  6,  7) [000105] *---G--N----              +--*  IND       ref    $VN.Null
N003 (  3,  5) [000103] ----G-------              |  \--*  ADDR      byref  $1c0
N002 (  3,  4) [000104] U---G--N----              |     \--*  LCL_FLD   struct V07 loc0         [+72] Fseq[<>t__builder, m_task] $180
N001 (  3,  2) [000106] ------------              \--*  LCL_VAR   ref    V12 tmp4         u:2 (last use) $VN.Null

***** BB01
STMT00002 (IL 0x00C...0x00F)
N003 (  5,  6) [000012] -A--G---R---              *  ASG       ref    $80
N002 (  3,  4) [000011] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+16] Fseq[paths] $141
N001 (  1,  1) [000010] ------------              \--*  LCL_VAR   ref    V00 arg0         u:1 (last use) $80

***** BB01
STMT00003 (IL 0x014...0x017)
N003 (  5,  6) [000017] -A--G---R---              *  ASG       ref    $81
N002 (  3,  4) [000016] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+0] Fseq[outputPath] $142
N001 (  1,  1) [000015] ------------              \--*  LCL_VAR   ref    V01 arg1         u:1 (last use) $81

***** BB01
STMT00004 (IL 0x01C...0x01F)
N003 (  5,  6) [000022] -A--G---R---              *  ASG       ref    $82
N002 (  3,  4) [000021] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+8] Fseq[msBuildPath] $143
N001 (  1,  1) [000020] ------------              \--*  LCL_VAR   ref    V02 arg2         u:1 (last use) $82

***** BB01
STMT00005 (IL 0x024...0x027)
N003 (  5,  6) [000027] -A--G---R---              *  ASG       int    $c0
N002 (  3,  4) [000026] U---G--N----              +--*  LCL_FLD   int    V07 loc0         [+60] Fseq[logLevel] $240
N001 (  1,  1) [000025] ------------              \--*  LCL_VAR   int    V03 arg3         u:1 (last use) $c0

***** BB01
STMT00006 (IL 0x02C...0x030)
N003 (  7,  7) [000032] -A--G---R---              *  ASG       ref    $83
N002 (  3,  4) [000031] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+24] Fseq[jobName] $144
N001 (  3,  2) [000030] ------------              \--*  LCL_VAR   ref    V04 arg4         u:1 (last use) $83

***** BB01
STMT00007 (IL 0x035...0x039)
N004 (  9, 10) [000037] -A--G---R---              *  ASG       bool   $281
N003 (  4,  5) [000036] U---G--N----              +--*  LCL_FLD   bool   V07 loc0         [+68] Fseq[isParent] $2c0
N002 (  4,  4) [000108] ------------              \--*  CAST      int <- bool <- int $280
N001 (  3,  2) [000035] ------------                 \--*  LCL_VAR   int    V05 arg5         u:1 (last use) $100

***** BB01
STMT00008 (IL 0x03E...0x042)
N003 (  7,  7) [000042] -A--G---R---              *  ASG       ref    $84
N002 (  3,  4) [000041] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+32] Fseq[matches] $145
N001 (  3,  2) [000040] ------------              \--*  LCL_VAR   ref    V06 arg6         u:1 (last use) $84

***** BB01
STMT00009 (IL 0x047...0x04A)
N003 (  5,  6) [000047] -A--G---R---              *  ASG       int    $47
N002 (  3,  4) [000046] U---G--N----              +--*  LCL_FLD   int    V07 loc0         [+56] Fseq[<>1__state] $241
N001 (  1,  1) [000045] ------------              \--*  CNS_INT   int    -1 $47

***** BB01
STMT00014 (IL 0x04F...  ???)
N003 ( 17,  9) [000070] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void
N002 (  3,  3) [000068] ------------ arg0 in rcx  \--*  LCL_VAR_ADDR long   V07 loc0          $301

***** BB01
STMT00015 (IL 0x05D...  ???)
N003 (  3,  4) [000078] -A--G---R---              *  ASG       ref    $147
N002 (  1,  1) [000077] D------N----              +--*  LCL_VAR   ref    V10 tmp2         d:2 $147
N001 (  3,  4) [000076] ----G-------              \--*  LCL_FLD   ref    V07 loc0         [+72] Fseq[<>t__builder, m_task] $147

***** BB01
STMT00017 (IL 0x05D...  ???)
N003 (  5,  4) [000085] -A------R---              *  ASG       ref    $147
N002 (  3,  2) [000084] D------N----              +--*  LCL_VAR   ref    V11 tmp3         d:2 $147
N001 (  1,  1) [000079] ------------              \--*  LCL_VAR   ref    V10 tmp2         u:2 $147

***** BB01
STMT00016 (IL 0x05D...  ???)
N004 (  5,  5) [000083] ------------              *  JTRUE     void  
N003 (  3,  3) [000082] J------N----              \--*  NE        int    $282
N001 (  1,  1) [000080] ------------                 +--*  LCL_VAR   ref    V11 tmp3         u:2 (last use) $147
N002 (  1,  1) [000081] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB02 [05D..05E), preds={BB01} succs={BB03}

***** BB02
STMT00018 (IL 0x05D...  ???)
N005 ( 21, 13) [000095] -ACXG---R---              *  ASG       ref    $14a
N004 (  3,  2) [000094] D------N----              +--*  LCL_VAR   ref    V11 tmp3         d:4 $14a
N003 ( 17, 10) [000093] --CXG-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise $14a
N002 (  3,  3) [000089] ------------ this in rcx     \--*  LCL_FLD_ADDR byref  V07 loc0         [+72] Fseq[<>t__builder] $1c2

------------ BB03 [05D..05E) (return), preds={BB01,BB02} succs={}

***** BB03
STMT00019 (IL   ???...  ???)
N005 (  0,  0) [000113] -A------R---              *  ASG       ref   
N004 (  0,  0) [000111] D------N----              +--*  LCL_VAR   ref    V11 tmp3         d:3
N003 (  0,  0) [000112] ------------              \--*  PHI       ref   
N001 (  0,  0) [000115] ------------ pred BB02       +--*  PHI_ARG   ref    V11 tmp3         u:4 $14a
N002 (  0,  0) [000114] ------------ pred BB01       \--*  PHI_ARG   ref    V11 tmp3         u:2 $147

***** BB03
STMT00012 (IL   ???...  ???)
N002 (  4,  3) [000061] ------------              *  RETURN    ref    $14d
N001 (  3,  2) [000088] ------------              \--*  LCL_VAR   ref    V11 tmp3         u:3 (last use) $380

-------------------------------------------------------------------------------------------------------------------
After constant propagation on [000106]:
STMT00001 (IL   ???...  ???)
N005 ( 10, 10) [000107] -A--G---R---              *  ASG       ref    $VN.Void
N004 (  6,  7) [000105] *---G--N----              +--*  IND       ref    $VN.Null
N003 (  3,  5) [000103] ----G-------              |  \--*  ADDR      byref  $1c0
N002 (  3,  4) [000104] U---G--N----              |     \--*  LCL_FLD   struct V07 loc0         [+72] Fseq[<>t__builder, m_task] $180
               [000116] ------------              \--*  CNS_INT   ref    null $VN.Null

Local V07 should not be enregistered because: was accessed as a local field
optVNAssertionPropCurStmt morphed tree:
N003 (  5,  6) [000107] -A--G---R---              *  ASG       ref    $VN.Void
N002 (  3,  4) [000104] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+72] Fseq[<>t__builder, m_task] $180
N001 (  1,  1) [000116] ------------              \--*  CNS_INT   ref    null $VN.Null

GenTreeNode creates assertion:
N002 (  4,  4) [000108] ------------              *  CAST      int <- bool <- int $280
In BB01 New Global Subrange Assertion: (256, 0) ($100,$0) V05.01 in [0..1] index=#01, mask=0000000000000001
GenTreeNode creates assertion:
N004 (  5,  5) [000083] ------------              *  JTRUE     void  
In BB01 New Global Constant Assertion: (327, 0) ($147,$0) V11.02 != null index=#02, mask=0000000000000002
GenTreeNode creates assertion:
N004 (  5,  5) [000083] ------------              *  JTRUE     void  
In BB01 New Global Constant Assertion: (327, 0) ($147,$0) V11.02 == null index=#03, mask=0000000000000004
BB01 valueGen = 0000000000000004 => BB03 valueGen = 0000000000000002,
BB02 valueGen = 0000000000000000
BB03 valueGen = 0000000000000000
AssertionPropCallback::StartMerge: BB01 in -> 0000000000000000
AssertionPropCallback::EndMerge  : BB01 in -> 0000000000000000

AssertionPropCallback::Changed   : BB01 before out -> 0000000000000007; after out -> 0000000000000004;
		jumpDest before out -> 0000000000000007; jumpDest after out -> 0000000000000002;

AssertionPropCallback::StartMerge: BB02 in -> 0000000000000007
AssertionPropCallback::Merge     : BB02 in -> 0000000000000007, predBlock BB01 out -> 0000000000000004
AssertionPropCallback::EndMerge  : BB02 in -> 0000000000000004

AssertionPropCallback::Changed   : BB02 before out -> 0000000000000007; after out -> 0000000000000004;
		jumpDest before out -> 0000000000000007; jumpDest after out -> 0000000000000004;

AssertionPropCallback::StartMerge: BB03 in -> 0000000000000007
AssertionPropCallback::Merge     : BB03 in -> 0000000000000007, predBlock BB01 out -> 0000000000000004
AssertionPropCallback::Merge     : BB03 in -> 0000000000000002, predBlock BB02 out -> 0000000000000004
AssertionPropCallback::EndMerge  : BB03 in -> 0000000000000000

AssertionPropCallback::Changed   : BB03 before out -> 0000000000000007; after out -> 0000000000000000;
		jumpDest before out -> 0000000000000007; jumpDest after out -> 0000000000000000;

AssertionPropCallback::StartMerge: BB03 in -> 0000000000000000
AssertionPropCallback::Merge     : BB03 in -> 0000000000000000, predBlock BB01 out -> 0000000000000004
AssertionPropCallback::Merge     : BB03 in -> 0000000000000000, predBlock BB02 out -> 0000000000000004
AssertionPropCallback::EndMerge  : BB03 in -> 0000000000000000

AssertionPropCallback::Unchanged  : BB03 out -> 0000000000000000; 		jumpDest out -> 0000000000000000



BB01 valueIn  = 0000000000000000 valueOut = 0000000000000004 => BB03 valueOut= 0000000000000002
BB02 valueIn  = 0000000000000004 valueOut = 0000000000000004
BB03 valueIn  = 0000000000000000 valueOut = 0000000000000000
Propagating 0000000000000000 assertions for BB01, stmt STMT00013, tree [000099], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00013, tree [000098], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00013, tree [000100], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00001, tree [000116], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00001, tree [000104], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00001, tree [000107], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00002, tree [000010], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00002, tree [000011], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00002, tree [000012], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00003, tree [000015], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00003, tree [000016], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00003, tree [000017], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00004, tree [000020], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00004, tree [000021], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00004, tree [000022], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00005, tree [000025], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00005, tree [000026], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00005, tree [000027], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00006, tree [000030], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00006, tree [000031], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00006, tree [000032], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00007, tree [000035], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00007, tree [000108], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00007, tree [000036], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00007, tree [000037], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00008, tree [000040], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00008, tree [000041], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00008, tree [000042], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00009, tree [000045], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00009, tree [000046], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00009, tree [000047], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00014, tree [000109], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00014, tree [000068], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00014, tree [000070], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00015, tree [000076], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00015, tree [000077], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00015, tree [000078], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00017, tree [000079], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00017, tree [000084], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00017, tree [000085], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00016, tree [000080], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00016, tree [000081], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00016, tree [000082], tree -> 0
Failed to find a suitable dominating compare, so we won't optimize
Propagating 0000000000000000 assertions for BB01, stmt STMT00016, tree [000083], tree -> 2
Propagating 0000000000000004 assertions for BB02, stmt STMT00018, tree [000110], tree -> 0
Propagating 0000000000000004 assertions for BB02, stmt STMT00018, tree [000089], tree -> 0
Propagating 0000000000000004 assertions for BB02, stmt STMT00018, tree [000093], tree -> 0
Propagating 0000000000000004 assertions for BB02, stmt STMT00018, tree [000094], tree -> 0
Propagating 0000000000000004 assertions for BB02, stmt STMT00018, tree [000095], tree -> 0
Propagating 0000000000000000 assertions for BB03, stmt STMT00012, tree [000088], tree -> 0
Propagating 0000000000000000 assertions for BB03, stmt STMT00012, tree [000061], tree -> 0
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Assertion prop

*************** Starting PHASE Optimize index checks
*************** In OptimizeRangeChecks()
Blocks/trees before phase

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)-> BB03 ( cond )                     i label target hascall gcsafe 
BB02 [0004]  1       BB01                  0.25    [05D..05E)                                     i hascall gcsafe 
BB03 [0005]  2       BB01,BB02             1       [05D..05E)        (return)                     i label target gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06A) -> BB03 (cond), preds={} succs={BB02,BB03}

***** BB01
STMT00013 (IL 0x000...  ???)
N003 (  5,  4) [000100] -A------R---              *  ASG       ref    $VN.Null
N002 (  3,  2) [000098] D------N----              +--*  LCL_VAR   ref    V12 tmp4         d:2 $VN.Null
N001 (  1,  1) [000099] ------------              \--*  CNS_INT   ref    null $VN.Null

***** BB01
STMT00001 (IL   ???...  ???)
N003 (  5,  6) [000107] -A--G---R---              *  ASG       ref    $VN.Void
N002 (  3,  4) [000104] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+72] Fseq[<>t__builder, m_task] $180
N001 (  1,  1) [000116] ------------              \--*  CNS_INT   ref    null $VN.Null

***** BB01
STMT00002 (IL 0x00C...0x00F)
N003 (  5,  6) [000012] -A--G---R---              *  ASG       ref    $80
N002 (  3,  4) [000011] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+16] Fseq[paths] $141
N001 (  1,  1) [000010] ------------              \--*  LCL_VAR   ref    V00 arg0         u:1 (last use) $80

***** BB01
STMT00003 (IL 0x014...0x017)
N003 (  5,  6) [000017] -A--G---R---              *  ASG       ref    $81
N002 (  3,  4) [000016] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+0] Fseq[outputPath] $142
N001 (  1,  1) [000015] ------------              \--*  LCL_VAR   ref    V01 arg1         u:1 (last use) $81

***** BB01
STMT00004 (IL 0x01C...0x01F)
N003 (  5,  6) [000022] -A--G---R---              *  ASG       ref    $82
N002 (  3,  4) [000021] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+8] Fseq[msBuildPath] $143
N001 (  1,  1) [000020] ------------              \--*  LCL_VAR   ref    V02 arg2         u:1 (last use) $82

***** BB01
STMT00005 (IL 0x024...0x027)
N003 (  5,  6) [000027] -A--G---R---              *  ASG       int    $c0
N002 (  3,  4) [000026] U---G--N----              +--*  LCL_FLD   int    V07 loc0         [+60] Fseq[logLevel] $240
N001 (  1,  1) [000025] ------------              \--*  LCL_VAR   int    V03 arg3         u:1 (last use) $c0

***** BB01
STMT00006 (IL 0x02C...0x030)
N003 (  7,  7) [000032] -A--G---R---              *  ASG       ref    $83
N002 (  3,  4) [000031] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+24] Fseq[jobName] $144
N001 (  3,  2) [000030] ------------              \--*  LCL_VAR   ref    V04 arg4         u:1 (last use) $83

***** BB01
STMT00007 (IL 0x035...0x039)
N004 (  9, 10) [000037] -A--G---R---              *  ASG       bool   $281
N003 (  4,  5) [000036] U---G--N----              +--*  LCL_FLD   bool   V07 loc0         [+68] Fseq[isParent] $2c0
N002 (  4,  4) [000108] ------------              \--*  CAST      int <- bool <- int $280
N001 (  3,  2) [000035] ------------                 \--*  LCL_VAR   int    V05 arg5         u:1 (last use) $100

***** BB01
STMT00008 (IL 0x03E...0x042)
N003 (  7,  7) [000042] -A--G---R---              *  ASG       ref    $84
N002 (  3,  4) [000041] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+32] Fseq[matches] $145
N001 (  3,  2) [000040] ------------              \--*  LCL_VAR   ref    V06 arg6         u:1 (last use) $84

***** BB01
STMT00009 (IL 0x047...0x04A)
N003 (  5,  6) [000047] -A--G---R---              *  ASG       int    $47
N002 (  3,  4) [000046] U---G--N----              +--*  LCL_FLD   int    V07 loc0         [+56] Fseq[<>1__state] $241
N001 (  1,  1) [000045] ------------              \--*  CNS_INT   int    -1 $47

***** BB01
STMT00014 (IL 0x04F...  ???)
N003 ( 17,  9) [000070] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void
N002 (  3,  3) [000068] ------------ arg0 in rcx  \--*  LCL_VAR_ADDR long   V07 loc0          $301

***** BB01
STMT00015 (IL 0x05D...  ???)
N003 (  3,  4) [000078] -A--G---R---              *  ASG       ref    $147
N002 (  1,  1) [000077] D------N----              +--*  LCL_VAR   ref    V10 tmp2         d:2 $147
N001 (  3,  4) [000076] ----G-------              \--*  LCL_FLD   ref    V07 loc0         [+72] Fseq[<>t__builder, m_task] $147

***** BB01
STMT00017 (IL 0x05D...  ???)
N003 (  5,  4) [000085] -A------R---              *  ASG       ref    $147
N002 (  3,  2) [000084] D------N----              +--*  LCL_VAR   ref    V11 tmp3         d:2 $147
N001 (  1,  1) [000079] ------------              \--*  LCL_VAR   ref    V10 tmp2         u:2 $147

***** BB01
STMT00016 (IL 0x05D...  ???)
N004 (  5,  5) [000083] ------------              *  JTRUE     void  
N003 (  3,  3) [000082] J------N----              \--*  NE        int    $282
N001 (  1,  1) [000080] ------------                 +--*  LCL_VAR   ref    V11 tmp3         u:2 (last use) $147
N002 (  1,  1) [000081] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB02 [05D..05E), preds={BB01} succs={BB03}

***** BB02
STMT00018 (IL 0x05D...  ???)
N005 ( 21, 13) [000095] -ACXG---R---              *  ASG       ref    $14a
N004 (  3,  2) [000094] D------N----              +--*  LCL_VAR   ref    V11 tmp3         d:4 $14a
N003 ( 17, 10) [000093] --CXG-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise $14a
N002 (  3,  3) [000089] ------------ this in rcx     \--*  LCL_FLD_ADDR byref  V07 loc0         [+72] Fseq[<>t__builder] $1c2

------------ BB03 [05D..05E) (return), preds={BB01,BB02} succs={}

***** BB03
STMT00019 (IL   ???...  ???)
N005 (  0,  0) [000113] -A------R---              *  ASG       ref   
N004 (  0,  0) [000111] D------N----              +--*  LCL_VAR   ref    V11 tmp3         d:3
N003 (  0,  0) [000112] ------------              \--*  PHI       ref   
N001 (  0,  0) [000115] ------------ pred BB02       +--*  PHI_ARG   ref    V11 tmp3         u:4 $14a
N002 (  0,  0) [000114] ------------ pred BB01       \--*  PHI_ARG   ref    V11 tmp3         u:2 $147

***** BB03
STMT00012 (IL   ???...  ???)
N002 (  4,  3) [000061] ------------              *  RETURN    ref    $14d
N001 (  3,  2) [000088] ------------              \--*  LCL_VAR   ref    V11 tmp3         u:3 (last use) $380

-------------------------------------------------------------------------------------------------------------------

*************** Finishing PHASE Optimize index checks

*************** Starting PHASE Insert GC Polls

*************** Finishing PHASE Insert GC Polls [no changes]

*************** Starting PHASE Determine first cold block

*************** In fgDetermineFirstColdBlock()
No procedure splitting will be done for this method

*************** Finishing PHASE Determine first cold block
Trees before Rationalize IR

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)-> BB03 ( cond )                     i label target hascall gcsafe 
BB02 [0004]  1       BB01                  0.25    [05D..05E)                                     i hascall gcsafe 
BB03 [0005]  2       BB01,BB02             1       [05D..05E)        (return)                     i label target gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06A) -> BB03 (cond), preds={} succs={BB02,BB03}

***** BB01
STMT00013 (IL 0x000...  ???)
N003 (  5,  4) [000100] -A------R---              *  ASG       ref    $VN.Null
N002 (  3,  2) [000098] D------N----              +--*  LCL_VAR   ref    V12 tmp4         d:2 $VN.Null
N001 (  1,  1) [000099] ------------              \--*  CNS_INT   ref    null $VN.Null

***** BB01
STMT00001 (IL   ???...  ???)
N003 (  5,  6) [000107] -A--G---R---              *  ASG       ref    $VN.Void
N002 (  3,  4) [000104] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+72] Fseq[<>t__builder, m_task] $180
N001 (  1,  1) [000116] ------------              \--*  CNS_INT   ref    null $VN.Null

***** BB01
STMT00002 (IL 0x00C...0x00F)
N003 (  5,  6) [000012] -A--G---R---              *  ASG       ref    $80
N002 (  3,  4) [000011] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+16] Fseq[paths] $141
N001 (  1,  1) [000010] ------------              \--*  LCL_VAR   ref    V00 arg0         u:1 (last use) $80

***** BB01
STMT00003 (IL 0x014...0x017)
N003 (  5,  6) [000017] -A--G---R---              *  ASG       ref    $81
N002 (  3,  4) [000016] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+0] Fseq[outputPath] $142
N001 (  1,  1) [000015] ------------              \--*  LCL_VAR   ref    V01 arg1         u:1 (last use) $81

***** BB01
STMT00004 (IL 0x01C...0x01F)
N003 (  5,  6) [000022] -A--G---R---              *  ASG       ref    $82
N002 (  3,  4) [000021] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+8] Fseq[msBuildPath] $143
N001 (  1,  1) [000020] ------------              \--*  LCL_VAR   ref    V02 arg2         u:1 (last use) $82

***** BB01
STMT00005 (IL 0x024...0x027)
N003 (  5,  6) [000027] -A--G---R---              *  ASG       int    $c0
N002 (  3,  4) [000026] U---G--N----              +--*  LCL_FLD   int    V07 loc0         [+60] Fseq[logLevel] $240
N001 (  1,  1) [000025] ------------              \--*  LCL_VAR   int    V03 arg3         u:1 (last use) $c0

***** BB01
STMT00006 (IL 0x02C...0x030)
N003 (  7,  7) [000032] -A--G---R---              *  ASG       ref    $83
N002 (  3,  4) [000031] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+24] Fseq[jobName] $144
N001 (  3,  2) [000030] ------------              \--*  LCL_VAR   ref    V04 arg4         u:1 (last use) $83

***** BB01
STMT00007 (IL 0x035...0x039)
N004 (  9, 10) [000037] -A--G---R---              *  ASG       bool   $281
N003 (  4,  5) [000036] U---G--N----              +--*  LCL_FLD   bool   V07 loc0         [+68] Fseq[isParent] $2c0
N002 (  4,  4) [000108] ------------              \--*  CAST      int <- bool <- int $280
N001 (  3,  2) [000035] ------------                 \--*  LCL_VAR   int    V05 arg5         u:1 (last use) $100

***** BB01
STMT00008 (IL 0x03E...0x042)
N003 (  7,  7) [000042] -A--G---R---              *  ASG       ref    $84
N002 (  3,  4) [000041] U---G--N----              +--*  LCL_FLD   ref    V07 loc0         [+32] Fseq[matches] $145
N001 (  3,  2) [000040] ------------              \--*  LCL_VAR   ref    V06 arg6         u:1 (last use) $84

***** BB01
STMT00009 (IL 0x047...0x04A)
N003 (  5,  6) [000047] -A--G---R---              *  ASG       int    $47
N002 (  3,  4) [000046] U---G--N----              +--*  LCL_FLD   int    V07 loc0         [+56] Fseq[<>1__state] $241
N001 (  1,  1) [000045] ------------              \--*  CNS_INT   int    -1 $47

***** BB01
STMT00014 (IL 0x04F...  ???)
N003 ( 17,  9) [000070] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void
N002 (  3,  3) [000068] ------------ arg0 in rcx  \--*  LCL_VAR_ADDR long   V07 loc0          $301

***** BB01
STMT00015 (IL 0x05D...  ???)
N003 (  3,  4) [000078] -A--G---R---              *  ASG       ref    $147
N002 (  1,  1) [000077] D------N----              +--*  LCL_VAR   ref    V10 tmp2         d:2 $147
N001 (  3,  4) [000076] ----G-------              \--*  LCL_FLD   ref    V07 loc0         [+72] Fseq[<>t__builder, m_task] $147

***** BB01
STMT00017 (IL 0x05D...  ???)
N003 (  5,  4) [000085] -A------R---              *  ASG       ref    $147
N002 (  3,  2) [000084] D------N----              +--*  LCL_VAR   ref    V11 tmp3         d:2 $147
N001 (  1,  1) [000079] ------------              \--*  LCL_VAR   ref    V10 tmp2         u:2 $147

***** BB01
STMT00016 (IL 0x05D...  ???)
N004 (  5,  5) [000083] ------------              *  JTRUE     void  
N003 (  3,  3) [000082] J------N----              \--*  NE        int    $282
N001 (  1,  1) [000080] ------------                 +--*  LCL_VAR   ref    V11 tmp3         u:2 (last use) $147
N002 (  1,  1) [000081] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB02 [05D..05E), preds={BB01} succs={BB03}

***** BB02
STMT00018 (IL 0x05D...  ???)
N005 ( 21, 13) [000095] -ACXG---R---              *  ASG       ref    $14a
N004 (  3,  2) [000094] D------N----              +--*  LCL_VAR   ref    V11 tmp3         d:4 $14a
N003 ( 17, 10) [000093] --CXG-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise $14a
N002 (  3,  3) [000089] ------------ this in rcx     \--*  LCL_FLD_ADDR byref  V07 loc0         [+72] Fseq[<>t__builder] $1c2

------------ BB03 [05D..05E) (return), preds={BB01,BB02} succs={}

***** BB03
STMT00019 (IL   ???...  ???)
N005 (  0,  0) [000113] -A------R---              *  ASG       ref   
N004 (  0,  0) [000111] D------N----              +--*  LCL_VAR   ref    V11 tmp3         d:3
N003 (  0,  0) [000112] ------------              \--*  PHI       ref   
N001 (  0,  0) [000115] ------------ pred BB02       +--*  PHI_ARG   ref    V11 tmp3         u:4 $14a
N002 (  0,  0) [000114] ------------ pred BB01       \--*  PHI_ARG   ref    V11 tmp3         u:2 $147

***** BB03
STMT00012 (IL   ???...  ???)
N002 (  4,  3) [000061] ------------              *  RETURN    ref    $14d
N001 (  3,  2) [000088] ------------              \--*  LCL_VAR   ref    V11 tmp3         u:3 (last use) $380

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Rationalize IR
rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  5,  4) [000100] DA----------              *  STORE_LCL_VAR ref    V12 tmp4         d:2

rewriting asg(LCL_FLD, X) to STORE_LCL_FLD(X)
N003 (  5,  6) [000107] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+72] Fseq[<>t__builder, m_task]

rewriting asg(LCL_FLD, X) to STORE_LCL_FLD(X)
N003 (  5,  6) [000012] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+16] Fseq[paths]

rewriting asg(LCL_FLD, X) to STORE_LCL_FLD(X)
N003 (  5,  6) [000017] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+0] Fseq[outputPath]

rewriting asg(LCL_FLD, X) to STORE_LCL_FLD(X)
N003 (  5,  6) [000022] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+8] Fseq[msBuildPath]

rewriting asg(LCL_FLD, X) to STORE_LCL_FLD(X)
N003 (  5,  6) [000027] UA--G-------              *  STORE_LCL_FLD int    V07 loc0         [+60] Fseq[logLevel]

rewriting asg(LCL_FLD, X) to STORE_LCL_FLD(X)
N003 (  7,  7) [000032] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+24] Fseq[jobName]

rewriting asg(LCL_FLD, X) to STORE_LCL_FLD(X)
N004 (  9, 10) [000037] UA--G-------              *  STORE_LCL_FLD bool   V07 loc0         [+68] Fseq[isParent]

rewriting asg(LCL_FLD, X) to STORE_LCL_FLD(X)
N003 (  7,  7) [000042] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+32] Fseq[matches]

rewriting asg(LCL_FLD, X) to STORE_LCL_FLD(X)
N003 (  5,  6) [000047] UA--G-------              *  STORE_LCL_FLD int    V07 loc0         [+56] Fseq[<>1__state]

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  3,  4) [000078] DA--G-------              *  STORE_LCL_VAR ref    V10 tmp2         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  5,  4) [000085] DA----------              *  STORE_LCL_VAR ref    V11 tmp3         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 ( 21, 13) [000095] DACXG-------              *  STORE_LCL_VAR ref    V11 tmp3         d:4

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 (  0,  0) [000113] DA----------              *  STORE_LCL_VAR ref    V11 tmp3         d:3


*************** Finishing PHASE Rationalize IR
Trees after Rationalize IR

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)-> BB03 ( cond )                     i label target hascall gcsafe LIR 
BB02 [0004]  1       BB01                  0.25    [05D..05E)                                     i hascall gcsafe LIR 
BB03 [0005]  2       BB01,BB02             1       [05D..05E)        (return)                     i label target gcsafe LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06A) -> BB03 (cond), preds={} succs={BB02,BB03}
               [000117] ------------                 IL_OFFSET void   IL offset: 0x0
N001 (  1,  1) [000099] ------------        t99 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t99    ref    
N003 (  5,  4) [000100] DA----------              *  STORE_LCL_VAR ref    V12 tmp4         d:2
N001 (  1,  1) [000116] ------------       t116 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t116   ref    
N003 (  5,  6) [000107] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+72] Fseq[<>t__builder, m_task]
               [000118] ------------                 IL_OFFSET void   IL offset: 0xc
N001 (  1,  1) [000010] ------------        t10 =    LCL_VAR   ref    V00 arg0         u:1 (last use) $80
                                                  /--*  t10    ref    
N003 (  5,  6) [000012] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+16] Fseq[paths]
               [000119] ------------                 IL_OFFSET void   IL offset: 0x14
N001 (  1,  1) [000015] ------------        t15 =    LCL_VAR   ref    V01 arg1         u:1 (last use) $81
                                                  /--*  t15    ref    
N003 (  5,  6) [000017] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+0] Fseq[outputPath]
               [000120] ------------                 IL_OFFSET void   IL offset: 0x1c
N001 (  1,  1) [000020] ------------        t20 =    LCL_VAR   ref    V02 arg2         u:1 (last use) $82
                                                  /--*  t20    ref    
N003 (  5,  6) [000022] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+8] Fseq[msBuildPath]
               [000121] ------------                 IL_OFFSET void   IL offset: 0x24
N001 (  1,  1) [000025] ------------        t25 =    LCL_VAR   int    V03 arg3         u:1 (last use) $c0
                                                  /--*  t25    int    
N003 (  5,  6) [000027] UA--G-------              *  STORE_LCL_FLD int    V07 loc0         [+60] Fseq[logLevel]
               [000122] ------------                 IL_OFFSET void   IL offset: 0x2c
N001 (  3,  2) [000030] ------------        t30 =    LCL_VAR   ref    V04 arg4         u:1 (last use) $83
                                                  /--*  t30    ref    
N003 (  7,  7) [000032] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+24] Fseq[jobName]
               [000123] ------------                 IL_OFFSET void   IL offset: 0x35
N001 (  3,  2) [000035] ------------        t35 =    LCL_VAR   int    V05 arg5         u:1 (last use) $100
                                                  /--*  t35    int    
N002 (  4,  4) [000108] ------------       t108 = *  CAST      int <- bool <- int $280
                                                  /--*  t108   int    
N004 (  9, 10) [000037] UA--G-------              *  STORE_LCL_FLD bool   V07 loc0         [+68] Fseq[isParent]
               [000124] ------------                 IL_OFFSET void   IL offset: 0x3e
N001 (  3,  2) [000040] ------------        t40 =    LCL_VAR   ref    V06 arg6         u:1 (last use) $84
                                                  /--*  t40    ref    
N003 (  7,  7) [000042] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+32] Fseq[matches]
               [000125] ------------                 IL_OFFSET void   IL offset: 0x47
N001 (  1,  1) [000045] ------------        t45 =    CNS_INT   int    -1 $47
                                                  /--*  t45    int    
N003 (  5,  6) [000047] UA--G-------              *  STORE_LCL_FLD int    V07 loc0         [+56] Fseq[<>1__state]
               [000126] ------------                 IL_OFFSET void   IL offset: 0x4f
N002 (  3,  3) [000068] ------------        t68 =    LCL_VAR_ADDR long   V07 loc0          $301
                                                  /--*  t68    long   arg0 in rcx
N003 ( 17,  9) [000070] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void
               [000127] ------------                 IL_OFFSET void   IL offset: 0x5d
N001 (  3,  4) [000076] ------------        t76 =    LCL_FLD   ref    V07 loc0         [+72] Fseq[<>t__builder, m_task] $147
                                                  /--*  t76    ref    
N003 (  3,  4) [000078] DA--G-------              *  STORE_LCL_VAR ref    V10 tmp2         d:2
               [000128] ------------                 IL_OFFSET void   IL offset: 0x5d
N001 (  1,  1) [000079] ------------        t79 =    LCL_VAR   ref    V10 tmp2         u:2 $147
                                                  /--*  t79    ref    
N003 (  5,  4) [000085] DA----------              *  STORE_LCL_VAR ref    V11 tmp3         d:2
               [000129] ------------                 IL_OFFSET void   IL offset: 0x5d
N001 (  1,  1) [000080] ------------        t80 =    LCL_VAR   ref    V11 tmp3         u:2 (last use) $147
N002 (  1,  1) [000081] ------------        t81 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t80    ref    
                                                  +--*  t81    ref    
N003 (  3,  3) [000082] J------N----        t82 = *  NE        int    $282
                                                  /--*  t82    int    
N004 (  5,  5) [000083] ------------              *  JTRUE     void  

------------ BB02 [05D..05E), preds={BB01} succs={BB03}
               [000130] ------------                 IL_OFFSET void   IL offset: 0x5d
N002 (  3,  3) [000089] ------------        t89 =    LCL_FLD_ADDR byref  V07 loc0         [+72] Fseq[<>t__builder] $1c2
                                                  /--*  t89    byref  this in rcx
N003 ( 17, 10) [000093] --CXG-------        t93 = *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise $14a
                                                  /--*  t93    ref    
N005 ( 21, 13) [000095] DA-XG-------              *  STORE_LCL_VAR ref    V11 tmp3         d:4

------------ BB03 [05D..05E) (return), preds={BB01,BB02} succs={}
N001 (  0,  0) [000115] ------------       t115 =    PHI_ARG   ref    V11 tmp3         u:4 $14a
N002 (  0,  0) [000114] ------------       t114 =    PHI_ARG   ref    V11 tmp3         u:2 $147
                                                  /--*  t115   ref    
                                                  +--*  t114   ref    
N003 (  0,  0) [000112] ------------       t112 = *  PHI       ref   
                                                  /--*  t112   ref    
N005 (  0,  0) [000113] DA----------              *  STORE_LCL_VAR ref    V11 tmp3         d:3
N001 (  3,  2) [000088] ------------        t88 =    LCL_VAR   ref    V11 tmp3         u:3 (last use) $380
                                                  /--*  t88    ref    
N002 (  4,  3) [000061] ------------              *  RETURN    ref    $14d

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist

*************** Starting PHASE Do 'simple' lowering
Bumping outgoingArgSpaceSize to 32 for call [000070]
outgoingArgSpaceSize 32 sufficient for call [000093], which needs 32

*************** Finishing PHASE Do 'simple' lowering
*************** In fgDebugCheckBBlist
Trees before Lowering nodeinfo

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)-> BB03 ( cond )                     i label target hascall gcsafe LIR 
BB02 [0004]  1       BB01                  0.25    [05D..05E)                                     i hascall gcsafe LIR 
BB03 [0005]  2       BB01,BB02             1       [05D..05E)        (return)                     i label target gcsafe LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06A) -> BB03 (cond), preds={} succs={BB02,BB03}
               [000117] ------------                 IL_OFFSET void   IL offset: 0x0
N001 (  1,  1) [000099] ------------        t99 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t99    ref    
N003 (  5,  4) [000100] DA----------              *  STORE_LCL_VAR ref    V12 tmp4         d:2
N001 (  1,  1) [000116] ------------       t116 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t116   ref    
N003 (  5,  6) [000107] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+72] Fseq[<>t__builder, m_task]
               [000118] ------------                 IL_OFFSET void   IL offset: 0xc
N001 (  1,  1) [000010] ------------        t10 =    LCL_VAR   ref    V00 arg0         u:1 (last use) $80
                                                  /--*  t10    ref    
N003 (  5,  6) [000012] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+16] Fseq[paths]
               [000119] ------------                 IL_OFFSET void   IL offset: 0x14
N001 (  1,  1) [000015] ------------        t15 =    LCL_VAR   ref    V01 arg1         u:1 (last use) $81
                                                  /--*  t15    ref    
N003 (  5,  6) [000017] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+0] Fseq[outputPath]
               [000120] ------------                 IL_OFFSET void   IL offset: 0x1c
N001 (  1,  1) [000020] ------------        t20 =    LCL_VAR   ref    V02 arg2         u:1 (last use) $82
                                                  /--*  t20    ref    
N003 (  5,  6) [000022] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+8] Fseq[msBuildPath]
               [000121] ------------                 IL_OFFSET void   IL offset: 0x24
N001 (  1,  1) [000025] ------------        t25 =    LCL_VAR   int    V03 arg3         u:1 (last use) $c0
                                                  /--*  t25    int    
N003 (  5,  6) [000027] UA--G-------              *  STORE_LCL_FLD int    V07 loc0         [+60] Fseq[logLevel]
               [000122] ------------                 IL_OFFSET void   IL offset: 0x2c
N001 (  3,  2) [000030] ------------        t30 =    LCL_VAR   ref    V04 arg4         u:1 (last use) $83
                                                  /--*  t30    ref    
N003 (  7,  7) [000032] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+24] Fseq[jobName]
               [000123] ------------                 IL_OFFSET void   IL offset: 0x35
N001 (  3,  2) [000035] ------------        t35 =    LCL_VAR   int    V05 arg5         u:1 (last use) $100
                                                  /--*  t35    int    
N002 (  4,  4) [000108] ------------       t108 = *  CAST      int <- bool <- int $280
                                                  /--*  t108   int    
N004 (  9, 10) [000037] UA--G-------              *  STORE_LCL_FLD bool   V07 loc0         [+68] Fseq[isParent]
               [000124] ------------                 IL_OFFSET void   IL offset: 0x3e
N001 (  3,  2) [000040] ------------        t40 =    LCL_VAR   ref    V06 arg6         u:1 (last use) $84
                                                  /--*  t40    ref    
N003 (  7,  7) [000042] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+32] Fseq[matches]
               [000125] ------------                 IL_OFFSET void   IL offset: 0x47
N001 (  1,  1) [000045] ------------        t45 =    CNS_INT   int    -1 $47
                                                  /--*  t45    int    
N003 (  5,  6) [000047] UA--G-------              *  STORE_LCL_FLD int    V07 loc0         [+56] Fseq[<>1__state]
               [000126] ------------                 IL_OFFSET void   IL offset: 0x4f
N002 (  3,  3) [000068] ------------        t68 =    LCL_VAR_ADDR long   V07 loc0          $301
                                                  /--*  t68    long   arg0 in rcx
N003 ( 17,  9) [000070] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void
               [000127] ------------                 IL_OFFSET void   IL offset: 0x5d
N001 (  3,  4) [000076] ------------        t76 =    LCL_FLD   ref    V07 loc0         [+72] Fseq[<>t__builder, m_task] $147
                                                  /--*  t76    ref    
N003 (  3,  4) [000078] DA--G-------              *  STORE_LCL_VAR ref    V10 tmp2         d:2
               [000128] ------------                 IL_OFFSET void   IL offset: 0x5d
N001 (  1,  1) [000079] ------------        t79 =    LCL_VAR   ref    V10 tmp2         u:2 $147
                                                  /--*  t79    ref    
N003 (  5,  4) [000085] DA----------              *  STORE_LCL_VAR ref    V11 tmp3         d:2
               [000129] ------------                 IL_OFFSET void   IL offset: 0x5d
N001 (  1,  1) [000080] ------------        t80 =    LCL_VAR   ref    V11 tmp3         u:2 (last use) $147
N002 (  1,  1) [000081] ------------        t81 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t80    ref    
                                                  +--*  t81    ref    
N003 (  3,  3) [000082] J------N----        t82 = *  NE        int    $282
                                                  /--*  t82    int    
N004 (  5,  5) [000083] ------------              *  JTRUE     void  

------------ BB02 [05D..05E), preds={BB01} succs={BB03}
               [000130] ------------                 IL_OFFSET void   IL offset: 0x5d
N002 (  3,  3) [000089] ------------        t89 =    LCL_FLD_ADDR byref  V07 loc0         [+72] Fseq[<>t__builder] $1c2
                                                  /--*  t89    byref  this in rcx
N003 ( 17, 10) [000093] --CXG-------        t93 = *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise $14a
                                                  /--*  t93    ref    
N005 ( 21, 13) [000095] DA-XG-------              *  STORE_LCL_VAR ref    V11 tmp3         d:4

------------ BB03 [05D..05E) (return), preds={BB01,BB02} succs={}
N001 (  0,  0) [000115] ------------       t115 =    PHI_ARG   ref    V11 tmp3         u:4 $14a
N002 (  0,  0) [000114] ------------       t114 =    PHI_ARG   ref    V11 tmp3         u:2 $147
                                                  /--*  t115   ref    
                                                  +--*  t114   ref    
N003 (  0,  0) [000112] ------------       t112 = *  PHI       ref   
                                                  /--*  t112   ref    
N005 (  0,  0) [000113] DA----------              *  STORE_LCL_VAR ref    V11 tmp3         d:3
N001 (  3,  2) [000088] ------------        t88 =    LCL_VAR   ref    V11 tmp3         u:3 (last use) $380
                                                  /--*  t88    ref    
N002 (  4,  3) [000061] ------------              *  RETURN    ref    $14d

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Lowering nodeinfo
lowering store lcl var/field (before):
N001 (  1,  1) [000099] ------------        t99 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t99    ref    
N003 (  5,  4) [000100] DA----------              *  STORE_LCL_VAR ref    V12 tmp4         d:2

lowering store lcl var/field (after):
N001 (  1,  1) [000099] ------------        t99 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t99    ref    
N003 (  5,  4) [000100] DA----------              *  STORE_LCL_VAR ref    V12 tmp4         d:2

lowering store lcl var/field (before):
N001 (  1,  1) [000116] ------------       t116 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t116   ref    
N003 (  5,  6) [000107] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+72] Fseq[<>t__builder, m_task]

lowering store lcl var/field (after):
N001 (  1,  1) [000116] ------------       t116 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t116   ref    
N003 (  5,  6) [000107] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+72] Fseq[<>t__builder, m_task]

lowering store lcl var/field (before):
N001 (  1,  1) [000010] ------------        t10 =    LCL_VAR   ref    V00 arg0         u:1 (last use) $80
                                                  /--*  t10    ref    
N003 (  5,  6) [000012] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+16] Fseq[paths]

lowering store lcl var/field (after):
N001 (  1,  1) [000010] ------------        t10 =    LCL_VAR   ref    V00 arg0         u:1 (last use) $80
                                                  /--*  t10    ref    
N003 (  5,  6) [000012] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+16] Fseq[paths]

lowering store lcl var/field (before):
N001 (  1,  1) [000015] ------------        t15 =    LCL_VAR   ref    V01 arg1         u:1 (last use) $81
                                                  /--*  t15    ref    
N003 (  5,  6) [000017] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+0] Fseq[outputPath]

lowering store lcl var/field (after):
N001 (  1,  1) [000015] ------------        t15 =    LCL_VAR   ref    V01 arg1         u:1 (last use) $81
                                                  /--*  t15    ref    
N003 (  5,  6) [000017] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+0] Fseq[outputPath]

lowering store lcl var/field (before):
N001 (  1,  1) [000020] ------------        t20 =    LCL_VAR   ref    V02 arg2         u:1 (last use) $82
                                                  /--*  t20    ref    
N003 (  5,  6) [000022] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+8] Fseq[msBuildPath]

lowering store lcl var/field (after):
N001 (  1,  1) [000020] ------------        t20 =    LCL_VAR   ref    V02 arg2         u:1 (last use) $82
                                                  /--*  t20    ref    
N003 (  5,  6) [000022] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+8] Fseq[msBuildPath]

lowering store lcl var/field (before):
N001 (  1,  1) [000025] ------------        t25 =    LCL_VAR   int    V03 arg3         u:1 (last use) $c0
                                                  /--*  t25    int    
N003 (  5,  6) [000027] UA--G-------              *  STORE_LCL_FLD int    V07 loc0         [+60] Fseq[logLevel]

lowering store lcl var/field (after):
N001 (  1,  1) [000025] ------------        t25 =    LCL_VAR   int    V03 arg3         u:1 (last use) $c0
                                                  /--*  t25    int    
N003 (  5,  6) [000027] UA--G-------              *  STORE_LCL_FLD int    V07 loc0         [+60] Fseq[logLevel]

lowering store lcl var/field (before):
N001 (  3,  2) [000030] ------------        t30 =    LCL_VAR   ref    V04 arg4         u:1 (last use) $83
                                                  /--*  t30    ref    
N003 (  7,  7) [000032] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+24] Fseq[jobName]

lowering store lcl var/field (after):
N001 (  3,  2) [000030] ------------        t30 =    LCL_VAR   ref    V04 arg4         u:1 (last use) $83
                                                  /--*  t30    ref    
N003 (  7,  7) [000032] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+24] Fseq[jobName]

lowering store lcl var/field (before):
N001 (  3,  2) [000035] ------------        t35 =    LCL_VAR   int    V05 arg5         u:1 (last use) $100
                                                  /--*  t35    int    
N002 (  4,  4) [000108] ------------       t108 = *  CAST      int <- bool <- int $280
                                                  /--*  t108   int    
N004 (  9, 10) [000037] UA--G-------              *  STORE_LCL_FLD bool   V07 loc0         [+68] Fseq[isParent]

lowering store lcl var/field (after):
N001 (  3,  2) [000035] ------------        t35 =    LCL_VAR   int    V05 arg5         u:1 (last use) $100
                                                  /--*  t35    int    
N002 (  4,  4) [000108] ------------       t108 = *  CAST      int <- bool <- int $280
                                                  /--*  t108   int    
N004 (  9, 10) [000037] UA--G-------              *  STORE_LCL_FLD bool   V07 loc0         [+68] Fseq[isParent]

lowering store lcl var/field (before):
N001 (  3,  2) [000040] ------------        t40 =    LCL_VAR   ref    V06 arg6         u:1 (last use) $84
                                                  /--*  t40    ref    
N003 (  7,  7) [000042] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+32] Fseq[matches]

lowering store lcl var/field (after):
N001 (  3,  2) [000040] ------------        t40 =    LCL_VAR   ref    V06 arg6         u:1 (last use) $84
                                                  /--*  t40    ref    
N003 (  7,  7) [000042] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+32] Fseq[matches]

lowering store lcl var/field (before):
N001 (  1,  1) [000045] ------------        t45 =    CNS_INT   int    -1 $47
                                                  /--*  t45    int    
N003 (  5,  6) [000047] UA--G-------              *  STORE_LCL_FLD int    V07 loc0         [+56] Fseq[<>1__state]

lowering store lcl var/field (after):
N001 (  1,  1) [000045] -c----------        t45 =    CNS_INT   int    -1 $47
                                                  /--*  t45    int    
N003 (  5,  6) [000047] UA--G-------              *  STORE_LCL_FLD int    V07 loc0         [+56] Fseq[<>1__state]

lowering call (before):
N002 (  3,  3) [000068] ------------        t68 =    LCL_VAR_ADDR long   V07 loc0          $301
                                                  /--*  t68    long   arg0 in rcx
N003 ( 17,  9) [000070] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000109] ----------L-              *  ARGPLACE  long   $301

late:
======
lowering arg : N002 (  3,  3) [000068] ------------              *  LCL_VAR_ADDR long   V07 loc0          $301
new node is :                [000131] ------------              *  PUTARG_REG long   REG rcx

lowering call (after):
N002 (  3,  3) [000068] ------------        t68 =    LCL_VAR_ADDR long   V07 loc0          $301
                                                  /--*  t68    long   
               [000131] ------------       t131 = *  PUTARG_REG long   REG rcx
                                                  /--*  t131   long   arg0 in rcx
N003 ( 17,  9) [000070] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void

lowering store lcl var/field (before):
N001 (  3,  4) [000076] ------------        t76 =    LCL_FLD   ref    V07 loc0         [+72] Fseq[<>t__builder, m_task] $147
                                                  /--*  t76    ref    
N003 (  3,  4) [000078] DA--G-------              *  STORE_LCL_VAR ref    V10 tmp2         d:2

lowering store lcl var/field (after):
N001 (  3,  4) [000076] ------------        t76 =    LCL_FLD   ref    V07 loc0         [+72] Fseq[<>t__builder, m_task] $147
                                                  /--*  t76    ref    
N003 (  3,  4) [000078] DA--G-------              *  STORE_LCL_VAR ref    V10 tmp2         d:2

lowering store lcl var/field (before):
N001 (  1,  1) [000079] ------------        t79 =    LCL_VAR   ref    V10 tmp2         u:2 $147
                                                  /--*  t79    ref    
N003 (  5,  4) [000085] DA----------              *  STORE_LCL_VAR ref    V11 tmp3         d:2

lowering store lcl var/field (after):
N001 (  1,  1) [000079] ------------        t79 =    LCL_VAR   ref    V10 tmp2         u:2 $147
                                                  /--*  t79    ref    
N003 (  5,  4) [000085] DA----------              *  STORE_LCL_VAR ref    V11 tmp3         d:2

lowering call (before):
N002 (  3,  3) [000089] ------------        t89 =    LCL_FLD_ADDR byref  V07 loc0         [+72] Fseq[<>t__builder] $1c2
                                                  /--*  t89    byref  this in rcx
N003 ( 17, 10) [000093] --CXG-------        t93 = *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise $14a

objp:
======
lowering arg : N001 (  0,  0) [000110] ----------L-              *  ARGPLACE  byref  $1c1

args:
======

late:
======
lowering arg : N002 (  3,  3) [000089] ------------              *  LCL_FLD_ADDR byref  V07 loc0         [+72] Fseq[<>t__builder] $1c2
new node is :                [000132] ------------              *  PUTARG_REG byref  REG rcx

lowering call (after):
N002 (  3,  3) [000089] ------------        t89 =    LCL_FLD_ADDR byref  V07 loc0         [+72] Fseq[<>t__builder] $1c2
                                                  /--*  t89    byref  
               [000132] ------------       t132 = *  PUTARG_REG byref  REG rcx
                                                  /--*  t132   byref  this in rcx
N003 ( 17, 10) [000093] --CXG-------        t93 = *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise $14a

lowering store lcl var/field (before):
N002 (  3,  3) [000089] ------------        t89 =    LCL_FLD_ADDR byref  V07 loc0         [+72] Fseq[<>t__builder] $1c2
                                                  /--*  t89    byref  
               [000132] ------------       t132 = *  PUTARG_REG byref  REG rcx
                                                  /--*  t132   byref  this in rcx
N003 ( 17, 10) [000093] --CXG-------        t93 = *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise $14a
                                                  /--*  t93    ref    
N005 ( 21, 13) [000095] DA-XG-------              *  STORE_LCL_VAR ref    V11 tmp3         d:4

lowering store lcl var/field (after):
N002 (  3,  3) [000089] ------------        t89 =    LCL_FLD_ADDR byref  V07 loc0         [+72] Fseq[<>t__builder] $1c2
                                                  /--*  t89    byref  
               [000132] ------------       t132 = *  PUTARG_REG byref  REG rcx
                                                  /--*  t132   byref  this in rcx
N003 ( 17, 10) [000093] --CXG-------        t93 = *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise $14a
                                                  /--*  t93    ref    
N005 ( 21, 13) [000095] DA-XG-------              *  STORE_LCL_VAR ref    V11 tmp3         d:4

lowering store lcl var/field (before):
N001 (  0,  0) [000115] ------------       t115 =    PHI_ARG   ref    V11 tmp3         u:4 $14a
N002 (  0,  0) [000114] ------------       t114 =    PHI_ARG   ref    V11 tmp3         u:2 $147
                                                  /--*  t115   ref    
                                                  +--*  t114   ref    
N003 (  0,  0) [000112] ------------       t112 = *  PHI       ref   
                                                  /--*  t112   ref    
N005 (  0,  0) [000113] DA----------              *  STORE_LCL_VAR ref    V11 tmp3         d:3

lowering store lcl var/field (after):
N001 (  0,  0) [000115] ------------       t115 =    PHI_ARG   ref    V11 tmp3         u:4 $14a
N002 (  0,  0) [000114] ------------       t114 =    PHI_ARG   ref    V11 tmp3         u:2 $147
                                                  /--*  t115   ref    
                                                  +--*  t114   ref    
N003 (  0,  0) [000112] ------------       t112 = *  PHI       ref   
                                                  /--*  t112   ref    
N005 (  0,  0) [000113] DA----------              *  STORE_LCL_VAR ref    V11 tmp3         d:3

lowering GT_RETURN
N002 (  4,  3) [000061] ------------              *  RETURN    ref    $14d
============Lower has completed modifying nodes.

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)-> BB03 ( cond )                     i label target hascall gcsafe LIR 
BB02 [0004]  1       BB01                  0.25    [05D..05E)                                     i hascall gcsafe LIR 
BB03 [0005]  2       BB01,BB02             1       [05D..05E)        (return)                     i label target gcsafe LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06A) -> BB03 (cond), preds={} succs={BB02,BB03}
               [000117] ------------                 IL_OFFSET void   IL offset: 0x0
N001 (  1,  1) [000099] ------------        t99 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t99    ref    
N003 (  5,  4) [000100] DA----------              *  STORE_LCL_VAR ref    V12 tmp4         d:2
N001 (  1,  1) [000116] ------------       t116 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t116   ref    
N003 (  5,  6) [000107] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+72] Fseq[<>t__builder, m_task]
               [000118] ------------                 IL_OFFSET void   IL offset: 0xc
N001 (  1,  1) [000010] ------------        t10 =    LCL_VAR   ref    V00 arg0         u:1 (last use) $80
                                                  /--*  t10    ref    
N003 (  5,  6) [000012] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+16] Fseq[paths]
               [000119] ------------                 IL_OFFSET void   IL offset: 0x14
N001 (  1,  1) [000015] ------------        t15 =    LCL_VAR   ref    V01 arg1         u:1 (last use) $81
                                                  /--*  t15    ref    
N003 (  5,  6) [000017] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+0] Fseq[outputPath]
               [000120] ------------                 IL_OFFSET void   IL offset: 0x1c
N001 (  1,  1) [000020] ------------        t20 =    LCL_VAR   ref    V02 arg2         u:1 (last use) $82
                                                  /--*  t20    ref    
N003 (  5,  6) [000022] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+8] Fseq[msBuildPath]
               [000121] ------------                 IL_OFFSET void   IL offset: 0x24
N001 (  1,  1) [000025] ------------        t25 =    LCL_VAR   int    V03 arg3         u:1 (last use) $c0
                                                  /--*  t25    int    
N003 (  5,  6) [000027] UA--G-------              *  STORE_LCL_FLD int    V07 loc0         [+60] Fseq[logLevel]
               [000122] ------------                 IL_OFFSET void   IL offset: 0x2c
N001 (  3,  2) [000030] ------------        t30 =    LCL_VAR   ref    V04 arg4         u:1 (last use) $83
                                                  /--*  t30    ref    
N003 (  7,  7) [000032] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+24] Fseq[jobName]
               [000123] ------------                 IL_OFFSET void   IL offset: 0x35
N001 (  3,  2) [000035] ------------        t35 =    LCL_VAR   int    V05 arg5         u:1 (last use) $100
                                                  /--*  t35    int    
N002 (  4,  4) [000108] ------------       t108 = *  CAST      int <- bool <- int $280
                                                  /--*  t108   int    
N004 (  9, 10) [000037] UA--G-------              *  STORE_LCL_FLD bool   V07 loc0         [+68] Fseq[isParent]
               [000124] ------------                 IL_OFFSET void   IL offset: 0x3e
N001 (  3,  2) [000040] ------------        t40 =    LCL_VAR   ref    V06 arg6         u:1 (last use) $84
                                                  /--*  t40    ref    
N003 (  7,  7) [000042] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+32] Fseq[matches]
               [000125] ------------                 IL_OFFSET void   IL offset: 0x47
N001 (  1,  1) [000045] -c----------        t45 =    CNS_INT   int    -1 $47
                                                  /--*  t45    int    
N003 (  5,  6) [000047] UA--G-------              *  STORE_LCL_FLD int    V07 loc0         [+56] Fseq[<>1__state]
               [000126] ------------                 IL_OFFSET void   IL offset: 0x4f
N002 (  3,  3) [000068] ------------        t68 =    LCL_VAR_ADDR long   V07 loc0          $301
                                                  /--*  t68    long   
               [000131] ------------       t131 = *  PUTARG_REG long   REG rcx
                                                  /--*  t131   long   arg0 in rcx
N003 ( 17,  9) [000070] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void
               [000127] ------------                 IL_OFFSET void   IL offset: 0x5d
N001 (  3,  4) [000076] ------------        t76 =    LCL_FLD   ref    V07 loc0         [+72] Fseq[<>t__builder, m_task] $147
                                                  /--*  t76    ref    
N003 (  3,  4) [000078] DA--G-------              *  STORE_LCL_VAR ref    V10 tmp2         d:2
               [000128] ------------                 IL_OFFSET void   IL offset: 0x5d
N001 (  1,  1) [000079] ------------        t79 =    LCL_VAR   ref    V10 tmp2         u:2 $147
                                                  /--*  t79    ref    
N003 (  5,  4) [000085] DA----------              *  STORE_LCL_VAR ref    V11 tmp3         d:2
               [000129] ------------                 IL_OFFSET void   IL offset: 0x5d
N001 (  1,  1) [000080] ------------        t80 =    LCL_VAR   ref    V11 tmp3         u:2 (last use) $147
N002 (  1,  1) [000081] -c----------        t81 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t80    ref    
                                                  +--*  t81    ref    
N003 (  3,  3) [000082] J------N----              *  NE        void   $282
N004 (  5,  5) [000083] ------------              *  JTRUE     void  

------------ BB02 [05D..05E), preds={BB01} succs={BB03}
               [000130] ------------                 IL_OFFSET void   IL offset: 0x5d
N002 (  3,  3) [000089] ------------        t89 =    LCL_FLD_ADDR byref  V07 loc0         [+72] Fseq[<>t__builder] $1c2
                                                  /--*  t89    byref  
               [000132] ------------       t132 = *  PUTARG_REG byref  REG rcx
                                                  /--*  t132   byref  this in rcx
N003 ( 17, 10) [000093] --CXG-------        t93 = *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise $14a
                                                  /--*  t93    ref    
N005 ( 21, 13) [000095] DA-XG-------              *  STORE_LCL_VAR ref    V11 tmp3         d:4

------------ BB03 [05D..05E) (return), preds={BB01,BB02} succs={}
N001 (  0,  0) [000115] ------------       t115 =    PHI_ARG   ref    V11 tmp3         u:4 $14a
N002 (  0,  0) [000114] ------------       t114 =    PHI_ARG   ref    V11 tmp3         u:2 $147
                                                  /--*  t115   ref    
                                                  +--*  t114   ref    
N003 (  0,  0) [000112] ------------       t112 = *  PHI       ref   
                                                  /--*  t112   ref    
N005 (  0,  0) [000113] DA----------              *  STORE_LCL_VAR ref    V11 tmp3         d:3
N001 (  3,  2) [000088] ------------        t88 =    LCL_VAR   ref    V11 tmp3         u:3 (last use) $380
                                                  /--*  t88    ref    
N002 (  4,  3) [000061] ------------              *  RETURN    ref    $14d

-------------------------------------------------------------------------------------------------------------------

*** lvaComputeRefCounts ***

*** lvaComputeRefCounts -- explicit counts ***
New refCnts for V12: refCnt =  1, refCntWtd = 1   
New refCnts for V07: refCnt =  1, refCntWtd = 1   
New refCnts for V00: refCnt =  1, refCntWtd = 1   
New refCnts for V07: refCnt =  2, refCntWtd = 2   
New refCnts for V01: refCnt =  1, refCntWtd = 1   
New refCnts for V07: refCnt =  3, refCntWtd = 3   
New refCnts for V02: refCnt =  1, refCntWtd = 1   
New refCnts for V07: refCnt =  4, refCntWtd = 4   
New refCnts for V03: refCnt =  1, refCntWtd = 1   
New refCnts for V07: refCnt =  5, refCntWtd = 5   
New refCnts for V04: refCnt =  1, refCntWtd = 1   
New refCnts for V07: refCnt =  6, refCntWtd = 6   
New refCnts for V05: refCnt =  1, refCntWtd = 1   
New refCnts for V07: refCnt =  7, refCntWtd = 7   
New refCnts for V06: refCnt =  1, refCntWtd = 1   
New refCnts for V07: refCnt =  8, refCntWtd = 8   
New refCnts for V07: refCnt =  9, refCntWtd = 9   
New refCnts for V07: refCnt = 10, refCntWtd = 10   
New refCnts for V07: refCnt = 11, refCntWtd = 11   
New refCnts for V10: refCnt =  1, refCntWtd = 2   
New refCnts for V10: refCnt =  2, refCntWtd = 4   
New refCnts for V11: refCnt =  1, refCntWtd = 1   
New refCnts for V11: refCnt =  2, refCntWtd = 2   
New refCnts for V07: refCnt = 12, refCntWtd = 11.25
New refCnts for V11: refCnt =  3, refCntWtd = 2.25
New refCnts for V11: refCnt =  4, refCntWtd = 3.25

*** lvaComputeRefCounts -- implicit counts ***
New refCnts for V00: refCnt =  2, refCntWtd = 2   
New refCnts for V00: refCnt =  3, refCntWtd = 3   
New refCnts for V01: refCnt =  2, refCntWtd = 2   
New refCnts for V01: refCnt =  3, refCntWtd = 3   
New refCnts for V02: refCnt =  2, refCntWtd = 2   
New refCnts for V02: refCnt =  3, refCntWtd = 3   
New refCnts for V03: refCnt =  2, refCntWtd = 2   
New refCnts for V03: refCnt =  3, refCntWtd = 3   
*************** In fgLocalVarLiveness()
; Initial local variable assignments
;
;  V00 arg0              ref  class-hnd
;  V01 arg1              ref  class-hnd
;  V02 arg2              ref  class-hnd
;  V03 arg3              int 
;  V04 arg4              ref  class-hnd
;  V05 arg5             bool 
;  V06 arg6              ref  class-hnd
;  V07 loc0           struct <<Obtain>d__1, 120> do-not-enreg[XSFB] addr-exposed ld-addr-op
;  V08 OutArgs        lclBlk <32>  "OutgoingArgSpace"
;  V09 tmp1           struct <System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8> ld-addr-op "Inline ldloca(s) first use temp"
;  V10 tmp2              ref  class-hnd "dup spill"
;  V11 tmp3              ref 
;  V12 tmp4              ref  V09.m_task(offs=0x00) P-INDEP "field V09.m_task (fldOffset=0x0)"
In fgLocalVarLivenessInit
Tracked variable (10 out of 13) table:
V00 arg0          [   ref]: refCnt =    3, refCntWtd =   3   
V01 arg1          [   ref]: refCnt =    3, refCntWtd =   3   
V02 arg2          [   ref]: refCnt =    3, refCntWtd =   3   
V03 arg3          [   int]: refCnt =    3, refCntWtd =   3   
V10 tmp2          [   ref]: refCnt =    2, refCntWtd =   4   
V11 tmp3          [   ref]: refCnt =    4, refCntWtd =   3.25
V04 arg4          [   ref]: refCnt =    1, refCntWtd =   1   
V06 arg6          [   ref]: refCnt =    1, refCntWtd =   1   
V12 tmp4          [   ref]: refCnt =    1, refCntWtd =   1   
V05 arg5          [  bool]: refCnt =    1, refCntWtd =   1   

*************** In fgPerBlockLocalVarLiveness()
BB01 USE(7)={V00 V01 V02 V03         V04 V06     V05} + ByrefExposed + GcHeap
     DEF(3)={                V10 V11         V12    } + ByrefExposed* + GcHeap*

BB02 USE(0)={   } + ByrefExposed + GcHeap
     DEF(1)={V11} + ByrefExposed* + GcHeap*

BB03 USE(1)={V11}
     DEF(0)={   }

** Memory liveness computed, GcHeap states and ByrefExposed states diverge
*************** In fgInterBlockLocalVarLiveness()

BB liveness after fgLiveVarAnalysis():

BB01 IN (7)={V00 V01 V02 V03     V04 V06 V05} + ByrefExposed + GcHeap
     OUT(1)={                V11            } + ByrefExposed + GcHeap

BB02 IN (0)={   } + ByrefExposed + GcHeap
     OUT(1)={V11}

BB03 IN (1)={V11}
     OUT(0)={   }

Removing dead store:
N003 (  5,  4) [000100] DA----------              *  STORE_LCL_VAR ref    V12 tmp4         d:2 (last use)
Removing dead node:
N001 (  1,  1) [000099] ------------              *  CNS_INT   ref    null $VN.Null

*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)-> BB03 ( cond )                     i label target hascall gcsafe LIR 
BB02 [0004]  1       BB01                  0.25    [05D..05E)                                     i hascall gcsafe LIR 
BB03 [0005]  2       BB01,BB02             1       [05D..05E)        (return)                     i label target gcsafe LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist

*** lvaComputeRefCounts ***

*** lvaComputeRefCounts -- explicit counts ***
New refCnts for V07: refCnt =  1, refCntWtd = 1   
New refCnts for V00: refCnt =  1, refCntWtd = 1   
New refCnts for V07: refCnt =  2, refCntWtd = 2   
New refCnts for V01: refCnt =  1, refCntWtd = 1   
New refCnts for V07: refCnt =  3, refCntWtd = 3   
New refCnts for V02: refCnt =  1, refCntWtd = 1   
New refCnts for V07: refCnt =  4, refCntWtd = 4   
New refCnts for V03: refCnt =  1, refCntWtd = 1   
New refCnts for V07: refCnt =  5, refCntWtd = 5   
New refCnts for V04: refCnt =  1, refCntWtd = 1   
New refCnts for V07: refCnt =  6, refCntWtd = 6   
New refCnts for V05: refCnt =  1, refCntWtd = 1   
New refCnts for V07: refCnt =  7, refCntWtd = 7   
New refCnts for V06: refCnt =  1, refCntWtd = 1   
New refCnts for V07: refCnt =  8, refCntWtd = 8   
New refCnts for V07: refCnt =  9, refCntWtd = 9   
New refCnts for V07: refCnt = 10, refCntWtd = 10   
New refCnts for V07: refCnt = 11, refCntWtd = 11   
New refCnts for V10: refCnt =  1, refCntWtd = 2   
New refCnts for V10: refCnt =  2, refCntWtd = 4   
New refCnts for V11: refCnt =  1, refCntWtd = 1   
New refCnts for V11: refCnt =  2, refCntWtd = 2   
New refCnts for V07: refCnt = 12, refCntWtd = 11.25
New refCnts for V11: refCnt =  3, refCntWtd = 2.25
New refCnts for V11: refCnt =  4, refCntWtd = 3.25

*** lvaComputeRefCounts -- implicit counts ***
New refCnts for V00: refCnt =  2, refCntWtd = 2   
New refCnts for V00: refCnt =  3, refCntWtd = 3   
New refCnts for V01: refCnt =  2, refCntWtd = 2   
New refCnts for V01: refCnt =  3, refCntWtd = 3   
New refCnts for V02: refCnt =  2, refCntWtd = 2   
New refCnts for V02: refCnt =  3, refCntWtd = 3   
New refCnts for V03: refCnt =  2, refCntWtd = 2   
New refCnts for V03: refCnt =  3, refCntWtd = 3   

*************** Finishing PHASE Lowering nodeinfo
Trees after Lowering nodeinfo

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)-> BB03 ( cond )                     i label target hascall gcsafe LIR 
BB02 [0004]  1       BB01                  0.25    [05D..05E)                                     i hascall gcsafe LIR 
BB03 [0005]  2       BB01,BB02             1       [05D..05E)        (return)                     i label target gcsafe LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06A) -> BB03 (cond), preds={} succs={BB02,BB03}
               [000117] ------------                 IL_OFFSET void   IL offset: 0x0
N001 (  1,  1) [000116] ------------       t116 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t116   ref    
N003 (  5,  6) [000107] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+72] Fseq[<>t__builder, m_task]
               [000118] ------------                 IL_OFFSET void   IL offset: 0xc
N001 (  1,  1) [000010] ------------        t10 =    LCL_VAR   ref    V00 arg0         u:1 (last use) $80
                                                  /--*  t10    ref    
N003 (  5,  6) [000012] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+16] Fseq[paths]
               [000119] ------------                 IL_OFFSET void   IL offset: 0x14
N001 (  1,  1) [000015] ------------        t15 =    LCL_VAR   ref    V01 arg1         u:1 (last use) $81
                                                  /--*  t15    ref    
N003 (  5,  6) [000017] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+0] Fseq[outputPath]
               [000120] ------------                 IL_OFFSET void   IL offset: 0x1c
N001 (  1,  1) [000020] ------------        t20 =    LCL_VAR   ref    V02 arg2         u:1 (last use) $82
                                                  /--*  t20    ref    
N003 (  5,  6) [000022] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+8] Fseq[msBuildPath]
               [000121] ------------                 IL_OFFSET void   IL offset: 0x24
N001 (  1,  1) [000025] ------------        t25 =    LCL_VAR   int    V03 arg3         u:1 (last use) $c0
                                                  /--*  t25    int    
N003 (  5,  6) [000027] UA--G-------              *  STORE_LCL_FLD int    V07 loc0         [+60] Fseq[logLevel]
               [000122] ------------                 IL_OFFSET void   IL offset: 0x2c
N001 (  3,  2) [000030] ------------        t30 =    LCL_VAR   ref    V04 arg4         u:1 (last use) $83
                                                  /--*  t30    ref    
N003 (  7,  7) [000032] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+24] Fseq[jobName]
               [000123] ------------                 IL_OFFSET void   IL offset: 0x35
N001 (  3,  2) [000035] ------------        t35 =    LCL_VAR   int    V05 arg5         u:1 (last use) $100
                                                  /--*  t35    int    
N002 (  4,  4) [000108] ------------       t108 = *  CAST      int <- bool <- int $280
                                                  /--*  t108   int    
N004 (  9, 10) [000037] UA--G-------              *  STORE_LCL_FLD bool   V07 loc0         [+68] Fseq[isParent]
               [000124] ------------                 IL_OFFSET void   IL offset: 0x3e
N001 (  3,  2) [000040] ------------        t40 =    LCL_VAR   ref    V06 arg6         u:1 (last use) $84
                                                  /--*  t40    ref    
N003 (  7,  7) [000042] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+32] Fseq[matches]
               [000125] ------------                 IL_OFFSET void   IL offset: 0x47
N001 (  1,  1) [000045] -c----------        t45 =    CNS_INT   int    -1 $47
                                                  /--*  t45    int    
N003 (  5,  6) [000047] UA--G-------              *  STORE_LCL_FLD int    V07 loc0         [+56] Fseq[<>1__state]
               [000126] ------------                 IL_OFFSET void   IL offset: 0x4f
N002 (  3,  3) [000068] ------------        t68 =    LCL_VAR_ADDR long   V07 loc0          $301
                                                  /--*  t68    long   
               [000131] ------------       t131 = *  PUTARG_REG long   REG rcx
                                                  /--*  t131   long   arg0 in rcx
N003 ( 17,  9) [000070] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void
               [000127] ------------                 IL_OFFSET void   IL offset: 0x5d
N001 (  3,  4) [000076] ------------        t76 =    LCL_FLD   ref    V07 loc0         [+72] Fseq[<>t__builder, m_task] $147
                                                  /--*  t76    ref    
N003 (  3,  4) [000078] DA--G-------              *  STORE_LCL_VAR ref    V10 tmp2         d:2
               [000128] ------------                 IL_OFFSET void   IL offset: 0x5d
N001 (  1,  1) [000079] ------------        t79 =    LCL_VAR   ref    V10 tmp2         u:2 (last use) $147
                                                  /--*  t79    ref    
N003 (  5,  4) [000085] DA----------              *  STORE_LCL_VAR ref    V11 tmp3         d:2
               [000129] ------------                 IL_OFFSET void   IL offset: 0x5d
N001 (  1,  1) [000080] ------------        t80 =    LCL_VAR   ref    V11 tmp3         u:2 $147
N002 (  1,  1) [000081] -c----------        t81 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t80    ref    
                                                  +--*  t81    ref    
N003 (  3,  3) [000082] J------N----              *  NE        void   $282
N004 (  5,  5) [000083] ------------              *  JTRUE     void  

------------ BB02 [05D..05E), preds={BB01} succs={BB03}
               [000130] ------------                 IL_OFFSET void   IL offset: 0x5d
N002 (  3,  3) [000089] ------------        t89 =    LCL_FLD_ADDR byref  V07 loc0         [+72] Fseq[<>t__builder] $1c2
                                                  /--*  t89    byref  
               [000132] ------------       t132 = *  PUTARG_REG byref  REG rcx
                                                  /--*  t132   byref  this in rcx
N003 ( 17, 10) [000093] --CXG-------        t93 = *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise $14a
                                                  /--*  t93    ref    
N005 ( 21, 13) [000095] DA-XG-------              *  STORE_LCL_VAR ref    V11 tmp3         d:4

------------ BB03 [05D..05E) (return), preds={BB01,BB02} succs={}
N001 (  0,  0) [000115] ------------       t115 =    PHI_ARG   ref    V11 tmp3         u:4 $14a
N002 (  0,  0) [000114] ------------       t114 =    PHI_ARG   ref    V11 tmp3         u:2 $147
                                                  /--*  t115   ref    
                                                  +--*  t114   ref    
N003 (  0,  0) [000112] ------------       t112 = *  PHI       ref   
                                                  /--*  t112   ref    
N005 (  0,  0) [000113] DA----------              *  STORE_LCL_VAR ref    V11 tmp3         d:3
N001 (  3,  2) [000088] ------------        t88 =    LCL_VAR   ref    V11 tmp3         u:3 (last use) $380
                                                  /--*  t88    ref    
N002 (  4,  3) [000061] ------------              *  RETURN    ref    $14d

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Trees before Calculate stack level slots

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)-> BB03 ( cond )                     i label target hascall gcsafe LIR 
BB02 [0004]  1       BB01                  0.25    [05D..05E)                                     i hascall gcsafe LIR 
BB03 [0005]  2       BB01,BB02             1       [05D..05E)        (return)                     i label target gcsafe LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06A) -> BB03 (cond), preds={} succs={BB02,BB03}
               [000117] ------------                 IL_OFFSET void   IL offset: 0x0
N001 (  1,  1) [000116] ------------       t116 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t116   ref    
N003 (  5,  6) [000107] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+72] Fseq[<>t__builder, m_task]
               [000118] ------------                 IL_OFFSET void   IL offset: 0xc
N001 (  1,  1) [000010] ------------        t10 =    LCL_VAR   ref    V00 arg0         u:1 (last use) $80
                                                  /--*  t10    ref    
N003 (  5,  6) [000012] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+16] Fseq[paths]
               [000119] ------------                 IL_OFFSET void   IL offset: 0x14
N001 (  1,  1) [000015] ------------        t15 =    LCL_VAR   ref    V01 arg1         u:1 (last use) $81
                                                  /--*  t15    ref    
N003 (  5,  6) [000017] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+0] Fseq[outputPath]
               [000120] ------------                 IL_OFFSET void   IL offset: 0x1c
N001 (  1,  1) [000020] ------------        t20 =    LCL_VAR   ref    V02 arg2         u:1 (last use) $82
                                                  /--*  t20    ref    
N003 (  5,  6) [000022] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+8] Fseq[msBuildPath]
               [000121] ------------                 IL_OFFSET void   IL offset: 0x24
N001 (  1,  1) [000025] ------------        t25 =    LCL_VAR   int    V03 arg3         u:1 (last use) $c0
                                                  /--*  t25    int    
N003 (  5,  6) [000027] UA--G-------              *  STORE_LCL_FLD int    V07 loc0         [+60] Fseq[logLevel]
               [000122] ------------                 IL_OFFSET void   IL offset: 0x2c
N001 (  3,  2) [000030] ------------        t30 =    LCL_VAR   ref    V04 arg4         u:1 (last use) $83
                                                  /--*  t30    ref    
N003 (  7,  7) [000032] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+24] Fseq[jobName]
               [000123] ------------                 IL_OFFSET void   IL offset: 0x35
N001 (  3,  2) [000035] ------------        t35 =    LCL_VAR   int    V05 arg5         u:1 (last use) $100
                                                  /--*  t35    int    
N002 (  4,  4) [000108] ------------       t108 = *  CAST      int <- bool <- int $280
                                                  /--*  t108   int    
N004 (  9, 10) [000037] UA--G-------              *  STORE_LCL_FLD bool   V07 loc0         [+68] Fseq[isParent]
               [000124] ------------                 IL_OFFSET void   IL offset: 0x3e
N001 (  3,  2) [000040] ------------        t40 =    LCL_VAR   ref    V06 arg6         u:1 (last use) $84
                                                  /--*  t40    ref    
N003 (  7,  7) [000042] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+32] Fseq[matches]
               [000125] ------------                 IL_OFFSET void   IL offset: 0x47
N001 (  1,  1) [000045] -c----------        t45 =    CNS_INT   int    -1 $47
                                                  /--*  t45    int    
N003 (  5,  6) [000047] UA--G-------              *  STORE_LCL_FLD int    V07 loc0         [+56] Fseq[<>1__state]
               [000126] ------------                 IL_OFFSET void   IL offset: 0x4f
N002 (  3,  3) [000068] ------------        t68 =    LCL_VAR_ADDR long   V07 loc0          $301
                                                  /--*  t68    long   
               [000131] ------------       t131 = *  PUTARG_REG long   REG rcx
                                                  /--*  t131   long   arg0 in rcx
N003 ( 17,  9) [000070] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void
               [000127] ------------                 IL_OFFSET void   IL offset: 0x5d
N001 (  3,  4) [000076] ------------        t76 =    LCL_FLD   ref    V07 loc0         [+72] Fseq[<>t__builder, m_task] $147
                                                  /--*  t76    ref    
N003 (  3,  4) [000078] DA--G-------              *  STORE_LCL_VAR ref    V10 tmp2         d:2
               [000128] ------------                 IL_OFFSET void   IL offset: 0x5d
N001 (  1,  1) [000079] ------------        t79 =    LCL_VAR   ref    V10 tmp2         u:2 (last use) $147
                                                  /--*  t79    ref    
N003 (  5,  4) [000085] DA----------              *  STORE_LCL_VAR ref    V11 tmp3         d:2
               [000129] ------------                 IL_OFFSET void   IL offset: 0x5d
N001 (  1,  1) [000080] ------------        t80 =    LCL_VAR   ref    V11 tmp3         u:2 $147
N002 (  1,  1) [000081] -c----------        t81 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t80    ref    
                                                  +--*  t81    ref    
N003 (  3,  3) [000082] J------N----              *  NE        void   $282
N004 (  5,  5) [000083] ------------              *  JTRUE     void  

------------ BB02 [05D..05E), preds={BB01} succs={BB03}
               [000130] ------------                 IL_OFFSET void   IL offset: 0x5d
N002 (  3,  3) [000089] ------------        t89 =    LCL_FLD_ADDR byref  V07 loc0         [+72] Fseq[<>t__builder] $1c2
                                                  /--*  t89    byref  
               [000132] ------------       t132 = *  PUTARG_REG byref  REG rcx
                                                  /--*  t132   byref  this in rcx
N003 ( 17, 10) [000093] --CXG-------        t93 = *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise $14a
                                                  /--*  t93    ref    
N005 ( 21, 13) [000095] DA-XG-------              *  STORE_LCL_VAR ref    V11 tmp3         d:4

------------ BB03 [05D..05E) (return), preds={BB01,BB02} succs={}
N001 (  0,  0) [000115] ------------       t115 =    PHI_ARG   ref    V11 tmp3         u:4 $14a
N002 (  0,  0) [000114] ------------       t114 =    PHI_ARG   ref    V11 tmp3         u:2 $147
                                                  /--*  t115   ref    
                                                  +--*  t114   ref    
N003 (  0,  0) [000112] ------------       t112 = *  PHI       ref   
                                                  /--*  t112   ref    
N005 (  0,  0) [000113] DA----------              *  STORE_LCL_VAR ref    V11 tmp3         d:3
N001 (  3,  2) [000088] ------------        t88 =    LCL_VAR   ref    V11 tmp3         u:3 (last use) $380
                                                  /--*  t88    ref    
N002 (  4,  3) [000061] ------------              *  RETURN    ref    $14d

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Calculate stack level slots

*************** Finishing PHASE Calculate stack level slots [no changes]

*************** Starting PHASE Linear scan register alloc
Clearing modified regs.

buildIntervals ========

-----------------
LIVENESS:
-----------------
BB01 use def in out
{V00 V01 V02 V03 V04 V05 V06}
{V10 V11 V12}
{V00 V01 V02 V03 V04 V05 V06}
{V11}
BB02 use def in out
{}
{V11}
{}
{V11}
BB03 use def in out
{V11}
{}
{V11}
{}
Interval  0: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  0: (V00) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  1: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  1: (V01) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  2: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  2: (V02) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  3: int RefPositions {} physReg:NA Preferences=[allInt]
  Interval  3: (V03) int RefPositions {} physReg:NA Preferences=[allInt]
Interval  4: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  4: (V04) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  5: int RefPositions {} physReg:NA Preferences=[allInt]
  Interval  5: (V05) int RefPositions {} physReg:NA Preferences=[allInt]
Interval  6: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  6: (V06) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  7: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  7: (V10) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  8: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  8: (V11) ref RefPositions {} physReg:NA Preferences=[allInt]

FP callee save candidate vars: None

floatVarCount = 0; hasLoops = 0, singleExit = 1
TUPLE STYLE DUMP BEFORE LSRA
LSRA Block Sequence: BB01(  1   ) 
BB02(  0.25) 
BB03(  1   ) 

BB01 [000..06A) -> BB03 (cond), preds={} succs={BB02,BB03}
=====
  N000.                    IL_OFFSET IL offset: 0x0
  N001. t116            =  CNS_INT   null
  N003.                    V07 MEM; t116
  N000.                    IL_OFFSET IL offset: 0xc
  N001.                    V00(t10*)
  N003.                    V07 MEM; t10*
  N000.                    IL_OFFSET IL offset: 0x14
  N001.                    V01(t15*)
  N003.                    V07 MEM; t15*
  N000.                    IL_OFFSET IL offset: 0x1c
  N001.                    V02(t20*)
  N003.                    V07 MEM; t20*
  N000.                    IL_OFFSET IL offset: 0x24
  N001.                    V03(t25*)
  N003.                    V07 MEM; t25*
  N000.                    IL_OFFSET IL offset: 0x2c
  N001.                    V04(t30*)
  N003.                    V07 MEM; t30*
  N000.                    IL_OFFSET IL offset: 0x35
  N001.                    V05(t35*)
  N002. t108            =  CAST     ; t35*
  N004.                    V07 MEM; t108
  N000.                    IL_OFFSET IL offset: 0x3e
  N001.                    V06(t40*)
  N003.                    V07 MEM; t40*
  N000.                    IL_OFFSET IL offset: 0x47
  N001.                    CNS_INT   -1
  N003.                    V07 MEM
  N000.                    IL_OFFSET IL offset: 0x4f
  N002. t68             =  LCL_VAR_ADDR V07 loc0         
  N000. t131            =  PUTARG_REG; t68
  N003.                    CALL     ; t131
  N000.                    IL_OFFSET IL offset: 0x5d
  N001. t76             =  V07 MEM
  N003.                    V10(t78); t76
  N000.                    IL_OFFSET IL offset: 0x5d
  N001.                    V10(t79*)
  N003.                    V11(t85); t79*
  N000.                    IL_OFFSET IL offset: 0x5d
  N001.                    V11(t80)
  N002.                    CNS_INT   null
  N003.                    NE       ; t80
  N004.                    JTRUE    

BB02 [05D..05E), preds={BB01} succs={BB03}
=====
  N000.                    IL_OFFSET IL offset: 0x5d
  N002. t89             =  LCL_FLD_ADDR V07 loc0         [+72] Fseq[<>t__builder]
  N000. t132            =  PUTARG_REG; t89
  N003. t93             =  CALL     ; t132
  N005.                    V11(t95); t93

BB03 [05D..05E) (return), preds={BB01,BB02} succs={}
=====
  N001.                    V11(t88*)
  N002.                    RETURN   ; t88*




buildIntervals second part ========
Int arg V00 in reg rcx
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00>  BB00 regmask=[rcx] minReg=1 fixed>
Int arg V01 in reg rdx
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V01>  BB00 regmask=[rdx] minReg=1 fixed>
Int arg V02 in reg r8
<RefPosition #2   @0   RefTypeParamDef <Ivl:2 V02>  BB00 regmask=[r8] minReg=1 fixed>
Int arg V03 in reg r9
<RefPosition #3   @0   RefTypeParamDef <Ivl:3 V03>  BB00 regmask=[r9] minReg=1 fixed>
<RefPosition #4   @0   RefTypeParamDef <Ivl:4 V04>  BB00 regmask=[allInt] minReg=1>
<RefPosition #5   @0   RefTypeParamDef <Ivl:6 V06>  BB00 regmask=[allInt] minReg=1>
<RefPosition #6   @0   RefTypeParamDef <Ivl:5 V05>  BB00 regmask=[allInt] minReg=1>

NEW BLOCK BB01
<RefPosition #7   @1   RefTypeBB  BB01 regmask=[] minReg=1>

DefList: {  }
N003 (???,???) [000117] ------------              *  IL_OFFSET void   IL offset: 0x0 REG NA

DefList: {  }
N005 (  1,  1) [000116] ------------              *  CNS_INT   ref    null REG NA $VN.Null
Interval  9: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #8   @6   RefTypeDef <Ivl:9> CNS_INT BB01 regmask=[allInt] minReg=1>

DefList: { N005.t116. CNS_INT }
N007 (  5,  6) [000107] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+72] Fseq[<>t__builder, m_task] NA REG NA
<RefPosition #9   @7   RefTypeUse <Ivl:9>  BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N009 (???,???) [000118] ------------              *  IL_OFFSET void   IL offset: 0xc REG NA

DefList: {  }
N011 (  1,  1) [000010] ------------              *  LCL_VAR   ref    V00 arg0         u:1 NA (last use) REG NA $80

DefList: {  }
N013 (  5,  6) [000012] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+16] Fseq[paths] NA REG NA
<RefPosition #10  @13  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N015 (???,???) [000119] ------------              *  IL_OFFSET void   IL offset: 0x14 REG NA

DefList: {  }
N017 (  1,  1) [000015] ------------              *  LCL_VAR   ref    V01 arg1         u:1 NA (last use) REG NA $81

DefList: {  }
N019 (  5,  6) [000017] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+0] Fseq[outputPath] NA REG NA
<RefPosition #11  @19  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N021 (???,???) [000120] ------------              *  IL_OFFSET void   IL offset: 0x1c REG NA

DefList: {  }
N023 (  1,  1) [000020] ------------              *  LCL_VAR   ref    V02 arg2         u:1 NA (last use) REG NA $82

DefList: {  }
N025 (  5,  6) [000022] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+8] Fseq[msBuildPath] NA REG NA
<RefPosition #12  @25  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N027 (???,???) [000121] ------------              *  IL_OFFSET void   IL offset: 0x24 REG NA

DefList: {  }
N029 (  1,  1) [000025] ------------              *  LCL_VAR   int    V03 arg3         u:1 NA (last use) REG NA $c0

DefList: {  }
N031 (  5,  6) [000027] UA--G-------              *  STORE_LCL_FLD int    V07 loc0         [+60] Fseq[logLevel] NA REG NA
<RefPosition #13  @31  RefTypeUse <Ivl:3 V03> LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N033 (???,???) [000122] ------------              *  IL_OFFSET void   IL offset: 0x2c REG NA

DefList: {  }
N035 (  3,  2) [000030] ------------              *  LCL_VAR   ref    V04 arg4         u:1 NA (last use) REG NA $83

DefList: {  }
N037 (  7,  7) [000032] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+24] Fseq[jobName] NA REG NA
<RefPosition #14  @37  RefTypeUse <Ivl:4 V04> LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N039 (???,???) [000123] ------------              *  IL_OFFSET void   IL offset: 0x35 REG NA

DefList: {  }
N041 (  3,  2) [000035] ------------              *  LCL_VAR   int    V05 arg5         u:1 NA (last use) REG NA $100

DefList: {  }
N043 (  4,  4) [000108] ------------              *  CAST      int <- bool <- int REG NA $280
<RefPosition #15  @43  RefTypeUse <Ivl:5 V05> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
Interval 10: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #16  @44  RefTypeDef <Ivl:10> CAST BB01 regmask=[allInt] minReg=1>

DefList: { N043.t108. CAST }
N045 (  9, 10) [000037] UA--G-------              *  STORE_LCL_FLD bool   V07 loc0         [+68] Fseq[isParent] NA REG NA
<RefPosition #17  @45  RefTypeUse <Ivl:10>  BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N047 (???,???) [000124] ------------              *  IL_OFFSET void   IL offset: 0x3e REG NA

DefList: {  }
N049 (  3,  2) [000040] ------------              *  LCL_VAR   ref    V06 arg6         u:1 NA (last use) REG NA $84

DefList: {  }
N051 (  7,  7) [000042] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+32] Fseq[matches] NA REG NA
<RefPosition #18  @51  RefTypeUse <Ivl:6 V06> LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N053 (???,???) [000125] ------------              *  IL_OFFSET void   IL offset: 0x47 REG NA

DefList: {  }
N055 (  1,  1) [000045] -c----------              *  CNS_INT   int    -1 REG NA $47
Contained
DefList: {  }
N057 (  5,  6) [000047] UA--G-------              *  STORE_LCL_FLD int    V07 loc0         [+56] Fseq[<>1__state] NA REG NA

DefList: {  }
N059 (???,???) [000126] ------------              *  IL_OFFSET void   IL offset: 0x4f REG NA

DefList: {  }
N061 (  3,  3) [000068] ------------              *  LCL_VAR_ADDR long   V07 loc0          NA REG NA $301
Interval 11: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #19  @62  RefTypeDef <Ivl:11> LCL_VAR_ADDR BB01 regmask=[allInt] minReg=1>

DefList: { N061.t68. LCL_VAR_ADDR }
N063 (???,???) [000131] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #20  @63  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #21  @63  RefTypeUse <Ivl:11>  BB01 regmask=[rcx] minReg=1 last fixed>
Interval 12: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #22  @64  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #23  @64  RefTypeDef <Ivl:12> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>

DefList: { N063.t131. PUTARG_REG }
N065 ( 17,  9) [000070] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start REG NA $VN.Void
<RefPosition #24  @65  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #25  @65  RefTypeUse <Ivl:12>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #26  @66  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #27  @66  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #28  @66  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #29  @66  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #30  @66  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #31  @66  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #32  @66  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>

DefList: {  }
N067 (???,???) [000127] ------------              *  IL_OFFSET void   IL offset: 0x5d REG NA

DefList: {  }
N069 (  3,  4) [000076] ------------              *  LCL_FLD   ref    V07 loc0         [+72] Fseq[<>t__builder, m_task] NA REG NA $147
Interval 13: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #33  @70  RefTypeDef <Ivl:13> LCL_FLD BB01 regmask=[allInt] minReg=1>

DefList: { N069.t76. LCL_FLD }
N071 (  3,  4) [000078] DA--G-------              *  STORE_LCL_VAR ref    V10 tmp2         d:2 NA REG NA
<RefPosition #34  @71  RefTypeUse <Ivl:13>  BB01 regmask=[allInt] minReg=1 last>
Assigning related <V10/L7> to <I13>
<RefPosition #35  @72  RefTypeDef <Ivl:7 V10> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N073 (???,???) [000128] ------------              *  IL_OFFSET void   IL offset: 0x5d REG NA

DefList: {  }
N075 (  1,  1) [000079] ------------              *  LCL_VAR   ref    V10 tmp2         u:2 NA (last use) REG NA $147

DefList: {  }
N077 (  5,  4) [000085] DA----------              *  STORE_LCL_VAR ref    V11 tmp3         d:2 NA REG NA
<RefPosition #36  @77  RefTypeUse <Ivl:7 V10> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
Assigning related <V11/L8> to <V10/L7>
<RefPosition #37  @78  RefTypeDef <Ivl:8 V11> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N079 (???,???) [000129] ------------              *  IL_OFFSET void   IL offset: 0x5d REG NA

DefList: {  }
N081 (  1,  1) [000080] ------------              *  LCL_VAR   ref    V11 tmp3         u:2 NA REG NA $147

DefList: {  }
N083 (  1,  1) [000081] -c----------              *  CNS_INT   ref    null REG NA $VN.Null
Contained
DefList: {  }
N085 (  3,  3) [000082] J------N----              *  NE        void   REG NA $282
<RefPosition #38  @85  RefTypeUse <Ivl:8 V11> LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N087 (  5,  5) [000083] ------------              *  JTRUE     void   REG NA



CHECKING LAST USES for BB01, liveout={V11}
==============================
use: {V00 V01 V02 V03 V04 V05 V06}
def: {V10 V11 V12}

NEW BLOCK BB02


Setting BB01 as the predecessor for determining incoming variable registers of BB02
<RefPosition #39  @89  RefTypeBB  BB02 regmask=[] minReg=1>

DefList: {  }
N091 (???,???) [000130] ------------              *  IL_OFFSET void   IL offset: 0x5d REG NA

DefList: {  }
N093 (  3,  3) [000089] ------------              *  LCL_FLD_ADDR byref  V07 loc0         [+72] Fseq[<>t__builder] NA REG NA $1c2
Interval 14: byref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #40  @94  RefTypeDef <Ivl:14> LCL_FLD_ADDR BB02 regmask=[allInt] minReg=1>

DefList: { N093.t89. LCL_FLD_ADDR }
N095 (???,???) [000132] ------------              *  PUTARG_REG byref  REG rcx
<RefPosition #41  @95  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #42  @95  RefTypeUse <Ivl:14>  BB02 regmask=[rcx] minReg=1 last fixed>
Interval 15: byref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #43  @96  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #44  @96  RefTypeDef <Ivl:15> PUTARG_REG BB02 regmask=[rcx] minReg=1 fixed>

DefList: { N095.t132. PUTARG_REG }
N097 ( 17, 10) [000093] --CXG-------              *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise REG NA $14a
<RefPosition #45  @97  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #46  @97  RefTypeUse <Ivl:15>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #47  @98  RefTypeKill <Reg:rax>  BB02 regmask=[rax] minReg=1>
<RefPosition #48  @98  RefTypeKill <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #49  @98  RefTypeKill <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #50  @98  RefTypeKill <Reg:r8 >  BB02 regmask=[r8] minReg=1>
<RefPosition #51  @98  RefTypeKill <Reg:r9 >  BB02 regmask=[r9] minReg=1>
<RefPosition #52  @98  RefTypeKill <Reg:r10>  BB02 regmask=[r10] minReg=1>
<RefPosition #53  @98  RefTypeKill <Reg:r11>  BB02 regmask=[r11] minReg=1>
Interval 16: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #54  @98  RefTypeFixedReg <Reg:rax>  BB02 regmask=[rax] minReg=1>
<RefPosition #55  @98  RefTypeDef <Ivl:16> CALL BB02 regmask=[rax] minReg=1 fixed>

DefList: { N097.t93. CALL }
N099 ( 21, 13) [000095] DA-XG-------              *  STORE_LCL_VAR ref    V11 tmp3         d:4 NA REG NA
<RefPosition #56  @99  RefTypeUse <Ivl:16>  BB02 regmask=[allInt] minReg=1 last>
Assigning related <V11/L8> to <I16>
<RefPosition #57  @100 RefTypeDef <Ivl:8 V11> STORE_LCL_VAR BB02 regmask=[allInt] minReg=1 last>



CHECKING LAST USES for BB02, liveout={V11}
==============================
use: {}
def: {V11}

NEW BLOCK BB03


Setting BB01 as the predecessor for determining incoming variable registers of BB03
<RefPosition #58  @101 RefTypeBB  BB03 regmask=[] minReg=1>

DefList: {  }
N103 (  3,  2) [000088] ------------              *  LCL_VAR   ref    V11 tmp3         u:3 NA (last use) REG NA $380

DefList: {  }
N105 (  4,  3) [000061] ------------              *  RETURN    ref    REG NA $14d
<RefPosition #59  @105 RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #60  @105 RefTypeUse <Ivl:8 V11> LCL_VAR BB03 regmask=[rax] minReg=1 last fixed>



CHECKING LAST USES for BB03, liveout={}
==============================
use: {V11}
def: {}

Linear scan intervals BEFORE VALIDATING INTERVALS:
Interval  0: (V00) ref RefPositions {#0@0 #10@13} physReg:rcx Preferences=[rcx]
Interval  1: (V01) ref RefPositions {#1@0 #11@19} physReg:rdx Preferences=[rdx]
Interval  2: (V02) ref RefPositions {#2@0 #12@25} physReg:r8 Preferences=[r8]
Interval  3: (V03) int RefPositions {#3@0 #13@31} physReg:r9 Preferences=[r9]
Interval  4: (V04) ref RefPositions {#4@0 #14@37} physReg:NA Preferences=[allInt]
Interval  5: (V05) int RefPositions {#6@0 #15@43} physReg:NA Preferences=[allInt]
Interval  6: (V06) ref RefPositions {#5@0 #18@51} physReg:NA Preferences=[allInt]
Interval  7: (V10) ref RefPositions {#35@72 #36@77} physReg:NA Preferences=[allInt] RelatedInterval <V11/L8>
Interval  8: (V11) ref RefPositions {#37@78 #38@85 #57@100 #60@105} physReg:NA Preferences=[rax]
Interval  9: ref (constant) RefPositions {#8@6 #9@7} physReg:NA Preferences=[allInt]
Interval 10: int RefPositions {#16@44 #17@45} physReg:NA Preferences=[allInt]
Interval 11: long RefPositions {#19@62 #21@63} physReg:NA Preferences=[rcx]
Interval 12: long RefPositions {#23@64 #25@65} physReg:NA Preferences=[rcx]
Interval 13: ref RefPositions {#33@70 #34@71} physReg:NA Preferences=[allInt] RelatedInterval <V10/L7>
Interval 14: byref RefPositions {#40@94 #42@95} physReg:NA Preferences=[rcx]
Interval 15: byref RefPositions {#44@96 #46@97} physReg:NA Preferences=[rcx]
Interval 16: ref RefPositions {#55@98 #56@99} physReg:NA Preferences=[rax] RelatedInterval <V11/L8>

------------
REFPOSITIONS BEFORE VALIDATING INTERVALS: 
------------
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00>  BB00 regmask=[rcx] minReg=1 fixed regOptional>
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V01>  BB00 regmask=[rdx] minReg=1 fixed regOptional>
<RefPosition #2   @0   RefTypeParamDef <Ivl:2 V02>  BB00 regmask=[r8] minReg=1 fixed regOptional>
<RefPosition #3   @0   RefTypeParamDef <Ivl:3 V03>  BB00 regmask=[r9] minReg=1 fixed regOptional>
<RefPosition #4   @0   RefTypeParamDef <Ivl:4 V04>  BB00 regmask=[allInt] minReg=1 regOptional>
<RefPosition #5   @0   RefTypeParamDef <Ivl:6 V06>  BB00 regmask=[allInt] minReg=1 regOptional>
<RefPosition #6   @0   RefTypeParamDef <Ivl:5 V05>  BB00 regmask=[allInt] minReg=1 regOptional>
<RefPosition #7   @1   RefTypeBB  BB01 regmask=[] minReg=1>
<RefPosition #8   @6   RefTypeDef <Ivl:9> CNS_INT BB01 regmask=[allInt] minReg=1>
<RefPosition #9   @7   RefTypeUse <Ivl:9>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #10  @13  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #11  @19  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #12  @25  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #13  @31  RefTypeUse <Ivl:3 V03> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #14  @37  RefTypeUse <Ivl:4 V04> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #15  @43  RefTypeUse <Ivl:5 V05> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #16  @44  RefTypeDef <Ivl:10> CAST BB01 regmask=[allInt] minReg=1>
<RefPosition #17  @45  RefTypeUse <Ivl:10>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #18  @51  RefTypeUse <Ivl:6 V06> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #19  @62  RefTypeDef <Ivl:11> LCL_VAR_ADDR BB01 regmask=[rcx] minReg=1>
<RefPosition #20  @63  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #21  @63  RefTypeUse <Ivl:11>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #22  @64  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #23  @64  RefTypeDef <Ivl:12> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #24  @65  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #25  @65  RefTypeUse <Ivl:12>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #26  @66  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #27  @66  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #28  @66  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #29  @66  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #30  @66  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #31  @66  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #32  @66  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #33  @70  RefTypeDef <Ivl:13> LCL_FLD BB01 regmask=[allInt] minReg=1>
<RefPosition #34  @71  RefTypeUse <Ivl:13>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #35  @72  RefTypeDef <Ivl:7 V10> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #36  @77  RefTypeUse <Ivl:7 V10> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #37  @78  RefTypeDef <Ivl:8 V11> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #38  @85  RefTypeUse <Ivl:8 V11> LCL_VAR BB01 regmask=[allInt] minReg=1 regOptional>
<RefPosition #39  @89  RefTypeBB  BB02 regmask=[] minReg=1>
<RefPosition #40  @94  RefTypeDef <Ivl:14> LCL_FLD_ADDR BB02 regmask=[rcx] minReg=1>
<RefPosition #41  @95  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #42  @95  RefTypeUse <Ivl:14>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #43  @96  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #44  @96  RefTypeDef <Ivl:15> PUTARG_REG BB02 regmask=[rcx] minReg=1 fixed>
<RefPosition #45  @97  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #46  @97  RefTypeUse <Ivl:15>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #47  @98  RefTypeKill <Reg:rax>  BB02 regmask=[rax] minReg=1 last>
<RefPosition #48  @98  RefTypeKill <Reg:rcx>  BB02 regmask=[rcx] minReg=1 last>
<RefPosition #49  @98  RefTypeKill <Reg:rdx>  BB02 regmask=[rdx] minReg=1 last>
<RefPosition #50  @98  RefTypeKill <Reg:r8 >  BB02 regmask=[r8] minReg=1 last>
<RefPosition #51  @98  RefTypeKill <Reg:r9 >  BB02 regmask=[r9] minReg=1 last>
<RefPosition #52  @98  RefTypeKill <Reg:r10>  BB02 regmask=[r10] minReg=1 last>
<RefPosition #53  @98  RefTypeKill <Reg:r11>  BB02 regmask=[r11] minReg=1 last>
<RefPosition #54  @98  RefTypeFixedReg <Reg:rax>  BB02 regmask=[rax] minReg=1>
<RefPosition #55  @98  RefTypeDef <Ivl:16> CALL BB02 regmask=[rax] minReg=1 fixed>
<RefPosition #56  @99  RefTypeUse <Ivl:16>  BB02 regmask=[allInt] minReg=1 last>
<RefPosition #57  @100 RefTypeDef <Ivl:8 V11> STORE_LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #58  @101 RefTypeBB  BB03 regmask=[] minReg=1>
<RefPosition #59  @105 RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #60  @105 RefTypeUse <Ivl:8 V11> LCL_VAR BB03 regmask=[rax] minReg=1 last fixed>
-----------------
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00>  BB00 regmask=[rcx] minReg=1 fixed regOptional>
<RefPosition #10  @13  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
-----------------
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V01>  BB00 regmask=[rdx] minReg=1 fixed regOptional>
<RefPosition #11  @19  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
-----------------
<RefPosition #2   @0   RefTypeParamDef <Ivl:2 V02>  BB00 regmask=[r8] minReg=1 fixed regOptional>
<RefPosition #12  @25  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
-----------------
<RefPosition #3   @0   RefTypeParamDef <Ivl:3 V03>  BB00 regmask=[r9] minReg=1 fixed regOptional>
<RefPosition #13  @31  RefTypeUse <Ivl:3 V03> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
-----------------
<RefPosition #35  @72  RefTypeDef <Ivl:7 V10> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #36  @77  RefTypeUse <Ivl:7 V10> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
-----------------
<RefPosition #37  @78  RefTypeDef <Ivl:8 V11> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #38  @85  RefTypeUse <Ivl:8 V11> LCL_VAR BB01 regmask=[allInt] minReg=1 regOptional>
<RefPosition #57  @100 RefTypeDef <Ivl:8 V11> STORE_LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #60  @105 RefTypeUse <Ivl:8 V11> LCL_VAR BB03 regmask=[rax] minReg=1 last fixed>
-----------------
<RefPosition #4   @0   RefTypeParamDef <Ivl:4 V04>  BB00 regmask=[allInt] minReg=1 regOptional>
<RefPosition #14  @37  RefTypeUse <Ivl:4 V04> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
-----------------
<RefPosition #5   @0   RefTypeParamDef <Ivl:6 V06>  BB00 regmask=[allInt] minReg=1 regOptional>
<RefPosition #18  @51  RefTypeUse <Ivl:6 V06> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
-----------------
<RefPosition #6   @0   RefTypeParamDef <Ivl:5 V05>  BB00 regmask=[allInt] minReg=1 regOptional>
<RefPosition #15  @43  RefTypeUse <Ivl:5 V05> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
TUPLE STYLE DUMP WITH REF POSITIONS
Incoming Parameters:  V00 V01 V02 V03 V04 V06 V05
BB01 [000..06A) -> BB03 (cond), preds={} succs={BB02,BB03}
=====
  N003.                    IL_OFFSET IL offset: 0x0
  N005.                    CNS_INT   null
        Def:<I9>(#8)
  N007.                    V07 MEM
                               Use:<I9>(#9) *
  N009.                    IL_OFFSET IL offset: 0xc
  N011.                    V00(L0)
  N013.                    V07 MEM
                               Use:<V00/L0>(#10) *
  N015.                    IL_OFFSET IL offset: 0x14
  N017.                    V01(L1)
  N019.                    V07 MEM
                               Use:<V01/L1>(#11) *
  N021.                    IL_OFFSET IL offset: 0x1c
  N023.                    V02(L2)
  N025.                    V07 MEM
                               Use:<V02/L2>(#12) *
  N027.                    IL_OFFSET IL offset: 0x24
  N029.                    V03(L3)
  N031.                    V07 MEM
                               Use:<V03/L3>(#13) *
  N033.                    IL_OFFSET IL offset: 0x2c
  N035.                    V04(L4)
  N037.                    V07 MEM
                               Use:<V04/L4>(#14) *
  N039.                    IL_OFFSET IL offset: 0x35
  N041.                    V05(L5)
  N043.                    CAST     
                               Use:<V05/L5>(#15) *
        Def:<I10>(#16)
  N045.                    V07 MEM
                               Use:<I10>(#17) *
  N047.                    IL_OFFSET IL offset: 0x3e
  N049.                    V06(L6)
  N051.                    V07 MEM
                               Use:<V06/L6>(#18) *
  N053.                    IL_OFFSET IL offset: 0x47
  N055.                    CNS_INT   -1
  N057.                    V07 MEM
  N059.                    IL_OFFSET IL offset: 0x4f
  N061.                    LCL_VAR_ADDR V07 loc0          NA
        Def:<I11>(#19)
  N063.                    PUTARG_REG
                               Use:<I11>(#21) Fixed:rcx(#20) *
        Def:<I12>(#23) rcx
  N065.                    CALL     
                               Use:<I12>(#25) Fixed:rcx(#24) *
        Kill: rax rcx rdx r8 r9 r10 r11 
  N067.                    IL_OFFSET IL offset: 0x5d
  N069.                    V07 MEM
        Def:<I13>(#33) Pref:<V10/L7>
  N071.                    V10(L7)
                               Use:<I13>(#34) *
        Def:<V10/L7>(#35) Pref:<V11/L8>
  N073.                    IL_OFFSET IL offset: 0x5d
  N075.                    V10(L7)
  N077.                    V11(L8)
                               Use:<V10/L7>(#36) *
        Def:<V11/L8>(#37)
  N079.                    IL_OFFSET IL offset: 0x5d
  N081.                    V11(L8)
  N083.                    CNS_INT   null
  N085.                    NE       
                               Use:<V11/L8>(#38)
  N087.                    JTRUE    

BB02 [05D..05E), preds={BB01} succs={BB03}
=====
  N091.                    IL_OFFSET IL offset: 0x5d
  N093.                    LCL_FLD_ADDR V07 loc0         [+72] Fseq[<>t__builder] NA
        Def:<I14>(#40)
  N095.                    PUTARG_REG
                               Use:<I14>(#42) Fixed:rcx(#41) *
        Def:<I15>(#44) rcx
  N097.                    CALL     
                               Use:<I15>(#46) Fixed:rcx(#45) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I16>(#55) rax Pref:<V11/L8>
  N099.                    V11(L8)
                               Use:<I16>(#56) *
        Def:<V11/L8>(#57)

BB03 [05D..05E) (return), preds={BB01,BB02} succs={}
=====
  N103.                    V11(L8)
  N105.                    RETURN   
                               Use:<V11/L8>(#60) Fixed:rax(#59) *




Linear scan intervals after buildIntervals:
Interval  0: (V00) ref RefPositions {#0@0 #10@13} physReg:rcx Preferences=[rcx]
Interval  1: (V01) ref RefPositions {#1@0 #11@19} physReg:rdx Preferences=[rdx]
Interval  2: (V02) ref RefPositions {#2@0 #12@25} physReg:r8 Preferences=[r8]
Interval  3: (V03) int RefPositions {#3@0 #13@31} physReg:r9 Preferences=[r9]
Interval  4: (V04) ref RefPositions {#4@0 #14@37} physReg:NA Preferences=[allInt]
Interval  5: (V05) int RefPositions {#6@0 #15@43} physReg:NA Preferences=[allInt]
Interval  6: (V06) ref RefPositions {#5@0 #18@51} physReg:NA Preferences=[allInt]
Interval  7: (V10) ref RefPositions {#35@72 #36@77} physReg:NA Preferences=[allInt] RelatedInterval <V11/L8>
Interval  8: (V11) ref RefPositions {#37@78 #38@85 #57@100 #60@105} physReg:NA Preferences=[rax]
Interval  9: ref (constant) RefPositions {#8@6 #9@7} physReg:NA Preferences=[allInt]
Interval 10: int RefPositions {#16@44 #17@45} physReg:NA Preferences=[allInt]
Interval 11: long RefPositions {#19@62 #21@63} physReg:NA Preferences=[rcx]
Interval 12: long RefPositions {#23@64 #25@65} physReg:NA Preferences=[rcx]
Interval 13: ref RefPositions {#33@70 #34@71} physReg:NA Preferences=[allInt] RelatedInterval <V10/L7>
Interval 14: byref RefPositions {#40@94 #42@95} physReg:NA Preferences=[rcx]
Interval 15: byref RefPositions {#44@96 #46@97} physReg:NA Preferences=[rcx]
Interval 16: ref RefPositions {#55@98 #56@99} physReg:NA Preferences=[rax] RelatedInterval <V11/L8>

*************** In LinearScan::allocateRegisters()

Linear scan intervals before allocateRegisters:
Interval  0: (V00) ref RefPositions {#0@0 #10@13} physReg:rcx Preferences=[rcx]
Interval  1: (V01) ref RefPositions {#1@0 #11@19} physReg:rdx Preferences=[rdx]
Interval  2: (V02) ref RefPositions {#2@0 #12@25} physReg:r8 Preferences=[r8]
Interval  3: (V03) int RefPositions {#3@0 #13@31} physReg:r9 Preferences=[r9]
Interval  4: (V04) ref RefPositions {#4@0 #14@37} physReg:NA Preferences=[allInt]
Interval  5: (V05) int RefPositions {#6@0 #15@43} physReg:NA Preferences=[allInt]
Interval  6: (V06) ref RefPositions {#5@0 #18@51} physReg:NA Preferences=[allInt]
Interval  7: (V10) ref RefPositions {#35@72 #36@77} physReg:NA Preferences=[allInt] RelatedInterval <V11/L8>
Interval  8: (V11) ref RefPositions {#37@78 #38@85 #57@100 #60@105} physReg:NA Preferences=[rax]
Interval  9: ref (constant) RefPositions {#8@6 #9@7} physReg:NA Preferences=[allInt]
Interval 10: int RefPositions {#16@44 #17@45} physReg:NA Preferences=[allInt]
Interval 11: long RefPositions {#19@62 #21@63} physReg:NA Preferences=[rcx]
Interval 12: long RefPositions {#23@64 #25@65} physReg:NA Preferences=[rcx]
Interval 13: ref RefPositions {#33@70 #34@71} physReg:NA Preferences=[allInt] RelatedInterval <V10/L7>
Interval 14: byref RefPositions {#40@94 #42@95} physReg:NA Preferences=[rcx]
Interval 15: byref RefPositions {#44@96 #46@97} physReg:NA Preferences=[rcx]
Interval 16: ref RefPositions {#55@98 #56@99} physReg:NA Preferences=[rax] RelatedInterval <V11/L8>

------------
REFPOSITIONS BEFORE ALLOCATION: 
------------
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00>  BB00 regmask=[rcx] minReg=1 fixed regOptional>
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V01>  BB00 regmask=[rdx] minReg=1 fixed regOptional>
<RefPosition #2   @0   RefTypeParamDef <Ivl:2 V02>  BB00 regmask=[r8] minReg=1 fixed regOptional>
<RefPosition #3   @0   RefTypeParamDef <Ivl:3 V03>  BB00 regmask=[r9] minReg=1 fixed regOptional>
<RefPosition #4   @0   RefTypeParamDef <Ivl:4 V04>  BB00 regmask=[allInt] minReg=1 regOptional>
<RefPosition #5   @0   RefTypeParamDef <Ivl:6 V06>  BB00 regmask=[allInt] minReg=1 regOptional>
<RefPosition #6   @0   RefTypeParamDef <Ivl:5 V05>  BB00 regmask=[allInt] minReg=1 regOptional>
<RefPosition #7   @1   RefTypeBB  BB01 regmask=[] minReg=1>
<RefPosition #8   @6   RefTypeDef <Ivl:9> CNS_INT BB01 regmask=[allInt] minReg=1>
<RefPosition #9   @7   RefTypeUse <Ivl:9>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #10  @13  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #11  @19  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #12  @25  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #13  @31  RefTypeUse <Ivl:3 V03> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #14  @37  RefTypeUse <Ivl:4 V04> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #15  @43  RefTypeUse <Ivl:5 V05> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #16  @44  RefTypeDef <Ivl:10> CAST BB01 regmask=[allInt] minReg=1>
<RefPosition #17  @45  RefTypeUse <Ivl:10>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #18  @51  RefTypeUse <Ivl:6 V06> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #19  @62  RefTypeDef <Ivl:11> LCL_VAR_ADDR BB01 regmask=[rcx] minReg=1>
<RefPosition #20  @63  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #21  @63  RefTypeUse <Ivl:11>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #22  @64  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #23  @64  RefTypeDef <Ivl:12> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #24  @65  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #25  @65  RefTypeUse <Ivl:12>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #26  @66  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #27  @66  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #28  @66  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #29  @66  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #30  @66  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #31  @66  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #32  @66  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #33  @70  RefTypeDef <Ivl:13> LCL_FLD BB01 regmask=[allInt] minReg=1>
<RefPosition #34  @71  RefTypeUse <Ivl:13>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #35  @72  RefTypeDef <Ivl:7 V10> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #36  @77  RefTypeUse <Ivl:7 V10> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #37  @78  RefTypeDef <Ivl:8 V11> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #38  @85  RefTypeUse <Ivl:8 V11> LCL_VAR BB01 regmask=[allInt] minReg=1 regOptional>
<RefPosition #39  @89  RefTypeBB  BB02 regmask=[] minReg=1>
<RefPosition #40  @94  RefTypeDef <Ivl:14> LCL_FLD_ADDR BB02 regmask=[rcx] minReg=1>
<RefPosition #41  @95  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #42  @95  RefTypeUse <Ivl:14>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #43  @96  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #44  @96  RefTypeDef <Ivl:15> PUTARG_REG BB02 regmask=[rcx] minReg=1 fixed>
<RefPosition #45  @97  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #46  @97  RefTypeUse <Ivl:15>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #47  @98  RefTypeKill <Reg:rax>  BB02 regmask=[rax] minReg=1 last>
<RefPosition #48  @98  RefTypeKill <Reg:rcx>  BB02 regmask=[rcx] minReg=1 last>
<RefPosition #49  @98  RefTypeKill <Reg:rdx>  BB02 regmask=[rdx] minReg=1 last>
<RefPosition #50  @98  RefTypeKill <Reg:r8 >  BB02 regmask=[r8] minReg=1 last>
<RefPosition #51  @98  RefTypeKill <Reg:r9 >  BB02 regmask=[r9] minReg=1 last>
<RefPosition #52  @98  RefTypeKill <Reg:r10>  BB02 regmask=[r10] minReg=1 last>
<RefPosition #53  @98  RefTypeKill <Reg:r11>  BB02 regmask=[r11] minReg=1 last>
<RefPosition #54  @98  RefTypeFixedReg <Reg:rax>  BB02 regmask=[rax] minReg=1>
<RefPosition #55  @98  RefTypeDef <Ivl:16> CALL BB02 regmask=[rax] minReg=1 fixed>
<RefPosition #56  @99  RefTypeUse <Ivl:16>  BB02 regmask=[allInt] minReg=1 last>
<RefPosition #57  @100 RefTypeDef <Ivl:8 V11> STORE_LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #58  @101 RefTypeBB  BB03 regmask=[] minReg=1>
<RefPosition #59  @105 RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #60  @105 RefTypeUse <Ivl:8 V11> LCL_VAR BB03 regmask=[rax] minReg=1 last fixed>

VAR REFPOSITIONS BEFORE ALLOCATION
--- V00  (Interval 0)
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00>  BB00 regmask=[rcx] minReg=1 fixed regOptional>
<RefPosition #10  @13  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
--- V01  (Interval 1)
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V01>  BB00 regmask=[rdx] minReg=1 fixed regOptional>
<RefPosition #11  @19  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
--- V02  (Interval 2)
<RefPosition #2   @0   RefTypeParamDef <Ivl:2 V02>  BB00 regmask=[r8] minReg=1 fixed regOptional>
<RefPosition #12  @25  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
--- V03  (Interval 3)
<RefPosition #3   @0   RefTypeParamDef <Ivl:3 V03>  BB00 regmask=[r9] minReg=1 fixed regOptional>
<RefPosition #13  @31  RefTypeUse <Ivl:3 V03> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
--- V04  (Interval 4)
<RefPosition #4   @0   RefTypeParamDef <Ivl:4 V04>  BB00 regmask=[allInt] minReg=1 regOptional>
<RefPosition #14  @37  RefTypeUse <Ivl:4 V04> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
--- V05  (Interval 5)
<RefPosition #6   @0   RefTypeParamDef <Ivl:5 V05>  BB00 regmask=[allInt] minReg=1 regOptional>
<RefPosition #15  @43  RefTypeUse <Ivl:5 V05> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
--- V06  (Interval 6)
<RefPosition #5   @0   RefTypeParamDef <Ivl:6 V06>  BB00 regmask=[allInt] minReg=1 regOptional>
<RefPosition #18  @51  RefTypeUse <Ivl:6 V06> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
--- V07
--- V08
--- V09
--- V10  (Interval 7)
<RefPosition #35  @72  RefTypeDef <Ivl:7 V10> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #36  @77  RefTypeUse <Ivl:7 V10> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
--- V11  (Interval 8)
<RefPosition #37  @78  RefTypeDef <Ivl:8 V11> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #38  @85  RefTypeUse <Ivl:8 V11> LCL_VAR BB01 regmask=[allInt] minReg=1 regOptional>
<RefPosition #57  @100 RefTypeDef <Ivl:8 V11> STORE_LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #60  @105 RefTypeUse <Ivl:8 V11> LCL_VAR BB03 regmask=[rax] minReg=1 last fixed>
--- V12



Allocating Registers
--------------------
The following table has one or more rows for each RefPosition that is handled during allocation.
The first column provides the basic information about the RefPosition, with its type (e.g. Def,
Use, Fixd) followed by a '*' if it is a last use, and a 'D' if it is delayRegFree, and then the
action taken during allocation (e.g. Alloc a new register, or Keep an existing one).
The subsequent columns show the Interval occupying each register, if any, followed by 'a' if it is
active, a 'p' if it is a large vector that has been partially spilled, and 'i'if it is inactive.
Columns are only printed up to the last modifed register, which may increase during allocation,
in which case additional columns will appear.  
Registers which are not marked modified have ---- in their column.

-------------------------------+----+----+----+----+----+----+----+----+----+
Loc RP# Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
-------------------------------+----+----+----+----+----+----+----+----+----+
                               |    |V0 a|V1 a|    |    |    |    |V2 a|V3 a|
  0.#0  V0   Parm   Keep  rcx  |    |V0 a|V1 a|    |    |    |    |V2 a|V3 a|
  0.#1  V1   Parm   Keep  rdx  |    |V0 a|V1 a|    |    |    |    |V2 a|V3 a|
  0.#2  V2   Parm   Keep  r8   |    |V0 a|V1 a|    |    |    |    |V2 a|V3 a|
  0.#3  V3   Parm   Keep  r9   |    |V0 a|V1 a|    |    |    |    |V2 a|V3 a|
  0.#4  V4   Parm   LoRef      |    |V0 a|V1 a|    |    |    |    |V2 a|V3 a|
  0.#5  V6   Parm   LoRef      |    |V0 a|V1 a|    |    |    |    |V2 a|V3 a|
  0.#6  V5   Parm   LoRef      |    |V0 a|V1 a|    |    |    |    |V2 a|V3 a|
  1.#7  BB1 PredBB0            |    |V0 a|V1 a|    |    |    |    |V2 a|V3 a|
  6.#8  C9   Def    Alloc rax  |C9 a|V0 a|V1 a|    |    |    |    |V2 a|V3 a|
  7.#9  C9   Use *  Keep  rax  |C9 a|V0 a|V1 a|    |    |    |    |V2 a|V3 a|
 13.#10 V0   Use *  Keep  rcx  |C9 i|V0 a|V1 a|    |    |    |    |V2 a|V3 a|
 19.#11 V1   Use *  Keep  rdx  |C9 i|    |V1 a|    |    |    |    |V2 a|V3 a|
 25.#12 V2   Use *  Keep  r8   |C9 i|    |    |    |    |    |    |V2 a|V3 a|
 31.#13 V3   Use *  Keep  r9   |C9 i|    |    |    |    |    |    |    |V3 a|
 37.#14 V4   Use *  ReLod NA   |C9 i|    |    |    |    |    |    |    |    |
                    Alloc rcx  |C9 i|V4 a|    |    |    |    |    |    |    |
 43.#15 V5   Use *  ReLod NA   |C9 i|    |    |    |    |    |    |    |    |
                    Alloc rcx  |C9 i|V5 a|    |    |    |    |    |    |    |
 44.#16 I10  Def    Alloc rcx  |C9 i|I10a|    |    |    |    |    |    |    |
 45.#17 I10  Use *  Keep  rcx  |C9 i|I10a|    |    |    |    |    |    |    |
 51.#18 V6   Use *  ReLod NA   |C9 i|    |    |    |    |    |    |    |    |
                    Alloc rcx  |C9 i|V6 a|    |    |    |    |    |    |    |
 62.#19 I11  Def    Alloc rcx  |C9 i|I11a|    |    |    |    |    |    |    |
 63.#20 rcx  Fixd   Keep  rcx  |C9 i|I11a|    |    |    |    |    |    |    |
 63.#21 I11  Use *  Keep  rcx  |C9 i|I11a|    |    |    |    |    |    |    |
 64.#22 rcx  Fixd   Keep  rcx  |C9 i|    |    |    |    |    |    |    |    |
 64.#23 I12  Def    Alloc rcx  |C9 i|I12a|    |    |    |    |    |    |    |
 65.#24 rcx  Fixd   Keep  rcx  |C9 i|I12a|    |    |    |    |    |    |    |
 65.#25 I12  Use *  Keep  rcx  |C9 i|I12a|    |    |    |    |    |    |    |
 66.#26 rax  Kill   Keep  rax  |    |    |    |    |    |    |    |    |    |
 66.#27 rcx  Kill   Keep  rcx  |    |    |    |    |    |    |    |    |    |
 66.#28 rdx  Kill   Keep  rdx  |    |    |    |    |    |    |    |    |    |
 66.#29 r8   Kill   Keep  r8   |    |    |    |    |    |    |    |    |    |
 66.#30 r9   Kill   Keep  r9   |    |    |    |    |    |    |    |    |    |
 66.#31 r10  Kill   Keep  r10  |    |    |    |    |    |    |    |    |    |
 66.#32 r11  Kill   Keep  r11  |    |    |    |    |    |    |    |    |    |
 70.#33 I13  Def    Alloc rax  |I13a|    |    |    |    |    |    |    |    |
 71.#34 I13  Use *  Keep  rax  |I13a|    |    |    |    |    |    |    |    |
 72.#35 V10  Def    Alloc rax  |V10a|    |    |    |    |    |    |    |    |
 77.#36 V10  Use *  Keep  rax  |V10a|    |    |    |    |    |    |    |    |
 78.#37 V11  Def    Alloc rax  |V11a|    |    |    |    |    |    |    |    |
 85.#38 V11  Use    Keep  rax  |V11a|    |    |    |    |    |    |    |    |
-------------------------------+----+----+----+----+----+----+----+----+----+
Loc RP# Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
-------------------------------+----+----+----+----+----+----+----+----+----+
 89.#39 BB2 PredBB1            |V11i|    |    |    |    |    |    |    |    |
 94.#40 I14  Def    Alloc rcx  |V11i|I14a|    |    |    |    |    |    |    |
 95.#41 rcx  Fixd   Keep  rcx  |V11i|I14a|    |    |    |    |    |    |    |
 95.#42 I14  Use *  Keep  rcx  |V11i|I14a|    |    |    |    |    |    |    |
 96.#43 rcx  Fixd   Keep  rcx  |V11i|    |    |    |    |    |    |    |    |
 96.#44 I15  Def    Alloc rcx  |V11i|I15a|    |    |    |    |    |    |    |
 97.#45 rcx  Fixd   Keep  rcx  |V11i|I15a|    |    |    |    |    |    |    |
 97.#46 I15  Use *  Keep  rcx  |V11i|I15a|    |    |    |    |    |    |    |
 98.#47 rax  Kill   Keep  rax  |    |    |    |    |    |    |    |    |    |
 98.#48 rcx  Kill   Keep  rcx  |    |    |    |    |    |    |    |    |    |
 98.#49 rdx  Kill   Keep  rdx  |    |    |    |    |    |    |    |    |    |
 98.#50 r8   Kill   Keep  r8   |    |    |    |    |    |    |    |    |    |
 98.#51 r9   Kill   Keep  r9   |    |    |    |    |    |    |    |    |    |
 98.#52 r10  Kill   Keep  r10  |    |    |    |    |    |    |    |    |    |
 98.#53 r11  Kill   Keep  r11  |    |    |    |    |    |    |    |    |    |
 98.#54 rax  Fixd   Keep  rax  |    |    |    |    |    |    |    |    |    |
 98.#55 I16  Def    Alloc rax  |I16a|    |    |    |    |    |    |    |    |
 99.#56 I16  Use *  Keep  rax  |I16a|    |    |    |    |    |    |    |    |
100.#57 V11  Def    Alloc rax  |V11a|    |    |    |    |    |    |    |    |
-------------------------------+----+----+----+----+----+----+----+----+----+
Loc RP# Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
-------------------------------+----+----+----+----+----+----+----+----+----+
101.#58 BB3 PredBB1            |V11a|    |    |    |    |    |    |    |    |
105.#59 rax  Fixd   Keep  rax  |V11a|    |    |    |    |    |    |    |    |
105.#60 V11  Use *  Keep  rax  |    |    |    |    |    |    |    |    |    |

------------
REFPOSITIONS AFTER ALLOCATION: 
------------
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00>  BB00 regmask=[rcx] minReg=1 fixed regOptional>
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V01>  BB00 regmask=[rdx] minReg=1 fixed regOptional>
<RefPosition #2   @0   RefTypeParamDef <Ivl:2 V02>  BB00 regmask=[r8] minReg=1 fixed regOptional>
<RefPosition #3   @0   RefTypeParamDef <Ivl:3 V03>  BB00 regmask=[r9] minReg=1 fixed regOptional>
<RefPosition #4   @0   RefTypeParamDef <Ivl:4 V04>  BB00 regmask=[] minReg=1 regOptional>
<RefPosition #5   @0   RefTypeParamDef <Ivl:6 V06>  BB00 regmask=[] minReg=1 regOptional>
<RefPosition #6   @0   RefTypeParamDef <Ivl:5 V05>  BB00 regmask=[] minReg=1 regOptional>
<RefPosition #7   @1   RefTypeBB  BB01 regmask=[] minReg=1>
<RefPosition #8   @6   RefTypeDef <Ivl:9> CNS_INT BB01 regmask=[rax] minReg=1>
<RefPosition #9   @7   RefTypeUse <Ivl:9>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #10  @13  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rcx] minReg=1 last>
<RefPosition #11  @19  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[rdx] minReg=1 last>
<RefPosition #12  @25  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[r8] minReg=1 last>
<RefPosition #13  @31  RefTypeUse <Ivl:3 V03> LCL_VAR BB01 regmask=[r9] minReg=1 last>
<RefPosition #14  @37  RefTypeUse <Ivl:4 V04> LCL_VAR BB01 regmask=[rcx] minReg=1 last reload>
<RefPosition #15  @43  RefTypeUse <Ivl:5 V05> LCL_VAR BB01 regmask=[rcx] minReg=1 last reload>
<RefPosition #16  @44  RefTypeDef <Ivl:10> CAST BB01 regmask=[rcx] minReg=1>
<RefPosition #17  @45  RefTypeUse <Ivl:10>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #18  @51  RefTypeUse <Ivl:6 V06> LCL_VAR BB01 regmask=[rcx] minReg=1 last reload>
<RefPosition #19  @62  RefTypeDef <Ivl:11> LCL_VAR_ADDR BB01 regmask=[rcx] minReg=1>
<RefPosition #20  @63  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #21  @63  RefTypeUse <Ivl:11>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #22  @64  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #23  @64  RefTypeDef <Ivl:12> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #24  @65  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #25  @65  RefTypeUse <Ivl:12>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #26  @66  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #27  @66  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #28  @66  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #29  @66  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #30  @66  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #31  @66  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #32  @66  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #33  @70  RefTypeDef <Ivl:13> LCL_FLD BB01 regmask=[rax] minReg=1>
<RefPosition #34  @71  RefTypeUse <Ivl:13>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #35  @72  RefTypeDef <Ivl:7 V10> STORE_LCL_VAR BB01 regmask=[rax] minReg=1>
<RefPosition #36  @77  RefTypeUse <Ivl:7 V10> LCL_VAR BB01 regmask=[rax] minReg=1 last>
<RefPosition #37  @78  RefTypeDef <Ivl:8 V11> STORE_LCL_VAR BB01 regmask=[rax] minReg=1>
<RefPosition #38  @85  RefTypeUse <Ivl:8 V11> LCL_VAR BB01 regmask=[rax] minReg=1 regOptional>
<RefPosition #39  @89  RefTypeBB  BB02 regmask=[] minReg=1>
<RefPosition #40  @94  RefTypeDef <Ivl:14> LCL_FLD_ADDR BB02 regmask=[rcx] minReg=1>
<RefPosition #41  @95  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #42  @95  RefTypeUse <Ivl:14>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #43  @96  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #44  @96  RefTypeDef <Ivl:15> PUTARG_REG BB02 regmask=[rcx] minReg=1 fixed>
<RefPosition #45  @97  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #46  @97  RefTypeUse <Ivl:15>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #47  @98  RefTypeKill <Reg:rax>  BB02 regmask=[rax] minReg=1 last>
<RefPosition #48  @98  RefTypeKill <Reg:rcx>  BB02 regmask=[rcx] minReg=1 last>
<RefPosition #49  @98  RefTypeKill <Reg:rdx>  BB02 regmask=[rdx] minReg=1 last>
<RefPosition #50  @98  RefTypeKill <Reg:r8 >  BB02 regmask=[r8] minReg=1 last>
<RefPosition #51  @98  RefTypeKill <Reg:r9 >  BB02 regmask=[r9] minReg=1 last>
<RefPosition #52  @98  RefTypeKill <Reg:r10>  BB02 regmask=[r10] minReg=1 last>
<RefPosition #53  @98  RefTypeKill <Reg:r11>  BB02 regmask=[r11] minReg=1 last>
<RefPosition #54  @98  RefTypeFixedReg <Reg:rax>  BB02 regmask=[rax] minReg=1>
<RefPosition #55  @98  RefTypeDef <Ivl:16> CALL BB02 regmask=[rax] minReg=1 fixed>
<RefPosition #56  @99  RefTypeUse <Ivl:16>  BB02 regmask=[rax] minReg=1 last>
<RefPosition #57  @100 RefTypeDef <Ivl:8 V11> STORE_LCL_VAR BB02 regmask=[rax] minReg=1>
<RefPosition #58  @101 RefTypeBB  BB03 regmask=[] minReg=1>
<RefPosition #59  @105 RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #60  @105 RefTypeUse <Ivl:8 V11> LCL_VAR BB03 regmask=[rax] minReg=1 last fixed>

VAR REFPOSITIONS AFTER ALLOCATION
--- V00  (Interval 0)
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00>  BB00 regmask=[rcx] minReg=1 fixed regOptional>
<RefPosition #10  @13  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rcx] minReg=1 last>
--- V01  (Interval 1)
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V01>  BB00 regmask=[rdx] minReg=1 fixed regOptional>
<RefPosition #11  @19  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[rdx] minReg=1 last>
--- V02  (Interval 2)
<RefPosition #2   @0   RefTypeParamDef <Ivl:2 V02>  BB00 regmask=[r8] minReg=1 fixed regOptional>
<RefPosition #12  @25  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[r8] minReg=1 last>
--- V03  (Interval 3)
<RefPosition #3   @0   RefTypeParamDef <Ivl:3 V03>  BB00 regmask=[r9] minReg=1 fixed regOptional>
<RefPosition #13  @31  RefTypeUse <Ivl:3 V03> LCL_VAR BB01 regmask=[r9] minReg=1 last>
--- V04  (Interval 4)
<RefPosition #4   @0   RefTypeParamDef <Ivl:4 V04>  BB00 regmask=[] minReg=1 regOptional>
<RefPosition #14  @37  RefTypeUse <Ivl:4 V04> LCL_VAR BB01 regmask=[rcx] minReg=1 last reload>
--- V05  (Interval 5)
<RefPosition #6   @0   RefTypeParamDef <Ivl:5 V05>  BB00 regmask=[] minReg=1 regOptional>
<RefPosition #15  @43  RefTypeUse <Ivl:5 V05> LCL_VAR BB01 regmask=[rcx] minReg=1 last reload>
--- V06  (Interval 6)
<RefPosition #5   @0   RefTypeParamDef <Ivl:6 V06>  BB00 regmask=[] minReg=1 regOptional>
<RefPosition #18  @51  RefTypeUse <Ivl:6 V06> LCL_VAR BB01 regmask=[rcx] minReg=1 last reload>
--- V07
--- V08
--- V09
--- V10  (Interval 7)
<RefPosition #35  @72  RefTypeDef <Ivl:7 V10> STORE_LCL_VAR BB01 regmask=[rax] minReg=1>
<RefPosition #36  @77  RefTypeUse <Ivl:7 V10> LCL_VAR BB01 regmask=[rax] minReg=1 last>
--- V11  (Interval 8)
<RefPosition #37  @78  RefTypeDef <Ivl:8 V11> STORE_LCL_VAR BB01 regmask=[rax] minReg=1>
<RefPosition #38  @85  RefTypeUse <Ivl:8 V11> LCL_VAR BB01 regmask=[rax] minReg=1 regOptional>
<RefPosition #57  @100 RefTypeDef <Ivl:8 V11> STORE_LCL_VAR BB02 regmask=[rax] minReg=1>
<RefPosition #60  @105 RefTypeUse <Ivl:8 V11> LCL_VAR BB03 regmask=[rax] minReg=1 last fixed>
--- V12

Active intervals at end of allocation:

-----------------------
RESOLVING BB BOUNDARIES
-----------------------
Resolution Candidates: {V00 V01 V02 V03 V04 V05 V06 V11}
Has Critical Edges

Prior to Resolution

BB01
use def in out
{V00 V01 V02 V03 V04 V05 V06}
{V10 V11 V12}
{V00 V01 V02 V03 V04 V05 V06}
{V11}
Var=Reg beg of BB01: V00=rcx V01=rdx V02=r8 V03=r9 
Var=Reg end of BB01: V11=rax 

BB02
use def in out
{}
{V11}
{}
{V11}
Var=Reg beg of BB02: none
Var=Reg end of BB02: V11=rax 

BB03
use def in out
{V11}
{}
{V11}
{}
Var=Reg beg of BB03: V11=rax 
Var=Reg end of BB03: none


RESOLVING EDGES

  Set V00 argument initial register to rcx
  Set V01 argument initial register to rdx
  Set V02 argument initial register to r8
  Set V03 argument initial register to r9
  Set V04 argument initial register to STK
  Set V05 argument initial register to STK
  Set V06 argument initial register to STK
Trees after linear scan register allocator (LSRA)

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)-> BB03 ( cond )                     i label target hascall gcsafe LIR 
BB02 [0004]  1       BB01                  0.25    [05D..05E)                                     i hascall gcsafe LIR 
BB03 [0005]  2       BB01,BB02             1       [05D..05E)        (return)                     i label target gcsafe LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..06A) -> BB03 (cond), preds={} succs={BB02,BB03}
N003 (???,???) [000117] ------------                 IL_OFFSET void   IL offset: 0x0 REG NA
N005 (  1,  1) [000116] ------------       t116 =    CNS_INT   ref    null REG rax $VN.Null
                                                  /--*  t116   ref    
N007 (  5,  6) [000107] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+72] Fseq[<>t__builder, m_task] NA REG NA
N009 (???,???) [000118] ------------                 IL_OFFSET void   IL offset: 0xc REG NA
N011 (  1,  1) [000010] ------------        t10 =    LCL_VAR   ref    V00 arg0         u:1 rcx (last use) REG rcx $80
                                                  /--*  t10    ref    
N013 (  5,  6) [000012] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+16] Fseq[paths] NA REG NA
N015 (???,???) [000119] ------------                 IL_OFFSET void   IL offset: 0x14 REG NA
N017 (  1,  1) [000015] ------------        t15 =    LCL_VAR   ref    V01 arg1         u:1 rdx (last use) REG rdx $81
                                                  /--*  t15    ref    
N019 (  5,  6) [000017] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+0] Fseq[outputPath] NA REG NA
N021 (???,???) [000120] ------------                 IL_OFFSET void   IL offset: 0x1c REG NA
N023 (  1,  1) [000020] ------------        t20 =    LCL_VAR   ref    V02 arg2         u:1 r8 (last use) REG r8 $82
                                                  /--*  t20    ref    
N025 (  5,  6) [000022] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+8] Fseq[msBuildPath] NA REG NA
N027 (???,???) [000121] ------------                 IL_OFFSET void   IL offset: 0x24 REG NA
N029 (  1,  1) [000025] ------------        t25 =    LCL_VAR   int    V03 arg3         u:1 r9 (last use) REG r9 $c0
                                                  /--*  t25    int    
N031 (  5,  6) [000027] UA--G-------              *  STORE_LCL_FLD int    V07 loc0         [+60] Fseq[logLevel] NA REG NA
N033 (???,???) [000122] ------------                 IL_OFFSET void   IL offset: 0x2c REG NA
N035 (  3,  2) [000030] -----------z        t30 =    LCL_VAR   ref    V04 arg4         u:1 rcx (last use) REG rcx $83
                                                  /--*  t30    ref    
N037 (  7,  7) [000032] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+24] Fseq[jobName] NA REG NA
N039 (???,???) [000123] ------------                 IL_OFFSET void   IL offset: 0x35 REG NA
N041 (  3,  2) [000035] -----------z        t35 =    LCL_VAR   int    V05 arg5         u:1 rcx (last use) REG rcx $100
                                                  /--*  t35    int    
N043 (  4,  4) [000108] ------------       t108 = *  CAST      int <- bool <- int REG rcx $280
                                                  /--*  t108   int    
N045 (  9, 10) [000037] UA--G-------              *  STORE_LCL_FLD bool   V07 loc0         [+68] Fseq[isParent] NA REG NA
N047 (???,???) [000124] ------------                 IL_OFFSET void   IL offset: 0x3e REG NA
N049 (  3,  2) [000040] -----------z        t40 =    LCL_VAR   ref    V06 arg6         u:1 rcx (last use) REG rcx $84
                                                  /--*  t40    ref    
N051 (  7,  7) [000042] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+32] Fseq[matches] NA REG NA
N053 (???,???) [000125] ------------                 IL_OFFSET void   IL offset: 0x47 REG NA
N055 (  1,  1) [000045] -c----------        t45 =    CNS_INT   int    -1 REG NA $47
                                                  /--*  t45    int    
N057 (  5,  6) [000047] UA--G-------              *  STORE_LCL_FLD int    V07 loc0         [+56] Fseq[<>1__state] NA REG NA
N059 (???,???) [000126] ------------                 IL_OFFSET void   IL offset: 0x4f REG NA
N061 (  3,  3) [000068] ------------        t68 =    LCL_VAR_ADDR long   V07 loc0          rcx REG rcx $301
                                                  /--*  t68    long   
N063 (???,???) [000131] ------------       t131 = *  PUTARG_REG long   REG rcx
                                                  /--*  t131   long   arg0 in rcx
N065 ( 17,  9) [000070] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start REG NA $VN.Void
N067 (???,???) [000127] ------------                 IL_OFFSET void   IL offset: 0x5d REG NA
N069 (  3,  4) [000076] ------------        t76 =    LCL_FLD   ref    V07 loc0         [+72] Fseq[<>t__builder, m_task] rax REG rax $147
                                                  /--*  t76    ref    
N071 (  3,  4) [000078] DA--G-------              *  STORE_LCL_VAR ref    V10 tmp2         d:2 rax REG rax
N073 (???,???) [000128] ------------                 IL_OFFSET void   IL offset: 0x5d REG NA
N075 (  1,  1) [000079] ------------        t79 =    LCL_VAR   ref    V10 tmp2         u:2 rax (last use) REG rax $147
                                                  /--*  t79    ref    
N077 (  5,  4) [000085] DA----------              *  STORE_LCL_VAR ref    V11 tmp3         d:2 rax REG rax
N079 (???,???) [000129] ------------                 IL_OFFSET void   IL offset: 0x5d REG NA
N081 (  1,  1) [000080] ------------        t80 =    LCL_VAR   ref    V11 tmp3         u:2 rax REG rax $147
N083 (  1,  1) [000081] -c----------        t81 =    CNS_INT   ref    null REG NA $VN.Null
                                                  /--*  t80    ref    
                                                  +--*  t81    ref    
N085 (  3,  3) [000082] J------N----              *  NE        void   REG NA $282
N087 (  5,  5) [000083] ------------              *  JTRUE     void   REG NA

------------ BB02 [05D..05E), preds={BB01} succs={BB03}
N091 (???,???) [000130] ------------                 IL_OFFSET void   IL offset: 0x5d REG NA
N093 (  3,  3) [000089] ------------        t89 =    LCL_FLD_ADDR byref  V07 loc0         [+72] Fseq[<>t__builder] rcx REG rcx $1c2
                                                  /--*  t89    byref  
N095 (???,???) [000132] ------------       t132 = *  PUTARG_REG byref  REG rcx
                                                  /--*  t132   byref  this in rcx
N097 ( 17, 10) [000093] --CXG-------        t93 = *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise REG rax $14a
                                                  /--*  t93    ref    
N099 ( 21, 13) [000095] DA-XG-------              *  STORE_LCL_VAR ref    V11 tmp3         d:4 rax REG rax

------------ BB03 [05D..05E) (return), preds={BB01,BB02} succs={}
N001 (  0,  0) [000115] ------------       t115 =    PHI_ARG   ref    V11 tmp3         u:4 rax $14a
N002 (  0,  0) [000114] ------------       t114 =    PHI_ARG   ref    V11 tmp3         u:2 rax $147
                                                  /--*  t115   ref    
                                                  +--*  t114   ref    
N003 (  0,  0) [000112] ------------       t112 = *  PHI       ref   
                                                  /--*  t112   ref    
N005 (  0,  0) [000113] DA----------              *  STORE_LCL_VAR ref    V11 tmp3         d:3 rax
N103 (  3,  2) [000088] ------------        t88 =    LCL_VAR   ref    V11 tmp3         u:3 rax (last use) REG rax $380
                                                  /--*  t88    ref    
N105 (  4,  3) [000061] ------------              *  RETURN    ref    REG NA $14d

-------------------------------------------------------------------------------------------------------------------

Final allocation
-------------------------------+----+----+----+----+----+----+----+----+----+
Loc RP# Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
-------------------------------+----+----+----+----+----+----+----+----+----+
  0.#0  V0   Parm   Alloc rcx  |    |V0 a|    |    |    |    |    |    |    |
  0.#1  V1   Parm   Alloc rdx  |    |V0 a|V1 a|    |    |    |    |    |    |
  0.#2  V2   Parm   Alloc r8   |    |V0 a|V1 a|    |    |    |    |V2 a|    |
  0.#3  V3   Parm   Alloc r9   |    |V0 a|V1 a|    |    |    |    |V2 a|V3 a|
  0.#4  V4   Parm   NoReg      |    |V0 a|V1 a|    |    |    |    |V2 a|V3 a|
  0.#5  V6   Parm   NoReg      |    |V0 a|V1 a|    |    |    |    |V2 a|V3 a|
  0.#6  V5   Parm   NoReg      |    |V0 a|V1 a|    |    |    |    |V2 a|V3 a|
  1.#7  BB1 PredBB0            |    |V0 a|V1 a|    |    |    |    |V2 a|V3 a|
  6.#8  C9   Def    Alloc rax  |C9 a|V0 a|V1 a|    |    |    |    |V2 a|V3 a|
  7.#9  C9   Use *  Keep  rax  |C9 i|V0 a|V1 a|    |    |    |    |V2 a|V3 a|
 13.#10 V0   Use *  Keep  rcx  |    |V0 i|V1 a|    |    |    |    |V2 a|V3 a|
 19.#11 V1   Use *  Keep  rdx  |    |    |V1 i|    |    |    |    |V2 a|V3 a|
 25.#12 V2   Use *  Keep  r8   |    |    |    |    |    |    |    |V2 i|V3 a|
 31.#13 V3   Use *  Keep  r9   |    |    |    |    |    |    |    |    |V3 i|
 37.#14 V4   Use *  ReLod rcx  |    |V4 a|    |    |    |    |    |    |    |
                    Keep  rcx  |    |V4 i|    |    |    |    |    |    |    |
 43.#15 V5   Use *  ReLod rcx  |    |V5 a|    |    |    |    |    |    |    |
                    Keep  rcx  |    |V5 i|    |    |    |    |    |    |    |
 44.#16 I10  Def    Alloc rcx  |    |I10a|    |    |    |    |    |    |    |
 45.#17 I10  Use *  Keep  rcx  |    |I10i|    |    |    |    |    |    |    |
 51.#18 V6   Use *  ReLod rcx  |    |V6 a|    |    |    |    |    |    |    |
                    Keep  rcx  |    |V6 i|    |    |    |    |    |    |    |
 62.#19 I11  Def    Alloc rcx  |    |I11a|    |    |    |    |    |    |    |
 63.#20 rcx  Fixd   Keep  rcx  |    |I11a|    |    |    |    |    |    |    |
 63.#21 I11  Use *  Keep  rcx  |    |I11i|    |    |    |    |    |    |    |
 64.#22 rcx  Fixd   Keep  rcx  |    |    |    |    |    |    |    |    |    |
 64.#23 I12  Def    Alloc rcx  |    |I12a|    |    |    |    |    |    |    |
 65.#24 rcx  Fixd   Keep  rcx  |    |I12a|    |    |    |    |    |    |    |
 65.#25 I12  Use *  Keep  rcx  |    |I12i|    |    |    |    |    |    |    |
 66.#26 rax  Kill   Keep  rax  |    |    |    |    |    |    |    |    |    |
 66.#27 rcx  Kill   Keep  rcx  |    |    |    |    |    |    |    |    |    |
 66.#28 rdx  Kill   Keep  rdx  |    |    |    |    |    |    |    |    |    |
 66.#29 r8   Kill   Keep  r8   |    |    |    |    |    |    |    |    |    |
 66.#30 r9   Kill   Keep  r9   |    |    |    |    |    |    |    |    |    |
 66.#31 r10  Kill   Keep  r10  |    |    |    |    |    |    |    |    |    |
 66.#32 r11  Kill   Keep  r11  |    |    |    |    |    |    |    |    |    |
 70.#33 I13  Def    Alloc rax  |I13a|    |    |    |    |    |    |    |    |
 71.#34 I13  Use *  Keep  rax  |I13i|    |    |    |    |    |    |    |    |
 72.#35 V10  Def    Alloc rax  |V10a|    |    |    |    |    |    |    |    |
 77.#36 V10  Use *  Keep  rax  |V10i|    |    |    |    |    |    |    |    |
 78.#37 V11  Def    Alloc rax  |V11a|    |    |    |    |    |    |    |    |
 85.#38 V11  Use    Keep  rax  |V11a|    |    |    |    |    |    |    |    |
-------------------------------+----+----+----+----+----+----+----+----+----+
Loc RP# Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
-------------------------------+----+----+----+----+----+----+----+----+----+
 89.#39 BB2 PredBB1            |    |    |    |    |    |    |    |    |    |
 94.#40 I14  Def    Alloc rcx  |    |I14a|    |    |    |    |    |    |    |
 95.#41 rcx  Fixd   Keep  rcx  |    |I14a|    |    |    |    |    |    |    |
 95.#42 I14  Use *  Keep  rcx  |    |I14i|    |    |    |    |    |    |    |
 96.#43 rcx  Fixd   Keep  rcx  |    |    |    |    |    |    |    |    |    |
 96.#44 I15  Def    Alloc rcx  |    |I15a|    |    |    |    |    |    |    |
 97.#45 rcx  Fixd   Keep  rcx  |    |I15a|    |    |    |    |    |    |    |
 97.#46 I15  Use *  Keep  rcx  |    |I15i|    |    |    |    |    |    |    |
 98.#47 rax  Kill   Keep  rax  |    |    |    |    |    |    |    |    |    |
 98.#48 rcx  Kill   Keep  rcx  |    |    |    |    |    |    |    |    |    |
 98.#49 rdx  Kill   Keep  rdx  |    |    |    |    |    |    |    |    |    |
 98.#50 r8   Kill   Keep  r8   |    |    |    |    |    |    |    |    |    |
 98.#51 r9   Kill   Keep  r9   |    |    |    |    |    |    |    |    |    |
 98.#52 r10  Kill   Keep  r10  |    |    |    |    |    |    |    |    |    |
 98.#53 r11  Kill   Keep  r11  |    |    |    |    |    |    |    |    |    |
 98.#54 rax  Fixd   Keep  rax  |    |    |    |    |    |    |    |    |    |
 98.#55 I16  Def    Alloc rax  |I16a|    |    |    |    |    |    |    |    |
 99.#56 I16  Use *  Keep  rax  |I16i|    |    |    |    |    |    |    |    |
100.#57 V11  Def    Alloc rax  |V11a|    |    |    |    |    |    |    |    |
-------------------------------+----+----+----+----+----+----+----+----+----+
Loc RP# Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
-------------------------------+----+----+----+----+----+----+----+----+----+
101.#58 BB3 PredBB1            |V11a|    |    |    |    |    |    |    |    |
105.#59 rax  Fixd   Keep  rax  |V11a|    |    |    |    |    |    |    |    |
105.#60 V11  Use *  Keep  rax  |V11i|    |    |    |    |    |    |    |    |

Recording the maximum number of concurrent spills:

----------
LSRA Stats
----------
Total Tracked Vars:  10
Total Reg Cand Vars: 9
Total number of Intervals: 16
Total number of RefPositions: 60
Total Spill Count: 0    Weighted: 0.000000
Total CopyReg Count: 0   Weighted: 0.000000
Total ResolutionMov Count: 0    Weighted: 0.000000
Total number of split edges: 0
Total Number of spill temps created: 0

TUPLE STYLE DUMP WITH REGISTER ASSIGNMENTS
Incoming Parameters:  V00(rcx) V01(rdx) V02(r8) V03(r9) V04(STK) V06(STK) V05(STK)
BB01 [000..06A) -> BB03 (cond), preds={} succs={BB02,BB03}
=====
  N003.                    IL_OFFSET IL offset: 0x0
  N005. rax             =  CNS_INT   null
  N007.                    V07 MEM; rax
  N009.                    IL_OFFSET IL offset: 0xc
  N011.                    V00(rcx*)
  N013.                    V07 MEM; rcx*
  N015.                    IL_OFFSET IL offset: 0x14
  N017.                    V01(rdx*)
  N019.                    V07 MEM; rdx*
  N021.                    IL_OFFSET IL offset: 0x1c
  N023.                    V02(r8*)
  N025.                    V07 MEM; r8*
  N027.                    IL_OFFSET IL offset: 0x24
  N029.                    V03(r9*)
  N031.                    V07 MEM; r9*
  N033.                    IL_OFFSET IL offset: 0x2c
  N035.                    V04(rcx*)R
  N037.                    V07 MEM; rcx*
  N039.                    IL_OFFSET IL offset: 0x35
  N041.                    V05(rcx*)R
  N043. rcx             =  CAST     ; rcx*
  N045.                    V07 MEM; rcx
  N047.                    IL_OFFSET IL offset: 0x3e
  N049.                    V06(rcx*)R
  N051.                    V07 MEM; rcx*
  N053.                    IL_OFFSET IL offset: 0x47
  N055.                    CNS_INT   -1
  N057.                    V07 MEM
  N059.                    IL_OFFSET IL offset: 0x4f
  N061. rcx             =  LCL_VAR_ADDR V07 loc0          rcx
  N063. rcx             =  PUTARG_REG; rcx
  N065.                    CALL     ; rcx
  N067.                    IL_OFFSET IL offset: 0x5d
  N069. rax             =  V07 MEM
* N071.                    V10(rax); rax
  N073.                    IL_OFFSET IL offset: 0x5d
  N075.                    V10(rax*)
* N077.                    V11(rax); rax*
  N079.                    IL_OFFSET IL offset: 0x5d
  N081.                    V11(rax)
  N083.                    CNS_INT   null
  N085.                    NE       ; rax
  N087.                    JTRUE    
Var=Reg end of BB01: V11=rax 

BB02 [05D..05E), preds={BB01} succs={BB03}
=====
Predecessor for variable locations: BB01
Var=Reg beg of BB02: none
  N091.                    IL_OFFSET IL offset: 0x5d
  N093. rcx             =  LCL_FLD_ADDR V07 loc0         [+72] Fseq[<>t__builder] rcx
  N095. rcx             =  PUTARG_REG; rcx
  N097. rax             =  CALL     ; rcx
* N099.                    V11(rax); rax
Var=Reg end of BB02: V11=rax 

BB03 [05D..05E) (return), preds={BB01,BB02} succs={}
=====
Predecessor for variable locations: BB01
Var=Reg beg of BB03: V11=rax 
  N103.                    V11(rax*)
  N105.                    RETURN   ; rax*
Var=Reg end of BB03: none




*************** Finishing PHASE Linear scan register alloc
*************** In genGenerateCode()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..06A)-> BB03 ( cond )                     i label target hascall gcsafe LIR 
BB02 [0004]  1       BB01                  0.25    [05D..05E)                                     i hascall gcsafe LIR 
BB03 [0005]  2       BB01,BB02             1       [05D..05E)        (return)                     i label target gcsafe LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Generate code
*************** In fgDebugCheckBBlist
Finalizing stack frame
Recording Var Locations at start of BB01
  V00(rcx)  V01(rdx)  V02(r8)  V03(r9)
Modified regs: [rax rcx rdx r8-r11]
Callee-saved registers pushed: 0 []
*************** In lvaAssignFrameOffsets(FINAL_FRAME_LAYOUT)
Assign V07 loc0, size=120, stkOffs=-0x80
Assign V08 OutArgs, size=32, stkOffs=-0xa0
--- delta bump 8 for RA
--- delta bump 152 for RSP frame
--- virtual stack offset to actual stack offset delta is 160
-- V00 was 0, now 160
-- V01 was 8, now 168
-- V02 was 16, now 176
-- V03 was 24, now 184
-- V04 was 32, now 192
-- V05 was 40, now 200
-- V06 was 48, now 208
-- V07 was -128, now 32
-- V08 was -160, now 0
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     ref  ->  rcx         class-hnd
;  V01 arg1         [V01,T01] (  3,  3   )     ref  ->  rdx         class-hnd
;  V02 arg2         [V02,T02] (  3,  3   )     ref  ->   r8         class-hnd
;  V03 arg3         [V03,T03] (  3,  3   )     int  ->   r9        
;  V04 arg4         [V04,T06] (  1,  1   )     ref  ->  [rsp+0xC0]   class-hnd
;  V05 arg5         [V05,T09] (  1,  1   )    bool  ->  [rsp+0xC8]  
;  V06 arg6         [V06,T07] (  1,  1   )     ref  ->  [rsp+0xD0]   class-hnd
;  V07 loc0         [V07    ] ( 12, 11.25)  struct (120) [rsp+0x20]   do-not-enreg[XSFB] must-init addr-exposed ld-addr-op
;  V08 OutArgs      [V08    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V09 tmp1         [V09    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;  V10 tmp2         [V10,T04] (  2,  4   )     ref  ->  rax         class-hnd "dup spill"
;  V11 tmp3         [V11,T05] (  4,  3.25)     ref  ->  rax        
;* V12 tmp4         [V12,T08] (  0,  0   )     ref  ->  zero-ref    V09.m_task(offs=0x00) P-INDEP "field V09.m_task (fldOffset=0x0)"
;
; Lcl frame size = 152
Setting stack level from -572662307 to 0

=============== Generating BB01 [000..06A) -> BB03 (cond), preds={} succs={BB02,BB03} flags=0x00000002.200b0020: i label target hascall gcsafe LIR 
BB01 IN (7)={V00 V01 V02 V03     V04 V06 V05} + ByrefExposed + GcHeap
     OUT(1)={                V11            } + ByrefExposed + GcHeap

Recording Var Locations at start of BB01
  V00(rcx)  V01(rdx)  V02(r8)  V03(r9)
Change life 0000000000000000 {} -> 00000000000002CF {V00 V01 V02 V03 V04 V05 V06}
							V00 in reg rcx is becoming live  [------]
							Live regs: 00000000 {} => 00000002 {rcx}
							V01 in reg rdx is becoming live  [------]
							Live regs: 00000002 {rcx} => 00000006 {rcx rdx}
							V02 in reg r8 is becoming live  [------]
							Live regs: 00000006 {rcx rdx} => 00000106 {rcx rdx r8}
							V03 in reg r9 is becoming live  [------]
							Live regs: 00000106 {rcx rdx r8} => 00000306 {rcx rdx r8 r9}
							Live regs: (unchanged) 00000306 {rcx rdx r8 r9}
							GC regs: (unchanged) 00000106 {rcx rdx r8}
							Byref regs: (unchanged) 00000000 {}

      L_M11062_BB01:
Label: IG02, GCvars=0000000000000000 {}, gcrefRegs=00000106 {rcx rdx r8}, byrefRegs=00000000 {}

Scope info: begin block BB01, IL range [000..06A)
Scope info: open scopes =
   0 (V00 arg0) [000..06A)
   1 (V01 arg1) [000..06A)
   2 (V02 arg2) [000..06A)
   3 (V03 arg3) [000..06A)
   4 (V04 arg4) [000..06A)
   6 (V06 arg6) [000..06A)
   5 (V05 arg5) [000..06A)
Added IP mapping: 0x0000 STACK_EMPTY (G_M11062_IG02,ins#0,ofs#0) label
Generating: N003 (???,???) [000117] ------------                 IL_OFFSET void   IL offset: 0x0 REG NA
Generating: N005 (  1,  1) [000116] ------------       t116 =    CNS_INT   ref    null REG rax $VN.Null
IN0001:        xor      rax, rax
							GC regs: 00000106 {rcx rdx r8} => 00000107 {rax rcx rdx r8}
                                                              /--*  t116   ref    
Generating: N007 (  5,  6) [000107] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+72] Fseq[<>t__builder, m_task] NA REG NA
							GC regs: 00000107 {rax rcx rdx r8} => 00000106 {rcx rdx r8}
IN0002:        mov      gword ptr [V07+0x48 rsp+68H], rax
Added IP mapping: 0x000C STACK_EMPTY (G_M11062_IG02,ins#2,ofs#7)
Generating: N009 (???,???) [000118] ------------                 IL_OFFSET void   IL offset: 0xc REG NA
Generating: N011 (  1,  1) [000010] ------------        t10 =    LCL_VAR   ref    V00 arg0         u:1 rcx (last use) REG rcx $80
                                                              /--*  t10    ref    
Generating: N013 (  5,  6) [000012] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+16] Fseq[paths] NA REG NA
							V00 in reg rcx is becoming dead  [000010]
							Live regs: 00000306 {rcx rdx r8 r9} => 00000304 {rdx r8 r9}
							Live vars: {V00 V01 V02 V03 V04 V05 V06} => {V01 V02 V03 V04 V05 V06}
							GC regs: 00000106 {rcx rdx r8} => 00000104 {rdx r8}
IN0003:        mov      gword ptr [V07+0x10 rsp+30H], rcx
Added IP mapping: 0x0014 STACK_EMPTY (G_M11062_IG02,ins#3,ofs#12)
Generating: N015 (???,???) [000119] ------------                 IL_OFFSET void   IL offset: 0x14 REG NA
Generating: N017 (  1,  1) [000015] ------------        t15 =    LCL_VAR   ref    V01 arg1         u:1 rdx (last use) REG rdx $81
                                                              /--*  t15    ref    
Generating: N019 (  5,  6) [000017] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+0] Fseq[outputPath] NA REG NA
							V01 in reg rdx is becoming dead  [000015]
							Live regs: 00000304 {rdx r8 r9} => 00000300 {r8 r9}
							Live vars: {V01 V02 V03 V04 V05 V06} => {V02 V03 V04 V05 V06}
							GC regs: 00000104 {rdx r8} => 00000100 {r8}
IN0004:        mov      gword ptr [V07 rsp+20H], rdx
Added IP mapping: 0x001C STACK_EMPTY (G_M11062_IG02,ins#4,ofs#17)
Generating: N021 (???,???) [000120] ------------                 IL_OFFSET void   IL offset: 0x1c REG NA
Generating: N023 (  1,  1) [000020] ------------        t20 =    LCL_VAR   ref    V02 arg2         u:1 r8 (last use) REG r8 $82
                                                              /--*  t20    ref    
Generating: N025 (  5,  6) [000022] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+8] Fseq[msBuildPath] NA REG NA
							V02 in reg r8 is becoming dead  [000020]
							Live regs: 00000300 {r8 r9} => 00000200 {r9}
							Live vars: {V02 V03 V04 V05 V06} => {V03 V04 V05 V06}
							GC regs: 00000100 {r8} => 00000000 {}
IN0005:        mov      gword ptr [V07+0x8 rsp+28H], r8
Added IP mapping: 0x0024 STACK_EMPTY (G_M11062_IG02,ins#5,ofs#22)
Generating: N027 (???,???) [000121] ------------                 IL_OFFSET void   IL offset: 0x24 REG NA
Generating: N029 (  1,  1) [000025] ------------        t25 =    LCL_VAR   int    V03 arg3         u:1 r9 (last use) REG r9 $c0
                                                              /--*  t25    int    
Generating: N031 (  5,  6) [000027] UA--G-------              *  STORE_LCL_FLD int    V07 loc0         [+60] Fseq[logLevel] NA REG NA
							V03 in reg r9 is becoming dead  [000025]
							Live regs: 00000200 {r9} => 00000000 {}
							Live vars: {V03 V04 V05 V06} => {V04 V05 V06}
IN0006:        mov      dword ptr [V07+0x3C rsp+5CH], r9d
Added IP mapping: 0x002C STACK_EMPTY (G_M11062_IG02,ins#6,ofs#27)
Generating: N033 (???,???) [000122] ------------                 IL_OFFSET void   IL offset: 0x2c REG NA
Generating: N035 (  3,  2) [000030] -----------z        t30 =    LCL_VAR   ref    V04 arg4         u:1 rcx (last use) REG rcx $83
                                                              /--*  t30    ref    
Generating: N037 (  7,  7) [000032] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+24] Fseq[jobName] NA REG NA
IN0007:        mov      rcx, gword ptr [V04 rsp+C0H]
							V04 in reg rcx is becoming live  [000030]
							Live regs: 00000000 {} => 00000002 {rcx}
							GC regs: 00000000 {} => 00000002 {rcx}
							V04 in reg rcx is becoming dead  [000030]
							Live regs: 00000002 {rcx} => 00000000 {}
							Live vars: {V04 V05 V06} => {V05 V06}
							GC regs: 00000002 {rcx} => 00000000 {}
IN0008:        mov      gword ptr [V07+0x18 rsp+38H], rcx
Added IP mapping: 0x0035 STACK_EMPTY (G_M11062_IG02,ins#8,ofs#40)
Generating: N039 (???,???) [000123] ------------                 IL_OFFSET void   IL offset: 0x35 REG NA
Generating: N041 (  3,  2) [000035] -----------z        t35 =    LCL_VAR   int    V05 arg5         u:1 rcx (last use) REG rcx $100
                                                              /--*  t35    int    
Generating: N043 (  4,  4) [000108] ------------       t108 = *  CAST      int <- bool <- int REG rcx $280
IN0009:        mov      ecx, dword ptr [V05 rsp+C8H]
							V05 in reg rcx is becoming live  [000035]
							Live regs: 00000000 {} => 00000002 {rcx}
							V05 in reg rcx is becoming dead  [000035]
							Live regs: 00000002 {rcx} => 00000000 {}
							Live vars: {V05 V06} => {V06}
IN000a:        movzx    rcx, cl
                                                              /--*  t108   int    
Generating: N045 (  9, 10) [000037] UA--G-------              *  STORE_LCL_FLD bool   V07 loc0         [+68] Fseq[isParent] NA REG NA
IN000b:        mov      byte  ptr [V07+0x44 rsp+64H], cl
Added IP mapping: 0x003E STACK_EMPTY (G_M11062_IG02,ins#11,ofs#54)
Generating: N047 (???,???) [000124] ------------                 IL_OFFSET void   IL offset: 0x3e REG NA
Generating: N049 (  3,  2) [000040] -----------z        t40 =    LCL_VAR   ref    V06 arg6         u:1 rcx (last use) REG rcx $84
                                                              /--*  t40    ref    
Generating: N051 (  7,  7) [000042] UA--G-------              *  STORE_LCL_FLD ref    V07 loc0         [+32] Fseq[matches] NA REG NA
IN000c:        mov      rcx, gword ptr [V06 rsp+D0H]
							V06 in reg rcx is becoming live  [000040]
							Live regs: 00000000 {} => 00000002 {rcx}
							GC regs: 00000000 {} => 00000002 {rcx}
							V06 in reg rcx is becoming dead  [000040]
							Live regs: 00000002 {rcx} => 00000000 {}
							Live vars: {V06} => {}
							GC regs: 00000002 {rcx} => 00000000 {}
IN000d:        mov      gword ptr [V07+0x20 rsp+40H], rcx
Added IP mapping: 0x0047 STACK_EMPTY (G_M11062_IG02,ins#13,ofs#67)
Generating: N053 (???,???) [000125] ------------                 IL_OFFSET void   IL offset: 0x47 REG NA
Generating: N055 (  1,  1) [000045] -c----------        t45 =    CNS_INT   int    -1 REG NA $47
                                                              /--*  t45    int    
Generating: N057 (  5,  6) [000047] UA--G-------              *  STORE_LCL_FLD int    V07 loc0         [+56] Fseq[<>1__state] NA REG NA
IN000e:        mov      dword ptr [V07+0x38 rsp+58H], -1
Added IP mapping: 0x004F STACK_EMPTY (G_M11062_IG02,ins#14,ofs#75)
Generating: N059 (???,???) [000126] ------------                 IL_OFFSET void   IL offset: 0x4f REG NA
Generating: N061 (  3,  3) [000068] ------------        t68 =    LCL_VAR_ADDR long   V07 loc0          rcx REG rcx $301
IN000f:        lea      rcx, [V07 rsp+20H]
                                                              /--*  t68    long   
Generating: N063 (???,???) [000131] ------------       t131 = *  PUTARG_REG long   REG rcx
                                                              /--*  t131   long   arg0 in rcx
Generating: N065 ( 17,  9) [000070] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start REG NA $VN.Void
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}
IN0010:        call     System.Runtime.CompilerServices.AsyncMethodBuilderCore:Start(byref)
Added IP mapping: 0x005D STACK_EMPTY (G_M11062_IG02,ins#16,ofs#85)
Generating: N067 (???,???) [000127] ------------                 IL_OFFSET void   IL offset: 0x5d REG NA
Generating: N069 (  3,  4) [000076] ------------        t76 =    LCL_FLD   ref    V07 loc0         [+72] Fseq[<>t__builder, m_task] rax REG rax $147
IN0011:        mov      rax, gword ptr [V07+0x48 rsp+68H]
							GC regs: 00000000 {} => 00000001 {rax}
                                                              /--*  t76    ref    
Generating: N071 (  3,  4) [000078] DA--G-------              *  STORE_LCL_VAR ref    V10 tmp2         d:2 rax REG rax
							GC regs: 00000001 {rax} => 00000000 {}
							V10 in reg rax is becoming live  [000078]
							Live regs: 00000000 {} => 00000001 {rax}
							Live vars: {} => {V10}
							GC regs: 00000000 {} => 00000001 {rax}
genIPmappingAdd: ignoring duplicate IL offset 0x5d
Generating: N073 (???,???) [000128] ------------                 IL_OFFSET void   IL offset: 0x5d REG NA
Generating: N075 (  1,  1) [000079] ------------        t79 =    LCL_VAR   ref    V10 tmp2         u:2 rax (last use) REG rax $147
                                                              /--*  t79    ref    
Generating: N077 (  5,  4) [000085] DA----------              *  STORE_LCL_VAR ref    V11 tmp3         d:2 rax REG rax
							V10 in reg rax is becoming dead  [000079]
							Live regs: 00000001 {rax} => 00000000 {}
							Live vars: {V10} => {}
							GC regs: 00000001 {rax} => 00000000 {}
							V11 in reg rax is becoming live  [000085]
							Live regs: 00000000 {} => 00000001 {rax}
							Live vars: {} => {V11}
							GC regs: 00000000 {} => 00000001 {rax}
genIPmappingAdd: ignoring duplicate IL offset 0x5d
Generating: N079 (???,???) [000129] ------------                 IL_OFFSET void   IL offset: 0x5d REG NA
Generating: N081 (  1,  1) [000080] ------------        t80 =    LCL_VAR   ref    V11 tmp3         u:2 rax REG rax $147
Generating: N083 (  1,  1) [000081] -c----------        t81 =    CNS_INT   ref    null REG NA $VN.Null
                                                              /--*  t80    ref    
                                                              +--*  t81    ref    
Generating: N085 (  3,  3) [000082] J------N----              *  NE        void   REG NA $282
IN0012:        test     rax, rax
Generating: N087 (  5,  5) [000083] ------------              *  JTRUE     void   REG NA
IN0013:        jne      L_M11062_BB03

Scope info: end block BB01, IL range [000..06A)
Scope info: ending scope, LVnum=0 [000..06A)
Scope info: ending scope, LVnum=1 [000..06A)
Scope info: ending scope, LVnum=2 [000..06A)
Scope info: ending scope, LVnum=3 [000..06A)
Scope info: ending scope, LVnum=4 [000..06A)
Scope info: ending scope, LVnum=5 [000..06A)
Scope info: ending scope, LVnum=6 [000..06A)
Scope info: ending scope, LVnum=7 [000..06A)
siEndScope: Failed to end scope for V07
Scope info: open scopes =
   <none>

=============== Generating BB02 [05D..05E), preds={BB01} succs={BB03} flags=0x00000002.20080020: i hascall gcsafe LIR 
BB02 IN (0)={   } + ByrefExposed + GcHeap
     OUT(1)={V11}

Recording Var Locations at start of BB02
  <none>

Change life 0000000000000020 {V11} -> 0000000000000000 {}
							V11 in reg rax is becoming dead  [------]
							Live regs: (unchanged) 00000000 {}
							Live regs: (unchanged) 00000000 {}
							GC regs: (unchanged) 00000000 {}
							Byref regs: (unchanged) 00000000 {}

      L_M11062_BB02:

      G_M11062_IG02:        ; offs=000000H, funclet=00, bbWeight=1   
Label: IG03, GCvars=0000000000000000 {}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}

Scope info: begin block BB02, IL range [05D..05E)
Scope info: open scopes =
   <none>
genIPmappingAdd: ignoring duplicate IL offset 0x5d
Generating: N091 (???,???) [000130] ------------                 IL_OFFSET void   IL offset: 0x5d REG NA
Generating: N093 (  3,  3) [000089] ------------        t89 =    LCL_FLD_ADDR byref  V07 loc0         [+72] Fseq[<>t__builder] rcx REG rcx $1c2
IN0014:        lea      rcx, bword ptr [V07+0x48 rsp+68H]
							Byref regs: 00000000 {} => 00000002 {rcx}
                                                              /--*  t89    byref  
Generating: N095 (???,???) [000132] ------------       t132 = *  PUTARG_REG byref  REG rcx
							Byref regs: 00000002 {rcx} => 00000000 {}
							Byref regs: 00000000 {} => 00000002 {rcx}
                                                              /--*  t132   byref  this in rcx
Generating: N097 ( 17, 10) [000093] --CXG-------        t93 = *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise REG rax $14a
							Byref regs: 00000002 {rcx} => 00000000 {}
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}
IN0015:        call     System.Runtime.CompilerServices.AsyncTaskMethodBuilder:InitializeTaskAsPromise():System.Threading.Tasks.Task`1[VoidTaskResult]:this
							GC regs: 00000000 {} => 00000001 {rax}
                                                              /--*  t93    ref    
Generating: N099 ( 21, 13) [000095] DA-XG-------              *  STORE_LCL_VAR ref    V11 tmp3         d:4 rax REG rax
							GC regs: 00000001 {rax} => 00000000 {}
							V11 in reg rax is becoming live  [000095]
							Live regs: 00000000 {} => 00000001 {rax}
							Live vars: {} => {V11}
							GC regs: 00000000 {} => 00000001 {rax}

Scope info: end block BB02, IL range [05D..05E)
Scope info: open scopes =
   <none>

=============== Generating BB03 [05D..05E) (return), preds={BB01,BB02} succs={} flags=0x00000000.200b0020: i label target gcsafe LIR 
BB03 IN (1)={V11}
     OUT(0)={   }

Recording Var Locations at start of BB03
  V11(rax)
Liveness not changing: 0000000000000020 {V11}
							Live regs: 00000000 {} => 00000001 {rax}
							GC regs: 00000000 {} => 00000001 {rax}
							Byref regs: (unchanged) 00000000 {}

      L_M11062_BB03:

      G_M11062_IG03:        ; offs=000063H, funclet=00, bbWeight=0.25
Label: IG04, GCvars=0000000000000000 {}, gcrefRegs=00000001 {rax}, byrefRegs=00000000 {}

Scope info: begin block BB03, IL range [05D..05E)
Scope info: open scopes =
   <none>
Generating: N103 (  3,  2) [000088] ------------        t88 =    LCL_VAR   ref    V11 tmp3         u:3 rax (last use) REG rax $380
                                                              /--*  t88    ref    
Generating: N105 (  4,  3) [000061] ------------              *  RETURN    ref    REG NA $14d
							V11 in reg rax is becoming dead  [000088]
							Live regs: 00000001 {rax} => 00000000 {}
							Live vars: {V11} => {}
							GC regs: 00000001 {rax} => 00000000 {}

Scope info: end block BB03, IL range [05D..05E)
Scope info: open scopes =
   <none>
Added IP mapping: EPILOG STACK_EMPTY (G_M11062_IG04,ins#0,ofs#0) label
							GC regs: 00000000 {} => 00000001 {rax}
Extending return value GC liveness to epilog
Reserving epilog IG for block BB03
IN0016:        nop      

      G_M11062_IG04:        ; offs=00006DH, funclet=00, bbWeight=1   
*************** After placeholder IG creation
G_M11062_IG01:        ; func=00, offs=000000H, size=0000H, gcrefRegs=00000000 {} <-- Prolog IG
G_M11062_IG02:        ; offs=000000H, size=0063H, gcrefRegs=00000106 {rcx rdx r8}, byrefRegs=00000000 {}, byref
G_M11062_IG03:        ; offs=000063H, size=000AH, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref
G_M11062_IG04:        ; offs=00006DH, size=0001H, gcrefRegs=00000001 {rax}, byrefRegs=00000000 {}, byref
G_M11062_IG05:        ; epilog placeholder, next placeholder=<END>, BB03 [0005], epilog, extend <-- First placeholder <-- Last placeholder
                      ;   PrevGCVars=0000000000000000 {}, PrevGCrefRegs=00000000 {}, PrevByrefRegs=00000000 {}
                      ;   InitGCVars=0000000000000000 {}, InitGCrefRegs=00000001 {rax}, InitByrefRegs=00000000 {}
Liveness not changing: 0000000000000000 {}

# compCycleEstimate =    113, compSizeEstimate =   102 SolutionAnalyzer.Results:Obtain(System.String[],System.String,System.String,int,System.String,bool,System.Func`3[[Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[Microsoft.CodeAnalysis.SemanticModel, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]):System.Threading.Tasks.Task
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     ref  ->  rcx         class-hnd
;  V01 arg1         [V01,T01] (  3,  3   )     ref  ->  rdx         class-hnd
;  V02 arg2         [V02,T02] (  3,  3   )     ref  ->   r8         class-hnd
;  V03 arg3         [V03,T03] (  3,  3   )     int  ->   r9        
;  V04 arg4         [V04,T06] (  1,  1   )     ref  ->  [rsp+0xC0]   class-hnd
;  V05 arg5         [V05,T09] (  1,  1   )    bool  ->  [rsp+0xC8]  
;  V06 arg6         [V06,T07] (  1,  1   )     ref  ->  [rsp+0xD0]   class-hnd
;  V07 loc0         [V07    ] ( 12, 11.25)  struct (120) [rsp+0x20]   do-not-enreg[XSFB] must-init addr-exposed ld-addr-op
;  V08 OutArgs      [V08    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V09 tmp1         [V09    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;  V10 tmp2         [V10,T04] (  2,  4   )     ref  ->  rax         class-hnd "dup spill"
;  V11 tmp3         [V11,T05] (  4,  3.25)     ref  ->  rax        
;* V12 tmp4         [V12,T08] (  0,  0   )     ref  ->  zero-ref    V09.m_task(offs=0x00) P-INDEP "field V09.m_task (fldOffset=0x0)"
;
; Lcl frame size = 152
*************** Before prolog / epilog generation
G_M11062_IG01:        ; func=00, offs=000000H, size=0000H, gcrefRegs=00000000 {} <-- Prolog IG
G_M11062_IG02:        ; offs=000000H, size=0063H, gcrefRegs=00000106 {rcx rdx r8}, byrefRegs=00000000 {}, byref
G_M11062_IG03:        ; offs=000063H, size=000AH, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref
G_M11062_IG04:        ; offs=00006DH, size=0001H, gcrefRegs=00000001 {rax}, byrefRegs=00000000 {}, byref
G_M11062_IG05:        ; epilog placeholder, next placeholder=<END>, BB03 [0005], epilog, extend <-- First placeholder <-- Last placeholder
                      ;   PrevGCVars=0000000000000000 {}, PrevGCrefRegs=00000000 {}, PrevByrefRegs=00000000 {}
                      ;   InitGCVars=0000000000000000 {}, InitGCrefRegs=00000001 {rax}, InitByrefRegs=00000000 {}
Recording Var Locations at start of BB01
  V00(rcx)  V01(rdx)  V02(r8)  V03(r9)  V04(rcx->STK)  V06(rcx->STK)  V05(rcx->STK)
*************** In genFnProlog()
Added IP mapping to front: PROLOG STACK_EMPTY (G_M11062_IG01,ins#0,ofs#0) label

__prolog:
Found 30 lvMustInit int-sized stack slots, frame offsets -32 through -152
IN0017:        sub      rsp, 152
Notify VM instruction set (SSE42) must be supported.
IN0018:        vxorps   xmm4, xmm4
IN0019:        vmovdqa  xmmword ptr [rsp+20H], xmm4
IN001a:        mov      rax, -96
IN001b:        vmovdqa  xmmword ptr [rsp+rax+90H], xmm4
IN001c:        vmovdqa  xmmword ptr [rsp+rax+A0H], xmm4
IN001d:        vmovdqa  xmmword ptr [rsp+rax+B0H], xmm4
IN001e:        add      rax, 48
IN001f:        jne      SHORT  -5 instr
IN0020:        mov      qword ptr [rsp+90H], rax
*************** In genFnPrologCalleeRegArgs() for int regs
*************** In genEnregisterIncomingStackArgs()


      G_M11062_IG01:        ; offs=000000H, funclet=00, bbWeight=1   
*************** In genFnEpilog()

__epilog:
gcVarPtrSetCur=0000000000000000 {}, gcRegGCrefSetCur=00000001 {rax}, gcRegByrefSetCur=00000000 {}
IN0021:        add      rsp, 152
IN0022:        ret      

      G_M11062_IG05:        ; offs=00006EH, funclet=00, bbWeight=1   
0 prologs, 1 epilogs, 0 funclet prologs, 0 funclet epilogs
*************** After prolog / epilog generation
G_M11062_IG01:        ; func=00, offs=000000H, size=0049H, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref, nogc <-- Prolog IG
G_M11062_IG02:        ; offs=000049H, size=0063H, gcrefRegs=00000106 {rcx rdx r8}, byrefRegs=00000000 {}, byref
G_M11062_IG03:        ; offs=0000ACH, size=000AH, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref
G_M11062_IG04:        ; offs=0000B6H, size=0001H, gcrefRegs=00000001 {rax}, byrefRegs=00000000 {}, byref
G_M11062_IG05:        ; offs=0000B7H, size=0008H, epilog, nogc, extend
*************** In emitJumpDistBind()
Adjusted offset of BB02 from 0049 to 0049
Binding: IN0013: 000000 jne      L_M11062_BB03
Binding L_M11062_BB03 to G_M11062_IG04
Estimate of fwd jump [D1FFAB1E/019]: 00A6 -> 00B6 = 000E
Shrinking jump [D1FFAB1E/019]
Adjusted offset of BB03 from 00AC to 00A8
Adjusted offset of BB04 from 00B6 to 00B2
Adjusted offset of BB05 from 00B7 to 00B3
Total shrinkage =   4, min extra jump size = 4294967295

*************** Finishing PHASE Generate code

*************** Starting PHASE Emit code

Hot  code size = 0xBB bytes
Cold code size = 0x0 bytes
reserveUnwindInfo(isFunclet=FALSE, isColdCode=FALSE, unwindSize=0x8)
*************** In emitEndCodeGen()
Converting emitMaxStackDepth from bytes (0) to elements (0)

***************************************************************************
Instructions as they come out of the scheduler


G_M11062_IG01:        ; func=00, offs=000000H, size=0049H, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref, nogc <-- Prolog IG
IN0017: 000000 sub      rsp, 152
IN0018: 000007 vxorps   xmm4, xmm4 (ECS:5, ACS:4)
Instruction predicted size = 5, actual = 4
IN0019: 00000B vmovdqa  xmmword ptr [rsp+20H], xmm4 (ECS:7, ACS:6)
Instruction predicted size = 7, actual = 6
IN001a: 000011 mov      rax, -96
IN001b: 00001B vmovdqa  xmmword ptr [rsp+rax+90H], xmm4 (ECS:10, ACS:9)
Instruction predicted size = 10, actual = 9
IN001c: 000024 vmovdqa  xmmword ptr [rsp+rax+A0H], xmm4 (ECS:10, ACS:9)
Instruction predicted size = 10, actual = 9
IN001d: 00002D vmovdqa  xmmword ptr [rsp+rax+B0H], xmm4 (ECS:10, ACS:9)
Instruction predicted size = 10, actual = 9
IN001e: 000036 add      rax, 48
IN001f: 00003A jne      SHORT  -5 instr
IN0020: 00003C mov      qword ptr [rsp+90H], rax
						;; bbWeight=1    PerfScore 7.08
G_M11062_IG02:        ; func=00, offs=000049H, size=005FH, gcrefRegs=00000106 {rcx rdx r8}, byrefRegs=00000000 {}, byref, isz
Block predicted offs = 00000049, actual = 00000044 -> size adj = 5
       ; gcrRegs +[rcx rdx r8]
IN0001: 000044 xor      rax, rax
       ; gcrRegs +[rax]
IN0002: 000046 mov      gword ptr [rsp+68H], rax
IN0003: 00004B mov      gword ptr [rsp+30H], rcx
IN0004: 000050 mov      gword ptr [rsp+20H], rdx
IN0005: 000055 mov      gword ptr [rsp+28H], r8
IN0006: 00005A mov      dword ptr [rsp+5CH], r9d
IN0007: 00005F mov      rcx, gword ptr [rsp+C0H]
IN0008: 000067 mov      gword ptr [rsp+38H], rcx
IN0009: 00006C mov      ecx, dword ptr [rsp+C8H]
       ; gcrRegs -[rcx]
IN000a: 000073 movzx    rcx, cl
IN000b: 000076 mov      byte  ptr [rsp+64H], cl
IN000c: 00007A mov      rcx, gword ptr [rsp+D0H]
       ; gcrRegs +[rcx]
IN000d: 000082 mov      gword ptr [rsp+40H], rcx
IN000e: 000087 mov      dword ptr [rsp+58H], -1
IN000f: 00008F lea      rcx, [rsp+20H]
       ; gcrRegs -[rcx]
IN0010: 000094 call     System.Runtime.CompilerServices.AsyncMethodBuilderCore:Start(byref)
       ; gcrRegs -[rax rdx r8]
       ; gcr arg pop 0
IN0011: 000099 mov      rax, gword ptr [rsp+68H]
       ; gcrRegs +[rax]
IN0012: 00009E test     rax, rax
IN0013: 0000A1 jne      SHORT G_M11062_IG04
						;; bbWeight=1    PerfScore 16.25
G_M11062_IG03:        ; func=00, offs=0000A8H, size=000AH, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref
Block predicted offs = 000000A8, actual = 000000A3 -> size adj = 5
       ; gcrRegs -[rax]
IN0014: 0000A3 lea      rcx, bword ptr [rsp+68H]
       ; byrRegs +[rcx]
IN0015: 0000A8 call     System.Runtime.CompilerServices.AsyncTaskMethodBuilder:InitializeTaskAsPromise():System.Threading.Tasks.Task`1[VoidTaskResult]:this
       ; gcrRegs +[rax]
       ; byrRegs -[rcx]
       ; gcr arg pop 0
						;; bbWeight=0.25 PerfScore 0.38
G_M11062_IG04:        ; func=00, offs=0000B2H, size=0001H, gcrefRegs=00000001 {rax}, byrefRegs=00000000 {}, byref
Block predicted offs = 000000B2, actual = 000000AD -> size adj = 5
IN0016: 0000AD nop      
						;; bbWeight=1    PerfScore 0.25
G_M11062_IG05:        ; func=00, offs=0000B3H, size=0008H, epilog, nogc, extend
Block predicted offs = 000000B3, actual = 000000AE -> size adj = 5
IN0021: 0000AE add      rsp, 152
IN0022: 0000B5 ret      
						;; bbWeight=1    PerfScore 1.25Allocated method code size =  187 , actual size =  182

; Total bytes of code 182, prolog size 68, PerfScore 43.91, instruction count 34 (MethodHash=d0d2d4c9) for method SolutionAnalyzer.Results:Obtain(System.String[],System.String,System.String,int,System.String,bool,System.Func`3[[Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[Microsoft.CodeAnalysis.SemanticModel, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]):System.Threading.Tasks.Task
; ============================================================

*************** After end code gen, before unwindEmit()
G_M11062_IG01:        ; func=00, offs=000000H, size=0044H, bbWeight=1    PerfScore 7.08, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref, nogc, isz <-- Prolog IG

IN0017: 000000 sub      rsp, 152
IN0018: 000007 vxorps   xmm4, xmm4
IN0019: 00000B vmovdqa  xmmword ptr [rsp+20H], xmm4
IN001a: 000011 mov      rax, -96
IN001b: 00001B vmovdqa  xmmword ptr [rsp+rax+90H], xmm4
IN001c: 000024 vmovdqa  xmmword ptr [rsp+rax+A0H], xmm4
IN001d: 00002D vmovdqa  xmmword ptr [rsp+rax+B0H], xmm4
IN001e: 000036 add      rax, 48
IN001f: 00003A jne      SHORT  -5 instr
IN0020: 00003C mov      qword ptr [rsp+90H], rax

G_M11062_IG02:        ; offs=000044H, size=005FH, bbWeight=1    PerfScore 16.25, gcrefRegs=00000106 {rcx rdx r8}, byrefRegs=00000000 {}, byref, isz

IN0001: 000044 xor      rax, rax
IN0002: 000046 mov      gword ptr [V07+0x48 rsp+68H], rax
IN0003: 00004B mov      gword ptr [V07+0x10 rsp+30H], rcx
IN0004: 000050 mov      gword ptr [V07 rsp+20H], rdx
IN0005: 000055 mov      gword ptr [V07+0x8 rsp+28H], r8
IN0006: 00005A mov      dword ptr [V07+0x3C rsp+5CH], r9d
IN0007: 00005F mov      rcx, gword ptr [V04 rsp+C0H]
IN0008: 000067 mov      gword ptr [V07+0x18 rsp+38H], rcx
IN0009: 00006C mov      ecx, dword ptr [V05 rsp+C8H]
IN000a: 000073 movzx    rcx, cl
IN000b: 000076 mov      byte  ptr [V07+0x44 rsp+64H], cl
IN000c: 00007A mov      rcx, gword ptr [V06 rsp+D0H]
IN000d: 000082 mov      gword ptr [V07+0x20 rsp+40H], rcx
IN000e: 000087 mov      dword ptr [V07+0x38 rsp+58H], -1
IN000f: 00008F lea      rcx, [V07 rsp+20H]
IN0010: 000094 call     System.Runtime.CompilerServices.AsyncMethodBuilderCore:Start(byref)
IN0011: 000099 mov      rax, gword ptr [V07+0x48 rsp+68H]
IN0012: 00009E test     rax, rax
IN0013: 0000A1 jne      SHORT G_M11062_IG04

G_M11062_IG03:        ; offs=0000A3H, size=000AH, bbWeight=0.25 PerfScore 0.38, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref

IN0014: 0000A3 lea      rcx, bword ptr [V07+0x48 rsp+68H]
IN0015: 0000A8 call     System.Runtime.CompilerServices.AsyncTaskMethodBuilder:InitializeTaskAsPromise():System.Threading.Tasks.Task`1[VoidTaskResult]:this

G_M11062_IG04:        ; offs=0000ADH, size=0001H, bbWeight=1    PerfScore 0.25, gcrefRegs=00000001 {rax}, byrefRegs=00000000 {}, byref

IN0016: 0000AD nop      

G_M11062_IG05:        ; offs=0000AEH, size=0008H, bbWeight=1    PerfScore 1.25, epilog, nogc, extend

IN0021: 0000AE add      rsp, 152
IN0022: 0000B5 ret      


*************** Finishing PHASE Emit code

*************** Starting PHASE Emit GC+EH tables
Unwind Info:
  >> Start offset   : 0x000000 (not in unwind data)
  >>   End offset   : 0xd1ffab1e (not in unwind data)
  Version           : 1
  Flags             : 0x00
  SizeOfProlog      : 0x07
  CountOfUnwindCodes: 2
  FrameRegister     : none (0)
  FrameOffset       : N/A (no FrameRegister) (Value=0)
  UnwindCodes       :
    CodeOffset: 0x07 UnwindOp: UWOP_ALLOC_LARGE (1)     OpInfo: 0 - Scaled small  
      Size: 19 * 8 = 152 = 0x00098
allocUnwindInfo(pHotCode=0x00000000D1FFAB1E, pColdCode=0x0000000000000000, startOffset=0x0, endOffset=0xb6, unwindSize=0x8, pUnwindBlock=0x00000000D1FFAB1E, funKind=0 (main function))
*************** In genIPmappingGen()
IP mapping count : 13
IL offs PROLOG : 0x00000000 ( STACK_EMPTY )
IL offs 0x0000 : 0x00000044 ( STACK_EMPTY )
IL offs 0x000C : 0x0000004B ( STACK_EMPTY )
IL offs 0x0014 : 0x00000050 ( STACK_EMPTY )
IL offs 0x001C : 0x00000055 ( STACK_EMPTY )
IL offs 0x0024 : 0x0000005A ( STACK_EMPTY )
IL offs 0x002C : 0x0000005F ( STACK_EMPTY )
IL offs 0x0035 : 0x0000006C ( STACK_EMPTY )
IL offs 0x003E : 0x0000007A ( STACK_EMPTY )
IL offs 0x0047 : 0x00000087 ( STACK_EMPTY )
IL offs 0x004F : 0x0000008F ( STACK_EMPTY )
IL offs 0x005D : 0x00000099 ( STACK_EMPTY )
IL offs EPILOG : 0x000000AD ( STACK_EMPTY )

*************** In genSetScopeInfo()
VarLocInfo count is 14
; Variable debug info: 14 live range(s), 7 var(s) for method SolutionAnalyzer.Results:Obtain(System.String[],System.String,System.String,int,System.String,bool,System.Func`3[[Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[Microsoft.CodeAnalysis.SemanticModel, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]):System.Threading.Tasks.Task
  0(   UNKNOWN) : From 00000000h to 00000044h, in rcx
  1(   UNKNOWN) : From 00000000h to 00000044h, in rdx
  2(   UNKNOWN) : From 00000000h to 00000044h, in r8
  3(   UNKNOWN) : From 00000000h to 00000044h, in r9
  4(   UNKNOWN) : From 00000000h to 00000044h, in rsp[40] (1 slot)
  5(   UNKNOWN) : From 00000000h to 00000044h, in rsp[48] (1 slot)
  6(   UNKNOWN) : From 00000000h to 00000044h, in rsp[56] (1 slot)
  0(   UNKNOWN) : From 00000044h to 0000004Bh, in rcx
  1(   UNKNOWN) : From 00000044h to 00000050h, in rdx
  2(   UNKNOWN) : From 00000044h to 00000055h, in r8
  3(   UNKNOWN) : From 00000044h to 0000005Ah, in r9
  4(   UNKNOWN) : From 00000044h to 00000067h, in rsp'[192] (1 slot)
  5(   UNKNOWN) : From 00000044h to 00000073h, in rsp'[200] (1 slot)
  6(   UNKNOWN) : From 00000044h to 00000082h, in rsp'[208] (1 slot)
*************** In gcInfoBlockHdrSave()
Set code length to 182.
Set ReturnKind to Object.
Set Outgoing stack arg area size to 32.
Stack slot id for offset 192 (0xc0) (sp) (untracked) = 0.
Stack slot id for offset 208 (0xd0) (sp) (untracked) = 1.
Stack slot id for offset 32 (0x20) (sp) (untracked) = 2.
Stack slot id for offset 40 (0x28) (sp) (untracked) = 3.
Stack slot id for offset 48 (0x30) (sp) (untracked) = 4.
Stack slot id for offset 56 (0x38) (sp) (untracked) = 5.
Stack slot id for offset 64 (0x40) (sp) (untracked) = 6.
Stack slot id for offset 72 (0x48) (sp) (untracked) = 7.
Stack slot id for offset 80 (0x50) (sp) (untracked) = 8.
Stack slot id for offset 104 (0x68) (sp) (untracked) = 9.
Stack slot id for offset 112 (0x70) (sp) (untracked) = 10.
Stack slot id for offset 120 (0x78) (sp) (untracked) = 11.
Stack slot id for offset 136 (0x88) (sp) (untracked) = 12.
Defining 2 call sites:
    Offset 0x94, size 5.
    Offset 0xa8, size 5.

*************** Finishing PHASE Emit GC+EH tables
Method code size: 182

Allocations for SolutionAnalyzer.Results:Obtain(System.String[],System.String,System.String,int,System.String,bool,System.Func`3[[Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[Microsoft.CodeAnalysis.SemanticModel, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]):System.Threading.Tasks.Task (MethodHash=d0d2d4c9)
count:       1313, size:     107384, max =       3072
allocateMemory:     131072, nraUsed:     112848

Alloc'd bytes by kind:
                  kind |       size |     pct
  ---------------------+------------+--------
         AssertionProp |       6460 |   6.02%
               ASTNode |      17920 |  16.69%
              InstDesc |       4328 |   4.03%
              ImpStack |        432 |   0.40%
            BasicBlock |       2568 |   2.39%
             fgArgInfo |        128 |   0.12%
       fgArgInfoPtrArr |         16 |   0.01%
              FlowList |        208 |   0.19%
     TreeStatementList |          0 |   0.00%
               SiScope |       1032 |   0.96%
       DominatorMemory |        192 |   0.18%
                  LSRA |       3524 |   3.28%
         LSRA_Interval |       1360 |   1.27%
      LSRA_RefPosition |       3904 |   3.64%
          Reachability |         16 |   0.01%
                   SSA |       1408 |   1.31%
           ValueNumber |       9020 |   8.40%
              LvaTable |       1972 |   1.84%
            UnwindInfo |          0 |   0.00%
                hashBv |        120 |   0.11%
                bitset |        344 |   0.32%
          FixedBitVect |         44 |   0.04%
               Generic |       2894 |   2.70%
   LocalAddressVisitor |          0 |   0.00%
         FieldSeqStore |        840 |   0.78%
    ZeroOffsetFieldMap |        160 |   0.15%
          ArrayInfoMap |         80 |   0.07%
          MemoryPhiArg |          0 |   0.00%
                   CSE |       1248 |   1.16%
                    GC |       2218 |   2.07%
       CorTailCallInfo |          0 |   0.00%
              Inlining |       2760 |   2.57%
            ArrayStack |          0 |   0.00%
             DebugInfo |        736 |   0.69%
             DebugOnly |      37725 |  35.13%
               Codegen |       1176 |   1.10%
               LoopOpt |          0 |   0.00%
             LoopHoist |          0 |   0.00%
               Unknown |        496 |   0.46%
            RangeCheck |          0 |   0.00%
              CopyProp |       1376 |   1.28%
           SideEffects |          0 |   0.00%
       ObjectAllocator |          0 |   0.00%
    VariableLiveRanges |          0 |   0.00%
           ClassLayout |        127 |   0.12%
       TailMergeThrows |          0 |   0.00%
             EarlyProp |          0 |   0.00%
              ZeroInit |        552 |   0.51%

****** DONE compiling SolutionAnalyzer.Results:Obtain(System.String[],System.String,System.String,int,System.String,bool,System.Func`3[[Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[Microsoft.CodeAnalysis.SemanticModel, Microsoft.CodeAnalysis, Version=3.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35],[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]):System.Threading.Tasks.Task