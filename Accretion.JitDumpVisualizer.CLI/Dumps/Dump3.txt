****** START compiling HotkeyedMusicPlayer.MusicPlayer:PlayCurrentMedia():System.Threading.Tasks.Task (MethodHash=f5b82a70)
Generating code for Windows x64
OPTIONS: compCodeOpt = BLENDED_CODE
OPTIONS: compDbgCode = false
OPTIONS: compDbgInfo = true
OPTIONS: compDbgEnC  = false
OPTIONS: compProcedureSplitting   = false
OPTIONS: compProcedureSplittingEH = false
IL to import:
IL_0000  12 00             ldloca.s     0x0
IL_0002  28 3d 00 00 0a    call         0xA00003D
IL_0007  7d 38 00 00 04    stfld        0x4000038
IL_000c  12 00             ldloca.s     0x0
IL_000e  15                ldc.i4.m1   
IL_000f  7d 37 00 00 04    stfld        0x4000037
IL_0014  12 00             ldloca.s     0x0
IL_0016  7c 38 00 00 04    ldflda       0x4000038
IL_001b  12 00             ldloca.s     0x0
IL_001d  28 0e 00 00 2b    call         0x2B00000E
IL_0022  12 00             ldloca.s     0x0
IL_0024  7c 38 00 00 04    ldflda       0x4000038
IL_0029  28 3f 00 00 0a    call         0xA00003F
IL_002e  2a                ret         

lvaGrabTemp returning 1 (V01 tmp0) (a long lifetime temp) called for OutgoingArgSpace.
; Initial local variable assignments
;
;  V00 loc0           struct <<PlayCurrentMedia>d__12, 24>
;  V01 OutArgs        lclBlk <na>  "OutgoingArgSpace"
*************** In compInitDebuggingInfo() for HotkeyedMusicPlayer.MusicPlayer:PlayCurrentMedia():System.Threading.Tasks.Task
getVars() returned cVars = 0, extendOthers = true
info.compVarScopesCount = 1
    	VarNum 	LVNum 	      Name 	Beg 	End
 0: 	00h 	00h 	  V00 loc0 	000h   	02Fh
info.compStmtOffsetsCount    = 0
info.compStmtOffsetsImplicit = 0005h ( STACK_EMPTY CALL_SITE )
*************** In fgFindBasicBlocks() for HotkeyedMusicPlayer.MusicPlayer:PlayCurrentMedia():System.Threading.Tasks.Task
Jump targets:
  none
New Basic Block BB01 [0000] created.
BB01 [000..02F)
IL Code Size,Instr   47,  14, Basic Block count   1, Local Variable Num,Ref count   2,  5 for method HotkeyedMusicPlayer.MusicPlayer:PlayCurrentMedia():System.Threading.Tasks.Task
OPTIONS: opts.MinOpts() == false
Basic block list for 'HotkeyedMusicPlayer.MusicPlayer:PlayCurrentMedia():System.Threading.Tasks.Task'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Pre-import

*************** Finishing PHASE Pre-import

*************** Starting PHASE Importation
*************** In impImport() for HotkeyedMusicPlayer.MusicPlayer:PlayCurrentMedia():System.Threading.Tasks.Task

impImportBlockPending for BB01

Importing BB01 (PC=000) of 'HotkeyedMusicPlayer.MusicPlayer:PlayCurrentMedia():System.Threading.Tasks.Task'
    [ 0]   0 (0x000) ldloca.s 0
    [ 1]   2 (0x002) call 0A00003D
In Compiler::impImportCall: opcode is call, kind=0, callRetType is struct, structSize is 8


STMT00000 (IL 0x000...  ???)
               [000002] I-C-G-------              *  CALL      struct System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Create (exactContextHnd=0x00000000D1FFAB1E)

    [ 2]   7 (0x007) stfld 04000038

STMT00001 (IL   ???...  ???)
               [000007] -AC---------              *  ASG       struct (copy)
               [000006] *-----------              +--*  OBJ       struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>
               [000005] ------------              |  \--*  ADDR      byref 
               [000004] -------N----              |     \--*  FIELD     struct <>t__builder
               [000001] ------------              |        \--*  ADDR      byref 
               [000000] -------N----              |           \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24> V00 loc0         
               [000003] --C---------              \--*  RET_EXPR  struct(inl return from call [000002])

    [ 0]  12 (0x00c) ldloca.s 0
    [ 1]  14 (0x00e) ldc.i4.m1 -1
    [ 2]  15 (0x00f) stfld 04000037

STMT00002 (IL 0x00C...  ???)
               [000012] -A----------              *  ASG       int   
               [000011] -------N----              +--*  FIELD     int    <>1__state
               [000009] ------------              |  \--*  ADDR      byref 
               [000008] -------N----              |     \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24> V00 loc0         
               [000010] ------------              \--*  CNS_INT   int    -1

    [ 0]  20 (0x014) ldloca.s 0
    [ 1]  22 (0x016) ldflda 04000038
    [ 1]  27 (0x01b) ldloca.s 0
    [ 2]  29 (0x01d) call 2B00000E
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0


STMT00003 (IL 0x014...  ???)
               [000019] I-C-G-------              *  CALL      void   System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start (exactContextHnd=0x00000000D1FFAB1E)
               [000016] ------------ this in rcx  +--*  ADDR      byref 
               [000015] -------N----              |  \--*  FIELD     struct <>t__builder
               [000014] ------------              |     \--*  ADDR      byref 
               [000013] -------N----              |        \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24> V00 loc0         
               [000018] ------------ arg1         \--*  ADDR      byref 
               [000017] -------N----                 \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24> V00 loc0         

    [ 0]  34 (0x022) ldloca.s 0
    [ 1]  36 (0x024) ldflda 04000038
    [ 1]  41 (0x029) call 0A00003F (Implicit Tail call: prefixFlags |= PREFIX_TAILCALL_IMPLICIT)
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0

GTF_CALL_M_IMPLICIT_TAILCALL set for call [000024]


STMT00004 (IL 0x022...  ???)
               [000024] I-C-G-------              *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.get_Task (exactContextHnd=0x00000000D1FFAB1E)
               [000023] ------------ this in rcx  \--*  ADDR      byref 
               [000022] -------N----                 \--*  FIELD     struct <>t__builder
               [000021] ------------                    \--*  ADDR      byref 
               [000020] -------N----                       \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24> V00 loc0         

    [ 1]  46 (0x02e) ret

STMT00005 (IL   ???...  ???)
               [000026] --C---------              *  RETURN    ref   
               [000025] --C---------              \--*  RET_EXPR  ref   (inl return from call [000024])

*************** Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..02F)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..02F) (return), preds={} succs={}

***** BB01
STMT00000 (IL 0x000...0x007)
               [000002] I-C-G-------              *  CALL      struct System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Create (exactContextHnd=0x00000000D1FFAB1E)

***** BB01
STMT00001 (IL   ???...  ???)
               [000007] -AC---------              *  ASG       struct (copy)
               [000006] *-----------              +--*  OBJ       struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>
               [000005] ------------              |  \--*  ADDR      byref 
               [000004] -------N----              |     \--*  FIELD     struct <>t__builder
               [000001] ------------              |        \--*  ADDR      byref 
               [000000] -------N----              |           \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24> V00 loc0         
               [000003] --C---------              \--*  RET_EXPR  struct(inl return from call [000002])

***** BB01
STMT00002 (IL 0x00C...0x00F)
               [000012] -A----------              *  ASG       int   
               [000011] -------N----              +--*  FIELD     int    <>1__state
               [000009] ------------              |  \--*  ADDR      byref 
               [000008] -------N----              |     \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24> V00 loc0         
               [000010] ------------              \--*  CNS_INT   int    -1

***** BB01
STMT00003 (IL 0x014...0x02E)
               [000019] I-C-G-------              *  CALL      void   System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start (exactContextHnd=0x00000000D1FFAB1E)
               [000016] ------------ this in rcx  +--*  ADDR      byref 
               [000015] -------N----              |  \--*  FIELD     struct <>t__builder
               [000014] ------------              |     \--*  ADDR      byref 
               [000013] -------N----              |        \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24> V00 loc0         
               [000018] ------------ arg1         \--*  ADDR      byref 
               [000017] -------N----                 \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24> V00 loc0         

***** BB01
STMT00004 (IL 0x022...  ???)
               [000024] I-C-G-------              *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.get_Task (exactContextHnd=0x00000000D1FFAB1E)
               [000023] ------------ this in rcx  \--*  ADDR      byref 
               [000022] -------N----                 \--*  FIELD     struct <>t__builder
               [000021] ------------                    \--*  ADDR      byref 
               [000020] -------N----                       \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24> V00 loc0         

***** BB01
STMT00005 (IL   ???...  ???)
               [000026] --C---------              *  RETURN    ref   
               [000025] --C---------              \--*  RET_EXPR  ref   (inl return from call [000024])

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Finishing PHASE Indirect call transform [no changes]

*************** Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Finishing PHASE Expand patchpoints [no changes]

*************** Starting PHASE Post-import

*************** Finishing PHASE Post-import

*************** Starting PHASE Morph - Init

New BlockSet epoch 1, # of blocks (including unused BB00): 2, bitset array size: 1 (short)
New Basic Block BB02 [0001] created.
New scratch BB02

*************** In fgRemoveEmptyBlocks

*************** Finishing PHASE Morph - Init
*************** In fgDebugCheckBBlist

*************** Starting PHASE Morph - Inlining
Expanding INLINE_CANDIDATE in statement STMT00000 in BB01:
STMT00000 (IL 0x000...0x007)
               [000002] I-C-G-------              *  CALL      struct System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Create (exactContextHnd=0x00000000D1FFAB1E)
INLINER: inlineInfo.tokenLookupContextHandle for System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Create():System.Runtime.CompilerServices.AsyncTaskMethodBuilder set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Create():System.Runtime.CompilerServices.AsyncTaskMethodBuilder :
IL to import:
IL_0000  12 00             ldloca.s     0x0
IL_0002  fe 15 2b 05 00 02 initobj      0x200052B
IL_0008  06                ldloc.0     
IL_0009  2a                ret         

INLINER impTokenLookupContextHandle for System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Create():System.Runtime.CompilerServices.AsyncTaskMethodBuilder is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Create():System.Runtime.CompilerServices.AsyncTaskMethodBuilder
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB03 [0002] created.
BB03 [000..00A)
Basic block list for 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Create():System.Runtime.CompilerServices.AsyncTaskMethodBuilder'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB03 [0002]  1                             1       [000..00A)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000002] Starting PHASE Pre-import

*************** Inline @[000002] Finishing PHASE Pre-import

*************** Inline @[000002] Starting PHASE Importation
*************** In impImport() for System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Create():System.Runtime.CompilerServices.AsyncTaskMethodBuilder

impImportBlockPending for BB03

Importing BB03 (PC=000) of 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Create():System.Runtime.CompilerServices.AsyncTaskMethodBuilder'
    [ 0]   0 (0x000) ldloca.s 0
lvaGrabTemp returning 2 (V02 tmp1) (a long lifetime temp) called for Inline ldloca(s) first use temp.

    [ 1]   2 (0x002) initobj 0200052B

               [000033] IA----------              *  ASG       struct (init)
               [000030] D------N----              +--*  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8> V02 tmp1         
               [000032] ------------              \--*  CNS_INT   int    0

    [ 0]   8 (0x008) ldloc.0
    [ 1]   9 (0x009) ret

    Inlinee Return expression (before normalization)  =>
               [000034] ------------              *  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8> V02 tmp1         

impFixupStructReturnType: retyping
               [000034] ------------              *  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8> V02 tmp1         


    Inlinee Return expression (after normalization) =>
               [000034] ------------              *  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8> V02 tmp1         

*************** Inline @[000002] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB03 [0002]  1                             1       [000..00A)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB03 [000..00A) (return), preds={} succs={}

***** BB03
               [000033] IA----------              *  ASG       struct (init)
               [000030] D------N----              +--*  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8> V02 tmp1         
               [000032] ------------              \--*  CNS_INT   int    0

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000002] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000002] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000002] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000002] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000002] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000002] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000002] -----------

Inlinee method body:
STMT00007 (IL 0x000...  ???)
               [000033] IA----------              *  ASG       struct (init)
               [000030] D------N----              +--*  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8> V02 tmp1         
               [000032] ------------              \--*  CNS_INT   int    0

fgInlineAppendStatements: no gc ref inline locals.

Return expression for call at [000002] is
               [000034] ------------              *  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8> V02 tmp1         
Successfully inlined System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Create():System.Runtime.CompilerServices.AsyncTaskMethodBuilder (10 IL bytes) (depth 1) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'HotkeyedMusicPlayer.MusicPlayer:PlayCurrentMedia():System.Threading.Tasks.Task' calling 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Create():System.Runtime.CompilerServices.AsyncTaskMethodBuilder'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'

Replacing the return expression placeholder [000003] with [000034]
               [000003] --C---------              *  RET_EXPR  struct(inl return from call [000034])

Inserting the inline return expression
               [000034] ------------              *  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8> V02 tmp1         

Expanding INLINE_CANDIDATE in statement STMT00003 in BB01:
STMT00003 (IL 0x014...0x02E)
               [000019] I-C-G-------              *  CALL      void   System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start (exactContextHnd=0x00000000D1FFAB1E)
               [000016] ------------ this in rcx  +--*  ADDR      byref 
               [000015] -------N----              |  \--*  FIELD     struct <>t__builder
               [000014] ------------              |     \--*  ADDR      byref 
               [000013] -------N----              |        \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24> V00 loc0         
               [000018] ------------ arg1         \--*  ADDR      byref 
               [000017] -------N----                 \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24> V00 loc0         
thisArg: is a constant is byref to a struct local
               [000016] ------------              *  ADDR      byref 
               [000015] -------N----              \--*  FIELD     struct <>t__builder
               [000014] ------------                 \--*  ADDR      byref 
               [000013] -------N----                    \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24> V00 loc0         


Argument #1: is a constant is byref to a struct local
               [000018] ------------              *  ADDR      byref 
               [000017] -------N----              \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24> V00 loc0         

INLINER: inlineInfo.tokenLookupContextHandle for System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Start(byref):this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Start(byref):this :
IL to import:
IL_0000  03                ldarg.1     
IL_0001  28 59 04 00 2b    call         0x2B000459
IL_0006  2a                ret         

INLINER impTokenLookupContextHandle for System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Start(byref):this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Start(byref):this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB04 [0003] created.
BB04 [000..007)
Basic block list for 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Start(byref):this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB04 [0003]  1                             1       [000..007)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000019] Starting PHASE Pre-import

*************** Inline @[000019] Finishing PHASE Pre-import

*************** Inline @[000019] Starting PHASE Importation
*************** In impImport() for System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Start(byref):this

impImportBlockPending for BB04

Importing BB04 (PC=000) of 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Start(byref):this'
    [ 0]   0 (0x000) ldarg.1
    [ 1]   1 (0x001) call 2B000459
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'has exception handling' for 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Start(byref):this' calling 'System.Runtime.CompilerServices.AsyncMethodBuilderCore:Start(byref)'

INLINER: Marking System.Runtime.CompilerServices.AsyncMethodBuilderCore:Start(byref) as NOINLINE because of has exception handling
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'has exception handling'


               [000038] --C-G-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
               [000036] ------------ arg0         \--*  ADDR      byref 
               [000037] -------N----                 \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24> V00 loc0         

    [ 0]   6 (0x006) ret
*************** Inline @[000019] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB04 [0003]  1                             1       [000..007)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB04 [000..007) (return), preds={} succs={}

***** BB04
               [000038] --C-G-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
               [000036] ------------ arg0         \--*  ADDR      byref 
               [000037] -------N----                 \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24> V00 loc0         

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000019] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000019] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000019] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000019] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000019] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000019] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000019] -----------

Arguments setup:

Inlinee method body:
STMT00008 (IL 0x014...  ???)
               [000038] --C-G-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
               [000036] ------------ arg0         \--*  ADDR      byref 
               [000037] -------N----                 \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24> V00 loc0         

fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Start(byref):this (7 IL bytes) (depth 1) [aggressive inline attribute]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'aggressive inline attribute' for 'HotkeyedMusicPlayer.MusicPlayer:PlayCurrentMedia():System.Threading.Tasks.Task' calling 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Start(byref):this'
INLINER: during 'fgInline' result 'success' reason 'aggressive inline attribute'
Expanding INLINE_CANDIDATE in statement STMT00004 in BB01:
STMT00004 (IL 0x022...  ???)
               [000024] I-C-G-------              *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.get_Task (exactContextHnd=0x00000000D1FFAB1E)
               [000023] ------------ this in rcx  \--*  ADDR      byref 
               [000022] -------N----                 \--*  FIELD     struct <>t__builder
               [000021] ------------                    \--*  ADDR      byref 
               [000020] -------N----                       \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24> V00 loc0         
Note: candidate is implicit tail call
thisArg: is a constant is byref to a struct local
               [000023] ------------              *  ADDR      byref 
               [000022] -------N----              \--*  FIELD     struct <>t__builder
               [000021] ------------                 \--*  ADDR      byref 
               [000020] -------N----                    \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24> V00 loc0         

INLINER: inlineInfo.tokenLookupContextHandle for System.Runtime.CompilerServices.AsyncTaskMethodBuilder:get_Task():System.Threading.Tasks.Task:this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Runtime.CompilerServices.AsyncTaskMethodBuilder:get_Task():System.Threading.Tasks.Task:this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  7b 9e 11 00 04    ldfld        0x400119E
IL_0006  25                dup         
IL_0007  2d 07             brtrue.s     7 (IL_0010)
IL_0009  26                pop         
IL_000a  02                ldarg.0     
IL_000b  28 d0 47 00 06    call         0x60047D0
IL_0010  2a                ret         

INLINER impTokenLookupContextHandle for System.Runtime.CompilerServices.AsyncTaskMethodBuilder:get_Task():System.Threading.Tasks.Task:this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Runtime.CompilerServices.AsyncTaskMethodBuilder:get_Task():System.Threading.Tasks.Task:this
Jump targets:
  IL_0010
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB05 [0004] created.
BB05 [000..009)
New Basic Block BB06 [0005] created.
BB06 [009..010)
New Basic Block BB07 [0006] created.
BB07 [010..011)
Basic block list for 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder:get_Task():System.Threading.Tasks.Task:this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB05 [0004]  1                             1       [000..009)-> BB07 ( cond )                     
BB06 [0005]  1                             1       [009..010)                                     
BB07 [0006]  2                             1       [010..011)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000024] Starting PHASE Pre-import

*************** Inline @[000024] Finishing PHASE Pre-import

*************** Inline @[000024] Starting PHASE Importation
*************** In impImport() for System.Runtime.CompilerServices.AsyncTaskMethodBuilder:get_Task():System.Threading.Tasks.Task:this

impImportBlockPending for BB05

Importing BB05 (PC=000) of 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder:get_Task():System.Threading.Tasks.Task:this'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) ldfld 0400119E
    [ 1]   6 (0x006) dup
lvaGrabTemp returning 3 (V03 tmp2) called for dup spill.


               [000046] -A--G-------              *  ASG       ref   
               [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         
               [000044] ----G-------              \--*  FIELD     ref    m_task
               [000040] ----G-------                 \--*  ADDR      byref 
               [000041] ----G--N----                    \--*  FIELD     struct <>t__builder
               [000042] ------------                       \--*  ADDR      byref 
               [000043] -------N----                          \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24> V00 loc0         
Marked V03 as a single def local
Querying runtime about current class of field System.Runtime.CompilerServices.AsyncTaskMethodBuilder.m_task (declared as System.Threading.Tasks.Task`1[VoidTaskResult])
Field's current class not available

lvaSetClass: setting class for V03 to (00000000D1FFAB1E) System.Threading.Tasks.Task`1[VoidTaskResult] 

    [ 2]   7 (0x007) brtrue.s

               [000051] ------------              *  JTRUE     void  
               [000050] ------------              \--*  NE        int   
               [000048] ------------                 +--*  LCL_VAR   ref    V03 tmp2         
               [000049] ------------                 \--*  CNS_INT   ref    null

*************** In impGetSpillTmpBase(BB05)

lvaGrabTemps(1) returning 4..4 (long lifetime temps) called for IL Stack Entries
*************** In fgComputeCheapPreds()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB05 [0004]  1                             1       [000..009)-> BB07 ( cond )                     
BB06 [0005]  1                             1       [009..010)                                     
BB07 [0006]  2                             1       [010..011)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------


*************** After fgComputeCheapPreds()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd cheap preds     weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB05 [0004]  1                             1       [000..009)-> BB07 ( cond )                     
BB06 [0005]  1       BB05                  1       [009..010)                                     
BB07 [0006]  2       BB06,BB05             1       [010..011)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------


Spilling stack entries into temps


               [000053] -A----------              *  ASG       ref   
               [000052] D------N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000047] ------------              \--*  LCL_VAR   ref    V03 tmp2         


               [000051] ------------              *  JTRUE     void  
               [000050] ------------              \--*  NE        int   
               [000048] ------------                 +--*  LCL_VAR   ref    V03 tmp2         
               [000049] ------------                 \--*  CNS_INT   ref    null

impImportBlockPending for BB06

impImportBlockPending for BB07

Importing BB07 (PC=016) of 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder:get_Task():System.Threading.Tasks.Task:this'
    [ 1]  16 (0x010) ret

    Inlinee Return expression (before normalization)  =>
               [000056] ------------              *  LCL_VAR   ref    V04 tmp3         


    Inlinee Return expression (after normalization) =>
               [000056] ------------              *  LCL_VAR   ref    V04 tmp3         

Importing BB06 (PC=009) of 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder:get_Task():System.Threading.Tasks.Task:this'
    [ 1]   9 (0x009) pop
    [ 0]  10 (0x00a) ldarg.0
    [ 1]  11 (0x00b) call 060047D0 (Inline Implicit Tail call: prefixFlags |= PREFIX_TAILCALL_IMPLICIT)
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0

GTF_CALL_M_IMPLICIT_TAILCALL set for call [000061]
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'noinline per IL/cached result' for 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder:get_Task():System.Threading.Tasks.Task:this' calling 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder:InitializeTaskAsPromise():System.Threading.Tasks.Task`1[VoidTaskResult]:this'
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'noinline per IL/cached result'

Spilling stack entries into temps


               [000063] -AC-G-------              *  ASG       ref   
               [000062] D------N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000061] --C-G-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise
               [000057] ----G------- this in rcx     \--*  ADDR      byref 
               [000058] ----G--N----                    \--*  FIELD     struct <>t__builder
               [000059] ------------                       \--*  ADDR      byref 
               [000060] -------N----                          \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24> V00 loc0         

impImportBlockPending for BB07

** Note: inlinee IL was partially imported -- imported 16 of 17 bytes of method IL

*************** Inline @[000024] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB05 [0004]  1                             1       [000..009)-> BB07 ( cond )                     i 
BB06 [0005]  1                             1       [009..010)                                     i 
BB07 [0006]  2                             1       [010..011)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB05 [000..009) -> BB07 (cond), preds={} succs={BB06,BB07}

***** BB05
               [000046] -A--G-------              *  ASG       ref   
               [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         
               [000044] ----G-------              \--*  FIELD     ref    m_task
               [000040] ----G-------                 \--*  ADDR      byref 
               [000041] ----G--N----                    \--*  FIELD     struct <>t__builder
               [000042] ------------                       \--*  ADDR      byref 
               [000043] -------N----                          \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24> V00 loc0         

***** BB05
               [000053] -A----------              *  ASG       ref   
               [000052] D------N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000047] ------------              \--*  LCL_VAR   ref    V03 tmp2         

***** BB05
               [000051] ------------              *  JTRUE     void  
               [000050] ------------              \--*  NE        int   
               [000048] ------------                 +--*  LCL_VAR   ref    V03 tmp2         
               [000049] ------------                 \--*  CNS_INT   ref    null

------------ BB06 [009..010), preds={} succs={BB07}

***** BB06
               [000063] -AC-G-------              *  ASG       ref   
               [000062] D------N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000061] --C-G-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise
               [000057] ----G------- this in rcx     \--*  ADDR      byref 
               [000058] ----G--N----                    \--*  FIELD     struct <>t__builder
               [000059] ------------                       \--*  ADDR      byref 
               [000060] -------N----                          \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24> V00 loc0         

------------ BB07 [010..011) (return), preds={} succs={}

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000024] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000024] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000024] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000024] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000024] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000024] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000024] -----------

Arguments setup:

Inlinee method body:New Basic Block BB08 [0007] created.

Convert bbJumpKind of BB07 to BBJ_NONE
fgInlineAppendStatements: no gc ref inline locals.

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB05 [0004]  1                             1       [022..023)-> BB07 ( cond )                     i 
BB06 [0005]  1                             0.50    [022..023)                                     i 
BB07 [0006]  2                             1       [022..023)                                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB05 [022..023) -> BB07 (cond), preds={} succs={BB06,BB07}

***** BB05
STMT00009 (IL 0x022...  ???)
               [000046] -A--G-------              *  ASG       ref   
               [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         
               [000044] ----G-------              \--*  FIELD     ref    m_task
               [000040] ----G-------                 \--*  ADDR      byref 
               [000041] ----G--N----                    \--*  FIELD     struct <>t__builder
               [000042] ------------                       \--*  ADDR      byref 
               [000043] -------N----                          \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24> V00 loc0         

***** BB05
STMT00011 (IL 0x022...  ???)
               [000053] -A----------              *  ASG       ref   
               [000052] D------N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000047] ------------              \--*  LCL_VAR   ref    V03 tmp2         

***** BB05
STMT00010 (IL 0x022...  ???)
               [000051] ------------              *  JTRUE     void  
               [000050] ------------              \--*  NE        int   
               [000048] ------------                 +--*  LCL_VAR   ref    V03 tmp2         
               [000049] ------------                 \--*  CNS_INT   ref    null

------------ BB06 [022..023), preds={} succs={BB07}

***** BB06
STMT00012 (IL 0x022...  ???)
               [000063] -AC-G-------              *  ASG       ref   
               [000062] D------N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000061] --C-G-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise
               [000057] ----G------- this in rcx     \--*  ADDR      byref 
               [000058] ----G--N----                    \--*  FIELD     struct <>t__builder
               [000059] ------------                       \--*  ADDR      byref 
               [000060] -------N----                          \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24> V00 loc0         

------------ BB07 [022..023), preds={} succs={BB08}

-------------------------------------------------------------------------------------------------------------------

Return expression for call at [000024] is
               [000056] ------------              *  LCL_VAR   ref    V04 tmp3         
Successfully inlined System.Runtime.CompilerServices.AsyncTaskMethodBuilder:get_Task():System.Threading.Tasks.Task:this (17 IL bytes) (depth 1) [aggressive inline attribute]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'aggressive inline attribute' for 'HotkeyedMusicPlayer.MusicPlayer:PlayCurrentMedia():System.Threading.Tasks.Task' calling 'System.Runtime.CompilerServices.AsyncTaskMethodBuilder:get_Task():System.Threading.Tasks.Task:this'
INLINER: during 'fgInline' result 'success' reason 'aggressive inline attribute'
Querying runtime about current class of field System.Runtime.CompilerServices.AsyncTaskMethodBuilder.m_task (declared as System.Threading.Tasks.Task`1[VoidTaskResult])
Field's current class not available

Replacing the return expression placeholder [000025] with [000056]
               [000025] --C---------              *  RET_EXPR  ref   (inl return from call [000056])

Inserting the inline return expression
               [000056] ------------              *  LCL_VAR   ref    V04 tmp3         

**************** Inline Tree
Inlines into 06000037 [via DefaultPolicy] HotkeyedMusicPlayer.MusicPlayer:PlayCurrentMedia():System.Threading.Tasks.Task
  [1 IL=0002 TR=000002 060047CA] [below ALWAYS_INLINE size] System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Create():System.Runtime.CompilerServices.AsyncTaskMethodBuilder
  [2 IL=0029 TR=000019 060047CB] [aggressive inline attribute] System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Start(byref):this
    [0 IL=0001 TR=000038 060047C0] [FAILED: has exception handling] System.Runtime.CompilerServices.AsyncMethodBuilderCore:Start(byref)
  [3 IL=0041 TR=000024 060047CF] [aggressive inline attribute] System.Runtime.CompilerServices.AsyncTaskMethodBuilder:get_Task():System.Threading.Tasks.Task:this
    [0 IL=0011 TR=000061 060047D0] [FAILED: noinline per IL/cached result] System.Runtime.CompilerServices.AsyncTaskMethodBuilder:InitializeTaskAsPromise():System.Threading.Tasks.Task`1[VoidTaskResult]:this
Budget: initialTime=201, finalTime=225, initialBudget=2010, currentBudget=2028
Budget: increased by 18 because of force inlines
Budget: initialSize=1202, finalSize=1202

*************** Finishing PHASE Morph - Inlining
Trees after Morph - Inlining

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB02 [0001]  1                             1       [???..???)                                     i internal label target 
BB01 [0000]  1                             1       [000..02F)                                     i 
BB05 [0004]  1                             1       [022..023)-> BB07 ( cond )                     i 
BB06 [0005]  1                             0.50    [022..023)                                     i 
BB07 [0006]  2                             1       [022..023)                                     i 
BB08 [0007]  1                             1       [???..???)        (return)                     internal 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB02 [???..???), preds={} succs={BB01}

***** BB02
STMT00006 (IL   ???...  ???)
               [000029] --CXG-------              *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000027] ------------ arg0         +--*  CNS_INT   long   0x7ffc7e4a17a0
               [000028] ------------ arg1         \--*  CNS_INT   int    13

------------ BB01 [000..02F), preds={} succs={BB05}

***** BB01
STMT00007 (IL 0x000...  ???)
               [000033] IA----------              *  ASG       struct (init)
               [000030] D------N----              +--*  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8> V02 tmp1         
               [000032] ------------              \--*  CNS_INT   int    0

***** BB01
STMT00001 (IL   ???...  ???)
               [000007] -AC---------              *  ASG       struct (copy)
               [000006] *-----------              +--*  OBJ       struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>
               [000005] ------------              |  \--*  ADDR      byref 
               [000004] -------N----              |     \--*  FIELD     struct <>t__builder
               [000001] ------------              |        \--*  ADDR      byref 
               [000000] -------N----              |           \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24> V00 loc0         
               [000034] ------------              \--*  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8> V02 tmp1         

***** BB01
STMT00002 (IL 0x00C...0x00F)
               [000012] -A----------              *  ASG       int   
               [000011] -------N----              +--*  FIELD     int    <>1__state
               [000009] ------------              |  \--*  ADDR      byref 
               [000008] -------N----              |     \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24> V00 loc0         
               [000010] ------------              \--*  CNS_INT   int    -1

***** BB01
STMT00008 (IL 0x014...  ???)
               [000038] --C-G-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
               [000036] ------------ arg0         \--*  ADDR      byref 
               [000037] -------N----                 \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24> V00 loc0         

------------ BB05 [022..023) -> BB07 (cond), preds={} succs={BB06,BB07}

***** BB05
STMT00009 (IL 0x022...  ???)
               [000046] -A--G-------              *  ASG       ref   
               [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         
               [000044] ----G-------              \--*  FIELD     ref    m_task
               [000040] ----G-------                 \--*  ADDR      byref 
               [000041] ----G--N----                    \--*  FIELD     struct <>t__builder
               [000042] ------------                       \--*  ADDR      byref 
               [000043] -------N----                          \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24> V00 loc0         

***** BB05
STMT00011 (IL 0x022...  ???)
               [000053] -A----------              *  ASG       ref   
               [000052] D------N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000047] ------------              \--*  LCL_VAR   ref    V03 tmp2         

***** BB05
STMT00010 (IL 0x022...  ???)
               [000051] ------------              *  JTRUE     void  
               [000050] ------------              \--*  NE        int   
               [000048] ------------                 +--*  LCL_VAR   ref    V03 tmp2         
               [000049] ------------                 \--*  CNS_INT   ref    null

------------ BB06 [022..023), preds={} succs={BB07}

***** BB06
STMT00012 (IL 0x022...  ???)
               [000063] -AC-G-------              *  ASG       ref   
               [000062] D------N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000061] --C-G-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise
               [000057] ----G------- this in rcx     \--*  ADDR      byref 
               [000058] ----G--N----                    \--*  FIELD     struct <>t__builder
               [000059] ------------                       \--*  ADDR      byref 
               [000060] -------N----                          \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24> V00 loc0         

------------ BB07 [022..023), preds={} succs={BB08}

------------ BB08 [???..???) (return), preds={} succs={}

***** BB08
STMT00005 (IL   ???...  ???)
               [000026] --C---------              *  RETURN    ref   
               [000056] ------------              \--*  LCL_VAR   ref    V04 tmp3         

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Allocate Objects
no newobjs in this method; punting

*************** Finishing PHASE Allocate Objects [no changes]

*************** Starting PHASE Morph - Add internal blocks

*************** After fgAddInternal()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB02 [0001]  1                             1       [???..???)                                     i internal label target 
BB01 [0000]  1                             1       [000..02F)                                     i 
BB05 [0004]  1                             1       [022..023)-> BB07 ( cond )                     i 
BB06 [0005]  1                             0.50    [022..023)                                     i 
BB07 [0006]  2                             1       [022..023)                                     i 
BB08 [0007]  1                             1       [???..???)        (return)                     internal 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty

*************** Finishing PHASE Morph - Add internal blocks

*************** Starting PHASE Remove empty try

*************** In fgRemoveEmptyTry()
No EH in this method, nothing to remove.

*************** Finishing PHASE Remove empty try [no changes]

*************** Starting PHASE Remove empty finally
No EH in this method, nothing to remove.

*************** Finishing PHASE Remove empty finally [no changes]

*************** Starting PHASE Merge callfinally chains
No EH in this method, nothing to merge.

*************** Finishing PHASE Merge callfinally chains [no changes]

*************** Starting PHASE Clone finally
No EH in this method, no cloning.

*************** Finishing PHASE Clone finally [no changes]

*************** Starting PHASE Compute preds

Renumbering the basic blocks for fgComputePred

*************** Before renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB02 [0001]  1                             1       [???..???)                                     i internal label target 
BB01 [0000]  1                             1       [000..02F)                                     i 
BB05 [0004]  1                             1       [022..023)-> BB07 ( cond )                     i 
BB06 [0005]  1                             0.50    [022..023)                                     i 
BB07 [0006]  2                             1       [022..023)                                     i 
BB08 [0007]  1                             1       [???..???)        (return)                     internal 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
Renumber BB02 to BB01
Renumber BB01 to BB02
Renumber BB05 to BB03
Renumber BB06 to BB04
Renumber BB07 to BB05
Renumber BB08 to BB06

*************** After renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0001]  1                             1       [???..???)                                     i internal label target 
BB02 [0000]  1                             1       [000..02F)                                     i 
BB03 [0004]  1                             1       [022..023)-> BB05 ( cond )                     i 
BB04 [0005]  1                             0.50    [022..023)                                     i 
BB05 [0006]  2                             1       [022..023)                                     i 
BB06 [0007]  1                             1       [???..???)        (return)                     internal 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty

New BlockSet epoch 2, # of blocks (including unused BB00): 7, bitset array size: 1 (short)

*************** In fgComputePreds()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0001]  1                             1       [???..???)                                     i internal label target 
BB02 [0000]  1                             1       [000..02F)                                     i 
BB03 [0004]  1                             1       [022..023)-> BB05 ( cond )                     i 
BB04 [0005]  1                             0.50    [022..023)                                     i 
BB05 [0006]  2                             1       [022..023)                                     i 
BB06 [0007]  1                             1       [???..???)        (return)                     internal 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** After fgComputePreds()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0001]  1                             1       [???..???)                                     i internal label target 
BB02 [0000]  1       BB01                  1       [000..02F)                                     i 
BB03 [0004]  1       BB02                  1       [022..023)-> BB05 ( cond )                     i 
BB04 [0005]  1       BB03                  0.50    [022..023)                                     i 
BB05 [0006]  2       BB03,BB04             1       [022..023)                                     i label target 
BB06 [0007]  1       BB05                  1       [???..???)        (return)                     internal 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** Finishing PHASE Compute preds

*************** Starting PHASE Merge throw blocks

*************** In fgTailMergeThrows
Method does not have multiple noreturn calls.

*************** Finishing PHASE Merge throw blocks [no changes]

*************** Starting PHASE Update flow graph early pass

*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0001]  1                             1       [???..???)                                     i internal label target 
BB02 [0000]  1       BB01                  1       [000..02F)                                     i 
BB03 [0004]  1       BB02                  1       [022..023)-> BB05 ( cond )                     i 
BB04 [0005]  1       BB03                  0.50    [022..023)                                     i 
BB05 [0006]  2       BB03,BB04             1       [022..023)                                     i label target 
BB06 [0007]  1       BB05                  1       [???..???)        (return)                     internal 
-----------------------------------------------------------------------------------------------------------------------------------------


Compacting blocks BB02 and BB03:
*************** In fgDebugCheckBBlist

Compacting blocks BB05 and BB06:
*************** In fgDebugCheckBBlist

After updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0001]  1                             1       [???..???)                                     i internal label target 
BB02 [0000]  1       BB01                  1       [000..02F)-> BB05 ( cond )                     i 
BB04 [0005]  1       BB02                  0.50    [022..023)                                     i 
BB05 [0006]  2       BB02,BB04             1       [022..023)        (return)                     i label target 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Update flow graph early pass

*************** Starting PHASE Morph - Promote Structs

*************** In fgResetImplicitByRefRefCount()
*************** In fgPromoteStructs()

lvaTable before fgPromoteStructs
; Initial local variable assignments
;
;  V00 loc0           struct <<PlayCurrentMedia>d__12, 24> ld-addr-op
;  V01 OutArgs        lclBlk <na>  "OutgoingArgSpace"
;  V02 tmp1           struct <System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8> ld-addr-op "Inline ldloca(s) first use temp"
;  V03 tmp2              ref  class-hnd "dup spill"
;  V04 tmp3              ref 

Promoting struct local V00 (<PlayCurrentMedia>d__12):
lvaGrabTemp returning 5 (V05 tmp4) (a long lifetime temp) called for field V00.<>1__state (fldOffset=0x0).

lvaGrabTemp returning 6 (V06 tmp5) (a long lifetime temp) called for field V00.<>t__builder (fldOffset=0x8).

lvaGrabTemp returning 7 (V07 tmp6) (a long lifetime temp) called for field V00.<>u__1 (fldOffset=0x10).

Promoting struct local V02 (System.Runtime.CompilerServices.AsyncTaskMethodBuilder):
lvaGrabTemp returning 8 (V08 tmp7) (a long lifetime temp) called for field V02.m_task (fldOffset=0x0).

lvaTable after fgPromoteStructs
; Initial local variable assignments
;
;  V00 loc0           struct <<PlayCurrentMedia>d__12, 24> ld-addr-op
;  V01 OutArgs        lclBlk <na>  "OutgoingArgSpace"
;  V02 tmp1           struct <System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8> ld-addr-op "Inline ldloca(s) first use temp"
;  V03 tmp2              ref  class-hnd "dup spill"
;  V04 tmp3              ref 
;  V05 tmp4              int  V00.<>1__state(offs=0x00) P-INDEP "field V00.<>1__state (fldOffset=0x0)"
;  V06 tmp5              ref  V00.<>t__builder(offs=0x08) P-INDEP "field V00.<>t__builder (fldOffset=0x8)"
;  V07 tmp6              ref  V00.<>u__1(offs=0x10) P-INDEP "field V00.<>u__1 (fldOffset=0x10)"
;  V08 tmp7              ref  V02.m_task(offs=0x00) P-INDEP "field V02.m_task (fldOffset=0x0)"

*************** Finishing PHASE Morph - Promote Structs

*************** Starting PHASE Morph - Structs/AddrExp

*************** In fgMarkAddressExposedLocals()
LocalAddressVisitor visiting statement:
STMT00006 (IL   ???...  ???)
               [000029] --CXG-------              *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000027] ------------ arg0         +--*  CNS_INT   long   0x7ffc7e4a17a0
               [000028] ------------ arg1         \--*  CNS_INT   int    13

LocalAddressVisitor visiting statement:
STMT00007 (IL 0x000...  ???)
               [000033] IA----------              *  ASG       struct (init)
               [000030] D------N----              +--*  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>(P) V02 tmp1         
                                                  +--*    ref    V02.m_task (offs=0x00) -> V08 tmp7         
               [000032] ------------              \--*  CNS_INT   int    0

LocalAddressVisitor visiting statement:
STMT00001 (IL   ???...  ???)
               [000007] -AC---------              *  ASG       struct (copy)
               [000006] *-----------              +--*  OBJ       struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>
               [000005] ------------              |  \--*  ADDR      byref 
               [000004] -------N----              |     \--*  FIELD     struct <>t__builder
               [000001] ------------              |        \--*  ADDR      byref 
               [000000] -------N----              |           \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24>(P) V00 loc0         
                                                  |           \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                  |           \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                  |           \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
               [000034] ------------              \--*  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>(P) V02 tmp1         
                                                  \--*    ref    V02.m_task (offs=0x00) -> V08 tmp7         
Replacing the field in promoted struct with local var V06
LocalAddressVisitor modified statement:
STMT00001 (IL   ???...  ???)
               [000007] -AC---------              *  ASG       struct (copy)
               [000006] *-----------              +--*  OBJ       struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>
               [000005] ------------              |  \--*  ADDR      byref 
               [000004] ------------              |     \--*  LCL_VAR   ref    V06 tmp5         
               [000034] ------------              \--*  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>(P) V02 tmp1         
                                                  \--*    ref    V02.m_task (offs=0x00) -> V08 tmp7         

LocalAddressVisitor visiting statement:
STMT00002 (IL 0x00C...0x00F)
               [000012] -A----------              *  ASG       int   
               [000011] -------N----              +--*  FIELD     int    <>1__state
               [000009] ------------              |  \--*  ADDR      byref 
               [000008] -------N----              |     \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24>(P) V00 loc0         
                                                  |     \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                  |     \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                  |     \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
               [000010] ------------              \--*  CNS_INT   int    -1
Replacing the field in promoted struct with local var V05
LocalAddressVisitor modified statement:
STMT00002 (IL 0x00C...0x00F)
               [000012] -A----------              *  ASG       int   
               [000011] D------N----              +--*  LCL_VAR   int    V05 tmp4         
               [000010] ------------              \--*  CNS_INT   int    -1

LocalAddressVisitor visiting statement:
STMT00008 (IL 0x014...  ???)
               [000038] --C-G-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
               [000036] ------------ arg0         \--*  ADDR      byref 
               [000037] -------N----                 \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24>(P) V00 loc0         
                                                     \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                     \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                     \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         

Local V05 should not be enregistered because: it is address exposed

Local V06 should not be enregistered because: it is address exposed

Local V07 should not be enregistered because: it is address exposed

Local V00 should not be enregistered because: it is address exposed

LocalAddressVisitor visiting statement:
STMT00009 (IL 0x022...  ???)
               [000046] -A--G-------              *  ASG       ref   
               [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         
               [000044] ----G-------              \--*  FIELD     ref    m_task
               [000040] ----G-------                 \--*  ADDR      byref 
               [000041] ----G--N----                    \--*  FIELD     struct <>t__builder
               [000042] ------------                       \--*  ADDR      byref 
               [000043] -------N----                          \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24>(AX)(P) V00 loc0         
                                                              \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                              \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                              \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
Replacing the field in promoted struct with local var V06
LocalAddressVisitor modified statement:
STMT00009 (IL 0x022...  ???)
               [000046] -A--G-------              *  ASG       ref   
               [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         
               [000044] ----G-------              \--*  FIELD     ref    m_task
               [000040] ----G-------                 \--*  ADDR      byref 
               [000041] ------------                    \--*  LCL_VAR   ref   (AX) V06 tmp5         

LocalAddressVisitor visiting statement:
STMT00011 (IL 0x022...  ???)
               [000053] -A----------              *  ASG       ref   
               [000052] D------N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000047] ------------              \--*  LCL_VAR   ref    V03 tmp2         

LocalAddressVisitor visiting statement:
STMT00010 (IL 0x022...  ???)
               [000051] ------------              *  JTRUE     void  
               [000050] ------------              \--*  NE        int   
               [000048] ------------                 +--*  LCL_VAR   ref    V03 tmp2         
               [000049] ------------                 \--*  CNS_INT   ref    null

LocalAddressVisitor visiting statement:
STMT00012 (IL 0x022...  ???)
               [000063] -AC-G-------              *  ASG       ref   
               [000062] D------N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000061] --C-G-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise
               [000057] ----G------- this in rcx     \--*  ADDR      byref 
               [000058] ----G--N----                    \--*  FIELD     struct <>t__builder
               [000059] ------------                       \--*  ADDR      byref 
               [000060] -------N----                          \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24>(AX)(P) V00 loc0         
                                                              \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                              \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                              \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
Replacing the field in promoted struct with local var V06

Local V06 should not be enregistered because: it is address exposed
LocalAddressVisitor modified statement:
STMT00012 (IL 0x022...  ???)
               [000063] -AC-G-------              *  ASG       ref   
               [000062] D------N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000061] --C-G-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise
               [000057] ----G------- this in rcx     \--*  ADDR      byref 
               [000058] ------------                    \--*  LCL_VAR   ref   (AX) V06 tmp5         

LocalAddressVisitor visiting statement:
STMT00005 (IL   ???...  ???)
               [000026] --C---------              *  RETURN    ref   
               [000056] ------------              \--*  LCL_VAR   ref    V04 tmp3         


*************** Finishing PHASE Morph - Structs/AddrExp

*************** Starting PHASE Morph - ByRefs

*************** In fgRetypeImplicitByRefArgs()

*************** Finishing PHASE Morph - ByRefs

*************** Starting PHASE Morph - Global

*************** In fgMorphBlocks()

Morphing BB01 of 'HotkeyedMusicPlayer.MusicPlayer:PlayCurrentMedia():System.Threading.Tasks.Task'

fgMorphTree BB01, STMT00006 (before)
               [000029] --CXG-------              *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000027] ------------ arg0         +--*  CNS_INT   long   0x7ffc7e4a17a0
               [000028] ------------ arg1         \--*  CNS_INT   int    13
Initializing arg info for 29.CALL:
ArgTable for 29.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 27.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 28.CNS_INT int (By ref), 1 reg: rdx, byteAlignment=8]

Morphing args for 29.CALL:
argSlots=2, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000027] -----+------              *  CNS_INT   long   0x7ffc7e4a17a0
Replaced with placeholder node:
               [000066] ----------L-              *  ARGPLACE  long  
Deferred argument ('rdx'):
               [000028] -----+------              *  CNS_INT   int    13
Replaced with placeholder node:
               [000067] ----------L-              *  ARGPLACE  int   

Shuffled argument table:    rcx rdx 
ArgTable for 29.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 27.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 28.CNS_INT int (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]


fgMorphTree BB01, STMT00006 (after)
               [000029] --CXG+------              *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000027] -----+------ arg0 in rcx  +--*  CNS_INT   long   0x7ffc7e4a17a0
               [000028] -----+------ arg1 in rdx  \--*  CNS_INT   int    13

Morphing BB02 of 'HotkeyedMusicPlayer.MusicPlayer:PlayCurrentMedia():System.Threading.Tasks.Task'

fgMorphTree BB02, STMT00007 (before)
               [000033] IA----------              *  ASG       struct (init)
               [000030] D------N----              +--*  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>(P) V02 tmp1         
                                                  +--*    ref    V02.m_task (offs=0x00) -> V08 tmp7         
               [000032] ------------              \--*  CNS_INT   int    0
fgMorphBlkNode for dst tree, before:
               [000030] D----+-N----              *  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>(P) V02 tmp1         
                                                  *    ref    V02.m_task (offs=0x00) -> V08 tmp7         
fgMorphBlkNode after:
               [000030] D----+-N----              *  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>(P) V02 tmp1         
                                                  *    ref    V02.m_task (offs=0x00) -> V08 tmp7         

fgMorphInitBlock: using field by field initialization.
GenTreeNode creates assertion:
               [000070] -A----------              *  ASG       ref   
In BB02 New Local Constant Assertion: V08 == null index=#01, mask=0000000000000001
fgMorphInitBlock (after):
               [000070] -A---+------              *  ASG       ref   
               [000068] D------N----              +--*  LCL_VAR   ref    V08 tmp7         
               [000069] ------------              \--*  CNS_INT   ref    null

The assignment [000070] using V08 removes: Constant Assertion: V08 == null
GenTreeNode creates assertion:
               [000070] -A---+------              *  ASG       ref   
In BB02 New Local Constant Assertion: V08 == null index=#01, mask=0000000000000001

fgMorphTree BB02, STMT00007 (after)
               [000070] -A---+------              *  ASG       ref   
               [000068] D------N----              +--*  LCL_VAR   ref    V08 tmp7         
               [000069] ------------              \--*  CNS_INT   ref    null

fgMorphTree BB02, STMT00001 (before)
               [000007] -AC---------              *  ASG       struct (copy)
               [000006] *-----------              +--*  OBJ       struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>
               [000005] ------------              |  \--*  ADDR      byref 
               [000004] ------------              |     \--*  LCL_VAR   ref   (AX) V06 tmp5         
               [000034] ------------              \--*  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>(P) V02 tmp1         
                                                  \--*    ref    V02.m_task (offs=0x00) -> V08 tmp7         
fgMorphCopyBlock:
fgMorphBlkNode for dst tree, before:
               [000006] *---G+------              *  OBJ       struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>
               [000005] -----+------              \--*  ADDR      byref 
               [000004] D---G+-N----                 \--*  LCL_VAR   ref   (AX) V06 tmp5         
fgMorphBlkNode after:
               [000006] *---G+------              *  OBJ       struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>
               [000005] -----+------              \--*  ADDR      byref 
               [000004] D---G+-N----                 \--*  LCL_VAR   ref   (AX) V06 tmp5         
fgMorphBlkNode for src tree, before:
               [000034] -----+------              *  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>(P) V02 tmp1         
                                                  *    ref    V02.m_task (offs=0x00) -> V08 tmp7         
fgMorphBlkNode after:
               [000034] -----+------              *  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>(P) V02 tmp1         
                                                  *    ref    V02.m_task (offs=0x00) -> V08 tmp7         
block assignment to morph:
               [000007] -A--G-------              *  ASG       struct (copy)
               [000006] *---G+------              +--*  OBJ       struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>
               [000005] -----+------              |  \--*  ADDR      byref 
               [000004] D---G+-N----              |     \--*  LCL_VAR   ref   (AX) V06 tmp5         
               [000034] -----+------              \--*  LCL_VAR   struct<System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8>(P) V02 tmp1         
                                                  \--*    ref    V02.m_task (offs=0x00) -> V08 tmp7         
 (srcDoFldAsg=true) using field by field assignments.

fgMorphCopyBlock (after):
               [000073] -A---+------              *  ASG       ref   
               [000071] D------N----              +--*  LCL_VAR   ref   (AX) V06 tmp5         
               [000072] ------------              \--*  LCL_VAR   ref    V08 tmp7         

fgMorphTree BB02, STMT00001 (after)
               [000073] -A---+------              *  ASG       ref   
               [000071] D------N----              +--*  LCL_VAR   ref   (AX) V06 tmp5         
               [000072] ------------              \--*  LCL_VAR   ref    V08 tmp7         

fgMorphTree BB02, STMT00002 (before)
               [000012] -A----------              *  ASG       int   
               [000011] D------N----              +--*  LCL_VAR   int   (AX) V05 tmp4         
               [000010] ------------              \--*  CNS_INT   int    -1

fgMorphTree BB02, STMT00008 (before)
               [000038] --C-G-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
               [000036] ------------ arg0         \--*  ADDR      byref 
               [000037] -------N----                 \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24>(AX)(P) V00 loc0         
                                                     \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                     \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                     \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
Initializing arg info for 38.CALL:
ArgTable for 38.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 36.ADDR long (By ref), 1 reg: rcx, byteAlignment=8]

Morphing args for 38.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000036] -----+------              *  ADDR      long  
               [000037] ----G+-N----              \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24>(AX)(P) V00 loc0         
                                                  \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                  \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                  \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
Replaced with placeholder node:
               [000074] ----------L-              *  ARGPLACE  long  

Shuffled argument table:    rcx 
ArgTable for 38.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 36.ADDR long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]


fgMorphTree BB02, STMT00008 (after)
               [000038] --CXG+------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
               [000036] -----+------ arg0 in rcx  \--*  ADDR      long  
               [000037] ----G+-N----                 \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24>(AX)(P) V00 loc0         
                                                     \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                     \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                     \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         

fgMorphTree BB02, STMT00009 (before)
               [000046] -A--G-------              *  ASG       ref   
               [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         
               [000044] ----G-------              \--*  FIELD     ref    m_task
               [000040] ----G-------                 \--*  ADDR      byref 
               [000041] ------------                    \--*  LCL_VAR   ref   (AX) V06 tmp5         

Before calling fgAddFieldSeqForZeroOffset:
               [000044] *---G-------              *  IND       ref   
               [000040] ----G-------              \--*  ADDR      byref 
               [000041] ------------                 \--*  LCL_VAR   ref   (AX) V06 tmp5         

fgAddFieldSeqForZeroOffset for Fseq[m_task]
addr (Before)
               [000040] ----G-------                ADDR      byref 
     (After)
               [000040] ----G-------                ADDR      byref  Zero Fseq[m_task]

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000041] ----G+------              *  LCL_VAR   ref   (AX) V06 tmp5         

fgMorphTree BB02, STMT00009 (after)
               [000046] -A--G+------              *  ASG       ref   
               [000045] D----+-N----              +--*  LCL_VAR   ref    V03 tmp2         
               [000041] ----G+------              \--*  LCL_VAR   ref   (AX) V06 tmp5         

fgMorphTree BB02, STMT00011 (before)
               [000053] -A----------              *  ASG       ref   
               [000052] D------N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000047] ------------              \--*  LCL_VAR   ref    V03 tmp2         
GenTreeNode creates assertion:
               [000053] -A----------              *  ASG       ref   
In BB02 New Local Copy     Assertion: V04 == V03 index=#02, mask=0000000000000002

fgMorphTree BB02, STMT00010 (before)
               [000051] ------------              *  JTRUE     void  
               [000050] ------------              \--*  NE        int   
               [000048] ------------                 +--*  LCL_VAR   ref    V03 tmp2         
               [000049] ------------                 \--*  CNS_INT   ref    null

Morphing BB04 of 'HotkeyedMusicPlayer.MusicPlayer:PlayCurrentMedia():System.Threading.Tasks.Task'

fgMorphTree BB04, STMT00012 (before)
               [000063] -AC-G-------              *  ASG       ref   
               [000062] D------N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000061] --C-G-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise
               [000057] ----G------- this in rcx     \--*  ADDR      byref 
               [000058] ------------                    \--*  LCL_VAR   ref   (AX) V06 tmp5         

Rejecting tail call in morph for call [000061]: Local address taken V00
Initializing arg info for 61.CALL:
ArgTable for 61.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 57.ADDR byref (By ref), 1 reg: rcx, byteAlignment=8]

Morphing args for 61.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000057] -----+------              *  ADDR      byref 
               [000058] ----G+-N----              \--*  LCL_VAR   ref   (AX) V06 tmp5         
Replaced with placeholder node:
               [000075] ----------L-              *  ARGPLACE  byref 

Shuffled argument table:    rcx 
ArgTable for 61.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 57.ADDR byref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]


fgMorphTree BB04, STMT00012 (after)
               [000063] -ACXG+------              *  ASG       ref   
               [000062] D----+-N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000061] --CXG+------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise
               [000057] -----+------ this in rcx     \--*  ADDR      byref 
               [000058] ----G+-N----                    \--*  LCL_VAR   ref   (AX) V06 tmp5         

Morphing BB05 of 'HotkeyedMusicPlayer.MusicPlayer:PlayCurrentMedia():System.Threading.Tasks.Task'

fgMorphTree BB05, STMT00005 (before)
               [000026] --C---------              *  RETURN    ref   
               [000056] ------------              \--*  LCL_VAR   ref    V04 tmp3         

*************** Finishing PHASE Morph - Global
Trees after Morph - Global

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0001]  1                             1       [???..???)                                     i internal label target hascall 
BB02 [0000]  1       BB01                  1       [000..02F)-> BB05 ( cond )                     i hascall gcsafe 
BB04 [0005]  1       BB02                  0.50    [022..023)                                     i hascall gcsafe 
BB05 [0006]  2       BB02,BB04             1       [022..023)        (return)                     i label target 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [???..???), preds={} succs={BB02}

***** BB01
STMT00006 (IL   ???...  ???)
               [000029] --CXG+------              *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000027] -----+------ arg0 in rcx  +--*  CNS_INT   long   0x7ffc7e4a17a0
               [000028] -----+------ arg1 in rdx  \--*  CNS_INT   int    13

------------ BB02 [000..02F) -> BB05 (cond), preds={BB01} succs={BB04,BB05}

***** BB02
STMT00007 (IL 0x000...  ???)
               [000070] -A---+------              *  ASG       ref   
               [000068] D------N----              +--*  LCL_VAR   ref    V08 tmp7         
               [000069] ------------              \--*  CNS_INT   ref    null

***** BB02
STMT00001 (IL   ???...  ???)
               [000073] -A---+------              *  ASG       ref   
               [000071] D------N----              +--*  LCL_VAR   ref   (AX) V06 tmp5         
               [000072] ------------              \--*  LCL_VAR   ref    V08 tmp7         

***** BB02
STMT00002 (IL 0x00C...0x00F)
               [000012] -A--G+------              *  ASG       int   
               [000011] D---G+-N----              +--*  LCL_VAR   int   (AX) V05 tmp4         
               [000010] -----+------              \--*  CNS_INT   int    -1

***** BB02
STMT00008 (IL 0x014...  ???)
               [000038] --CXG+------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
               [000036] -----+------ arg0 in rcx  \--*  ADDR      long  
               [000037] ----G+-N----                 \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24>(AX)(P) V00 loc0         
                                                     \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                     \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                     \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         

***** BB02
STMT00009 (IL 0x022...  ???)
               [000046] -A--G+------              *  ASG       ref   
               [000045] D----+-N----              +--*  LCL_VAR   ref    V03 tmp2         
               [000041] ----G+------              \--*  LCL_VAR   ref   (AX) V06 tmp5         

***** BB02
STMT00011 (IL 0x022...  ???)
               [000053] -A---+------              *  ASG       ref   
               [000052] D----+-N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000047] -----+------              \--*  LCL_VAR   ref    V03 tmp2         

***** BB02
STMT00010 (IL 0x022...  ???)
               [000051] -----+------              *  JTRUE     void  
               [000050] J----+-N----              \--*  NE        int   
               [000048] -----+------                 +--*  LCL_VAR   ref    V03 tmp2         
               [000049] -----+------                 \--*  CNS_INT   ref    null

------------ BB04 [022..023), preds={BB02} succs={BB05}

***** BB04
STMT00012 (IL 0x022...  ???)
               [000063] -ACXG+------              *  ASG       ref   
               [000062] D----+-N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000061] --CXG+------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise
               [000057] -----+------ this in rcx     \--*  ADDR      byref 
               [000058] ----G+-N----                    \--*  LCL_VAR   ref   (AX) V06 tmp5         

------------ BB05 [022..023) (return), preds={BB02,BB04} succs={}

***** BB05
STMT00005 (IL   ???...  ???)
               [000026] -----+------              *  RETURN    ref   
               [000056] -----+------              \--*  LCL_VAR   ref    V04 tmp3         

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist

*************** Starting PHASE GS Cookie
No GS security needed

*************** Finishing PHASE GS Cookie

*************** Starting PHASE Compute edge weights (1, false)
*************** In fgComputeBlockAndEdgeWeights()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0001]  1                             1       [???..???)                                     i internal label target hascall 
BB02 [0000]  1       BB01                  1       [000..02F)-> BB05 ( cond )                     i hascall gcsafe 
BB04 [0005]  1       BB02                  0.50    [022..023)                                     i hascall gcsafe 
BB05 [0006]  2       BB02,BB04             1       [022..023)        (return)                     i label target 
-----------------------------------------------------------------------------------------------------------------------------------------

 -- no profile data, so using default called count
 -- not optimizing or no profile data, so not computing edge weights

*************** Finishing PHASE Compute edge weights (1, false)

*************** Starting PHASE Create EH funclets
*************** In fgCreateFunclets()

After fgCreateFunclets()
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0001]  1                             1       [???..???)                                     i internal label target hascall 
BB02 [0000]  1       BB01                  1       [000..02F)-> BB05 ( cond )                     i hascall gcsafe 
BB04 [0005]  1       BB02                  0.50    [022..023)                                     i hascall gcsafe 
BB05 [0006]  2       BB02,BB04             1       [022..023)        (return)                     i label target 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Create EH funclets

*************** Starting PHASE Optimize layout
*************** In optOptimizeLayout()

***************  Exception Handling table is empty
*************** In fgDebugCheckBBlist

*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0001]  1                             1       [???..???)                                     i internal label target hascall 
BB02 [0000]  1       BB01                  1       [000..02F)-> BB05 ( cond )                     i hascall gcsafe 
BB04 [0005]  1       BB02                  0.50    [022..023)                                     i hascall gcsafe 
BB05 [0006]  2       BB02,BB04             1       [022..023)        (return)                     i label target 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist

*************** In fgExpandRarelyRunBlocks()
*************** In fgReorderBlocks()

Initial BasicBlocks
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0001]  1                             1       [???..???)                                     i internal label target hascall 
BB02 [0000]  1       BB01                  1       [000..02F)-> BB05 ( cond )                     i hascall gcsafe 
BB04 [0005]  1       BB02                  0.50    [022..023)                                     i hascall gcsafe 
BB05 [0006]  2       BB02,BB04             1       [022..023)        (return)                     i label target 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0001]  1                             1       [???..???)                                     i internal label target hascall 
BB02 [0000]  1       BB01                  1       [000..02F)-> BB05 ( cond )                     i hascall gcsafe 
BB04 [0005]  1       BB02                  0.50    [022..023)                                     i hascall gcsafe 
BB05 [0006]  2       BB02,BB04             1       [022..023)        (return)                     i label target 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist

*************** Finishing PHASE Optimize layout

*************** Starting PHASE Compute blocks reachability
*************** In fgComputeReachability
*************** In fgDebugCheckBBlist

Renumbering the basic blocks for fgComputeReachability pass #1

*************** Before renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0001]  1                             1       [???..???)                                     i internal label target hascall 
BB02 [0000]  1       BB01                  1       [000..02F)-> BB05 ( cond )                     i hascall gcsafe 
BB04 [0005]  1       BB02                  0.50    [022..023)                                     i hascall gcsafe 
BB05 [0006]  2       BB02,BB04             1       [022..023)        (return)                     i label target 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
Renumber BB04 to BB03
Renumber BB05 to BB04

*************** After renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0001]  1                             1       [???..???)                                     i internal label target hascall 
BB02 [0000]  1       BB01                  1       [000..02F)-> BB04 ( cond )                     i hascall gcsafe 
BB03 [0005]  1       BB02                  0.50    [022..023)                                     i hascall gcsafe 
BB04 [0006]  2       BB02,BB03             1       [022..023)        (return)                     i label target 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty

New BlockSet epoch 3, # of blocks (including unused BB00): 5, bitset array size: 1 (short)
Enter blocks: BB01 

After computing reachability sets:
------------------------------------------------
BBnum  Reachable by 
------------------------------------------------
BB01 : BB01 
BB02 : BB01 BB02 
BB03 : BB01 BB02 BB03 
BB04 : BB01 BB02 BB03 BB04 

After computing reachability:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0001]  1                             1       [???..???)                                     i internal label target hascall 
BB02 [0000]  1       BB01                  1       [000..02F)-> BB04 ( cond )                     i hascall gcsafe 
BB03 [0005]  1       BB02                  0.50    [022..023)                                     i hascall gcsafe 
BB04 [0006]  2       BB02,BB03             1       [022..023)        (return)                     i label target gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist
*************** In fgComputeDoms
*************** In fgDebugCheckBBlist

Dominator computation start blocks (those blocks with no incoming edges):
BB01 
------------------------------------------------
BBnum  Dominated by
------------------------------------------------
BB01:  BB01 
BB02:  BB02 BB01 
BB03:  BB03 BB02 BB01 
BB04:  BB04 BB02 BB01 

Inside fgBuildDomTree

After computing the Dominance Tree:
BB01 : BB02 
BB02 : BB04 BB03 


After numbering the dominator tree:
BB01: pre=01, post=04
BB02: pre=02, post=03
BB03: pre=04, post=02
BB04: pre=03, post=01

*************** Finishing PHASE Compute blocks reachability

*************** Starting PHASE Optimize loops
*************** In optOptimizeLoops()

After optSetBlockWeights:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0001]  1                             1       [???..???)                                     i internal label target hascall 
BB02 [0000]  1       BB01                  1       [000..02F)-> BB04 ( cond )                     i hascall gcsafe 
BB03 [0005]  1       BB02                  0.25    [022..023)                                     i hascall gcsafe 
BB04 [0006]  2       BB02,BB03             1       [022..023)        (return)                     i label target gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist

*************** Finishing PHASE Optimize loops

*************** Starting PHASE Clone loops

*************** In optCloneLoops()

*************** Finishing PHASE Clone loops

*************** Starting PHASE Unroll loops

*************** Finishing PHASE Unroll loops

*************** Starting PHASE Mark local vars

*************** In lvaMarkLocalVars()
*** lvaComputeRefCounts ***

*** lvaComputeRefCounts -- explicit counts ***

*** marking local variables in block BB01 (weight=1   )
STMT00006 (IL   ???...  ???)
               [000029] --CXG+------              *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000027] -----+------ arg0 in rcx  +--*  CNS_INT   long   0x7ffc7e4a17a0
               [000028] -----+------ arg1 in rdx  \--*  CNS_INT   int    13

*** marking local variables in block BB02 (weight=1   )
STMT00007 (IL 0x000...  ???)
               [000070] -A---+------              *  ASG       ref   
               [000068] D------N----              +--*  LCL_VAR   ref    V08 tmp7         
               [000069] ------------              \--*  CNS_INT   ref    null
New refCnts for V08: refCnt =  1, refCntWtd = 1   
STMT00001 (IL   ???...  ???)
               [000073] -A---+------              *  ASG       ref   
               [000071] D------N----              +--*  LCL_VAR   ref   (AX) V06 tmp5         
               [000072] ------------              \--*  LCL_VAR   ref    V08 tmp7         
New refCnts for V00: refCnt =  1, refCntWtd = 1   
New refCnts for V06: refCnt =  1, refCntWtd = 1   
New refCnts for V08: refCnt =  2, refCntWtd = 2   
STMT00002 (IL 0x00C...0x00F)
               [000012] -A--G+------              *  ASG       int   
               [000011] D---G+-N----              +--*  LCL_VAR   int   (AX) V05 tmp4         
               [000010] -----+------              \--*  CNS_INT   int    -1
New refCnts for V00: refCnt =  2, refCntWtd = 2   
New refCnts for V05: refCnt =  1, refCntWtd = 1   
STMT00008 (IL 0x014...  ???)
               [000038] --CXG+------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
               [000036] -----+------ arg0 in rcx  \--*  ADDR      long  
               [000037] ----G+-N----                 \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24>(AX)(P) V00 loc0         
                                                     \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                     \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                     \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
New refCnts for V05: refCnt =  2, refCntWtd = 2   
New refCnts for V06: refCnt =  2, refCntWtd = 2   
New refCnts for V07: refCnt =  1, refCntWtd = 1   
New refCnts for V00: refCnt =  3, refCntWtd = 3   
STMT00009 (IL 0x022...  ???)
               [000046] -A--G+------              *  ASG       ref   
               [000045] D----+-N----              +--*  LCL_VAR   ref    V03 tmp2         
               [000041] ----G+------              \--*  LCL_VAR   ref   (AX) V06 tmp5         
New refCnts for V03: refCnt =  1, refCntWtd = 2   
New refCnts for V00: refCnt =  4, refCntWtd = 4   
New refCnts for V06: refCnt =  3, refCntWtd = 3   
STMT00011 (IL 0x022...  ???)
               [000053] -A---+------              *  ASG       ref   
               [000052] D----+-N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000047] -----+------              \--*  LCL_VAR   ref    V03 tmp2         
New refCnts for V04: refCnt =  1, refCntWtd = 1   
New refCnts for V03: refCnt =  2, refCntWtd = 4   
STMT00010 (IL 0x022...  ???)
               [000051] -----+------              *  JTRUE     void  
               [000050] J----+-N----              \--*  NE        int   
               [000048] -----+------                 +--*  LCL_VAR   ref    V03 tmp2         
               [000049] -----+------                 \--*  CNS_INT   ref    null
New refCnts for V03: refCnt =  3, refCntWtd = 6   

*** marking local variables in block BB03 (weight=0.25)
STMT00012 (IL 0x022...  ???)
               [000063] -ACXG+------              *  ASG       ref   
               [000062] D----+-N----              +--*  LCL_VAR   ref    V04 tmp3         
               [000061] --CXG+------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise
               [000057] -----+------ this in rcx     \--*  ADDR      byref 
               [000058] ----G+-N----                    \--*  LCL_VAR   ref   (AX) V06 tmp5         
New refCnts for V04: refCnt =  2, refCntWtd = 1.25
New refCnts for V00: refCnt =  5, refCntWtd = 4.25
New refCnts for V06: refCnt =  4, refCntWtd = 3.25

*** marking local variables in block BB04 (weight=1   )
STMT00005 (IL   ???...  ???)
               [000026] -----+------              *  RETURN    ref   
               [000056] -----+------              \--*  LCL_VAR   ref    V04 tmp3         
New refCnts for V04: refCnt =  3, refCntWtd = 2.25

*** lvaComputeRefCounts -- implicit counts ***

*************** In optAddCopies()


*************** Finishing PHASE Mark local vars

*************** Starting PHASE Optimize bools
*************** In optOptimizeBools()
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Optimize bools

*************** Starting PHASE Find oper order
*************** In fgFindOperOrder()

*************** Finishing PHASE Find oper order

*************** Starting PHASE Set block order
*************** In fgSetBlockOrder()
The biggest BB has    6 tree nodes

*************** Finishing PHASE Set block order
Trees before Build SSA representation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0001]  1                             1       [???..???)                                     i internal label target hascall 
BB02 [0000]  1       BB01                  1       [000..02F)-> BB04 ( cond )                     i hascall gcsafe 
BB03 [0005]  1       BB02                  0.25    [022..023)                                     i hascall gcsafe 
BB04 [0006]  2       BB02,BB03             1       [022..023)        (return)                     i label target gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [???..???), preds={} succs={BB02}

***** BB01
STMT00006 (IL   ???...  ???)
N005 ( 17, 18) [000029] --CXG-------              *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000027] ------------ arg0 in rcx  +--*  CNS_INT   long   0x7ffc7e4a17a0
N004 (  1,  1) [000028] ------------ arg1 in rdx  \--*  CNS_INT   int    13

------------ BB02 [000..02F) -> BB04 (cond), preds={BB01} succs={BB03,BB04}

***** BB02
STMT00007 (IL 0x000...  ???)
N003 (  5,  4) [000070] -A------R---              *  ASG       ref   
N002 (  3,  2) [000068] D------N----              +--*  LCL_VAR   ref    V08 tmp7         
N001 (  1,  1) [000069] ------------              \--*  CNS_INT   ref    null

***** BB02
STMT00001 (IL   ???...  ???)
N003 (  7,  5) [000073] -A------R---              *  ASG       ref   
N002 (  3,  2) [000071] D------N----              +--*  LCL_VAR   ref   (AX) V06 tmp5         
N001 (  3,  2) [000072] ------------              \--*  LCL_VAR   ref    V08 tmp7         

***** BB02
STMT00002 (IL 0x00C...0x00F)
N003 (  5,  4) [000012] -A--G---R---              *  ASG       int   
N002 (  3,  2) [000011] D---G--N----              +--*  LCL_VAR   int   (AX) V05 tmp4         
N001 (  1,  1) [000010] ------------              \--*  CNS_INT   int    -1

***** BB02
STMT00008 (IL 0x014...  ???)
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
N003 (  3,  3) [000036] ------------ arg0 in rcx  \--*  ADDR      long  
N002 (  3,  2) [000037] ----G--N----                 \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24>(AX)(P) V00 loc0         
                                                     \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                     \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                     \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         

***** BB02
STMT00009 (IL 0x022...  ???)
N003 (  3,  3) [000046] -A--G---R---              *  ASG       ref   
N002 (  1,  1) [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         
N001 (  3,  2) [000041] ----G-------              \--*  LCL_VAR   ref   (AX) V06 tmp5         

***** BB02
STMT00011 (IL 0x022...  ???)
N003 (  5,  4) [000053] -A------R---              *  ASG       ref   
N002 (  3,  2) [000052] D------N----              +--*  LCL_VAR   ref    V04 tmp3         
N001 (  1,  1) [000047] ------------              \--*  LCL_VAR   ref    V03 tmp2         

***** BB02
STMT00010 (IL 0x022...  ???)
N004 (  5,  5) [000051] ------------              *  JTRUE     void  
N003 (  3,  3) [000050] J------N----              \--*  NE        int   
N001 (  1,  1) [000048] ------------                 +--*  LCL_VAR   ref    V03 tmp2         
N002 (  1,  1) [000049] ------------                 \--*  CNS_INT   ref    null

------------ BB03 [022..023), preds={BB02} succs={BB04}

***** BB03
STMT00012 (IL 0x022...  ???)
N006 ( 21, 13) [000063] -ACXG---R---              *  ASG       ref   
N005 (  3,  2) [000062] D------N----              +--*  LCL_VAR   ref    V04 tmp3         
N004 ( 17, 10) [000061] --CXG-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise
N003 (  3,  3) [000057] ------------ this in rcx     \--*  ADDR      byref 
N002 (  3,  2) [000058] ----G--N----                    \--*  LCL_VAR   ref   (AX) V06 tmp5         

------------ BB04 [022..023) (return), preds={BB02,BB03} succs={}

***** BB04
STMT00005 (IL   ???...  ???)
N002 (  4,  3) [000026] ------------              *  RETURN    ref   
N001 (  3,  2) [000056] ------------              \--*  LCL_VAR   ref    V04 tmp3         

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Build SSA representation
*************** In SsaBuilder::Build()
[SsaBuilder] Max block count is 5.

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0001]  1                             1       [???..???)                                     i internal label target hascall 
BB02 [0000]  1       BB01                  1       [000..02F)-> BB04 ( cond )                     i hascall gcsafe 
BB03 [0005]  1       BB02                  0.25    [022..023)                                     i hascall gcsafe 
BB04 [0006]  2       BB02,BB03             1       [022..023)        (return)                     i label target gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
[SsaBuilder] Topologically sorted the graph.
[SsaBuilder::ComputeImmediateDom]

Inside fgBuildDomTree

After computing the Dominance Tree:
BB01 : BB02 
BB02 : BB04 BB03 

*************** In fgLocalVarLiveness()
In fgLocalVarLivenessInit
Tracked variable (3 out of 9) table:
V03 tmp2          [   ref]: refCnt =    3, refCntWtd =   6   
V04 tmp3          [   ref]: refCnt =    3, refCntWtd =   2.25
V08 tmp7          [   ref]: refCnt =    2, refCntWtd =   2   

*************** In fgPerBlockLocalVarLiveness()
BB01 USE(0)={} + ByrefExposed + GcHeap
     DEF(0)={} + ByrefExposed* + GcHeap*

BB02 USE(0)={           } + ByrefExposed + GcHeap
     DEF(3)={V03 V04 V08} + ByrefExposed* + GcHeap*

BB03 USE(0)={   } + ByrefExposed + GcHeap
     DEF(1)={V04} + ByrefExposed* + GcHeap*

BB04 USE(1)={V04}
     DEF(0)={   }

** Memory liveness computed, GcHeap states and ByrefExposed states diverge
*************** In fgInterBlockLocalVarLiveness()

BB liveness after fgLiveVarAnalysis():

BB01 IN (0)={} + ByrefExposed + GcHeap
     OUT(0)={} + ByrefExposed + GcHeap

BB02 IN (0)={   } + ByrefExposed + GcHeap
     OUT(1)={V04} + ByrefExposed + GcHeap

BB03 IN (0)={   } + ByrefExposed + GcHeap
     OUT(1)={V04}

BB04 IN (1)={V04}
     OUT(0)={   }

*************** In optRemoveRedundantZeroInits()
*************** In SsaBuilder::InsertPhiFunctions()
Inserting phi functions:
Added PHI definition for V04 at start of BB04.
*************** In SsaBuilder::RenameVariables()

After fgSsaBuild:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0001]  1                             1       [???..???)                                     i internal label target hascall 
BB02 [0000]  1       BB01                  1       [000..02F)-> BB04 ( cond )                     i hascall gcsafe 
BB03 [0005]  1       BB02                  0.25    [022..023)                                     i hascall gcsafe 
BB04 [0006]  2       BB02,BB03             1       [022..023)        (return)                     i label target gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [???..???), preds={} succs={BB02}

***** BB01
STMT00006 (IL   ???...  ???)
N005 ( 17, 18) [000029] --CXG-------              *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000027] ------------ arg0 in rcx  +--*  CNS_INT   long   0x7ffc7e4a17a0
N004 (  1,  1) [000028] ------------ arg1 in rdx  \--*  CNS_INT   int    13

------------ BB02 [000..02F) -> BB04 (cond), preds={BB01} succs={BB03,BB04}

***** BB02
STMT00007 (IL 0x000...  ???)
N003 (  5,  4) [000070] -A------R---              *  ASG       ref   
N002 (  3,  2) [000068] D------N----              +--*  LCL_VAR   ref    V08 tmp7         d:2
N001 (  1,  1) [000069] ------------              \--*  CNS_INT   ref    null

***** BB02
STMT00001 (IL   ???...  ???)
N003 (  7,  5) [000073] -A------R---              *  ASG       ref   
N002 (  3,  2) [000071] D------N----              +--*  LCL_VAR   ref   (AX) V06 tmp5         
N001 (  3,  2) [000072] ------------              \--*  LCL_VAR   ref    V08 tmp7         u:2 (last use)

***** BB02
STMT00002 (IL 0x00C...0x00F)
N003 (  5,  4) [000012] -A--G---R---              *  ASG       int   
N002 (  3,  2) [000011] D---G--N----              +--*  LCL_VAR   int   (AX) V05 tmp4         
N001 (  1,  1) [000010] ------------              \--*  CNS_INT   int    -1

***** BB02
STMT00008 (IL 0x014...  ???)
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
N003 (  3,  3) [000036] ------------ arg0 in rcx  \--*  ADDR      long  
N002 (  3,  2) [000037] ----G--N----                 \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24>(AX)(P) V00 loc0         
                                                     \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                     \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                     \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         

***** BB02
STMT00009 (IL 0x022...  ???)
N003 (  3,  3) [000046] -A--G---R---              *  ASG       ref   
N002 (  1,  1) [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         d:2
N001 (  3,  2) [000041] ----G-------              \--*  LCL_VAR   ref   (AX) V06 tmp5         

***** BB02
STMT00011 (IL 0x022...  ???)
N003 (  5,  4) [000053] -A------R---              *  ASG       ref   
N002 (  3,  2) [000052] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:2
N001 (  1,  1) [000047] ------------              \--*  LCL_VAR   ref    V03 tmp2         u:2

***** BB02
STMT00010 (IL 0x022...  ???)
N004 (  5,  5) [000051] ------------              *  JTRUE     void  
N003 (  3,  3) [000050] J------N----              \--*  NE        int   
N001 (  1,  1) [000048] ------------                 +--*  LCL_VAR   ref    V03 tmp2         u:2 (last use)
N002 (  1,  1) [000049] ------------                 \--*  CNS_INT   ref    null

------------ BB03 [022..023), preds={BB02} succs={BB04}

***** BB03
STMT00012 (IL 0x022...  ???)
N006 ( 21, 13) [000063] -ACXG---R---              *  ASG       ref   
N005 (  3,  2) [000062] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:4
N004 ( 17, 10) [000061] --CXG-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise
N003 (  3,  3) [000057] ------------ this in rcx     \--*  ADDR      byref 
N002 (  3,  2) [000058] ----G--N----                    \--*  LCL_VAR   ref   (AX) V06 tmp5         

------------ BB04 [022..023) (return), preds={BB02,BB03} succs={}

***** BB04
STMT00013 (IL   ???...  ???)
N005 (  0,  0) [000078] -A------R---              *  ASG       ref   
N004 (  0,  0) [000076] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:3
N003 (  0,  0) [000077] ------------              \--*  PHI       ref   
N001 (  0,  0) [000080] ------------ pred BB03       +--*  PHI_ARG   ref    V04 tmp3         u:4
N002 (  0,  0) [000079] ------------ pred BB02       \--*  PHI_ARG   ref    V04 tmp3         u:2

***** BB04
STMT00005 (IL   ???...  ???)
N002 (  4,  3) [000026] ------------              *  RETURN    ref   
N001 (  3,  2) [000056] ------------              \--*  LCL_VAR   ref    V04 tmp3         u:3 (last use)

-------------------------------------------------------------------------------------------------------------------

*************** Finishing PHASE Build SSA representation
Trees after Build SSA representation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0001]  1                             1       [???..???)                                     i internal label target hascall 
BB02 [0000]  1       BB01                  1       [000..02F)-> BB04 ( cond )                     i hascall gcsafe 
BB03 [0005]  1       BB02                  0.25    [022..023)                                     i hascall gcsafe 
BB04 [0006]  2       BB02,BB03             1       [022..023)        (return)                     i label target gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [???..???), preds={} succs={BB02}

***** BB01
STMT00006 (IL   ???...  ???)
N005 ( 17, 18) [000029] --CXG-------              *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000027] ------------ arg0 in rcx  +--*  CNS_INT   long   0x7ffc7e4a17a0
N004 (  1,  1) [000028] ------------ arg1 in rdx  \--*  CNS_INT   int    13

------------ BB02 [000..02F) -> BB04 (cond), preds={BB01} succs={BB03,BB04}

***** BB02
STMT00007 (IL 0x000...  ???)
N003 (  5,  4) [000070] -A------R---              *  ASG       ref   
N002 (  3,  2) [000068] D------N----              +--*  LCL_VAR   ref    V08 tmp7         d:2
N001 (  1,  1) [000069] ------------              \--*  CNS_INT   ref    null

***** BB02
STMT00001 (IL   ???...  ???)
N003 (  7,  5) [000073] -A------R---              *  ASG       ref   
N002 (  3,  2) [000071] D------N----              +--*  LCL_VAR   ref   (AX) V06 tmp5         
N001 (  3,  2) [000072] ------------              \--*  LCL_VAR   ref    V08 tmp7         u:2 (last use)

***** BB02
STMT00002 (IL 0x00C...0x00F)
N003 (  5,  4) [000012] -A--G---R---              *  ASG       int   
N002 (  3,  2) [000011] D---G--N----              +--*  LCL_VAR   int   (AX) V05 tmp4         
N001 (  1,  1) [000010] ------------              \--*  CNS_INT   int    -1

***** BB02
STMT00008 (IL 0x014...  ???)
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
N003 (  3,  3) [000036] ------------ arg0 in rcx  \--*  ADDR      long  
N002 (  3,  2) [000037] ----G--N----                 \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24>(AX)(P) V00 loc0         
                                                     \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                     \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                     \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         

***** BB02
STMT00009 (IL 0x022...  ???)
N003 (  3,  3) [000046] -A--G---R---              *  ASG       ref   
N002 (  1,  1) [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         d:2
N001 (  3,  2) [000041] ----G-------              \--*  LCL_VAR   ref   (AX) V06 tmp5         

***** BB02
STMT00011 (IL 0x022...  ???)
N003 (  5,  4) [000053] -A------R---              *  ASG       ref   
N002 (  3,  2) [000052] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:2
N001 (  1,  1) [000047] ------------              \--*  LCL_VAR   ref    V03 tmp2         u:2

***** BB02
STMT00010 (IL 0x022...  ???)
N004 (  5,  5) [000051] ------------              *  JTRUE     void  
N003 (  3,  3) [000050] J------N----              \--*  NE        int   
N001 (  1,  1) [000048] ------------                 +--*  LCL_VAR   ref    V03 tmp2         u:2 (last use)
N002 (  1,  1) [000049] ------------                 \--*  CNS_INT   ref    null

------------ BB03 [022..023), preds={BB02} succs={BB04}

***** BB03
STMT00012 (IL 0x022...  ???)
N006 ( 21, 13) [000063] -ACXG---R---              *  ASG       ref   
N005 (  3,  2) [000062] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:4
N004 ( 17, 10) [000061] --CXG-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise
N003 (  3,  3) [000057] ------------ this in rcx     \--*  ADDR      byref 
N002 (  3,  2) [000058] ----G--N----                    \--*  LCL_VAR   ref   (AX) V06 tmp5         

------------ BB04 [022..023) (return), preds={BB02,BB03} succs={}

***** BB04
STMT00013 (IL   ???...  ???)
N005 (  0,  0) [000078] -A------R---              *  ASG       ref   
N004 (  0,  0) [000076] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:3
N003 (  0,  0) [000077] ------------              \--*  PHI       ref   
N001 (  0,  0) [000080] ------------ pred BB03       +--*  PHI_ARG   ref    V04 tmp3         u:4
N002 (  0,  0) [000079] ------------ pred BB02       \--*  PHI_ARG   ref    V04 tmp3         u:2

***** BB04
STMT00005 (IL   ???...  ???)
N002 (  4,  3) [000026] ------------              *  RETURN    ref   
N001 (  3,  2) [000056] ------------              \--*  LCL_VAR   ref    V04 tmp3         u:3 (last use)

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist

*************** Starting PHASE Early Value Propagation
*************** In optEarlyProp()

After optEarlyProp:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0001]  1                             1       [???..???)                                     i internal label target hascall 
BB02 [0000]  1       BB01                  1       [000..02F)-> BB04 ( cond )                     i hascall gcsafe 
BB03 [0005]  1       BB02                  0.25    [022..023)                                     i hascall gcsafe 
BB04 [0006]  2       BB02,BB03             1       [022..023)        (return)                     i label target gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [???..???), preds={} succs={BB02}

***** BB01
STMT00006 (IL   ???...  ???)
N005 ( 17, 18) [000029] --CXG-------              *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000027] ------------ arg0 in rcx  +--*  CNS_INT   long   0x7ffc7e4a17a0
N004 (  1,  1) [000028] ------------ arg1 in rdx  \--*  CNS_INT   int    13

------------ BB02 [000..02F) -> BB04 (cond), preds={BB01} succs={BB03,BB04}

***** BB02
STMT00007 (IL 0x000...  ???)
N003 (  5,  4) [000070] -A------R---              *  ASG       ref   
N002 (  3,  2) [000068] D------N----              +--*  LCL_VAR   ref    V08 tmp7         d:2
N001 (  1,  1) [000069] ------------              \--*  CNS_INT   ref    null

***** BB02
STMT00001 (IL   ???...  ???)
N003 (  7,  5) [000073] -A------R---              *  ASG       ref   
N002 (  3,  2) [000071] D------N----              +--*  LCL_VAR   ref   (AX) V06 tmp5         
N001 (  3,  2) [000072] ------------              \--*  LCL_VAR   ref    V08 tmp7         u:2 (last use)

***** BB02
STMT00002 (IL 0x00C...0x00F)
N003 (  5,  4) [000012] -A--G---R---              *  ASG       int   
N002 (  3,  2) [000011] D---G--N----              +--*  LCL_VAR   int   (AX) V05 tmp4         
N001 (  1,  1) [000010] ------------              \--*  CNS_INT   int    -1

***** BB02
STMT00008 (IL 0x014...  ???)
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
N003 (  3,  3) [000036] ------------ arg0 in rcx  \--*  ADDR      long  
N002 (  3,  2) [000037] ----G--N----                 \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24>(AX)(P) V00 loc0         
                                                     \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                     \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                     \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         

***** BB02
STMT00009 (IL 0x022...  ???)
N003 (  3,  3) [000046] -A--G---R---              *  ASG       ref   
N002 (  1,  1) [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         d:2
N001 (  3,  2) [000041] ----G-------              \--*  LCL_VAR   ref   (AX) V06 tmp5         

***** BB02
STMT00011 (IL 0x022...  ???)
N003 (  5,  4) [000053] -A------R---              *  ASG       ref   
N002 (  3,  2) [000052] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:2
N001 (  1,  1) [000047] ------------              \--*  LCL_VAR   ref    V03 tmp2         u:2

***** BB02
STMT00010 (IL 0x022...  ???)
N004 (  5,  5) [000051] ------------              *  JTRUE     void  
N003 (  3,  3) [000050] J------N----              \--*  NE        int   
N001 (  1,  1) [000048] ------------                 +--*  LCL_VAR   ref    V03 tmp2         u:2 (last use)
N002 (  1,  1) [000049] ------------                 \--*  CNS_INT   ref    null

------------ BB03 [022..023), preds={BB02} succs={BB04}

***** BB03
STMT00012 (IL 0x022...  ???)
N006 ( 21, 13) [000063] -ACXG---R---              *  ASG       ref   
N005 (  3,  2) [000062] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:4
N004 ( 17, 10) [000061] --CXG-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise
N003 (  3,  3) [000057] ------------ this in rcx     \--*  ADDR      byref 
N002 (  3,  2) [000058] ----G--N----                    \--*  LCL_VAR   ref   (AX) V06 tmp5         

------------ BB04 [022..023) (return), preds={BB02,BB03} succs={}

***** BB04
STMT00013 (IL   ???...  ???)
N005 (  0,  0) [000078] -A------R---              *  ASG       ref   
N004 (  0,  0) [000076] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:3
N003 (  0,  0) [000077] ------------              \--*  PHI       ref   
N001 (  0,  0) [000080] ------------ pred BB03       +--*  PHI_ARG   ref    V04 tmp3         u:4
N002 (  0,  0) [000079] ------------ pred BB02       \--*  PHI_ARG   ref    V04 tmp3         u:2

***** BB04
STMT00005 (IL   ???...  ???)
N002 (  4,  3) [000026] ------------              *  RETURN    ref   
N001 (  3,  2) [000056] ------------              \--*  LCL_VAR   ref    V04 tmp3         u:3 (last use)

-------------------------------------------------------------------------------------------------------------------

*************** Finishing PHASE Early Value Propagation

*************** Starting PHASE Do value numbering

*************** In fgValueNumber()
Memory Initial Value in BB01 is: $80
The SSA definition for ByrefExposed (#1) at start of BB01 is $80 {InitVal($40)}
The SSA definition for GcHeap (#1) at start of BB01 is $80 {InitVal($40)}

***** BB01, STMT00006(before)
N005 ( 17, 18) [000029] --CXG-------              *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000027] ------------ arg0 in rcx  +--*  CNS_INT   long   0x7ffc7e4a17a0
N004 (  1,  1) [000028] ------------ arg1 in rdx  \--*  CNS_INT   int    13

N001 [000066]   ARGPLACE  => $c0 {c0}
N002 [000067]   ARGPLACE  => $100 {100}
N003 [000027]   CNS_INT   0x7ffc7e4a17a0 => $140 {LngCns:  0x7ffc7e4a17a0}
N004 [000028]   CNS_INT   13 => $41 {IntCns 13}
VN of ARGPLACE tree [000066] updated to $140 {LngCns:  0x7ffc7e4a17a0}
VN of ARGPLACE tree [000067] updated to $41 {IntCns 13}
  fgCurMemoryVN[GcHeap] assigned for HELPER - modifies heap at [000029] to VN: $240.
N005 [000029]   CALL help => $201 {norm=$200 {GetsharedNongcstaticBase($140, $41)}, exc=$1c0 {HelperMultipleExc()}}

***** BB01, STMT00006(after)
N005 ( 17, 18) [000029] --CXG-------              *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $201
N003 (  2, 10) [000027] ------------ arg0 in rcx  +--*  CNS_INT   long   0x7ffc7e4a17a0 $140
N004 (  1,  1) [000028] ------------ arg1 in rdx  \--*  CNS_INT   int    13 $41

finish(BB01).
   Succ(BB02).
     Not yet completed.
     All preds complete, adding to allDone.
The SSA definition for ByrefExposed (#2) at start of BB02 is $280 {280}
The SSA definition for GcHeap (#3) at start of BB02 is $240 {240}

***** BB02, STMT00007(before)
N003 (  5,  4) [000070] -A------R---              *  ASG       ref   
N002 (  3,  2) [000068] D------N----              +--*  LCL_VAR   ref    V08 tmp7         d:2
N001 (  1,  1) [000069] ------------              \--*  CNS_INT   ref    null

N001 [000069]   CNS_INT   null => $VN.Null
N002 [000068]   LCL_VAR   V08 tmp7         d:2 => $VN.Null
N003 [000070]   ASG       => $VN.Null

***** BB02, STMT00007(after)
N003 (  5,  4) [000070] -A------R---              *  ASG       ref    $VN.Null
N002 (  3,  2) [000068] D------N----              +--*  LCL_VAR   ref    V08 tmp7         d:2 $VN.Null
N001 (  1,  1) [000069] ------------              \--*  CNS_INT   ref    null $VN.Null

---------

***** BB02, STMT00001(before)
N003 (  7,  5) [000073] -A------R---              *  ASG       ref   
N002 (  3,  2) [000071] D------N----              +--*  LCL_VAR   ref   (AX) V06 tmp5         
N001 (  3,  2) [000072] ------------              \--*  LCL_VAR   ref    V08 tmp7         u:2 (last use)

N001 [000072]   LCL_VAR   V08 tmp7         u:2 (last use) => $VN.Null
  fgCurMemoryVN[ByrefExposed] assigned for local assign at [000073] to VN: $281.
N003 [000073]   ASG       => $VN.Null

***** BB02, STMT00001(after)
N003 (  7,  5) [000073] -A------R---              *  ASG       ref    $VN.Null
N002 (  3,  2) [000071] D------N----              +--*  LCL_VAR   ref   (AX) V06 tmp5         
N001 (  3,  2) [000072] ------------              \--*  LCL_VAR   ref    V08 tmp7         u:2 (last use) $VN.Null

---------

***** BB02, STMT00002(before)
N003 (  5,  4) [000012] -A--G---R---              *  ASG       int   
N002 (  3,  2) [000011] D---G--N----              +--*  LCL_VAR   int   (AX) V05 tmp4         
N001 (  1,  1) [000010] ------------              \--*  CNS_INT   int    -1

N001 [000010]   CNS_INT   -1 => $40 {IntCns -1}
  fgCurMemoryVN[ByrefExposed] assigned for local assign at [000012] to VN: $282.
N003 [000012]   ASG       => $40 {IntCns -1}

***** BB02, STMT00002(after)
N003 (  5,  4) [000012] -A--G---R---              *  ASG       int    $40
N002 (  3,  2) [000011] D---G--N----              +--*  LCL_VAR   int   (AX) V05 tmp4         
N001 (  1,  1) [000010] ------------              \--*  CNS_INT   int    -1 $40

---------

***** BB02, STMT00008(before)
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start
N003 (  3,  3) [000036] ------------ arg0 in rcx  \--*  ADDR      long  
N002 (  3,  2) [000037] ----G--N----                 \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24>(AX)(P) V00 loc0         
                                                     \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                     \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                     \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         

N001 [000074]   ARGPLACE  => $c1 {c1}
N002 [000037]   LCL_VAR   V00 loc0         
                                                      int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                      ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                      ref    V00.<>u__1 (offs=0x10) -> V07 tmp6          => $300 {300}
N003 [000036]   ADDR      => $340 {340}
VN of ARGPLACE tree [000074] updated to $340 {340}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000038] to VN: $242.
N004 [000038]   CALL      => $VN.Void

***** BB02, STMT00008(after)
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void
N003 (  3,  3) [000036] ------------ arg0 in rcx  \--*  ADDR      long   $340
N002 (  3,  2) [000037] ----G--N----                 \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24>(AX)(P) V00 loc0         
                                                     \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                     \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                     \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6          $300

---------

***** BB02, STMT00009(before)
N003 (  3,  3) [000046] -A--G---R---              *  ASG       ref   
N002 (  1,  1) [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         d:2
N001 (  3,  2) [000041] ----G-------              \--*  LCL_VAR   ref   (AX) V06 tmp5         

N001 [000041]   LCL_VAR   V06 tmp5          => $380 {ByrefExposedLoad($41, $2c1, $283)}
N002 [000045]   LCL_VAR   V03 tmp2         d:2 => $380 {ByrefExposedLoad($41, $2c1, $283)}
N003 [000046]   ASG       => $380 {ByrefExposedLoad($41, $2c1, $283)}

***** BB02, STMT00009(after)
N003 (  3,  3) [000046] -A--G---R---              *  ASG       ref    $380
N002 (  1,  1) [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         d:2 $380
N001 (  3,  2) [000041] ----G-------              \--*  LCL_VAR   ref   (AX) V06 tmp5          $380

---------

***** BB02, STMT00011(before)
N003 (  5,  4) [000053] -A------R---              *  ASG       ref   
N002 (  3,  2) [000052] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:2
N001 (  1,  1) [000047] ------------              \--*  LCL_VAR   ref    V03 tmp2         u:2

N001 [000047]   LCL_VAR   V03 tmp2         u:2 => $380 {ByrefExposedLoad($41, $2c1, $283)}
N002 [000052]   LCL_VAR   V04 tmp3         d:2 => $380 {ByrefExposedLoad($41, $2c1, $283)}
N003 [000053]   ASG       => $380 {ByrefExposedLoad($41, $2c1, $283)}

***** BB02, STMT00011(after)
N003 (  5,  4) [000053] -A------R---              *  ASG       ref    $380
N002 (  3,  2) [000052] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:2 $380
N001 (  1,  1) [000047] ------------              \--*  LCL_VAR   ref    V03 tmp2         u:2 $380

---------

***** BB02, STMT00010(before)
N004 (  5,  5) [000051] ------------              *  JTRUE     void  
N003 (  3,  3) [000050] J------N----              \--*  NE        int   
N001 (  1,  1) [000048] ------------                 +--*  LCL_VAR   ref    V03 tmp2         u:2 (last use)
N002 (  1,  1) [000049] ------------                 \--*  CNS_INT   ref    null

N001 [000048]   LCL_VAR   V03 tmp2         u:2 (last use) => $380 {ByrefExposedLoad($41, $2c1, $283)}
N002 [000049]   CNS_INT   null => $VN.Null
N003 [000050]   NE        => $3c0 {NE($380, $0)}

***** BB02, STMT00010(after)
N004 (  5,  5) [000051] ------------              *  JTRUE     void  
N003 (  3,  3) [000050] J------N----              \--*  NE        int    $3c0
N001 (  1,  1) [000048] ------------                 +--*  LCL_VAR   ref    V03 tmp2         u:2 (last use) $380
N002 (  1,  1) [000049] ------------                 \--*  CNS_INT   ref    null $VN.Null

finish(BB02).
   Succ(BB03).
     Not yet completed.
     All preds complete, adding to allDone.
   Succ(BB04).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
       Was necessary.
The SSA definition for ByrefExposed (#4) at start of BB03 is $283 {283}
The SSA definition for GcHeap (#5) at start of BB03 is $242 {242}

***** BB03, STMT00012(before)
N006 ( 21, 13) [000063] -ACXG---R---              *  ASG       ref   
N005 (  3,  2) [000062] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:4
N004 ( 17, 10) [000061] --CXG-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise
N003 (  3,  3) [000057] ------------ this in rcx     \--*  ADDR      byref 
N002 (  3,  2) [000058] ----G--N----                    \--*  LCL_VAR   ref   (AX) V06 tmp5         

N001 [000075]   ARGPLACE  => $341 {341}
N002 [000058]   LCL_VAR   V06 tmp5          => $380 {ByrefExposedLoad($41, $2c1, $283)}
N003 [000057]   ADDR      => $342 {342}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000061] to VN: $246.
N004 [000061]   CALL      => $245 {245}
N005 [000062]   LCL_VAR   V04 tmp3         d:4 => $245 {245}
N006 [000063]   ASG       => $245 {245}

***** BB03, STMT00012(after)
N006 ( 21, 13) [000063] -ACXG---R---              *  ASG       ref    $245
N005 (  3,  2) [000062] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:4 $245
N004 ( 17, 10) [000061] --CXG-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise $245
N003 (  3,  3) [000057] ------------ this in rcx     \--*  ADDR      byref  $342
N002 (  3,  2) [000058] ----G--N----                    \--*  LCL_VAR   ref   (AX) V06 tmp5          $380

finish(BB03).
   Succ(BB04).
     Not yet completed.
     All preds complete, adding to allDone.
SSA PHI definition: set VN of local 4/3 to $381 {PhiDef($4, $3, $1c1)} .
The SSA definition for ByrefExposed (#4) at start of BB04 is $283 {283}
The SSA definition for GcHeap (#5) at start of BB04 is $242 {242}

***** BB04, STMT00005(before)
N002 (  4,  3) [000026] ------------              *  RETURN    ref   
N001 (  3,  2) [000056] ------------              \--*  LCL_VAR   ref    V04 tmp3         u:3 (last use)

N001 [000056]   LCL_VAR   V04 tmp3         u:3 (last use) => $381 {PhiDef($4, $3, $1c1)}
N002 [000026]   RETURN    => $248 {248}

***** BB04, STMT00005(after)
N002 (  4,  3) [000026] ------------              *  RETURN    ref    $248
N001 (  3,  2) [000056] ------------              \--*  LCL_VAR   ref    V04 tmp3         u:3 (last use) $381

finish(BB04).

*************** Finishing PHASE Do value numbering

*************** Starting PHASE Hoist loop code

*************** Finishing PHASE Hoist loop code

*************** Starting PHASE VN based copy prop
*************** In optVnCopyProp()
Copy Assertion for BB01
  curSsaName stack: { }

Copy Assertion for BB02
  curSsaName stack: { }

							Live vars: {} => {V08}
							Live vars: {V08} => {}
							Live vars: {} => {V03}
							Live vars: {V03} => {V03 V04}
							Live vars: {V03 V04} => {V04}
VN based copy assertion for [000048] V03 @00000380 by [000052] V04 @00000380.
N001 (  1,  1) [000048] ------------              *  LCL_VAR   ref    V03 tmp2         u:2 (last use) $380
copy propagated to:
N001 (  1,  1) [000048] ------------              *  LCL_VAR   ref    V04 tmp3         u:2 (last use) $380
Copy Assertion for BB04
  curSsaName stack: { 3-[000045]:V03 4-[000052]:V04 8-[000068]:V08 }

							Live vars: {V04} => {}
Copy Assertion for BB03
  curSsaName stack: { 3-[000045]:V03 4-[000052]:V04 8-[000068]:V08 }

							Live vars: {} => {V04}

*************** Finishing PHASE VN based copy prop

*************** Starting PHASE Optimize Valnum CSEs

*************** In optOptimizeCSEs()
Blocks/Trees at start of optOptimizeCSE phase

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0001]  1                             1       [???..???)                                     i internal label target hascall 
BB02 [0000]  1       BB01                  1       [000..02F)-> BB04 ( cond )                     i hascall gcsafe 
BB03 [0005]  1       BB02                  0.25    [022..023)                                     i hascall gcsafe 
BB04 [0006]  2       BB02,BB03             1       [022..023)        (return)                     i label target gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [???..???), preds={} succs={BB02}

***** BB01
STMT00006 (IL   ???...  ???)
N005 ( 17, 18) [000029] --CXG-------              *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $201
N003 (  2, 10) [000027] ------------ arg0 in rcx  +--*  CNS_INT   long   0x7ffc7e4a17a0 $140
N004 (  1,  1) [000028] ------------ arg1 in rdx  \--*  CNS_INT   int    13 $41

------------ BB02 [000..02F) -> BB04 (cond), preds={BB01} succs={BB03,BB04}

***** BB02
STMT00007 (IL 0x000...  ???)
N003 (  5,  4) [000070] -A------R---              *  ASG       ref    $VN.Null
N002 (  3,  2) [000068] D------N----              +--*  LCL_VAR   ref    V08 tmp7         d:2 $VN.Null
N001 (  1,  1) [000069] ------------              \--*  CNS_INT   ref    null $VN.Null

***** BB02
STMT00001 (IL   ???...  ???)
N003 (  7,  5) [000073] -A------R---              *  ASG       ref    $VN.Null
N002 (  3,  2) [000071] D------N----              +--*  LCL_VAR   ref   (AX) V06 tmp5         
N001 (  3,  2) [000072] ------------              \--*  LCL_VAR   ref    V08 tmp7         u:2 (last use) $VN.Null

***** BB02
STMT00002 (IL 0x00C...0x00F)
N003 (  5,  4) [000012] -A--G---R---              *  ASG       int    $40
N002 (  3,  2) [000011] D---G--N----              +--*  LCL_VAR   int   (AX) V05 tmp4         
N001 (  1,  1) [000010] ------------              \--*  CNS_INT   int    -1 $40

***** BB02
STMT00008 (IL 0x014...  ???)
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void
N003 (  3,  3) [000036] ------------ arg0 in rcx  \--*  ADDR      long   $340
N002 (  3,  2) [000037] ----G--N----                 \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24>(AX)(P) V00 loc0         
                                                     \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                     \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                     \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6          $300

***** BB02
STMT00009 (IL 0x022...  ???)
N003 (  3,  3) [000046] -A--G---R---              *  ASG       ref    $380
N002 (  1,  1) [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         d:2 $380
N001 (  3,  2) [000041] ----G-------              \--*  LCL_VAR   ref   (AX) V06 tmp5          $380

***** BB02
STMT00011 (IL 0x022...  ???)
N003 (  5,  4) [000053] -A------R---              *  ASG       ref    $380
N002 (  3,  2) [000052] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:2 $380
N001 (  1,  1) [000047] ------------              \--*  LCL_VAR   ref    V03 tmp2         u:2 $380

***** BB02
STMT00010 (IL 0x022...  ???)
N004 (  5,  5) [000051] ------------              *  JTRUE     void  
N003 (  3,  3) [000050] J------N----              \--*  NE        int    $3c0
N001 (  1,  1) [000048] ------------                 +--*  LCL_VAR   ref    V04 tmp3         u:2 (last use) $380
N002 (  1,  1) [000049] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB03 [022..023), preds={BB02} succs={BB04}

***** BB03
STMT00012 (IL 0x022...  ???)
N006 ( 21, 13) [000063] -ACXG---R---              *  ASG       ref    $245
N005 (  3,  2) [000062] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:4 $245
N004 ( 17, 10) [000061] --CXG-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise $245
N003 (  3,  3) [000057] ------------ this in rcx     \--*  ADDR      byref  $342
N002 (  3,  2) [000058] ----G--N----                    \--*  LCL_VAR   ref   (AX) V06 tmp5          $380

------------ BB04 [022..023) (return), preds={BB02,BB03} succs={}

***** BB04
STMT00013 (IL   ???...  ???)
N005 (  0,  0) [000078] -A------R---              *  ASG       ref   
N004 (  0,  0) [000076] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:3
N003 (  0,  0) [000077] ------------              \--*  PHI       ref   
N001 (  0,  0) [000080] ------------ pred BB03       +--*  PHI_ARG   ref    V04 tmp3         u:4 $245
N002 (  0,  0) [000079] ------------ pred BB02       \--*  PHI_ARG   ref    V04 tmp3         u:2 $380

***** BB04
STMT00005 (IL   ???...  ???)
N002 (  4,  3) [000026] ------------              *  RETURN    ref    $248
N001 (  3,  2) [000056] ------------              \--*  LCL_VAR   ref    V04 tmp3         u:3 (last use) $381

-------------------------------------------------------------------------------------------------------------------

*************** In optOptimizeValnumCSEs()

*************** Finishing PHASE Optimize Valnum CSEs

*************** Starting PHASE Assertion prop
*************** In optAssertionPropMain()
Blocks/Trees at start of phase

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0001]  1                             1       [???..???)                                     i internal label target hascall 
BB02 [0000]  1       BB01                  1       [000..02F)-> BB04 ( cond )                     i hascall gcsafe 
BB03 [0005]  1       BB02                  0.25    [022..023)                                     i hascall gcsafe 
BB04 [0006]  2       BB02,BB03             1       [022..023)        (return)                     i label target gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [???..???), preds={} succs={BB02}

***** BB01
STMT00006 (IL   ???...  ???)
N005 ( 17, 18) [000029] --CXG-------              *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $201
N003 (  2, 10) [000027] ------------ arg0 in rcx  +--*  CNS_INT   long   0x7ffc7e4a17a0 $140
N004 (  1,  1) [000028] ------------ arg1 in rdx  \--*  CNS_INT   int    13 $41

------------ BB02 [000..02F) -> BB04 (cond), preds={BB01} succs={BB03,BB04}

***** BB02
STMT00007 (IL 0x000...  ???)
N003 (  5,  4) [000070] -A------R---              *  ASG       ref    $VN.Null
N002 (  3,  2) [000068] D------N----              +--*  LCL_VAR   ref    V08 tmp7         d:2 $VN.Null
N001 (  1,  1) [000069] ------------              \--*  CNS_INT   ref    null $VN.Null

***** BB02
STMT00001 (IL   ???...  ???)
N003 (  7,  5) [000073] -A------R---              *  ASG       ref    $VN.Null
N002 (  3,  2) [000071] D------N----              +--*  LCL_VAR   ref   (AX) V06 tmp5         
N001 (  3,  2) [000072] ------------              \--*  LCL_VAR   ref    V08 tmp7         u:2 (last use) $VN.Null

***** BB02
STMT00002 (IL 0x00C...0x00F)
N003 (  5,  4) [000012] -A--G---R---              *  ASG       int    $40
N002 (  3,  2) [000011] D---G--N----              +--*  LCL_VAR   int   (AX) V05 tmp4         
N001 (  1,  1) [000010] ------------              \--*  CNS_INT   int    -1 $40

***** BB02
STMT00008 (IL 0x014...  ???)
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void
N003 (  3,  3) [000036] ------------ arg0 in rcx  \--*  ADDR      long   $340
N002 (  3,  2) [000037] ----G--N----                 \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24>(AX)(P) V00 loc0         
                                                     \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                     \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                     \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6          $300

***** BB02
STMT00009 (IL 0x022...  ???)
N003 (  3,  3) [000046] -A--G---R---              *  ASG       ref    $380
N002 (  1,  1) [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         d:2 $380
N001 (  3,  2) [000041] ----G-------              \--*  LCL_VAR   ref   (AX) V06 tmp5          $380

***** BB02
STMT00011 (IL 0x022...  ???)
N003 (  5,  4) [000053] -A------R---              *  ASG       ref    $380
N002 (  3,  2) [000052] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:2 $380
N001 (  1,  1) [000047] ------------              \--*  LCL_VAR   ref    V03 tmp2         u:2 $380

***** BB02
STMT00010 (IL 0x022...  ???)
N004 (  5,  5) [000051] ------------              *  JTRUE     void  
N003 (  3,  3) [000050] J------N----              \--*  NE        int    $3c0
N001 (  1,  1) [000048] ------------                 +--*  LCL_VAR   ref    V04 tmp3         u:2 (last use) $380
N002 (  1,  1) [000049] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB03 [022..023), preds={BB02} succs={BB04}

***** BB03
STMT00012 (IL 0x022...  ???)
N006 ( 21, 13) [000063] -ACXG---R---              *  ASG       ref    $245
N005 (  3,  2) [000062] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:4 $245
N004 ( 17, 10) [000061] --CXG-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise $245
N003 (  3,  3) [000057] ------------ this in rcx     \--*  ADDR      byref  $342
N002 (  3,  2) [000058] ----G--N----                    \--*  LCL_VAR   ref   (AX) V06 tmp5          $380

------------ BB04 [022..023) (return), preds={BB02,BB03} succs={}

***** BB04
STMT00013 (IL   ???...  ???)
N005 (  0,  0) [000078] -A------R---              *  ASG       ref   
N004 (  0,  0) [000076] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:3
N003 (  0,  0) [000077] ------------              \--*  PHI       ref   
N001 (  0,  0) [000080] ------------ pred BB03       +--*  PHI_ARG   ref    V04 tmp3         u:4 $245
N002 (  0,  0) [000079] ------------ pred BB02       \--*  PHI_ARG   ref    V04 tmp3         u:2 $380

***** BB04
STMT00005 (IL   ???...  ???)
N002 (  4,  3) [000026] ------------              *  RETURN    ref    $248
N001 (  3,  2) [000056] ------------              \--*  LCL_VAR   ref    V04 tmp3         u:3 (last use) $381

-------------------------------------------------------------------------------------------------------------------
After constant propagation on [000072]:
STMT00001 (IL   ???...  ???)
N003 (  7,  5) [000073] -A------R---              *  ASG       ref    $VN.Null
N002 (  3,  2) [000071] D------N----              +--*  LCL_VAR   ref   (AX) V06 tmp5         
               [000081] ------------              \--*  CNS_INT   ref    null $VN.Null
optVNAssertionPropCurStmt morphed tree:
N003 (  5,  4) [000073] -A--G---R---              *  ASG       ref    $VN.Null
N002 (  3,  2) [000071] D---G--N----              +--*  LCL_VAR   ref   (AX) V06 tmp5         
N001 (  1,  1) [000081] ------------              \--*  CNS_INT   ref    null $VN.Null

GenTreeNode creates assertion:
N004 (  5,  5) [000051] ------------              *  JTRUE     void  
In BB02 New Global Constant Assertion: (896, 0) ($380,$0) V04.02 != null index=#01, mask=0000000000000001
GenTreeNode creates assertion:
N004 (  5,  5) [000051] ------------              *  JTRUE     void  
In BB02 New Global Constant Assertion: (896, 0) ($380,$0) V04.02 == null index=#02, mask=0000000000000002
BB01 valueGen = 0000000000000000
BB02 valueGen = 0000000000000002 => BB04 valueGen = 0000000000000001,
BB03 valueGen = 0000000000000000
BB04 valueGen = 0000000000000000
AssertionPropCallback::StartMerge: BB01 in -> 0000000000000000
AssertionPropCallback::EndMerge  : BB01 in -> 0000000000000000

AssertionPropCallback::Changed   : BB01 before out -> 0000000000000003; after out -> 0000000000000000;
		jumpDest before out -> 0000000000000003; jumpDest after out -> 0000000000000000;

AssertionPropCallback::StartMerge: BB02 in -> 0000000000000003
AssertionPropCallback::Merge     : BB02 in -> 0000000000000003, predBlock BB01 out -> 0000000000000000
AssertionPropCallback::EndMerge  : BB02 in -> 0000000000000000

AssertionPropCallback::Changed   : BB02 before out -> 0000000000000003; after out -> 0000000000000002;
		jumpDest before out -> 0000000000000003; jumpDest after out -> 0000000000000001;

AssertionPropCallback::StartMerge: BB03 in -> 0000000000000003
AssertionPropCallback::Merge     : BB03 in -> 0000000000000003, predBlock BB02 out -> 0000000000000002
AssertionPropCallback::EndMerge  : BB03 in -> 0000000000000002

AssertionPropCallback::Changed   : BB03 before out -> 0000000000000003; after out -> 0000000000000002;
		jumpDest before out -> 0000000000000003; jumpDest after out -> 0000000000000002;

AssertionPropCallback::StartMerge: BB04 in -> 0000000000000003
AssertionPropCallback::Merge     : BB04 in -> 0000000000000003, predBlock BB02 out -> 0000000000000002
AssertionPropCallback::Merge     : BB04 in -> 0000000000000001, predBlock BB03 out -> 0000000000000002
AssertionPropCallback::EndMerge  : BB04 in -> 0000000000000000

AssertionPropCallback::Changed   : BB04 before out -> 0000000000000003; after out -> 0000000000000000;
		jumpDest before out -> 0000000000000003; jumpDest after out -> 0000000000000000;

AssertionPropCallback::StartMerge: BB04 in -> 0000000000000000
AssertionPropCallback::Merge     : BB04 in -> 0000000000000000, predBlock BB02 out -> 0000000000000002
AssertionPropCallback::Merge     : BB04 in -> 0000000000000000, predBlock BB03 out -> 0000000000000002
AssertionPropCallback::EndMerge  : BB04 in -> 0000000000000000

AssertionPropCallback::Unchanged  : BB04 out -> 0000000000000000; 		jumpDest out -> 0000000000000000



BB01 valueIn  = 0000000000000000 valueOut = 0000000000000000
BB02 valueIn  = 0000000000000000 valueOut = 0000000000000002 => BB04 valueOut= 0000000000000001
BB03 valueIn  = 0000000000000002 valueOut = 0000000000000002
BB04 valueIn  = 0000000000000000 valueOut = 0000000000000000
Propagating 0000000000000000 assertions for BB01, stmt STMT00006, tree [000066], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00006, tree [000067], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00006, tree [000027], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00006, tree [000028], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00006, tree [000029], tree -> 0
Propagating 0000000000000000 assertions for BB02, stmt STMT00007, tree [000069], tree -> 0
Propagating 0000000000000000 assertions for BB02, stmt STMT00007, tree [000068], tree -> 0
Propagating 0000000000000000 assertions for BB02, stmt STMT00007, tree [000070], tree -> 0
Propagating 0000000000000000 assertions for BB02, stmt STMT00001, tree [000081], tree -> 0
Propagating 0000000000000000 assertions for BB02, stmt STMT00001, tree [000071], tree -> 0
Propagating 0000000000000000 assertions for BB02, stmt STMT00001, tree [000073], tree -> 0
Propagating 0000000000000000 assertions for BB02, stmt STMT00002, tree [000010], tree -> 0
Propagating 0000000000000000 assertions for BB02, stmt STMT00002, tree [000011], tree -> 0
Propagating 0000000000000000 assertions for BB02, stmt STMT00002, tree [000012], tree -> 0
Propagating 0000000000000000 assertions for BB02, stmt STMT00008, tree [000074], tree -> 0
Propagating 0000000000000000 assertions for BB02, stmt STMT00008, tree [000037], tree -> 0
Propagating 0000000000000000 assertions for BB02, stmt STMT00008, tree [000036], tree -> 0
Propagating 0000000000000000 assertions for BB02, stmt STMT00008, tree [000038], tree -> 0
Propagating 0000000000000000 assertions for BB02, stmt STMT00009, tree [000041], tree -> 0
Propagating 0000000000000000 assertions for BB02, stmt STMT00009, tree [000045], tree -> 0
Propagating 0000000000000000 assertions for BB02, stmt STMT00009, tree [000046], tree -> 0
Propagating 0000000000000000 assertions for BB02, stmt STMT00011, tree [000047], tree -> 0
Propagating 0000000000000000 assertions for BB02, stmt STMT00011, tree [000052], tree -> 0
Propagating 0000000000000000 assertions for BB02, stmt STMT00011, tree [000053], tree -> 0
Propagating 0000000000000000 assertions for BB02, stmt STMT00010, tree [000048], tree -> 0
Propagating 0000000000000000 assertions for BB02, stmt STMT00010, tree [000049], tree -> 0
Propagating 0000000000000000 assertions for BB02, stmt STMT00010, tree [000050], tree -> 0

VN relop, checking BB02 for redundancy
 ... checking dom BB01
Failed to find a suitable dominating compare, so we won't optimize
Propagating 0000000000000000 assertions for BB02, stmt STMT00010, tree [000051], tree -> 1
Propagating 0000000000000002 assertions for BB03, stmt STMT00012, tree [000075], tree -> 0
Propagating 0000000000000002 assertions for BB03, stmt STMT00012, tree [000058], tree -> 0
Propagating 0000000000000002 assertions for BB03, stmt STMT00012, tree [000057], tree -> 0
Propagating 0000000000000002 assertions for BB03, stmt STMT00012, tree [000061], tree -> 0
Propagating 0000000000000002 assertions for BB03, stmt STMT00012, tree [000062], tree -> 0
Propagating 0000000000000002 assertions for BB03, stmt STMT00012, tree [000063], tree -> 0
Propagating 0000000000000000 assertions for BB04, stmt STMT00005, tree [000056], tree -> 0
Propagating 0000000000000000 assertions for BB04, stmt STMT00005, tree [000026], tree -> 0
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Assertion prop

*************** Starting PHASE Optimize index checks
*************** In OptimizeRangeChecks()
Blocks/trees before phase

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0001]  1                             1       [???..???)                                     i internal label target hascall 
BB02 [0000]  1       BB01                  1       [000..02F)-> BB04 ( cond )                     i hascall gcsafe 
BB03 [0005]  1       BB02                  0.25    [022..023)                                     i hascall gcsafe 
BB04 [0006]  2       BB02,BB03             1       [022..023)        (return)                     i label target gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [???..???), preds={} succs={BB02}

***** BB01
STMT00006 (IL   ???...  ???)
N005 ( 17, 18) [000029] --CXG-------              *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $201
N003 (  2, 10) [000027] ------------ arg0 in rcx  +--*  CNS_INT   long   0x7ffc7e4a17a0 $140
N004 (  1,  1) [000028] ------------ arg1 in rdx  \--*  CNS_INT   int    13 $41

------------ BB02 [000..02F) -> BB04 (cond), preds={BB01} succs={BB03,BB04}

***** BB02
STMT00007 (IL 0x000...  ???)
N003 (  5,  4) [000070] -A------R---              *  ASG       ref    $VN.Null
N002 (  3,  2) [000068] D------N----              +--*  LCL_VAR   ref    V08 tmp7         d:2 $VN.Null
N001 (  1,  1) [000069] ------------              \--*  CNS_INT   ref    null $VN.Null

***** BB02
STMT00001 (IL   ???...  ???)
N003 (  5,  4) [000073] -A--G---R---              *  ASG       ref    $VN.Null
N002 (  3,  2) [000071] D---G--N----              +--*  LCL_VAR   ref   (AX) V06 tmp5         
N001 (  1,  1) [000081] ------------              \--*  CNS_INT   ref    null $VN.Null

***** BB02
STMT00002 (IL 0x00C...0x00F)
N003 (  5,  4) [000012] -A--G---R---              *  ASG       int    $40
N002 (  3,  2) [000011] D---G--N----              +--*  LCL_VAR   int   (AX) V05 tmp4         
N001 (  1,  1) [000010] ------------              \--*  CNS_INT   int    -1 $40

***** BB02
STMT00008 (IL 0x014...  ???)
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void
N003 (  3,  3) [000036] ------------ arg0 in rcx  \--*  ADDR      long   $340
N002 (  3,  2) [000037] ----G--N----                 \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24>(AX)(P) V00 loc0         
                                                     \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                     \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                     \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6          $300

***** BB02
STMT00009 (IL 0x022...  ???)
N003 (  3,  3) [000046] -A--G---R---              *  ASG       ref    $380
N002 (  1,  1) [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         d:2 $380
N001 (  3,  2) [000041] ----G-------              \--*  LCL_VAR   ref   (AX) V06 tmp5          $380

***** BB02
STMT00011 (IL 0x022...  ???)
N003 (  5,  4) [000053] -A------R---              *  ASG       ref    $380
N002 (  3,  2) [000052] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:2 $380
N001 (  1,  1) [000047] ------------              \--*  LCL_VAR   ref    V03 tmp2         u:2 $380

***** BB02
STMT00010 (IL 0x022...  ???)
N004 (  5,  5) [000051] ------------              *  JTRUE     void  
N003 (  3,  3) [000050] J------N----              \--*  NE        int    $3c0
N001 (  1,  1) [000048] ------------                 +--*  LCL_VAR   ref    V04 tmp3         u:2 (last use) $380
N002 (  1,  1) [000049] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB03 [022..023), preds={BB02} succs={BB04}

***** BB03
STMT00012 (IL 0x022...  ???)
N006 ( 21, 13) [000063] -ACXG---R---              *  ASG       ref    $245
N005 (  3,  2) [000062] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:4 $245
N004 ( 17, 10) [000061] --CXG-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise $245
N003 (  3,  3) [000057] ------------ this in rcx     \--*  ADDR      byref  $342
N002 (  3,  2) [000058] ----G--N----                    \--*  LCL_VAR   ref   (AX) V06 tmp5          $380

------------ BB04 [022..023) (return), preds={BB02,BB03} succs={}

***** BB04
STMT00013 (IL   ???...  ???)
N005 (  0,  0) [000078] -A------R---              *  ASG       ref   
N004 (  0,  0) [000076] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:3
N003 (  0,  0) [000077] ------------              \--*  PHI       ref   
N001 (  0,  0) [000080] ------------ pred BB03       +--*  PHI_ARG   ref    V04 tmp3         u:4 $245
N002 (  0,  0) [000079] ------------ pred BB02       \--*  PHI_ARG   ref    V04 tmp3         u:2 $380

***** BB04
STMT00005 (IL   ???...  ???)
N002 (  4,  3) [000026] ------------              *  RETURN    ref    $248
N001 (  3,  2) [000056] ------------              \--*  LCL_VAR   ref    V04 tmp3         u:3 (last use) $381

-------------------------------------------------------------------------------------------------------------------

*************** Finishing PHASE Optimize index checks

*************** Starting PHASE Insert GC Polls

*************** Finishing PHASE Insert GC Polls [no changes]

*************** Starting PHASE Determine first cold block

*************** In fgDetermineFirstColdBlock()
No procedure splitting will be done for this method

*************** Finishing PHASE Determine first cold block
Trees before Rationalize IR

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0001]  1                             1       [???..???)                                     i internal label target hascall 
BB02 [0000]  1       BB01                  1       [000..02F)-> BB04 ( cond )                     i hascall gcsafe 
BB03 [0005]  1       BB02                  0.25    [022..023)                                     i hascall gcsafe 
BB04 [0006]  2       BB02,BB03             1       [022..023)        (return)                     i label target gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [???..???), preds={} succs={BB02}

***** BB01
STMT00006 (IL   ???...  ???)
N005 ( 17, 18) [000029] --CXG-------              *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $201
N003 (  2, 10) [000027] ------------ arg0 in rcx  +--*  CNS_INT   long   0x7ffc7e4a17a0 $140
N004 (  1,  1) [000028] ------------ arg1 in rdx  \--*  CNS_INT   int    13 $41

------------ BB02 [000..02F) -> BB04 (cond), preds={BB01} succs={BB03,BB04}

***** BB02
STMT00007 (IL 0x000...  ???)
N003 (  5,  4) [000070] -A------R---              *  ASG       ref    $VN.Null
N002 (  3,  2) [000068] D------N----              +--*  LCL_VAR   ref    V08 tmp7         d:2 $VN.Null
N001 (  1,  1) [000069] ------------              \--*  CNS_INT   ref    null $VN.Null

***** BB02
STMT00001 (IL   ???...  ???)
N003 (  5,  4) [000073] -A--G---R---              *  ASG       ref    $VN.Null
N002 (  3,  2) [000071] D---G--N----              +--*  LCL_VAR   ref   (AX) V06 tmp5         
N001 (  1,  1) [000081] ------------              \--*  CNS_INT   ref    null $VN.Null

***** BB02
STMT00002 (IL 0x00C...0x00F)
N003 (  5,  4) [000012] -A--G---R---              *  ASG       int    $40
N002 (  3,  2) [000011] D---G--N----              +--*  LCL_VAR   int   (AX) V05 tmp4         
N001 (  1,  1) [000010] ------------              \--*  CNS_INT   int    -1 $40

***** BB02
STMT00008 (IL 0x014...  ???)
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void
N003 (  3,  3) [000036] ------------ arg0 in rcx  \--*  ADDR      long   $340
N002 (  3,  2) [000037] ----G--N----                 \--*  LCL_VAR   struct<<PlayCurrentMedia>d__12, 24>(AX)(P) V00 loc0         
                                                     \--*    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                     \--*    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                     \--*    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6          $300

***** BB02
STMT00009 (IL 0x022...  ???)
N003 (  3,  3) [000046] -A--G---R---              *  ASG       ref    $380
N002 (  1,  1) [000045] D------N----              +--*  LCL_VAR   ref    V03 tmp2         d:2 $380
N001 (  3,  2) [000041] ----G-------              \--*  LCL_VAR   ref   (AX) V06 tmp5          $380

***** BB02
STMT00011 (IL 0x022...  ???)
N003 (  5,  4) [000053] -A------R---              *  ASG       ref    $380
N002 (  3,  2) [000052] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:2 $380
N001 (  1,  1) [000047] ------------              \--*  LCL_VAR   ref    V03 tmp2         u:2 $380

***** BB02
STMT00010 (IL 0x022...  ???)
N004 (  5,  5) [000051] ------------              *  JTRUE     void  
N003 (  3,  3) [000050] J------N----              \--*  NE        int    $3c0
N001 (  1,  1) [000048] ------------                 +--*  LCL_VAR   ref    V04 tmp3         u:2 (last use) $380
N002 (  1,  1) [000049] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB03 [022..023), preds={BB02} succs={BB04}

***** BB03
STMT00012 (IL 0x022...  ???)
N006 ( 21, 13) [000063] -ACXG---R---              *  ASG       ref    $245
N005 (  3,  2) [000062] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:4 $245
N004 ( 17, 10) [000061] --CXG-------              \--*  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise $245
N003 (  3,  3) [000057] ------------ this in rcx     \--*  ADDR      byref  $342
N002 (  3,  2) [000058] ----G--N----                    \--*  LCL_VAR   ref   (AX) V06 tmp5          $380

------------ BB04 [022..023) (return), preds={BB02,BB03} succs={}

***** BB04
STMT00013 (IL   ???...  ???)
N005 (  0,  0) [000078] -A------R---              *  ASG       ref   
N004 (  0,  0) [000076] D------N----              +--*  LCL_VAR   ref    V04 tmp3         d:3
N003 (  0,  0) [000077] ------------              \--*  PHI       ref   
N001 (  0,  0) [000080] ------------ pred BB03       +--*  PHI_ARG   ref    V04 tmp3         u:4 $245
N002 (  0,  0) [000079] ------------ pred BB02       \--*  PHI_ARG   ref    V04 tmp3         u:2 $380

***** BB04
STMT00005 (IL   ???...  ???)
N002 (  4,  3) [000026] ------------              *  RETURN    ref    $248
N001 (  3,  2) [000056] ------------              \--*  LCL_VAR   ref    V04 tmp3         u:3 (last use) $381

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Rationalize IR
rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  5,  4) [000070] DA----------              *  STORE_LCL_VAR ref    V08 tmp7         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  5,  4) [000073] DA--G-------              *  STORE_LCL_VAR ref   (AX) V06 tmp5         

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  5,  4) [000012] DA--G-------              *  STORE_LCL_VAR int   (AX) V05 tmp4         

Rewriting GT_ADDR(GT_LCL_VAR) to GT_LCL_VAR_ADDR:
N002 (  3,  2) [000037] -------N----        t37 =    LCL_VAR_ADDR byref  V00 loc0         
                                                  *    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                  *    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                  *    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  3,  3) [000046] DA--G-------              *  STORE_LCL_VAR ref    V03 tmp2         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  5,  4) [000053] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:2

Rewriting GT_ADDR(GT_LCL_VAR) to GT_LCL_VAR_ADDR:
N002 (  3,  2) [000058] -------N----        t58 =    LCL_VAR_ADDR byref  V06 tmp5         

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N006 ( 21, 13) [000063] DACXG-------              *  STORE_LCL_VAR ref    V04 tmp3         d:4

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 (  0,  0) [000078] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:3


*************** Finishing PHASE Rationalize IR
Trees after Rationalize IR

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0001]  1                             1       [???..???)                                     i internal label target hascall LIR 
BB02 [0000]  1       BB01                  1       [000..02F)-> BB04 ( cond )                     i hascall gcsafe LIR 
BB03 [0005]  1       BB02                  0.25    [022..023)                                     i hascall gcsafe LIR 
BB04 [0006]  2       BB02,BB03             1       [022..023)        (return)                     i label target gcsafe LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [???..???), preds={} succs={BB02}
N003 (  2, 10) [000027] ------------        t27 =    CNS_INT   long   0x7ffc7e4a17a0 $140
N004 (  1,  1) [000028] ------------        t28 =    CNS_INT   int    13 $41
                                                  /--*  t27    long   arg0 in rcx
                                                  +--*  t28    int    arg1 in rdx
N005 ( 17, 18) [000029] --CXG-------        t29 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $201

------------ BB02 [000..02F) -> BB04 (cond), preds={BB01} succs={BB03,BB04}
               [000082] ------------                 IL_OFFSET void   IL offset: 0x0
N001 (  1,  1) [000069] ------------        t69 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t69    ref    
N003 (  5,  4) [000070] DA----------              *  STORE_LCL_VAR ref    V08 tmp7         d:2
N001 (  1,  1) [000081] ------------        t81 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t81    ref    
N003 (  5,  4) [000073] DA--G-------              *  STORE_LCL_VAR ref   (AX) V06 tmp5         
               [000083] ------------                 IL_OFFSET void   IL offset: 0xc
N001 (  1,  1) [000010] ------------        t10 =    CNS_INT   int    -1 $40
                                                  /--*  t10    int    
N003 (  5,  4) [000012] DA--G-------              *  STORE_LCL_VAR int   (AX) V05 tmp4         
               [000084] ------------                 IL_OFFSET void   IL offset: 0x14
N002 (  3,  2) [000037] -------N----        t37 =    LCL_VAR_ADDR byref  V00 loc0         
                                                  *    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                  *    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                  *    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
                                                  /--*  t37    byref  arg0 in rcx
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void
               [000085] ------------                 IL_OFFSET void   IL offset: 0x22
N001 (  3,  2) [000041] ------------        t41 =    LCL_VAR   ref   (AX) V06 tmp5          $380
                                                  /--*  t41    ref    
N003 (  3,  3) [000046] DA--G-------              *  STORE_LCL_VAR ref    V03 tmp2         d:2
               [000086] ------------                 IL_OFFSET void   IL offset: 0x22
N001 (  1,  1) [000047] ------------        t47 =    LCL_VAR   ref    V03 tmp2         u:2 $380
                                                  /--*  t47    ref    
N003 (  5,  4) [000053] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:2
               [000087] ------------                 IL_OFFSET void   IL offset: 0x22
N001 (  1,  1) [000048] ------------        t48 =    LCL_VAR   ref    V04 tmp3         u:2 (last use) $380
N002 (  1,  1) [000049] ------------        t49 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t48    ref    
                                                  +--*  t49    ref    
N003 (  3,  3) [000050] J------N----        t50 = *  NE        int    $3c0
                                                  /--*  t50    int    
N004 (  5,  5) [000051] ------------              *  JTRUE     void  

------------ BB03 [022..023), preds={BB02} succs={BB04}
               [000088] ------------                 IL_OFFSET void   IL offset: 0x22
N002 (  3,  2) [000058] -------N----        t58 =    LCL_VAR_ADDR byref  V06 tmp5         
                                                  /--*  t58    byref  this in rcx
N004 ( 17, 10) [000061] --CXG-------        t61 = *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise $245
                                                  /--*  t61    ref    
N006 ( 21, 13) [000063] DA-XG-------              *  STORE_LCL_VAR ref    V04 tmp3         d:4

------------ BB04 [022..023) (return), preds={BB02,BB03} succs={}
N001 (  0,  0) [000080] ------------        t80 =    PHI_ARG   ref    V04 tmp3         u:4 $245
N002 (  0,  0) [000079] ------------        t79 =    PHI_ARG   ref    V04 tmp3         u:2 $380
                                                  /--*  t80    ref    
                                                  +--*  t79    ref    
N003 (  0,  0) [000077] ------------        t77 = *  PHI       ref   
                                                  /--*  t77    ref    
N005 (  0,  0) [000078] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:3
N001 (  3,  2) [000056] ------------        t56 =    LCL_VAR   ref    V04 tmp3         u:3 (last use) $381
                                                  /--*  t56    ref    
N002 (  4,  3) [000026] ------------              *  RETURN    ref    $248

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist

*************** Starting PHASE Do 'simple' lowering
Bumping outgoingArgSpaceSize to 32 for call [000029]
outgoingArgSpaceSize 32 sufficient for call [000038], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000061], which needs 32

*************** Finishing PHASE Do 'simple' lowering
*************** In fgDebugCheckBBlist
Trees before Lowering nodeinfo

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0001]  1                             1       [???..???)                                     i internal label target hascall LIR 
BB02 [0000]  1       BB01                  1       [000..02F)-> BB04 ( cond )                     i hascall gcsafe LIR 
BB03 [0005]  1       BB02                  0.25    [022..023)                                     i hascall gcsafe LIR 
BB04 [0006]  2       BB02,BB03             1       [022..023)        (return)                     i label target gcsafe LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [???..???), preds={} succs={BB02}
N003 (  2, 10) [000027] ------------        t27 =    CNS_INT   long   0x7ffc7e4a17a0 $140
N004 (  1,  1) [000028] ------------        t28 =    CNS_INT   int    13 $41
                                                  /--*  t27    long   arg0 in rcx
                                                  +--*  t28    int    arg1 in rdx
N005 ( 17, 18) [000029] --CXG-------        t29 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $201

------------ BB02 [000..02F) -> BB04 (cond), preds={BB01} succs={BB03,BB04}
               [000082] ------------                 IL_OFFSET void   IL offset: 0x0
N001 (  1,  1) [000069] ------------        t69 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t69    ref    
N003 (  5,  4) [000070] DA----------              *  STORE_LCL_VAR ref    V08 tmp7         d:2
N001 (  1,  1) [000081] ------------        t81 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t81    ref    
N003 (  5,  4) [000073] DA--G-------              *  STORE_LCL_VAR ref   (AX) V06 tmp5         
               [000083] ------------                 IL_OFFSET void   IL offset: 0xc
N001 (  1,  1) [000010] ------------        t10 =    CNS_INT   int    -1 $40
                                                  /--*  t10    int    
N003 (  5,  4) [000012] DA--G-------              *  STORE_LCL_VAR int   (AX) V05 tmp4         
               [000084] ------------                 IL_OFFSET void   IL offset: 0x14
N002 (  3,  2) [000037] -------N----        t37 =    LCL_VAR_ADDR byref  V00 loc0         
                                                  *    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                  *    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                  *    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
                                                  /--*  t37    byref  arg0 in rcx
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void
               [000085] ------------                 IL_OFFSET void   IL offset: 0x22
N001 (  3,  2) [000041] ------------        t41 =    LCL_VAR   ref   (AX) V06 tmp5          $380
                                                  /--*  t41    ref    
N003 (  3,  3) [000046] DA--G-------              *  STORE_LCL_VAR ref    V03 tmp2         d:2
               [000086] ------------                 IL_OFFSET void   IL offset: 0x22
N001 (  1,  1) [000047] ------------        t47 =    LCL_VAR   ref    V03 tmp2         u:2 $380
                                                  /--*  t47    ref    
N003 (  5,  4) [000053] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:2
               [000087] ------------                 IL_OFFSET void   IL offset: 0x22
N001 (  1,  1) [000048] ------------        t48 =    LCL_VAR   ref    V04 tmp3         u:2 (last use) $380
N002 (  1,  1) [000049] ------------        t49 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t48    ref    
                                                  +--*  t49    ref    
N003 (  3,  3) [000050] J------N----        t50 = *  NE        int    $3c0
                                                  /--*  t50    int    
N004 (  5,  5) [000051] ------------              *  JTRUE     void  

------------ BB03 [022..023), preds={BB02} succs={BB04}
               [000088] ------------                 IL_OFFSET void   IL offset: 0x22
N002 (  3,  2) [000058] -------N----        t58 =    LCL_VAR_ADDR byref  V06 tmp5         
                                                  /--*  t58    byref  this in rcx
N004 ( 17, 10) [000061] --CXG-------        t61 = *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise $245
                                                  /--*  t61    ref    
N006 ( 21, 13) [000063] DA-XG-------              *  STORE_LCL_VAR ref    V04 tmp3         d:4

------------ BB04 [022..023) (return), preds={BB02,BB03} succs={}
N001 (  0,  0) [000080] ------------        t80 =    PHI_ARG   ref    V04 tmp3         u:4 $245
N002 (  0,  0) [000079] ------------        t79 =    PHI_ARG   ref    V04 tmp3         u:2 $380
                                                  /--*  t80    ref    
                                                  +--*  t79    ref    
N003 (  0,  0) [000077] ------------        t77 = *  PHI       ref   
                                                  /--*  t77    ref    
N005 (  0,  0) [000078] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:3
N001 (  3,  2) [000056] ------------        t56 =    LCL_VAR   ref    V04 tmp3         u:3 (last use) $381
                                                  /--*  t56    ref    
N002 (  4,  3) [000026] ------------              *  RETURN    ref    $248

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Lowering nodeinfo
lowering call (before):
N003 (  2, 10) [000027] ------------        t27 =    CNS_INT   long   0x7ffc7e4a17a0 $140
N004 (  1,  1) [000028] ------------        t28 =    CNS_INT   int    13 $41
                                                  /--*  t27    long   arg0 in rcx
                                                  +--*  t28    int    arg1 in rdx
N005 ( 17, 18) [000029] --CXG-------        t29 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $201

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000066] ----------L-              *  ARGPLACE  long   $140
lowering arg : N002 (  0,  0) [000067] ----------L-              *  ARGPLACE  int    $41

late:
======
lowering arg : N003 (  2, 10) [000027] ------------              *  CNS_INT   long   0x7ffc7e4a17a0 $140
new node is :                [000089] ------------              *  PUTARG_REG long   REG rcx

lowering arg : N004 (  1,  1) [000028] ------------              *  CNS_INT   int    13 $41
new node is :                [000090] ------------              *  PUTARG_REG int    REG rdx

lowering call (after):
N003 (  2, 10) [000027] ------------        t27 =    CNS_INT   long   0x7ffc7e4a17a0 $140
                                                  /--*  t27    long   
               [000089] ------------        t89 = *  PUTARG_REG long   REG rcx
N004 (  1,  1) [000028] ------------        t28 =    CNS_INT   int    13 $41
                                                  /--*  t28    int    
               [000090] ------------        t90 = *  PUTARG_REG int    REG rdx
                                                  /--*  t89    long   arg0 in rcx
                                                  +--*  t90    int    arg1 in rdx
N005 ( 17, 18) [000029] --CXG-------        t29 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $201

lowering store lcl var/field (before):
N001 (  1,  1) [000069] ------------        t69 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t69    ref    
N003 (  5,  4) [000070] DA----------              *  STORE_LCL_VAR ref    V08 tmp7         d:2

lowering store lcl var/field (after):
N001 (  1,  1) [000069] ------------        t69 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t69    ref    
N003 (  5,  4) [000070] DA----------              *  STORE_LCL_VAR ref    V08 tmp7         d:2

lowering store lcl var/field (before):
N001 (  1,  1) [000081] ------------        t81 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t81    ref    
N003 (  5,  4) [000073] DA--G-------              *  STORE_LCL_VAR ref   (AX) V06 tmp5         

lowering store lcl var/field (after):
N001 (  1,  1) [000081] ------------        t81 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t81    ref    
N003 (  5,  4) [000073] DA--G-------              *  STORE_LCL_VAR ref   (AX) V06 tmp5         

lowering store lcl var/field (before):
N001 (  1,  1) [000010] ------------        t10 =    CNS_INT   int    -1 $40
                                                  /--*  t10    int    
N003 (  5,  4) [000012] DA--G-------              *  STORE_LCL_VAR int   (AX) V05 tmp4         

lowering store lcl var/field (after):
N001 (  1,  1) [000010] -c----------        t10 =    CNS_INT   int    -1 $40
                                                  /--*  t10    int    
N003 (  5,  4) [000012] DA--G-------              *  STORE_LCL_VAR int   (AX) V05 tmp4         

lowering call (before):
N002 (  3,  2) [000037] -------N----        t37 =    LCL_VAR_ADDR byref  V00 loc0         
                                                  *    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                  *    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                  *    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
                                                  /--*  t37    byref  arg0 in rcx
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000074] ----------L-              *  ARGPLACE  long   $340

late:
======
lowering arg : N002 (  3,  2) [000037] -------N----              *  LCL_VAR_ADDR byref  V00 loc0         
                                                  *    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                  *    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                  *    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
new node is :                [000091] ------------              *  PUTARG_REG byref  REG rcx

lowering call (after):
N002 (  3,  2) [000037] -------N----        t37 =    LCL_VAR_ADDR byref  V00 loc0         
                                                  *    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                  *    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                  *    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
                                                  /--*  t37    byref  
               [000091] ------------        t91 = *  PUTARG_REG byref  REG rcx
                                                  /--*  t91    byref  arg0 in rcx
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void

lowering store lcl var/field (before):
N001 (  3,  2) [000041] ------------        t41 =    LCL_VAR   ref   (AX) V06 tmp5          $380
                                                  /--*  t41    ref    
N003 (  3,  3) [000046] DA--G-------              *  STORE_LCL_VAR ref    V03 tmp2         d:2

lowering store lcl var/field (after):
N001 (  3,  2) [000041] ------------        t41 =    LCL_VAR   ref   (AX) V06 tmp5          $380
                                                  /--*  t41    ref    
N003 (  3,  3) [000046] DA--G-------              *  STORE_LCL_VAR ref    V03 tmp2         d:2

lowering store lcl var/field (before):
N001 (  1,  1) [000047] ------------        t47 =    LCL_VAR   ref    V03 tmp2         u:2 $380
                                                  /--*  t47    ref    
N003 (  5,  4) [000053] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:2

lowering store lcl var/field (after):
N001 (  1,  1) [000047] ------------        t47 =    LCL_VAR   ref    V03 tmp2         u:2 $380
                                                  /--*  t47    ref    
N003 (  5,  4) [000053] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:2

lowering call (before):
N002 (  3,  2) [000058] -------N----        t58 =    LCL_VAR_ADDR byref  V06 tmp5         
                                                  /--*  t58    byref  this in rcx
N004 ( 17, 10) [000061] --CXG-------        t61 = *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise $245

objp:
======
lowering arg : N001 (  0,  0) [000075] ----------L-              *  ARGPLACE  byref  $341

args:
======

late:
======
lowering arg : N002 (  3,  2) [000058] -------N----              *  LCL_VAR_ADDR byref  V06 tmp5         
new node is :                [000092] ------------              *  PUTARG_REG byref  REG rcx

lowering call (after):
N002 (  3,  2) [000058] -------N----        t58 =    LCL_VAR_ADDR byref  V06 tmp5         
                                                  /--*  t58    byref  
               [000092] ------------        t92 = *  PUTARG_REG byref  REG rcx
                                                  /--*  t92    byref  this in rcx
N004 ( 17, 10) [000061] --CXG-------        t61 = *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise $245

lowering store lcl var/field (before):
N002 (  3,  2) [000058] -------N----        t58 =    LCL_VAR_ADDR byref  V06 tmp5         
                                                  /--*  t58    byref  
               [000092] ------------        t92 = *  PUTARG_REG byref  REG rcx
                                                  /--*  t92    byref  this in rcx
N004 ( 17, 10) [000061] --CXG-------        t61 = *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise $245
                                                  /--*  t61    ref    
N006 ( 21, 13) [000063] DA-XG-------              *  STORE_LCL_VAR ref    V04 tmp3         d:4

lowering store lcl var/field (after):
N002 (  3,  2) [000058] -------N----        t58 =    LCL_VAR_ADDR byref  V06 tmp5         
                                                  /--*  t58    byref  
               [000092] ------------        t92 = *  PUTARG_REG byref  REG rcx
                                                  /--*  t92    byref  this in rcx
N004 ( 17, 10) [000061] --CXG-------        t61 = *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise $245
                                                  /--*  t61    ref    
N006 ( 21, 13) [000063] DA-XG-------              *  STORE_LCL_VAR ref    V04 tmp3         d:4

lowering store lcl var/field (before):
N001 (  0,  0) [000080] ------------        t80 =    PHI_ARG   ref    V04 tmp3         u:4 $245
N002 (  0,  0) [000079] ------------        t79 =    PHI_ARG   ref    V04 tmp3         u:2 $380
                                                  /--*  t80    ref    
                                                  +--*  t79    ref    
N003 (  0,  0) [000077] ------------        t77 = *  PHI       ref   
                                                  /--*  t77    ref    
N005 (  0,  0) [000078] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:3

lowering store lcl var/field (after):
N001 (  0,  0) [000080] ------------        t80 =    PHI_ARG   ref    V04 tmp3         u:4 $245
N002 (  0,  0) [000079] ------------        t79 =    PHI_ARG   ref    V04 tmp3         u:2 $380
                                                  /--*  t80    ref    
                                                  +--*  t79    ref    
N003 (  0,  0) [000077] ------------        t77 = *  PHI       ref   
                                                  /--*  t77    ref    
N005 (  0,  0) [000078] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:3

lowering GT_RETURN
N002 (  4,  3) [000026] ------------              *  RETURN    ref    $248
============Lower has completed modifying nodes.

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0001]  1                             1       [???..???)                                     i internal label target hascall LIR 
BB02 [0000]  1       BB01                  1       [000..02F)-> BB04 ( cond )                     i hascall gcsafe LIR 
BB03 [0005]  1       BB02                  0.25    [022..023)                                     i hascall gcsafe LIR 
BB04 [0006]  2       BB02,BB03             1       [022..023)        (return)                     i label target gcsafe LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [???..???), preds={} succs={BB02}
N003 (  2, 10) [000027] ------------        t27 =    CNS_INT   long   0x7ffc7e4a17a0 $140
                                                  /--*  t27    long   
               [000089] ------------        t89 = *  PUTARG_REG long   REG rcx
N004 (  1,  1) [000028] ------------        t28 =    CNS_INT   int    13 $41
                                                  /--*  t28    int    
               [000090] ------------        t90 = *  PUTARG_REG int    REG rdx
                                                  /--*  t89    long   arg0 in rcx
                                                  +--*  t90    int    arg1 in rdx
N005 ( 17, 18) [000029] --CXG-------        t29 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $201

------------ BB02 [000..02F) -> BB04 (cond), preds={BB01} succs={BB03,BB04}
               [000082] ------------                 IL_OFFSET void   IL offset: 0x0
N001 (  1,  1) [000069] ------------        t69 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t69    ref    
N003 (  5,  4) [000070] DA----------              *  STORE_LCL_VAR ref    V08 tmp7         d:2
N001 (  1,  1) [000081] ------------        t81 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t81    ref    
N003 (  5,  4) [000073] DA--G-------              *  STORE_LCL_VAR ref   (AX) V06 tmp5         
               [000083] ------------                 IL_OFFSET void   IL offset: 0xc
N001 (  1,  1) [000010] -c----------        t10 =    CNS_INT   int    -1 $40
                                                  /--*  t10    int    
N003 (  5,  4) [000012] DA--G-------              *  STORE_LCL_VAR int   (AX) V05 tmp4         
               [000084] ------------                 IL_OFFSET void   IL offset: 0x14
N002 (  3,  2) [000037] -------N----        t37 =    LCL_VAR_ADDR byref  V00 loc0         
                                                  *    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                  *    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                  *    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
                                                  /--*  t37    byref  
               [000091] ------------        t91 = *  PUTARG_REG byref  REG rcx
                                                  /--*  t91    byref  arg0 in rcx
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void
               [000085] ------------                 IL_OFFSET void   IL offset: 0x22
N001 (  3,  2) [000041] ------------        t41 =    LCL_VAR   ref   (AX) V06 tmp5          $380
                                                  /--*  t41    ref    
N003 (  3,  3) [000046] DA--G-------              *  STORE_LCL_VAR ref    V03 tmp2         d:2
               [000086] ------------                 IL_OFFSET void   IL offset: 0x22
N001 (  1,  1) [000047] ------------        t47 =    LCL_VAR   ref    V03 tmp2         u:2 $380
                                                  /--*  t47    ref    
N003 (  5,  4) [000053] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:2
               [000087] ------------                 IL_OFFSET void   IL offset: 0x22
N001 (  1,  1) [000048] ------------        t48 =    LCL_VAR   ref    V04 tmp3         u:2 (last use) $380
N002 (  1,  1) [000049] -c----------        t49 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t48    ref    
                                                  +--*  t49    ref    
N003 (  3,  3) [000050] J------N----              *  NE        void   $3c0
N004 (  5,  5) [000051] ------------              *  JTRUE     void  

------------ BB03 [022..023), preds={BB02} succs={BB04}
               [000088] ------------                 IL_OFFSET void   IL offset: 0x22
N002 (  3,  2) [000058] -------N----        t58 =    LCL_VAR_ADDR byref  V06 tmp5         
                                                  /--*  t58    byref  
               [000092] ------------        t92 = *  PUTARG_REG byref  REG rcx
                                                  /--*  t92    byref  this in rcx
N004 ( 17, 10) [000061] --CXG-------        t61 = *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise $245
                                                  /--*  t61    ref    
N006 ( 21, 13) [000063] DA-XG-------              *  STORE_LCL_VAR ref    V04 tmp3         d:4

------------ BB04 [022..023) (return), preds={BB02,BB03} succs={}
N001 (  0,  0) [000080] ------------        t80 =    PHI_ARG   ref    V04 tmp3         u:4 $245
N002 (  0,  0) [000079] ------------        t79 =    PHI_ARG   ref    V04 tmp3         u:2 $380
                                                  /--*  t80    ref    
                                                  +--*  t79    ref    
N003 (  0,  0) [000077] ------------        t77 = *  PHI       ref   
                                                  /--*  t77    ref    
N005 (  0,  0) [000078] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:3
N001 (  3,  2) [000056] ------------        t56 =    LCL_VAR   ref    V04 tmp3         u:3 (last use) $381
                                                  /--*  t56    ref    
N002 (  4,  3) [000026] ------------              *  RETURN    ref    $248

-------------------------------------------------------------------------------------------------------------------

*** lvaComputeRefCounts ***

*** lvaComputeRefCounts -- explicit counts ***
New refCnts for V08: refCnt =  1, refCntWtd = 1   
New refCnts for V00: refCnt =  1, refCntWtd = 1   
New refCnts for V06: refCnt =  1, refCntWtd = 1   
New refCnts for V00: refCnt =  2, refCntWtd = 2   
New refCnts for V05: refCnt =  1, refCntWtd = 1   
New refCnts for V05: refCnt =  2, refCntWtd = 2   
New refCnts for V06: refCnt =  2, refCntWtd = 2   
New refCnts for V07: refCnt =  1, refCntWtd = 1   
New refCnts for V00: refCnt =  3, refCntWtd = 3   
New refCnts for V00: refCnt =  4, refCntWtd = 4   
New refCnts for V06: refCnt =  3, refCntWtd = 3   
New refCnts for V03: refCnt =  1, refCntWtd = 2   
New refCnts for V03: refCnt =  2, refCntWtd = 4   
New refCnts for V04: refCnt =  1, refCntWtd = 1   
New refCnts for V04: refCnt =  2, refCntWtd = 2   
New refCnts for V00: refCnt =  5, refCntWtd = 4.25
New refCnts for V06: refCnt =  4, refCntWtd = 3.25
New refCnts for V04: refCnt =  3, refCntWtd = 2.25
New refCnts for V04: refCnt =  4, refCntWtd = 3.25

*** lvaComputeRefCounts -- implicit counts ***
*************** In fgLocalVarLiveness()
; Initial local variable assignments
;
;  V00 loc0           struct <<PlayCurrentMedia>d__12, 24> do-not-enreg[XS] addr-exposed ld-addr-op
;  V01 OutArgs        lclBlk <32>  "OutgoingArgSpace"
;  V02 tmp1           struct <System.Runtime.CompilerServices.AsyncTaskMethodBuilder, 8> ld-addr-op "Inline ldloca(s) first use temp"
;  V03 tmp2              ref  class-hnd "dup spill"
;  V04 tmp3              ref 
;  V05 tmp4              int  do-not-enreg[X] addr-exposed V00.<>1__state(offs=0x00) P-DEP "field V00.<>1__state (fldOffset=0x0)"
;  V06 tmp5              ref  do-not-enreg[X] addr-exposed V00.<>t__builder(offs=0x08) P-DEP "field V00.<>t__builder (fldOffset=0x8)"
;  V07 tmp6              ref  do-not-enreg[X] addr-exposed V00.<>u__1(offs=0x10) P-DEP "field V00.<>u__1 (fldOffset=0x10)"
;  V08 tmp7              ref  V02.m_task(offs=0x00) P-INDEP "field V02.m_task (fldOffset=0x0)"
In fgLocalVarLivenessInit
Tracked variable (3 out of 9) table:
V03 tmp2          [   ref]: refCnt =    2, refCntWtd =   4   
V04 tmp3          [   ref]: refCnt =    4, refCntWtd =   3.25
V08 tmp7          [   ref]: refCnt =    1, refCntWtd =   1   

*************** In fgPerBlockLocalVarLiveness()
BB01 USE(0)={} + ByrefExposed + GcHeap
     DEF(0)={} + ByrefExposed* + GcHeap*

BB02 USE(0)={           } + ByrefExposed + GcHeap
     DEF(3)={V03 V04 V08} + ByrefExposed* + GcHeap*

BB03 USE(0)={   } + ByrefExposed + GcHeap
     DEF(1)={V04} + ByrefExposed* + GcHeap*

BB04 USE(1)={V04}
     DEF(0)={   }

** Memory liveness computed, GcHeap states and ByrefExposed states diverge
*************** In fgInterBlockLocalVarLiveness()

BB liveness after fgLiveVarAnalysis():

BB01 IN (0)={} + ByrefExposed + GcHeap
     OUT(0)={} + ByrefExposed + GcHeap

BB02 IN (0)={   } + ByrefExposed + GcHeap
     OUT(1)={V04} + ByrefExposed + GcHeap

BB03 IN (0)={   } + ByrefExposed + GcHeap
     OUT(1)={V04}

BB04 IN (1)={V04}
     OUT(0)={   }

Removing dead store:
N003 (  5,  4) [000070] DA----------              *  STORE_LCL_VAR ref    V08 tmp7         d:2 (last use)
Removing dead node:
N001 (  1,  1) [000069] ------------              *  CNS_INT   ref    null $VN.Null

*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0001]  1                             1       [???..???)                                     i internal label target hascall LIR 
BB02 [0000]  1       BB01                  1       [000..02F)-> BB04 ( cond )                     i hascall gcsafe LIR 
BB03 [0005]  1       BB02                  0.25    [022..023)                                     i hascall gcsafe LIR 
BB04 [0006]  2       BB02,BB03             1       [022..023)        (return)                     i label target gcsafe LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist

*** lvaComputeRefCounts ***

*** lvaComputeRefCounts -- explicit counts ***
New refCnts for V00: refCnt =  1, refCntWtd = 1   
New refCnts for V06: refCnt =  1, refCntWtd = 1   
New refCnts for V00: refCnt =  2, refCntWtd = 2   
New refCnts for V05: refCnt =  1, refCntWtd = 1   
New refCnts for V05: refCnt =  2, refCntWtd = 2   
New refCnts for V06: refCnt =  2, refCntWtd = 2   
New refCnts for V07: refCnt =  1, refCntWtd = 1   
New refCnts for V00: refCnt =  3, refCntWtd = 3   
New refCnts for V00: refCnt =  4, refCntWtd = 4   
New refCnts for V06: refCnt =  3, refCntWtd = 3   
New refCnts for V03: refCnt =  1, refCntWtd = 2   
New refCnts for V03: refCnt =  2, refCntWtd = 4   
New refCnts for V04: refCnt =  1, refCntWtd = 1   
New refCnts for V04: refCnt =  2, refCntWtd = 2   
New refCnts for V00: refCnt =  5, refCntWtd = 4.25
New refCnts for V06: refCnt =  4, refCntWtd = 3.25
New refCnts for V04: refCnt =  3, refCntWtd = 2.25
New refCnts for V04: refCnt =  4, refCntWtd = 3.25

*** lvaComputeRefCounts -- implicit counts ***

*************** Finishing PHASE Lowering nodeinfo
Trees after Lowering nodeinfo

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0001]  1                             1       [???..???)                                     i internal label target hascall LIR 
BB02 [0000]  1       BB01                  1       [000..02F)-> BB04 ( cond )                     i hascall gcsafe LIR 
BB03 [0005]  1       BB02                  0.25    [022..023)                                     i hascall gcsafe LIR 
BB04 [0006]  2       BB02,BB03             1       [022..023)        (return)                     i label target gcsafe LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [???..???), preds={} succs={BB02}
N003 (  2, 10) [000027] ------------        t27 =    CNS_INT   long   0x7ffc7e4a17a0 $140
                                                  /--*  t27    long   
               [000089] ------------        t89 = *  PUTARG_REG long   REG rcx
N004 (  1,  1) [000028] ------------        t28 =    CNS_INT   int    13 $41
                                                  /--*  t28    int    
               [000090] ------------        t90 = *  PUTARG_REG int    REG rdx
                                                  /--*  t89    long   arg0 in rcx
                                                  +--*  t90    int    arg1 in rdx
N005 ( 17, 18) [000029] --CXG-------        t29 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $201

------------ BB02 [000..02F) -> BB04 (cond), preds={BB01} succs={BB03,BB04}
               [000082] ------------                 IL_OFFSET void   IL offset: 0x0
N001 (  1,  1) [000081] ------------        t81 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t81    ref    
N003 (  5,  4) [000073] DA--G-------              *  STORE_LCL_VAR ref   (AX) V06 tmp5         
               [000083] ------------                 IL_OFFSET void   IL offset: 0xc
N001 (  1,  1) [000010] -c----------        t10 =    CNS_INT   int    -1 $40
                                                  /--*  t10    int    
N003 (  5,  4) [000012] DA--G-------              *  STORE_LCL_VAR int   (AX) V05 tmp4         
               [000084] ------------                 IL_OFFSET void   IL offset: 0x14
N002 (  3,  2) [000037] -------N----        t37 =    LCL_VAR_ADDR byref  V00 loc0         
                                                  *    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                  *    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                  *    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
                                                  /--*  t37    byref  
               [000091] ------------        t91 = *  PUTARG_REG byref  REG rcx
                                                  /--*  t91    byref  arg0 in rcx
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void
               [000085] ------------                 IL_OFFSET void   IL offset: 0x22
N001 (  3,  2) [000041] ------------        t41 =    LCL_VAR   ref   (AX) V06 tmp5          $380
                                                  /--*  t41    ref    
N003 (  3,  3) [000046] DA--G-------              *  STORE_LCL_VAR ref    V03 tmp2         d:2
               [000086] ------------                 IL_OFFSET void   IL offset: 0x22
N001 (  1,  1) [000047] ------------        t47 =    LCL_VAR   ref    V03 tmp2         u:2 (last use) $380
                                                  /--*  t47    ref    
N003 (  5,  4) [000053] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:2
               [000087] ------------                 IL_OFFSET void   IL offset: 0x22
N001 (  1,  1) [000048] ------------        t48 =    LCL_VAR   ref    V04 tmp3         u:2 $380
N002 (  1,  1) [000049] -c----------        t49 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t48    ref    
                                                  +--*  t49    ref    
N003 (  3,  3) [000050] J------N----              *  NE        void   $3c0
N004 (  5,  5) [000051] ------------              *  JTRUE     void  

------------ BB03 [022..023), preds={BB02} succs={BB04}
               [000088] ------------                 IL_OFFSET void   IL offset: 0x22
N002 (  3,  2) [000058] -------N----        t58 =    LCL_VAR_ADDR byref  V06 tmp5         
                                                  /--*  t58    byref  
               [000092] ------------        t92 = *  PUTARG_REG byref  REG rcx
                                                  /--*  t92    byref  this in rcx
N004 ( 17, 10) [000061] --CXG-------        t61 = *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise $245
                                                  /--*  t61    ref    
N006 ( 21, 13) [000063] DA-XG-------              *  STORE_LCL_VAR ref    V04 tmp3         d:4

------------ BB04 [022..023) (return), preds={BB02,BB03} succs={}
N001 (  0,  0) [000080] ------------        t80 =    PHI_ARG   ref    V04 tmp3         u:4 $245
N002 (  0,  0) [000079] ------------        t79 =    PHI_ARG   ref    V04 tmp3         u:2 $380
                                                  /--*  t80    ref    
                                                  +--*  t79    ref    
N003 (  0,  0) [000077] ------------        t77 = *  PHI       ref   
                                                  /--*  t77    ref    
N005 (  0,  0) [000078] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:3
N001 (  3,  2) [000056] ------------        t56 =    LCL_VAR   ref    V04 tmp3         u:3 (last use) $381
                                                  /--*  t56    ref    
N002 (  4,  3) [000026] ------------              *  RETURN    ref    $248

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Trees before Calculate stack level slots

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0001]  1                             1       [???..???)                                     i internal label target hascall LIR 
BB02 [0000]  1       BB01                  1       [000..02F)-> BB04 ( cond )                     i hascall gcsafe LIR 
BB03 [0005]  1       BB02                  0.25    [022..023)                                     i hascall gcsafe LIR 
BB04 [0006]  2       BB02,BB03             1       [022..023)        (return)                     i label target gcsafe LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [???..???), preds={} succs={BB02}
N003 (  2, 10) [000027] ------------        t27 =    CNS_INT   long   0x7ffc7e4a17a0 $140
                                                  /--*  t27    long   
               [000089] ------------        t89 = *  PUTARG_REG long   REG rcx
N004 (  1,  1) [000028] ------------        t28 =    CNS_INT   int    13 $41
                                                  /--*  t28    int    
               [000090] ------------        t90 = *  PUTARG_REG int    REG rdx
                                                  /--*  t89    long   arg0 in rcx
                                                  +--*  t90    int    arg1 in rdx
N005 ( 17, 18) [000029] --CXG-------        t29 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $201

------------ BB02 [000..02F) -> BB04 (cond), preds={BB01} succs={BB03,BB04}
               [000082] ------------                 IL_OFFSET void   IL offset: 0x0
N001 (  1,  1) [000081] ------------        t81 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t81    ref    
N003 (  5,  4) [000073] DA--G-------              *  STORE_LCL_VAR ref   (AX) V06 tmp5         
               [000083] ------------                 IL_OFFSET void   IL offset: 0xc
N001 (  1,  1) [000010] -c----------        t10 =    CNS_INT   int    -1 $40
                                                  /--*  t10    int    
N003 (  5,  4) [000012] DA--G-------              *  STORE_LCL_VAR int   (AX) V05 tmp4         
               [000084] ------------                 IL_OFFSET void   IL offset: 0x14
N002 (  3,  2) [000037] -------N----        t37 =    LCL_VAR_ADDR byref  V00 loc0         
                                                  *    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                  *    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                  *    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
                                                  /--*  t37    byref  
               [000091] ------------        t91 = *  PUTARG_REG byref  REG rcx
                                                  /--*  t91    byref  arg0 in rcx
N004 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start $VN.Void
               [000085] ------------                 IL_OFFSET void   IL offset: 0x22
N001 (  3,  2) [000041] ------------        t41 =    LCL_VAR   ref   (AX) V06 tmp5          $380
                                                  /--*  t41    ref    
N003 (  3,  3) [000046] DA--G-------              *  STORE_LCL_VAR ref    V03 tmp2         d:2
               [000086] ------------                 IL_OFFSET void   IL offset: 0x22
N001 (  1,  1) [000047] ------------        t47 =    LCL_VAR   ref    V03 tmp2         u:2 (last use) $380
                                                  /--*  t47    ref    
N003 (  5,  4) [000053] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:2
               [000087] ------------                 IL_OFFSET void   IL offset: 0x22
N001 (  1,  1) [000048] ------------        t48 =    LCL_VAR   ref    V04 tmp3         u:2 $380
N002 (  1,  1) [000049] -c----------        t49 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t48    ref    
                                                  +--*  t49    ref    
N003 (  3,  3) [000050] J------N----              *  NE        void   $3c0
N004 (  5,  5) [000051] ------------              *  JTRUE     void  

------------ BB03 [022..023), preds={BB02} succs={BB04}
               [000088] ------------                 IL_OFFSET void   IL offset: 0x22
N002 (  3,  2) [000058] -------N----        t58 =    LCL_VAR_ADDR byref  V06 tmp5         
                                                  /--*  t58    byref  
               [000092] ------------        t92 = *  PUTARG_REG byref  REG rcx
                                                  /--*  t92    byref  this in rcx
N004 ( 17, 10) [000061] --CXG-------        t61 = *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise $245
                                                  /--*  t61    ref    
N006 ( 21, 13) [000063] DA-XG-------              *  STORE_LCL_VAR ref    V04 tmp3         d:4

------------ BB04 [022..023) (return), preds={BB02,BB03} succs={}
N001 (  0,  0) [000080] ------------        t80 =    PHI_ARG   ref    V04 tmp3         u:4 $245
N002 (  0,  0) [000079] ------------        t79 =    PHI_ARG   ref    V04 tmp3         u:2 $380
                                                  /--*  t80    ref    
                                                  +--*  t79    ref    
N003 (  0,  0) [000077] ------------        t77 = *  PHI       ref   
                                                  /--*  t77    ref    
N005 (  0,  0) [000078] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:3
N001 (  3,  2) [000056] ------------        t56 =    LCL_VAR   ref    V04 tmp3         u:3 (last use) $381
                                                  /--*  t56    ref    
N002 (  4,  3) [000026] ------------              *  RETURN    ref    $248

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Calculate stack level slots

*************** Finishing PHASE Calculate stack level slots [no changes]

*************** Starting PHASE Linear scan register alloc
Clearing modified regs.

buildIntervals ========

-----------------
LIVENESS:
-----------------
BB01 use def in out
{}
{}
{}
{}
BB02 use def in out
{}
{V03 V04 V08}
{}
{V04}
BB03 use def in out
{}
{V04}
{}
{V04}
BB04 use def in out
{V04}
{}
{V04}
{}
Interval  0: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  0: (V03) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  1: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  1: (V04) ref RefPositions {} physReg:NA Preferences=[allInt]

FP callee save candidate vars: None

floatVarCount = 0; hasLoops = 0, singleExit = 1
TUPLE STYLE DUMP BEFORE LSRA
LSRA Block Sequence: BB01(  1   ) 
BB02(  1   ) 
BB03(  0.25) 
BB04(  1   ) 

BB01 [???..???), preds={} succs={BB02}
=====
  N003. t27             =  CNS_INT   0x7ffc7e4a17a0
  N000. t89             =  PUTARG_REG; t27
  N004. t28             =  CNS_INT   13
  N000. t90             =  PUTARG_REG; t28
  N005.                    CALL help; t89,t90

BB02 [000..02F) -> BB04 (cond), preds={BB01} succs={BB03,BB04}
=====
  N000.                    IL_OFFSET IL offset: 0x0
  N001. t81             =  CNS_INT   null
  N003.                    V06 MEM; t81
  N000.                    IL_OFFSET IL offset: 0xc
  N001.                    CNS_INT   -1
  N003.                    V05 MEM
  N000.                    IL_OFFSET IL offset: 0x14
  N002. t37             =  LCL_VAR_ADDR V00 loc0         
                                                      int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                      ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                      ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
  N000. t91             =  PUTARG_REG; t37
  N004.                    CALL     ; t91
  N000.                    IL_OFFSET IL offset: 0x22
  N001. t41             =  V06 MEM
  N003.                    V03(t46); t41
  N000.                    IL_OFFSET IL offset: 0x22
  N001.                    V03(t47*)
  N003.                    V04(t53); t47*
  N000.                    IL_OFFSET IL offset: 0x22
  N001.                    V04(t48)
  N002.                    CNS_INT   null
  N003.                    NE       ; t48
  N004.                    JTRUE    

BB03 [022..023), preds={BB02} succs={BB04}
=====
  N000.                    IL_OFFSET IL offset: 0x22
  N002. t58             =  LCL_VAR_ADDR V06 tmp5         
  N000. t92             =  PUTARG_REG; t58
  N004. t61             =  CALL     ; t92
  N006.                    V04(t63); t61

BB04 [022..023) (return), preds={BB02,BB03} succs={}
=====
  N001.                    V04(t56*)
  N002.                    RETURN   ; t56*




buildIntervals second part ========

NEW BLOCK BB01
<RefPosition #0   @1   RefTypeBB  BB01 regmask=[] minReg=1>

DefList: {  }
N003 (  2, 10) [000027] ------------              *  CNS_INT   long   0x7ffc7e4a17a0 REG NA $140
Interval  2: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #1   @4   RefTypeDef <Ivl:2> CNS_INT BB01 regmask=[allInt] minReg=1>

DefList: { N003.t27. CNS_INT }
N005 (???,???) [000089] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #2   @5   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #3   @5   RefTypeUse <Ivl:2>  BB01 regmask=[rcx] minReg=1 last fixed>
Interval  3: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #4   @6   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #5   @6   RefTypeDef <Ivl:3> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>

DefList: { N005.t89. PUTARG_REG }
N007 (  1,  1) [000028] ------------              *  CNS_INT   int    13 REG NA $41
Interval  4: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #6   @8   RefTypeDef <Ivl:4> CNS_INT BB01 regmask=[allInt] minReg=1>

DefList: { N005.t89. PUTARG_REG; N007.t28. CNS_INT }
N009 (???,???) [000090] ------------              *  PUTARG_REG int    REG rdx
<RefPosition #7   @9   RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #8   @9   RefTypeUse <Ivl:4>  BB01 regmask=[rdx] minReg=1 last fixed>
Interval  5: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #9   @10  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #10  @10  RefTypeDef <Ivl:5> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>

DefList: { N005.t89. PUTARG_REG; N009.t90. PUTARG_REG }
N011 ( 17, 18) [000029] --CXG-------              *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE REG NA $201
<RefPosition #11  @11  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #12  @11  RefTypeUse <Ivl:3>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #13  @11  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #14  @11  RefTypeUse <Ivl:5>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #15  @12  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #16  @12  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #17  @12  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #18  @12  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #19  @12  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #20  @12  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #21  @12  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
Interval  6: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #22  @12  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #23  @12  RefTypeDef <Ivl:6> CALL BB01 regmask=[rax] minReg=1 fixed>



CHECKING LAST USES for BB01, liveout={}
==============================
use: {}
def: {}

NEW BLOCK BB02


Setting BB01 as the predecessor for determining incoming variable registers of BB02
<RefPosition #24  @13  RefTypeBB  BB02 regmask=[] minReg=1>

DefList: {  }
N015 (???,???) [000082] ------------              *  IL_OFFSET void   IL offset: 0x0 REG NA

DefList: {  }
N017 (  1,  1) [000081] ------------              *  CNS_INT   ref    null REG NA $VN.Null
Interval  7: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #25  @18  RefTypeDef <Ivl:7> CNS_INT BB02 regmask=[allInt] minReg=1>

DefList: { N017.t81. CNS_INT }
N019 (  5,  4) [000073] DA--G-------              *  STORE_LCL_VAR ref   (AX) V06 tmp5          NA REG NA
<RefPosition #26  @19  RefTypeUse <Ivl:7>  BB02 regmask=[allInt] minReg=1 last>

DefList: {  }
N021 (???,???) [000083] ------------              *  IL_OFFSET void   IL offset: 0xc REG NA

DefList: {  }
N023 (  1,  1) [000010] -c----------              *  CNS_INT   int    -1 REG NA $40
Contained
DefList: {  }
N025 (  5,  4) [000012] DA--G-------              *  STORE_LCL_VAR int   (AX) V05 tmp4          NA REG NA

DefList: {  }
N027 (???,???) [000084] ------------              *  IL_OFFSET void   IL offset: 0x14 REG NA

DefList: {  }
N029 (  3,  2) [000037] -------N----              *  LCL_VAR_ADDR byref  V00 loc0          NA
                                                  *    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                  *    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                  *    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6          REG NA
Interval  8: byref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #27  @30  RefTypeDef <Ivl:8> LCL_VAR_ADDR BB02 regmask=[allInt] minReg=1>

DefList: { N029.t37. LCL_VAR_ADDR }
N031 (???,???) [000091] ------------              *  PUTARG_REG byref  REG rcx
<RefPosition #28  @31  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #29  @31  RefTypeUse <Ivl:8>  BB02 regmask=[rcx] minReg=1 last fixed>
Interval  9: byref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #30  @32  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #31  @32  RefTypeDef <Ivl:9> PUTARG_REG BB02 regmask=[rcx] minReg=1 fixed>

DefList: { N031.t91. PUTARG_REG }
N033 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start REG NA $VN.Void
<RefPosition #32  @33  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #33  @33  RefTypeUse <Ivl:9>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #34  @34  RefTypeKill <Reg:rax>  BB02 regmask=[rax] minReg=1>
<RefPosition #35  @34  RefTypeKill <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #36  @34  RefTypeKill <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #37  @34  RefTypeKill <Reg:r8 >  BB02 regmask=[r8] minReg=1>
<RefPosition #38  @34  RefTypeKill <Reg:r9 >  BB02 regmask=[r9] minReg=1>
<RefPosition #39  @34  RefTypeKill <Reg:r10>  BB02 regmask=[r10] minReg=1>
<RefPosition #40  @34  RefTypeKill <Reg:r11>  BB02 regmask=[r11] minReg=1>

DefList: {  }
N035 (???,???) [000085] ------------              *  IL_OFFSET void   IL offset: 0x22 REG NA

DefList: {  }
N037 (  3,  2) [000041] ------------              *  LCL_VAR   ref   (AX) V06 tmp5          NA REG NA $380
Interval 10: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #41  @38  RefTypeDef <Ivl:10> LCL_VAR BB02 regmask=[allInt] minReg=1>

DefList: { N037.t41. LCL_VAR }
N039 (  3,  3) [000046] DA--G-------              *  STORE_LCL_VAR ref    V03 tmp2         d:2 NA REG NA
<RefPosition #42  @39  RefTypeUse <Ivl:10>  BB02 regmask=[allInt] minReg=1 last>
Assigning related <V03/L0> to <I10>
<RefPosition #43  @40  RefTypeDef <Ivl:0 V03> STORE_LCL_VAR BB02 regmask=[allInt] minReg=1 last>

DefList: {  }
N041 (???,???) [000086] ------------              *  IL_OFFSET void   IL offset: 0x22 REG NA

DefList: {  }
N043 (  1,  1) [000047] ------------              *  LCL_VAR   ref    V03 tmp2         u:2 NA (last use) REG NA $380

DefList: {  }
N045 (  5,  4) [000053] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:2 NA REG NA
<RefPosition #44  @45  RefTypeUse <Ivl:0 V03> LCL_VAR BB02 regmask=[allInt] minReg=1 last>
Assigning related <V04/L1> to <V03/L0>
<RefPosition #45  @46  RefTypeDef <Ivl:1 V04> STORE_LCL_VAR BB02 regmask=[allInt] minReg=1 last>

DefList: {  }
N047 (???,???) [000087] ------------              *  IL_OFFSET void   IL offset: 0x22 REG NA

DefList: {  }
N049 (  1,  1) [000048] ------------              *  LCL_VAR   ref    V04 tmp3         u:2 NA REG NA $380

DefList: {  }
N051 (  1,  1) [000049] -c----------              *  CNS_INT   ref    null REG NA $VN.Null
Contained
DefList: {  }
N053 (  3,  3) [000050] J------N----              *  NE        void   REG NA $3c0
<RefPosition #46  @53  RefTypeUse <Ivl:1 V04> LCL_VAR BB02 regmask=[allInt] minReg=1 last>

DefList: {  }
N055 (  5,  5) [000051] ------------              *  JTRUE     void   REG NA



CHECKING LAST USES for BB02, liveout={V04}
==============================
use: {}
def: {V03 V04 V08}

NEW BLOCK BB03


Setting BB02 as the predecessor for determining incoming variable registers of BB03
<RefPosition #47  @57  RefTypeBB  BB03 regmask=[] minReg=1>

DefList: {  }
N059 (???,???) [000088] ------------              *  IL_OFFSET void   IL offset: 0x22 REG NA

DefList: {  }
N061 (  3,  2) [000058] -------N----              *  LCL_VAR_ADDR byref  V06 tmp5          NA REG NA
Interval 11: byref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #48  @62  RefTypeDef <Ivl:11> LCL_VAR_ADDR BB03 regmask=[allInt] minReg=1>

DefList: { N061.t58. LCL_VAR_ADDR }
N063 (???,???) [000092] ------------              *  PUTARG_REG byref  REG rcx
<RefPosition #49  @63  RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #50  @63  RefTypeUse <Ivl:11>  BB03 regmask=[rcx] minReg=1 last fixed>
Interval 12: byref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #51  @64  RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #52  @64  RefTypeDef <Ivl:12> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>

DefList: { N063.t92. PUTARG_REG }
N065 ( 17, 10) [000061] --CXG-------              *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise REG NA $245
<RefPosition #53  @65  RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #54  @65  RefTypeUse <Ivl:12>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #55  @66  RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #56  @66  RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #57  @66  RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1>
<RefPosition #58  @66  RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1>
<RefPosition #59  @66  RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1>
<RefPosition #60  @66  RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1>
<RefPosition #61  @66  RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1>
Interval 13: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #62  @66  RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #63  @66  RefTypeDef <Ivl:13> CALL BB03 regmask=[rax] minReg=1 fixed>

DefList: { N065.t61. CALL }
N067 ( 21, 13) [000063] DA-XG-------              *  STORE_LCL_VAR ref    V04 tmp3         d:4 NA REG NA
<RefPosition #64  @67  RefTypeUse <Ivl:13>  BB03 regmask=[allInt] minReg=1 last>
Assigning related <V04/L1> to <I13>
<RefPosition #65  @68  RefTypeDef <Ivl:1 V04> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1 last>



CHECKING LAST USES for BB03, liveout={V04}
==============================
use: {}
def: {V04}

NEW BLOCK BB04


Setting BB02 as the predecessor for determining incoming variable registers of BB04
<RefPosition #66  @69  RefTypeBB  BB04 regmask=[] minReg=1>

DefList: {  }
N071 (  3,  2) [000056] ------------              *  LCL_VAR   ref    V04 tmp3         u:3 NA (last use) REG NA $381

DefList: {  }
N073 (  4,  3) [000026] ------------              *  RETURN    ref    REG NA $248
<RefPosition #67  @73  RefTypeFixedReg <Reg:rax>  BB04 regmask=[rax] minReg=1>
<RefPosition #68  @73  RefTypeUse <Ivl:1 V04> LCL_VAR BB04 regmask=[rax] minReg=1 last fixed>



CHECKING LAST USES for BB04, liveout={}
==============================
use: {V04}
def: {}

Linear scan intervals BEFORE VALIDATING INTERVALS:
Interval  0: (V03) ref RefPositions {#43@40 #44@45} physReg:NA Preferences=[allInt] RelatedInterval <V04/L1>
Interval  1: (V04) ref RefPositions {#45@46 #46@53 #65@68 #68@73} physReg:NA Preferences=[rax]
Interval  2: long (constant) RefPositions {#1@4 #3@5} physReg:NA Preferences=[rcx]
Interval  3: long RefPositions {#5@6 #12@11} physReg:NA Preferences=[rcx]
Interval  4: int (constant) RefPositions {#6@8 #8@9} physReg:NA Preferences=[rdx]
Interval  5: int RefPositions {#10@10 #14@11} physReg:NA Preferences=[rdx]
Interval  6: long RefPositions {#23@12} physReg:NA Preferences=[rax]
Interval  7: ref (constant) RefPositions {#25@18 #26@19} physReg:NA Preferences=[allInt]
Interval  8: byref RefPositions {#27@30 #29@31} physReg:NA Preferences=[rcx]
Interval  9: byref RefPositions {#31@32 #33@33} physReg:NA Preferences=[rcx]
Interval 10: ref RefPositions {#41@38 #42@39} physReg:NA Preferences=[allInt] RelatedInterval <V03/L0>
Interval 11: byref RefPositions {#48@62 #50@63} physReg:NA Preferences=[rcx]
Interval 12: byref RefPositions {#52@64 #54@65} physReg:NA Preferences=[rcx]
Interval 13: ref RefPositions {#63@66 #64@67} physReg:NA Preferences=[rax] RelatedInterval <V04/L1>

------------
REFPOSITIONS BEFORE VALIDATING INTERVALS: 
------------
<RefPosition #0   @1   RefTypeBB  BB01 regmask=[] minReg=1>
<RefPosition #1   @4   RefTypeDef <Ivl:2> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #2   @5   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #3   @5   RefTypeUse <Ivl:2>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #4   @6   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #5   @6   RefTypeDef <Ivl:3> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #6   @8   RefTypeDef <Ivl:4> CNS_INT BB01 regmask=[rdx] minReg=1>
<RefPosition #7   @9   RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #8   @9   RefTypeUse <Ivl:4>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #9   @10  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #10  @10  RefTypeDef <Ivl:5> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>
<RefPosition #11  @11  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #12  @11  RefTypeUse <Ivl:3>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #13  @11  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #14  @11  RefTypeUse <Ivl:5>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #15  @12  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #16  @12  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #17  @12  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #18  @12  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #19  @12  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #20  @12  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #21  @12  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #22  @12  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #23  @12  RefTypeDef <Ivl:6> CALL BB01 regmask=[rax] minReg=1 last fixed local>
<RefPosition #24  @13  RefTypeBB  BB02 regmask=[] minReg=1>
<RefPosition #25  @18  RefTypeDef <Ivl:7> CNS_INT BB02 regmask=[allInt] minReg=1>
<RefPosition #26  @19  RefTypeUse <Ivl:7>  BB02 regmask=[allInt] minReg=1 last>
<RefPosition #27  @30  RefTypeDef <Ivl:8> LCL_VAR_ADDR BB02 regmask=[rcx] minReg=1>
<RefPosition #28  @31  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #29  @31  RefTypeUse <Ivl:8>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #30  @32  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #31  @32  RefTypeDef <Ivl:9> PUTARG_REG BB02 regmask=[rcx] minReg=1 fixed>
<RefPosition #32  @33  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #33  @33  RefTypeUse <Ivl:9>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #34  @34  RefTypeKill <Reg:rax>  BB02 regmask=[rax] minReg=1 last>
<RefPosition #35  @34  RefTypeKill <Reg:rcx>  BB02 regmask=[rcx] minReg=1 last>
<RefPosition #36  @34  RefTypeKill <Reg:rdx>  BB02 regmask=[rdx] minReg=1 last>
<RefPosition #37  @34  RefTypeKill <Reg:r8 >  BB02 regmask=[r8] minReg=1 last>
<RefPosition #38  @34  RefTypeKill <Reg:r9 >  BB02 regmask=[r9] minReg=1 last>
<RefPosition #39  @34  RefTypeKill <Reg:r10>  BB02 regmask=[r10] minReg=1 last>
<RefPosition #40  @34  RefTypeKill <Reg:r11>  BB02 regmask=[r11] minReg=1 last>
<RefPosition #41  @38  RefTypeDef <Ivl:10> LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #42  @39  RefTypeUse <Ivl:10>  BB02 regmask=[allInt] minReg=1 last>
<RefPosition #43  @40  RefTypeDef <Ivl:0 V03> STORE_LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #44  @45  RefTypeUse <Ivl:0 V03> LCL_VAR BB02 regmask=[allInt] minReg=1 last>
<RefPosition #45  @46  RefTypeDef <Ivl:1 V04> STORE_LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #46  @53  RefTypeUse <Ivl:1 V04> LCL_VAR BB02 regmask=[allInt] minReg=1 regOptional>
<RefPosition #47  @57  RefTypeBB  BB03 regmask=[] minReg=1>
<RefPosition #48  @62  RefTypeDef <Ivl:11> LCL_VAR_ADDR BB03 regmask=[rcx] minReg=1>
<RefPosition #49  @63  RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #50  @63  RefTypeUse <Ivl:11>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #51  @64  RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #52  @64  RefTypeDef <Ivl:12> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>
<RefPosition #53  @65  RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #54  @65  RefTypeUse <Ivl:12>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #55  @66  RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #56  @66  RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #57  @66  RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #58  @66  RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #59  @66  RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #60  @66  RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #61  @66  RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #62  @66  RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #63  @66  RefTypeDef <Ivl:13> CALL BB03 regmask=[rax] minReg=1 fixed>
<RefPosition #64  @67  RefTypeUse <Ivl:13>  BB03 regmask=[allInt] minReg=1 last>
<RefPosition #65  @68  RefTypeDef <Ivl:1 V04> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #66  @69  RefTypeBB  BB04 regmask=[] minReg=1>
<RefPosition #67  @73  RefTypeFixedReg <Reg:rax>  BB04 regmask=[rax] minReg=1>
<RefPosition #68  @73  RefTypeUse <Ivl:1 V04> LCL_VAR BB04 regmask=[rax] minReg=1 last fixed>
-----------------
<RefPosition #43  @40  RefTypeDef <Ivl:0 V03> STORE_LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #44  @45  RefTypeUse <Ivl:0 V03> LCL_VAR BB02 regmask=[allInt] minReg=1 last>
-----------------
<RefPosition #45  @46  RefTypeDef <Ivl:1 V04> STORE_LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #46  @53  RefTypeUse <Ivl:1 V04> LCL_VAR BB02 regmask=[allInt] minReg=1 regOptional>
<RefPosition #65  @68  RefTypeDef <Ivl:1 V04> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #68  @73  RefTypeUse <Ivl:1 V04> LCL_VAR BB04 regmask=[rax] minReg=1 last fixed>
TUPLE STYLE DUMP WITH REF POSITIONS
Incoming Parameters: 
BB01 [???..???), preds={} succs={BB02}
=====
  N003.                    CNS_INT   0x7ffc7e4a17a0
        Def:<I2>(#1)
  N005.                    PUTARG_REG
                               Use:<I2>(#3) Fixed:rcx(#2) *
        Def:<I3>(#5) rcx
  N007.                    CNS_INT   13
        Def:<I4>(#6)
  N009.                    PUTARG_REG
                               Use:<I4>(#8) Fixed:rdx(#7) *
        Def:<I5>(#10) rdx
  N011.                    CALL help
                               Use:<I3>(#12) Fixed:rcx(#11) *
                               Use:<I5>(#14) Fixed:rdx(#13) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I6>(#23) rax LocalDefUse *

BB02 [000..02F) -> BB04 (cond), preds={BB01} succs={BB03,BB04}
=====
  N015.                    IL_OFFSET IL offset: 0x0
  N017.                    CNS_INT   null
        Def:<I7>(#25)
  N019.                    V06 MEM
                               Use:<I7>(#26) *
  N021.                    IL_OFFSET IL offset: 0xc
  N023.                    CNS_INT   -1
  N025.                    V05 MEM
  N027.                    IL_OFFSET IL offset: 0x14
  N029.                    LCL_VAR_ADDR V00 loc0          NA
                                                      int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                      ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                      ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
        Def:<I8>(#27)
  N031.                    PUTARG_REG
                               Use:<I8>(#29) Fixed:rcx(#28) *
        Def:<I9>(#31) rcx
  N033.                    CALL     
                               Use:<I9>(#33) Fixed:rcx(#32) *
        Kill: rax rcx rdx r8 r9 r10 r11 
  N035.                    IL_OFFSET IL offset: 0x22
  N037.                    V06 MEM
        Def:<I10>(#41) Pref:<V03/L0>
  N039.                    V03(L0)
                               Use:<I10>(#42) *
        Def:<V03/L0>(#43) Pref:<V04/L1>
  N041.                    IL_OFFSET IL offset: 0x22
  N043.                    V03(L0)
  N045.                    V04(L1)
                               Use:<V03/L0>(#44) *
        Def:<V04/L1>(#45)
  N047.                    IL_OFFSET IL offset: 0x22
  N049.                    V04(L1)
  N051.                    CNS_INT   null
  N053.                    NE       
                               Use:<V04/L1>(#46)
  N055.                    JTRUE    

BB03 [022..023), preds={BB02} succs={BB04}
=====
  N059.                    IL_OFFSET IL offset: 0x22
  N061.                    LCL_VAR_ADDR V06 tmp5          NA
        Def:<I11>(#48)
  N063.                    PUTARG_REG
                               Use:<I11>(#50) Fixed:rcx(#49) *
        Def:<I12>(#52) rcx
  N065.                    CALL     
                               Use:<I12>(#54) Fixed:rcx(#53) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I13>(#63) rax Pref:<V04/L1>
  N067.                    V04(L1)
                               Use:<I13>(#64) *
        Def:<V04/L1>(#65)

BB04 [022..023) (return), preds={BB02,BB03} succs={}
=====
  N071.                    V04(L1)
  N073.                    RETURN   
                               Use:<V04/L1>(#68) Fixed:rax(#67) *




Linear scan intervals after buildIntervals:
Interval  0: (V03) ref RefPositions {#43@40 #44@45} physReg:NA Preferences=[allInt] RelatedInterval <V04/L1>
Interval  1: (V04) ref RefPositions {#45@46 #46@53 #65@68 #68@73} physReg:NA Preferences=[rax]
Interval  2: long (constant) RefPositions {#1@4 #3@5} physReg:NA Preferences=[rcx]
Interval  3: long RefPositions {#5@6 #12@11} physReg:NA Preferences=[rcx]
Interval  4: int (constant) RefPositions {#6@8 #8@9} physReg:NA Preferences=[rdx]
Interval  5: int RefPositions {#10@10 #14@11} physReg:NA Preferences=[rdx]
Interval  6: long RefPositions {#23@12} physReg:NA Preferences=[rax]
Interval  7: ref (constant) RefPositions {#25@18 #26@19} physReg:NA Preferences=[allInt]
Interval  8: byref RefPositions {#27@30 #29@31} physReg:NA Preferences=[rcx]
Interval  9: byref RefPositions {#31@32 #33@33} physReg:NA Preferences=[rcx]
Interval 10: ref RefPositions {#41@38 #42@39} physReg:NA Preferences=[allInt] RelatedInterval <V03/L0>
Interval 11: byref RefPositions {#48@62 #50@63} physReg:NA Preferences=[rcx]
Interval 12: byref RefPositions {#52@64 #54@65} physReg:NA Preferences=[rcx]
Interval 13: ref RefPositions {#63@66 #64@67} physReg:NA Preferences=[rax] RelatedInterval <V04/L1>

*************** In LinearScan::allocateRegisters()

Linear scan intervals before allocateRegisters:
Interval  0: (V03) ref RefPositions {#43@40 #44@45} physReg:NA Preferences=[allInt] RelatedInterval <V04/L1>
Interval  1: (V04) ref RefPositions {#45@46 #46@53 #65@68 #68@73} physReg:NA Preferences=[rax]
Interval  2: long (constant) RefPositions {#1@4 #3@5} physReg:NA Preferences=[rcx]
Interval  3: long RefPositions {#5@6 #12@11} physReg:NA Preferences=[rcx]
Interval  4: int (constant) RefPositions {#6@8 #8@9} physReg:NA Preferences=[rdx]
Interval  5: int RefPositions {#10@10 #14@11} physReg:NA Preferences=[rdx]
Interval  6: long RefPositions {#23@12} physReg:NA Preferences=[rax]
Interval  7: ref (constant) RefPositions {#25@18 #26@19} physReg:NA Preferences=[allInt]
Interval  8: byref RefPositions {#27@30 #29@31} physReg:NA Preferences=[rcx]
Interval  9: byref RefPositions {#31@32 #33@33} physReg:NA Preferences=[rcx]
Interval 10: ref RefPositions {#41@38 #42@39} physReg:NA Preferences=[allInt] RelatedInterval <V03/L0>
Interval 11: byref RefPositions {#48@62 #50@63} physReg:NA Preferences=[rcx]
Interval 12: byref RefPositions {#52@64 #54@65} physReg:NA Preferences=[rcx]
Interval 13: ref RefPositions {#63@66 #64@67} physReg:NA Preferences=[rax] RelatedInterval <V04/L1>

------------
REFPOSITIONS BEFORE ALLOCATION: 
------------
<RefPosition #0   @1   RefTypeBB  BB01 regmask=[] minReg=1>
<RefPosition #1   @4   RefTypeDef <Ivl:2> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #2   @5   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #3   @5   RefTypeUse <Ivl:2>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #4   @6   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #5   @6   RefTypeDef <Ivl:3> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #6   @8   RefTypeDef <Ivl:4> CNS_INT BB01 regmask=[rdx] minReg=1>
<RefPosition #7   @9   RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #8   @9   RefTypeUse <Ivl:4>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #9   @10  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #10  @10  RefTypeDef <Ivl:5> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>
<RefPosition #11  @11  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #12  @11  RefTypeUse <Ivl:3>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #13  @11  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #14  @11  RefTypeUse <Ivl:5>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #15  @12  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #16  @12  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #17  @12  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #18  @12  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #19  @12  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #20  @12  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #21  @12  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #22  @12  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #23  @12  RefTypeDef <Ivl:6> CALL BB01 regmask=[rax] minReg=1 last fixed local>
<RefPosition #24  @13  RefTypeBB  BB02 regmask=[] minReg=1>
<RefPosition #25  @18  RefTypeDef <Ivl:7> CNS_INT BB02 regmask=[allInt] minReg=1>
<RefPosition #26  @19  RefTypeUse <Ivl:7>  BB02 regmask=[allInt] minReg=1 last>
<RefPosition #27  @30  RefTypeDef <Ivl:8> LCL_VAR_ADDR BB02 regmask=[rcx] minReg=1>
<RefPosition #28  @31  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #29  @31  RefTypeUse <Ivl:8>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #30  @32  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #31  @32  RefTypeDef <Ivl:9> PUTARG_REG BB02 regmask=[rcx] minReg=1 fixed>
<RefPosition #32  @33  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #33  @33  RefTypeUse <Ivl:9>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #34  @34  RefTypeKill <Reg:rax>  BB02 regmask=[rax] minReg=1 last>
<RefPosition #35  @34  RefTypeKill <Reg:rcx>  BB02 regmask=[rcx] minReg=1 last>
<RefPosition #36  @34  RefTypeKill <Reg:rdx>  BB02 regmask=[rdx] minReg=1 last>
<RefPosition #37  @34  RefTypeKill <Reg:r8 >  BB02 regmask=[r8] minReg=1 last>
<RefPosition #38  @34  RefTypeKill <Reg:r9 >  BB02 regmask=[r9] minReg=1 last>
<RefPosition #39  @34  RefTypeKill <Reg:r10>  BB02 regmask=[r10] minReg=1 last>
<RefPosition #40  @34  RefTypeKill <Reg:r11>  BB02 regmask=[r11] minReg=1 last>
<RefPosition #41  @38  RefTypeDef <Ivl:10> LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #42  @39  RefTypeUse <Ivl:10>  BB02 regmask=[allInt] minReg=1 last>
<RefPosition #43  @40  RefTypeDef <Ivl:0 V03> STORE_LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #44  @45  RefTypeUse <Ivl:0 V03> LCL_VAR BB02 regmask=[allInt] minReg=1 last>
<RefPosition #45  @46  RefTypeDef <Ivl:1 V04> STORE_LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #46  @53  RefTypeUse <Ivl:1 V04> LCL_VAR BB02 regmask=[allInt] minReg=1 regOptional>
<RefPosition #47  @57  RefTypeBB  BB03 regmask=[] minReg=1>
<RefPosition #48  @62  RefTypeDef <Ivl:11> LCL_VAR_ADDR BB03 regmask=[rcx] minReg=1>
<RefPosition #49  @63  RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #50  @63  RefTypeUse <Ivl:11>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #51  @64  RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #52  @64  RefTypeDef <Ivl:12> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>
<RefPosition #53  @65  RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #54  @65  RefTypeUse <Ivl:12>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #55  @66  RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #56  @66  RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #57  @66  RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #58  @66  RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #59  @66  RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #60  @66  RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #61  @66  RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #62  @66  RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #63  @66  RefTypeDef <Ivl:13> CALL BB03 regmask=[rax] minReg=1 fixed>
<RefPosition #64  @67  RefTypeUse <Ivl:13>  BB03 regmask=[allInt] minReg=1 last>
<RefPosition #65  @68  RefTypeDef <Ivl:1 V04> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #66  @69  RefTypeBB  BB04 regmask=[] minReg=1>
<RefPosition #67  @73  RefTypeFixedReg <Reg:rax>  BB04 regmask=[rax] minReg=1>
<RefPosition #68  @73  RefTypeUse <Ivl:1 V04> LCL_VAR BB04 regmask=[rax] minReg=1 last fixed>

VAR REFPOSITIONS BEFORE ALLOCATION
--- V00
--- V01
--- V02
--- V03  (Interval 0)
<RefPosition #43  @40  RefTypeDef <Ivl:0 V03> STORE_LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #44  @45  RefTypeUse <Ivl:0 V03> LCL_VAR BB02 regmask=[allInt] minReg=1 last>
--- V04  (Interval 1)
<RefPosition #45  @46  RefTypeDef <Ivl:1 V04> STORE_LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #46  @53  RefTypeUse <Ivl:1 V04> LCL_VAR BB02 regmask=[allInt] minReg=1 regOptional>
<RefPosition #65  @68  RefTypeDef <Ivl:1 V04> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #68  @73  RefTypeUse <Ivl:1 V04> LCL_VAR BB04 regmask=[rax] minReg=1 last fixed>
--- V05
--- V06
--- V07
--- V08



Allocating Registers
--------------------
The following table has one or more rows for each RefPosition that is handled during allocation.
The first column provides the basic information about the RefPosition, with its type (e.g. Def,
Use, Fixd) followed by a '*' if it is a last use, and a 'D' if it is delayRegFree, and then the
action taken during allocation (e.g. Alloc a new register, or Keep an existing one).
The subsequent columns show the Interval occupying each register, if any, followed by 'a' if it is
active, a 'p' if it is a large vector that has been partially spilled, and 'i'if it is inactive.
Columns are only printed up to the last modifed register, which may increase during allocation,
in which case additional columns will appear.  
Registers which are not marked modified have ---- in their column.

------------------------------+----+----+----+----+----+----+----+----+----+
LocRP# Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
------------------------------+----+----+----+----+----+----+----+----+----+
                              |    |    |    |    |    |    |    |    |    |
 1.#0  BB1 PredBB0            |    |    |    |    |    |    |    |    |    |
 4.#1  C2   Def    Alloc rcx  |    |C2 a|    |    |    |    |    |    |    |
 5.#2  rcx  Fixd   Keep  rcx  |    |C2 a|    |    |    |    |    |    |    |
 5.#3  C2   Use *  Keep  rcx  |    |C2 a|    |    |    |    |    |    |    |
 6.#4  rcx  Fixd   Keep  rcx  |    |    |    |    |    |    |    |    |    |
 6.#5  I3   Def    Alloc rcx  |    |I3 a|    |    |    |    |    |    |    |
 8.#6  C4   Def    Alloc rdx  |    |I3 a|C4 a|    |    |    |    |    |    |
 9.#7  rdx  Fixd   Keep  rdx  |    |I3 a|C4 a|    |    |    |    |    |    |
 9.#8  C4   Use *  Keep  rdx  |    |I3 a|C4 a|    |    |    |    |    |    |
10.#9  rdx  Fixd   Keep  rdx  |    |I3 a|    |    |    |    |    |    |    |
10.#10 I5   Def    Alloc rdx  |    |I3 a|I5 a|    |    |    |    |    |    |
11.#11 rcx  Fixd   Keep  rcx  |    |I3 a|I5 a|    |    |    |    |    |    |
11.#12 I3   Use *  Keep  rcx  |    |I3 a|I5 a|    |    |    |    |    |    |
11.#13 rdx  Fixd   Keep  rdx  |    |I3 a|I5 a|    |    |    |    |    |    |
11.#14 I5   Use *  Keep  rdx  |    |I3 a|I5 a|    |    |    |    |    |    |
12.#15 rax  Kill   Keep  rax  |    |    |    |    |    |    |    |    |    |
12.#16 rcx  Kill   Keep  rcx  |    |    |    |    |    |    |    |    |    |
12.#17 rdx  Kill   Keep  rdx  |    |    |    |    |    |    |    |    |    |
12.#18 r8   Kill   Keep  r8   |    |    |    |    |    |    |    |    |    |
12.#19 r9   Kill   Keep  r9   |    |    |    |    |    |    |    |    |    |
12.#20 r10  Kill   Keep  r10  |    |    |    |    |    |    |    |    |    |
12.#21 r11  Kill   Keep  r11  |    |    |    |    |    |    |    |    |    |
12.#22 rax  Fixd   Keep  rax  |    |    |    |    |    |    |    |    |    |
12.#23 I6   Def *  Alloc rax  |I6 a|    |    |    |    |    |    |    |    |
------------------------------+----+----+----+----+----+----+----+----+----+
LocRP# Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
------------------------------+----+----+----+----+----+----+----+----+----+
13.#24 BB2 PredBB1            |    |    |    |    |    |    |    |    |    |
18.#25 C7   Def    Alloc rcx  |    |C7 a|    |    |    |    |    |    |    |
19.#26 C7   Use *  Keep  rcx  |    |C7 a|    |    |    |    |    |    |    |
30.#27 I8   Def    Alloc rcx  |    |I8 a|    |    |    |    |    |    |    |
31.#28 rcx  Fixd   Keep  rcx  |    |I8 a|    |    |    |    |    |    |    |
31.#29 I8   Use *  Keep  rcx  |    |I8 a|    |    |    |    |    |    |    |
32.#30 rcx  Fixd   Keep  rcx  |    |    |    |    |    |    |    |    |    |
32.#31 I9   Def    Alloc rcx  |    |I9 a|    |    |    |    |    |    |    |
33.#32 rcx  Fixd   Keep  rcx  |    |I9 a|    |    |    |    |    |    |    |
33.#33 I9   Use *  Keep  rcx  |    |I9 a|    |    |    |    |    |    |    |
34.#34 rax  Kill   Keep  rax  |    |    |    |    |    |    |    |    |    |
34.#35 rcx  Kill   Keep  rcx  |    |    |    |    |    |    |    |    |    |
34.#36 rdx  Kill   Keep  rdx  |    |    |    |    |    |    |    |    |    |
34.#37 r8   Kill   Keep  r8   |    |    |    |    |    |    |    |    |    |
34.#38 r9   Kill   Keep  r9   |    |    |    |    |    |    |    |    |    |
34.#39 r10  Kill   Keep  r10  |    |    |    |    |    |    |    |    |    |
34.#40 r11  Kill   Keep  r11  |    |    |    |    |    |    |    |    |    |
38.#41 I10  Def    Alloc rax  |I10a|    |    |    |    |    |    |    |    |
39.#42 I10  Use *  Keep  rax  |I10a|    |    |    |    |    |    |    |    |
40.#43 V3   Def    Alloc rax  |V3 a|    |    |    |    |    |    |    |    |
45.#44 V3   Use *  Keep  rax  |V3 a|    |    |    |    |    |    |    |    |
46.#45 V4   Def    Alloc rax  |V4 a|    |    |    |    |    |    |    |    |
53.#46 V4   Use    Keep  rax  |V4 a|    |    |    |    |    |    |    |    |
------------------------------+----+----+----+----+----+----+----+----+----+
LocRP# Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
------------------------------+----+----+----+----+----+----+----+----+----+
57.#47 BB3 PredBB2            |V4 i|    |    |    |    |    |    |    |    |
62.#48 I11  Def    Alloc rcx  |V4 i|I11a|    |    |    |    |    |    |    |
63.#49 rcx  Fixd   Keep  rcx  |V4 i|I11a|    |    |    |    |    |    |    |
63.#50 I11  Use *  Keep  rcx  |V4 i|I11a|    |    |    |    |    |    |    |
64.#51 rcx  Fixd   Keep  rcx  |V4 i|    |    |    |    |    |    |    |    |
64.#52 I12  Def    Alloc rcx  |V4 i|I12a|    |    |    |    |    |    |    |
65.#53 rcx  Fixd   Keep  rcx  |V4 i|I12a|    |    |    |    |    |    |    |
65.#54 I12  Use *  Keep  rcx  |V4 i|I12a|    |    |    |    |    |    |    |
66.#55 rax  Kill   Keep  rax  |    |    |    |    |    |    |    |    |    |
66.#56 rcx  Kill   Keep  rcx  |    |    |    |    |    |    |    |    |    |
66.#57 rdx  Kill   Keep  rdx  |    |    |    |    |    |    |    |    |    |
66.#58 r8   Kill   Keep  r8   |    |    |    |    |    |    |    |    |    |
66.#59 r9   Kill   Keep  r9   |    |    |    |    |    |    |    |    |    |
66.#60 r10  Kill   Keep  r10  |    |    |    |    |    |    |    |    |    |
66.#61 r11  Kill   Keep  r11  |    |    |    |    |    |    |    |    |    |
66.#62 rax  Fixd   Keep  rax  |    |    |    |    |    |    |    |    |    |
66.#63 I13  Def    Alloc rax  |I13a|    |    |    |    |    |    |    |    |
67.#64 I13  Use *  Keep  rax  |I13a|    |    |    |    |    |    |    |    |
68.#65 V4   Def    Alloc rax  |V4 a|    |    |    |    |    |    |    |    |
------------------------------+----+----+----+----+----+----+----+----+----+
LocRP# Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
------------------------------+----+----+----+----+----+----+----+----+----+
69.#66 BB4 PredBB2            |V4 a|    |    |    |    |    |    |    |    |
73.#67 rax  Fixd   Keep  rax  |V4 a|    |    |    |    |    |    |    |    |
73.#68 V4   Use *  Keep  rax  |    |    |    |    |    |    |    |    |    |

------------
REFPOSITIONS AFTER ALLOCATION: 
------------
<RefPosition #0   @1   RefTypeBB  BB01 regmask=[] minReg=1>
<RefPosition #1   @4   RefTypeDef <Ivl:2> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #2   @5   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #3   @5   RefTypeUse <Ivl:2>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #4   @6   RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #5   @6   RefTypeDef <Ivl:3> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #6   @8   RefTypeDef <Ivl:4> CNS_INT BB01 regmask=[rdx] minReg=1>
<RefPosition #7   @9   RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #8   @9   RefTypeUse <Ivl:4>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #9   @10  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #10  @10  RefTypeDef <Ivl:5> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>
<RefPosition #11  @11  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #12  @11  RefTypeUse <Ivl:3>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #13  @11  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #14  @11  RefTypeUse <Ivl:5>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #15  @12  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #16  @12  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #17  @12  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #18  @12  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #19  @12  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #20  @12  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #21  @12  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #22  @12  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #23  @12  RefTypeDef <Ivl:6> CALL BB01 regmask=[rax] minReg=1 last fixed local>
<RefPosition #24  @13  RefTypeBB  BB02 regmask=[] minReg=1>
<RefPosition #25  @18  RefTypeDef <Ivl:7> CNS_INT BB02 regmask=[rcx] minReg=1>
<RefPosition #26  @19  RefTypeUse <Ivl:7>  BB02 regmask=[rcx] minReg=1 last>
<RefPosition #27  @30  RefTypeDef <Ivl:8> LCL_VAR_ADDR BB02 regmask=[rcx] minReg=1>
<RefPosition #28  @31  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #29  @31  RefTypeUse <Ivl:8>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #30  @32  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #31  @32  RefTypeDef <Ivl:9> PUTARG_REG BB02 regmask=[rcx] minReg=1 fixed>
<RefPosition #32  @33  RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #33  @33  RefTypeUse <Ivl:9>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #34  @34  RefTypeKill <Reg:rax>  BB02 regmask=[rax] minReg=1 last>
<RefPosition #35  @34  RefTypeKill <Reg:rcx>  BB02 regmask=[rcx] minReg=1 last>
<RefPosition #36  @34  RefTypeKill <Reg:rdx>  BB02 regmask=[rdx] minReg=1 last>
<RefPosition #37  @34  RefTypeKill <Reg:r8 >  BB02 regmask=[r8] minReg=1 last>
<RefPosition #38  @34  RefTypeKill <Reg:r9 >  BB02 regmask=[r9] minReg=1 last>
<RefPosition #39  @34  RefTypeKill <Reg:r10>  BB02 regmask=[r10] minReg=1 last>
<RefPosition #40  @34  RefTypeKill <Reg:r11>  BB02 regmask=[r11] minReg=1 last>
<RefPosition #41  @38  RefTypeDef <Ivl:10> LCL_VAR BB02 regmask=[rax] minReg=1>
<RefPosition #42  @39  RefTypeUse <Ivl:10>  BB02 regmask=[rax] minReg=1 last>
<RefPosition #43  @40  RefTypeDef <Ivl:0 V03> STORE_LCL_VAR BB02 regmask=[rax] minReg=1>
<RefPosition #44  @45  RefTypeUse <Ivl:0 V03> LCL_VAR BB02 regmask=[rax] minReg=1 last>
<RefPosition #45  @46  RefTypeDef <Ivl:1 V04> STORE_LCL_VAR BB02 regmask=[rax] minReg=1>
<RefPosition #46  @53  RefTypeUse <Ivl:1 V04> LCL_VAR BB02 regmask=[rax] minReg=1 regOptional>
<RefPosition #47  @57  RefTypeBB  BB03 regmask=[] minReg=1>
<RefPosition #48  @62  RefTypeDef <Ivl:11> LCL_VAR_ADDR BB03 regmask=[rcx] minReg=1>
<RefPosition #49  @63  RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #50  @63  RefTypeUse <Ivl:11>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #51  @64  RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #52  @64  RefTypeDef <Ivl:12> PUTARG_REG BB03 regmask=[rcx] minReg=1 fixed>
<RefPosition #53  @65  RefTypeFixedReg <Reg:rcx>  BB03 regmask=[rcx] minReg=1>
<RefPosition #54  @65  RefTypeUse <Ivl:12>  BB03 regmask=[rcx] minReg=1 last fixed>
<RefPosition #55  @66  RefTypeKill <Reg:rax>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #56  @66  RefTypeKill <Reg:rcx>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #57  @66  RefTypeKill <Reg:rdx>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #58  @66  RefTypeKill <Reg:r8 >  BB03 regmask=[r8] minReg=1 last>
<RefPosition #59  @66  RefTypeKill <Reg:r9 >  BB03 regmask=[r9] minReg=1 last>
<RefPosition #60  @66  RefTypeKill <Reg:r10>  BB03 regmask=[r10] minReg=1 last>
<RefPosition #61  @66  RefTypeKill <Reg:r11>  BB03 regmask=[r11] minReg=1 last>
<RefPosition #62  @66  RefTypeFixedReg <Reg:rax>  BB03 regmask=[rax] minReg=1>
<RefPosition #63  @66  RefTypeDef <Ivl:13> CALL BB03 regmask=[rax] minReg=1 fixed>
<RefPosition #64  @67  RefTypeUse <Ivl:13>  BB03 regmask=[rax] minReg=1 last>
<RefPosition #65  @68  RefTypeDef <Ivl:1 V04> STORE_LCL_VAR BB03 regmask=[rax] minReg=1>
<RefPosition #66  @69  RefTypeBB  BB04 regmask=[] minReg=1>
<RefPosition #67  @73  RefTypeFixedReg <Reg:rax>  BB04 regmask=[rax] minReg=1>
<RefPosition #68  @73  RefTypeUse <Ivl:1 V04> LCL_VAR BB04 regmask=[rax] minReg=1 last fixed>

VAR REFPOSITIONS AFTER ALLOCATION
--- V00
--- V01
--- V02
--- V03  (Interval 0)
<RefPosition #43  @40  RefTypeDef <Ivl:0 V03> STORE_LCL_VAR BB02 regmask=[rax] minReg=1>
<RefPosition #44  @45  RefTypeUse <Ivl:0 V03> LCL_VAR BB02 regmask=[rax] minReg=1 last>
--- V04  (Interval 1)
<RefPosition #45  @46  RefTypeDef <Ivl:1 V04> STORE_LCL_VAR BB02 regmask=[rax] minReg=1>
<RefPosition #46  @53  RefTypeUse <Ivl:1 V04> LCL_VAR BB02 regmask=[rax] minReg=1 regOptional>
<RefPosition #65  @68  RefTypeDef <Ivl:1 V04> STORE_LCL_VAR BB03 regmask=[rax] minReg=1>
<RefPosition #68  @73  RefTypeUse <Ivl:1 V04> LCL_VAR BB04 regmask=[rax] minReg=1 last fixed>
--- V05
--- V06
--- V07
--- V08

Active intervals at end of allocation:

-----------------------
RESOLVING BB BOUNDARIES
-----------------------
Resolution Candidates: {V04}
Has Critical Edges

Prior to Resolution

BB01
use def in out
{}
{}
{}
{}
Var=Reg beg of BB01: none
Var=Reg end of BB01: none

BB02
use def in out
{}
{V03 V04 V08}
{}
{V04}
Var=Reg beg of BB02: none
Var=Reg end of BB02: V04=rax 

BB03
use def in out
{}
{V04}
{}
{V04}
Var=Reg beg of BB03: none
Var=Reg end of BB03: V04=rax 

BB04
use def in out
{V04}
{}
{V04}
{}
Var=Reg beg of BB04: V04=rax 
Var=Reg end of BB04: none


RESOLVING EDGES
Trees after linear scan register allocator (LSRA)

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0001]  1                             1       [???..???)                                     i internal label target hascall LIR 
BB02 [0000]  1       BB01                  1       [000..02F)-> BB04 ( cond )                     i hascall gcsafe LIR 
BB03 [0005]  1       BB02                  0.25    [022..023)                                     i hascall gcsafe LIR 
BB04 [0006]  2       BB02,BB03             1       [022..023)        (return)                     i label target gcsafe LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [???..???), preds={} succs={BB02}
N003 (  2, 10) [000027] ------------        t27 =    CNS_INT   long   0x7ffc7e4a17a0 REG rcx $140
                                                  /--*  t27    long   
N005 (???,???) [000089] ------------        t89 = *  PUTARG_REG long   REG rcx
N007 (  1,  1) [000028] ------------        t28 =    CNS_INT   int    13 REG rdx $41
                                                  /--*  t28    int    
N009 (???,???) [000090] ------------        t90 = *  PUTARG_REG int    REG rdx
                                                  /--*  t89    long   arg0 in rcx
                                                  +--*  t90    int    arg1 in rdx
N011 ( 17, 18) [000029] --CXG-------        t29 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE REG rax $201

------------ BB02 [000..02F) -> BB04 (cond), preds={BB01} succs={BB03,BB04}
N015 (???,???) [000082] ------------                 IL_OFFSET void   IL offset: 0x0 REG NA
N017 (  1,  1) [000081] ------------        t81 =    CNS_INT   ref    null REG rcx $VN.Null
                                                  /--*  t81    ref    
N019 (  5,  4) [000073] DA--G-------              *  STORE_LCL_VAR ref   (AX) V06 tmp5          NA REG NA
N021 (???,???) [000083] ------------                 IL_OFFSET void   IL offset: 0xc REG NA
N023 (  1,  1) [000010] -c----------        t10 =    CNS_INT   int    -1 REG NA $40
                                                  /--*  t10    int    
N025 (  5,  4) [000012] DA--G-------              *  STORE_LCL_VAR int   (AX) V05 tmp4          NA REG NA
N027 (???,???) [000084] ------------                 IL_OFFSET void   IL offset: 0x14 REG NA
N029 (  3,  2) [000037] -------N----        t37 =    LCL_VAR_ADDR byref  V00 loc0          rcx
                                                  *    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                  *    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                  *    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6          REG rcx
                                                  /--*  t37    byref  
N031 (???,???) [000091] ------------        t91 = *  PUTARG_REG byref  REG rcx
                                                  /--*  t91    byref  arg0 in rcx
N033 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start REG NA $VN.Void
N035 (???,???) [000085] ------------                 IL_OFFSET void   IL offset: 0x22 REG NA
N037 (  3,  2) [000041] ------------        t41 =    LCL_VAR   ref   (AX) V06 tmp5          rax REG rax $380
                                                  /--*  t41    ref    
N039 (  3,  3) [000046] DA--G-------              *  STORE_LCL_VAR ref    V03 tmp2         d:2 rax REG rax
N041 (???,???) [000086] ------------                 IL_OFFSET void   IL offset: 0x22 REG NA
N043 (  1,  1) [000047] ------------        t47 =    LCL_VAR   ref    V03 tmp2         u:2 rax (last use) REG rax $380
                                                  /--*  t47    ref    
N045 (  5,  4) [000053] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:2 rax REG rax
N047 (???,???) [000087] ------------                 IL_OFFSET void   IL offset: 0x22 REG NA
N049 (  1,  1) [000048] ------------        t48 =    LCL_VAR   ref    V04 tmp3         u:2 rax REG rax $380
N051 (  1,  1) [000049] -c----------        t49 =    CNS_INT   ref    null REG NA $VN.Null
                                                  /--*  t48    ref    
                                                  +--*  t49    ref    
N053 (  3,  3) [000050] J------N----              *  NE        void   REG NA $3c0
N055 (  5,  5) [000051] ------------              *  JTRUE     void   REG NA

------------ BB03 [022..023), preds={BB02} succs={BB04}
N059 (???,???) [000088] ------------                 IL_OFFSET void   IL offset: 0x22 REG NA
N061 (  3,  2) [000058] -------N----        t58 =    LCL_VAR_ADDR byref  V06 tmp5          rcx REG rcx
                                                  /--*  t58    byref  
N063 (???,???) [000092] ------------        t92 = *  PUTARG_REG byref  REG rcx
                                                  /--*  t92    byref  this in rcx
N065 ( 17, 10) [000061] --CXG-------        t61 = *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise REG rax $245
                                                  /--*  t61    ref    
N067 ( 21, 13) [000063] DA-XG-------              *  STORE_LCL_VAR ref    V04 tmp3         d:4 rax REG rax

------------ BB04 [022..023) (return), preds={BB02,BB03} succs={}
N001 (  0,  0) [000080] ------------        t80 =    PHI_ARG   ref    V04 tmp3         u:4 rax $245
N002 (  0,  0) [000079] ------------        t79 =    PHI_ARG   ref    V04 tmp3         u:2 rax $380
                                                  /--*  t80    ref    
                                                  +--*  t79    ref    
N003 (  0,  0) [000077] ------------        t77 = *  PHI       ref   
                                                  /--*  t77    ref    
N005 (  0,  0) [000078] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:3 rax
N071 (  3,  2) [000056] ------------        t56 =    LCL_VAR   ref    V04 tmp3         u:3 rax (last use) REG rax $381
                                                  /--*  t56    ref    
N073 (  4,  3) [000026] ------------              *  RETURN    ref    REG NA $248

-------------------------------------------------------------------------------------------------------------------

Final allocation
------------------------------+----+----+----+----+----+----+----+----+----+
LocRP# Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
------------------------------+----+----+----+----+----+----+----+----+----+
 1.#0  BB1 PredBB0            |    |    |    |    |    |    |    |    |    |
 4.#1  C2   Def    Alloc rcx  |    |C2 a|    |    |    |    |    |    |    |
 5.#2  rcx  Fixd   Keep  rcx  |    |C2 a|    |    |    |    |    |    |    |
 5.#3  C2   Use *  Keep  rcx  |    |C2 i|    |    |    |    |    |    |    |
 6.#4  rcx  Fixd   Keep  rcx  |    |    |    |    |    |    |    |    |    |
 6.#5  I3   Def    Alloc rcx  |    |I3 a|    |    |    |    |    |    |    |
 8.#6  C4   Def    Alloc rdx  |    |I3 a|C4 a|    |    |    |    |    |    |
 9.#7  rdx  Fixd   Keep  rdx  |    |I3 a|C4 a|    |    |    |    |    |    |
 9.#8  C4   Use *  Keep  rdx  |    |I3 a|C4 i|    |    |    |    |    |    |
10.#9  rdx  Fixd   Keep  rdx  |    |I3 a|    |    |    |    |    |    |    |
10.#10 I5   Def    Alloc rdx  |    |I3 a|I5 a|    |    |    |    |    |    |
11.#11 rcx  Fixd   Keep  rcx  |    |I3 a|I5 a|    |    |    |    |    |    |
11.#12 I3   Use *  Keep  rcx  |    |I3 i|I5 a|    |    |    |    |    |    |
11.#13 rdx  Fixd   Keep  rdx  |    |    |I5 a|    |    |    |    |    |    |
11.#14 I5   Use *  Keep  rdx  |    |    |I5 i|    |    |    |    |    |    |
12.#15 rax  Kill   Keep  rax  |    |    |    |    |    |    |    |    |    |
12.#16 rcx  Kill   Keep  rcx  |    |    |    |    |    |    |    |    |    |
12.#17 rdx  Kill   Keep  rdx  |    |    |    |    |    |    |    |    |    |
12.#18 r8   Kill   Keep  r8   |    |    |    |    |    |    |    |    |    |
12.#19 r9   Kill   Keep  r9   |    |    |    |    |    |    |    |    |    |
12.#20 r10  Kill   Keep  r10  |    |    |    |    |    |    |    |    |    |
12.#21 r11  Kill   Keep  r11  |    |    |    |    |    |    |    |    |    |
12.#22 rax  Fixd   Keep  rax  |    |    |    |    |    |    |    |    |    |
12.#23 I6   Def *  Alloc rax  |I6 i|    |    |    |    |    |    |    |    |
------------------------------+----+----+----+----+----+----+----+----+----+
LocRP# Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
------------------------------+----+----+----+----+----+----+----+----+----+
13.#24 BB2 PredBB1            |    |    |    |    |    |    |    |    |    |
18.#25 C7   Def    Alloc rcx  |    |C7 a|    |    |    |    |    |    |    |
19.#26 C7   Use *  Keep  rcx  |    |C7 i|    |    |    |    |    |    |    |
30.#27 I8   Def    Alloc rcx  |    |I8 a|    |    |    |    |    |    |    |
31.#28 rcx  Fixd   Keep  rcx  |    |I8 a|    |    |    |    |    |    |    |
31.#29 I8   Use *  Keep  rcx  |    |I8 i|    |    |    |    |    |    |    |
32.#30 rcx  Fixd   Keep  rcx  |    |    |    |    |    |    |    |    |    |
32.#31 I9   Def    Alloc rcx  |    |I9 a|    |    |    |    |    |    |    |
33.#32 rcx  Fixd   Keep  rcx  |    |I9 a|    |    |    |    |    |    |    |
33.#33 I9   Use *  Keep  rcx  |    |I9 i|    |    |    |    |    |    |    |
34.#34 rax  Kill   Keep  rax  |    |    |    |    |    |    |    |    |    |
34.#35 rcx  Kill   Keep  rcx  |    |    |    |    |    |    |    |    |    |
34.#36 rdx  Kill   Keep  rdx  |    |    |    |    |    |    |    |    |    |
34.#37 r8   Kill   Keep  r8   |    |    |    |    |    |    |    |    |    |
34.#38 r9   Kill   Keep  r9   |    |    |    |    |    |    |    |    |    |
34.#39 r10  Kill   Keep  r10  |    |    |    |    |    |    |    |    |    |
34.#40 r11  Kill   Keep  r11  |    |    |    |    |    |    |    |    |    |
38.#41 I10  Def    Alloc rax  |I10a|    |    |    |    |    |    |    |    |
39.#42 I10  Use *  Keep  rax  |I10i|    |    |    |    |    |    |    |    |
40.#43 V3   Def    Alloc rax  |V3 a|    |    |    |    |    |    |    |    |
45.#44 V3   Use *  Keep  rax  |V3 i|    |    |    |    |    |    |    |    |
46.#45 V4   Def    Alloc rax  |V4 a|    |    |    |    |    |    |    |    |
53.#46 V4   Use    Keep  rax  |V4 a|    |    |    |    |    |    |    |    |
------------------------------+----+----+----+----+----+----+----+----+----+
LocRP# Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
------------------------------+----+----+----+----+----+----+----+----+----+
57.#47 BB3 PredBB2            |    |    |    |    |    |    |    |    |    |
62.#48 I11  Def    Alloc rcx  |    |I11a|    |    |    |    |    |    |    |
63.#49 rcx  Fixd   Keep  rcx  |    |I11a|    |    |    |    |    |    |    |
63.#50 I11  Use *  Keep  rcx  |    |I11i|    |    |    |    |    |    |    |
64.#51 rcx  Fixd   Keep  rcx  |    |    |    |    |    |    |    |    |    |
64.#52 I12  Def    Alloc rcx  |    |I12a|    |    |    |    |    |    |    |
65.#53 rcx  Fixd   Keep  rcx  |    |I12a|    |    |    |    |    |    |    |
65.#54 I12  Use *  Keep  rcx  |    |I12i|    |    |    |    |    |    |    |
66.#55 rax  Kill   Keep  rax  |    |    |    |    |    |    |    |    |    |
66.#56 rcx  Kill   Keep  rcx  |    |    |    |    |    |    |    |    |    |
66.#57 rdx  Kill   Keep  rdx  |    |    |    |    |    |    |    |    |    |
66.#58 r8   Kill   Keep  r8   |    |    |    |    |    |    |    |    |    |
66.#59 r9   Kill   Keep  r9   |    |    |    |    |    |    |    |    |    |
66.#60 r10  Kill   Keep  r10  |    |    |    |    |    |    |    |    |    |
66.#61 r11  Kill   Keep  r11  |    |    |    |    |    |    |    |    |    |
66.#62 rax  Fixd   Keep  rax  |    |    |    |    |    |    |    |    |    |
66.#63 I13  Def    Alloc rax  |I13a|    |    |    |    |    |    |    |    |
67.#64 I13  Use *  Keep  rax  |I13i|    |    |    |    |    |    |    |    |
68.#65 V4   Def    Alloc rax  |V4 a|    |    |    |    |    |    |    |    |
------------------------------+----+----+----+----+----+----+----+----+----+
LocRP# Name Type  Action Reg  |rax |rcx |rdx |rbx |rbp |rsi |rdi |r8  |r9  |
------------------------------+----+----+----+----+----+----+----+----+----+
69.#66 BB4 PredBB2            |V4 a|    |    |    |    |    |    |    |    |
73.#67 rax  Fixd   Keep  rax  |V4 a|    |    |    |    |    |    |    |    |
73.#68 V4   Use *  Keep  rax  |V4 i|    |    |    |    |    |    |    |    |

Recording the maximum number of concurrent spills:

----------
LSRA Stats
----------
Total Tracked Vars:  3
Total Reg Cand Vars: 2
Total number of Intervals: 13
Total number of RefPositions: 68
Total Spill Count: 0    Weighted: 0.000000
Total CopyReg Count: 0   Weighted: 0.000000
Total ResolutionMov Count: 0    Weighted: 0.000000
Total number of split edges: 0
Total Number of spill temps created: 0

TUPLE STYLE DUMP WITH REGISTER ASSIGNMENTS
Incoming Parameters: 
BB01 [???..???), preds={} succs={BB02}
=====
  N003. rcx             =  CNS_INT   0x7ffc7e4a17a0
  N005. rcx             =  PUTARG_REG; rcx
  N007. rdx             =  CNS_INT   13
  N009. rdx             =  PUTARG_REG; rdx
* N011. rax             =  CALL help; rcx,rdx
Var=Reg end of BB01: none

BB02 [000..02F) -> BB04 (cond), preds={BB01} succs={BB03,BB04}
=====
Predecessor for variable locations: BB01
Var=Reg beg of BB02: none
  N015.                    IL_OFFSET IL offset: 0x0
  N017. rcx             =  CNS_INT   null
  N019.                    V06 MEM; rcx
  N021.                    IL_OFFSET IL offset: 0xc
  N023.                    CNS_INT   -1
  N025.                    V05 MEM
  N027.                    IL_OFFSET IL offset: 0x14
  N029. rcx             =  LCL_VAR_ADDR V00 loc0          rcx
                                                      int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                      ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                      ref    V00.<>u__1 (offs=0x10) -> V07 tmp6         
  N031. rcx             =  PUTARG_REG; rcx
  N033.                    CALL     ; rcx
  N035.                    IL_OFFSET IL offset: 0x22
  N037. rax             =  V06 MEM
* N039.                    V03(rax); rax
  N041.                    IL_OFFSET IL offset: 0x22
  N043.                    V03(rax*)
* N045.                    V04(rax); rax*
  N047.                    IL_OFFSET IL offset: 0x22
  N049.                    V04(rax)
  N051.                    CNS_INT   null
  N053.                    NE       ; rax
  N055.                    JTRUE    
Var=Reg end of BB02: V04=rax 

BB03 [022..023), preds={BB02} succs={BB04}
=====
Predecessor for variable locations: BB02
Var=Reg beg of BB03: none
  N059.                    IL_OFFSET IL offset: 0x22
  N061. rcx             =  LCL_VAR_ADDR V06 tmp5          rcx
  N063. rcx             =  PUTARG_REG; rcx
  N065. rax             =  CALL     ; rcx
* N067.                    V04(rax); rax
Var=Reg end of BB03: V04=rax 

BB04 [022..023) (return), preds={BB02,BB03} succs={}
=====
Predecessor for variable locations: BB02
Var=Reg beg of BB04: V04=rax 
  N071.                    V04(rax*)
  N073.                    RETURN   ; rax*
Var=Reg end of BB04: none




*************** Finishing PHASE Linear scan register alloc
*************** In genGenerateCode()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0001]  1                             1       [???..???)                                     i internal label target hascall LIR 
BB02 [0000]  1       BB01                  1       [000..02F)-> BB04 ( cond )                     i hascall gcsafe LIR 
BB03 [0005]  1       BB02                  0.25    [022..023)                                     i hascall gcsafe LIR 
BB04 [0006]  2       BB02,BB03             1       [022..023)        (return)                     i label target gcsafe LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Generate code
*************** In fgDebugCheckBBlist
Finalizing stack frame
Recording Var Locations at start of BB01
  <none>

Modified regs: [rax rcx rdx r8-r11]
Callee-saved registers pushed: 0 []
*************** In lvaAssignFrameOffsets(FINAL_FRAME_LAYOUT)
Assign V00 loc0, size=24, stkOffs=-0x20
Assign V01 OutArgs, size=32, stkOffs=-0x40
--- delta bump 8 for RA
--- delta bump 56 for RSP frame
--- virtual stack offset to actual stack offset delta is 64
-- V00 was -32, now 32
-- V01 was -64, now 0
; Final local variable assignments
;
;  V00 loc0         [V00    ] (  5,  4.25)  struct (24) [rsp+0x20]   do-not-enreg[XS] must-init addr-exposed ld-addr-op
;  V01 OutArgs      [V01    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V02 tmp1         [V02    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;  V03 tmp2         [V03,T00] (  2,  4   )     ref  ->  rax         class-hnd "dup spill"
;  V04 tmp3         [V04,T01] (  4,  3.25)     ref  ->  rax        
;  V05 tmp4         [V05    ] (  2,  2   )     int  ->  [rsp+0x20]   do-not-enreg[X] addr-exposed V00.<>1__state(offs=0x00) P-DEP "field V00.<>1__state (fldOffset=0x0)"
;  V06 tmp5         [V06    ] (  4,  3.25)     ref  ->  [rsp+0x28]   do-not-enreg[X] addr-exposed V00.<>t__builder(offs=0x08) P-DEP "field V00.<>t__builder (fldOffset=0x8)"
;  V07 tmp6         [V07    ] (  1,  1   )     ref  ->  [rsp+0x30]   do-not-enreg[X] addr-exposed V00.<>u__1(offs=0x10) P-DEP "field V00.<>u__1 (fldOffset=0x10)"
;* V08 tmp7         [V08,T02] (  0,  0   )     ref  ->  zero-ref    V02.m_task(offs=0x00) P-INDEP "field V02.m_task (fldOffset=0x0)"
;
; Lcl frame size = 56
Setting stack level from -572662307 to 0

=============== Generating BB01 [???..???), preds={} succs={BB02} flags=0x00000002.20030060: i internal label target hascall LIR 
BB01 IN (0)={} + ByrefExposed + GcHeap
     OUT(0)={} + ByrefExposed + GcHeap

Recording Var Locations at start of BB01
  <none>

Liveness not changing: 0000000000000000 {}
							Live regs: (unchanged) 00000000 {}
							GC regs: (unchanged) 00000000 {}
							Byref regs: (unchanged) 00000000 {}

      L_M54671_BB01:
Label: IG02, GCvars=0000000000000000 {}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}

Scope info: begin block BB01, IL range [???..???)
Scope info: ignoring block beginning
Generating: N003 (  2, 10) [000027] ------------        t27 =    CNS_INT   long   0x7ffc7e4a17a0 REG rcx $140
IN0001:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t27    long   
Generating: N005 (???,???) [000089] ------------        t89 = *  PUTARG_REG long   REG rcx
Generating: N007 (  1,  1) [000028] ------------        t28 =    CNS_INT   int    13 REG rdx $41
IN0002:        mov      edx, 13
                                                              /--*  t28    int    
Generating: N009 (???,???) [000090] ------------        t90 = *  PUTARG_REG int    REG rdx
                                                              /--*  t89    long   arg0 in rcx
                                                              +--*  t90    int    arg1 in rdx
Generating: N011 ( 17, 18) [000029] --CXG-------        t29 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE REG rax $201
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}
IN0003:        call     CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE

Scope info: end block BB01, IL range [???..???)
Scope info: ignoring block end

=============== Generating BB02 [000..02F) -> BB04 (cond), preds={BB01} succs={BB03,BB04} flags=0x00000002.20080020: i hascall gcsafe LIR 
BB02 IN (0)={   } + ByrefExposed + GcHeap
     OUT(1)={V04} + ByrefExposed + GcHeap

Recording Var Locations at start of BB02
  <none>

Liveness not changing: 0000000000000000 {}
							Live regs: (unchanged) 00000000 {}
							GC regs: (unchanged) 00000000 {}
							Byref regs: (unchanged) 00000000 {}

      L_M54671_BB02:

Scope info: begin block BB02, IL range [000..02F)
Scope info: open scopes =
   <none>
Added IP mapping: 0x0000 STACK_EMPTY (G_M54671_IG02,ins#3,ofs#20) label
Generating: N015 (???,???) [000082] ------------                 IL_OFFSET void   IL offset: 0x0 REG NA
Generating: N017 (  1,  1) [000081] ------------        t81 =    CNS_INT   ref    null REG rcx $VN.Null
IN0004:        xor      rcx, rcx
							GC regs: 00000000 {} => 00000002 {rcx}
                                                              /--*  t81    ref    
Generating: N019 (  5,  4) [000073] DA--G-------              *  STORE_LCL_VAR ref   (AX) V06 tmp5          NA REG NA
							GC regs: 00000002 {rcx} => 00000000 {}
IN0005:        mov      gword ptr [V06 rsp+28H], rcx
Added IP mapping: 0x000C STACK_EMPTY (G_M54671_IG02,ins#5,ofs#27)
Generating: N021 (???,???) [000083] ------------                 IL_OFFSET void   IL offset: 0xc REG NA
Generating: N023 (  1,  1) [000010] -c----------        t10 =    CNS_INT   int    -1 REG NA $40
                                                              /--*  t10    int    
Generating: N025 (  5,  4) [000012] DA--G-------              *  STORE_LCL_VAR int   (AX) V05 tmp4          NA REG NA
IN0006:        mov      dword ptr [V05 rsp+20H], -1
Added IP mapping: 0x0014 STACK_EMPTY (G_M54671_IG02,ins#6,ofs#35)
Generating: N027 (???,???) [000084] ------------                 IL_OFFSET void   IL offset: 0x14 REG NA
Generating: N029 (  3,  2) [000037] -------N----        t37 =    LCL_VAR_ADDR byref  V00 loc0          rcx
                                                  *    int    V00.<>1__state (offs=0x00) -> V05 tmp4         
                                                  *    ref    V00.<>t__builder (offs=0x08) -> V06 tmp5         
                                                  *    ref    V00.<>u__1 (offs=0x10) -> V07 tmp6          REG rcx
IN0007:        lea      rcx, bword ptr [V00 rsp+20H]
							Byref regs: 00000000 {} => 00000002 {rcx}
                                                              /--*  t37    byref  
Generating: N031 (???,???) [000091] ------------        t91 = *  PUTARG_REG byref  REG rcx
							Byref regs: 00000002 {rcx} => 00000000 {}
							Byref regs: 00000000 {} => 00000002 {rcx}
                                                              /--*  t91    byref  arg0 in rcx
Generating: N033 ( 17,  9) [000038] --CXG-------              *  CALL      void   System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start REG NA $VN.Void
							Byref regs: 00000002 {rcx} => 00000000 {}
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}
IN0008:        call     System.Runtime.CompilerServices.AsyncMethodBuilderCore:Start(byref)
Added IP mapping: 0x0022 STACK_EMPTY (G_M54671_IG02,ins#8,ofs#45)
Generating: N035 (???,???) [000085] ------------                 IL_OFFSET void   IL offset: 0x22 REG NA
Generating: N037 (  3,  2) [000041] ------------        t41 =    LCL_VAR   ref   (AX) V06 tmp5          rax REG rax $380
IN0009:        mov      rax, gword ptr [V06 rsp+28H]
							GC regs: 00000000 {} => 00000001 {rax}
                                                              /--*  t41    ref    
Generating: N039 (  3,  3) [000046] DA--G-------              *  STORE_LCL_VAR ref    V03 tmp2         d:2 rax REG rax
							GC regs: 00000001 {rax} => 00000000 {}
							V03 in reg rax is becoming live  [000046]
							Live regs: 00000000 {} => 00000001 {rax}
							Live vars: {} => {V03}
							GC regs: 00000000 {} => 00000001 {rax}
genIPmappingAdd: ignoring duplicate IL offset 0x22
Generating: N041 (???,???) [000086] ------------                 IL_OFFSET void   IL offset: 0x22 REG NA
Generating: N043 (  1,  1) [000047] ------------        t47 =    LCL_VAR   ref    V03 tmp2         u:2 rax (last use) REG rax $380
                                                              /--*  t47    ref    
Generating: N045 (  5,  4) [000053] DA----------              *  STORE_LCL_VAR ref    V04 tmp3         d:2 rax REG rax
							V03 in reg rax is becoming dead  [000047]
							Live regs: 00000001 {rax} => 00000000 {}
							Live vars: {V03} => {}
							GC regs: 00000001 {rax} => 00000000 {}
							V04 in reg rax is becoming live  [000053]
							Live regs: 00000000 {} => 00000001 {rax}
							Live vars: {} => {V04}
							GC regs: 00000000 {} => 00000001 {rax}
genIPmappingAdd: ignoring duplicate IL offset 0x22
Generating: N047 (???,???) [000087] ------------                 IL_OFFSET void   IL offset: 0x22 REG NA
Generating: N049 (  1,  1) [000048] ------------        t48 =    LCL_VAR   ref    V04 tmp3         u:2 rax REG rax $380
Generating: N051 (  1,  1) [000049] -c----------        t49 =    CNS_INT   ref    null REG NA $VN.Null
                                                              /--*  t48    ref    
                                                              +--*  t49    ref    
Generating: N053 (  3,  3) [000050] J------N----              *  NE        void   REG NA $3c0
IN000a:        test     rax, rax
Generating: N055 (  5,  5) [000051] ------------              *  JTRUE     void   REG NA
IN000b:        jne      L_M54671_BB04

Scope info: end block BB02, IL range [000..02F)
Scope info: ending scope, LVnum=0 [000..02F)
siEndScope: Failed to end scope for V00
Scope info: open scopes =
   <none>

=============== Generating BB03 [022..023), preds={BB02} succs={BB04} flags=0x00000002.20080020: i hascall gcsafe LIR 
BB03 IN (0)={   } + ByrefExposed + GcHeap
     OUT(1)={V04}

Recording Var Locations at start of BB03
  <none>

Change life 0000000000000002 {V04} -> 0000000000000000 {}
							V04 in reg rax is becoming dead  [------]
							Live regs: (unchanged) 00000000 {}
							Live regs: (unchanged) 00000000 {}
							GC regs: (unchanged) 00000000 {}
							Byref regs: (unchanged) 00000000 {}

      L_M54671_BB03:

      G_M54671_IG02:        ; offs=000000H, funclet=00, bbWeight=1   
Label: IG03, GCvars=0000000000000000 {}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}

Scope info: begin block BB03, IL range [022..023)
Scope info: open scopes =
   <none>
genIPmappingAdd: ignoring duplicate IL offset 0x22
Generating: N059 (???,???) [000088] ------------                 IL_OFFSET void   IL offset: 0x22 REG NA
Generating: N061 (  3,  2) [000058] -------N----        t58 =    LCL_VAR_ADDR byref  V06 tmp5          rcx REG rcx
IN000c:        lea      rcx, bword ptr [V06 rsp+28H]
							Byref regs: 00000000 {} => 00000002 {rcx}
                                                              /--*  t58    byref  
Generating: N063 (???,???) [000092] ------------        t92 = *  PUTARG_REG byref  REG rcx
							Byref regs: 00000002 {rcx} => 00000000 {}
							Byref regs: 00000000 {} => 00000002 {rcx}
                                                              /--*  t92    byref  this in rcx
Generating: N065 ( 17, 10) [000061] --CXG-------        t61 = *  CALL      ref    System.Runtime.CompilerServices.AsyncTaskMethodBuilder.InitializeTaskAsPromise REG rax $245
							Byref regs: 00000002 {rcx} => 00000000 {}
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}
IN000d:        call     System.Runtime.CompilerServices.AsyncTaskMethodBuilder:InitializeTaskAsPromise():System.Threading.Tasks.Task`1[VoidTaskResult]:this
							GC regs: 00000000 {} => 00000001 {rax}
                                                              /--*  t61    ref    
Generating: N067 ( 21, 13) [000063] DA-XG-------              *  STORE_LCL_VAR ref    V04 tmp3         d:4 rax REG rax
							GC regs: 00000001 {rax} => 00000000 {}
							V04 in reg rax is becoming live  [000063]
							Live regs: 00000000 {} => 00000001 {rax}
							Live vars: {} => {V04}
							GC regs: 00000000 {} => 00000001 {rax}

Scope info: end block BB03, IL range [022..023)
Scope info: open scopes =
   <none>

=============== Generating BB04 [022..023) (return), preds={BB02,BB03} succs={} flags=0x00000000.200b0020: i label target gcsafe LIR 
BB04 IN (1)={V04}
     OUT(0)={   }

Recording Var Locations at start of BB04
  V04(rax)
Liveness not changing: 0000000000000002 {V04}
							Live regs: 00000000 {} => 00000001 {rax}
							GC regs: 00000000 {} => 00000001 {rax}
							Byref regs: (unchanged) 00000000 {}

      L_M54671_BB04:

      G_M54671_IG03:        ; offs=00003BH, funclet=00, bbWeight=0.25
Label: IG04, GCvars=0000000000000000 {}, gcrefRegs=00000001 {rax}, byrefRegs=00000000 {}

Scope info: begin block BB04, IL range [022..023)
Scope info: open scopes =
   <none>
Generating: N071 (  3,  2) [000056] ------------        t56 =    LCL_VAR   ref    V04 tmp3         u:3 rax (last use) REG rax $381
                                                              /--*  t56    ref    
Generating: N073 (  4,  3) [000026] ------------              *  RETURN    ref    REG NA $248
							V04 in reg rax is becoming dead  [000056]
							Live regs: 00000001 {rax} => 00000000 {}
							Live vars: {V04} => {}
							GC regs: 00000001 {rax} => 00000000 {}

Scope info: end block BB04, IL range [022..023)
Scope info: open scopes =
   <none>
Added IP mapping: EPILOG STACK_EMPTY (G_M54671_IG04,ins#0,ofs#0) label
							GC regs: 00000000 {} => 00000001 {rax}
Extending return value GC liveness to epilog
Reserving epilog IG for block BB04
IN000e:        nop      

      G_M54671_IG04:        ; offs=000045H, funclet=00, bbWeight=1   
*************** After placeholder IG creation
G_M54671_IG01:        ; func=00, offs=000000H, size=0000H, gcrefRegs=00000000 {} <-- Prolog IG
G_M54671_IG02:        ; offs=000000H, size=003BH, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref
G_M54671_IG03:        ; offs=00003BH, size=000AH, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref
G_M54671_IG04:        ; offs=000045H, size=0001H, gcrefRegs=00000001 {rax}, byrefRegs=00000000 {}, byref
G_M54671_IG05:        ; epilog placeholder, next placeholder=<END>, BB04 [0006], epilog, extend <-- First placeholder <-- Last placeholder
                      ;   PrevGCVars=0000000000000000 {}, PrevGCrefRegs=00000000 {}, PrevByrefRegs=00000000 {}
                      ;   InitGCVars=0000000000000000 {}, InitGCrefRegs=00000001 {rax}, InitByrefRegs=00000000 {}
Liveness not changing: 0000000000000000 {}

# compCycleEstimate =     87, compSizeEstimate =    67 HotkeyedMusicPlayer.MusicPlayer:PlayCurrentMedia():System.Threading.Tasks.Task
; Final local variable assignments
;
;  V00 loc0         [V00    ] (  5,  4.25)  struct (24) [rsp+0x20]   do-not-enreg[XS] must-init addr-exposed ld-addr-op
;  V01 OutArgs      [V01    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V02 tmp1         [V02    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;  V03 tmp2         [V03,T00] (  2,  4   )     ref  ->  rax         class-hnd "dup spill"
;  V04 tmp3         [V04,T01] (  4,  3.25)     ref  ->  rax        
;  V05 tmp4         [V05    ] (  2,  2   )     int  ->  [rsp+0x20]   do-not-enreg[X] addr-exposed V00.<>1__state(offs=0x00) P-DEP "field V00.<>1__state (fldOffset=0x0)"
;  V06 tmp5         [V06    ] (  4,  3.25)     ref  ->  [rsp+0x28]   do-not-enreg[X] addr-exposed V00.<>t__builder(offs=0x08) P-DEP "field V00.<>t__builder (fldOffset=0x8)"
;  V07 tmp6         [V07    ] (  1,  1   )     ref  ->  [rsp+0x30]   do-not-enreg[X] addr-exposed V00.<>u__1(offs=0x10) P-DEP "field V00.<>u__1 (fldOffset=0x10)"
;* V08 tmp7         [V08,T02] (  0,  0   )     ref  ->  zero-ref    V02.m_task(offs=0x00) P-INDEP "field V02.m_task (fldOffset=0x0)"
;
; Lcl frame size = 56
*************** Before prolog / epilog generation
G_M54671_IG01:        ; func=00, offs=000000H, size=0000H, gcrefRegs=00000000 {} <-- Prolog IG
G_M54671_IG02:        ; offs=000000H, size=003BH, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref
G_M54671_IG03:        ; offs=00003BH, size=000AH, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref
G_M54671_IG04:        ; offs=000045H, size=0001H, gcrefRegs=00000001 {rax}, byrefRegs=00000000 {}, byref
G_M54671_IG05:        ; epilog placeholder, next placeholder=<END>, BB04 [0006], epilog, extend <-- First placeholder <-- Last placeholder
                      ;   PrevGCVars=0000000000000000 {}, PrevGCrefRegs=00000000 {}, PrevByrefRegs=00000000 {}
                      ;   InitGCVars=0000000000000000 {}, InitGCrefRegs=00000001 {rax}, InitByrefRegs=00000000 {}
Recording Var Locations at start of BB01
  <none>

*************** In genFnProlog()
Added IP mapping to front: PROLOG STACK_EMPTY (G_M54671_IG01,ins#0,ofs#0) label

__prolog:
Found 6 lvMustInit int-sized stack slots, frame offsets -32 through -56
IN000f:        sub      rsp, 56
Notify VM instruction set (SSE42) must be supported.
IN0010:        vxorps   xmm4, xmm4
IN0011:        vmovdqa  xmmword ptr [rsp+20H], xmm4
IN0012:        xor      rax, rax
IN0013:        mov      qword ptr [rsp+30H], rax
*************** In genEnregisterIncomingStackArgs()


      G_M54671_IG01:        ; offs=000000H, funclet=00, bbWeight=1   
*************** In genFnEpilog()

__epilog:
gcVarPtrSetCur=0000000000000000 {}, gcRegGCrefSetCur=00000001 {rax}, gcRegByrefSetCur=00000000 {}
IN0014:        add      rsp, 56
IN0015:        ret      

      G_M54671_IG05:        ; offs=000046H, funclet=00, bbWeight=1   
0 prologs, 1 epilogs, 0 funclet prologs, 0 funclet epilogs
*************** After prolog / epilog generation
G_M54671_IG01:        ; func=00, offs=000000H, size=0017H, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref, nogc <-- Prolog IG
G_M54671_IG02:        ; offs=000017H, size=003BH, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref
G_M54671_IG03:        ; offs=000052H, size=000AH, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref
G_M54671_IG04:        ; offs=00005CH, size=0001H, gcrefRegs=00000001 {rax}, byrefRegs=00000000 {}, byref
G_M54671_IG05:        ; offs=00005DH, size=0005H, epilog, nogc, extend
*************** In emitJumpDistBind()
Binding: IN000b: 000000 jne      L_M54671_BB04
Binding L_M54671_BB04 to G_M54671_IG04
Estimate of fwd jump [D1FFAB1E/011]: 004C -> 005C = 000E
Shrinking jump [D1FFAB1E/011]
Adjusted offset of BB03 from 0052 to 004E
Adjusted offset of BB04 from 005C to 0058
Adjusted offset of BB05 from 005D to 0059
Total shrinkage =   4, min extra jump size = 4294967295

*************** Finishing PHASE Generate code

*************** Starting PHASE Emit code

Hot  code size = 0x5E bytes
Cold code size = 0x0 bytes
reserveUnwindInfo(isFunclet=FALSE, isColdCode=FALSE, unwindSize=0x6)
*************** In emitEndCodeGen()
Converting emitMaxStackDepth from bytes (0) to elements (0)

***************************************************************************
Instructions as they come out of the scheduler


G_M54671_IG01:        ; func=00, offs=000000H, size=0017H, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref, nogc <-- Prolog IG
IN000f: 000000 sub      rsp, 56
IN0010: 000004 vxorps   xmm4, xmm4 (ECS:5, ACS:4)
Instruction predicted size = 5, actual = 4
IN0011: 000008 vmovdqa  xmmword ptr [rsp+20H], xmm4 (ECS:7, ACS:6)
Instruction predicted size = 7, actual = 6
IN0012: 00000E xor      rax, rax
IN0013: 000010 mov      qword ptr [rsp+30H], rax
						;; bbWeight=1    PerfScore 2.83
G_M54671_IG02:        ; func=00, offs=000017H, size=0037H, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref, isz
Block predicted offs = 00000017, actual = 00000015 -> size adj = 2
IN0001: 000015 mov      rcx, 0xD1FFAB1E
IN0002: 00001F mov      edx, 13
IN0003: 000024 call     CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
       ; gcr arg pop 0
IN0004: 000029 xor      rcx, rcx
       ; gcrRegs +[rcx]
IN0005: 00002B mov      gword ptr [rsp+28H], rcx
IN0006: 000030 mov      dword ptr [rsp+20H], -1
IN0007: 000038 lea      rcx, bword ptr [rsp+20H]
       ; gcrRegs -[rcx]
       ; byrRegs +[rcx]
IN0008: 00003D call     System.Runtime.CompilerServices.AsyncMethodBuilderCore:Start(byref)
       ; byrRegs -[rcx]
       ; gcr arg pop 0
IN0009: 000042 mov      rax, gword ptr [rsp+28H]
       ; gcrRegs +[rax]
IN000a: 000047 test     rax, rax
IN000b: 00004A jne      SHORT G_M54671_IG04
						;; bbWeight=1    PerfScore 7.50
G_M54671_IG03:        ; func=00, offs=00004EH, size=000AH, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref
Block predicted offs = 0000004E, actual = 0000004C -> size adj = 2
       ; gcrRegs -[rax]
IN000c: 00004C lea      rcx, bword ptr [rsp+28H]
       ; byrRegs +[rcx]
IN000d: 000051 call     System.Runtime.CompilerServices.AsyncTaskMethodBuilder:InitializeTaskAsPromise():System.Threading.Tasks.Task`1[VoidTaskResult]:this
       ; gcrRegs +[rax]
       ; byrRegs -[rcx]
       ; gcr arg pop 0
						;; bbWeight=0.25 PerfScore 0.38
G_M54671_IG04:        ; func=00, offs=000058H, size=0001H, gcrefRegs=00000001 {rax}, byrefRegs=00000000 {}, byref
Block predicted offs = 00000058, actual = 00000056 -> size adj = 2
IN000e: 000056 nop      
						;; bbWeight=1    PerfScore 0.25
G_M54671_IG05:        ; func=00, offs=000059H, size=0005H, epilog, nogc, extend
Block predicted offs = 00000059, actual = 00000057 -> size adj = 2
IN0014: 000057 add      rsp, 56
IN0015: 00005B ret      
						;; bbWeight=1    PerfScore 1.25Allocated method code size =   94 , actual size =   92

; Total bytes of code 92, prolog size 21, PerfScore 21.61, instruction count 21 (MethodHash=f5b82a70) for method HotkeyedMusicPlayer.MusicPlayer:PlayCurrentMedia():System.Threading.Tasks.Task
; ============================================================

*************** After end code gen, before unwindEmit()
G_M54671_IG01:        ; func=00, offs=000000H, size=0015H, bbWeight=1    PerfScore 2.83, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref, nogc, isz <-- Prolog IG

IN000f: 000000 sub      rsp, 56
IN0010: 000004 vxorps   xmm4, xmm4
IN0011: 000008 vmovdqa  xmmword ptr [rsp+20H], xmm4
IN0012: 00000E xor      rax, rax
IN0013: 000010 mov      qword ptr [rsp+30H], rax

G_M54671_IG02:        ; offs=000015H, size=0037H, bbWeight=1    PerfScore 7.50, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref, isz

IN0001: 000015 mov      rcx, 0xD1FFAB1E
IN0002: 00001F mov      edx, 13
IN0003: 000024 call     CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
IN0004: 000029 xor      rcx, rcx
IN0005: 00002B mov      gword ptr [V06 rsp+28H], rcx
IN0006: 000030 mov      dword ptr [V05 rsp+20H], -1
IN0007: 000038 lea      rcx, bword ptr [V00 rsp+20H]
IN0008: 00003D call     System.Runtime.CompilerServices.AsyncMethodBuilderCore:Start(byref)
IN0009: 000042 mov      rax, gword ptr [V06 rsp+28H]
IN000a: 000047 test     rax, rax
IN000b: 00004A jne      SHORT G_M54671_IG04

G_M54671_IG03:        ; offs=00004CH, size=000AH, bbWeight=0.25 PerfScore 0.38, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref

IN000c: 00004C lea      rcx, bword ptr [V06 rsp+28H]
IN000d: 000051 call     System.Runtime.CompilerServices.AsyncTaskMethodBuilder:InitializeTaskAsPromise():System.Threading.Tasks.Task`1[VoidTaskResult]:this

G_M54671_IG04:        ; offs=000056H, size=0001H, bbWeight=1    PerfScore 0.25, gcrefRegs=00000001 {rax}, byrefRegs=00000000 {}, byref

IN000e: 000056 nop      

G_M54671_IG05:        ; offs=000057H, size=0005H, bbWeight=1    PerfScore 1.25, epilog, nogc, extend

IN0014: 000057 add      rsp, 56
IN0015: 00005B ret      


*************** Finishing PHASE Emit code

*************** Starting PHASE Emit GC+EH tables
Unwind Info:
  >> Start offset   : 0x000000 (not in unwind data)
  >>   End offset   : 0xd1ffab1e (not in unwind data)
  Version           : 1
  Flags             : 0x00
  SizeOfProlog      : 0x04
  CountOfUnwindCodes: 1
  FrameRegister     : none (0)
  FrameOffset       : N/A (no FrameRegister) (Value=0)
  UnwindCodes       :
    CodeOffset: 0x04 UnwindOp: UWOP_ALLOC_SMALL (2)     OpInfo: 6 * 8 + 8 = 56 = 0x38
allocUnwindInfo(pHotCode=0x00000000D1FFAB1E, pColdCode=0x0000000000000000, startOffset=0x0, endOffset=0x5c, unwindSize=0x6, pUnwindBlock=0x00000000D1FFAB1E, funKind=0 (main function))
*************** In genIPmappingGen()
IP mapping count : 6
IL offs PROLOG : 0x00000000 ( STACK_EMPTY )
IL offs 0x0000 : 0x00000029 ( STACK_EMPTY )
IL offs 0x000C : 0x00000030 ( STACK_EMPTY )
IL offs 0x0014 : 0x00000038 ( STACK_EMPTY )
IL offs 0x0022 : 0x00000042 ( STACK_EMPTY )
IL offs EPILOG : 0x00000056 ( STACK_EMPTY )

*************** In genSetScopeInfo()
VarLocInfo count is 0
; Variable debug info: 0 live range(s), 0 var(s) for method HotkeyedMusicPlayer.MusicPlayer:PlayCurrentMedia():System.Threading.Tasks.Task
*************** In gcInfoBlockHdrSave()
Set code length to 92.
Set ReturnKind to Object.
Set Outgoing stack arg area size to 32.
Stack slot id for offset 40 (0x28) (sp) (untracked) = 0.
Stack slot id for offset 48 (0x30) (sp) (untracked) = 1.
Defining 3 call sites:
    Offset 0x24, size 5.
    Offset 0x3d, size 5.
    Offset 0x51, size 5.

*************** Finishing PHASE Emit GC+EH tables
Method code size: 92

Allocations for HotkeyedMusicPlayer.MusicPlayer:PlayCurrentMedia():System.Threading.Tasks.Task (MethodHash=f5b82a70)
count:       1053, size:      86861, max =       3072
allocateMemory:     131072, nraUsed:      92272

Alloc'd bytes by kind:
                  kind |       size |     pct
  ---------------------+------------+--------
         AssertionProp |       6460 |   7.44%
               ASTNode |      12608 |  14.52%
              InstDesc |       3360 |   3.87%
              ImpStack |        432 |   0.50%
            BasicBlock |       2840 |   3.27%
             fgArgInfo |        256 |   0.29%
       fgArgInfoPtrArr |         32 |   0.04%
              FlowList |        240 |   0.28%
     TreeStatementList |          0 |   0.00%
               SiScope |         24 |   0.03%
       DominatorMemory |        240 |   0.28%
                  LSRA |       3472 |   4.00%
         LSRA_Interval |       1120 |   1.29%
      LSRA_RefPosition |       4416 |   5.08%
          Reachability |         16 |   0.02%
                   SSA |        976 |   1.12%
           ValueNumber |      10309 |  11.87%
              LvaTable |       1956 |   2.25%
            UnwindInfo |          0 |   0.00%
                hashBv |        160 |   0.18%
                bitset |        296 |   0.34%
          FixedBitVect |         36 |   0.04%
               Generic |       2418 |   2.78%
   LocalAddressVisitor |          0 |   0.00%
         FieldSeqStore |        176 |   0.20%
    ZeroOffsetFieldMap |        256 |   0.29%
          ArrayInfoMap |         80 |   0.09%
          MemoryPhiArg |          0 |   0.00%
                   CSE |       1136 |   1.31%
                    GC |       1843 |   2.12%
       CorTailCallInfo |          0 |   0.00%
              Inlining |       2856 |   3.29%
            ArrayStack |          0 |   0.00%
             DebugInfo |        232 |   0.27%
             DebugOnly |      26070 |  30.01%
               Codegen |       1176 |   1.35%
               LoopOpt |          0 |   0.00%
             LoopHoist |          0 |   0.00%
               Unknown |        561 |   0.65%
            RangeCheck |          0 |   0.00%
              CopyProp |        408 |   0.47%
           SideEffects |          0 |   0.00%
       ObjectAllocator |          0 |   0.00%
    VariableLiveRanges |          0 |   0.00%
           ClassLayout |        112 |   0.13%
       TailMergeThrows |          0 |   0.00%
             EarlyProp |          0 |   0.00%
              ZeroInit |        288 |   0.33%

****** DONE compiling HotkeyedMusicPlayer.MusicPlayer:PlayCurrentMedia():System.Threading.Tasks.Task