****** START compiling SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] (MethodHash=a4534529)
Generating code for Windows x64
OPTIONS: compCodeOpt = BLENDED_CODE
OPTIONS: compDbgCode = false
OPTIONS: compDbgInfo = true
OPTIONS: compDbgEnC  = false
OPTIONS: compProcedureSplitting   = false
OPTIONS: compProcedureSplittingEH = false
IL to import:
IL_0000  72 24 04 00 70    ldstr        0x70000424
IL_0005  18                ldc.i4.2    
IL_0006  28 0b 00 00 2b    call         0x2B00000B
IL_000b  26                pop         
IL_000c  1f 64             ldc.i4.s     0x64
IL_000e  73 9d 00 00 0a    newobj       0xA00009D
IL_0013  0a                stloc.0     
IL_0014  02                ldarg.0     
IL_0015  0b                stloc.1     
IL_0016  16                ldc.i4.0    
IL_0017  0c                stloc.2     
IL_0018  38 8d 00 00 00    br           141 (IL_00aa)
IL_001d  07                ldloc.1     
IL_001e  08                ldloc.2     
IL_001f  9a                ldelem.ref  
IL_0020  0d                stloc.3     
IL_0021  09                ldloc.3     
IL_0022  72 6a 04 00 70    ldstr        0x7000046A
IL_0027  6f 9e 00 00 0a    callvirt     0xA00009E
IL_002c  2c 09             brfalse.s    9 (IL_0037)
IL_002e  06                ldloc.0     
IL_002f  09                ldloc.3     
IL_0030  6f 9f 00 00 0a    callvirt     0xA00009F
IL_0035  2b 6f             br.s         111 (IL_00a6)
IL_0037  09                ldloc.3     
IL_0038  72 7a 04 00 70    ldstr        0x7000047A
IL_003d  17                ldc.i4.1    
IL_003e  28 a0 00 00 0a    call         0xA0000A0
IL_0043  7e 66 00 00 04    ldsfld       0x4000066
IL_0048  25                dup         
IL_0049  2d 17             brtrue.s     23 (IL_0062)
IL_004b  26                pop         
IL_004c  7e 64 00 00 04    ldsfld       0x4000064
IL_0051  fe 06 8f 00 00 06 ldftn        0x600008F
IL_0057  73 39 00 00 0a    newobj       0xA000039
IL_005c  25                dup         
IL_005d  80 66 00 00 04    stsfld       0x4000066
IL_0062  28 02 00 00 2b    call         0x2B000002
IL_0067  13 04             stloc.s      0x4
IL_0069  06                ldloc.0     
IL_006a  09                ldloc.3     
IL_006b  72 7e 04 00 70    ldstr        0x7000047E
IL_0070  28 70 00 00 0a    call         0xA000070
IL_0075  6f a1 00 00 0a    callvirt     0xA0000A1
IL_007a  06                ldloc.0     
IL_007b  11 04             ldloc.s      0x4
IL_007d  7e 67 00 00 04    ldsfld       0x4000067
IL_0082  25                dup         
IL_0083  2d 17             brtrue.s     23 (IL_009c)
IL_0085  26                pop         
IL_0086  7e 64 00 00 04    ldsfld       0x4000064
IL_008b  fe 06 90 00 00 06 ldftn        0x6000090
IL_0091  73 a2 00 00 0a    newobj       0xA0000A2
IL_0096  25                dup         
IL_0097  80 67 00 00 04    stsfld       0x4000067
IL_009c  28 0e 00 00 2b    call         0x2B00000E
IL_00a1  6f a1 00 00 0a    callvirt     0xA0000A1
IL_00a6  08                ldloc.2     
IL_00a7  17                ldc.i4.1    
IL_00a8  58                add         
IL_00a9  0c                stloc.2     
IL_00aa  08                ldloc.2     
IL_00ab  07                ldloc.1     
IL_00ac  8e                ldlen       
IL_00ad  69                conv.i4     
IL_00ae  3f 6a ff ff ff    blt          -150 (IL_001d)
IL_00b3  06                ldloc.0     
IL_00b4  28 0f 00 00 2b    call         0x2B00000F
IL_00b9  72 90 04 00 70    ldstr        0x70000490
IL_00be  18                ldc.i4.2    
IL_00bf  28 0b 00 00 2b    call         0x2B00000B
IL_00c4  26                pop         
IL_00c5  06                ldloc.0     
IL_00c6  2a                ret         

lvaSetClass: setting class for V00 to (00000000D1FFAB1E) System.String[] 
Arg #0    passed in register(s) rcx

lvaSetClass: setting class for V01 to (00000000D1FFAB1E) System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] 

lvaSetClass: setting class for V02 to (00000000D1FFAB1E) System.String[] 

lvaSetClass: setting class for V04 to (00000000D1FFAB1E) System.String 

lvaSetClass: setting class for V05 to (00000000D1FFAB1E) System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] 

lvaGrabTemp returning 6 (V06 tmp0) (a long lifetime temp) called for OutgoingArgSpace.
; Initial local variable assignments
;
;  V00 arg0              ref  class-hnd
;  V01 loc0              ref  class-hnd
;  V02 loc1              ref  class-hnd
;  V03 loc2              int 
;  V04 loc3              ref  class-hnd
;  V05 loc4              ref  class-hnd
;  V06 OutArgs        lclBlk <na>  "OutgoingArgSpace"
*************** In compInitDebuggingInfo() for SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]
getVars() returned cVars = 0, extendOthers = true
info.compVarScopesCount = 6
    	VarNum 	LVNum 	      Name 	Beg 	End
 0: 	00h 	00h 	  V00 arg0 	000h   	0C7h
 1: 	01h 	01h 	  V01 loc0 	000h   	0C7h
 2: 	02h 	02h 	  V02 loc1 	000h   	0C7h
 3: 	03h 	03h 	  V03 loc2 	000h   	0C7h
 4: 	04h 	04h 	  V04 loc3 	000h   	0C7h
 5: 	05h 	05h 	  V05 loc4 	000h   	0C7h
info.compStmtOffsetsCount    = 0
info.compStmtOffsetsImplicit = 0005h ( STACK_EMPTY CALL_SITE )
*************** In fgFindBasicBlocks() for SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]
Marked V01 as a single def local
Marked V02 as a single def local
Marked V04 as a single def local
Marked V05 as a single def local
Jump targets:
  IL_001d
  IL_0037
  IL_0062
  IL_009c
  IL_00a6
  IL_00aa
New Basic Block BB01 [0000] created.
BB01 [000..01D)
New Basic Block BB02 [0001] created.
BB02 [01D..02E)
New Basic Block BB03 [0002] created.
BB03 [02E..037)
New Basic Block BB04 [0003] created.
BB04 [037..04B)
New Basic Block BB05 [0004] created.
BB05 [04B..062)
New Basic Block BB06 [0005] created.
BB06 [062..085)
New Basic Block BB07 [0006] created.
BB07 [085..09C)
New Basic Block BB08 [0007] created.
BB08 [09C..0A6)
New Basic Block BB09 [0008] created.
BB09 [0A6..0AA)
New Basic Block BB10 [0009] created.
BB10 [0AA..0B3)
New Basic Block BB11 [0010] created.
BB11 [0B3..0C7)
IL Code Size,Instr  199,  74, Basic Block count  11, Local Variable Num,Ref count   7, 22 for method SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]
OPTIONS: opts.MinOpts() == false
Basic block list for 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB10 (always)                     
BB02 [0001]  1                             1       [01D..02E)-> BB04 ( cond )                     bwd bwd-target 
BB03 [0002]  1                             1       [02E..037)-> BB09 (always)                     bwd 
BB04 [0003]  1                             1       [037..04B)-> BB06 ( cond )                     bwd 
BB05 [0004]  1                             1       [04B..062)                                     bwd 
BB06 [0005]  2                             1       [062..085)-> BB08 ( cond )                     bwd 
BB07 [0006]  1                             1       [085..09C)                                     bwd 
BB08 [0007]  2                             1       [09C..0A6)                                     bwd 
BB09 [0008]  2                             1       [0A6..0AA)                                     bwd 
BB10 [0009]  2                             1       [0AA..0B3)-> BB02 ( cond )                     bwd 
BB11 [0010]  1                             1       [0B3..0C7)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Pre-import

*************** Finishing PHASE Pre-import

*************** Starting PHASE Importation
*************** In impImport() for SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]

impImportBlockPending for BB01

Importing BB01 (PC=000) of 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'
    [ 0]   0 (0x000) ldstr 70000424
    [ 1]   5 (0x005) ldc.i4.2 2
    [ 2]   6 (0x006) call 2B00000B
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0


STMT00000 (IL 0x000...  ???)
               [000002] I-C-G-------              *  CALL      ref    SolutionAnalyzer.Logger.Log (exactContextHnd=0x00000000D1FFAB1E)
               [000003] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000000] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000001] ------------ arg2         \--*  CNS_INT   int    2

    [ 1]  11 (0x00b) pop

STMT00001 (IL   ???...  ???)
               [000006] --C---------              *  COMMA     void  
               [000004] --C---------              +--*  RET_EXPR  ref   (inl return from call [000002])
               [000005] ------------              \--*  NOP       void  

    [ 0]  12 (0x00c) ldc.i4.s 100
    [ 1]  14 (0x00e) newobj
lvaGrabTemp returning 7 (V07 tmp1) called for NewObj constructor temp.


STMT00002 (IL 0x00C...  ???)
               [000011] -A----------              *  ASG       ref   
               [000010] D------N----              +--*  LCL_VAR   ref    V07 tmp1         
               [000009] ------------              \--*  ALLOCOBJ  ref   
               [000008] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token
Marked V07 as a single def local

lvaSetClass: setting class for V07 to (00000000D1FFAB1E) System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]  [exact]
 0A00009D
In Compiler::impImportCall: opcode is newobj, kind=0, callRetType is void, structSize is 0


STMT00003 (IL   ???...  ???)
               [000013] I-C-G-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000012] ------------ this in rcx  +--*  LCL_VAR   ref    V07 tmp1         
               [000007] ------------ arg1         \--*  CNS_INT   int    100

    [ 1]  19 (0x013) stloc.0
lvaUpdateClass: Updating class for V01 from (00000000D1FFAB1E) System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] to (00000000D1FFAB1E) System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] [exact]


STMT00004 (IL 0x013...  ???)
               [000016] -A----------              *  ASG       ref   
               [000015] D------N----              +--*  LCL_VAR   ref    V01 loc0         
               [000014] ------------              \--*  LCL_VAR   ref    V07 tmp1         

    [ 0]  20 (0x014) ldarg.0
    [ 1]  21 (0x015) stloc.1

STMT00005 (IL 0x014...  ???)
               [000019] -A----------              *  ASG       ref   
               [000018] D------N----              +--*  LCL_VAR   ref    V02 loc1         
               [000017] ------------              \--*  LCL_VAR   ref    V00 arg0         

    [ 0]  22 (0x016) ldc.i4.0 0
    [ 1]  23 (0x017) stloc.2

STMT00006 (IL 0x016...  ???)
               [000022] -A----------              *  ASG       int   
               [000021] D------N----              +--*  LCL_VAR   int    V03 loc2         
               [000020] ------------              \--*  CNS_INT   int    0

    [ 0]  24 (0x018) br
impImportBlockPending for BB10

Importing BB10 (PC=170) of 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'
    [ 0] 170 (0x0aa) ldloc.2
    [ 1] 171 (0x0ab) ldloc.1
    [ 2] 172 (0x0ac) ldlen
    [ 2] 173 (0x0ad) conv.i4
    [ 2] 174 (0x0ae) blt

STMT00007 (IL 0x0AA...  ???)
               [000027] ---X--------              *  JTRUE     void  
               [000026] ---X--------              \--*  LT        int   
               [000023] ------------                 +--*  LCL_VAR   int    V03 loc2         
               [000025] ---X--------                 \--*  ARR_LENGTH int   
               [000024] ------------                    \--*  LCL_VAR   ref    V02 loc1         

impImportBlockPending for BB11

impImportBlockPending for BB02

Importing BB02 (PC=029) of 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'
    [ 0]  29 (0x01d) ldloc.1
    [ 1]  30 (0x01e) ldloc.2
    [ 2]  31 (0x01f) ldelem.ref
    [ 1]  32 (0x020) stloc.3

STMT00008 (IL 0x01D...  ???)
               [000032] -A-XG-------              *  ASG       ref   
               [000031] D------N----              +--*  LCL_VAR   ref    V04 loc3         
               [000030] ---XG-------              \--*  INDEX     ref   
               [000028] ------------                 +--*  LCL_VAR   ref    V02 loc1         
               [000029] ------------                 \--*  LCL_VAR   int    V03 loc2         

    [ 0]  33 (0x021) ldloc.3
    [ 1]  34 (0x022) ldstr 7000046A
    [ 2]  39 (0x027) callvirt 0A00009E
In Compiler::impImportCall: opcode is callvirt, kind=0, callRetType is bool, structSize is 0


STMT00009 (IL 0x021...  ???)
               [000035] I-C-G-------              *  CALL nullcheck int    System.String.EndsWith (exactContextHnd=0x00000000D1FFAB1E)
               [000033] ------------ this in rcx  +--*  LCL_VAR   ref    V04 loc3         
               [000034] ------------ arg1         \--*  CNS_STR   ref   <string constant>

    [ 1]  44 (0x02c) brfalse.s

STMT00010 (IL   ???...  ???)
               [000039] --C---------              *  JTRUE     void  
               [000038] --C---------              \--*  EQ        int   
               [000036] --C---------                 +--*  RET_EXPR  int   (inl return from call [000035])
               [000037] ------------                 \--*  CNS_INT   int    0

impImportBlockPending for BB03

impImportBlockPending for BB04

Importing BB04 (PC=055) of 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'
    [ 0]  55 (0x037) ldloc.3
    [ 1]  56 (0x038) ldstr 7000047A
    [ 2]  61 (0x03d) ldc.i4.1 1
    [ 3]  62 (0x03e) call 0A0000A0
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0


STMT00011 (IL 0x037...  ???)
               [000043] I-C-G-------              *  CALL      ref    System.IO.Directory.EnumerateDirectories (exactContextHnd=0x00000000D1FFAB1E)
               [000040] ------------ arg0         +--*  LCL_VAR   ref    V04 loc3         
               [000041] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000042] ------------ arg2         \--*  CNS_INT   int    1

    [ 1]  67 (0x043) ldsfld 04000066
    [ 2]  72 (0x048) dup
lvaGrabTemp returning 8 (V08 tmp2) called for dup spill.

lvaGrabTemp returning 9 (V09 tmp3) called for impAppendStmt.


STMT00013 (IL   ???...  ???)
               [000054] -AC---------              *  ASG       ref   
               [000053] D------N----              +--*  LCL_VAR   ref    V09 tmp3         
               [000044] --C---------              \--*  RET_EXPR  ref   (inl return from call [000043])
Marked V09 as a single def temp
Named Intrinsic System.IO.Directory.EnumerateDirectories: Not recognized

lvaSetClass: setting class for V09 to (00000000D1FFAB1E) System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] 

*** see V09 = GT_RET_EXPR, noting temp


STMT00012 (IL   ???...  ???)
               [000052] -ACXG-------              *  ASG       ref   
               [000051] D------N----              +--*  LCL_VAR   ref    V08 tmp2         
               [000050] --CXG-------              \--*  COMMA     ref   
               [000049] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000047] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000048] ------------ arg1            |  \--*  CNS_INT   int    35
               [000045] ----G-------                 \--*  FIELD     ref    <>9__2_0
Marked V08 as a single def local
Querying runtime about current class of field <>c.<>9__2_0 (declared as System.Func`2[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]])
Field's current class not available

lvaSetClass: setting class for V08 to (00000000D1FFAB1E) System.Func`2[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] 

    [ 3]  73 (0x049) brtrue.s

STMT00014 (IL   ???...  ???)
               [000060] ------------              *  JTRUE     void  
               [000059] ------------              \--*  NE        int   
               [000057] ------------                 +--*  LCL_VAR   ref    V08 tmp2         
               [000058] ------------                 \--*  CNS_INT   ref    null

*************** In impGetSpillTmpBase(BB04)

lvaGrabTemps(2) returning 10..11 (long lifetime temps) called for IL Stack Entries
*************** In fgComputeCheapPreds()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB10 (always)                     i newobj 
BB02 [0001]  1                             1       [01D..02E)-> BB04 ( cond )                     i idxlen bwd bwd-target 
BB03 [0002]  1                             1       [02E..037)-> BB09 (always)                     bwd 
BB04 [0003]  1                             1       [037..04B)-> BB06 ( cond )                     bwd 
BB05 [0004]  1                             1       [04B..062)                                     bwd 
BB06 [0005]  2                             1       [062..085)-> BB08 ( cond )                     bwd 
BB07 [0006]  1                             1       [085..09C)                                     bwd 
BB08 [0007]  2                             1       [09C..0A6)                                     bwd 
BB09 [0008]  2                             1       [0A6..0AA)                                     bwd 
BB10 [0009]  2                             1       [0AA..0B3)-> BB02 ( cond )                     i idxlen bwd 
BB11 [0010]  1                             1       [0B3..0C7)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------


*************** After fgComputeCheapPreds()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd cheap preds     weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB10 (always)                     i newobj 
BB02 [0001]  1       BB10                  1       [01D..02E)-> BB04 ( cond )                     i idxlen bwd bwd-target 
BB03 [0002]  1       BB02                  1       [02E..037)-> BB09 (always)                     bwd 
BB04 [0003]  1       BB02                  1       [037..04B)-> BB06 ( cond )                     bwd 
BB05 [0004]  1       BB04                  1       [04B..062)                                     bwd 
BB06 [0005]  2       BB05,BB04             1       [062..085)-> BB08 ( cond )                     bwd 
BB07 [0006]  1       BB06                  1       [085..09C)                                     bwd 
BB08 [0007]  2       BB07,BB06             1       [09C..0A6)                                     bwd 
BB09 [0008]  2       BB08,BB03             1       [0A6..0AA)                                     bwd 
BB10 [0009]  2       BB09,BB01             1       [0AA..0B3)-> BB02 ( cond )                     i idxlen bwd 
BB11 [0010]  1       BB10                  1       [0B3..0C7)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------


Spilling stack entries into temps


STMT00015 (IL   ???...  ???)
               [000062] -A----------              *  ASG       ref   
               [000061] D------N----              +--*  LCL_VAR   ref    V10 tmp4         
               [000055] ------------              \--*  LCL_VAR   ref    V09 tmp3         


STMT00016 (IL   ???...  ???)
               [000065] -A----------              *  ASG       ref   
               [000064] D------N----              +--*  LCL_VAR   ref    V11 tmp5         
               [000056] ------------              \--*  LCL_VAR   ref    V08 tmp2         


STMT00014 (IL   ???...  ???)
               [000060] ------------              *  JTRUE     void  
               [000059] ------------              \--*  NE        int   
               [000057] ------------                 +--*  LCL_VAR   ref    V08 tmp2         
               [000058] ------------                 \--*  CNS_INT   ref    null

impImportBlockPending for BB05

impImportBlockPending for BB06

Importing BB06 (PC=098) of 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'
    [ 2]  98 (0x062) call 2B000002
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0


STMT00017 (IL   ???...  ???)
               [000071] I-C-G-------              *  CALL      ref    System.Linq.Enumerable.Where (exactContextHnd=0x00000000D1FFAB1E)
               [000072] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000069] ------------ arg1         +--*  LCL_VAR   ref    V10 tmp4         
               [000070] ------------ arg2         \--*  LCL_VAR   ref    V11 tmp5         

    [ 1] 103 (0x067) stloc.s 4

STMT00018 (IL   ???...  ???)
               [000075] -AC---------              *  ASG       ref   
               [000074] D------N----              +--*  LCL_VAR   ref    V05 loc4         
               [000073] --C---------              \--*  RET_EXPR  ref   (inl return from call [000071])

    [ 0] 105 (0x069) ldloc.0
    [ 1] 106 (0x06a) ldloc.3
    [ 2] 107 (0x06b) ldstr 7000047E
    [ 3] 112 (0x070) call 0A000070
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0


STMT00019 (IL 0x069...  ???)
               [000079] I-C-G-------              *  CALL      ref    System.IO.Directory.EnumerateFiles (exactContextHnd=0x00000000D1FFAB1E)
               [000077] ------------ arg0         +--*  LCL_VAR   ref    V04 loc3         
               [000078] ------------ arg1         \--*  CNS_STR   ref   <string constant>

    [ 2] 117 (0x075) callvirt 0A0000A1
In Compiler::impImportCall: opcode is callvirt, kind=0, callRetType is void, structSize is 0


STMT00020 (IL   ???...  ???)
               [000081] I-C-G-------              *  CALL nullcheck void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddRange (exactContextHnd=0x00000000D1FFAB1E)
               [000076] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         
               [000080] --C--------- arg1         \--*  RET_EXPR  ref   (inl return from call [000079])

    [ 0] 122 (0x07a) ldloc.0
    [ 1] 123 (0x07b) ldloc.s 4
    [ 2] 125 (0x07d) ldsfld 04000067
    [ 3] 130 (0x082) dup
lvaGrabTemp returning 12 (V12 tmp6) called for dup spill.


STMT00021 (IL 0x07A...  ???)
               [000091] -ACXG-------              *  ASG       ref   
               [000090] D------N----              +--*  LCL_VAR   ref    V12 tmp6         
               [000089] --CXG-------              \--*  COMMA     ref   
               [000088] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000086] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000087] ------------ arg1            |  \--*  CNS_INT   int    35
               [000084] ----G-------                 \--*  FIELD     ref    <>9__2_1
Marked V12 as a single def local
Querying runtime about current class of field <>c.<>9__2_1 (declared as System.Func`2[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]])
Field's current class not available

lvaSetClass: setting class for V12 to (00000000D1FFAB1E) System.Func`2[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] 

    [ 4] 131 (0x083) brtrue.s

STMT00022 (IL   ???...  ???)
               [000096] ------------              *  JTRUE     void  
               [000095] ------------              \--*  NE        int   
               [000093] ------------                 +--*  LCL_VAR   ref    V12 tmp6         
               [000094] ------------                 \--*  CNS_INT   ref    null

*************** In impGetSpillTmpBase(BB06)

lvaGrabTemps(3) returning 13..15 (long lifetime temps) called for IL Stack Entries
Spilling stack entries into temps


STMT00023 (IL   ???...  ???)
               [000098] -A----------              *  ASG       ref   
               [000097] D------N----              +--*  LCL_VAR   ref    V13 tmp7         
               [000082] ------------              \--*  LCL_VAR   ref    V01 loc0         


STMT00024 (IL   ???...  ???)
               [000101] -A----------              *  ASG       ref   
               [000100] D------N----              +--*  LCL_VAR   ref    V14 tmp8         
               [000083] ------------              \--*  LCL_VAR   ref    V05 loc4         


STMT00025 (IL   ???...  ???)
               [000104] -A----------              *  ASG       ref   
               [000103] D------N----              +--*  LCL_VAR   ref    V15 tmp9         
               [000092] ------------              \--*  LCL_VAR   ref    V12 tmp6         


STMT00022 (IL   ???...  ???)
               [000096] ------------              *  JTRUE     void  
               [000095] ------------              \--*  NE        int   
               [000093] ------------                 +--*  LCL_VAR   ref    V12 tmp6         
               [000094] ------------                 \--*  CNS_INT   ref    null

impImportBlockPending for BB07

impImportBlockPending for BB08

Importing BB08 (PC=156) of 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'
    [ 3] 156 (0x09c) call 2B00000E
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0


STMT00026 (IL   ???...  ???)
               [000112] I-C-G-------              *  CALL      ref    System.Linq.Enumerable.SelectMany (exactContextHnd=0x00000000D1FFAB1E)
               [000113] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000110] ------------ arg1         +--*  LCL_VAR   ref    V14 tmp8         
               [000111] ------------ arg2         \--*  LCL_VAR   ref    V15 tmp9         

    [ 2] 161 (0x0a1) callvirt 0A0000A1
In Compiler::impImportCall: opcode is callvirt, kind=0, callRetType is void, structSize is 0


STMT00027 (IL   ???...  ???)
               [000115] I-C-G-------              *  CALL nullcheck void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddRange (exactContextHnd=0x00000000D1FFAB1E)
               [000109] ------------ this in rcx  +--*  LCL_VAR   ref    V13 tmp7         
               [000114] --C--------- arg1         \--*  RET_EXPR  ref   (inl return from call [000112])

impImportBlockPending for BB09

Importing BB09 (PC=166) of 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'
    [ 0] 166 (0x0a6) ldloc.2
    [ 1] 167 (0x0a7) ldc.i4.1 1
    [ 2] 168 (0x0a8) add
    [ 1] 169 (0x0a9) stloc.2

STMT00028 (IL 0x0A6...  ???)
               [000120] -A----------              *  ASG       int   
               [000119] D------N----              +--*  LCL_VAR   int    V03 loc2         
               [000118] ------------              \--*  ADD       int   
               [000116] ------------                 +--*  LCL_VAR   int    V03 loc2         
               [000117] ------------                 \--*  CNS_INT   int    1

impImportBlockPending for BB10

Importing BB07 (PC=133) of 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'
    [ 3] 133 (0x085) pop
    [ 2] 134 (0x086) ldsfld 04000064
    [ 3] 139 (0x08b) ldftn 06000090
    [ 4] 145 (0x091) newobj
lvaGrabTemp returning 16 (V16 tmp10) called for NewObj constructor temp.


STMT00029 (IL   ???...  ???)
               [000131] -A----------              *  ASG       ref   
               [000130] D------N----              +--*  LCL_VAR   ref    V16 tmp10        
               [000129] ------------              \--*  ALLOCOBJ  ref   
               [000128] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token
Marked V16 as a single def local

lvaSetClass: setting class for V16 to (00000000D1FFAB1E) System.Func`2[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]  [exact]
 0A0000A2
In Compiler::impImportCall: opcode is newobj, kind=0, callRetType is void, structSize is 0

fgOptimizeDelegateConstructor: optimized


STMT00030 (IL   ???...  ???)
               [000133] I-CXG-------              *  CALL      void   System.MulticastDelegate.CtorClosed (exactContextHnd=0x00000000D1FFAB1E)
               [000132] ------------ this in rcx  +--*  LCL_VAR   ref    V16 tmp10        
               [000126] --CXG------- arg1         +--*  COMMA     ref   
               [000125] H-CXG-------              |  +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000123] ------------ arg0         |  |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000124] ------------ arg1         |  |  \--*  CNS_INT   int    35
               [000121] ----G-------              |  \--*  FIELD     ref    <>9
               [000127] ------------ arg2         \--*  FTN_ADDR  long   <>c.<GetProjectPaths>b__2_1


    [ 3] 150 (0x096) dup
    [ 4] 151 (0x097) stsfld 04000067

STMT00031 (IL 0x096...  ???)
               [000142] -ACXG-------              *  COMMA     ref   
               [000141] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000139] ------------ arg0         |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000140] ------------ arg1         |  \--*  CNS_INT   int    35
               [000137] -A--G-------              \--*  ASG       ref   
               [000136] ----G--N----                 +--*  FIELD     ref    <>9__2_1
               [000135] ------------                 \--*  LCL_VAR   ref    V16 tmp10        

Spilling stack entries into temps


STMT00032 (IL   ???...  ???)
               [000148] -A----------              *  ASG       ref   
               [000147] D------N----              +--*  LCL_VAR   ref    V15 tmp9         
               [000134] ------------              \--*  LCL_VAR   ref    V16 tmp10        

impImportBlockPending for BB08

Importing BB05 (PC=075) of 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'
    [ 2]  75 (0x04b) pop
    [ 1]  76 (0x04c) ldsfld 04000064
    [ 2]  81 (0x051) ldftn 0600008F
    [ 3]  87 (0x057) newobj
lvaGrabTemp returning 17 (V17 tmp11) called for NewObj constructor temp.


STMT00033 (IL   ???...  ???)
               [000160] -A----------              *  ASG       ref   
               [000159] D------N----              +--*  LCL_VAR   ref    V17 tmp11        
               [000158] ------------              \--*  ALLOCOBJ  ref   
               [000157] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token
Marked V17 as a single def local

lvaSetClass: setting class for V17 to (00000000D1FFAB1E) System.Func`2[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]  [exact]
 0A000039
In Compiler::impImportCall: opcode is newobj, kind=0, callRetType is void, structSize is 0

fgOptimizeDelegateConstructor: optimized


STMT00034 (IL   ???...  ???)
               [000162] I-CXG-------              *  CALL      void   System.MulticastDelegate.CtorClosed (exactContextHnd=0x00000000D1FFAB1E)
               [000161] ------------ this in rcx  +--*  LCL_VAR   ref    V17 tmp11        
               [000155] --CXG------- arg1         +--*  COMMA     ref   
               [000154] H-CXG-------              |  +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000152] ------------ arg0         |  |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000153] ------------ arg1         |  |  \--*  CNS_INT   int    35
               [000150] ----G-------              |  \--*  FIELD     ref    <>9
               [000156] ------------ arg2         \--*  FTN_ADDR  long   <>c.<GetProjectPaths>b__2_0


    [ 2]  92 (0x05c) dup
    [ 3]  93 (0x05d) stsfld 04000066

STMT00035 (IL 0x05C...  ???)
               [000171] -ACXG-------              *  COMMA     ref   
               [000170] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000168] ------------ arg0         |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000169] ------------ arg1         |  \--*  CNS_INT   int    35
               [000166] -A--G-------              \--*  ASG       ref   
               [000165] ----G--N----                 +--*  FIELD     ref    <>9__2_0
               [000164] ------------                 \--*  LCL_VAR   ref    V17 tmp11        

Spilling stack entries into temps


STMT00036 (IL   ???...  ???)
               [000175] -A----------              *  ASG       ref   
               [000174] D------N----              +--*  LCL_VAR   ref    V11 tmp5         
               [000163] ------------              \--*  LCL_VAR   ref    V17 tmp11        

impImportBlockPending for BB06

Importing BB03 (PC=046) of 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'
    [ 0]  46 (0x02e) ldloc.0
    [ 1]  47 (0x02f) ldloc.3
    [ 2]  48 (0x030) callvirt 0A00009F
In Compiler::impImportCall: opcode is callvirt, kind=0, callRetType is void, structSize is 0


STMT00037 (IL 0x02E...  ???)
               [000179] I-C-G-------              *  CALL nullcheck void   System.Collections.Generic.List`1[__Canon][System.__Canon].Add (exactContextHnd=0x00000000D1FFAB1E)
               [000177] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         
               [000178] ------------ arg1         \--*  LCL_VAR   ref    V04 loc3         

    [ 0]  53 (0x035) br.s
impImportBlockPending for BB09

Importing BB11 (PC=179) of 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'
    [ 0] 179 (0x0b3) ldloc.0
    [ 1] 180 (0x0b4) call 2B00000F
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0


STMT00038 (IL 0x0B3...  ???)
               [000181] I-C-G-------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle (exactContextHnd=0x00000000D1FFAB1E)
               [000182] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000180] ------------ arg1         \--*  LCL_VAR   ref    V01 loc0         

    [ 0] 185 (0x0b9) ldstr 70000490
    [ 1] 190 (0x0be) ldc.i4.2 2
    [ 2] 191 (0x0bf) call 2B00000B
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0


STMT00039 (IL 0x0B9...  ???)
               [000185] I-C-G-------              *  CALL      ref    SolutionAnalyzer.Logger.Log (exactContextHnd=0x00000000D1FFAB1E)
               [000186] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000183] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000184] ------------ arg2         \--*  CNS_INT   int    2

    [ 1] 196 (0x0c4) pop

STMT00040 (IL   ???...  ???)
               [000189] --C---------              *  COMMA     void  
               [000187] --C---------              +--*  RET_EXPR  ref   (inl return from call [000185])
               [000188] ------------              \--*  NOP       void  

    [ 0] 197 (0x0c5) ldloc.0
    [ 1] 198 (0x0c6) ret

STMT00041 (IL 0x0C5...  ???)
               [000191] ------------              *  RETURN    ref   
               [000190] ------------              \--*  LCL_VAR   ref    V01 loc0         

*************** Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB10 (always)                     i newobj 
BB02 [0001]  1                             1       [01D..02E)-> BB04 ( cond )                     i idxlen bwd bwd-target 
BB03 [0002]  1                             1       [02E..037)-> BB09 (always)                     i bwd 
BB04 [0003]  1                             1       [037..04B)-> BB06 ( cond )                     i bwd 
BB05 [0004]  1                             1       [04B..062)                                     i newobj bwd 
BB06 [0005]  2                             1       [062..085)-> BB08 ( cond )                     i bwd 
BB07 [0006]  1                             1       [085..09C)                                     i newobj bwd 
BB08 [0007]  2                             1       [09C..0A6)                                     i bwd 
BB09 [0008]  2                             1       [0A6..0AA)                                     i bwd 
BB10 [0009]  2                             1       [0AA..0B3)-> BB02 ( cond )                     i idxlen bwd 
BB11 [0010]  1                             1       [0B3..0C7)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..01D) -> BB10 (always), preds={} succs={BB10}

***** BB01
STMT00000 (IL 0x000...0x00B)
               [000002] I-C-G-------              *  CALL      ref    SolutionAnalyzer.Logger.Log (exactContextHnd=0x00000000D1FFAB1E)
               [000003] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000000] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000001] ------------ arg2         \--*  CNS_INT   int    2

***** BB01
STMT00001 (IL   ???...  ???)
               [000006] --C---------              *  COMMA     void  
               [000004] --C---------              +--*  RET_EXPR  ref   (inl return from call [000002])
               [000005] ------------              \--*  NOP       void  

***** BB01
STMT00002 (IL 0x00C...0x013)
               [000011] -A----------              *  ASG       ref   
               [000010] D------N----              +--*  LCL_VAR   ref    V07 tmp1         
               [000009] ------------              \--*  ALLOCOBJ  ref   
               [000008] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00003 (IL   ???...  ???)
               [000013] I-C-G-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000012] ------------ this in rcx  +--*  LCL_VAR   ref    V07 tmp1         
               [000007] ------------ arg1         \--*  CNS_INT   int    100

***** BB01
STMT00004 (IL 0x013...  ???)
               [000016] -A----------              *  ASG       ref   
               [000015] D------N----              +--*  LCL_VAR   ref    V01 loc0         
               [000014] ------------              \--*  LCL_VAR   ref    V07 tmp1         

***** BB01
STMT00005 (IL 0x014...0x015)
               [000019] -A----------              *  ASG       ref   
               [000018] D------N----              +--*  LCL_VAR   ref    V02 loc1         
               [000017] ------------              \--*  LCL_VAR   ref    V00 arg0         

***** BB01
STMT00006 (IL 0x016...0x017)
               [000022] -A----------              *  ASG       int   
               [000021] D------N----              +--*  LCL_VAR   int    V03 loc2         
               [000020] ------------              \--*  CNS_INT   int    0

------------ BB02 [01D..02E) -> BB04 (cond), preds={} succs={BB03,BB04}

***** BB02
STMT00008 (IL 0x01D...0x020)
               [000032] -A-XG-------              *  ASG       ref   
               [000031] D------N----              +--*  LCL_VAR   ref    V04 loc3         
               [000030] ---XG-------              \--*  INDEX     ref   
               [000028] ------------                 +--*  LCL_VAR   ref    V02 loc1         
               [000029] ------------                 \--*  LCL_VAR   int    V03 loc2         

***** BB02
STMT00009 (IL 0x021...0x02C)
               [000035] I-C-G-------              *  CALL nullcheck int    System.String.EndsWith (exactContextHnd=0x00000000D1FFAB1E)
               [000033] ------------ this in rcx  +--*  LCL_VAR   ref    V04 loc3         
               [000034] ------------ arg1         \--*  CNS_STR   ref   <string constant>

***** BB02
STMT00010 (IL   ???...  ???)
               [000039] --C---------              *  JTRUE     void  
               [000038] --C---------              \--*  EQ        int   
               [000036] --C---------                 +--*  RET_EXPR  int   (inl return from call [000035])
               [000037] ------------                 \--*  CNS_INT   int    0

------------ BB03 [02E..037) -> BB09 (always), preds={} succs={BB09}

***** BB03
STMT00037 (IL 0x02E...0x035)
               [000179] I-C-G-------              *  CALL nullcheck void   System.Collections.Generic.List`1[__Canon][System.__Canon].Add (exactContextHnd=0x00000000D1FFAB1E)
               [000177] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         
               [000178] ------------ arg1         \--*  LCL_VAR   ref    V04 loc3         

------------ BB04 [037..04B) -> BB06 (cond), preds={} succs={BB05,BB06}

***** BB04
STMT00011 (IL 0x037...0x049)
               [000043] I-C-G-------              *  CALL      ref    System.IO.Directory.EnumerateDirectories (exactContextHnd=0x00000000D1FFAB1E)
               [000040] ------------ arg0         +--*  LCL_VAR   ref    V04 loc3         
               [000041] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000042] ------------ arg2         \--*  CNS_INT   int    1

***** BB04
STMT00013 (IL   ???...  ???)
               [000054] -AC---------              *  ASG       ref   
               [000053] D------N----              +--*  LCL_VAR   ref    V09 tmp3         
               [000044] --C---------              \--*  RET_EXPR  ref   (inl return from call [000043])

***** BB04
STMT00012 (IL   ???...  ???)
               [000052] -ACXG-------              *  ASG       ref   
               [000051] D------N----              +--*  LCL_VAR   ref    V08 tmp2         
               [000050] --CXG-------              \--*  COMMA     ref   
               [000049] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000047] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000048] ------------ arg1            |  \--*  CNS_INT   int    35
               [000045] ----G-------                 \--*  FIELD     ref    <>9__2_0

***** BB04
STMT00015 (IL   ???...0x049)
               [000062] -A----------              *  ASG       ref   
               [000061] D------N----              +--*  LCL_VAR   ref    V10 tmp4         
               [000055] ------------              \--*  LCL_VAR   ref    V09 tmp3         

***** BB04
STMT00016 (IL   ???...  ???)
               [000065] -A----------              *  ASG       ref   
               [000064] D------N----              +--*  LCL_VAR   ref    V11 tmp5         
               [000056] ------------              \--*  LCL_VAR   ref    V08 tmp2         

***** BB04
STMT00014 (IL   ???...  ???)
               [000060] ------------              *  JTRUE     void  
               [000059] ------------              \--*  NE        int   
               [000057] ------------                 +--*  LCL_VAR   ref    V08 tmp2         
               [000058] ------------                 \--*  CNS_INT   ref    null

------------ BB05 [04B..062), preds={} succs={BB06}

***** BB05
STMT00033 (IL   ???...0x05D)
               [000160] -A----------              *  ASG       ref   
               [000159] D------N----              +--*  LCL_VAR   ref    V17 tmp11        
               [000158] ------------              \--*  ALLOCOBJ  ref   
               [000157] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB05
STMT00034 (IL   ???...  ???)
               [000162] I-CXG-------              *  CALL      void   System.MulticastDelegate.CtorClosed (exactContextHnd=0x00000000D1FFAB1E)
               [000161] ------------ this in rcx  +--*  LCL_VAR   ref    V17 tmp11        
               [000155] --CXG------- arg1         +--*  COMMA     ref   
               [000154] H-CXG-------              |  +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000152] ------------ arg0         |  |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000153] ------------ arg1         |  |  \--*  CNS_INT   int    35
               [000150] ----G-------              |  \--*  FIELD     ref    <>9
               [000156] ------------ arg2         \--*  FTN_ADDR  long   <>c.<GetProjectPaths>b__2_0


***** BB05
STMT00035 (IL 0x05C...  ???)
               [000171] -ACXG-------              *  COMMA     ref   
               [000170] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000168] ------------ arg0         |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000169] ------------ arg1         |  \--*  CNS_INT   int    35
               [000166] -A--G-------              \--*  ASG       ref   
               [000165] ----G--N----                 +--*  FIELD     ref    <>9__2_0
               [000164] ------------                 \--*  LCL_VAR   ref    V17 tmp11        

***** BB05
STMT00036 (IL   ???...0x05D)
               [000175] -A----------              *  ASG       ref   
               [000174] D------N----              +--*  LCL_VAR   ref    V11 tmp5         
               [000163] ------------              \--*  LCL_VAR   ref    V17 tmp11        

------------ BB06 [062..085) -> BB08 (cond), preds={} succs={BB07,BB08}

***** BB06
STMT00017 (IL   ???...0x067)
               [000071] I-C-G-------              *  CALL      ref    System.Linq.Enumerable.Where (exactContextHnd=0x00000000D1FFAB1E)
               [000072] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000069] ------------ arg1         +--*  LCL_VAR   ref    V10 tmp4         
               [000070] ------------ arg2         \--*  LCL_VAR   ref    V11 tmp5         

***** BB06
STMT00018 (IL   ???...  ???)
               [000075] -AC---------              *  ASG       ref   
               [000074] D------N----              +--*  LCL_VAR   ref    V05 loc4         
               [000073] --C---------              \--*  RET_EXPR  ref   (inl return from call [000071])

***** BB06
STMT00019 (IL 0x069...0x083)
               [000079] I-C-G-------              *  CALL      ref    System.IO.Directory.EnumerateFiles (exactContextHnd=0x00000000D1FFAB1E)
               [000077] ------------ arg0         +--*  LCL_VAR   ref    V04 loc3         
               [000078] ------------ arg1         \--*  CNS_STR   ref   <string constant>

***** BB06
STMT00020 (IL   ???...  ???)
               [000081] I-C-G-------              *  CALL nullcheck void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddRange (exactContextHnd=0x00000000D1FFAB1E)
               [000076] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         
               [000080] --C--------- arg1         \--*  RET_EXPR  ref   (inl return from call [000079])

***** BB06
STMT00021 (IL 0x07A...  ???)
               [000091] -ACXG-------              *  ASG       ref   
               [000090] D------N----              +--*  LCL_VAR   ref    V12 tmp6         
               [000089] --CXG-------              \--*  COMMA     ref   
               [000088] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000086] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000087] ------------ arg1            |  \--*  CNS_INT   int    35
               [000084] ----G-------                 \--*  FIELD     ref    <>9__2_1

***** BB06
STMT00023 (IL   ???...0x083)
               [000098] -A----------              *  ASG       ref   
               [000097] D------N----              +--*  LCL_VAR   ref    V13 tmp7         
               [000082] ------------              \--*  LCL_VAR   ref    V01 loc0         

***** BB06
STMT00024 (IL   ???...  ???)
               [000101] -A----------              *  ASG       ref   
               [000100] D------N----              +--*  LCL_VAR   ref    V14 tmp8         
               [000083] ------------              \--*  LCL_VAR   ref    V05 loc4         

***** BB06
STMT00025 (IL   ???...  ???)
               [000104] -A----------              *  ASG       ref   
               [000103] D------N----              +--*  LCL_VAR   ref    V15 tmp9         
               [000092] ------------              \--*  LCL_VAR   ref    V12 tmp6         

***** BB06
STMT00022 (IL   ???...  ???)
               [000096] ------------              *  JTRUE     void  
               [000095] ------------              \--*  NE        int   
               [000093] ------------                 +--*  LCL_VAR   ref    V12 tmp6         
               [000094] ------------                 \--*  CNS_INT   ref    null

------------ BB07 [085..09C), preds={} succs={BB08}

***** BB07
STMT00029 (IL   ???...0x097)
               [000131] -A----------              *  ASG       ref   
               [000130] D------N----              +--*  LCL_VAR   ref    V16 tmp10        
               [000129] ------------              \--*  ALLOCOBJ  ref   
               [000128] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB07
STMT00030 (IL   ???...  ???)
               [000133] I-CXG-------              *  CALL      void   System.MulticastDelegate.CtorClosed (exactContextHnd=0x00000000D1FFAB1E)
               [000132] ------------ this in rcx  +--*  LCL_VAR   ref    V16 tmp10        
               [000126] --CXG------- arg1         +--*  COMMA     ref   
               [000125] H-CXG-------              |  +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000123] ------------ arg0         |  |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000124] ------------ arg1         |  |  \--*  CNS_INT   int    35
               [000121] ----G-------              |  \--*  FIELD     ref    <>9
               [000127] ------------ arg2         \--*  FTN_ADDR  long   <>c.<GetProjectPaths>b__2_1


***** BB07
STMT00031 (IL 0x096...  ???)
               [000142] -ACXG-------              *  COMMA     ref   
               [000141] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000139] ------------ arg0         |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000140] ------------ arg1         |  \--*  CNS_INT   int    35
               [000137] -A--G-------              \--*  ASG       ref   
               [000136] ----G--N----                 +--*  FIELD     ref    <>9__2_1
               [000135] ------------                 \--*  LCL_VAR   ref    V16 tmp10        

***** BB07
STMT00032 (IL   ???...0x097)
               [000148] -A----------              *  ASG       ref   
               [000147] D------N----              +--*  LCL_VAR   ref    V15 tmp9         
               [000134] ------------              \--*  LCL_VAR   ref    V16 tmp10        

------------ BB08 [09C..0A6), preds={} succs={BB09}

***** BB08
STMT00026 (IL   ???...0x0A1)
               [000112] I-C-G-------              *  CALL      ref    System.Linq.Enumerable.SelectMany (exactContextHnd=0x00000000D1FFAB1E)
               [000113] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000110] ------------ arg1         +--*  LCL_VAR   ref    V14 tmp8         
               [000111] ------------ arg2         \--*  LCL_VAR   ref    V15 tmp9         

***** BB08
STMT00027 (IL   ???...  ???)
               [000115] I-C-G-------              *  CALL nullcheck void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddRange (exactContextHnd=0x00000000D1FFAB1E)
               [000109] ------------ this in rcx  +--*  LCL_VAR   ref    V13 tmp7         
               [000114] --C--------- arg1         \--*  RET_EXPR  ref   (inl return from call [000112])

------------ BB09 [0A6..0AA), preds={} succs={BB10}

***** BB09
STMT00028 (IL 0x0A6...0x0A9)
               [000120] -A----------              *  ASG       int   
               [000119] D------N----              +--*  LCL_VAR   int    V03 loc2         
               [000118] ------------              \--*  ADD       int   
               [000116] ------------                 +--*  LCL_VAR   int    V03 loc2         
               [000117] ------------                 \--*  CNS_INT   int    1

------------ BB10 [0AA..0B3) -> BB02 (cond), preds={} succs={BB11,BB02}

***** BB10
STMT00007 (IL 0x0AA...0x0AE)
               [000027] ---X--------              *  JTRUE     void  
               [000026] ---X--------              \--*  LT        int   
               [000023] ------------                 +--*  LCL_VAR   int    V03 loc2         
               [000025] ---X--------                 \--*  ARR_LENGTH int   
               [000024] ------------                    \--*  LCL_VAR   ref    V02 loc1         

------------ BB11 [0B3..0C7) (return), preds={} succs={}

***** BB11
STMT00038 (IL 0x0B3...0x0C4)
               [000181] I-C-G-------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle (exactContextHnd=0x00000000D1FFAB1E)
               [000182] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000180] ------------ arg1         \--*  LCL_VAR   ref    V01 loc0         

***** BB11
STMT00039 (IL 0x0B9...  ???)
               [000185] I-C-G-------              *  CALL      ref    SolutionAnalyzer.Logger.Log (exactContextHnd=0x00000000D1FFAB1E)
               [000186] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000183] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000184] ------------ arg2         \--*  CNS_INT   int    2

***** BB11
STMT00040 (IL   ???...  ???)
               [000189] --C---------              *  COMMA     void  
               [000187] --C---------              +--*  RET_EXPR  ref   (inl return from call [000185])
               [000188] ------------              \--*  NOP       void  

***** BB11
STMT00041 (IL 0x0C5...0x0C6)
               [000191] ------------              *  RETURN    ref   
               [000190] ------------              \--*  LCL_VAR   ref    V01 loc0         

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Finishing PHASE Indirect call transform [no changes]

*************** Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Finishing PHASE Expand patchpoints [no changes]

*************** Starting PHASE Post-import

*************** Finishing PHASE Post-import

*************** Starting PHASE Morph - Init

New BlockSet epoch 1, # of blocks (including unused BB00): 12, bitset array size: 1 (short)

*************** In fgRemoveEmptyBlocks

*************** Finishing PHASE Morph - Init
*************** In fgDebugCheckBBlist

*************** Starting PHASE Morph - Inlining
Expanding INLINE_CANDIDATE in statement STMT00000 in BB01:
STMT00000 (IL 0x000...0x00B)
               [000002] I-C-G-------              *  CALL      ref    SolutionAnalyzer.Logger.Log (exactContextHnd=0x00000000D1FFAB1E)
               [000003] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000000] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000001] ------------ arg2         \--*  CNS_INT   int    2

Argument #0: is a constant
               [000000] ------------              *  CNS_STR   ref   <string constant>


Argument #1: is a constant
               [000001] ------------              *  CNS_INT   int    2

INLINER: inlineInfo.tokenLookupContextHandle for SolutionAnalyzer.Logger:Log(System.__Canon,int):System.__Canon set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method SolutionAnalyzer.Logger:Log(System.__Canon,int):System.__Canon :
IL to import:
IL_0000  28 33 00 00 06    call         0x6000033
IL_0005  03                ldarg.1     
IL_0006  32 45             blt.s        69 (IL_004d)
IL_0008  03                ldarg.1     
IL_0009  17                ldc.i4.1    
IL_000a  2e 09             beq.s        9 (IL_0015)
IL_000c  03                ldarg.1     
IL_000d  18                ldc.i4.2    
IL_000e  33 0a             bne.un.s     10 (IL_001a)
IL_0010  1f 0f             ldc.i4.s     0xF
IL_0012  0a                stloc.0     
IL_0013  2b 08             br.s         8 (IL_001d)
IL_0015  1f 0e             ldc.i4.s     0xE
IL_0017  0a                stloc.0     
IL_0018  2b 03             br.s         3 (IL_001d)
IL_001a  1f 0c             ldc.i4.s     0xC
IL_001c  0a                stloc.0     
IL_001d  06                ldloc.0     
IL_001e  7e 12 00 00 04    ldsfld       0x4000012
IL_0023  6f 69 00 00 0a    callvirt     0xA000069
IL_0028  26                pop         
IL_0029  28 6a 00 00 0a    call         0xA00006A
IL_002e  28 6b 00 00 0a    call         0xA00006B
IL_0033  02                ldarg.0     
IL_0034  8c 13 00 00 1b    box          0x1B000013
IL_0039  6f 6c 00 00 0a    callvirt     0xA00006C
IL_003e  28 6d 00 00 0a    call         0xA00006D
IL_0043  7e 12 00 00 04    ldsfld       0x4000012
IL_0048  6f 6e 00 00 0a    callvirt     0xA00006E
IL_004d  02                ldarg.0     
IL_004e  2a                ret         

INLINER impTokenLookupContextHandle for SolutionAnalyzer.Logger:Log(System.__Canon,int):System.__Canon is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for SolutionAnalyzer.Logger:Log(System.__Canon,int):System.__Canon
weight= 79 : state  40 [ call ]
weight= 16 : state   4 [ ldarg.1 ]
weight= 28 : state  50 [ blt.s ]
weight= 16 : state   4 [ ldarg.1 ]
weight= 28 : state  24 [ ldc.i4.1 ]
weight=  6 : state  46 [ beq.s ]
weight= 16 : state   4 [ ldarg.1 ]
weight= 34 : state  25 [ ldc.i4.2 ]
weight= 12 : state  51 [ bne.un.s ]
weight= 41 : state  32 [ ldc.i4.s ]
weight=  6 : state  11 [ stloc.0 ]
weight= 44 : state  43 [ br.s ]
weight= 41 : state  32 [ ldc.i4.s ]
weight=  6 : state  11 [ stloc.0 ]
weight= 44 : state  43 [ br.s ]
weight= 41 : state  32 [ ldc.i4.s ]
weight= 20 : state 199 [ stloc.0 -> ldloc.0 ]
weight=159 : state 112 [ ldsfld ]
weight= 83 : state  99 [ callvirt ]
weight=-24 : state  39 [ pop ]
weight= 79 : state  40 [ call ]
weight= 79 : state  40 [ call ]
weight= 10 : state   3 [ ldarg.0 ]
weight=247 : state 117 [ box ]
weight= 83 : state  99 [ callvirt ]
weight= 79 : state  40 [ call ]
weight=159 : state 112 [ ldsfld ]
weight= 83 : state  99 [ callvirt ]
weight= 10 : state   3 [ ldarg.0 ]
weight= 19 : state  42 [ ret ]

Inline candidate has an arg that feeds a constant test.  Multiplier increased to 1.
Inline candidate has const arg that feeds a conditional.  Multiplier increased to 4.
Inline candidate callsite is boring.  Multiplier increased to 5.3.
calleeNativeSizeEstimate=1544
callsiteNativeSizeEstimate=115
benefit multiplier=5.3
threshold=609
Native estimate for function size exceeds threshold for inlining 154.4 > 60.9 (multiplier = 5.3)


Inline expansion aborted, inline not profitable
Inlining [000002] failed, so bashing STMT00000 to NOP

INLINER: during 'fgInline' result 'failed this call site' reason 'unprofitable inline' for 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]' calling 'SolutionAnalyzer.Logger:Log(System.__Canon,int):System.__Canon'
INLINER: during 'fgInline' result 'failed this call site' reason 'unprofitable inline'

Replacing the return expression placeholder [000004] with [000002]
               [000004] --C---------              *  RET_EXPR  ref   (inl return from call [000002])

Inserting the inline return expression
               [000002] --C-G-------              *  CALL      ref    SolutionAnalyzer.Logger.Log
               [000003] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000000] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000001] ------------ arg2         \--*  CNS_INT   int    2

Expanding INLINE_CANDIDATE in statement STMT00003 in BB01:
STMT00003 (IL   ???...  ???)
               [000013] I-C-G-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor (exactContextHnd=0x00000000D1FFAB1E)
               [000012] ------------ this in rcx  +--*  LCL_VAR   ref    V07 tmp1         
               [000007] ------------ arg1         \--*  CNS_INT   int    100
thisArg: is a local var
               [000012] ------------              *  LCL_VAR   ref    V07 tmp1         


Argument #1: is a constant
               [000007] ------------              *  CNS_INT   int    100

INLINER: inlineInfo.tokenLookupContextHandle for System.Collections.Generic.List`1[__Canon][System.__Canon]:.ctor(int):this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Collections.Generic.List`1[__Canon][System.__Canon]:.ctor(int):this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  28 a7 04 00 06    call         0x60004A7
IL_0006  03                ldarg.1     
IL_0007  16                ldc.i4.0    
IL_0008  2f 09             bge.s        9 (IL_0013)
IL_000a  1f 16             ldc.i4.s     0x16
IL_000c  1f 0b             ldc.i4.s     0xB
IL_000e  28 56 18 00 06    call         0x6001856
IL_0013  03                ldarg.1     
IL_0014  2d 0c             brtrue.s     12 (IL_0022)
IL_0016  02                ldarg.0     
IL_0017  7e 47 0c 00 0a    ldsfld       0xA000C47
IL_001c  7d 48 0c 00 0a    stfld        0xA000C48
IL_0021  2a                ret         
IL_0022  02                ldarg.0     
IL_0023  03                ldarg.1     
IL_0024  8d 15 00 00 1b    newarr       0x1B000015
IL_0029  7d 48 0c 00 0a    stfld        0xA000C48
IL_002e  2a                ret         

INLINER impTokenLookupContextHandle for System.Collections.Generic.List`1[__Canon][System.__Canon]:.ctor(int):this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Collections.Generic.List`1[__Canon][System.__Canon]:.ctor(int):this
weight= 10 : state   3 [ ldarg.0 ]
weight= 79 : state  40 [ call ]
weight= 16 : state   4 [ ldarg.1 ]
weight= 15 : state  23 [ ldc.i4.0 ]
weight= 20 : state  47 [ bge.s ]
weight= 41 : state  32 [ ldc.i4.s ]
weight= 41 : state  32 [ ldc.i4.s ]
weight= 79 : state  40 [ call ]
weight= 16 : state   4 [ ldarg.1 ]
weight= 25 : state  45 [ brtrue.s ]
weight= 10 : state   3 [ ldarg.0 ]
weight=159 : state 112 [ ldsfld ]
weight= 31 : state 111 [ stfld ]
weight= 19 : state  42 [ ret ]
weight= 10 : state   3 [ ldarg.0 ]
weight= 16 : state   4 [ ldarg.1 ]
weight=152 : state 118 [ newarr ]
weight= 31 : state 111 [ stfld ]
weight= 19 : state  42 [ ret ]

multiplier in instance constructors increased to 1.5.
Inline candidate has an arg that feeds a constant test.  Multiplier increased to 2.5.
Inline candidate has const arg that feeds a conditional.  Multiplier increased to 5.5.
Inline candidate callsite is boring.  Multiplier increased to 6.8.
calleeNativeSizeEstimate=789
callsiteNativeSizeEstimate=115
benefit multiplier=6.8
threshold=782
Native estimate for function size exceeds threshold for inlining 78.9 > 78.2 (multiplier = 6.8)


Inline expansion aborted, inline not profitable
INLINER: during 'fgInline' result 'failed this call site' reason 'unprofitable inline' for 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]' calling 'System.Collections.Generic.List`1[__Canon][System.__Canon]:.ctor(int):this'
INLINER: during 'fgInline' result 'failed this call site' reason 'unprofitable inline'
Expanding INLINE_CANDIDATE in statement STMT00009 in BB02:
STMT00009 (IL 0x021...0x02C)
               [000035] I-C-G-------              *  CALL nullcheck int    System.String.EndsWith (exactContextHnd=0x00000000D1FFAB1E)
               [000033] ------------ this in rcx  +--*  LCL_VAR   ref    V04 loc3         
               [000034] ------------ arg1         \--*  CNS_STR   ref   <string constant>
thisArg: is a local var
               [000033] ------------              *  LCL_VAR   ref    V04 loc3         


Argument #1: is a constant
               [000034] ------------              *  CNS_STR   ref   <string constant>

INLINER: inlineInfo.tokenLookupContextHandle for System.String:EndsWith(System.String):bool:this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.String:EndsWith(System.String):bool:this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  03                ldarg.1     
IL_0002  16                ldc.i4.0    
IL_0003  28 b9 06 00 06    call         0x60006B9
IL_0008  2a                ret         

INLINER impTokenLookupContextHandle for System.String:EndsWith(System.String):bool:this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.String:EndsWith(System.String):bool:this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB12 [0011] created.
BB12 [000..009)
Basic block list for 'System.String:EndsWith(System.String):bool:this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB12 [0011]  1                             1       [000..009)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000035] Starting PHASE Pre-import

*************** Inline @[000035] Finishing PHASE Pre-import

*************** Inline @[000035] Starting PHASE Importation
*************** In impImport() for System.String:EndsWith(System.String):bool:this

impImportBlockPending for BB12

Importing BB12 (PC=000) of 'System.String:EndsWith(System.String):bool:this'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) ldarg.1
    [ 2]   2 (0x002) ldc.i4.0 0
    [ 3]   3 (0x003) call 060006B9
In Compiler::impImportCall: opcode is call, kind=0, callRetType is bool, structSize is 0
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'noinline per IL/cached result' for 'System.String:EndsWith(System.String):bool:this' calling 'System.String:EndsWith(System.String,int):bool:this'
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'noinline per IL/cached result'

    [ 1]   8 (0x008) ret

    Inlinee Return expression (before normalization)  =>
               [000195] --C-G-------              *  CALL      int    System.String.EndsWith
               [000033] ------------ this in rcx  +--*  LCL_VAR   ref    V04 loc3         
               [000193] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000194] ------------ arg2         \--*  CNS_INT   int    0


    Inlinee Return expression (after normalization) =>
               [000195] --C-G-------              *  CALL      int    System.String.EndsWith
               [000033] ------------ this in rcx  +--*  LCL_VAR   ref    V04 loc3         
               [000193] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000194] ------------ arg2         \--*  CNS_INT   int    0

** Note: inlinee IL was partially imported -- imported 0 of 9 bytes of method IL

*************** Inline @[000035] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB12 [0011]  1                             1       [000..009)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB12 [000..009) (return), preds={} succs={}

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000035] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000035] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000035] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000035] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000035] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000035] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000035] -----------

Arguments setup:

Inlinee method body:fgInlineAppendStatements: no gc ref inline locals.

Return expression for call at [000035] is
               [000195] --C-G-------              *  CALL      int    System.String.EndsWith
               [000033] ------------ this in rcx  +--*  LCL_VAR   ref    V04 loc3         
               [000193] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000194] ------------ arg2         \--*  CNS_INT   int    0
Successfully inlined System.String:EndsWith(System.String):bool:this (9 IL bytes) (depth 1) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]' calling 'System.String:EndsWith(System.String):bool:this'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'

Replacing the return expression placeholder [000036] with [000195]
               [000036] --C---------              *  RET_EXPR  int   (inl return from call [000195])

Inserting the inline return expression
               [000195] --C-G-------              *  CALL      int    System.String.EndsWith
               [000033] ------------ this in rcx  +--*  LCL_VAR   ref    V04 loc3         
               [000193] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000194] ------------ arg2         \--*  CNS_INT   int    0

Expanding INLINE_CANDIDATE in statement STMT00037 in BB03:
STMT00037 (IL 0x02E...0x035)
               [000179] I-C-G-------              *  CALL nullcheck void   System.Collections.Generic.List`1[__Canon][System.__Canon].Add (exactContextHnd=0x00000000D1FFAB1E)
               [000177] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         
               [000178] ------------ arg1         \--*  LCL_VAR   ref    V04 loc3         
thisArg: is a local var
               [000177] ------------              *  LCL_VAR   ref    V01 loc0         


Argument #1: is a local var
               [000178] ------------              *  LCL_VAR   ref    V04 loc3         

INLINER: inlineInfo.tokenLookupContextHandle for System.Collections.Generic.List`1[__Canon][System.__Canon]:Add(System.__Canon):this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Collections.Generic.List`1[__Canon][System.__Canon]:Add(System.__Canon):this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  02                ldarg.0     
IL_0002  7b 4a 0c 00 0a    ldfld        0xA000C4A
IL_0007  17                ldc.i4.1    
IL_0008  58                add         
IL_0009  7d 4a 0c 00 0a    stfld        0xA000C4A
IL_000e  02                ldarg.0     
IL_000f  7b 48 0c 00 0a    ldfld        0xA000C48
IL_0014  0a                stloc.0     
IL_0015  02                ldarg.0     
IL_0016  7b 49 0c 00 0a    ldfld        0xA000C49
IL_001b  0b                stloc.1     
IL_001c  07                ldloc.1     
IL_001d  06                ldloc.0     
IL_001e  8e                ldlen       
IL_001f  69                conv.i4     
IL_0020  34 12             bge.un.s     18 (IL_0034)
IL_0022  02                ldarg.0     
IL_0023  07                ldloc.1     
IL_0024  17                ldc.i4.1    
IL_0025  58                add         
IL_0026  7d 49 0c 00 0a    stfld        0xA000C49
IL_002b  06                ldloc.0     
IL_002c  07                ldloc.1     
IL_002d  03                ldarg.1     
IL_002e  a4 15 00 00 1b    stelem       0x1B000015
IL_0033  2a                ret         
IL_0034  02                ldarg.0     
IL_0035  03                ldarg.1     
IL_0036  28 4d 0c 00 0a    call         0xA000C4D
IL_003b  2a                ret         

INLINER impTokenLookupContextHandle for System.Collections.Generic.List`1[__Canon][System.__Canon]:Add(System.__Canon):this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Collections.Generic.List`1[__Canon][System.__Canon]:Add(System.__Canon):this
Jump targets:
  IL_0034
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB13 [0012] created.
BB13 [000..022)
New Basic Block BB14 [0013] created.
BB14 [022..034)
New Basic Block BB15 [0014] created.
BB15 [034..03C)
Basic block list for 'System.Collections.Generic.List`1[__Canon][System.__Canon]:Add(System.__Canon):this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB13 [0012]  1                             1       [000..022)-> BB15 ( cond )                     
BB14 [0013]  1                             1       [022..034)        (return)                     
BB15 [0014]  1                             1       [034..03C)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000179] Starting PHASE Pre-import

*************** Inline @[000179] Finishing PHASE Pre-import

*************** Inline @[000179] Starting PHASE Importation
*************** In impImport() for System.Collections.Generic.List`1[__Canon][System.__Canon]:Add(System.__Canon):this

impImportBlockPending for BB13

Importing BB13 (PC=000) of 'System.Collections.Generic.List`1[__Canon][System.__Canon]:Add(System.__Canon):this'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) ldarg.0
    [ 2]   2 (0x002) ldfld 0A000C4A
    [ 2]   7 (0x007) ldc.i4.1 1
    [ 3]   8 (0x008) add
    [ 2]   9 (0x009) stfld 0A000C4A

               [000204] -A-XG-------              *  ASG       int   
               [000203] ---XG--N----              +--*  FIELD     int    _version
               [000177] ------------              |  \--*  LCL_VAR   ref    V01 loc0         
               [000202] ---XG-------              \--*  ADD       int   
               [000200] ---XG-------                 +--*  FIELD     int    _version
               [000199] ------------                 |  \--*  LCL_VAR   ref    V01 loc0         
               [000201] ------------                 \--*  CNS_INT   int    1

    [ 0]  14 (0x00e) ldarg.0
    [ 1]  15 (0x00f) ldfld 0A000C48
    [ 1]  20 (0x014) stloc.0
lvaGrabTemp returning 18 (V18 tmp12) (a long lifetime temp) called for Inline stloc first use temp.
Marked V18 as a single def temp

lvaSetClass: setting class for V18 to (00000000D1FFAB1E) System.__Canon[] 
Querying runtime about current class of field System.Collections.Generic.List`1[System.__Canon]._items (declared as System.__Canon[])
Field's current class not available


               [000208] -A-XG-------              *  ASG       ref   
               [000207] D------N----              +--*  LCL_VAR   ref    V18 tmp12        
               [000206] ---XG-------              \--*  FIELD     ref    _items
               [000205] ------------                 \--*  LCL_VAR   ref    V01 loc0         

    [ 0]  21 (0x015) ldarg.0
    [ 1]  22 (0x016) ldfld 0A000C49
    [ 1]  27 (0x01b) stloc.1
lvaGrabTemp returning 19 (V19 tmp13) (a long lifetime temp) called for Inline stloc first use temp.


               [000212] -A-XG-------              *  ASG       int   
               [000211] D------N----              +--*  LCL_VAR   int    V19 tmp13        
               [000210] ---XG-------              \--*  FIELD     int    _size
               [000209] ------------                 \--*  LCL_VAR   ref    V01 loc0         

    [ 0]  28 (0x01c) ldloc.1
    [ 1]  29 (0x01d) ldloc.0
    [ 2]  30 (0x01e) ldlen
    [ 2]  31 (0x01f) conv.i4
    [ 2]  32 (0x020) bge.un.s

               [000217] ---X--------              *  JTRUE     void  
               [000216] N--X-----U--              \--*  GE        int   
               [000213] ------------                 +--*  LCL_VAR   int    V19 tmp13        
               [000215] ---X--------                 \--*  ARR_LENGTH int   
               [000214] ------------                    \--*  LCL_VAR   ref    V18 tmp12        

impImportBlockPending for BB14

impImportBlockPending for BB15

Importing BB15 (PC=052) of 'System.Collections.Generic.List`1[__Canon][System.__Canon]:Add(System.__Canon):this'
    [ 0]  52 (0x034) ldarg.0
    [ 1]  53 (0x035) ldarg.1
    [ 2]  54 (0x036) call 0A000C4D
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'noinline per IL/cached result' for 'System.Collections.Generic.List`1[__Canon][System.__Canon]:Add(System.__Canon):this' calling 'System.Collections.Generic.List`1[__Canon][System.__Canon]:AddWithResize(System.__Canon):this'
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'noinline per IL/cached result'


               [000219] --C-G-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize
               [000218] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         
               [000178] ------------ arg1         \--*  LCL_VAR   ref    V04 loc3         

    [ 0]  59 (0x03b) ret
Importing BB14 (PC=034) of 'System.Collections.Generic.List`1[__Canon][System.__Canon]:Add(System.__Canon):this'
    [ 0]  34 (0x022) ldarg.0
    [ 1]  35 (0x023) ldloc.1
    [ 2]  36 (0x024) ldc.i4.1 1
    [ 3]  37 (0x025) add
    [ 2]  38 (0x026) stfld 0A000C49

               [000225] -A-XG-------              *  ASG       int   
               [000224] ---XG--N----              +--*  FIELD     int    _size
               [000220] ------------              |  \--*  LCL_VAR   ref    V01 loc0         
               [000223] ------------              \--*  ADD       int   
               [000221] ------------                 +--*  LCL_VAR   int    V19 tmp13        
               [000222] ------------                 \--*  CNS_INT   int    1

    [ 0]  43 (0x02b) ldloc.0
    [ 1]  44 (0x02c) ldloc.1
    [ 2]  45 (0x02d) ldarg.1
    [ 3]  46 (0x02e) stelem 1B000015

               [000229] --CXG-------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST
               [000226] ------------ arg0         +--*  LCL_VAR   ref    V18 tmp12        
               [000227] ------------ arg1         +--*  LCL_VAR   int    V19 tmp13        
               [000228] ------------ arg2         \--*  LCL_VAR   ref    V04 loc3         

    [ 0]  51 (0x033) ret
*************** Inline @[000179] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB13 [0012]  1                             1       [000..022)-> BB15 ( cond )                     i idxlen 
BB14 [0013]  1                             1       [022..034)        (return)                     i 
BB15 [0014]  1                             1       [034..03C)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB13 [000..022) -> BB15 (cond), preds={} succs={BB14,BB15}

***** BB13
               [000204] -A-XG-------              *  ASG       int   
               [000203] ---XG--N----              +--*  FIELD     int    _version
               [000177] ------------              |  \--*  LCL_VAR   ref    V01 loc0         
               [000202] ---XG-------              \--*  ADD       int   
               [000200] ---XG-------                 +--*  FIELD     int    _version
               [000199] ------------                 |  \--*  LCL_VAR   ref    V01 loc0         
               [000201] ------------                 \--*  CNS_INT   int    1

***** BB13
               [000208] -A-XG-------              *  ASG       ref   
               [000207] D------N----              +--*  LCL_VAR   ref    V18 tmp12        
               [000206] ---XG-------              \--*  FIELD     ref    _items
               [000205] ------------                 \--*  LCL_VAR   ref    V01 loc0         

***** BB13
               [000212] -A-XG-------              *  ASG       int   
               [000211] D------N----              +--*  LCL_VAR   int    V19 tmp13        
               [000210] ---XG-------              \--*  FIELD     int    _size
               [000209] ------------                 \--*  LCL_VAR   ref    V01 loc0         

***** BB13
               [000217] ---X--------              *  JTRUE     void  
               [000216] N--X-----U--              \--*  GE        int   
               [000213] ------------                 +--*  LCL_VAR   int    V19 tmp13        
               [000215] ---X--------                 \--*  ARR_LENGTH int   
               [000214] ------------                    \--*  LCL_VAR   ref    V18 tmp12        

------------ BB14 [022..034) (return), preds={} succs={}

***** BB14
               [000225] -A-XG-------              *  ASG       int   
               [000224] ---XG--N----              +--*  FIELD     int    _size
               [000220] ------------              |  \--*  LCL_VAR   ref    V01 loc0         
               [000223] ------------              \--*  ADD       int   
               [000221] ------------                 +--*  LCL_VAR   int    V19 tmp13        
               [000222] ------------                 \--*  CNS_INT   int    1

***** BB14
               [000229] --CXG-------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST
               [000226] ------------ arg0         +--*  LCL_VAR   ref    V18 tmp12        
               [000227] ------------ arg1         +--*  LCL_VAR   int    V19 tmp13        
               [000228] ------------ arg2         \--*  LCL_VAR   ref    V04 loc3         

------------ BB15 [034..03C) (return), preds={} succs={}

***** BB15
               [000219] --C-G-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize
               [000218] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         
               [000178] ------------ arg1         \--*  LCL_VAR   ref    V04 loc3         

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000179] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000179] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000179] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000179] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000179] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000179] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000179] -----------

Arguments setup:

Inlinee method body:New Basic Block BB16 [0015] created.

Convert bbJumpKind of BB14 to BBJ_ALWAYS to bottomBlock BB16

Convert bbJumpKind of BB15 to BBJ_NONE
fgInlineAppendStatements: nulling out gc ref inlinee locals.
STMT00050 (IL 0x02E...  ???)
               [000232] -A----------              *  ASG       ref   
               [000231] D------N----              +--*  LCL_VAR   ref    V18 tmp12        
               [000230] ------------              \--*  CNS_INT   ref    null

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB13 [0012]  1                             1       [02E..02F)-> BB15 ( cond )                     i idxlen bwd 
BB14 [0013]  1                             1       [02E..02F)-> BB16 (always)                     i bwd 
BB15 [0014]  1                             1       [02E..02F)                                     i bwd 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB13 [02E..02F) -> BB15 (cond), preds={} succs={BB14,BB15}

***** BB13
STMT00043 (IL 0x02E...  ???)
               [000204] -A-XG-------              *  ASG       int   
               [000203] ---XG--N----              +--*  FIELD     int    _version
               [000177] ------------              |  \--*  LCL_VAR   ref    V01 loc0         
               [000202] ---XG-------              \--*  ADD       int   
               [000200] ---XG-------                 +--*  FIELD     int    _version
               [000199] ------------                 |  \--*  LCL_VAR   ref    V01 loc0         
               [000201] ------------                 \--*  CNS_INT   int    1

***** BB13
STMT00044 (IL 0x02E...  ???)
               [000208] -A-XG-------              *  ASG       ref   
               [000207] D------N----              +--*  LCL_VAR   ref    V18 tmp12        
               [000206] ---XG-------              \--*  FIELD     ref    _items
               [000205] ------------                 \--*  LCL_VAR   ref    V01 loc0         

***** BB13
STMT00045 (IL 0x02E...  ???)
               [000212] -A-XG-------              *  ASG       int   
               [000211] D------N----              +--*  LCL_VAR   int    V19 tmp13        
               [000210] ---XG-------              \--*  FIELD     int    _size
               [000209] ------------                 \--*  LCL_VAR   ref    V01 loc0         

***** BB13
STMT00046 (IL 0x02E...  ???)
               [000217] ---X--------              *  JTRUE     void  
               [000216] N--X-----U--              \--*  GE        int   
               [000213] ------------                 +--*  LCL_VAR   int    V19 tmp13        
               [000215] ---X--------                 \--*  ARR_LENGTH int   
               [000214] ------------                    \--*  LCL_VAR   ref    V18 tmp12        

------------ BB14 [02E..02F) -> BB16 (always), preds={} succs={BB16}

***** BB14
STMT00048 (IL 0x02E...  ???)
               [000225] -A-XG-------              *  ASG       int   
               [000224] ---XG--N----              +--*  FIELD     int    _size
               [000220] ------------              |  \--*  LCL_VAR   ref    V01 loc0         
               [000223] ------------              \--*  ADD       int   
               [000221] ------------                 +--*  LCL_VAR   int    V19 tmp13        
               [000222] ------------                 \--*  CNS_INT   int    1

***** BB14
STMT00049 (IL 0x02E...  ???)
               [000229] --CXG-------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST
               [000226] ------------ arg0         +--*  LCL_VAR   ref    V18 tmp12        
               [000227] ------------ arg1         +--*  LCL_VAR   int    V19 tmp13        
               [000228] ------------ arg2         \--*  LCL_VAR   ref    V04 loc3         

------------ BB15 [02E..02F), preds={} succs={BB16}

***** BB15
STMT00047 (IL 0x02E...  ???)
               [000219] --C-G-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize
               [000218] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         
               [000178] ------------ arg1         \--*  LCL_VAR   ref    V04 loc3         

-------------------------------------------------------------------------------------------------------------------
Successfully inlined System.Collections.Generic.List`1[__Canon][System.__Canon]:Add(System.__Canon):this (60 IL bytes) (depth 1) [aggressive inline attribute]
--------------------------------------------------------------------------------------------

BB03 becomes empty
INLINER: during 'fgInline' result 'success' reason 'aggressive inline attribute' for 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]' calling 'System.Collections.Generic.List`1[__Canon][System.__Canon]:Add(System.__Canon):this'
INLINER: during 'fgInline' result 'success' reason 'aggressive inline attribute'
Querying runtime about current class of field System.Collections.Generic.List`1[System.__Canon]._items (declared as System.__Canon[])
Field's current class not available
Expanding INLINE_CANDIDATE in statement STMT00011 in BB04:
STMT00011 (IL 0x037...0x049)
               [000043] I-C-G-------              *  CALL      ref    System.IO.Directory.EnumerateDirectories (exactContextHnd=0x00000000D1FFAB1E)
               [000040] ------------ arg0         +--*  LCL_VAR   ref    V04 loc3         
               [000041] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000042] ------------ arg2         \--*  CNS_INT   int    1

Argument #0: is a local var
               [000040] ------------              *  LCL_VAR   ref    V04 loc3         


Argument #1: is a constant
               [000041] ------------              *  CNS_STR   ref   <string constant>


Argument #2: is a constant
               [000042] ------------              *  CNS_INT   int    1

INLINER: inlineInfo.tokenLookupContextHandle for System.IO.Directory:EnumerateDirectories(System.String,System.String,int):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.IO.Directory:EnumerateDirectories(System.String,System.String,int):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  03                ldarg.1     
IL_0002  04                ldarg.2     
IL_0003  28 d7 00 00 06    call         0x60000D7
IL_0008  28 a0 00 00 06    call         0x60000A0
IL_000d  2a                ret         

INLINER impTokenLookupContextHandle for System.IO.Directory:EnumerateDirectories(System.String,System.String,int):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.IO.Directory:EnumerateDirectories(System.String,System.String,int):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB17 [0016] created.
BB17 [000..00E)
Basic block list for 'System.IO.Directory:EnumerateDirectories(System.String,System.String,int):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB17 [0016]  1                             1       [000..00E)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000043] Starting PHASE Pre-import

*************** Inline @[000043] Finishing PHASE Pre-import

*************** Inline @[000043] Starting PHASE Importation
*************** In impImport() for System.IO.Directory:EnumerateDirectories(System.String,System.String,int):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]

impImportBlockPending for BB17

Importing BB17 (PC=000) of 'System.IO.Directory:EnumerateDirectories(System.String,System.String,int):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) ldarg.1
    [ 2]   2 (0x002) ldarg.2
    [ 3]   3 (0x003) call 060000D7
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0


               [000236] I-C-G-------              *  CALL      ref    System.IO.EnumerationOptions.FromSearchOption (exactContextHnd=0x00000000D1FFAB1E)
               [000235] ------------ arg0         \--*  CNS_INT   int    1

    [ 3]   8 (0x008) call 060000A0
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0


               [000238] I-C-G-------              *  CALL      ref    System.IO.Directory.EnumerateDirectories (exactContextHnd=0x00000000D1FFAB1E)
               [000040] ------------ arg0         +--*  LCL_VAR   ref    V04 loc3         
               [000234] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000237] --C--------- arg2         \--*  RET_EXPR  ref   (inl return from call [000236])

    [ 1]  13 (0x00d) ret

    Inlinee Return expression (before normalization)  =>
               [000239] --C---------              *  RET_EXPR  ref   (inl return from call [000238])


    Inlinee Return expression (after normalization) =>
               [000239] --C---------              *  RET_EXPR  ref   (inl return from call [000238])

*************** Inline @[000043] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB17 [0016]  1                             1       [000..00E)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB17 [000..00E) (return), preds={} succs={}

***** BB17
               [000236] I-C-G-------              *  CALL      ref    System.IO.EnumerationOptions.FromSearchOption (exactContextHnd=0x00000000D1FFAB1E)
               [000235] ------------ arg0         \--*  CNS_INT   int    1

***** BB17
               [000238] I-C-G-------              *  CALL      ref    System.IO.Directory.EnumerateDirectories (exactContextHnd=0x00000000D1FFAB1E)
               [000040] ------------ arg0         +--*  LCL_VAR   ref    V04 loc3         
               [000234] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000237] --C--------- arg2         \--*  RET_EXPR  ref   (inl return from call [000236])

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000043] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000043] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000043] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000043] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000043] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000043] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000043] -----------

Arguments setup:

Inlinee method body:
STMT00051 (IL 0x037...  ???)
               [000236] I-C-G-------              *  CALL      ref    System.IO.EnumerationOptions.FromSearchOption (exactContextHnd=0x00000000D1FFAB1E)
               [000235] ------------ arg0         \--*  CNS_INT   int    1


STMT00052 (IL 0x037...  ???)
               [000238] I-C-G-------              *  CALL      ref    System.IO.Directory.EnumerateDirectories (exactContextHnd=0x00000000D1FFAB1E)
               [000040] ------------ arg0         +--*  LCL_VAR   ref    V04 loc3         
               [000234] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000237] --C--------- arg2         \--*  RET_EXPR  ref   (inl return from call [000236])

fgInlineAppendStatements: no gc ref inline locals.

Return expression for call at [000043] is
               [000239] --C---------              *  RET_EXPR  ref   (inl return from call [000238])
Successfully inlined System.IO.Directory:EnumerateDirectories(System.String,System.String,int):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] (14 IL bytes) (depth 1) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]' calling 'System.IO.Directory:EnumerateDirectories(System.String,System.String,int):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Expanding INLINE_CANDIDATE in statement STMT00051 in BB04:
STMT00051 (IL 0x037...  ???)
               [000236] I-C-G-------              *  CALL      ref    System.IO.EnumerationOptions.FromSearchOption (exactContextHnd=0x00000000D1FFAB1E)
               [000235] ------------ arg0         \--*  CNS_INT   int    1

Argument #0: is a constant
               [000235] ------------              *  CNS_INT   int    1

INLINER: inlineInfo.tokenLookupContextHandle for System.IO.EnumerationOptions:FromSearchOption(int):System.IO.EnumerationOptions set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.IO.EnumerationOptions:FromSearchOption(int):System.IO.EnumerationOptions :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  2c 14             brfalse.s    20 (IL_0017)
IL_0003  02                ldarg.0     
IL_0004  17                ldc.i4.1    
IL_0005  2e 10             beq.s        16 (IL_0017)
IL_0007  72 f5 06 00 70    ldstr        0x700006F5
IL_000c  28 4c 00 00 06    call         0x600004C
IL_0011  73 5c 00 00 0a    newobj       0xA00005C
IL_0016  7a                throw       
IL_0017  02                ldarg.0     
IL_0018  17                ldc.i4.1    
IL_0019  2e 06             beq.s        6 (IL_0021)
IL_001b  28 d3 00 00 06    call         0x60000D3
IL_0020  2a                ret         
IL_0021  28 d4 00 00 06    call         0x60000D4
IL_0026  2a                ret         

INLINER impTokenLookupContextHandle for System.IO.EnumerationOptions:FromSearchOption(int):System.IO.EnumerationOptions is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.IO.EnumerationOptions:FromSearchOption(int):System.IO.EnumerationOptions
weight= 10 : state   3 [ ldarg.0 ]
weight= 27 : state  44 [ brfalse.s ]
weight= 10 : state   3 [ ldarg.0 ]
weight= 28 : state  24 [ ldc.i4.1 ]
weight=  6 : state  46 [ beq.s ]
weight= 66 : state 102 [ ldstr ]
weight= 79 : state  40 [ call ]
weight=227 : state 103 [ newobj ]
weight=210 : state 108 [ throw ]
weight= 10 : state   3 [ ldarg.0 ]
weight= 28 : state  24 [ ldc.i4.1 ]
weight=  6 : state  46 [ beq.s ]
weight= 79 : state  40 [ call ]
weight= 19 : state  42 [ ret ]
weight= 79 : state  40 [ call ]
weight= 19 : state  42 [ ret ]

Inline candidate looks like a wrapper method.  Multiplier increased to 1.
Inline candidate has an arg that feeds a constant test.  Multiplier increased to 2.
Inline candidate has const arg that feeds a conditional.  Multiplier increased to 5.
Inline candidate callsite is in a loop.  Multiplier increased to 8.
calleeNativeSizeEstimate=903
callsiteNativeSizeEstimate=85
benefit multiplier=8
threshold=680
Native estimate for function size exceeds threshold for inlining 90.3 > 68 (multiplier = 8)


Inline expansion aborted, inline not profitable
Inlining [000236] failed, so bashing STMT00051 to NOP

INLINER: during 'fgInline' result 'failed this call site' reason 'unprofitable inline' for 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]' calling 'System.IO.EnumerationOptions:FromSearchOption(int):System.IO.EnumerationOptions'
INLINER: during 'fgInline' result 'failed this call site' reason 'unprofitable inline'
Expanding INLINE_CANDIDATE in statement STMT00052 in BB04:
STMT00052 (IL 0x037...  ???)
               [000238] I-C-G-------              *  CALL      ref    System.IO.Directory.EnumerateDirectories (exactContextHnd=0x00000000D1FFAB1E)
               [000040] ------------ arg0         +--*  LCL_VAR   ref    V04 loc3         
               [000234] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000237] --C--------- arg2         \--*  RET_EXPR  ref   (inl return from call [000236])

Argument #0: is a local var
               [000040] ------------              *  LCL_VAR   ref    V04 loc3         


Argument #1: is a constant
               [000234] ------------              *  CNS_STR   ref   <string constant>


Argument #2: has global refs has side effects
               [000236] --C-G-------              *  CALL      ref    System.IO.EnumerationOptions.FromSearchOption
               [000235] ------------ arg0         \--*  CNS_INT   int    1

INLINER: inlineInfo.tokenLookupContextHandle for System.IO.Directory:EnumerateDirectories(System.String,System.String,System.IO.EnumerationOptions):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.IO.Directory:EnumerateDirectories(System.String,System.String,System.IO.EnumerationOptions):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  03                ldarg.1     
IL_0002  18                ldc.i4.2    
IL_0003  04                ldarg.2     
IL_0004  28 9c 00 00 06    call         0x600009C
IL_0009  2a                ret         

INLINER impTokenLookupContextHandle for System.IO.Directory:EnumerateDirectories(System.String,System.String,System.IO.EnumerationOptions):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.IO.Directory:EnumerateDirectories(System.String,System.String,System.IO.EnumerationOptions):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB18 [0017] created.
BB18 [000..00A)
Basic block list for 'System.IO.Directory:EnumerateDirectories(System.String,System.String,System.IO.EnumerationOptions):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB18 [0017]  1                             1       [000..00A)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000238] Starting PHASE Pre-import

*************** Inline @[000238] Finishing PHASE Pre-import

*************** Inline @[000238] Starting PHASE Importation
*************** In impImport() for System.IO.Directory:EnumerateDirectories(System.String,System.String,System.IO.EnumerationOptions):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]

impImportBlockPending for BB18

Importing BB18 (PC=000) of 'System.IO.Directory:EnumerateDirectories(System.String,System.String,System.IO.EnumerationOptions):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) ldarg.1
    [ 2]   2 (0x002) ldc.i4.2 2
    [ 3]   3 (0x003) ldarg.2
lvaGrabTemp returning 20 (V20 tmp14) called for Inlining Arg.
Marked V20 as a single def temp

lvaSetClass: setting class for V20 to (00000000D1FFAB1E) System.IO.EnumerationOptions 

    [ 4]   4 (0x004) call 0600009C
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'too many il bytes' for 'System.IO.Directory:EnumerateDirectories(System.String,System.String,System.IO.EnumerationOptions):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]' calling 'System.IO.Directory:InternalEnumeratePaths(System.String,System.String,int,System.IO.EnumerationOptions):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'

INLINER: Marking System.IO.Directory:InternalEnumeratePaths(System.String,System.String,int,System.IO.EnumerationOptions):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] as NOINLINE because of too many il bytes
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'too many il bytes'

    [ 1]   9 (0x009) ret

    Inlinee Return expression (before normalization)  =>
               [000245] --C-G-------              *  CALL      ref    System.IO.Directory.InternalEnumeratePaths
               [000040] ------------ arg0         +--*  LCL_VAR   ref    V04 loc3         
               [000242] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000243] ------------ arg2         +--*  CNS_INT   int    2
               [000244] ------------ arg3         \--*  LCL_VAR   ref    V20 tmp14        


    Inlinee Return expression (after normalization) =>
               [000245] --C-G-------              *  CALL      ref    System.IO.Directory.InternalEnumeratePaths
               [000040] ------------ arg0         +--*  LCL_VAR   ref    V04 loc3         
               [000242] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000243] ------------ arg2         +--*  CNS_INT   int    2
               [000244] ------------ arg3         \--*  LCL_VAR   ref    V20 tmp14        

** Note: inlinee IL was partially imported -- imported 0 of 10 bytes of method IL

*************** Inline @[000238] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB18 [0017]  1                             1       [000..00A)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB18 [000..00A) (return), preds={} succs={}

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000238] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000238] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000238] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000238] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000238] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000238] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000238] -----------

Arguments setup:
STMT00053 (IL 0x037...  ???)
               [000247] -AC-G-------              *  ASG       ref   
               [000246] D------N----              +--*  LCL_VAR   ref    V20 tmp14        
               [000236] --C-G-------              \--*  CALL      ref    System.IO.EnumerationOptions.FromSearchOption
               [000235] ------------ arg0            \--*  CNS_INT   int    1

Inlinee method body:fgInlineAppendStatements: no gc ref inline locals.

Return expression for call at [000238] is
               [000245] --C-G-------              *  CALL      ref    System.IO.Directory.InternalEnumeratePaths
               [000040] ------------ arg0         +--*  LCL_VAR   ref    V04 loc3         
               [000242] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000243] ------------ arg2         +--*  CNS_INT   int    2
               [000244] ------------ arg3         \--*  LCL_VAR   ref    V20 tmp14        
Successfully inlined System.IO.Directory:EnumerateDirectories(System.String,System.String,System.IO.EnumerationOptions):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] (10 IL bytes) (depth 2) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]' calling 'System.IO.Directory:EnumerateDirectories(System.String,System.String,System.IO.EnumerationOptions):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'

Replacing the return expression placeholder [000044] with [000245]
               [000044] --C---------              *  RET_EXPR  ref   (inl return from call [000239])

Inserting the inline return expression
               [000245] --C-G-------              *  CALL      ref    System.IO.Directory.InternalEnumeratePaths
               [000040] ------------ arg0         +--*  LCL_VAR   ref    V04 loc3         
               [000242] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000243] ------------ arg2         +--*  CNS_INT   int    2
               [000244] ------------ arg3         \--*  LCL_VAR   ref    V20 tmp14        

Querying runtime about current class of field <>c.<>9__2_0 (declared as System.Func`2[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]])
Field's current class not available
Expanding INLINE_CANDIDATE in statement STMT00034 in BB05:
STMT00034 (IL   ???...  ???)
               [000162] I-CXG-------              *  CALL      void   System.MulticastDelegate.CtorClosed (exactContextHnd=0x00000000D1FFAB1E)
               [000161] ------------ this in rcx  +--*  LCL_VAR   ref    V17 tmp11        
               [000155] --CXG------- arg1         +--*  COMMA     ref   
               [000154] H-CXG-------              |  +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000152] ------------ arg0         |  |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000153] ------------ arg1         |  |  \--*  CNS_INT   int    35
               [000150] ----G-------              |  \--*  FIELD     ref    <>9
               [000156] ------------ arg2         \--*  FTN_ADDR  long   <>c.<GetProjectPaths>b__2_0

thisArg: is a local var
               [000161] ------------              *  LCL_VAR   ref    V17 tmp11        


Argument #1: has global refs has side effects
               [000155] --CXG-------              *  COMMA     ref   
               [000154] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000152] ------------ arg0         |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000153] ------------ arg1         |  \--*  CNS_INT   int    35
               [000150] ----G-------              \--*  FIELD     ref    <>9


Argument #2:
               [000156] ------------              *  FTN_ADDR  long   <>c.<GetProjectPaths>b__2_0


INLINER: inlineInfo.tokenLookupContextHandle for System.MulticastDelegate:CtorClosed(System.Object,long):this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.MulticastDelegate:CtorClosed(System.Object,long):this :
IL to import:
IL_0000  03                ldarg.1     
IL_0001  2d 05             brtrue.s     5 (IL_0008)
IL_0003  28 9c 04 00 06    call         0x600049C
IL_0008  02                ldarg.0     
IL_0009  03                ldarg.1     
IL_000a  7d 0d 01 00 04    stfld        0x400010D
IL_000f  02                ldarg.0     
IL_0010  04                ldarg.2     
IL_0011  7d 0f 01 00 04    stfld        0x400010F
IL_0016  2a                ret         

INLINER impTokenLookupContextHandle for System.MulticastDelegate:CtorClosed(System.Object,long):this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.MulticastDelegate:CtorClosed(System.Object,long):this
weight= 16 : state   4 [ ldarg.1 ]
weight= 25 : state  45 [ brtrue.s ]
weight= 79 : state  40 [ call ]
weight= 69 : state 226 [ ldarg.0 -> ldarg.1 -> stfld ]
weight= 98 : state 228 [ ldarg.0 -> ldarg.2 -> stfld ]
weight= 19 : state  42 [ ret ]

Inline candidate has an arg that feeds a constant test.  Multiplier increased to 1.
Inline candidate is mostly loads and stores.  Multiplier increased to 4.
Inline candidate callsite is in a loop.  Multiplier increased to 7.
calleeNativeSizeEstimate=306
callsiteNativeSizeEstimate=145
benefit multiplier=7
threshold=1015
Native estimate for function size is within threshold for inlining 30.6 <= 101.5 (multiplier = 7)
Jump targets:
  IL_0008
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB19 [0018] created.
BB19 [000..003)
New Basic Block BB20 [0019] created.
BB20 [003..008)
New Basic Block BB21 [0020] created.
BB21 [008..017)
Basic block list for 'System.MulticastDelegate:CtorClosed(System.Object,long):this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB19 [0018]  1                             1       [000..003)-> BB21 ( cond )                     
BB20 [0019]  1                             1       [003..008)                                     
BB21 [0020]  2                             1       [008..017)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000162] Starting PHASE Pre-import

*************** Inline @[000162] Finishing PHASE Pre-import

*************** Inline @[000162] Starting PHASE Importation
*************** In impImport() for System.MulticastDelegate:CtorClosed(System.Object,long):this

impImportBlockPending for BB19

Importing BB19 (PC=000) of 'System.MulticastDelegate:CtorClosed(System.Object,long):this'
    [ 0]   0 (0x000) ldarg.1
lvaGrabTemp returning 21 (V21 tmp15) called for Inlining Arg.
Marked V21 as a single def temp
Querying runtime about current class of field <>c.<>9 (declared as <>c)
Field's current class not available

lvaSetClass: setting class for V21 to (00000000D1FFAB1E) <>c 

    [ 1]   1 (0x001) brtrue.s

               [000252] ------------              *  JTRUE     void  
               [000251] ------------              \--*  NE        int   
               [000249] ------------                 +--*  LCL_VAR   ref    V21 tmp15        
               [000250] ------------                 \--*  CNS_INT   ref    null

impImportBlockPending for BB20

impImportBlockPending for BB21

Importing BB21 (PC=008) of 'System.MulticastDelegate:CtorClosed(System.Object,long):this'
    [ 0]   8 (0x008) ldarg.0
    [ 1]   9 (0x009) ldarg.1
    [ 2]  10 (0x00a) stfld 0400010D

               [000255] -A-XG-------              *  ASG       ref   
               [000254] ---XG--N----              +--*  FIELD     ref    _target
               [000161] ------------              |  \--*  LCL_VAR   ref    V17 tmp11        
               [000253] ------------              \--*  LCL_VAR   ref    V21 tmp15        

    [ 0]  15 (0x00f) ldarg.0
    [ 1]  16 (0x010) ldarg.2
lvaGrabTemp returning 22 (V22 tmp16) called for Inlining Arg.

    [ 2]  17 (0x011) stfld 0400010F

               [000259] -A-XG-------              *  ASG       long  
               [000258] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000256] ------------              |  \--*  LCL_VAR   ref    V17 tmp11        
               [000257] ------------              \--*  LCL_VAR   long   V22 tmp16        

    [ 0]  22 (0x016) ret
Importing BB20 (PC=003) of 'System.MulticastDelegate:CtorClosed(System.Object,long):this'
    [ 0]   3 (0x003) call 0600049C
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0


               [000260] I-C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance (exactContextHnd=0x00000000D1FFAB1E)

impImportBlockPending for BB21

*************** Inline @[000162] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB19 [0018]  1                             1       [000..003)-> BB21 ( cond )                     i 
BB20 [0019]  1                             1       [003..008)                                     i 
BB21 [0020]  2                             1       [008..017)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB19 [000..003) -> BB21 (cond), preds={} succs={BB20,BB21}

***** BB19
               [000252] ------------              *  JTRUE     void  
               [000251] ------------              \--*  NE        int   
               [000249] ------------                 +--*  LCL_VAR   ref    V21 tmp15        
               [000250] ------------                 \--*  CNS_INT   ref    null

------------ BB20 [003..008), preds={} succs={BB21}

***** BB20
               [000260] I-C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance (exactContextHnd=0x00000000D1FFAB1E)

------------ BB21 [008..017) (return), preds={} succs={}

***** BB21
               [000255] -A-XG-------              *  ASG       ref   
               [000254] ---XG--N----              +--*  FIELD     ref    _target
               [000161] ------------              |  \--*  LCL_VAR   ref    V17 tmp11        
               [000253] ------------              \--*  LCL_VAR   ref    V21 tmp15        

***** BB21
               [000259] -A-XG-------              *  ASG       long  
               [000258] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000256] ------------              |  \--*  LCL_VAR   ref    V17 tmp11        
               [000257] ------------              \--*  LCL_VAR   long   V22 tmp16        

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000162] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000162] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000162] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000162] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000162] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000162] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000162] -----------

Arguments setup:
STMT00058 (IL   ???...  ???)
               [000262] -ACXG-------              *  ASG       ref   
               [000261] D------N----              +--*  LCL_VAR   ref    V21 tmp15        
               [000155] --CXG-------              \--*  COMMA     ref   
               [000154] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000152] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000153] ------------ arg1            |  \--*  CNS_INT   int    35
               [000150] ----G-------                 \--*  FIELD     ref    <>9

Inlinee method body:New Basic Block BB22 [0021] created.

Convert bbJumpKind of BB21 to BBJ_NONE
fgInlineAppendStatements: no gc ref inline locals.

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB19 [0018]  1                             1       [000..000)-> BB21 ( cond )                     i internal bwd 
BB20 [0019]  1                             0.50    [000..000)                                     i internal bwd 
BB21 [0020]  2                             1       [000..000)                                     i internal bwd 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB19 [000..000) -> BB21 (cond), preds={} succs={BB20,BB21}

***** BB19
STMT00054 (IL   ???...  ???)
               [000252] ------------              *  JTRUE     void  
               [000251] ------------              \--*  NE        int   
               [000249] ------------                 +--*  LCL_VAR   ref    V21 tmp15        
               [000250] ------------                 \--*  CNS_INT   ref    null

------------ BB20 [000..000), preds={} succs={BB21}

***** BB20
STMT00057 (IL   ???...  ???)
               [000260] I-C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance (exactContextHnd=0x00000000D1FFAB1E)

------------ BB21 [000..000), preds={} succs={BB22}

***** BB21
STMT00055 (IL   ???...  ???)
               [000255] -A-XG-------              *  ASG       ref   
               [000254] ---XG--N----              +--*  FIELD     ref    _target
               [000161] ------------              |  \--*  LCL_VAR   ref    V17 tmp11        
               [000253] ------------              \--*  LCL_VAR   ref    V21 tmp15        

***** BB21
STMT00056 (IL   ???...  ???)
               [000259] -A-XG-------              *  ASG       long  
               [000258] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000256] ------------              |  \--*  LCL_VAR   ref    V17 tmp11        
               [000156] ------------              \--*  FTN_ADDR  long   <>c.<GetProjectPaths>b__2_0


-------------------------------------------------------------------------------------------------------------------
Successfully inlined System.MulticastDelegate:CtorClosed(System.Object,long):this (23 IL bytes) (depth 1) [profitable inline]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'profitable inline' for 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]' calling 'System.MulticastDelegate:CtorClosed(System.Object,long):this'
INLINER: during 'fgInline' result 'success' reason 'profitable inline'
Querying runtime about current class of field <>c.<>9 (declared as <>c)
Field's current class not available
Expanding INLINE_CANDIDATE in statement STMT00057 in BB20:
STMT00057 (IL   ???...  ???)
               [000260] I-C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance (exactContextHnd=0x00000000D1FFAB1E)
INLINER: inlineInfo.tokenLookupContextHandle for System.MulticastDelegate:ThrowNullThisInDelegateToInstance() set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.MulticastDelegate:ThrowNullThisInDelegateToInstance() :
IL to import:
IL_0000  28 04 14 00 06    call         0x6001404
IL_0005  73 4a 0a 00 06    newobj       0x6000A4A
IL_000a  7a                throw       

INLINER impTokenLookupContextHandle for System.MulticastDelegate:ThrowNullThisInDelegateToInstance() is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.MulticastDelegate:ThrowNullThisInDelegateToInstance()
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB23 [0022] created.
BB23 [000..00B)
Basic block list for 'System.MulticastDelegate:ThrowNullThisInDelegateToInstance()'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB23 [0022]  1                             0       [000..00B)        (throw )                     rare 
-----------------------------------------------------------------------------------------------------------------------------------------
INLINER: during 'fgInline' result 'failed this callee' reason 'does not return' for 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]' calling 'System.MulticastDelegate:ThrowNullThisInDelegateToInstance()'
INLINER: during 'fgInline' result 'failed this callee' reason 'does not return'
Expanding INLINE_CANDIDATE in statement STMT00017 in BB06:
STMT00017 (IL   ???...0x067)
               [000071] I-C-G-------              *  CALL      ref    System.Linq.Enumerable.Where (exactContextHnd=0x00000000D1FFAB1E)
               [000072] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000069] ------------ arg1         +--*  LCL_VAR   ref    V10 tmp4         
               [000070] ------------ arg2         \--*  LCL_VAR   ref    V11 tmp5         

Argument #0: is a local var
               [000069] ------------              *  LCL_VAR   ref    V10 tmp4         


Argument #1: is a local var
               [000070] ------------              *  LCL_VAR   ref    V11 tmp5         

INLINER: inlineInfo.tokenLookupContextHandle for System.Linq.Enumerable:Where(System.Collections.Generic.IEnumerable`1[__Canon],System.Func`2[__Canon,Boolean]):System.Collections.Generic.IEnumerable`1[__Canon] set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Linq.Enumerable:Where(System.Collections.Generic.IEnumerable`1[__Canon],System.Func`2[__Canon,Boolean]):System.Collections.Generic.IEnumerable`1[__Canon] :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  2d 07             brtrue.s     7 (IL_000a)
IL_0003  1f 10             ldc.i4.s     0x10
IL_0005  28 cb 03 00 06    call         0x60003CB
IL_000a  03                ldarg.1     
IL_000b  2d 07             brtrue.s     7 (IL_0014)
IL_000d  1f 0c             ldc.i4.s     0xC
IL_000f  28 cb 03 00 06    call         0x60003CB
IL_0014  02                ldarg.0     
IL_0015  75 59 00 00 1b    isinst       0x1B000059
IL_001a  0a                stloc.0     
IL_001b  06                ldloc.0     
IL_001c  2c 08             brfalse.s    8 (IL_0026)
IL_001e  06                ldloc.0     
IL_001f  03                ldarg.1     
IL_0020  6f fc 00 00 0a    callvirt     0xA0000FC
IL_0025  2a                ret         
IL_0026  02                ldarg.0     
IL_0027  75 5a 00 00 1b    isinst       0x1B00005A
IL_002c  0b                stloc.1     
IL_002d  07                ldloc.1     
IL_002e  2c 14             brfalse.s    20 (IL_0044)
IL_0030  07                ldloc.1     
IL_0031  8e                ldlen       
IL_0032  2c 0a             brfalse.s    10 (IL_003e)
IL_0034  07                ldloc.1     
IL_0035  03                ldarg.1     
IL_0036  73 fd 00 00 0a    newobj       0xA0000FD
IL_003b  0d                stloc.3     
IL_003c  09                ldloc.3     
IL_003d  2a                ret         
IL_003e  28 1a 00 00 2b    call         0x2B00001A
IL_0043  2a                ret         
IL_0044  02                ldarg.0     
IL_0045  75 5c 00 00 1b    isinst       0x1B00005C
IL_004a  0c                stloc.2     
IL_004b  08                ldloc.2     
IL_004c  2c 08             brfalse.s    8 (IL_0056)
IL_004e  08                ldloc.2     
IL_004f  03                ldarg.1     
IL_0050  73 fe 00 00 0a    newobj       0xA0000FE
IL_0055  2a                ret         
IL_0056  02                ldarg.0     
IL_0057  03                ldarg.1     
IL_0058  73 ff 00 00 0a    newobj       0xA0000FF
IL_005d  2a                ret         

INLINER impTokenLookupContextHandle for System.Linq.Enumerable:Where(System.Collections.Generic.IEnumerable`1[__Canon],System.Func`2[__Canon,Boolean]):System.Collections.Generic.IEnumerable`1[__Canon] is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Linq.Enumerable:Where(System.Collections.Generic.IEnumerable`1[__Canon],System.Func`2[__Canon,Boolean]):System.Collections.Generic.IEnumerable`1[__Canon]
weight= 10 : state   3 [ ldarg.0 ]
weight= 25 : state  45 [ brtrue.s ]
weight= 41 : state  32 [ ldc.i4.s ]
weight= 79 : state  40 [ call ]
weight= 16 : state   4 [ ldarg.1 ]
weight= 25 : state  45 [ brtrue.s ]
weight= 41 : state  32 [ ldc.i4.s ]
weight= 79 : state  40 [ call ]
weight= 10 : state   3 [ ldarg.0 ]
weight=166 : state 105 [ isinst ]
weight= 20 : state 199 [ stloc.0 -> ldloc.0 ]
weight= 27 : state  44 [ brfalse.s ]
weight= 12 : state   7 [ ldloc.0 ]
weight= 16 : state   4 [ ldarg.1 ]
weight= 83 : state  99 [ callvirt ]
weight= 19 : state  42 [ ret ]
weight= 10 : state   3 [ ldarg.0 ]
weight=166 : state 105 [ isinst ]
weight= -7 : state 200 [ stloc.1 -> ldloc.1 ]
weight= 27 : state  44 [ brfalse.s ]
weight=  9 : state   8 [ ldloc.1 ]
weight=  7 : state 119 [ ldlen ]
weight= 27 : state  44 [ brfalse.s ]
weight=  9 : state   8 [ ldloc.1 ]
weight= 16 : state   4 [ ldarg.1 ]
weight=227 : state 103 [ newobj ]
weight= -4 : state 202 [ stloc.3 -> ldloc.3 ]
weight= 19 : state  42 [ ret ]
weight= 79 : state  40 [ call ]
weight= 19 : state  42 [ ret ]
weight= 10 : state   3 [ ldarg.0 ]
weight=166 : state 105 [ isinst ]
weight=-10 : state 201 [ stloc.2 -> ldloc.2 ]
weight= 27 : state  44 [ brfalse.s ]
weight= 22 : state   9 [ ldloc.2 ]
weight= 16 : state   4 [ ldarg.1 ]
weight=227 : state 103 [ newobj ]
weight= 19 : state  42 [ ret ]
weight= 10 : state   3 [ ldarg.0 ]
weight= 16 : state   4 [ ldarg.1 ]
weight=227 : state 103 [ newobj ]
weight= 19 : state  42 [ ret ]

Inline candidate looks like a wrapper method.  Multiplier increased to 1.
Inline candidate has an arg that feeds a constant test.  Multiplier increased to 2.
Inline candidate callsite is in a loop.  Multiplier increased to 5.
calleeNativeSizeEstimate=2022
callsiteNativeSizeEstimate=115
benefit multiplier=5
threshold=575
Native estimate for function size exceeds threshold for inlining 202.2 > 57.5 (multiplier = 5)


Inline expansion aborted, inline not profitable
Inlining [000071] failed, so bashing STMT00017 to NOP

INLINER: during 'fgInline' result 'failed this call site' reason 'unprofitable inline' for 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]' calling 'System.Linq.Enumerable:Where(System.Collections.Generic.IEnumerable`1[__Canon],System.Func`2[__Canon,Boolean]):System.Collections.Generic.IEnumerable`1[__Canon]'
INLINER: during 'fgInline' result 'failed this call site' reason 'unprofitable inline'

Replacing the return expression placeholder [000073] with [000071]
               [000073] --C---------              *  RET_EXPR  ref   (inl return from call [000071])

Inserting the inline return expression
               [000071] --C-G-------              *  CALL      ref    System.Linq.Enumerable.Where
               [000072] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000069] ------------ arg1         +--*  LCL_VAR   ref    V10 tmp4         
               [000070] ------------ arg2         \--*  LCL_VAR   ref    V11 tmp5         


lvaUpdateClass: NOT Updating class for V05 from (00000000D1FFAB1E) System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] to (00000000D1FFAB1E) System.Collections.Generic.IEnumerable`1[__Canon]
Expanding INLINE_CANDIDATE in statement STMT00019 in BB06:
STMT00019 (IL 0x069...0x083)
               [000079] I-C-G-------              *  CALL      ref    System.IO.Directory.EnumerateFiles (exactContextHnd=0x00000000D1FFAB1E)
               [000077] ------------ arg0         +--*  LCL_VAR   ref    V04 loc3         
               [000078] ------------ arg1         \--*  CNS_STR   ref   <string constant>

Argument #0: is a local var
               [000077] ------------              *  LCL_VAR   ref    V04 loc3         


Argument #1: is a constant
               [000078] ------------              *  CNS_STR   ref   <string constant>

INLINER: inlineInfo.tokenLookupContextHandle for System.IO.Directory:EnumerateFiles(System.String,System.String):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.IO.Directory:EnumerateFiles(System.String,System.String):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  03                ldarg.1     
IL_0002  28 d3 00 00 06    call         0x60000D3
IL_0007  28 a4 00 00 06    call         0x60000A4
IL_000c  2a                ret         

INLINER impTokenLookupContextHandle for System.IO.Directory:EnumerateFiles(System.String,System.String):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.IO.Directory:EnumerateFiles(System.String,System.String):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB24 [0022] created.
BB24 [000..00D)
Basic block list for 'System.IO.Directory:EnumerateFiles(System.String,System.String):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB24 [0022]  1                             1       [000..00D)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000079] Starting PHASE Pre-import

*************** Inline @[000079] Finishing PHASE Pre-import

*************** Inline @[000079] Starting PHASE Importation
*************** In impImport() for System.IO.Directory:EnumerateFiles(System.String,System.String):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]

impImportBlockPending for BB24

Importing BB24 (PC=000) of 'System.IO.Directory:EnumerateFiles(System.String,System.String):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) ldarg.1
    [ 2]   2 (0x002) call 060000D3
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0


               [000266] I-C-G-------              *  CALL      ref    System.IO.EnumerationOptions.get_Compatible (exactContextHnd=0x00000000D1FFAB1E)

    [ 3]   7 (0x007) call 060000A4
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0


               [000268] I-C-G-------              *  CALL      ref    System.IO.Directory.EnumerateFiles (exactContextHnd=0x00000000D1FFAB1E)
               [000077] ------------ arg0         +--*  LCL_VAR   ref    V04 loc3         
               [000265] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000267] --C--------- arg2         \--*  RET_EXPR  ref   (inl return from call [000266])

    [ 1]  12 (0x00c) ret

    Inlinee Return expression (before normalization)  =>
               [000269] --C---------              *  RET_EXPR  ref   (inl return from call [000268])


    Inlinee Return expression (after normalization) =>
               [000269] --C---------              *  RET_EXPR  ref   (inl return from call [000268])

*************** Inline @[000079] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB24 [0022]  1                             1       [000..00D)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB24 [000..00D) (return), preds={} succs={}

***** BB24
               [000266] I-C-G-------              *  CALL      ref    System.IO.EnumerationOptions.get_Compatible (exactContextHnd=0x00000000D1FFAB1E)

***** BB24
               [000268] I-C-G-------              *  CALL      ref    System.IO.Directory.EnumerateFiles (exactContextHnd=0x00000000D1FFAB1E)
               [000077] ------------ arg0         +--*  LCL_VAR   ref    V04 loc3         
               [000265] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000267] --C--------- arg2         \--*  RET_EXPR  ref   (inl return from call [000266])

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000079] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000079] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000079] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000079] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000079] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000079] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000079] -----------

Arguments setup:

Inlinee method body:
STMT00059 (IL 0x069...  ???)
               [000266] I-C-G-------              *  CALL      ref    System.IO.EnumerationOptions.get_Compatible (exactContextHnd=0x00000000D1FFAB1E)


STMT00060 (IL 0x069...  ???)
               [000268] I-C-G-------              *  CALL      ref    System.IO.Directory.EnumerateFiles (exactContextHnd=0x00000000D1FFAB1E)
               [000077] ------------ arg0         +--*  LCL_VAR   ref    V04 loc3         
               [000265] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000267] --C--------- arg2         \--*  RET_EXPR  ref   (inl return from call [000266])

fgInlineAppendStatements: no gc ref inline locals.

Return expression for call at [000079] is
               [000269] --C---------              *  RET_EXPR  ref   (inl return from call [000268])
Successfully inlined System.IO.Directory:EnumerateFiles(System.String,System.String):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] (13 IL bytes) (depth 1) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]' calling 'System.IO.Directory:EnumerateFiles(System.String,System.String):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Expanding INLINE_CANDIDATE in statement STMT00059 in BB06:
STMT00059 (IL 0x069...  ???)
               [000266] I-C-G-------              *  CALL      ref    System.IO.EnumerationOptions.get_Compatible (exactContextHnd=0x00000000D1FFAB1E)
INLINER: inlineInfo.tokenLookupContextHandle for System.IO.EnumerationOptions:get_Compatible():System.IO.EnumerationOptions set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.IO.EnumerationOptions:get_Compatible():System.IO.EnumerationOptions :
IL to import:
IL_0000  7e d7 00 00 04    ldsfld       0x40000D7
IL_0005  2a                ret         

INLINER impTokenLookupContextHandle for System.IO.EnumerationOptions:get_Compatible():System.IO.EnumerationOptions is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.IO.EnumerationOptions:get_Compatible():System.IO.EnumerationOptions
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB25 [0023] created.
BB25 [000..006)
Basic block list for 'System.IO.EnumerationOptions:get_Compatible():System.IO.EnumerationOptions'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB25 [0023]  1                             1       [000..006)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000266] Starting PHASE Pre-import

*************** Inline @[000266] Finishing PHASE Pre-import

*************** Inline @[000266] Starting PHASE Importation
*************** In impImport() for System.IO.EnumerationOptions:get_Compatible():System.IO.EnumerationOptions

impImportBlockPending for BB25

Importing BB25 (PC=000) of 'System.IO.EnumerationOptions:get_Compatible():System.IO.EnumerationOptions'
    [ 0]   0 (0x000) ldsfld 040000D7
    [ 1]   5 (0x005) ret

    Inlinee Return expression (before normalization)  =>
               [000276] --CXG-------              *  COMMA     ref   
               [000275] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000273] ------------ arg0         |  +--*  CNS_INT   long   0x7ffc7e783cd8
               [000274] ------------ arg1         |  \--*  CNS_INT   int    40
               [000271] ----G-------              \--*  FIELD     ref    <Compatible>k__BackingField


    Inlinee Return expression (after normalization) =>
               [000276] --CXG-------              *  COMMA     ref   
               [000275] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000273] ------------ arg0         |  +--*  CNS_INT   long   0x7ffc7e783cd8
               [000274] ------------ arg1         |  \--*  CNS_INT   int    40
               [000271] ----G-------              \--*  FIELD     ref    <Compatible>k__BackingField

** Note: inlinee IL was partially imported -- imported 0 of 6 bytes of method IL

*************** Inline @[000266] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB25 [0023]  1                             1       [000..006)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB25 [000..006) (return), preds={} succs={}

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000266] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000266] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000266] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000266] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000266] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000266] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000266] -----------

Inlinee method body:fgInlineAppendStatements: no gc ref inline locals.

Return expression for call at [000266] is
               [000276] --CXG-------              *  COMMA     ref   
               [000275] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000273] ------------ arg0         |  +--*  CNS_INT   long   0x7ffc7e783cd8
               [000274] ------------ arg1         |  \--*  CNS_INT   int    40
               [000271] ----G-------              \--*  FIELD     ref    <Compatible>k__BackingField
Successfully inlined System.IO.EnumerationOptions:get_Compatible():System.IO.EnumerationOptions (6 IL bytes) (depth 2) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]' calling 'System.IO.EnumerationOptions:get_Compatible():System.IO.EnumerationOptions'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Expanding INLINE_CANDIDATE in statement STMT00060 in BB06:
STMT00060 (IL 0x069...  ???)
               [000268] I-C-G-------              *  CALL      ref    System.IO.Directory.EnumerateFiles (exactContextHnd=0x00000000D1FFAB1E)
               [000077] ------------ arg0         +--*  LCL_VAR   ref    V04 loc3         
               [000265] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000267] --C--------- arg2         \--*  RET_EXPR  ref   (inl return from call [000276])

Argument #0: is a local var
               [000077] ------------              *  LCL_VAR   ref    V04 loc3         


Argument #1: is a constant
               [000265] ------------              *  CNS_STR   ref   <string constant>


Argument #2: has global refs has side effects
               [000276] --CXG-------              *  COMMA     ref   
               [000275] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000273] ------------ arg0         |  +--*  CNS_INT   long   0x7ffc7e783cd8
               [000274] ------------ arg1         |  \--*  CNS_INT   int    40
               [000271] ----G-------              \--*  FIELD     ref    <Compatible>k__BackingField

INLINER: inlineInfo.tokenLookupContextHandle for System.IO.Directory:EnumerateFiles(System.String,System.String,System.IO.EnumerationOptions):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.IO.Directory:EnumerateFiles(System.String,System.String,System.IO.EnumerationOptions):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  03                ldarg.1     
IL_0002  17                ldc.i4.1    
IL_0003  04                ldarg.2     
IL_0004  28 9c 00 00 06    call         0x600009C
IL_0009  2a                ret         

INLINER impTokenLookupContextHandle for System.IO.Directory:EnumerateFiles(System.String,System.String,System.IO.EnumerationOptions):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.IO.Directory:EnumerateFiles(System.String,System.String,System.IO.EnumerationOptions):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB26 [0024] created.
BB26 [000..00A)
Basic block list for 'System.IO.Directory:EnumerateFiles(System.String,System.String,System.IO.EnumerationOptions):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB26 [0024]  1                             1       [000..00A)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000268] Starting PHASE Pre-import

*************** Inline @[000268] Finishing PHASE Pre-import

*************** Inline @[000268] Starting PHASE Importation
*************** In impImport() for System.IO.Directory:EnumerateFiles(System.String,System.String,System.IO.EnumerationOptions):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]

impImportBlockPending for BB26

Importing BB26 (PC=000) of 'System.IO.Directory:EnumerateFiles(System.String,System.String,System.IO.EnumerationOptions):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) ldarg.1
    [ 2]   2 (0x002) ldc.i4.1 1
    [ 3]   3 (0x003) ldarg.2
lvaGrabTemp returning 23 (V23 tmp17) called for Inlining Arg.
Marked V23 as a single def temp
Querying runtime about current class of field System.IO.EnumerationOptions.<Compatible>k__BackingField (declared as System.IO.EnumerationOptions)
Field's current class not available

lvaSetClass: setting class for V23 to (00000000D1FFAB1E) System.IO.EnumerationOptions 

    [ 4]   4 (0x004) call 0600009C
In Compiler::impImportCall: opcode is call, kind=0, callRetType is ref, structSize is 0
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'noinline per IL/cached result' for 'System.IO.Directory:EnumerateFiles(System.String,System.String,System.IO.EnumerationOptions):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]' calling 'System.IO.Directory:InternalEnumeratePaths(System.String,System.String,int,System.IO.EnumerationOptions):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'noinline per IL/cached result'

    [ 1]   9 (0x009) ret

    Inlinee Return expression (before normalization)  =>
               [000281] --C-G-------              *  CALL      ref    System.IO.Directory.InternalEnumeratePaths
               [000077] ------------ arg0         +--*  LCL_VAR   ref    V04 loc3         
               [000278] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000279] ------------ arg2         +--*  CNS_INT   int    1
               [000280] ------------ arg3         \--*  LCL_VAR   ref    V23 tmp17        


    Inlinee Return expression (after normalization) =>
               [000281] --C-G-------              *  CALL      ref    System.IO.Directory.InternalEnumeratePaths
               [000077] ------------ arg0         +--*  LCL_VAR   ref    V04 loc3         
               [000278] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000279] ------------ arg2         +--*  CNS_INT   int    1
               [000280] ------------ arg3         \--*  LCL_VAR   ref    V23 tmp17        

** Note: inlinee IL was partially imported -- imported 0 of 10 bytes of method IL

*************** Inline @[000268] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB26 [0024]  1                             1       [000..00A)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB26 [000..00A) (return), preds={} succs={}

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000268] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000268] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000268] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000268] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000268] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000268] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000268] -----------

Arguments setup:
STMT00061 (IL 0x069...  ???)
               [000283] -ACXG-------              *  ASG       ref   
               [000282] D------N----              +--*  LCL_VAR   ref    V23 tmp17        
               [000276] --CXG-------              \--*  COMMA     ref   
               [000275] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000273] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc7e783cd8
               [000274] ------------ arg1            |  \--*  CNS_INT   int    40
               [000271] ----G-------                 \--*  FIELD     ref    <Compatible>k__BackingField

Inlinee method body:fgInlineAppendStatements: no gc ref inline locals.

Return expression for call at [000268] is
               [000281] --C-G-------              *  CALL      ref    System.IO.Directory.InternalEnumeratePaths
               [000077] ------------ arg0         +--*  LCL_VAR   ref    V04 loc3         
               [000278] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000279] ------------ arg2         +--*  CNS_INT   int    1
               [000280] ------------ arg3         \--*  LCL_VAR   ref    V23 tmp17        
Successfully inlined System.IO.Directory:EnumerateFiles(System.String,System.String,System.IO.EnumerationOptions):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] (10 IL bytes) (depth 2) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]' calling 'System.IO.Directory:EnumerateFiles(System.String,System.String,System.IO.EnumerationOptions):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Querying runtime about current class of field System.IO.EnumerationOptions.<Compatible>k__BackingField (declared as System.IO.EnumerationOptions)
Field's current class not available
Expanding INLINE_CANDIDATE in statement STMT00020 in BB06:
STMT00020 (IL   ???...  ???)
               [000081] I-C-G-------              *  CALL nullcheck void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddRange (exactContextHnd=0x00000000D1FFAB1E)
               [000076] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         
               [000080] --C--------- arg1         \--*  RET_EXPR  ref   (inl return from call [000269])
thisArg: is a local var
               [000076] ------------              *  LCL_VAR   ref    V01 loc0         


Argument #1: has global refs has side effects
               [000281] --C-G-------              *  CALL      ref    System.IO.Directory.InternalEnumeratePaths
               [000077] ------------ arg0         +--*  LCL_VAR   ref    V04 loc3         
               [000278] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000279] ------------ arg2         +--*  CNS_INT   int    1
               [000280] ------------ arg3         \--*  LCL_VAR   ref    V23 tmp17        

INLINER: inlineInfo.tokenLookupContextHandle for System.Collections.Generic.List`1[__Canon][System.__Canon]:AddRange(System.Collections.Generic.IEnumerable`1[__Canon]):this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Collections.Generic.List`1[__Canon][System.__Canon]:AddRange(System.Collections.Generic.IEnumerable`1[__Canon]):this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  02                ldarg.0     
IL_0002  7b 49 0c 00 0a    ldfld        0xA000C49
IL_0007  03                ldarg.1     
IL_0008  28 50 0c 00 0a    call         0xA000C50
IL_000d  2a                ret         

INLINER impTokenLookupContextHandle for System.Collections.Generic.List`1[__Canon][System.__Canon]:AddRange(System.Collections.Generic.IEnumerable`1[__Canon]):this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Collections.Generic.List`1[__Canon][System.__Canon]:AddRange(System.Collections.Generic.IEnumerable`1[__Canon]):this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB27 [0025] created.
BB27 [000..00E)
Basic block list for 'System.Collections.Generic.List`1[__Canon][System.__Canon]:AddRange(System.Collections.Generic.IEnumerable`1[__Canon]):this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB27 [0025]  1                             1       [000..00E)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000081] Starting PHASE Pre-import

*************** Inline @[000081] Finishing PHASE Pre-import

*************** Inline @[000081] Starting PHASE Importation
*************** In impImport() for System.Collections.Generic.List`1[__Canon][System.__Canon]:AddRange(System.Collections.Generic.IEnumerable`1[__Canon]):this

impImportBlockPending for BB27

Importing BB27 (PC=000) of 'System.Collections.Generic.List`1[__Canon][System.__Canon]:AddRange(System.Collections.Generic.IEnumerable`1[__Canon]):this'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) ldarg.0
    [ 2]   2 (0x002) ldfld 0A000C49
    [ 2]   7 (0x007) ldarg.1
lvaGrabTemp returning 24 (V24 tmp18) called for Inlining Arg.
Marked V24 as a single def temp

lvaSetClass: setting class for V24 to (00000000D1FFAB1E) System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] 

    [ 3]   8 (0x008) call 0A000C50
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'has exception handling' for 'System.Collections.Generic.List`1[__Canon][System.__Canon]:AddRange(System.Collections.Generic.IEnumerable`1[__Canon]):this' calling 'System.Collections.Generic.List`1[__Canon][System.__Canon]:InsertRange(int,System.Collections.Generic.IEnumerable`1[__Canon]):this'

INLINER: Marking System.Collections.Generic.List`1[__Canon][System.__Canon]:InsertRange(int,System.Collections.Generic.IEnumerable`1[__Canon]):this as NOINLINE because of has exception handling
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'has exception handling'


               [000288] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
               [000076] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         
               [000286] ---XG------- arg1         +--*  FIELD     int    _size
               [000285] ------------              |  \--*  LCL_VAR   ref    V01 loc0         
               [000287] ------------ arg2         \--*  LCL_VAR   ref    V24 tmp18        

    [ 0]  13 (0x00d) ret
*************** Inline @[000081] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB27 [0025]  1                             1       [000..00E)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB27 [000..00E) (return), preds={} succs={}

***** BB27
               [000288] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
               [000076] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         
               [000286] ---XG------- arg1         +--*  FIELD     int    _size
               [000285] ------------              |  \--*  LCL_VAR   ref    V01 loc0         
               [000287] ------------ arg2         \--*  LCL_VAR   ref    V24 tmp18        

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000081] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000081] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000081] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000081] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000081] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000081] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000081] -----------

Arguments setup:
STMT00063 (IL   ???...  ???)
               [000290] -AC-G-------              *  ASG       ref   
               [000289] D------N----              +--*  LCL_VAR   ref    V24 tmp18        
               [000281] --C-G-------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths
               [000077] ------------ arg0            +--*  LCL_VAR   ref    V04 loc3         
               [000278] ------------ arg1            +--*  CNS_STR   ref   <string constant>
               [000279] ------------ arg2            +--*  CNS_INT   int    1
               [000280] ------------ arg3            \--*  LCL_VAR   ref    V23 tmp17        

Inlinee method body:
STMT00062 (IL   ???...  ???)
               [000288] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
               [000076] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         
               [000286] ---XG------- arg1         +--*  FIELD     int    _size
               [000285] ------------              |  \--*  LCL_VAR   ref    V01 loc0         
               [000287] ------------ arg2         \--*  LCL_VAR   ref    V24 tmp18        

fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined System.Collections.Generic.List`1[__Canon][System.__Canon]:AddRange(System.Collections.Generic.IEnumerable`1[__Canon]):this (14 IL bytes) (depth 1) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]' calling 'System.Collections.Generic.List`1[__Canon][System.__Canon]:AddRange(System.Collections.Generic.IEnumerable`1[__Canon]):this'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Querying runtime about current class of field <>c.<>9__2_1 (declared as System.Func`2[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]])
Field's current class not available
Expanding INLINE_CANDIDATE in statement STMT00030 in BB07:
STMT00030 (IL   ???...  ???)
               [000133] I-CXG-------              *  CALL      void   System.MulticastDelegate.CtorClosed (exactContextHnd=0x00000000D1FFAB1E)
               [000132] ------------ this in rcx  +--*  LCL_VAR   ref    V16 tmp10        
               [000126] --CXG------- arg1         +--*  COMMA     ref   
               [000125] H-CXG-------              |  +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000123] ------------ arg0         |  |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000124] ------------ arg1         |  |  \--*  CNS_INT   int    35
               [000121] ----G-------              |  \--*  FIELD     ref    <>9
               [000127] ------------ arg2         \--*  FTN_ADDR  long   <>c.<GetProjectPaths>b__2_1

thisArg: is a local var
               [000132] ------------              *  LCL_VAR   ref    V16 tmp10        


Argument #1: has global refs has side effects
               [000126] --CXG-------              *  COMMA     ref   
               [000125] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000123] ------------ arg0         |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000124] ------------ arg1         |  \--*  CNS_INT   int    35
               [000121] ----G-------              \--*  FIELD     ref    <>9


Argument #2:
               [000127] ------------              *  FTN_ADDR  long   <>c.<GetProjectPaths>b__2_1


INLINER: inlineInfo.tokenLookupContextHandle for System.MulticastDelegate:CtorClosed(System.Object,long):this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.MulticastDelegate:CtorClosed(System.Object,long):this :
IL to import:
IL_0000  03                ldarg.1     
IL_0001  2d 05             brtrue.s     5 (IL_0008)
IL_0003  28 9c 04 00 06    call         0x600049C
IL_0008  02                ldarg.0     
IL_0009  03                ldarg.1     
IL_000a  7d 0d 01 00 04    stfld        0x400010D
IL_000f  02                ldarg.0     
IL_0010  04                ldarg.2     
IL_0011  7d 0f 01 00 04    stfld        0x400010F
IL_0016  2a                ret         

INLINER impTokenLookupContextHandle for System.MulticastDelegate:CtorClosed(System.Object,long):this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.MulticastDelegate:CtorClosed(System.Object,long):this
weight= 16 : state   4 [ ldarg.1 ]
weight= 25 : state  45 [ brtrue.s ]
weight= 79 : state  40 [ call ]
weight= 69 : state 226 [ ldarg.0 -> ldarg.1 -> stfld ]
weight= 98 : state 228 [ ldarg.0 -> ldarg.2 -> stfld ]
weight= 19 : state  42 [ ret ]

Inline candidate has an arg that feeds a constant test.  Multiplier increased to 1.
Inline candidate is mostly loads and stores.  Multiplier increased to 4.
Inline candidate callsite is in a loop.  Multiplier increased to 7.
calleeNativeSizeEstimate=306
callsiteNativeSizeEstimate=145
benefit multiplier=7
threshold=1015
Native estimate for function size is within threshold for inlining 30.6 <= 101.5 (multiplier = 7)
Jump targets:
  IL_0008
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB28 [0026] created.
BB28 [000..003)
New Basic Block BB29 [0027] created.
BB29 [003..008)
New Basic Block BB30 [0028] created.
BB30 [008..017)
Basic block list for 'System.MulticastDelegate:CtorClosed(System.Object,long):this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB28 [0026]  1                             1       [000..003)-> BB30 ( cond )                     
BB29 [0027]  1                             1       [003..008)                                     
BB30 [0028]  2                             1       [008..017)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000133] Starting PHASE Pre-import

*************** Inline @[000133] Finishing PHASE Pre-import

*************** Inline @[000133] Starting PHASE Importation
*************** In impImport() for System.MulticastDelegate:CtorClosed(System.Object,long):this

impImportBlockPending for BB28

Importing BB28 (PC=000) of 'System.MulticastDelegate:CtorClosed(System.Object,long):this'
    [ 0]   0 (0x000) ldarg.1
lvaGrabTemp returning 25 (V25 tmp19) called for Inlining Arg.
Marked V25 as a single def temp
Querying runtime about current class of field <>c.<>9 (declared as <>c)
Field's current class not available

lvaSetClass: setting class for V25 to (00000000D1FFAB1E) <>c 

    [ 1]   1 (0x001) brtrue.s

               [000295] ------------              *  JTRUE     void  
               [000294] ------------              \--*  NE        int   
               [000292] ------------                 +--*  LCL_VAR   ref    V25 tmp19        
               [000293] ------------                 \--*  CNS_INT   ref    null

impImportBlockPending for BB29

impImportBlockPending for BB30

Importing BB30 (PC=008) of 'System.MulticastDelegate:CtorClosed(System.Object,long):this'
    [ 0]   8 (0x008) ldarg.0
    [ 1]   9 (0x009) ldarg.1
    [ 2]  10 (0x00a) stfld 0400010D

               [000298] -A-XG-------              *  ASG       ref   
               [000297] ---XG--N----              +--*  FIELD     ref    _target
               [000132] ------------              |  \--*  LCL_VAR   ref    V16 tmp10        
               [000296] ------------              \--*  LCL_VAR   ref    V25 tmp19        

    [ 0]  15 (0x00f) ldarg.0
    [ 1]  16 (0x010) ldarg.2
lvaGrabTemp returning 26 (V26 tmp20) called for Inlining Arg.

    [ 2]  17 (0x011) stfld 0400010F

               [000302] -A-XG-------              *  ASG       long  
               [000301] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000299] ------------              |  \--*  LCL_VAR   ref    V16 tmp10        
               [000300] ------------              \--*  LCL_VAR   long   V26 tmp20        

    [ 0]  22 (0x016) ret
Importing BB29 (PC=003) of 'System.MulticastDelegate:CtorClosed(System.Object,long):this'
    [ 0]   3 (0x003) call 0600049C
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0


               [000303] I-C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance (exactContextHnd=0x00000000D1FFAB1E)

impImportBlockPending for BB30

*************** Inline @[000133] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB28 [0026]  1                             1       [000..003)-> BB30 ( cond )                     i 
BB29 [0027]  1                             1       [003..008)                                     i 
BB30 [0028]  2                             1       [008..017)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB28 [000..003) -> BB30 (cond), preds={} succs={BB29,BB30}

***** BB28
               [000295] ------------              *  JTRUE     void  
               [000294] ------------              \--*  NE        int   
               [000292] ------------                 +--*  LCL_VAR   ref    V25 tmp19        
               [000293] ------------                 \--*  CNS_INT   ref    null

------------ BB29 [003..008), preds={} succs={BB30}

***** BB29
               [000303] I-C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance (exactContextHnd=0x00000000D1FFAB1E)

------------ BB30 [008..017) (return), preds={} succs={}

***** BB30
               [000298] -A-XG-------              *  ASG       ref   
               [000297] ---XG--N----              +--*  FIELD     ref    _target
               [000132] ------------              |  \--*  LCL_VAR   ref    V16 tmp10        
               [000296] ------------              \--*  LCL_VAR   ref    V25 tmp19        

***** BB30
               [000302] -A-XG-------              *  ASG       long  
               [000301] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000299] ------------              |  \--*  LCL_VAR   ref    V16 tmp10        
               [000300] ------------              \--*  LCL_VAR   long   V26 tmp20        

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000133] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000133] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000133] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000133] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000133] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000133] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000133] -----------

Arguments setup:
STMT00068 (IL   ???...  ???)
               [000305] -ACXG-------              *  ASG       ref   
               [000304] D------N----              +--*  LCL_VAR   ref    V25 tmp19        
               [000126] --CXG-------              \--*  COMMA     ref   
               [000125] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000123] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000124] ------------ arg1            |  \--*  CNS_INT   int    35
               [000121] ----G-------                 \--*  FIELD     ref    <>9

Inlinee method body:New Basic Block BB31 [0029] created.

Convert bbJumpKind of BB30 to BBJ_NONE
fgInlineAppendStatements: no gc ref inline locals.

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB28 [0026]  1                             1       [000..000)-> BB30 ( cond )                     i internal bwd 
BB29 [0027]  1                             0.50    [000..000)                                     i internal bwd 
BB30 [0028]  2                             1       [000..000)                                     i internal bwd 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB28 [000..000) -> BB30 (cond), preds={} succs={BB29,BB30}

***** BB28
STMT00064 (IL   ???...  ???)
               [000295] ------------              *  JTRUE     void  
               [000294] ------------              \--*  NE        int   
               [000292] ------------                 +--*  LCL_VAR   ref    V25 tmp19        
               [000293] ------------                 \--*  CNS_INT   ref    null

------------ BB29 [000..000), preds={} succs={BB30}

***** BB29
STMT00067 (IL   ???...  ???)
               [000303] I-C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance (exactContextHnd=0x00000000D1FFAB1E)

------------ BB30 [000..000), preds={} succs={BB31}

***** BB30
STMT00065 (IL   ???...  ???)
               [000298] -A-XG-------              *  ASG       ref   
               [000297] ---XG--N----              +--*  FIELD     ref    _target
               [000132] ------------              |  \--*  LCL_VAR   ref    V16 tmp10        
               [000296] ------------              \--*  LCL_VAR   ref    V25 tmp19        

***** BB30
STMT00066 (IL   ???...  ???)
               [000302] -A-XG-------              *  ASG       long  
               [000301] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000299] ------------              |  \--*  LCL_VAR   ref    V16 tmp10        
               [000127] ------------              \--*  FTN_ADDR  long   <>c.<GetProjectPaths>b__2_1


-------------------------------------------------------------------------------------------------------------------
Successfully inlined System.MulticastDelegate:CtorClosed(System.Object,long):this (23 IL bytes) (depth 1) [profitable inline]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'profitable inline' for 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]' calling 'System.MulticastDelegate:CtorClosed(System.Object,long):this'
INLINER: during 'fgInline' result 'success' reason 'profitable inline'
Querying runtime about current class of field <>c.<>9 (declared as <>c)
Field's current class not available
Expanding INLINE_CANDIDATE in statement STMT00067 in BB29:
STMT00067 (IL   ???...  ???)
               [000303] I-C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance (exactContextHnd=0x00000000D1FFAB1E)
INLINER: inlineInfo.tokenLookupContextHandle for System.MulticastDelegate:ThrowNullThisInDelegateToInstance() set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.MulticastDelegate:ThrowNullThisInDelegateToInstance() :
IL to import:
IL_0000  28 04 14 00 06    call         0x6001404
IL_0005  73 4a 0a 00 06    newobj       0x6000A4A
IL_000a  7a                throw       

INLINER impTokenLookupContextHandle for System.MulticastDelegate:ThrowNullThisInDelegateToInstance() is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.MulticastDelegate:ThrowNullThisInDelegateToInstance()
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB32 [0030] created.
BB32 [000..00B)
Basic block list for 'System.MulticastDelegate:ThrowNullThisInDelegateToInstance()'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB32 [0030]  1                             0       [000..00B)        (throw )                     rare 
-----------------------------------------------------------------------------------------------------------------------------------------
INLINER: during 'fgInline' result 'failed this callee' reason 'does not return' for 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]' calling 'System.MulticastDelegate:ThrowNullThisInDelegateToInstance()'
INLINER: during 'fgInline' result 'failed this callee' reason 'does not return'
Expanding INLINE_CANDIDATE in statement STMT00026 in BB08:
STMT00026 (IL   ???...0x0A1)
               [000112] I-C-G-------              *  CALL      ref    System.Linq.Enumerable.SelectMany (exactContextHnd=0x00000000D1FFAB1E)
               [000113] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000110] ------------ arg1         +--*  LCL_VAR   ref    V14 tmp8         
               [000111] ------------ arg2         \--*  LCL_VAR   ref    V15 tmp9         

Argument #0: is a local var
               [000110] ------------              *  LCL_VAR   ref    V14 tmp8         


Argument #1: is a local var
               [000111] ------------              *  LCL_VAR   ref    V15 tmp9         

INLINER: inlineInfo.tokenLookupContextHandle for System.Linq.Enumerable:SelectMany(System.Collections.Generic.IEnumerable`1[__Canon],System.Func`2[__Canon,__Canon]):System.Collections.Generic.IEnumerable`1[__Canon] set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Linq.Enumerable:SelectMany(System.Collections.Generic.IEnumerable`1[__Canon],System.Func`2[__Canon,__Canon]):System.Collections.Generic.IEnumerable`1[__Canon] :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  2d 07             brtrue.s     7 (IL_000a)
IL_0003  1f 10             ldc.i4.s     0x10
IL_0005  28 cb 03 00 06    call         0x60003CB
IL_000a  03                ldarg.1     
IL_000b  2d 07             brtrue.s     7 (IL_0014)
IL_000d  1f 0f             ldc.i4.s     0xF
IL_000f  28 cb 03 00 06    call         0x60003CB
IL_0014  02                ldarg.0     
IL_0015  03                ldarg.1     
IL_0016  73 ca 00 00 0a    newobj       0xA0000CA
IL_001b  2a                ret         

INLINER impTokenLookupContextHandle for System.Linq.Enumerable:SelectMany(System.Collections.Generic.IEnumerable`1[__Canon],System.Func`2[__Canon,__Canon]):System.Collections.Generic.IEnumerable`1[__Canon] is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Linq.Enumerable:SelectMany(System.Collections.Generic.IEnumerable`1[__Canon],System.Func`2[__Canon,__Canon]):System.Collections.Generic.IEnumerable`1[__Canon]
weight= 10 : state   3 [ ldarg.0 ]
weight= 25 : state  45 [ brtrue.s ]
weight= 41 : state  32 [ ldc.i4.s ]
weight= 79 : state  40 [ call ]
weight= 16 : state   4 [ ldarg.1 ]
weight= 25 : state  45 [ brtrue.s ]
weight= 41 : state  32 [ ldc.i4.s ]
weight= 79 : state  40 [ call ]
weight= 10 : state   3 [ ldarg.0 ]
weight= 16 : state   4 [ ldarg.1 ]
weight=227 : state 103 [ newobj ]
weight= 19 : state  42 [ ret ]

Inline candidate has an arg that feeds a constant test.  Multiplier increased to 1.
Inline candidate callsite is in a loop.  Multiplier increased to 4.
calleeNativeSizeEstimate=588
callsiteNativeSizeEstimate=115
benefit multiplier=4
threshold=460
Native estimate for function size exceeds threshold for inlining 58.8 > 46 (multiplier = 4)


Inline expansion aborted, inline not profitable
Inlining [000112] failed, so bashing STMT00026 to NOP

INLINER: during 'fgInline' result 'failed this call site' reason 'unprofitable inline' for 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]' calling 'System.Linq.Enumerable:SelectMany(System.Collections.Generic.IEnumerable`1[__Canon],System.Func`2[__Canon,__Canon]):System.Collections.Generic.IEnumerable`1[__Canon]'
INLINER: during 'fgInline' result 'failed this call site' reason 'unprofitable inline'
Expanding INLINE_CANDIDATE in statement STMT00027 in BB08:
STMT00027 (IL   ???...  ???)
               [000115] I-C-G-------              *  CALL nullcheck void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddRange (exactContextHnd=0x00000000D1FFAB1E)
               [000109] ------------ this in rcx  +--*  LCL_VAR   ref    V13 tmp7         
               [000114] --C--------- arg1         \--*  RET_EXPR  ref   (inl return from call [000112])
thisArg: is a local var
               [000109] ------------              *  LCL_VAR   ref    V13 tmp7         


Argument #1: has global refs has side effects
               [000112] --C-G-------              *  CALL      ref    System.Linq.Enumerable.SelectMany
               [000113] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000110] ------------ arg1         +--*  LCL_VAR   ref    V14 tmp8         
               [000111] ------------ arg2         \--*  LCL_VAR   ref    V15 tmp9         

INLINER: inlineInfo.tokenLookupContextHandle for System.Collections.Generic.List`1[__Canon][System.__Canon]:AddRange(System.Collections.Generic.IEnumerable`1[__Canon]):this set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method System.Collections.Generic.List`1[__Canon][System.__Canon]:AddRange(System.Collections.Generic.IEnumerable`1[__Canon]):this :
IL to import:
IL_0000  02                ldarg.0     
IL_0001  02                ldarg.0     
IL_0002  7b 49 0c 00 0a    ldfld        0xA000C49
IL_0007  03                ldarg.1     
IL_0008  28 50 0c 00 0a    call         0xA000C50
IL_000d  2a                ret         

INLINER impTokenLookupContextHandle for System.Collections.Generic.List`1[__Canon][System.__Canon]:AddRange(System.Collections.Generic.IEnumerable`1[__Canon]):this is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for System.Collections.Generic.List`1[__Canon][System.__Canon]:AddRange(System.Collections.Generic.IEnumerable`1[__Canon]):this
Jump targets:
  none
Computing inlinee profile scale:
   ... call site not profiled
New Basic Block BB33 [0030] created.
BB33 [000..00E)
Basic block list for 'System.Collections.Generic.List`1[__Canon][System.__Canon]:AddRange(System.Collections.Generic.IEnumerable`1[__Canon]):this'

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB33 [0030]  1                             1       [000..00E)        (return)                     
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Inline @[000115] Starting PHASE Pre-import

*************** Inline @[000115] Finishing PHASE Pre-import

*************** Inline @[000115] Starting PHASE Importation
*************** In impImport() for System.Collections.Generic.List`1[__Canon][System.__Canon]:AddRange(System.Collections.Generic.IEnumerable`1[__Canon]):this

impImportBlockPending for BB33

Importing BB33 (PC=000) of 'System.Collections.Generic.List`1[__Canon][System.__Canon]:AddRange(System.Collections.Generic.IEnumerable`1[__Canon]):this'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) ldarg.0
    [ 2]   2 (0x002) ldfld 0A000C49
    [ 2]   7 (0x007) ldarg.1
lvaGrabTemp returning 27 (V27 tmp21) called for Inlining Arg.
Marked V27 as a single def temp

lvaSetClass: setting class for V27 to (00000000D1FFAB1E) System.Collections.Generic.IEnumerable`1[__Canon] 

    [ 3]   8 (0x008) call 0A000C50
In Compiler::impImportCall: opcode is call, kind=0, callRetType is void, structSize is 0
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'noinline per IL/cached result' for 'System.Collections.Generic.List`1[__Canon][System.__Canon]:AddRange(System.Collections.Generic.IEnumerable`1[__Canon]):this' calling 'System.Collections.Generic.List`1[__Canon][System.__Canon]:InsertRange(int,System.Collections.Generic.IEnumerable`1[__Canon]):this'
INLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'noinline per IL/cached result'


               [000311] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
               [000109] ------------ this in rcx  +--*  LCL_VAR   ref    V13 tmp7         
               [000309] ---XG------- arg1         +--*  FIELD     int    _size
               [000308] ------------              |  \--*  LCL_VAR   ref    V13 tmp7         
               [000310] ------------ arg2         \--*  LCL_VAR   ref    V27 tmp21        

    [ 0]  13 (0x00d) ret
*************** Inline @[000115] Finishing PHASE Importation
Trees after Importation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB33 [0030]  1                             1       [000..00E)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB33 [000..00E) (return), preds={} succs={}

***** BB33
               [000311] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
               [000109] ------------ this in rcx  +--*  LCL_VAR   ref    V13 tmp7         
               [000309] ---XG------- arg1         +--*  FIELD     int    _size
               [000308] ------------              |  \--*  LCL_VAR   ref    V13 tmp7         
               [000310] ------------ arg2         \--*  LCL_VAR   ref    V27 tmp21        

-------------------------------------------------------------------------------------------------------------------

*************** Inline @[000115] Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Inline @[000115] Finishing PHASE Indirect call transform [no changes]

*************** Inline @[000115] Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Inline @[000115] Finishing PHASE Expand patchpoints [no changes]

*************** Inline @[000115] Starting PHASE Post-import

*************** In fgRemoveEmptyBlocks

*************** Inline @[000115] Finishing PHASE Post-import


----------- Statements (and blocks) added due to the inlining of call [000115] -----------

Arguments setup:
STMT00070 (IL   ???...  ???)
               [000313] -AC-G-------              *  ASG       ref   
               [000312] D------N----              +--*  LCL_VAR   ref    V27 tmp21        
               [000112] --C-G-------              \--*  CALL      ref    System.Linq.Enumerable.SelectMany
               [000113] H----------- arg0            +--*  CNS_INT(h) long   0xd1ffab1e method
               [000110] ------------ arg1            +--*  LCL_VAR   ref    V14 tmp8         
               [000111] ------------ arg2            \--*  LCL_VAR   ref    V15 tmp9         

Inlinee method body:
STMT00069 (IL   ???...  ???)
               [000311] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
               [000109] ------------ this in rcx  +--*  LCL_VAR   ref    V13 tmp7         
               [000309] ---XG------- arg1         +--*  FIELD     int    _size
               [000308] ------------              |  \--*  LCL_VAR   ref    V13 tmp7         
               [000310] ------------ arg2         \--*  LCL_VAR   ref    V27 tmp21        

fgInlineAppendStatements: no gc ref inline locals.
Successfully inlined System.Collections.Generic.List`1[__Canon][System.__Canon]:AddRange(System.Collections.Generic.IEnumerable`1[__Canon]):this (14 IL bytes) (depth 1) [below ALWAYS_INLINE size]
--------------------------------------------------------------------------------------------

INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size' for 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]' calling 'System.Collections.Generic.List`1[__Canon][System.__Canon]:AddRange(System.Collections.Generic.IEnumerable`1[__Canon]):this'
INLINER: during 'fgInline' result 'success' reason 'below ALWAYS_INLINE size'
Expanding INLINE_CANDIDATE in statement STMT00038 in BB11:
STMT00038 (IL 0x0B3...0x0C4)
               [000181] I-C-G-------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle (exactContextHnd=0x00000000D1FFAB1E)
               [000182] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000180] ------------ arg1         \--*  LCL_VAR   ref    V01 loc0         

Argument #0: is a local var
               [000180] ------------              *  LCL_VAR   ref    V01 loc0         

INLINER: inlineInfo.tokenLookupContextHandle for SolutionAnalyzer.GeneralExtensions:Shuffle(System.Collections.Generic.List`1[__Canon]) set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method SolutionAnalyzer.GeneralExtensions:Shuffle(System.Collections.Generic.List`1[__Canon]) :
IL to import:
IL_0000  73 51 00 00 0a    newobj       0xA000051
IL_0005  0a                stloc.0     
IL_0006  02                ldarg.0     
IL_0007  6f 52 00 00 0a    callvirt     0xA000052
IL_000c  0b                stloc.1     
IL_000d  2b 42             br.s         66 (IL_0051)
IL_000f  07                ldloc.1     
IL_0010  17                ldc.i4.1    
IL_0011  59                sub         
IL_0012  0b                stloc.1     
IL_0013  06                ldloc.0     
IL_0014  07                ldloc.1     
IL_0015  17                ldc.i4.1    
IL_0016  58                add         
IL_0017  6f 53 00 00 0a    callvirt     0xA000053
IL_001c  0c                stloc.2     
IL_001d  02                ldarg.0     
IL_001e  08                ldloc.2     
IL_001f  0d                stloc.3     
IL_0020  02                ldarg.0     
IL_0021  13 04             stloc.s      0x4
IL_0023  07                ldloc.1     
IL_0024  13 05             stloc.s      0x5
IL_0026  02                ldarg.0     
IL_0027  07                ldloc.1     
IL_0028  6f 54 00 00 0a    callvirt     0xA000054
IL_002d  13 06             stloc.s      0x6
IL_002f  02                ldarg.0     
IL_0030  08                ldloc.2     
IL_0031  6f 54 00 00 0a    callvirt     0xA000054
IL_0036  13 07             stloc.s      0x7
IL_0038  09                ldloc.3     
IL_0039  11 06             ldloc.s      0x6
IL_003b  25                dup         
IL_003c  13 08             stloc.s      0x8
IL_003e  6f 55 00 00 0a    callvirt     0xA000055
IL_0043  11 04             ldloc.s      0x4
IL_0045  11 05             ldloc.s      0x5
IL_0047  11 07             ldloc.s      0x7
IL_0049  25                dup         
IL_004a  13 08             stloc.s      0x8
IL_004c  6f 55 00 00 0a    callvirt     0xA000055
IL_0051  07                ldloc.1     
IL_0052  17                ldc.i4.1    
IL_0053  30 ba             bgt.s        -70 (IL_000f)
IL_0055  2a                ret         

INLINER impTokenLookupContextHandle for SolutionAnalyzer.GeneralExtensions:Shuffle(System.Collections.Generic.List`1[__Canon]) is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for SolutionAnalyzer.GeneralExtensions:Shuffle(System.Collections.Generic.List`1[__Canon])
weight=227 : state 103 [ newobj ]
weight=  6 : state  11 [ stloc.0 ]
weight= 10 : state   3 [ ldarg.0 ]
weight= 83 : state  99 [ callvirt ]
weight= 34 : state  12 [ stloc.1 ]
weight= 44 : state  43 [ br.s ]
weight=  9 : state   8 [ ldloc.1 ]
weight= 28 : state  24 [ ldc.i4.1 ]
weight=-15 : state  77 [ sub ]
weight= 34 : state  12 [ stloc.1 ]
weight= 12 : state   7 [ ldloc.0 ]
weight=  9 : state   8 [ ldloc.1 ]
weight= 28 : state  24 [ ldc.i4.1 ]
weight=-12 : state  76 [ add ]
weight= 83 : state  99 [ callvirt ]
weight=  4 : state  13 [ stloc.2 ]
weight= 10 : state   3 [ ldarg.0 ]
weight= 22 : state   9 [ ldloc.2 ]
weight= 49 : state  14 [ stloc.3 ]
weight= 10 : state   3 [ ldarg.0 ]
weight=-45 : state  20 [ stloc.s ]
weight=  9 : state   8 [ ldloc.1 ]
weight=-45 : state  20 [ stloc.s ]
weight= 10 : state   3 [ ldarg.0 ]
weight=  9 : state   8 [ ldloc.1 ]
weight= 83 : state  99 [ callvirt ]
weight=-45 : state  20 [ stloc.s ]
weight= 10 : state   3 [ ldarg.0 ]
weight= 22 : state   9 [ ldloc.2 ]
weight= 83 : state  99 [ callvirt ]
weight=-45 : state  20 [ stloc.s ]
weight= 24 : state  10 [ ldloc.3 ]
weight= 32 : state  18 [ ldloc.s ]
weight= 11 : state  38 [ dup ]
weight=-45 : state  20 [ stloc.s ]
weight= 83 : state  99 [ callvirt ]
weight= 32 : state  18 [ ldloc.s ]
weight= 32 : state  18 [ ldloc.s ]
weight= 32 : state  18 [ ldloc.s ]
weight= 11 : state  38 [ dup ]
weight=-45 : state  20 [ stloc.s ]
weight= 83 : state  99 [ callvirt ]
weight=  9 : state   8 [ ldloc.1 ]
weight= 28 : state  24 [ ldc.i4.1 ]
weight= 33 : state  48 [ bgt.s ]
weight= 19 : state  42 [ ret ]

Inline candidate has an arg that feeds a constant test.  Multiplier increased to 1.
Inline candidate callsite is boring.  Multiplier increased to 2.3.
calleeNativeSizeEstimate=1060
callsiteNativeSizeEstimate=85
benefit multiplier=2.3
threshold=195
Native estimate for function size exceeds threshold for inlining 106 > 19.5 (multiplier = 2.3)


Inline expansion aborted, inline not profitable
INLINER: during 'fgInline' result 'failed this call site' reason 'unprofitable inline' for 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]' calling 'SolutionAnalyzer.GeneralExtensions:Shuffle(System.Collections.Generic.List`1[__Canon])'
INLINER: during 'fgInline' result 'failed this call site' reason 'unprofitable inline'
Expanding INLINE_CANDIDATE in statement STMT00039 in BB11:
STMT00039 (IL 0x0B9...  ???)
               [000185] I-C-G-------              *  CALL      ref    SolutionAnalyzer.Logger.Log (exactContextHnd=0x00000000D1FFAB1E)
               [000186] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000183] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000184] ------------ arg2         \--*  CNS_INT   int    2

Argument #0: is a constant
               [000183] ------------              *  CNS_STR   ref   <string constant>


Argument #1: is a constant
               [000184] ------------              *  CNS_INT   int    2

INLINER: inlineInfo.tokenLookupContextHandle for SolutionAnalyzer.Logger:Log(System.__Canon,int):System.__Canon set to 0x00000000D1FFAB1E:

Invoking compiler for the inlinee method SolutionAnalyzer.Logger:Log(System.__Canon,int):System.__Canon :
IL to import:
IL_0000  28 33 00 00 06    call         0x6000033
IL_0005  03                ldarg.1     
IL_0006  32 45             blt.s        69 (IL_004d)
IL_0008  03                ldarg.1     
IL_0009  17                ldc.i4.1    
IL_000a  2e 09             beq.s        9 (IL_0015)
IL_000c  03                ldarg.1     
IL_000d  18                ldc.i4.2    
IL_000e  33 0a             bne.un.s     10 (IL_001a)
IL_0010  1f 0f             ldc.i4.s     0xF
IL_0012  0a                stloc.0     
IL_0013  2b 08             br.s         8 (IL_001d)
IL_0015  1f 0e             ldc.i4.s     0xE
IL_0017  0a                stloc.0     
IL_0018  2b 03             br.s         3 (IL_001d)
IL_001a  1f 0c             ldc.i4.s     0xC
IL_001c  0a                stloc.0     
IL_001d  06                ldloc.0     
IL_001e  7e 12 00 00 04    ldsfld       0x4000012
IL_0023  6f 69 00 00 0a    callvirt     0xA000069
IL_0028  26                pop         
IL_0029  28 6a 00 00 0a    call         0xA00006A
IL_002e  28 6b 00 00 0a    call         0xA00006B
IL_0033  02                ldarg.0     
IL_0034  8c 13 00 00 1b    box          0x1B000013
IL_0039  6f 6c 00 00 0a    callvirt     0xA00006C
IL_003e  28 6d 00 00 0a    call         0xA00006D
IL_0043  7e 12 00 00 04    ldsfld       0x4000012
IL_0048  6f 6e 00 00 0a    callvirt     0xA00006E
IL_004d  02                ldarg.0     
IL_004e  2a                ret         

INLINER impTokenLookupContextHandle for SolutionAnalyzer.Logger:Log(System.__Canon,int):System.__Canon is 0x00000000D1FFAB1E.
*************** In fgFindBasicBlocks() for SolutionAnalyzer.Logger:Log(System.__Canon,int):System.__Canon
weight= 79 : state  40 [ call ]
weight= 16 : state   4 [ ldarg.1 ]
weight= 28 : state  50 [ blt.s ]
weight= 16 : state   4 [ ldarg.1 ]
weight= 28 : state  24 [ ldc.i4.1 ]
weight=  6 : state  46 [ beq.s ]
weight= 16 : state   4 [ ldarg.1 ]
weight= 34 : state  25 [ ldc.i4.2 ]
weight= 12 : state  51 [ bne.un.s ]
weight= 41 : state  32 [ ldc.i4.s ]
weight=  6 : state  11 [ stloc.0 ]
weight= 44 : state  43 [ br.s ]
weight= 41 : state  32 [ ldc.i4.s ]
weight=  6 : state  11 [ stloc.0 ]
weight= 44 : state  43 [ br.s ]
weight= 41 : state  32 [ ldc.i4.s ]
weight= 20 : state 199 [ stloc.0 -> ldloc.0 ]
weight=159 : state 112 [ ldsfld ]
weight= 83 : state  99 [ callvirt ]
weight=-24 : state  39 [ pop ]
weight= 79 : state  40 [ call ]
weight= 79 : state  40 [ call ]
weight= 10 : state   3 [ ldarg.0 ]
weight=247 : state 117 [ box ]
weight= 83 : state  99 [ callvirt ]
weight= 79 : state  40 [ call ]
weight=159 : state 112 [ ldsfld ]
weight= 83 : state  99 [ callvirt ]
weight= 10 : state   3 [ ldarg.0 ]
weight= 19 : state  42 [ ret ]

Inline candidate has an arg that feeds a constant test.  Multiplier increased to 1.
Inline candidate has const arg that feeds a conditional.  Multiplier increased to 4.
Inline candidate callsite is boring.  Multiplier increased to 5.3.
calleeNativeSizeEstimate=1544
callsiteNativeSizeEstimate=115
benefit multiplier=5.3
threshold=609
Native estimate for function size exceeds threshold for inlining 154.4 > 60.9 (multiplier = 5.3)


Inline expansion aborted, inline not profitable
Inlining [000185] failed, so bashing STMT00039 to NOP

INLINER: during 'fgInline' result 'failed this call site' reason 'unprofitable inline' for 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]' calling 'SolutionAnalyzer.Logger:Log(System.__Canon,int):System.__Canon'
INLINER: during 'fgInline' result 'failed this call site' reason 'unprofitable inline'

Replacing the return expression placeholder [000187] with [000185]
               [000187] --C---------              *  RET_EXPR  ref   (inl return from call [000185])

Inserting the inline return expression
               [000185] --C-G-------              *  CALL      ref    SolutionAnalyzer.Logger.Log
               [000186] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000183] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000184] ------------ arg2         \--*  CNS_INT   int    2

**************** Inline Tree
Inlines into 06000044 [via DefaultPolicy] SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]
  [0 IL=0006 TR=000002 06000035] [FAILED: unprofitable inline] SolutionAnalyzer.Logger:Log(System.__Canon,int):System.__Canon
  [0 IL=0014 TR=000013 060062E4] [FAILED: unprofitable inline] System.Collections.Generic.List`1[__Canon][System.__Canon]:.ctor(int):this
  [1 IL=0039 TR=000035 060006B8] [below ALWAYS_INLINE size] System.String:EndsWith(System.String):bool:this
  [2 IL=0048 TR=000179 060062F3] [aggressive inline attribute] System.Collections.Generic.List`1[__Canon][System.__Canon]:Add(System.__Canon):this
    [0 IL=0054 TR=000219 060062F4] [FAILED: noinline per IL/cached result] System.Collections.Generic.List`1[__Canon][System.__Canon]:AddWithResize(System.__Canon):this
  [3 IL=0062 TR=000043 0600009F] [below ALWAYS_INLINE size] System.IO.Directory:EnumerateDirectories(System.String,System.String,int):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]
    [0 IL=0003 TR=000236 060000D7] [FAILED: unprofitable inline] System.IO.EnumerationOptions:FromSearchOption(int):System.IO.EnumerationOptions
    [4 IL=0008 TR=000238 060000A0] [below ALWAYS_INLINE size] System.IO.Directory:EnumerateDirectories(System.String,System.String,System.IO.EnumerationOptions):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]
    [0 IL=0003 TR=000236 060000D7] [FAILED: unprofitable inline] System.IO.EnumerationOptions:FromSearchOption(int):System.IO.EnumerationOptions
  [5 IL=0087 TR=000162 0600049D] [profitable inline] System.MulticastDelegate:CtorClosed(System.Object,long):this
    [0 IL=0003 TR=000260 0600049C] [FAILED: does not return] System.MulticastDelegate:ThrowNullThisInDelegateToInstance()
  [0 IL=0098 TR=000071 0600010C] [FAILED: unprofitable inline] System.Linq.Enumerable:Where(System.Collections.Generic.IEnumerable`1[__Canon],System.Func`2[__Canon,Boolean]):System.Collections.Generic.IEnumerable`1[__Canon]
  [6 IL=0112 TR=000079 060000A2] [below ALWAYS_INLINE size] System.IO.Directory:EnumerateFiles(System.String,System.String):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]
    [7 IL=0002 TR=000266 060000D3] [below ALWAYS_INLINE size] System.IO.EnumerationOptions:get_Compatible():System.IO.EnumerationOptions
    [8 IL=0007 TR=000268 060000A4] [below ALWAYS_INLINE size] System.IO.Directory:EnumerateFiles(System.String,System.String,System.IO.EnumerationOptions):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]
  [9 IL=0117 TR=000081 060062F6] [below ALWAYS_INLINE size] System.Collections.Generic.List`1[__Canon][System.__Canon]:AddRange(System.Collections.Generic.IEnumerable`1[__Canon]):this
    [0 IL=0008 TR=000288 06006319] [FAILED: has exception handling] System.Collections.Generic.List`1[__Canon][System.__Canon]:InsertRange(int,System.Collections.Generic.IEnumerable`1[__Canon]):this
  [0 IL=0004 TR=000281 0600009C] [FAILED: noinline per IL/cached result] System.IO.Directory:InternalEnumeratePaths(System.String,System.String,int,System.IO.EnumerationOptions):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]
  [10 IL=0145 TR=000133 0600049D] [profitable inline] System.MulticastDelegate:CtorClosed(System.Object,long):this
    [0 IL=0003 TR=000303 0600049C] [FAILED: does not return] System.MulticastDelegate:ThrowNullThisInDelegateToInstance()
  [0 IL=0156 TR=000112 060000CF] [FAILED: unprofitable inline] System.Linq.Enumerable:SelectMany(System.Collections.Generic.IEnumerable`1[__Canon],System.Func`2[__Canon,__Canon]):System.Collections.Generic.IEnumerable`1[__Canon]
  [11 IL=0161 TR=000115 060062F6] [below ALWAYS_INLINE size] System.Collections.Generic.List`1[__Canon][System.__Canon]:AddRange(System.Collections.Generic.IEnumerable`1[__Canon]):this
    [0 IL=0008 TR=000311 06006319] [FAILED: noinline per IL/cached result] System.Collections.Generic.List`1[__Canon][System.__Canon]:InsertRange(int,System.Collections.Generic.IEnumerable`1[__Canon]):this
  [0 IL=0156 TR=000112 060000CF] [FAILED: unprofitable inline] System.Linq.Enumerable:SelectMany(System.Collections.Generic.IEnumerable`1[__Canon],System.Func`2[__Canon,__Canon]):System.Collections.Generic.IEnumerable`1[__Canon]
  [0 IL=0180 TR=000181 0600002B] [FAILED: unprofitable inline] SolutionAnalyzer.GeneralExtensions:Shuffle(System.Collections.Generic.List`1[__Canon])
  [0 IL=0191 TR=000185 06000035] [FAILED: unprofitable inline] SolutionAnalyzer.Logger:Log(System.__Canon,int):System.__Canon
Budget: initialTime=657, finalTime=825, initialBudget=6570, currentBudget=6676
Budget: increased by 106 because of force inlines
Budget: initialSize=4668, finalSize=4990

*************** Finishing PHASE Morph - Inlining
Trees after Morph - Inlining

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB10 (always)                     i newobj 
BB02 [0001]  1                             1       [01D..02E)-> BB04 ( cond )                     i idxlen nullcheck bwd bwd-target 
BB03 [0002]  1                             1       [02E..037)                                     i bwd 
BB13 [0012]  1                             1       [02E..02F)-> BB15 ( cond )                     i idxlen bwd 
BB14 [0013]  1                             1       [02E..02F)-> BB16 (always)                     i bwd 
BB15 [0014]  1                             1       [02E..02F)                                     i bwd 
BB16 [0015]  1                             1       [???..???)-> BB09 (always)                     internal bwd 
BB04 [0003]  1                             1       [037..04B)-> BB06 ( cond )                     i bwd 
BB05 [0004]  1                             1       [04B..062)                                     i newobj bwd 
BB19 [0018]  1                             1       [000..000)-> BB21 ( cond )                     i internal bwd 
BB20 [0019]  1                             0.50    [000..000)                                     i internal bwd 
BB21 [0020]  2                             1       [000..000)                                     i internal bwd 
BB22 [0021]  1                             1       [???..???)                                     internal newobj bwd 
BB06 [0005]  2                             1       [062..085)-> BB08 ( cond )                     i bwd 
BB07 [0006]  1                             1       [085..09C)                                     i newobj bwd 
BB28 [0026]  1                             1       [000..000)-> BB30 ( cond )                     i internal bwd 
BB29 [0027]  1                             0.50    [000..000)                                     i internal bwd 
BB30 [0028]  2                             1       [000..000)                                     i internal bwd 
BB31 [0029]  1                             1       [???..???)                                     internal newobj bwd 
BB08 [0007]  2                             1       [09C..0A6)                                     i bwd 
BB09 [0008]  2                             1       [0A6..0AA)                                     i bwd 
BB10 [0009]  2                             1       [0AA..0B3)-> BB02 ( cond )                     i idxlen bwd 
BB11 [0010]  1                             1       [0B3..0C7)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..01D) -> BB10 (always), preds={} succs={BB10}

***** BB01
STMT00001 (IL   ???...  ???)
               [000002] --C-G-------              *  CALL      ref    SolutionAnalyzer.Logger.Log
               [000003] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000000] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000001] ------------ arg2         \--*  CNS_INT   int    2

***** BB01
STMT00002 (IL 0x00C...0x013)
               [000011] -A----------              *  ASG       ref   
               [000010] D------N----              +--*  LCL_VAR   ref    V07 tmp1         
               [000009] ------------              \--*  ALLOCOBJ  ref   
               [000008] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00003 (IL   ???...  ???)
               [000013] --C-G-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor
               [000012] ------------ this in rcx  +--*  LCL_VAR   ref    V07 tmp1         
               [000007] ------------ arg1         \--*  CNS_INT   int    100

***** BB01
STMT00004 (IL 0x013...  ???)
               [000016] -A----------              *  ASG       ref   
               [000015] D------N----              +--*  LCL_VAR   ref    V01 loc0         
               [000014] ------------              \--*  LCL_VAR   ref    V07 tmp1         

***** BB01
STMT00005 (IL 0x014...0x015)
               [000019] -A----------              *  ASG       ref   
               [000018] D------N----              +--*  LCL_VAR   ref    V02 loc1         
               [000017] ------------              \--*  LCL_VAR   ref    V00 arg0         

***** BB01
STMT00006 (IL 0x016...0x017)
               [000022] -A----------              *  ASG       int   
               [000021] D------N----              +--*  LCL_VAR   int    V03 loc2         
               [000020] ------------              \--*  CNS_INT   int    0

------------ BB02 [01D..02E) -> BB04 (cond), preds={} succs={BB03,BB04}

***** BB02
STMT00008 (IL 0x01D...0x020)
               [000032] -A-XG-------              *  ASG       ref   
               [000031] D------N----              +--*  LCL_VAR   ref    V04 loc3         
               [000030] ---XG-------              \--*  INDEX     ref   
               [000028] ------------                 +--*  LCL_VAR   ref    V02 loc1         
               [000029] ------------                 \--*  LCL_VAR   int    V03 loc2         

***** BB02
STMT00042 (IL 0x021...  ???)
               [000197] ---X--------              *  NULLCHECK byte  
               [000196] ------------              \--*  LCL_VAR   ref    V04 loc3         

***** BB02
STMT00010 (IL   ???...  ???)
               [000039] --C---------              *  JTRUE     void  
               [000038] --C---------              \--*  EQ        int   
               [000195] --C-G-------                 +--*  CALL      int    System.String.EndsWith
               [000033] ------------ this in rcx     |  +--*  LCL_VAR   ref    V04 loc3         
               [000193] ------------ arg1            |  +--*  CNS_STR   ref   <string constant>
               [000194] ------------ arg2            |  \--*  CNS_INT   int    0
               [000037] ------------                 \--*  CNS_INT   int    0

------------ BB03 [02E..037), preds={} succs={BB13}

------------ BB13 [02E..02F) -> BB15 (cond), preds={} succs={BB14,BB15}

***** BB13
STMT00043 (IL 0x02E...  ???)
               [000204] -A-XG-------              *  ASG       int   
               [000203] ---XG--N----              +--*  FIELD     int    _version
               [000177] ------------              |  \--*  LCL_VAR   ref    V01 loc0         
               [000202] ---XG-------              \--*  ADD       int   
               [000200] ---XG-------                 +--*  FIELD     int    _version
               [000199] ------------                 |  \--*  LCL_VAR   ref    V01 loc0         
               [000201] ------------                 \--*  CNS_INT   int    1

***** BB13
STMT00044 (IL 0x02E...  ???)
               [000208] -A-XG-------              *  ASG       ref   
               [000207] D------N----              +--*  LCL_VAR   ref    V18 tmp12        
               [000206] ---XG-------              \--*  FIELD     ref    _items
               [000205] ------------                 \--*  LCL_VAR   ref    V01 loc0         

***** BB13
STMT00045 (IL 0x02E...  ???)
               [000212] -A-XG-------              *  ASG       int   
               [000211] D------N----              +--*  LCL_VAR   int    V19 tmp13        
               [000210] ---XG-------              \--*  FIELD     int    _size
               [000209] ------------                 \--*  LCL_VAR   ref    V01 loc0         

***** BB13
STMT00046 (IL 0x02E...  ???)
               [000217] ---X--------              *  JTRUE     void  
               [000216] N--X-----U--              \--*  GE        int   
               [000213] ------------                 +--*  LCL_VAR   int    V19 tmp13        
               [000215] ---X--------                 \--*  ARR_LENGTH int   
               [000214] ------------                    \--*  LCL_VAR   ref    V18 tmp12        

------------ BB14 [02E..02F) -> BB16 (always), preds={} succs={BB16}

***** BB14
STMT00048 (IL 0x02E...  ???)
               [000225] -A-XG-------              *  ASG       int   
               [000224] ---XG--N----              +--*  FIELD     int    _size
               [000220] ------------              |  \--*  LCL_VAR   ref    V01 loc0         
               [000223] ------------              \--*  ADD       int   
               [000221] ------------                 +--*  LCL_VAR   int    V19 tmp13        
               [000222] ------------                 \--*  CNS_INT   int    1

***** BB14
STMT00049 (IL 0x02E...  ???)
               [000229] --CXG-------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST
               [000226] ------------ arg0         +--*  LCL_VAR   ref    V18 tmp12        
               [000227] ------------ arg1         +--*  LCL_VAR   int    V19 tmp13        
               [000228] ------------ arg2         \--*  LCL_VAR   ref    V04 loc3         

------------ BB15 [02E..02F), preds={} succs={BB16}

***** BB15
STMT00047 (IL 0x02E...  ???)
               [000219] --C-G-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize
               [000218] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         
               [000178] ------------ arg1         \--*  LCL_VAR   ref    V04 loc3         

------------ BB16 [???..???) -> BB09 (always), preds={} succs={BB09}

***** BB16
STMT00050 (IL 0x02E...  ???)
               [000232] -A----------              *  ASG       ref   
               [000231] D------N----              +--*  LCL_VAR   ref    V18 tmp12        
               [000230] ------------              \--*  CNS_INT   ref    null

------------ BB04 [037..04B) -> BB06 (cond), preds={} succs={BB05,BB06}

***** BB04
STMT00053 (IL 0x037...  ???)
               [000247] -AC-G-------              *  ASG       ref   
               [000246] D------N----              +--*  LCL_VAR   ref    V20 tmp14        
               [000236] --C-G-------              \--*  CALL      ref    System.IO.EnumerationOptions.FromSearchOption
               [000235] ------------ arg0            \--*  CNS_INT   int    1

***** BB04
STMT00013 (IL   ???...  ???)
               [000054] -AC---------              *  ASG       ref   
               [000053] D------N----              +--*  LCL_VAR   ref    V09 tmp3         
               [000245] --C-G-------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths
               [000040] ------------ arg0            +--*  LCL_VAR   ref    V04 loc3         
               [000242] ------------ arg1            +--*  CNS_STR   ref   <string constant>
               [000243] ------------ arg2            +--*  CNS_INT   int    2
               [000244] ------------ arg3            \--*  LCL_VAR   ref    V20 tmp14        

***** BB04
STMT00012 (IL   ???...  ???)
               [000052] -ACXG-------              *  ASG       ref   
               [000051] D------N----              +--*  LCL_VAR   ref    V08 tmp2         
               [000050] --CXG-------              \--*  COMMA     ref   
               [000049] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000047] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000048] ------------ arg1            |  \--*  CNS_INT   int    35
               [000045] ----G-------                 \--*  FIELD     ref    <>9__2_0

***** BB04
STMT00015 (IL   ???...0x049)
               [000062] -A----------              *  ASG       ref   
               [000061] D------N----              +--*  LCL_VAR   ref    V10 tmp4         
               [000055] ------------              \--*  LCL_VAR   ref    V09 tmp3         

***** BB04
STMT00016 (IL   ???...  ???)
               [000065] -A----------              *  ASG       ref   
               [000064] D------N----              +--*  LCL_VAR   ref    V11 tmp5         
               [000056] ------------              \--*  LCL_VAR   ref    V08 tmp2         

***** BB04
STMT00014 (IL   ???...  ???)
               [000060] ------------              *  JTRUE     void  
               [000059] ------------              \--*  NE        int   
               [000057] ------------                 +--*  LCL_VAR   ref    V08 tmp2         
               [000058] ------------                 \--*  CNS_INT   ref    null

------------ BB05 [04B..062), preds={} succs={BB19}

***** BB05
STMT00033 (IL   ???...0x05D)
               [000160] -A----------              *  ASG       ref   
               [000159] D------N----              +--*  LCL_VAR   ref    V17 tmp11        
               [000158] ------------              \--*  ALLOCOBJ  ref   
               [000157] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB05
STMT00058 (IL   ???...  ???)
               [000262] -ACXG-------              *  ASG       ref   
               [000261] D------N----              +--*  LCL_VAR   ref    V21 tmp15        
               [000155] --CXG-------              \--*  COMMA     ref   
               [000154] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000152] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000153] ------------ arg1            |  \--*  CNS_INT   int    35
               [000150] ----G-------                 \--*  FIELD     ref    <>9

------------ BB19 [000..000) -> BB21 (cond), preds={} succs={BB20,BB21}

***** BB19
STMT00054 (IL   ???...  ???)
               [000252] ------------              *  JTRUE     void  
               [000251] ------------              \--*  NE        int   
               [000249] ------------                 +--*  LCL_VAR   ref    V21 tmp15        
               [000250] ------------                 \--*  CNS_INT   ref    null

------------ BB20 [000..000), preds={} succs={BB21}

***** BB20
STMT00057 (IL   ???...  ???)
               [000260] --C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

------------ BB21 [000..000), preds={} succs={BB22}

***** BB21
STMT00055 (IL   ???...  ???)
               [000255] -A-XG-------              *  ASG       ref   
               [000254] ---XG--N----              +--*  FIELD     ref    _target
               [000161] ------------              |  \--*  LCL_VAR   ref    V17 tmp11        
               [000253] ------------              \--*  LCL_VAR   ref    V21 tmp15        

***** BB21
STMT00056 (IL   ???...  ???)
               [000259] -A-XG-------              *  ASG       long  
               [000258] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000256] ------------              |  \--*  LCL_VAR   ref    V17 tmp11        
               [000156] ------------              \--*  FTN_ADDR  long   <>c.<GetProjectPaths>b__2_0


------------ BB22 [???..???), preds={} succs={BB06}

***** BB22
STMT00035 (IL 0x05C...  ???)
               [000171] -ACXG-------              *  COMMA     ref   
               [000170] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000168] ------------ arg0         |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000169] ------------ arg1         |  \--*  CNS_INT   int    35
               [000166] -A--G-------              \--*  ASG       ref   
               [000165] ----G--N----                 +--*  FIELD     ref    <>9__2_0
               [000164] ------------                 \--*  LCL_VAR   ref    V17 tmp11        

***** BB22
STMT00036 (IL   ???...0x05D)
               [000175] -A----------              *  ASG       ref   
               [000174] D------N----              +--*  LCL_VAR   ref    V11 tmp5         
               [000163] ------------              \--*  LCL_VAR   ref    V17 tmp11        

------------ BB06 [062..085) -> BB08 (cond), preds={} succs={BB07,BB08}

***** BB06
STMT00018 (IL   ???...  ???)
               [000075] -AC---------              *  ASG       ref   
               [000074] D------N----              +--*  LCL_VAR   ref    V05 loc4         
               [000071] --C-G-------              \--*  CALL      ref    System.Linq.Enumerable.Where
               [000072] H----------- arg0            +--*  CNS_INT(h) long   0xd1ffab1e method
               [000069] ------------ arg1            +--*  LCL_VAR   ref    V10 tmp4         
               [000070] ------------ arg2            \--*  LCL_VAR   ref    V11 tmp5         

***** BB06
STMT00061 (IL 0x069...  ???)
               [000283] -ACXG-------              *  ASG       ref   
               [000282] D------N----              +--*  LCL_VAR   ref    V23 tmp17        
               [000276] --CXG-------              \--*  COMMA     ref   
               [000275] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000273] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc7e783cd8
               [000274] ------------ arg1            |  \--*  CNS_INT   int    40
               [000271] ----G-------                 \--*  FIELD     ref    <Compatible>k__BackingField

***** BB06
STMT00063 (IL   ???...  ???)
               [000290] -AC-G-------              *  ASG       ref   
               [000289] D------N----              +--*  LCL_VAR   ref    V24 tmp18        
               [000281] --C-G-------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths
               [000077] ------------ arg0            +--*  LCL_VAR   ref    V04 loc3         
               [000278] ------------ arg1            +--*  CNS_STR   ref   <string constant>
               [000279] ------------ arg2            +--*  CNS_INT   int    1
               [000280] ------------ arg3            \--*  LCL_VAR   ref    V23 tmp17        

***** BB06
STMT00062 (IL   ???...  ???)
               [000288] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
               [000076] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         
               [000286] ---XG------- arg1         +--*  FIELD     int    _size
               [000285] ------------              |  \--*  LCL_VAR   ref    V01 loc0         
               [000287] ------------ arg2         \--*  LCL_VAR   ref    V24 tmp18        

***** BB06
STMT00021 (IL 0x07A...  ???)
               [000091] -ACXG-------              *  ASG       ref   
               [000090] D------N----              +--*  LCL_VAR   ref    V12 tmp6         
               [000089] --CXG-------              \--*  COMMA     ref   
               [000088] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000086] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000087] ------------ arg1            |  \--*  CNS_INT   int    35
               [000084] ----G-------                 \--*  FIELD     ref    <>9__2_1

***** BB06
STMT00023 (IL   ???...0x083)
               [000098] -A----------              *  ASG       ref   
               [000097] D------N----              +--*  LCL_VAR   ref    V13 tmp7         
               [000082] ------------              \--*  LCL_VAR   ref    V01 loc0         

***** BB06
STMT00024 (IL   ???...  ???)
               [000101] -A----------              *  ASG       ref   
               [000100] D------N----              +--*  LCL_VAR   ref    V14 tmp8         
               [000083] ------------              \--*  LCL_VAR   ref    V05 loc4         

***** BB06
STMT00025 (IL   ???...  ???)
               [000104] -A----------              *  ASG       ref   
               [000103] D------N----              +--*  LCL_VAR   ref    V15 tmp9         
               [000092] ------------              \--*  LCL_VAR   ref    V12 tmp6         

***** BB06
STMT00022 (IL   ???...  ???)
               [000096] ------------              *  JTRUE     void  
               [000095] ------------              \--*  NE        int   
               [000093] ------------                 +--*  LCL_VAR   ref    V12 tmp6         
               [000094] ------------                 \--*  CNS_INT   ref    null

------------ BB07 [085..09C), preds={} succs={BB28}

***** BB07
STMT00029 (IL   ???...0x097)
               [000131] -A----------              *  ASG       ref   
               [000130] D------N----              +--*  LCL_VAR   ref    V16 tmp10        
               [000129] ------------              \--*  ALLOCOBJ  ref   
               [000128] H-----------                 \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB07
STMT00068 (IL   ???...  ???)
               [000305] -ACXG-------              *  ASG       ref   
               [000304] D------N----              +--*  LCL_VAR   ref    V25 tmp19        
               [000126] --CXG-------              \--*  COMMA     ref   
               [000125] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000123] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000124] ------------ arg1            |  \--*  CNS_INT   int    35
               [000121] ----G-------                 \--*  FIELD     ref    <>9

------------ BB28 [000..000) -> BB30 (cond), preds={} succs={BB29,BB30}

***** BB28
STMT00064 (IL   ???...  ???)
               [000295] ------------              *  JTRUE     void  
               [000294] ------------              \--*  NE        int   
               [000292] ------------                 +--*  LCL_VAR   ref    V25 tmp19        
               [000293] ------------                 \--*  CNS_INT   ref    null

------------ BB29 [000..000), preds={} succs={BB30}

***** BB29
STMT00067 (IL   ???...  ???)
               [000303] --C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

------------ BB30 [000..000), preds={} succs={BB31}

***** BB30
STMT00065 (IL   ???...  ???)
               [000298] -A-XG-------              *  ASG       ref   
               [000297] ---XG--N----              +--*  FIELD     ref    _target
               [000132] ------------              |  \--*  LCL_VAR   ref    V16 tmp10        
               [000296] ------------              \--*  LCL_VAR   ref    V25 tmp19        

***** BB30
STMT00066 (IL   ???...  ???)
               [000302] -A-XG-------              *  ASG       long  
               [000301] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000299] ------------              |  \--*  LCL_VAR   ref    V16 tmp10        
               [000127] ------------              \--*  FTN_ADDR  long   <>c.<GetProjectPaths>b__2_1


------------ BB31 [???..???), preds={} succs={BB08}

***** BB31
STMT00031 (IL 0x096...  ???)
               [000142] -ACXG-------              *  COMMA     ref   
               [000141] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000139] ------------ arg0         |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000140] ------------ arg1         |  \--*  CNS_INT   int    35
               [000137] -A--G-------              \--*  ASG       ref   
               [000136] ----G--N----                 +--*  FIELD     ref    <>9__2_1
               [000135] ------------                 \--*  LCL_VAR   ref    V16 tmp10        

***** BB31
STMT00032 (IL   ???...0x097)
               [000148] -A----------              *  ASG       ref   
               [000147] D------N----              +--*  LCL_VAR   ref    V15 tmp9         
               [000134] ------------              \--*  LCL_VAR   ref    V16 tmp10        

------------ BB08 [09C..0A6), preds={} succs={BB09}

***** BB08
STMT00070 (IL   ???...  ???)
               [000313] -AC-G-------              *  ASG       ref   
               [000312] D------N----              +--*  LCL_VAR   ref    V27 tmp21        
               [000112] --C-G-------              \--*  CALL      ref    System.Linq.Enumerable.SelectMany
               [000113] H----------- arg0            +--*  CNS_INT(h) long   0xd1ffab1e method
               [000110] ------------ arg1            +--*  LCL_VAR   ref    V14 tmp8         
               [000111] ------------ arg2            \--*  LCL_VAR   ref    V15 tmp9         

***** BB08
STMT00069 (IL   ???...  ???)
               [000311] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
               [000109] ------------ this in rcx  +--*  LCL_VAR   ref    V13 tmp7         
               [000309] ---XG------- arg1         +--*  FIELD     int    _size
               [000308] ------------              |  \--*  LCL_VAR   ref    V13 tmp7         
               [000310] ------------ arg2         \--*  LCL_VAR   ref    V27 tmp21        

------------ BB09 [0A6..0AA), preds={} succs={BB10}

***** BB09
STMT00028 (IL 0x0A6...0x0A9)
               [000120] -A----------              *  ASG       int   
               [000119] D------N----              +--*  LCL_VAR   int    V03 loc2         
               [000118] ------------              \--*  ADD       int   
               [000116] ------------                 +--*  LCL_VAR   int    V03 loc2         
               [000117] ------------                 \--*  CNS_INT   int    1

------------ BB10 [0AA..0B3) -> BB02 (cond), preds={} succs={BB11,BB02}

***** BB10
STMT00007 (IL 0x0AA...0x0AE)
               [000027] ---X--------              *  JTRUE     void  
               [000026] ---X--------              \--*  LT        int   
               [000023] ------------                 +--*  LCL_VAR   int    V03 loc2         
               [000025] ---X--------                 \--*  ARR_LENGTH int   
               [000024] ------------                    \--*  LCL_VAR   ref    V02 loc1         

------------ BB11 [0B3..0C7) (return), preds={} succs={}

***** BB11
STMT00038 (IL 0x0B3...0x0C4)
               [000181] --C-G-------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle
               [000182] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000180] ------------ arg1         \--*  LCL_VAR   ref    V01 loc0         

***** BB11
STMT00040 (IL   ???...  ???)
               [000185] --C-G-------              *  CALL      ref    SolutionAnalyzer.Logger.Log
               [000186] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000183] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000184] ------------ arg2         \--*  CNS_INT   int    2

***** BB11
STMT00041 (IL 0x0C5...0x0C6)
               [000191] ------------              *  RETURN    ref   
               [000190] ------------              \--*  LCL_VAR   ref    V01 loc0         

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Allocate Objects
disabled, punting

*************** Finishing PHASE Allocate Objects [no changes]

*************** Starting PHASE Morph - Add internal blocks

*************** After fgAddInternal()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB10 (always)                     i newobj 
BB02 [0001]  1                             1       [01D..02E)-> BB04 ( cond )                     i idxlen nullcheck bwd bwd-target 
BB03 [0002]  1                             1       [02E..037)                                     i bwd 
BB13 [0012]  1                             1       [02E..02F)-> BB15 ( cond )                     i idxlen bwd 
BB14 [0013]  1                             1       [02E..02F)-> BB16 (always)                     i bwd 
BB15 [0014]  1                             1       [02E..02F)                                     i bwd 
BB16 [0015]  1                             1       [???..???)-> BB09 (always)                     internal bwd 
BB04 [0003]  1                             1       [037..04B)-> BB06 ( cond )                     i bwd 
BB05 [0004]  1                             1       [04B..062)                                     i newobj bwd 
BB19 [0018]  1                             1       [000..000)-> BB21 ( cond )                     i internal bwd 
BB20 [0019]  1                             0.50    [000..000)                                     i internal bwd 
BB21 [0020]  2                             1       [000..000)                                     i internal bwd 
BB22 [0021]  1                             1       [???..???)                                     internal newobj bwd 
BB06 [0005]  2                             1       [062..085)-> BB08 ( cond )                     i bwd 
BB07 [0006]  1                             1       [085..09C)                                     i newobj bwd 
BB28 [0026]  1                             1       [000..000)-> BB30 ( cond )                     i internal bwd 
BB29 [0027]  1                             0.50    [000..000)                                     i internal bwd 
BB30 [0028]  2                             1       [000..000)                                     i internal bwd 
BB31 [0029]  1                             1       [???..???)                                     internal newobj bwd 
BB08 [0007]  2                             1       [09C..0A6)                                     i bwd 
BB09 [0008]  2                             1       [0A6..0AA)                                     i bwd 
BB10 [0009]  2                             1       [0AA..0B3)-> BB02 ( cond )                     i idxlen bwd 
BB11 [0010]  1                             1       [0B3..0C7)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty

*************** Finishing PHASE Morph - Add internal blocks

*************** Starting PHASE Remove empty try

*************** In fgRemoveEmptyTry()
No EH in this method, nothing to remove.

*************** Finishing PHASE Remove empty try [no changes]

*************** Starting PHASE Remove empty finally
No EH in this method, nothing to remove.

*************** Finishing PHASE Remove empty finally [no changes]

*************** Starting PHASE Merge callfinally chains
No EH in this method, nothing to merge.

*************** Finishing PHASE Merge callfinally chains [no changes]

*************** Starting PHASE Clone finally
No EH in this method, no cloning.

*************** Finishing PHASE Clone finally [no changes]

*************** Starting PHASE Compute preds

Renumbering the basic blocks for fgComputePred

*************** Before renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB10 (always)                     i newobj 
BB02 [0001]  1                             1       [01D..02E)-> BB04 ( cond )                     i idxlen nullcheck bwd bwd-target 
BB03 [0002]  1                             1       [02E..037)                                     i bwd 
BB13 [0012]  1                             1       [02E..02F)-> BB15 ( cond )                     i idxlen bwd 
BB14 [0013]  1                             1       [02E..02F)-> BB16 (always)                     i bwd 
BB15 [0014]  1                             1       [02E..02F)                                     i bwd 
BB16 [0015]  1                             1       [???..???)-> BB09 (always)                     internal bwd 
BB04 [0003]  1                             1       [037..04B)-> BB06 ( cond )                     i bwd 
BB05 [0004]  1                             1       [04B..062)                                     i newobj bwd 
BB19 [0018]  1                             1       [000..000)-> BB21 ( cond )                     i internal bwd 
BB20 [0019]  1                             0.50    [000..000)                                     i internal bwd 
BB21 [0020]  2                             1       [000..000)                                     i internal bwd 
BB22 [0021]  1                             1       [???..???)                                     internal newobj bwd 
BB06 [0005]  2                             1       [062..085)-> BB08 ( cond )                     i bwd 
BB07 [0006]  1                             1       [085..09C)                                     i newobj bwd 
BB28 [0026]  1                             1       [000..000)-> BB30 ( cond )                     i internal bwd 
BB29 [0027]  1                             0.50    [000..000)                                     i internal bwd 
BB30 [0028]  2                             1       [000..000)                                     i internal bwd 
BB31 [0029]  1                             1       [???..???)                                     internal newobj bwd 
BB08 [0007]  2                             1       [09C..0A6)                                     i bwd 
BB09 [0008]  2                             1       [0A6..0AA)                                     i bwd 
BB10 [0009]  2                             1       [0AA..0B3)-> BB02 ( cond )                     i idxlen bwd 
BB11 [0010]  1                             1       [0B3..0C7)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
Renumber BB13 to BB04
Renumber BB14 to BB05
Renumber BB15 to BB06
Renumber BB16 to BB07
Renumber BB04 to BB08
Renumber BB05 to BB09
Renumber BB19 to BB10
Renumber BB20 to BB11
Renumber BB21 to BB12
Renumber BB22 to BB13
Renumber BB06 to BB14
Renumber BB07 to BB15
Renumber BB28 to BB16
Renumber BB29 to BB17
Renumber BB30 to BB18
Renumber BB31 to BB19
Renumber BB08 to BB20
Renumber BB09 to BB21
Renumber BB10 to BB22
Renumber BB11 to BB23

*************** After renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB22 (always)                     i newobj 
BB02 [0001]  1                             1       [01D..02E)-> BB08 ( cond )                     i idxlen nullcheck bwd bwd-target 
BB03 [0002]  1                             1       [02E..037)                                     i bwd 
BB04 [0012]  1                             1       [02E..02F)-> BB06 ( cond )                     i idxlen bwd 
BB05 [0013]  1                             1       [02E..02F)-> BB07 (always)                     i bwd 
BB06 [0014]  1                             1       [02E..02F)                                     i bwd 
BB07 [0015]  1                             1       [???..???)-> BB21 (always)                     internal bwd 
BB08 [0003]  1                             1       [037..04B)-> BB14 ( cond )                     i bwd 
BB09 [0004]  1                             1       [04B..062)                                     i newobj bwd 
BB10 [0018]  1                             1       [000..000)-> BB12 ( cond )                     i internal bwd 
BB11 [0019]  1                             0.50    [000..000)                                     i internal bwd 
BB12 [0020]  2                             1       [000..000)                                     i internal bwd 
BB13 [0021]  1                             1       [???..???)                                     internal newobj bwd 
BB14 [0005]  2                             1       [062..085)-> BB20 ( cond )                     i bwd 
BB15 [0006]  1                             1       [085..09C)                                     i newobj bwd 
BB16 [0026]  1                             1       [000..000)-> BB18 ( cond )                     i internal bwd 
BB17 [0027]  1                             0.50    [000..000)                                     i internal bwd 
BB18 [0028]  2                             1       [000..000)                                     i internal bwd 
BB19 [0029]  1                             1       [???..???)                                     internal newobj bwd 
BB20 [0007]  2                             1       [09C..0A6)                                     i bwd 
BB21 [0008]  2                             1       [0A6..0AA)                                     i bwd 
BB22 [0009]  2                             1       [0AA..0B3)-> BB02 ( cond )                     i idxlen bwd 
BB23 [0010]  1                             1       [0B3..0C7)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty

New BlockSet epoch 2, # of blocks (including unused BB00): 24, bitset array size: 1 (short)

*************** In fgComputePreds()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd                 weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB22 (always)                     i newobj 
BB02 [0001]  1                             1       [01D..02E)-> BB08 ( cond )                     i idxlen nullcheck bwd bwd-target 
BB03 [0002]  1                             1       [02E..037)                                     i bwd 
BB04 [0012]  1                             1       [02E..02F)-> BB06 ( cond )                     i idxlen bwd 
BB05 [0013]  1                             1       [02E..02F)-> BB07 (always)                     i bwd 
BB06 [0014]  1                             1       [02E..02F)                                     i bwd 
BB07 [0015]  1                             1       [???..???)-> BB21 (always)                     internal bwd 
BB08 [0003]  1                             1       [037..04B)-> BB14 ( cond )                     i bwd 
BB09 [0004]  1                             1       [04B..062)                                     i newobj bwd 
BB10 [0018]  1                             1       [000..000)-> BB12 ( cond )                     i internal bwd 
BB11 [0019]  1                             0.50    [000..000)                                     i internal bwd 
BB12 [0020]  2                             1       [000..000)                                     i internal bwd 
BB13 [0021]  1                             1       [???..???)                                     internal newobj bwd 
BB14 [0005]  2                             1       [062..085)-> BB20 ( cond )                     i bwd 
BB15 [0006]  1                             1       [085..09C)                                     i newobj bwd 
BB16 [0026]  1                             1       [000..000)-> BB18 ( cond )                     i internal bwd 
BB17 [0027]  1                             0.50    [000..000)                                     i internal bwd 
BB18 [0028]  2                             1       [000..000)                                     i internal bwd 
BB19 [0029]  1                             1       [???..???)                                     internal newobj bwd 
BB20 [0007]  2                             1       [09C..0A6)                                     i bwd 
BB21 [0008]  2                             1       [0A6..0AA)                                     i bwd 
BB22 [0009]  2                             1       [0AA..0B3)-> BB02 ( cond )                     i idxlen bwd 
BB23 [0010]  1                             1       [0B3..0C7)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** After fgComputePreds()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB22 (always)                     i label target newobj 
BB02 [0001]  1       BB22                  1       [01D..02E)-> BB08 ( cond )                     i label target idxlen nullcheck bwd bwd-target 
BB03 [0002]  1       BB02                  1       [02E..037)                                     i bwd 
BB04 [0012]  1       BB03                  1       [02E..02F)-> BB06 ( cond )                     i idxlen bwd 
BB05 [0013]  1       BB04                  1       [02E..02F)-> BB07 (always)                     i bwd 
BB06 [0014]  1       BB04                  1       [02E..02F)                                     i label target bwd 
BB07 [0015]  2       BB05,BB06             1       [???..???)-> BB21 (always)                     internal label target bwd 
BB08 [0003]  1       BB02                  1       [037..04B)-> BB14 ( cond )                     i label target bwd 
BB09 [0004]  1       BB08                  1       [04B..062)                                     i newobj bwd 
BB10 [0018]  1       BB09                  1       [000..000)-> BB12 ( cond )                     i internal bwd 
BB11 [0019]  1       BB10                  0.50    [000..000)                                     i internal bwd 
BB12 [0020]  2       BB10,BB11             1       [000..000)                                     i internal label target bwd 
BB13 [0021]  1       BB12                  1       [???..???)                                     internal newobj bwd 
BB14 [0005]  2       BB08,BB13             1       [062..085)-> BB20 ( cond )                     i label target bwd 
BB15 [0006]  1       BB14                  1       [085..09C)                                     i newobj bwd 
BB16 [0026]  1       BB15                  1       [000..000)-> BB18 ( cond )                     i internal bwd 
BB17 [0027]  1       BB16                  0.50    [000..000)                                     i internal bwd 
BB18 [0028]  2       BB16,BB17             1       [000..000)                                     i internal label target bwd 
BB19 [0029]  1       BB18                  1       [???..???)                                     internal newobj bwd 
BB20 [0007]  2       BB14,BB19             1       [09C..0A6)                                     i label target bwd 
BB21 [0008]  2       BB07,BB20             1       [0A6..0AA)                                     i label target bwd 
BB22 [0009]  2       BB01,BB21             1       [0AA..0B3)-> BB02 ( cond )                     i label target idxlen bwd 
BB23 [0010]  1       BB22                  1       [0B3..0C7)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** Finishing PHASE Compute preds

*************** Starting PHASE Merge throw blocks

*************** In fgTailMergeThrows
Scanning the 2 candidates

*** Does not return call
               [000303] --C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance
    in BB17 is unique, marking it as canonical

*** Does not return call
               [000260] --C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance
    in BB11 can be dup'd to canonical BB17

*** found 1 merge candidates, rewriting flow

New Basic Block BB24 [0031] created.
*** BB10 now falling through to empty BB24 and then to BB17
Made 1 updates

*************** Finishing PHASE Merge throw blocks
Trees after Merge throw blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB22 (always)                     i label target newobj 
BB02 [0001]  1       BB22                  1       [01D..02E)-> BB08 ( cond )                     i label target idxlen nullcheck bwd bwd-target 
BB03 [0002]  1       BB02                  1       [02E..037)                                     i bwd 
BB04 [0012]  1       BB03                  1       [02E..02F)-> BB06 ( cond )                     i idxlen bwd 
BB05 [0013]  1       BB04                  1       [02E..02F)-> BB07 (always)                     i bwd 
BB06 [0014]  1       BB04                  1       [02E..02F)                                     i label target bwd 
BB07 [0015]  2       BB05,BB06             1       [???..???)-> BB21 (always)                     internal label target bwd 
BB08 [0003]  1       BB02                  1       [037..04B)-> BB14 ( cond )                     i label target bwd 
BB09 [0004]  1       BB08                  1       [04B..062)                                     i newobj bwd 
BB10 [0018]  1       BB09                  1       [000..000)-> BB12 ( cond )                     i internal bwd 
BB24 [0031]  1       BB10                  1       [???..???)-> BB17 (always)                     internal 
BB11 [0019]  0                             0.50    [000..000)                                     i internal bwd 
BB12 [0020]  2       BB10,BB11             1       [000..000)                                     i internal label target bwd 
BB13 [0021]  1       BB12                  1       [???..???)                                     internal newobj bwd 
BB14 [0005]  2       BB08,BB13             1       [062..085)-> BB20 ( cond )                     i label target bwd 
BB15 [0006]  1       BB14                  1       [085..09C)                                     i newobj bwd 
BB16 [0026]  1       BB15                  1       [000..000)-> BB18 ( cond )                     i internal bwd 
BB17 [0027]  2       BB16,BB24             0.50    [000..000)                                     i internal label target bwd 
BB18 [0028]  2       BB16,BB17             1       [000..000)                                     i internal label target bwd 
BB19 [0029]  1       BB18                  1       [???..???)                                     internal newobj bwd 
BB20 [0007]  2       BB14,BB19             1       [09C..0A6)                                     i label target bwd 
BB21 [0008]  2       BB07,BB20             1       [0A6..0AA)                                     i label target bwd 
BB22 [0009]  2       BB01,BB21             1       [0AA..0B3)-> BB02 ( cond )                     i label target idxlen bwd 
BB23 [0010]  1       BB22                  1       [0B3..0C7)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..01D) -> BB22 (always), preds={} succs={BB22}

***** BB01
STMT00001 (IL   ???...  ???)
               [000002] --C-G-------              *  CALL      ref    SolutionAnalyzer.Logger.Log
               [000003] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000000] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000001] ------------ arg2         \--*  CNS_INT   int    2

***** BB01
STMT00002 (IL 0x00C...0x013)
               [000011] -AC---------              *  ASG       ref   
               [000010] D------N----              +--*  LCL_VAR   ref    V07 tmp1         
               [000009] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000008] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00003 (IL   ???...  ???)
               [000013] --C-G-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor
               [000012] ------------ this in rcx  +--*  LCL_VAR   ref    V07 tmp1         
               [000007] ------------ arg1         \--*  CNS_INT   int    100

***** BB01
STMT00004 (IL 0x013...  ???)
               [000016] -A----------              *  ASG       ref   
               [000015] D------N----              +--*  LCL_VAR   ref    V01 loc0         
               [000014] ------------              \--*  LCL_VAR   ref    V07 tmp1         

***** BB01
STMT00005 (IL 0x014...0x015)
               [000019] -A----------              *  ASG       ref   
               [000018] D------N----              +--*  LCL_VAR   ref    V02 loc1         
               [000017] ------------              \--*  LCL_VAR   ref    V00 arg0         

***** BB01
STMT00006 (IL 0x016...0x017)
               [000022] -A----------              *  ASG       int   
               [000021] D------N----              +--*  LCL_VAR   int    V03 loc2         
               [000020] ------------              \--*  CNS_INT   int    0

------------ BB02 [01D..02E) -> BB08 (cond), preds={BB22} succs={BB03,BB08}

***** BB02
STMT00008 (IL 0x01D...0x020)
               [000032] -A-XG-------              *  ASG       ref   
               [000031] D------N----              +--*  LCL_VAR   ref    V04 loc3         
               [000030] ---XG-------              \--*  INDEX     ref   
               [000028] ------------                 +--*  LCL_VAR   ref    V02 loc1         
               [000029] ------------                 \--*  LCL_VAR   int    V03 loc2         

***** BB02
STMT00042 (IL 0x021...  ???)
               [000197] ---X--------              *  NULLCHECK byte  
               [000196] ------------              \--*  LCL_VAR   ref    V04 loc3         

***** BB02
STMT00010 (IL   ???...  ???)
               [000039] --C---------              *  JTRUE     void  
               [000038] --C---------              \--*  EQ        int   
               [000195] --C-G-------                 +--*  CALL      int    System.String.EndsWith
               [000033] ------------ this in rcx     |  +--*  LCL_VAR   ref    V04 loc3         
               [000193] ------------ arg1            |  +--*  CNS_STR   ref   <string constant>
               [000194] ------------ arg2            |  \--*  CNS_INT   int    0
               [000037] ------------                 \--*  CNS_INT   int    0

------------ BB03 [02E..037), preds={BB02} succs={BB04}

------------ BB04 [02E..02F) -> BB06 (cond), preds={BB03} succs={BB05,BB06}

***** BB04
STMT00043 (IL 0x02E...  ???)
               [000204] -A-XG-------              *  ASG       int   
               [000203] ---XG--N----              +--*  FIELD     int    _version
               [000177] ------------              |  \--*  LCL_VAR   ref    V01 loc0         
               [000202] ---XG-------              \--*  ADD       int   
               [000200] ---XG-------                 +--*  FIELD     int    _version
               [000199] ------------                 |  \--*  LCL_VAR   ref    V01 loc0         
               [000201] ------------                 \--*  CNS_INT   int    1

***** BB04
STMT00044 (IL 0x02E...  ???)
               [000208] -A-XG-------              *  ASG       ref   
               [000207] D------N----              +--*  LCL_VAR   ref    V18 tmp12        
               [000206] ---XG-------              \--*  FIELD     ref    _items
               [000205] ------------                 \--*  LCL_VAR   ref    V01 loc0         

***** BB04
STMT00045 (IL 0x02E...  ???)
               [000212] -A-XG-------              *  ASG       int   
               [000211] D------N----              +--*  LCL_VAR   int    V19 tmp13        
               [000210] ---XG-------              \--*  FIELD     int    _size
               [000209] ------------                 \--*  LCL_VAR   ref    V01 loc0         

***** BB04
STMT00046 (IL 0x02E...  ???)
               [000217] ---X--------              *  JTRUE     void  
               [000216] N--X-----U--              \--*  GE        int   
               [000213] ------------                 +--*  LCL_VAR   int    V19 tmp13        
               [000215] ---X--------                 \--*  ARR_LENGTH int   
               [000214] ------------                    \--*  LCL_VAR   ref    V18 tmp12        

------------ BB05 [02E..02F) -> BB07 (always), preds={BB04} succs={BB07}

***** BB05
STMT00048 (IL 0x02E...  ???)
               [000225] -A-XG-------              *  ASG       int   
               [000224] ---XG--N----              +--*  FIELD     int    _size
               [000220] ------------              |  \--*  LCL_VAR   ref    V01 loc0         
               [000223] ------------              \--*  ADD       int   
               [000221] ------------                 +--*  LCL_VAR   int    V19 tmp13        
               [000222] ------------                 \--*  CNS_INT   int    1

***** BB05
STMT00049 (IL 0x02E...  ???)
               [000229] --CXG-------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST
               [000226] ------------ arg0         +--*  LCL_VAR   ref    V18 tmp12        
               [000227] ------------ arg1         +--*  LCL_VAR   int    V19 tmp13        
               [000228] ------------ arg2         \--*  LCL_VAR   ref    V04 loc3         

------------ BB06 [02E..02F), preds={BB04} succs={BB07}

***** BB06
STMT00047 (IL 0x02E...  ???)
               [000219] --C-G-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize
               [000218] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         
               [000178] ------------ arg1         \--*  LCL_VAR   ref    V04 loc3         

------------ BB07 [???..???) -> BB21 (always), preds={BB05,BB06} succs={BB21}

***** BB07
STMT00050 (IL 0x02E...  ???)
               [000232] -A----------              *  ASG       ref   
               [000231] D------N----              +--*  LCL_VAR   ref    V18 tmp12        
               [000230] ------------              \--*  CNS_INT   ref    null

------------ BB08 [037..04B) -> BB14 (cond), preds={BB02} succs={BB09,BB14}

***** BB08
STMT00053 (IL 0x037...  ???)
               [000247] -AC-G-------              *  ASG       ref   
               [000246] D------N----              +--*  LCL_VAR   ref    V20 tmp14        
               [000236] --C-G-------              \--*  CALL      ref    System.IO.EnumerationOptions.FromSearchOption
               [000235] ------------ arg0            \--*  CNS_INT   int    1

***** BB08
STMT00013 (IL   ???...  ???)
               [000054] -AC---------              *  ASG       ref   
               [000053] D------N----              +--*  LCL_VAR   ref    V09 tmp3         
               [000245] --C-G-------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths
               [000040] ------------ arg0            +--*  LCL_VAR   ref    V04 loc3         
               [000242] ------------ arg1            +--*  CNS_STR   ref   <string constant>
               [000243] ------------ arg2            +--*  CNS_INT   int    2
               [000244] ------------ arg3            \--*  LCL_VAR   ref    V20 tmp14        

***** BB08
STMT00012 (IL   ???...  ???)
               [000052] -ACXG-------              *  ASG       ref   
               [000051] D------N----              +--*  LCL_VAR   ref    V08 tmp2         
               [000050] --CXG-------              \--*  COMMA     ref   
               [000049] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000047] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000048] ------------ arg1            |  \--*  CNS_INT   int    35
               [000045] ----G-------                 \--*  FIELD     ref    <>9__2_0

***** BB08
STMT00015 (IL   ???...0x049)
               [000062] -A----------              *  ASG       ref   
               [000061] D------N----              +--*  LCL_VAR   ref    V10 tmp4         
               [000055] ------------              \--*  LCL_VAR   ref    V09 tmp3         

***** BB08
STMT00016 (IL   ???...  ???)
               [000065] -A----------              *  ASG       ref   
               [000064] D------N----              +--*  LCL_VAR   ref    V11 tmp5         
               [000056] ------------              \--*  LCL_VAR   ref    V08 tmp2         

***** BB08
STMT00014 (IL   ???...  ???)
               [000060] ------------              *  JTRUE     void  
               [000059] ------------              \--*  NE        int   
               [000057] ------------                 +--*  LCL_VAR   ref    V08 tmp2         
               [000058] ------------                 \--*  CNS_INT   ref    null

------------ BB09 [04B..062), preds={BB08} succs={BB10}

***** BB09
STMT00033 (IL   ???...0x05D)
               [000160] -AC---------              *  ASG       ref   
               [000159] D------N----              +--*  LCL_VAR   ref    V17 tmp11        
               [000158] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000157] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB09
STMT00058 (IL   ???...  ???)
               [000262] -ACXG-------              *  ASG       ref   
               [000261] D------N----              +--*  LCL_VAR   ref    V21 tmp15        
               [000155] --CXG-------              \--*  COMMA     ref   
               [000154] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000152] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000153] ------------ arg1            |  \--*  CNS_INT   int    35
               [000150] ----G-------                 \--*  FIELD     ref    <>9

------------ BB10 [000..000) -> BB12 (cond), preds={BB09} succs={BB24,BB12}

***** BB10
STMT00054 (IL   ???...  ???)
               [000252] ------------              *  JTRUE     void  
               [000251] ------------              \--*  NE        int   
               [000249] ------------                 +--*  LCL_VAR   ref    V21 tmp15        
               [000250] ------------                 \--*  CNS_INT   ref    null

------------ BB24 [???..???) -> BB17 (always), preds={BB10} succs={BB17}

------------ BB11 [000..000), preds={} succs={BB12}

***** BB11
STMT00057 (IL   ???...  ???)
               [000260] --C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

------------ BB12 [000..000), preds={BB10,BB11} succs={BB13}

***** BB12
STMT00055 (IL   ???...  ???)
               [000255] -A-XG-------              *  ASG       ref   
               [000254] ---XG--N----              +--*  FIELD     ref    _target
               [000161] ------------              |  \--*  LCL_VAR   ref    V17 tmp11        
               [000253] ------------              \--*  LCL_VAR   ref    V21 tmp15        

***** BB12
STMT00056 (IL   ???...  ???)
               [000259] -A-XG-------              *  ASG       long  
               [000258] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000256] ------------              |  \--*  LCL_VAR   ref    V17 tmp11        
               [000156] ------------              \--*  FTN_ADDR  long   <>c.<GetProjectPaths>b__2_0


------------ BB13 [???..???), preds={BB12} succs={BB14}

***** BB13
STMT00035 (IL 0x05C...  ???)
               [000171] -ACXG-------              *  COMMA     ref   
               [000170] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000168] ------------ arg0         |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000169] ------------ arg1         |  \--*  CNS_INT   int    35
               [000166] -A--G-------              \--*  ASG       ref   
               [000165] ----G--N----                 +--*  FIELD     ref    <>9__2_0
               [000164] ------------                 \--*  LCL_VAR   ref    V17 tmp11        

***** BB13
STMT00036 (IL   ???...0x05D)
               [000175] -A----------              *  ASG       ref   
               [000174] D------N----              +--*  LCL_VAR   ref    V11 tmp5         
               [000163] ------------              \--*  LCL_VAR   ref    V17 tmp11        

------------ BB14 [062..085) -> BB20 (cond), preds={BB08,BB13} succs={BB15,BB20}

***** BB14
STMT00018 (IL   ???...  ???)
               [000075] -AC---------              *  ASG       ref   
               [000074] D------N----              +--*  LCL_VAR   ref    V05 loc4         
               [000071] --C-G-------              \--*  CALL      ref    System.Linq.Enumerable.Where
               [000072] H----------- arg0            +--*  CNS_INT(h) long   0xd1ffab1e method
               [000069] ------------ arg1            +--*  LCL_VAR   ref    V10 tmp4         
               [000070] ------------ arg2            \--*  LCL_VAR   ref    V11 tmp5         

***** BB14
STMT00061 (IL 0x069...  ???)
               [000283] -ACXG-------              *  ASG       ref   
               [000282] D------N----              +--*  LCL_VAR   ref    V23 tmp17        
               [000276] --CXG-------              \--*  COMMA     ref   
               [000275] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000273] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc7e783cd8
               [000274] ------------ arg1            |  \--*  CNS_INT   int    40
               [000271] ----G-------                 \--*  FIELD     ref    <Compatible>k__BackingField

***** BB14
STMT00063 (IL   ???...  ???)
               [000290] -AC-G-------              *  ASG       ref   
               [000289] D------N----              +--*  LCL_VAR   ref    V24 tmp18        
               [000281] --C-G-------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths
               [000077] ------------ arg0            +--*  LCL_VAR   ref    V04 loc3         
               [000278] ------------ arg1            +--*  CNS_STR   ref   <string constant>
               [000279] ------------ arg2            +--*  CNS_INT   int    1
               [000280] ------------ arg3            \--*  LCL_VAR   ref    V23 tmp17        

***** BB14
STMT00062 (IL   ???...  ???)
               [000288] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
               [000076] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         
               [000286] ---XG------- arg1         +--*  FIELD     int    _size
               [000285] ------------              |  \--*  LCL_VAR   ref    V01 loc0         
               [000287] ------------ arg2         \--*  LCL_VAR   ref    V24 tmp18        

***** BB14
STMT00021 (IL 0x07A...  ???)
               [000091] -ACXG-------              *  ASG       ref   
               [000090] D------N----              +--*  LCL_VAR   ref    V12 tmp6         
               [000089] --CXG-------              \--*  COMMA     ref   
               [000088] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000086] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000087] ------------ arg1            |  \--*  CNS_INT   int    35
               [000084] ----G-------                 \--*  FIELD     ref    <>9__2_1

***** BB14
STMT00023 (IL   ???...0x083)
               [000098] -A----------              *  ASG       ref   
               [000097] D------N----              +--*  LCL_VAR   ref    V13 tmp7         
               [000082] ------------              \--*  LCL_VAR   ref    V01 loc0         

***** BB14
STMT00024 (IL   ???...  ???)
               [000101] -A----------              *  ASG       ref   
               [000100] D------N----              +--*  LCL_VAR   ref    V14 tmp8         
               [000083] ------------              \--*  LCL_VAR   ref    V05 loc4         

***** BB14
STMT00025 (IL   ???...  ???)
               [000104] -A----------              *  ASG       ref   
               [000103] D------N----              +--*  LCL_VAR   ref    V15 tmp9         
               [000092] ------------              \--*  LCL_VAR   ref    V12 tmp6         

***** BB14
STMT00022 (IL   ???...  ???)
               [000096] ------------              *  JTRUE     void  
               [000095] ------------              \--*  NE        int   
               [000093] ------------                 +--*  LCL_VAR   ref    V12 tmp6         
               [000094] ------------                 \--*  CNS_INT   ref    null

------------ BB15 [085..09C), preds={BB14} succs={BB16}

***** BB15
STMT00029 (IL   ???...0x097)
               [000131] -AC---------              *  ASG       ref   
               [000130] D------N----              +--*  LCL_VAR   ref    V16 tmp10        
               [000129] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000128] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB15
STMT00068 (IL   ???...  ???)
               [000305] -ACXG-------              *  ASG       ref   
               [000304] D------N----              +--*  LCL_VAR   ref    V25 tmp19        
               [000126] --CXG-------              \--*  COMMA     ref   
               [000125] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000123] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000124] ------------ arg1            |  \--*  CNS_INT   int    35
               [000121] ----G-------                 \--*  FIELD     ref    <>9

------------ BB16 [000..000) -> BB18 (cond), preds={BB15} succs={BB17,BB18}

***** BB16
STMT00064 (IL   ???...  ???)
               [000295] ------------              *  JTRUE     void  
               [000294] ------------              \--*  NE        int   
               [000292] ------------                 +--*  LCL_VAR   ref    V25 tmp19        
               [000293] ------------                 \--*  CNS_INT   ref    null

------------ BB17 [000..000), preds={BB16,BB24} succs={BB18}

***** BB17
STMT00067 (IL   ???...  ???)
               [000303] --C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

------------ BB18 [000..000), preds={BB16,BB17} succs={BB19}

***** BB18
STMT00065 (IL   ???...  ???)
               [000298] -A-XG-------              *  ASG       ref   
               [000297] ---XG--N----              +--*  FIELD     ref    _target
               [000132] ------------              |  \--*  LCL_VAR   ref    V16 tmp10        
               [000296] ------------              \--*  LCL_VAR   ref    V25 tmp19        

***** BB18
STMT00066 (IL   ???...  ???)
               [000302] -A-XG-------              *  ASG       long  
               [000301] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000299] ------------              |  \--*  LCL_VAR   ref    V16 tmp10        
               [000127] ------------              \--*  FTN_ADDR  long   <>c.<GetProjectPaths>b__2_1


------------ BB19 [???..???), preds={BB18} succs={BB20}

***** BB19
STMT00031 (IL 0x096...  ???)
               [000142] -ACXG-------              *  COMMA     ref   
               [000141] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000139] ------------ arg0         |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000140] ------------ arg1         |  \--*  CNS_INT   int    35
               [000137] -A--G-------              \--*  ASG       ref   
               [000136] ----G--N----                 +--*  FIELD     ref    <>9__2_1
               [000135] ------------                 \--*  LCL_VAR   ref    V16 tmp10        

***** BB19
STMT00032 (IL   ???...0x097)
               [000148] -A----------              *  ASG       ref   
               [000147] D------N----              +--*  LCL_VAR   ref    V15 tmp9         
               [000134] ------------              \--*  LCL_VAR   ref    V16 tmp10        

------------ BB20 [09C..0A6), preds={BB14,BB19} succs={BB21}

***** BB20
STMT00070 (IL   ???...  ???)
               [000313] -AC-G-------              *  ASG       ref   
               [000312] D------N----              +--*  LCL_VAR   ref    V27 tmp21        
               [000112] --C-G-------              \--*  CALL      ref    System.Linq.Enumerable.SelectMany
               [000113] H----------- arg0            +--*  CNS_INT(h) long   0xd1ffab1e method
               [000110] ------------ arg1            +--*  LCL_VAR   ref    V14 tmp8         
               [000111] ------------ arg2            \--*  LCL_VAR   ref    V15 tmp9         

***** BB20
STMT00069 (IL   ???...  ???)
               [000311] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
               [000109] ------------ this in rcx  +--*  LCL_VAR   ref    V13 tmp7         
               [000309] ---XG------- arg1         +--*  FIELD     int    _size
               [000308] ------------              |  \--*  LCL_VAR   ref    V13 tmp7         
               [000310] ------------ arg2         \--*  LCL_VAR   ref    V27 tmp21        

------------ BB21 [0A6..0AA), preds={BB07,BB20} succs={BB22}

***** BB21
STMT00028 (IL 0x0A6...0x0A9)
               [000120] -A----------              *  ASG       int   
               [000119] D------N----              +--*  LCL_VAR   int    V03 loc2         
               [000118] ------------              \--*  ADD       int   
               [000116] ------------                 +--*  LCL_VAR   int    V03 loc2         
               [000117] ------------                 \--*  CNS_INT   int    1

------------ BB22 [0AA..0B3) -> BB02 (cond), preds={BB01,BB21} succs={BB23,BB02}

***** BB22
STMT00007 (IL 0x0AA...0x0AE)
               [000027] ---X--------              *  JTRUE     void  
               [000026] ---X--------              \--*  LT        int   
               [000023] ------------                 +--*  LCL_VAR   int    V03 loc2         
               [000025] ---X--------                 \--*  ARR_LENGTH int   
               [000024] ------------                    \--*  LCL_VAR   ref    V02 loc1         

------------ BB23 [0B3..0C7) (return), preds={BB22} succs={}

***** BB23
STMT00038 (IL 0x0B3...0x0C4)
               [000181] --C-G-------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle
               [000182] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000180] ------------ arg1         \--*  LCL_VAR   ref    V01 loc0         

***** BB23
STMT00040 (IL   ???...  ???)
               [000185] --C-G-------              *  CALL      ref    SolutionAnalyzer.Logger.Log
               [000186] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000183] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000184] ------------ arg2         \--*  CNS_INT   int    2

***** BB23
STMT00041 (IL 0x0C5...0x0C6)
               [000191] ------------              *  RETURN    ref   
               [000190] ------------              \--*  LCL_VAR   ref    V01 loc0         

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Update flow graph early pass

*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB22 (always)                     i label target newobj 
BB02 [0001]  1       BB22                  1       [01D..02E)-> BB08 ( cond )                     i label target idxlen nullcheck bwd bwd-target 
BB03 [0002]  1       BB02                  1       [02E..037)                                     i bwd 
BB04 [0012]  1       BB03                  1       [02E..02F)-> BB06 ( cond )                     i idxlen bwd 
BB05 [0013]  1       BB04                  1       [02E..02F)-> BB07 (always)                     i bwd 
BB06 [0014]  1       BB04                  1       [02E..02F)                                     i label target bwd 
BB07 [0015]  2       BB05,BB06             1       [???..???)-> BB21 (always)                     internal label target bwd 
BB08 [0003]  1       BB02                  1       [037..04B)-> BB14 ( cond )                     i label target bwd 
BB09 [0004]  1       BB08                  1       [04B..062)                                     i newobj bwd 
BB10 [0018]  1       BB09                  1       [000..000)-> BB12 ( cond )                     i internal bwd 
BB24 [0031]  1       BB10                  1       [???..???)-> BB17 (always)                     internal 
BB11 [0019]  0                             0.50    [000..000)                                     i internal bwd 
BB12 [0020]  2       BB10,BB11             1       [000..000)                                     i internal label target bwd 
BB13 [0021]  1       BB12                  1       [???..???)                                     internal newobj bwd 
BB14 [0005]  2       BB08,BB13             1       [062..085)-> BB20 ( cond )                     i label target bwd 
BB15 [0006]  1       BB14                  1       [085..09C)                                     i newobj bwd 
BB16 [0026]  1       BB15                  1       [000..000)-> BB18 ( cond )                     i internal bwd 
BB17 [0027]  2       BB16,BB24             0.50    [000..000)                                     i internal label target bwd 
BB18 [0028]  2       BB16,BB17             1       [000..000)                                     i internal label target bwd 
BB19 [0029]  1       BB18                  1       [???..???)                                     internal newobj bwd 
BB20 [0007]  2       BB14,BB19             1       [09C..0A6)                                     i label target bwd 
BB21 [0008]  2       BB07,BB20             1       [0A6..0AA)                                     i label target bwd 
BB22 [0009]  2       BB01,BB21             1       [0AA..0B3)-> BB02 ( cond )                     i label target idxlen bwd 
BB23 [0010]  1       BB22                  1       [0B3..0C7)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------


Compacting blocks BB03 and BB04:
*************** In fgDebugCheckBBlist

Compacting blocks BB09 and BB10:
*************** In fgDebugCheckBBlist
fgRemoveBlock BB11

Removing unreachable BB11

Removing statement STMT00057 (IL   ???...  ???)
               [000260] --C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance
 in BB11 as useless:

BB11 becomes empty

Compacting blocks BB12 and BB13:
*************** In fgDebugCheckBBlist

Compacting blocks BB15 and BB16:
*************** In fgDebugCheckBBlist

Compacting blocks BB18 and BB19:
*************** In fgDebugCheckBBlist

Reversing a conditional jump around an unconditional jump (BB09 -> BB12 -> BB17)

After reversing the jump:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB22 (always)                     i label target newobj 
BB02 [0001]  1       BB22                  1       [01D..02E)-> BB08 ( cond )                     i label target idxlen nullcheck bwd bwd-target 
BB03 [0002]  1       BB02                  1       [02E..037)-> BB06 ( cond )                     i idxlen bwd 
BB05 [0013]  1       BB03                  1       [02E..02F)-> BB07 (always)                     i bwd 
BB06 [0014]  1       BB03                  1       [02E..02F)                                     i label target bwd 
BB07 [0015]  2       BB05,BB06             1       [???..???)-> BB21 (always)                     internal label target bwd 
BB08 [0003]  1       BB02                  1       [037..04B)-> BB14 ( cond )                     i label target bwd 
BB09 [0004]  1       BB08                  1       [000..062)-> BB17 ( cond )                     i newobj bwd 
BB12 [0020]  1       BB09                  1       [000..000)                                     i internal label target newobj bwd 
BB14 [0005]  2       BB08,BB12             1       [062..085)-> BB20 ( cond )                     i label target bwd 
BB15 [0006]  1       BB14                  1       [000..09C)-> BB18 ( cond )                     i newobj bwd 
BB17 [0027]  2       BB09,BB15             0.50    [000..000)                                     i internal label target bwd 
BB18 [0028]  2       BB15,BB17             1       [000..000)                                     i internal label target newobj bwd 
BB20 [0007]  2       BB14,BB18             1       [09C..0A6)                                     i label target bwd 
BB21 [0008]  2       BB07,BB20             1       [0A6..0AA)                                     i label target bwd 
BB22 [0009]  2       BB01,BB21             1       [0AA..0B3)-> BB02 ( cond )                     i label target idxlen bwd 
BB23 [0010]  1       BB22                  1       [0B3..0C7)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

After updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB22 (always)                     i label target newobj 
BB02 [0001]  1       BB22                  1       [01D..02E)-> BB08 ( cond )                     i label target idxlen nullcheck bwd bwd-target 
BB03 [0002]  1       BB02                  1       [02E..037)-> BB06 ( cond )                     i idxlen bwd 
BB05 [0013]  1       BB03                  1       [02E..02F)-> BB07 (always)                     i bwd 
BB06 [0014]  1       BB03                  1       [02E..02F)                                     i label target bwd 
BB07 [0015]  2       BB05,BB06             1       [???..???)-> BB21 (always)                     internal label target bwd 
BB08 [0003]  1       BB02                  1       [037..04B)-> BB14 ( cond )                     i label target bwd 
BB09 [0004]  1       BB08                  1       [000..062)-> BB17 ( cond )                     i newobj bwd 
BB12 [0020]  1       BB09                  1       [000..000)                                     i internal label target newobj bwd 
BB14 [0005]  2       BB08,BB12             1       [062..085)-> BB20 ( cond )                     i label target bwd 
BB15 [0006]  1       BB14                  1       [000..09C)-> BB18 ( cond )                     i newobj bwd 
BB17 [0027]  2       BB09,BB15             0.50    [000..000)                                     i internal label target bwd 
BB18 [0028]  2       BB15,BB17             1       [000..000)                                     i internal label target newobj bwd 
BB20 [0007]  2       BB14,BB18             1       [09C..0A6)                                     i label target bwd 
BB21 [0008]  2       BB07,BB20             1       [0A6..0AA)                                     i label target bwd 
BB22 [0009]  2       BB01,BB21             1       [0AA..0B3)-> BB02 ( cond )                     i label target idxlen bwd 
BB23 [0010]  1       BB22                  1       [0B3..0C7)        (return)                     i 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Update flow graph early pass

*************** Starting PHASE Morph - Promote Structs

*************** In fgResetImplicitByRefRefCount()
*************** In fgPromoteStructs()

lvaTable before fgPromoteStructs
; Initial local variable assignments
;
;  V00 arg0              ref  class-hnd
;  V01 loc0              ref  class-hnd exact
;  V02 loc1              ref  class-hnd
;  V03 loc2              int 
;  V04 loc3              ref  class-hnd
;  V05 loc4              ref  class-hnd
;  V06 OutArgs        lclBlk <na>  "OutgoingArgSpace"
;  V07 tmp1              ref  class-hnd exact "NewObj constructor temp"
;  V08 tmp2              ref  class-hnd "dup spill"
;  V09 tmp3              ref  class-hnd "impAppendStmt"
;  V10 tmp4              ref 
;  V11 tmp5              ref 
;  V12 tmp6              ref  class-hnd "dup spill"
;  V13 tmp7              ref 
;  V14 tmp8              ref 
;  V15 tmp9              ref 
;  V16 tmp10             ref  class-hnd exact "NewObj constructor temp"
;  V17 tmp11             ref  class-hnd exact "NewObj constructor temp"
;  V18 tmp12             ref  class-hnd "Inline stloc first use temp"
;  V19 tmp13             int  "Inline stloc first use temp"
;  V20 tmp14             ref  class-hnd "Inlining Arg"
;  V21 tmp15             ref  class-hnd "Inlining Arg"
;  V22 tmp16            long  "Inlining Arg"
;  V23 tmp17             ref  class-hnd "Inlining Arg"
;  V24 tmp18             ref  class-hnd "Inlining Arg"
;  V25 tmp19             ref  class-hnd "Inlining Arg"
;  V26 tmp20            long  "Inlining Arg"
;  V27 tmp21             ref  class-hnd "Inlining Arg"

lvaTable after fgPromoteStructs
; Initial local variable assignments
;
;  V00 arg0              ref  class-hnd
;  V01 loc0              ref  class-hnd exact
;  V02 loc1              ref  class-hnd
;  V03 loc2              int 
;  V04 loc3              ref  class-hnd
;  V05 loc4              ref  class-hnd
;  V06 OutArgs        lclBlk <na>  "OutgoingArgSpace"
;  V07 tmp1              ref  class-hnd exact "NewObj constructor temp"
;  V08 tmp2              ref  class-hnd "dup spill"
;  V09 tmp3              ref  class-hnd "impAppendStmt"
;  V10 tmp4              ref 
;  V11 tmp5              ref 
;  V12 tmp6              ref  class-hnd "dup spill"
;  V13 tmp7              ref 
;  V14 tmp8              ref 
;  V15 tmp9              ref 
;  V16 tmp10             ref  class-hnd exact "NewObj constructor temp"
;  V17 tmp11             ref  class-hnd exact "NewObj constructor temp"
;  V18 tmp12             ref  class-hnd "Inline stloc first use temp"
;  V19 tmp13             int  "Inline stloc first use temp"
;  V20 tmp14             ref  class-hnd "Inlining Arg"
;  V21 tmp15             ref  class-hnd "Inlining Arg"
;  V22 tmp16            long  "Inlining Arg"
;  V23 tmp17             ref  class-hnd "Inlining Arg"
;  V24 tmp18             ref  class-hnd "Inlining Arg"
;  V25 tmp19             ref  class-hnd "Inlining Arg"
;  V26 tmp20            long  "Inlining Arg"
;  V27 tmp21             ref  class-hnd "Inlining Arg"

*************** Finishing PHASE Morph - Promote Structs

*************** Starting PHASE Morph - Structs/AddrExp

*************** In fgMarkAddressExposedLocals()
LocalAddressVisitor visiting statement:
STMT00001 (IL   ???...  ???)
               [000002] --C-G-------              *  CALL      ref    SolutionAnalyzer.Logger.Log
               [000003] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000000] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000001] ------------ arg2         \--*  CNS_INT   int    2

LocalAddressVisitor visiting statement:
STMT00002 (IL 0x00C...0x013)
               [000011] -AC---------              *  ASG       ref   
               [000010] D------N----              +--*  LCL_VAR   ref    V07 tmp1         
               [000009] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000008] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token

LocalAddressVisitor visiting statement:
STMT00003 (IL   ???...  ???)
               [000013] --C-G-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor
               [000012] ------------ this in rcx  +--*  LCL_VAR   ref    V07 tmp1         
               [000007] ------------ arg1         \--*  CNS_INT   int    100

LocalAddressVisitor visiting statement:
STMT00004 (IL 0x013...  ???)
               [000016] -A----------              *  ASG       ref   
               [000015] D------N----              +--*  LCL_VAR   ref    V01 loc0         
               [000014] ------------              \--*  LCL_VAR   ref    V07 tmp1         

LocalAddressVisitor visiting statement:
STMT00005 (IL 0x014...0x015)
               [000019] -A----------              *  ASG       ref   
               [000018] D------N----              +--*  LCL_VAR   ref    V02 loc1         
               [000017] ------------              \--*  LCL_VAR   ref    V00 arg0         

LocalAddressVisitor visiting statement:
STMT00006 (IL 0x016...0x017)
               [000022] -A----------              *  ASG       int   
               [000021] D------N----              +--*  LCL_VAR   int    V03 loc2         
               [000020] ------------              \--*  CNS_INT   int    0

LocalAddressVisitor visiting statement:
STMT00008 (IL 0x01D...0x020)
               [000032] -A-XG-------              *  ASG       ref   
               [000031] D------N----              +--*  LCL_VAR   ref    V04 loc3         
               [000030] ---XG-------              \--*  INDEX     ref   
               [000028] ------------                 +--*  LCL_VAR   ref    V02 loc1         
               [000029] ------------                 \--*  LCL_VAR   int    V03 loc2         

LocalAddressVisitor visiting statement:
STMT00042 (IL 0x021...  ???)
               [000197] ---X--------              *  NULLCHECK byte  
               [000196] ------------              \--*  LCL_VAR   ref    V04 loc3         

LocalAddressVisitor visiting statement:
STMT00010 (IL   ???...  ???)
               [000039] --C---------              *  JTRUE     void  
               [000038] --C---------              \--*  EQ        int   
               [000195] --C-G-------                 +--*  CALL      int    System.String.EndsWith
               [000033] ------------ this in rcx     |  +--*  LCL_VAR   ref    V04 loc3         
               [000193] ------------ arg1            |  +--*  CNS_STR   ref   <string constant>
               [000194] ------------ arg2            |  \--*  CNS_INT   int    0
               [000037] ------------                 \--*  CNS_INT   int    0

LocalAddressVisitor visiting statement:
STMT00043 (IL 0x02E...  ???)
               [000204] -A-XG-------              *  ASG       int   
               [000203] ---XG--N----              +--*  FIELD     int    _version
               [000177] ------------              |  \--*  LCL_VAR   ref    V01 loc0         
               [000202] ---XG-------              \--*  ADD       int   
               [000200] ---XG-------                 +--*  FIELD     int    _version
               [000199] ------------                 |  \--*  LCL_VAR   ref    V01 loc0         
               [000201] ------------                 \--*  CNS_INT   int    1

LocalAddressVisitor visiting statement:
STMT00044 (IL 0x02E...  ???)
               [000208] -A-XG-------              *  ASG       ref   
               [000207] D------N----              +--*  LCL_VAR   ref    V18 tmp12        
               [000206] ---XG-------              \--*  FIELD     ref    _items
               [000205] ------------                 \--*  LCL_VAR   ref    V01 loc0         

LocalAddressVisitor visiting statement:
STMT00045 (IL 0x02E...  ???)
               [000212] -A-XG-------              *  ASG       int   
               [000211] D------N----              +--*  LCL_VAR   int    V19 tmp13        
               [000210] ---XG-------              \--*  FIELD     int    _size
               [000209] ------------                 \--*  LCL_VAR   ref    V01 loc0         

LocalAddressVisitor visiting statement:
STMT00046 (IL 0x02E...  ???)
               [000217] ---X--------              *  JTRUE     void  
               [000216] N--X-----U--              \--*  GE        int   
               [000213] ------------                 +--*  LCL_VAR   int    V19 tmp13        
               [000215] ---X--------                 \--*  ARR_LENGTH int   
               [000214] ------------                    \--*  LCL_VAR   ref    V18 tmp12        

LocalAddressVisitor visiting statement:
STMT00048 (IL 0x02E...  ???)
               [000225] -A-XG-------              *  ASG       int   
               [000224] ---XG--N----              +--*  FIELD     int    _size
               [000220] ------------              |  \--*  LCL_VAR   ref    V01 loc0         
               [000223] ------------              \--*  ADD       int   
               [000221] ------------                 +--*  LCL_VAR   int    V19 tmp13        
               [000222] ------------                 \--*  CNS_INT   int    1

LocalAddressVisitor visiting statement:
STMT00049 (IL 0x02E...  ???)
               [000229] --CXG-------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST
               [000226] ------------ arg0         +--*  LCL_VAR   ref    V18 tmp12        
               [000227] ------------ arg1         +--*  LCL_VAR   int    V19 tmp13        
               [000228] ------------ arg2         \--*  LCL_VAR   ref    V04 loc3         

LocalAddressVisitor visiting statement:
STMT00047 (IL 0x02E...  ???)
               [000219] --C-G-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize
               [000218] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         
               [000178] ------------ arg1         \--*  LCL_VAR   ref    V04 loc3         

LocalAddressVisitor visiting statement:
STMT00050 (IL 0x02E...  ???)
               [000232] -A----------              *  ASG       ref   
               [000231] D------N----              +--*  LCL_VAR   ref    V18 tmp12        
               [000230] ------------              \--*  CNS_INT   ref    null

LocalAddressVisitor visiting statement:
STMT00053 (IL 0x037...  ???)
               [000247] -AC-G-------              *  ASG       ref   
               [000246] D------N----              +--*  LCL_VAR   ref    V20 tmp14        
               [000236] --C-G-------              \--*  CALL      ref    System.IO.EnumerationOptions.FromSearchOption
               [000235] ------------ arg0            \--*  CNS_INT   int    1

LocalAddressVisitor visiting statement:
STMT00013 (IL   ???...  ???)
               [000054] -AC---------              *  ASG       ref   
               [000053] D------N----              +--*  LCL_VAR   ref    V09 tmp3         
               [000245] --C-G-------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths
               [000040] ------------ arg0            +--*  LCL_VAR   ref    V04 loc3         
               [000242] ------------ arg1            +--*  CNS_STR   ref   <string constant>
               [000243] ------------ arg2            +--*  CNS_INT   int    2
               [000244] ------------ arg3            \--*  LCL_VAR   ref    V20 tmp14        

LocalAddressVisitor visiting statement:
STMT00012 (IL   ???...  ???)
               [000052] -ACXG-------              *  ASG       ref   
               [000051] D------N----              +--*  LCL_VAR   ref    V08 tmp2         
               [000050] --CXG-------              \--*  COMMA     ref   
               [000049] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000047] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000048] ------------ arg1            |  \--*  CNS_INT   int    35
               [000045] ----G-------                 \--*  FIELD     ref    <>9__2_0

LocalAddressVisitor visiting statement:
STMT00015 (IL   ???...0x049)
               [000062] -A----------              *  ASG       ref   
               [000061] D------N----              +--*  LCL_VAR   ref    V10 tmp4         
               [000055] ------------              \--*  LCL_VAR   ref    V09 tmp3         

LocalAddressVisitor visiting statement:
STMT00016 (IL   ???...  ???)
               [000065] -A----------              *  ASG       ref   
               [000064] D------N----              +--*  LCL_VAR   ref    V11 tmp5         
               [000056] ------------              \--*  LCL_VAR   ref    V08 tmp2         

LocalAddressVisitor visiting statement:
STMT00014 (IL   ???...  ???)
               [000060] ------------              *  JTRUE     void  
               [000059] ------------              \--*  NE        int   
               [000057] ------------                 +--*  LCL_VAR   ref    V08 tmp2         
               [000058] ------------                 \--*  CNS_INT   ref    null

LocalAddressVisitor visiting statement:
STMT00033 (IL   ???...0x05D)
               [000160] -AC---------              *  ASG       ref   
               [000159] D------N----              +--*  LCL_VAR   ref    V17 tmp11        
               [000158] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000157] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token

LocalAddressVisitor visiting statement:
STMT00058 (IL   ???...  ???)
               [000262] -ACXG-------              *  ASG       ref   
               [000261] D------N----              +--*  LCL_VAR   ref    V21 tmp15        
               [000155] --CXG-------              \--*  COMMA     ref   
               [000154] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000152] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000153] ------------ arg1            |  \--*  CNS_INT   int    35
               [000150] ----G-------                 \--*  FIELD     ref    <>9

LocalAddressVisitor visiting statement:
STMT00054 (IL   ???...  ???)
               [000252] ------------              *  JTRUE     void  
               [000251] ------------              \--*  EQ        int   
               [000249] ------------                 +--*  LCL_VAR   ref    V21 tmp15        
               [000250] ------------                 \--*  CNS_INT   ref    null

LocalAddressVisitor visiting statement:
STMT00055 (IL   ???...  ???)
               [000255] -A-XG-------              *  ASG       ref   
               [000254] ---XG--N----              +--*  FIELD     ref    _target
               [000161] ------------              |  \--*  LCL_VAR   ref    V17 tmp11        
               [000253] ------------              \--*  LCL_VAR   ref    V21 tmp15        

LocalAddressVisitor visiting statement:
STMT00056 (IL   ???...  ???)
               [000259] -A-XG-------              *  ASG       long  
               [000258] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000256] ------------              |  \--*  LCL_VAR   ref    V17 tmp11        
               [000156] ------------              \--*  FTN_ADDR  long   <>c.<GetProjectPaths>b__2_0


LocalAddressVisitor visiting statement:
STMT00035 (IL 0x05C...  ???)
               [000171] -ACXG-------              *  COMMA     ref   
               [000170] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000168] ------------ arg0         |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000169] ------------ arg1         |  \--*  CNS_INT   int    35
               [000166] -A--G-------              \--*  ASG       ref   
               [000165] ----G--N----                 +--*  FIELD     ref    <>9__2_0
               [000164] ------------                 \--*  LCL_VAR   ref    V17 tmp11        

LocalAddressVisitor visiting statement:
STMT00036 (IL   ???...0x05D)
               [000175] -A----------              *  ASG       ref   
               [000174] D------N----              +--*  LCL_VAR   ref    V11 tmp5         
               [000163] ------------              \--*  LCL_VAR   ref    V17 tmp11        

LocalAddressVisitor visiting statement:
STMT00018 (IL   ???...  ???)
               [000075] -AC---------              *  ASG       ref   
               [000074] D------N----              +--*  LCL_VAR   ref    V05 loc4         
               [000071] --C-G-------              \--*  CALL      ref    System.Linq.Enumerable.Where
               [000072] H----------- arg0            +--*  CNS_INT(h) long   0xd1ffab1e method
               [000069] ------------ arg1            +--*  LCL_VAR   ref    V10 tmp4         
               [000070] ------------ arg2            \--*  LCL_VAR   ref    V11 tmp5         

LocalAddressVisitor visiting statement:
STMT00061 (IL 0x069...  ???)
               [000283] -ACXG-------              *  ASG       ref   
               [000282] D------N----              +--*  LCL_VAR   ref    V23 tmp17        
               [000276] --CXG-------              \--*  COMMA     ref   
               [000275] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000273] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc7e783cd8
               [000274] ------------ arg1            |  \--*  CNS_INT   int    40
               [000271] ----G-------                 \--*  FIELD     ref    <Compatible>k__BackingField

LocalAddressVisitor visiting statement:
STMT00063 (IL   ???...  ???)
               [000290] -AC-G-------              *  ASG       ref   
               [000289] D------N----              +--*  LCL_VAR   ref    V24 tmp18        
               [000281] --C-G-------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths
               [000077] ------------ arg0            +--*  LCL_VAR   ref    V04 loc3         
               [000278] ------------ arg1            +--*  CNS_STR   ref   <string constant>
               [000279] ------------ arg2            +--*  CNS_INT   int    1
               [000280] ------------ arg3            \--*  LCL_VAR   ref    V23 tmp17        

LocalAddressVisitor visiting statement:
STMT00062 (IL   ???...  ???)
               [000288] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
               [000076] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         
               [000286] ---XG------- arg1         +--*  FIELD     int    _size
               [000285] ------------              |  \--*  LCL_VAR   ref    V01 loc0         
               [000287] ------------ arg2         \--*  LCL_VAR   ref    V24 tmp18        

LocalAddressVisitor visiting statement:
STMT00021 (IL 0x07A...  ???)
               [000091] -ACXG-------              *  ASG       ref   
               [000090] D------N----              +--*  LCL_VAR   ref    V12 tmp6         
               [000089] --CXG-------              \--*  COMMA     ref   
               [000088] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000086] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000087] ------------ arg1            |  \--*  CNS_INT   int    35
               [000084] ----G-------                 \--*  FIELD     ref    <>9__2_1

LocalAddressVisitor visiting statement:
STMT00023 (IL   ???...0x083)
               [000098] -A----------              *  ASG       ref   
               [000097] D------N----              +--*  LCL_VAR   ref    V13 tmp7         
               [000082] ------------              \--*  LCL_VAR   ref    V01 loc0         

LocalAddressVisitor visiting statement:
STMT00024 (IL   ???...  ???)
               [000101] -A----------              *  ASG       ref   
               [000100] D------N----              +--*  LCL_VAR   ref    V14 tmp8         
               [000083] ------------              \--*  LCL_VAR   ref    V05 loc4         

LocalAddressVisitor visiting statement:
STMT00025 (IL   ???...  ???)
               [000104] -A----------              *  ASG       ref   
               [000103] D------N----              +--*  LCL_VAR   ref    V15 tmp9         
               [000092] ------------              \--*  LCL_VAR   ref    V12 tmp6         

LocalAddressVisitor visiting statement:
STMT00022 (IL   ???...  ???)
               [000096] ------------              *  JTRUE     void  
               [000095] ------------              \--*  NE        int   
               [000093] ------------                 +--*  LCL_VAR   ref    V12 tmp6         
               [000094] ------------                 \--*  CNS_INT   ref    null

LocalAddressVisitor visiting statement:
STMT00029 (IL   ???...0x097)
               [000131] -AC---------              *  ASG       ref   
               [000130] D------N----              +--*  LCL_VAR   ref    V16 tmp10        
               [000129] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000128] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token

LocalAddressVisitor visiting statement:
STMT00068 (IL   ???...  ???)
               [000305] -ACXG-------              *  ASG       ref   
               [000304] D------N----              +--*  LCL_VAR   ref    V25 tmp19        
               [000126] --CXG-------              \--*  COMMA     ref   
               [000125] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000123] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000124] ------------ arg1            |  \--*  CNS_INT   int    35
               [000121] ----G-------                 \--*  FIELD     ref    <>9

LocalAddressVisitor visiting statement:
STMT00064 (IL   ???...  ???)
               [000295] ------------              *  JTRUE     void  
               [000294] ------------              \--*  NE        int   
               [000292] ------------                 +--*  LCL_VAR   ref    V25 tmp19        
               [000293] ------------                 \--*  CNS_INT   ref    null

LocalAddressVisitor visiting statement:
STMT00067 (IL   ???...  ???)
               [000303] --C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

LocalAddressVisitor visiting statement:
STMT00065 (IL   ???...  ???)
               [000298] -A-XG-------              *  ASG       ref   
               [000297] ---XG--N----              +--*  FIELD     ref    _target
               [000132] ------------              |  \--*  LCL_VAR   ref    V16 tmp10        
               [000296] ------------              \--*  LCL_VAR   ref    V25 tmp19        

LocalAddressVisitor visiting statement:
STMT00066 (IL   ???...  ???)
               [000302] -A-XG-------              *  ASG       long  
               [000301] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000299] ------------              |  \--*  LCL_VAR   ref    V16 tmp10        
               [000127] ------------              \--*  FTN_ADDR  long   <>c.<GetProjectPaths>b__2_1


LocalAddressVisitor visiting statement:
STMT00031 (IL 0x096...  ???)
               [000142] -ACXG-------              *  COMMA     ref   
               [000141] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000139] ------------ arg0         |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000140] ------------ arg1         |  \--*  CNS_INT   int    35
               [000137] -A--G-------              \--*  ASG       ref   
               [000136] ----G--N----                 +--*  FIELD     ref    <>9__2_1
               [000135] ------------                 \--*  LCL_VAR   ref    V16 tmp10        

LocalAddressVisitor visiting statement:
STMT00032 (IL   ???...0x097)
               [000148] -A----------              *  ASG       ref   
               [000147] D------N----              +--*  LCL_VAR   ref    V15 tmp9         
               [000134] ------------              \--*  LCL_VAR   ref    V16 tmp10        

LocalAddressVisitor visiting statement:
STMT00070 (IL   ???...  ???)
               [000313] -AC-G-------              *  ASG       ref   
               [000312] D------N----              +--*  LCL_VAR   ref    V27 tmp21        
               [000112] --C-G-------              \--*  CALL      ref    System.Linq.Enumerable.SelectMany
               [000113] H----------- arg0            +--*  CNS_INT(h) long   0xd1ffab1e method
               [000110] ------------ arg1            +--*  LCL_VAR   ref    V14 tmp8         
               [000111] ------------ arg2            \--*  LCL_VAR   ref    V15 tmp9         

LocalAddressVisitor visiting statement:
STMT00069 (IL   ???...  ???)
               [000311] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
               [000109] ------------ this in rcx  +--*  LCL_VAR   ref    V13 tmp7         
               [000309] ---XG------- arg1         +--*  FIELD     int    _size
               [000308] ------------              |  \--*  LCL_VAR   ref    V13 tmp7         
               [000310] ------------ arg2         \--*  LCL_VAR   ref    V27 tmp21        

LocalAddressVisitor visiting statement:
STMT00028 (IL 0x0A6...0x0A9)
               [000120] -A----------              *  ASG       int   
               [000119] D------N----              +--*  LCL_VAR   int    V03 loc2         
               [000118] ------------              \--*  ADD       int   
               [000116] ------------                 +--*  LCL_VAR   int    V03 loc2         
               [000117] ------------                 \--*  CNS_INT   int    1

LocalAddressVisitor visiting statement:
STMT00007 (IL 0x0AA...0x0AE)
               [000027] ---X--------              *  JTRUE     void  
               [000026] ---X--------              \--*  LT        int   
               [000023] ------------                 +--*  LCL_VAR   int    V03 loc2         
               [000025] ---X--------                 \--*  ARR_LENGTH int   
               [000024] ------------                    \--*  LCL_VAR   ref    V02 loc1         

LocalAddressVisitor visiting statement:
STMT00038 (IL 0x0B3...0x0C4)
               [000181] --C-G-------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle
               [000182] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000180] ------------ arg1         \--*  LCL_VAR   ref    V01 loc0         

LocalAddressVisitor visiting statement:
STMT00040 (IL   ???...  ???)
               [000185] --C-G-------              *  CALL      ref    SolutionAnalyzer.Logger.Log
               [000186] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000183] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000184] ------------ arg2         \--*  CNS_INT   int    2

LocalAddressVisitor visiting statement:
STMT00041 (IL 0x0C5...0x0C6)
               [000191] ------------              *  RETURN    ref   
               [000190] ------------              \--*  LCL_VAR   ref    V01 loc0         


*************** Finishing PHASE Morph - Structs/AddrExp

*************** Starting PHASE Morph - ByRefs

*************** In fgRetypeImplicitByRefArgs()

*************** Finishing PHASE Morph - ByRefs

*************** Starting PHASE Morph - Global

*************** In fgMorphBlocks()

Morphing BB01 of 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'

fgMorphTree BB01, STMT00001 (before)
               [000002] --C-G-------              *  CALL      ref    SolutionAnalyzer.Logger.Log
               [000003] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000000] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000001] ------------ arg2         \--*  CNS_INT   int    2
Initializing arg info for 2.CALL:
ArgTable for 2.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 3.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 0.CNS_STR ref (By ref), 1 reg: rdx, byteAlignment=8]
fgArgTabEntry[arg 2 1.CNS_INT int (By ref), 1 reg: r8, byteAlignment=8]

Morphing args for 2.CALL:
argSlots=3, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rdx'):
               [000317] #---G+------              *  IND       ref   
               [000316] H----+------              \--*  CNS_INT(h) long   0xD1FFAB1E "Started enumerating project paths."
Replaced with placeholder node:
               [000318] ----------L-              *  ARGPLACE  ref   
Deferred argument ('rcx'):
               [000003] H----+------              *  CNS_INT(h) long   0xd1ffab1e method
Replaced with placeholder node:
               [000319] ----------L-              *  ARGPLACE  long  
Deferred argument ('r8'):
               [000001] -----+------              *  CNS_INT   int    2
Replaced with placeholder node:
               [000320] ----------L-              *  ARGPLACE  int   

Shuffled argument table:    rdx rcx r8 
ArgTable for 2.CALL after fgMorphArgs:
fgArgTabEntry[arg 1 317.IND ref (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 0 3.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=1, processed]
fgArgTabEntry[arg 2 1.CNS_INT int (By ref), 1 reg: r8, byteAlignment=8, lateArgInx=2, processed]


fgMorphTree BB01, STMT00001 (after)
               [000002] --CXG+------              *  CALL      ref    SolutionAnalyzer.Logger.Log
               [000317] #---G+------ arg1 in rdx  +--*  IND       ref   
               [000316] H----+------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Started enumerating project paths."
               [000003] H----+------ arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method
               [000001] -----+------ arg2 in r8   \--*  CNS_INT   int    2

fgMorphTree BB01, STMT00002 (before)
               [000011] -AC---------              *  ASG       ref   
               [000010] D------N----              +--*  LCL_VAR   ref    V07 tmp1         
               [000009] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000008] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token
Initializing arg info for 9.CALL:
ArgTable for 9.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 8.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]

Morphing args for 9.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000008] H----+------              *  CNS_INT(h) long   0xd1ffab1e token
Replaced with placeholder node:
               [000321] ----------L-              *  ARGPLACE  long  

Shuffled argument table:    rcx 
ArgTable for 9.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 8.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]


fgMorphTree BB01, STMT00002 (after)
               [000011] -AC--+------              *  ASG       ref   
               [000010] D----+-N----              +--*  LCL_VAR   ref    V07 tmp1         
               [000009] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000008] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

fgMorphTree BB01, STMT00003 (before)
               [000013] --C-G-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor
               [000012] ------------ this in rcx  +--*  LCL_VAR   ref    V07 tmp1         
               [000007] ------------ arg1         \--*  CNS_INT   int    100
Initializing arg info for 13.CALL:
ArgTable for 13.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 12.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 7.CNS_INT int (By ref), 1 reg: rdx, byteAlignment=8]

Morphing args for 13.CALL:
argSlots=2, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000012] -----+------              *  LCL_VAR   ref    V07 tmp1         
Replaced with placeholder node:
               [000322] ----------L-              *  ARGPLACE  ref   
Deferred argument ('rdx'):
               [000007] -----+------              *  CNS_INT   int    100
Replaced with placeholder node:
               [000323] ----------L-              *  ARGPLACE  int   

Shuffled argument table:    rcx rdx 
ArgTable for 13.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 12.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 7.CNS_INT int (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]


fgMorphTree BB01, STMT00003 (after)
               [000013] --CXG+------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor
               [000012] -----+------ this in rcx  +--*  LCL_VAR   ref    V07 tmp1         
               [000007] -----+------ arg1 in rdx  \--*  CNS_INT   int    100

fgMorphTree BB01, STMT00004 (before)
               [000016] -A----------              *  ASG       ref   
               [000015] D------N----              +--*  LCL_VAR   ref    V01 loc0         
               [000014] ------------              \--*  LCL_VAR   ref    V07 tmp1         
GenTreeNode creates assertion:
               [000016] -A----------              *  ASG       ref   
In BB01 New Local Copy     Assertion: V01 == V07 index=#01, mask=0000000000000001

fgMorphTree BB01, STMT00005 (before)
               [000019] -A----------              *  ASG       ref   
               [000018] D------N----              +--*  LCL_VAR   ref    V02 loc1         
               [000017] ------------              \--*  LCL_VAR   ref    V00 arg0         
GenTreeNode creates assertion:
               [000019] -A----------              *  ASG       ref   
In BB01 New Local Copy     Assertion: V02 == V00 index=#02, mask=0000000000000002

fgMorphTree BB01, STMT00006 (before)
               [000022] -A----------              *  ASG       int   
               [000021] D------N----              +--*  LCL_VAR   int    V03 loc2         
               [000020] ------------              \--*  CNS_INT   int    0
GenTreeNode creates assertion:
               [000022] -A----------              *  ASG       int   
In BB01 New Local Constant Assertion: V03 == 0 index=#03, mask=0000000000000004

Morphing BB02 of 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'

fgMorphTree BB02, STMT00008 (before)
               [000032] -A-XG-------              *  ASG       ref   
               [000031] D------N----              +--*  LCL_VAR   ref    V04 loc3         
               [000030] ---XG-------              \--*  INDEX     ref   
               [000028] ------------                 +--*  LCL_VAR   ref    V02 loc1         
               [000029] ------------                 \--*  LCL_VAR   int    V03 loc2         
GenTreeNode creates assertion:
               [000326] ---X--------              *  ARR_LENGTH int   
In BB02 New Local Constant Assertion: V02 != null index=#01, mask=0000000000000001

fgMorphTree BB02, STMT00008 (after)
               [000032] -A-XG+------              *  ASG       ref   
               [000031] D----+-N----              +--*  LCL_VAR   ref    V04 loc3         
               [000334] ---XG+------              \--*  COMMA     ref   
               [000327] ---X-+------                 +--*  ARR_BOUNDS_CHECK_Rng void  
               [000029] -----+------                 |  +--*  LCL_VAR   int    V03 loc2         
               [000326] ---X-+------                 |  \--*  ARR_LENGTH int   
               [000028] -----+------                 |     \--*  LCL_VAR   ref    V02 loc1         
               [000030] a---G+------                 \--*  IND       ref   
               [000333] -----+------                    \--*  ADD       byref 
               [000324] -----+------                       +--*  LCL_VAR   ref    V02 loc1         
               [000332] -----+------                       \--*  ADD       long  
               [000330] -----+------                          +--*  LSH       long  
               [000328] -----+------                          |  +--*  CAST      long <- int
               [000325] i----+------                          |  |  \--*  LCL_VAR   int    V03 loc2         
               [000329] -----+-N----                          |  \--*  CNS_INT   long   3
               [000331] -----+------                          \--*  CNS_INT   long   16 Fseq[#FirstElem]

fgMorphTree BB02, STMT00042 (before)
               [000197] ---X--------              *  NULLCHECK byte  
               [000196] ------------              \--*  LCL_VAR   ref    V04 loc3         
GenTreeNode creates assertion:
               [000197] ---X--------              *  NULLCHECK byte  
In BB02 New Local Constant Assertion: V04 != null index=#02, mask=0000000000000002

fgMorphTree BB02, STMT00010 (before)
               [000039] --C---------              *  JTRUE     void  
               [000038] --C---------              \--*  EQ        int   
               [000195] --C-G-------                 +--*  CALL      int    System.String.EndsWith
               [000033] ------------ this in rcx     |  +--*  LCL_VAR   ref    V04 loc3         
               [000193] ------------ arg1            |  +--*  CNS_STR   ref   <string constant>
               [000194] ------------ arg2            |  \--*  CNS_INT   int    0
               [000037] ------------                 \--*  CNS_INT   int    0
Initializing arg info for 195.CALL:
ArgTable for 195.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 33.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 193.CNS_STR ref (By ref), 1 reg: rdx, byteAlignment=8]
fgArgTabEntry[arg 2 194.CNS_INT int (By ref), 1 reg: r8, byteAlignment=8]

Morphing args for 195.CALL:
argSlots=3, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rdx'):
               [000336] #---G+------              *  IND       ref   
               [000335] H----+------              \--*  CNS_INT(h) long   0xD1FFAB1E ".csproj"
Replaced with placeholder node:
               [000337] ----------L-              *  ARGPLACE  ref   
Deferred argument ('rcx'):
               [000033] -----+------              *  LCL_VAR   ref    V04 loc3         
Replaced with placeholder node:
               [000338] ----------L-              *  ARGPLACE  ref   
Deferred argument ('r8'):
               [000194] -----+------              *  CNS_INT   int    0
Replaced with placeholder node:
               [000339] ----------L-              *  ARGPLACE  int   

Shuffled argument table:    rdx rcx r8 
ArgTable for 195.CALL after fgMorphArgs:
fgArgTabEntry[arg 1 336.IND ref (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 0 33.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=1, processed]
fgArgTabEntry[arg 2 194.CNS_INT int (By ref), 1 reg: r8, byteAlignment=8, lateArgInx=2, processed]


fgMorphTree BB02, STMT00010 (after)
               [000039] --CXG+------              *  JTRUE     void  
               [000038] J-CXG+-N----              \--*  EQ        int   
               [000195] --CXG+------                 +--*  CALL      int    System.String.EndsWith
               [000336] #---G+------ arg1 in rdx     |  +--*  IND       ref   
               [000335] H----+------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E ".csproj"
               [000033] -----+------ this in rcx     |  +--*  LCL_VAR   ref    V04 loc3         
               [000194] -----+------ arg2 in r8      |  \--*  CNS_INT   int    0
               [000037] -----+------                 \--*  CNS_INT   int    0

Morphing BB03 of 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'

fgMorphTree BB03, STMT00043 (before)
               [000204] -A-XG-------              *  ASG       int   
               [000203] ---XG--N----              +--*  FIELD     int    _version
               [000177] ------------              |  \--*  LCL_VAR   ref    V01 loc0         
               [000202] ---XG-------              \--*  ADD       int   
               [000200] ---XG-------                 +--*  FIELD     int    _version
               [000199] ------------                 |  \--*  LCL_VAR   ref    V01 loc0         
               [000201] ------------                 \--*  CNS_INT   int    1

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000203] ---XG--N----              *  IND       int   
               [000341] -----+------              \--*  ADD       byref 
               [000177] -----+------                 +--*  LCL_VAR   ref    V01 loc0         
               [000340] -----+------                 \--*  CNS_INT   long   20 field offset Fseq[_version]
GenTreeNode creates assertion:
               [000203] ---XG--N----              *  IND       int   
In BB03 New Local Constant Assertion: V01 != null index=#01, mask=0000000000000001

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000200] ---XG-------              *  IND       int   
               [000343] -----+------              \--*  ADD       byref 
               [000199] -----+------                 +--*  LCL_VAR   ref    V01 loc0         
               [000342] -----+------                 \--*  CNS_INT   long   20 field offset Fseq[_version]

fgMorphTree BB03, STMT00043 (after)
               [000204] -A-XG+------              *  ASG       int   
               [000203] ---XG+-N----              +--*  IND       int   
               [000341] -----+------              |  \--*  ADD       byref 
               [000177] -----+------              |     +--*  LCL_VAR   ref    V01 loc0         
               [000340] -----+------              |     \--*  CNS_INT   long   20 field offset Fseq[_version]
               [000202] ---XG+------              \--*  ADD       int   
               [000200] ---XG+------                 +--*  IND       int   
               [000343] -----+------                 |  \--*  ADD       byref 
               [000199] -----+------                 |     +--*  LCL_VAR   ref    V01 loc0         
               [000342] -----+------                 |     \--*  CNS_INT   long   20 field offset Fseq[_version]
               [000201] -----+------                 \--*  CNS_INT   int    1

fgMorphTree BB03, STMT00044 (before)
               [000208] -A-XG-------              *  ASG       ref   
               [000207] D------N----              +--*  LCL_VAR   ref    V18 tmp12        
               [000206] ---XG-------              \--*  FIELD     ref    _items
               [000205] ------------                 \--*  LCL_VAR   ref    V01 loc0         

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000206] ---XG-------              *  IND       ref   
               [000345] -----+------              \--*  ADD       byref 
               [000205] -----+------                 +--*  LCL_VAR   ref    V01 loc0         
               [000344] -----+------                 \--*  CNS_INT   long   8 field offset Fseq[_items]

fgMorphTree BB03, STMT00044 (after)
               [000208] -A-XG+------              *  ASG       ref   
               [000207] D----+-N----              +--*  LCL_VAR   ref    V18 tmp12        
               [000206] ---XG+------              \--*  IND       ref   
               [000345] -----+------                 \--*  ADD       byref 
               [000205] -----+------                    +--*  LCL_VAR   ref    V01 loc0         
               [000344] -----+------                    \--*  CNS_INT   long   8 field offset Fseq[_items]

fgMorphTree BB03, STMT00045 (before)
               [000212] -A-XG-------              *  ASG       int   
               [000211] D------N----              +--*  LCL_VAR   int    V19 tmp13        
               [000210] ---XG-------              \--*  FIELD     int    _size
               [000209] ------------                 \--*  LCL_VAR   ref    V01 loc0         

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000210] ---XG-------              *  IND       int   
               [000347] -----+------              \--*  ADD       byref 
               [000209] -----+------                 +--*  LCL_VAR   ref    V01 loc0         
               [000346] -----+------                 \--*  CNS_INT   long   16 field offset Fseq[_size]
GenTreeNode creates assertion:
               [000212] -A-XG-------              *  ASG       int   
In BB03 New Local Subrange Assertion: V19 in [-2147483648..2147483647] index=#02, mask=0000000000000002

fgMorphTree BB03, STMT00045 (after)
               [000212] -A-XG+------              *  ASG       int   
               [000211] D----+-N----              +--*  LCL_VAR   int    V19 tmp13        
               [000210] ---XG+------              \--*  IND       int   
               [000347] -----+------                 \--*  ADD       byref 
               [000209] -----+------                    +--*  LCL_VAR   ref    V01 loc0         
               [000346] -----+------                    \--*  CNS_INT   long   16 field offset Fseq[_size]

fgMorphTree BB03, STMT00046 (before)
               [000217] ---X--------              *  JTRUE     void  
               [000216] N--X-----U--              \--*  GE        int   
               [000213] ------------                 +--*  LCL_VAR   int    V19 tmp13        
               [000215] ---X--------                 \--*  ARR_LENGTH int   
               [000214] ------------                    \--*  LCL_VAR   ref    V18 tmp12        
GenTreeNode creates assertion:
               [000215] ---X--------              *  ARR_LENGTH int   
In BB03 New Local Constant Assertion: V18 != null index=#03, mask=0000000000000004

Morphing BB05 of 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'

fgMorphTree BB05, STMT00048 (before)
               [000225] -A-XG-------              *  ASG       int   
               [000224] ---XG--N----              +--*  FIELD     int    _size
               [000220] ------------              |  \--*  LCL_VAR   ref    V01 loc0         
               [000223] ------------              \--*  ADD       int   
               [000221] ------------                 +--*  LCL_VAR   int    V19 tmp13        
               [000222] ------------                 \--*  CNS_INT   int    1

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000224] ---XG--N----              *  IND       int   
               [000349] -----+------              \--*  ADD       byref 
               [000220] -----+------                 +--*  LCL_VAR   ref    V01 loc0         
               [000348] -----+------                 \--*  CNS_INT   long   16 field offset Fseq[_size]
GenTreeNode creates assertion:
               [000224] ---XG--N----              *  IND       int   
In BB05 New Local Constant Assertion: V01 != null index=#01, mask=0000000000000001

fgMorphTree BB05, STMT00048 (after)
               [000225] -A-XG+------              *  ASG       int   
               [000224] ---XG+-N----              +--*  IND       int   
               [000349] -----+------              |  \--*  ADD       byref 
               [000220] -----+------              |     +--*  LCL_VAR   ref    V01 loc0         
               [000348] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[_size]
               [000223] -----+------              \--*  ADD       int   
               [000221] -----+------                 +--*  LCL_VAR   int    V19 tmp13        
               [000222] -----+------                 \--*  CNS_INT   int    1

fgMorphTree BB05, STMT00049 (before)
               [000229] --CXG-------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST
               [000226] ------------ arg0         +--*  LCL_VAR   ref    V18 tmp12        
               [000227] ------------ arg1         +--*  LCL_VAR   int    V19 tmp13        
               [000228] ------------ arg2         \--*  LCL_VAR   ref    V04 loc3         
Initializing arg info for 229.CALL:
ArgTable for 229.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 226.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 227.LCL_VAR int (By ref), 1 reg: rdx, byteAlignment=8]
fgArgTabEntry[arg 2 228.LCL_VAR ref (By ref), 1 reg: r8, byteAlignment=8]

Morphing args for 229.CALL:
argSlots=3, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000226] -----+------              *  LCL_VAR   ref    V18 tmp12        
Replaced with placeholder node:
               [000350] ----------L-              *  ARGPLACE  ref   
Deferred argument ('rdx'):
               [000227] -----+------              *  LCL_VAR   int    V19 tmp13        
Replaced with placeholder node:
               [000351] ----------L-              *  ARGPLACE  int   
Deferred argument ('r8'):
               [000228] -----+------              *  LCL_VAR   ref    V04 loc3         
Replaced with placeholder node:
               [000352] ----------L-              *  ARGPLACE  ref   

Shuffled argument table:    rcx rdx r8 
ArgTable for 229.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 226.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 227.LCL_VAR int (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]
fgArgTabEntry[arg 2 228.LCL_VAR ref (By ref), 1 reg: r8, byteAlignment=8, lateArgInx=2, processed]


fgMorphTree BB05, STMT00049 (after)
               [000229] --CXG+------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST
               [000226] -----+------ arg0 in rcx  +--*  LCL_VAR   ref    V18 tmp12        
               [000227] -----+------ arg1 in rdx  +--*  LCL_VAR   int    V19 tmp13        
               [000228] -----+------ arg2 in r8   \--*  LCL_VAR   ref    V04 loc3         

Morphing BB06 of 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'

fgMorphTree BB06, STMT00047 (before)
               [000219] --C-G-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize
               [000218] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         
               [000178] ------------ arg1         \--*  LCL_VAR   ref    V04 loc3         
Initializing arg info for 219.CALL:
ArgTable for 219.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 218.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 178.LCL_VAR ref (By ref), 1 reg: rdx, byteAlignment=8]

Morphing args for 219.CALL:
argSlots=2, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000218] -----+------              *  LCL_VAR   ref    V01 loc0         
Replaced with placeholder node:
               [000353] ----------L-              *  ARGPLACE  ref   
Deferred argument ('rdx'):
               [000178] -----+------              *  LCL_VAR   ref    V04 loc3         
Replaced with placeholder node:
               [000354] ----------L-              *  ARGPLACE  ref   

Shuffled argument table:    rcx rdx 
ArgTable for 219.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 218.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 178.LCL_VAR ref (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]


fgMorphTree BB06, STMT00047 (after)
               [000219] --CXG+------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize
               [000218] -----+------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         
               [000178] -----+------ arg1 in rdx  \--*  LCL_VAR   ref    V04 loc3         

Morphing BB07 of 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'

fgMorphTree BB07, STMT00050 (before)
               [000232] -A----------              *  ASG       ref   
               [000231] D------N----              +--*  LCL_VAR   ref    V18 tmp12        
               [000230] ------------              \--*  CNS_INT   ref    null
GenTreeNode creates assertion:
               [000232] -A----------              *  ASG       ref   
In BB07 New Local Constant Assertion: V18 == null index=#01, mask=0000000000000001

Morphing BB08 of 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'

fgMorphTree BB08, STMT00053 (before)
               [000247] -AC-G-------              *  ASG       ref   
               [000246] D------N----              +--*  LCL_VAR   ref    V20 tmp14        
               [000236] --C-G-------              \--*  CALL      ref    System.IO.EnumerationOptions.FromSearchOption
               [000235] ------------ arg0            \--*  CNS_INT   int    1
Initializing arg info for 236.CALL:
ArgTable for 236.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 235.CNS_INT int (By ref), 1 reg: rcx, byteAlignment=8]

Morphing args for 236.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000235] -----+------              *  CNS_INT   int    1
Replaced with placeholder node:
               [000355] ----------L-              *  ARGPLACE  int   

Shuffled argument table:    rcx 
ArgTable for 236.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 235.CNS_INT int (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]


fgMorphTree BB08, STMT00053 (after)
               [000247] -ACXG+------              *  ASG       ref   
               [000246] D----+-N----              +--*  LCL_VAR   ref    V20 tmp14        
               [000236] --CXG+------              \--*  CALL      ref    System.IO.EnumerationOptions.FromSearchOption
               [000235] -----+------ arg0 in rcx     \--*  CNS_INT   int    1

fgMorphTree BB08, STMT00013 (before)
               [000054] -AC---------              *  ASG       ref   
               [000053] D------N----              +--*  LCL_VAR   ref    V09 tmp3         
               [000245] --C-G-------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths
               [000040] ------------ arg0            +--*  LCL_VAR   ref    V04 loc3         
               [000242] ------------ arg1            +--*  CNS_STR   ref   <string constant>
               [000243] ------------ arg2            +--*  CNS_INT   int    2
               [000244] ------------ arg3            \--*  LCL_VAR   ref    V20 tmp14        
Initializing arg info for 245.CALL:
ArgTable for 245.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 40.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 242.CNS_STR ref (By ref), 1 reg: rdx, byteAlignment=8]
fgArgTabEntry[arg 2 243.CNS_INT int (By ref), 1 reg: r8, byteAlignment=8]
fgArgTabEntry[arg 3 244.LCL_VAR ref (By ref), 1 reg: r9, byteAlignment=8]

Morphing args for 245.CALL:
argSlots=4, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rdx'):
               [000357] #---G+------              *  IND       ref   
               [000356] H----+------              \--*  CNS_INT(h) long   0xD1FFAB1E "*"
Replaced with placeholder node:
               [000358] ----------L-              *  ARGPLACE  ref   
Deferred argument ('rcx'):
               [000040] -----+------              *  LCL_VAR   ref    V04 loc3         
Replaced with placeholder node:
               [000359] ----------L-              *  ARGPLACE  ref   
Deferred argument ('r9'):
               [000244] -----+------              *  LCL_VAR   ref    V20 tmp14        
Replaced with placeholder node:
               [000360] ----------L-              *  ARGPLACE  ref   
Deferred argument ('r8'):
               [000243] -----+------              *  CNS_INT   int    2
Replaced with placeholder node:
               [000361] ----------L-              *  ARGPLACE  int   

Shuffled argument table:    rdx rcx r9 r8 
ArgTable for 245.CALL after fgMorphArgs:
fgArgTabEntry[arg 1 357.IND ref (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 0 40.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=1, processed]
fgArgTabEntry[arg 3 244.LCL_VAR ref (By ref), 1 reg: r9, byteAlignment=8, lateArgInx=2, processed]
fgArgTabEntry[arg 2 243.CNS_INT int (By ref), 1 reg: r8, byteAlignment=8, lateArgInx=3, processed]


fgMorphTree BB08, STMT00013 (after)
               [000054] -ACXG+------              *  ASG       ref   
               [000053] D----+-N----              +--*  LCL_VAR   ref    V09 tmp3         
               [000245] --CXG+------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths
               [000357] #---G+------ arg1 in rdx     +--*  IND       ref   
               [000356] H----+------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*"
               [000040] -----+------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         
               [000244] -----+------ arg3 in r9      +--*  LCL_VAR   ref    V20 tmp14        
               [000243] -----+------ arg2 in r8      \--*  CNS_INT   int    2

fgMorphTree BB08, STMT00012 (before)
               [000052] -ACXG-------              *  ASG       ref   
               [000051] D------N----              +--*  LCL_VAR   ref    V08 tmp2         
               [000050] --CXG-------              \--*  COMMA     ref   
               [000049] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000047] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000048] ------------ arg1            |  \--*  CNS_INT   int    35
               [000045] ----G-------                 \--*  FIELD     ref    <>9__2_0
Initializing arg info for 49.CALL:
ArgTable for 49.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 47.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 48.CNS_INT int (By ref), 1 reg: rdx, byteAlignment=8]

Morphing args for 49.CALL:
argSlots=2, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000047] -----+------              *  CNS_INT   long   0x7ffc7e4c17e0
Replaced with placeholder node:
               [000362] ----------L-              *  ARGPLACE  long  
Deferred argument ('rdx'):
               [000048] -----+------              *  CNS_INT   int    35
Replaced with placeholder node:
               [000363] ----------L-              *  ARGPLACE  int   

Shuffled argument table:    rcx rdx 
ArgTable for 49.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 47.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 48.CNS_INT int (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]


fgMorphTree BB08, STMT00012 (after)
               [000052] -ACXG+------              *  ASG       ref   
               [000051] D----+-N----              +--*  LCL_VAR   ref    V08 tmp2         
               [000050] --CXG+------              \--*  COMMA     ref   
               [000049] H-CXG+------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000047] -----+------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000048] -----+------ arg1 in rdx     |  \--*  CNS_INT   int    35
               [000045] n---G+------                 \--*  IND       ref   
               [000364] I----+------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0]

fgMorphTree BB08, STMT00015 (before)
               [000062] -A----------              *  ASG       ref   
               [000061] D------N----              +--*  LCL_VAR   ref    V10 tmp4         
               [000055] ------------              \--*  LCL_VAR   ref    V09 tmp3         
GenTreeNode creates assertion:
               [000062] -A----------              *  ASG       ref   
In BB08 New Local Copy     Assertion: V10 == V09 index=#01, mask=0000000000000001

fgMorphTree BB08, STMT00016 (before)
               [000065] -A----------              *  ASG       ref   
               [000064] D------N----              +--*  LCL_VAR   ref    V11 tmp5         
               [000056] ------------              \--*  LCL_VAR   ref    V08 tmp2         
GenTreeNode creates assertion:
               [000065] -A----------              *  ASG       ref   
In BB08 New Local Copy     Assertion: V11 == V08 index=#02, mask=0000000000000002

fgMorphTree BB08, STMT00014 (before)
               [000060] ------------              *  JTRUE     void  
               [000059] ------------              \--*  NE        int   
               [000057] ------------                 +--*  LCL_VAR   ref    V08 tmp2         
               [000058] ------------                 \--*  CNS_INT   ref    null

Morphing BB09 of 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'

fgMorphTree BB09, STMT00033 (before)
               [000160] -AC---------              *  ASG       ref   
               [000159] D------N----              +--*  LCL_VAR   ref    V17 tmp11        
               [000158] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000157] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token
Initializing arg info for 158.CALL:
ArgTable for 158.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 157.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]

Morphing args for 158.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000157] H----+------              *  CNS_INT(h) long   0xd1ffab1e token
Replaced with placeholder node:
               [000365] ----------L-              *  ARGPLACE  long  

Shuffled argument table:    rcx 
ArgTable for 158.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 157.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]


fgMorphTree BB09, STMT00033 (after)
               [000160] -AC--+------              *  ASG       ref   
               [000159] D----+-N----              +--*  LCL_VAR   ref    V17 tmp11        
               [000158] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000157] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

fgMorphTree BB09, STMT00058 (before)
               [000262] -ACXG-------              *  ASG       ref   
               [000261] D------N----              +--*  LCL_VAR   ref    V21 tmp15        
               [000155] --CXG-------              \--*  COMMA     ref   
               [000154] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000152] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000153] ------------ arg1            |  \--*  CNS_INT   int    35
               [000150] ----G-------                 \--*  FIELD     ref    <>9
Initializing arg info for 154.CALL:
ArgTable for 154.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 152.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 153.CNS_INT int (By ref), 1 reg: rdx, byteAlignment=8]

Morphing args for 154.CALL:
argSlots=2, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000152] -----+------              *  CNS_INT   long   0x7ffc7e4c17e0
Replaced with placeholder node:
               [000366] ----------L-              *  ARGPLACE  long  
Deferred argument ('rdx'):
               [000153] -----+------              *  CNS_INT   int    35
Replaced with placeholder node:
               [000367] ----------L-              *  ARGPLACE  int   

Shuffled argument table:    rcx rdx 
ArgTable for 154.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 152.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 153.CNS_INT int (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]


fgMorphTree BB09, STMT00058 (after)
               [000262] -ACXG+------              *  ASG       ref   
               [000261] D----+-N----              +--*  LCL_VAR   ref    V21 tmp15        
               [000155] --CXG+------              \--*  COMMA     ref   
               [000154] H-CXG+------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000152] -----+------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000153] -----+------ arg1 in rdx     |  \--*  CNS_INT   int    35
               [000150] n---G+------                 \--*  IND       ref   
               [000368] I----+------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9]

fgMorphTree BB09, STMT00054 (before)
               [000252] ------------              *  JTRUE     void  
               [000251] ------------              \--*  EQ        int   
               [000249] ------------                 +--*  LCL_VAR   ref    V21 tmp15        
               [000250] ------------                 \--*  CNS_INT   ref    null

Morphing BB12 of 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'

fgMorphTree BB12, STMT00055 (before)
               [000255] -A-XG-------              *  ASG       ref   
               [000254] ---XG--N----              +--*  FIELD     ref    _target
               [000161] ------------              |  \--*  LCL_VAR   ref    V17 tmp11        
               [000253] ------------              \--*  LCL_VAR   ref    V21 tmp15        

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000254] ---XG--N----              *  IND       ref   
               [000370] -----+------              \--*  ADD       byref 
               [000161] -----+------                 +--*  LCL_VAR   ref    V17 tmp11        
               [000369] -----+------                 \--*  CNS_INT   long   8 field offset Fseq[_target]
GenTreeNode creates assertion:
               [000254] ---XG--N----              *  IND       ref   
In BB12 New Local Constant Assertion: V17 != null index=#01, mask=0000000000000001

fgMorphTree BB12, STMT00055 (after)
               [000255] -A-XG+------              *  ASG       ref   
               [000254] ---XG+-N----              +--*  IND       ref   
               [000370] -----+------              |  \--*  ADD       byref 
               [000161] -----+------              |     +--*  LCL_VAR   ref    V17 tmp11        
               [000369] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
               [000253] -----+------              \--*  LCL_VAR   ref    V21 tmp15        

fgMorphTree BB12, STMT00056 (before)
               [000259] -A-XG-------              *  ASG       long  
               [000258] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000256] ------------              |  \--*  LCL_VAR   ref    V17 tmp11        
               [000156] ------------              \--*  FTN_ADDR  long   <>c.<GetProjectPaths>b__2_0


Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000258] ---XG--N----              *  IND       long  
               [000372] -----+------              \--*  ADD       byref 
               [000256] -----+------                 +--*  LCL_VAR   ref    V17 tmp11        
               [000371] -----+------                 \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]

fgMorphTree BB12, STMT00056 (after)
               [000259] -A-XG+------              *  ASG       long  
               [000258] ---XG+-N----              +--*  IND       long  
               [000372] -----+------              |  \--*  ADD       byref 
               [000256] -----+------              |     +--*  LCL_VAR   ref    V17 tmp11        
               [000371] -----+------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
               [000156] H----+------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

fgMorphTree BB12, STMT00035 (before)
               [000171] -ACXG-------              *  COMMA     ref   
               [000170] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000168] ------------ arg0         |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000169] ------------ arg1         |  \--*  CNS_INT   int    35
               [000166] -A--G-------              \--*  ASG       ref   
               [000165] ----G--N----                 +--*  FIELD     ref    <>9__2_0
               [000164] ------------                 \--*  LCL_VAR   ref    V17 tmp11        
Initializing arg info for 170.CALL:
ArgTable for 170.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 168.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 169.CNS_INT int (By ref), 1 reg: rdx, byteAlignment=8]

Morphing args for 170.CALL:
argSlots=2, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000168] -----+------              *  CNS_INT   long   0x7ffc7e4c17e0
Replaced with placeholder node:
               [000373] ----------L-              *  ARGPLACE  long  
Deferred argument ('rdx'):
               [000169] -----+------              *  CNS_INT   int    35
Replaced with placeholder node:
               [000374] ----------L-              *  ARGPLACE  int   

Shuffled argument table:    rcx rdx 
ArgTable for 170.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 168.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 169.CNS_INT int (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]


fgMorphTree BB12, STMT00035 (after)
               [000171] -ACXG+------              *  COMMA     void  
               [000170] H-CXG+------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000168] -----+------ arg0 in rcx  |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000169] -----+------ arg1 in rdx  |  \--*  CNS_INT   int    35
               [000166] -A--G+------              \--*  ASG       ref   
               [000165] n---G+-N----                 +--*  IND       ref   
               [000375] I----+------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0]
               [000164] -----+------                 \--*  LCL_VAR   ref    V17 tmp11        

fgMorphTree BB12, STMT00036 (before)
               [000175] -A----------              *  ASG       ref   
               [000174] D------N----              +--*  LCL_VAR   ref    V11 tmp5         
               [000163] ------------              \--*  LCL_VAR   ref    V17 tmp11        
GenTreeNode creates assertion:
               [000175] -A----------              *  ASG       ref   
In BB12 New Local Copy     Assertion: V11 == V17 index=#02, mask=0000000000000002

Morphing BB14 of 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'

fgMorphTree BB14, STMT00018 (before)
               [000075] -AC---------              *  ASG       ref   
               [000074] D------N----              +--*  LCL_VAR   ref    V05 loc4         
               [000071] --C-G-------              \--*  CALL      ref    System.Linq.Enumerable.Where
               [000072] H----------- arg0            +--*  CNS_INT(h) long   0xd1ffab1e method
               [000069] ------------ arg1            +--*  LCL_VAR   ref    V10 tmp4         
               [000070] ------------ arg2            \--*  LCL_VAR   ref    V11 tmp5         
Initializing arg info for 71.CALL:
ArgTable for 71.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 72.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 69.LCL_VAR ref (By ref), 1 reg: rdx, byteAlignment=8]
fgArgTabEntry[arg 2 70.LCL_VAR ref (By ref), 1 reg: r8, byteAlignment=8]

Morphing args for 71.CALL:
argSlots=3, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('r8'):
               [000070] -----+------              *  LCL_VAR   ref    V11 tmp5         
Replaced with placeholder node:
               [000376] ----------L-              *  ARGPLACE  ref   
Deferred argument ('rdx'):
               [000069] -----+------              *  LCL_VAR   ref    V10 tmp4         
Replaced with placeholder node:
               [000377] ----------L-              *  ARGPLACE  ref   
Deferred argument ('rcx'):
               [000072] H----+------              *  CNS_INT(h) long   0xd1ffab1e method
Replaced with placeholder node:
               [000378] ----------L-              *  ARGPLACE  long  

Shuffled argument table:    r8 rdx rcx 
ArgTable for 71.CALL after fgMorphArgs:
fgArgTabEntry[arg 2 70.LCL_VAR ref (By ref), 1 reg: r8, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 69.LCL_VAR ref (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]
fgArgTabEntry[arg 0 72.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=2, processed]


fgMorphTree BB14, STMT00018 (after)
               [000075] -ACXG+------              *  ASG       ref   
               [000074] D----+-N----              +--*  LCL_VAR   ref    V05 loc4         
               [000071] --CXG+------              \--*  CALL      ref    System.Linq.Enumerable.Where
               [000070] -----+------ arg2 in r8      +--*  LCL_VAR   ref    V11 tmp5         
               [000069] -----+------ arg1 in rdx     +--*  LCL_VAR   ref    V10 tmp4         
               [000072] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

fgMorphTree BB14, STMT00061 (before)
               [000283] -ACXG-------              *  ASG       ref   
               [000282] D------N----              +--*  LCL_VAR   ref    V23 tmp17        
               [000276] --CXG-------              \--*  COMMA     ref   
               [000275] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000273] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc7e783cd8
               [000274] ------------ arg1            |  \--*  CNS_INT   int    40
               [000271] ----G-------                 \--*  FIELD     ref    <Compatible>k__BackingField
Initializing arg info for 275.CALL:
ArgTable for 275.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 273.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 274.CNS_INT int (By ref), 1 reg: rdx, byteAlignment=8]

Morphing args for 275.CALL:
argSlots=2, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000273] -----+------              *  CNS_INT   long   0x7ffc7e783cd8
Replaced with placeholder node:
               [000379] ----------L-              *  ARGPLACE  long  
Deferred argument ('rdx'):
               [000274] -----+------              *  CNS_INT   int    40
Replaced with placeholder node:
               [000380] ----------L-              *  ARGPLACE  int   

Shuffled argument table:    rcx rdx 
ArgTable for 275.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 273.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 274.CNS_INT int (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]


fgMorphTree BB14, STMT00061 (after)
               [000283] -ACXG+------              *  ASG       ref   
               [000282] D----+-N----              +--*  LCL_VAR   ref    V23 tmp17        
               [000276] --CXG+------              \--*  COMMA     ref   
               [000275] H-CXG+------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000273] -----+------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e783cd8
               [000274] -----+------ arg1 in rdx     |  \--*  CNS_INT   int    40
               [000271] n---G+------                 \--*  IND       ref   
               [000381] I----+------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<Compatible>k__BackingField]

fgMorphTree BB14, STMT00063 (before)
               [000290] -AC-G-------              *  ASG       ref   
               [000289] D------N----              +--*  LCL_VAR   ref    V24 tmp18        
               [000281] --C-G-------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths
               [000077] ------------ arg0            +--*  LCL_VAR   ref    V04 loc3         
               [000278] ------------ arg1            +--*  CNS_STR   ref   <string constant>
               [000279] ------------ arg2            +--*  CNS_INT   int    1
               [000280] ------------ arg3            \--*  LCL_VAR   ref    V23 tmp17        
Initializing arg info for 281.CALL:
ArgTable for 281.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 77.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 278.CNS_STR ref (By ref), 1 reg: rdx, byteAlignment=8]
fgArgTabEntry[arg 2 279.CNS_INT int (By ref), 1 reg: r8, byteAlignment=8]
fgArgTabEntry[arg 3 280.LCL_VAR ref (By ref), 1 reg: r9, byteAlignment=8]

Morphing args for 281.CALL:
argSlots=4, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rdx'):
               [000383] #---G+------              *  IND       ref   
               [000382] H----+------              \--*  CNS_INT(h) long   0xD1FFAB1E "*.csproj"
Replaced with placeholder node:
               [000384] ----------L-              *  ARGPLACE  ref   
Deferred argument ('rcx'):
               [000077] -----+------              *  LCL_VAR   ref    V04 loc3         
Replaced with placeholder node:
               [000385] ----------L-              *  ARGPLACE  ref   
Deferred argument ('r9'):
               [000280] -----+------              *  LCL_VAR   ref    V23 tmp17        
Replaced with placeholder node:
               [000386] ----------L-              *  ARGPLACE  ref   
Deferred argument ('r8'):
               [000279] -----+------              *  CNS_INT   int    1
Replaced with placeholder node:
               [000387] ----------L-              *  ARGPLACE  int   

Shuffled argument table:    rdx rcx r9 r8 
ArgTable for 281.CALL after fgMorphArgs:
fgArgTabEntry[arg 1 383.IND ref (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 0 77.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=1, processed]
fgArgTabEntry[arg 3 280.LCL_VAR ref (By ref), 1 reg: r9, byteAlignment=8, lateArgInx=2, processed]
fgArgTabEntry[arg 2 279.CNS_INT int (By ref), 1 reg: r8, byteAlignment=8, lateArgInx=3, processed]


fgMorphTree BB14, STMT00063 (after)
               [000290] -ACXG+------              *  ASG       ref   
               [000289] D----+-N----              +--*  LCL_VAR   ref    V24 tmp18        
               [000281] --CXG+------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths
               [000383] #---G+------ arg1 in rdx     +--*  IND       ref   
               [000382] H----+------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*.csproj"
               [000077] -----+------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         
               [000280] -----+------ arg3 in r9      +--*  LCL_VAR   ref    V23 tmp17        
               [000279] -----+------ arg2 in r8      \--*  CNS_INT   int    1

fgMorphTree BB14, STMT00062 (before)
               [000288] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
               [000076] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         
               [000286] ---XG------- arg1         +--*  FIELD     int    _size
               [000285] ------------              |  \--*  LCL_VAR   ref    V01 loc0         
               [000287] ------------ arg2         \--*  LCL_VAR   ref    V24 tmp18        
Initializing arg info for 288.CALL:
ArgTable for 288.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 76.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 286.FIELD int (By ref), 1 reg: rdx, byteAlignment=8]
fgArgTabEntry[arg 2 287.LCL_VAR ref (By ref), 1 reg: r8, byteAlignment=8]

Morphing args for 288.CALL:

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000286] ---XG-------              *  IND       int   
               [000389] -----+------              \--*  ADD       byref 
               [000285] -----+------                 +--*  LCL_VAR   ref    V01 loc0         
               [000388] -----+------                 \--*  CNS_INT   long   16 field offset Fseq[_size]
GenTreeNode creates assertion:
               [000286] ---XG-------              *  IND       int   
In BB14 New Local Constant Assertion: V01 != null index=#01, mask=0000000000000001
argSlots=3, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rdx'):
               [000286] ---XG+------              *  IND       int   
               [000389] -----+------              \--*  ADD       byref 
               [000285] -----+------                 +--*  LCL_VAR   ref    V01 loc0         
               [000388] -----+------                 \--*  CNS_INT   long   16 field offset Fseq[_size]
Replaced with placeholder node:
               [000390] ----------L-              *  ARGPLACE  int   
Deferred argument ('rcx'):
               [000076] -----+------              *  LCL_VAR   ref    V01 loc0         
Replaced with placeholder node:
               [000391] ----------L-              *  ARGPLACE  ref   
Deferred argument ('r8'):
               [000287] -----+------              *  LCL_VAR   ref    V24 tmp18        
Replaced with placeholder node:
               [000392] ----------L-              *  ARGPLACE  ref   

Shuffled argument table:    rdx rcx r8 
ArgTable for 288.CALL after fgMorphArgs:
fgArgTabEntry[arg 1 286.IND int (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 0 76.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=1, processed]
fgArgTabEntry[arg 2 287.LCL_VAR ref (By ref), 1 reg: r8, byteAlignment=8, lateArgInx=2, processed]


fgMorphTree BB14, STMT00062 (after)
               [000288] --CXG+------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
               [000286] ---XG+------ arg1 in rdx  +--*  IND       int   
               [000389] -----+------              |  \--*  ADD       byref 
               [000285] -----+------              |     +--*  LCL_VAR   ref    V01 loc0         
               [000388] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[_size]
               [000076] -----+------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         
               [000287] -----+------ arg2 in r8   \--*  LCL_VAR   ref    V24 tmp18        

fgMorphTree BB14, STMT00021 (before)
               [000091] -ACXG-------              *  ASG       ref   
               [000090] D------N----              +--*  LCL_VAR   ref    V12 tmp6         
               [000089] --CXG-------              \--*  COMMA     ref   
               [000088] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000086] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000087] ------------ arg1            |  \--*  CNS_INT   int    35
               [000084] ----G-------                 \--*  FIELD     ref    <>9__2_1
Initializing arg info for 88.CALL:
ArgTable for 88.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 86.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 87.CNS_INT int (By ref), 1 reg: rdx, byteAlignment=8]

Morphing args for 88.CALL:
argSlots=2, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000086] -----+------              *  CNS_INT   long   0x7ffc7e4c17e0
Replaced with placeholder node:
               [000393] ----------L-              *  ARGPLACE  long  
Deferred argument ('rdx'):
               [000087] -----+------              *  CNS_INT   int    35
Replaced with placeholder node:
               [000394] ----------L-              *  ARGPLACE  int   

Shuffled argument table:    rcx rdx 
ArgTable for 88.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 86.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 87.CNS_INT int (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]


fgMorphTree BB14, STMT00021 (after)
               [000091] -ACXG+------              *  ASG       ref   
               [000090] D----+-N----              +--*  LCL_VAR   ref    V12 tmp6         
               [000089] --CXG+------              \--*  COMMA     ref   
               [000088] H-CXG+------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000086] -----+------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000087] -----+------ arg1 in rdx     |  \--*  CNS_INT   int    35
               [000084] n---G+------                 \--*  IND       ref   
               [000395] I----+------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1]

fgMorphTree BB14, STMT00023 (before)
               [000098] -A----------              *  ASG       ref   
               [000097] D------N----              +--*  LCL_VAR   ref    V13 tmp7         
               [000082] ------------              \--*  LCL_VAR   ref    V01 loc0         
GenTreeNode creates assertion:
               [000098] -A----------              *  ASG       ref   
In BB14 New Local Copy     Assertion: V13 == V01 index=#02, mask=0000000000000002

fgMorphTree BB14, STMT00024 (before)
               [000101] -A----------              *  ASG       ref   
               [000100] D------N----              +--*  LCL_VAR   ref    V14 tmp8         
               [000083] ------------              \--*  LCL_VAR   ref    V05 loc4         
GenTreeNode creates assertion:
               [000101] -A----------              *  ASG       ref   
In BB14 New Local Copy     Assertion: V14 == V05 index=#03, mask=0000000000000004

fgMorphTree BB14, STMT00025 (before)
               [000104] -A----------              *  ASG       ref   
               [000103] D------N----              +--*  LCL_VAR   ref    V15 tmp9         
               [000092] ------------              \--*  LCL_VAR   ref    V12 tmp6         
GenTreeNode creates assertion:
               [000104] -A----------              *  ASG       ref   
In BB14 New Local Copy     Assertion: V15 == V12 index=#04, mask=0000000000000008

fgMorphTree BB14, STMT00022 (before)
               [000096] ------------              *  JTRUE     void  
               [000095] ------------              \--*  NE        int   
               [000093] ------------                 +--*  LCL_VAR   ref    V12 tmp6         
               [000094] ------------                 \--*  CNS_INT   ref    null

Morphing BB15 of 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'

fgMorphTree BB15, STMT00029 (before)
               [000131] -AC---------              *  ASG       ref   
               [000130] D------N----              +--*  LCL_VAR   ref    V16 tmp10        
               [000129] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000128] H----------- arg0            \--*  CNS_INT(h) long   0xd1ffab1e token
Initializing arg info for 129.CALL:
ArgTable for 129.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 128.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]

Morphing args for 129.CALL:
argSlots=1, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000128] H----+------              *  CNS_INT(h) long   0xd1ffab1e token
Replaced with placeholder node:
               [000396] ----------L-              *  ARGPLACE  long  

Shuffled argument table:    rcx 
ArgTable for 129.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 128.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]


fgMorphTree BB15, STMT00029 (after)
               [000131] -AC--+------              *  ASG       ref   
               [000130] D----+-N----              +--*  LCL_VAR   ref    V16 tmp10        
               [000129] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000128] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

fgMorphTree BB15, STMT00068 (before)
               [000305] -ACXG-------              *  ASG       ref   
               [000304] D------N----              +--*  LCL_VAR   ref    V25 tmp19        
               [000126] --CXG-------              \--*  COMMA     ref   
               [000125] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000123] ------------ arg0            |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000124] ------------ arg1            |  \--*  CNS_INT   int    35
               [000121] ----G-------                 \--*  FIELD     ref    <>9
Initializing arg info for 125.CALL:
ArgTable for 125.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 123.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 124.CNS_INT int (By ref), 1 reg: rdx, byteAlignment=8]

Morphing args for 125.CALL:
argSlots=2, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000123] -----+------              *  CNS_INT   long   0x7ffc7e4c17e0
Replaced with placeholder node:
               [000397] ----------L-              *  ARGPLACE  long  
Deferred argument ('rdx'):
               [000124] -----+------              *  CNS_INT   int    35
Replaced with placeholder node:
               [000398] ----------L-              *  ARGPLACE  int   

Shuffled argument table:    rcx rdx 
ArgTable for 125.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 123.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 124.CNS_INT int (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]


fgMorphTree BB15, STMT00068 (after)
               [000305] -ACXG+------              *  ASG       ref   
               [000304] D----+-N----              +--*  LCL_VAR   ref    V25 tmp19        
               [000126] --CXG+------              \--*  COMMA     ref   
               [000125] H-CXG+------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000123] -----+------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000124] -----+------ arg1 in rdx     |  \--*  CNS_INT   int    35
               [000121] n---G+------                 \--*  IND       ref   
               [000399] I----+------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9]

fgMorphTree BB15, STMT00064 (before)
               [000295] ------------              *  JTRUE     void  
               [000294] ------------              \--*  NE        int   
               [000292] ------------                 +--*  LCL_VAR   ref    V25 tmp19        
               [000293] ------------                 \--*  CNS_INT   ref    null

Morphing BB17 of 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'

fgMorphTree BB17, STMT00067 (before)
               [000303] --C-G-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance
Initializing arg info for 303.CALL:
ArgTable for 303.CALL after fgInitArgInfo:

Morphing args for 303.CALL:
argSlots=0, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32
ArgTable for 303.CALL after fgMorphArgs:

Converting BB17 to BBJ_THROW

Morphing BB18 of 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'

fgMorphTree BB18, STMT00065 (before)
               [000298] -A-XG-------              *  ASG       ref   
               [000297] ---XG--N----              +--*  FIELD     ref    _target
               [000132] ------------              |  \--*  LCL_VAR   ref    V16 tmp10        
               [000296] ------------              \--*  LCL_VAR   ref    V25 tmp19        

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000297] ---XG--N----              *  IND       ref   
               [000401] -----+------              \--*  ADD       byref 
               [000132] -----+------                 +--*  LCL_VAR   ref    V16 tmp10        
               [000400] -----+------                 \--*  CNS_INT   long   8 field offset Fseq[_target]
GenTreeNode creates assertion:
               [000297] ---XG--N----              *  IND       ref   
In BB18 New Local Constant Assertion: V16 != null index=#01, mask=0000000000000001

fgMorphTree BB18, STMT00065 (after)
               [000298] -A-XG+------              *  ASG       ref   
               [000297] ---XG+-N----              +--*  IND       ref   
               [000401] -----+------              |  \--*  ADD       byref 
               [000132] -----+------              |     +--*  LCL_VAR   ref    V16 tmp10        
               [000400] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
               [000296] -----+------              \--*  LCL_VAR   ref    V25 tmp19        

fgMorphTree BB18, STMT00066 (before)
               [000302] -A-XG-------              *  ASG       long  
               [000301] ---XG--N----              +--*  FIELD     long   _methodPtr
               [000299] ------------              |  \--*  LCL_VAR   ref    V16 tmp10        
               [000127] ------------              \--*  FTN_ADDR  long   <>c.<GetProjectPaths>b__2_1


Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000301] ---XG--N----              *  IND       long  
               [000403] -----+------              \--*  ADD       byref 
               [000299] -----+------                 +--*  LCL_VAR   ref    V16 tmp10        
               [000402] -----+------                 \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]

fgMorphTree BB18, STMT00066 (after)
               [000302] -A-XG+------              *  ASG       long  
               [000301] ---XG+-N----              +--*  IND       long  
               [000403] -----+------              |  \--*  ADD       byref 
               [000299] -----+------              |     +--*  LCL_VAR   ref    V16 tmp10        
               [000402] -----+------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
               [000127] H----+------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

fgMorphTree BB18, STMT00031 (before)
               [000142] -ACXG-------              *  COMMA     ref   
               [000141] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000139] ------------ arg0         |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000140] ------------ arg1         |  \--*  CNS_INT   int    35
               [000137] -A--G-------              \--*  ASG       ref   
               [000136] ----G--N----                 +--*  FIELD     ref    <>9__2_1
               [000135] ------------                 \--*  LCL_VAR   ref    V16 tmp10        
Initializing arg info for 141.CALL:
ArgTable for 141.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 139.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 140.CNS_INT int (By ref), 1 reg: rdx, byteAlignment=8]

Morphing args for 141.CALL:
argSlots=2, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rcx'):
               [000139] -----+------              *  CNS_INT   long   0x7ffc7e4c17e0
Replaced with placeholder node:
               [000404] ----------L-              *  ARGPLACE  long  
Deferred argument ('rdx'):
               [000140] -----+------              *  CNS_INT   int    35
Replaced with placeholder node:
               [000405] ----------L-              *  ARGPLACE  int   

Shuffled argument table:    rcx rdx 
ArgTable for 141.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 139.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 140.CNS_INT int (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]


fgMorphTree BB18, STMT00031 (after)
               [000142] -ACXG+------              *  COMMA     void  
               [000141] H-CXG+------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000139] -----+------ arg0 in rcx  |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000140] -----+------ arg1 in rdx  |  \--*  CNS_INT   int    35
               [000137] -A--G+------              \--*  ASG       ref   
               [000136] n---G+-N----                 +--*  IND       ref   
               [000406] I----+------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1]
               [000135] -----+------                 \--*  LCL_VAR   ref    V16 tmp10        

fgMorphTree BB18, STMT00032 (before)
               [000148] -A----------              *  ASG       ref   
               [000147] D------N----              +--*  LCL_VAR   ref    V15 tmp9         
               [000134] ------------              \--*  LCL_VAR   ref    V16 tmp10        
GenTreeNode creates assertion:
               [000148] -A----------              *  ASG       ref   
In BB18 New Local Copy     Assertion: V15 == V16 index=#02, mask=0000000000000002

Morphing BB20 of 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'

fgMorphTree BB20, STMT00070 (before)
               [000313] -AC-G-------              *  ASG       ref   
               [000312] D------N----              +--*  LCL_VAR   ref    V27 tmp21        
               [000112] --C-G-------              \--*  CALL      ref    System.Linq.Enumerable.SelectMany
               [000113] H----------- arg0            +--*  CNS_INT(h) long   0xd1ffab1e method
               [000110] ------------ arg1            +--*  LCL_VAR   ref    V14 tmp8         
               [000111] ------------ arg2            \--*  LCL_VAR   ref    V15 tmp9         
Initializing arg info for 112.CALL:
ArgTable for 112.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 113.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 110.LCL_VAR ref (By ref), 1 reg: rdx, byteAlignment=8]
fgArgTabEntry[arg 2 111.LCL_VAR ref (By ref), 1 reg: r8, byteAlignment=8]

Morphing args for 112.CALL:
argSlots=3, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('r8'):
               [000111] -----+------              *  LCL_VAR   ref    V15 tmp9         
Replaced with placeholder node:
               [000407] ----------L-              *  ARGPLACE  ref   
Deferred argument ('rdx'):
               [000110] -----+------              *  LCL_VAR   ref    V14 tmp8         
Replaced with placeholder node:
               [000408] ----------L-              *  ARGPLACE  ref   
Deferred argument ('rcx'):
               [000113] H----+------              *  CNS_INT(h) long   0xd1ffab1e method
Replaced with placeholder node:
               [000409] ----------L-              *  ARGPLACE  long  

Shuffled argument table:    r8 rdx rcx 
ArgTable for 112.CALL after fgMorphArgs:
fgArgTabEntry[arg 2 111.LCL_VAR ref (By ref), 1 reg: r8, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 110.LCL_VAR ref (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]
fgArgTabEntry[arg 0 113.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=2, processed]


fgMorphTree BB20, STMT00070 (after)
               [000313] -ACXG+------              *  ASG       ref   
               [000312] D----+-N----              +--*  LCL_VAR   ref    V27 tmp21        
               [000112] --CXG+------              \--*  CALL      ref    System.Linq.Enumerable.SelectMany
               [000111] -----+------ arg2 in r8      +--*  LCL_VAR   ref    V15 tmp9         
               [000110] -----+------ arg1 in rdx     +--*  LCL_VAR   ref    V14 tmp8         
               [000113] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

fgMorphTree BB20, STMT00069 (before)
               [000311] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
               [000109] ------------ this in rcx  +--*  LCL_VAR   ref    V13 tmp7         
               [000309] ---XG------- arg1         +--*  FIELD     int    _size
               [000308] ------------              |  \--*  LCL_VAR   ref    V13 tmp7         
               [000310] ------------ arg2         \--*  LCL_VAR   ref    V27 tmp21        
Initializing arg info for 311.CALL:
ArgTable for 311.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 109.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 309.FIELD int (By ref), 1 reg: rdx, byteAlignment=8]
fgArgTabEntry[arg 2 310.LCL_VAR ref (By ref), 1 reg: r8, byteAlignment=8]

Morphing args for 311.CALL:

Final value of Compiler::fgMorphField after calling fgMorphSmpOp:
               [000309] ---XG-------              *  IND       int   
               [000411] -----+------              \--*  ADD       byref 
               [000308] -----+------                 +--*  LCL_VAR   ref    V13 tmp7         
               [000410] -----+------                 \--*  CNS_INT   long   16 field offset Fseq[_size]
GenTreeNode creates assertion:
               [000309] ---XG-------              *  IND       int   
In BB20 New Local Constant Assertion: V13 != null index=#01, mask=0000000000000001
argSlots=3, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rdx'):
               [000309] ---XG+------              *  IND       int   
               [000411] -----+------              \--*  ADD       byref 
               [000308] -----+------                 +--*  LCL_VAR   ref    V13 tmp7         
               [000410] -----+------                 \--*  CNS_INT   long   16 field offset Fseq[_size]
Replaced with placeholder node:
               [000412] ----------L-              *  ARGPLACE  int   
Deferred argument ('rcx'):
               [000109] -----+------              *  LCL_VAR   ref    V13 tmp7         
Replaced with placeholder node:
               [000413] ----------L-              *  ARGPLACE  ref   
Deferred argument ('r8'):
               [000310] -----+------              *  LCL_VAR   ref    V27 tmp21        
Replaced with placeholder node:
               [000414] ----------L-              *  ARGPLACE  ref   

Shuffled argument table:    rdx rcx r8 
ArgTable for 311.CALL after fgMorphArgs:
fgArgTabEntry[arg 1 309.IND int (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 0 109.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=1, processed]
fgArgTabEntry[arg 2 310.LCL_VAR ref (By ref), 1 reg: r8, byteAlignment=8, lateArgInx=2, processed]


fgMorphTree BB20, STMT00069 (after)
               [000311] --CXG+------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
               [000309] ---XG+------ arg1 in rdx  +--*  IND       int   
               [000411] -----+------              |  \--*  ADD       byref 
               [000308] -----+------              |     +--*  LCL_VAR   ref    V13 tmp7         
               [000410] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[_size]
               [000109] -----+------ this in rcx  +--*  LCL_VAR   ref    V13 tmp7         
               [000310] -----+------ arg2 in r8   \--*  LCL_VAR   ref    V27 tmp21        

Morphing BB21 of 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'

fgMorphTree BB21, STMT00028 (before)
               [000120] -A----------              *  ASG       int   
               [000119] D------N----              +--*  LCL_VAR   int    V03 loc2         
               [000118] ------------              \--*  ADD       int   
               [000116] ------------                 +--*  LCL_VAR   int    V03 loc2         
               [000117] ------------                 \--*  CNS_INT   int    1

Morphing BB22 of 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'

fgMorphTree BB22, STMT00007 (before)
               [000027] ---X--------              *  JTRUE     void  
               [000026] ---X--------              \--*  LT        int   
               [000023] ------------                 +--*  LCL_VAR   int    V03 loc2         
               [000025] ---X--------                 \--*  ARR_LENGTH int   
               [000024] ------------                    \--*  LCL_VAR   ref    V02 loc1         
GenTreeNode creates assertion:
               [000025] ---X--------              *  ARR_LENGTH int   
In BB22 New Local Constant Assertion: V02 != null index=#01, mask=0000000000000001

Morphing BB23 of 'SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'

fgMorphTree BB23, STMT00038 (before)
               [000181] --C-G-------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle
               [000182] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000180] ------------ arg1         \--*  LCL_VAR   ref    V01 loc0         
Initializing arg info for 181.CALL:
ArgTable for 181.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 182.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 180.LCL_VAR ref (By ref), 1 reg: rdx, byteAlignment=8]

Morphing args for 181.CALL:
argSlots=2, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rdx'):
               [000180] -----+------              *  LCL_VAR   ref    V01 loc0         
Replaced with placeholder node:
               [000415] ----------L-              *  ARGPLACE  ref   
Deferred argument ('rcx'):
               [000182] H----+------              *  CNS_INT(h) long   0xd1ffab1e method
Replaced with placeholder node:
               [000416] ----------L-              *  ARGPLACE  long  

Shuffled argument table:    rdx rcx 
ArgTable for 181.CALL after fgMorphArgs:
fgArgTabEntry[arg 1 180.LCL_VAR ref (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 0 182.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=1, processed]


fgMorphTree BB23, STMT00038 (after)
               [000181] --CXG+------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle
               [000180] -----+------ arg1 in rdx  +--*  LCL_VAR   ref    V01 loc0         
               [000182] H----+------ arg0 in rcx  \--*  CNS_INT(h) long   0xd1ffab1e method

fgMorphTree BB23, STMT00040 (before)
               [000185] --C-G-------              *  CALL      ref    SolutionAnalyzer.Logger.Log
               [000186] H----------- arg0         +--*  CNS_INT(h) long   0xd1ffab1e method
               [000183] ------------ arg1         +--*  CNS_STR   ref   <string constant>
               [000184] ------------ arg2         \--*  CNS_INT   int    2
Initializing arg info for 185.CALL:
ArgTable for 185.CALL after fgInitArgInfo:
fgArgTabEntry[arg 0 186.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8]
fgArgTabEntry[arg 1 183.CNS_STR ref (By ref), 1 reg: rdx, byteAlignment=8]
fgArgTabEntry[arg 2 184.CNS_INT int (By ref), 1 reg: r8, byteAlignment=8]

Morphing args for 185.CALL:
argSlots=3, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32

Sorting the arguments:
Deferred argument ('rdx'):
               [000418] #---G+------              *  IND       ref   
               [000417] H----+------              \--*  CNS_INT(h) long   0xD1FFAB1E "Enumerated and shuffled the project paths."
Replaced with placeholder node:
               [000419] ----------L-              *  ARGPLACE  ref   
Deferred argument ('rcx'):
               [000186] H----+------              *  CNS_INT(h) long   0xd1ffab1e method
Replaced with placeholder node:
               [000420] ----------L-              *  ARGPLACE  long  
Deferred argument ('r8'):
               [000184] -----+------              *  CNS_INT   int    2
Replaced with placeholder node:
               [000421] ----------L-              *  ARGPLACE  int   

Shuffled argument table:    rdx rcx r8 
ArgTable for 185.CALL after fgMorphArgs:
fgArgTabEntry[arg 1 418.IND ref (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 0 186.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=1, processed]
fgArgTabEntry[arg 2 184.CNS_INT int (By ref), 1 reg: r8, byteAlignment=8, lateArgInx=2, processed]


fgMorphTree BB23, STMT00040 (after)
               [000185] --CXG+------              *  CALL      ref    SolutionAnalyzer.Logger.Log
               [000418] #---G+------ arg1 in rdx  +--*  IND       ref   
               [000417] H----+------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Enumerated and shuffled the project paths."
               [000186] H----+------ arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method
               [000184] -----+------ arg2 in r8   \--*  CNS_INT   int    2

fgMorphTree BB23, STMT00041 (before)
               [000191] ------------              *  RETURN    ref   
               [000190] ------------              \--*  LCL_VAR   ref    V01 loc0         

*************** Finishing PHASE Morph - Global
Trees after Morph - Global

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB22 (always)                     i label target hascall gcsafe newobj 
BB02 [0001]  1       BB22                  1       [01D..02E)-> BB08 ( cond )                     i label target hascall gcsafe idxlen nullcheck bwd bwd-target 
BB03 [0002]  1       BB02                  1       [02E..037)-> BB06 ( cond )                     i idxlen bwd 
BB05 [0013]  1       BB03                  1       [02E..02F)-> BB07 (always)                     i hascall bwd 
BB06 [0014]  1       BB03                  1       [02E..02F)                                     i label target hascall gcsafe bwd 
BB07 [0015]  2       BB05,BB06             1       [???..???)-> BB21 (always)                     internal label target bwd 
BB08 [0003]  1       BB02                  1       [037..04B)-> BB14 ( cond )                     i label target hascall gcsafe bwd 
BB09 [0004]  1       BB08                  1       [000..062)-> BB17 ( cond )                     i hascall newobj bwd 
BB12 [0020]  1       BB09                  1       [000..000)                                     i internal label target hascall newobj bwd 
BB14 [0005]  2       BB08,BB12             1       [062..085)-> BB20 ( cond )                     i label target hascall gcsafe bwd 
BB15 [0006]  1       BB14                  1       [000..09C)-> BB18 ( cond )                     i hascall newobj bwd 
BB17 [0027]  2       BB09,BB15             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd 
BB18 [0028]  1       BB15                  1       [000..000)                                     i internal label target hascall newobj bwd 
BB20 [0007]  2       BB14,BB18             1       [09C..0A6)                                     i label target hascall gcsafe bwd 
BB21 [0008]  2       BB07,BB20             1       [0A6..0AA)                                     i label target bwd 
BB22 [0009]  2       BB01,BB21             1       [0AA..0B3)-> BB02 ( cond )                     i label target idxlen bwd 
BB23 [0010]  1       BB22                  1       [0B3..0C7)        (return)                     i hascall gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..01D) -> BB22 (always), preds={} succs={BB22}

***** BB01
STMT00001 (IL   ???...  ???)
               [000002] --CXG+------              *  CALL      ref    SolutionAnalyzer.Logger.Log
               [000317] #---G+------ arg1 in rdx  +--*  IND       ref   
               [000316] H----+------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Started enumerating project paths."
               [000003] H----+------ arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method
               [000001] -----+------ arg2 in r8   \--*  CNS_INT   int    2

***** BB01
STMT00002 (IL 0x00C...0x013)
               [000011] -AC--+------              *  ASG       ref   
               [000010] D----+-N----              +--*  LCL_VAR   ref    V07 tmp1         
               [000009] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000008] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00003 (IL   ???...  ???)
               [000013] --CXG+------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor
               [000012] -----+------ this in rcx  +--*  LCL_VAR   ref    V07 tmp1         
               [000007] -----+------ arg1 in rdx  \--*  CNS_INT   int    100

***** BB01
STMT00004 (IL 0x013...  ???)
               [000016] -A---+------              *  ASG       ref   
               [000015] D----+-N----              +--*  LCL_VAR   ref    V01 loc0         
               [000014] -----+------              \--*  LCL_VAR   ref    V07 tmp1         

***** BB01
STMT00005 (IL 0x014...0x015)
               [000019] -A---+------              *  ASG       ref   
               [000018] D----+-N----              +--*  LCL_VAR   ref    V02 loc1         
               [000017] -----+------              \--*  LCL_VAR   ref    V00 arg0         

***** BB01
STMT00006 (IL 0x016...0x017)
               [000022] -A---+------              *  ASG       int   
               [000021] D----+-N----              +--*  LCL_VAR   int    V03 loc2         
               [000020] -----+------              \--*  CNS_INT   int    0

------------ BB02 [01D..02E) -> BB08 (cond), preds={BB22} succs={BB03,BB08}

***** BB02
STMT00008 (IL 0x01D...0x020)
               [000032] -A-XG+------              *  ASG       ref   
               [000031] D----+-N----              +--*  LCL_VAR   ref    V04 loc3         
               [000334] ---XG+------              \--*  COMMA     ref   
               [000327] ---X-+------                 +--*  ARR_BOUNDS_CHECK_Rng void  
               [000029] -----+------                 |  +--*  LCL_VAR   int    V03 loc2         
               [000326] ---X-+------                 |  \--*  ARR_LENGTH int   
               [000028] -----+------                 |     \--*  LCL_VAR   ref    V02 loc1         
               [000030] a---G+------                 \--*  IND       ref   
               [000333] -----+------                    \--*  ADD       byref 
               [000324] -----+------                       +--*  LCL_VAR   ref    V02 loc1         
               [000332] -----+------                       \--*  ADD       long  
               [000330] -----+------                          +--*  LSH       long  
               [000328] -----+------                          |  +--*  CAST      long <- int
               [000325] i----+------                          |  |  \--*  LCL_VAR   int    V03 loc2         
               [000329] -----+-N----                          |  \--*  CNS_INT   long   3
               [000331] -----+------                          \--*  CNS_INT   long   16 Fseq[#FirstElem]

***** BB02
STMT00042 (IL 0x021...  ???)
               [000197] ---X-+------              *  NULLCHECK byte  
               [000196] -----+------              \--*  LCL_VAR   ref    V04 loc3         

***** BB02
STMT00010 (IL   ???...  ???)
               [000039] --CXG+------              *  JTRUE     void  
               [000038] J-CXG+-N----              \--*  EQ        int   
               [000195] --CXG+------                 +--*  CALL      int    System.String.EndsWith
               [000336] #---G+------ arg1 in rdx     |  +--*  IND       ref   
               [000335] H----+------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E ".csproj"
               [000033] -----+------ this in rcx     |  +--*  LCL_VAR   ref    V04 loc3         
               [000194] -----+------ arg2 in r8      |  \--*  CNS_INT   int    0
               [000037] -----+------                 \--*  CNS_INT   int    0

------------ BB03 [02E..037) -> BB06 (cond), preds={BB02} succs={BB05,BB06}

***** BB03
STMT00043 (IL 0x02E...  ???)
               [000204] -A-XG+------              *  ASG       int   
               [000203] ---XG+-N----              +--*  IND       int   
               [000341] -----+------              |  \--*  ADD       byref 
               [000177] -----+------              |     +--*  LCL_VAR   ref    V01 loc0         
               [000340] -----+------              |     \--*  CNS_INT   long   20 field offset Fseq[_version]
               [000202] ---XG+------              \--*  ADD       int   
               [000200] ---XG+------                 +--*  IND       int   
               [000343] -----+------                 |  \--*  ADD       byref 
               [000199] -----+------                 |     +--*  LCL_VAR   ref    V01 loc0         
               [000342] -----+------                 |     \--*  CNS_INT   long   20 field offset Fseq[_version]
               [000201] -----+------                 \--*  CNS_INT   int    1

***** BB03
STMT00044 (IL 0x02E...  ???)
               [000208] -A-XG+------              *  ASG       ref   
               [000207] D----+-N----              +--*  LCL_VAR   ref    V18 tmp12        
               [000206] ---XG+------              \--*  IND       ref   
               [000345] -----+------                 \--*  ADD       byref 
               [000205] -----+------                    +--*  LCL_VAR   ref    V01 loc0         
               [000344] -----+------                    \--*  CNS_INT   long   8 field offset Fseq[_items]

***** BB03
STMT00045 (IL 0x02E...  ???)
               [000212] -A-XG+------              *  ASG       int   
               [000211] D----+-N----              +--*  LCL_VAR   int    V19 tmp13        
               [000210] ---XG+------              \--*  IND       int   
               [000347] -----+------                 \--*  ADD       byref 
               [000209] -----+------                    +--*  LCL_VAR   ref    V01 loc0         
               [000346] -----+------                    \--*  CNS_INT   long   16 field offset Fseq[_size]

***** BB03
STMT00046 (IL 0x02E...  ???)
               [000217] ---X-+------              *  JTRUE     void  
               [000216] N--X-+-N-U--              \--*  GE        int   
               [000213] -----+------                 +--*  LCL_VAR   int    V19 tmp13        
               [000215] ---X-+------                 \--*  ARR_LENGTH int   
               [000214] -----+------                    \--*  LCL_VAR   ref    V18 tmp12        

------------ BB05 [02E..02F) -> BB07 (always), preds={BB03} succs={BB07}

***** BB05
STMT00048 (IL 0x02E...  ???)
               [000225] -A-XG+------              *  ASG       int   
               [000224] ---XG+-N----              +--*  IND       int   
               [000349] -----+------              |  \--*  ADD       byref 
               [000220] -----+------              |     +--*  LCL_VAR   ref    V01 loc0         
               [000348] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[_size]
               [000223] -----+------              \--*  ADD       int   
               [000221] -----+------                 +--*  LCL_VAR   int    V19 tmp13        
               [000222] -----+------                 \--*  CNS_INT   int    1

***** BB05
STMT00049 (IL 0x02E...  ???)
               [000229] --CXG+------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST
               [000226] -----+------ arg0 in rcx  +--*  LCL_VAR   ref    V18 tmp12        
               [000227] -----+------ arg1 in rdx  +--*  LCL_VAR   int    V19 tmp13        
               [000228] -----+------ arg2 in r8   \--*  LCL_VAR   ref    V04 loc3         

------------ BB06 [02E..02F), preds={BB03} succs={BB07}

***** BB06
STMT00047 (IL 0x02E...  ???)
               [000219] --CXG+------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize
               [000218] -----+------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         
               [000178] -----+------ arg1 in rdx  \--*  LCL_VAR   ref    V04 loc3         

------------ BB07 [???..???) -> BB21 (always), preds={BB05,BB06} succs={BB21}

***** BB07
STMT00050 (IL 0x02E...  ???)
               [000232] -A---+------              *  ASG       ref   
               [000231] D----+-N----              +--*  LCL_VAR   ref    V18 tmp12        
               [000230] -----+------              \--*  CNS_INT   ref    null

------------ BB08 [037..04B) -> BB14 (cond), preds={BB02} succs={BB09,BB14}

***** BB08
STMT00053 (IL 0x037...  ???)
               [000247] -ACXG+------              *  ASG       ref   
               [000246] D----+-N----              +--*  LCL_VAR   ref    V20 tmp14        
               [000236] --CXG+------              \--*  CALL      ref    System.IO.EnumerationOptions.FromSearchOption
               [000235] -----+------ arg0 in rcx     \--*  CNS_INT   int    1

***** BB08
STMT00013 (IL   ???...  ???)
               [000054] -ACXG+------              *  ASG       ref   
               [000053] D----+-N----              +--*  LCL_VAR   ref    V09 tmp3         
               [000245] --CXG+------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths
               [000357] #---G+------ arg1 in rdx     +--*  IND       ref   
               [000356] H----+------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*"
               [000040] -----+------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         
               [000244] -----+------ arg3 in r9      +--*  LCL_VAR   ref    V20 tmp14        
               [000243] -----+------ arg2 in r8      \--*  CNS_INT   int    2

***** BB08
STMT00012 (IL   ???...  ???)
               [000052] -ACXG+------              *  ASG       ref   
               [000051] D----+-N----              +--*  LCL_VAR   ref    V08 tmp2         
               [000050] --CXG+------              \--*  COMMA     ref   
               [000049] H-CXG+------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000047] -----+------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000048] -----+------ arg1 in rdx     |  \--*  CNS_INT   int    35
               [000045] n---G+------                 \--*  IND       ref   
               [000364] I----+------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0]

***** BB08
STMT00015 (IL   ???...0x049)
               [000062] -A---+------              *  ASG       ref   
               [000061] D----+-N----              +--*  LCL_VAR   ref    V10 tmp4         
               [000055] -----+------              \--*  LCL_VAR   ref    V09 tmp3         

***** BB08
STMT00016 (IL   ???...  ???)
               [000065] -A---+------              *  ASG       ref   
               [000064] D----+-N----              +--*  LCL_VAR   ref    V11 tmp5         
               [000056] -----+------              \--*  LCL_VAR   ref    V08 tmp2         

***** BB08
STMT00014 (IL   ???...  ???)
               [000060] -----+------              *  JTRUE     void  
               [000059] J----+-N----              \--*  NE        int   
               [000057] -----+------                 +--*  LCL_VAR   ref    V08 tmp2         
               [000058] -----+------                 \--*  CNS_INT   ref    null

------------ BB09 [000..062) -> BB17 (cond), preds={BB08} succs={BB12,BB17}

***** BB09
STMT00033 (IL   ???...0x05D)
               [000160] -AC--+------              *  ASG       ref   
               [000159] D----+-N----              +--*  LCL_VAR   ref    V17 tmp11        
               [000158] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000157] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB09
STMT00058 (IL   ???...  ???)
               [000262] -ACXG+------              *  ASG       ref   
               [000261] D----+-N----              +--*  LCL_VAR   ref    V21 tmp15        
               [000155] --CXG+------              \--*  COMMA     ref   
               [000154] H-CXG+------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000152] -----+------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000153] -----+------ arg1 in rdx     |  \--*  CNS_INT   int    35
               [000150] n---G+------                 \--*  IND       ref   
               [000368] I----+------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9]

***** BB09
STMT00054 (IL   ???...  ???)
               [000252] -----+------              *  JTRUE     void  
               [000251] J----+-N----              \--*  EQ        int   
               [000249] -----+------                 +--*  LCL_VAR   ref    V21 tmp15        
               [000250] -----+------                 \--*  CNS_INT   ref    null

------------ BB12 [000..000), preds={BB09} succs={BB14}

***** BB12
STMT00055 (IL   ???...  ???)
               [000255] -A-XG+------              *  ASG       ref   
               [000254] ---XG+-N----              +--*  IND       ref   
               [000370] -----+------              |  \--*  ADD       byref 
               [000161] -----+------              |     +--*  LCL_VAR   ref    V17 tmp11        
               [000369] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
               [000253] -----+------              \--*  LCL_VAR   ref    V21 tmp15        

***** BB12
STMT00056 (IL   ???...  ???)
               [000259] -A-XG+------              *  ASG       long  
               [000258] ---XG+-N----              +--*  IND       long  
               [000372] -----+------              |  \--*  ADD       byref 
               [000256] -----+------              |     +--*  LCL_VAR   ref    V17 tmp11        
               [000371] -----+------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
               [000156] H----+------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

***** BB12
STMT00035 (IL 0x05C...  ???)
               [000171] -ACXG+------              *  COMMA     void  
               [000170] H-CXG+------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000168] -----+------ arg0 in rcx  |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000169] -----+------ arg1 in rdx  |  \--*  CNS_INT   int    35
               [000166] -A--G+------              \--*  ASG       ref   
               [000165] n---G+-N----                 +--*  IND       ref   
               [000375] I----+------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0]
               [000164] -----+------                 \--*  LCL_VAR   ref    V17 tmp11        

***** BB12
STMT00036 (IL   ???...0x05D)
               [000175] -A---+------              *  ASG       ref   
               [000174] D----+-N----              +--*  LCL_VAR   ref    V11 tmp5         
               [000163] -----+------              \--*  LCL_VAR   ref    V17 tmp11        

------------ BB14 [062..085) -> BB20 (cond), preds={BB08,BB12} succs={BB15,BB20}

***** BB14
STMT00018 (IL   ???...  ???)
               [000075] -ACXG+------              *  ASG       ref   
               [000074] D----+-N----              +--*  LCL_VAR   ref    V05 loc4         
               [000071] --CXG+------              \--*  CALL      ref    System.Linq.Enumerable.Where
               [000070] -----+------ arg2 in r8      +--*  LCL_VAR   ref    V11 tmp5         
               [000069] -----+------ arg1 in rdx     +--*  LCL_VAR   ref    V10 tmp4         
               [000072] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB14
STMT00061 (IL 0x069...  ???)
               [000283] -ACXG+------              *  ASG       ref   
               [000282] D----+-N----              +--*  LCL_VAR   ref    V23 tmp17        
               [000276] --CXG+------              \--*  COMMA     ref   
               [000275] H-CXG+------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000273] -----+------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e783cd8
               [000274] -----+------ arg1 in rdx     |  \--*  CNS_INT   int    40
               [000271] n---G+------                 \--*  IND       ref   
               [000381] I----+------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<Compatible>k__BackingField]

***** BB14
STMT00063 (IL   ???...  ???)
               [000290] -ACXG+------              *  ASG       ref   
               [000289] D----+-N----              +--*  LCL_VAR   ref    V24 tmp18        
               [000281] --CXG+------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths
               [000383] #---G+------ arg1 in rdx     +--*  IND       ref   
               [000382] H----+------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*.csproj"
               [000077] -----+------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         
               [000280] -----+------ arg3 in r9      +--*  LCL_VAR   ref    V23 tmp17        
               [000279] -----+------ arg2 in r8      \--*  CNS_INT   int    1

***** BB14
STMT00062 (IL   ???...  ???)
               [000288] --CXG+------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
               [000286] ---XG+------ arg1 in rdx  +--*  IND       int   
               [000389] -----+------              |  \--*  ADD       byref 
               [000285] -----+------              |     +--*  LCL_VAR   ref    V01 loc0         
               [000388] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[_size]
               [000076] -----+------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         
               [000287] -----+------ arg2 in r8   \--*  LCL_VAR   ref    V24 tmp18        

***** BB14
STMT00021 (IL 0x07A...  ???)
               [000091] -ACXG+------              *  ASG       ref   
               [000090] D----+-N----              +--*  LCL_VAR   ref    V12 tmp6         
               [000089] --CXG+------              \--*  COMMA     ref   
               [000088] H-CXG+------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000086] -----+------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000087] -----+------ arg1 in rdx     |  \--*  CNS_INT   int    35
               [000084] n---G+------                 \--*  IND       ref   
               [000395] I----+------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1]

***** BB14
STMT00023 (IL   ???...0x083)
               [000098] -A---+------              *  ASG       ref   
               [000097] D----+-N----              +--*  LCL_VAR   ref    V13 tmp7         
               [000082] -----+------              \--*  LCL_VAR   ref    V01 loc0         

***** BB14
STMT00024 (IL   ???...  ???)
               [000101] -A---+------              *  ASG       ref   
               [000100] D----+-N----              +--*  LCL_VAR   ref    V14 tmp8         
               [000083] -----+------              \--*  LCL_VAR   ref    V05 loc4         

***** BB14
STMT00025 (IL   ???...  ???)
               [000104] -A---+------              *  ASG       ref   
               [000103] D----+-N----              +--*  LCL_VAR   ref    V15 tmp9         
               [000092] -----+------              \--*  LCL_VAR   ref    V12 tmp6         

***** BB14
STMT00022 (IL   ???...  ???)
               [000096] -----+------              *  JTRUE     void  
               [000095] J----+-N----              \--*  NE        int   
               [000093] -----+------                 +--*  LCL_VAR   ref    V12 tmp6         
               [000094] -----+------                 \--*  CNS_INT   ref    null

------------ BB15 [000..09C) -> BB18 (cond), preds={BB14} succs={BB17,BB18}

***** BB15
STMT00029 (IL   ???...0x097)
               [000131] -AC--+------              *  ASG       ref   
               [000130] D----+-N----              +--*  LCL_VAR   ref    V16 tmp10        
               [000129] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000128] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB15
STMT00068 (IL   ???...  ???)
               [000305] -ACXG+------              *  ASG       ref   
               [000304] D----+-N----              +--*  LCL_VAR   ref    V25 tmp19        
               [000126] --CXG+------              \--*  COMMA     ref   
               [000125] H-CXG+------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000123] -----+------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000124] -----+------ arg1 in rdx     |  \--*  CNS_INT   int    35
               [000121] n---G+------                 \--*  IND       ref   
               [000399] I----+------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9]

***** BB15
STMT00064 (IL   ???...  ???)
               [000295] -----+------              *  JTRUE     void  
               [000294] J----+-N----              \--*  NE        int   
               [000292] -----+------                 +--*  LCL_VAR   ref    V25 tmp19        
               [000293] -----+------                 \--*  CNS_INT   ref    null

------------ BB17 [000..000) (throw), preds={BB09,BB15} succs={}

***** BB17
STMT00067 (IL   ???...  ???)
               [000303] --CXG+------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

------------ BB18 [000..000), preds={BB15} succs={BB20}

***** BB18
STMT00065 (IL   ???...  ???)
               [000298] -A-XG+------              *  ASG       ref   
               [000297] ---XG+-N----              +--*  IND       ref   
               [000401] -----+------              |  \--*  ADD       byref 
               [000132] -----+------              |     +--*  LCL_VAR   ref    V16 tmp10        
               [000400] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
               [000296] -----+------              \--*  LCL_VAR   ref    V25 tmp19        

***** BB18
STMT00066 (IL   ???...  ???)
               [000302] -A-XG+------              *  ASG       long  
               [000301] ---XG+-N----              +--*  IND       long  
               [000403] -----+------              |  \--*  ADD       byref 
               [000299] -----+------              |     +--*  LCL_VAR   ref    V16 tmp10        
               [000402] -----+------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
               [000127] H----+------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

***** BB18
STMT00031 (IL 0x096...  ???)
               [000142] -ACXG+------              *  COMMA     void  
               [000141] H-CXG+------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000139] -----+------ arg0 in rcx  |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000140] -----+------ arg1 in rdx  |  \--*  CNS_INT   int    35
               [000137] -A--G+------              \--*  ASG       ref   
               [000136] n---G+-N----                 +--*  IND       ref   
               [000406] I----+------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1]
               [000135] -----+------                 \--*  LCL_VAR   ref    V16 tmp10        

***** BB18
STMT00032 (IL   ???...0x097)
               [000148] -A---+------              *  ASG       ref   
               [000147] D----+-N----              +--*  LCL_VAR   ref    V15 tmp9         
               [000134] -----+------              \--*  LCL_VAR   ref    V16 tmp10        

------------ BB20 [09C..0A6), preds={BB14,BB18} succs={BB21}

***** BB20
STMT00070 (IL   ???...  ???)
               [000313] -ACXG+------              *  ASG       ref   
               [000312] D----+-N----              +--*  LCL_VAR   ref    V27 tmp21        
               [000112] --CXG+------              \--*  CALL      ref    System.Linq.Enumerable.SelectMany
               [000111] -----+------ arg2 in r8      +--*  LCL_VAR   ref    V15 tmp9         
               [000110] -----+------ arg1 in rdx     +--*  LCL_VAR   ref    V14 tmp8         
               [000113] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB20
STMT00069 (IL   ???...  ???)
               [000311] --CXG+------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
               [000309] ---XG+------ arg1 in rdx  +--*  IND       int   
               [000411] -----+------              |  \--*  ADD       byref 
               [000308] -----+------              |     +--*  LCL_VAR   ref    V13 tmp7         
               [000410] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[_size]
               [000109] -----+------ this in rcx  +--*  LCL_VAR   ref    V13 tmp7         
               [000310] -----+------ arg2 in r8   \--*  LCL_VAR   ref    V27 tmp21        

------------ BB21 [0A6..0AA), preds={BB07,BB20} succs={BB22}

***** BB21
STMT00028 (IL 0x0A6...0x0A9)
               [000120] -A---+------              *  ASG       int   
               [000119] D----+-N----              +--*  LCL_VAR   int    V03 loc2         
               [000118] -----+------              \--*  ADD       int   
               [000116] -----+------                 +--*  LCL_VAR   int    V03 loc2         
               [000117] -----+------                 \--*  CNS_INT   int    1

------------ BB22 [0AA..0B3) -> BB02 (cond), preds={BB01,BB21} succs={BB23,BB02}

***** BB22
STMT00007 (IL 0x0AA...0x0AE)
               [000027] ---X-+------              *  JTRUE     void  
               [000026] J--X-+-N----              \--*  LT        int   
               [000023] -----+------                 +--*  LCL_VAR   int    V03 loc2         
               [000025] ---X-+------                 \--*  ARR_LENGTH int   
               [000024] -----+------                    \--*  LCL_VAR   ref    V02 loc1         

------------ BB23 [0B3..0C7) (return), preds={BB22} succs={}

***** BB23
STMT00038 (IL 0x0B3...0x0C4)
               [000181] --CXG+------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle
               [000180] -----+------ arg1 in rdx  +--*  LCL_VAR   ref    V01 loc0         
               [000182] H----+------ arg0 in rcx  \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB23
STMT00040 (IL   ???...  ???)
               [000185] --CXG+------              *  CALL      ref    SolutionAnalyzer.Logger.Log
               [000418] #---G+------ arg1 in rdx  +--*  IND       ref   
               [000417] H----+------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Enumerated and shuffled the project paths."
               [000186] H----+------ arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method
               [000184] -----+------ arg2 in r8   \--*  CNS_INT   int    2

***** BB23
STMT00041 (IL 0x0C5...0x0C6)
               [000191] -----+------              *  RETURN    ref   
               [000190] -----+------              \--*  LCL_VAR   ref    V01 loc0         

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist

*************** Starting PHASE GS Cookie
No GS security needed

*************** Finishing PHASE GS Cookie

*************** Starting PHASE Compute edge weights (1, false)
*************** In fgComputeBlockAndEdgeWeights()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB22 (always)                     i label target hascall gcsafe newobj 
BB02 [0001]  1       BB22                  1       [01D..02E)-> BB08 ( cond )                     i label target hascall gcsafe idxlen nullcheck bwd bwd-target 
BB03 [0002]  1       BB02                  1       [02E..037)-> BB06 ( cond )                     i idxlen bwd 
BB05 [0013]  1       BB03                  1       [02E..02F)-> BB07 (always)                     i hascall bwd 
BB06 [0014]  1       BB03                  1       [02E..02F)                                     i label target hascall gcsafe bwd 
BB07 [0015]  2       BB05,BB06             1       [???..???)-> BB21 (always)                     internal label target bwd 
BB08 [0003]  1       BB02                  1       [037..04B)-> BB14 ( cond )                     i label target hascall gcsafe bwd 
BB09 [0004]  1       BB08                  1       [000..062)-> BB17 ( cond )                     i hascall newobj bwd 
BB12 [0020]  1       BB09                  1       [000..000)                                     i internal label target hascall newobj bwd 
BB14 [0005]  2       BB08,BB12             1       [062..085)-> BB20 ( cond )                     i label target hascall gcsafe bwd 
BB15 [0006]  1       BB14                  1       [000..09C)-> BB18 ( cond )                     i hascall newobj bwd 
BB17 [0027]  2       BB09,BB15             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd 
BB18 [0028]  1       BB15                  1       [000..000)                                     i internal label target hascall newobj bwd 
BB20 [0007]  2       BB14,BB18             1       [09C..0A6)                                     i label target hascall gcsafe bwd 
BB21 [0008]  2       BB07,BB20             1       [0A6..0AA)                                     i label target bwd 
BB22 [0009]  2       BB01,BB21             1       [0AA..0B3)-> BB02 ( cond )                     i label target idxlen bwd 
BB23 [0010]  1       BB22                  1       [0B3..0C7)        (return)                     i hascall gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

 -- no profile data, so using default called count
 -- not optimizing or no profile data, so not computing edge weights

*************** Finishing PHASE Compute edge weights (1, false)

*************** Starting PHASE Create EH funclets
*************** In fgCreateFunclets()

After fgCreateFunclets()
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB22 (always)                     i label target hascall gcsafe newobj 
BB02 [0001]  1       BB22                  1       [01D..02E)-> BB08 ( cond )                     i label target hascall gcsafe idxlen nullcheck bwd bwd-target 
BB03 [0002]  1       BB02                  1       [02E..037)-> BB06 ( cond )                     i idxlen bwd 
BB05 [0013]  1       BB03                  1       [02E..02F)-> BB07 (always)                     i hascall bwd 
BB06 [0014]  1       BB03                  1       [02E..02F)                                     i label target hascall gcsafe bwd 
BB07 [0015]  2       BB05,BB06             1       [???..???)-> BB21 (always)                     internal label target bwd 
BB08 [0003]  1       BB02                  1       [037..04B)-> BB14 ( cond )                     i label target hascall gcsafe bwd 
BB09 [0004]  1       BB08                  1       [000..062)-> BB17 ( cond )                     i hascall newobj bwd 
BB12 [0020]  1       BB09                  1       [000..000)                                     i internal label target hascall newobj bwd 
BB14 [0005]  2       BB08,BB12             1       [062..085)-> BB20 ( cond )                     i label target hascall gcsafe bwd 
BB15 [0006]  1       BB14                  1       [000..09C)-> BB18 ( cond )                     i hascall newobj bwd 
BB17 [0027]  2       BB09,BB15             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd 
BB18 [0028]  1       BB15                  1       [000..000)                                     i internal label target hascall newobj bwd 
BB20 [0007]  2       BB14,BB18             1       [09C..0A6)                                     i label target hascall gcsafe bwd 
BB21 [0008]  2       BB07,BB20             1       [0A6..0AA)                                     i label target bwd 
BB22 [0009]  2       BB01,BB21             1       [0AA..0B3)-> BB02 ( cond )                     i label target idxlen bwd 
BB23 [0010]  1       BB22                  1       [0B3..0C7)        (return)                     i hascall gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Create EH funclets

*************** Starting PHASE Optimize layout
*************** In optOptimizeLayout()

***************  Exception Handling table is empty
*************** In fgDebugCheckBBlist

Duplication of loop condition [000026] is performed, because the cost of duplication (7) is less or equal than 32,
   loopIterations =   8.000, countOfHelpers = 0, validProfileWeights = false

Duplicating loop condition in BB01 for loop (BB02 - BB22)
Estimated code size expansion is 7
 STMT00071 (IL 0x0AA...  ???)
               [000426] ---X--------              *  JTRUE     void  
     (  9,  7) [000422] J--X---N----              \--*  LE        int   
     (  5,  4) [000423] ---X--------                 +--*  ARR_LENGTH int   
     (  3,  2) [000424] ------------                 |  \--*  LCL_VAR   ref    V02 loc1         
     (  3,  2) [000425] ------------                 \--*  LCL_VAR   int    V03 loc2         
fgComputeEdgeWeights() found inconsistent profile data, not using the edge weights

*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB23 ( cond )                     i label target hascall gcsafe idxlen newobj 
BB02 [0001]  2       BB01,BB22             1       [01D..02E)-> BB08 ( cond )                     i label target hascall gcsafe idxlen nullcheck bwd bwd-target 
BB03 [0002]  1       BB02                  1       [02E..037)-> BB06 ( cond )                     i idxlen bwd 
BB05 [0013]  1       BB03                  1       [02E..02F)-> BB07 (always)                     i hascall bwd 
BB06 [0014]  1       BB03                  1       [02E..02F)                                     i label target hascall gcsafe bwd 
BB07 [0015]  2       BB05,BB06             1       [???..???)-> BB21 (always)                     internal label target bwd 
BB08 [0003]  1       BB02                  1       [037..04B)-> BB14 ( cond )                     i label target hascall gcsafe bwd 
BB09 [0004]  1       BB08                  1       [000..062)-> BB17 ( cond )                     i hascall newobj bwd 
BB12 [0020]  1       BB09                  1       [000..000)                                     i internal label target hascall newobj bwd 
BB14 [0005]  2       BB08,BB12             1       [062..085)-> BB20 ( cond )                     i label target hascall gcsafe bwd 
BB15 [0006]  1       BB14                  1       [000..09C)-> BB18 ( cond )                     i hascall newobj bwd 
BB17 [0027]  2       BB09,BB15             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd 
BB18 [0028]  1       BB15                  1       [000..000)                                     i internal label target hascall newobj bwd 
BB20 [0007]  2       BB14,BB18             1       [09C..0A6)                                     i label target hascall gcsafe bwd 
BB21 [0008]  2       BB07,BB20             1       [0A6..0AA)                                     i label target bwd 
BB22 [0009]  1       BB21                  1       [0AA..0B3)-> BB02 ( cond )                     i label target idxlen bwd 
BB23 [0010]  2       BB01,BB22             1       [0B3..0C7)        (return)                     i label target hascall gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------


Compacting blocks BB21 and BB22:
*************** In fgDebugCheckBBlist

After updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB23 ( cond )                     i label target hascall gcsafe idxlen newobj 
BB02 [0001]  2       BB01,BB21             1       [01D..02E)-> BB08 ( cond )                     i label target hascall gcsafe idxlen nullcheck bwd bwd-target 
BB03 [0002]  1       BB02                  1       [02E..037)-> BB06 ( cond )                     i idxlen bwd 
BB05 [0013]  1       BB03                  1       [02E..02F)-> BB07 (always)                     i hascall bwd 
BB06 [0014]  1       BB03                  1       [02E..02F)                                     i label target hascall gcsafe bwd 
BB07 [0015]  2       BB05,BB06             1       [???..???)-> BB21 (always)                     internal label target bwd 
BB08 [0003]  1       BB02                  1       [037..04B)-> BB14 ( cond )                     i label target hascall gcsafe bwd 
BB09 [0004]  1       BB08                  1       [000..062)-> BB17 ( cond )                     i hascall newobj bwd 
BB12 [0020]  1       BB09                  1       [000..000)                                     i internal label target hascall newobj bwd 
BB14 [0005]  2       BB08,BB12             1       [062..085)-> BB20 ( cond )                     i label target hascall gcsafe bwd 
BB15 [0006]  1       BB14                  1       [000..09C)-> BB18 ( cond )                     i hascall newobj bwd 
BB17 [0027]  2       BB09,BB15             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd 
BB18 [0028]  1       BB15                  1       [000..000)                                     i internal label target hascall newobj bwd 
BB20 [0007]  2       BB14,BB18             1       [09C..0A6)                                     i label target hascall gcsafe bwd 
BB21 [0008]  2       BB07,BB20             1       [0A6..0B3)-> BB02 ( cond )                     i label target idxlen bwd 
BB23 [0010]  2       BB01,BB21             1       [0B3..0C7)        (return)                     i label target hascall gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
*************** In fgDebugCheckBBlist

*************** In fgExpandRarelyRunBlocks()
*************** In fgReorderBlocks()

Initial BasicBlocks
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB23 ( cond )                     i label target hascall gcsafe idxlen newobj 
BB02 [0001]  2       BB01,BB21             1       [01D..02E)-> BB08 ( cond )                     i label target hascall gcsafe idxlen nullcheck bwd bwd-target 
BB03 [0002]  1       BB02                  1       [02E..037)-> BB06 ( cond )                     i idxlen bwd 
BB05 [0013]  1       BB03                  1       [02E..02F)-> BB07 (always)                     i hascall bwd 
BB06 [0014]  1       BB03                  1       [02E..02F)                                     i label target hascall gcsafe bwd 
BB07 [0015]  2       BB05,BB06             1       [???..???)-> BB21 (always)                     internal label target bwd 
BB08 [0003]  1       BB02                  1       [037..04B)-> BB14 ( cond )                     i label target hascall gcsafe bwd 
BB09 [0004]  1       BB08                  1       [000..062)-> BB17 ( cond )                     i hascall newobj bwd 
BB12 [0020]  1       BB09                  1       [000..000)                                     i internal label target hascall newobj bwd 
BB14 [0005]  2       BB08,BB12             1       [062..085)-> BB20 ( cond )                     i label target hascall gcsafe bwd 
BB15 [0006]  1       BB14                  1       [000..09C)-> BB18 ( cond )                     i hascall newobj bwd 
BB17 [0027]  2       BB09,BB15             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd 
BB18 [0028]  1       BB15                  1       [000..000)                                     i internal label target hascall newobj bwd 
BB20 [0007]  2       BB14,BB18             1       [09C..0A6)                                     i label target hascall gcsafe bwd 
BB21 [0008]  2       BB07,BB20             1       [0A6..0B3)-> BB02 ( cond )                     i label target idxlen bwd 
BB23 [0010]  2       BB01,BB21             1       [0B3..0C7)        (return)                     i label target hascall gcsafe 
-----------------------------------------------------------------------------------------------------------------------------------------

Decided to reverse conditional branch at block BB15 branch to BB18 since it falls into a rarely run block
Relocated rarely run block BB17 by reversing conditional jump at BB15
Relocated block [BB17..BB17] inserted after BB23 at the end of method

After this change in fgReorderBlocks the BB graph is:
-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB23 ( cond )                     i label target hascall gcsafe idxlen newobj 
BB02 [0001]  2       BB01,BB21             1       [01D..02E)-> BB08 ( cond )                     i label target hascall gcsafe idxlen nullcheck bwd bwd-target 
BB03 [0002]  1       BB02                  1       [02E..037)-> BB06 ( cond )                     i idxlen bwd 
BB05 [0013]  1       BB03                  1       [02E..02F)-> BB07 (always)                     i hascall bwd 
BB06 [0014]  1       BB03                  1       [02E..02F)                                     i label target hascall gcsafe bwd 
BB07 [0015]  2       BB05,BB06             1       [???..???)-> BB21 (always)                     internal label target bwd 
BB08 [0003]  1       BB02                  1       [037..04B)-> BB14 ( cond )                     i label target hascall gcsafe bwd 
BB09 [0004]  1       BB08                  1       [000..062)-> BB17 ( cond )                     i hascall newobj bwd 
BB12 [0020]  1       BB09                  1       [000..000)                                     i internal label target hascall newobj bwd 
BB14 [0005]  2       BB08,BB12             1       [062..085)-> BB20 ( cond )                     i label target hascall gcsafe bwd 
BB15 [0006]  1       BB14                  1       [000..09C)-> BB17 ( cond )                     i hascall newobj bwd 
BB18 [0028]  1       BB15                  1       [000..000)                                     i internal label target hascall newobj bwd 
BB20 [0007]  2       BB14,BB18             1       [09C..0A6)                                     i label target hascall gcsafe bwd 
BB21 [0008]  2       BB07,BB20             1       [0A6..0B3)-> BB02 ( cond )                     i label target idxlen bwd 
BB23 [0010]  2       BB01,BB21             1       [0B3..0C7)        (return)                     i label target hascall gcsafe 
BB17 [0027]  2       BB09,BB15             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB23 ( cond )                     i label target hascall gcsafe idxlen newobj 
BB02 [0001]  2       BB01,BB21             1       [01D..02E)-> BB08 ( cond )                     i label target hascall gcsafe idxlen nullcheck bwd bwd-target 
BB03 [0002]  1       BB02                  1       [02E..037)-> BB06 ( cond )                     i idxlen bwd 
BB05 [0013]  1       BB03                  1       [02E..02F)-> BB07 (always)                     i hascall bwd 
BB06 [0014]  1       BB03                  1       [02E..02F)                                     i label target hascall gcsafe bwd 
BB07 [0015]  2       BB05,BB06             1       [???..???)-> BB21 (always)                     internal label target bwd 
BB08 [0003]  1       BB02                  1       [037..04B)-> BB14 ( cond )                     i label target hascall gcsafe bwd 
BB09 [0004]  1       BB08                  1       [000..062)-> BB17 ( cond )                     i hascall newobj bwd 
BB12 [0020]  1       BB09                  1       [000..000)                                     i internal label target hascall newobj bwd 
BB14 [0005]  2       BB08,BB12             1       [062..085)-> BB20 ( cond )                     i label target hascall gcsafe bwd 
BB15 [0006]  1       BB14                  1       [000..09C)-> BB17 ( cond )                     i hascall newobj bwd 
BB18 [0028]  1       BB15                  1       [000..000)                                     i internal label target hascall newobj bwd 
BB20 [0007]  2       BB14,BB18             1       [09C..0A6)                                     i label target hascall gcsafe bwd 
BB21 [0008]  2       BB07,BB20             1       [0A6..0B3)-> BB02 ( cond )                     i label target idxlen bwd 
BB23 [0010]  2       BB01,BB21             1       [0B3..0C7)        (return)                     i label target hascall gcsafe 
BB17 [0027]  2       BB09,BB15             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist

*************** Finishing PHASE Optimize layout

*************** Starting PHASE Compute blocks reachability
*************** In fgComputeReachability
*************** In fgDebugCheckBBlist

Renumbering the basic blocks for fgComputeReachability pass #1

*************** Before renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB23 ( cond )                     i label target hascall gcsafe idxlen newobj 
BB02 [0001]  2       BB01,BB21             1       [01D..02E)-> BB08 ( cond )                     i label target hascall gcsafe idxlen nullcheck bwd bwd-target 
BB03 [0002]  1       BB02                  1       [02E..037)-> BB06 ( cond )                     i idxlen bwd 
BB05 [0013]  1       BB03                  1       [02E..02F)-> BB07 (always)                     i hascall bwd 
BB06 [0014]  1       BB03                  1       [02E..02F)                                     i label target hascall gcsafe bwd 
BB07 [0015]  2       BB05,BB06             1       [???..???)-> BB21 (always)                     internal label target bwd 
BB08 [0003]  1       BB02                  1       [037..04B)-> BB14 ( cond )                     i label target hascall gcsafe bwd 
BB09 [0004]  1       BB08                  1       [000..062)-> BB17 ( cond )                     i hascall newobj bwd 
BB12 [0020]  1       BB09                  1       [000..000)                                     i internal label target hascall newobj bwd 
BB14 [0005]  2       BB08,BB12             1       [062..085)-> BB20 ( cond )                     i label target hascall gcsafe bwd 
BB15 [0006]  1       BB14                  1       [000..09C)-> BB17 ( cond )                     i hascall newobj bwd 
BB18 [0028]  1       BB15                  1       [000..000)                                     i internal label target hascall newobj bwd 
BB20 [0007]  2       BB14,BB18             1       [09C..0A6)                                     i label target hascall gcsafe bwd 
BB21 [0008]  2       BB07,BB20             1       [0A6..0B3)-> BB02 ( cond )                     i label target idxlen bwd 
BB23 [0010]  2       BB01,BB21             1       [0B3..0C7)        (return)                     i label target hascall gcsafe 
BB17 [0027]  2       BB09,BB15             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
Renumber BB05 to BB04
Renumber BB06 to BB05
Renumber BB07 to BB06
Renumber BB08 to BB07
Renumber BB09 to BB08
Renumber BB12 to BB09
Renumber BB14 to BB10
Renumber BB15 to BB11
Renumber BB18 to BB12
Renumber BB20 to BB13
Renumber BB21 to BB14
Renumber BB23 to BB15
Renumber BB17 to BB16

*************** After renumbering the basic blocks

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB15 ( cond )                     i label target hascall gcsafe idxlen newobj 
BB02 [0001]  2       BB01,BB14             1       [01D..02E)-> BB07 ( cond )                     i label target hascall gcsafe idxlen nullcheck bwd bwd-target 
BB03 [0002]  1       BB02                  1       [02E..037)-> BB05 ( cond )                     i idxlen bwd 
BB04 [0013]  1       BB03                  1       [02E..02F)-> BB06 (always)                     i hascall bwd 
BB05 [0014]  1       BB03                  1       [02E..02F)                                     i label target hascall gcsafe bwd 
BB06 [0015]  2       BB04,BB05             1       [???..???)-> BB14 (always)                     internal label target bwd 
BB07 [0003]  1       BB02                  1       [037..04B)-> BB10 ( cond )                     i label target hascall gcsafe bwd 
BB08 [0004]  1       BB07                  1       [000..062)-> BB16 ( cond )                     i hascall newobj bwd 
BB09 [0020]  1       BB08                  1       [000..000)                                     i internal label target hascall newobj bwd 
BB10 [0005]  2       BB07,BB09             1       [062..085)-> BB13 ( cond )                     i label target hascall gcsafe bwd 
BB11 [0006]  1       BB10                  1       [000..09C)-> BB16 ( cond )                     i hascall newobj bwd 
BB12 [0028]  1       BB11                  1       [000..000)                                     i internal label target hascall newobj bwd 
BB13 [0007]  2       BB10,BB12             1       [09C..0A6)                                     i label target hascall gcsafe bwd 
BB14 [0008]  2       BB06,BB13             1       [0A6..0B3)-> BB02 ( cond )                     i label target idxlen bwd 
BB15 [0010]  2       BB01,BB14             1       [0B3..0C7)        (return)                     i label target hascall gcsafe 
BB16 [0027]  2       BB08,BB11             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty

New BlockSet epoch 3, # of blocks (including unused BB00): 17, bitset array size: 1 (short)
Enter blocks: BB01 

After computing reachability sets:
------------------------------------------------
BBnum  Reachable by 
------------------------------------------------
BB01 : BB01 
BB02 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 BB11 BB12 BB13 BB14 
BB03 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 BB11 BB12 BB13 BB14 
BB04 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 BB11 BB12 BB13 BB14 
BB05 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 BB11 BB12 BB13 BB14 
BB06 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 BB11 BB12 BB13 BB14 
BB07 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 BB11 BB12 BB13 BB14 
BB08 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 BB11 BB12 BB13 BB14 
BB09 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 BB11 BB12 BB13 BB14 
BB10 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 BB11 BB12 BB13 BB14 
BB11 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 BB11 BB12 BB13 BB14 
BB12 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 BB11 BB12 BB13 BB14 
BB13 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 BB11 BB12 BB13 BB14 
BB14 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 BB11 BB12 BB13 BB14 
BB15 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 BB11 BB12 BB13 BB14 BB15 
BB16 : BB01 BB02 BB03 BB04 BB05 BB06 BB07 BB08 BB09 BB10 BB11 BB12 BB13 BB14 BB16 

After computing reachability:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB15 ( cond )                     i label target hascall gcsafe idxlen newobj 
BB02 [0001]  2       BB01,BB14             1       [01D..02E)-> BB07 ( cond )                     i Loop label target hascall gcsafe idxlen nullcheck bwd bwd-target 
BB03 [0002]  1       BB02                  1       [02E..037)-> BB05 ( cond )                     i gcsafe idxlen bwd 
BB04 [0013]  1       BB03                  1       [02E..02F)-> BB06 (always)                     i hascall gcsafe bwd 
BB05 [0014]  1       BB03                  1       [02E..02F)                                     i label target hascall gcsafe bwd 
BB06 [0015]  2       BB04,BB05             1       [???..???)-> BB14 (always)                     internal label target gcsafe bwd 
BB07 [0003]  1       BB02                  1       [037..04B)-> BB10 ( cond )                     i label target hascall gcsafe bwd 
BB08 [0004]  1       BB07                  1       [000..062)-> BB16 ( cond )                     i hascall gcsafe newobj bwd 
BB09 [0020]  1       BB08                  1       [000..000)                                     i internal label target hascall gcsafe newobj bwd 
BB10 [0005]  2       BB07,BB09             1       [062..085)-> BB13 ( cond )                     i label target hascall gcsafe bwd 
BB11 [0006]  1       BB10                  1       [000..09C)-> BB16 ( cond )                     i hascall gcsafe newobj bwd 
BB12 [0028]  1       BB11                  1       [000..000)                                     i internal label target hascall gcsafe newobj bwd 
BB13 [0007]  2       BB10,BB12             1       [09C..0A6)                                     i label target hascall gcsafe bwd 
BB14 [0008]  2       BB06,BB13             1       [0A6..0B3)-> BB02 ( cond )                     i label target gcsafe idxlen bwd 
BB15 [0010]  2       BB01,BB14             1       [0B3..0C7)        (return)                     i label target hascall gcsafe 
BB16 [0027]  2       BB08,BB11             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist
*************** In fgComputeDoms
*************** In fgDebugCheckBBlist

Dominator computation start blocks (those blocks with no incoming edges):
BB01 
------------------------------------------------
BBnum  Dominated by
------------------------------------------------
BB01:  BB01 
BB02:  BB02 BB01 
BB03:  BB03 BB02 BB01 
BB04:  BB04 BB03 BB02 BB01 
BB05:  BB05 BB03 BB02 BB01 
BB06:  BB06 BB03 BB02 BB01 
BB07:  BB07 BB02 BB01 
BB08:  BB08 BB07 BB02 BB01 
BB09:  BB09 BB08 BB07 BB02 BB01 
BB10:  BB10 BB07 BB02 BB01 
BB11:  BB11 BB10 BB07 BB02 BB01 
BB12:  BB12 BB11 BB10 BB07 BB02 BB01 
BB16:  BB16 BB07 BB02 BB01 
BB13:  BB13 BB10 BB07 BB02 BB01 
BB14:  BB14 BB02 BB01 
BB15:  BB15 BB01 

Inside fgBuildDomTree

After computing the Dominance Tree:
BB01 : BB15 BB02 
BB02 : BB14 BB07 BB03 
BB03 : BB06 BB05 BB04 
BB07 : BB16 BB10 BB08 
BB08 : BB09 
BB10 : BB13 BB11 
BB11 : BB12 


After numbering the dominator tree:
BB01: pre=01, post=16
BB02: pre=03, post=15
BB03: pre=13, post=14
BB04: pre=16, post=13
BB05: pre=15, post=12
BB06: pre=14, post=11
BB07: pre=05, post=10
BB08: pre=11, post=09
BB09: pre=12, post=08
BB10: pre=07, post=07
BB11: pre=09, post=06
BB12: pre=10, post=05
BB13: pre=08, post=04
BB14: pre=04, post=02
BB15: pre=02, post=01
BB16: pre=06, post=03

*************** Finishing PHASE Compute blocks reachability

*************** Starting PHASE Optimize loops
*************** In optOptimizeLoops()

After optSetBlockWeights:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB15 ( cond )                     i label target hascall gcsafe idxlen newobj 
BB02 [0001]  2       BB01,BB14             0.50    [01D..02E)-> BB07 ( cond )                     i Loop label target hascall gcsafe idxlen nullcheck bwd bwd-target 
BB03 [0002]  1       BB02                  0.50    [02E..037)-> BB05 ( cond )                     i gcsafe idxlen bwd 
BB04 [0013]  1       BB03                  0.50    [02E..02F)-> BB06 (always)                     i hascall gcsafe bwd 
BB05 [0014]  1       BB03                  0.50    [02E..02F)                                     i label target hascall gcsafe bwd 
BB06 [0015]  2       BB04,BB05             0.50    [???..???)-> BB14 (always)                     internal label target gcsafe bwd 
BB07 [0003]  1       BB02                  0.50    [037..04B)-> BB10 ( cond )                     i label target hascall gcsafe bwd 
BB08 [0004]  1       BB07                  0.50    [000..062)-> BB16 ( cond )                     i hascall gcsafe newobj bwd 
BB09 [0020]  1       BB08                  0.50    [000..000)                                     i internal label target hascall gcsafe newobj bwd 
BB10 [0005]  2       BB07,BB09             0.50    [062..085)-> BB13 ( cond )                     i label target hascall gcsafe bwd 
BB11 [0006]  1       BB10                  0.50    [000..09C)-> BB16 ( cond )                     i hascall gcsafe newobj bwd 
BB12 [0028]  1       BB11                  0.50    [000..000)                                     i internal label target hascall gcsafe newobj bwd 
BB13 [0007]  2       BB10,BB12             0.50    [09C..0A6)                                     i label target hascall gcsafe bwd 
BB14 [0008]  2       BB06,BB13             0.50    [0A6..0B3)-> BB02 ( cond )                     i label target gcsafe idxlen bwd 
BB15 [0010]  2       BB01,BB14             1       [0B3..0C7)        (return)                     i label target hascall gcsafe 
BB16 [0027]  2       BB08,BB11             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist
*************** In optFindNaturalLoops()
Recorded loop L00, from BB02 to BB14 (Head=BB01, Entry=BB02, ExitCnt=3) [over V03 (ADD 1 ) from 0LT]

Final natural loop table:
L00, from BB02 to BB14 (Head=BB01, Entry=BB02, ExitCnt=3)

Marking a loop from BB02 to BB14
    BB02(wt=4   )
    BB03(wt=2   )
    BB04(wt=2   )
    BB05(wt=2   )
    BB06(wt=2   )
    BB07(wt=2   )
    BB08(wt=2   )
    BB09(wt=2   )
    BB10(wt=2   )
    BB11(wt=2   )
    BB12(wt=2   )
    BB13(wt=2   )
    BB14(wt=4   )
Found a total of 1 loops.
After loop weight marking:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB15 ( cond )                     i label target hascall gcsafe idxlen newobj 
BB02 [0001]  2       BB01,BB14             4     0 [01D..02E)-> BB07 ( cond )                     i Loop label target hascall gcsafe idxlen nullcheck bwd bwd-target 
BB03 [0002]  1       BB02                  2     0 [02E..037)-> BB05 ( cond )                     i gcsafe idxlen bwd 
BB04 [0013]  1       BB03                  2     0 [02E..02F)-> BB06 (always)                     i hascall gcsafe bwd 
BB05 [0014]  1       BB03                  2     0 [02E..02F)                                     i label target hascall gcsafe bwd 
BB06 [0015]  2       BB04,BB05             2     0 [???..???)-> BB14 (always)                     internal label target gcsafe bwd 
BB07 [0003]  1       BB02                  2     0 [037..04B)-> BB10 ( cond )                     i label target hascall gcsafe bwd 
BB08 [0004]  1       BB07                  2     0 [000..062)-> BB16 ( cond )                     i hascall gcsafe newobj bwd 
BB09 [0020]  1       BB08                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd 
BB10 [0005]  2       BB07,BB09             2     0 [062..085)-> BB13 ( cond )                     i label target hascall gcsafe bwd 
BB11 [0006]  1       BB10                  2     0 [000..09C)-> BB16 ( cond )                     i hascall gcsafe newobj bwd 
BB12 [0028]  1       BB11                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd 
BB13 [0007]  2       BB10,BB12             2     0 [09C..0A6)                                     i label target hascall gcsafe bwd 
BB14 [0008]  2       BB06,BB13             4     0 [0A6..0B3)-> BB02 ( cond )                     i label target gcsafe idxlen bwd 
BB15 [0010]  2       BB01,BB14             1       [0B3..0C7)        (return)                     i label target hascall gcsafe 
BB16 [0027]  2       BB08,BB11             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd 
-----------------------------------------------------------------------------------------------------------------------------------------


*************** Finishing PHASE Optimize loops

*************** Starting PHASE Clone loops

*************** In optCloneLoops()
Blocks/Trees at start of phase

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB15 ( cond )                     i label target hascall gcsafe idxlen newobj 
BB02 [0001]  2       BB01,BB14             4     0 [01D..02E)-> BB07 ( cond )                     i Loop label target hascall gcsafe idxlen nullcheck bwd bwd-target 
BB03 [0002]  1       BB02                  2     0 [02E..037)-> BB05 ( cond )                     i gcsafe idxlen bwd 
BB04 [0013]  1       BB03                  2     0 [02E..02F)-> BB06 (always)                     i hascall gcsafe bwd 
BB05 [0014]  1       BB03                  2     0 [02E..02F)                                     i label target hascall gcsafe bwd 
BB06 [0015]  2       BB04,BB05             2     0 [???..???)-> BB14 (always)                     internal label target gcsafe bwd 
BB07 [0003]  1       BB02                  2     0 [037..04B)-> BB10 ( cond )                     i label target hascall gcsafe bwd 
BB08 [0004]  1       BB07                  2     0 [000..062)-> BB16 ( cond )                     i hascall gcsafe newobj bwd 
BB09 [0020]  1       BB08                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd 
BB10 [0005]  2       BB07,BB09             2     0 [062..085)-> BB13 ( cond )                     i label target hascall gcsafe bwd 
BB11 [0006]  1       BB10                  2     0 [000..09C)-> BB16 ( cond )                     i hascall gcsafe newobj bwd 
BB12 [0028]  1       BB11                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd 
BB13 [0007]  2       BB10,BB12             2     0 [09C..0A6)                                     i label target hascall gcsafe bwd 
BB14 [0008]  2       BB06,BB13             4     0 [0A6..0B3)-> BB02 ( cond )                     i label target gcsafe idxlen bwd 
BB15 [0010]  2       BB01,BB14             1       [0B3..0C7)        (return)                     i label target hascall gcsafe 
BB16 [0027]  2       BB08,BB11             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..01D) -> BB15 (cond), preds={} succs={BB02,BB15}

***** BB01
STMT00001 (IL   ???...  ???)
               [000002] --CXG+------              *  CALL      ref    SolutionAnalyzer.Logger.Log
               [000317] #---G+------ arg1 in rdx  +--*  IND       ref   
               [000316] H----+------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Started enumerating project paths."
               [000003] H----+------ arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method
               [000001] -----+------ arg2 in r8   \--*  CNS_INT   int    2

***** BB01
STMT00002 (IL 0x00C...0x013)
               [000011] -AC--+------              *  ASG       ref   
               [000010] D----+-N----              +--*  LCL_VAR   ref    V07 tmp1         
               [000009] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000008] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00003 (IL   ???...  ???)
               [000013] --CXG+------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor
               [000012] -----+------ this in rcx  +--*  LCL_VAR   ref    V07 tmp1         
               [000007] -----+------ arg1 in rdx  \--*  CNS_INT   int    100

***** BB01
STMT00004 (IL 0x013...  ???)
               [000016] -A---+------              *  ASG       ref   
               [000015] D----+-N----              +--*  LCL_VAR   ref    V01 loc0         
               [000014] -----+------              \--*  LCL_VAR   ref    V07 tmp1         

***** BB01
STMT00005 (IL 0x014...0x015)
               [000019] -A---+------              *  ASG       ref   
               [000018] D----+-N----              +--*  LCL_VAR   ref    V02 loc1         
               [000017] -----+------              \--*  LCL_VAR   ref    V00 arg0         

***** BB01
STMT00006 (IL 0x016...0x017)
               [000022] -A---+------              *  ASG       int   
               [000021] D----+-N----              +--*  LCL_VAR   int    V03 loc2         
               [000020] -----+------              \--*  CNS_INT   int    0

***** BB01
STMT00071 (IL 0x0AA...  ???)
               [000426] ---X--------              *  JTRUE     void  
     (  9,  7) [000422] J--X---N----              \--*  LE        int   
     (  5,  4) [000423] ---X--------                 +--*  ARR_LENGTH int   
     (  3,  2) [000424] ------------                 |  \--*  LCL_VAR   ref    V02 loc1         
     (  3,  2) [000425] ------------                 \--*  LCL_VAR   int    V03 loc2         

------------ BB02 [01D..02E) -> BB07 (cond), preds={BB01,BB14} succs={BB03,BB07}

***** BB02
STMT00008 (IL 0x01D...0x020)
               [000032] -A-XG+------              *  ASG       ref   
               [000031] D----+-N----              +--*  LCL_VAR   ref    V04 loc3         
               [000334] ---XG+------              \--*  COMMA     ref   
               [000327] ---X-+------                 +--*  ARR_BOUNDS_CHECK_Rng void  
               [000029] -----+------                 |  +--*  LCL_VAR   int    V03 loc2         
               [000326] ---X-+------                 |  \--*  ARR_LENGTH int   
               [000028] -----+------                 |     \--*  LCL_VAR   ref    V02 loc1         
               [000030] a---G+------                 \--*  IND       ref   
               [000333] -----+------                    \--*  ADD       byref 
               [000324] -----+------                       +--*  LCL_VAR   ref    V02 loc1         
               [000332] -----+------                       \--*  ADD       long  
               [000330] -----+------                          +--*  LSH       long  
               [000328] -----+------                          |  +--*  CAST      long <- int
               [000325] i----+------                          |  |  \--*  LCL_VAR   int    V03 loc2         
               [000329] -----+-N----                          |  \--*  CNS_INT   long   3
               [000331] -----+------                          \--*  CNS_INT   long   16 Fseq[#FirstElem]

***** BB02
STMT00042 (IL 0x021...  ???)
               [000197] ---X-+------              *  NULLCHECK byte  
               [000196] -----+------              \--*  LCL_VAR   ref    V04 loc3         

***** BB02
STMT00010 (IL   ???...  ???)
               [000039] --CXG+------              *  JTRUE     void  
               [000038] J-CXG+-N----              \--*  EQ        int   
               [000195] --CXG+------                 +--*  CALL      int    System.String.EndsWith
               [000336] #---G+------ arg1 in rdx     |  +--*  IND       ref   
               [000335] H----+------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E ".csproj"
               [000033] -----+------ this in rcx     |  +--*  LCL_VAR   ref    V04 loc3         
               [000194] -----+------ arg2 in r8      |  \--*  CNS_INT   int    0
               [000037] -----+------                 \--*  CNS_INT   int    0

------------ BB03 [02E..037) -> BB05 (cond), preds={BB02} succs={BB04,BB05}

***** BB03
STMT00043 (IL 0x02E...  ???)
               [000204] -A-XG+------              *  ASG       int   
               [000203] ---XG+-N----              +--*  IND       int   
               [000341] -----+------              |  \--*  ADD       byref 
               [000177] -----+------              |     +--*  LCL_VAR   ref    V01 loc0         
               [000340] -----+------              |     \--*  CNS_INT   long   20 field offset Fseq[_version]
               [000202] ---XG+------              \--*  ADD       int   
               [000200] ---XG+------                 +--*  IND       int   
               [000343] -----+------                 |  \--*  ADD       byref 
               [000199] -----+------                 |     +--*  LCL_VAR   ref    V01 loc0         
               [000342] -----+------                 |     \--*  CNS_INT   long   20 field offset Fseq[_version]
               [000201] -----+------                 \--*  CNS_INT   int    1

***** BB03
STMT00044 (IL 0x02E...  ???)
               [000208] -A-XG+------              *  ASG       ref   
               [000207] D----+-N----              +--*  LCL_VAR   ref    V18 tmp12        
               [000206] ---XG+------              \--*  IND       ref   
               [000345] -----+------                 \--*  ADD       byref 
               [000205] -----+------                    +--*  LCL_VAR   ref    V01 loc0         
               [000344] -----+------                    \--*  CNS_INT   long   8 field offset Fseq[_items]

***** BB03
STMT00045 (IL 0x02E...  ???)
               [000212] -A-XG+------              *  ASG       int   
               [000211] D----+-N----              +--*  LCL_VAR   int    V19 tmp13        
               [000210] ---XG+------              \--*  IND       int   
               [000347] -----+------                 \--*  ADD       byref 
               [000209] -----+------                    +--*  LCL_VAR   ref    V01 loc0         
               [000346] -----+------                    \--*  CNS_INT   long   16 field offset Fseq[_size]

***** BB03
STMT00046 (IL 0x02E...  ???)
               [000217] ---X-+------              *  JTRUE     void  
               [000216] N--X-+-N-U--              \--*  GE        int   
               [000213] -----+------                 +--*  LCL_VAR   int    V19 tmp13        
               [000215] ---X-+------                 \--*  ARR_LENGTH int   
               [000214] -----+------                    \--*  LCL_VAR   ref    V18 tmp12        

------------ BB04 [02E..02F) -> BB06 (always), preds={BB03} succs={BB06}

***** BB04
STMT00048 (IL 0x02E...  ???)
               [000225] -A-XG+------              *  ASG       int   
               [000224] ---XG+-N----              +--*  IND       int   
               [000349] -----+------              |  \--*  ADD       byref 
               [000220] -----+------              |     +--*  LCL_VAR   ref    V01 loc0         
               [000348] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[_size]
               [000223] -----+------              \--*  ADD       int   
               [000221] -----+------                 +--*  LCL_VAR   int    V19 tmp13        
               [000222] -----+------                 \--*  CNS_INT   int    1

***** BB04
STMT00049 (IL 0x02E...  ???)
               [000229] --CXG+------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST
               [000226] -----+------ arg0 in rcx  +--*  LCL_VAR   ref    V18 tmp12        
               [000227] -----+------ arg1 in rdx  +--*  LCL_VAR   int    V19 tmp13        
               [000228] -----+------ arg2 in r8   \--*  LCL_VAR   ref    V04 loc3         

------------ BB05 [02E..02F), preds={BB03} succs={BB06}

***** BB05
STMT00047 (IL 0x02E...  ???)
               [000219] --CXG+------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize
               [000218] -----+------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         
               [000178] -----+------ arg1 in rdx  \--*  LCL_VAR   ref    V04 loc3         

------------ BB06 [???..???) -> BB14 (always), preds={BB04,BB05} succs={BB14}

***** BB06
STMT00050 (IL 0x02E...  ???)
               [000232] -A---+------              *  ASG       ref   
               [000231] D----+-N----              +--*  LCL_VAR   ref    V18 tmp12        
               [000230] -----+------              \--*  CNS_INT   ref    null

------------ BB07 [037..04B) -> BB10 (cond), preds={BB02} succs={BB08,BB10}

***** BB07
STMT00053 (IL 0x037...  ???)
               [000247] -ACXG+------              *  ASG       ref   
               [000246] D----+-N----              +--*  LCL_VAR   ref    V20 tmp14        
               [000236] --CXG+------              \--*  CALL      ref    System.IO.EnumerationOptions.FromSearchOption
               [000235] -----+------ arg0 in rcx     \--*  CNS_INT   int    1

***** BB07
STMT00013 (IL   ???...  ???)
               [000054] -ACXG+------              *  ASG       ref   
               [000053] D----+-N----              +--*  LCL_VAR   ref    V09 tmp3         
               [000245] --CXG+------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths
               [000357] #---G+------ arg1 in rdx     +--*  IND       ref   
               [000356] H----+------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*"
               [000040] -----+------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         
               [000244] -----+------ arg3 in r9      +--*  LCL_VAR   ref    V20 tmp14        
               [000243] -----+------ arg2 in r8      \--*  CNS_INT   int    2

***** BB07
STMT00012 (IL   ???...  ???)
               [000052] -ACXG+------              *  ASG       ref   
               [000051] D----+-N----              +--*  LCL_VAR   ref    V08 tmp2         
               [000050] --CXG+------              \--*  COMMA     ref   
               [000049] H-CXG+------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000047] -----+------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000048] -----+------ arg1 in rdx     |  \--*  CNS_INT   int    35
               [000045] n---G+------                 \--*  IND       ref   
               [000364] I----+------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0]

***** BB07
STMT00015 (IL   ???...0x049)
               [000062] -A---+------              *  ASG       ref   
               [000061] D----+-N----              +--*  LCL_VAR   ref    V10 tmp4         
               [000055] -----+------              \--*  LCL_VAR   ref    V09 tmp3         

***** BB07
STMT00016 (IL   ???...  ???)
               [000065] -A---+------              *  ASG       ref   
               [000064] D----+-N----              +--*  LCL_VAR   ref    V11 tmp5         
               [000056] -----+------              \--*  LCL_VAR   ref    V08 tmp2         

***** BB07
STMT00014 (IL   ???...  ???)
               [000060] -----+------              *  JTRUE     void  
               [000059] J----+-N----              \--*  NE        int   
               [000057] -----+------                 +--*  LCL_VAR   ref    V08 tmp2         
               [000058] -----+------                 \--*  CNS_INT   ref    null

------------ BB08 [000..062) -> BB16 (cond), preds={BB07} succs={BB09,BB16}

***** BB08
STMT00033 (IL   ???...0x05D)
               [000160] -AC--+------              *  ASG       ref   
               [000159] D----+-N----              +--*  LCL_VAR   ref    V17 tmp11        
               [000158] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000157] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB08
STMT00058 (IL   ???...  ???)
               [000262] -ACXG+------              *  ASG       ref   
               [000261] D----+-N----              +--*  LCL_VAR   ref    V21 tmp15        
               [000155] --CXG+------              \--*  COMMA     ref   
               [000154] H-CXG+------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000152] -----+------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000153] -----+------ arg1 in rdx     |  \--*  CNS_INT   int    35
               [000150] n---G+------                 \--*  IND       ref   
               [000368] I----+------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9]

***** BB08
STMT00054 (IL   ???...  ???)
               [000252] -----+------              *  JTRUE     void  
               [000251] J----+-N----              \--*  EQ        int   
               [000249] -----+------                 +--*  LCL_VAR   ref    V21 tmp15        
               [000250] -----+------                 \--*  CNS_INT   ref    null

------------ BB09 [000..000), preds={BB08} succs={BB10}

***** BB09
STMT00055 (IL   ???...  ???)
               [000255] -A-XG+------              *  ASG       ref   
               [000254] ---XG+-N----              +--*  IND       ref   
               [000370] -----+------              |  \--*  ADD       byref 
               [000161] -----+------              |     +--*  LCL_VAR   ref    V17 tmp11        
               [000369] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
               [000253] -----+------              \--*  LCL_VAR   ref    V21 tmp15        

***** BB09
STMT00056 (IL   ???...  ???)
               [000259] -A-XG+------              *  ASG       long  
               [000258] ---XG+-N----              +--*  IND       long  
               [000372] -----+------              |  \--*  ADD       byref 
               [000256] -----+------              |     +--*  LCL_VAR   ref    V17 tmp11        
               [000371] -----+------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
               [000156] H----+------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

***** BB09
STMT00035 (IL 0x05C...  ???)
               [000171] -ACXG+------              *  COMMA     void  
               [000170] H-CXG+------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000168] -----+------ arg0 in rcx  |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000169] -----+------ arg1 in rdx  |  \--*  CNS_INT   int    35
               [000166] -A--G+------              \--*  ASG       ref   
               [000165] n---G+-N----                 +--*  IND       ref   
               [000375] I----+------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0]
               [000164] -----+------                 \--*  LCL_VAR   ref    V17 tmp11        

***** BB09
STMT00036 (IL   ???...0x05D)
               [000175] -A---+------              *  ASG       ref   
               [000174] D----+-N----              +--*  LCL_VAR   ref    V11 tmp5         
               [000163] -----+------              \--*  LCL_VAR   ref    V17 tmp11        

------------ BB10 [062..085) -> BB13 (cond), preds={BB07,BB09} succs={BB11,BB13}

***** BB10
STMT00018 (IL   ???...  ???)
               [000075] -ACXG+------              *  ASG       ref   
               [000074] D----+-N----              +--*  LCL_VAR   ref    V05 loc4         
               [000071] --CXG+------              \--*  CALL      ref    System.Linq.Enumerable.Where
               [000070] -----+------ arg2 in r8      +--*  LCL_VAR   ref    V11 tmp5         
               [000069] -----+------ arg1 in rdx     +--*  LCL_VAR   ref    V10 tmp4         
               [000072] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB10
STMT00061 (IL 0x069...  ???)
               [000283] -ACXG+------              *  ASG       ref   
               [000282] D----+-N----              +--*  LCL_VAR   ref    V23 tmp17        
               [000276] --CXG+------              \--*  COMMA     ref   
               [000275] H-CXG+------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000273] -----+------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e783cd8
               [000274] -----+------ arg1 in rdx     |  \--*  CNS_INT   int    40
               [000271] n---G+------                 \--*  IND       ref   
               [000381] I----+------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<Compatible>k__BackingField]

***** BB10
STMT00063 (IL   ???...  ???)
               [000290] -ACXG+------              *  ASG       ref   
               [000289] D----+-N----              +--*  LCL_VAR   ref    V24 tmp18        
               [000281] --CXG+------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths
               [000383] #---G+------ arg1 in rdx     +--*  IND       ref   
               [000382] H----+------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*.csproj"
               [000077] -----+------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         
               [000280] -----+------ arg3 in r9      +--*  LCL_VAR   ref    V23 tmp17        
               [000279] -----+------ arg2 in r8      \--*  CNS_INT   int    1

***** BB10
STMT00062 (IL   ???...  ???)
               [000288] --CXG+------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
               [000286] ---XG+------ arg1 in rdx  +--*  IND       int   
               [000389] -----+------              |  \--*  ADD       byref 
               [000285] -----+------              |     +--*  LCL_VAR   ref    V01 loc0         
               [000388] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[_size]
               [000076] -----+------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         
               [000287] -----+------ arg2 in r8   \--*  LCL_VAR   ref    V24 tmp18        

***** BB10
STMT00021 (IL 0x07A...  ???)
               [000091] -ACXG+------              *  ASG       ref   
               [000090] D----+-N----              +--*  LCL_VAR   ref    V12 tmp6         
               [000089] --CXG+------              \--*  COMMA     ref   
               [000088] H-CXG+------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000086] -----+------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000087] -----+------ arg1 in rdx     |  \--*  CNS_INT   int    35
               [000084] n---G+------                 \--*  IND       ref   
               [000395] I----+------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1]

***** BB10
STMT00023 (IL   ???...0x083)
               [000098] -A---+------              *  ASG       ref   
               [000097] D----+-N----              +--*  LCL_VAR   ref    V13 tmp7         
               [000082] -----+------              \--*  LCL_VAR   ref    V01 loc0         

***** BB10
STMT00024 (IL   ???...  ???)
               [000101] -A---+------              *  ASG       ref   
               [000100] D----+-N----              +--*  LCL_VAR   ref    V14 tmp8         
               [000083] -----+------              \--*  LCL_VAR   ref    V05 loc4         

***** BB10
STMT00025 (IL   ???...  ???)
               [000104] -A---+------              *  ASG       ref   
               [000103] D----+-N----              +--*  LCL_VAR   ref    V15 tmp9         
               [000092] -----+------              \--*  LCL_VAR   ref    V12 tmp6         

***** BB10
STMT00022 (IL   ???...  ???)
               [000096] -----+------              *  JTRUE     void  
               [000095] J----+-N----              \--*  NE        int   
               [000093] -----+------                 +--*  LCL_VAR   ref    V12 tmp6         
               [000094] -----+------                 \--*  CNS_INT   ref    null

------------ BB11 [000..09C) -> BB16 (cond), preds={BB10} succs={BB12,BB16}

***** BB11
STMT00029 (IL   ???...0x097)
               [000131] -AC--+------              *  ASG       ref   
               [000130] D----+-N----              +--*  LCL_VAR   ref    V16 tmp10        
               [000129] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000128] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB11
STMT00068 (IL   ???...  ???)
               [000305] -ACXG+------              *  ASG       ref   
               [000304] D----+-N----              +--*  LCL_VAR   ref    V25 tmp19        
               [000126] --CXG+------              \--*  COMMA     ref   
               [000125] H-CXG+------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000123] -----+------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000124] -----+------ arg1 in rdx     |  \--*  CNS_INT   int    35
               [000121] n---G+------                 \--*  IND       ref   
               [000399] I----+------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9]

***** BB11
STMT00064 (IL   ???...  ???)
               [000295] -----+------              *  JTRUE     void  
               [000294] J----+-N----              \--*  EQ        int   
               [000292] -----+------                 +--*  LCL_VAR   ref    V25 tmp19        
               [000293] -----+------                 \--*  CNS_INT   ref    null

------------ BB12 [000..000), preds={BB11} succs={BB13}

***** BB12
STMT00065 (IL   ???...  ???)
               [000298] -A-XG+------              *  ASG       ref   
               [000297] ---XG+-N----              +--*  IND       ref   
               [000401] -----+------              |  \--*  ADD       byref 
               [000132] -----+------              |     +--*  LCL_VAR   ref    V16 tmp10        
               [000400] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
               [000296] -----+------              \--*  LCL_VAR   ref    V25 tmp19        

***** BB12
STMT00066 (IL   ???...  ???)
               [000302] -A-XG+------              *  ASG       long  
               [000301] ---XG+-N----              +--*  IND       long  
               [000403] -----+------              |  \--*  ADD       byref 
               [000299] -----+------              |     +--*  LCL_VAR   ref    V16 tmp10        
               [000402] -----+------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
               [000127] H----+------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

***** BB12
STMT00031 (IL 0x096...  ???)
               [000142] -ACXG+------              *  COMMA     void  
               [000141] H-CXG+------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000139] -----+------ arg0 in rcx  |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000140] -----+------ arg1 in rdx  |  \--*  CNS_INT   int    35
               [000137] -A--G+------              \--*  ASG       ref   
               [000136] n---G+-N----                 +--*  IND       ref   
               [000406] I----+------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1]
               [000135] -----+------                 \--*  LCL_VAR   ref    V16 tmp10        

***** BB12
STMT00032 (IL   ???...0x097)
               [000148] -A---+------              *  ASG       ref   
               [000147] D----+-N----              +--*  LCL_VAR   ref    V15 tmp9         
               [000134] -----+------              \--*  LCL_VAR   ref    V16 tmp10        

------------ BB13 [09C..0A6), preds={BB10,BB12} succs={BB14}

***** BB13
STMT00070 (IL   ???...  ???)
               [000313] -ACXG+------              *  ASG       ref   
               [000312] D----+-N----              +--*  LCL_VAR   ref    V27 tmp21        
               [000112] --CXG+------              \--*  CALL      ref    System.Linq.Enumerable.SelectMany
               [000111] -----+------ arg2 in r8      +--*  LCL_VAR   ref    V15 tmp9         
               [000110] -----+------ arg1 in rdx     +--*  LCL_VAR   ref    V14 tmp8         
               [000113] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB13
STMT00069 (IL   ???...  ???)
               [000311] --CXG+------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
               [000309] ---XG+------ arg1 in rdx  +--*  IND       int   
               [000411] -----+------              |  \--*  ADD       byref 
               [000308] -----+------              |     +--*  LCL_VAR   ref    V13 tmp7         
               [000410] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[_size]
               [000109] -----+------ this in rcx  +--*  LCL_VAR   ref    V13 tmp7         
               [000310] -----+------ arg2 in r8   \--*  LCL_VAR   ref    V27 tmp21        

------------ BB14 [0A6..0B3) -> BB02 (cond), preds={BB06,BB13} succs={BB15,BB02}

***** BB14
STMT00028 (IL 0x0A6...0x0A9)
               [000120] -A---+------              *  ASG       int   
               [000119] D----+-N----              +--*  LCL_VAR   int    V03 loc2         
               [000118] -----+------              \--*  ADD       int   
               [000116] -----+------                 +--*  LCL_VAR   int    V03 loc2         
               [000117] -----+------                 \--*  CNS_INT   int    1

***** BB14
STMT00007 (IL 0x0AA...0x0AE)
               [000027] ---X-+------              *  JTRUE     void  
     (  9,  7) [000026] J--X---N----              \--*  GT        int   
     (  5,  4) [000025] ---X--------                 +--*  ARR_LENGTH int   
     (  3,  2) [000024] ------------                 |  \--*  LCL_VAR   ref    V02 loc1         
     (  3,  2) [000023] ------------                 \--*  LCL_VAR   int    V03 loc2         

------------ BB15 [0B3..0C7) (return), preds={BB01,BB14} succs={}

***** BB15
STMT00038 (IL 0x0B3...0x0C4)
               [000181] --CXG+------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle
               [000180] -----+------ arg1 in rdx  +--*  LCL_VAR   ref    V01 loc0         
               [000182] H----+------ arg0 in rcx  \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB15
STMT00040 (IL   ???...  ???)
               [000185] --CXG+------              *  CALL      ref    SolutionAnalyzer.Logger.Log
               [000418] #---G+------ arg1 in rdx  +--*  IND       ref   
               [000417] H----+------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Enumerated and shuffled the project paths."
               [000186] H----+------ arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method
               [000184] -----+------ arg2 in r8   \--*  CNS_INT   int    2

***** BB15
STMT00041 (IL 0x0C5...0x0C6)
               [000191] -----+------              *  RETURN    ref   
               [000190] -----+------              \--*  LCL_VAR   ref    V01 loc0         

------------ BB16 [000..000) (throw), preds={BB08,BB11} succs={}

***** BB16
STMT00067 (IL   ???...  ???)
               [000303] --CXG+------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

-------------------------------------------------------------------------------------------------------------------
Considering loop 0 to clone for optimizations.
Checking blocks BB02..BB15 for optimization candidates
Found ArrIndex at tree [000334] which is equivalent to: V02[V03]
------------------------------------------------------------


After loop cloning:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB15 ( cond )                     i label target hascall gcsafe idxlen newobj 
BB02 [0001]  2       BB01,BB14             4     0 [01D..02E)-> BB07 ( cond )                     i Loop label target hascall gcsafe idxlen nullcheck bwd bwd-target 
BB03 [0002]  1       BB02                  2     0 [02E..037)-> BB05 ( cond )                     i gcsafe idxlen bwd 
BB04 [0013]  1       BB03                  2     0 [02E..02F)-> BB06 (always)                     i hascall gcsafe bwd 
BB05 [0014]  1       BB03                  2     0 [02E..02F)                                     i label target hascall gcsafe bwd 
BB06 [0015]  2       BB04,BB05             2     0 [???..???)-> BB14 (always)                     internal label target gcsafe bwd 
BB07 [0003]  1       BB02                  2     0 [037..04B)-> BB10 ( cond )                     i label target hascall gcsafe bwd 
BB08 [0004]  1       BB07                  2     0 [000..062)-> BB16 ( cond )                     i hascall gcsafe newobj bwd 
BB09 [0020]  1       BB08                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd 
BB10 [0005]  2       BB07,BB09             2     0 [062..085)-> BB13 ( cond )                     i label target hascall gcsafe bwd 
BB11 [0006]  1       BB10                  2     0 [000..09C)-> BB16 ( cond )                     i hascall gcsafe newobj bwd 
BB12 [0028]  1       BB11                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd 
BB13 [0007]  2       BB10,BB12             2     0 [09C..0A6)                                     i label target hascall gcsafe bwd 
BB14 [0008]  2       BB06,BB13             4     0 [0A6..0B3)-> BB02 ( cond )                     i label target gcsafe idxlen bwd 
BB15 [0010]  2       BB01,BB14             1       [0B3..0C7)        (return)                     i label target hascall gcsafe 
BB16 [0027]  2       BB08,BB11             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..01D) -> BB15 (cond), preds={} succs={BB02,BB15}

***** BB01
STMT00001 (IL   ???...  ???)
               [000002] --CXG+------              *  CALL      ref    SolutionAnalyzer.Logger.Log
               [000317] #---G+------ arg1 in rdx  +--*  IND       ref   
               [000316] H----+------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Started enumerating project paths."
               [000003] H----+------ arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method
               [000001] -----+------ arg2 in r8   \--*  CNS_INT   int    2

***** BB01
STMT00002 (IL 0x00C...0x013)
               [000011] -AC--+------              *  ASG       ref   
               [000010] D----+-N----              +--*  LCL_VAR   ref    V07 tmp1         
               [000009] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000008] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00003 (IL   ???...  ???)
               [000013] --CXG+------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor
               [000012] -----+------ this in rcx  +--*  LCL_VAR   ref    V07 tmp1         
               [000007] -----+------ arg1 in rdx  \--*  CNS_INT   int    100

***** BB01
STMT00004 (IL 0x013...  ???)
               [000016] -A---+------              *  ASG       ref   
               [000015] D----+-N----              +--*  LCL_VAR   ref    V01 loc0         
               [000014] -----+------              \--*  LCL_VAR   ref    V07 tmp1         

***** BB01
STMT00005 (IL 0x014...0x015)
               [000019] -A---+------              *  ASG       ref   
               [000018] D----+-N----              +--*  LCL_VAR   ref    V02 loc1         
               [000017] -----+------              \--*  LCL_VAR   ref    V00 arg0         

***** BB01
STMT00006 (IL 0x016...0x017)
               [000022] -A---+------              *  ASG       int   
               [000021] D----+-N----              +--*  LCL_VAR   int    V03 loc2         
               [000020] -----+------              \--*  CNS_INT   int    0

***** BB01
STMT00071 (IL 0x0AA...  ???)
               [000426] ---X--------              *  JTRUE     void  
     (  9,  7) [000422] J--X---N----              \--*  LE        int   
     (  5,  4) [000423] ---X--------                 +--*  ARR_LENGTH int   
     (  3,  2) [000424] ------------                 |  \--*  LCL_VAR   ref    V02 loc1         
     (  3,  2) [000425] ------------                 \--*  LCL_VAR   int    V03 loc2         

------------ BB02 [01D..02E) -> BB07 (cond), preds={BB01,BB14} succs={BB03,BB07}

***** BB02
STMT00008 (IL 0x01D...0x020)
               [000032] -A-XG+------              *  ASG       ref   
               [000031] D----+-N----              +--*  LCL_VAR   ref    V04 loc3         
               [000334] ---XG+------              \--*  COMMA     ref   
               [000327] ---X-+------                 +--*  ARR_BOUNDS_CHECK_Rng void  
               [000029] -----+------                 |  +--*  LCL_VAR   int    V03 loc2         
               [000326] ---X-+------                 |  \--*  ARR_LENGTH int   
               [000028] -----+------                 |     \--*  LCL_VAR   ref    V02 loc1         
               [000030] a---G+------                 \--*  IND       ref   
               [000333] -----+------                    \--*  ADD       byref 
               [000324] -----+------                       +--*  LCL_VAR   ref    V02 loc1         
               [000332] -----+------                       \--*  ADD       long  
               [000330] -----+------                          +--*  LSH       long  
               [000328] -----+------                          |  +--*  CAST      long <- int
               [000325] i----+------                          |  |  \--*  LCL_VAR   int    V03 loc2         
               [000329] -----+-N----                          |  \--*  CNS_INT   long   3
               [000331] -----+------                          \--*  CNS_INT   long   16 Fseq[#FirstElem]

***** BB02
STMT00042 (IL 0x021...  ???)
               [000197] ---X-+------              *  NULLCHECK byte  
               [000196] -----+------              \--*  LCL_VAR   ref    V04 loc3         

***** BB02
STMT00010 (IL   ???...  ???)
               [000039] --CXG+------              *  JTRUE     void  
               [000038] J-CXG+-N----              \--*  EQ        int   
               [000195] --CXG+------                 +--*  CALL      int    System.String.EndsWith
               [000336] #---G+------ arg1 in rdx     |  +--*  IND       ref   
               [000335] H----+------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E ".csproj"
               [000033] -----+------ this in rcx     |  +--*  LCL_VAR   ref    V04 loc3         
               [000194] -----+------ arg2 in r8      |  \--*  CNS_INT   int    0
               [000037] -----+------                 \--*  CNS_INT   int    0

------------ BB03 [02E..037) -> BB05 (cond), preds={BB02} succs={BB04,BB05}

***** BB03
STMT00043 (IL 0x02E...  ???)
               [000204] -A-XG+------              *  ASG       int   
               [000203] ---XG+-N----              +--*  IND       int   
               [000341] -----+------              |  \--*  ADD       byref 
               [000177] -----+------              |     +--*  LCL_VAR   ref    V01 loc0         
               [000340] -----+------              |     \--*  CNS_INT   long   20 field offset Fseq[_version]
               [000202] ---XG+------              \--*  ADD       int   
               [000200] ---XG+------                 +--*  IND       int   
               [000343] -----+------                 |  \--*  ADD       byref 
               [000199] -----+------                 |     +--*  LCL_VAR   ref    V01 loc0         
               [000342] -----+------                 |     \--*  CNS_INT   long   20 field offset Fseq[_version]
               [000201] -----+------                 \--*  CNS_INT   int    1

***** BB03
STMT00044 (IL 0x02E...  ???)
               [000208] -A-XG+------              *  ASG       ref   
               [000207] D----+-N----              +--*  LCL_VAR   ref    V18 tmp12        
               [000206] ---XG+------              \--*  IND       ref   
               [000345] -----+------                 \--*  ADD       byref 
               [000205] -----+------                    +--*  LCL_VAR   ref    V01 loc0         
               [000344] -----+------                    \--*  CNS_INT   long   8 field offset Fseq[_items]

***** BB03
STMT00045 (IL 0x02E...  ???)
               [000212] -A-XG+------              *  ASG       int   
               [000211] D----+-N----              +--*  LCL_VAR   int    V19 tmp13        
               [000210] ---XG+------              \--*  IND       int   
               [000347] -----+------                 \--*  ADD       byref 
               [000209] -----+------                    +--*  LCL_VAR   ref    V01 loc0         
               [000346] -----+------                    \--*  CNS_INT   long   16 field offset Fseq[_size]

***** BB03
STMT00046 (IL 0x02E...  ???)
               [000217] ---X-+------              *  JTRUE     void  
               [000216] N--X-+-N-U--              \--*  GE        int   
               [000213] -----+------                 +--*  LCL_VAR   int    V19 tmp13        
               [000215] ---X-+------                 \--*  ARR_LENGTH int   
               [000214] -----+------                    \--*  LCL_VAR   ref    V18 tmp12        

------------ BB04 [02E..02F) -> BB06 (always), preds={BB03} succs={BB06}

***** BB04
STMT00048 (IL 0x02E...  ???)
               [000225] -A-XG+------              *  ASG       int   
               [000224] ---XG+-N----              +--*  IND       int   
               [000349] -----+------              |  \--*  ADD       byref 
               [000220] -----+------              |     +--*  LCL_VAR   ref    V01 loc0         
               [000348] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[_size]
               [000223] -----+------              \--*  ADD       int   
               [000221] -----+------                 +--*  LCL_VAR   int    V19 tmp13        
               [000222] -----+------                 \--*  CNS_INT   int    1

***** BB04
STMT00049 (IL 0x02E...  ???)
               [000229] --CXG+------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST
               [000226] -----+------ arg0 in rcx  +--*  LCL_VAR   ref    V18 tmp12        
               [000227] -----+------ arg1 in rdx  +--*  LCL_VAR   int    V19 tmp13        
               [000228] -----+------ arg2 in r8   \--*  LCL_VAR   ref    V04 loc3         

------------ BB05 [02E..02F), preds={BB03} succs={BB06}

***** BB05
STMT00047 (IL 0x02E...  ???)
               [000219] --CXG+------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize
               [000218] -----+------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         
               [000178] -----+------ arg1 in rdx  \--*  LCL_VAR   ref    V04 loc3         

------------ BB06 [???..???) -> BB14 (always), preds={BB04,BB05} succs={BB14}

***** BB06
STMT00050 (IL 0x02E...  ???)
               [000232] -A---+------              *  ASG       ref   
               [000231] D----+-N----              +--*  LCL_VAR   ref    V18 tmp12        
               [000230] -----+------              \--*  CNS_INT   ref    null

------------ BB07 [037..04B) -> BB10 (cond), preds={BB02} succs={BB08,BB10}

***** BB07
STMT00053 (IL 0x037...  ???)
               [000247] -ACXG+------              *  ASG       ref   
               [000246] D----+-N----              +--*  LCL_VAR   ref    V20 tmp14        
               [000236] --CXG+------              \--*  CALL      ref    System.IO.EnumerationOptions.FromSearchOption
               [000235] -----+------ arg0 in rcx     \--*  CNS_INT   int    1

***** BB07
STMT00013 (IL   ???...  ???)
               [000054] -ACXG+------              *  ASG       ref   
               [000053] D----+-N----              +--*  LCL_VAR   ref    V09 tmp3         
               [000245] --CXG+------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths
               [000357] #---G+------ arg1 in rdx     +--*  IND       ref   
               [000356] H----+------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*"
               [000040] -----+------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         
               [000244] -----+------ arg3 in r9      +--*  LCL_VAR   ref    V20 tmp14        
               [000243] -----+------ arg2 in r8      \--*  CNS_INT   int    2

***** BB07
STMT00012 (IL   ???...  ???)
               [000052] -ACXG+------              *  ASG       ref   
               [000051] D----+-N----              +--*  LCL_VAR   ref    V08 tmp2         
               [000050] --CXG+------              \--*  COMMA     ref   
               [000049] H-CXG+------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000047] -----+------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000048] -----+------ arg1 in rdx     |  \--*  CNS_INT   int    35
               [000045] n---G+------                 \--*  IND       ref   
               [000364] I----+------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0]

***** BB07
STMT00015 (IL   ???...0x049)
               [000062] -A---+------              *  ASG       ref   
               [000061] D----+-N----              +--*  LCL_VAR   ref    V10 tmp4         
               [000055] -----+------              \--*  LCL_VAR   ref    V09 tmp3         

***** BB07
STMT00016 (IL   ???...  ???)
               [000065] -A---+------              *  ASG       ref   
               [000064] D----+-N----              +--*  LCL_VAR   ref    V11 tmp5         
               [000056] -----+------              \--*  LCL_VAR   ref    V08 tmp2         

***** BB07
STMT00014 (IL   ???...  ???)
               [000060] -----+------              *  JTRUE     void  
               [000059] J----+-N----              \--*  NE        int   
               [000057] -----+------                 +--*  LCL_VAR   ref    V08 tmp2         
               [000058] -----+------                 \--*  CNS_INT   ref    null

------------ BB08 [000..062) -> BB16 (cond), preds={BB07} succs={BB09,BB16}

***** BB08
STMT00033 (IL   ???...0x05D)
               [000160] -AC--+------              *  ASG       ref   
               [000159] D----+-N----              +--*  LCL_VAR   ref    V17 tmp11        
               [000158] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000157] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB08
STMT00058 (IL   ???...  ???)
               [000262] -ACXG+------              *  ASG       ref   
               [000261] D----+-N----              +--*  LCL_VAR   ref    V21 tmp15        
               [000155] --CXG+------              \--*  COMMA     ref   
               [000154] H-CXG+------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000152] -----+------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000153] -----+------ arg1 in rdx     |  \--*  CNS_INT   int    35
               [000150] n---G+------                 \--*  IND       ref   
               [000368] I----+------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9]

***** BB08
STMT00054 (IL   ???...  ???)
               [000252] -----+------              *  JTRUE     void  
               [000251] J----+-N----              \--*  EQ        int   
               [000249] -----+------                 +--*  LCL_VAR   ref    V21 tmp15        
               [000250] -----+------                 \--*  CNS_INT   ref    null

------------ BB09 [000..000), preds={BB08} succs={BB10}

***** BB09
STMT00055 (IL   ???...  ???)
               [000255] -A-XG+------              *  ASG       ref   
               [000254] ---XG+-N----              +--*  IND       ref   
               [000370] -----+------              |  \--*  ADD       byref 
               [000161] -----+------              |     +--*  LCL_VAR   ref    V17 tmp11        
               [000369] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
               [000253] -----+------              \--*  LCL_VAR   ref    V21 tmp15        

***** BB09
STMT00056 (IL   ???...  ???)
               [000259] -A-XG+------              *  ASG       long  
               [000258] ---XG+-N----              +--*  IND       long  
               [000372] -----+------              |  \--*  ADD       byref 
               [000256] -----+------              |     +--*  LCL_VAR   ref    V17 tmp11        
               [000371] -----+------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
               [000156] H----+------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

***** BB09
STMT00035 (IL 0x05C...  ???)
               [000171] -ACXG+------              *  COMMA     void  
               [000170] H-CXG+------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000168] -----+------ arg0 in rcx  |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000169] -----+------ arg1 in rdx  |  \--*  CNS_INT   int    35
               [000166] -A--G+------              \--*  ASG       ref   
               [000165] n---G+-N----                 +--*  IND       ref   
               [000375] I----+------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0]
               [000164] -----+------                 \--*  LCL_VAR   ref    V17 tmp11        

***** BB09
STMT00036 (IL   ???...0x05D)
               [000175] -A---+------              *  ASG       ref   
               [000174] D----+-N----              +--*  LCL_VAR   ref    V11 tmp5         
               [000163] -----+------              \--*  LCL_VAR   ref    V17 tmp11        

------------ BB10 [062..085) -> BB13 (cond), preds={BB07,BB09} succs={BB11,BB13}

***** BB10
STMT00018 (IL   ???...  ???)
               [000075] -ACXG+------              *  ASG       ref   
               [000074] D----+-N----              +--*  LCL_VAR   ref    V05 loc4         
               [000071] --CXG+------              \--*  CALL      ref    System.Linq.Enumerable.Where
               [000070] -----+------ arg2 in r8      +--*  LCL_VAR   ref    V11 tmp5         
               [000069] -----+------ arg1 in rdx     +--*  LCL_VAR   ref    V10 tmp4         
               [000072] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB10
STMT00061 (IL 0x069...  ???)
               [000283] -ACXG+------              *  ASG       ref   
               [000282] D----+-N----              +--*  LCL_VAR   ref    V23 tmp17        
               [000276] --CXG+------              \--*  COMMA     ref   
               [000275] H-CXG+------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000273] -----+------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e783cd8
               [000274] -----+------ arg1 in rdx     |  \--*  CNS_INT   int    40
               [000271] n---G+------                 \--*  IND       ref   
               [000381] I----+------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<Compatible>k__BackingField]

***** BB10
STMT00063 (IL   ???...  ???)
               [000290] -ACXG+------              *  ASG       ref   
               [000289] D----+-N----              +--*  LCL_VAR   ref    V24 tmp18        
               [000281] --CXG+------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths
               [000383] #---G+------ arg1 in rdx     +--*  IND       ref   
               [000382] H----+------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*.csproj"
               [000077] -----+------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         
               [000280] -----+------ arg3 in r9      +--*  LCL_VAR   ref    V23 tmp17        
               [000279] -----+------ arg2 in r8      \--*  CNS_INT   int    1

***** BB10
STMT00062 (IL   ???...  ???)
               [000288] --CXG+------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
               [000286] ---XG+------ arg1 in rdx  +--*  IND       int   
               [000389] -----+------              |  \--*  ADD       byref 
               [000285] -----+------              |     +--*  LCL_VAR   ref    V01 loc0         
               [000388] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[_size]
               [000076] -----+------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         
               [000287] -----+------ arg2 in r8   \--*  LCL_VAR   ref    V24 tmp18        

***** BB10
STMT00021 (IL 0x07A...  ???)
               [000091] -ACXG+------              *  ASG       ref   
               [000090] D----+-N----              +--*  LCL_VAR   ref    V12 tmp6         
               [000089] --CXG+------              \--*  COMMA     ref   
               [000088] H-CXG+------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000086] -----+------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000087] -----+------ arg1 in rdx     |  \--*  CNS_INT   int    35
               [000084] n---G+------                 \--*  IND       ref   
               [000395] I----+------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1]

***** BB10
STMT00023 (IL   ???...0x083)
               [000098] -A---+------              *  ASG       ref   
               [000097] D----+-N----              +--*  LCL_VAR   ref    V13 tmp7         
               [000082] -----+------              \--*  LCL_VAR   ref    V01 loc0         

***** BB10
STMT00024 (IL   ???...  ???)
               [000101] -A---+------              *  ASG       ref   
               [000100] D----+-N----              +--*  LCL_VAR   ref    V14 tmp8         
               [000083] -----+------              \--*  LCL_VAR   ref    V05 loc4         

***** BB10
STMT00025 (IL   ???...  ???)
               [000104] -A---+------              *  ASG       ref   
               [000103] D----+-N----              +--*  LCL_VAR   ref    V15 tmp9         
               [000092] -----+------              \--*  LCL_VAR   ref    V12 tmp6         

***** BB10
STMT00022 (IL   ???...  ???)
               [000096] -----+------              *  JTRUE     void  
               [000095] J----+-N----              \--*  NE        int   
               [000093] -----+------                 +--*  LCL_VAR   ref    V12 tmp6         
               [000094] -----+------                 \--*  CNS_INT   ref    null

------------ BB11 [000..09C) -> BB16 (cond), preds={BB10} succs={BB12,BB16}

***** BB11
STMT00029 (IL   ???...0x097)
               [000131] -AC--+------              *  ASG       ref   
               [000130] D----+-N----              +--*  LCL_VAR   ref    V16 tmp10        
               [000129] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000128] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB11
STMT00068 (IL   ???...  ???)
               [000305] -ACXG+------              *  ASG       ref   
               [000304] D----+-N----              +--*  LCL_VAR   ref    V25 tmp19        
               [000126] --CXG+------              \--*  COMMA     ref   
               [000125] H-CXG+------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000123] -----+------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000124] -----+------ arg1 in rdx     |  \--*  CNS_INT   int    35
               [000121] n---G+------                 \--*  IND       ref   
               [000399] I----+------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9]

***** BB11
STMT00064 (IL   ???...  ???)
               [000295] -----+------              *  JTRUE     void  
               [000294] J----+-N----              \--*  EQ        int   
               [000292] -----+------                 +--*  LCL_VAR   ref    V25 tmp19        
               [000293] -----+------                 \--*  CNS_INT   ref    null

------------ BB12 [000..000), preds={BB11} succs={BB13}

***** BB12
STMT00065 (IL   ???...  ???)
               [000298] -A-XG+------              *  ASG       ref   
               [000297] ---XG+-N----              +--*  IND       ref   
               [000401] -----+------              |  \--*  ADD       byref 
               [000132] -----+------              |     +--*  LCL_VAR   ref    V16 tmp10        
               [000400] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
               [000296] -----+------              \--*  LCL_VAR   ref    V25 tmp19        

***** BB12
STMT00066 (IL   ???...  ???)
               [000302] -A-XG+------              *  ASG       long  
               [000301] ---XG+-N----              +--*  IND       long  
               [000403] -----+------              |  \--*  ADD       byref 
               [000299] -----+------              |     +--*  LCL_VAR   ref    V16 tmp10        
               [000402] -----+------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
               [000127] H----+------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

***** BB12
STMT00031 (IL 0x096...  ???)
               [000142] -ACXG+------              *  COMMA     void  
               [000141] H-CXG+------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000139] -----+------ arg0 in rcx  |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000140] -----+------ arg1 in rdx  |  \--*  CNS_INT   int    35
               [000137] -A--G+------              \--*  ASG       ref   
               [000136] n---G+-N----                 +--*  IND       ref   
               [000406] I----+------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1]
               [000135] -----+------                 \--*  LCL_VAR   ref    V16 tmp10        

***** BB12
STMT00032 (IL   ???...0x097)
               [000148] -A---+------              *  ASG       ref   
               [000147] D----+-N----              +--*  LCL_VAR   ref    V15 tmp9         
               [000134] -----+------              \--*  LCL_VAR   ref    V16 tmp10        

------------ BB13 [09C..0A6), preds={BB10,BB12} succs={BB14}

***** BB13
STMT00070 (IL   ???...  ???)
               [000313] -ACXG+------              *  ASG       ref   
               [000312] D----+-N----              +--*  LCL_VAR   ref    V27 tmp21        
               [000112] --CXG+------              \--*  CALL      ref    System.Linq.Enumerable.SelectMany
               [000111] -----+------ arg2 in r8      +--*  LCL_VAR   ref    V15 tmp9         
               [000110] -----+------ arg1 in rdx     +--*  LCL_VAR   ref    V14 tmp8         
               [000113] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB13
STMT00069 (IL   ???...  ???)
               [000311] --CXG+------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
               [000309] ---XG+------ arg1 in rdx  +--*  IND       int   
               [000411] -----+------              |  \--*  ADD       byref 
               [000308] -----+------              |     +--*  LCL_VAR   ref    V13 tmp7         
               [000410] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[_size]
               [000109] -----+------ this in rcx  +--*  LCL_VAR   ref    V13 tmp7         
               [000310] -----+------ arg2 in r8   \--*  LCL_VAR   ref    V27 tmp21        

------------ BB14 [0A6..0B3) -> BB02 (cond), preds={BB06,BB13} succs={BB15,BB02}

***** BB14
STMT00028 (IL 0x0A6...0x0A9)
               [000120] -A---+------              *  ASG       int   
               [000119] D----+-N----              +--*  LCL_VAR   int    V03 loc2         
               [000118] -----+------              \--*  ADD       int   
               [000116] -----+------                 +--*  LCL_VAR   int    V03 loc2         
               [000117] -----+------                 \--*  CNS_INT   int    1

***** BB14
STMT00007 (IL 0x0AA...0x0AE)
               [000027] ---X-+------              *  JTRUE     void  
     (  9,  7) [000026] J--X---N----              \--*  GT        int   
     (  5,  4) [000025] ---X--------                 +--*  ARR_LENGTH int   
     (  3,  2) [000024] ------------                 |  \--*  LCL_VAR   ref    V02 loc1         
     (  3,  2) [000023] ------------                 \--*  LCL_VAR   int    V03 loc2         

------------ BB15 [0B3..0C7) (return), preds={BB01,BB14} succs={}

***** BB15
STMT00038 (IL 0x0B3...0x0C4)
               [000181] --CXG+------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle
               [000180] -----+------ arg1 in rdx  +--*  LCL_VAR   ref    V01 loc0         
               [000182] H----+------ arg0 in rcx  \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB15
STMT00040 (IL   ???...  ???)
               [000185] --CXG+------              *  CALL      ref    SolutionAnalyzer.Logger.Log
               [000418] #---G+------ arg1 in rdx  +--*  IND       ref   
               [000417] H----+------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Enumerated and shuffled the project paths."
               [000186] H----+------ arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method
               [000184] -----+------ arg2 in r8   \--*  CNS_INT   int    2

***** BB15
STMT00041 (IL 0x0C5...0x0C6)
               [000191] -----+------              *  RETURN    ref   
               [000190] -----+------              \--*  LCL_VAR   ref    V01 loc0         

------------ BB16 [000..000) (throw), preds={BB08,BB11} succs={}

***** BB16
STMT00067 (IL   ???...  ???)
               [000303] --CXG+------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

-------------------------------------------------------------------------------------------------------------------

*************** Finishing PHASE Clone loops

*************** Starting PHASE Unroll loops
*************** In optUnrollLoops()
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Unroll loops

*************** Starting PHASE Mark local vars

*************** In lvaMarkLocalVars()
*** lvaComputeRefCounts ***

*** lvaComputeRefCounts -- explicit counts ***

*** marking local variables in block BB01 (weight=1   )
STMT00001 (IL   ???...  ???)
               [000002] --CXG+------              *  CALL      ref    SolutionAnalyzer.Logger.Log
               [000317] #---G+------ arg1 in rdx  +--*  IND       ref   
               [000316] H----+------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Started enumerating project paths."
               [000003] H----+------ arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method
               [000001] -----+------ arg2 in r8   \--*  CNS_INT   int    2
STMT00002 (IL 0x00C...0x013)
               [000011] -AC--+------              *  ASG       ref   
               [000010] D----+-N----              +--*  LCL_VAR   ref    V07 tmp1         
               [000009] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000008] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token
New refCnts for V07: refCnt =  1, refCntWtd = 2   
STMT00003 (IL   ???...  ???)
               [000013] --CXG+------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor
               [000012] -----+------ this in rcx  +--*  LCL_VAR   ref    V07 tmp1         
               [000007] -----+------ arg1 in rdx  \--*  CNS_INT   int    100
New refCnts for V07: refCnt =  2, refCntWtd = 4   
STMT00004 (IL 0x013...  ???)
               [000016] -A---+------              *  ASG       ref   
               [000015] D----+-N----              +--*  LCL_VAR   ref    V01 loc0         
               [000014] -----+------              \--*  LCL_VAR   ref    V07 tmp1         
New refCnts for V01: refCnt =  1, refCntWtd = 1   
New refCnts for V07: refCnt =  3, refCntWtd = 6   
STMT00005 (IL 0x014...0x015)
               [000019] -A---+------              *  ASG       ref   
               [000018] D----+-N----              +--*  LCL_VAR   ref    V02 loc1         
               [000017] -----+------              \--*  LCL_VAR   ref    V00 arg0         
New refCnts for V02: refCnt =  1, refCntWtd = 1   
New refCnts for V00: refCnt =  1, refCntWtd = 1   
STMT00006 (IL 0x016...0x017)
               [000022] -A---+------              *  ASG       int   
               [000021] D----+-N----              +--*  LCL_VAR   int    V03 loc2         
               [000020] -----+------              \--*  CNS_INT   int    0
New refCnts for V03: refCnt =  1, refCntWtd = 1   
STMT00071 (IL 0x0AA...  ???)
               [000426] ---X--------              *  JTRUE     void  
     (  9,  7) [000422] J--X---N----              \--*  LE        int   
     (  5,  4) [000423] ---X--------                 +--*  ARR_LENGTH int   
     (  3,  2) [000424] ------------                 |  \--*  LCL_VAR   ref    V02 loc1         
     (  3,  2) [000425] ------------                 \--*  LCL_VAR   int    V03 loc2         
New refCnts for V02: refCnt =  2, refCntWtd = 2   
New refCnts for V03: refCnt =  2, refCntWtd = 2   

*** marking local variables in block BB02 (weight=4   )
STMT00008 (IL 0x01D...0x020)
               [000032] -A-XG+------              *  ASG       ref   
               [000031] D----+-N----              +--*  LCL_VAR   ref    V04 loc3         
               [000334] ---XG+------              \--*  COMMA     ref   
               [000327] ---X-+------                 +--*  ARR_BOUNDS_CHECK_Rng void  
               [000029] -----+------                 |  +--*  LCL_VAR   int    V03 loc2         
               [000326] ---X-+------                 |  \--*  ARR_LENGTH int   
               [000028] -----+------                 |     \--*  LCL_VAR   ref    V02 loc1         
               [000030] a---G+------                 \--*  IND       ref   
               [000333] -----+------                    \--*  ADD       byref 
               [000324] -----+------                       +--*  LCL_VAR   ref    V02 loc1         
               [000332] -----+------                       \--*  ADD       long  
               [000330] -----+------                          +--*  LSH       long  
               [000328] -----+------                          |  +--*  CAST      long <- int
               [000325] i----+------                          |  |  \--*  LCL_VAR   int    V03 loc2         
               [000329] -----+-N----                          |  \--*  CNS_INT   long   3
               [000331] -----+------                          \--*  CNS_INT   long   16 Fseq[#FirstElem]
New refCnts for V04: refCnt =  1, refCntWtd = 4   
New refCnts for V03: refCnt =  3, refCntWtd = 6   
New refCnts for V02: refCnt =  3, refCntWtd = 6   
New refCnts for V02: refCnt =  4, refCntWtd = 10   
New refCnts for V03: refCnt =  4, refCntWtd = 10   
STMT00042 (IL 0x021...  ???)
               [000197] ---X-+------              *  NULLCHECK byte  
               [000196] -----+------              \--*  LCL_VAR   ref    V04 loc3         
New refCnts for V04: refCnt =  2, refCntWtd = 8   
STMT00010 (IL   ???...  ???)
               [000039] --CXG+------              *  JTRUE     void  
               [000038] J-CXG+-N----              \--*  EQ        int   
               [000195] --CXG+------                 +--*  CALL      int    System.String.EndsWith
               [000336] #---G+------ arg1 in rdx     |  +--*  IND       ref   
               [000335] H----+------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E ".csproj"
               [000033] -----+------ this in rcx     |  +--*  LCL_VAR   ref    V04 loc3         
               [000194] -----+------ arg2 in r8      |  \--*  CNS_INT   int    0
               [000037] -----+------                 \--*  CNS_INT   int    0
New refCnts for V04: refCnt =  3, refCntWtd = 12   

*** marking local variables in block BB03 (weight=2   )
STMT00043 (IL 0x02E...  ???)
               [000204] -A-XG+------              *  ASG       int   
               [000203] ---XG+-N----              +--*  IND       int   
               [000341] -----+------              |  \--*  ADD       byref 
               [000177] -----+------              |     +--*  LCL_VAR   ref    V01 loc0         
               [000340] -----+------              |     \--*  CNS_INT   long   20 field offset Fseq[_version]
               [000202] ---XG+------              \--*  ADD       int   
               [000200] ---XG+------                 +--*  IND       int   
               [000343] -----+------                 |  \--*  ADD       byref 
               [000199] -----+------                 |     +--*  LCL_VAR   ref    V01 loc0         
               [000342] -----+------                 |     \--*  CNS_INT   long   20 field offset Fseq[_version]
               [000201] -----+------                 \--*  CNS_INT   int    1
New refCnts for V01: refCnt =  2, refCntWtd = 3   
New refCnts for V01: refCnt =  3, refCntWtd = 5   
STMT00044 (IL 0x02E...  ???)
               [000208] -A-XG+------              *  ASG       ref   
               [000207] D----+-N----              +--*  LCL_VAR   ref    V18 tmp12        
               [000206] ---XG+------              \--*  IND       ref   
               [000345] -----+------                 \--*  ADD       byref 
               [000205] -----+------                    +--*  LCL_VAR   ref    V01 loc0         
               [000344] -----+------                    \--*  CNS_INT   long   8 field offset Fseq[_items]
New refCnts for V18: refCnt =  1, refCntWtd = 2   
New refCnts for V01: refCnt =  4, refCntWtd = 7   
STMT00045 (IL 0x02E...  ???)
               [000212] -A-XG+------              *  ASG       int   
               [000211] D----+-N----              +--*  LCL_VAR   int    V19 tmp13        
               [000210] ---XG+------              \--*  IND       int   
               [000347] -----+------                 \--*  ADD       byref 
               [000209] -----+------                    +--*  LCL_VAR   ref    V01 loc0         
               [000346] -----+------                    \--*  CNS_INT   long   16 field offset Fseq[_size]
New refCnts for V19: refCnt =  1, refCntWtd = 2   
New refCnts for V01: refCnt =  5, refCntWtd = 9   
STMT00046 (IL 0x02E...  ???)
               [000217] ---X-+------              *  JTRUE     void  
               [000216] N--X-+-N-U--              \--*  GE        int   
               [000213] -----+------                 +--*  LCL_VAR   int    V19 tmp13        
               [000215] ---X-+------                 \--*  ARR_LENGTH int   
               [000214] -----+------                    \--*  LCL_VAR   ref    V18 tmp12        
New refCnts for V19: refCnt =  2, refCntWtd = 4   
New refCnts for V18: refCnt =  2, refCntWtd = 4   

*** marking local variables in block BB04 (weight=2   )
STMT00048 (IL 0x02E...  ???)
               [000225] -A-XG+------              *  ASG       int   
               [000224] ---XG+-N----              +--*  IND       int   
               [000349] -----+------              |  \--*  ADD       byref 
               [000220] -----+------              |     +--*  LCL_VAR   ref    V01 loc0         
               [000348] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[_size]
               [000223] -----+------              \--*  ADD       int   
               [000221] -----+------                 +--*  LCL_VAR   int    V19 tmp13        
               [000222] -----+------                 \--*  CNS_INT   int    1
New refCnts for V01: refCnt =  6, refCntWtd = 11   
New refCnts for V19: refCnt =  3, refCntWtd = 6   
STMT00049 (IL 0x02E...  ???)
               [000229] --CXG+------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST
               [000226] -----+------ arg0 in rcx  +--*  LCL_VAR   ref    V18 tmp12        
               [000227] -----+------ arg1 in rdx  +--*  LCL_VAR   int    V19 tmp13        
               [000228] -----+------ arg2 in r8   \--*  LCL_VAR   ref    V04 loc3         
New refCnts for V18: refCnt =  3, refCntWtd = 6   
New refCnts for V19: refCnt =  4, refCntWtd = 8   
New refCnts for V04: refCnt =  4, refCntWtd = 14   

*** marking local variables in block BB05 (weight=2   )
STMT00047 (IL 0x02E...  ???)
               [000219] --CXG+------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize
               [000218] -----+------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         
               [000178] -----+------ arg1 in rdx  \--*  LCL_VAR   ref    V04 loc3         
New refCnts for V01: refCnt =  7, refCntWtd = 13   
New refCnts for V04: refCnt =  5, refCntWtd = 16   

*** marking local variables in block BB06 (weight=2   )
STMT00050 (IL 0x02E...  ???)
               [000232] -A---+------              *  ASG       ref   
               [000231] D----+-N----              +--*  LCL_VAR   ref    V18 tmp12        
               [000230] -----+------              \--*  CNS_INT   ref    null
New refCnts for V18: refCnt =  4, refCntWtd = 8   

*** marking local variables in block BB07 (weight=2   )
STMT00053 (IL 0x037...  ???)
               [000247] -ACXG+------              *  ASG       ref   
               [000246] D----+-N----              +--*  LCL_VAR   ref    V20 tmp14        
               [000236] --CXG+------              \--*  CALL      ref    System.IO.EnumerationOptions.FromSearchOption
               [000235] -----+------ arg0 in rcx     \--*  CNS_INT   int    1
New refCnts for V20: refCnt =  1, refCntWtd = 4   
STMT00013 (IL   ???...  ???)
               [000054] -ACXG+------              *  ASG       ref   
               [000053] D----+-N----              +--*  LCL_VAR   ref    V09 tmp3         
               [000245] --CXG+------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths
               [000357] #---G+------ arg1 in rdx     +--*  IND       ref   
               [000356] H----+------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*"
               [000040] -----+------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         
               [000244] -----+------ arg3 in r9      +--*  LCL_VAR   ref    V20 tmp14        
               [000243] -----+------ arg2 in r8      \--*  CNS_INT   int    2
New refCnts for V09: refCnt =  1, refCntWtd = 4   
New refCnts for V04: refCnt =  6, refCntWtd = 18   
New refCnts for V20: refCnt =  2, refCntWtd = 8   
STMT00012 (IL   ???...  ???)
               [000052] -ACXG+------              *  ASG       ref   
               [000051] D----+-N----              +--*  LCL_VAR   ref    V08 tmp2         
               [000050] --CXG+------              \--*  COMMA     ref   
               [000049] H-CXG+------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000047] -----+------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000048] -----+------ arg1 in rdx     |  \--*  CNS_INT   int    35
               [000045] n---G+------                 \--*  IND       ref   
               [000364] I----+------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0]
New refCnts for V08: refCnt =  1, refCntWtd = 4   
STMT00015 (IL   ???...0x049)
               [000062] -A---+------              *  ASG       ref   
               [000061] D----+-N----              +--*  LCL_VAR   ref    V10 tmp4         
               [000055] -----+------              \--*  LCL_VAR   ref    V09 tmp3         
New refCnts for V10: refCnt =  1, refCntWtd = 2   
New refCnts for V09: refCnt =  2, refCntWtd = 8   
STMT00016 (IL   ???...  ???)
               [000065] -A---+------              *  ASG       ref   
               [000064] D----+-N----              +--*  LCL_VAR   ref    V11 tmp5         
               [000056] -----+------              \--*  LCL_VAR   ref    V08 tmp2         
New refCnts for V11: refCnt =  1, refCntWtd = 2   
New refCnts for V08: refCnt =  2, refCntWtd = 8   
STMT00014 (IL   ???...  ???)
               [000060] -----+------              *  JTRUE     void  
               [000059] J----+-N----              \--*  NE        int   
               [000057] -----+------                 +--*  LCL_VAR   ref    V08 tmp2         
               [000058] -----+------                 \--*  CNS_INT   ref    null
New refCnts for V08: refCnt =  3, refCntWtd = 12   

*** marking local variables in block BB08 (weight=2   )
STMT00033 (IL   ???...0x05D)
               [000160] -AC--+------              *  ASG       ref   
               [000159] D----+-N----              +--*  LCL_VAR   ref    V17 tmp11        
               [000158] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000157] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token
New refCnts for V17: refCnt =  1, refCntWtd = 4   
STMT00058 (IL   ???...  ???)
               [000262] -ACXG+------              *  ASG       ref   
               [000261] D----+-N----              +--*  LCL_VAR   ref    V21 tmp15        
               [000155] --CXG+------              \--*  COMMA     ref   
               [000154] H-CXG+------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000152] -----+------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000153] -----+------ arg1 in rdx     |  \--*  CNS_INT   int    35
               [000150] n---G+------                 \--*  IND       ref   
               [000368] I----+------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9]
New refCnts for V21: refCnt =  1, refCntWtd = 4   
STMT00054 (IL   ???...  ???)
               [000252] -----+------              *  JTRUE     void  
               [000251] J----+-N----              \--*  EQ        int   
               [000249] -----+------                 +--*  LCL_VAR   ref    V21 tmp15        
               [000250] -----+------                 \--*  CNS_INT   ref    null
New refCnts for V21: refCnt =  2, refCntWtd = 8   

*** marking local variables in block BB09 (weight=2   )
STMT00055 (IL   ???...  ???)
               [000255] -A-XG+------              *  ASG       ref   
               [000254] ---XG+-N----              +--*  IND       ref   
               [000370] -----+------              |  \--*  ADD       byref 
               [000161] -----+------              |     +--*  LCL_VAR   ref    V17 tmp11        
               [000369] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
               [000253] -----+------              \--*  LCL_VAR   ref    V21 tmp15        
New refCnts for V17: refCnt =  2, refCntWtd = 8   
New refCnts for V21: refCnt =  3, refCntWtd = 12   
STMT00056 (IL   ???...  ???)
               [000259] -A-XG+------              *  ASG       long  
               [000258] ---XG+-N----              +--*  IND       long  
               [000372] -----+------              |  \--*  ADD       byref 
               [000256] -----+------              |     +--*  LCL_VAR   ref    V17 tmp11        
               [000371] -----+------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
               [000156] H----+------              \--*  CNS_INT(h) long   0xd1ffab1e ftn
New refCnts for V17: refCnt =  3, refCntWtd = 12   
STMT00035 (IL 0x05C...  ???)
               [000171] -ACXG+------              *  COMMA     void  
               [000170] H-CXG+------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000168] -----+------ arg0 in rcx  |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000169] -----+------ arg1 in rdx  |  \--*  CNS_INT   int    35
               [000166] -A--G+------              \--*  ASG       ref   
               [000165] n---G+-N----                 +--*  IND       ref   
               [000375] I----+------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0]
               [000164] -----+------                 \--*  LCL_VAR   ref    V17 tmp11        
New refCnts for V17: refCnt =  4, refCntWtd = 16   
STMT00036 (IL   ???...0x05D)
               [000175] -A---+------              *  ASG       ref   
               [000174] D----+-N----              +--*  LCL_VAR   ref    V11 tmp5         
               [000163] -----+------              \--*  LCL_VAR   ref    V17 tmp11        
New refCnts for V11: refCnt =  2, refCntWtd = 4   
New refCnts for V17: refCnt =  5, refCntWtd = 20   

*** marking local variables in block BB10 (weight=2   )
STMT00018 (IL   ???...  ???)
               [000075] -ACXG+------              *  ASG       ref   
               [000074] D----+-N----              +--*  LCL_VAR   ref    V05 loc4         
               [000071] --CXG+------              \--*  CALL      ref    System.Linq.Enumerable.Where
               [000070] -----+------ arg2 in r8      +--*  LCL_VAR   ref    V11 tmp5         
               [000069] -----+------ arg1 in rdx     +--*  LCL_VAR   ref    V10 tmp4         
               [000072] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method
New refCnts for V05: refCnt =  1, refCntWtd = 2   
New refCnts for V11: refCnt =  3, refCntWtd = 6   
New refCnts for V10: refCnt =  2, refCntWtd = 4   
STMT00061 (IL 0x069...  ???)
               [000283] -ACXG+------              *  ASG       ref   
               [000282] D----+-N----              +--*  LCL_VAR   ref    V23 tmp17        
               [000276] --CXG+------              \--*  COMMA     ref   
               [000275] H-CXG+------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000273] -----+------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e783cd8
               [000274] -----+------ arg1 in rdx     |  \--*  CNS_INT   int    40
               [000271] n---G+------                 \--*  IND       ref   
               [000381] I----+------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<Compatible>k__BackingField]
New refCnts for V23: refCnt =  1, refCntWtd = 4   
STMT00063 (IL   ???...  ???)
               [000290] -ACXG+------              *  ASG       ref   
               [000289] D----+-N----              +--*  LCL_VAR   ref    V24 tmp18        
               [000281] --CXG+------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths
               [000383] #---G+------ arg1 in rdx     +--*  IND       ref   
               [000382] H----+------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*.csproj"
               [000077] -----+------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         
               [000280] -----+------ arg3 in r9      +--*  LCL_VAR   ref    V23 tmp17        
               [000279] -----+------ arg2 in r8      \--*  CNS_INT   int    1
New refCnts for V24: refCnt =  1, refCntWtd = 4   
New refCnts for V04: refCnt =  7, refCntWtd = 20   
New refCnts for V23: refCnt =  2, refCntWtd = 8   
STMT00062 (IL   ???...  ???)
               [000288] --CXG+------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
               [000286] ---XG+------ arg1 in rdx  +--*  IND       int   
               [000389] -----+------              |  \--*  ADD       byref 
               [000285] -----+------              |     +--*  LCL_VAR   ref    V01 loc0         
               [000388] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[_size]
               [000076] -----+------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         
               [000287] -----+------ arg2 in r8   \--*  LCL_VAR   ref    V24 tmp18        
New refCnts for V01: refCnt =  8, refCntWtd = 15   
New refCnts for V01: refCnt =  9, refCntWtd = 17   
New refCnts for V24: refCnt =  2, refCntWtd = 8   
STMT00021 (IL 0x07A...  ???)
               [000091] -ACXG+------              *  ASG       ref   
               [000090] D----+-N----              +--*  LCL_VAR   ref    V12 tmp6         
               [000089] --CXG+------              \--*  COMMA     ref   
               [000088] H-CXG+------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000086] -----+------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000087] -----+------ arg1 in rdx     |  \--*  CNS_INT   int    35
               [000084] n---G+------                 \--*  IND       ref   
               [000395] I----+------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1]
New refCnts for V12: refCnt =  1, refCntWtd = 4   
STMT00023 (IL   ???...0x083)
               [000098] -A---+------              *  ASG       ref   
               [000097] D----+-N----              +--*  LCL_VAR   ref    V13 tmp7         
               [000082] -----+------              \--*  LCL_VAR   ref    V01 loc0         
New refCnts for V13: refCnt =  1, refCntWtd = 2   
New refCnts for V01: refCnt = 10, refCntWtd = 19   
STMT00024 (IL   ???...  ???)
               [000101] -A---+------              *  ASG       ref   
               [000100] D----+-N----              +--*  LCL_VAR   ref    V14 tmp8         
               [000083] -----+------              \--*  LCL_VAR   ref    V05 loc4         
New refCnts for V14: refCnt =  1, refCntWtd = 2   
New refCnts for V05: refCnt =  2, refCntWtd = 4   
STMT00025 (IL   ???...  ???)
               [000104] -A---+------              *  ASG       ref   
               [000103] D----+-N----              +--*  LCL_VAR   ref    V15 tmp9         
               [000092] -----+------              \--*  LCL_VAR   ref    V12 tmp6         
New refCnts for V15: refCnt =  1, refCntWtd = 2   
New refCnts for V12: refCnt =  2, refCntWtd = 8   
STMT00022 (IL   ???...  ???)
               [000096] -----+------              *  JTRUE     void  
               [000095] J----+-N----              \--*  NE        int   
               [000093] -----+------                 +--*  LCL_VAR   ref    V12 tmp6         
               [000094] -----+------                 \--*  CNS_INT   ref    null
New refCnts for V12: refCnt =  3, refCntWtd = 12   

*** marking local variables in block BB11 (weight=2   )
STMT00029 (IL   ???...0x097)
               [000131] -AC--+------              *  ASG       ref   
               [000130] D----+-N----              +--*  LCL_VAR   ref    V16 tmp10        
               [000129] --C--+------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
               [000128] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token
New refCnts for V16: refCnt =  1, refCntWtd = 4   
STMT00068 (IL   ???...  ???)
               [000305] -ACXG+------              *  ASG       ref   
               [000304] D----+-N----              +--*  LCL_VAR   ref    V25 tmp19        
               [000126] --CXG+------              \--*  COMMA     ref   
               [000125] H-CXG+------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000123] -----+------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000124] -----+------ arg1 in rdx     |  \--*  CNS_INT   int    35
               [000121] n---G+------                 \--*  IND       ref   
               [000399] I----+------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9]
New refCnts for V25: refCnt =  1, refCntWtd = 4   
STMT00064 (IL   ???...  ???)
               [000295] -----+------              *  JTRUE     void  
               [000294] J----+-N----              \--*  EQ        int   
               [000292] -----+------                 +--*  LCL_VAR   ref    V25 tmp19        
               [000293] -----+------                 \--*  CNS_INT   ref    null
New refCnts for V25: refCnt =  2, refCntWtd = 8   

*** marking local variables in block BB12 (weight=2   )
STMT00065 (IL   ???...  ???)
               [000298] -A-XG+------              *  ASG       ref   
               [000297] ---XG+-N----              +--*  IND       ref   
               [000401] -----+------              |  \--*  ADD       byref 
               [000132] -----+------              |     +--*  LCL_VAR   ref    V16 tmp10        
               [000400] -----+------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
               [000296] -----+------              \--*  LCL_VAR   ref    V25 tmp19        
New refCnts for V16: refCnt =  2, refCntWtd = 8   
New refCnts for V25: refCnt =  3, refCntWtd = 12   
STMT00066 (IL   ???...  ???)
               [000302] -A-XG+------              *  ASG       long  
               [000301] ---XG+-N----              +--*  IND       long  
               [000403] -----+------              |  \--*  ADD       byref 
               [000299] -----+------              |     +--*  LCL_VAR   ref    V16 tmp10        
               [000402] -----+------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
               [000127] H----+------              \--*  CNS_INT(h) long   0xd1ffab1e ftn
New refCnts for V16: refCnt =  3, refCntWtd = 12   
STMT00031 (IL 0x096...  ???)
               [000142] -ACXG+------              *  COMMA     void  
               [000141] H-CXG+------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
               [000139] -----+------ arg0 in rcx  |  +--*  CNS_INT   long   0x7ffc7e4c17e0
               [000140] -----+------ arg1 in rdx  |  \--*  CNS_INT   int    35
               [000137] -A--G+------              \--*  ASG       ref   
               [000136] n---G+-N----                 +--*  IND       ref   
               [000406] I----+------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1]
               [000135] -----+------                 \--*  LCL_VAR   ref    V16 tmp10        
New refCnts for V16: refCnt =  4, refCntWtd = 16   
STMT00032 (IL   ???...0x097)
               [000148] -A---+------              *  ASG       ref   
               [000147] D----+-N----              +--*  LCL_VAR   ref    V15 tmp9         
               [000134] -----+------              \--*  LCL_VAR   ref    V16 tmp10        
New refCnts for V15: refCnt =  2, refCntWtd = 4   
New refCnts for V16: refCnt =  5, refCntWtd = 20   

*** marking local variables in block BB13 (weight=2   )
STMT00070 (IL   ???...  ???)
               [000313] -ACXG+------              *  ASG       ref   
               [000312] D----+-N----              +--*  LCL_VAR   ref    V27 tmp21        
               [000112] --CXG+------              \--*  CALL      ref    System.Linq.Enumerable.SelectMany
               [000111] -----+------ arg2 in r8      +--*  LCL_VAR   ref    V15 tmp9         
               [000110] -----+------ arg1 in rdx     +--*  LCL_VAR   ref    V14 tmp8         
               [000113] H----+------ arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method
New refCnts for V27: refCnt =  1, refCntWtd = 4   
New refCnts for V15: refCnt =  3, refCntWtd = 6   
New refCnts for V14: refCnt =  2, refCntWtd = 4   
STMT00069 (IL   ???...  ???)
               [000311] --CXG+------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
               [000309] ---XG+------ arg1 in rdx  +--*  IND       int   
               [000411] -----+------              |  \--*  ADD       byref 
               [000308] -----+------              |     +--*  LCL_VAR   ref    V13 tmp7         
               [000410] -----+------              |     \--*  CNS_INT   long   16 field offset Fseq[_size]
               [000109] -----+------ this in rcx  +--*  LCL_VAR   ref    V13 tmp7         
               [000310] -----+------ arg2 in r8   \--*  LCL_VAR   ref    V27 tmp21        
New refCnts for V13: refCnt =  2, refCntWtd = 4   
New refCnts for V13: refCnt =  3, refCntWtd = 6   
New refCnts for V27: refCnt =  2, refCntWtd = 8   

*** marking local variables in block BB14 (weight=4   )
STMT00028 (IL 0x0A6...0x0A9)
               [000120] -A---+------              *  ASG       int   
               [000119] D----+-N----              +--*  LCL_VAR   int    V03 loc2         
               [000118] -----+------              \--*  ADD       int   
               [000116] -----+------                 +--*  LCL_VAR   int    V03 loc2         
               [000117] -----+------                 \--*  CNS_INT   int    1
New refCnts for V03: refCnt =  5, refCntWtd = 14   
New refCnts for V03: refCnt =  6, refCntWtd = 18   
STMT00007 (IL 0x0AA...0x0AE)
               [000027] ---X-+------              *  JTRUE     void  
     (  9,  7) [000026] J--X---N----              \--*  GT        int   
     (  5,  4) [000025] ---X--------                 +--*  ARR_LENGTH int   
     (  3,  2) [000024] ------------                 |  \--*  LCL_VAR   ref    V02 loc1         
     (  3,  2) [000023] ------------                 \--*  LCL_VAR   int    V03 loc2         
New refCnts for V02: refCnt =  5, refCntWtd = 14   
New refCnts for V03: refCnt =  7, refCntWtd = 22   

*** marking local variables in block BB15 (weight=1   )
STMT00038 (IL 0x0B3...0x0C4)
               [000181] --CXG+------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle
               [000180] -----+------ arg1 in rdx  +--*  LCL_VAR   ref    V01 loc0         
               [000182] H----+------ arg0 in rcx  \--*  CNS_INT(h) long   0xd1ffab1e method
New refCnts for V01: refCnt = 11, refCntWtd = 20   
STMT00040 (IL   ???...  ???)
               [000185] --CXG+------              *  CALL      ref    SolutionAnalyzer.Logger.Log
               [000418] #---G+------ arg1 in rdx  +--*  IND       ref   
               [000417] H----+------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Enumerated and shuffled the project paths."
               [000186] H----+------ arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method
               [000184] -----+------ arg2 in r8   \--*  CNS_INT   int    2
STMT00041 (IL 0x0C5...0x0C6)
               [000191] -----+------              *  RETURN    ref   
               [000190] -----+------              \--*  LCL_VAR   ref    V01 loc0         
New refCnts for V01: refCnt = 12, refCntWtd = 21   

*** marking local variables in block BB16 (weight=0   )
STMT00067 (IL   ???...  ???)
               [000303] --CXG+------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

*** lvaComputeRefCounts -- implicit counts ***
New refCnts for V00: refCnt =  2, refCntWtd = 2   
New refCnts for V00: refCnt =  3, refCntWtd = 3   

*************** In optAddCopies()


*************** Finishing PHASE Mark local vars

*************** Starting PHASE Optimize bools
*************** In optOptimizeBools()
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Optimize bools

*************** Starting PHASE Find oper order
*************** In fgFindOperOrder()

*************** Finishing PHASE Find oper order

*************** Starting PHASE Set block order
*************** In fgSetBlockOrder()
fgMarkLoopHead: Checking loop head block BB02: this block will execute a call
The biggest BB has   16 tree nodes

*************** Finishing PHASE Set block order
Trees before Build SSA representation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB15 ( cond )                     i label target hascall gcsafe idxlen newobj 
BB02 [0001]  2       BB01,BB14             4     0 [01D..02E)-> BB07 ( cond )                     i Loop label target hascall gcsafe idxlen nullcheck bwd bwd-target 
BB03 [0002]  1       BB02                  2     0 [02E..037)-> BB05 ( cond )                     i gcsafe idxlen bwd 
BB04 [0013]  1       BB03                  2     0 [02E..02F)-> BB06 (always)                     i hascall gcsafe bwd 
BB05 [0014]  1       BB03                  2     0 [02E..02F)                                     i label target hascall gcsafe bwd 
BB06 [0015]  2       BB04,BB05             2     0 [???..???)-> BB14 (always)                     internal label target gcsafe bwd 
BB07 [0003]  1       BB02                  2     0 [037..04B)-> BB10 ( cond )                     i label target hascall gcsafe bwd 
BB08 [0004]  1       BB07                  2     0 [000..062)-> BB16 ( cond )                     i hascall gcsafe newobj bwd 
BB09 [0020]  1       BB08                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd 
BB10 [0005]  2       BB07,BB09             2     0 [062..085)-> BB13 ( cond )                     i label target hascall gcsafe bwd 
BB11 [0006]  1       BB10                  2     0 [000..09C)-> BB16 ( cond )                     i hascall gcsafe newobj bwd 
BB12 [0028]  1       BB11                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd 
BB13 [0007]  2       BB10,BB12             2     0 [09C..0A6)                                     i label target hascall gcsafe bwd 
BB14 [0008]  2       BB06,BB13             4     0 [0A6..0B3)-> BB02 ( cond )                     i label target gcsafe idxlen bwd 
BB15 [0010]  2       BB01,BB14             1       [0B3..0C7)        (return)                     i label target hascall gcsafe 
BB16 [0027]  2       BB08,BB11             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..01D) -> BB15 (cond), preds={} succs={BB02,BB15}

***** BB01
STMT00001 (IL   ???...  ???)
N008 ( 21, 31) [000002] --CXG-------              *  CALL      ref    SolutionAnalyzer.Logger.Log
N005 (  4, 12) [000317] #---G------- arg1 in rdx  +--*  IND       ref   
N004 (  2, 10) [000316] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Started enumerating project paths."
N006 (  2, 10) [000003] H----------- arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method
N007 (  1,  1) [000001] ------------ arg2 in r8   \--*  CNS_INT   int    2

***** BB01
STMT00002 (IL 0x00C...0x013)
N005 ( 16, 16) [000011] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000010] D------N----              +--*  LCL_VAR   ref    V07 tmp1         
N003 ( 16, 16) [000009] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000008] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00003 (IL   ???...  ???)
N005 ( 16, 10) [000013] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor
N003 (  1,  1) [000012] ------------ this in rcx  +--*  LCL_VAR   ref    V07 tmp1         
N004 (  1,  1) [000007] ------------ arg1 in rdx  \--*  CNS_INT   int    100

***** BB01
STMT00004 (IL 0x013...  ???)
N003 (  1,  3) [000016] -A------R---              *  ASG       ref   
N002 (  1,  1) [000015] D------N----              +--*  LCL_VAR   ref    V01 loc0         
N001 (  1,  1) [000014] ------------              \--*  LCL_VAR   ref    V07 tmp1         

***** BB01
STMT00005 (IL 0x014...0x015)
N003 (  1,  3) [000019] -A------R---              *  ASG       ref   
N002 (  1,  1) [000018] D------N----              +--*  LCL_VAR   ref    V02 loc1         
N001 (  1,  1) [000017] ------------              \--*  LCL_VAR   ref    V00 arg0         

***** BB01
STMT00006 (IL 0x016...0x017)
N003 (  1,  3) [000022] -A------R---              *  ASG       int   
N002 (  1,  1) [000021] D------N----              +--*  LCL_VAR   int    V03 loc2         
N001 (  1,  1) [000020] ------------              \--*  CNS_INT   int    0

***** BB01
STMT00071 (IL 0x0AA...  ???)
N005 (  7,  7) [000426] ---X--------              *  JTRUE     void  
N004 (  5,  5) [000422] J--X---N----              \--*  LE        int   
N002 (  3,  3) [000423] ---X--------                 +--*  ARR_LENGTH int   
N001 (  1,  1) [000424] ------------                 |  \--*  LCL_VAR   ref    V02 loc1         
N003 (  1,  1) [000425] ------------                 \--*  LCL_VAR   int    V03 loc2         

------------ BB02 [01D..02E) -> BB07 (cond), preds={BB01,BB14} succs={BB03,BB07}

***** BB02
STMT00008 (IL 0x01D...0x020)
N016 ( 14, 18) [000032] -A-XG---R---              *  ASG       ref   
N015 (  1,  1) [000031] D------N----              +--*  LCL_VAR   ref    V04 loc3         
N014 ( 14, 18) [000334] ---XG-------              \--*  COMMA     ref   
N004 (  8, 11) [000327] ---X--------                 +--*  ARR_BOUNDS_CHECK_Rng void  
N001 (  1,  1) [000029] ------------                 |  +--*  LCL_VAR   int    V03 loc2         
N003 (  3,  3) [000326] ---X--------                 |  \--*  ARR_LENGTH int   
N002 (  1,  1) [000028] ------------                 |     \--*  LCL_VAR   ref    V02 loc1         
N013 (  6,  7) [000030] a---G-------                 \--*  IND       ref   
N012 (  5,  6) [000333] -------N----                    \--*  ADD       byref 
N005 (  1,  1) [000324] ------------                       +--*  LCL_VAR   ref    V02 loc1         
N011 (  4,  5) [000332] -------N----                       \--*  ADD       long  
N009 (  3,  4) [000330] -------N----                          +--*  LSH       long  
N007 (  2,  3) [000328] ------------                          |  +--*  CAST      long <- int
N006 (  1,  1) [000325] i-----------                          |  |  \--*  LCL_VAR   int    V03 loc2         
N008 (  1,  1) [000329] -------N----                          |  \--*  CNS_INT   long   3
N010 (  1,  1) [000331] ------------                          \--*  CNS_INT   long   16 Fseq[#FirstElem]

***** BB02
STMT00042 (IL 0x021...  ???)
N002 (  2,  2) [000197] ---X--------              *  NULLCHECK byte  
N001 (  1,  1) [000196] ------------              \--*  LCL_VAR   ref    V04 loc3         

***** BB02
STMT00010 (IL   ???...  ???)
N011 ( 24, 27) [000039] --CXG-------              *  JTRUE     void  
N010 ( 22, 25) [000038] J-CXG--N----              \--*  EQ        int   
N008 ( 20, 23) [000195] --CXG-------                 +--*  CALL      int    System.String.EndsWith
N005 (  4, 12) [000336] #---G------- arg1 in rdx     |  +--*  IND       ref   
N004 (  2, 10) [000335] H-----------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E ".csproj"
N006 (  1,  1) [000033] ------------ this in rcx     |  +--*  LCL_VAR   ref    V04 loc3         
N007 (  1,  1) [000194] ------------ arg2 in r8      |  \--*  CNS_INT   int    0
N009 (  1,  1) [000037] ------------                 \--*  CNS_INT   int    0

------------ BB03 [02E..037) -> BB05 (cond), preds={BB02} succs={BB04,BB05}

***** BB03
STMT00043 (IL 0x02E...  ???)
N011 ( 11, 11) [000204] -A-XG---R---              *  ASG       int   
N010 (  4,  4) [000203] ---XG--N----              +--*  IND       int   
N009 (  2,  2) [000341] -------N----              |  \--*  ADD       byref 
N007 (  1,  1) [000177] ------------              |     +--*  LCL_VAR   ref    V01 loc0         
N008 (  1,  1) [000340] ------------              |     \--*  CNS_INT   long   20 field offset Fseq[_version]
N006 (  6,  6) [000202] ---XG-------              \--*  ADD       int   
N004 (  4,  4) [000200] ---XG-------                 +--*  IND       int   
N003 (  2,  2) [000343] -------N----                 |  \--*  ADD       byref 
N001 (  1,  1) [000199] ------------                 |     +--*  LCL_VAR   ref    V01 loc0         
N002 (  1,  1) [000342] ------------                 |     \--*  CNS_INT   long   20 field offset Fseq[_version]
N005 (  1,  1) [000201] ------------                 \--*  CNS_INT   int    1

***** BB03
STMT00044 (IL 0x02E...  ???)
N006 (  4,  4) [000208] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000207] D------N----              +--*  LCL_VAR   ref    V18 tmp12        
N004 (  4,  4) [000206] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000345] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000205] ------------                    +--*  LCL_VAR   ref    V01 loc0         
N002 (  1,  1) [000344] ------------                    \--*  CNS_INT   long   8 field offset Fseq[_items]

***** BB03
STMT00045 (IL 0x02E...  ???)
N006 (  4,  4) [000212] -A-XG---R---              *  ASG       int   
N005 (  1,  1) [000211] D------N----              +--*  LCL_VAR   int    V19 tmp13        
N004 (  4,  4) [000210] ---XG-------              \--*  IND       int   
N003 (  2,  2) [000347] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000209] ------------                    +--*  LCL_VAR   ref    V01 loc0         
N002 (  1,  1) [000346] ------------                    \--*  CNS_INT   long   16 field offset Fseq[_size]

***** BB03
STMT00046 (IL 0x02E...  ???)
N005 (  7,  7) [000217] ---X--------              *  JTRUE     void  
N004 (  5,  5) [000216] N--X---N-U--              \--*  LE        int   
N002 (  3,  3) [000215] ---X--------                 +--*  ARR_LENGTH int   
N001 (  1,  1) [000214] ------------                 |  \--*  LCL_VAR   ref    V18 tmp12        
N003 (  1,  1) [000213] ------------                 \--*  LCL_VAR   int    V19 tmp13        

------------ BB04 [02E..02F) -> BB06 (always), preds={BB03} succs={BB06}

***** BB04
STMT00048 (IL 0x02E...  ???)
N008 (  8,  8) [000225] -A-XG---R---              *  ASG       int   
N007 (  4,  4) [000224] ---XG--N----              +--*  IND       int   
N006 (  2,  2) [000349] -------N----              |  \--*  ADD       byref 
N004 (  1,  1) [000220] ------------              |     +--*  LCL_VAR   ref    V01 loc0         
N005 (  1,  1) [000348] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size]
N003 (  3,  3) [000223] ------------              \--*  ADD       int   
N001 (  1,  1) [000221] ------------                 +--*  LCL_VAR   int    V19 tmp13        
N002 (  1,  1) [000222] ------------                 \--*  CNS_INT   int    1

***** BB04
STMT00049 (IL 0x02E...  ???)
N007 ( 17, 11) [000229] --CXG-------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST
N004 (  1,  1) [000226] ------------ arg0 in rcx  +--*  LCL_VAR   ref    V18 tmp12        
N005 (  1,  1) [000227] ------------ arg1 in rdx  +--*  LCL_VAR   int    V19 tmp13        
N006 (  1,  1) [000228] ------------ arg2 in r8   \--*  LCL_VAR   ref    V04 loc3         

------------ BB05 [02E..02F), preds={BB03} succs={BB06}

***** BB05
STMT00047 (IL 0x02E...  ???)
N005 ( 16, 10) [000219] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize
N003 (  1,  1) [000218] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         
N004 (  1,  1) [000178] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V04 loc3         

------------ BB06 [???..???) -> BB14 (always), preds={BB04,BB05} succs={BB14}

***** BB06
STMT00050 (IL 0x02E...  ???)
N003 (  1,  3) [000232] -A------R---              *  ASG       ref   
N002 (  1,  1) [000231] D------N----              +--*  LCL_VAR   ref    V18 tmp12        
N001 (  1,  1) [000230] ------------              \--*  CNS_INT   ref    null

------------ BB07 [037..04B) -> BB10 (cond), preds={BB02} succs={BB08,BB10}

***** BB07
STMT00053 (IL 0x037...  ???)
N005 ( 15,  7) [000247] -ACXG---R---              *  ASG       ref   
N004 (  1,  1) [000246] D------N----              +--*  LCL_VAR   ref    V20 tmp14        
N003 ( 15,  7) [000236] --CXG-------              \--*  CALL      ref    System.IO.EnumerationOptions.FromSearchOption
N002 (  1,  1) [000235] ------------ arg0 in rcx     \--*  CNS_INT   int    1

***** BB07
STMT00013 (IL   ???...  ???)
N012 ( 21, 24) [000054] -ACXG---R---              *  ASG       ref   
N011 (  1,  1) [000053] D------N----              +--*  LCL_VAR   ref    V09 tmp3         
N010 ( 21, 24) [000245] --CXG-------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths
N006 (  4, 12) [000357] #---G------- arg1 in rdx     +--*  IND       ref   
N005 (  2, 10) [000356] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*"
N007 (  1,  1) [000040] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         
N008 (  1,  1) [000244] ------------ arg3 in r9      +--*  LCL_VAR   ref    V20 tmp14        
N009 (  1,  1) [000243] ------------ arg2 in r8      \--*  CNS_INT   int    2

***** BB07
STMT00012 (IL   ???...  ???)
N010 ( 21, 30) [000052] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000051] D------N----              +--*  LCL_VAR   ref    V08 tmp2         
N008 ( 21, 30) [000050] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 18) [000049] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000047] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
N004 (  1,  1) [000048] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35
N007 (  4, 12) [000045] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000364] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0]

***** BB07
STMT00015 (IL   ???...0x049)
N003 (  1,  3) [000062] -A------R---              *  ASG       ref   
N002 (  1,  1) [000061] D------N----              +--*  LCL_VAR   ref    V10 tmp4         
N001 (  1,  1) [000055] ------------              \--*  LCL_VAR   ref    V09 tmp3         

***** BB07
STMT00016 (IL   ???...  ???)
N003 (  1,  3) [000065] -A------R---              *  ASG       ref   
N002 (  1,  1) [000064] D------N----              +--*  LCL_VAR   ref    V11 tmp5         
N001 (  1,  1) [000056] ------------              \--*  LCL_VAR   ref    V08 tmp2         

***** BB07
STMT00014 (IL   ???...  ???)
N004 (  5,  5) [000060] ------------              *  JTRUE     void  
N003 (  3,  3) [000059] J------N----              \--*  NE        int   
N001 (  1,  1) [000057] ------------                 +--*  LCL_VAR   ref    V08 tmp2         
N002 (  1,  1) [000058] ------------                 \--*  CNS_INT   ref    null

------------ BB08 [000..062) -> BB16 (cond), preds={BB07} succs={BB09,BB16}

***** BB08
STMT00033 (IL   ???...0x05D)
N005 ( 16, 16) [000160] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000159] D------N----              +--*  LCL_VAR   ref    V17 tmp11        
N003 ( 16, 16) [000158] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000157] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB08
STMT00058 (IL   ???...  ???)
N010 ( 21, 30) [000262] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000261] D------N----              +--*  LCL_VAR   ref    V21 tmp15        
N008 ( 21, 30) [000155] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 18) [000154] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000152] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
N004 (  1,  1) [000153] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35
N007 (  4, 12) [000150] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000368] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9]

***** BB08
STMT00054 (IL   ???...  ???)
N004 (  5,  5) [000252] ------------              *  JTRUE     void  
N003 (  3,  3) [000251] J------N----              \--*  EQ        int   
N001 (  1,  1) [000249] ------------                 +--*  LCL_VAR   ref    V21 tmp15        
N002 (  1,  1) [000250] ------------                 \--*  CNS_INT   ref    null

------------ BB09 [000..000), preds={BB08} succs={BB10}

***** BB09
STMT00055 (IL   ???...  ???)
N006 (  6,  6) [000255] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000254] ---XG--N----              +--*  IND       ref   
N003 (  2,  2) [000370] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000161] ------------              |     +--*  LCL_VAR   ref    V17 tmp11        
N002 (  1,  1) [000369] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
N005 (  1,  1) [000253] ------------              \--*  LCL_VAR   ref    V21 tmp15        

***** BB09
STMT00056 (IL   ???...  ???)
N006 (  7, 15) [000259] -A-XG-------              *  ASG       long  
N004 (  4,  4) [000258] ---XG--N----              +--*  IND       long  
N003 (  2,  2) [000372] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000256] ------------              |     +--*  LCL_VAR   ref    V17 tmp11        
N002 (  1,  1) [000371] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
N005 (  2, 10) [000156] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

***** BB09
STMT00035 (IL 0x05C...  ???)
N010 ( 23, 32) [000171] -ACXG-------              *  COMMA     void  
N005 ( 17, 18) [000170] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000168] ------------ arg0 in rcx  |  +--*  CNS_INT   long   0x7ffc7e4c17e0
N004 (  1,  1) [000169] ------------ arg1 in rdx  |  \--*  CNS_INT   int    35
N009 (  6, 14) [000166] -A--G-------              \--*  ASG       ref   
N007 (  4, 12) [000165] n---G--N----                 +--*  IND       ref   
N006 (  2, 10) [000375] I-----------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0]
N008 (  1,  1) [000164] ------------                 \--*  LCL_VAR   ref    V17 tmp11        

***** BB09
STMT00036 (IL   ???...0x05D)
N003 (  1,  3) [000175] -A------R---              *  ASG       ref   
N002 (  1,  1) [000174] D------N----              +--*  LCL_VAR   ref    V11 tmp5         
N001 (  1,  1) [000163] ------------              \--*  LCL_VAR   ref    V17 tmp11        

------------ BB10 [062..085) -> BB13 (cond), preds={BB07,BB09} succs={BB11,BB13}

***** BB10
STMT00018 (IL   ???...  ???)
N009 ( 18, 20) [000075] -ACXG---R---              *  ASG       ref   
N008 (  1,  1) [000074] D------N----              +--*  LCL_VAR   ref    V05 loc4         
N007 ( 18, 20) [000071] --CXG-------              \--*  CALL      ref    System.Linq.Enumerable.Where
N004 (  1,  1) [000070] ------------ arg2 in r8      +--*  LCL_VAR   ref    V11 tmp5         
N005 (  1,  1) [000069] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V10 tmp4         
N006 (  2, 10) [000072] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB10
STMT00061 (IL 0x069...  ???)
N010 ( 21, 30) [000283] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000282] D------N----              +--*  LCL_VAR   ref    V23 tmp17        
N008 ( 21, 30) [000276] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 18) [000275] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000273] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e783cd8
N004 (  1,  1) [000274] ------------ arg1 in rdx     |  \--*  CNS_INT   int    40
N007 (  4, 12) [000271] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000381] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<Compatible>k__BackingField]

***** BB10
STMT00063 (IL   ???...  ???)
N012 ( 21, 24) [000290] -ACXG---R---              *  ASG       ref   
N011 (  1,  1) [000289] D------N----              +--*  LCL_VAR   ref    V24 tmp18        
N010 ( 21, 24) [000281] --CXG-------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths
N006 (  4, 12) [000383] #---G------- arg1 in rdx     +--*  IND       ref   
N005 (  2, 10) [000382] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*.csproj"
N007 (  1,  1) [000077] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         
N008 (  1,  1) [000280] ------------ arg3 in r9      +--*  LCL_VAR   ref    V23 tmp17        
N009 (  1,  1) [000279] ------------ arg2 in r8      \--*  CNS_INT   int    1

***** BB10
STMT00062 (IL   ???...  ???)
N010 ( 20, 15) [000288] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
N007 (  4,  4) [000286] ---XG------- arg1 in rdx  +--*  IND       int   
N006 (  2,  2) [000389] -------N----              |  \--*  ADD       byref 
N004 (  1,  1) [000285] ------------              |     +--*  LCL_VAR   ref    V01 loc0         
N005 (  1,  1) [000388] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size]
N008 (  1,  1) [000076] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         
N009 (  1,  1) [000287] ------------ arg2 in r8   \--*  LCL_VAR   ref    V24 tmp18        

***** BB10
STMT00021 (IL 0x07A...  ???)
N010 ( 21, 30) [000091] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000090] D------N----              +--*  LCL_VAR   ref    V12 tmp6         
N008 ( 21, 30) [000089] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 18) [000088] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000086] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
N004 (  1,  1) [000087] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35
N007 (  4, 12) [000084] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000395] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1]

***** BB10
STMT00023 (IL   ???...0x083)
N003 (  1,  3) [000098] -A------R---              *  ASG       ref   
N002 (  1,  1) [000097] D------N----              +--*  LCL_VAR   ref    V13 tmp7         
N001 (  1,  1) [000082] ------------              \--*  LCL_VAR   ref    V01 loc0         

***** BB10
STMT00024 (IL   ???...  ???)
N003 (  1,  3) [000101] -A------R---              *  ASG       ref   
N002 (  1,  1) [000100] D------N----              +--*  LCL_VAR   ref    V14 tmp8         
N001 (  1,  1) [000083] ------------              \--*  LCL_VAR   ref    V05 loc4         

***** BB10
STMT00025 (IL   ???...  ???)
N003 (  1,  3) [000104] -A------R---              *  ASG       ref   
N002 (  1,  1) [000103] D------N----              +--*  LCL_VAR   ref    V15 tmp9         
N001 (  1,  1) [000092] ------------              \--*  LCL_VAR   ref    V12 tmp6         

***** BB10
STMT00022 (IL   ???...  ???)
N004 (  5,  5) [000096] ------------              *  JTRUE     void  
N003 (  3,  3) [000095] J------N----              \--*  NE        int   
N001 (  1,  1) [000093] ------------                 +--*  LCL_VAR   ref    V12 tmp6         
N002 (  1,  1) [000094] ------------                 \--*  CNS_INT   ref    null

------------ BB11 [000..09C) -> BB16 (cond), preds={BB10} succs={BB12,BB16}

***** BB11
STMT00029 (IL   ???...0x097)
N005 ( 16, 16) [000131] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000130] D------N----              +--*  LCL_VAR   ref    V16 tmp10        
N003 ( 16, 16) [000129] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000128] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB11
STMT00068 (IL   ???...  ???)
N010 ( 21, 30) [000305] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000304] D------N----              +--*  LCL_VAR   ref    V25 tmp19        
N008 ( 21, 30) [000126] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 18) [000125] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000123] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
N004 (  1,  1) [000124] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35
N007 (  4, 12) [000121] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000399] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9]

***** BB11
STMT00064 (IL   ???...  ???)
N004 (  5,  5) [000295] ------------              *  JTRUE     void  
N003 (  3,  3) [000294] J------N----              \--*  EQ        int   
N001 (  1,  1) [000292] ------------                 +--*  LCL_VAR   ref    V25 tmp19        
N002 (  1,  1) [000293] ------------                 \--*  CNS_INT   ref    null

------------ BB12 [000..000), preds={BB11} succs={BB13}

***** BB12
STMT00065 (IL   ???...  ???)
N006 (  6,  6) [000298] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000297] ---XG--N----              +--*  IND       ref   
N003 (  2,  2) [000401] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000132] ------------              |     +--*  LCL_VAR   ref    V16 tmp10        
N002 (  1,  1) [000400] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
N005 (  1,  1) [000296] ------------              \--*  LCL_VAR   ref    V25 tmp19        

***** BB12
STMT00066 (IL   ???...  ???)
N006 (  7, 15) [000302] -A-XG-------              *  ASG       long  
N004 (  4,  4) [000301] ---XG--N----              +--*  IND       long  
N003 (  2,  2) [000403] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000299] ------------              |     +--*  LCL_VAR   ref    V16 tmp10        
N002 (  1,  1) [000402] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
N005 (  2, 10) [000127] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

***** BB12
STMT00031 (IL 0x096...  ???)
N010 ( 23, 32) [000142] -ACXG-------              *  COMMA     void  
N005 ( 17, 18) [000141] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000139] ------------ arg0 in rcx  |  +--*  CNS_INT   long   0x7ffc7e4c17e0
N004 (  1,  1) [000140] ------------ arg1 in rdx  |  \--*  CNS_INT   int    35
N009 (  6, 14) [000137] -A--G-------              \--*  ASG       ref   
N007 (  4, 12) [000136] n---G--N----                 +--*  IND       ref   
N006 (  2, 10) [000406] I-----------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1]
N008 (  1,  1) [000135] ------------                 \--*  LCL_VAR   ref    V16 tmp10        

***** BB12
STMT00032 (IL   ???...0x097)
N003 (  1,  3) [000148] -A------R---              *  ASG       ref   
N002 (  1,  1) [000147] D------N----              +--*  LCL_VAR   ref    V15 tmp9         
N001 (  1,  1) [000134] ------------              \--*  LCL_VAR   ref    V16 tmp10        

------------ BB13 [09C..0A6), preds={BB10,BB12} succs={BB14}

***** BB13
STMT00070 (IL   ???...  ???)
N009 ( 18, 20) [000313] -ACXG---R---              *  ASG       ref   
N008 (  1,  1) [000312] D------N----              +--*  LCL_VAR   ref    V27 tmp21        
N007 ( 18, 20) [000112] --CXG-------              \--*  CALL      ref    System.Linq.Enumerable.SelectMany
N004 (  1,  1) [000111] ------------ arg2 in r8      +--*  LCL_VAR   ref    V15 tmp9         
N005 (  1,  1) [000110] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V14 tmp8         
N006 (  2, 10) [000113] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB13
STMT00069 (IL   ???...  ???)
N010 ( 20, 15) [000311] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
N007 (  4,  4) [000309] ---XG------- arg1 in rdx  +--*  IND       int   
N006 (  2,  2) [000411] -------N----              |  \--*  ADD       byref 
N004 (  1,  1) [000308] ------------              |     +--*  LCL_VAR   ref    V13 tmp7         
N005 (  1,  1) [000410] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size]
N008 (  1,  1) [000109] ------------ this in rcx  +--*  LCL_VAR   ref    V13 tmp7         
N009 (  1,  1) [000310] ------------ arg2 in r8   \--*  LCL_VAR   ref    V27 tmp21        

------------ BB14 [0A6..0B3) -> BB02 (cond), preds={BB06,BB13} succs={BB15,BB02}

***** BB14
STMT00028 (IL 0x0A6...0x0A9)
N005 (  3,  3) [000120] -A------R---              *  ASG       int   
N004 (  1,  1) [000119] D------N----              +--*  LCL_VAR   int    V03 loc2         
N003 (  3,  3) [000118] ------------              \--*  ADD       int   
N001 (  1,  1) [000116] ------------                 +--*  LCL_VAR   int    V03 loc2         
N002 (  1,  1) [000117] ------------                 \--*  CNS_INT   int    1

***** BB14
STMT00007 (IL 0x0AA...0x0AE)
N005 (  7,  7) [000027] ---X--------              *  JTRUE     void  
N004 (  5,  5) [000026] J--X---N----              \--*  GT        int   
N002 (  3,  3) [000025] ---X--------                 +--*  ARR_LENGTH int   
N001 (  1,  1) [000024] ------------                 |  \--*  LCL_VAR   ref    V02 loc1         
N003 (  1,  1) [000023] ------------                 \--*  LCL_VAR   int    V03 loc2         

------------ BB15 [0B3..0C7) (return), preds={BB01,BB14} succs={}

***** BB15
STMT00038 (IL 0x0B3...0x0C4)
N005 ( 17, 18) [000181] --CXG-------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle
N003 (  1,  1) [000180] ------------ arg1 in rdx  +--*  LCL_VAR   ref    V01 loc0         
N004 (  2, 10) [000182] H----------- arg0 in rcx  \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB15
STMT00040 (IL   ???...  ???)
N008 ( 21, 31) [000185] --CXG-------              *  CALL      ref    SolutionAnalyzer.Logger.Log
N005 (  4, 12) [000418] #---G------- arg1 in rdx  +--*  IND       ref   
N004 (  2, 10) [000417] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Enumerated and shuffled the project paths."
N006 (  2, 10) [000186] H----------- arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method
N007 (  1,  1) [000184] ------------ arg2 in r8   \--*  CNS_INT   int    2

***** BB15
STMT00041 (IL 0x0C5...0x0C6)
N002 (  2,  2) [000191] ------------              *  RETURN    ref   
N001 (  1,  1) [000190] ------------              \--*  LCL_VAR   ref    V01 loc0         

------------ BB16 [000..000) (throw), preds={BB08,BB11} succs={}

***** BB16
STMT00067 (IL   ???...  ???)
N001 ( 14,  5) [000303] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Build SSA representation
*************** In SsaBuilder::Build()
[SsaBuilder] Max block count is 17.

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB15 ( cond )                     i label target hascall gcsafe idxlen newobj 
BB02 [0001]  2       BB01,BB14             4     0 [01D..02E)-> BB07 ( cond )                     i Loop label target hascall gcsafe idxlen nullcheck bwd bwd-target 
BB03 [0002]  1       BB02                  2     0 [02E..037)-> BB05 ( cond )                     i gcsafe idxlen bwd 
BB04 [0013]  1       BB03                  2     0 [02E..02F)-> BB06 (always)                     i hascall gcsafe bwd 
BB05 [0014]  1       BB03                  2     0 [02E..02F)                                     i label target hascall gcsafe bwd 
BB06 [0015]  2       BB04,BB05             2     0 [???..???)-> BB14 (always)                     internal label target gcsafe bwd 
BB07 [0003]  1       BB02                  2     0 [037..04B)-> BB10 ( cond )                     i label target hascall gcsafe bwd 
BB08 [0004]  1       BB07                  2     0 [000..062)-> BB16 ( cond )                     i hascall gcsafe newobj bwd 
BB09 [0020]  1       BB08                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd 
BB10 [0005]  2       BB07,BB09             2     0 [062..085)-> BB13 ( cond )                     i label target hascall gcsafe bwd 
BB11 [0006]  1       BB10                  2     0 [000..09C)-> BB16 ( cond )                     i hascall gcsafe newobj bwd 
BB12 [0028]  1       BB11                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd 
BB13 [0007]  2       BB10,BB12             2     0 [09C..0A6)                                     i label target hascall gcsafe bwd 
BB14 [0008]  2       BB06,BB13             4     0 [0A6..0B3)-> BB02 ( cond )                     i label target gcsafe idxlen bwd 
BB15 [0010]  2       BB01,BB14             1       [0B3..0C7)        (return)                     i label target hascall gcsafe 
BB16 [0027]  2       BB08,BB11             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
[SsaBuilder] Topologically sorted the graph.
[SsaBuilder::ComputeImmediateDom]

Inside fgBuildDomTree

After computing the Dominance Tree:
BB01 : BB15 BB02 
BB02 : BB14 BB07 BB03 
BB03 : BB06 BB05 BB04 
BB07 : BB16 BB10 BB08 
BB08 : BB09 
BB10 : BB13 BB11 
BB11 : BB12 

*************** In fgLocalVarLiveness()
In fgLocalVarLivenessInit
Tracked variable (25 out of 28) table:
V03 loc2          [   int]: refCnt =    7, refCntWtd =  22   
V01 loc0          [   ref]: refCnt =   12, refCntWtd =  21   
V04 loc3          [   ref]: refCnt =    7, refCntWtd =  20   
V16 tmp10         [   ref]: refCnt =    5, refCntWtd =  20   
V17 tmp11         [   ref]: refCnt =    5, refCntWtd =  20   
V02 loc1          [   ref]: refCnt =    5, refCntWtd =  14   
V08 tmp2          [   ref]: refCnt =    3, refCntWtd =  12   
V12 tmp6          [   ref]: refCnt =    3, refCntWtd =  12   
V21 tmp15         [   ref]: refCnt =    3, refCntWtd =  12   
V25 tmp19         [   ref]: refCnt =    3, refCntWtd =  12   
V18 tmp12         [   ref]: refCnt =    4, refCntWtd =   8   
V19 tmp13         [   int]: refCnt =    4, refCntWtd =   8   
V09 tmp3          [   ref]: refCnt =    2, refCntWtd =   8   
V20 tmp14         [   ref]: refCnt =    2, refCntWtd =   8   
V23 tmp17         [   ref]: refCnt =    2, refCntWtd =   8   
V24 tmp18         [   ref]: refCnt =    2, refCntWtd =   8   
V27 tmp21         [   ref]: refCnt =    2, refCntWtd =   8   
V07 tmp1          [   ref]: refCnt =    3, refCntWtd =   6   
V11 tmp5          [   ref]: refCnt =    3, refCntWtd =   6   
V13 tmp7          [   ref]: refCnt =    3, refCntWtd =   6   
V15 tmp9          [   ref]: refCnt =    3, refCntWtd =   6   
V00 arg0          [   ref]: refCnt =    3, refCntWtd =   3   
V05 loc4          [   ref]: refCnt =    2, refCntWtd =   4   
V10 tmp4          [   ref]: refCnt =    2, refCntWtd =   4   
V14 tmp8          [   ref]: refCnt =    2, refCntWtd =   4   

*************** In fgPerBlockLocalVarLiveness()
BB01 USE(1)={                V00} + ByrefExposed + GcHeap
     DEF(4)={V03 V01 V02 V07    } + ByrefExposed* + GcHeap*

BB02 USE(2)={V03     V02} + ByrefExposed + GcHeap
     DEF(1)={    V04    } + ByrefExposed* + GcHeap*

BB03 USE(1)={V01        } + ByrefExposed + GcHeap
     DEF(2)={    V18 V19} + ByrefExposed + GcHeap

BB04 USE(4)={V01 V04 V18 V19} + ByrefExposed + GcHeap
     DEF(0)={               } + ByrefExposed* + GcHeap*

BB05 USE(2)={V01 V04} + ByrefExposed + GcHeap
     DEF(0)={       } + ByrefExposed* + GcHeap*

BB06 USE(0)={   }
     DEF(1)={V18}

BB07 USE(1)={V04                    } + ByrefExposed + GcHeap
     DEF(5)={    V08 V09 V20 V11 V10} + ByrefExposed* + GcHeap*

BB08 USE(0)={       } + ByrefExposed + GcHeap
     DEF(2)={V17 V21} + ByrefExposed* + GcHeap*

BB09 USE(2)={V17 V21    } + ByrefExposed + GcHeap
     DEF(1)={        V11} + ByrefExposed* + GcHeap*

BB10 USE(4)={V01 V04             V11             V10    } + ByrefExposed + GcHeap
     DEF(7)={        V12 V23 V24     V13 V15 V05     V14} + ByrefExposed* + GcHeap*

BB11 USE(0)={       } + ByrefExposed + GcHeap
     DEF(2)={V16 V25} + ByrefExposed* + GcHeap*

BB12 USE(2)={V16 V25    } + ByrefExposed + GcHeap
     DEF(1)={        V15} + ByrefExposed* + GcHeap*

BB13 USE(3)={    V13 V15 V14} + ByrefExposed + GcHeap
     DEF(1)={V27            } + ByrefExposed* + GcHeap*

BB14 USE(2)={V03 V02}
     DEF(1)={V03    }

BB15 USE(1)={V01} + ByrefExposed + GcHeap
     DEF(0)={   } + ByrefExposed* + GcHeap*

BB16 USE(0)={} + ByrefExposed + GcHeap
     DEF(0)={} + ByrefExposed* + GcHeap*

** Memory liveness computed, GcHeap states and ByrefExposed states match
*************** In fgInterBlockLocalVarLiveness()

BB liveness after fgLiveVarAnalysis():

BB01 IN (1)={            V00} + ByrefExposed + GcHeap
     OUT(3)={V03 V01 V02    } + ByrefExposed + GcHeap

BB02 IN (3)={V03 V01     V02} + ByrefExposed + GcHeap
     OUT(4)={V03 V01 V04 V02} + ByrefExposed + GcHeap

BB03 IN (4)={V03 V01 V04 V02        } + ByrefExposed + GcHeap
     OUT(6)={V03 V01 V04 V02 V18 V19} + ByrefExposed + GcHeap

BB04 IN (6)={V03 V01 V04 V02 V18 V19} + ByrefExposed + GcHeap
     OUT(3)={V03 V01     V02        } + ByrefExposed + GcHeap

BB05 IN (4)={V03 V01 V04 V02} + ByrefExposed + GcHeap
     OUT(3)={V03 V01     V02} + ByrefExposed + GcHeap

BB06 IN (3)={V03 V01 V02} + ByrefExposed + GcHeap
     OUT(3)={V03 V01 V02} + ByrefExposed + GcHeap

BB07 IN (4)={V03 V01 V04 V02        } + ByrefExposed + GcHeap
     OUT(6)={V03 V01 V04 V02 V11 V10} + ByrefExposed + GcHeap

BB08 IN (5)={V03 V01 V04     V02     V10} + ByrefExposed + GcHeap
     OUT(7)={V03 V01 V04 V17 V02 V21 V10} + ByrefExposed + GcHeap

BB09 IN (7)={V03 V01 V04 V17 V02 V21     V10} + ByrefExposed + GcHeap
     OUT(6)={V03 V01 V04     V02     V11 V10} + ByrefExposed + GcHeap

BB10 IN (6)={V03 V01 V04 V02 V11         V10    } + ByrefExposed + GcHeap
     OUT(6)={V03 V01     V02     V13 V15     V14} + ByrefExposed + GcHeap

BB11 IN (5)={V03 V01     V02     V13 V14} + ByrefExposed + GcHeap
     OUT(7)={V03 V01 V16 V02 V25 V13 V14} + ByrefExposed + GcHeap

BB12 IN (7)={V03 V01 V16 V02 V25 V13     V14} + ByrefExposed + GcHeap
     OUT(6)={V03 V01     V02     V13 V15 V14} + ByrefExposed + GcHeap

BB13 IN (6)={V03 V01 V02 V13 V15 V14} + ByrefExposed + GcHeap
     OUT(3)={V03 V01 V02            } + ByrefExposed + GcHeap

BB14 IN (3)={V03 V01 V02} + ByrefExposed + GcHeap
     OUT(3)={V03 V01 V02} + ByrefExposed + GcHeap

BB15 IN (1)={V01} + ByrefExposed + GcHeap
     OUT(0)={   }

BB16 IN (0)={} + ByrefExposed + GcHeap
     OUT(0)={}

top level assign
removing stmt with no side effects

Removing statement STMT00050 (IL 0x02E...  ???)
N003 (  1,  3) [000232] -A------R---              *  ASG       ref   
N002 (  1,  1) [000231] D------N----              +--*  LCL_VAR   ref    V18 tmp12        
N001 (  1,  1) [000230] ------------              \--*  CNS_INT   ref    null
 in BB06 as useless:

BB06 becomes empty
*************** In optRemoveRedundantZeroInits()
*************** In SsaBuilder::InsertPhiFunctions()
Inserting phi functions:
Added PHI definition for V03 at start of BB02.
Inserting phi definition for ByrefExposed at start of BB06.
Inserting phi definition for ByrefExposed at start of BB14.
Inserting phi definition for ByrefExposed at start of BB15.
Inserting phi definition for ByrefExposed at start of BB02.
Added PHI definition for V15 at start of BB13.
Inserting phi definition for ByrefExposed at start of BB13.
Inserting phi definition for ByrefExposed at start of BB16.
Added PHI definition for V11 at start of BB10.
Inserting phi definition for ByrefExposed at start of BB10.
*************** In SsaBuilder::RenameVariables()

After fgSsaBuild:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB15 ( cond )                     i label target hascall gcsafe idxlen newobj 
BB02 [0001]  2       BB01,BB14             4     0 [01D..02E)-> BB07 ( cond )                     i Loop label target hascall gcsafe idxlen nullcheck bwd bwd-target 
BB03 [0002]  1       BB02                  2     0 [02E..037)-> BB05 ( cond )                     i gcsafe idxlen bwd 
BB04 [0013]  1       BB03                  2     0 [02E..02F)-> BB06 (always)                     i hascall gcsafe bwd 
BB05 [0014]  1       BB03                  2     0 [02E..02F)                                     i label target hascall gcsafe bwd 
BB06 [0015]  2       BB04,BB05             2     0 [???..???)-> BB14 (always)                     internal label target gcsafe bwd 
BB07 [0003]  1       BB02                  2     0 [037..04B)-> BB10 ( cond )                     i label target hascall gcsafe bwd 
BB08 [0004]  1       BB07                  2     0 [000..062)-> BB16 ( cond )                     i hascall gcsafe newobj bwd 
BB09 [0020]  1       BB08                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd 
BB10 [0005]  2       BB07,BB09             2     0 [062..085)-> BB13 ( cond )                     i label target hascall gcsafe bwd 
BB11 [0006]  1       BB10                  2     0 [000..09C)-> BB16 ( cond )                     i hascall gcsafe newobj bwd 
BB12 [0028]  1       BB11                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd 
BB13 [0007]  2       BB10,BB12             2     0 [09C..0A6)                                     i label target hascall gcsafe bwd 
BB14 [0008]  2       BB06,BB13             4     0 [0A6..0B3)-> BB02 ( cond )                     i label target gcsafe idxlen bwd 
BB15 [0010]  2       BB01,BB14             1       [0B3..0C7)        (return)                     i label target hascall gcsafe 
BB16 [0027]  2       BB08,BB11             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..01D) -> BB15 (cond), preds={} succs={BB02,BB15}

***** BB01
STMT00001 (IL   ???...  ???)
N008 ( 21, 31) [000002] --CXG-------              *  CALL      ref    SolutionAnalyzer.Logger.Log
N005 (  4, 12) [000317] #---G------- arg1 in rdx  +--*  IND       ref   
N004 (  2, 10) [000316] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Started enumerating project paths."
N006 (  2, 10) [000003] H----------- arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method
N007 (  1,  1) [000001] ------------ arg2 in r8   \--*  CNS_INT   int    2

***** BB01
STMT00002 (IL 0x00C...0x013)
N005 ( 16, 16) [000011] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000010] D------N----              +--*  LCL_VAR   ref    V07 tmp1         d:2
N003 ( 16, 16) [000009] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000008] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00003 (IL   ???...  ???)
N005 ( 16, 10) [000013] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor
N003 (  1,  1) [000012] ------------ this in rcx  +--*  LCL_VAR   ref    V07 tmp1         u:2
N004 (  1,  1) [000007] ------------ arg1 in rdx  \--*  CNS_INT   int    100

***** BB01
STMT00004 (IL 0x013...  ???)
N003 (  1,  3) [000016] -A------R---              *  ASG       ref   
N002 (  1,  1) [000015] D------N----              +--*  LCL_VAR   ref    V01 loc0         d:2
N001 (  1,  1) [000014] ------------              \--*  LCL_VAR   ref    V07 tmp1         u:2 (last use)

***** BB01
STMT00005 (IL 0x014...0x015)
N003 (  1,  3) [000019] -A------R---              *  ASG       ref   
N002 (  1,  1) [000018] D------N----              +--*  LCL_VAR   ref    V02 loc1         d:2
N001 (  1,  1) [000017] ------------              \--*  LCL_VAR   ref    V00 arg0         u:1 (last use)

***** BB01
STMT00006 (IL 0x016...0x017)
N003 (  1,  3) [000022] -A------R---              *  ASG       int   
N002 (  1,  1) [000021] D------N----              +--*  LCL_VAR   int    V03 loc2         d:2
N001 (  1,  1) [000020] ------------              \--*  CNS_INT   int    0

***** BB01
STMT00071 (IL 0x0AA...  ???)
N005 (  7,  7) [000426] ---X--------              *  JTRUE     void  
N004 (  5,  5) [000422] J--X---N----              \--*  LE        int   
N002 (  3,  3) [000423] ---X--------                 +--*  ARR_LENGTH int   
N001 (  1,  1) [000424] ------------                 |  \--*  LCL_VAR   ref    V02 loc1         u:2
N003 (  1,  1) [000425] ------------                 \--*  LCL_VAR   int    V03 loc2         u:2

------------ BB02 [01D..02E) -> BB07 (cond), preds={BB01,BB14} succs={BB03,BB07}

***** BB02
STMT00072 (IL   ???...  ???)
N005 (  0,  0) [000429] -A------R---              *  ASG       int   
N004 (  0,  0) [000427] D------N----              +--*  LCL_VAR   int    V03 loc2         d:3
N003 (  0,  0) [000428] ------------              \--*  PHI       int   
N001 (  0,  0) [000437] ------------ pred BB14       +--*  PHI_ARG   int    V03 loc2         u:4
N002 (  0,  0) [000436] ------------ pred BB01       \--*  PHI_ARG   int    V03 loc2         u:2

***** BB02
STMT00008 (IL 0x01D...0x020)
N016 ( 14, 18) [000032] -A-XG---R---              *  ASG       ref   
N015 (  1,  1) [000031] D------N----              +--*  LCL_VAR   ref    V04 loc3         d:2
N014 ( 14, 18) [000334] ---XG-------              \--*  COMMA     ref   
N004 (  8, 11) [000327] ---X--------                 +--*  ARR_BOUNDS_CHECK_Rng void  
N001 (  1,  1) [000029] ------------                 |  +--*  LCL_VAR   int    V03 loc2         u:3
N003 (  3,  3) [000326] ---X--------                 |  \--*  ARR_LENGTH int   
N002 (  1,  1) [000028] ------------                 |     \--*  LCL_VAR   ref    V02 loc1         u:2
N013 (  6,  7) [000030] a---G-------                 \--*  IND       ref   
N012 (  5,  6) [000333] -------N----                    \--*  ADD       byref 
N005 (  1,  1) [000324] ------------                       +--*  LCL_VAR   ref    V02 loc1         u:2
N011 (  4,  5) [000332] -------N----                       \--*  ADD       long  
N009 (  3,  4) [000330] -------N----                          +--*  LSH       long  
N007 (  2,  3) [000328] ------------                          |  +--*  CAST      long <- int
N006 (  1,  1) [000325] i-----------                          |  |  \--*  LCL_VAR   int    V03 loc2         u:3
N008 (  1,  1) [000329] -------N----                          |  \--*  CNS_INT   long   3
N010 (  1,  1) [000331] ------------                          \--*  CNS_INT   long   16 Fseq[#FirstElem]

***** BB02
STMT00042 (IL 0x021...  ???)
N002 (  2,  2) [000197] ---X--------              *  NULLCHECK byte  
N001 (  1,  1) [000196] ------------              \--*  LCL_VAR   ref    V04 loc3         u:2

***** BB02
STMT00010 (IL   ???...  ???)
N011 ( 24, 27) [000039] --CXG-------              *  JTRUE     void  
N010 ( 22, 25) [000038] J-CXG--N----              \--*  EQ        int   
N008 ( 20, 23) [000195] --CXG-------                 +--*  CALL      int    System.String.EndsWith
N005 (  4, 12) [000336] #---G------- arg1 in rdx     |  +--*  IND       ref   
N004 (  2, 10) [000335] H-----------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E ".csproj"
N006 (  1,  1) [000033] ------------ this in rcx     |  +--*  LCL_VAR   ref    V04 loc3         u:2
N007 (  1,  1) [000194] ------------ arg2 in r8      |  \--*  CNS_INT   int    0
N009 (  1,  1) [000037] ------------                 \--*  CNS_INT   int    0

------------ BB03 [02E..037) -> BB05 (cond), preds={BB02} succs={BB04,BB05}

***** BB03
STMT00043 (IL 0x02E...  ???)
N011 ( 11, 11) [000204] -A-XG---R---              *  ASG       int   
N010 (  4,  4) [000203] D--XG--N----              +--*  IND       int   
N009 (  2,  2) [000341] -------N----              |  \--*  ADD       byref 
N007 (  1,  1) [000177] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2
N008 (  1,  1) [000340] ------------              |     \--*  CNS_INT   long   20 field offset Fseq[_version]
N006 (  6,  6) [000202] ---XG-------              \--*  ADD       int   
N004 (  4,  4) [000200] ---XG-------                 +--*  IND       int   
N003 (  2,  2) [000343] -------N----                 |  \--*  ADD       byref 
N001 (  1,  1) [000199] ------------                 |     +--*  LCL_VAR   ref    V01 loc0         u:2
N002 (  1,  1) [000342] ------------                 |     \--*  CNS_INT   long   20 field offset Fseq[_version]
N005 (  1,  1) [000201] ------------                 \--*  CNS_INT   int    1

***** BB03
STMT00044 (IL 0x02E...  ???)
N006 (  4,  4) [000208] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000207] D------N----              +--*  LCL_VAR   ref    V18 tmp12        d:2
N004 (  4,  4) [000206] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000345] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000205] ------------                    +--*  LCL_VAR   ref    V01 loc0         u:2
N002 (  1,  1) [000344] ------------                    \--*  CNS_INT   long   8 field offset Fseq[_items]

***** BB03
STMT00045 (IL 0x02E...  ???)
N006 (  4,  4) [000212] -A-XG---R---              *  ASG       int   
N005 (  1,  1) [000211] D------N----              +--*  LCL_VAR   int    V19 tmp13        d:2
N004 (  4,  4) [000210] ---XG-------              \--*  IND       int   
N003 (  2,  2) [000347] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000209] ------------                    +--*  LCL_VAR   ref    V01 loc0         u:2
N002 (  1,  1) [000346] ------------                    \--*  CNS_INT   long   16 field offset Fseq[_size]

***** BB03
STMT00046 (IL 0x02E...  ???)
N005 (  7,  7) [000217] ---X--------              *  JTRUE     void  
N004 (  5,  5) [000216] N--X---N-U--              \--*  LE        int   
N002 (  3,  3) [000215] ---X--------                 +--*  ARR_LENGTH int   
N001 (  1,  1) [000214] ------------                 |  \--*  LCL_VAR   ref    V18 tmp12        u:2
N003 (  1,  1) [000213] ------------                 \--*  LCL_VAR   int    V19 tmp13        u:2

------------ BB04 [02E..02F) -> BB06 (always), preds={BB03} succs={BB06}

***** BB04
STMT00048 (IL 0x02E...  ???)
N008 (  8,  8) [000225] -A-XG---R---              *  ASG       int   
N007 (  4,  4) [000224] D--XG--N----              +--*  IND       int   
N006 (  2,  2) [000349] -------N----              |  \--*  ADD       byref 
N004 (  1,  1) [000220] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2
N005 (  1,  1) [000348] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size]
N003 (  3,  3) [000223] ------------              \--*  ADD       int   
N001 (  1,  1) [000221] ------------                 +--*  LCL_VAR   int    V19 tmp13        u:2
N002 (  1,  1) [000222] ------------                 \--*  CNS_INT   int    1

***** BB04
STMT00049 (IL 0x02E...  ???)
N007 ( 17, 11) [000229] --CXG-------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST
N004 (  1,  1) [000226] ------------ arg0 in rcx  +--*  LCL_VAR   ref    V18 tmp12        u:2 (last use)
N005 (  1,  1) [000227] ------------ arg1 in rdx  +--*  LCL_VAR   int    V19 tmp13        u:2 (last use)
N006 (  1,  1) [000228] ------------ arg2 in r8   \--*  LCL_VAR   ref    V04 loc3         u:2 (last use)

------------ BB05 [02E..02F), preds={BB03} succs={BB06}

***** BB05
STMT00047 (IL 0x02E...  ???)
N005 ( 16, 10) [000219] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize
N003 (  1,  1) [000218] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         u:2
N004 (  1,  1) [000178] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V04 loc3         u:2 (last use)

------------ BB06 [???..???) -> BB14 (always), preds={BB04,BB05} succs={BB14}

------------ BB07 [037..04B) -> BB10 (cond), preds={BB02} succs={BB08,BB10}

***** BB07
STMT00053 (IL 0x037...  ???)
N005 ( 15,  7) [000247] -ACXG---R---              *  ASG       ref   
N004 (  1,  1) [000246] D------N----              +--*  LCL_VAR   ref    V20 tmp14        d:2
N003 ( 15,  7) [000236] --CXG-------              \--*  CALL      ref    System.IO.EnumerationOptions.FromSearchOption
N002 (  1,  1) [000235] ------------ arg0 in rcx     \--*  CNS_INT   int    1

***** BB07
STMT00013 (IL   ???...  ???)
N012 ( 21, 24) [000054] -ACXG---R---              *  ASG       ref   
N011 (  1,  1) [000053] D------N----              +--*  LCL_VAR   ref    V09 tmp3         d:2
N010 ( 21, 24) [000245] --CXG-------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths
N006 (  4, 12) [000357] #---G------- arg1 in rdx     +--*  IND       ref   
N005 (  2, 10) [000356] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*"
N007 (  1,  1) [000040] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         u:2
N008 (  1,  1) [000244] ------------ arg3 in r9      +--*  LCL_VAR   ref    V20 tmp14        u:2 (last use)
N009 (  1,  1) [000243] ------------ arg2 in r8      \--*  CNS_INT   int    2

***** BB07
STMT00012 (IL   ???...  ???)
N010 ( 21, 30) [000052] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000051] D------N----              +--*  LCL_VAR   ref    V08 tmp2         d:2
N008 ( 21, 30) [000050] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 18) [000049] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000047] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
N004 (  1,  1) [000048] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35
N007 (  4, 12) [000045] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000364] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0]

***** BB07
STMT00015 (IL   ???...0x049)
N003 (  1,  3) [000062] -A------R---              *  ASG       ref   
N002 (  1,  1) [000061] D------N----              +--*  LCL_VAR   ref    V10 tmp4         d:2
N001 (  1,  1) [000055] ------------              \--*  LCL_VAR   ref    V09 tmp3         u:2 (last use)

***** BB07
STMT00016 (IL   ???...  ???)
N003 (  1,  3) [000065] -A------R---              *  ASG       ref   
N002 (  1,  1) [000064] D------N----              +--*  LCL_VAR   ref    V11 tmp5         d:2
N001 (  1,  1) [000056] ------------              \--*  LCL_VAR   ref    V08 tmp2         u:2

***** BB07
STMT00014 (IL   ???...  ???)
N004 (  5,  5) [000060] ------------              *  JTRUE     void  
N003 (  3,  3) [000059] J------N----              \--*  NE        int   
N001 (  1,  1) [000057] ------------                 +--*  LCL_VAR   ref    V08 tmp2         u:2 (last use)
N002 (  1,  1) [000058] ------------                 \--*  CNS_INT   ref    null

------------ BB08 [000..062) -> BB16 (cond), preds={BB07} succs={BB09,BB16}

***** BB08
STMT00033 (IL   ???...0x05D)
N005 ( 16, 16) [000160] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000159] D------N----              +--*  LCL_VAR   ref    V17 tmp11        d:2
N003 ( 16, 16) [000158] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000157] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB08
STMT00058 (IL   ???...  ???)
N010 ( 21, 30) [000262] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000261] D------N----              +--*  LCL_VAR   ref    V21 tmp15        d:2
N008 ( 21, 30) [000155] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 18) [000154] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000152] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
N004 (  1,  1) [000153] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35
N007 (  4, 12) [000150] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000368] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9]

***** BB08
STMT00054 (IL   ???...  ???)
N004 (  5,  5) [000252] ------------              *  JTRUE     void  
N003 (  3,  3) [000251] J------N----              \--*  EQ        int   
N001 (  1,  1) [000249] ------------                 +--*  LCL_VAR   ref    V21 tmp15        u:2
N002 (  1,  1) [000250] ------------                 \--*  CNS_INT   ref    null

------------ BB09 [000..000), preds={BB08} succs={BB10}

***** BB09
STMT00055 (IL   ???...  ???)
N006 (  6,  6) [000255] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000254] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000370] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000161] ------------              |     +--*  LCL_VAR   ref    V17 tmp11        u:2
N002 (  1,  1) [000369] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
N005 (  1,  1) [000253] ------------              \--*  LCL_VAR   ref    V21 tmp15        u:2 (last use)

***** BB09
STMT00056 (IL   ???...  ???)
N006 (  7, 15) [000259] -A-XG-------              *  ASG       long  
N004 (  4,  4) [000258] D--XG--N----              +--*  IND       long  
N003 (  2,  2) [000372] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000256] ------------              |     +--*  LCL_VAR   ref    V17 tmp11        u:2
N002 (  1,  1) [000371] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
N005 (  2, 10) [000156] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

***** BB09
STMT00035 (IL 0x05C...  ???)
N010 ( 23, 32) [000171] -ACXG-------              *  COMMA     void  
N005 ( 17, 18) [000170] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000168] ------------ arg0 in rcx  |  +--*  CNS_INT   long   0x7ffc7e4c17e0
N004 (  1,  1) [000169] ------------ arg1 in rdx  |  \--*  CNS_INT   int    35
N009 (  6, 14) [000166] -A--G-------              \--*  ASG       ref   
N007 (  4, 12) [000165] n---G--N----                 +--*  IND       ref   
N006 (  2, 10) [000375] I-----------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0]
N008 (  1,  1) [000164] ------------                 \--*  LCL_VAR   ref    V17 tmp11        u:2

***** BB09
STMT00036 (IL   ???...0x05D)
N003 (  1,  3) [000175] -A------R---              *  ASG       ref   
N002 (  1,  1) [000174] D------N----              +--*  LCL_VAR   ref    V11 tmp5         d:4
N001 (  1,  1) [000163] ------------              \--*  LCL_VAR   ref    V17 tmp11        u:2 (last use)

------------ BB10 [062..085) -> BB13 (cond), preds={BB07,BB09} succs={BB11,BB13}

***** BB10
STMT00074 (IL   ???...  ???)
N005 (  0,  0) [000435] -A------R---              *  ASG       ref   
N004 (  0,  0) [000433] D------N----              +--*  LCL_VAR   ref    V11 tmp5         d:3
N003 (  0,  0) [000434] ------------              \--*  PHI       ref   
N001 (  0,  0) [000441] ------------ pred BB09       +--*  PHI_ARG   ref    V11 tmp5         u:4
N002 (  0,  0) [000438] ------------ pred BB07       \--*  PHI_ARG   ref    V11 tmp5         u:2

***** BB10
STMT00018 (IL   ???...  ???)
N009 ( 18, 20) [000075] -ACXG---R---              *  ASG       ref   
N008 (  1,  1) [000074] D------N----              +--*  LCL_VAR   ref    V05 loc4         d:2
N007 ( 18, 20) [000071] --CXG-------              \--*  CALL      ref    System.Linq.Enumerable.Where
N004 (  1,  1) [000070] ------------ arg2 in r8      +--*  LCL_VAR   ref    V11 tmp5         u:3 (last use)
N005 (  1,  1) [000069] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V10 tmp4         u:2 (last use)
N006 (  2, 10) [000072] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB10
STMT00061 (IL 0x069...  ???)
N010 ( 21, 30) [000283] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000282] D------N----              +--*  LCL_VAR   ref    V23 tmp17        d:2
N008 ( 21, 30) [000276] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 18) [000275] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000273] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e783cd8
N004 (  1,  1) [000274] ------------ arg1 in rdx     |  \--*  CNS_INT   int    40
N007 (  4, 12) [000271] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000381] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<Compatible>k__BackingField]

***** BB10
STMT00063 (IL   ???...  ???)
N012 ( 21, 24) [000290] -ACXG---R---              *  ASG       ref   
N011 (  1,  1) [000289] D------N----              +--*  LCL_VAR   ref    V24 tmp18        d:2
N010 ( 21, 24) [000281] --CXG-------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths
N006 (  4, 12) [000383] #---G------- arg1 in rdx     +--*  IND       ref   
N005 (  2, 10) [000382] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*.csproj"
N007 (  1,  1) [000077] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         u:2 (last use)
N008 (  1,  1) [000280] ------------ arg3 in r9      +--*  LCL_VAR   ref    V23 tmp17        u:2 (last use)
N009 (  1,  1) [000279] ------------ arg2 in r8      \--*  CNS_INT   int    1

***** BB10
STMT00062 (IL   ???...  ???)
N010 ( 20, 15) [000288] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
N007 (  4,  4) [000286] ---XG------- arg1 in rdx  +--*  IND       int   
N006 (  2,  2) [000389] -------N----              |  \--*  ADD       byref 
N004 (  1,  1) [000285] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2
N005 (  1,  1) [000388] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size]
N008 (  1,  1) [000076] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         u:2
N009 (  1,  1) [000287] ------------ arg2 in r8   \--*  LCL_VAR   ref    V24 tmp18        u:2 (last use)

***** BB10
STMT00021 (IL 0x07A...  ???)
N010 ( 21, 30) [000091] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000090] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:2
N008 ( 21, 30) [000089] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 18) [000088] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000086] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
N004 (  1,  1) [000087] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35
N007 (  4, 12) [000084] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000395] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1]

***** BB10
STMT00023 (IL   ???...0x083)
N003 (  1,  3) [000098] -A------R---              *  ASG       ref   
N002 (  1,  1) [000097] D------N----              +--*  LCL_VAR   ref    V13 tmp7         d:2
N001 (  1,  1) [000082] ------------              \--*  LCL_VAR   ref    V01 loc0         u:2

***** BB10
STMT00024 (IL   ???...  ???)
N003 (  1,  3) [000101] -A------R---              *  ASG       ref   
N002 (  1,  1) [000100] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:2
N001 (  1,  1) [000083] ------------              \--*  LCL_VAR   ref    V05 loc4         u:2 (last use)

***** BB10
STMT00025 (IL   ???...  ???)
N003 (  1,  3) [000104] -A------R---              *  ASG       ref   
N002 (  1,  1) [000103] D------N----              +--*  LCL_VAR   ref    V15 tmp9         d:2
N001 (  1,  1) [000092] ------------              \--*  LCL_VAR   ref    V12 tmp6         u:2

***** BB10
STMT00022 (IL   ???...  ???)
N004 (  5,  5) [000096] ------------              *  JTRUE     void  
N003 (  3,  3) [000095] J------N----              \--*  NE        int   
N001 (  1,  1) [000093] ------------                 +--*  LCL_VAR   ref    V12 tmp6         u:2 (last use)
N002 (  1,  1) [000094] ------------                 \--*  CNS_INT   ref    null

------------ BB11 [000..09C) -> BB16 (cond), preds={BB10} succs={BB12,BB16}

***** BB11
STMT00029 (IL   ???...0x097)
N005 ( 16, 16) [000131] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000130] D------N----              +--*  LCL_VAR   ref    V16 tmp10        d:2
N003 ( 16, 16) [000129] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000128] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB11
STMT00068 (IL   ???...  ???)
N010 ( 21, 30) [000305] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000304] D------N----              +--*  LCL_VAR   ref    V25 tmp19        d:2
N008 ( 21, 30) [000126] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 18) [000125] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000123] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
N004 (  1,  1) [000124] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35
N007 (  4, 12) [000121] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000399] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9]

***** BB11
STMT00064 (IL   ???...  ???)
N004 (  5,  5) [000295] ------------              *  JTRUE     void  
N003 (  3,  3) [000294] J------N----              \--*  EQ        int   
N001 (  1,  1) [000292] ------------                 +--*  LCL_VAR   ref    V25 tmp19        u:2
N002 (  1,  1) [000293] ------------                 \--*  CNS_INT   ref    null

------------ BB12 [000..000), preds={BB11} succs={BB13}

***** BB12
STMT00065 (IL   ???...  ???)
N006 (  6,  6) [000298] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000297] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000401] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000132] ------------              |     +--*  LCL_VAR   ref    V16 tmp10        u:2
N002 (  1,  1) [000400] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
N005 (  1,  1) [000296] ------------              \--*  LCL_VAR   ref    V25 tmp19        u:2 (last use)

***** BB12
STMT00066 (IL   ???...  ???)
N006 (  7, 15) [000302] -A-XG-------              *  ASG       long  
N004 (  4,  4) [000301] D--XG--N----              +--*  IND       long  
N003 (  2,  2) [000403] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000299] ------------              |     +--*  LCL_VAR   ref    V16 tmp10        u:2
N002 (  1,  1) [000402] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
N005 (  2, 10) [000127] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

***** BB12
STMT00031 (IL 0x096...  ???)
N010 ( 23, 32) [000142] -ACXG-------              *  COMMA     void  
N005 ( 17, 18) [000141] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000139] ------------ arg0 in rcx  |  +--*  CNS_INT   long   0x7ffc7e4c17e0
N004 (  1,  1) [000140] ------------ arg1 in rdx  |  \--*  CNS_INT   int    35
N009 (  6, 14) [000137] -A--G-------              \--*  ASG       ref   
N007 (  4, 12) [000136] n---G--N----                 +--*  IND       ref   
N006 (  2, 10) [000406] I-----------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1]
N008 (  1,  1) [000135] ------------                 \--*  LCL_VAR   ref    V16 tmp10        u:2

***** BB12
STMT00032 (IL   ???...0x097)
N003 (  1,  3) [000148] -A------R---              *  ASG       ref   
N002 (  1,  1) [000147] D------N----              +--*  LCL_VAR   ref    V15 tmp9         d:4
N001 (  1,  1) [000134] ------------              \--*  LCL_VAR   ref    V16 tmp10        u:2 (last use)

------------ BB13 [09C..0A6), preds={BB10,BB12} succs={BB14}

***** BB13
STMT00073 (IL   ???...  ???)
N005 (  0,  0) [000432] -A------R---              *  ASG       ref   
N004 (  0,  0) [000430] D------N----              +--*  LCL_VAR   ref    V15 tmp9         d:3
N003 (  0,  0) [000431] ------------              \--*  PHI       ref   
N001 (  0,  0) [000440] ------------ pred BB12       +--*  PHI_ARG   ref    V15 tmp9         u:4
N002 (  0,  0) [000439] ------------ pred BB10       \--*  PHI_ARG   ref    V15 tmp9         u:2

***** BB13
STMT00070 (IL   ???...  ???)
N009 ( 18, 20) [000313] -ACXG---R---              *  ASG       ref   
N008 (  1,  1) [000312] D------N----              +--*  LCL_VAR   ref    V27 tmp21        d:2
N007 ( 18, 20) [000112] --CXG-------              \--*  CALL      ref    System.Linq.Enumerable.SelectMany
N004 (  1,  1) [000111] ------------ arg2 in r8      +--*  LCL_VAR   ref    V15 tmp9         u:3 (last use)
N005 (  1,  1) [000110] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V14 tmp8         u:2 (last use)
N006 (  2, 10) [000113] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB13
STMT00069 (IL   ???...  ???)
N010 ( 20, 15) [000311] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
N007 (  4,  4) [000309] ---XG------- arg1 in rdx  +--*  IND       int   
N006 (  2,  2) [000411] -------N----              |  \--*  ADD       byref 
N004 (  1,  1) [000308] ------------              |     +--*  LCL_VAR   ref    V13 tmp7         u:2
N005 (  1,  1) [000410] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size]
N008 (  1,  1) [000109] ------------ this in rcx  +--*  LCL_VAR   ref    V13 tmp7         u:2 (last use)
N009 (  1,  1) [000310] ------------ arg2 in r8   \--*  LCL_VAR   ref    V27 tmp21        u:2 (last use)

------------ BB14 [0A6..0B3) -> BB02 (cond), preds={BB06,BB13} succs={BB15,BB02}

***** BB14
STMT00028 (IL 0x0A6...0x0A9)
N005 (  3,  3) [000120] -A------R---              *  ASG       int   
N004 (  1,  1) [000119] D------N----              +--*  LCL_VAR   int    V03 loc2         d:4
N003 (  3,  3) [000118] ------------              \--*  ADD       int   
N001 (  1,  1) [000116] ------------                 +--*  LCL_VAR   int    V03 loc2         u:3 (last use)
N002 (  1,  1) [000117] ------------                 \--*  CNS_INT   int    1

***** BB14
STMT00007 (IL 0x0AA...0x0AE)
N005 (  7,  7) [000027] ---X--------              *  JTRUE     void  
N004 (  5,  5) [000026] J--X---N----              \--*  GT        int   
N002 (  3,  3) [000025] ---X--------                 +--*  ARR_LENGTH int   
N001 (  1,  1) [000024] ------------                 |  \--*  LCL_VAR   ref    V02 loc1         u:2
N003 (  1,  1) [000023] ------------                 \--*  LCL_VAR   int    V03 loc2         u:4

------------ BB15 [0B3..0C7) (return), preds={BB01,BB14} succs={}

***** BB15
STMT00038 (IL 0x0B3...0x0C4)
N005 ( 17, 18) [000181] --CXG-------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle
N003 (  1,  1) [000180] ------------ arg1 in rdx  +--*  LCL_VAR   ref    V01 loc0         u:2
N004 (  2, 10) [000182] H----------- arg0 in rcx  \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB15
STMT00040 (IL   ???...  ???)
N008 ( 21, 31) [000185] --CXG-------              *  CALL      ref    SolutionAnalyzer.Logger.Log
N005 (  4, 12) [000418] #---G------- arg1 in rdx  +--*  IND       ref   
N004 (  2, 10) [000417] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Enumerated and shuffled the project paths."
N006 (  2, 10) [000186] H----------- arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method
N007 (  1,  1) [000184] ------------ arg2 in r8   \--*  CNS_INT   int    2

***** BB15
STMT00041 (IL 0x0C5...0x0C6)
N002 (  2,  2) [000191] ------------              *  RETURN    ref   
N001 (  1,  1) [000190] ------------              \--*  LCL_VAR   ref    V01 loc0         u:2 (last use)

------------ BB16 [000..000) (throw), preds={BB08,BB11} succs={}

***** BB16
STMT00067 (IL   ???...  ???)
N001 ( 14,  5) [000303] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

-------------------------------------------------------------------------------------------------------------------

*************** Finishing PHASE Build SSA representation
Trees after Build SSA representation

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB15 ( cond )                     i label target hascall gcsafe idxlen newobj 
BB02 [0001]  2       BB01,BB14             4     0 [01D..02E)-> BB07 ( cond )                     i Loop label target hascall gcsafe idxlen nullcheck bwd bwd-target 
BB03 [0002]  1       BB02                  2     0 [02E..037)-> BB05 ( cond )                     i gcsafe idxlen bwd 
BB04 [0013]  1       BB03                  2     0 [02E..02F)-> BB06 (always)                     i hascall gcsafe bwd 
BB05 [0014]  1       BB03                  2     0 [02E..02F)                                     i label target hascall gcsafe bwd 
BB06 [0015]  2       BB04,BB05             2     0 [???..???)-> BB14 (always)                     internal label target gcsafe bwd 
BB07 [0003]  1       BB02                  2     0 [037..04B)-> BB10 ( cond )                     i label target hascall gcsafe bwd 
BB08 [0004]  1       BB07                  2     0 [000..062)-> BB16 ( cond )                     i hascall gcsafe newobj bwd 
BB09 [0020]  1       BB08                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd 
BB10 [0005]  2       BB07,BB09             2     0 [062..085)-> BB13 ( cond )                     i label target hascall gcsafe bwd 
BB11 [0006]  1       BB10                  2     0 [000..09C)-> BB16 ( cond )                     i hascall gcsafe newobj bwd 
BB12 [0028]  1       BB11                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd 
BB13 [0007]  2       BB10,BB12             2     0 [09C..0A6)                                     i label target hascall gcsafe bwd 
BB14 [0008]  2       BB06,BB13             4     0 [0A6..0B3)-> BB02 ( cond )                     i label target gcsafe idxlen bwd 
BB15 [0010]  2       BB01,BB14             1       [0B3..0C7)        (return)                     i label target hascall gcsafe 
BB16 [0027]  2       BB08,BB11             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..01D) -> BB15 (cond), preds={} succs={BB02,BB15}

***** BB01
STMT00001 (IL   ???...  ???)
N008 ( 21, 31) [000002] --CXG-------              *  CALL      ref    SolutionAnalyzer.Logger.Log
N005 (  4, 12) [000317] #---G------- arg1 in rdx  +--*  IND       ref   
N004 (  2, 10) [000316] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Started enumerating project paths."
N006 (  2, 10) [000003] H----------- arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method
N007 (  1,  1) [000001] ------------ arg2 in r8   \--*  CNS_INT   int    2

***** BB01
STMT00002 (IL 0x00C...0x013)
N005 ( 16, 16) [000011] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000010] D------N----              +--*  LCL_VAR   ref    V07 tmp1         d:2
N003 ( 16, 16) [000009] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000008] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00003 (IL   ???...  ???)
N005 ( 16, 10) [000013] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor
N003 (  1,  1) [000012] ------------ this in rcx  +--*  LCL_VAR   ref    V07 tmp1         u:2
N004 (  1,  1) [000007] ------------ arg1 in rdx  \--*  CNS_INT   int    100

***** BB01
STMT00004 (IL 0x013...  ???)
N003 (  1,  3) [000016] -A------R---              *  ASG       ref   
N002 (  1,  1) [000015] D------N----              +--*  LCL_VAR   ref    V01 loc0         d:2
N001 (  1,  1) [000014] ------------              \--*  LCL_VAR   ref    V07 tmp1         u:2 (last use)

***** BB01
STMT00005 (IL 0x014...0x015)
N003 (  1,  3) [000019] -A------R---              *  ASG       ref   
N002 (  1,  1) [000018] D------N----              +--*  LCL_VAR   ref    V02 loc1         d:2
N001 (  1,  1) [000017] ------------              \--*  LCL_VAR   ref    V00 arg0         u:1 (last use)

***** BB01
STMT00006 (IL 0x016...0x017)
N003 (  1,  3) [000022] -A------R---              *  ASG       int   
N002 (  1,  1) [000021] D------N----              +--*  LCL_VAR   int    V03 loc2         d:2
N001 (  1,  1) [000020] ------------              \--*  CNS_INT   int    0

***** BB01
STMT00071 (IL 0x0AA...  ???)
N005 (  7,  7) [000426] ---X--------              *  JTRUE     void  
N004 (  5,  5) [000422] J--X---N----              \--*  LE        int   
N002 (  3,  3) [000423] ---X--------                 +--*  ARR_LENGTH int   
N001 (  1,  1) [000424] ------------                 |  \--*  LCL_VAR   ref    V02 loc1         u:2
N003 (  1,  1) [000425] ------------                 \--*  LCL_VAR   int    V03 loc2         u:2

------------ BB02 [01D..02E) -> BB07 (cond), preds={BB01,BB14} succs={BB03,BB07}

***** BB02
STMT00072 (IL   ???...  ???)
N005 (  0,  0) [000429] -A------R---              *  ASG       int   
N004 (  0,  0) [000427] D------N----              +--*  LCL_VAR   int    V03 loc2         d:3
N003 (  0,  0) [000428] ------------              \--*  PHI       int   
N001 (  0,  0) [000437] ------------ pred BB14       +--*  PHI_ARG   int    V03 loc2         u:4
N002 (  0,  0) [000436] ------------ pred BB01       \--*  PHI_ARG   int    V03 loc2         u:2

***** BB02
STMT00008 (IL 0x01D...0x020)
N016 ( 14, 18) [000032] -A-XG---R---              *  ASG       ref   
N015 (  1,  1) [000031] D------N----              +--*  LCL_VAR   ref    V04 loc3         d:2
N014 ( 14, 18) [000334] ---XG-------              \--*  COMMA     ref   
N004 (  8, 11) [000327] ---X--------                 +--*  ARR_BOUNDS_CHECK_Rng void  
N001 (  1,  1) [000029] ------------                 |  +--*  LCL_VAR   int    V03 loc2         u:3
N003 (  3,  3) [000326] ---X--------                 |  \--*  ARR_LENGTH int   
N002 (  1,  1) [000028] ------------                 |     \--*  LCL_VAR   ref    V02 loc1         u:2
N013 (  6,  7) [000030] a---G-------                 \--*  IND       ref   
N012 (  5,  6) [000333] -------N----                    \--*  ADD       byref 
N005 (  1,  1) [000324] ------------                       +--*  LCL_VAR   ref    V02 loc1         u:2
N011 (  4,  5) [000332] -------N----                       \--*  ADD       long  
N009 (  3,  4) [000330] -------N----                          +--*  LSH       long  
N007 (  2,  3) [000328] ------------                          |  +--*  CAST      long <- int
N006 (  1,  1) [000325] i-----------                          |  |  \--*  LCL_VAR   int    V03 loc2         u:3
N008 (  1,  1) [000329] -------N----                          |  \--*  CNS_INT   long   3
N010 (  1,  1) [000331] ------------                          \--*  CNS_INT   long   16 Fseq[#FirstElem]

***** BB02
STMT00042 (IL 0x021...  ???)
N002 (  2,  2) [000197] ---X--------              *  NULLCHECK byte  
N001 (  1,  1) [000196] ------------              \--*  LCL_VAR   ref    V04 loc3         u:2

***** BB02
STMT00010 (IL   ???...  ???)
N011 ( 24, 27) [000039] --CXG-------              *  JTRUE     void  
N010 ( 22, 25) [000038] J-CXG--N----              \--*  EQ        int   
N008 ( 20, 23) [000195] --CXG-------                 +--*  CALL      int    System.String.EndsWith
N005 (  4, 12) [000336] #---G------- arg1 in rdx     |  +--*  IND       ref   
N004 (  2, 10) [000335] H-----------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E ".csproj"
N006 (  1,  1) [000033] ------------ this in rcx     |  +--*  LCL_VAR   ref    V04 loc3         u:2
N007 (  1,  1) [000194] ------------ arg2 in r8      |  \--*  CNS_INT   int    0
N009 (  1,  1) [000037] ------------                 \--*  CNS_INT   int    0

------------ BB03 [02E..037) -> BB05 (cond), preds={BB02} succs={BB04,BB05}

***** BB03
STMT00043 (IL 0x02E...  ???)
N011 ( 11, 11) [000204] -A-XG---R---              *  ASG       int   
N010 (  4,  4) [000203] D--XG--N----              +--*  IND       int   
N009 (  2,  2) [000341] -------N----              |  \--*  ADD       byref 
N007 (  1,  1) [000177] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2
N008 (  1,  1) [000340] ------------              |     \--*  CNS_INT   long   20 field offset Fseq[_version]
N006 (  6,  6) [000202] ---XG-------              \--*  ADD       int   
N004 (  4,  4) [000200] ---XG-------                 +--*  IND       int   
N003 (  2,  2) [000343] -------N----                 |  \--*  ADD       byref 
N001 (  1,  1) [000199] ------------                 |     +--*  LCL_VAR   ref    V01 loc0         u:2
N002 (  1,  1) [000342] ------------                 |     \--*  CNS_INT   long   20 field offset Fseq[_version]
N005 (  1,  1) [000201] ------------                 \--*  CNS_INT   int    1

***** BB03
STMT00044 (IL 0x02E...  ???)
N006 (  4,  4) [000208] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000207] D------N----              +--*  LCL_VAR   ref    V18 tmp12        d:2
N004 (  4,  4) [000206] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000345] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000205] ------------                    +--*  LCL_VAR   ref    V01 loc0         u:2
N002 (  1,  1) [000344] ------------                    \--*  CNS_INT   long   8 field offset Fseq[_items]

***** BB03
STMT00045 (IL 0x02E...  ???)
N006 (  4,  4) [000212] -A-XG---R---              *  ASG       int   
N005 (  1,  1) [000211] D------N----              +--*  LCL_VAR   int    V19 tmp13        d:2
N004 (  4,  4) [000210] ---XG-------              \--*  IND       int   
N003 (  2,  2) [000347] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000209] ------------                    +--*  LCL_VAR   ref    V01 loc0         u:2
N002 (  1,  1) [000346] ------------                    \--*  CNS_INT   long   16 field offset Fseq[_size]

***** BB03
STMT00046 (IL 0x02E...  ???)
N005 (  7,  7) [000217] ---X--------              *  JTRUE     void  
N004 (  5,  5) [000216] N--X---N-U--              \--*  LE        int   
N002 (  3,  3) [000215] ---X--------                 +--*  ARR_LENGTH int   
N001 (  1,  1) [000214] ------------                 |  \--*  LCL_VAR   ref    V18 tmp12        u:2
N003 (  1,  1) [000213] ------------                 \--*  LCL_VAR   int    V19 tmp13        u:2

------------ BB04 [02E..02F) -> BB06 (always), preds={BB03} succs={BB06}

***** BB04
STMT00048 (IL 0x02E...  ???)
N008 (  8,  8) [000225] -A-XG---R---              *  ASG       int   
N007 (  4,  4) [000224] D--XG--N----              +--*  IND       int   
N006 (  2,  2) [000349] -------N----              |  \--*  ADD       byref 
N004 (  1,  1) [000220] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2
N005 (  1,  1) [000348] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size]
N003 (  3,  3) [000223] ------------              \--*  ADD       int   
N001 (  1,  1) [000221] ------------                 +--*  LCL_VAR   int    V19 tmp13        u:2
N002 (  1,  1) [000222] ------------                 \--*  CNS_INT   int    1

***** BB04
STMT00049 (IL 0x02E...  ???)
N007 ( 17, 11) [000229] --CXG-------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST
N004 (  1,  1) [000226] ------------ arg0 in rcx  +--*  LCL_VAR   ref    V18 tmp12        u:2 (last use)
N005 (  1,  1) [000227] ------------ arg1 in rdx  +--*  LCL_VAR   int    V19 tmp13        u:2 (last use)
N006 (  1,  1) [000228] ------------ arg2 in r8   \--*  LCL_VAR   ref    V04 loc3         u:2 (last use)

------------ BB05 [02E..02F), preds={BB03} succs={BB06}

***** BB05
STMT00047 (IL 0x02E...  ???)
N005 ( 16, 10) [000219] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize
N003 (  1,  1) [000218] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         u:2
N004 (  1,  1) [000178] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V04 loc3         u:2 (last use)

------------ BB06 [???..???) -> BB14 (always), preds={BB04,BB05} succs={BB14}

------------ BB07 [037..04B) -> BB10 (cond), preds={BB02} succs={BB08,BB10}

***** BB07
STMT00053 (IL 0x037...  ???)
N005 ( 15,  7) [000247] -ACXG---R---              *  ASG       ref   
N004 (  1,  1) [000246] D------N----              +--*  LCL_VAR   ref    V20 tmp14        d:2
N003 ( 15,  7) [000236] --CXG-------              \--*  CALL      ref    System.IO.EnumerationOptions.FromSearchOption
N002 (  1,  1) [000235] ------------ arg0 in rcx     \--*  CNS_INT   int    1

***** BB07
STMT00013 (IL   ???...  ???)
N012 ( 21, 24) [000054] -ACXG---R---              *  ASG       ref   
N011 (  1,  1) [000053] D------N----              +--*  LCL_VAR   ref    V09 tmp3         d:2
N010 ( 21, 24) [000245] --CXG-------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths
N006 (  4, 12) [000357] #---G------- arg1 in rdx     +--*  IND       ref   
N005 (  2, 10) [000356] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*"
N007 (  1,  1) [000040] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         u:2
N008 (  1,  1) [000244] ------------ arg3 in r9      +--*  LCL_VAR   ref    V20 tmp14        u:2 (last use)
N009 (  1,  1) [000243] ------------ arg2 in r8      \--*  CNS_INT   int    2

***** BB07
STMT00012 (IL   ???...  ???)
N010 ( 21, 30) [000052] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000051] D------N----              +--*  LCL_VAR   ref    V08 tmp2         d:2
N008 ( 21, 30) [000050] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 18) [000049] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000047] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
N004 (  1,  1) [000048] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35
N007 (  4, 12) [000045] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000364] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0]

***** BB07
STMT00015 (IL   ???...0x049)
N003 (  1,  3) [000062] -A------R---              *  ASG       ref   
N002 (  1,  1) [000061] D------N----              +--*  LCL_VAR   ref    V10 tmp4         d:2
N001 (  1,  1) [000055] ------------              \--*  LCL_VAR   ref    V09 tmp3         u:2 (last use)

***** BB07
STMT00016 (IL   ???...  ???)
N003 (  1,  3) [000065] -A------R---              *  ASG       ref   
N002 (  1,  1) [000064] D------N----              +--*  LCL_VAR   ref    V11 tmp5         d:2
N001 (  1,  1) [000056] ------------              \--*  LCL_VAR   ref    V08 tmp2         u:2

***** BB07
STMT00014 (IL   ???...  ???)
N004 (  5,  5) [000060] ------------              *  JTRUE     void  
N003 (  3,  3) [000059] J------N----              \--*  NE        int   
N001 (  1,  1) [000057] ------------                 +--*  LCL_VAR   ref    V08 tmp2         u:2 (last use)
N002 (  1,  1) [000058] ------------                 \--*  CNS_INT   ref    null

------------ BB08 [000..062) -> BB16 (cond), preds={BB07} succs={BB09,BB16}

***** BB08
STMT00033 (IL   ???...0x05D)
N005 ( 16, 16) [000160] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000159] D------N----              +--*  LCL_VAR   ref    V17 tmp11        d:2
N003 ( 16, 16) [000158] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000157] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB08
STMT00058 (IL   ???...  ???)
N010 ( 21, 30) [000262] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000261] D------N----              +--*  LCL_VAR   ref    V21 tmp15        d:2
N008 ( 21, 30) [000155] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 18) [000154] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000152] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
N004 (  1,  1) [000153] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35
N007 (  4, 12) [000150] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000368] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9]

***** BB08
STMT00054 (IL   ???...  ???)
N004 (  5,  5) [000252] ------------              *  JTRUE     void  
N003 (  3,  3) [000251] J------N----              \--*  EQ        int   
N001 (  1,  1) [000249] ------------                 +--*  LCL_VAR   ref    V21 tmp15        u:2
N002 (  1,  1) [000250] ------------                 \--*  CNS_INT   ref    null

------------ BB09 [000..000), preds={BB08} succs={BB10}

***** BB09
STMT00055 (IL   ???...  ???)
N006 (  6,  6) [000255] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000254] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000370] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000161] ------------              |     +--*  LCL_VAR   ref    V17 tmp11        u:2
N002 (  1,  1) [000369] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
N005 (  1,  1) [000253] ------------              \--*  LCL_VAR   ref    V21 tmp15        u:2 (last use)

***** BB09
STMT00056 (IL   ???...  ???)
N006 (  7, 15) [000259] -A-XG-------              *  ASG       long  
N004 (  4,  4) [000258] D--XG--N----              +--*  IND       long  
N003 (  2,  2) [000372] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000256] ------------              |     +--*  LCL_VAR   ref    V17 tmp11        u:2
N002 (  1,  1) [000371] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
N005 (  2, 10) [000156] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

***** BB09
STMT00035 (IL 0x05C...  ???)
N010 ( 23, 32) [000171] -ACXG-------              *  COMMA     void  
N005 ( 17, 18) [000170] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000168] ------------ arg0 in rcx  |  +--*  CNS_INT   long   0x7ffc7e4c17e0
N004 (  1,  1) [000169] ------------ arg1 in rdx  |  \--*  CNS_INT   int    35
N009 (  6, 14) [000166] -A--G-------              \--*  ASG       ref   
N007 (  4, 12) [000165] n---G--N----                 +--*  IND       ref   
N006 (  2, 10) [000375] I-----------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0]
N008 (  1,  1) [000164] ------------                 \--*  LCL_VAR   ref    V17 tmp11        u:2

***** BB09
STMT00036 (IL   ???...0x05D)
N003 (  1,  3) [000175] -A------R---              *  ASG       ref   
N002 (  1,  1) [000174] D------N----              +--*  LCL_VAR   ref    V11 tmp5         d:4
N001 (  1,  1) [000163] ------------              \--*  LCL_VAR   ref    V17 tmp11        u:2 (last use)

------------ BB10 [062..085) -> BB13 (cond), preds={BB07,BB09} succs={BB11,BB13}

***** BB10
STMT00074 (IL   ???...  ???)
N005 (  0,  0) [000435] -A------R---              *  ASG       ref   
N004 (  0,  0) [000433] D------N----              +--*  LCL_VAR   ref    V11 tmp5         d:3
N003 (  0,  0) [000434] ------------              \--*  PHI       ref   
N001 (  0,  0) [000441] ------------ pred BB09       +--*  PHI_ARG   ref    V11 tmp5         u:4
N002 (  0,  0) [000438] ------------ pred BB07       \--*  PHI_ARG   ref    V11 tmp5         u:2

***** BB10
STMT00018 (IL   ???...  ???)
N009 ( 18, 20) [000075] -ACXG---R---              *  ASG       ref   
N008 (  1,  1) [000074] D------N----              +--*  LCL_VAR   ref    V05 loc4         d:2
N007 ( 18, 20) [000071] --CXG-------              \--*  CALL      ref    System.Linq.Enumerable.Where
N004 (  1,  1) [000070] ------------ arg2 in r8      +--*  LCL_VAR   ref    V11 tmp5         u:3 (last use)
N005 (  1,  1) [000069] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V10 tmp4         u:2 (last use)
N006 (  2, 10) [000072] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB10
STMT00061 (IL 0x069...  ???)
N010 ( 21, 30) [000283] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000282] D------N----              +--*  LCL_VAR   ref    V23 tmp17        d:2
N008 ( 21, 30) [000276] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 18) [000275] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000273] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e783cd8
N004 (  1,  1) [000274] ------------ arg1 in rdx     |  \--*  CNS_INT   int    40
N007 (  4, 12) [000271] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000381] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<Compatible>k__BackingField]

***** BB10
STMT00063 (IL   ???...  ???)
N012 ( 21, 24) [000290] -ACXG---R---              *  ASG       ref   
N011 (  1,  1) [000289] D------N----              +--*  LCL_VAR   ref    V24 tmp18        d:2
N010 ( 21, 24) [000281] --CXG-------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths
N006 (  4, 12) [000383] #---G------- arg1 in rdx     +--*  IND       ref   
N005 (  2, 10) [000382] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*.csproj"
N007 (  1,  1) [000077] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         u:2 (last use)
N008 (  1,  1) [000280] ------------ arg3 in r9      +--*  LCL_VAR   ref    V23 tmp17        u:2 (last use)
N009 (  1,  1) [000279] ------------ arg2 in r8      \--*  CNS_INT   int    1

***** BB10
STMT00062 (IL   ???...  ???)
N010 ( 20, 15) [000288] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
N007 (  4,  4) [000286] ---XG------- arg1 in rdx  +--*  IND       int   
N006 (  2,  2) [000389] -------N----              |  \--*  ADD       byref 
N004 (  1,  1) [000285] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2
N005 (  1,  1) [000388] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size]
N008 (  1,  1) [000076] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         u:2
N009 (  1,  1) [000287] ------------ arg2 in r8   \--*  LCL_VAR   ref    V24 tmp18        u:2 (last use)

***** BB10
STMT00021 (IL 0x07A...  ???)
N010 ( 21, 30) [000091] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000090] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:2
N008 ( 21, 30) [000089] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 18) [000088] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000086] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
N004 (  1,  1) [000087] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35
N007 (  4, 12) [000084] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000395] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1]

***** BB10
STMT00023 (IL   ???...0x083)
N003 (  1,  3) [000098] -A------R---              *  ASG       ref   
N002 (  1,  1) [000097] D------N----              +--*  LCL_VAR   ref    V13 tmp7         d:2
N001 (  1,  1) [000082] ------------              \--*  LCL_VAR   ref    V01 loc0         u:2

***** BB10
STMT00024 (IL   ???...  ???)
N003 (  1,  3) [000101] -A------R---              *  ASG       ref   
N002 (  1,  1) [000100] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:2
N001 (  1,  1) [000083] ------------              \--*  LCL_VAR   ref    V05 loc4         u:2 (last use)

***** BB10
STMT00025 (IL   ???...  ???)
N003 (  1,  3) [000104] -A------R---              *  ASG       ref   
N002 (  1,  1) [000103] D------N----              +--*  LCL_VAR   ref    V15 tmp9         d:2
N001 (  1,  1) [000092] ------------              \--*  LCL_VAR   ref    V12 tmp6         u:2

***** BB10
STMT00022 (IL   ???...  ???)
N004 (  5,  5) [000096] ------------              *  JTRUE     void  
N003 (  3,  3) [000095] J------N----              \--*  NE        int   
N001 (  1,  1) [000093] ------------                 +--*  LCL_VAR   ref    V12 tmp6         u:2 (last use)
N002 (  1,  1) [000094] ------------                 \--*  CNS_INT   ref    null

------------ BB11 [000..09C) -> BB16 (cond), preds={BB10} succs={BB12,BB16}

***** BB11
STMT00029 (IL   ???...0x097)
N005 ( 16, 16) [000131] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000130] D------N----              +--*  LCL_VAR   ref    V16 tmp10        d:2
N003 ( 16, 16) [000129] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000128] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB11
STMT00068 (IL   ???...  ???)
N010 ( 21, 30) [000305] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000304] D------N----              +--*  LCL_VAR   ref    V25 tmp19        d:2
N008 ( 21, 30) [000126] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 18) [000125] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000123] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
N004 (  1,  1) [000124] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35
N007 (  4, 12) [000121] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000399] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9]

***** BB11
STMT00064 (IL   ???...  ???)
N004 (  5,  5) [000295] ------------              *  JTRUE     void  
N003 (  3,  3) [000294] J------N----              \--*  EQ        int   
N001 (  1,  1) [000292] ------------                 +--*  LCL_VAR   ref    V25 tmp19        u:2
N002 (  1,  1) [000293] ------------                 \--*  CNS_INT   ref    null

------------ BB12 [000..000), preds={BB11} succs={BB13}

***** BB12
STMT00065 (IL   ???...  ???)
N006 (  6,  6) [000298] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000297] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000401] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000132] ------------              |     +--*  LCL_VAR   ref    V16 tmp10        u:2
N002 (  1,  1) [000400] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
N005 (  1,  1) [000296] ------------              \--*  LCL_VAR   ref    V25 tmp19        u:2 (last use)

***** BB12
STMT00066 (IL   ???...  ???)
N006 (  7, 15) [000302] -A-XG-------              *  ASG       long  
N004 (  4,  4) [000301] D--XG--N----              +--*  IND       long  
N003 (  2,  2) [000403] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000299] ------------              |     +--*  LCL_VAR   ref    V16 tmp10        u:2
N002 (  1,  1) [000402] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
N005 (  2, 10) [000127] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

***** BB12
STMT00031 (IL 0x096...  ???)
N010 ( 23, 32) [000142] -ACXG-------              *  COMMA     void  
N005 ( 17, 18) [000141] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000139] ------------ arg0 in rcx  |  +--*  CNS_INT   long   0x7ffc7e4c17e0
N004 (  1,  1) [000140] ------------ arg1 in rdx  |  \--*  CNS_INT   int    35
N009 (  6, 14) [000137] -A--G-------              \--*  ASG       ref   
N007 (  4, 12) [000136] n---G--N----                 +--*  IND       ref   
N006 (  2, 10) [000406] I-----------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1]
N008 (  1,  1) [000135] ------------                 \--*  LCL_VAR   ref    V16 tmp10        u:2

***** BB12
STMT00032 (IL   ???...0x097)
N003 (  1,  3) [000148] -A------R---              *  ASG       ref   
N002 (  1,  1) [000147] D------N----              +--*  LCL_VAR   ref    V15 tmp9         d:4
N001 (  1,  1) [000134] ------------              \--*  LCL_VAR   ref    V16 tmp10        u:2 (last use)

------------ BB13 [09C..0A6), preds={BB10,BB12} succs={BB14}

***** BB13
STMT00073 (IL   ???...  ???)
N005 (  0,  0) [000432] -A------R---              *  ASG       ref   
N004 (  0,  0) [000430] D------N----              +--*  LCL_VAR   ref    V15 tmp9         d:3
N003 (  0,  0) [000431] ------------              \--*  PHI       ref   
N001 (  0,  0) [000440] ------------ pred BB12       +--*  PHI_ARG   ref    V15 tmp9         u:4
N002 (  0,  0) [000439] ------------ pred BB10       \--*  PHI_ARG   ref    V15 tmp9         u:2

***** BB13
STMT00070 (IL   ???...  ???)
N009 ( 18, 20) [000313] -ACXG---R---              *  ASG       ref   
N008 (  1,  1) [000312] D------N----              +--*  LCL_VAR   ref    V27 tmp21        d:2
N007 ( 18, 20) [000112] --CXG-------              \--*  CALL      ref    System.Linq.Enumerable.SelectMany
N004 (  1,  1) [000111] ------------ arg2 in r8      +--*  LCL_VAR   ref    V15 tmp9         u:3 (last use)
N005 (  1,  1) [000110] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V14 tmp8         u:2 (last use)
N006 (  2, 10) [000113] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB13
STMT00069 (IL   ???...  ???)
N010 ( 20, 15) [000311] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
N007 (  4,  4) [000309] ---XG------- arg1 in rdx  +--*  IND       int   
N006 (  2,  2) [000411] -------N----              |  \--*  ADD       byref 
N004 (  1,  1) [000308] ------------              |     +--*  LCL_VAR   ref    V13 tmp7         u:2
N005 (  1,  1) [000410] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size]
N008 (  1,  1) [000109] ------------ this in rcx  +--*  LCL_VAR   ref    V13 tmp7         u:2 (last use)
N009 (  1,  1) [000310] ------------ arg2 in r8   \--*  LCL_VAR   ref    V27 tmp21        u:2 (last use)

------------ BB14 [0A6..0B3) -> BB02 (cond), preds={BB06,BB13} succs={BB15,BB02}

***** BB14
STMT00028 (IL 0x0A6...0x0A9)
N005 (  3,  3) [000120] -A------R---              *  ASG       int   
N004 (  1,  1) [000119] D------N----              +--*  LCL_VAR   int    V03 loc2         d:4
N003 (  3,  3) [000118] ------------              \--*  ADD       int   
N001 (  1,  1) [000116] ------------                 +--*  LCL_VAR   int    V03 loc2         u:3 (last use)
N002 (  1,  1) [000117] ------------                 \--*  CNS_INT   int    1

***** BB14
STMT00007 (IL 0x0AA...0x0AE)
N005 (  7,  7) [000027] ---X--------              *  JTRUE     void  
N004 (  5,  5) [000026] J--X---N----              \--*  GT        int   
N002 (  3,  3) [000025] ---X--------                 +--*  ARR_LENGTH int   
N001 (  1,  1) [000024] ------------                 |  \--*  LCL_VAR   ref    V02 loc1         u:2
N003 (  1,  1) [000023] ------------                 \--*  LCL_VAR   int    V03 loc2         u:4

------------ BB15 [0B3..0C7) (return), preds={BB01,BB14} succs={}

***** BB15
STMT00038 (IL 0x0B3...0x0C4)
N005 ( 17, 18) [000181] --CXG-------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle
N003 (  1,  1) [000180] ------------ arg1 in rdx  +--*  LCL_VAR   ref    V01 loc0         u:2
N004 (  2, 10) [000182] H----------- arg0 in rcx  \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB15
STMT00040 (IL   ???...  ???)
N008 ( 21, 31) [000185] --CXG-------              *  CALL      ref    SolutionAnalyzer.Logger.Log
N005 (  4, 12) [000418] #---G------- arg1 in rdx  +--*  IND       ref   
N004 (  2, 10) [000417] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Enumerated and shuffled the project paths."
N006 (  2, 10) [000186] H----------- arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method
N007 (  1,  1) [000184] ------------ arg2 in r8   \--*  CNS_INT   int    2

***** BB15
STMT00041 (IL 0x0C5...0x0C6)
N002 (  2,  2) [000191] ------------              *  RETURN    ref   
N001 (  1,  1) [000190] ------------              \--*  LCL_VAR   ref    V01 loc0         u:2 (last use)

------------ BB16 [000..000) (throw), preds={BB08,BB11} succs={}

***** BB16
STMT00067 (IL   ???...  ???)
N001 ( 14,  5) [000303] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist

*************** Starting PHASE Early Value Propagation
*************** In optEarlyProp()

After optEarlyProp:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB15 ( cond )                     i label target hascall gcsafe idxlen newobj 
BB02 [0001]  2       BB01,BB14             4     0 [01D..02E)-> BB07 ( cond )                     i Loop label target hascall gcsafe idxlen nullcheck bwd bwd-target 
BB03 [0002]  1       BB02                  2     0 [02E..037)-> BB05 ( cond )                     i gcsafe idxlen bwd 
BB04 [0013]  1       BB03                  2     0 [02E..02F)-> BB06 (always)                     i hascall gcsafe bwd 
BB05 [0014]  1       BB03                  2     0 [02E..02F)                                     i label target hascall gcsafe bwd 
BB06 [0015]  2       BB04,BB05             2     0 [???..???)-> BB14 (always)                     internal label target gcsafe bwd 
BB07 [0003]  1       BB02                  2     0 [037..04B)-> BB10 ( cond )                     i label target hascall gcsafe bwd 
BB08 [0004]  1       BB07                  2     0 [000..062)-> BB16 ( cond )                     i hascall gcsafe newobj bwd 
BB09 [0020]  1       BB08                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd 
BB10 [0005]  2       BB07,BB09             2     0 [062..085)-> BB13 ( cond )                     i label target hascall gcsafe bwd 
BB11 [0006]  1       BB10                  2     0 [000..09C)-> BB16 ( cond )                     i hascall gcsafe newobj bwd 
BB12 [0028]  1       BB11                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd 
BB13 [0007]  2       BB10,BB12             2     0 [09C..0A6)                                     i label target hascall gcsafe bwd 
BB14 [0008]  2       BB06,BB13             4     0 [0A6..0B3)-> BB02 ( cond )                     i label target gcsafe idxlen bwd 
BB15 [0010]  2       BB01,BB14             1       [0B3..0C7)        (return)                     i label target hascall gcsafe 
BB16 [0027]  2       BB08,BB11             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..01D) -> BB15 (cond), preds={} succs={BB02,BB15}

***** BB01
STMT00001 (IL   ???...  ???)
N008 ( 21, 31) [000002] --CXG-------              *  CALL      ref    SolutionAnalyzer.Logger.Log
N005 (  4, 12) [000317] #---G------- arg1 in rdx  +--*  IND       ref   
N004 (  2, 10) [000316] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Started enumerating project paths."
N006 (  2, 10) [000003] H----------- arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method
N007 (  1,  1) [000001] ------------ arg2 in r8   \--*  CNS_INT   int    2

***** BB01
STMT00002 (IL 0x00C...0x013)
N005 ( 16, 16) [000011] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000010] D------N----              +--*  LCL_VAR   ref    V07 tmp1         d:2
N003 ( 16, 16) [000009] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000008] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB01
STMT00003 (IL   ???...  ???)
N005 ( 16, 10) [000013] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor
N003 (  1,  1) [000012] ------------ this in rcx  +--*  LCL_VAR   ref    V07 tmp1         u:2
N004 (  1,  1) [000007] ------------ arg1 in rdx  \--*  CNS_INT   int    100

***** BB01
STMT00004 (IL 0x013...  ???)
N003 (  1,  3) [000016] -A------R---              *  ASG       ref   
N002 (  1,  1) [000015] D------N----              +--*  LCL_VAR   ref    V01 loc0         d:2
N001 (  1,  1) [000014] ------------              \--*  LCL_VAR   ref    V07 tmp1         u:2 (last use)

***** BB01
STMT00005 (IL 0x014...0x015)
N003 (  1,  3) [000019] -A------R---              *  ASG       ref   
N002 (  1,  1) [000018] D------N----              +--*  LCL_VAR   ref    V02 loc1         d:2
N001 (  1,  1) [000017] ------------              \--*  LCL_VAR   ref    V00 arg0         u:1 (last use)

***** BB01
STMT00006 (IL 0x016...0x017)
N003 (  1,  3) [000022] -A------R---              *  ASG       int   
N002 (  1,  1) [000021] D------N----              +--*  LCL_VAR   int    V03 loc2         d:2
N001 (  1,  1) [000020] ------------              \--*  CNS_INT   int    0

***** BB01
STMT00071 (IL 0x0AA...  ???)
N005 (  7,  7) [000426] ---X--------              *  JTRUE     void  
N004 (  5,  5) [000422] J--X---N----              \--*  LE        int   
N002 (  3,  3) [000423] ---X--------                 +--*  ARR_LENGTH int   
N001 (  1,  1) [000424] ------------                 |  \--*  LCL_VAR   ref    V02 loc1         u:2
N003 (  1,  1) [000425] ------------                 \--*  LCL_VAR   int    V03 loc2         u:2

------------ BB02 [01D..02E) -> BB07 (cond), preds={BB01,BB14} succs={BB03,BB07}

***** BB02
STMT00072 (IL   ???...  ???)
N005 (  0,  0) [000429] -A------R---              *  ASG       int   
N004 (  0,  0) [000427] D------N----              +--*  LCL_VAR   int    V03 loc2         d:3
N003 (  0,  0) [000428] ------------              \--*  PHI       int   
N001 (  0,  0) [000437] ------------ pred BB14       +--*  PHI_ARG   int    V03 loc2         u:4
N002 (  0,  0) [000436] ------------ pred BB01       \--*  PHI_ARG   int    V03 loc2         u:2

***** BB02
STMT00008 (IL 0x01D...0x020)
N016 ( 14, 18) [000032] -A-XG---R---              *  ASG       ref   
N015 (  1,  1) [000031] D------N----              +--*  LCL_VAR   ref    V04 loc3         d:2
N014 ( 14, 18) [000334] ---XG-------              \--*  COMMA     ref   
N004 (  8, 11) [000327] ---X--------                 +--*  ARR_BOUNDS_CHECK_Rng void  
N001 (  1,  1) [000029] ------------                 |  +--*  LCL_VAR   int    V03 loc2         u:3
N003 (  3,  3) [000326] ---X--------                 |  \--*  ARR_LENGTH int   
N002 (  1,  1) [000028] ------------                 |     \--*  LCL_VAR   ref    V02 loc1         u:2
N013 (  6,  7) [000030] a---G-------                 \--*  IND       ref   
N012 (  5,  6) [000333] -------N----                    \--*  ADD       byref 
N005 (  1,  1) [000324] ------------                       +--*  LCL_VAR   ref    V02 loc1         u:2
N011 (  4,  5) [000332] -------N----                       \--*  ADD       long  
N009 (  3,  4) [000330] -------N----                          +--*  LSH       long  
N007 (  2,  3) [000328] ------------                          |  +--*  CAST      long <- int
N006 (  1,  1) [000325] i-----------                          |  |  \--*  LCL_VAR   int    V03 loc2         u:3
N008 (  1,  1) [000329] -------N----                          |  \--*  CNS_INT   long   3
N010 (  1,  1) [000331] ------------                          \--*  CNS_INT   long   16 Fseq[#FirstElem]

***** BB02
STMT00042 (IL 0x021...  ???)
N002 (  2,  2) [000197] ---X--------              *  NULLCHECK byte  
N001 (  1,  1) [000196] ------------              \--*  LCL_VAR   ref    V04 loc3         u:2

***** BB02
STMT00010 (IL   ???...  ???)
N011 ( 24, 27) [000039] --CXG-------              *  JTRUE     void  
N010 ( 22, 25) [000038] J-CXG--N----              \--*  EQ        int   
N008 ( 20, 23) [000195] --CXG-------                 +--*  CALL      int    System.String.EndsWith
N005 (  4, 12) [000336] #---G------- arg1 in rdx     |  +--*  IND       ref   
N004 (  2, 10) [000335] H-----------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E ".csproj"
N006 (  1,  1) [000033] ------------ this in rcx     |  +--*  LCL_VAR   ref    V04 loc3         u:2
N007 (  1,  1) [000194] ------------ arg2 in r8      |  \--*  CNS_INT   int    0
N009 (  1,  1) [000037] ------------                 \--*  CNS_INT   int    0

------------ BB03 [02E..037) -> BB05 (cond), preds={BB02} succs={BB04,BB05}

***** BB03
STMT00043 (IL 0x02E...  ???)
N011 ( 11, 11) [000204] -A-XG---R---              *  ASG       int   
N010 (  4,  4) [000203] D--XG--N----              +--*  IND       int   
N009 (  2,  2) [000341] -------N----              |  \--*  ADD       byref 
N007 (  1,  1) [000177] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2
N008 (  1,  1) [000340] ------------              |     \--*  CNS_INT   long   20 field offset Fseq[_version]
N006 (  6,  6) [000202] ---XG-------              \--*  ADD       int   
N004 (  4,  4) [000200] ---XG-------                 +--*  IND       int   
N003 (  2,  2) [000343] -------N----                 |  \--*  ADD       byref 
N001 (  1,  1) [000199] ------------                 |     +--*  LCL_VAR   ref    V01 loc0         u:2
N002 (  1,  1) [000342] ------------                 |     \--*  CNS_INT   long   20 field offset Fseq[_version]
N005 (  1,  1) [000201] ------------                 \--*  CNS_INT   int    1

***** BB03
STMT00044 (IL 0x02E...  ???)
N006 (  4,  4) [000208] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000207] D------N----              +--*  LCL_VAR   ref    V18 tmp12        d:2
N004 (  4,  4) [000206] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000345] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000205] ------------                    +--*  LCL_VAR   ref    V01 loc0         u:2
N002 (  1,  1) [000344] ------------                    \--*  CNS_INT   long   8 field offset Fseq[_items]

***** BB03
STMT00045 (IL 0x02E...  ???)
N006 (  4,  4) [000212] -A-XG---R---              *  ASG       int   
N005 (  1,  1) [000211] D------N----              +--*  LCL_VAR   int    V19 tmp13        d:2
N004 (  4,  4) [000210] ---XG-------              \--*  IND       int   
N003 (  2,  2) [000347] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000209] ------------                    +--*  LCL_VAR   ref    V01 loc0         u:2
N002 (  1,  1) [000346] ------------                    \--*  CNS_INT   long   16 field offset Fseq[_size]

***** BB03
STMT00046 (IL 0x02E...  ???)
N005 (  7,  7) [000217] ---X--------              *  JTRUE     void  
N004 (  5,  5) [000216] N--X---N-U--              \--*  LE        int   
N002 (  3,  3) [000215] ---X--------                 +--*  ARR_LENGTH int   
N001 (  1,  1) [000214] ------------                 |  \--*  LCL_VAR   ref    V18 tmp12        u:2
N003 (  1,  1) [000213] ------------                 \--*  LCL_VAR   int    V19 tmp13        u:2

------------ BB04 [02E..02F) -> BB06 (always), preds={BB03} succs={BB06}

***** BB04
STMT00048 (IL 0x02E...  ???)
N008 (  8,  8) [000225] -A-XG---R---              *  ASG       int   
N007 (  4,  4) [000224] D--XG--N----              +--*  IND       int   
N006 (  2,  2) [000349] -------N----              |  \--*  ADD       byref 
N004 (  1,  1) [000220] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2
N005 (  1,  1) [000348] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size]
N003 (  3,  3) [000223] ------------              \--*  ADD       int   
N001 (  1,  1) [000221] ------------                 +--*  LCL_VAR   int    V19 tmp13        u:2
N002 (  1,  1) [000222] ------------                 \--*  CNS_INT   int    1

***** BB04
STMT00049 (IL 0x02E...  ???)
N007 ( 17, 11) [000229] --CXG-------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST
N004 (  1,  1) [000226] ------------ arg0 in rcx  +--*  LCL_VAR   ref    V18 tmp12        u:2 (last use)
N005 (  1,  1) [000227] ------------ arg1 in rdx  +--*  LCL_VAR   int    V19 tmp13        u:2 (last use)
N006 (  1,  1) [000228] ------------ arg2 in r8   \--*  LCL_VAR   ref    V04 loc3         u:2 (last use)

------------ BB05 [02E..02F), preds={BB03} succs={BB06}

***** BB05
STMT00047 (IL 0x02E...  ???)
N005 ( 16, 10) [000219] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize
N003 (  1,  1) [000218] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         u:2
N004 (  1,  1) [000178] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V04 loc3         u:2 (last use)

------------ BB06 [???..???) -> BB14 (always), preds={BB04,BB05} succs={BB14}

------------ BB07 [037..04B) -> BB10 (cond), preds={BB02} succs={BB08,BB10}

***** BB07
STMT00053 (IL 0x037...  ???)
N005 ( 15,  7) [000247] -ACXG---R---              *  ASG       ref   
N004 (  1,  1) [000246] D------N----              +--*  LCL_VAR   ref    V20 tmp14        d:2
N003 ( 15,  7) [000236] --CXG-------              \--*  CALL      ref    System.IO.EnumerationOptions.FromSearchOption
N002 (  1,  1) [000235] ------------ arg0 in rcx     \--*  CNS_INT   int    1

***** BB07
STMT00013 (IL   ???...  ???)
N012 ( 21, 24) [000054] -ACXG---R---              *  ASG       ref   
N011 (  1,  1) [000053] D------N----              +--*  LCL_VAR   ref    V09 tmp3         d:2
N010 ( 21, 24) [000245] --CXG-------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths
N006 (  4, 12) [000357] #---G------- arg1 in rdx     +--*  IND       ref   
N005 (  2, 10) [000356] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*"
N007 (  1,  1) [000040] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         u:2
N008 (  1,  1) [000244] ------------ arg3 in r9      +--*  LCL_VAR   ref    V20 tmp14        u:2 (last use)
N009 (  1,  1) [000243] ------------ arg2 in r8      \--*  CNS_INT   int    2

***** BB07
STMT00012 (IL   ???...  ???)
N010 ( 21, 30) [000052] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000051] D------N----              +--*  LCL_VAR   ref    V08 tmp2         d:2
N008 ( 21, 30) [000050] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 18) [000049] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000047] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
N004 (  1,  1) [000048] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35
N007 (  4, 12) [000045] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000364] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0]

***** BB07
STMT00015 (IL   ???...0x049)
N003 (  1,  3) [000062] -A------R---              *  ASG       ref   
N002 (  1,  1) [000061] D------N----              +--*  LCL_VAR   ref    V10 tmp4         d:2
N001 (  1,  1) [000055] ------------              \--*  LCL_VAR   ref    V09 tmp3         u:2 (last use)

***** BB07
STMT00016 (IL   ???...  ???)
N003 (  1,  3) [000065] -A------R---              *  ASG       ref   
N002 (  1,  1) [000064] D------N----              +--*  LCL_VAR   ref    V11 tmp5         d:2
N001 (  1,  1) [000056] ------------              \--*  LCL_VAR   ref    V08 tmp2         u:2

***** BB07
STMT00014 (IL   ???...  ???)
N004 (  5,  5) [000060] ------------              *  JTRUE     void  
N003 (  3,  3) [000059] J------N----              \--*  NE        int   
N001 (  1,  1) [000057] ------------                 +--*  LCL_VAR   ref    V08 tmp2         u:2 (last use)
N002 (  1,  1) [000058] ------------                 \--*  CNS_INT   ref    null

------------ BB08 [000..062) -> BB16 (cond), preds={BB07} succs={BB09,BB16}

***** BB08
STMT00033 (IL   ???...0x05D)
N005 ( 16, 16) [000160] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000159] D------N----              +--*  LCL_VAR   ref    V17 tmp11        d:2
N003 ( 16, 16) [000158] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000157] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB08
STMT00058 (IL   ???...  ???)
N010 ( 21, 30) [000262] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000261] D------N----              +--*  LCL_VAR   ref    V21 tmp15        d:2
N008 ( 21, 30) [000155] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 18) [000154] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000152] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
N004 (  1,  1) [000153] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35
N007 (  4, 12) [000150] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000368] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9]

***** BB08
STMT00054 (IL   ???...  ???)
N004 (  5,  5) [000252] ------------              *  JTRUE     void  
N003 (  3,  3) [000251] J------N----              \--*  EQ        int   
N001 (  1,  1) [000249] ------------                 +--*  LCL_VAR   ref    V21 tmp15        u:2
N002 (  1,  1) [000250] ------------                 \--*  CNS_INT   ref    null

------------ BB09 [000..000), preds={BB08} succs={BB10}

***** BB09
STMT00055 (IL   ???...  ???)
N006 (  6,  6) [000255] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000254] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000370] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000161] ------------              |     +--*  LCL_VAR   ref    V17 tmp11        u:2
N002 (  1,  1) [000369] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
N005 (  1,  1) [000253] ------------              \--*  LCL_VAR   ref    V21 tmp15        u:2 (last use)

***** BB09
STMT00056 (IL   ???...  ???)
N006 (  7, 15) [000259] -A-XG-------              *  ASG       long  
N004 (  4,  4) [000258] D--XG--N----              +--*  IND       long  
N003 (  2,  2) [000372] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000256] ------------              |     +--*  LCL_VAR   ref    V17 tmp11        u:2
N002 (  1,  1) [000371] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
N005 (  2, 10) [000156] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

***** BB09
STMT00035 (IL 0x05C...  ???)
N010 ( 23, 32) [000171] -ACXG-------              *  COMMA     void  
N005 ( 17, 18) [000170] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000168] ------------ arg0 in rcx  |  +--*  CNS_INT   long   0x7ffc7e4c17e0
N004 (  1,  1) [000169] ------------ arg1 in rdx  |  \--*  CNS_INT   int    35
N009 (  6, 14) [000166] -A--G-------              \--*  ASG       ref   
N007 (  4, 12) [000165] n---G--N----                 +--*  IND       ref   
N006 (  2, 10) [000375] I-----------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0]
N008 (  1,  1) [000164] ------------                 \--*  LCL_VAR   ref    V17 tmp11        u:2

***** BB09
STMT00036 (IL   ???...0x05D)
N003 (  1,  3) [000175] -A------R---              *  ASG       ref   
N002 (  1,  1) [000174] D------N----              +--*  LCL_VAR   ref    V11 tmp5         d:4
N001 (  1,  1) [000163] ------------              \--*  LCL_VAR   ref    V17 tmp11        u:2 (last use)

------------ BB10 [062..085) -> BB13 (cond), preds={BB07,BB09} succs={BB11,BB13}

***** BB10
STMT00074 (IL   ???...  ???)
N005 (  0,  0) [000435] -A------R---              *  ASG       ref   
N004 (  0,  0) [000433] D------N----              +--*  LCL_VAR   ref    V11 tmp5         d:3
N003 (  0,  0) [000434] ------------              \--*  PHI       ref   
N001 (  0,  0) [000441] ------------ pred BB09       +--*  PHI_ARG   ref    V11 tmp5         u:4
N002 (  0,  0) [000438] ------------ pred BB07       \--*  PHI_ARG   ref    V11 tmp5         u:2

***** BB10
STMT00018 (IL   ???...  ???)
N009 ( 18, 20) [000075] -ACXG---R---              *  ASG       ref   
N008 (  1,  1) [000074] D------N----              +--*  LCL_VAR   ref    V05 loc4         d:2
N007 ( 18, 20) [000071] --CXG-------              \--*  CALL      ref    System.Linq.Enumerable.Where
N004 (  1,  1) [000070] ------------ arg2 in r8      +--*  LCL_VAR   ref    V11 tmp5         u:3 (last use)
N005 (  1,  1) [000069] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V10 tmp4         u:2 (last use)
N006 (  2, 10) [000072] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB10
STMT00061 (IL 0x069...  ???)
N010 ( 21, 30) [000283] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000282] D------N----              +--*  LCL_VAR   ref    V23 tmp17        d:2
N008 ( 21, 30) [000276] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 18) [000275] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000273] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e783cd8
N004 (  1,  1) [000274] ------------ arg1 in rdx     |  \--*  CNS_INT   int    40
N007 (  4, 12) [000271] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000381] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<Compatible>k__BackingField]

***** BB10
STMT00063 (IL   ???...  ???)
N012 ( 21, 24) [000290] -ACXG---R---              *  ASG       ref   
N011 (  1,  1) [000289] D------N----              +--*  LCL_VAR   ref    V24 tmp18        d:2
N010 ( 21, 24) [000281] --CXG-------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths
N006 (  4, 12) [000383] #---G------- arg1 in rdx     +--*  IND       ref   
N005 (  2, 10) [000382] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*.csproj"
N007 (  1,  1) [000077] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         u:2 (last use)
N008 (  1,  1) [000280] ------------ arg3 in r9      +--*  LCL_VAR   ref    V23 tmp17        u:2 (last use)
N009 (  1,  1) [000279] ------------ arg2 in r8      \--*  CNS_INT   int    1

***** BB10
STMT00062 (IL   ???...  ???)
N010 ( 20, 15) [000288] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
N007 (  4,  4) [000286] ---XG------- arg1 in rdx  +--*  IND       int   
N006 (  2,  2) [000389] -------N----              |  \--*  ADD       byref 
N004 (  1,  1) [000285] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2
N005 (  1,  1) [000388] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size]
N008 (  1,  1) [000076] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         u:2
N009 (  1,  1) [000287] ------------ arg2 in r8   \--*  LCL_VAR   ref    V24 tmp18        u:2 (last use)

***** BB10
STMT00021 (IL 0x07A...  ???)
N010 ( 21, 30) [000091] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000090] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:2
N008 ( 21, 30) [000089] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 18) [000088] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000086] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
N004 (  1,  1) [000087] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35
N007 (  4, 12) [000084] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000395] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1]

***** BB10
STMT00023 (IL   ???...0x083)
N003 (  1,  3) [000098] -A------R---              *  ASG       ref   
N002 (  1,  1) [000097] D------N----              +--*  LCL_VAR   ref    V13 tmp7         d:2
N001 (  1,  1) [000082] ------------              \--*  LCL_VAR   ref    V01 loc0         u:2

***** BB10
STMT00024 (IL   ???...  ???)
N003 (  1,  3) [000101] -A------R---              *  ASG       ref   
N002 (  1,  1) [000100] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:2
N001 (  1,  1) [000083] ------------              \--*  LCL_VAR   ref    V05 loc4         u:2 (last use)

***** BB10
STMT00025 (IL   ???...  ???)
N003 (  1,  3) [000104] -A------R---              *  ASG       ref   
N002 (  1,  1) [000103] D------N----              +--*  LCL_VAR   ref    V15 tmp9         d:2
N001 (  1,  1) [000092] ------------              \--*  LCL_VAR   ref    V12 tmp6         u:2

***** BB10
STMT00022 (IL   ???...  ???)
N004 (  5,  5) [000096] ------------              *  JTRUE     void  
N003 (  3,  3) [000095] J------N----              \--*  NE        int   
N001 (  1,  1) [000093] ------------                 +--*  LCL_VAR   ref    V12 tmp6         u:2 (last use)
N002 (  1,  1) [000094] ------------                 \--*  CNS_INT   ref    null

------------ BB11 [000..09C) -> BB16 (cond), preds={BB10} succs={BB12,BB16}

***** BB11
STMT00029 (IL   ???...0x097)
N005 ( 16, 16) [000131] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000130] D------N----              +--*  LCL_VAR   ref    V16 tmp10        d:2
N003 ( 16, 16) [000129] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000128] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

***** BB11
STMT00068 (IL   ???...  ???)
N010 ( 21, 30) [000305] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000304] D------N----              +--*  LCL_VAR   ref    V25 tmp19        d:2
N008 ( 21, 30) [000126] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 18) [000125] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000123] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
N004 (  1,  1) [000124] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35
N007 (  4, 12) [000121] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000399] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9]

***** BB11
STMT00064 (IL   ???...  ???)
N004 (  5,  5) [000295] ------------              *  JTRUE     void  
N003 (  3,  3) [000294] J------N----              \--*  EQ        int   
N001 (  1,  1) [000292] ------------                 +--*  LCL_VAR   ref    V25 tmp19        u:2
N002 (  1,  1) [000293] ------------                 \--*  CNS_INT   ref    null

------------ BB12 [000..000), preds={BB11} succs={BB13}

***** BB12
STMT00065 (IL   ???...  ???)
N006 (  6,  6) [000298] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000297] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000401] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000132] ------------              |     +--*  LCL_VAR   ref    V16 tmp10        u:2
N002 (  1,  1) [000400] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
N005 (  1,  1) [000296] ------------              \--*  LCL_VAR   ref    V25 tmp19        u:2 (last use)

***** BB12
STMT00066 (IL   ???...  ???)
N006 (  7, 15) [000302] -A-XG-------              *  ASG       long  
N004 (  4,  4) [000301] D--XG--N----              +--*  IND       long  
N003 (  2,  2) [000403] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000299] ------------              |     +--*  LCL_VAR   ref    V16 tmp10        u:2
N002 (  1,  1) [000402] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
N005 (  2, 10) [000127] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

***** BB12
STMT00031 (IL 0x096...  ???)
N010 ( 23, 32) [000142] -ACXG-------              *  COMMA     void  
N005 ( 17, 18) [000141] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000139] ------------ arg0 in rcx  |  +--*  CNS_INT   long   0x7ffc7e4c17e0
N004 (  1,  1) [000140] ------------ arg1 in rdx  |  \--*  CNS_INT   int    35
N009 (  6, 14) [000137] -A--G-------              \--*  ASG       ref   
N007 (  4, 12) [000136] n---G--N----                 +--*  IND       ref   
N006 (  2, 10) [000406] I-----------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1]
N008 (  1,  1) [000135] ------------                 \--*  LCL_VAR   ref    V16 tmp10        u:2

***** BB12
STMT00032 (IL   ???...0x097)
N003 (  1,  3) [000148] -A------R---              *  ASG       ref   
N002 (  1,  1) [000147] D------N----              +--*  LCL_VAR   ref    V15 tmp9         d:4
N001 (  1,  1) [000134] ------------              \--*  LCL_VAR   ref    V16 tmp10        u:2 (last use)

------------ BB13 [09C..0A6), preds={BB10,BB12} succs={BB14}

***** BB13
STMT00073 (IL   ???...  ???)
N005 (  0,  0) [000432] -A------R---              *  ASG       ref   
N004 (  0,  0) [000430] D------N----              +--*  LCL_VAR   ref    V15 tmp9         d:3
N003 (  0,  0) [000431] ------------              \--*  PHI       ref   
N001 (  0,  0) [000440] ------------ pred BB12       +--*  PHI_ARG   ref    V15 tmp9         u:4
N002 (  0,  0) [000439] ------------ pred BB10       \--*  PHI_ARG   ref    V15 tmp9         u:2

***** BB13
STMT00070 (IL   ???...  ???)
N009 ( 18, 20) [000313] -ACXG---R---              *  ASG       ref   
N008 (  1,  1) [000312] D------N----              +--*  LCL_VAR   ref    V27 tmp21        d:2
N007 ( 18, 20) [000112] --CXG-------              \--*  CALL      ref    System.Linq.Enumerable.SelectMany
N004 (  1,  1) [000111] ------------ arg2 in r8      +--*  LCL_VAR   ref    V15 tmp9         u:3 (last use)
N005 (  1,  1) [000110] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V14 tmp8         u:2 (last use)
N006 (  2, 10) [000113] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB13
STMT00069 (IL   ???...  ???)
N010 ( 20, 15) [000311] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
N007 (  4,  4) [000309] ---XG------- arg1 in rdx  +--*  IND       int   
N006 (  2,  2) [000411] -------N----              |  \--*  ADD       byref 
N004 (  1,  1) [000308] ------------              |     +--*  LCL_VAR   ref    V13 tmp7         u:2
N005 (  1,  1) [000410] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size]
N008 (  1,  1) [000109] ------------ this in rcx  +--*  LCL_VAR   ref    V13 tmp7         u:2 (last use)
N009 (  1,  1) [000310] ------------ arg2 in r8   \--*  LCL_VAR   ref    V27 tmp21        u:2 (last use)

------------ BB14 [0A6..0B3) -> BB02 (cond), preds={BB06,BB13} succs={BB15,BB02}

***** BB14
STMT00028 (IL 0x0A6...0x0A9)
N005 (  3,  3) [000120] -A------R---              *  ASG       int   
N004 (  1,  1) [000119] D------N----              +--*  LCL_VAR   int    V03 loc2         d:4
N003 (  3,  3) [000118] ------------              \--*  ADD       int   
N001 (  1,  1) [000116] ------------                 +--*  LCL_VAR   int    V03 loc2         u:3 (last use)
N002 (  1,  1) [000117] ------------                 \--*  CNS_INT   int    1

***** BB14
STMT00007 (IL 0x0AA...0x0AE)
N005 (  7,  7) [000027] ---X--------              *  JTRUE     void  
N004 (  5,  5) [000026] J--X---N----              \--*  GT        int   
N002 (  3,  3) [000025] ---X--------                 +--*  ARR_LENGTH int   
N001 (  1,  1) [000024] ------------                 |  \--*  LCL_VAR   ref    V02 loc1         u:2
N003 (  1,  1) [000023] ------------                 \--*  LCL_VAR   int    V03 loc2         u:4

------------ BB15 [0B3..0C7) (return), preds={BB01,BB14} succs={}

***** BB15
STMT00038 (IL 0x0B3...0x0C4)
N005 ( 17, 18) [000181] --CXG-------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle
N003 (  1,  1) [000180] ------------ arg1 in rdx  +--*  LCL_VAR   ref    V01 loc0         u:2
N004 (  2, 10) [000182] H----------- arg0 in rcx  \--*  CNS_INT(h) long   0xd1ffab1e method

***** BB15
STMT00040 (IL   ???...  ???)
N008 ( 21, 31) [000185] --CXG-------              *  CALL      ref    SolutionAnalyzer.Logger.Log
N005 (  4, 12) [000418] #---G------- arg1 in rdx  +--*  IND       ref   
N004 (  2, 10) [000417] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Enumerated and shuffled the project paths."
N006 (  2, 10) [000186] H----------- arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method
N007 (  1,  1) [000184] ------------ arg2 in r8   \--*  CNS_INT   int    2

***** BB15
STMT00041 (IL 0x0C5...0x0C6)
N002 (  2,  2) [000191] ------------              *  RETURN    ref   
N001 (  1,  1) [000190] ------------              \--*  LCL_VAR   ref    V01 loc0         u:2 (last use)

------------ BB16 [000..000) (throw), preds={BB08,BB11} succs={}

***** BB16
STMT00067 (IL   ???...  ???)
N001 ( 14,  5) [000303] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

-------------------------------------------------------------------------------------------------------------------

*************** Finishing PHASE Early Value Propagation

*************** Starting PHASE Do value numbering

*************** In fgValueNumber()
optComputeLoopSideEffects botNext is BB15, lnum is 0
optComputeLoopSideEffectsOfBlock BB02, mostNestedLoop 0
optComputeLoopSideEffectsOfBlock BB03, mostNestedLoop 0
optComputeLoopSideEffectsOfBlock BB04, mostNestedLoop 0
optComputeLoopSideEffectsOfBlock BB05, mostNestedLoop 0
optComputeLoopSideEffectsOfBlock BB06, mostNestedLoop 0
optComputeLoopSideEffectsOfBlock BB07, mostNestedLoop 0
optComputeLoopSideEffectsOfBlock BB08, mostNestedLoop 0
optComputeLoopSideEffectsOfBlock BB09, mostNestedLoop 0
optComputeLoopSideEffectsOfBlock BB10, mostNestedLoop 0
optComputeLoopSideEffectsOfBlock BB11, mostNestedLoop 0
optComputeLoopSideEffectsOfBlock BB12, mostNestedLoop 0
optComputeLoopSideEffectsOfBlock BB13, mostNestedLoop 0
optComputeLoopSideEffectsOfBlock BB14, mostNestedLoop 0
Memory Initial Value in BB01 is: $81
The SSA definition for ByrefExposed (#1) at start of BB01 is $81 {InitVal($41)}
The SSA definition for GcHeap (#1) at start of BB01 is $81 {InitVal($41)}

***** BB01, STMT00001(before)
N008 ( 21, 31) [000002] --CXG-------              *  CALL      ref    SolutionAnalyzer.Logger.Log
N005 (  4, 12) [000317] #---G------- arg1 in rdx  +--*  IND       ref   
N004 (  2, 10) [000316] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Started enumerating project paths."
N006 (  2, 10) [000003] H----------- arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method
N007 (  1,  1) [000001] ------------ arg2 in r8   \--*  CNS_INT   int    2

N001 [000319]   ARGPLACE  => $c0 {c0}
N002 [000318]   ARGPLACE  => $100 {100}
N003 [000320]   ARGPLACE  => $140 {140}
N004 [000316]   CNS_INT(h) 0xD1FFAB1E "Started enumerating project paths." => $180 {Hnd const: 0x00000000D1FFAB1E}
    VNForMapSelect($2, $180):ref returns $1c0 {$VN.ReadOnlyHeap[$180]}
    VNForMapSelect($2, $180):ref returns $1c0 {$VN.ReadOnlyHeap[$180]}
N005 [000317]   IND       => $1c0 {$VN.ReadOnlyHeap[$180]}
N006 [000003]   CNS_INT(h) 0xd1ffab1e method => $181 {Hnd const: 0x00000000D1FFAB1E}
N007 [000001]   CNS_INT   2 => $42 {IntCns 2}
VN of ARGPLACE tree [000319] updated to $181 {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000318] updated to $1c0 {$VN.ReadOnlyHeap[$180]}
VN of ARGPLACE tree [000320] updated to $42 {IntCns 2}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000002] to VN: $102.
N008 [000002]   CALL      => $101 {101}

***** BB01, STMT00001(after)
N008 ( 21, 31) [000002] --CXG-------              *  CALL      ref    SolutionAnalyzer.Logger.Log $101
N005 (  4, 12) [000317] #---G------- arg1 in rdx  +--*  IND       ref    $1c0
N004 (  2, 10) [000316] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Started enumerating project paths." $180
N006 (  2, 10) [000003] H----------- arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method $181
N007 (  1,  1) [000001] ------------ arg2 in r8   \--*  CNS_INT   int    2 $42

---------

***** BB01, STMT00002(before)
N005 ( 16, 16) [000011] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000010] D------N----              +--*  LCL_VAR   ref    V07 tmp1         d:2
N003 ( 16, 16) [000009] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000008] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

N001 [000321]   ARGPLACE  => $c1 {c1}
N002 [000008]   CNS_INT(h) 0xd1ffab1e token => $182 {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000321] updated to $182 {Hnd const: 0x00000000D1FFAB1E}
N003 [000009]   CALL help => $1c1 {JitNew($182, $103)}
N004 [000010]   LCL_VAR   V07 tmp1         d:2 => $1c1 {JitNew($182, $103)}
N005 [000011]   ASG       => $1c1 {JitNew($182, $103)}

***** BB01, STMT00002(after)
N005 ( 16, 16) [000011] -AC-----R---              *  ASG       ref    $1c1
N004 (  1,  1) [000010] D------N----              +--*  LCL_VAR   ref    V07 tmp1         d:2 $1c1
N003 ( 16, 16) [000009] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1c1
N002 (  2, 10) [000008] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $182

---------

***** BB01, STMT00003(before)
N005 ( 16, 10) [000013] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor
N003 (  1,  1) [000012] ------------ this in rcx  +--*  LCL_VAR   ref    V07 tmp1         u:2
N004 (  1,  1) [000007] ------------ arg1 in rdx  \--*  CNS_INT   int    100

N001 [000322]   ARGPLACE  => $105 {105}
N002 [000323]   ARGPLACE  => $141 {141}
N003 [000012]   LCL_VAR   V07 tmp1         u:2 => $1c1 {JitNew($182, $103)}
N004 [000007]   CNS_INT   100 => $43 {IntCns 100}
VN of ARGPLACE tree [000323] updated to $1c1 {JitNew($182, $103)}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000013] to VN: $106.
N005 [000013]   CALL      => $VN.Void

***** BB01, STMT00003(after)
N005 ( 16, 10) [000013] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor $VN.Void
N003 (  1,  1) [000012] ------------ this in rcx  +--*  LCL_VAR   ref    V07 tmp1         u:2 $1c1
N004 (  1,  1) [000007] ------------ arg1 in rdx  \--*  CNS_INT   int    100 $43

---------

***** BB01, STMT00004(before)
N003 (  1,  3) [000016] -A------R---              *  ASG       ref   
N002 (  1,  1) [000015] D------N----              +--*  LCL_VAR   ref    V01 loc0         d:2
N001 (  1,  1) [000014] ------------              \--*  LCL_VAR   ref    V07 tmp1         u:2 (last use)

N001 [000014]   LCL_VAR   V07 tmp1         u:2 (last use) => $1c1 {JitNew($182, $103)}
N002 [000015]   LCL_VAR   V01 loc0         d:2 => $1c1 {JitNew($182, $103)}
N003 [000016]   ASG       => $1c1 {JitNew($182, $103)}

***** BB01, STMT00004(after)
N003 (  1,  3) [000016] -A------R---              *  ASG       ref    $1c1
N002 (  1,  1) [000015] D------N----              +--*  LCL_VAR   ref    V01 loc0         d:2 $1c1
N001 (  1,  1) [000014] ------------              \--*  LCL_VAR   ref    V07 tmp1         u:2 (last use) $1c1

---------

***** BB01, STMT00005(before)
N003 (  1,  3) [000019] -A------R---              *  ASG       ref   
N002 (  1,  1) [000018] D------N----              +--*  LCL_VAR   ref    V02 loc1         d:2
N001 (  1,  1) [000017] ------------              \--*  LCL_VAR   ref    V00 arg0         u:1 (last use)

N001 [000017]   LCL_VAR   V00 arg0         u:1 (last use) => $80 {InitVal($40)}
N002 [000018]   LCL_VAR   V02 loc1         d:2 => $80 {InitVal($40)}
N003 [000019]   ASG       => $80 {InitVal($40)}

***** BB01, STMT00005(after)
N003 (  1,  3) [000019] -A------R---              *  ASG       ref    $80
N002 (  1,  1) [000018] D------N----              +--*  LCL_VAR   ref    V02 loc1         d:2 $80
N001 (  1,  1) [000017] ------------              \--*  LCL_VAR   ref    V00 arg0         u:1 (last use) $80

---------

***** BB01, STMT00006(before)
N003 (  1,  3) [000022] -A------R---              *  ASG       int   
N002 (  1,  1) [000021] D------N----              +--*  LCL_VAR   int    V03 loc2         d:2
N001 (  1,  1) [000020] ------------              \--*  CNS_INT   int    0

N001 [000020]   CNS_INT   0 => $40 {IntCns 0}
N002 [000021]   LCL_VAR   V03 loc2         d:2 => $40 {IntCns 0}
N003 [000022]   ASG       => $40 {IntCns 0}

***** BB01, STMT00006(after)
N003 (  1,  3) [000022] -A------R---              *  ASG       int    $40
N002 (  1,  1) [000021] D------N----              +--*  LCL_VAR   int    V03 loc2         d:2 $40
N001 (  1,  1) [000020] ------------              \--*  CNS_INT   int    0 $40

---------

***** BB01, STMT00071(before)
N005 (  7,  7) [000426] ---X--------              *  JTRUE     void  
N004 (  5,  5) [000422] J--X---N----              \--*  LE        int   
N002 (  3,  3) [000423] ---X--------                 +--*  ARR_LENGTH int   
N001 (  1,  1) [000424] ------------                 |  \--*  LCL_VAR   ref    V02 loc1         u:2
N003 (  1,  1) [000425] ------------                 \--*  LCL_VAR   int    V03 loc2         u:2

N001 [000424]   LCL_VAR   V02 loc1         u:2 => $80 {InitVal($40)}
N002 [000423]   ARR_LENGTH => $240 {norm=$200 {ARR_LENGTH($80)}, exc=$1c2 {NullPtrExc($80)}}
N003 [000425]   LCL_VAR   V03 loc2         u:2 => $40 {IntCns 0}
N004 [000422]   LE        => $242 {norm=$241 { {IntCns 0} GE  {ARR_LENGTH($80)}}, exc=$1c2 {NullPtrExc($80)}}

***** BB01, STMT00071(after)
N005 (  7,  7) [000426] ---X--------              *  JTRUE     void  
N004 (  5,  5) [000422] J--X---N----              \--*  LE        int    $242
N002 (  3,  3) [000423] ---X--------                 +--*  ARR_LENGTH int    $240
N001 (  1,  1) [000424] ------------                 |  \--*  LCL_VAR   ref    V02 loc1         u:2 $80
N003 (  1,  1) [000425] ------------                 \--*  LCL_VAR   int    V03 loc2         u:2 $40

finish(BB01).
   Succ(BB02).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
       Was necessary.
   Succ(BB15).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
       Was necessary.
SSA PHI definition: set VN of local 3/3 to $280 {PhiDef($3, $3, $243)} .
Computing GcHeap state for block BB02, entry block for loops 0 to 0:
  Loop 0 has memory havoc effect; heap state is new unique $2c0.
The SSA definition for GcHeap (#5) at start of BB02 is $2c0 {2c0}

***** BB02, STMT00008(before)
N016 ( 14, 18) [000032] -A-XG---R---              *  ASG       ref   
N015 (  1,  1) [000031] D------N----              +--*  LCL_VAR   ref    V04 loc3         d:2
N014 ( 14, 18) [000334] ---XG-------              \--*  COMMA     ref   
N004 (  8, 11) [000327] ---X--------                 +--*  ARR_BOUNDS_CHECK_Rng void  
N001 (  1,  1) [000029] ------------                 |  +--*  LCL_VAR   int    V03 loc2         u:3
N003 (  3,  3) [000326] ---X--------                 |  \--*  ARR_LENGTH int   
N002 (  1,  1) [000028] ------------                 |     \--*  LCL_VAR   ref    V02 loc1         u:2
N013 (  6,  7) [000030] a---G-------                 \--*  IND       ref   
N012 (  5,  6) [000333] -------N----                    \--*  ADD       byref 
N005 (  1,  1) [000324] ------------                       +--*  LCL_VAR   ref    V02 loc1         u:2
N011 (  4,  5) [000332] -------N----                       \--*  ADD       long  
N009 (  3,  4) [000330] -------N----                          +--*  LSH       long  
N007 (  2,  3) [000328] ------------                          |  +--*  CAST      long <- int
N006 (  1,  1) [000325] i-----------                          |  |  \--*  LCL_VAR   int    V03 loc2         u:3
N008 (  1,  1) [000329] -------N----                          |  \--*  CNS_INT   long   3
N010 (  1,  1) [000331] ------------                          \--*  CNS_INT   long   16 Fseq[#FirstElem]

N001 [000029]   LCL_VAR   V03 loc2         u:3 => $280 {PhiDef($3, $3, $243)}
N002 [000028]   LCL_VAR   V02 loc1         u:2 => $80 {InitVal($40)}
N003 [000326]   ARR_LENGTH => $240 {norm=$200 {ARR_LENGTH($80)}, exc=$1c2 {NullPtrExc($80)}}
N004 [000327]   ARR_BOUNDS_CHECK_Rng => $1c7 {norm=$3 {3}, exc=$1c6( {NullPtrExc($80)},  {IndexOutOfRangeExc($280, $200)})}
N005 [000324]   LCL_VAR   V02 loc1         u:2 => $80 {InitVal($40)}
N006 [000325]   LCL_VAR   V03 loc2         u:3 => $280 {PhiDef($3, $3, $243)}
    VNForCastOper(long) is $45
N007 [000328]   CAST      => $300 {Cast($280, $45)}
N008 [000329]   CNS_INT   3 => $340 {LngCns:  3}
N009 [000330]   LSH       => $301 {LSH($300, $340)}
N010 [000331]   CNS_INT   16 Fseq[#FirstElem] => $342 {LngCns:  16}
N011 [000332]   ADD       => $302 {ADD($301, $342)}
N012 [000333]   ADD       => $380 {ADD($80, $302)}
    VNForHandle(arrElemType: ref) is $183
  Relabeled IND_ARR_INDEX address node [000333] with l:$3c0:  {PtrToArrElem($183, $80, $300, $0)}
    VNForMapSelect($2c0, $183):ref returns $1c8 {$2c0[$183]}
    VNForMapSelect($1c8, $80):ref returns $1c9 {$1c8[$80]}
    VNForMapSelect($1c9, $300):ref returns $1ca {$1c9[$300]}
  hAtArrType $1c8 is MapSelect(curGcHeap($2c0), ref[]).
  hAtArrTypeAtArr $1c9 is MapSelect(hAtArrType($1c8), arr=$80).
  wholeElem $1ca is MapSelect(hAtArrTypeAtArr($1c9), ind=$300).
N013 [000030]   IND       => <l:$1ca {$1c9[$300]}, c:$2c1 {2c1}>
N014 [000334]   COMMA     => <l:$1cc {norm=$1ca {$1c9[$300]}, exc=$1c6( {NullPtrExc($80)},  {IndexOutOfRangeExc($280, $200)})}, c:$1cb {norm=$2c1 {2c1}, exc=$1c6( {NullPtrExc($80)},  {IndexOutOfRangeExc($280, $200)})}>
N015 [000031]   LCL_VAR   V04 loc3         d:2 => <l:$1ca {$1c9[$300]}, c:$2c1 {2c1}>
N016 [000032]   ASG       => <l:$1cc {norm=$1ca {$1c9[$300]}, exc=$1c6( {NullPtrExc($80)},  {IndexOutOfRangeExc($280, $200)})}, c:$1cb {norm=$2c1 {2c1}, exc=$1c6( {NullPtrExc($80)},  {IndexOutOfRangeExc($280, $200)})}>

***** BB02, STMT00008(after)
N016 ( 14, 18) [000032] -A-XG---R---              *  ASG       ref    <l:$1cc, c:$1cb>
N015 (  1,  1) [000031] D------N----              +--*  LCL_VAR   ref    V04 loc3         d:2 <l:$1ca, c:$2c1>
N014 ( 14, 18) [000334] ---XG-------              \--*  COMMA     ref    <l:$1cc, c:$1cb>
N004 (  8, 11) [000327] ---X--------                 +--*  ARR_BOUNDS_CHECK_Rng void   $1c7
N001 (  1,  1) [000029] ------------                 |  +--*  LCL_VAR   int    V03 loc2         u:3 $280
N003 (  3,  3) [000326] ---X--------                 |  \--*  ARR_LENGTH int    $240
N002 (  1,  1) [000028] ------------                 |     \--*  LCL_VAR   ref    V02 loc1         u:2 $80
N013 (  6,  7) [000030] a---G-------                 \--*  IND       ref    <l:$1ca, c:$2c1>
N012 (  5,  6) [000333] -------N----                    \--*  ADD       byref  $3c0
N005 (  1,  1) [000324] ------------                       +--*  LCL_VAR   ref    V02 loc1         u:2 $80
N011 (  4,  5) [000332] -------N----                       \--*  ADD       long   $302
N009 (  3,  4) [000330] -------N----                          +--*  LSH       long   $301
N007 (  2,  3) [000328] ------------                          |  +--*  CAST      long <- int $300
N006 (  1,  1) [000325] i-----------                          |  |  \--*  LCL_VAR   int    V03 loc2         u:3 $280
N008 (  1,  1) [000329] -------N----                          |  \--*  CNS_INT   long   3 $340
N010 (  1,  1) [000331] ------------                          \--*  CNS_INT   long   16 Fseq[#FirstElem] $342

---------

***** BB02, STMT00042(before)
N002 (  2,  2) [000197] ---X--------              *  NULLCHECK byte  
N001 (  1,  1) [000196] ------------              \--*  LCL_VAR   ref    V04 loc3         u:2

N001 [000196]   LCL_VAR   V04 loc3         u:2 => <l:$1ca {$1c9[$300]}, c:$2c1 {2c1}>
N002 [000197]   NULLCHECK => <l:$1d0 {norm=$3 {3}, exc=$1ce {NullPtrExc($1ca)}}, c:$1cf {norm=$3 {3}, exc=$1cd {NullPtrExc($2c1)}}>

***** BB02, STMT00042(after)
N002 (  2,  2) [000197] ---X--------              *  NULLCHECK byte   <l:$1d0, c:$1cf>
N001 (  1,  1) [000196] ------------              \--*  LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>

---------

***** BB02, STMT00010(before)
N011 ( 24, 27) [000039] --CXG-------              *  JTRUE     void  
N010 ( 22, 25) [000038] J-CXG--N----              \--*  EQ        int   
N008 ( 20, 23) [000195] --CXG-------                 +--*  CALL      int    System.String.EndsWith
N005 (  4, 12) [000336] #---G------- arg1 in rdx     |  +--*  IND       ref   
N004 (  2, 10) [000335] H-----------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E ".csproj"
N006 (  1,  1) [000033] ------------ this in rcx     |  +--*  LCL_VAR   ref    V04 loc3         u:2
N007 (  1,  1) [000194] ------------ arg2 in r8      |  \--*  CNS_INT   int    0
N009 (  1,  1) [000037] ------------                 \--*  CNS_INT   int    0

N001 [000338]   ARGPLACE  => $2c3 {2c3}
N002 [000337]   ARGPLACE  => $2c4 {2c4}
N003 [000339]   ARGPLACE  => $400 {400}
N004 [000335]   CNS_INT(h) 0xD1FFAB1E ".csproj" => $184 {Hnd const: 0x00000000D1FFAB1E}
    VNForMapSelect($2, $184):ref returns $1d1 {$VN.ReadOnlyHeap[$184]}
    VNForMapSelect($2, $184):ref returns $1d1 {$VN.ReadOnlyHeap[$184]}
N005 [000336]   IND       => $1d1 {$VN.ReadOnlyHeap[$184]}
N006 [000033]   LCL_VAR   V04 loc3         u:2 => <l:$1ca {$1c9[$300]}, c:$2c1 {2c1}>
N007 [000194]   CNS_INT   0 => $40 {IntCns 0}
VN of ARGPLACE tree [000337] updated to <l:$1ca {$1c9[$300]}, c:$2c1 {2c1}>
VN of ARGPLACE tree [000339] updated to $1d1 {$VN.ReadOnlyHeap[$184]}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000195] to VN: $2c5.
N008 [000195]   CALL      => $401 {401}
N009 [000037]   CNS_INT   0 => $40 {IntCns 0}
N010 [000038]   EQ        => $244 {EQ($401, $40)}

***** BB02, STMT00010(after)
N011 ( 24, 27) [000039] --CXG-------              *  JTRUE     void  
N010 ( 22, 25) [000038] J-CXG--N----              \--*  EQ        int    $244
N008 ( 20, 23) [000195] --CXG-------                 +--*  CALL      int    System.String.EndsWith $401
N005 (  4, 12) [000336] #---G------- arg1 in rdx     |  +--*  IND       ref    $1d1
N004 (  2, 10) [000335] H-----------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E ".csproj" $184
N006 (  1,  1) [000033] ------------ this in rcx     |  +--*  LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
N007 (  1,  1) [000194] ------------ arg2 in r8      |  \--*  CNS_INT   int    0 $40
N009 (  1,  1) [000037] ------------                 \--*  CNS_INT   int    0 $40

finish(BB02).
   Succ(BB03).
     Not yet completed.
     All preds complete, adding to allDone.
   Succ(BB07).
     Not yet completed.
     All preds complete, adding to allDone.
The SSA definition for ByrefExposed (#6) at start of BB07 is $2c5 {2c5}
The SSA definition for GcHeap (#6) at start of BB07 is $2c5 {2c5}

***** BB07, STMT00053(before)
N005 ( 15,  7) [000247] -ACXG---R---              *  ASG       ref   
N004 (  1,  1) [000246] D------N----              +--*  LCL_VAR   ref    V20 tmp14        d:2
N003 ( 15,  7) [000236] --CXG-------              \--*  CALL      ref    System.IO.EnumerationOptions.FromSearchOption
N002 (  1,  1) [000235] ------------ arg0 in rcx     \--*  CNS_INT   int    1

N001 [000355]   ARGPLACE  => $402 {402}
N002 [000235]   CNS_INT   1 => $46 {IntCns 1}
VN of ARGPLACE tree [000355] updated to $46 {IntCns 1}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000236] to VN: $2c7.
N003 [000236]   CALL      => $2c6 {2c6}
N004 [000246]   LCL_VAR   V20 tmp14        d:2 => $2c6 {2c6}
N005 [000247]   ASG       => $2c6 {2c6}

***** BB07, STMT00053(after)
N005 ( 15,  7) [000247] -ACXG---R---              *  ASG       ref    $2c6
N004 (  1,  1) [000246] D------N----              +--*  LCL_VAR   ref    V20 tmp14        d:2 $2c6
N003 ( 15,  7) [000236] --CXG-------              \--*  CALL      ref    System.IO.EnumerationOptions.FromSearchOption $2c6
N002 (  1,  1) [000235] ------------ arg0 in rcx     \--*  CNS_INT   int    1 $46

---------

***** BB07, STMT00013(before)
N012 ( 21, 24) [000054] -ACXG---R---              *  ASG       ref   
N011 (  1,  1) [000053] D------N----              +--*  LCL_VAR   ref    V09 tmp3         d:2
N010 ( 21, 24) [000245] --CXG-------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths
N006 (  4, 12) [000357] #---G------- arg1 in rdx     +--*  IND       ref   
N005 (  2, 10) [000356] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*"
N007 (  1,  1) [000040] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         u:2
N008 (  1,  1) [000244] ------------ arg3 in r9      +--*  LCL_VAR   ref    V20 tmp14        u:2 (last use)
N009 (  1,  1) [000243] ------------ arg2 in r8      \--*  CNS_INT   int    2

N001 [000359]   ARGPLACE  => $2c9 {2c9}
N002 [000358]   ARGPLACE  => $2ca {2ca}
N003 [000361]   ARGPLACE  => $403 {403}
N004 [000360]   ARGPLACE  => $2cb {2cb}
N005 [000356]   CNS_INT(h) 0xD1FFAB1E "*" => $185 {Hnd const: 0x00000000D1FFAB1E}
    VNForMapSelect($2, $185):ref returns $1d2 {$VN.ReadOnlyHeap[$185]}
    VNForMapSelect($2, $185):ref returns $1d2 {$VN.ReadOnlyHeap[$185]}
N006 [000357]   IND       => $1d2 {$VN.ReadOnlyHeap[$185]}
N007 [000040]   LCL_VAR   V04 loc3         u:2 => <l:$1ca {$1c9[$300]}, c:$2c1 {2c1}>
N008 [000244]   LCL_VAR   V20 tmp14        u:2 (last use) => $2c6 {2c6}
N009 [000243]   CNS_INT   2 => $42 {IntCns 2}
VN of ARGPLACE tree [000359] updated to <l:$1ca {$1c9[$300]}, c:$2c1 {2c1}>
VN of ARGPLACE tree [000358] updated to $1d2 {$VN.ReadOnlyHeap[$185]}
VN of ARGPLACE tree [000361] updated to $42 {IntCns 2}
VN of ARGPLACE tree [000360] updated to $2c6 {2c6}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000245] to VN: $2cd.
N010 [000245]   CALL      => $2cc {2cc}
N011 [000053]   LCL_VAR   V09 tmp3         d:2 => $2cc {2cc}
N012 [000054]   ASG       => $2cc {2cc}

***** BB07, STMT00013(after)
N012 ( 21, 24) [000054] -ACXG---R---              *  ASG       ref    $2cc
N011 (  1,  1) [000053] D------N----              +--*  LCL_VAR   ref    V09 tmp3         d:2 $2cc
N010 ( 21, 24) [000245] --CXG-------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths $2cc
N006 (  4, 12) [000357] #---G------- arg1 in rdx     +--*  IND       ref    $1d2
N005 (  2, 10) [000356] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*" $185
N007 (  1,  1) [000040] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
N008 (  1,  1) [000244] ------------ arg3 in r9      +--*  LCL_VAR   ref    V20 tmp14        u:2 (last use) $2c6
N009 (  1,  1) [000243] ------------ arg2 in r8      \--*  CNS_INT   int    2 $42

---------

***** BB07, STMT00012(before)
N010 ( 21, 30) [000052] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000051] D------N----              +--*  LCL_VAR   ref    V08 tmp2         d:2
N008 ( 21, 30) [000050] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 18) [000049] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000047] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
N004 (  1,  1) [000048] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35
N007 (  4, 12) [000045] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000364] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0]

N001 [000362]   ARGPLACE  => $440 {440}
N002 [000363]   ARGPLACE  => $404 {404}
N003 [000047]   CNS_INT   0x7ffc7e4c17e0 => $345 {LngCns:  0x7ffc7e4c17e0}
N004 [000048]   CNS_INT   35 => $47 {IntCns 35}
VN of ARGPLACE tree [000362] updated to $345 {LngCns:  0x7ffc7e4c17e0}
VN of ARGPLACE tree [000363] updated to $47 {IntCns 35}
N005 [000049]   CALL help => $305 {norm=$304 {GetsharedNongcstaticBase($345, $47)}, exc=$1d3 {HelperMultipleExc()}}
N006 [000364]   CNS_INT(h) 0xd1ffab1e static Fseq[<>9__2_0] => $186 {Hnd const: 0x00000000D1FFAB1E}
N007 [000045]   IND       => <l:$4c0 {ByrefExposedLoad($48, $186, $2cd)}, c:$2cf {2cf}>
N008 [000050]   COMMA     => <l:$1d5 {norm=$4c0 {ByrefExposedLoad($48, $186, $2cd)}, exc=$1d3 {HelperMultipleExc()}}, c:$1d4 {norm=$2cf {2cf}, exc=$1d3 {HelperMultipleExc()}}>
N009 [000051]   LCL_VAR   V08 tmp2         d:2 => <l:$4c0 {ByrefExposedLoad($48, $186, $2cd)}, c:$2cf {2cf}>
N010 [000052]   ASG       => <l:$1d5 {norm=$4c0 {ByrefExposedLoad($48, $186, $2cd)}, exc=$1d3 {HelperMultipleExc()}}, c:$1d4 {norm=$2cf {2cf}, exc=$1d3 {HelperMultipleExc()}}>

***** BB07, STMT00012(after)
N010 ( 21, 30) [000052] -ACXG---R---              *  ASG       ref    <l:$1d5, c:$1d4>
N009 (  1,  1) [000051] D------N----              +--*  LCL_VAR   ref    V08 tmp2         d:2 <l:$4c0, c:$2cf>
N008 ( 21, 30) [000050] --CXG-------              \--*  COMMA     ref    <l:$1d5, c:$1d4>
N005 ( 17, 18) [000049] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
N003 (  2, 10) [000047] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0 $345
N004 (  1,  1) [000048] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35 $47
N007 (  4, 12) [000045] n---G-------                 \--*  IND       ref    <l:$4c0, c:$2cf>
N006 (  2, 10) [000364] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] $186

---------

***** BB07, STMT00015(before)
N003 (  1,  3) [000062] -A------R---              *  ASG       ref   
N002 (  1,  1) [000061] D------N----              +--*  LCL_VAR   ref    V10 tmp4         d:2
N001 (  1,  1) [000055] ------------              \--*  LCL_VAR   ref    V09 tmp3         u:2 (last use)

N001 [000055]   LCL_VAR   V09 tmp3         u:2 (last use) => $2cc {2cc}
N002 [000061]   LCL_VAR   V10 tmp4         d:2 => $2cc {2cc}
N003 [000062]   ASG       => $2cc {2cc}

***** BB07, STMT00015(after)
N003 (  1,  3) [000062] -A------R---              *  ASG       ref    $2cc
N002 (  1,  1) [000061] D------N----              +--*  LCL_VAR   ref    V10 tmp4         d:2 $2cc
N001 (  1,  1) [000055] ------------              \--*  LCL_VAR   ref    V09 tmp3         u:2 (last use) $2cc

---------

***** BB07, STMT00016(before)
N003 (  1,  3) [000065] -A------R---              *  ASG       ref   
N002 (  1,  1) [000064] D------N----              +--*  LCL_VAR   ref    V11 tmp5         d:2
N001 (  1,  1) [000056] ------------              \--*  LCL_VAR   ref    V08 tmp2         u:2

N001 [000056]   LCL_VAR   V08 tmp2         u:2 => <l:$4c0 {ByrefExposedLoad($48, $186, $2cd)}, c:$2cf {2cf}>
N002 [000064]   LCL_VAR   V11 tmp5         d:2 => <l:$4c0 {ByrefExposedLoad($48, $186, $2cd)}, c:$2cf {2cf}>
N003 [000065]   ASG       => <l:$4c0 {ByrefExposedLoad($48, $186, $2cd)}, c:$2cf {2cf}>

***** BB07, STMT00016(after)
N003 (  1,  3) [000065] -A------R---              *  ASG       ref    <l:$4c0, c:$2cf>
N002 (  1,  1) [000064] D------N----              +--*  LCL_VAR   ref    V11 tmp5         d:2 <l:$4c0, c:$2cf>
N001 (  1,  1) [000056] ------------              \--*  LCL_VAR   ref    V08 tmp2         u:2 <l:$4c0, c:$2cf>

---------

***** BB07, STMT00014(before)
N004 (  5,  5) [000060] ------------              *  JTRUE     void  
N003 (  3,  3) [000059] J------N----              \--*  NE        int   
N001 (  1,  1) [000057] ------------                 +--*  LCL_VAR   ref    V08 tmp2         u:2 (last use)
N002 (  1,  1) [000058] ------------                 \--*  CNS_INT   ref    null

N001 [000057]   LCL_VAR   V08 tmp2         u:2 (last use) => <l:$4c0 {ByrefExposedLoad($48, $186, $2cd)}, c:$2cf {2cf}>
N002 [000058]   CNS_INT   null => $VN.Null
N003 [000059]   NE        => <l:$246 {NE($4c0, $0)}, c:$245 {NE($2cf, $0)}>

***** BB07, STMT00014(after)
N004 (  5,  5) [000060] ------------              *  JTRUE     void  
N003 (  3,  3) [000059] J------N----              \--*  NE        int    <l:$246, c:$245>
N001 (  1,  1) [000057] ------------                 +--*  LCL_VAR   ref    V08 tmp2         u:2 (last use) <l:$4c0, c:$2cf>
N002 (  1,  1) [000058] ------------                 \--*  CNS_INT   ref    null $VN.Null

finish(BB07).
   Succ(BB08).
     Not yet completed.
     All preds complete, adding to allDone.
   Succ(BB10).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
       Was necessary.
The SSA definition for ByrefExposed (#8) at start of BB08 is $2cd {2cd}
The SSA definition for GcHeap (#8) at start of BB08 is $2cd {2cd}

***** BB08, STMT00033(before)
N005 ( 16, 16) [000160] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000159] D------N----              +--*  LCL_VAR   ref    V17 tmp11        d:2
N003 ( 16, 16) [000158] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000157] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

N001 [000365]   ARGPLACE  => $441 {441}
N002 [000157]   CNS_INT(h) 0xd1ffab1e token => $187 {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000365] updated to $187 {Hnd const: 0x00000000D1FFAB1E}
N003 [000158]   CALL help => $1d6 {JitNew($187, $2d3)}
N004 [000159]   LCL_VAR   V17 tmp11        d:2 => $1d6 {JitNew($187, $2d3)}
N005 [000160]   ASG       => $1d6 {JitNew($187, $2d3)}

***** BB08, STMT00033(after)
N005 ( 16, 16) [000160] -AC-----R---              *  ASG       ref    $1d6
N004 (  1,  1) [000159] D------N----              +--*  LCL_VAR   ref    V17 tmp11        d:2 $1d6
N003 ( 16, 16) [000158] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1d6
N002 (  2, 10) [000157] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $187

---------

***** BB08, STMT00058(before)
N010 ( 21, 30) [000262] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000261] D------N----              +--*  LCL_VAR   ref    V21 tmp15        d:2
N008 ( 21, 30) [000155] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 18) [000154] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000152] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
N004 (  1,  1) [000153] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35
N007 (  4, 12) [000150] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000368] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9]

N001 [000366]   ARGPLACE  => $442 {442}
N002 [000367]   ARGPLACE  => $405 {405}
N003 [000152]   CNS_INT   0x7ffc7e4c17e0 => $345 {LngCns:  0x7ffc7e4c17e0}
N004 [000153]   CNS_INT   35 => $47 {IntCns 35}
VN of ARGPLACE tree [000366] updated to $345 {LngCns:  0x7ffc7e4c17e0}
VN of ARGPLACE tree [000367] updated to $47 {IntCns 35}
N005 [000154]   CALL help => $305 {norm=$304 {GetsharedNongcstaticBase($345, $47)}, exc=$1d3 {HelperMultipleExc()}}
N006 [000368]   CNS_INT(h) 0xd1ffab1e static Fseq[<>9] => $188 {Hnd const: 0x00000000D1FFAB1E}
N007 [000150]   IND       => <l:$4c1 {ByrefExposedLoad($48, $188, $2cd)}, c:$2d5 {2d5}>
N008 [000155]   COMMA     => <l:$1d8 {norm=$4c1 {ByrefExposedLoad($48, $188, $2cd)}, exc=$1d3 {HelperMultipleExc()}}, c:$1d7 {norm=$2d5 {2d5}, exc=$1d3 {HelperMultipleExc()}}>
N009 [000261]   LCL_VAR   V21 tmp15        d:2 => <l:$4c1 {ByrefExposedLoad($48, $188, $2cd)}, c:$2d5 {2d5}>
N010 [000262]   ASG       => <l:$1d8 {norm=$4c1 {ByrefExposedLoad($48, $188, $2cd)}, exc=$1d3 {HelperMultipleExc()}}, c:$1d7 {norm=$2d5 {2d5}, exc=$1d3 {HelperMultipleExc()}}>

***** BB08, STMT00058(after)
N010 ( 21, 30) [000262] -ACXG---R---              *  ASG       ref    <l:$1d8, c:$1d7>
N009 (  1,  1) [000261] D------N----              +--*  LCL_VAR   ref    V21 tmp15        d:2 <l:$4c1, c:$2d5>
N008 ( 21, 30) [000155] --CXG-------              \--*  COMMA     ref    <l:$1d8, c:$1d7>
N005 ( 17, 18) [000154] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
N003 (  2, 10) [000152] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0 $345
N004 (  1,  1) [000153] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35 $47
N007 (  4, 12) [000150] n---G-------                 \--*  IND       ref    <l:$4c1, c:$2d5>
N006 (  2, 10) [000368] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] $188

---------

***** BB08, STMT00054(before)
N004 (  5,  5) [000252] ------------              *  JTRUE     void  
N003 (  3,  3) [000251] J------N----              \--*  EQ        int   
N001 (  1,  1) [000249] ------------                 +--*  LCL_VAR   ref    V21 tmp15        u:2
N002 (  1,  1) [000250] ------------                 \--*  CNS_INT   ref    null

N001 [000249]   LCL_VAR   V21 tmp15        u:2 => <l:$4c1 {ByrefExposedLoad($48, $188, $2cd)}, c:$2d5 {2d5}>
N002 [000250]   CNS_INT   null => $VN.Null
N003 [000251]   EQ        => <l:$248 {EQ($4c1, $0)}, c:$247 {EQ($2d5, $0)}>

***** BB08, STMT00054(after)
N004 (  5,  5) [000252] ------------              *  JTRUE     void  
N003 (  3,  3) [000251] J------N----              \--*  EQ        int    <l:$248, c:$247>
N001 (  1,  1) [000249] ------------                 +--*  LCL_VAR   ref    V21 tmp15        u:2 <l:$4c1, c:$2d5>
N002 (  1,  1) [000250] ------------                 \--*  CNS_INT   ref    null $VN.Null

finish(BB08).
   Succ(BB09).
     Not yet completed.
     All preds complete, adding to allDone.
   Succ(BB16).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
       Was necessary.
The SSA definition for ByrefExposed (#17) at start of BB09 is $2cd {2cd}
The SSA definition for GcHeap (#17) at start of BB09 is $2cd {2cd}

***** BB09, STMT00055(before)
N006 (  6,  6) [000255] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000254] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000370] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000161] ------------              |     +--*  LCL_VAR   ref    V17 tmp11        u:2
N002 (  1,  1) [000369] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
N005 (  1,  1) [000253] ------------              \--*  LCL_VAR   ref    V21 tmp15        u:2 (last use)

N001 [000161]   LCL_VAR   V17 tmp11        u:2 => $1d6 {JitNew($187, $2d3)}
N002 [000369]   CNS_INT   8 field offset Fseq[_target] => $343 {LngCns:  8}
N003 [000370]   ADD       => $381 {ADD($1d6, $343)}
N005 [000253]   LCL_VAR   V21 tmp15        u:2 (last use) => <l:$4c1 {ByrefExposedLoad($48, $188, $2cd)}, c:$2d5 {2d5}>
  VNApplySelectors:
    VNForHandle(_target) is $189, fieldType is ref
    VNForMapSelect($2cd, $189):ref returns $1d9 {$2cd[$189]}
    VNForMapSelect($1d9, $1d6):ref returns $1da {$1d9[$1d6]}
    VNForMapStore($1d9, $1d6, $4c1):ref returns $4c2 {$1d9[$1d6 := $4c1]}
  VNApplySelectorsAssign:
    VNForHandle(_target) is $189, fieldType is ref
    VNForMapStore($2cd, $189, $4c2):ref returns $4c3 {$2cd[$189 := $4c2]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000255] to VN: $4c3.
N006 [000255]   ASG       => $VN.Void

***** BB09, STMT00055(after)
N006 (  6,  6) [000255] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000254] D--XG--N----              +--*  IND       ref    $4c1
N003 (  2,  2) [000370] -------N----              |  \--*  ADD       byref  $381
N001 (  1,  1) [000161] ------------              |     +--*  LCL_VAR   ref    V17 tmp11        u:2 $1d6
N002 (  1,  1) [000369] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $343
N005 (  1,  1) [000253] ------------              \--*  LCL_VAR   ref    V21 tmp15        u:2 (last use) <l:$4c1, c:$2d5>

---------

***** BB09, STMT00056(before)
N006 (  7, 15) [000259] -A-XG-------              *  ASG       long  
N004 (  4,  4) [000258] D--XG--N----              +--*  IND       long  
N003 (  2,  2) [000372] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000256] ------------              |     +--*  LCL_VAR   ref    V17 tmp11        u:2
N002 (  1,  1) [000371] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
N005 (  2, 10) [000156] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

N001 [000256]   LCL_VAR   V17 tmp11        u:2 => $1d6 {JitNew($187, $2d3)}
N002 [000371]   CNS_INT   24 field offset Fseq[_methodPtr] => $346 {LngCns:  24}
N003 [000372]   ADD       => $382 {ADD($1d6, $346)}
N005 [000156]   CNS_INT(h) 0xd1ffab1e ftn => $18a {Hnd const: 0x00000000D1FFAB1E}
  VNApplySelectors:
    VNForHandle(_methodPtr) is $18b, fieldType is long
      AX2: $18b != $189 ==> select([$4c3]store($2cd, $189, $4c2), $18b) ==> select($2cd, $18b).
    VNForMapSelect($4c3, $18b):long returns $306 {$2cd[$18b]}
    VNForMapSelect($306, $1d6):long returns $307 {$306[$1d6]}
    VNForMapStore($306, $1d6, $18a):long returns $500 {$306[$1d6 := $18a]}
  VNApplySelectorsAssign:
    VNForHandle(_methodPtr) is $18b, fieldType is long
    VNForMapStore($4c3, $18b, $500):long returns $501 {$4c3[$18b := $500]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000259] to VN: $501.
N006 [000259]   ASG       => $VN.Void

***** BB09, STMT00056(after)
N006 (  7, 15) [000259] -A-XG-------              *  ASG       long   $VN.Void
N004 (  4,  4) [000258] D--XG--N----              +--*  IND       long   $18a
N003 (  2,  2) [000372] -------N----              |  \--*  ADD       byref  $382
N001 (  1,  1) [000256] ------------              |     +--*  LCL_VAR   ref    V17 tmp11        u:2 $1d6
N002 (  1,  1) [000371] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $346
N005 (  2, 10) [000156] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $18a

---------

***** BB09, STMT00035(before)
N010 ( 23, 32) [000171] -ACXG-------              *  COMMA     void  
N005 ( 17, 18) [000170] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000168] ------------ arg0 in rcx  |  +--*  CNS_INT   long   0x7ffc7e4c17e0
N004 (  1,  1) [000169] ------------ arg1 in rdx  |  \--*  CNS_INT   int    35
N009 (  6, 14) [000166] -A--G-------              \--*  ASG       ref   
N007 (  4, 12) [000165] n---G--N----                 +--*  IND       ref   
N006 (  2, 10) [000375] I-----------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0]
N008 (  1,  1) [000164] ------------                 \--*  LCL_VAR   ref    V17 tmp11        u:2

N001 [000373]   ARGPLACE  => $443 {443}
N002 [000374]   ARGPLACE  => $406 {406}
N003 [000168]   CNS_INT   0x7ffc7e4c17e0 => $345 {LngCns:  0x7ffc7e4c17e0}
N004 [000169]   CNS_INT   35 => $47 {IntCns 35}
VN of ARGPLACE tree [000373] updated to $345 {LngCns:  0x7ffc7e4c17e0}
VN of ARGPLACE tree [000374] updated to $47 {IntCns 35}
N005 [000170]   CALL help => $305 {norm=$304 {GetsharedNongcstaticBase($345, $47)}, exc=$1d3 {HelperMultipleExc()}}
N006 [000375]   CNS_INT(h) 0xd1ffab1e static Fseq[<>9__2_0] => $186 {Hnd const: 0x00000000D1FFAB1E}
N008 [000164]   LCL_VAR   V17 tmp11        u:2 => $1d6 {JitNew($187, $2d3)}
  fgCurMemoryVN[GcHeap] assigned for assign-of-IND at [000166] to VN: $2d7.
N009 [000166]   ASG       => $VN.Void
N010 [000171]   COMMA     => $1db {norm=$3 {3}, exc=$1d3 {HelperMultipleExc()}}

***** BB09, STMT00035(after)
N010 ( 23, 32) [000171] -ACXG-------              *  COMMA     void   $1db
N005 ( 17, 18) [000170] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
N003 (  2, 10) [000168] ------------ arg0 in rcx  |  +--*  CNS_INT   long   0x7ffc7e4c17e0 $345
N004 (  1,  1) [000169] ------------ arg1 in rdx  |  \--*  CNS_INT   int    35 $47
N009 (  6, 14) [000166] -A--G-------              \--*  ASG       ref    $VN.Void
N007 (  4, 12) [000165] n---G--N----                 +--*  IND       ref    $1d6
N006 (  2, 10) [000375] I-----------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] $186
N008 (  1,  1) [000164] ------------                 \--*  LCL_VAR   ref    V17 tmp11        u:2 $1d6

---------

***** BB09, STMT00036(before)
N003 (  1,  3) [000175] -A------R---              *  ASG       ref   
N002 (  1,  1) [000174] D------N----              +--*  LCL_VAR   ref    V11 tmp5         d:4
N001 (  1,  1) [000163] ------------              \--*  LCL_VAR   ref    V17 tmp11        u:2 (last use)

N001 [000163]   LCL_VAR   V17 tmp11        u:2 (last use) => $1d6 {JitNew($187, $2d3)}
N002 [000174]   LCL_VAR   V11 tmp5         d:4 => $1d6 {JitNew($187, $2d3)}
N003 [000175]   ASG       => $1d6 {JitNew($187, $2d3)}

***** BB09, STMT00036(after)
N003 (  1,  3) [000175] -A------R---              *  ASG       ref    $1d6
N002 (  1,  1) [000174] D------N----              +--*  LCL_VAR   ref    V11 tmp5         d:4 $1d6
N001 (  1,  1) [000163] ------------              \--*  LCL_VAR   ref    V17 tmp11        u:2 (last use) $1d6

finish(BB09).
   Succ(BB10).
     Not yet completed.
     All preds complete, adding to allDone.
SSA PHI definition: set VN of local 11/3 to $4c4 {PhiDef($b, $3, $243)} .
  Building phi application: $45 = SSA# 18.
  Building phi application: $49 = SSA# 8.
  Building phi application: $1dc = phi($49, $45).
The SSA definition for GcHeap (#11) at start of BB10 is $1dd {PhiMemoryDef($18c, $1dc)}

***** BB10, STMT00018(before)
N009 ( 18, 20) [000075] -ACXG---R---              *  ASG       ref   
N008 (  1,  1) [000074] D------N----              +--*  LCL_VAR   ref    V05 loc4         d:2
N007 ( 18, 20) [000071] --CXG-------              \--*  CALL      ref    System.Linq.Enumerable.Where
N004 (  1,  1) [000070] ------------ arg2 in r8      +--*  LCL_VAR   ref    V11 tmp5         u:3 (last use)
N005 (  1,  1) [000069] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V10 tmp4         u:2 (last use)
N006 (  2, 10) [000072] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

N001 [000378]   ARGPLACE  => $444 {444}
N002 [000377]   ARGPLACE  => $2d9 {2d9}
N003 [000376]   ARGPLACE  => $2da {2da}
N004 [000070]   LCL_VAR   V11 tmp5         u:3 (last use) => $4c4 {PhiDef($b, $3, $243)}
N005 [000069]   LCL_VAR   V10 tmp4         u:2 (last use) => $2cc {2cc}
N006 [000072]   CNS_INT(h) 0xd1ffab1e method => $18d {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000378] updated to $18d {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000377] updated to $2cc {2cc}
VN of ARGPLACE tree [000376] updated to $4c4 {PhiDef($b, $3, $243)}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000071] to VN: $2dc.
N007 [000071]   CALL      => $2db {2db}
N008 [000074]   LCL_VAR   V05 loc4         d:2 => $2db {2db}
N009 [000075]   ASG       => $2db {2db}

***** BB10, STMT00018(after)
N009 ( 18, 20) [000075] -ACXG---R---              *  ASG       ref    $2db
N008 (  1,  1) [000074] D------N----              +--*  LCL_VAR   ref    V05 loc4         d:2 $2db
N007 ( 18, 20) [000071] --CXG-------              \--*  CALL      ref    System.Linq.Enumerable.Where $2db
N004 (  1,  1) [000070] ------------ arg2 in r8      +--*  LCL_VAR   ref    V11 tmp5         u:3 (last use) $4c4
N005 (  1,  1) [000069] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V10 tmp4         u:2 (last use) $2cc
N006 (  2, 10) [000072] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $18d

---------

***** BB10, STMT00061(before)
N010 ( 21, 30) [000283] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000282] D------N----              +--*  LCL_VAR   ref    V23 tmp17        d:2
N008 ( 21, 30) [000276] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 18) [000275] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000273] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e783cd8
N004 (  1,  1) [000274] ------------ arg1 in rdx     |  \--*  CNS_INT   int    40
N007 (  4, 12) [000271] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000381] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<Compatible>k__BackingField]

N001 [000379]   ARGPLACE  => $445 {445}
N002 [000380]   ARGPLACE  => $407 {407}
N003 [000273]   CNS_INT   0x7ffc7e783cd8 => $347 {LngCns:  0x7ffc7e783cd8}
N004 [000274]   CNS_INT   40 => $4a {IntCns 40}
VN of ARGPLACE tree [000379] updated to $347 {LngCns:  0x7ffc7e783cd8}
VN of ARGPLACE tree [000380] updated to $4a {IntCns 40}
N005 [000275]   CALL help => $309 {norm=$308 {GetsharedNongcstaticBase($347, $4a)}, exc=$1d3 {HelperMultipleExc()}}
N006 [000381]   CNS_INT(h) 0xd1ffab1e static Fseq[<Compatible>k__BackingField] => $18e {Hnd const: 0x00000000D1FFAB1E}
N007 [000271]   IND       => <l:$4c5 {ByrefExposedLoad($48, $18e, $2dc)}, c:$2de {2de}>
N008 [000276]   COMMA     => <l:$1df {norm=$4c5 {ByrefExposedLoad($48, $18e, $2dc)}, exc=$1d3 {HelperMultipleExc()}}, c:$1de {norm=$2de {2de}, exc=$1d3 {HelperMultipleExc()}}>
N009 [000282]   LCL_VAR   V23 tmp17        d:2 => <l:$4c5 {ByrefExposedLoad($48, $18e, $2dc)}, c:$2de {2de}>
N010 [000283]   ASG       => <l:$1df {norm=$4c5 {ByrefExposedLoad($48, $18e, $2dc)}, exc=$1d3 {HelperMultipleExc()}}, c:$1de {norm=$2de {2de}, exc=$1d3 {HelperMultipleExc()}}>

***** BB10, STMT00061(after)
N010 ( 21, 30) [000283] -ACXG---R---              *  ASG       ref    <l:$1df, c:$1de>
N009 (  1,  1) [000282] D------N----              +--*  LCL_VAR   ref    V23 tmp17        d:2 <l:$4c5, c:$2de>
N008 ( 21, 30) [000276] --CXG-------              \--*  COMMA     ref    <l:$1df, c:$1de>
N005 ( 17, 18) [000275] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $309
N003 (  2, 10) [000273] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e783cd8 $347
N004 (  1,  1) [000274] ------------ arg1 in rdx     |  \--*  CNS_INT   int    40 $4a
N007 (  4, 12) [000271] n---G-------                 \--*  IND       ref    <l:$4c5, c:$2de>
N006 (  2, 10) [000381] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<Compatible>k__BackingField] $18e

---------

***** BB10, STMT00063(before)
N012 ( 21, 24) [000290] -ACXG---R---              *  ASG       ref   
N011 (  1,  1) [000289] D------N----              +--*  LCL_VAR   ref    V24 tmp18        d:2
N010 ( 21, 24) [000281] --CXG-------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths
N006 (  4, 12) [000383] #---G------- arg1 in rdx     +--*  IND       ref   
N005 (  2, 10) [000382] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*.csproj"
N007 (  1,  1) [000077] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         u:2 (last use)
N008 (  1,  1) [000280] ------------ arg3 in r9      +--*  LCL_VAR   ref    V23 tmp17        u:2 (last use)
N009 (  1,  1) [000279] ------------ arg2 in r8      \--*  CNS_INT   int    1

N001 [000385]   ARGPLACE  => $2e0 {2e0}
N002 [000384]   ARGPLACE  => $2e1 {2e1}
N003 [000387]   ARGPLACE  => $408 {408}
N004 [000386]   ARGPLACE  => $2e2 {2e2}
N005 [000382]   CNS_INT(h) 0xD1FFAB1E "*.csproj" => $18f {Hnd const: 0x00000000D1FFAB1E}
    VNForMapSelect($2, $18f):ref returns $1e0 {$VN.ReadOnlyHeap[$18f]}
    VNForMapSelect($2, $18f):ref returns $1e0 {$VN.ReadOnlyHeap[$18f]}
N006 [000383]   IND       => $1e0 {$VN.ReadOnlyHeap[$18f]}
N007 [000077]   LCL_VAR   V04 loc3         u:2 (last use) => <l:$1ca {$1c9[$300]}, c:$2c1 {2c1}>
N008 [000280]   LCL_VAR   V23 tmp17        u:2 (last use) => <l:$4c5 {ByrefExposedLoad($48, $18e, $2dc)}, c:$2de {2de}>
N009 [000279]   CNS_INT   1 => $46 {IntCns 1}
VN of ARGPLACE tree [000385] updated to <l:$1ca {$1c9[$300]}, c:$2c1 {2c1}>
VN of ARGPLACE tree [000384] updated to $1e0 {$VN.ReadOnlyHeap[$18f]}
VN of ARGPLACE tree [000387] updated to $46 {IntCns 1}
VN of ARGPLACE tree [000386] updated to <l:$4c5 {ByrefExposedLoad($48, $18e, $2dc)}, c:$2de {2de}>
  fgCurMemoryVN[GcHeap] assigned for CALL at [000281] to VN: $2e4.
N010 [000281]   CALL      => $2e3 {2e3}
N011 [000289]   LCL_VAR   V24 tmp18        d:2 => $2e3 {2e3}
N012 [000290]   ASG       => $2e3 {2e3}

***** BB10, STMT00063(after)
N012 ( 21, 24) [000290] -ACXG---R---              *  ASG       ref    $2e3
N011 (  1,  1) [000289] D------N----              +--*  LCL_VAR   ref    V24 tmp18        d:2 $2e3
N010 ( 21, 24) [000281] --CXG-------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths $2e3
N006 (  4, 12) [000383] #---G------- arg1 in rdx     +--*  IND       ref    $1e0
N005 (  2, 10) [000382] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*.csproj" $18f
N007 (  1,  1) [000077] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>
N008 (  1,  1) [000280] ------------ arg3 in r9      +--*  LCL_VAR   ref    V23 tmp17        u:2 (last use) <l:$4c5, c:$2de>
N009 (  1,  1) [000279] ------------ arg2 in r8      \--*  CNS_INT   int    1 $46

---------

***** BB10, STMT00062(before)
N010 ( 20, 15) [000288] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
N007 (  4,  4) [000286] ---XG------- arg1 in rdx  +--*  IND       int   
N006 (  2,  2) [000389] -------N----              |  \--*  ADD       byref 
N004 (  1,  1) [000285] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2
N005 (  1,  1) [000388] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size]
N008 (  1,  1) [000076] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         u:2
N009 (  1,  1) [000287] ------------ arg2 in r8   \--*  LCL_VAR   ref    V24 tmp18        u:2 (last use)

N001 [000391]   ARGPLACE  => $2e6 {2e6}
N002 [000390]   ARGPLACE  => $409 {409}
N003 [000392]   ARGPLACE  => $2e7 {2e7}
N004 [000285]   LCL_VAR   V01 loc0         u:2 => $1c1 {JitNew($182, $103)}
N005 [000388]   CNS_INT   16 field offset Fseq[_size] => $342 {LngCns:  16}
N006 [000389]   ADD       => $383 {ADD($1c1, $342)}
  VNApplySelectors:
    VNForHandle(_size) is $190, fieldType is int
    VNForMapSelect($2e4, $190):int returns $249 {$2e4[$190]}
    VNForMapSelect($249, $1c1):int returns $24a {$249[$1c1]}
N007 [000286]   IND       => <l:$24c {norm=$24a {$249[$1c1]}, exc=$1e1 {NullPtrExc($1c1)}}, c:$24b {norm=$40a {40a}, exc=$1e1 {NullPtrExc($1c1)}}>
N008 [000076]   LCL_VAR   V01 loc0         u:2 => $1c1 {JitNew($182, $103)}
N009 [000287]   LCL_VAR   V24 tmp18        u:2 (last use) => $2e3 {2e3}
VN of ARGPLACE tree [000390] updated to $1c1 {JitNew($182, $103)}
VN of ARGPLACE tree [000392] updated to <l:$24c {norm=$24a {$249[$1c1]}, exc=$1e1 {NullPtrExc($1c1)}}, c:$24b {norm=$40a {40a}, exc=$1e1 {NullPtrExc($1c1)}}>
  fgCurMemoryVN[GcHeap] assigned for CALL at [000288] to VN: $2e8.
N010 [000288]   CALL      => $VN.Void

***** BB10, STMT00062(after)
N010 ( 20, 15) [000288] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange $VN.Void
N007 (  4,  4) [000286] ---XG------- arg1 in rdx  +--*  IND       int    <l:$24c, c:$24b>
N006 (  2,  2) [000389] -------N----              |  \--*  ADD       byref  $383
N004 (  1,  1) [000285] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N005 (  1,  1) [000388] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size] $342
N008 (  1,  1) [000076] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N009 (  1,  1) [000287] ------------ arg2 in r8   \--*  LCL_VAR   ref    V24 tmp18        u:2 (last use) $2e3

---------

***** BB10, STMT00021(before)
N010 ( 21, 30) [000091] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000090] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:2
N008 ( 21, 30) [000089] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 18) [000088] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000086] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
N004 (  1,  1) [000087] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35
N007 (  4, 12) [000084] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000395] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1]

N001 [000393]   ARGPLACE  => $446 {446}
N002 [000394]   ARGPLACE  => $40b {40b}
N003 [000086]   CNS_INT   0x7ffc7e4c17e0 => $345 {LngCns:  0x7ffc7e4c17e0}
N004 [000087]   CNS_INT   35 => $47 {IntCns 35}
VN of ARGPLACE tree [000393] updated to $345 {LngCns:  0x7ffc7e4c17e0}
VN of ARGPLACE tree [000394] updated to $47 {IntCns 35}
N005 [000088]   CALL help => $305 {norm=$304 {GetsharedNongcstaticBase($345, $47)}, exc=$1d3 {HelperMultipleExc()}}
N006 [000395]   CNS_INT(h) 0xd1ffab1e static Fseq[<>9__2_1] => $191 {Hnd const: 0x00000000D1FFAB1E}
N007 [000084]   IND       => <l:$4c6 {ByrefExposedLoad($48, $191, $2e8)}, c:$2e9 {2e9}>
N008 [000089]   COMMA     => <l:$1e3 {norm=$4c6 {ByrefExposedLoad($48, $191, $2e8)}, exc=$1d3 {HelperMultipleExc()}}, c:$1e2 {norm=$2e9 {2e9}, exc=$1d3 {HelperMultipleExc()}}>
N009 [000090]   LCL_VAR   V12 tmp6         d:2 => <l:$4c6 {ByrefExposedLoad($48, $191, $2e8)}, c:$2e9 {2e9}>
N010 [000091]   ASG       => <l:$1e3 {norm=$4c6 {ByrefExposedLoad($48, $191, $2e8)}, exc=$1d3 {HelperMultipleExc()}}, c:$1e2 {norm=$2e9 {2e9}, exc=$1d3 {HelperMultipleExc()}}>

***** BB10, STMT00021(after)
N010 ( 21, 30) [000091] -ACXG---R---              *  ASG       ref    <l:$1e3, c:$1e2>
N009 (  1,  1) [000090] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:2 <l:$4c6, c:$2e9>
N008 ( 21, 30) [000089] --CXG-------              \--*  COMMA     ref    <l:$1e3, c:$1e2>
N005 ( 17, 18) [000088] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
N003 (  2, 10) [000086] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0 $345
N004 (  1,  1) [000087] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35 $47
N007 (  4, 12) [000084] n---G-------                 \--*  IND       ref    <l:$4c6, c:$2e9>
N006 (  2, 10) [000395] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] $191

---------

***** BB10, STMT00023(before)
N003 (  1,  3) [000098] -A------R---              *  ASG       ref   
N002 (  1,  1) [000097] D------N----              +--*  LCL_VAR   ref    V13 tmp7         d:2
N001 (  1,  1) [000082] ------------              \--*  LCL_VAR   ref    V01 loc0         u:2

N001 [000082]   LCL_VAR   V01 loc0         u:2 => $1c1 {JitNew($182, $103)}
N002 [000097]   LCL_VAR   V13 tmp7         d:2 => $1c1 {JitNew($182, $103)}
N003 [000098]   ASG       => $1c1 {JitNew($182, $103)}

***** BB10, STMT00023(after)
N003 (  1,  3) [000098] -A------R---              *  ASG       ref    $1c1
N002 (  1,  1) [000097] D------N----              +--*  LCL_VAR   ref    V13 tmp7         d:2 $1c1
N001 (  1,  1) [000082] ------------              \--*  LCL_VAR   ref    V01 loc0         u:2 $1c1

---------

***** BB10, STMT00024(before)
N003 (  1,  3) [000101] -A------R---              *  ASG       ref   
N002 (  1,  1) [000100] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:2
N001 (  1,  1) [000083] ------------              \--*  LCL_VAR   ref    V05 loc4         u:2 (last use)

N001 [000083]   LCL_VAR   V05 loc4         u:2 (last use) => $2db {2db}
N002 [000100]   LCL_VAR   V14 tmp8         d:2 => $2db {2db}
N003 [000101]   ASG       => $2db {2db}

***** BB10, STMT00024(after)
N003 (  1,  3) [000101] -A------R---              *  ASG       ref    $2db
N002 (  1,  1) [000100] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:2 $2db
N001 (  1,  1) [000083] ------------              \--*  LCL_VAR   ref    V05 loc4         u:2 (last use) $2db

---------

***** BB10, STMT00025(before)
N003 (  1,  3) [000104] -A------R---              *  ASG       ref   
N002 (  1,  1) [000103] D------N----              +--*  LCL_VAR   ref    V15 tmp9         d:2
N001 (  1,  1) [000092] ------------              \--*  LCL_VAR   ref    V12 tmp6         u:2

N001 [000092]   LCL_VAR   V12 tmp6         u:2 => <l:$4c6 {ByrefExposedLoad($48, $191, $2e8)}, c:$2e9 {2e9}>
N002 [000103]   LCL_VAR   V15 tmp9         d:2 => <l:$4c6 {ByrefExposedLoad($48, $191, $2e8)}, c:$2e9 {2e9}>
N003 [000104]   ASG       => <l:$4c6 {ByrefExposedLoad($48, $191, $2e8)}, c:$2e9 {2e9}>

***** BB10, STMT00025(after)
N003 (  1,  3) [000104] -A------R---              *  ASG       ref    <l:$4c6, c:$2e9>
N002 (  1,  1) [000103] D------N----              +--*  LCL_VAR   ref    V15 tmp9         d:2 <l:$4c6, c:$2e9>
N001 (  1,  1) [000092] ------------              \--*  LCL_VAR   ref    V12 tmp6         u:2 <l:$4c6, c:$2e9>

---------

***** BB10, STMT00022(before)
N004 (  5,  5) [000096] ------------              *  JTRUE     void  
N003 (  3,  3) [000095] J------N----              \--*  NE        int   
N001 (  1,  1) [000093] ------------                 +--*  LCL_VAR   ref    V12 tmp6         u:2 (last use)
N002 (  1,  1) [000094] ------------                 \--*  CNS_INT   ref    null

N001 [000093]   LCL_VAR   V12 tmp6         u:2 (last use) => <l:$4c6 {ByrefExposedLoad($48, $191, $2e8)}, c:$2e9 {2e9}>
N002 [000094]   CNS_INT   null => $VN.Null
N003 [000095]   NE        => <l:$24e {NE($4c6, $0)}, c:$24d {NE($2e9, $0)}>

***** BB10, STMT00022(after)
N004 (  5,  5) [000096] ------------              *  JTRUE     void  
N003 (  3,  3) [000095] J------N----              \--*  NE        int    <l:$24e, c:$24d>
N001 (  1,  1) [000093] ------------                 +--*  LCL_VAR   ref    V12 tmp6         u:2 (last use) <l:$4c6, c:$2e9>
N002 (  1,  1) [000094] ------------                 \--*  CNS_INT   ref    null $VN.Null

finish(BB10).
   Succ(BB11).
     Not yet completed.
     All preds complete, adding to allDone.
   Succ(BB13).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
       Was necessary.
The SSA definition for ByrefExposed (#12) at start of BB11 is $2e8 {2e8}
The SSA definition for GcHeap (#12) at start of BB11 is $2e8 {2e8}

***** BB11, STMT00029(before)
N005 ( 16, 16) [000131] -AC-----R---              *  ASG       ref   
N004 (  1,  1) [000130] D------N----              +--*  LCL_VAR   ref    V16 tmp10        d:2
N003 ( 16, 16) [000129] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST
N002 (  2, 10) [000128] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token

N001 [000396]   ARGPLACE  => $447 {447}
N002 [000128]   CNS_INT(h) 0xd1ffab1e token => $192 {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000396] updated to $192 {Hnd const: 0x00000000D1FFAB1E}
N003 [000129]   CALL help => $1e4 {JitNew($192, $2ee)}
N004 [000130]   LCL_VAR   V16 tmp10        d:2 => $1e4 {JitNew($192, $2ee)}
N005 [000131]   ASG       => $1e4 {JitNew($192, $2ee)}

***** BB11, STMT00029(after)
N005 ( 16, 16) [000131] -AC-----R---              *  ASG       ref    $1e4
N004 (  1,  1) [000130] D------N----              +--*  LCL_VAR   ref    V16 tmp10        d:2 $1e4
N003 ( 16, 16) [000129] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1e4
N002 (  2, 10) [000128] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $192

---------

***** BB11, STMT00068(before)
N010 ( 21, 30) [000305] -ACXG---R---              *  ASG       ref   
N009 (  1,  1) [000304] D------N----              +--*  LCL_VAR   ref    V25 tmp19        d:2
N008 ( 21, 30) [000126] --CXG-------              \--*  COMMA     ref   
N005 ( 17, 18) [000125] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000123] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0
N004 (  1,  1) [000124] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35
N007 (  4, 12) [000121] n---G-------                 \--*  IND       ref   
N006 (  2, 10) [000399] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9]

N001 [000397]   ARGPLACE  => $448 {448}
N002 [000398]   ARGPLACE  => $40c {40c}
N003 [000123]   CNS_INT   0x7ffc7e4c17e0 => $345 {LngCns:  0x7ffc7e4c17e0}
N004 [000124]   CNS_INT   35 => $47 {IntCns 35}
VN of ARGPLACE tree [000397] updated to $345 {LngCns:  0x7ffc7e4c17e0}
VN of ARGPLACE tree [000398] updated to $47 {IntCns 35}
N005 [000125]   CALL help => $305 {norm=$304 {GetsharedNongcstaticBase($345, $47)}, exc=$1d3 {HelperMultipleExc()}}
N006 [000399]   CNS_INT(h) 0xd1ffab1e static Fseq[<>9] => $188 {Hnd const: 0x00000000D1FFAB1E}
N007 [000121]   IND       => <l:$4c7 {ByrefExposedLoad($48, $188, $2e8)}, c:$2f0 {2f0}>
N008 [000126]   COMMA     => <l:$1e6 {norm=$4c7 {ByrefExposedLoad($48, $188, $2e8)}, exc=$1d3 {HelperMultipleExc()}}, c:$1e5 {norm=$2f0 {2f0}, exc=$1d3 {HelperMultipleExc()}}>
N009 [000304]   LCL_VAR   V25 tmp19        d:2 => <l:$4c7 {ByrefExposedLoad($48, $188, $2e8)}, c:$2f0 {2f0}>
N010 [000305]   ASG       => <l:$1e6 {norm=$4c7 {ByrefExposedLoad($48, $188, $2e8)}, exc=$1d3 {HelperMultipleExc()}}, c:$1e5 {norm=$2f0 {2f0}, exc=$1d3 {HelperMultipleExc()}}>

***** BB11, STMT00068(after)
N010 ( 21, 30) [000305] -ACXG---R---              *  ASG       ref    <l:$1e6, c:$1e5>
N009 (  1,  1) [000304] D------N----              +--*  LCL_VAR   ref    V25 tmp19        d:2 <l:$4c7, c:$2f0>
N008 ( 21, 30) [000126] --CXG-------              \--*  COMMA     ref    <l:$1e6, c:$1e5>
N005 ( 17, 18) [000125] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
N003 (  2, 10) [000123] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0 $345
N004 (  1,  1) [000124] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35 $47
N007 (  4, 12) [000121] n---G-------                 \--*  IND       ref    <l:$4c7, c:$2f0>
N006 (  2, 10) [000399] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] $188

---------

***** BB11, STMT00064(before)
N004 (  5,  5) [000295] ------------              *  JTRUE     void  
N003 (  3,  3) [000294] J------N----              \--*  EQ        int   
N001 (  1,  1) [000292] ------------                 +--*  LCL_VAR   ref    V25 tmp19        u:2
N002 (  1,  1) [000293] ------------                 \--*  CNS_INT   ref    null

N001 [000292]   LCL_VAR   V25 tmp19        u:2 => <l:$4c7 {ByrefExposedLoad($48, $188, $2e8)}, c:$2f0 {2f0}>
N002 [000293]   CNS_INT   null => $VN.Null
N003 [000294]   EQ        => <l:$250 {EQ($4c7, $0)}, c:$24f {EQ($2f0, $0)}>

***** BB11, STMT00064(after)
N004 (  5,  5) [000295] ------------              *  JTRUE     void  
N003 (  3,  3) [000294] J------N----              \--*  EQ        int    <l:$250, c:$24f>
N001 (  1,  1) [000292] ------------                 +--*  LCL_VAR   ref    V25 tmp19        u:2 <l:$4c7, c:$2f0>
N002 (  1,  1) [000293] ------------                 \--*  CNS_INT   ref    null $VN.Null

finish(BB11).
   Succ(BB12).
     Not yet completed.
     All preds complete, adding to allDone.
   Succ(BB16).
     Not yet completed.
     All preds complete, adding to allDone.
  Building phi application: $4b = SSA# 17.
  Building phi application: $4c = SSA# 15.
  Building phi application: $1e7 = phi($4c, $4b).
The SSA definition for GcHeap (#9) at start of BB16 is $1e8 {PhiMemoryDef($193, $1e7)}

***** BB16, STMT00067(before)
N001 ( 14,  5) [000303] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance

  fgCurMemoryVN[GcHeap] assigned for CALL at [000303] to VN: $109.
N001 [000303]   CALL      => $VN.Void

***** BB16, STMT00067(after)
N001 ( 14,  5) [000303] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance $VN.Void

finish(BB16).
The SSA definition for ByrefExposed (#15) at start of BB12 is $2e8 {2e8}
The SSA definition for GcHeap (#15) at start of BB12 is $2e8 {2e8}

***** BB12, STMT00065(before)
N006 (  6,  6) [000298] -A-XG-------              *  ASG       ref   
N004 (  4,  4) [000297] D--XG--N----              +--*  IND       ref   
N003 (  2,  2) [000401] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000132] ------------              |     +--*  LCL_VAR   ref    V16 tmp10        u:2
N002 (  1,  1) [000400] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target]
N005 (  1,  1) [000296] ------------              \--*  LCL_VAR   ref    V25 tmp19        u:2 (last use)

N001 [000132]   LCL_VAR   V16 tmp10        u:2 => $1e4 {JitNew($192, $2ee)}
N002 [000400]   CNS_INT   8 field offset Fseq[_target] => $343 {LngCns:  8}
N003 [000401]   ADD       => $384 {ADD($1e4, $343)}
N005 [000296]   LCL_VAR   V25 tmp19        u:2 (last use) => <l:$4c7 {ByrefExposedLoad($48, $188, $2e8)}, c:$2f0 {2f0}>
  VNApplySelectors:
    VNForHandle(_target) is $189, fieldType is ref
    VNForMapSelect($2e8, $189):ref returns $1e9 {$2e8[$189]}
    VNForMapSelect($1e9, $1e4):ref returns $1ea {$1e9[$1e4]}
    VNForMapStore($1e9, $1e4, $4c7):ref returns $4c8 {$1e9[$1e4 := $4c7]}
  VNApplySelectorsAssign:
    VNForHandle(_target) is $189, fieldType is ref
    VNForMapStore($2e8, $189, $4c8):ref returns $4c9 {$2e8[$189 := $4c8]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000298] to VN: $4c9.
N006 [000298]   ASG       => $VN.Void

***** BB12, STMT00065(after)
N006 (  6,  6) [000298] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000297] D--XG--N----              +--*  IND       ref    $4c7
N003 (  2,  2) [000401] -------N----              |  \--*  ADD       byref  $384
N001 (  1,  1) [000132] ------------              |     +--*  LCL_VAR   ref    V16 tmp10        u:2 $1e4
N002 (  1,  1) [000400] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $343
N005 (  1,  1) [000296] ------------              \--*  LCL_VAR   ref    V25 tmp19        u:2 (last use) <l:$4c7, c:$2f0>

---------

***** BB12, STMT00066(before)
N006 (  7, 15) [000302] -A-XG-------              *  ASG       long  
N004 (  4,  4) [000301] D--XG--N----              +--*  IND       long  
N003 (  2,  2) [000403] -------N----              |  \--*  ADD       byref 
N001 (  1,  1) [000299] ------------              |     +--*  LCL_VAR   ref    V16 tmp10        u:2
N002 (  1,  1) [000402] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr]
N005 (  2, 10) [000127] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn

N001 [000299]   LCL_VAR   V16 tmp10        u:2 => $1e4 {JitNew($192, $2ee)}
N002 [000402]   CNS_INT   24 field offset Fseq[_methodPtr] => $346 {LngCns:  24}
N003 [000403]   ADD       => $385 {ADD($1e4, $346)}
N005 [000127]   CNS_INT(h) 0xd1ffab1e ftn => $194 {Hnd const: 0x00000000D1FFAB1E}
  VNApplySelectors:
    VNForHandle(_methodPtr) is $18b, fieldType is long
      AX2: $18b != $189 ==> select([$4c9]store($2e8, $189, $4c8), $18b) ==> select($2e8, $18b).
    VNForMapSelect($4c9, $18b):long returns $30a {$2e8[$18b]}
    VNForMapSelect($30a, $1e4):long returns $30b {$30a[$1e4]}
    VNForMapStore($30a, $1e4, $194):long returns $502 {$30a[$1e4 := $194]}
  VNApplySelectorsAssign:
    VNForHandle(_methodPtr) is $18b, fieldType is long
    VNForMapStore($4c9, $18b, $502):long returns $503 {$4c9[$18b := $502]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000302] to VN: $503.
N006 [000302]   ASG       => $VN.Void

***** BB12, STMT00066(after)
N006 (  7, 15) [000302] -A-XG-------              *  ASG       long   $VN.Void
N004 (  4,  4) [000301] D--XG--N----              +--*  IND       long   $194
N003 (  2,  2) [000403] -------N----              |  \--*  ADD       byref  $385
N001 (  1,  1) [000299] ------------              |     +--*  LCL_VAR   ref    V16 tmp10        u:2 $1e4
N002 (  1,  1) [000402] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $346
N005 (  2, 10) [000127] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $194

---------

***** BB12, STMT00031(before)
N010 ( 23, 32) [000142] -ACXG-------              *  COMMA     void  
N005 ( 17, 18) [000141] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
N003 (  2, 10) [000139] ------------ arg0 in rcx  |  +--*  CNS_INT   long   0x7ffc7e4c17e0
N004 (  1,  1) [000140] ------------ arg1 in rdx  |  \--*  CNS_INT   int    35
N009 (  6, 14) [000137] -A--G-------              \--*  ASG       ref   
N007 (  4, 12) [000136] n---G--N----                 +--*  IND       ref   
N006 (  2, 10) [000406] I-----------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1]
N008 (  1,  1) [000135] ------------                 \--*  LCL_VAR   ref    V16 tmp10        u:2

N001 [000404]   ARGPLACE  => $449 {449}
N002 [000405]   ARGPLACE  => $40d {40d}
N003 [000139]   CNS_INT   0x7ffc7e4c17e0 => $345 {LngCns:  0x7ffc7e4c17e0}
N004 [000140]   CNS_INT   35 => $47 {IntCns 35}
VN of ARGPLACE tree [000404] updated to $345 {LngCns:  0x7ffc7e4c17e0}
VN of ARGPLACE tree [000405] updated to $47 {IntCns 35}
N005 [000141]   CALL help => $305 {norm=$304 {GetsharedNongcstaticBase($345, $47)}, exc=$1d3 {HelperMultipleExc()}}
N006 [000406]   CNS_INT(h) 0xd1ffab1e static Fseq[<>9__2_1] => $191 {Hnd const: 0x00000000D1FFAB1E}
N008 [000135]   LCL_VAR   V16 tmp10        u:2 => $1e4 {JitNew($192, $2ee)}
  fgCurMemoryVN[GcHeap] assigned for assign-of-IND at [000137] to VN: $2f2.
N009 [000137]   ASG       => $VN.Void
N010 [000142]   COMMA     => $1db {norm=$3 {3}, exc=$1d3 {HelperMultipleExc()}}

***** BB12, STMT00031(after)
N010 ( 23, 32) [000142] -ACXG-------              *  COMMA     void   $1db
N005 ( 17, 18) [000141] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
N003 (  2, 10) [000139] ------------ arg0 in rcx  |  +--*  CNS_INT   long   0x7ffc7e4c17e0 $345
N004 (  1,  1) [000140] ------------ arg1 in rdx  |  \--*  CNS_INT   int    35 $47
N009 (  6, 14) [000137] -A--G-------              \--*  ASG       ref    $VN.Void
N007 (  4, 12) [000136] n---G--N----                 +--*  IND       ref    $1e4
N006 (  2, 10) [000406] I-----------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] $191
N008 (  1,  1) [000135] ------------                 \--*  LCL_VAR   ref    V16 tmp10        u:2 $1e4

---------

***** BB12, STMT00032(before)
N003 (  1,  3) [000148] -A------R---              *  ASG       ref   
N002 (  1,  1) [000147] D------N----              +--*  LCL_VAR   ref    V15 tmp9         d:4
N001 (  1,  1) [000134] ------------              \--*  LCL_VAR   ref    V16 tmp10        u:2 (last use)

N001 [000134]   LCL_VAR   V16 tmp10        u:2 (last use) => $1e4 {JitNew($192, $2ee)}
N002 [000147]   LCL_VAR   V15 tmp9         d:4 => $1e4 {JitNew($192, $2ee)}
N003 [000148]   ASG       => $1e4 {JitNew($192, $2ee)}

***** BB12, STMT00032(after)
N003 (  1,  3) [000148] -A------R---              *  ASG       ref    $1e4
N002 (  1,  1) [000147] D------N----              +--*  LCL_VAR   ref    V15 tmp9         d:4 $1e4
N001 (  1,  1) [000134] ------------              \--*  LCL_VAR   ref    V16 tmp10        u:2 (last use) $1e4

finish(BB12).
   Succ(BB13).
     Not yet completed.
     All preds complete, adding to allDone.
SSA PHI definition: set VN of local 15/3 to $4ca {PhiDef($f, $3, $243)} .
  Building phi application: $4d = SSA# 16.
  Building phi application: $4e = SSA# 12.
  Building phi application: $1eb = phi($4e, $4d).
The SSA definition for GcHeap (#13) at start of BB13 is $1ec {PhiMemoryDef($195, $1eb)}

***** BB13, STMT00070(before)
N009 ( 18, 20) [000313] -ACXG---R---              *  ASG       ref   
N008 (  1,  1) [000312] D------N----              +--*  LCL_VAR   ref    V27 tmp21        d:2
N007 ( 18, 20) [000112] --CXG-------              \--*  CALL      ref    System.Linq.Enumerable.SelectMany
N004 (  1,  1) [000111] ------------ arg2 in r8      +--*  LCL_VAR   ref    V15 tmp9         u:3 (last use)
N005 (  1,  1) [000110] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V14 tmp8         u:2 (last use)
N006 (  2, 10) [000113] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method

N001 [000409]   ARGPLACE  => $44a {44a}
N002 [000408]   ARGPLACE  => $2f4 {2f4}
N003 [000407]   ARGPLACE  => $2f5 {2f5}
N004 [000111]   LCL_VAR   V15 tmp9         u:3 (last use) => $4ca {PhiDef($f, $3, $243)}
N005 [000110]   LCL_VAR   V14 tmp8         u:2 (last use) => $2db {2db}
N006 [000113]   CNS_INT(h) 0xd1ffab1e method => $196 {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000409] updated to $196 {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000408] updated to $2db {2db}
VN of ARGPLACE tree [000407] updated to $4ca {PhiDef($f, $3, $243)}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000112] to VN: $2f7.
N007 [000112]   CALL      => $2f6 {2f6}
N008 [000312]   LCL_VAR   V27 tmp21        d:2 => $2f6 {2f6}
N009 [000313]   ASG       => $2f6 {2f6}

***** BB13, STMT00070(after)
N009 ( 18, 20) [000313] -ACXG---R---              *  ASG       ref    $2f6
N008 (  1,  1) [000312] D------N----              +--*  LCL_VAR   ref    V27 tmp21        d:2 $2f6
N007 ( 18, 20) [000112] --CXG-------              \--*  CALL      ref    System.Linq.Enumerable.SelectMany $2f6
N004 (  1,  1) [000111] ------------ arg2 in r8      +--*  LCL_VAR   ref    V15 tmp9         u:3 (last use) $4ca
N005 (  1,  1) [000110] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V14 tmp8         u:2 (last use) $2db
N006 (  2, 10) [000113] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $196

---------

***** BB13, STMT00069(before)
N010 ( 20, 15) [000311] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange
N007 (  4,  4) [000309] ---XG------- arg1 in rdx  +--*  IND       int   
N006 (  2,  2) [000411] -------N----              |  \--*  ADD       byref 
N004 (  1,  1) [000308] ------------              |     +--*  LCL_VAR   ref    V13 tmp7         u:2
N005 (  1,  1) [000410] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size]
N008 (  1,  1) [000109] ------------ this in rcx  +--*  LCL_VAR   ref    V13 tmp7         u:2 (last use)
N009 (  1,  1) [000310] ------------ arg2 in r8   \--*  LCL_VAR   ref    V27 tmp21        u:2 (last use)

N001 [000413]   ARGPLACE  => $2f9 {2f9}
N002 [000412]   ARGPLACE  => $40e {40e}
N003 [000414]   ARGPLACE  => $2fa {2fa}
N004 [000308]   LCL_VAR   V13 tmp7         u:2 => $1c1 {JitNew($182, $103)}
N005 [000410]   CNS_INT   16 field offset Fseq[_size] => $342 {LngCns:  16}
N006 [000411]   ADD       => $383 {ADD($1c1, $342)}
  VNApplySelectors:
    VNForHandle(_size) is $190, fieldType is int
    VNForMapSelect($2f7, $190):int returns $251 {$2f7[$190]}
    VNForMapSelect($251, $1c1):int returns $252 {$251[$1c1]}
N007 [000309]   IND       => <l:$254 {norm=$252 {$251[$1c1]}, exc=$1e1 {NullPtrExc($1c1)}}, c:$253 {norm=$40f {40f}, exc=$1e1 {NullPtrExc($1c1)}}>
N008 [000109]   LCL_VAR   V13 tmp7         u:2 (last use) => $1c1 {JitNew($182, $103)}
N009 [000310]   LCL_VAR   V27 tmp21        u:2 (last use) => $2f6 {2f6}
VN of ARGPLACE tree [000412] updated to $1c1 {JitNew($182, $103)}
VN of ARGPLACE tree [000414] updated to <l:$254 {norm=$252 {$251[$1c1]}, exc=$1e1 {NullPtrExc($1c1)}}, c:$253 {norm=$40f {40f}, exc=$1e1 {NullPtrExc($1c1)}}>
  fgCurMemoryVN[GcHeap] assigned for CALL at [000311] to VN: $2fb.
N010 [000311]   CALL      => $VN.Void

***** BB13, STMT00069(after)
N010 ( 20, 15) [000311] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange $VN.Void
N007 (  4,  4) [000309] ---XG------- arg1 in rdx  +--*  IND       int    <l:$254, c:$253>
N006 (  2,  2) [000411] -------N----              |  \--*  ADD       byref  $383
N004 (  1,  1) [000308] ------------              |     +--*  LCL_VAR   ref    V13 tmp7         u:2 $1c1
N005 (  1,  1) [000410] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size] $342
N008 (  1,  1) [000109] ------------ this in rcx  +--*  LCL_VAR   ref    V13 tmp7         u:2 (last use) $1c1
N009 (  1,  1) [000310] ------------ arg2 in r8   \--*  LCL_VAR   ref    V27 tmp21        u:2 (last use) $2f6

finish(BB13).
   Succ(BB14).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
       Was necessary.
The SSA definition for ByrefExposed (#6) at start of BB03 is $2c5 {2c5}
The SSA definition for GcHeap (#6) at start of BB03 is $2c5 {2c5}

***** BB03, STMT00043(before)
N011 ( 11, 11) [000204] -A-XG---R---              *  ASG       int   
N010 (  4,  4) [000203] D--XG--N----              +--*  IND       int   
N009 (  2,  2) [000341] -------N----              |  \--*  ADD       byref 
N007 (  1,  1) [000177] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2
N008 (  1,  1) [000340] ------------              |     \--*  CNS_INT   long   20 field offset Fseq[_version]
N006 (  6,  6) [000202] ---XG-------              \--*  ADD       int   
N004 (  4,  4) [000200] ---XG-------                 +--*  IND       int   
N003 (  2,  2) [000343] -------N----                 |  \--*  ADD       byref 
N001 (  1,  1) [000199] ------------                 |     +--*  LCL_VAR   ref    V01 loc0         u:2
N002 (  1,  1) [000342] ------------                 |     \--*  CNS_INT   long   20 field offset Fseq[_version]
N005 (  1,  1) [000201] ------------                 \--*  CNS_INT   int    1

N001 [000199]   LCL_VAR   V01 loc0         u:2 => $1c1 {JitNew($182, $103)}
N002 [000342]   CNS_INT   20 field offset Fseq[_version] => $348 {LngCns:  20}
N003 [000343]   ADD       => $386 {ADD($1c1, $348)}
  VNApplySelectors:
    VNForHandle(_version) is $197, fieldType is int
    VNForMapSelect($2c5, $197):int returns $255 {$2c5[$197]}
    VNForMapSelect($255, $1c1):int returns $256 {$255[$1c1]}
N004 [000200]   IND       => <l:$258 {norm=$256 {$255[$1c1]}, exc=$1e1 {NullPtrExc($1c1)}}, c:$257 {norm=$410 {410}, exc=$1e1 {NullPtrExc($1c1)}}>
N005 [000201]   CNS_INT   1 => $46 {IntCns 1}
N006 [000202]   ADD       => <l:$25c {norm=$25a {ADD($46, $256)}, exc=$1e1 {NullPtrExc($1c1)}}, c:$25b {norm=$259 {ADD($46, $410)}, exc=$1e1 {NullPtrExc($1c1)}}>
N007 [000177]   LCL_VAR   V01 loc0         u:2 => $1c1 {JitNew($182, $103)}
N008 [000340]   CNS_INT   20 field offset Fseq[_version] => $348 {LngCns:  20}
N009 [000341]   ADD       => $386 {ADD($1c1, $348)}
  VNApplySelectors:
    VNForHandle(_version) is $197, fieldType is int
    VNForMapSelect($2c5, $197):int returns $255 {$2c5[$197]}
    VNForMapSelect($255, $1c1):int returns $256 {$255[$1c1]}
    VNForMapStore($255, $1c1, $25a):int returns $281 {$255[$1c1 := $25a]}
  VNApplySelectorsAssign:
    VNForHandle(_version) is $197, fieldType is int
    VNForMapStore($2c5, $197, $281):int returns $282 {$2c5[$197 := $281]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000204] to VN: $282.
N011 [000204]   ASG       => $VN.Void

***** BB03, STMT00043(after)
N011 ( 11, 11) [000204] -A-XG---R---              *  ASG       int    $VN.Void
N010 (  4,  4) [000203] D--XG--N----              +--*  IND       int    $25a
N009 (  2,  2) [000341] -------N----              |  \--*  ADD       byref  $386
N007 (  1,  1) [000177] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N008 (  1,  1) [000340] ------------              |     \--*  CNS_INT   long   20 field offset Fseq[_version] $348
N006 (  6,  6) [000202] ---XG-------              \--*  ADD       int    <l:$25c, c:$25b>
N004 (  4,  4) [000200] ---XG-------                 +--*  IND       int    <l:$258, c:$257>
N003 (  2,  2) [000343] -------N----                 |  \--*  ADD       byref  $386
N001 (  1,  1) [000199] ------------                 |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N002 (  1,  1) [000342] ------------                 |     \--*  CNS_INT   long   20 field offset Fseq[_version] $348
N005 (  1,  1) [000201] ------------                 \--*  CNS_INT   int    1 $46

---------

***** BB03, STMT00044(before)
N006 (  4,  4) [000208] -A-XG---R---              *  ASG       ref   
N005 (  1,  1) [000207] D------N----              +--*  LCL_VAR   ref    V18 tmp12        d:2
N004 (  4,  4) [000206] ---XG-------              \--*  IND       ref   
N003 (  2,  2) [000345] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000205] ------------                    +--*  LCL_VAR   ref    V01 loc0         u:2
N002 (  1,  1) [000344] ------------                    \--*  CNS_INT   long   8 field offset Fseq[_items]

N001 [000205]   LCL_VAR   V01 loc0         u:2 => $1c1 {JitNew($182, $103)}
N002 [000344]   CNS_INT   8 field offset Fseq[_items] => $343 {LngCns:  8}
N003 [000345]   ADD       => $387 {ADD($1c1, $343)}
  VNApplySelectors:
    VNForHandle(_items) is $198, fieldType is ref
      AX2: $198 != $197 ==> select([$282]store($2c5, $197, $281), $198) ==> select($2c5, $198).
    VNForMapSelect($282, $198):ref returns $1ed {$2c5[$198]}
    VNForMapSelect($1ed, $1c1):ref returns $1ee {$1ed[$1c1]}
N004 [000206]   IND       => <l:$1f0 {norm=$1ee {$1ed[$1c1]}, exc=$1e1 {NullPtrExc($1c1)}}, c:$1ef {norm=$2fc {2fc}, exc=$1e1 {NullPtrExc($1c1)}}>
N005 [000207]   LCL_VAR   V18 tmp12        d:2 => <l:$1ee {$1ed[$1c1]}, c:$2fc {2fc}>
N006 [000208]   ASG       => <l:$1f0 {norm=$1ee {$1ed[$1c1]}, exc=$1e1 {NullPtrExc($1c1)}}, c:$1ef {norm=$2fc {2fc}, exc=$1e1 {NullPtrExc($1c1)}}>

***** BB03, STMT00044(after)
N006 (  4,  4) [000208] -A-XG---R---              *  ASG       ref    <l:$1f0, c:$1ef>
N005 (  1,  1) [000207] D------N----              +--*  LCL_VAR   ref    V18 tmp12        d:2 <l:$1ee, c:$2fc>
N004 (  4,  4) [000206] ---XG-------              \--*  IND       ref    <l:$1f0, c:$1ef>
N003 (  2,  2) [000345] -------N----                 \--*  ADD       byref  $387
N001 (  1,  1) [000205] ------------                    +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N002 (  1,  1) [000344] ------------                    \--*  CNS_INT   long   8 field offset Fseq[_items] $343

---------

***** BB03, STMT00045(before)
N006 (  4,  4) [000212] -A-XG---R---              *  ASG       int   
N005 (  1,  1) [000211] D------N----              +--*  LCL_VAR   int    V19 tmp13        d:2
N004 (  4,  4) [000210] ---XG-------              \--*  IND       int   
N003 (  2,  2) [000347] -------N----                 \--*  ADD       byref 
N001 (  1,  1) [000209] ------------                    +--*  LCL_VAR   ref    V01 loc0         u:2
N002 (  1,  1) [000346] ------------                    \--*  CNS_INT   long   16 field offset Fseq[_size]

N001 [000209]   LCL_VAR   V01 loc0         u:2 => $1c1 {JitNew($182, $103)}
N002 [000346]   CNS_INT   16 field offset Fseq[_size] => $342 {LngCns:  16}
N003 [000347]   ADD       => $383 {ADD($1c1, $342)}
  VNApplySelectors:
    VNForHandle(_size) is $190, fieldType is int
      AX2: $190 != $197 ==> select([$282]store($2c5, $197, $281), $190) ==> select($2c5, $190).
    VNForMapSelect($282, $190):int returns $25d {$2c5[$190]}
    VNForMapSelect($25d, $1c1):int returns $25e {$25d[$1c1]}
N004 [000210]   IND       => <l:$260 {norm=$25e {$25d[$1c1]}, exc=$1e1 {NullPtrExc($1c1)}}, c:$25f {norm=$411 {411}, exc=$1e1 {NullPtrExc($1c1)}}>
N005 [000211]   LCL_VAR   V19 tmp13        d:2 => <l:$25e {$25d[$1c1]}, c:$411 {411}>
N006 [000212]   ASG       => <l:$260 {norm=$25e {$25d[$1c1]}, exc=$1e1 {NullPtrExc($1c1)}}, c:$25f {norm=$411 {411}, exc=$1e1 {NullPtrExc($1c1)}}>

***** BB03, STMT00045(after)
N006 (  4,  4) [000212] -A-XG---R---              *  ASG       int    <l:$260, c:$25f>
N005 (  1,  1) [000211] D------N----              +--*  LCL_VAR   int    V19 tmp13        d:2 <l:$25e, c:$411>
N004 (  4,  4) [000210] ---XG-------              \--*  IND       int    <l:$260, c:$25f>
N003 (  2,  2) [000347] -------N----                 \--*  ADD       byref  $383
N001 (  1,  1) [000209] ------------                    +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N002 (  1,  1) [000346] ------------                    \--*  CNS_INT   long   16 field offset Fseq[_size] $342

---------

***** BB03, STMT00046(before)
N005 (  7,  7) [000217] ---X--------              *  JTRUE     void  
N004 (  5,  5) [000216] N--X---N-U--              \--*  LE        int   
N002 (  3,  3) [000215] ---X--------                 +--*  ARR_LENGTH int   
N001 (  1,  1) [000214] ------------                 |  \--*  LCL_VAR   ref    V18 tmp12        u:2
N003 (  1,  1) [000213] ------------                 \--*  LCL_VAR   int    V19 tmp13        u:2

N001 [000214]   LCL_VAR   V18 tmp12        u:2 => <l:$1ee {$1ed[$1c1]}, c:$2fc {2fc}>
N002 [000215]   ARR_LENGTH => <l:$262 {norm=$202 {ARR_LENGTH($1ee)}, exc=$1f2 {NullPtrExc($1ee)}}, c:$261 {norm=$201 {ARR_LENGTH($2fc)}, exc=$1f1 {NullPtrExc($2fc)}}>
N003 [000213]   LCL_VAR   V19 tmp13        u:2 => <l:$25e {$25d[$1c1]}, c:$411 {411}>
N004 [000216]   LE        => <l:$266 {norm=$264 {LE_UN($202, $25e)}, exc=$1f2 {NullPtrExc($1ee)}}, c:$265 {norm=$263 {LE_UN($201, $411)}, exc=$1f1 {NullPtrExc($2fc)}}>

***** BB03, STMT00046(after)
N005 (  7,  7) [000217] ---X--------              *  JTRUE     void  
N004 (  5,  5) [000216] N--X---N-U--              \--*  LE        int    <l:$266, c:$265>
N002 (  3,  3) [000215] ---X--------                 +--*  ARR_LENGTH int    <l:$262, c:$261>
N001 (  1,  1) [000214] ------------                 |  \--*  LCL_VAR   ref    V18 tmp12        u:2 <l:$1ee, c:$2fc>
N003 (  1,  1) [000213] ------------                 \--*  LCL_VAR   int    V19 tmp13        u:2 <l:$25e, c:$411>

finish(BB03).
   Succ(BB04).
     Not yet completed.
     All preds complete, adding to allDone.
   Succ(BB05).
     Not yet completed.
     All preds complete, adding to allDone.
The SSA definition for ByrefExposed (#19) at start of BB05 is $282 {$2c5[$197 := $281]}
The SSA definition for GcHeap (#19) at start of BB05 is $282 {$2c5[$197 := $281]}

***** BB05, STMT00047(before)
N005 ( 16, 10) [000219] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize
N003 (  1,  1) [000218] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         u:2
N004 (  1,  1) [000178] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V04 loc3         u:2 (last use)

N001 [000353]   ARGPLACE  => $2fe {2fe}
N002 [000354]   ARGPLACE  => $2ff {2ff}
N003 [000218]   LCL_VAR   V01 loc0         u:2 => $1c1 {JitNew($182, $103)}
N004 [000178]   LCL_VAR   V04 loc3         u:2 (last use) => <l:$1ca {$1c9[$300]}, c:$2c1 {2c1}>
VN of ARGPLACE tree [000354] updated to $1c1 {JitNew($182, $103)}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000219] to VN: $540.
N005 [000219]   CALL      => $VN.Void

***** BB05, STMT00047(after)
N005 ( 16, 10) [000219] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize $VN.Void
N003 (  1,  1) [000218] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N004 (  1,  1) [000178] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>

finish(BB05).
   Succ(BB06).
     Not yet completed.
     Not all preds complete  Adding to notallDone, if necessary...
       Was necessary.
The SSA definition for ByrefExposed (#19) at start of BB04 is $282 {$2c5[$197 := $281]}
The SSA definition for GcHeap (#19) at start of BB04 is $282 {$2c5[$197 := $281]}

***** BB04, STMT00048(before)
N008 (  8,  8) [000225] -A-XG---R---              *  ASG       int   
N007 (  4,  4) [000224] D--XG--N----              +--*  IND       int   
N006 (  2,  2) [000349] -------N----              |  \--*  ADD       byref 
N004 (  1,  1) [000220] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2
N005 (  1,  1) [000348] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size]
N003 (  3,  3) [000223] ------------              \--*  ADD       int   
N001 (  1,  1) [000221] ------------                 +--*  LCL_VAR   int    V19 tmp13        u:2
N002 (  1,  1) [000222] ------------                 \--*  CNS_INT   int    1

N001 [000221]   LCL_VAR   V19 tmp13        u:2 => <l:$25e {$25d[$1c1]}, c:$411 {411}>
N002 [000222]   CNS_INT   1 => $46 {IntCns 1}
N003 [000223]   ADD       => <l:$268 {ADD($46, $25e)}, c:$267 {ADD($46, $411)}>
N004 [000220]   LCL_VAR   V01 loc0         u:2 => $1c1 {JitNew($182, $103)}
N005 [000348]   CNS_INT   16 field offset Fseq[_size] => $342 {LngCns:  16}
N006 [000349]   ADD       => $383 {ADD($1c1, $342)}
  VNApplySelectors:
    VNForHandle(_size) is $190, fieldType is int
      AX2: $190 != $197 ==> select([$282]store($2c5, $197, $281), $190) ==> select($2c5, $190).
    VNForMapSelect($282, $190):int returns $25d {$2c5[$190]}
    VNForMapSelect($25d, $1c1):int returns $25e {$25d[$1c1]}
    VNForMapStore($25d, $1c1, $268):int returns $283 {$25d[$1c1 := $268]}
  VNApplySelectorsAssign:
    VNForHandle(_size) is $190, fieldType is int
    VNForMapStore($282, $190, $283):int returns $284 {$282[$190 := $283]}
  fgCurMemoryVN[GcHeap] assigned for StoreField at [000225] to VN: $284.
N008 [000225]   ASG       => $VN.Void

***** BB04, STMT00048(after)
N008 (  8,  8) [000225] -A-XG---R---              *  ASG       int    $VN.Void
N007 (  4,  4) [000224] D--XG--N----              +--*  IND       int    $268
N006 (  2,  2) [000349] -------N----              |  \--*  ADD       byref  $383
N004 (  1,  1) [000220] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N005 (  1,  1) [000348] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size] $342
N003 (  3,  3) [000223] ------------              \--*  ADD       int    <l:$268, c:$267>
N001 (  1,  1) [000221] ------------                 +--*  LCL_VAR   int    V19 tmp13        u:2 <l:$25e, c:$411>
N002 (  1,  1) [000222] ------------                 \--*  CNS_INT   int    1 $46

---------

***** BB04, STMT00049(before)
N007 ( 17, 11) [000229] --CXG-------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST
N004 (  1,  1) [000226] ------------ arg0 in rcx  +--*  LCL_VAR   ref    V18 tmp12        u:2 (last use)
N005 (  1,  1) [000227] ------------ arg1 in rdx  +--*  LCL_VAR   int    V19 tmp13        u:2 (last use)
N006 (  1,  1) [000228] ------------ arg2 in r8   \--*  LCL_VAR   ref    V04 loc3         u:2 (last use)

N001 [000350]   ARGPLACE  => $541 {541}
N002 [000351]   ARGPLACE  => $413 {413}
N003 [000352]   ARGPLACE  => $542 {542}
N004 [000226]   LCL_VAR   V18 tmp12        u:2 (last use) => <l:$1ee {$1ed[$1c1]}, c:$2fc {2fc}>
N005 [000227]   LCL_VAR   V19 tmp13        u:2 (last use) => <l:$25e {$25d[$1c1]}, c:$411 {411}>
N006 [000228]   LCL_VAR   V04 loc3         u:2 (last use) => <l:$1ca {$1c9[$300]}, c:$2c1 {2c1}>
VN of ARGPLACE tree [000350] updated to <l:$1ee {$1ed[$1c1]}, c:$2fc {2fc}>
VN of ARGPLACE tree [000351] updated to <l:$25e {$25d[$1c1]}, c:$411 {411}>
VN of ARGPLACE tree [000352] updated to <l:$1ca {$1c9[$300]}, c:$2c1 {2c1}>
  fgCurMemoryVN[GcHeap] assigned for HELPER - modifies heap at [000229] to VN: $543.
N007 [000229]   CALL help => $1db {norm=$3 {3}, exc=$1d3 {HelperMultipleExc()}}

***** BB04, STMT00049(after)
N007 ( 17, 11) [000229] --CXG-------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST $1db
N004 (  1,  1) [000226] ------------ arg0 in rcx  +--*  LCL_VAR   ref    V18 tmp12        u:2 (last use) <l:$1ee, c:$2fc>
N005 (  1,  1) [000227] ------------ arg1 in rdx  +--*  LCL_VAR   int    V19 tmp13        u:2 (last use) <l:$25e, c:$411>
N006 (  1,  1) [000228] ------------ arg2 in r8   \--*  LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>

finish(BB04).
   Succ(BB06).
     Not yet completed.
     All preds complete, adding to allDone.
  Building phi application: $4f = SSA# 22.
  Building phi application: $50 = SSA# 21.
  Building phi application: $1f3 = phi($50, $4f).
The SSA definition for GcHeap (#20) at start of BB06 is $1f4 {PhiMemoryDef($199, $1f3)}
finish(BB06).
   Succ(BB14).
     Not yet completed.
     All preds complete, adding to allDone.
  Building phi application: $51 = SSA# 20.
  Building phi application: $52 = SSA# 14.
  Building phi application: $1f5 = phi($52, $51).
The SSA definition for GcHeap (#7) at start of BB14 is $1f6 {PhiMemoryDef($19a, $1f5)}

***** BB14, STMT00028(before)
N005 (  3,  3) [000120] -A------R---              *  ASG       int   
N004 (  1,  1) [000119] D------N----              +--*  LCL_VAR   int    V03 loc2         d:4
N003 (  3,  3) [000118] ------------              \--*  ADD       int   
N001 (  1,  1) [000116] ------------                 +--*  LCL_VAR   int    V03 loc2         u:3 (last use)
N002 (  1,  1) [000117] ------------                 \--*  CNS_INT   int    1

N001 [000116]   LCL_VAR   V03 loc2         u:3 (last use) => $280 {PhiDef($3, $3, $243)}
N002 [000117]   CNS_INT   1 => $46 {IntCns 1}
N003 [000118]   ADD       => $269 {ADD($46, $280)}
N004 [000119]   LCL_VAR   V03 loc2         d:4 => $269 {ADD($46, $280)}
N005 [000120]   ASG       => $269 {ADD($46, $280)}

***** BB14, STMT00028(after)
N005 (  3,  3) [000120] -A------R---              *  ASG       int    $269
N004 (  1,  1) [000119] D------N----              +--*  LCL_VAR   int    V03 loc2         d:4 $269
N003 (  3,  3) [000118] ------------              \--*  ADD       int    $269
N001 (  1,  1) [000116] ------------                 +--*  LCL_VAR   int    V03 loc2         u:3 (last use) $280
N002 (  1,  1) [000117] ------------                 \--*  CNS_INT   int    1 $46

---------

***** BB14, STMT00007(before)
N005 (  7,  7) [000027] ---X--------              *  JTRUE     void  
N004 (  5,  5) [000026] J--X---N----              \--*  GT        int   
N002 (  3,  3) [000025] ---X--------                 +--*  ARR_LENGTH int   
N001 (  1,  1) [000024] ------------                 |  \--*  LCL_VAR   ref    V02 loc1         u:2
N003 (  1,  1) [000023] ------------                 \--*  LCL_VAR   int    V03 loc2         u:4

N001 [000024]   LCL_VAR   V02 loc1         u:2 => $80 {InitVal($40)}
N002 [000025]   ARR_LENGTH => $240 {norm=$200 {ARR_LENGTH($80)}, exc=$1c2 {NullPtrExc($80)}}
N003 [000023]   LCL_VAR   V03 loc2         u:4 => $269 {ADD($46, $280)}
N004 [000026]   GT        => $26b {norm=$26a { {ADD($46, $280)} LT  {ARR_LENGTH($80)}}, exc=$1c2 {NullPtrExc($80)}}

***** BB14, STMT00007(after)
N005 (  7,  7) [000027] ---X--------              *  JTRUE     void  
N004 (  5,  5) [000026] J--X---N----              \--*  GT        int    $26b
N002 (  3,  3) [000025] ---X--------                 +--*  ARR_LENGTH int    $240
N001 (  1,  1) [000024] ------------                 |  \--*  LCL_VAR   ref    V02 loc1         u:2 $80
N003 (  1,  1) [000023] ------------                 \--*  LCL_VAR   int    V03 loc2         u:4 $269

finish(BB14).
   Succ(BB15).
     Not yet completed.
     All preds complete, adding to allDone.
   Succ(BB02).
  Building phi application: $53 = SSA# 7.
  Building phi application: $42 = SSA# 2.
  Building phi application: $1f7 = phi($42, $53).
The SSA definition for GcHeap (#3) at start of BB15 is $1f8 {PhiMemoryDef($19b, $1f7)}

***** BB15, STMT00038(before)
N005 ( 17, 18) [000181] --CXG-------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle
N003 (  1,  1) [000180] ------------ arg1 in rdx  +--*  LCL_VAR   ref    V01 loc0         u:2
N004 (  2, 10) [000182] H----------- arg0 in rcx  \--*  CNS_INT(h) long   0xd1ffab1e method

N001 [000416]   ARGPLACE  => $c2 {c2}
N002 [000415]   ARGPLACE  => $10a {10a}
N003 [000180]   LCL_VAR   V01 loc0         u:2 => $1c1 {JitNew($182, $103)}
N004 [000182]   CNS_INT(h) 0xd1ffab1e method => $19c {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000416] updated to $19c {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000415] updated to $1c1 {JitNew($182, $103)}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000181] to VN: $10b.
N005 [000181]   CALL      => $VN.Void

***** BB15, STMT00038(after)
N005 ( 17, 18) [000181] --CXG-------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle $VN.Void
N003 (  1,  1) [000180] ------------ arg1 in rdx  +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N004 (  2, 10) [000182] H----------- arg0 in rcx  \--*  CNS_INT(h) long   0xd1ffab1e method $19c

---------

***** BB15, STMT00040(before)
N008 ( 21, 31) [000185] --CXG-------              *  CALL      ref    SolutionAnalyzer.Logger.Log
N005 (  4, 12) [000418] #---G------- arg1 in rdx  +--*  IND       ref   
N004 (  2, 10) [000417] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Enumerated and shuffled the project paths."
N006 (  2, 10) [000186] H----------- arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method
N007 (  1,  1) [000184] ------------ arg2 in r8   \--*  CNS_INT   int    2

N001 [000420]   ARGPLACE  => $c3 {c3}
N002 [000419]   ARGPLACE  => $10c {10c}
N003 [000421]   ARGPLACE  => $143 {143}
N004 [000417]   CNS_INT(h) 0xD1FFAB1E "Enumerated and shuffled the project paths." => $19d {Hnd const: 0x00000000D1FFAB1E}
    VNForMapSelect($2, $19d):ref returns $1f9 {$VN.ReadOnlyHeap[$19d]}
    VNForMapSelect($2, $19d):ref returns $1f9 {$VN.ReadOnlyHeap[$19d]}
N005 [000418]   IND       => $1f9 {$VN.ReadOnlyHeap[$19d]}
N006 [000186]   CNS_INT(h) 0xd1ffab1e method => $181 {Hnd const: 0x00000000D1FFAB1E}
N007 [000184]   CNS_INT   2 => $42 {IntCns 2}
VN of ARGPLACE tree [000420] updated to $181 {Hnd const: 0x00000000D1FFAB1E}
VN of ARGPLACE tree [000419] updated to $1f9 {$VN.ReadOnlyHeap[$19d]}
VN of ARGPLACE tree [000421] updated to $42 {IntCns 2}
  fgCurMemoryVN[GcHeap] assigned for CALL at [000185] to VN: $10e.
N008 [000185]   CALL      => $10d {10d}

***** BB15, STMT00040(after)
N008 ( 21, 31) [000185] --CXG-------              *  CALL      ref    SolutionAnalyzer.Logger.Log $10d
N005 (  4, 12) [000418] #---G------- arg1 in rdx  +--*  IND       ref    $1f9
N004 (  2, 10) [000417] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Enumerated and shuffled the project paths." $19d
N006 (  2, 10) [000186] H----------- arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method $181
N007 (  1,  1) [000184] ------------ arg2 in r8   \--*  CNS_INT   int    2 $42

---------

***** BB15, STMT00041(before)
N002 (  2,  2) [000191] ------------              *  RETURN    ref   
N001 (  1,  1) [000190] ------------              \--*  LCL_VAR   ref    V01 loc0         u:2 (last use)

N001 [000190]   LCL_VAR   V01 loc0         u:2 (last use) => $1c1 {JitNew($182, $103)}
N002 [000191]   RETURN    => $10f {10f}

***** BB15, STMT00041(after)
N002 (  2,  2) [000191] ------------              *  RETURN    ref    $10f
N001 (  1,  1) [000190] ------------              \--*  LCL_VAR   ref    V01 loc0         u:2 (last use) $1c1

finish(BB15).

*************** Finishing PHASE Do value numbering

*************** Starting PHASE Hoist loop code

*************** In optHoistLoopCode()
Blocks/Trees before phase

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB15 ( cond )                     i label target hascall gcsafe idxlen newobj 
BB02 [0001]  2       BB01,BB14             4     0 [01D..02E)-> BB07 ( cond )                     i Loop label target hascall gcsafe idxlen nullcheck bwd bwd-target 
BB03 [0002]  1       BB02                  2     0 [02E..037)-> BB05 ( cond )                     i gcsafe idxlen bwd 
BB04 [0013]  1       BB03                  2     0 [02E..02F)-> BB06 (always)                     i hascall gcsafe bwd 
BB05 [0014]  1       BB03                  2     0 [02E..02F)                                     i label target hascall gcsafe bwd 
BB06 [0015]  2       BB04,BB05             2     0 [???..???)-> BB14 (always)                     internal label target gcsafe bwd 
BB07 [0003]  1       BB02                  2     0 [037..04B)-> BB10 ( cond )                     i label target hascall gcsafe bwd 
BB08 [0004]  1       BB07                  2     0 [000..062)-> BB16 ( cond )                     i hascall gcsafe newobj bwd 
BB09 [0020]  1       BB08                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd 
BB10 [0005]  2       BB07,BB09             2     0 [062..085)-> BB13 ( cond )                     i label target hascall gcsafe bwd 
BB11 [0006]  1       BB10                  2     0 [000..09C)-> BB16 ( cond )                     i hascall gcsafe newobj bwd 
BB12 [0028]  1       BB11                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd 
BB13 [0007]  2       BB10,BB12             2     0 [09C..0A6)                                     i label target hascall gcsafe bwd 
BB14 [0008]  2       BB06,BB13             4     0 [0A6..0B3)-> BB02 ( cond )                     i label target gcsafe idxlen bwd 
BB15 [0010]  2       BB01,BB14             1       [0B3..0C7)        (return)                     i label target hascall gcsafe 
BB16 [0027]  2       BB08,BB11             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..01D) -> BB15 (cond), preds={} succs={BB02,BB15}

***** BB01
STMT00001 (IL   ???...  ???)
N008 ( 21, 31) [000002] --CXG-------              *  CALL      ref    SolutionAnalyzer.Logger.Log $101
N005 (  4, 12) [000317] #---G------- arg1 in rdx  +--*  IND       ref    $1c0
N004 (  2, 10) [000316] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Started enumerating project paths." $180
N006 (  2, 10) [000003] H----------- arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method $181
N007 (  1,  1) [000001] ------------ arg2 in r8   \--*  CNS_INT   int    2 $42

***** BB01
STMT00002 (IL 0x00C...0x013)
N005 ( 16, 16) [000011] -AC-----R---              *  ASG       ref    $1c1
N004 (  1,  1) [000010] D------N----              +--*  LCL_VAR   ref    V07 tmp1         d:2 $1c1
N003 ( 16, 16) [000009] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1c1
N002 (  2, 10) [000008] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $182

***** BB01
STMT00003 (IL   ???...  ???)
N005 ( 16, 10) [000013] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor $VN.Void
N003 (  1,  1) [000012] ------------ this in rcx  +--*  LCL_VAR   ref    V07 tmp1         u:2 $1c1
N004 (  1,  1) [000007] ------------ arg1 in rdx  \--*  CNS_INT   int    100 $43

***** BB01
STMT00004 (IL 0x013...  ???)
N003 (  1,  3) [000016] -A------R---              *  ASG       ref    $1c1
N002 (  1,  1) [000015] D------N----              +--*  LCL_VAR   ref    V01 loc0         d:2 $1c1
N001 (  1,  1) [000014] ------------              \--*  LCL_VAR   ref    V07 tmp1         u:2 (last use) $1c1

***** BB01
STMT00005 (IL 0x014...0x015)
N003 (  1,  3) [000019] -A------R---              *  ASG       ref    $80
N002 (  1,  1) [000018] D------N----              +--*  LCL_VAR   ref    V02 loc1         d:2 $80
N001 (  1,  1) [000017] ------------              \--*  LCL_VAR   ref    V00 arg0         u:1 (last use) $80

***** BB01
STMT00006 (IL 0x016...0x017)
N003 (  1,  3) [000022] -A------R---              *  ASG       int    $40
N002 (  1,  1) [000021] D------N----              +--*  LCL_VAR   int    V03 loc2         d:2 $40
N001 (  1,  1) [000020] ------------              \--*  CNS_INT   int    0 $40

***** BB01
STMT00071 (IL 0x0AA...  ???)
N005 (  7,  7) [000426] ---X--------              *  JTRUE     void  
N004 (  5,  5) [000422] J--X---N----              \--*  LE        int    $242
N002 (  3,  3) [000423] ---X--------                 +--*  ARR_LENGTH int    $240
N001 (  1,  1) [000424] ------------                 |  \--*  LCL_VAR   ref    V02 loc1         u:2 $80
N003 (  1,  1) [000425] ------------                 \--*  LCL_VAR   int    V03 loc2         u:2 $40

------------ BB02 [01D..02E) -> BB07 (cond), preds={BB01,BB14} succs={BB03,BB07}

***** BB02
STMT00072 (IL   ???...  ???)
N005 (  0,  0) [000429] -A------R---              *  ASG       int   
N004 (  0,  0) [000427] D------N----              +--*  LCL_VAR   int    V03 loc2         d:3
N003 (  0,  0) [000428] ------------              \--*  PHI       int   
N001 (  0,  0) [000437] ------------ pred BB14       +--*  PHI_ARG   int    V03 loc2         u:4
N002 (  0,  0) [000436] ------------ pred BB01       \--*  PHI_ARG   int    V03 loc2         u:2 $40

***** BB02
STMT00008 (IL 0x01D...0x020)
N016 ( 14, 18) [000032] -A-XG---R---              *  ASG       ref    <l:$1cc, c:$1cb>
N015 (  1,  1) [000031] D------N----              +--*  LCL_VAR   ref    V04 loc3         d:2 <l:$1ca, c:$2c1>
N014 ( 14, 18) [000334] ---XG-------              \--*  COMMA     ref    <l:$1cc, c:$1cb>
N004 (  8, 11) [000327] ---X--------                 +--*  ARR_BOUNDS_CHECK_Rng void   $1c7
N001 (  1,  1) [000029] ------------                 |  +--*  LCL_VAR   int    V03 loc2         u:3 $280
N003 (  3,  3) [000326] ---X--------                 |  \--*  ARR_LENGTH int    $240
N002 (  1,  1) [000028] ------------                 |     \--*  LCL_VAR   ref    V02 loc1         u:2 $80
N013 (  6,  7) [000030] a---G-------                 \--*  IND       ref    <l:$1ca, c:$2c1>
N012 (  5,  6) [000333] -------N----                    \--*  ADD       byref  $3c0
N005 (  1,  1) [000324] ------------                       +--*  LCL_VAR   ref    V02 loc1         u:2 $80
N011 (  4,  5) [000332] -------N----                       \--*  ADD       long   $302
N009 (  3,  4) [000330] -------N----                          +--*  LSH       long   $301
N007 (  2,  3) [000328] ------------                          |  +--*  CAST      long <- int $300
N006 (  1,  1) [000325] i-----------                          |  |  \--*  LCL_VAR   int    V03 loc2         u:3 $280
N008 (  1,  1) [000329] -------N----                          |  \--*  CNS_INT   long   3 $340
N010 (  1,  1) [000331] ------------                          \--*  CNS_INT   long   16 Fseq[#FirstElem] $342

***** BB02
STMT00042 (IL 0x021...  ???)
N002 (  2,  2) [000197] ---X--------              *  NULLCHECK byte   <l:$1d0, c:$1cf>
N001 (  1,  1) [000196] ------------              \--*  LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>

***** BB02
STMT00010 (IL   ???...  ???)
N011 ( 24, 27) [000039] --CXG-------              *  JTRUE     void  
N010 ( 22, 25) [000038] J-CXG--N----              \--*  EQ        int    $244
N008 ( 20, 23) [000195] --CXG-------                 +--*  CALL      int    System.String.EndsWith $401
N005 (  4, 12) [000336] #---G------- arg1 in rdx     |  +--*  IND       ref    $1d1
N004 (  2, 10) [000335] H-----------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E ".csproj" $184
N006 (  1,  1) [000033] ------------ this in rcx     |  +--*  LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
N007 (  1,  1) [000194] ------------ arg2 in r8      |  \--*  CNS_INT   int    0 $40
N009 (  1,  1) [000037] ------------                 \--*  CNS_INT   int    0 $40

------------ BB03 [02E..037) -> BB05 (cond), preds={BB02} succs={BB04,BB05}

***** BB03
STMT00043 (IL 0x02E...  ???)
N011 ( 11, 11) [000204] -A-XG---R---              *  ASG       int    $VN.Void
N010 (  4,  4) [000203] D--XG--N----              +--*  IND       int    $25a
N009 (  2,  2) [000341] -------N----              |  \--*  ADD       byref  $386
N007 (  1,  1) [000177] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N008 (  1,  1) [000340] ------------              |     \--*  CNS_INT   long   20 field offset Fseq[_version] $348
N006 (  6,  6) [000202] ---XG-------              \--*  ADD       int    <l:$25c, c:$25b>
N004 (  4,  4) [000200] ---XG-------                 +--*  IND       int    <l:$258, c:$257>
N003 (  2,  2) [000343] -------N----                 |  \--*  ADD       byref  $386
N001 (  1,  1) [000199] ------------                 |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N002 (  1,  1) [000342] ------------                 |     \--*  CNS_INT   long   20 field offset Fseq[_version] $348
N005 (  1,  1) [000201] ------------                 \--*  CNS_INT   int    1 $46

***** BB03
STMT00044 (IL 0x02E...  ???)
N006 (  4,  4) [000208] -A-XG---R---              *  ASG       ref    <l:$1f0, c:$1ef>
N005 (  1,  1) [000207] D------N----              +--*  LCL_VAR   ref    V18 tmp12        d:2 <l:$1ee, c:$2fc>
N004 (  4,  4) [000206] ---XG-------              \--*  IND       ref    <l:$1f0, c:$1ef>
N003 (  2,  2) [000345] -------N----                 \--*  ADD       byref  $387
N001 (  1,  1) [000205] ------------                    +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N002 (  1,  1) [000344] ------------                    \--*  CNS_INT   long   8 field offset Fseq[_items] $343

***** BB03
STMT00045 (IL 0x02E...  ???)
N006 (  4,  4) [000212] -A-XG---R---              *  ASG       int    <l:$260, c:$25f>
N005 (  1,  1) [000211] D------N----              +--*  LCL_VAR   int    V19 tmp13        d:2 <l:$25e, c:$411>
N004 (  4,  4) [000210] ---XG-------              \--*  IND       int    <l:$260, c:$25f>
N003 (  2,  2) [000347] -------N----                 \--*  ADD       byref  $383
N001 (  1,  1) [000209] ------------                    +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N002 (  1,  1) [000346] ------------                    \--*  CNS_INT   long   16 field offset Fseq[_size] $342

***** BB03
STMT00046 (IL 0x02E...  ???)
N005 (  7,  7) [000217] ---X--------              *  JTRUE     void  
N004 (  5,  5) [000216] N--X---N-U--              \--*  LE        int    <l:$266, c:$265>
N002 (  3,  3) [000215] ---X--------                 +--*  ARR_LENGTH int    <l:$262, c:$261>
N001 (  1,  1) [000214] ------------                 |  \--*  LCL_VAR   ref    V18 tmp12        u:2 <l:$1ee, c:$2fc>
N003 (  1,  1) [000213] ------------                 \--*  LCL_VAR   int    V19 tmp13        u:2 <l:$25e, c:$411>

------------ BB04 [02E..02F) -> BB06 (always), preds={BB03} succs={BB06}

***** BB04
STMT00048 (IL 0x02E...  ???)
N008 (  8,  8) [000225] -A-XG---R---              *  ASG       int    $VN.Void
N007 (  4,  4) [000224] D--XG--N----              +--*  IND       int    $268
N006 (  2,  2) [000349] -------N----              |  \--*  ADD       byref  $383
N004 (  1,  1) [000220] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N005 (  1,  1) [000348] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size] $342
N003 (  3,  3) [000223] ------------              \--*  ADD       int    <l:$268, c:$267>
N001 (  1,  1) [000221] ------------                 +--*  LCL_VAR   int    V19 tmp13        u:2 <l:$25e, c:$411>
N002 (  1,  1) [000222] ------------                 \--*  CNS_INT   int    1 $46

***** BB04
STMT00049 (IL 0x02E...  ???)
N007 ( 17, 11) [000229] --CXG-------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST $1db
N004 (  1,  1) [000226] ------------ arg0 in rcx  +--*  LCL_VAR   ref    V18 tmp12        u:2 (last use) <l:$1ee, c:$2fc>
N005 (  1,  1) [000227] ------------ arg1 in rdx  +--*  LCL_VAR   int    V19 tmp13        u:2 (last use) <l:$25e, c:$411>
N006 (  1,  1) [000228] ------------ arg2 in r8   \--*  LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>

------------ BB05 [02E..02F), preds={BB03} succs={BB06}

***** BB05
STMT00047 (IL 0x02E...  ???)
N005 ( 16, 10) [000219] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize $VN.Void
N003 (  1,  1) [000218] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N004 (  1,  1) [000178] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>

------------ BB06 [???..???) -> BB14 (always), preds={BB04,BB05} succs={BB14}

------------ BB07 [037..04B) -> BB10 (cond), preds={BB02} succs={BB08,BB10}

***** BB07
STMT00053 (IL 0x037...  ???)
N005 ( 15,  7) [000247] -ACXG---R---              *  ASG       ref    $2c6
N004 (  1,  1) [000246] D------N----              +--*  LCL_VAR   ref    V20 tmp14        d:2 $2c6
N003 ( 15,  7) [000236] --CXG-------              \--*  CALL      ref    System.IO.EnumerationOptions.FromSearchOption $2c6
N002 (  1,  1) [000235] ------------ arg0 in rcx     \--*  CNS_INT   int    1 $46

***** BB07
STMT00013 (IL   ???...  ???)
N012 ( 21, 24) [000054] -ACXG---R---              *  ASG       ref    $2cc
N011 (  1,  1) [000053] D------N----              +--*  LCL_VAR   ref    V09 tmp3         d:2 $2cc
N010 ( 21, 24) [000245] --CXG-------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths $2cc
N006 (  4, 12) [000357] #---G------- arg1 in rdx     +--*  IND       ref    $1d2
N005 (  2, 10) [000356] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*" $185
N007 (  1,  1) [000040] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
N008 (  1,  1) [000244] ------------ arg3 in r9      +--*  LCL_VAR   ref    V20 tmp14        u:2 (last use) $2c6
N009 (  1,  1) [000243] ------------ arg2 in r8      \--*  CNS_INT   int    2 $42

***** BB07
STMT00012 (IL   ???...  ???)
N010 ( 21, 30) [000052] -ACXG---R---              *  ASG       ref    <l:$1d5, c:$1d4>
N009 (  1,  1) [000051] D------N----              +--*  LCL_VAR   ref    V08 tmp2         d:2 <l:$4c0, c:$2cf>
N008 ( 21, 30) [000050] --CXG-------              \--*  COMMA     ref    <l:$1d5, c:$1d4>
N005 ( 17, 18) [000049] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
N003 (  2, 10) [000047] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0 $345
N004 (  1,  1) [000048] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35 $47
N007 (  4, 12) [000045] n---G-------                 \--*  IND       ref    <l:$4c0, c:$2cf>
N006 (  2, 10) [000364] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] $186

***** BB07
STMT00015 (IL   ???...0x049)
N003 (  1,  3) [000062] -A------R---              *  ASG       ref    $2cc
N002 (  1,  1) [000061] D------N----              +--*  LCL_VAR   ref    V10 tmp4         d:2 $2cc
N001 (  1,  1) [000055] ------------              \--*  LCL_VAR   ref    V09 tmp3         u:2 (last use) $2cc

***** BB07
STMT00016 (IL   ???...  ???)
N003 (  1,  3) [000065] -A------R---              *  ASG       ref    <l:$4c0, c:$2cf>
N002 (  1,  1) [000064] D------N----              +--*  LCL_VAR   ref    V11 tmp5         d:2 <l:$4c0, c:$2cf>
N001 (  1,  1) [000056] ------------              \--*  LCL_VAR   ref    V08 tmp2         u:2 <l:$4c0, c:$2cf>

***** BB07
STMT00014 (IL   ???...  ???)
N004 (  5,  5) [000060] ------------              *  JTRUE     void  
N003 (  3,  3) [000059] J------N----              \--*  NE        int    <l:$246, c:$245>
N001 (  1,  1) [000057] ------------                 +--*  LCL_VAR   ref    V08 tmp2         u:2 (last use) <l:$4c0, c:$2cf>
N002 (  1,  1) [000058] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB08 [000..062) -> BB16 (cond), preds={BB07} succs={BB09,BB16}

***** BB08
STMT00033 (IL   ???...0x05D)
N005 ( 16, 16) [000160] -AC-----R---              *  ASG       ref    $1d6
N004 (  1,  1) [000159] D------N----              +--*  LCL_VAR   ref    V17 tmp11        d:2 $1d6
N003 ( 16, 16) [000158] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1d6
N002 (  2, 10) [000157] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $187

***** BB08
STMT00058 (IL   ???...  ???)
N010 ( 21, 30) [000262] -ACXG---R---              *  ASG       ref    <l:$1d8, c:$1d7>
N009 (  1,  1) [000261] D------N----              +--*  LCL_VAR   ref    V21 tmp15        d:2 <l:$4c1, c:$2d5>
N008 ( 21, 30) [000155] --CXG-------              \--*  COMMA     ref    <l:$1d8, c:$1d7>
N005 ( 17, 18) [000154] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
N003 (  2, 10) [000152] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0 $345
N004 (  1,  1) [000153] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35 $47
N007 (  4, 12) [000150] n---G-------                 \--*  IND       ref    <l:$4c1, c:$2d5>
N006 (  2, 10) [000368] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] $188

***** BB08
STMT00054 (IL   ???...  ???)
N004 (  5,  5) [000252] ------------              *  JTRUE     void  
N003 (  3,  3) [000251] J------N----              \--*  EQ        int    <l:$248, c:$247>
N001 (  1,  1) [000249] ------------                 +--*  LCL_VAR   ref    V21 tmp15        u:2 <l:$4c1, c:$2d5>
N002 (  1,  1) [000250] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB09 [000..000), preds={BB08} succs={BB10}

***** BB09
STMT00055 (IL   ???...  ???)
N006 (  6,  6) [000255] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000254] D--XG--N----              +--*  IND       ref    $4c1
N003 (  2,  2) [000370] -------N----              |  \--*  ADD       byref  $381
N001 (  1,  1) [000161] ------------              |     +--*  LCL_VAR   ref    V17 tmp11        u:2 $1d6
N002 (  1,  1) [000369] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $343
N005 (  1,  1) [000253] ------------              \--*  LCL_VAR   ref    V21 tmp15        u:2 (last use) <l:$4c1, c:$2d5>

***** BB09
STMT00056 (IL   ???...  ???)
N006 (  7, 15) [000259] -A-XG-------              *  ASG       long   $VN.Void
N004 (  4,  4) [000258] D--XG--N----              +--*  IND       long   $18a
N003 (  2,  2) [000372] -------N----              |  \--*  ADD       byref  $382
N001 (  1,  1) [000256] ------------              |     +--*  LCL_VAR   ref    V17 tmp11        u:2 $1d6
N002 (  1,  1) [000371] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $346
N005 (  2, 10) [000156] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $18a

***** BB09
STMT00035 (IL 0x05C...  ???)
N010 ( 23, 32) [000171] -ACXG-------              *  COMMA     void   $1db
N005 ( 17, 18) [000170] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
N003 (  2, 10) [000168] ------------ arg0 in rcx  |  +--*  CNS_INT   long   0x7ffc7e4c17e0 $345
N004 (  1,  1) [000169] ------------ arg1 in rdx  |  \--*  CNS_INT   int    35 $47
N009 (  6, 14) [000166] -A--G-------              \--*  ASG       ref    $VN.Void
N007 (  4, 12) [000165] n---G--N----                 +--*  IND       ref    $1d6
N006 (  2, 10) [000375] I-----------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] $186
N008 (  1,  1) [000164] ------------                 \--*  LCL_VAR   ref    V17 tmp11        u:2 $1d6

***** BB09
STMT00036 (IL   ???...0x05D)
N003 (  1,  3) [000175] -A------R---              *  ASG       ref    $1d6
N002 (  1,  1) [000174] D------N----              +--*  LCL_VAR   ref    V11 tmp5         d:4 $1d6
N001 (  1,  1) [000163] ------------              \--*  LCL_VAR   ref    V17 tmp11        u:2 (last use) $1d6

------------ BB10 [062..085) -> BB13 (cond), preds={BB07,BB09} succs={BB11,BB13}

***** BB10
STMT00074 (IL   ???...  ???)
N005 (  0,  0) [000435] -A------R---              *  ASG       ref   
N004 (  0,  0) [000433] D------N----              +--*  LCL_VAR   ref    V11 tmp5         d:3
N003 (  0,  0) [000434] ------------              \--*  PHI       ref   
N001 (  0,  0) [000441] ------------ pred BB09       +--*  PHI_ARG   ref    V11 tmp5         u:4 $1d6
N002 (  0,  0) [000438] ------------ pred BB07       \--*  PHI_ARG   ref    V11 tmp5         u:2 <l:$4c0, c:$2cf>

***** BB10
STMT00018 (IL   ???...  ???)
N009 ( 18, 20) [000075] -ACXG---R---              *  ASG       ref    $2db
N008 (  1,  1) [000074] D------N----              +--*  LCL_VAR   ref    V05 loc4         d:2 $2db
N007 ( 18, 20) [000071] --CXG-------              \--*  CALL      ref    System.Linq.Enumerable.Where $2db
N004 (  1,  1) [000070] ------------ arg2 in r8      +--*  LCL_VAR   ref    V11 tmp5         u:3 (last use) $4c4
N005 (  1,  1) [000069] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V10 tmp4         u:2 (last use) $2cc
N006 (  2, 10) [000072] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $18d

***** BB10
STMT00061 (IL 0x069...  ???)
N010 ( 21, 30) [000283] -ACXG---R---              *  ASG       ref    <l:$1df, c:$1de>
N009 (  1,  1) [000282] D------N----              +--*  LCL_VAR   ref    V23 tmp17        d:2 <l:$4c5, c:$2de>
N008 ( 21, 30) [000276] --CXG-------              \--*  COMMA     ref    <l:$1df, c:$1de>
N005 ( 17, 18) [000275] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $309
N003 (  2, 10) [000273] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e783cd8 $347
N004 (  1,  1) [000274] ------------ arg1 in rdx     |  \--*  CNS_INT   int    40 $4a
N007 (  4, 12) [000271] n---G-------                 \--*  IND       ref    <l:$4c5, c:$2de>
N006 (  2, 10) [000381] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<Compatible>k__BackingField] $18e

***** BB10
STMT00063 (IL   ???...  ???)
N012 ( 21, 24) [000290] -ACXG---R---              *  ASG       ref    $2e3
N011 (  1,  1) [000289] D------N----              +--*  LCL_VAR   ref    V24 tmp18        d:2 $2e3
N010 ( 21, 24) [000281] --CXG-------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths $2e3
N006 (  4, 12) [000383] #---G------- arg1 in rdx     +--*  IND       ref    $1e0
N005 (  2, 10) [000382] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*.csproj" $18f
N007 (  1,  1) [000077] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>
N008 (  1,  1) [000280] ------------ arg3 in r9      +--*  LCL_VAR   ref    V23 tmp17        u:2 (last use) <l:$4c5, c:$2de>
N009 (  1,  1) [000279] ------------ arg2 in r8      \--*  CNS_INT   int    1 $46

***** BB10
STMT00062 (IL   ???...  ???)
N010 ( 20, 15) [000288] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange $VN.Void
N007 (  4,  4) [000286] ---XG------- arg1 in rdx  +--*  IND       int    <l:$24c, c:$24b>
N006 (  2,  2) [000389] -------N----              |  \--*  ADD       byref  $383
N004 (  1,  1) [000285] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N005 (  1,  1) [000388] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size] $342
N008 (  1,  1) [000076] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N009 (  1,  1) [000287] ------------ arg2 in r8   \--*  LCL_VAR   ref    V24 tmp18        u:2 (last use) $2e3

***** BB10
STMT00021 (IL 0x07A...  ???)
N010 ( 21, 30) [000091] -ACXG---R---              *  ASG       ref    <l:$1e3, c:$1e2>
N009 (  1,  1) [000090] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:2 <l:$4c6, c:$2e9>
N008 ( 21, 30) [000089] --CXG-------              \--*  COMMA     ref    <l:$1e3, c:$1e2>
N005 ( 17, 18) [000088] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
N003 (  2, 10) [000086] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0 $345
N004 (  1,  1) [000087] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35 $47
N007 (  4, 12) [000084] n---G-------                 \--*  IND       ref    <l:$4c6, c:$2e9>
N006 (  2, 10) [000395] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] $191

***** BB10
STMT00023 (IL   ???...0x083)
N003 (  1,  3) [000098] -A------R---              *  ASG       ref    $1c1
N002 (  1,  1) [000097] D------N----              +--*  LCL_VAR   ref    V13 tmp7         d:2 $1c1
N001 (  1,  1) [000082] ------------              \--*  LCL_VAR   ref    V01 loc0         u:2 $1c1

***** BB10
STMT00024 (IL   ???...  ???)
N003 (  1,  3) [000101] -A------R---              *  ASG       ref    $2db
N002 (  1,  1) [000100] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:2 $2db
N001 (  1,  1) [000083] ------------              \--*  LCL_VAR   ref    V05 loc4         u:2 (last use) $2db

***** BB10
STMT00025 (IL   ???...  ???)
N003 (  1,  3) [000104] -A------R---              *  ASG       ref    <l:$4c6, c:$2e9>
N002 (  1,  1) [000103] D------N----              +--*  LCL_VAR   ref    V15 tmp9         d:2 <l:$4c6, c:$2e9>
N001 (  1,  1) [000092] ------------              \--*  LCL_VAR   ref    V12 tmp6         u:2 <l:$4c6, c:$2e9>

***** BB10
STMT00022 (IL   ???...  ???)
N004 (  5,  5) [000096] ------------              *  JTRUE     void  
N003 (  3,  3) [000095] J------N----              \--*  NE        int    <l:$24e, c:$24d>
N001 (  1,  1) [000093] ------------                 +--*  LCL_VAR   ref    V12 tmp6         u:2 (last use) <l:$4c6, c:$2e9>
N002 (  1,  1) [000094] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB11 [000..09C) -> BB16 (cond), preds={BB10} succs={BB12,BB16}

***** BB11
STMT00029 (IL   ???...0x097)
N005 ( 16, 16) [000131] -AC-----R---              *  ASG       ref    $1e4
N004 (  1,  1) [000130] D------N----              +--*  LCL_VAR   ref    V16 tmp10        d:2 $1e4
N003 ( 16, 16) [000129] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1e4
N002 (  2, 10) [000128] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $192

***** BB11
STMT00068 (IL   ???...  ???)
N010 ( 21, 30) [000305] -ACXG---R---              *  ASG       ref    <l:$1e6, c:$1e5>
N009 (  1,  1) [000304] D------N----              +--*  LCL_VAR   ref    V25 tmp19        d:2 <l:$4c7, c:$2f0>
N008 ( 21, 30) [000126] --CXG-------              \--*  COMMA     ref    <l:$1e6, c:$1e5>
N005 ( 17, 18) [000125] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
N003 (  2, 10) [000123] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0 $345
N004 (  1,  1) [000124] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35 $47
N007 (  4, 12) [000121] n---G-------                 \--*  IND       ref    <l:$4c7, c:$2f0>
N006 (  2, 10) [000399] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] $188

***** BB11
STMT00064 (IL   ???...  ???)
N004 (  5,  5) [000295] ------------              *  JTRUE     void  
N003 (  3,  3) [000294] J------N----              \--*  EQ        int    <l:$250, c:$24f>
N001 (  1,  1) [000292] ------------                 +--*  LCL_VAR   ref    V25 tmp19        u:2 <l:$4c7, c:$2f0>
N002 (  1,  1) [000293] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB12 [000..000), preds={BB11} succs={BB13}

***** BB12
STMT00065 (IL   ???...  ???)
N006 (  6,  6) [000298] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000297] D--XG--N----              +--*  IND       ref    $4c7
N003 (  2,  2) [000401] -------N----              |  \--*  ADD       byref  $384
N001 (  1,  1) [000132] ------------              |     +--*  LCL_VAR   ref    V16 tmp10        u:2 $1e4
N002 (  1,  1) [000400] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $343
N005 (  1,  1) [000296] ------------              \--*  LCL_VAR   ref    V25 tmp19        u:2 (last use) <l:$4c7, c:$2f0>

***** BB12
STMT00066 (IL   ???...  ???)
N006 (  7, 15) [000302] -A-XG-------              *  ASG       long   $VN.Void
N004 (  4,  4) [000301] D--XG--N----              +--*  IND       long   $194
N003 (  2,  2) [000403] -------N----              |  \--*  ADD       byref  $385
N001 (  1,  1) [000299] ------------              |     +--*  LCL_VAR   ref    V16 tmp10        u:2 $1e4
N002 (  1,  1) [000402] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $346
N005 (  2, 10) [000127] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $194

***** BB12
STMT00031 (IL 0x096...  ???)
N010 ( 23, 32) [000142] -ACXG-------              *  COMMA     void   $1db
N005 ( 17, 18) [000141] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
N003 (  2, 10) [000139] ------------ arg0 in rcx  |  +--*  CNS_INT   long   0x7ffc7e4c17e0 $345
N004 (  1,  1) [000140] ------------ arg1 in rdx  |  \--*  CNS_INT   int    35 $47
N009 (  6, 14) [000137] -A--G-------              \--*  ASG       ref    $VN.Void
N007 (  4, 12) [000136] n---G--N----                 +--*  IND       ref    $1e4
N006 (  2, 10) [000406] I-----------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] $191
N008 (  1,  1) [000135] ------------                 \--*  LCL_VAR   ref    V16 tmp10        u:2 $1e4

***** BB12
STMT00032 (IL   ???...0x097)
N003 (  1,  3) [000148] -A------R---              *  ASG       ref    $1e4
N002 (  1,  1) [000147] D------N----              +--*  LCL_VAR   ref    V15 tmp9         d:4 $1e4
N001 (  1,  1) [000134] ------------              \--*  LCL_VAR   ref    V16 tmp10        u:2 (last use) $1e4

------------ BB13 [09C..0A6), preds={BB10,BB12} succs={BB14}

***** BB13
STMT00073 (IL   ???...  ???)
N005 (  0,  0) [000432] -A------R---              *  ASG       ref   
N004 (  0,  0) [000430] D------N----              +--*  LCL_VAR   ref    V15 tmp9         d:3
N003 (  0,  0) [000431] ------------              \--*  PHI       ref   
N001 (  0,  0) [000440] ------------ pred BB12       +--*  PHI_ARG   ref    V15 tmp9         u:4 $1e4
N002 (  0,  0) [000439] ------------ pred BB10       \--*  PHI_ARG   ref    V15 tmp9         u:2 <l:$4c6, c:$2e9>

***** BB13
STMT00070 (IL   ???...  ???)
N009 ( 18, 20) [000313] -ACXG---R---              *  ASG       ref    $2f6
N008 (  1,  1) [000312] D------N----              +--*  LCL_VAR   ref    V27 tmp21        d:2 $2f6
N007 ( 18, 20) [000112] --CXG-------              \--*  CALL      ref    System.Linq.Enumerable.SelectMany $2f6
N004 (  1,  1) [000111] ------------ arg2 in r8      +--*  LCL_VAR   ref    V15 tmp9         u:3 (last use) $4ca
N005 (  1,  1) [000110] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V14 tmp8         u:2 (last use) $2db
N006 (  2, 10) [000113] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $196

***** BB13
STMT00069 (IL   ???...  ???)
N010 ( 20, 15) [000311] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange $VN.Void
N007 (  4,  4) [000309] ---XG------- arg1 in rdx  +--*  IND       int    <l:$254, c:$253>
N006 (  2,  2) [000411] -------N----              |  \--*  ADD       byref  $383
N004 (  1,  1) [000308] ------------              |     +--*  LCL_VAR   ref    V13 tmp7         u:2 $1c1
N005 (  1,  1) [000410] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size] $342
N008 (  1,  1) [000109] ------------ this in rcx  +--*  LCL_VAR   ref    V13 tmp7         u:2 (last use) $1c1
N009 (  1,  1) [000310] ------------ arg2 in r8   \--*  LCL_VAR   ref    V27 tmp21        u:2 (last use) $2f6

------------ BB14 [0A6..0B3) -> BB02 (cond), preds={BB06,BB13} succs={BB15,BB02}

***** BB14
STMT00028 (IL 0x0A6...0x0A9)
N005 (  3,  3) [000120] -A------R---              *  ASG       int    $269
N004 (  1,  1) [000119] D------N----              +--*  LCL_VAR   int    V03 loc2         d:4 $269
N003 (  3,  3) [000118] ------------              \--*  ADD       int    $269
N001 (  1,  1) [000116] ------------                 +--*  LCL_VAR   int    V03 loc2         u:3 (last use) $280
N002 (  1,  1) [000117] ------------                 \--*  CNS_INT   int    1 $46

***** BB14
STMT00007 (IL 0x0AA...0x0AE)
N005 (  7,  7) [000027] ---X--------              *  JTRUE     void  
N004 (  5,  5) [000026] J--X---N----              \--*  GT        int    $26b
N002 (  3,  3) [000025] ---X--------                 +--*  ARR_LENGTH int    $240
N001 (  1,  1) [000024] ------------                 |  \--*  LCL_VAR   ref    V02 loc1         u:2 $80
N003 (  1,  1) [000023] ------------                 \--*  LCL_VAR   int    V03 loc2         u:4 $269

------------ BB15 [0B3..0C7) (return), preds={BB01,BB14} succs={}

***** BB15
STMT00038 (IL 0x0B3...0x0C4)
N005 ( 17, 18) [000181] --CXG-------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle $VN.Void
N003 (  1,  1) [000180] ------------ arg1 in rdx  +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N004 (  2, 10) [000182] H----------- arg0 in rcx  \--*  CNS_INT(h) long   0xd1ffab1e method $19c

***** BB15
STMT00040 (IL   ???...  ???)
N008 ( 21, 31) [000185] --CXG-------              *  CALL      ref    SolutionAnalyzer.Logger.Log $10d
N005 (  4, 12) [000418] #---G------- arg1 in rdx  +--*  IND       ref    $1f9
N004 (  2, 10) [000417] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Enumerated and shuffled the project paths." $19d
N006 (  2, 10) [000186] H----------- arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method $181
N007 (  1,  1) [000184] ------------ arg2 in r8   \--*  CNS_INT   int    2 $42

***** BB15
STMT00041 (IL 0x0C5...0x0C6)
N002 (  2,  2) [000191] ------------              *  RETURN    ref    $10f
N001 (  1,  1) [000190] ------------              \--*  LCL_VAR   ref    V01 loc0         u:2 (last use) $1c1

------------ BB16 [000..000) (throw), preds={BB08,BB11} succs={}

***** BB16
STMT00067 (IL   ???...  ???)
N001 ( 14,  5) [000303] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance $VN.Void

-------------------------------------------------------------------------------------------------------------------
optHoistLoopCode for loop L00 <BB02..BB14>:
  Loop body contains a call
  Loop has multiple exits

  USEDEF  (23)={V03 V01 V04 V16 V17 V02 V08 V12 V21 V25 V18 V19 V09 V20 V23 V24 V27 V11 V13 V15 V05 V10 V14}
  INOUT   (15)={V03 V01 V04 V16 V17 V02 V21 V25 V18 V19 V11 V13 V15 V10 V14}
  LOOPVARS(15)={V03 V01 V04 V16 V17 V02 V21 V25 V18 V19 V11 V13 V15 V10 V14}
    optHoistLoopBlocks BB02 (weight=  4   ) of loop L00 <BB02..BB14>, firstBlock is true

*************** Finishing PHASE Hoist loop code

*************** Starting PHASE VN based copy prop
*************** In optVnCopyProp()
Copy Assertion for BB01
  curSsaName stack: { }

							Live vars: {V00} => {V00 V07}
							Live vars: {V00 V07} => {V00}
							Live vars: {V00} => {V00 V01}
							Live vars: {V00 V01} => {V01}
							Live vars: {V01} => {V01 V02}
							Live vars: {V01 V02} => {V01 V02 V03}
Copy Assertion for BB15
  curSsaName stack: { 0-[000017]:V00 1-[000015]:V01 2-[000018]:V02 3-[000021]:V03 7-[000010]:V07 }

							Live vars: {V01} => {}
Copy Assertion for BB02
  curSsaName stack: { 0-[000017]:V00 1-[000015]:V01 2-[000018]:V02 3-[000021]:V03 7-[000010]:V07 }

							Live vars: {V01 V02 V03} => {V01 V02 V03 V04}
Copy Assertion for BB14
  curSsaName stack: { 0-[000017]:V00 1-[000015]:V01 2-[000018]:V02 3-[000427]:V03 4-[000031]:V04 7-[000010]:V07 }

							Live vars: {V01 V02 V03} => {V01 V02}
							Live vars: {V01 V02} => {V01 V02 V03}
Copy Assertion for BB07
  curSsaName stack: { 0-[000017]:V00 1-[000015]:V01 2-[000018]:V02 3-[000427]:V03 4-[000031]:V04 7-[000010]:V07 }

							Live vars: {V01 V02 V03 V04} => {V01 V02 V03 V04 V20}
							Live vars: {V01 V02 V03 V04 V20} => {V01 V02 V03 V04}
							Live vars: {V01 V02 V03 V04} => {V01 V02 V03 V04 V09}
							Live vars: {V01 V02 V03 V04 V09} => {V01 V02 V03 V04 V08 V09}
							Live vars: {V01 V02 V03 V04 V08 V09} => {V01 V02 V03 V04 V08}
							Live vars: {V01 V02 V03 V04 V08} => {V01 V02 V03 V04 V08 V10}
							Live vars: {V01 V02 V03 V04 V08 V10} => {V01 V02 V03 V04 V08 V10 V11}
							Live vars: {V01 V02 V03 V04 V08 V10 V11} => {V01 V02 V03 V04 V10 V11}
VN based copy assertion for [000057] V08 @000002CF by [000064] V11 @000002CF.
N001 (  1,  1) [000057] ------------              *  LCL_VAR   ref    V08 tmp2         u:2 (last use) <l:$4c0, c:$2cf>
copy propagated to:
N001 (  1,  1) [000057] ------------              *  LCL_VAR   ref    V11 tmp5         u:2 (last use) <l:$4c0, c:$2cf>
Copy Assertion for BB16
  curSsaName stack: { 0-[000017]:V00 1-[000015]:V01 2-[000018]:V02 3-[000427]:V03 4-[000031]:V04 7-[000010]:V07 8-[000051]:V08 9-[000053]:V09 10-[000061]:V10 11-[000064]:V11 20-[000246]:V20 }

Copy Assertion for BB10
  curSsaName stack: { 0-[000017]:V00 1-[000015]:V01 2-[000018]:V02 3-[000427]:V03 4-[000031]:V04 7-[000010]:V07 8-[000051]:V08 9-[000053]:V09 10-[000061]:V10 11-[000064]:V11 20-[000246]:V20 }

							Live vars: {V01 V02 V03 V04 V10 V11} => {V01 V02 V03 V04 V10}
							Live vars: {V01 V02 V03 V04 V10} => {V01 V02 V03 V04}
							Live vars: {V01 V02 V03 V04} => {V01 V02 V03 V04 V05}
							Live vars: {V01 V02 V03 V04 V05} => {V01 V02 V03 V04 V05 V23}
							Live vars: {V01 V02 V03 V04 V05 V23} => {V01 V02 V03 V05 V23}
							Live vars: {V01 V02 V03 V05 V23} => {V01 V02 V03 V05}
							Live vars: {V01 V02 V03 V05} => {V01 V02 V03 V05 V24}
							Live vars: {V01 V02 V03 V05 V24} => {V01 V02 V03 V05}
							Live vars: {V01 V02 V03 V05} => {V01 V02 V03 V05 V12}
							Live vars: {V01 V02 V03 V05 V12} => {V01 V02 V03 V05 V12 V13}
							Live vars: {V01 V02 V03 V05 V12 V13} => {V01 V02 V03 V12 V13}
							Live vars: {V01 V02 V03 V12 V13} => {V01 V02 V03 V12 V13 V14}
							Live vars: {V01 V02 V03 V12 V13 V14} => {V01 V02 V03 V12 V13 V14 V15}
							Live vars: {V01 V02 V03 V12 V13 V14 V15} => {V01 V02 V03 V13 V14 V15}
VN based copy assertion for [000093] V12 @000002E9 by [000103] V15 @000002E9.
N001 (  1,  1) [000093] ------------              *  LCL_VAR   ref    V12 tmp6         u:2 (last use) <l:$4c6, c:$2e9>
copy propagated to:
N001 (  1,  1) [000093] ------------              *  LCL_VAR   ref    V15 tmp9         u:2 (last use) <l:$4c6, c:$2e9>
Copy Assertion for BB13
  curSsaName stack: { 0-[000017]:V00 1-[000015]:V01 2-[000018]:V02 3-[000427]:V03 4-[000031]:V04 5-[000074]:V05 7-[000010]:V07 8-[000051]:V08 9-[000053]:V09 10-[000061]:V10 11-[000433]:V11 12-[000090]:V12 13-[000097]:V13 14-[000100]:V14 15-[000103]:V15 20-[000246]:V20 23-[000282]:V23 24-[000289]:V24 }

							Live vars: {V01 V02 V03 V13 V14 V15} => {V01 V02 V03 V13 V14}
							Live vars: {V01 V02 V03 V13 V14} => {V01 V02 V03 V13}
							Live vars: {V01 V02 V03 V13} => {V01 V02 V03 V13 V27}
VN based copy assertion for [000308] V13 @000001C1 by [000015] V01 @000001C1.
N004 (  1,  1) [000308] ------------              *  LCL_VAR   ref    V13 tmp7         u:2 $1c1
copy propagated to:
N004 (  1,  1) [000308] ------------              *  LCL_VAR   ref    V01 loc0         u:2 $1c1
							Live vars: {V01 V02 V03 V13 V27} => {V01 V02 V03 V27}
VN based copy assertion for [000109] V13 @000001C1 by [000015] V01 @000001C1.
N008 (  1,  1) [000109] ------------              *  LCL_VAR   ref    V13 tmp7         u:2 (last use) $1c1
copy propagated to:
N008 (  1,  1) [000109] ------------              *  LCL_VAR   ref    V01 loc0         u:2 (last use) $1c1
							Live vars: {V01 V02 V03 V27} => {V01 V02 V03}
Copy Assertion for BB11
  curSsaName stack: { 0-[000017]:V00 1-[000015]:V01 2-[000018]:V02 3-[000427]:V03 4-[000031]:V04 5-[000074]:V05 7-[000010]:V07 8-[000051]:V08 9-[000053]:V09 10-[000061]:V10 11-[000433]:V11 12-[000090]:V12 13-[000097]:V13 14-[000100]:V14 15-[000103]:V15 20-[000246]:V20 23-[000282]:V23 24-[000289]:V24 }

							Live vars: {V01 V02 V03 V13 V14} => {V01 V02 V03 V13 V14 V16}
							Live vars: {V01 V02 V03 V13 V14 V16} => {V01 V02 V03 V13 V14 V16 V25}
Copy Assertion for BB12
  curSsaName stack: { 0-[000017]:V00 1-[000015]:V01 2-[000018]:V02 3-[000427]:V03 4-[000031]:V04 5-[000074]:V05 7-[000010]:V07 8-[000051]:V08 9-[000053]:V09 10-[000061]:V10 11-[000433]:V11 12-[000090]:V12 13-[000097]:V13 14-[000100]:V14 15-[000103]:V15 16-[000130]:V16 20-[000246]:V20 23-[000282]:V23 24-[000289]:V24 25-[000304]:V25 }

							Live vars: {V01 V02 V03 V13 V14 V16 V25} => {V01 V02 V03 V13 V14 V16}
							Live vars: {V01 V02 V03 V13 V14 V16} => {V01 V02 V03 V13 V14}
							Live vars: {V01 V02 V03 V13 V14} => {V01 V02 V03 V13 V14 V15}
Copy Assertion for BB08
  curSsaName stack: { 0-[000017]:V00 1-[000015]:V01 2-[000018]:V02 3-[000427]:V03 4-[000031]:V04 7-[000010]:V07 8-[000051]:V08 9-[000053]:V09 10-[000061]:V10 11-[000064]:V11 20-[000246]:V20 }

							Live vars: {V01 V02 V03 V04 V10} => {V01 V02 V03 V04 V10 V17}
							Live vars: {V01 V02 V03 V04 V10 V17} => {V01 V02 V03 V04 V10 V17 V21}
Copy Assertion for BB09
  curSsaName stack: { 0-[000017]:V00 1-[000015]:V01 2-[000018]:V02 3-[000427]:V03 4-[000031]:V04 7-[000010]:V07 8-[000051]:V08 9-[000053]:V09 10-[000061]:V10 11-[000064]:V11 17-[000159]:V17 20-[000246]:V20 21-[000261]:V21 }

							Live vars: {V01 V02 V03 V04 V10 V17 V21} => {V01 V02 V03 V04 V10 V17}
							Live vars: {V01 V02 V03 V04 V10 V17} => {V01 V02 V03 V04 V10}
							Live vars: {V01 V02 V03 V04 V10} => {V01 V02 V03 V04 V10 V11}
Copy Assertion for BB03
  curSsaName stack: { 0-[000017]:V00 1-[000015]:V01 2-[000018]:V02 3-[000427]:V03 4-[000031]:V04 7-[000010]:V07 }

							Live vars: {V01 V02 V03 V04} => {V01 V02 V03 V04 V18}
							Live vars: {V01 V02 V03 V04 V18} => {V01 V02 V03 V04 V18 V19}
Copy Assertion for BB06
  curSsaName stack: { 0-[000017]:V00 1-[000015]:V01 2-[000018]:V02 3-[000427]:V03 4-[000031]:V04 7-[000010]:V07 18-[000207]:V18 19-[000211]:V19 }

Copy Assertion for BB05
  curSsaName stack: { 0-[000017]:V00 1-[000015]:V01 2-[000018]:V02 3-[000427]:V03 4-[000031]:V04 7-[000010]:V07 18-[000207]:V18 19-[000211]:V19 }

							Live vars: {V01 V02 V03 V04} => {V01 V02 V03}
Copy Assertion for BB04
  curSsaName stack: { 0-[000017]:V00 1-[000015]:V01 2-[000018]:V02 3-[000427]:V03 4-[000031]:V04 7-[000010]:V07 18-[000207]:V18 19-[000211]:V19 }

							Live vars: {V01 V02 V03 V04 V18 V19} => {V01 V02 V03 V04 V19}
							Live vars: {V01 V02 V03 V04 V19} => {V01 V02 V03 V04}
							Live vars: {V01 V02 V03 V04} => {V01 V02 V03}

*************** Finishing PHASE VN based copy prop

*************** Starting PHASE Optimize Valnum CSEs

*************** In optOptimizeCSEs()
Blocks/Trees at start of optOptimizeCSE phase

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB15 ( cond )                     i label target hascall gcsafe idxlen newobj 
BB02 [0001]  2       BB01,BB14             4     0 [01D..02E)-> BB07 ( cond )                     i Loop label target hascall gcsafe idxlen nullcheck bwd bwd-target 
BB03 [0002]  1       BB02                  2     0 [02E..037)-> BB05 ( cond )                     i gcsafe idxlen bwd 
BB04 [0013]  1       BB03                  2     0 [02E..02F)-> BB06 (always)                     i hascall gcsafe bwd 
BB05 [0014]  1       BB03                  2     0 [02E..02F)                                     i label target hascall gcsafe bwd 
BB06 [0015]  2       BB04,BB05             2     0 [???..???)-> BB14 (always)                     internal label target gcsafe bwd 
BB07 [0003]  1       BB02                  2     0 [037..04B)-> BB10 ( cond )                     i label target hascall gcsafe bwd 
BB08 [0004]  1       BB07                  2     0 [000..062)-> BB16 ( cond )                     i hascall gcsafe newobj bwd 
BB09 [0020]  1       BB08                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd 
BB10 [0005]  2       BB07,BB09             2     0 [062..085)-> BB13 ( cond )                     i label target hascall gcsafe bwd 
BB11 [0006]  1       BB10                  2     0 [000..09C)-> BB16 ( cond )                     i hascall gcsafe newobj bwd 
BB12 [0028]  1       BB11                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd 
BB13 [0007]  2       BB10,BB12             2     0 [09C..0A6)                                     i label target hascall gcsafe bwd 
BB14 [0008]  2       BB06,BB13             4     0 [0A6..0B3)-> BB02 ( cond )                     i label target gcsafe idxlen bwd 
BB15 [0010]  2       BB01,BB14             1       [0B3..0C7)        (return)                     i label target hascall gcsafe 
BB16 [0027]  2       BB08,BB11             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..01D) -> BB15 (cond), preds={} succs={BB02,BB15}

***** BB01
STMT00001 (IL   ???...  ???)
N008 ( 21, 31) [000002] --CXG-------              *  CALL      ref    SolutionAnalyzer.Logger.Log $101
N005 (  4, 12) [000317] #---G------- arg1 in rdx  +--*  IND       ref    $1c0
N004 (  2, 10) [000316] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Started enumerating project paths." $180
N006 (  2, 10) [000003] H----------- arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method $181
N007 (  1,  1) [000001] ------------ arg2 in r8   \--*  CNS_INT   int    2 $42

***** BB01
STMT00002 (IL 0x00C...0x013)
N005 ( 16, 16) [000011] -AC-----R---              *  ASG       ref    $1c1
N004 (  1,  1) [000010] D------N----              +--*  LCL_VAR   ref    V07 tmp1         d:2 $1c1
N003 ( 16, 16) [000009] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1c1
N002 (  2, 10) [000008] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $182

***** BB01
STMT00003 (IL   ???...  ???)
N005 ( 16, 10) [000013] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor $VN.Void
N003 (  1,  1) [000012] ------------ this in rcx  +--*  LCL_VAR   ref    V07 tmp1         u:2 $1c1
N004 (  1,  1) [000007] ------------ arg1 in rdx  \--*  CNS_INT   int    100 $43

***** BB01
STMT00004 (IL 0x013...  ???)
N003 (  1,  3) [000016] -A------R---              *  ASG       ref    $1c1
N002 (  1,  1) [000015] D------N----              +--*  LCL_VAR   ref    V01 loc0         d:2 $1c1
N001 (  1,  1) [000014] ------------              \--*  LCL_VAR   ref    V07 tmp1         u:2 (last use) $1c1

***** BB01
STMT00005 (IL 0x014...0x015)
N003 (  1,  3) [000019] -A------R---              *  ASG       ref    $80
N002 (  1,  1) [000018] D------N----              +--*  LCL_VAR   ref    V02 loc1         d:2 $80
N001 (  1,  1) [000017] ------------              \--*  LCL_VAR   ref    V00 arg0         u:1 (last use) $80

***** BB01
STMT00006 (IL 0x016...0x017)
N003 (  1,  3) [000022] -A------R---              *  ASG       int    $40
N002 (  1,  1) [000021] D------N----              +--*  LCL_VAR   int    V03 loc2         d:2 $40
N001 (  1,  1) [000020] ------------              \--*  CNS_INT   int    0 $40

***** BB01
STMT00071 (IL 0x0AA...  ???)
N005 (  7,  7) [000426] ---X--------              *  JTRUE     void  
N004 (  5,  5) [000422] J--X---N----              \--*  LE        int    $242
N002 (  3,  3) [000423] ---X--------                 +--*  ARR_LENGTH int    $240
N001 (  1,  1) [000424] ------------                 |  \--*  LCL_VAR   ref    V02 loc1         u:2 $80
N003 (  1,  1) [000425] ------------                 \--*  LCL_VAR   int    V03 loc2         u:2 $40

------------ BB02 [01D..02E) -> BB07 (cond), preds={BB01,BB14} succs={BB03,BB07}

***** BB02
STMT00072 (IL   ???...  ???)
N005 (  0,  0) [000429] -A------R---              *  ASG       int   
N004 (  0,  0) [000427] D------N----              +--*  LCL_VAR   int    V03 loc2         d:3
N003 (  0,  0) [000428] ------------              \--*  PHI       int   
N001 (  0,  0) [000437] ------------ pred BB14       +--*  PHI_ARG   int    V03 loc2         u:4
N002 (  0,  0) [000436] ------------ pred BB01       \--*  PHI_ARG   int    V03 loc2         u:2 $40

***** BB02
STMT00008 (IL 0x01D...0x020)
N016 ( 14, 18) [000032] -A-XG---R---              *  ASG       ref    <l:$1cc, c:$1cb>
N015 (  1,  1) [000031] D------N----              +--*  LCL_VAR   ref    V04 loc3         d:2 <l:$1ca, c:$2c1>
N014 ( 14, 18) [000334] ---XG-------              \--*  COMMA     ref    <l:$1cc, c:$1cb>
N004 (  8, 11) [000327] ---X--------                 +--*  ARR_BOUNDS_CHECK_Rng void   $1c7
N001 (  1,  1) [000029] ------------                 |  +--*  LCL_VAR   int    V03 loc2         u:3 $280
N003 (  3,  3) [000326] ---X--------                 |  \--*  ARR_LENGTH int    $240
N002 (  1,  1) [000028] ------------                 |     \--*  LCL_VAR   ref    V02 loc1         u:2 $80
N013 (  6,  7) [000030] a---G-------                 \--*  IND       ref    <l:$1ca, c:$2c1>
N012 (  5,  6) [000333] -------N----                    \--*  ADD       byref  $3c0
N005 (  1,  1) [000324] ------------                       +--*  LCL_VAR   ref    V02 loc1         u:2 $80
N011 (  4,  5) [000332] -------N----                       \--*  ADD       long   $302
N009 (  3,  4) [000330] -------N----                          +--*  LSH       long   $301
N007 (  2,  3) [000328] ------------                          |  +--*  CAST      long <- int $300
N006 (  1,  1) [000325] i-----------                          |  |  \--*  LCL_VAR   int    V03 loc2         u:3 $280
N008 (  1,  1) [000329] -------N----                          |  \--*  CNS_INT   long   3 $340
N010 (  1,  1) [000331] ------------                          \--*  CNS_INT   long   16 Fseq[#FirstElem] $342

***** BB02
STMT00042 (IL 0x021...  ???)
N002 (  2,  2) [000197] ---X--------              *  NULLCHECK byte   <l:$1d0, c:$1cf>
N001 (  1,  1) [000196] ------------              \--*  LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>

***** BB02
STMT00010 (IL   ???...  ???)
N011 ( 24, 27) [000039] --CXG-------              *  JTRUE     void  
N010 ( 22, 25) [000038] J-CXG--N----              \--*  EQ        int    $244
N008 ( 20, 23) [000195] --CXG-------                 +--*  CALL      int    System.String.EndsWith $401
N005 (  4, 12) [000336] #---G------- arg1 in rdx     |  +--*  IND       ref    $1d1
N004 (  2, 10) [000335] H-----------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E ".csproj" $184
N006 (  1,  1) [000033] ------------ this in rcx     |  +--*  LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
N007 (  1,  1) [000194] ------------ arg2 in r8      |  \--*  CNS_INT   int    0 $40
N009 (  1,  1) [000037] ------------                 \--*  CNS_INT   int    0 $40

------------ BB03 [02E..037) -> BB05 (cond), preds={BB02} succs={BB04,BB05}

***** BB03
STMT00043 (IL 0x02E...  ???)
N011 ( 11, 11) [000204] -A-XG---R---              *  ASG       int    $VN.Void
N010 (  4,  4) [000203] D--XG--N----              +--*  IND       int    $25a
N009 (  2,  2) [000341] -------N----              |  \--*  ADD       byref  $386
N007 (  1,  1) [000177] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N008 (  1,  1) [000340] ------------              |     \--*  CNS_INT   long   20 field offset Fseq[_version] $348
N006 (  6,  6) [000202] ---XG-------              \--*  ADD       int    <l:$25c, c:$25b>
N004 (  4,  4) [000200] ---XG-------                 +--*  IND       int    <l:$258, c:$257>
N003 (  2,  2) [000343] -------N----                 |  \--*  ADD       byref  $386
N001 (  1,  1) [000199] ------------                 |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N002 (  1,  1) [000342] ------------                 |     \--*  CNS_INT   long   20 field offset Fseq[_version] $348
N005 (  1,  1) [000201] ------------                 \--*  CNS_INT   int    1 $46

***** BB03
STMT00044 (IL 0x02E...  ???)
N006 (  4,  4) [000208] -A-XG---R---              *  ASG       ref    <l:$1f0, c:$1ef>
N005 (  1,  1) [000207] D------N----              +--*  LCL_VAR   ref    V18 tmp12        d:2 <l:$1ee, c:$2fc>
N004 (  4,  4) [000206] ---XG-------              \--*  IND       ref    <l:$1f0, c:$1ef>
N003 (  2,  2) [000345] -------N----                 \--*  ADD       byref  $387
N001 (  1,  1) [000205] ------------                    +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N002 (  1,  1) [000344] ------------                    \--*  CNS_INT   long   8 field offset Fseq[_items] $343

***** BB03
STMT00045 (IL 0x02E...  ???)
N006 (  4,  4) [000212] -A-XG---R---              *  ASG       int    <l:$260, c:$25f>
N005 (  1,  1) [000211] D------N----              +--*  LCL_VAR   int    V19 tmp13        d:2 <l:$25e, c:$411>
N004 (  4,  4) [000210] ---XG-------              \--*  IND       int    <l:$260, c:$25f>
N003 (  2,  2) [000347] -------N----                 \--*  ADD       byref  $383
N001 (  1,  1) [000209] ------------                    +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N002 (  1,  1) [000346] ------------                    \--*  CNS_INT   long   16 field offset Fseq[_size] $342

***** BB03
STMT00046 (IL 0x02E...  ???)
N005 (  7,  7) [000217] ---X--------              *  JTRUE     void  
N004 (  5,  5) [000216] N--X---N-U--              \--*  LE        int    <l:$266, c:$265>
N002 (  3,  3) [000215] ---X--------                 +--*  ARR_LENGTH int    <l:$262, c:$261>
N001 (  1,  1) [000214] ------------                 |  \--*  LCL_VAR   ref    V18 tmp12        u:2 <l:$1ee, c:$2fc>
N003 (  1,  1) [000213] ------------                 \--*  LCL_VAR   int    V19 tmp13        u:2 <l:$25e, c:$411>

------------ BB04 [02E..02F) -> BB06 (always), preds={BB03} succs={BB06}

***** BB04
STMT00048 (IL 0x02E...  ???)
N008 (  8,  8) [000225] -A-XG---R---              *  ASG       int    $VN.Void
N007 (  4,  4) [000224] D--XG--N----              +--*  IND       int    $268
N006 (  2,  2) [000349] -------N----              |  \--*  ADD       byref  $383
N004 (  1,  1) [000220] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N005 (  1,  1) [000348] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size] $342
N003 (  3,  3) [000223] ------------              \--*  ADD       int    <l:$268, c:$267>
N001 (  1,  1) [000221] ------------                 +--*  LCL_VAR   int    V19 tmp13        u:2 <l:$25e, c:$411>
N002 (  1,  1) [000222] ------------                 \--*  CNS_INT   int    1 $46

***** BB04
STMT00049 (IL 0x02E...  ???)
N007 ( 17, 11) [000229] --CXG-------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST $1db
N004 (  1,  1) [000226] ------------ arg0 in rcx  +--*  LCL_VAR   ref    V18 tmp12        u:2 (last use) <l:$1ee, c:$2fc>
N005 (  1,  1) [000227] ------------ arg1 in rdx  +--*  LCL_VAR   int    V19 tmp13        u:2 (last use) <l:$25e, c:$411>
N006 (  1,  1) [000228] ------------ arg2 in r8   \--*  LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>

------------ BB05 [02E..02F), preds={BB03} succs={BB06}

***** BB05
STMT00047 (IL 0x02E...  ???)
N005 ( 16, 10) [000219] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize $VN.Void
N003 (  1,  1) [000218] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N004 (  1,  1) [000178] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>

------------ BB06 [???..???) -> BB14 (always), preds={BB04,BB05} succs={BB14}

------------ BB07 [037..04B) -> BB10 (cond), preds={BB02} succs={BB08,BB10}

***** BB07
STMT00053 (IL 0x037...  ???)
N005 ( 15,  7) [000247] -ACXG---R---              *  ASG       ref    $2c6
N004 (  1,  1) [000246] D------N----              +--*  LCL_VAR   ref    V20 tmp14        d:2 $2c6
N003 ( 15,  7) [000236] --CXG-------              \--*  CALL      ref    System.IO.EnumerationOptions.FromSearchOption $2c6
N002 (  1,  1) [000235] ------------ arg0 in rcx     \--*  CNS_INT   int    1 $46

***** BB07
STMT00013 (IL   ???...  ???)
N012 ( 21, 24) [000054] -ACXG---R---              *  ASG       ref    $2cc
N011 (  1,  1) [000053] D------N----              +--*  LCL_VAR   ref    V09 tmp3         d:2 $2cc
N010 ( 21, 24) [000245] --CXG-------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths $2cc
N006 (  4, 12) [000357] #---G------- arg1 in rdx     +--*  IND       ref    $1d2
N005 (  2, 10) [000356] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*" $185
N007 (  1,  1) [000040] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
N008 (  1,  1) [000244] ------------ arg3 in r9      +--*  LCL_VAR   ref    V20 tmp14        u:2 (last use) $2c6
N009 (  1,  1) [000243] ------------ arg2 in r8      \--*  CNS_INT   int    2 $42

***** BB07
STMT00012 (IL   ???...  ???)
N010 ( 21, 30) [000052] -ACXG---R---              *  ASG       ref    <l:$1d5, c:$1d4>
N009 (  1,  1) [000051] D------N----              +--*  LCL_VAR   ref    V08 tmp2         d:2 <l:$4c0, c:$2cf>
N008 ( 21, 30) [000050] --CXG-------              \--*  COMMA     ref    <l:$1d5, c:$1d4>
N005 ( 17, 18) [000049] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
N003 (  2, 10) [000047] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0 $345
N004 (  1,  1) [000048] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35 $47
N007 (  4, 12) [000045] n---G-------                 \--*  IND       ref    <l:$4c0, c:$2cf>
N006 (  2, 10) [000364] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] $186

***** BB07
STMT00015 (IL   ???...0x049)
N003 (  1,  3) [000062] -A------R---              *  ASG       ref    $2cc
N002 (  1,  1) [000061] D------N----              +--*  LCL_VAR   ref    V10 tmp4         d:2 $2cc
N001 (  1,  1) [000055] ------------              \--*  LCL_VAR   ref    V09 tmp3         u:2 (last use) $2cc

***** BB07
STMT00016 (IL   ???...  ???)
N003 (  1,  3) [000065] -A------R---              *  ASG       ref    <l:$4c0, c:$2cf>
N002 (  1,  1) [000064] D------N----              +--*  LCL_VAR   ref    V11 tmp5         d:2 <l:$4c0, c:$2cf>
N001 (  1,  1) [000056] ------------              \--*  LCL_VAR   ref    V08 tmp2         u:2 <l:$4c0, c:$2cf>

***** BB07
STMT00014 (IL   ???...  ???)
N004 (  5,  5) [000060] ------------              *  JTRUE     void  
N003 (  3,  3) [000059] J------N----              \--*  NE        int    <l:$246, c:$245>
N001 (  1,  1) [000057] ------------                 +--*  LCL_VAR   ref    V11 tmp5         u:2 (last use) <l:$4c0, c:$2cf>
N002 (  1,  1) [000058] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB08 [000..062) -> BB16 (cond), preds={BB07} succs={BB09,BB16}

***** BB08
STMT00033 (IL   ???...0x05D)
N005 ( 16, 16) [000160] -AC-----R---              *  ASG       ref    $1d6
N004 (  1,  1) [000159] D------N----              +--*  LCL_VAR   ref    V17 tmp11        d:2 $1d6
N003 ( 16, 16) [000158] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1d6
N002 (  2, 10) [000157] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $187

***** BB08
STMT00058 (IL   ???...  ???)
N010 ( 21, 30) [000262] -ACXG---R---              *  ASG       ref    <l:$1d8, c:$1d7>
N009 (  1,  1) [000261] D------N----              +--*  LCL_VAR   ref    V21 tmp15        d:2 <l:$4c1, c:$2d5>
N008 ( 21, 30) [000155] --CXG-------              \--*  COMMA     ref    <l:$1d8, c:$1d7>
N005 ( 17, 18) [000154] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
N003 (  2, 10) [000152] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0 $345
N004 (  1,  1) [000153] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35 $47
N007 (  4, 12) [000150] n---G-------                 \--*  IND       ref    <l:$4c1, c:$2d5>
N006 (  2, 10) [000368] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] $188

***** BB08
STMT00054 (IL   ???...  ???)
N004 (  5,  5) [000252] ------------              *  JTRUE     void  
N003 (  3,  3) [000251] J------N----              \--*  EQ        int    <l:$248, c:$247>
N001 (  1,  1) [000249] ------------                 +--*  LCL_VAR   ref    V21 tmp15        u:2 <l:$4c1, c:$2d5>
N002 (  1,  1) [000250] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB09 [000..000), preds={BB08} succs={BB10}

***** BB09
STMT00055 (IL   ???...  ???)
N006 (  6,  6) [000255] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000254] D--XG--N----              +--*  IND       ref    $4c1
N003 (  2,  2) [000370] -------N----              |  \--*  ADD       byref  $381
N001 (  1,  1) [000161] ------------              |     +--*  LCL_VAR   ref    V17 tmp11        u:2 $1d6
N002 (  1,  1) [000369] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $343
N005 (  1,  1) [000253] ------------              \--*  LCL_VAR   ref    V21 tmp15        u:2 (last use) <l:$4c1, c:$2d5>

***** BB09
STMT00056 (IL   ???...  ???)
N006 (  7, 15) [000259] -A-XG-------              *  ASG       long   $VN.Void
N004 (  4,  4) [000258] D--XG--N----              +--*  IND       long   $18a
N003 (  2,  2) [000372] -------N----              |  \--*  ADD       byref  $382
N001 (  1,  1) [000256] ------------              |     +--*  LCL_VAR   ref    V17 tmp11        u:2 $1d6
N002 (  1,  1) [000371] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $346
N005 (  2, 10) [000156] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $18a

***** BB09
STMT00035 (IL 0x05C...  ???)
N010 ( 23, 32) [000171] -ACXG-------              *  COMMA     void   $1db
N005 ( 17, 18) [000170] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
N003 (  2, 10) [000168] ------------ arg0 in rcx  |  +--*  CNS_INT   long   0x7ffc7e4c17e0 $345
N004 (  1,  1) [000169] ------------ arg1 in rdx  |  \--*  CNS_INT   int    35 $47
N009 (  6, 14) [000166] -A--G-------              \--*  ASG       ref    $VN.Void
N007 (  4, 12) [000165] n---G--N----                 +--*  IND       ref    $1d6
N006 (  2, 10) [000375] I-----------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] $186
N008 (  1,  1) [000164] ------------                 \--*  LCL_VAR   ref    V17 tmp11        u:2 $1d6

***** BB09
STMT00036 (IL   ???...0x05D)
N003 (  1,  3) [000175] -A------R---              *  ASG       ref    $1d6
N002 (  1,  1) [000174] D------N----              +--*  LCL_VAR   ref    V11 tmp5         d:4 $1d6
N001 (  1,  1) [000163] ------------              \--*  LCL_VAR   ref    V17 tmp11        u:2 (last use) $1d6

------------ BB10 [062..085) -> BB13 (cond), preds={BB07,BB09} succs={BB11,BB13}

***** BB10
STMT00074 (IL   ???...  ???)
N005 (  0,  0) [000435] -A------R---              *  ASG       ref   
N004 (  0,  0) [000433] D------N----              +--*  LCL_VAR   ref    V11 tmp5         d:3
N003 (  0,  0) [000434] ------------              \--*  PHI       ref   
N001 (  0,  0) [000441] ------------ pred BB09       +--*  PHI_ARG   ref    V11 tmp5         u:4 $1d6
N002 (  0,  0) [000438] ------------ pred BB07       \--*  PHI_ARG   ref    V11 tmp5         u:2 <l:$4c0, c:$2cf>

***** BB10
STMT00018 (IL   ???...  ???)
N009 ( 18, 20) [000075] -ACXG---R---              *  ASG       ref    $2db
N008 (  1,  1) [000074] D------N----              +--*  LCL_VAR   ref    V05 loc4         d:2 $2db
N007 ( 18, 20) [000071] --CXG-------              \--*  CALL      ref    System.Linq.Enumerable.Where $2db
N004 (  1,  1) [000070] ------------ arg2 in r8      +--*  LCL_VAR   ref    V11 tmp5         u:3 (last use) $4c4
N005 (  1,  1) [000069] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V10 tmp4         u:2 (last use) $2cc
N006 (  2, 10) [000072] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $18d

***** BB10
STMT00061 (IL 0x069...  ???)
N010 ( 21, 30) [000283] -ACXG---R---              *  ASG       ref    <l:$1df, c:$1de>
N009 (  1,  1) [000282] D------N----              +--*  LCL_VAR   ref    V23 tmp17        d:2 <l:$4c5, c:$2de>
N008 ( 21, 30) [000276] --CXG-------              \--*  COMMA     ref    <l:$1df, c:$1de>
N005 ( 17, 18) [000275] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $309
N003 (  2, 10) [000273] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e783cd8 $347
N004 (  1,  1) [000274] ------------ arg1 in rdx     |  \--*  CNS_INT   int    40 $4a
N007 (  4, 12) [000271] n---G-------                 \--*  IND       ref    <l:$4c5, c:$2de>
N006 (  2, 10) [000381] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<Compatible>k__BackingField] $18e

***** BB10
STMT00063 (IL   ???...  ???)
N012 ( 21, 24) [000290] -ACXG---R---              *  ASG       ref    $2e3
N011 (  1,  1) [000289] D------N----              +--*  LCL_VAR   ref    V24 tmp18        d:2 $2e3
N010 ( 21, 24) [000281] --CXG-------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths $2e3
N006 (  4, 12) [000383] #---G------- arg1 in rdx     +--*  IND       ref    $1e0
N005 (  2, 10) [000382] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*.csproj" $18f
N007 (  1,  1) [000077] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>
N008 (  1,  1) [000280] ------------ arg3 in r9      +--*  LCL_VAR   ref    V23 tmp17        u:2 (last use) <l:$4c5, c:$2de>
N009 (  1,  1) [000279] ------------ arg2 in r8      \--*  CNS_INT   int    1 $46

***** BB10
STMT00062 (IL   ???...  ???)
N010 ( 20, 15) [000288] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange $VN.Void
N007 (  4,  4) [000286] ---XG------- arg1 in rdx  +--*  IND       int    <l:$24c, c:$24b>
N006 (  2,  2) [000389] -------N----              |  \--*  ADD       byref  $383
N004 (  1,  1) [000285] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N005 (  1,  1) [000388] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size] $342
N008 (  1,  1) [000076] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N009 (  1,  1) [000287] ------------ arg2 in r8   \--*  LCL_VAR   ref    V24 tmp18        u:2 (last use) $2e3

***** BB10
STMT00021 (IL 0x07A...  ???)
N010 ( 21, 30) [000091] -ACXG---R---              *  ASG       ref    <l:$1e3, c:$1e2>
N009 (  1,  1) [000090] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:2 <l:$4c6, c:$2e9>
N008 ( 21, 30) [000089] --CXG-------              \--*  COMMA     ref    <l:$1e3, c:$1e2>
N005 ( 17, 18) [000088] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
N003 (  2, 10) [000086] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0 $345
N004 (  1,  1) [000087] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35 $47
N007 (  4, 12) [000084] n---G-------                 \--*  IND       ref    <l:$4c6, c:$2e9>
N006 (  2, 10) [000395] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] $191

***** BB10
STMT00023 (IL   ???...0x083)
N003 (  1,  3) [000098] -A------R---              *  ASG       ref    $1c1
N002 (  1,  1) [000097] D------N----              +--*  LCL_VAR   ref    V13 tmp7         d:2 $1c1
N001 (  1,  1) [000082] ------------              \--*  LCL_VAR   ref    V01 loc0         u:2 $1c1

***** BB10
STMT00024 (IL   ???...  ???)
N003 (  1,  3) [000101] -A------R---              *  ASG       ref    $2db
N002 (  1,  1) [000100] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:2 $2db
N001 (  1,  1) [000083] ------------              \--*  LCL_VAR   ref    V05 loc4         u:2 (last use) $2db

***** BB10
STMT00025 (IL   ???...  ???)
N003 (  1,  3) [000104] -A------R---              *  ASG       ref    <l:$4c6, c:$2e9>
N002 (  1,  1) [000103] D------N----              +--*  LCL_VAR   ref    V15 tmp9         d:2 <l:$4c6, c:$2e9>
N001 (  1,  1) [000092] ------------              \--*  LCL_VAR   ref    V12 tmp6         u:2 <l:$4c6, c:$2e9>

***** BB10
STMT00022 (IL   ???...  ???)
N004 (  5,  5) [000096] ------------              *  JTRUE     void  
N003 (  3,  3) [000095] J------N----              \--*  NE        int    <l:$24e, c:$24d>
N001 (  1,  1) [000093] ------------                 +--*  LCL_VAR   ref    V15 tmp9         u:2 (last use) <l:$4c6, c:$2e9>
N002 (  1,  1) [000094] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB11 [000..09C) -> BB16 (cond), preds={BB10} succs={BB12,BB16}

***** BB11
STMT00029 (IL   ???...0x097)
N005 ( 16, 16) [000131] -AC-----R---              *  ASG       ref    $1e4
N004 (  1,  1) [000130] D------N----              +--*  LCL_VAR   ref    V16 tmp10        d:2 $1e4
N003 ( 16, 16) [000129] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1e4
N002 (  2, 10) [000128] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $192

***** BB11
STMT00068 (IL   ???...  ???)
N010 ( 21, 30) [000305] -ACXG---R---              *  ASG       ref    <l:$1e6, c:$1e5>
N009 (  1,  1) [000304] D------N----              +--*  LCL_VAR   ref    V25 tmp19        d:2 <l:$4c7, c:$2f0>
N008 ( 21, 30) [000126] --CXG-------              \--*  COMMA     ref    <l:$1e6, c:$1e5>
N005 ( 17, 18) [000125] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
N003 (  2, 10) [000123] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0 $345
N004 (  1,  1) [000124] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35 $47
N007 (  4, 12) [000121] n---G-------                 \--*  IND       ref    <l:$4c7, c:$2f0>
N006 (  2, 10) [000399] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] $188

***** BB11
STMT00064 (IL   ???...  ???)
N004 (  5,  5) [000295] ------------              *  JTRUE     void  
N003 (  3,  3) [000294] J------N----              \--*  EQ        int    <l:$250, c:$24f>
N001 (  1,  1) [000292] ------------                 +--*  LCL_VAR   ref    V25 tmp19        u:2 <l:$4c7, c:$2f0>
N002 (  1,  1) [000293] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB12 [000..000), preds={BB11} succs={BB13}

***** BB12
STMT00065 (IL   ???...  ???)
N006 (  6,  6) [000298] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000297] D--XG--N----              +--*  IND       ref    $4c7
N003 (  2,  2) [000401] -------N----              |  \--*  ADD       byref  $384
N001 (  1,  1) [000132] ------------              |     +--*  LCL_VAR   ref    V16 tmp10        u:2 $1e4
N002 (  1,  1) [000400] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $343
N005 (  1,  1) [000296] ------------              \--*  LCL_VAR   ref    V25 tmp19        u:2 (last use) <l:$4c7, c:$2f0>

***** BB12
STMT00066 (IL   ???...  ???)
N006 (  7, 15) [000302] -A-XG-------              *  ASG       long   $VN.Void
N004 (  4,  4) [000301] D--XG--N----              +--*  IND       long   $194
N003 (  2,  2) [000403] -------N----              |  \--*  ADD       byref  $385
N001 (  1,  1) [000299] ------------              |     +--*  LCL_VAR   ref    V16 tmp10        u:2 $1e4
N002 (  1,  1) [000402] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $346
N005 (  2, 10) [000127] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $194

***** BB12
STMT00031 (IL 0x096...  ???)
N010 ( 23, 32) [000142] -ACXG-------              *  COMMA     void   $1db
N005 ( 17, 18) [000141] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
N003 (  2, 10) [000139] ------------ arg0 in rcx  |  +--*  CNS_INT   long   0x7ffc7e4c17e0 $345
N004 (  1,  1) [000140] ------------ arg1 in rdx  |  \--*  CNS_INT   int    35 $47
N009 (  6, 14) [000137] -A--G-------              \--*  ASG       ref    $VN.Void
N007 (  4, 12) [000136] n---G--N----                 +--*  IND       ref    $1e4
N006 (  2, 10) [000406] I-----------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] $191
N008 (  1,  1) [000135] ------------                 \--*  LCL_VAR   ref    V16 tmp10        u:2 $1e4

***** BB12
STMT00032 (IL   ???...0x097)
N003 (  1,  3) [000148] -A------R---              *  ASG       ref    $1e4
N002 (  1,  1) [000147] D------N----              +--*  LCL_VAR   ref    V15 tmp9         d:4 $1e4
N001 (  1,  1) [000134] ------------              \--*  LCL_VAR   ref    V16 tmp10        u:2 (last use) $1e4

------------ BB13 [09C..0A6), preds={BB10,BB12} succs={BB14}

***** BB13
STMT00073 (IL   ???...  ???)
N005 (  0,  0) [000432] -A------R---              *  ASG       ref   
N004 (  0,  0) [000430] D------N----              +--*  LCL_VAR   ref    V15 tmp9         d:3
N003 (  0,  0) [000431] ------------              \--*  PHI       ref   
N001 (  0,  0) [000440] ------------ pred BB12       +--*  PHI_ARG   ref    V15 tmp9         u:4 $1e4
N002 (  0,  0) [000439] ------------ pred BB10       \--*  PHI_ARG   ref    V15 tmp9         u:2 <l:$4c6, c:$2e9>

***** BB13
STMT00070 (IL   ???...  ???)
N009 ( 18, 20) [000313] -ACXG---R---              *  ASG       ref    $2f6
N008 (  1,  1) [000312] D------N----              +--*  LCL_VAR   ref    V27 tmp21        d:2 $2f6
N007 ( 18, 20) [000112] --CXG-------              \--*  CALL      ref    System.Linq.Enumerable.SelectMany $2f6
N004 (  1,  1) [000111] ------------ arg2 in r8      +--*  LCL_VAR   ref    V15 tmp9         u:3 (last use) $4ca
N005 (  1,  1) [000110] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V14 tmp8         u:2 (last use) $2db
N006 (  2, 10) [000113] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $196

***** BB13
STMT00069 (IL   ???...  ???)
N010 ( 20, 15) [000311] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange $VN.Void
N007 (  4,  4) [000309] ---XG------- arg1 in rdx  +--*  IND       int    <l:$254, c:$253>
N006 (  2,  2) [000411] -------N----              |  \--*  ADD       byref  $383
N004 (  1,  1) [000308] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N005 (  1,  1) [000410] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size] $342
N008 (  1,  1) [000109] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         u:2 (last use) $1c1
N009 (  1,  1) [000310] ------------ arg2 in r8   \--*  LCL_VAR   ref    V27 tmp21        u:2 (last use) $2f6

------------ BB14 [0A6..0B3) -> BB02 (cond), preds={BB06,BB13} succs={BB15,BB02}

***** BB14
STMT00028 (IL 0x0A6...0x0A9)
N005 (  3,  3) [000120] -A------R---              *  ASG       int    $269
N004 (  1,  1) [000119] D------N----              +--*  LCL_VAR   int    V03 loc2         d:4 $269
N003 (  3,  3) [000118] ------------              \--*  ADD       int    $269
N001 (  1,  1) [000116] ------------                 +--*  LCL_VAR   int    V03 loc2         u:3 (last use) $280
N002 (  1,  1) [000117] ------------                 \--*  CNS_INT   int    1 $46

***** BB14
STMT00007 (IL 0x0AA...0x0AE)
N005 (  7,  7) [000027] ---X--------              *  JTRUE     void  
N004 (  5,  5) [000026] J--X---N----              \--*  GT        int    $26b
N002 (  3,  3) [000025] ---X--------                 +--*  ARR_LENGTH int    $240
N001 (  1,  1) [000024] ------------                 |  \--*  LCL_VAR   ref    V02 loc1         u:2 $80
N003 (  1,  1) [000023] ------------                 \--*  LCL_VAR   int    V03 loc2         u:4 $269

------------ BB15 [0B3..0C7) (return), preds={BB01,BB14} succs={}

***** BB15
STMT00038 (IL 0x0B3...0x0C4)
N005 ( 17, 18) [000181] --CXG-------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle $VN.Void
N003 (  1,  1) [000180] ------------ arg1 in rdx  +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N004 (  2, 10) [000182] H----------- arg0 in rcx  \--*  CNS_INT(h) long   0xd1ffab1e method $19c

***** BB15
STMT00040 (IL   ???...  ???)
N008 ( 21, 31) [000185] --CXG-------              *  CALL      ref    SolutionAnalyzer.Logger.Log $10d
N005 (  4, 12) [000418] #---G------- arg1 in rdx  +--*  IND       ref    $1f9
N004 (  2, 10) [000417] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Enumerated and shuffled the project paths." $19d
N006 (  2, 10) [000186] H----------- arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method $181
N007 (  1,  1) [000184] ------------ arg2 in r8   \--*  CNS_INT   int    2 $42

***** BB15
STMT00041 (IL 0x0C5...0x0C6)
N002 (  2,  2) [000191] ------------              *  RETURN    ref    $10f
N001 (  1,  1) [000190] ------------              \--*  LCL_VAR   ref    V01 loc0         u:2 (last use) $1c1

------------ BB16 [000..000) (throw), preds={BB08,BB11} succs={}

***** BB16
STMT00067 (IL   ???...  ???)
N001 ( 14,  5) [000303] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance $VN.Void

-------------------------------------------------------------------------------------------------------------------

*************** In optOptimizeValnumCSEs()

CSE candidate #01, key=$200 in BB02, [cost= 3, size= 3]: 
N003 (  3,  3) CSE #01 (use)[000326] ---X--------              *  ARR_LENGTH int    $240
N002 (  1,  1)              [000028] ------------              \--*  LCL_VAR   ref    V02 loc1         u:2 $80

CSE candidate #02, key=$304 in BB08, [cost=17, size=18]: 
N005 ( 17, 18) CSE #02 (use)[000154] H-CXG-------              *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
N003 (  2, 10)              [000152] ------------ arg0 in rcx  +--*  CNS_INT   long   0x7ffc7e4c17e0 $345
N004 (  1,  1)              [000153] ------------ arg1 in rdx  \--*  CNS_INT   int    35 $47

Blocks that generate CSE def/uses
BB01 cseGen = 0000000000000003
BB02 cseGen = 0000000000000001
BB07 cseGen = 000000000000000C
BB08 cseGen = 000000000000000C
BB09 cseGen = 000000000000000C
BB10 cseGen = 000000000000000C
BB11 cseGen = 000000000000000C
BB12 cseGen = 000000000000000C
BB14 cseGen = 0000000000000003

Performing DataFlow for ValnumCSE's
StartMerge BB01
  :: cseOut    = 000000000000001F
EndMerge BB01
  :: cseIn     = 0000000000000000
  :: cseGen    = 0000000000000003
  => cseOut    = 0000000000000003
  != preMerge  = 000000000000001F, => true
StartMerge BB02
  :: cseOut    = 000000000000001F
Merge BB02 and BB01
  :: cseIn     = 000000000000001F
  :: cseOut    = 000000000000001F
  => cseIn     = 0000000000000003
Merge BB02 and BB14
  :: cseIn     = 0000000000000003
  :: cseOut    = 000000000000001F
  => cseIn     = 0000000000000003
EndMerge BB02
  :: cseIn     = 0000000000000003
  -- cseKill   = 0000000000000005
  :: cseGen    = 0000000000000001
  => cseOut    = 0000000000000001
  != preMerge  = 000000000000001F, => true
StartMerge BB15
  :: cseOut    = 000000000000001F
Merge BB15 and BB01
  :: cseIn     = 000000000000001F
  :: cseOut    = 000000000000001F
  => cseIn     = 0000000000000003
Merge BB15 and BB14
  :: cseIn     = 0000000000000003
  :: cseOut    = 000000000000001F
  => cseIn     = 0000000000000003
EndMerge BB15
  :: cseIn     = 0000000000000003
  -- cseKill   = 0000000000000005
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000001
  != preMerge  = 000000000000001F, => true
StartMerge BB03
  :: cseOut    = 000000000000001F
Merge BB03 and BB02
  :: cseIn     = 000000000000001F
  :: cseOut    = 000000000000001F
  => cseIn     = 0000000000000001
EndMerge BB03
  :: cseIn     = 0000000000000001
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000001
  != preMerge  = 000000000000001F, => true
StartMerge BB07
  :: cseOut    = 000000000000001F
Merge BB07 and BB02
  :: cseIn     = 000000000000001F
  :: cseOut    = 000000000000001F
  => cseIn     = 0000000000000001
EndMerge BB07
  :: cseIn     = 0000000000000001
  -- cseKill   = 0000000000000005
  :: cseGen    = 000000000000000C
  => cseOut    = 000000000000000D
  != preMerge  = 000000000000001F, => true
StartMerge BB04
  :: cseOut    = 000000000000001F
Merge BB04 and BB03
  :: cseIn     = 000000000000001F
  :: cseOut    = 000000000000001F
  => cseIn     = 0000000000000001
EndMerge BB04
  :: cseIn     = 0000000000000001
  -- cseKill   = 0000000000000005
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000001
  != preMerge  = 000000000000001F, => true
StartMerge BB05
  :: cseOut    = 000000000000001F
Merge BB05 and BB03
  :: cseIn     = 000000000000001F
  :: cseOut    = 000000000000001F
  => cseIn     = 0000000000000001
EndMerge BB05
  :: cseIn     = 0000000000000001
  -- cseKill   = 0000000000000005
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000001
  != preMerge  = 000000000000001F, => true
StartMerge BB08
  :: cseOut    = 000000000000001F
Merge BB08 and BB07
  :: cseIn     = 000000000000001F
  :: cseOut    = 000000000000001F
  => cseIn     = 000000000000000D
EndMerge BB08
  :: cseIn     = 000000000000000D
  -- cseKill   = 0000000000000005
  :: cseGen    = 000000000000000C
  => cseOut    = 000000000000000D
  != preMerge  = 000000000000001F, => true
StartMerge BB10
  :: cseOut    = 000000000000001F
Merge BB10 and BB07
  :: cseIn     = 000000000000001F
  :: cseOut    = 000000000000001F
  => cseIn     = 000000000000000D
Merge BB10 and BB09
  :: cseIn     = 000000000000000D
  :: cseOut    = 000000000000001F
  => cseIn     = 000000000000000D
EndMerge BB10
  :: cseIn     = 000000000000000D
  -- cseKill   = 0000000000000005
  :: cseGen    = 000000000000000C
  => cseOut    = 000000000000000D
  != preMerge  = 000000000000001F, => true
StartMerge BB06
  :: cseOut    = 000000000000001F
Merge BB06 and BB04
  :: cseIn     = 000000000000001F
  :: cseOut    = 000000000000001F
  => cseIn     = 0000000000000001
Merge BB06 and BB05
  :: cseIn     = 0000000000000001
  :: cseOut    = 000000000000001F
  => cseIn     = 0000000000000001
EndMerge BB06
  :: cseIn     = 0000000000000001
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000001
  != preMerge  = 000000000000001F, => true
StartMerge BB06
  :: cseOut    = 0000000000000001
Merge BB06 and BB04
  :: cseIn     = 0000000000000001
  :: cseOut    = 0000000000000001
  => cseIn     = 0000000000000001
Merge BB06 and BB05
  :: cseIn     = 0000000000000001
  :: cseOut    = 0000000000000001
  => cseIn     = 0000000000000001
EndMerge BB06
  :: cseIn     = 0000000000000001
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000001
  != preMerge  = 0000000000000001, => false
StartMerge BB09
  :: cseOut    = 000000000000001F
Merge BB09 and BB08
  :: cseIn     = 000000000000001F
  :: cseOut    = 000000000000001F
  => cseIn     = 000000000000000D
EndMerge BB09
  :: cseIn     = 000000000000000D
  -- cseKill   = 0000000000000005
  :: cseGen    = 000000000000000C
  => cseOut    = 000000000000000D
  != preMerge  = 000000000000001F, => true
StartMerge BB16
  :: cseOut    = 000000000000001F
Merge BB16 and BB08
  :: cseIn     = 000000000000001F
  :: cseOut    = 000000000000001F
  => cseIn     = 000000000000000D
Merge BB16 and BB11
  :: cseIn     = 000000000000000D
  :: cseOut    = 000000000000001F
  => cseIn     = 000000000000000D
EndMerge BB16
  :: cseIn     = 000000000000000D
  -- cseKill   = 0000000000000005
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000005
  != preMerge  = 000000000000001F, => true
StartMerge BB11
  :: cseOut    = 000000000000001F
Merge BB11 and BB10
  :: cseIn     = 000000000000001F
  :: cseOut    = 000000000000001F
  => cseIn     = 000000000000000D
EndMerge BB11
  :: cseIn     = 000000000000000D
  -- cseKill   = 0000000000000005
  :: cseGen    = 000000000000000C
  => cseOut    = 000000000000000D
  != preMerge  = 000000000000001F, => true
StartMerge BB13
  :: cseOut    = 000000000000001F
Merge BB13 and BB10
  :: cseIn     = 000000000000001F
  :: cseOut    = 000000000000001F
  => cseIn     = 000000000000000D
Merge BB13 and BB12
  :: cseIn     = 000000000000000D
  :: cseOut    = 000000000000001F
  => cseIn     = 000000000000000D
EndMerge BB13
  :: cseIn     = 000000000000000D
  -- cseKill   = 0000000000000005
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000005
  != preMerge  = 000000000000001F, => true
StartMerge BB14
  :: cseOut    = 000000000000001F
Merge BB14 and BB06
  :: cseIn     = 000000000000001F
  :: cseOut    = 000000000000001F
  => cseIn     = 0000000000000001
Merge BB14 and BB13
  :: cseIn     = 0000000000000001
  :: cseOut    = 000000000000001F
  => cseIn     = 0000000000000001
EndMerge BB14
  :: cseIn     = 0000000000000001
  :: cseGen    = 0000000000000003
  => cseOut    = 0000000000000003
  != preMerge  = 000000000000001F, => true
StartMerge BB10
  :: cseOut    = 000000000000000D
Merge BB10 and BB07
  :: cseIn     = 000000000000000D
  :: cseOut    = 000000000000000D
  => cseIn     = 000000000000000D
Merge BB10 and BB09
  :: cseIn     = 000000000000000D
  :: cseOut    = 000000000000000D
  => cseIn     = 000000000000000D
EndMerge BB10
  :: cseIn     = 000000000000000D
  -- cseKill   = 0000000000000005
  :: cseGen    = 000000000000000C
  => cseOut    = 000000000000000D
  != preMerge  = 000000000000000D, => false
StartMerge BB12
  :: cseOut    = 000000000000001F
Merge BB12 and BB11
  :: cseIn     = 000000000000001F
  :: cseOut    = 000000000000001F
  => cseIn     = 000000000000000D
EndMerge BB12
  :: cseIn     = 000000000000000D
  -- cseKill   = 0000000000000005
  :: cseGen    = 000000000000000C
  => cseOut    = 000000000000000D
  != preMerge  = 000000000000001F, => true
StartMerge BB16
  :: cseOut    = 0000000000000005
Merge BB16 and BB08
  :: cseIn     = 000000000000000D
  :: cseOut    = 0000000000000005
  => cseIn     = 000000000000000D
Merge BB16 and BB11
  :: cseIn     = 000000000000000D
  :: cseOut    = 0000000000000005
  => cseIn     = 000000000000000D
EndMerge BB16
  :: cseIn     = 000000000000000D
  -- cseKill   = 0000000000000005
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000005
  != preMerge  = 0000000000000005, => false
StartMerge BB14
  :: cseOut    = 0000000000000003
Merge BB14 and BB06
  :: cseIn     = 0000000000000001
  :: cseOut    = 0000000000000003
  => cseIn     = 0000000000000001
Merge BB14 and BB13
  :: cseIn     = 0000000000000001
  :: cseOut    = 0000000000000003
  => cseIn     = 0000000000000001
EndMerge BB14
  :: cseIn     = 0000000000000001
  :: cseGen    = 0000000000000003
  => cseOut    = 0000000000000003
  != preMerge  = 0000000000000003, => false
StartMerge BB15
  :: cseOut    = 0000000000000001
Merge BB15 and BB01
  :: cseIn     = 0000000000000003
  :: cseOut    = 0000000000000001
  => cseIn     = 0000000000000003
Merge BB15 and BB14
  :: cseIn     = 0000000000000003
  :: cseOut    = 0000000000000001
  => cseIn     = 0000000000000003
EndMerge BB15
  :: cseIn     = 0000000000000003
  -- cseKill   = 0000000000000005
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000001
  != preMerge  = 0000000000000001, => false
StartMerge BB02
  :: cseOut    = 0000000000000001
Merge BB02 and BB01
  :: cseIn     = 0000000000000003
  :: cseOut    = 0000000000000001
  => cseIn     = 0000000000000003
Merge BB02 and BB14
  :: cseIn     = 0000000000000003
  :: cseOut    = 0000000000000001
  => cseIn     = 0000000000000003
EndMerge BB02
  :: cseIn     = 0000000000000003
  -- cseKill   = 0000000000000005
  :: cseGen    = 0000000000000001
  => cseOut    = 0000000000000001
  != preMerge  = 0000000000000001, => false
StartMerge BB13
  :: cseOut    = 0000000000000005
Merge BB13 and BB10
  :: cseIn     = 000000000000000D
  :: cseOut    = 0000000000000005
  => cseIn     = 000000000000000D
Merge BB13 and BB12
  :: cseIn     = 000000000000000D
  :: cseOut    = 0000000000000005
  => cseIn     = 000000000000000D
EndMerge BB13
  :: cseIn     = 000000000000000D
  -- cseKill   = 0000000000000005
  :: cseGen    = 0000000000000000
  => cseOut    = 0000000000000005
  != preMerge  = 0000000000000005, => false

After performing DataFlow for ValnumCSE's
BB01 cseIn  = 0000000000000000, cseGen = 0000000000000003, cseOut = 0000000000000003
BB02 cseIn  = 0000000000000003, cseGen = 0000000000000001, cseOut = 0000000000000001
BB03 cseIn  = 0000000000000001, cseGen = 0000000000000000, cseOut = 0000000000000001
BB04 cseIn  = 0000000000000001, cseGen = 0000000000000000, cseOut = 0000000000000001
BB05 cseIn  = 0000000000000001, cseGen = 0000000000000000, cseOut = 0000000000000001
BB06 cseIn  = 0000000000000001, cseGen = 0000000000000000, cseOut = 0000000000000001
BB07 cseIn  = 0000000000000001, cseGen = 000000000000000C, cseOut = 000000000000000D
BB08 cseIn  = 000000000000000D, cseGen = 000000000000000C, cseOut = 000000000000000D
BB09 cseIn  = 000000000000000D, cseGen = 000000000000000C, cseOut = 000000000000000D
BB10 cseIn  = 000000000000000D, cseGen = 000000000000000C, cseOut = 000000000000000D
BB11 cseIn  = 000000000000000D, cseGen = 000000000000000C, cseOut = 000000000000000D
BB12 cseIn  = 000000000000000D, cseGen = 000000000000000C, cseOut = 000000000000000D
BB13 cseIn  = 000000000000000D, cseGen = 0000000000000000, cseOut = 0000000000000005
BB14 cseIn  = 0000000000000001, cseGen = 0000000000000003, cseOut = 0000000000000003
BB15 cseIn  = 0000000000000003, cseGen = 0000000000000000, cseOut = 0000000000000001
BB16 cseIn  = 000000000000000D, cseGen = 0000000000000000, cseOut = 0000000000000005

Labeling the CSEs with Use/Def information
BB01 [000423] Def of CSE #01 [weight=1   ]
BB02 [000326] Use of CSE #01 [weight=4   ]
BB07 [000049] Def of CSE #02 [weight=2   ]
BB08 [000154] Use of CSE #02 [weight=2   ] *** Now Live Across Call ***
BB09 [000170] Use of CSE #02 [weight=2   ]
BB10 [000088] Use of CSE #02 [weight=2   ]
BB11 [000125] Use of CSE #02 [weight=2   ]
BB12 [000141] Use of CSE #02 [weight=2   ]
BB14 [000025] Use of CSE #01 [weight=4   ] *** Now Live Across Call ***

************ Trees at start of optValnumCSE_Heuristic()

------------ BB01 [000..01D) -> BB15 (cond), preds={} succs={BB02,BB15}

***** BB01
STMT00001 (IL   ???...  ???)
N008 ( 21, 31)              [000002] --CXG-------              *  CALL      ref    SolutionAnalyzer.Logger.Log $101
N005 (  4, 12)              [000317] #---G------- arg1 in rdx  +--*  IND       ref    $1c0
N004 (  2, 10)              [000316] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Started enumerating project paths." $180
N006 (  2, 10)              [000003] H----------- arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method $181
N007 (  1,  1)              [000001] ------------ arg2 in r8   \--*  CNS_INT   int    2 $42

***** BB01
STMT00002 (IL 0x00C...0x013)
N005 ( 16, 16)              [000011] -AC-----R---              *  ASG       ref    $1c1
N004 (  1,  1)              [000010] D------N----              +--*  LCL_VAR   ref    V07 tmp1         d:2 $1c1
N003 ( 16, 16)              [000009] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1c1
N002 (  2, 10)              [000008] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $182

***** BB01
STMT00003 (IL   ???...  ???)
N005 ( 16, 10)              [000013] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor $VN.Void
N003 (  1,  1)              [000012] ------------ this in rcx  +--*  LCL_VAR   ref    V07 tmp1         u:2 $1c1
N004 (  1,  1)              [000007] ------------ arg1 in rdx  \--*  CNS_INT   int    100 $43

***** BB01
STMT00004 (IL 0x013...  ???)
N003 (  1,  3)              [000016] -A------R---              *  ASG       ref    $1c1
N002 (  1,  1)              [000015] D------N----              +--*  LCL_VAR   ref    V01 loc0         d:2 $1c1
N001 (  1,  1)              [000014] ------------              \--*  LCL_VAR   ref    V07 tmp1         u:2 (last use) $1c1

***** BB01
STMT00005 (IL 0x014...0x015)
N003 (  1,  3)              [000019] -A------R---              *  ASG       ref    $80
N002 (  1,  1)              [000018] D------N----              +--*  LCL_VAR   ref    V02 loc1         d:2 $80
N001 (  1,  1)              [000017] ------------              \--*  LCL_VAR   ref    V00 arg0         u:1 (last use) $80

***** BB01
STMT00006 (IL 0x016...0x017)
N003 (  1,  3)              [000022] -A------R---              *  ASG       int    $40
N002 (  1,  1)              [000021] D------N----              +--*  LCL_VAR   int    V03 loc2         d:2 $40
N001 (  1,  1)              [000020] ------------              \--*  CNS_INT   int    0 $40

***** BB01
STMT00071 (IL 0x0AA...  ???)
N005 (  7,  7)              [000426] ---X--------              *  JTRUE     void  
N004 (  5,  5)              [000422] J--X---N----              \--*  LE        int    $242
N002 (  3,  3) CSE #01 (def)[000423] ---X--------                 +--*  ARR_LENGTH int    $240
N001 (  1,  1)              [000424] ------------                 |  \--*  LCL_VAR   ref    V02 loc1         u:2 $80
N003 (  1,  1)              [000425] ------------                 \--*  LCL_VAR   int    V03 loc2         u:2 $40

------------ BB02 [01D..02E) -> BB07 (cond), preds={BB01,BB14} succs={BB03,BB07}

***** BB02
STMT00072 (IL   ???...  ???)
N005 (  0,  0)              [000429] -A------R---              *  ASG       int   
N004 (  0,  0)              [000427] D------N----              +--*  LCL_VAR   int    V03 loc2         d:3
N003 (  0,  0)              [000428] ------------              \--*  PHI       int   
N001 (  0,  0)              [000437] ------------ pred BB14       +--*  PHI_ARG   int    V03 loc2         u:4
N002 (  0,  0)              [000436] ------------ pred BB01       \--*  PHI_ARG   int    V03 loc2         u:2 $40

***** BB02
STMT00008 (IL 0x01D...0x020)
N016 ( 14, 18)              [000032] -A-XG---R---              *  ASG       ref    <l:$1cc, c:$1cb>
N015 (  1,  1)              [000031] D------N----              +--*  LCL_VAR   ref    V04 loc3         d:2 <l:$1ca, c:$2c1>
N014 ( 14, 18)              [000334] ---XG-------              \--*  COMMA     ref    <l:$1cc, c:$1cb>
N004 (  8, 11)              [000327] ---X--------                 +--*  ARR_BOUNDS_CHECK_Rng void   $1c7
N001 (  1,  1)              [000029] ------------                 |  +--*  LCL_VAR   int    V03 loc2         u:3 $280
N003 (  3,  3) CSE #01 (use)[000326] ---X--------                 |  \--*  ARR_LENGTH int    $240
N002 (  1,  1)              [000028] ------------                 |     \--*  LCL_VAR   ref    V02 loc1         u:2 $80
N013 (  6,  7)              [000030] a---G-------                 \--*  IND       ref    <l:$1ca, c:$2c1>
N012 (  5,  6)              [000333] -------N----                    \--*  ADD       byref  $3c0
N005 (  1,  1)              [000324] ------------                       +--*  LCL_VAR   ref    V02 loc1         u:2 $80
N011 (  4,  5)              [000332] -------N----                       \--*  ADD       long   $302
N009 (  3,  4)              [000330] -------N----                          +--*  LSH       long   $301
N007 (  2,  3)              [000328] ------------                          |  +--*  CAST      long <- int $300
N006 (  1,  1)              [000325] i-----------                          |  |  \--*  LCL_VAR   int    V03 loc2         u:3 $280
N008 (  1,  1)              [000329] -------N----                          |  \--*  CNS_INT   long   3 $340
N010 (  1,  1)              [000331] ------------                          \--*  CNS_INT   long   16 Fseq[#FirstElem] $342

***** BB02
STMT00042 (IL 0x021...  ???)
N002 (  2,  2)              [000197] ---X--------              *  NULLCHECK byte   <l:$1d0, c:$1cf>
N001 (  1,  1)              [000196] ------------              \--*  LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>

***** BB02
STMT00010 (IL   ???...  ???)
N011 ( 24, 27)              [000039] --CXG-------              *  JTRUE     void  
N010 ( 22, 25)              [000038] J-CXG--N----              \--*  EQ        int    $244
N008 ( 20, 23)              [000195] --CXG-------                 +--*  CALL      int    System.String.EndsWith $401
N005 (  4, 12)              [000336] #---G------- arg1 in rdx     |  +--*  IND       ref    $1d1
N004 (  2, 10)              [000335] H-----------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E ".csproj" $184
N006 (  1,  1)              [000033] ------------ this in rcx     |  +--*  LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
N007 (  1,  1)              [000194] ------------ arg2 in r8      |  \--*  CNS_INT   int    0 $40
N009 (  1,  1)              [000037] ------------                 \--*  CNS_INT   int    0 $40

------------ BB03 [02E..037) -> BB05 (cond), preds={BB02} succs={BB04,BB05}

***** BB03
STMT00043 (IL 0x02E...  ???)
N011 ( 11, 11)              [000204] -A-XG---R---              *  ASG       int    $VN.Void
N010 (  4,  4)              [000203] D--XG--N----              +--*  IND       int    $25a
N009 (  2,  2)              [000341] -------N----              |  \--*  ADD       byref  $386
N007 (  1,  1)              [000177] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N008 (  1,  1)              [000340] ------------              |     \--*  CNS_INT   long   20 field offset Fseq[_version] $348
N006 (  6,  6)              [000202] ---XG-------              \--*  ADD       int    <l:$25c, c:$25b>
N004 (  4,  4)              [000200] ---XG-------                 +--*  IND       int    <l:$258, c:$257>
N003 (  2,  2)              [000343] -------N----                 |  \--*  ADD       byref  $386
N001 (  1,  1)              [000199] ------------                 |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N002 (  1,  1)              [000342] ------------                 |     \--*  CNS_INT   long   20 field offset Fseq[_version] $348
N005 (  1,  1)              [000201] ------------                 \--*  CNS_INT   int    1 $46

***** BB03
STMT00044 (IL 0x02E...  ???)
N006 (  4,  4)              [000208] -A-XG---R---              *  ASG       ref    <l:$1f0, c:$1ef>
N005 (  1,  1)              [000207] D------N----              +--*  LCL_VAR   ref    V18 tmp12        d:2 <l:$1ee, c:$2fc>
N004 (  4,  4)              [000206] ---XG-------              \--*  IND       ref    <l:$1f0, c:$1ef>
N003 (  2,  2)              [000345] -------N----                 \--*  ADD       byref  $387
N001 (  1,  1)              [000205] ------------                    +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N002 (  1,  1)              [000344] ------------                    \--*  CNS_INT   long   8 field offset Fseq[_items] $343

***** BB03
STMT00045 (IL 0x02E...  ???)
N006 (  4,  4)              [000212] -A-XG---R---              *  ASG       int    <l:$260, c:$25f>
N005 (  1,  1)              [000211] D------N----              +--*  LCL_VAR   int    V19 tmp13        d:2 <l:$25e, c:$411>
N004 (  4,  4)              [000210] ---XG-------              \--*  IND       int    <l:$260, c:$25f>
N003 (  2,  2)              [000347] -------N----                 \--*  ADD       byref  $383
N001 (  1,  1)              [000209] ------------                    +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N002 (  1,  1)              [000346] ------------                    \--*  CNS_INT   long   16 field offset Fseq[_size] $342

***** BB03
STMT00046 (IL 0x02E...  ???)
N005 (  7,  7)              [000217] ---X--------              *  JTRUE     void  
N004 (  5,  5)              [000216] N--X---N-U--              \--*  LE        int    <l:$266, c:$265>
N002 (  3,  3)              [000215] ---X--------                 +--*  ARR_LENGTH int    <l:$262, c:$261>
N001 (  1,  1)              [000214] ------------                 |  \--*  LCL_VAR   ref    V18 tmp12        u:2 <l:$1ee, c:$2fc>
N003 (  1,  1)              [000213] ------------                 \--*  LCL_VAR   int    V19 tmp13        u:2 <l:$25e, c:$411>

------------ BB04 [02E..02F) -> BB06 (always), preds={BB03} succs={BB06}

***** BB04
STMT00048 (IL 0x02E...  ???)
N008 (  8,  8)              [000225] -A-XG---R---              *  ASG       int    $VN.Void
N007 (  4,  4)              [000224] D--XG--N----              +--*  IND       int    $268
N006 (  2,  2)              [000349] -------N----              |  \--*  ADD       byref  $383
N004 (  1,  1)              [000220] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N005 (  1,  1)              [000348] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size] $342
N003 (  3,  3)              [000223] ------------              \--*  ADD       int    <l:$268, c:$267>
N001 (  1,  1)              [000221] ------------                 +--*  LCL_VAR   int    V19 tmp13        u:2 <l:$25e, c:$411>
N002 (  1,  1)              [000222] ------------                 \--*  CNS_INT   int    1 $46

***** BB04
STMT00049 (IL 0x02E...  ???)
N007 ( 17, 11)              [000229] --CXG-------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST $1db
N004 (  1,  1)              [000226] ------------ arg0 in rcx  +--*  LCL_VAR   ref    V18 tmp12        u:2 (last use) <l:$1ee, c:$2fc>
N005 (  1,  1)              [000227] ------------ arg1 in rdx  +--*  LCL_VAR   int    V19 tmp13        u:2 (last use) <l:$25e, c:$411>
N006 (  1,  1)              [000228] ------------ arg2 in r8   \--*  LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>

------------ BB05 [02E..02F), preds={BB03} succs={BB06}

***** BB05
STMT00047 (IL 0x02E...  ???)
N005 ( 16, 10)              [000219] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize $VN.Void
N003 (  1,  1)              [000218] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N004 (  1,  1)              [000178] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>

------------ BB06 [???..???) -> BB14 (always), preds={BB04,BB05} succs={BB14}

------------ BB07 [037..04B) -> BB10 (cond), preds={BB02} succs={BB08,BB10}

***** BB07
STMT00053 (IL 0x037...  ???)
N005 ( 15,  7)              [000247] -ACXG---R---              *  ASG       ref    $2c6
N004 (  1,  1)              [000246] D------N----              +--*  LCL_VAR   ref    V20 tmp14        d:2 $2c6
N003 ( 15,  7)              [000236] --CXG-------              \--*  CALL      ref    System.IO.EnumerationOptions.FromSearchOption $2c6
N002 (  1,  1)              [000235] ------------ arg0 in rcx     \--*  CNS_INT   int    1 $46

***** BB07
STMT00013 (IL   ???...  ???)
N012 ( 21, 24)              [000054] -ACXG---R---              *  ASG       ref    $2cc
N011 (  1,  1)              [000053] D------N----              +--*  LCL_VAR   ref    V09 tmp3         d:2 $2cc
N010 ( 21, 24)              [000245] --CXG-------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths $2cc
N006 (  4, 12)              [000357] #---G------- arg1 in rdx     +--*  IND       ref    $1d2
N005 (  2, 10)              [000356] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*" $185
N007 (  1,  1)              [000040] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
N008 (  1,  1)              [000244] ------------ arg3 in r9      +--*  LCL_VAR   ref    V20 tmp14        u:2 (last use) $2c6
N009 (  1,  1)              [000243] ------------ arg2 in r8      \--*  CNS_INT   int    2 $42

***** BB07
STMT00012 (IL   ???...  ???)
N010 ( 21, 30)              [000052] -ACXG---R---              *  ASG       ref    <l:$1d5, c:$1d4>
N009 (  1,  1)              [000051] D------N----              +--*  LCL_VAR   ref    V08 tmp2         d:2 <l:$4c0, c:$2cf>
N008 ( 21, 30)              [000050] --CXG-------              \--*  COMMA     ref    <l:$1d5, c:$1d4>
N005 ( 17, 18) CSE #02 (def)[000049] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
N003 (  2, 10)              [000047] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0 $345
N004 (  1,  1)              [000048] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35 $47
N007 (  4, 12)              [000045] n---G-------                 \--*  IND       ref    <l:$4c0, c:$2cf>
N006 (  2, 10)              [000364] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] $186

***** BB07
STMT00015 (IL   ???...0x049)
N003 (  1,  3)              [000062] -A------R---              *  ASG       ref    $2cc
N002 (  1,  1)              [000061] D------N----              +--*  LCL_VAR   ref    V10 tmp4         d:2 $2cc
N001 (  1,  1)              [000055] ------------              \--*  LCL_VAR   ref    V09 tmp3         u:2 (last use) $2cc

***** BB07
STMT00016 (IL   ???...  ???)
N003 (  1,  3)              [000065] -A------R---              *  ASG       ref    <l:$4c0, c:$2cf>
N002 (  1,  1)              [000064] D------N----              +--*  LCL_VAR   ref    V11 tmp5         d:2 <l:$4c0, c:$2cf>
N001 (  1,  1)              [000056] ------------              \--*  LCL_VAR   ref    V08 tmp2         u:2 <l:$4c0, c:$2cf>

***** BB07
STMT00014 (IL   ???...  ???)
N004 (  5,  5)              [000060] ------------              *  JTRUE     void  
N003 (  3,  3)              [000059] J------N----              \--*  NE        int    <l:$246, c:$245>
N001 (  1,  1)              [000057] ------------                 +--*  LCL_VAR   ref    V11 tmp5         u:2 (last use) <l:$4c0, c:$2cf>
N002 (  1,  1)              [000058] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB08 [000..062) -> BB16 (cond), preds={BB07} succs={BB09,BB16}

***** BB08
STMT00033 (IL   ???...0x05D)
N005 ( 16, 16)              [000160] -AC-----R---              *  ASG       ref    $1d6
N004 (  1,  1)              [000159] D------N----              +--*  LCL_VAR   ref    V17 tmp11        d:2 $1d6
N003 ( 16, 16)              [000158] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1d6
N002 (  2, 10)              [000157] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $187

***** BB08
STMT00058 (IL   ???...  ???)
N010 ( 21, 30)              [000262] -ACXG---R---              *  ASG       ref    <l:$1d8, c:$1d7>
N009 (  1,  1)              [000261] D------N----              +--*  LCL_VAR   ref    V21 tmp15        d:2 <l:$4c1, c:$2d5>
N008 ( 21, 30)              [000155] --CXG-------              \--*  COMMA     ref    <l:$1d8, c:$1d7>
N005 ( 17, 18) CSE #02 (use)[000154] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
N003 (  2, 10)              [000152] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0 $345
N004 (  1,  1)              [000153] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35 $47
N007 (  4, 12)              [000150] n---G-------                 \--*  IND       ref    <l:$4c1, c:$2d5>
N006 (  2, 10)              [000368] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] $188

***** BB08
STMT00054 (IL   ???...  ???)
N004 (  5,  5)              [000252] ------------              *  JTRUE     void  
N003 (  3,  3)              [000251] J------N----              \--*  EQ        int    <l:$248, c:$247>
N001 (  1,  1)              [000249] ------------                 +--*  LCL_VAR   ref    V21 tmp15        u:2 <l:$4c1, c:$2d5>
N002 (  1,  1)              [000250] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB09 [000..000), preds={BB08} succs={BB10}

***** BB09
STMT00055 (IL   ???...  ???)
N006 (  6,  6)              [000255] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4)              [000254] D--XG--N----              +--*  IND       ref    $4c1
N003 (  2,  2)              [000370] -------N----              |  \--*  ADD       byref  $381
N001 (  1,  1)              [000161] ------------              |     +--*  LCL_VAR   ref    V17 tmp11        u:2 $1d6
N002 (  1,  1)              [000369] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $343
N005 (  1,  1)              [000253] ------------              \--*  LCL_VAR   ref    V21 tmp15        u:2 (last use) <l:$4c1, c:$2d5>

***** BB09
STMT00056 (IL   ???...  ???)
N006 (  7, 15)              [000259] -A-XG-------              *  ASG       long   $VN.Void
N004 (  4,  4)              [000258] D--XG--N----              +--*  IND       long   $18a
N003 (  2,  2)              [000372] -------N----              |  \--*  ADD       byref  $382
N001 (  1,  1)              [000256] ------------              |     +--*  LCL_VAR   ref    V17 tmp11        u:2 $1d6
N002 (  1,  1)              [000371] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $346
N005 (  2, 10)              [000156] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $18a

***** BB09
STMT00035 (IL 0x05C...  ???)
N010 ( 23, 32)              [000171] -ACXG-------              *  COMMA     void   $1db
N005 ( 17, 18) CSE #02 (use)[000170] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
N003 (  2, 10)              [000168] ------------ arg0 in rcx  |  +--*  CNS_INT   long   0x7ffc7e4c17e0 $345
N004 (  1,  1)              [000169] ------------ arg1 in rdx  |  \--*  CNS_INT   int    35 $47
N009 (  6, 14)              [000166] -A--G-------              \--*  ASG       ref    $VN.Void
N007 (  4, 12)              [000165] n---G--N----                 +--*  IND       ref    $1d6
N006 (  2, 10)              [000375] I-----------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] $186
N008 (  1,  1)              [000164] ------------                 \--*  LCL_VAR   ref    V17 tmp11        u:2 $1d6

***** BB09
STMT00036 (IL   ???...0x05D)
N003 (  1,  3)              [000175] -A------R---              *  ASG       ref    $1d6
N002 (  1,  1)              [000174] D------N----              +--*  LCL_VAR   ref    V11 tmp5         d:4 $1d6
N001 (  1,  1)              [000163] ------------              \--*  LCL_VAR   ref    V17 tmp11        u:2 (last use) $1d6

------------ BB10 [062..085) -> BB13 (cond), preds={BB07,BB09} succs={BB11,BB13}

***** BB10
STMT00074 (IL   ???...  ???)
N005 (  0,  0)              [000435] -A------R---              *  ASG       ref   
N004 (  0,  0)              [000433] D------N----              +--*  LCL_VAR   ref    V11 tmp5         d:3
N003 (  0,  0)              [000434] ------------              \--*  PHI       ref   
N001 (  0,  0)              [000441] ------------ pred BB09       +--*  PHI_ARG   ref    V11 tmp5         u:4 $1d6
N002 (  0,  0)              [000438] ------------ pred BB07       \--*  PHI_ARG   ref    V11 tmp5         u:2 <l:$4c0, c:$2cf>

***** BB10
STMT00018 (IL   ???...  ???)
N009 ( 18, 20)              [000075] -ACXG---R---              *  ASG       ref    $2db
N008 (  1,  1)              [000074] D------N----              +--*  LCL_VAR   ref    V05 loc4         d:2 $2db
N007 ( 18, 20)              [000071] --CXG-------              \--*  CALL      ref    System.Linq.Enumerable.Where $2db
N004 (  1,  1)              [000070] ------------ arg2 in r8      +--*  LCL_VAR   ref    V11 tmp5         u:3 (last use) $4c4
N005 (  1,  1)              [000069] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V10 tmp4         u:2 (last use) $2cc
N006 (  2, 10)              [000072] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $18d

***** BB10
STMT00061 (IL 0x069...  ???)
N010 ( 21, 30)              [000283] -ACXG---R---              *  ASG       ref    <l:$1df, c:$1de>
N009 (  1,  1)              [000282] D------N----              +--*  LCL_VAR   ref    V23 tmp17        d:2 <l:$4c5, c:$2de>
N008 ( 21, 30)              [000276] --CXG-------              \--*  COMMA     ref    <l:$1df, c:$1de>
N005 ( 17, 18)              [000275] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $309
N003 (  2, 10)              [000273] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e783cd8 $347
N004 (  1,  1)              [000274] ------------ arg1 in rdx     |  \--*  CNS_INT   int    40 $4a
N007 (  4, 12)              [000271] n---G-------                 \--*  IND       ref    <l:$4c5, c:$2de>
N006 (  2, 10)              [000381] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<Compatible>k__BackingField] $18e

***** BB10
STMT00063 (IL   ???...  ???)
N012 ( 21, 24)              [000290] -ACXG---R---              *  ASG       ref    $2e3
N011 (  1,  1)              [000289] D------N----              +--*  LCL_VAR   ref    V24 tmp18        d:2 $2e3
N010 ( 21, 24)              [000281] --CXG-------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths $2e3
N006 (  4, 12)              [000383] #---G------- arg1 in rdx     +--*  IND       ref    $1e0
N005 (  2, 10)              [000382] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*.csproj" $18f
N007 (  1,  1)              [000077] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>
N008 (  1,  1)              [000280] ------------ arg3 in r9      +--*  LCL_VAR   ref    V23 tmp17        u:2 (last use) <l:$4c5, c:$2de>
N009 (  1,  1)              [000279] ------------ arg2 in r8      \--*  CNS_INT   int    1 $46

***** BB10
STMT00062 (IL   ???...  ???)
N010 ( 20, 15)              [000288] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange $VN.Void
N007 (  4,  4)              [000286] ---XG------- arg1 in rdx  +--*  IND       int    <l:$24c, c:$24b>
N006 (  2,  2)              [000389] -------N----              |  \--*  ADD       byref  $383
N004 (  1,  1)              [000285] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N005 (  1,  1)              [000388] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size] $342
N008 (  1,  1)              [000076] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N009 (  1,  1)              [000287] ------------ arg2 in r8   \--*  LCL_VAR   ref    V24 tmp18        u:2 (last use) $2e3

***** BB10
STMT00021 (IL 0x07A...  ???)
N010 ( 21, 30)              [000091] -ACXG---R---              *  ASG       ref    <l:$1e3, c:$1e2>
N009 (  1,  1)              [000090] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:2 <l:$4c6, c:$2e9>
N008 ( 21, 30)              [000089] --CXG-------              \--*  COMMA     ref    <l:$1e3, c:$1e2>
N005 ( 17, 18) CSE #02 (use)[000088] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
N003 (  2, 10)              [000086] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0 $345
N004 (  1,  1)              [000087] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35 $47
N007 (  4, 12)              [000084] n---G-------                 \--*  IND       ref    <l:$4c6, c:$2e9>
N006 (  2, 10)              [000395] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] $191

***** BB10
STMT00023 (IL   ???...0x083)
N003 (  1,  3)              [000098] -A------R---              *  ASG       ref    $1c1
N002 (  1,  1)              [000097] D------N----              +--*  LCL_VAR   ref    V13 tmp7         d:2 $1c1
N001 (  1,  1)              [000082] ------------              \--*  LCL_VAR   ref    V01 loc0         u:2 $1c1

***** BB10
STMT00024 (IL   ???...  ???)
N003 (  1,  3)              [000101] -A------R---              *  ASG       ref    $2db
N002 (  1,  1)              [000100] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:2 $2db
N001 (  1,  1)              [000083] ------------              \--*  LCL_VAR   ref    V05 loc4         u:2 (last use) $2db

***** BB10
STMT00025 (IL   ???...  ???)
N003 (  1,  3)              [000104] -A------R---              *  ASG       ref    <l:$4c6, c:$2e9>
N002 (  1,  1)              [000103] D------N----              +--*  LCL_VAR   ref    V15 tmp9         d:2 <l:$4c6, c:$2e9>
N001 (  1,  1)              [000092] ------------              \--*  LCL_VAR   ref    V12 tmp6         u:2 <l:$4c6, c:$2e9>

***** BB10
STMT00022 (IL   ???...  ???)
N004 (  5,  5)              [000096] ------------              *  JTRUE     void  
N003 (  3,  3)              [000095] J------N----              \--*  NE        int    <l:$24e, c:$24d>
N001 (  1,  1)              [000093] ------------                 +--*  LCL_VAR   ref    V15 tmp9         u:2 (last use) <l:$4c6, c:$2e9>
N002 (  1,  1)              [000094] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB11 [000..09C) -> BB16 (cond), preds={BB10} succs={BB12,BB16}

***** BB11
STMT00029 (IL   ???...0x097)
N005 ( 16, 16)              [000131] -AC-----R---              *  ASG       ref    $1e4
N004 (  1,  1)              [000130] D------N----              +--*  LCL_VAR   ref    V16 tmp10        d:2 $1e4
N003 ( 16, 16)              [000129] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1e4
N002 (  2, 10)              [000128] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $192

***** BB11
STMT00068 (IL   ???...  ???)
N010 ( 21, 30)              [000305] -ACXG---R---              *  ASG       ref    <l:$1e6, c:$1e5>
N009 (  1,  1)              [000304] D------N----              +--*  LCL_VAR   ref    V25 tmp19        d:2 <l:$4c7, c:$2f0>
N008 ( 21, 30)              [000126] --CXG-------              \--*  COMMA     ref    <l:$1e6, c:$1e5>
N005 ( 17, 18) CSE #02 (use)[000125] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
N003 (  2, 10)              [000123] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e4c17e0 $345
N004 (  1,  1)              [000124] ------------ arg1 in rdx     |  \--*  CNS_INT   int    35 $47
N007 (  4, 12)              [000121] n---G-------                 \--*  IND       ref    <l:$4c7, c:$2f0>
N006 (  2, 10)              [000399] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] $188

***** BB11
STMT00064 (IL   ???...  ???)
N004 (  5,  5)              [000295] ------------              *  JTRUE     void  
N003 (  3,  3)              [000294] J------N----              \--*  EQ        int    <l:$250, c:$24f>
N001 (  1,  1)              [000292] ------------                 +--*  LCL_VAR   ref    V25 tmp19        u:2 <l:$4c7, c:$2f0>
N002 (  1,  1)              [000293] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB12 [000..000), preds={BB11} succs={BB13}

***** BB12
STMT00065 (IL   ???...  ???)
N006 (  6,  6)              [000298] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4)              [000297] D--XG--N----              +--*  IND       ref    $4c7
N003 (  2,  2)              [000401] -------N----              |  \--*  ADD       byref  $384
N001 (  1,  1)              [000132] ------------              |     +--*  LCL_VAR   ref    V16 tmp10        u:2 $1e4
N002 (  1,  1)              [000400] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $343
N005 (  1,  1)              [000296] ------------              \--*  LCL_VAR   ref    V25 tmp19        u:2 (last use) <l:$4c7, c:$2f0>

***** BB12
STMT00066 (IL   ???...  ???)
N006 (  7, 15)              [000302] -A-XG-------              *  ASG       long   $VN.Void
N004 (  4,  4)              [000301] D--XG--N----              +--*  IND       long   $194
N003 (  2,  2)              [000403] -------N----              |  \--*  ADD       byref  $385
N001 (  1,  1)              [000299] ------------              |     +--*  LCL_VAR   ref    V16 tmp10        u:2 $1e4
N002 (  1,  1)              [000402] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $346
N005 (  2, 10)              [000127] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $194

***** BB12
STMT00031 (IL 0x096...  ???)
N010 ( 23, 32)              [000142] -ACXG-------              *  COMMA     void   $1db
N005 ( 17, 18) CSE #02 (use)[000141] H-CXG-------              +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
N003 (  2, 10)              [000139] ------------ arg0 in rcx  |  +--*  CNS_INT   long   0x7ffc7e4c17e0 $345
N004 (  1,  1)              [000140] ------------ arg1 in rdx  |  \--*  CNS_INT   int    35 $47
N009 (  6, 14)              [000137] -A--G-------              \--*  ASG       ref    $VN.Void
N007 (  4, 12)              [000136] n---G--N----                 +--*  IND       ref    $1e4
N006 (  2, 10)              [000406] I-----------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] $191
N008 (  1,  1)              [000135] ------------                 \--*  LCL_VAR   ref    V16 tmp10        u:2 $1e4

***** BB12
STMT00032 (IL   ???...0x097)
N003 (  1,  3)              [000148] -A------R---              *  ASG       ref    $1e4
N002 (  1,  1)              [000147] D------N----              +--*  LCL_VAR   ref    V15 tmp9         d:4 $1e4
N001 (  1,  1)              [000134] ------------              \--*  LCL_VAR   ref    V16 tmp10        u:2 (last use) $1e4

------------ BB13 [09C..0A6), preds={BB10,BB12} succs={BB14}

***** BB13
STMT00073 (IL   ???...  ???)
N005 (  0,  0)              [000432] -A------R---              *  ASG       ref   
N004 (  0,  0)              [000430] D------N----              +--*  LCL_VAR   ref    V15 tmp9         d:3
N003 (  0,  0)              [000431] ------------              \--*  PHI       ref   
N001 (  0,  0)              [000440] ------------ pred BB12       +--*  PHI_ARG   ref    V15 tmp9         u:4 $1e4
N002 (  0,  0)              [000439] ------------ pred BB10       \--*  PHI_ARG   ref    V15 tmp9         u:2 <l:$4c6, c:$2e9>

***** BB13
STMT00070 (IL   ???...  ???)
N009 ( 18, 20)              [000313] -ACXG---R---              *  ASG       ref    $2f6
N008 (  1,  1)              [000312] D------N----              +--*  LCL_VAR   ref    V27 tmp21        d:2 $2f6
N007 ( 18, 20)              [000112] --CXG-------              \--*  CALL      ref    System.Linq.Enumerable.SelectMany $2f6
N004 (  1,  1)              [000111] ------------ arg2 in r8      +--*  LCL_VAR   ref    V15 tmp9         u:3 (last use) $4ca
N005 (  1,  1)              [000110] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V14 tmp8         u:2 (last use) $2db
N006 (  2, 10)              [000113] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $196

***** BB13
STMT00069 (IL   ???...  ???)
N010 ( 20, 15)              [000311] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange $VN.Void
N007 (  4,  4)              [000309] ---XG------- arg1 in rdx  +--*  IND       int    <l:$254, c:$253>
N006 (  2,  2)              [000411] -------N----              |  \--*  ADD       byref  $383
N004 (  1,  1)              [000308] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N005 (  1,  1)              [000410] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size] $342
N008 (  1,  1)              [000109] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         u:2 (last use) $1c1
N009 (  1,  1)              [000310] ------------ arg2 in r8   \--*  LCL_VAR   ref    V27 tmp21        u:2 (last use) $2f6

------------ BB14 [0A6..0B3) -> BB02 (cond), preds={BB06,BB13} succs={BB15,BB02}

***** BB14
STMT00028 (IL 0x0A6...0x0A9)
N005 (  3,  3)              [000120] -A------R---              *  ASG       int    $269
N004 (  1,  1)              [000119] D------N----              +--*  LCL_VAR   int    V03 loc2         d:4 $269
N003 (  3,  3)              [000118] ------------              \--*  ADD       int    $269
N001 (  1,  1)              [000116] ------------                 +--*  LCL_VAR   int    V03 loc2         u:3 (last use) $280
N002 (  1,  1)              [000117] ------------                 \--*  CNS_INT   int    1 $46

***** BB14
STMT00007 (IL 0x0AA...0x0AE)
N005 (  7,  7)              [000027] ---X--------              *  JTRUE     void  
N004 (  5,  5)              [000026] J--X---N----              \--*  GT        int    $26b
N002 (  3,  3) CSE #01 (use)[000025] ---X--------                 +--*  ARR_LENGTH int    $240
N001 (  1,  1)              [000024] ------------                 |  \--*  LCL_VAR   ref    V02 loc1         u:2 $80
N003 (  1,  1)              [000023] ------------                 \--*  LCL_VAR   int    V03 loc2         u:4 $269

------------ BB15 [0B3..0C7) (return), preds={BB01,BB14} succs={}

***** BB15
STMT00038 (IL 0x0B3...0x0C4)
N005 ( 17, 18)              [000181] --CXG-------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle $VN.Void
N003 (  1,  1)              [000180] ------------ arg1 in rdx  +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N004 (  2, 10)              [000182] H----------- arg0 in rcx  \--*  CNS_INT(h) long   0xd1ffab1e method $19c

***** BB15
STMT00040 (IL   ???...  ???)
N008 ( 21, 31)              [000185] --CXG-------              *  CALL      ref    SolutionAnalyzer.Logger.Log $10d
N005 (  4, 12)              [000418] #---G------- arg1 in rdx  +--*  IND       ref    $1f9
N004 (  2, 10)              [000417] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Enumerated and shuffled the project paths." $19d
N006 (  2, 10)              [000186] H----------- arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method $181
N007 (  1,  1)              [000184] ------------ arg2 in r8   \--*  CNS_INT   int    2 $42

***** BB15
STMT00041 (IL 0x0C5...0x0C6)
N002 (  2,  2)              [000191] ------------              *  RETURN    ref    $10f
N001 (  1,  1)              [000190] ------------              \--*  LCL_VAR   ref    V01 loc0         u:2 (last use) $1c1

------------ BB16 [000..000) (throw), preds={BB08,BB11} succs={}

***** BB16
STMT00067 (IL   ???...  ???)
N001 ( 14,  5)              [000303] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance $VN.Void

-------------------------------------------------------------------------------------------------------------------


Aggressive CSE Promotion cutoff is 900.000000
Moderate CSE Promotion cutoff is 100.000000
enregCount is 25
Framesize estimate is 0x0010
We have a small frame

Sorted CSE candidates:
CSE #02, {$304, $1d3} useCnt=5: [def=200.000000, use=1000.000000, cost= 17, call]
        :: N005 ( 17, 18) CSE #02 (def)[000049] H-CXG-------              *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
CSE #01, {$200, $1c2} useCnt=2: [def=100.000000, use=800.000000, cost=  3, call]
        :: N002 (  3,  3) CSE #01 (def)[000423] ---X--------              *  ARR_LENGTH int    $240


Considering CSE #02 {$304, $1d3} [def=200.000000, use=1000.000000, cost= 17, call]
CSE Expression : 
N005 ( 17, 18) CSE #02 (def)[000049] H-CXG-------              *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
N003 (  2, 10)              [000047] ------------ arg0 in rcx  +--*  CNS_INT   long   0x7ffc7e4c17e0 $345
N004 (  1,  1)              [000048] ------------ arg1 in rdx  \--*  CNS_INT   int    35 $47

Aggressive CSE Promotion (1400.000000 >= 900.000000)
cseRefCnt=1400.000000, aggressiveRefCnt=900.000000, moderateRefCnt=100.000000
defCnt=200.000000, useCnt=1000.000000, cost=17, size=18, LiveAcrossCall
def_cost=1, use_cost=1, extra_no_cost=170, extra_yes_cost=0
CSE cost savings check (17170.000000 >= 1200.000000) passes

Promoting CSE:

lvaGrabTemp returning 28 (V28 rat0) (a long lifetime temp) called for CSE - aggressive.
CSE #02 is single-def, so associated CSE temp V28 will be in SSA
New refCnts for V28: refCnt =  2, refCntWtd = 4   
New refCnts for V28: refCnt =  3, refCntWtd = 6   
New refCnts for V28: refCnt =  4, refCntWtd = 8   
New refCnts for V28: refCnt =  5, refCntWtd = 10   
New refCnts for V28: refCnt =  6, refCntWtd = 12   
New refCnts for V28: refCnt =  7, refCntWtd = 14   

CSE #02 def at [000049] replaced in BB07 with def of V28
ReMorphing args for 49.CALL:
argSlots=2, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32
ArgTable for 49.CALL after fgMorphArgs:
fgArgTabEntry[arg 0 47.CNS_INT long (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 1 48.CNS_INT int (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=1, processed]

optValnumCSE morphed tree:
N014 ( 22, 31)              [000052] -ACXG---R---              *  ASG       ref    <l:$1d5, c:$1d4>
N013 (  1,  1)              [000051] D------N----              +--*  LCL_VAR   ref    V08 tmp2         d:2 <l:$4c0, c:$2cf>
N012 ( 22, 31)              [000050] -ACXG-------              \--*  COMMA     ref    <l:$1d5, c:$1d4>
N009 ( 18, 19)              [000445] -ACXG-------                 +--*  COMMA     long   $305
N007 ( 17, 18)              [000443] -ACXG---R---                 |  +--*  ASG       long   $VN.Void
N006 (  1,  1)              [000442] D------N----                 |  |  +--*  LCL_VAR   long   V28 cse0         d:1 $305
N005 ( 17, 18)              [000049] H-CXG-------                 |  |  \--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
N003 (  2, 10)              [000047] ------------ arg0 in rcx     |  |     +--*  CNS_INT   long   0x7ffc7e4c17e0 $345
N004 (  1,  1)              [000048] ------------ arg1 in rdx     |  |     \--*  CNS_INT   int    35 $47
N008 (  1,  1)              [000444] ------------                 |  \--*  LCL_VAR   long   V28 cse0         u:1 $305
N011 (  4, 12)              [000045] n---G-------                 \--*  IND       ref    <l:$4c0, c:$2cf>
N010 (  2, 10)              [000364] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] $186


Working on the replacement of the CSE #02 use at [000154] in BB08
optValnumCSE morphed tree:
N006 (  5, 13)              [000262] -A--G---R---              *  ASG       ref    <l:$1d8, c:$1d7>
N005 (  1,  1)              [000261] D------N----              +--*  LCL_VAR   ref    V21 tmp15        d:2 <l:$4c1, c:$2d5>
N004 (  5, 13)              [000155] ----G-------              \--*  COMMA     ref    <l:$1d8, c:$1d7>
N001 (  1,  1)              [000446] ------------                 +--*  LCL_VAR   long   V28 cse0         u:1 $304
N003 (  4, 12)              [000150] n---G-------                 \--*  IND       ref    <l:$4c1, c:$2d5>
N002 (  2, 10)              [000368] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] $188


Working on the replacement of the CSE #02 use at [000170] in BB09
optValnumCSE morphed tree:
N006 (  7, 15)              [000171] -A--G-------              *  COMMA     void   $1db
N001 (  1,  1)              [000447] ------------              +--*  LCL_VAR   long   V28 cse0         u:1 $304
N005 (  6, 14)              [000166] -A--G-------              \--*  ASG       ref    $VN.Void
N003 (  4, 12)              [000165] n---G--N----                 +--*  IND       ref    $1d6
N002 (  2, 10)              [000375] I-----------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] $186
N004 (  1,  1)              [000164] ------------                 \--*  LCL_VAR   ref    V17 tmp11        u:2 $1d6


Working on the replacement of the CSE #02 use at [000088] in BB10
optValnumCSE morphed tree:
N006 (  5, 13)              [000091] -A--G---R---              *  ASG       ref    <l:$1e3, c:$1e2>
N005 (  1,  1)              [000090] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:2 <l:$4c6, c:$2e9>
N004 (  5, 13)              [000089] ----G-------              \--*  COMMA     ref    <l:$1e3, c:$1e2>
N001 (  1,  1)              [000448] ------------                 +--*  LCL_VAR   long   V28 cse0         u:1 $304
N003 (  4, 12)              [000084] n---G-------                 \--*  IND       ref    <l:$4c6, c:$2e9>
N002 (  2, 10)              [000395] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] $191


Working on the replacement of the CSE #02 use at [000125] in BB11
optValnumCSE morphed tree:
N006 (  5, 13)              [000305] -A--G---R---              *  ASG       ref    <l:$1e6, c:$1e5>
N005 (  1,  1)              [000304] D------N----              +--*  LCL_VAR   ref    V25 tmp19        d:2 <l:$4c7, c:$2f0>
N004 (  5, 13)              [000126] ----G-------              \--*  COMMA     ref    <l:$1e6, c:$1e5>
N001 (  1,  1)              [000449] ------------                 +--*  LCL_VAR   long   V28 cse0         u:1 $304
N003 (  4, 12)              [000121] n---G-------                 \--*  IND       ref    <l:$4c7, c:$2f0>
N002 (  2, 10)              [000399] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] $188


Working on the replacement of the CSE #02 use at [000141] in BB12
optValnumCSE morphed tree:
N006 (  7, 15)              [000142] -A--G-------              *  COMMA     void   $1db
N001 (  1,  1)              [000450] ------------              +--*  LCL_VAR   long   V28 cse0         u:1 $304
N005 (  6, 14)              [000137] -A--G-------              \--*  ASG       ref    $VN.Void
N003 (  4, 12)              [000136] n---G--N----                 +--*  IND       ref    $1e4
N002 (  2, 10)              [000406] I-----------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] $191
N004 (  1,  1)              [000135] ------------                 \--*  LCL_VAR   ref    V16 tmp10        u:2 $1e4


Considering CSE #01 {$200, $1c2} [def=100.000000, use=800.000000, cost=  3, call]
CSE Expression : 
N002 (  3,  3) CSE #01 (def)[000423] ---X--------              *  ARR_LENGTH int    $240
N001 (  1,  1)              [000424] ------------              \--*  LCL_VAR   ref    V02 loc1         u:2 $80

Aggressive CSE Promotion (1000.000000 >= 1000.000000)
cseRefCnt=1000.000000, aggressiveRefCnt=1000.000000, moderateRefCnt=150.000000
defCnt=100.000000, useCnt=800.000000, cost=3, size=3, LiveAcrossCall
def_cost=1, use_cost=1, extra_no_cost=8, extra_yes_cost=0
CSE cost savings check (2408.000000 >= 900.000000) passes

Promoting CSE:

lvaGrabTemp returning 29 (V29 rat0) (a long lifetime temp) called for CSE - aggressive.
CSE #01 is single-def, so associated CSE temp V29 will be in SSA
New refCnts for V29: refCnt =  2, refCntWtd = 2   
New refCnts for V29: refCnt =  3, refCntWtd = 6   
New refCnts for V29: refCnt =  4, refCntWtd = 10   

CSE #01 def at [000423] replaced in BB01 with def of V29
optValnumCSE morphed tree:
N009 (  8,  8)              [000426] -A-X--------              *  JTRUE     void  
N008 (  6,  6)              [000422] JA-X---N----              \--*  LE        int    $242
N006 (  4,  4)              [000454] -A-X--------                 +--*  COMMA     int    $240
N004 (  3,  3)              [000452] -A-X----R---                 |  +--*  ASG       int    $VN.Void
N003 (  1,  1)              [000451] D------N----                 |  |  +--*  LCL_VAR   int    V29 cse1         d:1 $240
N002 (  3,  3)              [000423] ---X--------                 |  |  \--*  ARR_LENGTH int    $240
N001 (  1,  1)              [000424] ------------                 |  |     \--*  LCL_VAR   ref    V02 loc1         u:2 $80
N005 (  1,  1)              [000453] ------------                 |  \--*  LCL_VAR   int    V29 cse1         u:1 $240
N007 (  1,  1)              [000425] ------------                 \--*  LCL_VAR   int    V03 loc2         u:2 $40


Working on the replacement of the CSE #01 use at [000326] in BB02
optValnumCSE morphed tree:
N015 ( 12, 16)              [000032] -A-XG---R---              *  ASG       ref    <l:$1cc, c:$1cb>
N014 (  1,  1)              [000031] D------N----              +--*  LCL_VAR   ref    V04 loc3         d:2 <l:$1ca, c:$2c1>
N013 ( 12, 16)              [000334] ---XG-------              \--*  COMMA     ref    <l:$1cc, c:$1cb>
N003 (  6,  9)              [000327] ---X--------                 +--*  ARR_BOUNDS_CHECK_Rng void   $1c7
N001 (  1,  1)              [000029] ------------                 |  +--*  LCL_VAR   int    V03 loc2         u:3 $280
N002 (  1,  1)              [000455] ------------                 |  \--*  LCL_VAR   int    V29 cse1         u:1 $200
N012 (  6,  7)              [000030] a---G-------                 \--*  IND       ref    <l:$1ca, c:$2c1>
N011 (  5,  6)              [000333] -------N----                    \--*  ADD       byref  $3c0
N004 (  1,  1)              [000324] ------------                       +--*  LCL_VAR   ref    V02 loc1         u:2 $80
N010 (  4,  5)              [000332] -------N----                       \--*  ADD       long   $302
N008 (  3,  4)              [000330] -------N----                          +--*  LSH       long   $301
N006 (  2,  3)              [000328] ------------                          |  +--*  CAST      long <- int $300
N005 (  1,  1)              [000325] i-----------                          |  |  \--*  LCL_VAR   int    V03 loc2         u:3 $280
N007 (  1,  1)              [000329] -------N----                          |  \--*  CNS_INT   long   3 $340
N009 (  1,  1)              [000331] ------------                          \--*  CNS_INT   long   16 Fseq[#FirstElem] $342


Working on the replacement of the CSE #01 use at [000025] in BB14
optValnumCSE morphed tree:
N004 (  5,  5)              [000027] ------------              *  JTRUE     void  
N003 (  3,  3)              [000026] J------N----              \--*  GT        int    $26b
N001 (  1,  1)              [000456] ------------                 +--*  LCL_VAR   int    V29 cse1         u:1 $200
N002 (  1,  1)              [000023] ------------                 \--*  LCL_VAR   int    V03 loc2         u:4 $269


*************** Finishing PHASE Optimize Valnum CSEs

*************** Starting PHASE Assertion prop
*************** In optAssertionPropMain()
Blocks/Trees at start of phase

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB15 ( cond )                     i label target hascall gcsafe idxlen newobj 
BB02 [0001]  2       BB01,BB14             4     0 [01D..02E)-> BB07 ( cond )                     i Loop label target hascall gcsafe idxlen nullcheck bwd bwd-target 
BB03 [0002]  1       BB02                  2     0 [02E..037)-> BB05 ( cond )                     i gcsafe idxlen bwd 
BB04 [0013]  1       BB03                  2     0 [02E..02F)-> BB06 (always)                     i hascall gcsafe bwd 
BB05 [0014]  1       BB03                  2     0 [02E..02F)                                     i label target hascall gcsafe bwd 
BB06 [0015]  2       BB04,BB05             2     0 [???..???)-> BB14 (always)                     internal label target gcsafe bwd 
BB07 [0003]  1       BB02                  2     0 [037..04B)-> BB10 ( cond )                     i label target hascall gcsafe bwd 
BB08 [0004]  1       BB07                  2     0 [000..062)-> BB16 ( cond )                     i hascall gcsafe newobj bwd 
BB09 [0020]  1       BB08                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd 
BB10 [0005]  2       BB07,BB09             2     0 [062..085)-> BB13 ( cond )                     i label target hascall gcsafe bwd 
BB11 [0006]  1       BB10                  2     0 [000..09C)-> BB16 ( cond )                     i hascall gcsafe newobj bwd 
BB12 [0028]  1       BB11                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd 
BB13 [0007]  2       BB10,BB12             2     0 [09C..0A6)                                     i label target hascall gcsafe bwd 
BB14 [0008]  2       BB06,BB13             4     0 [0A6..0B3)-> BB02 ( cond )                     i label target gcsafe idxlen bwd 
BB15 [0010]  2       BB01,BB14             1       [0B3..0C7)        (return)                     i label target hascall gcsafe 
BB16 [0027]  2       BB08,BB11             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..01D) -> BB15 (cond), preds={} succs={BB02,BB15}

***** BB01
STMT00001 (IL   ???...  ???)
N008 ( 21, 31) [000002] --CXG-------              *  CALL      ref    SolutionAnalyzer.Logger.Log $101
N005 (  4, 12) [000317] #---G------- arg1 in rdx  +--*  IND       ref    $1c0
N004 (  2, 10) [000316] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Started enumerating project paths." $180
N006 (  2, 10) [000003] H----------- arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method $181
N007 (  1,  1) [000001] ------------ arg2 in r8   \--*  CNS_INT   int    2 $42

***** BB01
STMT00002 (IL 0x00C...0x013)
N005 ( 16, 16) [000011] -AC-----R---              *  ASG       ref    $1c1
N004 (  1,  1) [000010] D------N----              +--*  LCL_VAR   ref    V07 tmp1         d:2 $1c1
N003 ( 16, 16) [000009] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1c1
N002 (  2, 10) [000008] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $182

***** BB01
STMT00003 (IL   ???...  ???)
N005 ( 16, 10) [000013] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor $VN.Void
N003 (  1,  1) [000012] ------------ this in rcx  +--*  LCL_VAR   ref    V07 tmp1         u:2 $1c1
N004 (  1,  1) [000007] ------------ arg1 in rdx  \--*  CNS_INT   int    100 $43

***** BB01
STMT00004 (IL 0x013...  ???)
N003 (  1,  3) [000016] -A------R---              *  ASG       ref    $1c1
N002 (  1,  1) [000015] D------N----              +--*  LCL_VAR   ref    V01 loc0         d:2 $1c1
N001 (  1,  1) [000014] ------------              \--*  LCL_VAR   ref    V07 tmp1         u:2 (last use) $1c1

***** BB01
STMT00005 (IL 0x014...0x015)
N003 (  1,  3) [000019] -A------R---              *  ASG       ref    $80
N002 (  1,  1) [000018] D------N----              +--*  LCL_VAR   ref    V02 loc1         d:2 $80
N001 (  1,  1) [000017] ------------              \--*  LCL_VAR   ref    V00 arg0         u:1 (last use) $80

***** BB01
STMT00006 (IL 0x016...0x017)
N003 (  1,  3) [000022] -A------R---              *  ASG       int    $40
N002 (  1,  1) [000021] D------N----              +--*  LCL_VAR   int    V03 loc2         d:2 $40
N001 (  1,  1) [000020] ------------              \--*  CNS_INT   int    0 $40

***** BB01
STMT00071 (IL 0x0AA...  ???)
N009 (  8,  8) [000426] -A-X--------              *  JTRUE     void  
N008 (  6,  6) [000422] JA-X---N----              \--*  LE        int    $242
N006 (  4,  4) [000454] -A-X--------                 +--*  COMMA     int    $240
N004 (  3,  3) [000452] -A-X----R---                 |  +--*  ASG       int    $VN.Void
N003 (  1,  1) [000451] D------N----                 |  |  +--*  LCL_VAR   int    V29 cse1         d:1 $240
N002 (  3,  3) [000423] ---X--------                 |  |  \--*  ARR_LENGTH int    $240
N001 (  1,  1) [000424] ------------                 |  |     \--*  LCL_VAR   ref    V02 loc1         u:2 $80
N005 (  1,  1) [000453] ------------                 |  \--*  LCL_VAR   int    V29 cse1         u:1 $240
N007 (  1,  1) [000425] ------------                 \--*  LCL_VAR   int    V03 loc2         u:2 $40

------------ BB02 [01D..02E) -> BB07 (cond), preds={BB01,BB14} succs={BB03,BB07}

***** BB02
STMT00072 (IL   ???...  ???)
N005 (  0,  0) [000429] -A------R---              *  ASG       int   
N004 (  0,  0) [000427] D------N----              +--*  LCL_VAR   int    V03 loc2         d:3
N003 (  0,  0) [000428] ------------              \--*  PHI       int   
N001 (  0,  0) [000437] ------------ pred BB14       +--*  PHI_ARG   int    V03 loc2         u:4
N002 (  0,  0) [000436] ------------ pred BB01       \--*  PHI_ARG   int    V03 loc2         u:2 $40

***** BB02
STMT00008 (IL 0x01D...0x020)
N015 ( 12, 16) [000032] -A-XG---R---              *  ASG       ref    <l:$1cc, c:$1cb>
N014 (  1,  1) [000031] D------N----              +--*  LCL_VAR   ref    V04 loc3         d:2 <l:$1ca, c:$2c1>
N013 ( 12, 16) [000334] ---XG-------              \--*  COMMA     ref    <l:$1cc, c:$1cb>
N003 (  6,  9) [000327] ---X--------                 +--*  ARR_BOUNDS_CHECK_Rng void   $1c7
N001 (  1,  1) [000029] ------------                 |  +--*  LCL_VAR   int    V03 loc2         u:3 $280
N002 (  1,  1) [000455] ------------                 |  \--*  LCL_VAR   int    V29 cse1         u:1 $200
N012 (  6,  7) [000030] a---G-------                 \--*  IND       ref    <l:$1ca, c:$2c1>
N011 (  5,  6) [000333] -------N----                    \--*  ADD       byref  $3c0
N004 (  1,  1) [000324] ------------                       +--*  LCL_VAR   ref    V02 loc1         u:2 $80
N010 (  4,  5) [000332] -------N----                       \--*  ADD       long   $302
N008 (  3,  4) [000330] -------N----                          +--*  LSH       long   $301
N006 (  2,  3) [000328] ------------                          |  +--*  CAST      long <- int $300
N005 (  1,  1) [000325] i-----------                          |  |  \--*  LCL_VAR   int    V03 loc2         u:3 $280
N007 (  1,  1) [000329] -------N----                          |  \--*  CNS_INT   long   3 $340
N009 (  1,  1) [000331] ------------                          \--*  CNS_INT   long   16 Fseq[#FirstElem] $342

***** BB02
STMT00042 (IL 0x021...  ???)
N002 (  2,  2) [000197] ---X--------              *  NULLCHECK byte   <l:$1d0, c:$1cf>
N001 (  1,  1) [000196] ------------              \--*  LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>

***** BB02
STMT00010 (IL   ???...  ???)
N011 ( 24, 27) [000039] --CXG-------              *  JTRUE     void  
N010 ( 22, 25) [000038] J-CXG--N----              \--*  EQ        int    $244
N008 ( 20, 23) [000195] --CXG-------                 +--*  CALL      int    System.String.EndsWith $401
N005 (  4, 12) [000336] #---G------- arg1 in rdx     |  +--*  IND       ref    $1d1
N004 (  2, 10) [000335] H-----------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E ".csproj" $184
N006 (  1,  1) [000033] ------------ this in rcx     |  +--*  LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
N007 (  1,  1) [000194] ------------ arg2 in r8      |  \--*  CNS_INT   int    0 $40
N009 (  1,  1) [000037] ------------                 \--*  CNS_INT   int    0 $40

------------ BB03 [02E..037) -> BB05 (cond), preds={BB02} succs={BB04,BB05}

***** BB03
STMT00043 (IL 0x02E...  ???)
N011 ( 11, 11) [000204] -A-XG---R---              *  ASG       int    $VN.Void
N010 (  4,  4) [000203] D--XG--N----              +--*  IND       int    $25a
N009 (  2,  2) [000341] -------N----              |  \--*  ADD       byref  $386
N007 (  1,  1) [000177] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N008 (  1,  1) [000340] ------------              |     \--*  CNS_INT   long   20 field offset Fseq[_version] $348
N006 (  6,  6) [000202] ---XG-------              \--*  ADD       int    <l:$25c, c:$25b>
N004 (  4,  4) [000200] ---XG-------                 +--*  IND       int    <l:$258, c:$257>
N003 (  2,  2) [000343] -------N----                 |  \--*  ADD       byref  $386
N001 (  1,  1) [000199] ------------                 |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N002 (  1,  1) [000342] ------------                 |     \--*  CNS_INT   long   20 field offset Fseq[_version] $348
N005 (  1,  1) [000201] ------------                 \--*  CNS_INT   int    1 $46

***** BB03
STMT00044 (IL 0x02E...  ???)
N006 (  4,  4) [000208] -A-XG---R---              *  ASG       ref    <l:$1f0, c:$1ef>
N005 (  1,  1) [000207] D------N----              +--*  LCL_VAR   ref    V18 tmp12        d:2 <l:$1ee, c:$2fc>
N004 (  4,  4) [000206] ---XG-------              \--*  IND       ref    <l:$1f0, c:$1ef>
N003 (  2,  2) [000345] -------N----                 \--*  ADD       byref  $387
N001 (  1,  1) [000205] ------------                    +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N002 (  1,  1) [000344] ------------                    \--*  CNS_INT   long   8 field offset Fseq[_items] $343

***** BB03
STMT00045 (IL 0x02E...  ???)
N006 (  4,  4) [000212] -A-XG---R---              *  ASG       int    <l:$260, c:$25f>
N005 (  1,  1) [000211] D------N----              +--*  LCL_VAR   int    V19 tmp13        d:2 <l:$25e, c:$411>
N004 (  4,  4) [000210] ---XG-------              \--*  IND       int    <l:$260, c:$25f>
N003 (  2,  2) [000347] -------N----                 \--*  ADD       byref  $383
N001 (  1,  1) [000209] ------------                    +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N002 (  1,  1) [000346] ------------                    \--*  CNS_INT   long   16 field offset Fseq[_size] $342

***** BB03
STMT00046 (IL 0x02E...  ???)
N005 (  7,  7) [000217] ---X--------              *  JTRUE     void  
N004 (  5,  5) [000216] N--X---N-U--              \--*  LE        int    <l:$266, c:$265>
N002 (  3,  3) [000215] ---X--------                 +--*  ARR_LENGTH int    <l:$262, c:$261>
N001 (  1,  1) [000214] ------------                 |  \--*  LCL_VAR   ref    V18 tmp12        u:2 <l:$1ee, c:$2fc>
N003 (  1,  1) [000213] ------------                 \--*  LCL_VAR   int    V19 tmp13        u:2 <l:$25e, c:$411>

------------ BB04 [02E..02F) -> BB06 (always), preds={BB03} succs={BB06}

***** BB04
STMT00048 (IL 0x02E...  ???)
N008 (  8,  8) [000225] -A-XG---R---              *  ASG       int    $VN.Void
N007 (  4,  4) [000224] D--XG--N----              +--*  IND       int    $268
N006 (  2,  2) [000349] -------N----              |  \--*  ADD       byref  $383
N004 (  1,  1) [000220] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N005 (  1,  1) [000348] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size] $342
N003 (  3,  3) [000223] ------------              \--*  ADD       int    <l:$268, c:$267>
N001 (  1,  1) [000221] ------------                 +--*  LCL_VAR   int    V19 tmp13        u:2 <l:$25e, c:$411>
N002 (  1,  1) [000222] ------------                 \--*  CNS_INT   int    1 $46

***** BB04
STMT00049 (IL 0x02E...  ???)
N007 ( 17, 11) [000229] --CXG-------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST $1db
N004 (  1,  1) [000226] ------------ arg0 in rcx  +--*  LCL_VAR   ref    V18 tmp12        u:2 (last use) <l:$1ee, c:$2fc>
N005 (  1,  1) [000227] ------------ arg1 in rdx  +--*  LCL_VAR   int    V19 tmp13        u:2 (last use) <l:$25e, c:$411>
N006 (  1,  1) [000228] ------------ arg2 in r8   \--*  LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>

------------ BB05 [02E..02F), preds={BB03} succs={BB06}

***** BB05
STMT00047 (IL 0x02E...  ???)
N005 ( 16, 10) [000219] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize $VN.Void
N003 (  1,  1) [000218] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N004 (  1,  1) [000178] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>

------------ BB06 [???..???) -> BB14 (always), preds={BB04,BB05} succs={BB14}

------------ BB07 [037..04B) -> BB10 (cond), preds={BB02} succs={BB08,BB10}

***** BB07
STMT00053 (IL 0x037...  ???)
N005 ( 15,  7) [000247] -ACXG---R---              *  ASG       ref    $2c6
N004 (  1,  1) [000246] D------N----              +--*  LCL_VAR   ref    V20 tmp14        d:2 $2c6
N003 ( 15,  7) [000236] --CXG-------              \--*  CALL      ref    System.IO.EnumerationOptions.FromSearchOption $2c6
N002 (  1,  1) [000235] ------------ arg0 in rcx     \--*  CNS_INT   int    1 $46

***** BB07
STMT00013 (IL   ???...  ???)
N012 ( 21, 24) [000054] -ACXG---R---              *  ASG       ref    $2cc
N011 (  1,  1) [000053] D------N----              +--*  LCL_VAR   ref    V09 tmp3         d:2 $2cc
N010 ( 21, 24) [000245] --CXG-------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths $2cc
N006 (  4, 12) [000357] #---G------- arg1 in rdx     +--*  IND       ref    $1d2
N005 (  2, 10) [000356] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*" $185
N007 (  1,  1) [000040] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
N008 (  1,  1) [000244] ------------ arg3 in r9      +--*  LCL_VAR   ref    V20 tmp14        u:2 (last use) $2c6
N009 (  1,  1) [000243] ------------ arg2 in r8      \--*  CNS_INT   int    2 $42

***** BB07
STMT00012 (IL   ???...  ???)
N014 ( 22, 31) [000052] -ACXG---R---              *  ASG       ref    <l:$1d5, c:$1d4>
N013 (  1,  1) [000051] D------N----              +--*  LCL_VAR   ref    V08 tmp2         d:2 <l:$4c0, c:$2cf>
N012 ( 22, 31) [000050] -ACXG-------              \--*  COMMA     ref    <l:$1d5, c:$1d4>
N009 ( 18, 19) [000445] -ACXG-------                 +--*  COMMA     long   $305
N007 ( 17, 18) [000443] -ACXG---R---                 |  +--*  ASG       long   $VN.Void
N006 (  1,  1) [000442] D------N----                 |  |  +--*  LCL_VAR   long   V28 cse0         d:1 $305
N005 ( 17, 18) [000049] H-CXG-------                 |  |  \--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
N003 (  2, 10) [000047] ------------ arg0 in rcx     |  |     +--*  CNS_INT   long   0x7ffc7e4c17e0 $345
N004 (  1,  1) [000048] ------------ arg1 in rdx     |  |     \--*  CNS_INT   int    35 $47
N008 (  1,  1) [000444] ------------                 |  \--*  LCL_VAR   long   V28 cse0         u:1 $305
N011 (  4, 12) [000045] n---G-------                 \--*  IND       ref    <l:$4c0, c:$2cf>
N010 (  2, 10) [000364] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] $186

***** BB07
STMT00015 (IL   ???...0x049)
N003 (  1,  3) [000062] -A------R---              *  ASG       ref    $2cc
N002 (  1,  1) [000061] D------N----              +--*  LCL_VAR   ref    V10 tmp4         d:2 $2cc
N001 (  1,  1) [000055] ------------              \--*  LCL_VAR   ref    V09 tmp3         u:2 (last use) $2cc

***** BB07
STMT00016 (IL   ???...  ???)
N003 (  1,  3) [000065] -A------R---              *  ASG       ref    <l:$4c0, c:$2cf>
N002 (  1,  1) [000064] D------N----              +--*  LCL_VAR   ref    V11 tmp5         d:2 <l:$4c0, c:$2cf>
N001 (  1,  1) [000056] ------------              \--*  LCL_VAR   ref    V08 tmp2         u:2 <l:$4c0, c:$2cf>

***** BB07
STMT00014 (IL   ???...  ???)
N004 (  5,  5) [000060] ------------              *  JTRUE     void  
N003 (  3,  3) [000059] J------N----              \--*  NE        int    <l:$246, c:$245>
N001 (  1,  1) [000057] ------------                 +--*  LCL_VAR   ref    V11 tmp5         u:2 (last use) <l:$4c0, c:$2cf>
N002 (  1,  1) [000058] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB08 [000..062) -> BB16 (cond), preds={BB07} succs={BB09,BB16}

***** BB08
STMT00033 (IL   ???...0x05D)
N005 ( 16, 16) [000160] -AC-----R---              *  ASG       ref    $1d6
N004 (  1,  1) [000159] D------N----              +--*  LCL_VAR   ref    V17 tmp11        d:2 $1d6
N003 ( 16, 16) [000158] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1d6
N002 (  2, 10) [000157] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $187

***** BB08
STMT00058 (IL   ???...  ???)
N006 (  5, 13) [000262] -A--G---R---              *  ASG       ref    <l:$1d8, c:$1d7>
N005 (  1,  1) [000261] D------N----              +--*  LCL_VAR   ref    V21 tmp15        d:2 <l:$4c1, c:$2d5>
N004 (  5, 13) [000155] ----G-------              \--*  COMMA     ref    <l:$1d8, c:$1d7>
N001 (  1,  1) [000446] ------------                 +--*  LCL_VAR   long   V28 cse0         u:1 $304
N003 (  4, 12) [000150] n---G-------                 \--*  IND       ref    <l:$4c1, c:$2d5>
N002 (  2, 10) [000368] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] $188

***** BB08
STMT00054 (IL   ???...  ???)
N004 (  5,  5) [000252] ------------              *  JTRUE     void  
N003 (  3,  3) [000251] J------N----              \--*  EQ        int    <l:$248, c:$247>
N001 (  1,  1) [000249] ------------                 +--*  LCL_VAR   ref    V21 tmp15        u:2 <l:$4c1, c:$2d5>
N002 (  1,  1) [000250] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB09 [000..000), preds={BB08} succs={BB10}

***** BB09
STMT00055 (IL   ???...  ???)
N006 (  6,  6) [000255] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000254] D--XG--N----              +--*  IND       ref    $4c1
N003 (  2,  2) [000370] -------N----              |  \--*  ADD       byref  $381
N001 (  1,  1) [000161] ------------              |     +--*  LCL_VAR   ref    V17 tmp11        u:2 $1d6
N002 (  1,  1) [000369] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $343
N005 (  1,  1) [000253] ------------              \--*  LCL_VAR   ref    V21 tmp15        u:2 (last use) <l:$4c1, c:$2d5>

***** BB09
STMT00056 (IL   ???...  ???)
N006 (  7, 15) [000259] -A-XG-------              *  ASG       long   $VN.Void
N004 (  4,  4) [000258] D--XG--N----              +--*  IND       long   $18a
N003 (  2,  2) [000372] -------N----              |  \--*  ADD       byref  $382
N001 (  1,  1) [000256] ------------              |     +--*  LCL_VAR   ref    V17 tmp11        u:2 $1d6
N002 (  1,  1) [000371] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $346
N005 (  2, 10) [000156] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $18a

***** BB09
STMT00035 (IL 0x05C...  ???)
N006 (  7, 15) [000171] -A--G-------              *  COMMA     void   $1db
N001 (  1,  1) [000447] ------------              +--*  LCL_VAR   long   V28 cse0         u:1 $304
N005 (  6, 14) [000166] -A--G-------              \--*  ASG       ref    $VN.Void
N003 (  4, 12) [000165] n---G--N----                 +--*  IND       ref    $1d6
N002 (  2, 10) [000375] I-----------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] $186
N004 (  1,  1) [000164] ------------                 \--*  LCL_VAR   ref    V17 tmp11        u:2 $1d6

***** BB09
STMT00036 (IL   ???...0x05D)
N003 (  1,  3) [000175] -A------R---              *  ASG       ref    $1d6
N002 (  1,  1) [000174] D------N----              +--*  LCL_VAR   ref    V11 tmp5         d:4 $1d6
N001 (  1,  1) [000163] ------------              \--*  LCL_VAR   ref    V17 tmp11        u:2 (last use) $1d6

------------ BB10 [062..085) -> BB13 (cond), preds={BB07,BB09} succs={BB11,BB13}

***** BB10
STMT00074 (IL   ???...  ???)
N005 (  0,  0) [000435] -A------R---              *  ASG       ref   
N004 (  0,  0) [000433] D------N----              +--*  LCL_VAR   ref    V11 tmp5         d:3
N003 (  0,  0) [000434] ------------              \--*  PHI       ref   
N001 (  0,  0) [000441] ------------ pred BB09       +--*  PHI_ARG   ref    V11 tmp5         u:4 $1d6
N002 (  0,  0) [000438] ------------ pred BB07       \--*  PHI_ARG   ref    V11 tmp5         u:2 <l:$4c0, c:$2cf>

***** BB10
STMT00018 (IL   ???...  ???)
N009 ( 18, 20) [000075] -ACXG---R---              *  ASG       ref    $2db
N008 (  1,  1) [000074] D------N----              +--*  LCL_VAR   ref    V05 loc4         d:2 $2db
N007 ( 18, 20) [000071] --CXG-------              \--*  CALL      ref    System.Linq.Enumerable.Where $2db
N004 (  1,  1) [000070] ------------ arg2 in r8      +--*  LCL_VAR   ref    V11 tmp5         u:3 (last use) $4c4
N005 (  1,  1) [000069] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V10 tmp4         u:2 (last use) $2cc
N006 (  2, 10) [000072] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $18d

***** BB10
STMT00061 (IL 0x069...  ???)
N010 ( 21, 30) [000283] -ACXG---R---              *  ASG       ref    <l:$1df, c:$1de>
N009 (  1,  1) [000282] D------N----              +--*  LCL_VAR   ref    V23 tmp17        d:2 <l:$4c5, c:$2de>
N008 ( 21, 30) [000276] --CXG-------              \--*  COMMA     ref    <l:$1df, c:$1de>
N005 ( 17, 18) [000275] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $309
N003 (  2, 10) [000273] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e783cd8 $347
N004 (  1,  1) [000274] ------------ arg1 in rdx     |  \--*  CNS_INT   int    40 $4a
N007 (  4, 12) [000271] n---G-------                 \--*  IND       ref    <l:$4c5, c:$2de>
N006 (  2, 10) [000381] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<Compatible>k__BackingField] $18e

***** BB10
STMT00063 (IL   ???...  ???)
N012 ( 21, 24) [000290] -ACXG---R---              *  ASG       ref    $2e3
N011 (  1,  1) [000289] D------N----              +--*  LCL_VAR   ref    V24 tmp18        d:2 $2e3
N010 ( 21, 24) [000281] --CXG-------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths $2e3
N006 (  4, 12) [000383] #---G------- arg1 in rdx     +--*  IND       ref    $1e0
N005 (  2, 10) [000382] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*.csproj" $18f
N007 (  1,  1) [000077] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>
N008 (  1,  1) [000280] ------------ arg3 in r9      +--*  LCL_VAR   ref    V23 tmp17        u:2 (last use) <l:$4c5, c:$2de>
N009 (  1,  1) [000279] ------------ arg2 in r8      \--*  CNS_INT   int    1 $46

***** BB10
STMT00062 (IL   ???...  ???)
N010 ( 20, 15) [000288] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange $VN.Void
N007 (  4,  4) [000286] ---XG------- arg1 in rdx  +--*  IND       int    <l:$24c, c:$24b>
N006 (  2,  2) [000389] -------N----              |  \--*  ADD       byref  $383
N004 (  1,  1) [000285] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N005 (  1,  1) [000388] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size] $342
N008 (  1,  1) [000076] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N009 (  1,  1) [000287] ------------ arg2 in r8   \--*  LCL_VAR   ref    V24 tmp18        u:2 (last use) $2e3

***** BB10
STMT00021 (IL 0x07A...  ???)
N006 (  5, 13) [000091] -A--G---R---              *  ASG       ref    <l:$1e3, c:$1e2>
N005 (  1,  1) [000090] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:2 <l:$4c6, c:$2e9>
N004 (  5, 13) [000089] ----G-------              \--*  COMMA     ref    <l:$1e3, c:$1e2>
N001 (  1,  1) [000448] ------------                 +--*  LCL_VAR   long   V28 cse0         u:1 $304
N003 (  4, 12) [000084] n---G-------                 \--*  IND       ref    <l:$4c6, c:$2e9>
N002 (  2, 10) [000395] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] $191

***** BB10
STMT00023 (IL   ???...0x083)
N003 (  1,  3) [000098] -A------R---              *  ASG       ref    $1c1
N002 (  1,  1) [000097] D------N----              +--*  LCL_VAR   ref    V13 tmp7         d:2 $1c1
N001 (  1,  1) [000082] ------------              \--*  LCL_VAR   ref    V01 loc0         u:2 $1c1

***** BB10
STMT00024 (IL   ???...  ???)
N003 (  1,  3) [000101] -A------R---              *  ASG       ref    $2db
N002 (  1,  1) [000100] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:2 $2db
N001 (  1,  1) [000083] ------------              \--*  LCL_VAR   ref    V05 loc4         u:2 (last use) $2db

***** BB10
STMT00025 (IL   ???...  ???)
N003 (  1,  3) [000104] -A------R---              *  ASG       ref    <l:$4c6, c:$2e9>
N002 (  1,  1) [000103] D------N----              +--*  LCL_VAR   ref    V15 tmp9         d:2 <l:$4c6, c:$2e9>
N001 (  1,  1) [000092] ------------              \--*  LCL_VAR   ref    V12 tmp6         u:2 <l:$4c6, c:$2e9>

***** BB10
STMT00022 (IL   ???...  ???)
N004 (  5,  5) [000096] ------------              *  JTRUE     void  
N003 (  3,  3) [000095] J------N----              \--*  NE        int    <l:$24e, c:$24d>
N001 (  1,  1) [000093] ------------                 +--*  LCL_VAR   ref    V15 tmp9         u:2 (last use) <l:$4c6, c:$2e9>
N002 (  1,  1) [000094] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB11 [000..09C) -> BB16 (cond), preds={BB10} succs={BB12,BB16}

***** BB11
STMT00029 (IL   ???...0x097)
N005 ( 16, 16) [000131] -AC-----R---              *  ASG       ref    $1e4
N004 (  1,  1) [000130] D------N----              +--*  LCL_VAR   ref    V16 tmp10        d:2 $1e4
N003 ( 16, 16) [000129] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1e4
N002 (  2, 10) [000128] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $192

***** BB11
STMT00068 (IL   ???...  ???)
N006 (  5, 13) [000305] -A--G---R---              *  ASG       ref    <l:$1e6, c:$1e5>
N005 (  1,  1) [000304] D------N----              +--*  LCL_VAR   ref    V25 tmp19        d:2 <l:$4c7, c:$2f0>
N004 (  5, 13) [000126] ----G-------              \--*  COMMA     ref    <l:$1e6, c:$1e5>
N001 (  1,  1) [000449] ------------                 +--*  LCL_VAR   long   V28 cse0         u:1 $304
N003 (  4, 12) [000121] n---G-------                 \--*  IND       ref    <l:$4c7, c:$2f0>
N002 (  2, 10) [000399] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] $188

***** BB11
STMT00064 (IL   ???...  ???)
N004 (  5,  5) [000295] ------------              *  JTRUE     void  
N003 (  3,  3) [000294] J------N----              \--*  EQ        int    <l:$250, c:$24f>
N001 (  1,  1) [000292] ------------                 +--*  LCL_VAR   ref    V25 tmp19        u:2 <l:$4c7, c:$2f0>
N002 (  1,  1) [000293] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB12 [000..000), preds={BB11} succs={BB13}

***** BB12
STMT00065 (IL   ???...  ???)
N006 (  6,  6) [000298] -A-XG-------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000297] D--XG--N----              +--*  IND       ref    $4c7
N003 (  2,  2) [000401] -------N----              |  \--*  ADD       byref  $384
N001 (  1,  1) [000132] ------------              |     +--*  LCL_VAR   ref    V16 tmp10        u:2 $1e4
N002 (  1,  1) [000400] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $343
N005 (  1,  1) [000296] ------------              \--*  LCL_VAR   ref    V25 tmp19        u:2 (last use) <l:$4c7, c:$2f0>

***** BB12
STMT00066 (IL   ???...  ???)
N006 (  7, 15) [000302] -A-XG-------              *  ASG       long   $VN.Void
N004 (  4,  4) [000301] D--XG--N----              +--*  IND       long   $194
N003 (  2,  2) [000403] -------N----              |  \--*  ADD       byref  $385
N001 (  1,  1) [000299] ------------              |     +--*  LCL_VAR   ref    V16 tmp10        u:2 $1e4
N002 (  1,  1) [000402] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $346
N005 (  2, 10) [000127] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $194

***** BB12
STMT00031 (IL 0x096...  ???)
N006 (  7, 15) [000142] -A--G-------              *  COMMA     void   $1db
N001 (  1,  1) [000450] ------------              +--*  LCL_VAR   long   V28 cse0         u:1 $304
N005 (  6, 14) [000137] -A--G-------              \--*  ASG       ref    $VN.Void
N003 (  4, 12) [000136] n---G--N----                 +--*  IND       ref    $1e4
N002 (  2, 10) [000406] I-----------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] $191
N004 (  1,  1) [000135] ------------                 \--*  LCL_VAR   ref    V16 tmp10        u:2 $1e4

***** BB12
STMT00032 (IL   ???...0x097)
N003 (  1,  3) [000148] -A------R---              *  ASG       ref    $1e4
N002 (  1,  1) [000147] D------N----              +--*  LCL_VAR   ref    V15 tmp9         d:4 $1e4
N001 (  1,  1) [000134] ------------              \--*  LCL_VAR   ref    V16 tmp10        u:2 (last use) $1e4

------------ BB13 [09C..0A6), preds={BB10,BB12} succs={BB14}

***** BB13
STMT00073 (IL   ???...  ???)
N005 (  0,  0) [000432] -A------R---              *  ASG       ref   
N004 (  0,  0) [000430] D------N----              +--*  LCL_VAR   ref    V15 tmp9         d:3
N003 (  0,  0) [000431] ------------              \--*  PHI       ref   
N001 (  0,  0) [000440] ------------ pred BB12       +--*  PHI_ARG   ref    V15 tmp9         u:4 $1e4
N002 (  0,  0) [000439] ------------ pred BB10       \--*  PHI_ARG   ref    V15 tmp9         u:2 <l:$4c6, c:$2e9>

***** BB13
STMT00070 (IL   ???...  ???)
N009 ( 18, 20) [000313] -ACXG---R---              *  ASG       ref    $2f6
N008 (  1,  1) [000312] D------N----              +--*  LCL_VAR   ref    V27 tmp21        d:2 $2f6
N007 ( 18, 20) [000112] --CXG-------              \--*  CALL      ref    System.Linq.Enumerable.SelectMany $2f6
N004 (  1,  1) [000111] ------------ arg2 in r8      +--*  LCL_VAR   ref    V15 tmp9         u:3 (last use) $4ca
N005 (  1,  1) [000110] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V14 tmp8         u:2 (last use) $2db
N006 (  2, 10) [000113] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $196

***** BB13
STMT00069 (IL   ???...  ???)
N010 ( 20, 15) [000311] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange $VN.Void
N007 (  4,  4) [000309] ---XG------- arg1 in rdx  +--*  IND       int    <l:$254, c:$253>
N006 (  2,  2) [000411] -------N----              |  \--*  ADD       byref  $383
N004 (  1,  1) [000308] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N005 (  1,  1) [000410] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size] $342
N008 (  1,  1) [000109] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         u:2 (last use) $1c1
N009 (  1,  1) [000310] ------------ arg2 in r8   \--*  LCL_VAR   ref    V27 tmp21        u:2 (last use) $2f6

------------ BB14 [0A6..0B3) -> BB02 (cond), preds={BB06,BB13} succs={BB15,BB02}

***** BB14
STMT00028 (IL 0x0A6...0x0A9)
N005 (  3,  3) [000120] -A------R---              *  ASG       int    $269
N004 (  1,  1) [000119] D------N----              +--*  LCL_VAR   int    V03 loc2         d:4 $269
N003 (  3,  3) [000118] ------------              \--*  ADD       int    $269
N001 (  1,  1) [000116] ------------                 +--*  LCL_VAR   int    V03 loc2         u:3 (last use) $280
N002 (  1,  1) [000117] ------------                 \--*  CNS_INT   int    1 $46

***** BB14
STMT00007 (IL 0x0AA...0x0AE)
N004 (  5,  5) [000027] ------------              *  JTRUE     void  
N003 (  3,  3) [000026] J------N----              \--*  GT        int    $26b
N001 (  1,  1) [000456] ------------                 +--*  LCL_VAR   int    V29 cse1         u:1 $200
N002 (  1,  1) [000023] ------------                 \--*  LCL_VAR   int    V03 loc2         u:4 $269

------------ BB15 [0B3..0C7) (return), preds={BB01,BB14} succs={}

***** BB15
STMT00038 (IL 0x0B3...0x0C4)
N005 ( 17, 18) [000181] --CXG-------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle $VN.Void
N003 (  1,  1) [000180] ------------ arg1 in rdx  +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N004 (  2, 10) [000182] H----------- arg0 in rcx  \--*  CNS_INT(h) long   0xd1ffab1e method $19c

***** BB15
STMT00040 (IL   ???...  ???)
N008 ( 21, 31) [000185] --CXG-------              *  CALL      ref    SolutionAnalyzer.Logger.Log $10d
N005 (  4, 12) [000418] #---G------- arg1 in rdx  +--*  IND       ref    $1f9
N004 (  2, 10) [000417] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Enumerated and shuffled the project paths." $19d
N006 (  2, 10) [000186] H----------- arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method $181
N007 (  1,  1) [000184] ------------ arg2 in r8   \--*  CNS_INT   int    2 $42

***** BB15
STMT00041 (IL 0x0C5...0x0C6)
N002 (  2,  2) [000191] ------------              *  RETURN    ref    $10f
N001 (  1,  1) [000190] ------------              \--*  LCL_VAR   ref    V01 loc0         u:2 (last use) $1c1

------------ BB16 [000..000) (throw), preds={BB08,BB11} succs={}

***** BB16
STMT00067 (IL   ???...  ???)
N001 ( 14,  5) [000303] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance $VN.Void

-------------------------------------------------------------------------------------------------------------------
After constant propagation on [000425]:
STMT00071 (IL 0x0AA...  ???)
N009 (  8,  8) [000426] -A-X--------              *  JTRUE     void  
N008 (  6,  6) [000422] JA-X---N----              \--*  LE        int    $242
N006 (  4,  4) [000454] -A-X--------                 +--*  COMMA     int    $240
N004 (  3,  3) [000452] -A-X----R---                 |  +--*  ASG       int    $VN.Void
N003 (  1,  1) [000451] D------N----                 |  |  +--*  LCL_VAR   int    V29 cse1         d:1 $240
N002 (  3,  3) [000423] ---X--------                 |  |  \--*  ARR_LENGTH int    $240
N001 (  1,  1) [000424] ------------                 |  |     \--*  LCL_VAR   ref    V02 loc1         u:2 $80
N005 (  1,  1) [000453] ------------                 |  \--*  LCL_VAR   int    V29 cse1         u:1 $240
               [000457] ------------                 \--*  CNS_INT   int    0 $40
optVNAssertionPropCurStmt morphed tree:
N009 (  8,  8) [000426] -A-X--------              *  JTRUE     void  
N008 (  6,  6) [000422] JA-X---N----              \--*  LE        int    $242
N006 (  4,  4) [000454] -A-X--------                 +--*  COMMA     int    $240
N004 (  3,  3) [000452] -A-X----R---                 |  +--*  ASG       int    $VN.Void
N003 (  1,  1) [000451] D------N----                 |  |  +--*  LCL_VAR   int    V29 cse1         d:1 $240
N002 (  3,  3) [000423] ---X--------                 |  |  \--*  ARR_LENGTH int    $240
N001 (  1,  1) [000424] ------------                 |  |     \--*  LCL_VAR   ref    V02 loc1         u:2 $80
N005 (  1,  1) [000453] ------------                 |  \--*  LCL_VAR   int    V29 cse1         u:1 $240
N007 (  1,  1) [000457] ------------                 \--*  CNS_INT   int    0 $40

GenTreeNode creates assertion:
N002 (  3,  3) [000423] ---X--------              *  ARR_LENGTH int    $240
In BB01 New Global Constant Assertion: (128, 0) ($80,$0) V02.02 != null index=#01, mask=0000000000000001
GenTreeNode creates assertion:
N009 (  8,  8) [000426] -A-X--------              *  JTRUE     void  
In BB01 New Global Constant Assertion: (577, 64) ($241,$40) Loop_Bnd { {IntCns 0} GE  {ARR_LENGTH($80)}} is not  {IntCns 0} index=#02, mask=0000000000000002
GenTreeNode creates assertion:
N009 (  8,  8) [000426] -A-X--------              *  JTRUE     void  
In BB01 New Global Constant Assertion: (577, 64) ($241,$40) Loop_Bnd { {IntCns 0} GE  {ARR_LENGTH($80)}} is  {IntCns 0} index=#03, mask=0000000000000004
GenTreeNode creates assertion:
N003 (  6,  9) [000327] ---X--------              *  ARR_BOUNDS_CHECK_Rng void   $1c7
In BB02 New Global ArrBnds  Assertion: (0, 0) ($0,$0) [idx: {PhiDef($3, $3, $243)};len: {ARR_LENGTH($80)}] in range  index=#04, mask=0000000000000008
GenTreeNode creates assertion:
N002 (  2,  2) [000197] ---X--------              *  NULLCHECK byte   <l:$1d0, c:$1cf>
In BB02 New Global Constant Assertion: (705, 0) ($2c1,$0) V04.02 != null index=#05, mask=0000000000000010

VN based non-null prop in BB03:
N004 (  4,  4) [000200] ---XG-------              *  IND       int    <l:$258, c:$257>

VN based non-null prop in BB03:
N010 (  4,  4) [000203] D--XG--N----              *  IND       int    $25a
optVNAssertionPropCurStmt morphed tree:
N011 ( 11, 11) [000204] -A--GO--R---              *  ASG       int    $VN.Void
N010 (  4,  4) [000203] n---GO-N----              +--*  IND       int    $25a
N009 (  2,  2) [000341] -------N----              |  \--*  ADD       byref  $386
N007 (  1,  1) [000177] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N008 (  1,  1) [000340] ------------              |     \--*  CNS_INT   long   20 field offset Fseq[_version] $348
N006 (  6,  6) [000202] ----GO------              \--*  ADD       int    <l:$25c, c:$25b>
N004 (  4,  4) [000200] n---GO------                 +--*  IND       int    <l:$258, c:$257>
N003 (  2,  2) [000343] -------N----                 |  \--*  ADD       byref  $386
N001 (  1,  1) [000199] ------------                 |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N002 (  1,  1) [000342] ------------                 |     \--*  CNS_INT   long   20 field offset Fseq[_version] $348
N005 (  1,  1) [000201] ------------                 \--*  CNS_INT   int    1 $46

GenTreeNode creates assertion:
N004 (  4,  4) [000200] n---GO------              *  IND       int    <l:$258, c:$257>
In BB03 New Global Constant Assertion: (449, 0) ($1c1,$0) V01.02 != null index=#06, mask=0000000000000020

VN based non-null prop in BB03:
N004 (  4,  4) [000206] ---XG-------              *  IND       ref    <l:$1f0, c:$1ef>
optVNAssertionPropCurStmt morphed tree:
N006 (  4,  4) [000208] -A--GO--R---              *  ASG       ref    <l:$1f0, c:$1ef>
N005 (  1,  1) [000207] D------N----              +--*  LCL_VAR   ref    V18 tmp12        d:2 <l:$1ee, c:$2fc>
N004 (  4,  4) [000206] n---GO------              \--*  IND       ref    <l:$1f0, c:$1ef>
N003 (  2,  2) [000345] -------N----                 \--*  ADD       byref  $387
N001 (  1,  1) [000205] ------------                    +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N002 (  1,  1) [000344] ------------                    \--*  CNS_INT   long   8 field offset Fseq[_items] $343


VN based non-null prop in BB03:
N004 (  4,  4) [000210] ---XG-------              *  IND       int    <l:$260, c:$25f>
optVNAssertionPropCurStmt morphed tree:
N006 (  4,  4) [000212] -A--GO--R---              *  ASG       int    <l:$260, c:$25f>
N005 (  1,  1) [000211] D------N----              +--*  LCL_VAR   int    V19 tmp13        d:2 <l:$25e, c:$411>
N004 (  4,  4) [000210] n---GO------              \--*  IND       int    <l:$260, c:$25f>
N003 (  2,  2) [000347] -------N----                 \--*  ADD       byref  $383
N001 (  1,  1) [000209] ------------                    +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N002 (  1,  1) [000346] ------------                    \--*  CNS_INT   long   16 field offset Fseq[_size] $342

GenTreeNode creates assertion:
N002 (  3,  3) [000215] ---X--------              *  ARR_LENGTH int    <l:$262, c:$261>
In BB03 New Global Constant Assertion: (764, 0) ($2fc,$0) V18.02 != null index=#07, mask=0000000000000040
GenTreeNode creates assertion:
N005 (  7,  7) [000217] ---X--------              *  JTRUE     void  
In BB03 New Global ArrBnds  Assertion: (611, -1) ($263,$ffffffff) [idx: {411};len: {ARR_LENGTH($2fc)}] in range  index=#08, mask=0000000000000080

VN based non-null prop in BB04:
N007 (  4,  4) [000224] D--XG--N----              *  IND       int    $268
optVNAssertionPropCurStmt morphed tree:
N008 (  8,  8) [000225] -A--GO--R---              *  ASG       int    $VN.Void
N007 (  4,  4) [000224] n---GO-N----              +--*  IND       int    $268
N006 (  2,  2) [000349] -------N----              |  \--*  ADD       byref  $383
N004 (  1,  1) [000220] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N005 (  1,  1) [000348] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size] $342
N003 (  3,  3) [000223] ------------              \--*  ADD       int    <l:$268, c:$267>
N001 (  1,  1) [000221] ------------                 +--*  LCL_VAR   int    V19 tmp13        u:2 <l:$25e, c:$411>
N002 (  1,  1) [000222] ------------                 \--*  CNS_INT   int    1 $46

GenTreeNode creates assertion:
N004 (  5,  5) [000060] ------------              *  JTRUE     void  
In BB07 New Global Constant Assertion: (719, 0) ($2cf,$0) V11.02 != null index=#09, mask=0000000000000100
GenTreeNode creates assertion:
N004 (  5,  5) [000060] ------------              *  JTRUE     void  
In BB07 New Global Constant Assertion: (719, 0) ($2cf,$0) V11.02 == null index=#10, mask=0000000000000200
GenTreeNode creates assertion:
N004 (  5,  5) [000252] ------------              *  JTRUE     void  
In BB08 New Global Constant Assertion: (725, 0) ($2d5,$0) V21.02 == null index=#11, mask=0000000000000400
GenTreeNode creates assertion:
N004 (  5,  5) [000252] ------------              *  JTRUE     void  
In BB08 New Global Constant Assertion: (725, 0) ($2d5,$0) V21.02 != null index=#12, mask=0000000000000800

VN based non-null prop in BB09:
N004 (  4,  4) [000254] D--XG--N----              *  IND       ref    $4c1
optVNAssertionPropCurStmt morphed tree:
N006 (  6,  6) [000255] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000254] n---GO-N----              +--*  IND       ref    $4c1
N003 (  2,  2) [000370] -------N----              |  \--*  ADD       byref  $381
N001 (  1,  1) [000161] ------------              |     +--*  LCL_VAR   ref    V17 tmp11        u:2 $1d6
N002 (  1,  1) [000369] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $343
N005 (  1,  1) [000253] ------------              \--*  LCL_VAR   ref    V21 tmp15        u:2 (last use) <l:$4c1, c:$2d5>

GenTreeNode creates assertion:
N004 (  4,  4) [000254] n---GO-N----              *  IND       ref    $4c1
In BB09 New Global Constant Assertion: (470, 0) ($1d6,$0) V17.02 != null index=#13, mask=0000000000001000

VN based non-null prop in BB09:
N004 (  4,  4) [000258] D--XG--N----              *  IND       long   $18a
optVNAssertionPropCurStmt morphed tree:
N006 (  7, 15) [000259] -A--GO------              *  ASG       long   $VN.Void
N004 (  4,  4) [000258] n---GO-N----              +--*  IND       long   $18a
N003 (  2,  2) [000372] -------N----              |  \--*  ADD       byref  $382
N001 (  1,  1) [000256] ------------              |     +--*  LCL_VAR   ref    V17 tmp11        u:2 $1d6
N002 (  1,  1) [000371] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $346
N005 (  2, 10) [000156] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $18a


VN based non-null prop in BB10:
N007 (  4,  4) [000286] ---XG-------              *  IND       int    <l:$24c, c:$24b>
ReMorphing args for 288.CALL:
argSlots=3, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32
ArgTable for 288.CALL after fgMorphArgs:
fgArgTabEntry[arg 1 286.IND int (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 0 76.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=1, processed]
fgArgTabEntry[arg 2 287.LCL_VAR ref (By ref), 1 reg: r8, byteAlignment=8, lateArgInx=2, processed]

optVNAssertionPropCurStmt morphed tree:
N010 ( 20, 15) [000288] --CXGO------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange $VN.Void
N007 (  4,  4) [000286] n---GO------ arg1 in rdx  +--*  IND       int    <l:$24c, c:$24b>
N006 (  2,  2) [000389] -------N----              |  \--*  ADD       byref  $383
N004 (  1,  1) [000285] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N005 (  1,  1) [000388] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size] $342
N008 (  1,  1) [000076] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N009 (  1,  1) [000287] ------------ arg2 in r8   \--*  LCL_VAR   ref    V24 tmp18        u:2 (last use) $2e3

GenTreeNode creates assertion:
N004 (  5,  5) [000096] ------------              *  JTRUE     void  
In BB10 New Global Constant Assertion: (745, 0) ($2e9,$0) V15.02 != null index=#14, mask=0000000000002000
GenTreeNode creates assertion:
N004 (  5,  5) [000096] ------------              *  JTRUE     void  
In BB10 New Global Constant Assertion: (745, 0) ($2e9,$0) V15.02 == null index=#15, mask=0000000000004000
GenTreeNode creates assertion:
N004 (  5,  5) [000295] ------------              *  JTRUE     void  
In BB11 New Global Constant Assertion: (752, 0) ($2f0,$0) V25.02 == null index=#16, mask=0000000000008000
GenTreeNode creates assertion:
N004 (  5,  5) [000295] ------------              *  JTRUE     void  
In BB11 New Global Constant Assertion: (752, 0) ($2f0,$0) V25.02 != null index=#17, mask=0000000000010000

VN based non-null prop in BB12:
N004 (  4,  4) [000297] D--XG--N----              *  IND       ref    $4c7
optVNAssertionPropCurStmt morphed tree:
N006 (  6,  6) [000298] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000297] n---GO-N----              +--*  IND       ref    $4c7
N003 (  2,  2) [000401] -------N----              |  \--*  ADD       byref  $384
N001 (  1,  1) [000132] ------------              |     +--*  LCL_VAR   ref    V16 tmp10        u:2 $1e4
N002 (  1,  1) [000400] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $343
N005 (  1,  1) [000296] ------------              \--*  LCL_VAR   ref    V25 tmp19        u:2 (last use) <l:$4c7, c:$2f0>

GenTreeNode creates assertion:
N004 (  4,  4) [000297] n---GO-N----              *  IND       ref    $4c7
In BB12 New Global Constant Assertion: (484, 0) ($1e4,$0) V16.02 != null index=#18, mask=0000000000020000

VN based non-null prop in BB12:
N004 (  4,  4) [000301] D--XG--N----              *  IND       long   $194
optVNAssertionPropCurStmt morphed tree:
N006 (  7, 15) [000302] -A--GO------              *  ASG       long   $VN.Void
N004 (  4,  4) [000301] n---GO-N----              +--*  IND       long   $194
N003 (  2,  2) [000403] -------N----              |  \--*  ADD       byref  $385
N001 (  1,  1) [000299] ------------              |     +--*  LCL_VAR   ref    V16 tmp10        u:2 $1e4
N002 (  1,  1) [000402] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $346
N005 (  2, 10) [000127] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $194


VN based non-null prop in BB13:
N007 (  4,  4) [000309] ---XG-------              *  IND       int    <l:$254, c:$253>
ReMorphing args for 311.CALL:
argSlots=3, preallocatedArgCount=4, nextSlotNum=4, nextSlotByteOffset=32, outgoingArgSpaceSize=32
ArgTable for 311.CALL after fgMorphArgs:
fgArgTabEntry[arg 1 309.IND int (By ref), 1 reg: rdx, byteAlignment=8, lateArgInx=0, processed]
fgArgTabEntry[arg 0 109.LCL_VAR ref (By ref), 1 reg: rcx, byteAlignment=8, lateArgInx=1, processed]
fgArgTabEntry[arg 2 310.LCL_VAR ref (By ref), 1 reg: r8, byteAlignment=8, lateArgInx=2, processed]

optVNAssertionPropCurStmt morphed tree:
N010 ( 20, 15) [000311] --CXGO------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange $VN.Void
N007 (  4,  4) [000309] n---GO------ arg1 in rdx  +--*  IND       int    <l:$254, c:$253>
N006 (  2,  2) [000411] -------N----              |  \--*  ADD       byref  $383
N004 (  1,  1) [000308] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N005 (  1,  1) [000410] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size] $342
N008 (  1,  1) [000109] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         u:2 (last use) $1c1
N009 (  1,  1) [000310] ------------ arg2 in r8   \--*  LCL_VAR   ref    V27 tmp21        u:2 (last use) $2f6

GenTreeNode creates assertion:
N004 (  5,  5) [000027] ------------              *  JTRUE     void  
In BB14 New Global Constant Assertion: (618, 64) ($26a,$40) Loop_Bnd { {ADD($46, $280)} LT  {ARR_LENGTH($80)}} is not  {IntCns 0} index=#19, mask=0000000000040000
GenTreeNode creates assertion:
N004 (  5,  5) [000027] ------------              *  JTRUE     void  
In BB14 New Global Constant Assertion: (618, 64) ($26a,$40) Loop_Bnd { {ADD($46, $280)} LT  {ARR_LENGTH($80)}} is  {IntCns 0} index=#20, mask=0000000000080000
BB01 valueGen = 0000000000000005 => BB15 valueGen = 0000000000000003,
BB02 valueGen = 0000000000000018 => BB07 valueGen = 0000000000000018,
BB03 valueGen = 00000000000000E0 => BB05 valueGen = 0000000000000060,
BB04 valueGen = 0000000000000020
BB05 valueGen = 0000000000000000
BB06 valueGen = 0000000000000000
BB07 valueGen = 0000000000000200 => BB10 valueGen = 0000000000000100,
BB08 valueGen = 0000000000000800 => BB16 valueGen = 0000000000000400,
BB09 valueGen = 0000000000001000
BB10 valueGen = 0000000000004020 => BB13 valueGen = 0000000000002020,
BB11 valueGen = 0000000000010000 => BB16 valueGen = 0000000000008000,
BB12 valueGen = 0000000000020000
BB13 valueGen = 0000000000000020
BB14 valueGen = 0000000000080000 => BB02 valueGen = 0000000000040000,
BB15 valueGen = 0000000000000000
BB16 valueGen = 0000000000000000
AssertionPropCallback::StartMerge: BB01 in -> 0000000000000000
AssertionPropCallback::EndMerge  : BB01 in -> 0000000000000000

AssertionPropCallback::Changed   : BB01 before out -> 00000000000FFFFF; after out -> 0000000000000005;
		jumpDest before out -> 00000000000FFFFF; jumpDest after out -> 0000000000000003;

AssertionPropCallback::StartMerge: BB02 in -> 00000000000FFFFF
AssertionPropCallback::Merge     : BB02 in -> 00000000000FFFFF, predBlock BB01 out -> 0000000000000005
AssertionPropCallback::Merge     : BB02 in -> 0000000000000005, predBlock BB14 out -> 00000000000FFFFF
AssertionPropCallback::EndMerge  : BB02 in -> 0000000000000005

AssertionPropCallback::Changed   : BB02 before out -> 00000000000FFFFF; after out -> 000000000000001D;
		jumpDest before out -> 00000000000FFFFF; jumpDest after out -> 000000000000001D;

AssertionPropCallback::StartMerge: BB15 in -> 00000000000FFFFF
AssertionPropCallback::Merge     : BB15 in -> 00000000000FFFFF, predBlock BB01 out -> 0000000000000005
AssertionPropCallback::Merge     : BB15 in -> 0000000000000003, predBlock BB14 out -> 00000000000FFFFF
AssertionPropCallback::EndMerge  : BB15 in -> 0000000000000003

AssertionPropCallback::Changed   : BB15 before out -> 00000000000FFFFF; after out -> 0000000000000003;
		jumpDest before out -> 00000000000FFFFF; jumpDest after out -> 0000000000000003;

AssertionPropCallback::StartMerge: BB03 in -> 00000000000FFFFF
AssertionPropCallback::Merge     : BB03 in -> 00000000000FFFFF, predBlock BB02 out -> 000000000000001D
AssertionPropCallback::EndMerge  : BB03 in -> 000000000000001D

AssertionPropCallback::Changed   : BB03 before out -> 00000000000FFFFF; after out -> 00000000000000FD;
		jumpDest before out -> 00000000000FFFFF; jumpDest after out -> 000000000000007D;

AssertionPropCallback::StartMerge: BB07 in -> 00000000000FFFFF
AssertionPropCallback::Merge     : BB07 in -> 00000000000FFFFF, predBlock BB02 out -> 000000000000001D
AssertionPropCallback::EndMerge  : BB07 in -> 000000000000001D

AssertionPropCallback::Changed   : BB07 before out -> 00000000000FFFFF; after out -> 000000000000021D;
		jumpDest before out -> 00000000000FFFFF; jumpDest after out -> 000000000000011D;

AssertionPropCallback::StartMerge: BB04 in -> 00000000000FFFFF
AssertionPropCallback::Merge     : BB04 in -> 00000000000FFFFF, predBlock BB03 out -> 00000000000000FD
AssertionPropCallback::EndMerge  : BB04 in -> 00000000000000FD

AssertionPropCallback::Changed   : BB04 before out -> 00000000000FFFFF; after out -> 00000000000000FD;
		jumpDest before out -> 00000000000FFFFF; jumpDest after out -> 00000000000000FD;

AssertionPropCallback::StartMerge: BB05 in -> 00000000000FFFFF
AssertionPropCallback::Merge     : BB05 in -> 00000000000FFFFF, predBlock BB03 out -> 00000000000000FD
AssertionPropCallback::EndMerge  : BB05 in -> 000000000000007D

AssertionPropCallback::Changed   : BB05 before out -> 00000000000FFFFF; after out -> 000000000000007D;
		jumpDest before out -> 00000000000FFFFF; jumpDest after out -> 000000000000007D;

AssertionPropCallback::StartMerge: BB08 in -> 00000000000FFFFF
AssertionPropCallback::Merge     : BB08 in -> 00000000000FFFFF, predBlock BB07 out -> 000000000000021D
AssertionPropCallback::EndMerge  : BB08 in -> 000000000000021D

AssertionPropCallback::Changed   : BB08 before out -> 00000000000FFFFF; after out -> 0000000000000A1D;
		jumpDest before out -> 00000000000FFFFF; jumpDest after out -> 000000000000061D;

AssertionPropCallback::StartMerge: BB10 in -> 00000000000FFFFF
AssertionPropCallback::Merge     : BB10 in -> 00000000000FFFFF, predBlock BB07 out -> 000000000000021D
AssertionPropCallback::Merge     : BB10 in -> 000000000000011D, predBlock BB09 out -> 00000000000FFFFF
AssertionPropCallback::EndMerge  : BB10 in -> 000000000000011D

AssertionPropCallback::Changed   : BB10 before out -> 00000000000FFFFF; after out -> 000000000000413D;
		jumpDest before out -> 00000000000FFFFF; jumpDest after out -> 000000000000213D;

AssertionPropCallback::StartMerge: BB06 in -> 00000000000FFFFF
AssertionPropCallback::Merge     : BB06 in -> 00000000000FFFFF, predBlock BB04 out -> 00000000000000FD
AssertionPropCallback::Merge     : BB06 in -> 00000000000000FD, predBlock BB05 out -> 000000000000007D
AssertionPropCallback::EndMerge  : BB06 in -> 000000000000007D

AssertionPropCallback::Changed   : BB06 before out -> 00000000000FFFFF; after out -> 000000000000007D;
		jumpDest before out -> 00000000000FFFFF; jumpDest after out -> 000000000000007D;

AssertionPropCallback::StartMerge: BB06 in -> 000000000000007D
AssertionPropCallback::Merge     : BB06 in -> 000000000000007D, predBlock BB04 out -> 00000000000000FD
AssertionPropCallback::Merge     : BB06 in -> 000000000000007D, predBlock BB05 out -> 000000000000007D
AssertionPropCallback::EndMerge  : BB06 in -> 000000000000007D

AssertionPropCallback::Unchanged  : BB06 out -> 000000000000007D; 		jumpDest out -> 000000000000007D

AssertionPropCallback::StartMerge: BB09 in -> 00000000000FFFFF
AssertionPropCallback::Merge     : BB09 in -> 00000000000FFFFF, predBlock BB08 out -> 0000000000000A1D
AssertionPropCallback::EndMerge  : BB09 in -> 0000000000000A1D

AssertionPropCallback::Changed   : BB09 before out -> 00000000000FFFFF; after out -> 0000000000001A1D;
		jumpDest before out -> 00000000000FFFFF; jumpDest after out -> 0000000000000A1D;

AssertionPropCallback::StartMerge: BB16 in -> 00000000000FFFFF
AssertionPropCallback::Merge     : BB16 in -> 00000000000FFFFF, predBlock BB08 out -> 0000000000000A1D
AssertionPropCallback::Merge     : BB16 in -> 000000000000061D, predBlock BB11 out -> 00000000000FFFFF
AssertionPropCallback::EndMerge  : BB16 in -> 000000000000061D

AssertionPropCallback::Changed   : BB16 before out -> 00000000000FFFFF; after out -> 000000000000061D;
		jumpDest before out -> 00000000000FFFFF; jumpDest after out -> 000000000000061D;

AssertionPropCallback::StartMerge: BB11 in -> 00000000000FFFFF
AssertionPropCallback::Merge     : BB11 in -> 00000000000FFFFF, predBlock BB10 out -> 000000000000413D
AssertionPropCallback::EndMerge  : BB11 in -> 000000000000413D

AssertionPropCallback::Changed   : BB11 before out -> 00000000000FFFFF; after out -> 000000000001413D;
		jumpDest before out -> 00000000000FFFFF; jumpDest after out -> 000000000000C13D;

AssertionPropCallback::StartMerge: BB13 in -> 00000000000FFFFF
AssertionPropCallback::Merge     : BB13 in -> 00000000000FFFFF, predBlock BB10 out -> 000000000000413D
AssertionPropCallback::Merge     : BB13 in -> 000000000000213D, predBlock BB12 out -> 00000000000FFFFF
AssertionPropCallback::EndMerge  : BB13 in -> 000000000000213D

AssertionPropCallback::Changed   : BB13 before out -> 00000000000FFFFF; after out -> 000000000000213D;
		jumpDest before out -> 00000000000FFFFF; jumpDest after out -> 000000000000213D;

AssertionPropCallback::StartMerge: BB14 in -> 00000000000FFFFF
AssertionPropCallback::Merge     : BB14 in -> 00000000000FFFFF, predBlock BB06 out -> 000000000000007D
AssertionPropCallback::Merge     : BB14 in -> 000000000000007D, predBlock BB13 out -> 000000000000213D
AssertionPropCallback::EndMerge  : BB14 in -> 000000000000003D

AssertionPropCallback::Changed   : BB14 before out -> 00000000000FFFFF; after out -> 000000000008003D;
		jumpDest before out -> 00000000000FFFFF; jumpDest after out -> 000000000004003D;

AssertionPropCallback::StartMerge: BB10 in -> 000000000000011D
AssertionPropCallback::Merge     : BB10 in -> 000000000000011D, predBlock BB07 out -> 000000000000021D
AssertionPropCallback::Merge     : BB10 in -> 000000000000011D, predBlock BB09 out -> 0000000000001A1D
AssertionPropCallback::EndMerge  : BB10 in -> 000000000000001D

AssertionPropCallback::Changed   : BB10 before out -> 000000000000413D; after out -> 000000000000403D;
		jumpDest before out -> 000000000000213D; jumpDest after out -> 000000000000203D;

AssertionPropCallback::StartMerge: BB12 in -> 00000000000FFFFF
AssertionPropCallback::Merge     : BB12 in -> 00000000000FFFFF, predBlock BB11 out -> 000000000001413D
AssertionPropCallback::EndMerge  : BB12 in -> 000000000001413D

AssertionPropCallback::Changed   : BB12 before out -> 00000000000FFFFF; after out -> 000000000003413D;
		jumpDest before out -> 00000000000FFFFF; jumpDest after out -> 000000000001413D;

AssertionPropCallback::StartMerge: BB16 in -> 000000000000061D
AssertionPropCallback::Merge     : BB16 in -> 000000000000061D, predBlock BB08 out -> 0000000000000A1D
AssertionPropCallback::Merge     : BB16 in -> 000000000000061D, predBlock BB11 out -> 000000000001413D
AssertionPropCallback::EndMerge  : BB16 in -> 000000000000001D

AssertionPropCallback::Changed   : BB16 before out -> 000000000000061D; after out -> 000000000000001D;
		jumpDest before out -> 000000000000061D; jumpDest after out -> 000000000000001D;

AssertionPropCallback::StartMerge: BB14 in -> 000000000000003D
AssertionPropCallback::Merge     : BB14 in -> 000000000000003D, predBlock BB06 out -> 000000000000007D
AssertionPropCallback::Merge     : BB14 in -> 000000000000003D, predBlock BB13 out -> 000000000000213D
AssertionPropCallback::EndMerge  : BB14 in -> 000000000000003D

AssertionPropCallback::Unchanged  : BB14 out -> 000000000008003D; 		jumpDest out -> 000000000004003D

AssertionPropCallback::StartMerge: BB15 in -> 0000000000000003
AssertionPropCallback::Merge     : BB15 in -> 0000000000000003, predBlock BB01 out -> 0000000000000005
AssertionPropCallback::Merge     : BB15 in -> 0000000000000003, predBlock BB14 out -> 000000000008003D
AssertionPropCallback::EndMerge  : BB15 in -> 0000000000000001

AssertionPropCallback::Changed   : BB15 before out -> 0000000000000003; after out -> 0000000000000001;
		jumpDest before out -> 0000000000000003; jumpDest after out -> 0000000000000001;

AssertionPropCallback::StartMerge: BB02 in -> 0000000000000005
AssertionPropCallback::Merge     : BB02 in -> 0000000000000005, predBlock BB01 out -> 0000000000000005
AssertionPropCallback::Merge     : BB02 in -> 0000000000000005, predBlock BB14 out -> 000000000008003D
AssertionPropCallback::EndMerge  : BB02 in -> 0000000000000005

AssertionPropCallback::Unchanged  : BB02 out -> 000000000000001D; 		jumpDest out -> 000000000000001D

AssertionPropCallback::StartMerge: BB11 in -> 000000000000413D
AssertionPropCallback::Merge     : BB11 in -> 000000000000413D, predBlock BB10 out -> 000000000000403D
AssertionPropCallback::EndMerge  : BB11 in -> 000000000000403D

AssertionPropCallback::Changed   : BB11 before out -> 000000000001413D; after out -> 000000000001403D;
		jumpDest before out -> 000000000000C13D; jumpDest after out -> 000000000000C03D;

AssertionPropCallback::StartMerge: BB13 in -> 000000000000213D
AssertionPropCallback::Merge     : BB13 in -> 000000000000213D, predBlock BB10 out -> 000000000000403D
AssertionPropCallback::Merge     : BB13 in -> 000000000000203D, predBlock BB12 out -> 000000000003413D
AssertionPropCallback::EndMerge  : BB13 in -> 000000000000003D

AssertionPropCallback::Changed   : BB13 before out -> 000000000000213D; after out -> 000000000000003D;
		jumpDest before out -> 000000000000213D; jumpDest after out -> 000000000000003D;

AssertionPropCallback::StartMerge: BB13 in -> 000000000000003D
AssertionPropCallback::Merge     : BB13 in -> 000000000000003D, predBlock BB10 out -> 000000000000403D
AssertionPropCallback::Merge     : BB13 in -> 000000000000003D, predBlock BB12 out -> 000000000003413D
AssertionPropCallback::EndMerge  : BB13 in -> 000000000000003D

AssertionPropCallback::Unchanged  : BB13 out -> 000000000000003D; 		jumpDest out -> 000000000000003D

AssertionPropCallback::StartMerge: BB12 in -> 000000000001413D
AssertionPropCallback::Merge     : BB12 in -> 000000000001413D, predBlock BB11 out -> 000000000001403D
AssertionPropCallback::EndMerge  : BB12 in -> 000000000001403D

AssertionPropCallback::Changed   : BB12 before out -> 000000000003413D; after out -> 000000000003403D;
		jumpDest before out -> 000000000001413D; jumpDest after out -> 000000000001403D;

AssertionPropCallback::StartMerge: BB16 in -> 000000000000001D
AssertionPropCallback::Merge     : BB16 in -> 000000000000001D, predBlock BB08 out -> 0000000000000A1D
AssertionPropCallback::Merge     : BB16 in -> 000000000000001D, predBlock BB11 out -> 000000000001403D
AssertionPropCallback::EndMerge  : BB16 in -> 000000000000001D

AssertionPropCallback::Unchanged  : BB16 out -> 000000000000001D; 		jumpDest out -> 000000000000001D

AssertionPropCallback::StartMerge: BB14 in -> 000000000000003D
AssertionPropCallback::Merge     : BB14 in -> 000000000000003D, predBlock BB06 out -> 000000000000007D
AssertionPropCallback::Merge     : BB14 in -> 000000000000003D, predBlock BB13 out -> 000000000000003D
AssertionPropCallback::EndMerge  : BB14 in -> 000000000000003D

AssertionPropCallback::Unchanged  : BB14 out -> 000000000008003D; 		jumpDest out -> 000000000004003D

AssertionPropCallback::StartMerge: BB13 in -> 000000000000003D
AssertionPropCallback::Merge     : BB13 in -> 000000000000003D, predBlock BB10 out -> 000000000000403D
AssertionPropCallback::Merge     : BB13 in -> 000000000000003D, predBlock BB12 out -> 000000000003403D
AssertionPropCallback::EndMerge  : BB13 in -> 000000000000003D

AssertionPropCallback::Unchanged  : BB13 out -> 000000000000003D; 		jumpDest out -> 000000000000003D



BB01 valueIn  = 0000000000000000 valueOut = 0000000000000005 => BB15 valueOut= 0000000000000003
BB02 valueIn  = 0000000000000005 valueOut = 000000000000001D => BB07 valueOut= 000000000000001D
BB03 valueIn  = 000000000000001D valueOut = 00000000000000FD => BB05 valueOut= 000000000000007D
BB04 valueIn  = 00000000000000FD valueOut = 00000000000000FD
BB05 valueIn  = 000000000000007D valueOut = 000000000000007D
BB06 valueIn  = 000000000000007D valueOut = 000000000000007D
BB07 valueIn  = 000000000000001D valueOut = 000000000000021D => BB10 valueOut= 000000000000011D
BB08 valueIn  = 000000000000021D valueOut = 0000000000000A1D => BB16 valueOut= 000000000000061D
BB09 valueIn  = 0000000000000A1D valueOut = 0000000000001A1D
BB10 valueIn  = 000000000000001D valueOut = 000000000000403D => BB13 valueOut= 000000000000203D
BB11 valueIn  = 000000000000403D valueOut = 000000000001403D => BB16 valueOut= 000000000000C03D
BB12 valueIn  = 000000000001403D valueOut = 000000000003403D
BB13 valueIn  = 000000000000003D valueOut = 000000000000003D
BB14 valueIn  = 000000000000003D valueOut = 000000000008003D => BB02 valueOut= 000000000004003D
BB15 valueIn  = 0000000000000001 valueOut = 0000000000000001
BB16 valueIn  = 000000000000001D valueOut = 000000000000001D
Propagating 0000000000000000 assertions for BB01, stmt STMT00001, tree [000319], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00001, tree [000318], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00001, tree [000320], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00001, tree [000316], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00001, tree [000317], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00001, tree [000003], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00001, tree [000001], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00001, tree [000002], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00002, tree [000321], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00002, tree [000008], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00002, tree [000009], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00002, tree [000010], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00002, tree [000011], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00003, tree [000322], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00003, tree [000323], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00003, tree [000012], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00003, tree [000007], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00003, tree [000013], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00004, tree [000014], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00004, tree [000015], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00004, tree [000016], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00005, tree [000017], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00005, tree [000018], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00005, tree [000019], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00006, tree [000020], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00006, tree [000021], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00006, tree [000022], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00071, tree [000424], tree -> 0
Propagating 0000000000000000 assertions for BB01, stmt STMT00071, tree [000423], tree -> 1
Propagating 0000000000000001 assertions for BB01, stmt STMT00071, tree [000451], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00071, tree [000452], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00071, tree [000453], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00071, tree [000454], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00071, tree [000457], tree -> 0
Propagating 0000000000000001 assertions for BB01, stmt STMT00071, tree [000422], tree -> 0
Failed to find a suitable dominating compare, so we won't optimize
Propagating 0000000000000001 assertions for BB01, stmt STMT00071, tree [000426], tree -> 2
Propagating 0000000000000005 assertions for BB02, stmt STMT00008, tree [000029], tree -> 0
Propagating 0000000000000005 assertions for BB02, stmt STMT00008, tree [000455], tree -> 0
Propagating 0000000000000005 assertions for BB02, stmt STMT00008, tree [000327], tree -> 4
Propagating 000000000000000D assertions for BB02, stmt STMT00008, tree [000324], tree -> 0
Propagating 000000000000000D assertions for BB02, stmt STMT00008, tree [000325], tree -> 0
Propagating 000000000000000D assertions for BB02, stmt STMT00008, tree [000328], tree -> 0
Propagating 000000000000000D assertions for BB02, stmt STMT00008, tree [000329], tree -> 0
Propagating 000000000000000D assertions for BB02, stmt STMT00008, tree [000330], tree -> 0
Propagating 000000000000000D assertions for BB02, stmt STMT00008, tree [000331], tree -> 0
Propagating 000000000000000D assertions for BB02, stmt STMT00008, tree [000332], tree -> 0
Propagating 000000000000000D assertions for BB02, stmt STMT00008, tree [000333], tree -> 0
Propagating 000000000000000D assertions for BB02, stmt STMT00008, tree [000030], tree -> 0
Propagating 000000000000000D assertions for BB02, stmt STMT00008, tree [000334], tree -> 0
Propagating 000000000000000D assertions for BB02, stmt STMT00008, tree [000031], tree -> 0
Propagating 000000000000000D assertions for BB02, stmt STMT00008, tree [000032], tree -> 0
Propagating 000000000000000D assertions for BB02, stmt STMT00042, tree [000196], tree -> 0
Propagating 000000000000000D assertions for BB02, stmt STMT00042, tree [000197], tree -> 5
Propagating 000000000000001D assertions for BB02, stmt STMT00010, tree [000338], tree -> 0
Propagating 000000000000001D assertions for BB02, stmt STMT00010, tree [000337], tree -> 0
Propagating 000000000000001D assertions for BB02, stmt STMT00010, tree [000339], tree -> 0
Propagating 000000000000001D assertions for BB02, stmt STMT00010, tree [000335], tree -> 0
Propagating 000000000000001D assertions for BB02, stmt STMT00010, tree [000336], tree -> 0
Propagating 000000000000001D assertions for BB02, stmt STMT00010, tree [000033], tree -> 0
Propagating 000000000000001D assertions for BB02, stmt STMT00010, tree [000194], tree -> 0
Propagating 000000000000001D assertions for BB02, stmt STMT00010, tree [000195], tree -> 0
Propagating 000000000000001D assertions for BB02, stmt STMT00010, tree [000037], tree -> 0
Propagating 000000000000001D assertions for BB02, stmt STMT00010, tree [000038], tree -> 0

VN relop, checking BB02 for redundancy
 ... checking dom BB01
Failed to find a suitable dominating compare, so we won't optimize
Propagating 000000000000001D assertions for BB02, stmt STMT00010, tree [000039], tree -> 0
Propagating 000000000000001D assertions for BB03, stmt STMT00043, tree [000199], tree -> 0
Propagating 000000000000001D assertions for BB03, stmt STMT00043, tree [000342], tree -> 0
Propagating 000000000000001D assertions for BB03, stmt STMT00043, tree [000343], tree -> 0
Propagating 000000000000001D assertions for BB03, stmt STMT00043, tree [000200], tree -> 6
Propagating 000000000000003D assertions for BB03, stmt STMT00043, tree [000201], tree -> 0
Propagating 000000000000003D assertions for BB03, stmt STMT00043, tree [000202], tree -> 0
Propagating 000000000000003D assertions for BB03, stmt STMT00043, tree [000177], tree -> 0
Propagating 000000000000003D assertions for BB03, stmt STMT00043, tree [000340], tree -> 0
Propagating 000000000000003D assertions for BB03, stmt STMT00043, tree [000341], tree -> 0
Propagating 000000000000003D assertions for BB03, stmt STMT00043, tree [000203], tree -> 6
Propagating 000000000000003D assertions for BB03, stmt STMT00043, tree [000204], tree -> 0
Propagating 000000000000003D assertions for BB03, stmt STMT00044, tree [000205], tree -> 0
Propagating 000000000000003D assertions for BB03, stmt STMT00044, tree [000344], tree -> 0
Propagating 000000000000003D assertions for BB03, stmt STMT00044, tree [000345], tree -> 0
Propagating 000000000000003D assertions for BB03, stmt STMT00044, tree [000206], tree -> 6
Propagating 000000000000003D assertions for BB03, stmt STMT00044, tree [000207], tree -> 0
Propagating 000000000000003D assertions for BB03, stmt STMT00044, tree [000208], tree -> 0
Propagating 000000000000003D assertions for BB03, stmt STMT00045, tree [000209], tree -> 0
Propagating 000000000000003D assertions for BB03, stmt STMT00045, tree [000346], tree -> 0
Propagating 000000000000003D assertions for BB03, stmt STMT00045, tree [000347], tree -> 0
Propagating 000000000000003D assertions for BB03, stmt STMT00045, tree [000210], tree -> 6
Propagating 000000000000003D assertions for BB03, stmt STMT00045, tree [000211], tree -> 0
Propagating 000000000000003D assertions for BB03, stmt STMT00045, tree [000212], tree -> 0
Propagating 000000000000003D assertions for BB03, stmt STMT00046, tree [000214], tree -> 0
Propagating 000000000000003D assertions for BB03, stmt STMT00046, tree [000215], tree -> 7
Propagating 000000000000007D assertions for BB03, stmt STMT00046, tree [000213], tree -> 0
Propagating 000000000000007D assertions for BB03, stmt STMT00046, tree [000216], tree -> 0

VN relop, checking BB03 for redundancy
 ... checking dom BB02
 ... checking dom BB01
Failed to find a suitable dominating compare, so we won't optimize
Propagating 000000000000007D assertions for BB03, stmt STMT00046, tree [000217], tree -> 8
Propagating 00000000000000FD assertions for BB04, stmt STMT00048, tree [000221], tree -> 0
Propagating 00000000000000FD assertions for BB04, stmt STMT00048, tree [000222], tree -> 0
Propagating 00000000000000FD assertions for BB04, stmt STMT00048, tree [000223], tree -> 0
Propagating 00000000000000FD assertions for BB04, stmt STMT00048, tree [000220], tree -> 0
Propagating 00000000000000FD assertions for BB04, stmt STMT00048, tree [000348], tree -> 0
Propagating 00000000000000FD assertions for BB04, stmt STMT00048, tree [000349], tree -> 0
Propagating 00000000000000FD assertions for BB04, stmt STMT00048, tree [000224], tree -> 6
Propagating 00000000000000FD assertions for BB04, stmt STMT00048, tree [000225], tree -> 0
Propagating 00000000000000FD assertions for BB04, stmt STMT00049, tree [000350], tree -> 0
Propagating 00000000000000FD assertions for BB04, stmt STMT00049, tree [000351], tree -> 0
Propagating 00000000000000FD assertions for BB04, stmt STMT00049, tree [000352], tree -> 0
Propagating 00000000000000FD assertions for BB04, stmt STMT00049, tree [000226], tree -> 0
Propagating 00000000000000FD assertions for BB04, stmt STMT00049, tree [000227], tree -> 0
Propagating 00000000000000FD assertions for BB04, stmt STMT00049, tree [000228], tree -> 0
Propagating 00000000000000FD assertions for BB04, stmt STMT00049, tree [000229], tree -> 0
Propagating 000000000000007D assertions for BB05, stmt STMT00047, tree [000353], tree -> 0
Propagating 000000000000007D assertions for BB05, stmt STMT00047, tree [000354], tree -> 0
Propagating 000000000000007D assertions for BB05, stmt STMT00047, tree [000218], tree -> 0
Propagating 000000000000007D assertions for BB05, stmt STMT00047, tree [000178], tree -> 0
Propagating 000000000000007D assertions for BB05, stmt STMT00047, tree [000219], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00053, tree [000355], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00053, tree [000235], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00053, tree [000236], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00053, tree [000246], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00053, tree [000247], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00013, tree [000359], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00013, tree [000358], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00013, tree [000361], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00013, tree [000360], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00013, tree [000356], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00013, tree [000357], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00013, tree [000040], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00013, tree [000244], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00013, tree [000243], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00013, tree [000245], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00013, tree [000053], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00013, tree [000054], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00012, tree [000362], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00012, tree [000363], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00012, tree [000047], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00012, tree [000048], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00012, tree [000049], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00012, tree [000442], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00012, tree [000443], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00012, tree [000444], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00012, tree [000445], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00012, tree [000364], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00012, tree [000045], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00012, tree [000050], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00012, tree [000051], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00012, tree [000052], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00015, tree [000055], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00015, tree [000061], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00015, tree [000062], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00016, tree [000056], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00016, tree [000064], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00016, tree [000065], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00014, tree [000057], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00014, tree [000058], tree -> 0
Propagating 000000000000001D assertions for BB07, stmt STMT00014, tree [000059], tree -> 0

VN relop, checking BB07 for redundancy
 ... checking dom BB02
 ... checking dom BB01
Failed to find a suitable dominating compare, so we won't optimize
Propagating 000000000000001D assertions for BB07, stmt STMT00014, tree [000060], tree -> 9
Propagating 000000000000021D assertions for BB08, stmt STMT00033, tree [000365], tree -> 0
Propagating 000000000000021D assertions for BB08, stmt STMT00033, tree [000157], tree -> 0
Propagating 000000000000021D assertions for BB08, stmt STMT00033, tree [000158], tree -> 0
Propagating 000000000000021D assertions for BB08, stmt STMT00033, tree [000159], tree -> 0
Propagating 000000000000021D assertions for BB08, stmt STMT00033, tree [000160], tree -> 0
Propagating 000000000000021D assertions for BB08, stmt STMT00058, tree [000446], tree -> 0
Propagating 000000000000021D assertions for BB08, stmt STMT00058, tree [000368], tree -> 0
Propagating 000000000000021D assertions for BB08, stmt STMT00058, tree [000150], tree -> 0
Propagating 000000000000021D assertions for BB08, stmt STMT00058, tree [000155], tree -> 0
Propagating 000000000000021D assertions for BB08, stmt STMT00058, tree [000261], tree -> 0
Propagating 000000000000021D assertions for BB08, stmt STMT00058, tree [000262], tree -> 0
Propagating 000000000000021D assertions for BB08, stmt STMT00054, tree [000249], tree -> 0
Propagating 000000000000021D assertions for BB08, stmt STMT00054, tree [000250], tree -> 0
Propagating 000000000000021D assertions for BB08, stmt STMT00054, tree [000251], tree -> 0

VN relop, checking BB08 for redundancy
 ... checking dom BB07
 ... checking dom BB02
 ... checking dom BB01
Failed to find a suitable dominating compare, so we won't optimize
Propagating 000000000000021D assertions for BB08, stmt STMT00054, tree [000252], tree -> 11
Propagating 0000000000000A1D assertions for BB09, stmt STMT00055, tree [000161], tree -> 0
Propagating 0000000000000A1D assertions for BB09, stmt STMT00055, tree [000369], tree -> 0
Propagating 0000000000000A1D assertions for BB09, stmt STMT00055, tree [000370], tree -> 0
Propagating 0000000000000A1D assertions for BB09, stmt STMT00055, tree [000254], tree -> 13
Propagating 0000000000001A1D assertions for BB09, stmt STMT00055, tree [000253], tree -> 0
Propagating 0000000000001A1D assertions for BB09, stmt STMT00055, tree [000255], tree -> 0
Propagating 0000000000001A1D assertions for BB09, stmt STMT00056, tree [000256], tree -> 0
Propagating 0000000000001A1D assertions for BB09, stmt STMT00056, tree [000371], tree -> 0
Propagating 0000000000001A1D assertions for BB09, stmt STMT00056, tree [000372], tree -> 0
Propagating 0000000000001A1D assertions for BB09, stmt STMT00056, tree [000258], tree -> 13
Propagating 0000000000001A1D assertions for BB09, stmt STMT00056, tree [000156], tree -> 0
Propagating 0000000000001A1D assertions for BB09, stmt STMT00056, tree [000259], tree -> 0
Propagating 0000000000001A1D assertions for BB09, stmt STMT00035, tree [000447], tree -> 0
Propagating 0000000000001A1D assertions for BB09, stmt STMT00035, tree [000375], tree -> 0
Propagating 0000000000001A1D assertions for BB09, stmt STMT00035, tree [000165], tree -> 0
Propagating 0000000000001A1D assertions for BB09, stmt STMT00035, tree [000164], tree -> 0
Propagating 0000000000001A1D assertions for BB09, stmt STMT00035, tree [000166], tree -> 0
Propagating 0000000000001A1D assertions for BB09, stmt STMT00035, tree [000171], tree -> 0
Propagating 0000000000001A1D assertions for BB09, stmt STMT00036, tree [000163], tree -> 0
Propagating 0000000000001A1D assertions for BB09, stmt STMT00036, tree [000174], tree -> 0
Propagating 0000000000001A1D assertions for BB09, stmt STMT00036, tree [000175], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00018, tree [000378], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00018, tree [000377], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00018, tree [000376], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00018, tree [000070], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00018, tree [000069], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00018, tree [000072], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00018, tree [000071], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00018, tree [000074], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00018, tree [000075], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00061, tree [000379], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00061, tree [000380], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00061, tree [000273], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00061, tree [000274], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00061, tree [000275], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00061, tree [000381], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00061, tree [000271], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00061, tree [000276], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00061, tree [000282], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00061, tree [000283], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00063, tree [000385], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00063, tree [000384], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00063, tree [000387], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00063, tree [000386], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00063, tree [000382], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00063, tree [000383], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00063, tree [000077], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00063, tree [000280], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00063, tree [000279], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00063, tree [000281], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00063, tree [000289], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00063, tree [000290], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00062, tree [000391], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00062, tree [000390], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00062, tree [000392], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00062, tree [000285], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00062, tree [000388], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00062, tree [000389], tree -> 0
Propagating 000000000000001D assertions for BB10, stmt STMT00062, tree [000286], tree -> 6
Propagating 000000000000003D assertions for BB10, stmt STMT00062, tree [000076], tree -> 0
Propagating 000000000000003D assertions for BB10, stmt STMT00062, tree [000287], tree -> 0
Propagating 000000000000003D assertions for BB10, stmt STMT00062, tree [000288], tree -> 0
Propagating 000000000000003D assertions for BB10, stmt STMT00021, tree [000448], tree -> 0
Propagating 000000000000003D assertions for BB10, stmt STMT00021, tree [000395], tree -> 0
Propagating 000000000000003D assertions for BB10, stmt STMT00021, tree [000084], tree -> 0
Propagating 000000000000003D assertions for BB10, stmt STMT00021, tree [000089], tree -> 0
Propagating 000000000000003D assertions for BB10, stmt STMT00021, tree [000090], tree -> 0
Propagating 000000000000003D assertions for BB10, stmt STMT00021, tree [000091], tree -> 0
Propagating 000000000000003D assertions for BB10, stmt STMT00023, tree [000082], tree -> 0
Propagating 000000000000003D assertions for BB10, stmt STMT00023, tree [000097], tree -> 0
Propagating 000000000000003D assertions for BB10, stmt STMT00023, tree [000098], tree -> 0
Propagating 000000000000003D assertions for BB10, stmt STMT00024, tree [000083], tree -> 0
Propagating 000000000000003D assertions for BB10, stmt STMT00024, tree [000100], tree -> 0
Propagating 000000000000003D assertions for BB10, stmt STMT00024, tree [000101], tree -> 0
Propagating 000000000000003D assertions for BB10, stmt STMT00025, tree [000092], tree -> 0
Propagating 000000000000003D assertions for BB10, stmt STMT00025, tree [000103], tree -> 0
Propagating 000000000000003D assertions for BB10, stmt STMT00025, tree [000104], tree -> 0
Propagating 000000000000003D assertions for BB10, stmt STMT00022, tree [000093], tree -> 0
Propagating 000000000000003D assertions for BB10, stmt STMT00022, tree [000094], tree -> 0
Propagating 000000000000003D assertions for BB10, stmt STMT00022, tree [000095], tree -> 0

VN relop, checking BB10 for redundancy
 ... checking dom BB07
 ... checking dom BB02
 ... checking dom BB01
Failed to find a suitable dominating compare, so we won't optimize
Propagating 000000000000003D assertions for BB10, stmt STMT00022, tree [000096], tree -> 14
Propagating 000000000000403D assertions for BB11, stmt STMT00029, tree [000396], tree -> 0
Propagating 000000000000403D assertions for BB11, stmt STMT00029, tree [000128], tree -> 0
Propagating 000000000000403D assertions for BB11, stmt STMT00029, tree [000129], tree -> 0
Propagating 000000000000403D assertions for BB11, stmt STMT00029, tree [000130], tree -> 0
Propagating 000000000000403D assertions for BB11, stmt STMT00029, tree [000131], tree -> 0
Propagating 000000000000403D assertions for BB11, stmt STMT00068, tree [000449], tree -> 0
Propagating 000000000000403D assertions for BB11, stmt STMT00068, tree [000399], tree -> 0
Propagating 000000000000403D assertions for BB11, stmt STMT00068, tree [000121], tree -> 0
Propagating 000000000000403D assertions for BB11, stmt STMT00068, tree [000126], tree -> 0
Propagating 000000000000403D assertions for BB11, stmt STMT00068, tree [000304], tree -> 0
Propagating 000000000000403D assertions for BB11, stmt STMT00068, tree [000305], tree -> 0
Propagating 000000000000403D assertions for BB11, stmt STMT00064, tree [000292], tree -> 0
Propagating 000000000000403D assertions for BB11, stmt STMT00064, tree [000293], tree -> 0
Propagating 000000000000403D assertions for BB11, stmt STMT00064, tree [000294], tree -> 0

VN relop, checking BB11 for redundancy
 ... checking dom BB10
 ... checking dom BB07
 ... checking dom BB02
 ... checking dom BB01
Failed to find a suitable dominating compare, so we won't optimize
Propagating 000000000000403D assertions for BB11, stmt STMT00064, tree [000295], tree -> 16
Propagating 000000000001403D assertions for BB12, stmt STMT00065, tree [000132], tree -> 0
Propagating 000000000001403D assertions for BB12, stmt STMT00065, tree [000400], tree -> 0
Propagating 000000000001403D assertions for BB12, stmt STMT00065, tree [000401], tree -> 0
Propagating 000000000001403D assertions for BB12, stmt STMT00065, tree [000297], tree -> 18
Propagating 000000000003403D assertions for BB12, stmt STMT00065, tree [000296], tree -> 0
Propagating 000000000003403D assertions for BB12, stmt STMT00065, tree [000298], tree -> 0
Propagating 000000000003403D assertions for BB12, stmt STMT00066, tree [000299], tree -> 0
Propagating 000000000003403D assertions for BB12, stmt STMT00066, tree [000402], tree -> 0
Propagating 000000000003403D assertions for BB12, stmt STMT00066, tree [000403], tree -> 0
Propagating 000000000003403D assertions for BB12, stmt STMT00066, tree [000301], tree -> 18
Propagating 000000000003403D assertions for BB12, stmt STMT00066, tree [000127], tree -> 0
Propagating 000000000003403D assertions for BB12, stmt STMT00066, tree [000302], tree -> 0
Propagating 000000000003403D assertions for BB12, stmt STMT00031, tree [000450], tree -> 0
Propagating 000000000003403D assertions for BB12, stmt STMT00031, tree [000406], tree -> 0
Propagating 000000000003403D assertions for BB12, stmt STMT00031, tree [000136], tree -> 0
Propagating 000000000003403D assertions for BB12, stmt STMT00031, tree [000135], tree -> 0
Propagating 000000000003403D assertions for BB12, stmt STMT00031, tree [000137], tree -> 0
Propagating 000000000003403D assertions for BB12, stmt STMT00031, tree [000142], tree -> 0
Propagating 000000000003403D assertions for BB12, stmt STMT00032, tree [000134], tree -> 0
Propagating 000000000003403D assertions for BB12, stmt STMT00032, tree [000147], tree -> 0
Propagating 000000000003403D assertions for BB12, stmt STMT00032, tree [000148], tree -> 0
Propagating 000000000000003D assertions for BB13, stmt STMT00070, tree [000409], tree -> 0
Propagating 000000000000003D assertions for BB13, stmt STMT00070, tree [000408], tree -> 0
Propagating 000000000000003D assertions for BB13, stmt STMT00070, tree [000407], tree -> 0
Propagating 000000000000003D assertions for BB13, stmt STMT00070, tree [000111], tree -> 0
Propagating 000000000000003D assertions for BB13, stmt STMT00070, tree [000110], tree -> 0
Propagating 000000000000003D assertions for BB13, stmt STMT00070, tree [000113], tree -> 0
Propagating 000000000000003D assertions for BB13, stmt STMT00070, tree [000112], tree -> 0
Propagating 000000000000003D assertions for BB13, stmt STMT00070, tree [000312], tree -> 0
Propagating 000000000000003D assertions for BB13, stmt STMT00070, tree [000313], tree -> 0
Propagating 000000000000003D assertions for BB13, stmt STMT00069, tree [000413], tree -> 0
Propagating 000000000000003D assertions for BB13, stmt STMT00069, tree [000412], tree -> 0
Propagating 000000000000003D assertions for BB13, stmt STMT00069, tree [000414], tree -> 0
Propagating 000000000000003D assertions for BB13, stmt STMT00069, tree [000308], tree -> 0
Propagating 000000000000003D assertions for BB13, stmt STMT00069, tree [000410], tree -> 0
Propagating 000000000000003D assertions for BB13, stmt STMT00069, tree [000411], tree -> 0
Propagating 000000000000003D assertions for BB13, stmt STMT00069, tree [000309], tree -> 6
Propagating 000000000000003D assertions for BB13, stmt STMT00069, tree [000109], tree -> 0
Propagating 000000000000003D assertions for BB13, stmt STMT00069, tree [000310], tree -> 0
Propagating 000000000000003D assertions for BB13, stmt STMT00069, tree [000311], tree -> 0
Propagating 000000000000003D assertions for BB14, stmt STMT00028, tree [000116], tree -> 0
Propagating 000000000000003D assertions for BB14, stmt STMT00028, tree [000117], tree -> 0
Propagating 000000000000003D assertions for BB14, stmt STMT00028, tree [000118], tree -> 0
Propagating 000000000000003D assertions for BB14, stmt STMT00028, tree [000119], tree -> 0
Propagating 000000000000003D assertions for BB14, stmt STMT00028, tree [000120], tree -> 0
Propagating 000000000000003D assertions for BB14, stmt STMT00007, tree [000456], tree -> 0
Propagating 000000000000003D assertions for BB14, stmt STMT00007, tree [000023], tree -> 0
Propagating 000000000000003D assertions for BB14, stmt STMT00007, tree [000026], tree -> 0

VN relop, checking BB14 for redundancy
 ... checking dom BB02
 ... checking dom BB01
Failed to find a suitable dominating compare, so we won't optimize
Propagating 000000000000003D assertions for BB14, stmt STMT00007, tree [000027], tree -> 19
Propagating 0000000000000001 assertions for BB15, stmt STMT00038, tree [000416], tree -> 0
Propagating 0000000000000001 assertions for BB15, stmt STMT00038, tree [000415], tree -> 0
Propagating 0000000000000001 assertions for BB15, stmt STMT00038, tree [000180], tree -> 0
Propagating 0000000000000001 assertions for BB15, stmt STMT00038, tree [000182], tree -> 0
Propagating 0000000000000001 assertions for BB15, stmt STMT00038, tree [000181], tree -> 0
Propagating 0000000000000001 assertions for BB15, stmt STMT00040, tree [000420], tree -> 0
Propagating 0000000000000001 assertions for BB15, stmt STMT00040, tree [000419], tree -> 0
Propagating 0000000000000001 assertions for BB15, stmt STMT00040, tree [000421], tree -> 0
Propagating 0000000000000001 assertions for BB15, stmt STMT00040, tree [000417], tree -> 0
Propagating 0000000000000001 assertions for BB15, stmt STMT00040, tree [000418], tree -> 0
Propagating 0000000000000001 assertions for BB15, stmt STMT00040, tree [000186], tree -> 0
Propagating 0000000000000001 assertions for BB15, stmt STMT00040, tree [000184], tree -> 0
Propagating 0000000000000001 assertions for BB15, stmt STMT00040, tree [000185], tree -> 0
Propagating 0000000000000001 assertions for BB15, stmt STMT00041, tree [000190], tree -> 0
Propagating 0000000000000001 assertions for BB15, stmt STMT00041, tree [000191], tree -> 0
Propagating 000000000000001D assertions for BB16, stmt STMT00067, tree [000303], tree -> 0
*************** In fgDebugCheckBBlist

*************** Finishing PHASE Assertion prop

*************** Starting PHASE Optimize index checks
*************** In OptimizeRangeChecks()
Blocks/trees before phase

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB15 ( cond )                     i label target hascall gcsafe idxlen newobj 
BB02 [0001]  2       BB01,BB14             4     0 [01D..02E)-> BB07 ( cond )                     i Loop label target hascall gcsafe idxlen nullcheck bwd bwd-target 
BB03 [0002]  1       BB02                  2     0 [02E..037)-> BB05 ( cond )                     i gcsafe idxlen bwd 
BB04 [0013]  1       BB03                  2     0 [02E..02F)-> BB06 (always)                     i hascall gcsafe bwd 
BB05 [0014]  1       BB03                  2     0 [02E..02F)                                     i label target hascall gcsafe bwd 
BB06 [0015]  2       BB04,BB05             2     0 [???..???)-> BB14 (always)                     internal label target gcsafe bwd 
BB07 [0003]  1       BB02                  2     0 [037..04B)-> BB10 ( cond )                     i label target hascall gcsafe bwd 
BB08 [0004]  1       BB07                  2     0 [000..062)-> BB16 ( cond )                     i hascall gcsafe newobj bwd 
BB09 [0020]  1       BB08                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd 
BB10 [0005]  2       BB07,BB09             2     0 [062..085)-> BB13 ( cond )                     i label target hascall gcsafe bwd 
BB11 [0006]  1       BB10                  2     0 [000..09C)-> BB16 ( cond )                     i hascall gcsafe newobj bwd 
BB12 [0028]  1       BB11                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd 
BB13 [0007]  2       BB10,BB12             2     0 [09C..0A6)                                     i label target hascall gcsafe bwd 
BB14 [0008]  2       BB06,BB13             4     0 [0A6..0B3)-> BB02 ( cond )                     i label target gcsafe idxlen bwd 
BB15 [0010]  2       BB01,BB14             1       [0B3..0C7)        (return)                     i label target hascall gcsafe 
BB16 [0027]  2       BB08,BB11             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..01D) -> BB15 (cond), preds={} succs={BB02,BB15}

***** BB01
STMT00001 (IL   ???...  ???)
N008 ( 21, 31) [000002] --CXG-------              *  CALL      ref    SolutionAnalyzer.Logger.Log $101
N005 (  4, 12) [000317] #---G------- arg1 in rdx  +--*  IND       ref    $1c0
N004 (  2, 10) [000316] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Started enumerating project paths." $180
N006 (  2, 10) [000003] H----------- arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method $181
N007 (  1,  1) [000001] ------------ arg2 in r8   \--*  CNS_INT   int    2 $42

***** BB01
STMT00002 (IL 0x00C...0x013)
N005 ( 16, 16) [000011] -AC-----R---              *  ASG       ref    $1c1
N004 (  1,  1) [000010] D------N----              +--*  LCL_VAR   ref    V07 tmp1         d:2 $1c1
N003 ( 16, 16) [000009] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1c1
N002 (  2, 10) [000008] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $182

***** BB01
STMT00003 (IL   ???...  ???)
N005 ( 16, 10) [000013] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor $VN.Void
N003 (  1,  1) [000012] ------------ this in rcx  +--*  LCL_VAR   ref    V07 tmp1         u:2 $1c1
N004 (  1,  1) [000007] ------------ arg1 in rdx  \--*  CNS_INT   int    100 $43

***** BB01
STMT00004 (IL 0x013...  ???)
N003 (  1,  3) [000016] -A------R---              *  ASG       ref    $1c1
N002 (  1,  1) [000015] D------N----              +--*  LCL_VAR   ref    V01 loc0         d:2 $1c1
N001 (  1,  1) [000014] ------------              \--*  LCL_VAR   ref    V07 tmp1         u:2 (last use) $1c1

***** BB01
STMT00005 (IL 0x014...0x015)
N003 (  1,  3) [000019] -A------R---              *  ASG       ref    $80
N002 (  1,  1) [000018] D------N----              +--*  LCL_VAR   ref    V02 loc1         d:2 $80
N001 (  1,  1) [000017] ------------              \--*  LCL_VAR   ref    V00 arg0         u:1 (last use) $80

***** BB01
STMT00006 (IL 0x016...0x017)
N003 (  1,  3) [000022] -A------R---              *  ASG       int    $40
N002 (  1,  1) [000021] D------N----              +--*  LCL_VAR   int    V03 loc2         d:2 $40
N001 (  1,  1) [000020] ------------              \--*  CNS_INT   int    0 $40

***** BB01
STMT00071 (IL 0x0AA...  ???)
N009 (  8,  8) [000426] -A-X--------              *  JTRUE     void  
N008 (  6,  6) [000422] JA-X---N----              \--*  LE        int    $242
N006 (  4,  4) [000454] -A-X--------                 +--*  COMMA     int    $240
N004 (  3,  3) [000452] -A-X----R---                 |  +--*  ASG       int    $VN.Void
N003 (  1,  1) [000451] D------N----                 |  |  +--*  LCL_VAR   int    V29 cse1         d:1 $240
N002 (  3,  3) [000423] ---X--------                 |  |  \--*  ARR_LENGTH int    $240
N001 (  1,  1) [000424] ------------                 |  |     \--*  LCL_VAR   ref    V02 loc1         u:2 $80
N005 (  1,  1) [000453] ------------                 |  \--*  LCL_VAR   int    V29 cse1         u:1 $240
N007 (  1,  1) [000457] ------------                 \--*  CNS_INT   int    0 $40

------------ BB02 [01D..02E) -> BB07 (cond), preds={BB01,BB14} succs={BB03,BB07}

***** BB02
STMT00072 (IL   ???...  ???)
N005 (  0,  0) [000429] -A------R---              *  ASG       int   
N004 (  0,  0) [000427] D------N----              +--*  LCL_VAR   int    V03 loc2         d:3
N003 (  0,  0) [000428] ------------              \--*  PHI       int   
N001 (  0,  0) [000437] ------------ pred BB14       +--*  PHI_ARG   int    V03 loc2         u:4
N002 (  0,  0) [000436] ------------ pred BB01       \--*  PHI_ARG   int    V03 loc2         u:2 $40

***** BB02
STMT00008 (IL 0x01D...0x020)
N015 ( 12, 16) [000032] -A-XG---R---              *  ASG       ref    <l:$1cc, c:$1cb>
N014 (  1,  1) [000031] D------N----              +--*  LCL_VAR   ref    V04 loc3         d:2 <l:$1ca, c:$2c1>
N013 ( 12, 16) [000334] ---XG-------              \--*  COMMA     ref    <l:$1cc, c:$1cb>
N003 (  6,  9) [000327] ---X--------                 +--*  ARR_BOUNDS_CHECK_Rng void   $1c7
N001 (  1,  1) [000029] ------------                 |  +--*  LCL_VAR   int    V03 loc2         u:3 $280
N002 (  1,  1) [000455] ------------                 |  \--*  LCL_VAR   int    V29 cse1         u:1 $200
N012 (  6,  7) [000030] a---G-------                 \--*  IND       ref    <l:$1ca, c:$2c1>
N011 (  5,  6) [000333] -------N----                    \--*  ADD       byref  $3c0
N004 (  1,  1) [000324] ------------                       +--*  LCL_VAR   ref    V02 loc1         u:2 $80
N010 (  4,  5) [000332] -------N----                       \--*  ADD       long   $302
N008 (  3,  4) [000330] -------N----                          +--*  LSH       long   $301
N006 (  2,  3) [000328] ------------                          |  +--*  CAST      long <- int $300
N005 (  1,  1) [000325] i-----------                          |  |  \--*  LCL_VAR   int    V03 loc2         u:3 $280
N007 (  1,  1) [000329] -------N----                          |  \--*  CNS_INT   long   3 $340
N009 (  1,  1) [000331] ------------                          \--*  CNS_INT   long   16 Fseq[#FirstElem] $342

***** BB02
STMT00042 (IL 0x021...  ???)
N002 (  2,  2) [000197] ---X--------              *  NULLCHECK byte   <l:$1d0, c:$1cf>
N001 (  1,  1) [000196] ------------              \--*  LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>

***** BB02
STMT00010 (IL   ???...  ???)
N011 ( 24, 27) [000039] --CXG-------              *  JTRUE     void  
N010 ( 22, 25) [000038] J-CXG--N----              \--*  EQ        int    $244
N008 ( 20, 23) [000195] --CXG-------                 +--*  CALL      int    System.String.EndsWith $401
N005 (  4, 12) [000336] #---G------- arg1 in rdx     |  +--*  IND       ref    $1d1
N004 (  2, 10) [000335] H-----------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E ".csproj" $184
N006 (  1,  1) [000033] ------------ this in rcx     |  +--*  LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
N007 (  1,  1) [000194] ------------ arg2 in r8      |  \--*  CNS_INT   int    0 $40
N009 (  1,  1) [000037] ------------                 \--*  CNS_INT   int    0 $40

------------ BB03 [02E..037) -> BB05 (cond), preds={BB02} succs={BB04,BB05}

***** BB03
STMT00043 (IL 0x02E...  ???)
N011 ( 11, 11) [000204] -A--GO--R---              *  ASG       int    $VN.Void
N010 (  4,  4) [000203] n---GO-N----              +--*  IND       int    $25a
N009 (  2,  2) [000341] -------N----              |  \--*  ADD       byref  $386
N007 (  1,  1) [000177] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N008 (  1,  1) [000340] ------------              |     \--*  CNS_INT   long   20 field offset Fseq[_version] $348
N006 (  6,  6) [000202] ----GO------              \--*  ADD       int    <l:$25c, c:$25b>
N004 (  4,  4) [000200] n---GO------                 +--*  IND       int    <l:$258, c:$257>
N003 (  2,  2) [000343] -------N----                 |  \--*  ADD       byref  $386
N001 (  1,  1) [000199] ------------                 |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N002 (  1,  1) [000342] ------------                 |     \--*  CNS_INT   long   20 field offset Fseq[_version] $348
N005 (  1,  1) [000201] ------------                 \--*  CNS_INT   int    1 $46

***** BB03
STMT00044 (IL 0x02E...  ???)
N006 (  4,  4) [000208] -A--GO--R---              *  ASG       ref    <l:$1f0, c:$1ef>
N005 (  1,  1) [000207] D------N----              +--*  LCL_VAR   ref    V18 tmp12        d:2 <l:$1ee, c:$2fc>
N004 (  4,  4) [000206] n---GO------              \--*  IND       ref    <l:$1f0, c:$1ef>
N003 (  2,  2) [000345] -------N----                 \--*  ADD       byref  $387
N001 (  1,  1) [000205] ------------                    +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N002 (  1,  1) [000344] ------------                    \--*  CNS_INT   long   8 field offset Fseq[_items] $343

***** BB03
STMT00045 (IL 0x02E...  ???)
N006 (  4,  4) [000212] -A--GO--R---              *  ASG       int    <l:$260, c:$25f>
N005 (  1,  1) [000211] D------N----              +--*  LCL_VAR   int    V19 tmp13        d:2 <l:$25e, c:$411>
N004 (  4,  4) [000210] n---GO------              \--*  IND       int    <l:$260, c:$25f>
N003 (  2,  2) [000347] -------N----                 \--*  ADD       byref  $383
N001 (  1,  1) [000209] ------------                    +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N002 (  1,  1) [000346] ------------                    \--*  CNS_INT   long   16 field offset Fseq[_size] $342

***** BB03
STMT00046 (IL 0x02E...  ???)
N005 (  7,  7) [000217] ---X--------              *  JTRUE     void  
N004 (  5,  5) [000216] N--X---N-U--              \--*  LE        int    <l:$266, c:$265>
N002 (  3,  3) [000215] ---X--------                 +--*  ARR_LENGTH int    <l:$262, c:$261>
N001 (  1,  1) [000214] ------------                 |  \--*  LCL_VAR   ref    V18 tmp12        u:2 <l:$1ee, c:$2fc>
N003 (  1,  1) [000213] ------------                 \--*  LCL_VAR   int    V19 tmp13        u:2 <l:$25e, c:$411>

------------ BB04 [02E..02F) -> BB06 (always), preds={BB03} succs={BB06}

***** BB04
STMT00048 (IL 0x02E...  ???)
N008 (  8,  8) [000225] -A--GO--R---              *  ASG       int    $VN.Void
N007 (  4,  4) [000224] n---GO-N----              +--*  IND       int    $268
N006 (  2,  2) [000349] -------N----              |  \--*  ADD       byref  $383
N004 (  1,  1) [000220] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N005 (  1,  1) [000348] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size] $342
N003 (  3,  3) [000223] ------------              \--*  ADD       int    <l:$268, c:$267>
N001 (  1,  1) [000221] ------------                 +--*  LCL_VAR   int    V19 tmp13        u:2 <l:$25e, c:$411>
N002 (  1,  1) [000222] ------------                 \--*  CNS_INT   int    1 $46

***** BB04
STMT00049 (IL 0x02E...  ???)
N007 ( 17, 11) [000229] --CXG-------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST $1db
N004 (  1,  1) [000226] ------------ arg0 in rcx  +--*  LCL_VAR   ref    V18 tmp12        u:2 (last use) <l:$1ee, c:$2fc>
N005 (  1,  1) [000227] ------------ arg1 in rdx  +--*  LCL_VAR   int    V19 tmp13        u:2 (last use) <l:$25e, c:$411>
N006 (  1,  1) [000228] ------------ arg2 in r8   \--*  LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>

------------ BB05 [02E..02F), preds={BB03} succs={BB06}

***** BB05
STMT00047 (IL 0x02E...  ???)
N005 ( 16, 10) [000219] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize $VN.Void
N003 (  1,  1) [000218] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N004 (  1,  1) [000178] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>

------------ BB06 [???..???) -> BB14 (always), preds={BB04,BB05} succs={BB14}

------------ BB07 [037..04B) -> BB10 (cond), preds={BB02} succs={BB08,BB10}

***** BB07
STMT00053 (IL 0x037...  ???)
N005 ( 15,  7) [000247] -ACXG---R---              *  ASG       ref    $2c6
N004 (  1,  1) [000246] D------N----              +--*  LCL_VAR   ref    V20 tmp14        d:2 $2c6
N003 ( 15,  7) [000236] --CXG-------              \--*  CALL      ref    System.IO.EnumerationOptions.FromSearchOption $2c6
N002 (  1,  1) [000235] ------------ arg0 in rcx     \--*  CNS_INT   int    1 $46

***** BB07
STMT00013 (IL   ???...  ???)
N012 ( 21, 24) [000054] -ACXG---R---              *  ASG       ref    $2cc
N011 (  1,  1) [000053] D------N----              +--*  LCL_VAR   ref    V09 tmp3         d:2 $2cc
N010 ( 21, 24) [000245] --CXG-------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths $2cc
N006 (  4, 12) [000357] #---G------- arg1 in rdx     +--*  IND       ref    $1d2
N005 (  2, 10) [000356] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*" $185
N007 (  1,  1) [000040] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
N008 (  1,  1) [000244] ------------ arg3 in r9      +--*  LCL_VAR   ref    V20 tmp14        u:2 (last use) $2c6
N009 (  1,  1) [000243] ------------ arg2 in r8      \--*  CNS_INT   int    2 $42

***** BB07
STMT00012 (IL   ???...  ???)
N014 ( 22, 31) [000052] -ACXG---R---              *  ASG       ref    <l:$1d5, c:$1d4>
N013 (  1,  1) [000051] D------N----              +--*  LCL_VAR   ref    V08 tmp2         d:2 <l:$4c0, c:$2cf>
N012 ( 22, 31) [000050] -ACXG-------              \--*  COMMA     ref    <l:$1d5, c:$1d4>
N009 ( 18, 19) [000445] -ACXG-------                 +--*  COMMA     long   $305
N007 ( 17, 18) [000443] -ACXG---R---                 |  +--*  ASG       long   $VN.Void
N006 (  1,  1) [000442] D------N----                 |  |  +--*  LCL_VAR   long   V28 cse0         d:1 $305
N005 ( 17, 18) [000049] H-CXG-------                 |  |  \--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
N003 (  2, 10) [000047] ------------ arg0 in rcx     |  |     +--*  CNS_INT   long   0x7ffc7e4c17e0 $345
N004 (  1,  1) [000048] ------------ arg1 in rdx     |  |     \--*  CNS_INT   int    35 $47
N008 (  1,  1) [000444] ------------                 |  \--*  LCL_VAR   long   V28 cse0         u:1 $305
N011 (  4, 12) [000045] n---G-------                 \--*  IND       ref    <l:$4c0, c:$2cf>
N010 (  2, 10) [000364] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] $186

***** BB07
STMT00015 (IL   ???...0x049)
N003 (  1,  3) [000062] -A------R---              *  ASG       ref    $2cc
N002 (  1,  1) [000061] D------N----              +--*  LCL_VAR   ref    V10 tmp4         d:2 $2cc
N001 (  1,  1) [000055] ------------              \--*  LCL_VAR   ref    V09 tmp3         u:2 (last use) $2cc

***** BB07
STMT00016 (IL   ???...  ???)
N003 (  1,  3) [000065] -A------R---              *  ASG       ref    <l:$4c0, c:$2cf>
N002 (  1,  1) [000064] D------N----              +--*  LCL_VAR   ref    V11 tmp5         d:2 <l:$4c0, c:$2cf>
N001 (  1,  1) [000056] ------------              \--*  LCL_VAR   ref    V08 tmp2         u:2 <l:$4c0, c:$2cf>

***** BB07
STMT00014 (IL   ???...  ???)
N004 (  5,  5) [000060] ------------              *  JTRUE     void  
N003 (  3,  3) [000059] J------N----              \--*  NE        int    <l:$246, c:$245>
N001 (  1,  1) [000057] ------------                 +--*  LCL_VAR   ref    V11 tmp5         u:2 (last use) <l:$4c0, c:$2cf>
N002 (  1,  1) [000058] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB08 [000..062) -> BB16 (cond), preds={BB07} succs={BB09,BB16}

***** BB08
STMT00033 (IL   ???...0x05D)
N005 ( 16, 16) [000160] -AC-----R---              *  ASG       ref    $1d6
N004 (  1,  1) [000159] D------N----              +--*  LCL_VAR   ref    V17 tmp11        d:2 $1d6
N003 ( 16, 16) [000158] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1d6
N002 (  2, 10) [000157] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $187

***** BB08
STMT00058 (IL   ???...  ???)
N006 (  5, 13) [000262] -A--G---R---              *  ASG       ref    <l:$1d8, c:$1d7>
N005 (  1,  1) [000261] D------N----              +--*  LCL_VAR   ref    V21 tmp15        d:2 <l:$4c1, c:$2d5>
N004 (  5, 13) [000155] ----G-------              \--*  COMMA     ref    <l:$1d8, c:$1d7>
N001 (  1,  1) [000446] ------------                 +--*  LCL_VAR   long   V28 cse0         u:1 $304
N003 (  4, 12) [000150] n---G-------                 \--*  IND       ref    <l:$4c1, c:$2d5>
N002 (  2, 10) [000368] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] $188

***** BB08
STMT00054 (IL   ???...  ???)
N004 (  5,  5) [000252] ------------              *  JTRUE     void  
N003 (  3,  3) [000251] J------N----              \--*  EQ        int    <l:$248, c:$247>
N001 (  1,  1) [000249] ------------                 +--*  LCL_VAR   ref    V21 tmp15        u:2 <l:$4c1, c:$2d5>
N002 (  1,  1) [000250] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB09 [000..000), preds={BB08} succs={BB10}

***** BB09
STMT00055 (IL   ???...  ???)
N006 (  6,  6) [000255] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000254] n---GO-N----              +--*  IND       ref    $4c1
N003 (  2,  2) [000370] -------N----              |  \--*  ADD       byref  $381
N001 (  1,  1) [000161] ------------              |     +--*  LCL_VAR   ref    V17 tmp11        u:2 $1d6
N002 (  1,  1) [000369] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $343
N005 (  1,  1) [000253] ------------              \--*  LCL_VAR   ref    V21 tmp15        u:2 (last use) <l:$4c1, c:$2d5>

***** BB09
STMT00056 (IL   ???...  ???)
N006 (  7, 15) [000259] -A--GO------              *  ASG       long   $VN.Void
N004 (  4,  4) [000258] n---GO-N----              +--*  IND       long   $18a
N003 (  2,  2) [000372] -------N----              |  \--*  ADD       byref  $382
N001 (  1,  1) [000256] ------------              |     +--*  LCL_VAR   ref    V17 tmp11        u:2 $1d6
N002 (  1,  1) [000371] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $346
N005 (  2, 10) [000156] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $18a

***** BB09
STMT00035 (IL 0x05C...  ???)
N006 (  7, 15) [000171] -A--G-------              *  COMMA     void   $1db
N001 (  1,  1) [000447] ------------              +--*  LCL_VAR   long   V28 cse0         u:1 $304
N005 (  6, 14) [000166] -A--G-------              \--*  ASG       ref    $VN.Void
N003 (  4, 12) [000165] n---G--N----                 +--*  IND       ref    $1d6
N002 (  2, 10) [000375] I-----------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] $186
N004 (  1,  1) [000164] ------------                 \--*  LCL_VAR   ref    V17 tmp11        u:2 $1d6

***** BB09
STMT00036 (IL   ???...0x05D)
N003 (  1,  3) [000175] -A------R---              *  ASG       ref    $1d6
N002 (  1,  1) [000174] D------N----              +--*  LCL_VAR   ref    V11 tmp5         d:4 $1d6
N001 (  1,  1) [000163] ------------              \--*  LCL_VAR   ref    V17 tmp11        u:2 (last use) $1d6

------------ BB10 [062..085) -> BB13 (cond), preds={BB07,BB09} succs={BB11,BB13}

***** BB10
STMT00074 (IL   ???...  ???)
N005 (  0,  0) [000435] -A------R---              *  ASG       ref   
N004 (  0,  0) [000433] D------N----              +--*  LCL_VAR   ref    V11 tmp5         d:3
N003 (  0,  0) [000434] ------------              \--*  PHI       ref   
N001 (  0,  0) [000441] ------------ pred BB09       +--*  PHI_ARG   ref    V11 tmp5         u:4 $1d6
N002 (  0,  0) [000438] ------------ pred BB07       \--*  PHI_ARG   ref    V11 tmp5         u:2 <l:$4c0, c:$2cf>

***** BB10
STMT00018 (IL   ???...  ???)
N009 ( 18, 20) [000075] -ACXG---R---              *  ASG       ref    $2db
N008 (  1,  1) [000074] D------N----              +--*  LCL_VAR   ref    V05 loc4         d:2 $2db
N007 ( 18, 20) [000071] --CXG-------              \--*  CALL      ref    System.Linq.Enumerable.Where $2db
N004 (  1,  1) [000070] ------------ arg2 in r8      +--*  LCL_VAR   ref    V11 tmp5         u:3 (last use) $4c4
N005 (  1,  1) [000069] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V10 tmp4         u:2 (last use) $2cc
N006 (  2, 10) [000072] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $18d

***** BB10
STMT00061 (IL 0x069...  ???)
N010 ( 21, 30) [000283] -ACXG---R---              *  ASG       ref    <l:$1df, c:$1de>
N009 (  1,  1) [000282] D------N----              +--*  LCL_VAR   ref    V23 tmp17        d:2 <l:$4c5, c:$2de>
N008 ( 21, 30) [000276] --CXG-------              \--*  COMMA     ref    <l:$1df, c:$1de>
N005 ( 17, 18) [000275] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $309
N003 (  2, 10) [000273] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e783cd8 $347
N004 (  1,  1) [000274] ------------ arg1 in rdx     |  \--*  CNS_INT   int    40 $4a
N007 (  4, 12) [000271] n---G-------                 \--*  IND       ref    <l:$4c5, c:$2de>
N006 (  2, 10) [000381] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<Compatible>k__BackingField] $18e

***** BB10
STMT00063 (IL   ???...  ???)
N012 ( 21, 24) [000290] -ACXG---R---              *  ASG       ref    $2e3
N011 (  1,  1) [000289] D------N----              +--*  LCL_VAR   ref    V24 tmp18        d:2 $2e3
N010 ( 21, 24) [000281] --CXG-------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths $2e3
N006 (  4, 12) [000383] #---G------- arg1 in rdx     +--*  IND       ref    $1e0
N005 (  2, 10) [000382] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*.csproj" $18f
N007 (  1,  1) [000077] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>
N008 (  1,  1) [000280] ------------ arg3 in r9      +--*  LCL_VAR   ref    V23 tmp17        u:2 (last use) <l:$4c5, c:$2de>
N009 (  1,  1) [000279] ------------ arg2 in r8      \--*  CNS_INT   int    1 $46

***** BB10
STMT00062 (IL   ???...  ???)
N010 ( 20, 15) [000288] --CXGO------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange $VN.Void
N007 (  4,  4) [000286] n---GO------ arg1 in rdx  +--*  IND       int    <l:$24c, c:$24b>
N006 (  2,  2) [000389] -------N----              |  \--*  ADD       byref  $383
N004 (  1,  1) [000285] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N005 (  1,  1) [000388] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size] $342
N008 (  1,  1) [000076] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N009 (  1,  1) [000287] ------------ arg2 in r8   \--*  LCL_VAR   ref    V24 tmp18        u:2 (last use) $2e3

***** BB10
STMT00021 (IL 0x07A...  ???)
N006 (  5, 13) [000091] -A--G---R---              *  ASG       ref    <l:$1e3, c:$1e2>
N005 (  1,  1) [000090] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:2 <l:$4c6, c:$2e9>
N004 (  5, 13) [000089] ----G-------              \--*  COMMA     ref    <l:$1e3, c:$1e2>
N001 (  1,  1) [000448] ------------                 +--*  LCL_VAR   long   V28 cse0         u:1 $304
N003 (  4, 12) [000084] n---G-------                 \--*  IND       ref    <l:$4c6, c:$2e9>
N002 (  2, 10) [000395] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] $191

***** BB10
STMT00023 (IL   ???...0x083)
N003 (  1,  3) [000098] -A------R---              *  ASG       ref    $1c1
N002 (  1,  1) [000097] D------N----              +--*  LCL_VAR   ref    V13 tmp7         d:2 $1c1
N001 (  1,  1) [000082] ------------              \--*  LCL_VAR   ref    V01 loc0         u:2 $1c1

***** BB10
STMT00024 (IL   ???...  ???)
N003 (  1,  3) [000101] -A------R---              *  ASG       ref    $2db
N002 (  1,  1) [000100] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:2 $2db
N001 (  1,  1) [000083] ------------              \--*  LCL_VAR   ref    V05 loc4         u:2 (last use) $2db

***** BB10
STMT00025 (IL   ???...  ???)
N003 (  1,  3) [000104] -A------R---              *  ASG       ref    <l:$4c6, c:$2e9>
N002 (  1,  1) [000103] D------N----              +--*  LCL_VAR   ref    V15 tmp9         d:2 <l:$4c6, c:$2e9>
N001 (  1,  1) [000092] ------------              \--*  LCL_VAR   ref    V12 tmp6         u:2 <l:$4c6, c:$2e9>

***** BB10
STMT00022 (IL   ???...  ???)
N004 (  5,  5) [000096] ------------              *  JTRUE     void  
N003 (  3,  3) [000095] J------N----              \--*  NE        int    <l:$24e, c:$24d>
N001 (  1,  1) [000093] ------------                 +--*  LCL_VAR   ref    V15 tmp9         u:2 (last use) <l:$4c6, c:$2e9>
N002 (  1,  1) [000094] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB11 [000..09C) -> BB16 (cond), preds={BB10} succs={BB12,BB16}

***** BB11
STMT00029 (IL   ???...0x097)
N005 ( 16, 16) [000131] -AC-----R---              *  ASG       ref    $1e4
N004 (  1,  1) [000130] D------N----              +--*  LCL_VAR   ref    V16 tmp10        d:2 $1e4
N003 ( 16, 16) [000129] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1e4
N002 (  2, 10) [000128] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $192

***** BB11
STMT00068 (IL   ???...  ???)
N006 (  5, 13) [000305] -A--G---R---              *  ASG       ref    <l:$1e6, c:$1e5>
N005 (  1,  1) [000304] D------N----              +--*  LCL_VAR   ref    V25 tmp19        d:2 <l:$4c7, c:$2f0>
N004 (  5, 13) [000126] ----G-------              \--*  COMMA     ref    <l:$1e6, c:$1e5>
N001 (  1,  1) [000449] ------------                 +--*  LCL_VAR   long   V28 cse0         u:1 $304
N003 (  4, 12) [000121] n---G-------                 \--*  IND       ref    <l:$4c7, c:$2f0>
N002 (  2, 10) [000399] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] $188

***** BB11
STMT00064 (IL   ???...  ???)
N004 (  5,  5) [000295] ------------              *  JTRUE     void  
N003 (  3,  3) [000294] J------N----              \--*  EQ        int    <l:$250, c:$24f>
N001 (  1,  1) [000292] ------------                 +--*  LCL_VAR   ref    V25 tmp19        u:2 <l:$4c7, c:$2f0>
N002 (  1,  1) [000293] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB12 [000..000), preds={BB11} succs={BB13}

***** BB12
STMT00065 (IL   ???...  ???)
N006 (  6,  6) [000298] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000297] n---GO-N----              +--*  IND       ref    $4c7
N003 (  2,  2) [000401] -------N----              |  \--*  ADD       byref  $384
N001 (  1,  1) [000132] ------------              |     +--*  LCL_VAR   ref    V16 tmp10        u:2 $1e4
N002 (  1,  1) [000400] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $343
N005 (  1,  1) [000296] ------------              \--*  LCL_VAR   ref    V25 tmp19        u:2 (last use) <l:$4c7, c:$2f0>

***** BB12
STMT00066 (IL   ???...  ???)
N006 (  7, 15) [000302] -A--GO------              *  ASG       long   $VN.Void
N004 (  4,  4) [000301] n---GO-N----              +--*  IND       long   $194
N003 (  2,  2) [000403] -------N----              |  \--*  ADD       byref  $385
N001 (  1,  1) [000299] ------------              |     +--*  LCL_VAR   ref    V16 tmp10        u:2 $1e4
N002 (  1,  1) [000402] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $346
N005 (  2, 10) [000127] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $194

***** BB12
STMT00031 (IL 0x096...  ???)
N006 (  7, 15) [000142] -A--G-------              *  COMMA     void   $1db
N001 (  1,  1) [000450] ------------              +--*  LCL_VAR   long   V28 cse0         u:1 $304
N005 (  6, 14) [000137] -A--G-------              \--*  ASG       ref    $VN.Void
N003 (  4, 12) [000136] n---G--N----                 +--*  IND       ref    $1e4
N002 (  2, 10) [000406] I-----------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] $191
N004 (  1,  1) [000135] ------------                 \--*  LCL_VAR   ref    V16 tmp10        u:2 $1e4

***** BB12
STMT00032 (IL   ???...0x097)
N003 (  1,  3) [000148] -A------R---              *  ASG       ref    $1e4
N002 (  1,  1) [000147] D------N----              +--*  LCL_VAR   ref    V15 tmp9         d:4 $1e4
N001 (  1,  1) [000134] ------------              \--*  LCL_VAR   ref    V16 tmp10        u:2 (last use) $1e4

------------ BB13 [09C..0A6), preds={BB10,BB12} succs={BB14}

***** BB13
STMT00073 (IL   ???...  ???)
N005 (  0,  0) [000432] -A------R---              *  ASG       ref   
N004 (  0,  0) [000430] D------N----              +--*  LCL_VAR   ref    V15 tmp9         d:3
N003 (  0,  0) [000431] ------------              \--*  PHI       ref   
N001 (  0,  0) [000440] ------------ pred BB12       +--*  PHI_ARG   ref    V15 tmp9         u:4 $1e4
N002 (  0,  0) [000439] ------------ pred BB10       \--*  PHI_ARG   ref    V15 tmp9         u:2 <l:$4c6, c:$2e9>

***** BB13
STMT00070 (IL   ???...  ???)
N009 ( 18, 20) [000313] -ACXG---R---              *  ASG       ref    $2f6
N008 (  1,  1) [000312] D------N----              +--*  LCL_VAR   ref    V27 tmp21        d:2 $2f6
N007 ( 18, 20) [000112] --CXG-------              \--*  CALL      ref    System.Linq.Enumerable.SelectMany $2f6
N004 (  1,  1) [000111] ------------ arg2 in r8      +--*  LCL_VAR   ref    V15 tmp9         u:3 (last use) $4ca
N005 (  1,  1) [000110] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V14 tmp8         u:2 (last use) $2db
N006 (  2, 10) [000113] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $196

***** BB13
STMT00069 (IL   ???...  ???)
N010 ( 20, 15) [000311] --CXGO------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange $VN.Void
N007 (  4,  4) [000309] n---GO------ arg1 in rdx  +--*  IND       int    <l:$254, c:$253>
N006 (  2,  2) [000411] -------N----              |  \--*  ADD       byref  $383
N004 (  1,  1) [000308] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N005 (  1,  1) [000410] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size] $342
N008 (  1,  1) [000109] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         u:2 (last use) $1c1
N009 (  1,  1) [000310] ------------ arg2 in r8   \--*  LCL_VAR   ref    V27 tmp21        u:2 (last use) $2f6

------------ BB14 [0A6..0B3) -> BB02 (cond), preds={BB06,BB13} succs={BB15,BB02}

***** BB14
STMT00028 (IL 0x0A6...0x0A9)
N005 (  3,  3) [000120] -A------R---              *  ASG       int    $269
N004 (  1,  1) [000119] D------N----              +--*  LCL_VAR   int    V03 loc2         d:4 $269
N003 (  3,  3) [000118] ------------              \--*  ADD       int    $269
N001 (  1,  1) [000116] ------------                 +--*  LCL_VAR   int    V03 loc2         u:3 (last use) $280
N002 (  1,  1) [000117] ------------                 \--*  CNS_INT   int    1 $46

***** BB14
STMT00007 (IL 0x0AA...0x0AE)
N004 (  5,  5) [000027] ------------              *  JTRUE     void  
N003 (  3,  3) [000026] J------N----              \--*  GT        int    $26b
N001 (  1,  1) [000456] ------------                 +--*  LCL_VAR   int    V29 cse1         u:1 $200
N002 (  1,  1) [000023] ------------                 \--*  LCL_VAR   int    V03 loc2         u:4 $269

------------ BB15 [0B3..0C7) (return), preds={BB01,BB14} succs={}

***** BB15
STMT00038 (IL 0x0B3...0x0C4)
N005 ( 17, 18) [000181] --CXG-------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle $VN.Void
N003 (  1,  1) [000180] ------------ arg1 in rdx  +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N004 (  2, 10) [000182] H----------- arg0 in rcx  \--*  CNS_INT(h) long   0xd1ffab1e method $19c

***** BB15
STMT00040 (IL   ???...  ???)
N008 ( 21, 31) [000185] --CXG-------              *  CALL      ref    SolutionAnalyzer.Logger.Log $10d
N005 (  4, 12) [000418] #---G------- arg1 in rdx  +--*  IND       ref    $1f9
N004 (  2, 10) [000417] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Enumerated and shuffled the project paths." $19d
N006 (  2, 10) [000186] H----------- arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method $181
N007 (  1,  1) [000184] ------------ arg2 in r8   \--*  CNS_INT   int    2 $42

***** BB15
STMT00041 (IL 0x0C5...0x0C6)
N002 (  2,  2) [000191] ------------              *  RETURN    ref    $10f
N001 (  1,  1) [000190] ------------              \--*  LCL_VAR   ref    V01 loc0         u:2 (last use) $1c1

------------ BB16 [000..000) (throw), preds={BB08,BB11} succs={}

***** BB16
STMT00067 (IL   ???...  ???)
N001 ( 14,  5) [000303] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance $VN.Void

-------------------------------------------------------------------------------------------------------------------
Looking for array size assertions for: $200
Constant Assertion: (577, 64) ($241,$40) Loop_Bnd { {IntCns 0} GE  {ARR_LENGTH($80)}} is  {IntCns 0} index=#03, mask=0000000000000004
The range after edge merging:<1, Dependent>
ArrSize for lengthVN:200 = 1
[RangeCheck::GetRange] BB02N001 (  1,  1) [000029] ------------              *  LCL_VAR   int    V03 loc2         u:3 $280
{
----------------------------------------------------
N005 (  0,  0) [000429] -A------R---              *  ASG       int   
N004 (  0,  0) [000427] D------N----              +--*  LCL_VAR   int    V03 loc2         d:3
N003 (  0,  0) [000428] ------------              \--*  PHI       int   
N001 (  0,  0) [000437] ------------ pred BB14       +--*  PHI_ARG   int    V03 loc2         u:4
N002 (  0,  0) [000436] ------------ pred BB01       \--*  PHI_ARG   int    V03 loc2         u:2 $40
----------------------------------------------------
   [RangeCheck::GetRange] BB02N003 (  0,  0) [000428] ------------              *  PHI       int   
N001 (  0,  0) [000437] ------------ pred BB14    +--*  PHI_ARG   int    V03 loc2         u:4
N002 (  0,  0) [000436] ------------ pred BB01    \--*  PHI_ARG   int    V03 loc2         u:2 $40
   {
      [RangeCheck::GetRange] BB02N001 (  0,  0) [000437] ------------              *  PHI_ARG   int    V03 loc2         u:4
      {
----------------------------------------------------
N005 (  3,  3) [000120] -A------R---              *  ASG       int    $269
N004 (  1,  1) [000119] D------N----              +--*  LCL_VAR   int    V03 loc2         d:4 $269
N003 (  3,  3) [000118] ------------              \--*  ADD       int    $269
N001 (  1,  1) [000116] ------------                 +--*  LCL_VAR   int    V03 loc2         u:3 (last use) $280
N002 (  1,  1) [000117] ------------                 \--*  CNS_INT   int    1 $46
----------------------------------------------------
         [RangeCheck::GetRange] BB14N003 (  3,  3) [000118] ------------              *  ADD       int    $269
N001 (  1,  1) [000116] ------------              +--*  LCL_VAR   int    V03 loc2         u:3 (last use) $280
N002 (  1,  1) [000117] ------------              \--*  CNS_INT   int    1 $46
         {
            [RangeCheck::GetRange] BB14N001 (  1,  1) [000116] ------------              *  LCL_VAR   int    V03 loc2         u:3 (last use) $280
            {
----------------------------------------------------
N005 (  0,  0) [000429] -A------R---              *  ASG       int   
N004 (  0,  0) [000427] D------N----              +--*  LCL_VAR   int    V03 loc2         d:3
N003 (  0,  0) [000428] ------------              \--*  PHI       int   
N001 (  0,  0) [000437] ------------ pred BB14       +--*  PHI_ARG   int    V03 loc2         u:4
N002 (  0,  0) [000436] ------------ pred BB01       \--*  PHI_ARG   int    V03 loc2         u:2 $40
----------------------------------------------------
               [RangeCheck::GetRange] BB02N003 (  0,  0) [000428] ------------              *  PHI       int   
N001 (  0,  0) [000437] ------------ pred BB14    +--*  PHI_ARG   int    V03 loc2         u:4
N002 (  0,  0) [000436] ------------ pred BB01    \--*  PHI_ARG   int    V03 loc2         u:2 $40
               {
PhiArg [000437] is already being computed
Merging assertions from pred edges of BB02 for op [000437] $ffffffff
Merge assertions from pred BB14 JTrue edge: 000000000004003D
Constant Assertion: (618, 64) ($26a,$40) Loop_Bnd { {ADD($46, $280)} LT  {ARR_LENGTH($80)}} is not  {IntCns 0} index=#19, mask=0000000000040000
The range after edge merging:<Dependent, $200 + -1>
Merging ranges <Undef, Undef> <Dependent, $200 + -1>:<Dependent, $200 + -1>
                  [RangeCheck::GetRange] BB02N002 (  0,  0) [000436] ------------              *  PHI_ARG   int    V03 loc2         u:2 $40
                  {
                     Computed Range [000436] => <0, 0>
                  }
Merging assertions from pred edges of BB02 for op [000436] $40
Merge assertions from pred BB01 edge: 0000000000000005
Constant Assertion: (577, 64) ($241,$40) Loop_Bnd { {IntCns 0} GE  {ARR_LENGTH($80)}} is  {IntCns 0} index=#03, mask=0000000000000004
The range after edge merging:<0, $200 + -1>
Merging ranges <Dependent, $200 + -1> <0, $200 + -1>:<Dependent, $200 + -1>
                  Computed Range [000428] => <Dependent, $200 + -1>
               }
Merge assertions from BB14:000000000000003D for assignment about [000427]
done merging
Merging assertions from pred edges of BB14 for op [000116] $280
               Computed Range [000116] => <Dependent, $200 + -1>
            }
Merging assertions from pred edges of BB14 for op [000116] $280
            [RangeCheck::GetRange] BB14N002 (  1,  1) [000117] ------------              *  CNS_INT   int    1 $46
            {
               Computed Range [000117] => <1, 1>
            }
Merging assertions from pred edges of BB14 for op [000117] $46
BinOp add ranges <Dependent, $200 + -1> <1, 1> = <Dependent, $200 + 0>
            Computed Range [000118] => <Dependent, $200 + 0>
         }
Merge assertions from BB02:0000000000000005 for assignment about [000119]
done merging
Merging assertions from pred edges of BB02 for op [000437] $ffffffff
Merge assertions from pred BB14 JTrue edge: 000000000004003D
Constant Assertion: (618, 64) ($26a,$40) Loop_Bnd { {ADD($46, $280)} LT  {ARR_LENGTH($80)}} is not  {IntCns 0} index=#19, mask=0000000000040000
The range after edge merging:<Dependent, $200 + -1>
         Computed Range [000437] => <Dependent, $200 + -1>
      }
Merging assertions from pred edges of BB02 for op [000437] $ffffffff
Merge assertions from pred BB14 JTrue edge: 000000000004003D
Constant Assertion: (618, 64) ($26a,$40) Loop_Bnd { {ADD($46, $280)} LT  {ARR_LENGTH($80)}} is not  {IntCns 0} index=#19, mask=0000000000040000
Bound limit -1 doesn't tighten current bound -1
Merging ranges <Undef, Undef> <Dependent, $200 + -1>:<Dependent, $200 + -1>
      [RangeCheck::GetRange] BB02N002 (  0,  0) [000436] ------------              *  PHI_ARG   int    V03 loc2         u:2 $40
      {
         Cached Range [000436] => <0, 0>
      }
Merging assertions from pred edges of BB02 for op [000436] $40
Merge assertions from pred BB01 edge: 0000000000000005
Constant Assertion: (577, 64) ($241,$40) Loop_Bnd { {IntCns 0} GE  {ARR_LENGTH($80)}} is  {IntCns 0} index=#03, mask=0000000000000004
The range after edge merging:<0, $200 + -1>
Merging ranges <Dependent, $200 + -1> <0, $200 + -1>:<Dependent, $200 + -1>
      Computed Range [000428] => <Dependent, $200 + -1>
   }
Merge assertions from BB02:0000000000000005 for assignment about [000427]
done merging
Merging assertions from pred edges of BB02 for op [000029] $280
   Computed Range [000029] => <Dependent, $200 + -1>
}
Does overflow [000029]?
Does overflow [000428]?
Does overflow [000437]?
Does overflow [000118]?
Does overflow [000116]?
Does overflow [000428]?
Does overflow [000436]?
[000436] does not overflow
[000428] does not overflow
[000116] does not overflow
Does overflow [000117]?
[000117] does not overflow
Checking bin op overflow <Dependent, $200 + -1> <1, 1>
[000118] does not overflow
[000437] does not overflow
[000428] does not overflow
[000029] does not overflow
Range value <Dependent, $200 + -1>
[RangeCheck::Widen] BB02, 
[000029]
[RangeCheck::IsMonotonicallyIncreasing] [000029]
[RangeCheck::IsMonotonicallyIncreasing] [000428]
[RangeCheck::IsMonotonicallyIncreasing] [000437]
[RangeCheck::IsMonotonicallyIncreasing] [000118]
[RangeCheck::IsBinOpMonotonicallyIncreasing] [000116], [000117]
[RangeCheck::IsMonotonicallyIncreasing] [000116]
[RangeCheck::IsMonotonicallyIncreasing] [000428]
[RangeCheck::IsMonotonicallyIncreasing] [000436]
[000029] is monotonically increasing.
[RangeCheck::GetRange] BB02N001 (  1,  1) [000029] ------------              *  LCL_VAR   int    V03 loc2         u:3 $280
{
----------------------------------------------------
N005 (  0,  0) [000429] -A------R---              *  ASG       int   
N004 (  0,  0) [000427] D------N----              +--*  LCL_VAR   int    V03 loc2         d:3
N003 (  0,  0) [000428] ------------              \--*  PHI       int   
N001 (  0,  0) [000437] ------------ pred BB14       +--*  PHI_ARG   int    V03 loc2         u:4
N002 (  0,  0) [000436] ------------ pred BB01       \--*  PHI_ARG   int    V03 loc2         u:2 $40
----------------------------------------------------
   [RangeCheck::GetRange] BB02N003 (  0,  0) [000428] ------------              *  PHI       int   
N001 (  0,  0) [000437] ------------ pred BB14    +--*  PHI_ARG   int    V03 loc2         u:4
N002 (  0,  0) [000436] ------------ pred BB01    \--*  PHI_ARG   int    V03 loc2         u:2 $40
   {
      [RangeCheck::GetRange] BB02N001 (  0,  0) [000437] ------------              *  PHI_ARG   int    V03 loc2         u:4
      {
----------------------------------------------------
N005 (  3,  3) [000120] -A------R---              *  ASG       int    $269
N004 (  1,  1) [000119] D------N----              +--*  LCL_VAR   int    V03 loc2         d:4 $269
N003 (  3,  3) [000118] ------------              \--*  ADD       int    $269
N001 (  1,  1) [000116] ------------                 +--*  LCL_VAR   int    V03 loc2         u:3 (last use) $280
N002 (  1,  1) [000117] ------------                 \--*  CNS_INT   int    1 $46
----------------------------------------------------
         [RangeCheck::GetRange] BB14N003 (  3,  3) [000118] ------------              *  ADD       int    $269
N001 (  1,  1) [000116] ------------              +--*  LCL_VAR   int    V03 loc2         u:3 (last use) $280
N002 (  1,  1) [000117] ------------              \--*  CNS_INT   int    1 $46
         {
            [RangeCheck::GetRange] BB14N001 (  1,  1) [000116] ------------              *  LCL_VAR   int    V03 loc2         u:3 (last use) $280
            {
----------------------------------------------------
N005 (  0,  0) [000429] -A------R---              *  ASG       int   
N004 (  0,  0) [000427] D------N----              +--*  LCL_VAR   int    V03 loc2         d:3
N003 (  0,  0) [000428] ------------              \--*  PHI       int   
N001 (  0,  0) [000437] ------------ pred BB14       +--*  PHI_ARG   int    V03 loc2         u:4
N002 (  0,  0) [000436] ------------ pred BB01       \--*  PHI_ARG   int    V03 loc2         u:2 $40
----------------------------------------------------
               [RangeCheck::GetRange] BB02N003 (  0,  0) [000428] ------------              *  PHI       int   
N001 (  0,  0) [000437] ------------ pred BB14    +--*  PHI_ARG   int    V03 loc2         u:4
N002 (  0,  0) [000436] ------------ pred BB01    \--*  PHI_ARG   int    V03 loc2         u:2 $40
               {
PhiArg [000437] is already being computed
Merging assertions from pred edges of BB02 for op [000437] $ffffffff
Merge assertions from pred BB14 JTrue edge: 000000000004003D
Constant Assertion: (618, 64) ($26a,$40) Loop_Bnd { {ADD($46, $280)} LT  {ARR_LENGTH($80)}} is not  {IntCns 0} index=#19, mask=0000000000040000
The range after edge merging:<Dependent, $200 + -1>
Merging ranges <Undef, Undef> <Dependent, $200 + -1>:<Dependent, $200 + -1>
                  [RangeCheck::GetRange] BB02N002 (  0,  0) [000436] ------------              *  PHI_ARG   int    V03 loc2         u:2 $40
                  {
                     Computed Range [000436] => <0, 0>
                  }
Merging assertions from pred edges of BB02 for op [000436] $40
Merge assertions from pred BB01 edge: 0000000000000005
Constant Assertion: (577, 64) ($241,$40) Loop_Bnd { {IntCns 0} GE  {ARR_LENGTH($80)}} is  {IntCns 0} index=#03, mask=0000000000000004
The range after edge merging:<0, $200 + -1>
Merging ranges <Dependent, $200 + -1> <0, $200 + -1>:<0, $200 + -1>
                  Computed Range [000428] => <0, $200 + -1>
               }
Merge assertions from BB14:000000000000003D for assignment about [000427]
done merging
Merging assertions from pred edges of BB14 for op [000116] $280
               Computed Range [000116] => <0, $200 + -1>
            }
Merging assertions from pred edges of BB14 for op [000116] $280
            [RangeCheck::GetRange] BB14N002 (  1,  1) [000117] ------------              *  CNS_INT   int    1 $46
            {
               Computed Range [000117] => <1, 1>
            }
Merging assertions from pred edges of BB14 for op [000117] $46
BinOp add ranges <0, $200 + -1> <1, 1> = <1, $200 + 0>
            Computed Range [000118] => <1, $200 + 0>
         }
Merge assertions from BB02:0000000000000005 for assignment about [000119]
done merging
Merging assertions from pred edges of BB02 for op [000437] $ffffffff
Merge assertions from pred BB14 JTrue edge: 000000000004003D
Constant Assertion: (618, 64) ($26a,$40) Loop_Bnd { {ADD($46, $280)} LT  {ARR_LENGTH($80)}} is not  {IntCns 0} index=#19, mask=0000000000040000
The range after edge merging:<1, $200 + -1>
         Computed Range [000437] => <1, $200 + -1>
      }
Merging assertions from pred edges of BB02 for op [000437] $ffffffff
Merge assertions from pred BB14 JTrue edge: 000000000004003D
Constant Assertion: (618, 64) ($26a,$40) Loop_Bnd { {ADD($46, $280)} LT  {ARR_LENGTH($80)}} is not  {IntCns 0} index=#19, mask=0000000000040000
Bound limit -1 doesn't tighten current bound -1
Merging ranges <Undef, Undef> <1, $200 + -1>:<1, $200 + -1>
      [RangeCheck::GetRange] BB02N002 (  0,  0) [000436] ------------              *  PHI_ARG   int    V03 loc2         u:2 $40
      {
         Cached Range [000436] => <0, 0>
      }
Merging assertions from pred edges of BB02 for op [000436] $40
Merge assertions from pred BB01 edge: 0000000000000005
Constant Assertion: (577, 64) ($241,$40) Loop_Bnd { {IntCns 0} GE  {ARR_LENGTH($80)}} is  {IntCns 0} index=#03, mask=0000000000000004
The range after edge merging:<0, $200 + -1>
Merging ranges <1, $200 + -1> <0, $200 + -1>:<0, $200 + -1>
      Computed Range [000428] => <0, $200 + -1>
   }
Merge assertions from BB02:0000000000000005 for assignment about [000427]
done merging
Merging assertions from pred edges of BB02 for op [000029] $280
   Computed Range [000029] => <0, $200 + -1>
}
<0, $200 + -1> BetweenBounds <0, [000455]>
$200 upper bound is:  {ARR_LENGTH($80)}
Array size is: 1
[RangeCheck::OptimizeRangeCheck] Between bounds
Before optRemoveRangeCheck:
N013 ( 12, 16) [000334] ---XG-------              *  COMMA     ref    <l:$1cc, c:$1cb>
N003 (  6,  9) [000327] ---X--------              +--*  ARR_BOUNDS_CHECK_Rng void   $1c7
N001 (  1,  1) [000029] ------------              |  +--*  LCL_VAR   int    V03 loc2         u:3 $280
N002 (  1,  1) [000455] ------------              |  \--*  LCL_VAR   int    V29 cse1         u:1 $200
N012 (  6,  7) [000030] a---G-------              \--*  IND       ref    <l:$1ca, c:$2c1>
N011 (  5,  6) [000333] -------N----                 \--*  ADD       byref  $3c0
N004 (  1,  1) [000324] ------------                    +--*  LCL_VAR   ref    V02 loc1         u:2 $80
N010 (  4,  5) [000332] -------N----                    \--*  ADD       long   $302
N008 (  3,  4) [000330] -------N----                       +--*  LSH       long   $301
N006 (  2,  3) [000328] ------------                       |  +--*  CAST      long <- int $300
N005 (  1,  1) [000325] i-----------                       |  |  \--*  LCL_VAR   int    V03 loc2         u:3 $280
N007 (  1,  1) [000329] -------N----                       |  \--*  CNS_INT   long   3 $340
N009 (  1,  1) [000331] ------------                       \--*  CNS_INT   long   16 Fseq[#FirstElem] $342
After optRemoveRangeCheck:
N011 (  6,  7) [000334] ----G--N----              *  COMMA     ref    <l:$1cc, c:$1cb>
N001 (  0,  0) [000458] ------------              +--*  NOP       void  
N010 (  6,  7) [000030] a---G-------              \--*  IND       ref    <l:$1ca, c:$2c1>
N009 (  5,  6) [000333] -------N----                 \--*  ADD       byref  $3c0
N002 (  1,  1) [000324] ------------                    +--*  LCL_VAR   ref    V02 loc1         u:2 $80
N008 (  4,  5) [000332] -------N----                    \--*  ADD       long   $302
N006 (  3,  4) [000330] -------N----                       +--*  LSH       long   $301
N004 (  2,  3) [000328] ------------                       |  +--*  CAST      long <- int $300
N003 (  1,  1) [000325] i-----------                       |  |  \--*  LCL_VAR   int    V03 loc2         u:3 $280
N005 (  1,  1) [000329] -------N----                       |  \--*  CNS_INT   long   3 $340
N007 (  1,  1) [000331] ------------                       \--*  CNS_INT   long   16 Fseq[#FirstElem] $342

*************** Finishing PHASE Optimize index checks

*************** Starting PHASE Insert GC Polls

*************** Finishing PHASE Insert GC Polls [no changes]

*************** Starting PHASE Determine first cold block

*************** In fgDetermineFirstColdBlock()
No procedure splitting will be done for this method

*************** Finishing PHASE Determine first cold block
Trees before Rationalize IR

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB15 ( cond )                     i label target hascall gcsafe idxlen newobj 
BB02 [0001]  2       BB01,BB14             4     0 [01D..02E)-> BB07 ( cond )                     i Loop label target hascall gcsafe idxlen nullcheck bwd bwd-target 
BB03 [0002]  1       BB02                  2     0 [02E..037)-> BB05 ( cond )                     i gcsafe idxlen bwd 
BB04 [0013]  1       BB03                  2     0 [02E..02F)-> BB06 (always)                     i hascall gcsafe bwd 
BB05 [0014]  1       BB03                  2     0 [02E..02F)                                     i label target hascall gcsafe bwd 
BB06 [0015]  2       BB04,BB05             2     0 [???..???)-> BB14 (always)                     internal label target gcsafe bwd 
BB07 [0003]  1       BB02                  2     0 [037..04B)-> BB10 ( cond )                     i label target hascall gcsafe bwd 
BB08 [0004]  1       BB07                  2     0 [000..062)-> BB16 ( cond )                     i hascall gcsafe newobj bwd 
BB09 [0020]  1       BB08                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd 
BB10 [0005]  2       BB07,BB09             2     0 [062..085)-> BB13 ( cond )                     i label target hascall gcsafe bwd 
BB11 [0006]  1       BB10                  2     0 [000..09C)-> BB16 ( cond )                     i hascall gcsafe newobj bwd 
BB12 [0028]  1       BB11                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd 
BB13 [0007]  2       BB10,BB12             2     0 [09C..0A6)                                     i label target hascall gcsafe bwd 
BB14 [0008]  2       BB06,BB13             4     0 [0A6..0B3)-> BB02 ( cond )                     i label target gcsafe idxlen bwd 
BB15 [0010]  2       BB01,BB14             1       [0B3..0C7)        (return)                     i label target hascall gcsafe 
BB16 [0027]  2       BB08,BB11             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..01D) -> BB15 (cond), preds={} succs={BB02,BB15}

***** BB01
STMT00001 (IL   ???...  ???)
N008 ( 21, 31) [000002] --CXG-------              *  CALL      ref    SolutionAnalyzer.Logger.Log $101
N005 (  4, 12) [000317] #---G------- arg1 in rdx  +--*  IND       ref    $1c0
N004 (  2, 10) [000316] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Started enumerating project paths." $180
N006 (  2, 10) [000003] H----------- arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method $181
N007 (  1,  1) [000001] ------------ arg2 in r8   \--*  CNS_INT   int    2 $42

***** BB01
STMT00002 (IL 0x00C...0x013)
N005 ( 16, 16) [000011] -AC-----R---              *  ASG       ref    $1c1
N004 (  1,  1) [000010] D------N----              +--*  LCL_VAR   ref    V07 tmp1         d:2 $1c1
N003 ( 16, 16) [000009] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1c1
N002 (  2, 10) [000008] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $182

***** BB01
STMT00003 (IL   ???...  ???)
N005 ( 16, 10) [000013] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor $VN.Void
N003 (  1,  1) [000012] ------------ this in rcx  +--*  LCL_VAR   ref    V07 tmp1         u:2 $1c1
N004 (  1,  1) [000007] ------------ arg1 in rdx  \--*  CNS_INT   int    100 $43

***** BB01
STMT00004 (IL 0x013...  ???)
N003 (  1,  3) [000016] -A------R---              *  ASG       ref    $1c1
N002 (  1,  1) [000015] D------N----              +--*  LCL_VAR   ref    V01 loc0         d:2 $1c1
N001 (  1,  1) [000014] ------------              \--*  LCL_VAR   ref    V07 tmp1         u:2 (last use) $1c1

***** BB01
STMT00005 (IL 0x014...0x015)
N003 (  1,  3) [000019] -A------R---              *  ASG       ref    $80
N002 (  1,  1) [000018] D------N----              +--*  LCL_VAR   ref    V02 loc1         d:2 $80
N001 (  1,  1) [000017] ------------              \--*  LCL_VAR   ref    V00 arg0         u:1 (last use) $80

***** BB01
STMT00006 (IL 0x016...0x017)
N003 (  1,  3) [000022] -A------R---              *  ASG       int    $40
N002 (  1,  1) [000021] D------N----              +--*  LCL_VAR   int    V03 loc2         d:2 $40
N001 (  1,  1) [000020] ------------              \--*  CNS_INT   int    0 $40

***** BB01
STMT00071 (IL 0x0AA...  ???)
N009 (  8,  8) [000426] -A-X--------              *  JTRUE     void  
N008 (  6,  6) [000422] JA-X---N----              \--*  LE        int    $242
N006 (  4,  4) [000454] -A-X--------                 +--*  COMMA     int    $240
N004 (  3,  3) [000452] -A-X----R---                 |  +--*  ASG       int    $VN.Void
N003 (  1,  1) [000451] D------N----                 |  |  +--*  LCL_VAR   int    V29 cse1         d:1 $240
N002 (  3,  3) [000423] ---X--------                 |  |  \--*  ARR_LENGTH int    $240
N001 (  1,  1) [000424] ------------                 |  |     \--*  LCL_VAR   ref    V02 loc1         u:2 $80
N005 (  1,  1) [000453] ------------                 |  \--*  LCL_VAR   int    V29 cse1         u:1 $240
N007 (  1,  1) [000457] ------------                 \--*  CNS_INT   int    0 $40

------------ BB02 [01D..02E) -> BB07 (cond), preds={BB01,BB14} succs={BB03,BB07}

***** BB02
STMT00072 (IL   ???...  ???)
N005 (  0,  0) [000429] -A------R---              *  ASG       int   
N004 (  0,  0) [000427] D------N----              +--*  LCL_VAR   int    V03 loc2         d:3
N003 (  0,  0) [000428] ------------              \--*  PHI       int   
N001 (  0,  0) [000437] ------------ pred BB14       +--*  PHI_ARG   int    V03 loc2         u:4
N002 (  0,  0) [000436] ------------ pred BB01       \--*  PHI_ARG   int    V03 loc2         u:2 $40

***** BB02
STMT00008 (IL 0x01D...0x020)
N013 (  6,  7) [000032] -A--G---R---              *  ASG       ref    <l:$1cc, c:$1cb>
N012 (  1,  1) [000031] D------N----              +--*  LCL_VAR   ref    V04 loc3         d:2 <l:$1ca, c:$2c1>
N011 (  6,  7) [000334] ----G--N----              \--*  COMMA     ref    <l:$1cc, c:$1cb>
N001 (  0,  0) [000458] ------------                 +--*  NOP       void  
N010 (  6,  7) [000030] a---G-------                 \--*  IND       ref    <l:$1ca, c:$2c1>
N009 (  5,  6) [000333] -------N----                    \--*  ADD       byref  $3c0
N002 (  1,  1) [000324] ------------                       +--*  LCL_VAR   ref    V02 loc1         u:2 $80
N008 (  4,  5) [000332] -------N----                       \--*  ADD       long   $302
N006 (  3,  4) [000330] -------N----                          +--*  LSH       long   $301
N004 (  2,  3) [000328] ------------                          |  +--*  CAST      long <- int $300
N003 (  1,  1) [000325] i-----------                          |  |  \--*  LCL_VAR   int    V03 loc2         u:3 $280
N005 (  1,  1) [000329] -------N----                          |  \--*  CNS_INT   long   3 $340
N007 (  1,  1) [000331] ------------                          \--*  CNS_INT   long   16 Fseq[#FirstElem] $342

***** BB02
STMT00042 (IL 0x021...  ???)
N002 (  2,  2) [000197] ---X--------              *  NULLCHECK byte   <l:$1d0, c:$1cf>
N001 (  1,  1) [000196] ------------              \--*  LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>

***** BB02
STMT00010 (IL   ???...  ???)
N011 ( 24, 27) [000039] --CXG-------              *  JTRUE     void  
N010 ( 22, 25) [000038] J-CXG--N----              \--*  EQ        int    $244
N008 ( 20, 23) [000195] --CXG-------                 +--*  CALL      int    System.String.EndsWith $401
N005 (  4, 12) [000336] #---G------- arg1 in rdx     |  +--*  IND       ref    $1d1
N004 (  2, 10) [000335] H-----------                 |  |  \--*  CNS_INT(h) long   0xD1FFAB1E ".csproj" $184
N006 (  1,  1) [000033] ------------ this in rcx     |  +--*  LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
N007 (  1,  1) [000194] ------------ arg2 in r8      |  \--*  CNS_INT   int    0 $40
N009 (  1,  1) [000037] ------------                 \--*  CNS_INT   int    0 $40

------------ BB03 [02E..037) -> BB05 (cond), preds={BB02} succs={BB04,BB05}

***** BB03
STMT00043 (IL 0x02E...  ???)
N011 ( 11, 11) [000204] -A--GO--R---              *  ASG       int    $VN.Void
N010 (  4,  4) [000203] n---GO-N----              +--*  IND       int    $25a
N009 (  2,  2) [000341] -------N----              |  \--*  ADD       byref  $386
N007 (  1,  1) [000177] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N008 (  1,  1) [000340] ------------              |     \--*  CNS_INT   long   20 field offset Fseq[_version] $348
N006 (  6,  6) [000202] ----GO------              \--*  ADD       int    <l:$25c, c:$25b>
N004 (  4,  4) [000200] n---GO------                 +--*  IND       int    <l:$258, c:$257>
N003 (  2,  2) [000343] -------N----                 |  \--*  ADD       byref  $386
N001 (  1,  1) [000199] ------------                 |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N002 (  1,  1) [000342] ------------                 |     \--*  CNS_INT   long   20 field offset Fseq[_version] $348
N005 (  1,  1) [000201] ------------                 \--*  CNS_INT   int    1 $46

***** BB03
STMT00044 (IL 0x02E...  ???)
N006 (  4,  4) [000208] -A--GO--R---              *  ASG       ref    <l:$1f0, c:$1ef>
N005 (  1,  1) [000207] D------N----              +--*  LCL_VAR   ref    V18 tmp12        d:2 <l:$1ee, c:$2fc>
N004 (  4,  4) [000206] n---GO------              \--*  IND       ref    <l:$1f0, c:$1ef>
N003 (  2,  2) [000345] -------N----                 \--*  ADD       byref  $387
N001 (  1,  1) [000205] ------------                    +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N002 (  1,  1) [000344] ------------                    \--*  CNS_INT   long   8 field offset Fseq[_items] $343

***** BB03
STMT00045 (IL 0x02E...  ???)
N006 (  4,  4) [000212] -A--GO--R---              *  ASG       int    <l:$260, c:$25f>
N005 (  1,  1) [000211] D------N----              +--*  LCL_VAR   int    V19 tmp13        d:2 <l:$25e, c:$411>
N004 (  4,  4) [000210] n---GO------              \--*  IND       int    <l:$260, c:$25f>
N003 (  2,  2) [000347] -------N----                 \--*  ADD       byref  $383
N001 (  1,  1) [000209] ------------                    +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N002 (  1,  1) [000346] ------------                    \--*  CNS_INT   long   16 field offset Fseq[_size] $342

***** BB03
STMT00046 (IL 0x02E...  ???)
N005 (  7,  7) [000217] ---X--------              *  JTRUE     void  
N004 (  5,  5) [000216] N--X---N-U--              \--*  LE        int    <l:$266, c:$265>
N002 (  3,  3) [000215] ---X--------                 +--*  ARR_LENGTH int    <l:$262, c:$261>
N001 (  1,  1) [000214] ------------                 |  \--*  LCL_VAR   ref    V18 tmp12        u:2 <l:$1ee, c:$2fc>
N003 (  1,  1) [000213] ------------                 \--*  LCL_VAR   int    V19 tmp13        u:2 <l:$25e, c:$411>

------------ BB04 [02E..02F) -> BB06 (always), preds={BB03} succs={BB06}

***** BB04
STMT00048 (IL 0x02E...  ???)
N008 (  8,  8) [000225] -A--GO--R---              *  ASG       int    $VN.Void
N007 (  4,  4) [000224] n---GO-N----              +--*  IND       int    $268
N006 (  2,  2) [000349] -------N----              |  \--*  ADD       byref  $383
N004 (  1,  1) [000220] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N005 (  1,  1) [000348] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size] $342
N003 (  3,  3) [000223] ------------              \--*  ADD       int    <l:$268, c:$267>
N001 (  1,  1) [000221] ------------                 +--*  LCL_VAR   int    V19 tmp13        u:2 <l:$25e, c:$411>
N002 (  1,  1) [000222] ------------                 \--*  CNS_INT   int    1 $46

***** BB04
STMT00049 (IL 0x02E...  ???)
N007 ( 17, 11) [000229] --CXG-------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST $1db
N004 (  1,  1) [000226] ------------ arg0 in rcx  +--*  LCL_VAR   ref    V18 tmp12        u:2 (last use) <l:$1ee, c:$2fc>
N005 (  1,  1) [000227] ------------ arg1 in rdx  +--*  LCL_VAR   int    V19 tmp13        u:2 (last use) <l:$25e, c:$411>
N006 (  1,  1) [000228] ------------ arg2 in r8   \--*  LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>

------------ BB05 [02E..02F), preds={BB03} succs={BB06}

***** BB05
STMT00047 (IL 0x02E...  ???)
N005 ( 16, 10) [000219] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize $VN.Void
N003 (  1,  1) [000218] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N004 (  1,  1) [000178] ------------ arg1 in rdx  \--*  LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>

------------ BB06 [???..???) -> BB14 (always), preds={BB04,BB05} succs={BB14}

------------ BB07 [037..04B) -> BB10 (cond), preds={BB02} succs={BB08,BB10}

***** BB07
STMT00053 (IL 0x037...  ???)
N005 ( 15,  7) [000247] -ACXG---R---              *  ASG       ref    $2c6
N004 (  1,  1) [000246] D------N----              +--*  LCL_VAR   ref    V20 tmp14        d:2 $2c6
N003 ( 15,  7) [000236] --CXG-------              \--*  CALL      ref    System.IO.EnumerationOptions.FromSearchOption $2c6
N002 (  1,  1) [000235] ------------ arg0 in rcx     \--*  CNS_INT   int    1 $46

***** BB07
STMT00013 (IL   ???...  ???)
N012 ( 21, 24) [000054] -ACXG---R---              *  ASG       ref    $2cc
N011 (  1,  1) [000053] D------N----              +--*  LCL_VAR   ref    V09 tmp3         d:2 $2cc
N010 ( 21, 24) [000245] --CXG-------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths $2cc
N006 (  4, 12) [000357] #---G------- arg1 in rdx     +--*  IND       ref    $1d2
N005 (  2, 10) [000356] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*" $185
N007 (  1,  1) [000040] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
N008 (  1,  1) [000244] ------------ arg3 in r9      +--*  LCL_VAR   ref    V20 tmp14        u:2 (last use) $2c6
N009 (  1,  1) [000243] ------------ arg2 in r8      \--*  CNS_INT   int    2 $42

***** BB07
STMT00012 (IL   ???...  ???)
N014 ( 22, 31) [000052] -ACXG---R---              *  ASG       ref    <l:$1d5, c:$1d4>
N013 (  1,  1) [000051] D------N----              +--*  LCL_VAR   ref    V08 tmp2         d:2 <l:$4c0, c:$2cf>
N012 ( 22, 31) [000050] -ACXG-------              \--*  COMMA     ref    <l:$1d5, c:$1d4>
N009 ( 18, 19) [000445] -ACXG-------                 +--*  COMMA     long   $305
N007 ( 17, 18) [000443] -ACXG---R---                 |  +--*  ASG       long   $VN.Void
N006 (  1,  1) [000442] D------N----                 |  |  +--*  LCL_VAR   long   V28 cse0         d:1 $305
N005 ( 17, 18) [000049] H-CXG-------                 |  |  \--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
N003 (  2, 10) [000047] ------------ arg0 in rcx     |  |     +--*  CNS_INT   long   0x7ffc7e4c17e0 $345
N004 (  1,  1) [000048] ------------ arg1 in rdx     |  |     \--*  CNS_INT   int    35 $47
N008 (  1,  1) [000444] ------------                 |  \--*  LCL_VAR   long   V28 cse0         u:1 $305
N011 (  4, 12) [000045] n---G-------                 \--*  IND       ref    <l:$4c0, c:$2cf>
N010 (  2, 10) [000364] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] $186

***** BB07
STMT00015 (IL   ???...0x049)
N003 (  1,  3) [000062] -A------R---              *  ASG       ref    $2cc
N002 (  1,  1) [000061] D------N----              +--*  LCL_VAR   ref    V10 tmp4         d:2 $2cc
N001 (  1,  1) [000055] ------------              \--*  LCL_VAR   ref    V09 tmp3         u:2 (last use) $2cc

***** BB07
STMT00016 (IL   ???...  ???)
N003 (  1,  3) [000065] -A------R---              *  ASG       ref    <l:$4c0, c:$2cf>
N002 (  1,  1) [000064] D------N----              +--*  LCL_VAR   ref    V11 tmp5         d:2 <l:$4c0, c:$2cf>
N001 (  1,  1) [000056] ------------              \--*  LCL_VAR   ref    V08 tmp2         u:2 <l:$4c0, c:$2cf>

***** BB07
STMT00014 (IL   ???...  ???)
N004 (  5,  5) [000060] ------------              *  JTRUE     void  
N003 (  3,  3) [000059] J------N----              \--*  NE        int    <l:$246, c:$245>
N001 (  1,  1) [000057] ------------                 +--*  LCL_VAR   ref    V11 tmp5         u:2 (last use) <l:$4c0, c:$2cf>
N002 (  1,  1) [000058] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB08 [000..062) -> BB16 (cond), preds={BB07} succs={BB09,BB16}

***** BB08
STMT00033 (IL   ???...0x05D)
N005 ( 16, 16) [000160] -AC-----R---              *  ASG       ref    $1d6
N004 (  1,  1) [000159] D------N----              +--*  LCL_VAR   ref    V17 tmp11        d:2 $1d6
N003 ( 16, 16) [000158] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1d6
N002 (  2, 10) [000157] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $187

***** BB08
STMT00058 (IL   ???...  ???)
N006 (  5, 13) [000262] -A--G---R---              *  ASG       ref    <l:$1d8, c:$1d7>
N005 (  1,  1) [000261] D------N----              +--*  LCL_VAR   ref    V21 tmp15        d:2 <l:$4c1, c:$2d5>
N004 (  5, 13) [000155] ----G-------              \--*  COMMA     ref    <l:$1d8, c:$1d7>
N001 (  1,  1) [000446] ------------                 +--*  LCL_VAR   long   V28 cse0         u:1 $304
N003 (  4, 12) [000150] n---G-------                 \--*  IND       ref    <l:$4c1, c:$2d5>
N002 (  2, 10) [000368] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] $188

***** BB08
STMT00054 (IL   ???...  ???)
N004 (  5,  5) [000252] ------------              *  JTRUE     void  
N003 (  3,  3) [000251] J------N----              \--*  EQ        int    <l:$248, c:$247>
N001 (  1,  1) [000249] ------------                 +--*  LCL_VAR   ref    V21 tmp15        u:2 <l:$4c1, c:$2d5>
N002 (  1,  1) [000250] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB09 [000..000), preds={BB08} succs={BB10}

***** BB09
STMT00055 (IL   ???...  ???)
N006 (  6,  6) [000255] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000254] n---GO-N----              +--*  IND       ref    $4c1
N003 (  2,  2) [000370] -------N----              |  \--*  ADD       byref  $381
N001 (  1,  1) [000161] ------------              |     +--*  LCL_VAR   ref    V17 tmp11        u:2 $1d6
N002 (  1,  1) [000369] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $343
N005 (  1,  1) [000253] ------------              \--*  LCL_VAR   ref    V21 tmp15        u:2 (last use) <l:$4c1, c:$2d5>

***** BB09
STMT00056 (IL   ???...  ???)
N006 (  7, 15) [000259] -A--GO------              *  ASG       long   $VN.Void
N004 (  4,  4) [000258] n---GO-N----              +--*  IND       long   $18a
N003 (  2,  2) [000372] -------N----              |  \--*  ADD       byref  $382
N001 (  1,  1) [000256] ------------              |     +--*  LCL_VAR   ref    V17 tmp11        u:2 $1d6
N002 (  1,  1) [000371] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $346
N005 (  2, 10) [000156] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $18a

***** BB09
STMT00035 (IL 0x05C...  ???)
N006 (  7, 15) [000171] -A--G-------              *  COMMA     void   $1db
N001 (  1,  1) [000447] ------------              +--*  LCL_VAR   long   V28 cse0         u:1 $304
N005 (  6, 14) [000166] -A--G-------              \--*  ASG       ref    $VN.Void
N003 (  4, 12) [000165] n---G--N----                 +--*  IND       ref    $1d6
N002 (  2, 10) [000375] I-----------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] $186
N004 (  1,  1) [000164] ------------                 \--*  LCL_VAR   ref    V17 tmp11        u:2 $1d6

***** BB09
STMT00036 (IL   ???...0x05D)
N003 (  1,  3) [000175] -A------R---              *  ASG       ref    $1d6
N002 (  1,  1) [000174] D------N----              +--*  LCL_VAR   ref    V11 tmp5         d:4 $1d6
N001 (  1,  1) [000163] ------------              \--*  LCL_VAR   ref    V17 tmp11        u:2 (last use) $1d6

------------ BB10 [062..085) -> BB13 (cond), preds={BB07,BB09} succs={BB11,BB13}

***** BB10
STMT00074 (IL   ???...  ???)
N005 (  0,  0) [000435] -A------R---              *  ASG       ref   
N004 (  0,  0) [000433] D------N----              +--*  LCL_VAR   ref    V11 tmp5         d:3
N003 (  0,  0) [000434] ------------              \--*  PHI       ref   
N001 (  0,  0) [000441] ------------ pred BB09       +--*  PHI_ARG   ref    V11 tmp5         u:4 $1d6
N002 (  0,  0) [000438] ------------ pred BB07       \--*  PHI_ARG   ref    V11 tmp5         u:2 <l:$4c0, c:$2cf>

***** BB10
STMT00018 (IL   ???...  ???)
N009 ( 18, 20) [000075] -ACXG---R---              *  ASG       ref    $2db
N008 (  1,  1) [000074] D------N----              +--*  LCL_VAR   ref    V05 loc4         d:2 $2db
N007 ( 18, 20) [000071] --CXG-------              \--*  CALL      ref    System.Linq.Enumerable.Where $2db
N004 (  1,  1) [000070] ------------ arg2 in r8      +--*  LCL_VAR   ref    V11 tmp5         u:3 (last use) $4c4
N005 (  1,  1) [000069] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V10 tmp4         u:2 (last use) $2cc
N006 (  2, 10) [000072] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $18d

***** BB10
STMT00061 (IL 0x069...  ???)
N010 ( 21, 30) [000283] -ACXG---R---              *  ASG       ref    <l:$1df, c:$1de>
N009 (  1,  1) [000282] D------N----              +--*  LCL_VAR   ref    V23 tmp17        d:2 <l:$4c5, c:$2de>
N008 ( 21, 30) [000276] --CXG-------              \--*  COMMA     ref    <l:$1df, c:$1de>
N005 ( 17, 18) [000275] H-CXG-------                 +--*  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $309
N003 (  2, 10) [000273] ------------ arg0 in rcx     |  +--*  CNS_INT   long   0x7ffc7e783cd8 $347
N004 (  1,  1) [000274] ------------ arg1 in rdx     |  \--*  CNS_INT   int    40 $4a
N007 (  4, 12) [000271] n---G-------                 \--*  IND       ref    <l:$4c5, c:$2de>
N006 (  2, 10) [000381] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<Compatible>k__BackingField] $18e

***** BB10
STMT00063 (IL   ???...  ???)
N012 ( 21, 24) [000290] -ACXG---R---              *  ASG       ref    $2e3
N011 (  1,  1) [000289] D------N----              +--*  LCL_VAR   ref    V24 tmp18        d:2 $2e3
N010 ( 21, 24) [000281] --CXG-------              \--*  CALL      ref    System.IO.Directory.InternalEnumeratePaths $2e3
N006 (  4, 12) [000383] #---G------- arg1 in rdx     +--*  IND       ref    $1e0
N005 (  2, 10) [000382] H-----------                 |  \--*  CNS_INT(h) long   0xD1FFAB1E "*.csproj" $18f
N007 (  1,  1) [000077] ------------ arg0 in rcx     +--*  LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>
N008 (  1,  1) [000280] ------------ arg3 in r9      +--*  LCL_VAR   ref    V23 tmp17        u:2 (last use) <l:$4c5, c:$2de>
N009 (  1,  1) [000279] ------------ arg2 in r8      \--*  CNS_INT   int    1 $46

***** BB10
STMT00062 (IL   ???...  ???)
N010 ( 20, 15) [000288] --CXGO------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange $VN.Void
N007 (  4,  4) [000286] n---GO------ arg1 in rdx  +--*  IND       int    <l:$24c, c:$24b>
N006 (  2,  2) [000389] -------N----              |  \--*  ADD       byref  $383
N004 (  1,  1) [000285] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N005 (  1,  1) [000388] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size] $342
N008 (  1,  1) [000076] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N009 (  1,  1) [000287] ------------ arg2 in r8   \--*  LCL_VAR   ref    V24 tmp18        u:2 (last use) $2e3

***** BB10
STMT00021 (IL 0x07A...  ???)
N006 (  5, 13) [000091] -A--G---R---              *  ASG       ref    <l:$1e3, c:$1e2>
N005 (  1,  1) [000090] D------N----              +--*  LCL_VAR   ref    V12 tmp6         d:2 <l:$4c6, c:$2e9>
N004 (  5, 13) [000089] ----G-------              \--*  COMMA     ref    <l:$1e3, c:$1e2>
N001 (  1,  1) [000448] ------------                 +--*  LCL_VAR   long   V28 cse0         u:1 $304
N003 (  4, 12) [000084] n---G-------                 \--*  IND       ref    <l:$4c6, c:$2e9>
N002 (  2, 10) [000395] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] $191

***** BB10
STMT00023 (IL   ???...0x083)
N003 (  1,  3) [000098] -A------R---              *  ASG       ref    $1c1
N002 (  1,  1) [000097] D------N----              +--*  LCL_VAR   ref    V13 tmp7         d:2 $1c1
N001 (  1,  1) [000082] ------------              \--*  LCL_VAR   ref    V01 loc0         u:2 $1c1

***** BB10
STMT00024 (IL   ???...  ???)
N003 (  1,  3) [000101] -A------R---              *  ASG       ref    $2db
N002 (  1,  1) [000100] D------N----              +--*  LCL_VAR   ref    V14 tmp8         d:2 $2db
N001 (  1,  1) [000083] ------------              \--*  LCL_VAR   ref    V05 loc4         u:2 (last use) $2db

***** BB10
STMT00025 (IL   ???...  ???)
N003 (  1,  3) [000104] -A------R---              *  ASG       ref    <l:$4c6, c:$2e9>
N002 (  1,  1) [000103] D------N----              +--*  LCL_VAR   ref    V15 tmp9         d:2 <l:$4c6, c:$2e9>
N001 (  1,  1) [000092] ------------              \--*  LCL_VAR   ref    V12 tmp6         u:2 <l:$4c6, c:$2e9>

***** BB10
STMT00022 (IL   ???...  ???)
N004 (  5,  5) [000096] ------------              *  JTRUE     void  
N003 (  3,  3) [000095] J------N----              \--*  NE        int    <l:$24e, c:$24d>
N001 (  1,  1) [000093] ------------                 +--*  LCL_VAR   ref    V15 tmp9         u:2 (last use) <l:$4c6, c:$2e9>
N002 (  1,  1) [000094] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB11 [000..09C) -> BB16 (cond), preds={BB10} succs={BB12,BB16}

***** BB11
STMT00029 (IL   ???...0x097)
N005 ( 16, 16) [000131] -AC-----R---              *  ASG       ref    $1e4
N004 (  1,  1) [000130] D------N----              +--*  LCL_VAR   ref    V16 tmp10        d:2 $1e4
N003 ( 16, 16) [000129] --C---------              \--*  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1e4
N002 (  2, 10) [000128] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e token $192

***** BB11
STMT00068 (IL   ???...  ???)
N006 (  5, 13) [000305] -A--G---R---              *  ASG       ref    <l:$1e6, c:$1e5>
N005 (  1,  1) [000304] D------N----              +--*  LCL_VAR   ref    V25 tmp19        d:2 <l:$4c7, c:$2f0>
N004 (  5, 13) [000126] ----G-------              \--*  COMMA     ref    <l:$1e6, c:$1e5>
N001 (  1,  1) [000449] ------------                 +--*  LCL_VAR   long   V28 cse0         u:1 $304
N003 (  4, 12) [000121] n---G-------                 \--*  IND       ref    <l:$4c7, c:$2f0>
N002 (  2, 10) [000399] I-----------                    \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] $188

***** BB11
STMT00064 (IL   ???...  ???)
N004 (  5,  5) [000295] ------------              *  JTRUE     void  
N003 (  3,  3) [000294] J------N----              \--*  EQ        int    <l:$250, c:$24f>
N001 (  1,  1) [000292] ------------                 +--*  LCL_VAR   ref    V25 tmp19        u:2 <l:$4c7, c:$2f0>
N002 (  1,  1) [000293] ------------                 \--*  CNS_INT   ref    null $VN.Null

------------ BB12 [000..000), preds={BB11} succs={BB13}

***** BB12
STMT00065 (IL   ???...  ???)
N006 (  6,  6) [000298] -A--GO------              *  ASG       ref    $VN.Void
N004 (  4,  4) [000297] n---GO-N----              +--*  IND       ref    $4c7
N003 (  2,  2) [000401] -------N----              |  \--*  ADD       byref  $384
N001 (  1,  1) [000132] ------------              |     +--*  LCL_VAR   ref    V16 tmp10        u:2 $1e4
N002 (  1,  1) [000400] ------------              |     \--*  CNS_INT   long   8 field offset Fseq[_target] $343
N005 (  1,  1) [000296] ------------              \--*  LCL_VAR   ref    V25 tmp19        u:2 (last use) <l:$4c7, c:$2f0>

***** BB12
STMT00066 (IL   ???...  ???)
N006 (  7, 15) [000302] -A--GO------              *  ASG       long   $VN.Void
N004 (  4,  4) [000301] n---GO-N----              +--*  IND       long   $194
N003 (  2,  2) [000403] -------N----              |  \--*  ADD       byref  $385
N001 (  1,  1) [000299] ------------              |     +--*  LCL_VAR   ref    V16 tmp10        u:2 $1e4
N002 (  1,  1) [000402] ------------              |     \--*  CNS_INT   long   24 field offset Fseq[_methodPtr] $346
N005 (  2, 10) [000127] H-----------              \--*  CNS_INT(h) long   0xd1ffab1e ftn $194

***** BB12
STMT00031 (IL 0x096...  ???)
N006 (  7, 15) [000142] -A--G-------              *  COMMA     void   $1db
N001 (  1,  1) [000450] ------------              +--*  LCL_VAR   long   V28 cse0         u:1 $304
N005 (  6, 14) [000137] -A--G-------              \--*  ASG       ref    $VN.Void
N003 (  4, 12) [000136] n---G--N----                 +--*  IND       ref    $1e4
N002 (  2, 10) [000406] I-----------                 |  \--*  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] $191
N004 (  1,  1) [000135] ------------                 \--*  LCL_VAR   ref    V16 tmp10        u:2 $1e4

***** BB12
STMT00032 (IL   ???...0x097)
N003 (  1,  3) [000148] -A------R---              *  ASG       ref    $1e4
N002 (  1,  1) [000147] D------N----              +--*  LCL_VAR   ref    V15 tmp9         d:4 $1e4
N001 (  1,  1) [000134] ------------              \--*  LCL_VAR   ref    V16 tmp10        u:2 (last use) $1e4

------------ BB13 [09C..0A6), preds={BB10,BB12} succs={BB14}

***** BB13
STMT00073 (IL   ???...  ???)
N005 (  0,  0) [000432] -A------R---              *  ASG       ref   
N004 (  0,  0) [000430] D------N----              +--*  LCL_VAR   ref    V15 tmp9         d:3
N003 (  0,  0) [000431] ------------              \--*  PHI       ref   
N001 (  0,  0) [000440] ------------ pred BB12       +--*  PHI_ARG   ref    V15 tmp9         u:4 $1e4
N002 (  0,  0) [000439] ------------ pred BB10       \--*  PHI_ARG   ref    V15 tmp9         u:2 <l:$4c6, c:$2e9>

***** BB13
STMT00070 (IL   ???...  ???)
N009 ( 18, 20) [000313] -ACXG---R---              *  ASG       ref    $2f6
N008 (  1,  1) [000312] D------N----              +--*  LCL_VAR   ref    V27 tmp21        d:2 $2f6
N007 ( 18, 20) [000112] --CXG-------              \--*  CALL      ref    System.Linq.Enumerable.SelectMany $2f6
N004 (  1,  1) [000111] ------------ arg2 in r8      +--*  LCL_VAR   ref    V15 tmp9         u:3 (last use) $4ca
N005 (  1,  1) [000110] ------------ arg1 in rdx     +--*  LCL_VAR   ref    V14 tmp8         u:2 (last use) $2db
N006 (  2, 10) [000113] H----------- arg0 in rcx     \--*  CNS_INT(h) long   0xd1ffab1e method $196

***** BB13
STMT00069 (IL   ???...  ???)
N010 ( 20, 15) [000311] --CXGO------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange $VN.Void
N007 (  4,  4) [000309] n---GO------ arg1 in rdx  +--*  IND       int    <l:$254, c:$253>
N006 (  2,  2) [000411] -------N----              |  \--*  ADD       byref  $383
N004 (  1,  1) [000308] ------------              |     +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N005 (  1,  1) [000410] ------------              |     \--*  CNS_INT   long   16 field offset Fseq[_size] $342
N008 (  1,  1) [000109] ------------ this in rcx  +--*  LCL_VAR   ref    V01 loc0         u:2 (last use) $1c1
N009 (  1,  1) [000310] ------------ arg2 in r8   \--*  LCL_VAR   ref    V27 tmp21        u:2 (last use) $2f6

------------ BB14 [0A6..0B3) -> BB02 (cond), preds={BB06,BB13} succs={BB15,BB02}

***** BB14
STMT00028 (IL 0x0A6...0x0A9)
N005 (  3,  3) [000120] -A------R---              *  ASG       int    $269
N004 (  1,  1) [000119] D------N----              +--*  LCL_VAR   int    V03 loc2         d:4 $269
N003 (  3,  3) [000118] ------------              \--*  ADD       int    $269
N001 (  1,  1) [000116] ------------                 +--*  LCL_VAR   int    V03 loc2         u:3 (last use) $280
N002 (  1,  1) [000117] ------------                 \--*  CNS_INT   int    1 $46

***** BB14
STMT00007 (IL 0x0AA...0x0AE)
N004 (  5,  5) [000027] ------------              *  JTRUE     void  
N003 (  3,  3) [000026] J------N----              \--*  GT        int    $26b
N001 (  1,  1) [000456] ------------                 +--*  LCL_VAR   int    V29 cse1         u:1 $200
N002 (  1,  1) [000023] ------------                 \--*  LCL_VAR   int    V03 loc2         u:4 $269

------------ BB15 [0B3..0C7) (return), preds={BB01,BB14} succs={}

***** BB15
STMT00038 (IL 0x0B3...0x0C4)
N005 ( 17, 18) [000181] --CXG-------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle $VN.Void
N003 (  1,  1) [000180] ------------ arg1 in rdx  +--*  LCL_VAR   ref    V01 loc0         u:2 $1c1
N004 (  2, 10) [000182] H----------- arg0 in rcx  \--*  CNS_INT(h) long   0xd1ffab1e method $19c

***** BB15
STMT00040 (IL   ???...  ???)
N008 ( 21, 31) [000185] --CXG-------              *  CALL      ref    SolutionAnalyzer.Logger.Log $10d
N005 (  4, 12) [000418] #---G------- arg1 in rdx  +--*  IND       ref    $1f9
N004 (  2, 10) [000417] H-----------              |  \--*  CNS_INT(h) long   0xD1FFAB1E "Enumerated and shuffled the project paths." $19d
N006 (  2, 10) [000186] H----------- arg0 in rcx  +--*  CNS_INT(h) long   0xd1ffab1e method $181
N007 (  1,  1) [000184] ------------ arg2 in r8   \--*  CNS_INT   int    2 $42

***** BB15
STMT00041 (IL 0x0C5...0x0C6)
N002 (  2,  2) [000191] ------------              *  RETURN    ref    $10f
N001 (  1,  1) [000190] ------------              \--*  LCL_VAR   ref    V01 loc0         u:2 (last use) $1c1

------------ BB16 [000..000) (throw), preds={BB08,BB11} succs={}

***** BB16
STMT00067 (IL   ???...  ???)
N001 ( 14,  5) [000303] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance $VN.Void

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Rationalize IR
rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 ( 16, 16) [000011] DAC---------              *  STORE_LCL_VAR ref    V07 tmp1         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  1,  3) [000016] DA----------              *  STORE_LCL_VAR ref    V01 loc0         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  1,  3) [000019] DA----------              *  STORE_LCL_VAR ref    V02 loc1         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  1,  3) [000022] DA----------              *  STORE_LCL_VAR int    V03 loc2         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N004 (  3,  3) [000452] DA-X--------              *  STORE_LCL_VAR int    V29 cse1         d:1

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 (  0,  0) [000429] DA----------              *  STORE_LCL_VAR int    V03 loc2         d:3

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N013 (  6,  7) [000032] DA--G-------              *  STORE_LCL_VAR ref    V04 loc3         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N006 (  4,  4) [000208] DA--GO------              *  STORE_LCL_VAR ref    V18 tmp12        d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N006 (  4,  4) [000212] DA--GO------              *  STORE_LCL_VAR int    V19 tmp13        d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 ( 15,  7) [000247] DACXG-------              *  STORE_LCL_VAR ref    V20 tmp14        d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N012 ( 21, 24) [000054] DACXG-------              *  STORE_LCL_VAR ref    V09 tmp3         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N007 ( 17, 18) [000443] DACXG-------              *  STORE_LCL_VAR long   V28 cse0         d:1

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N014 ( 22, 31) [000052] DACXG-------              *  STORE_LCL_VAR ref    V08 tmp2         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  1,  3) [000062] DA----------              *  STORE_LCL_VAR ref    V10 tmp4         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  1,  3) [000065] DA----------              *  STORE_LCL_VAR ref    V11 tmp5         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 ( 16, 16) [000160] DAC---------              *  STORE_LCL_VAR ref    V17 tmp11        d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N006 (  5, 13) [000262] DA--G-------              *  STORE_LCL_VAR ref    V21 tmp15        d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  1,  3) [000175] DA----------              *  STORE_LCL_VAR ref    V11 tmp5         d:4

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 (  0,  0) [000435] DA----------              *  STORE_LCL_VAR ref    V11 tmp5         d:3

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N009 ( 18, 20) [000075] DACXG-------              *  STORE_LCL_VAR ref    V05 loc4         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N010 ( 21, 30) [000283] DACXG-------              *  STORE_LCL_VAR ref    V23 tmp17        d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N012 ( 21, 24) [000290] DACXG-------              *  STORE_LCL_VAR ref    V24 tmp18        d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N006 (  5, 13) [000091] DA--G-------              *  STORE_LCL_VAR ref    V12 tmp6         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  1,  3) [000098] DA----------              *  STORE_LCL_VAR ref    V13 tmp7         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  1,  3) [000101] DA----------              *  STORE_LCL_VAR ref    V14 tmp8         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  1,  3) [000104] DA----------              *  STORE_LCL_VAR ref    V15 tmp9         d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 ( 16, 16) [000131] DAC---------              *  STORE_LCL_VAR ref    V16 tmp10        d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N006 (  5, 13) [000305] DA--G-------              *  STORE_LCL_VAR ref    V25 tmp19        d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N003 (  1,  3) [000148] DA----------              *  STORE_LCL_VAR ref    V15 tmp9         d:4

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 (  0,  0) [000432] DA----------              *  STORE_LCL_VAR ref    V15 tmp9         d:3

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N009 ( 18, 20) [000313] DACXG-------              *  STORE_LCL_VAR ref    V27 tmp21        d:2

rewriting asg(LCL_VAR, X) to STORE_LCL_VAR(X)
N005 (  3,  3) [000120] DA----------              *  STORE_LCL_VAR int    V03 loc2         d:4


*************** Finishing PHASE Rationalize IR
Trees after Rationalize IR

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB15 ( cond )                     i label target hascall gcsafe idxlen newobj LIR 
BB02 [0001]  2       BB01,BB14             4     0 [01D..02E)-> BB07 ( cond )                     i Loop label target hascall gcsafe idxlen nullcheck bwd bwd-target LIR 
BB03 [0002]  1       BB02                  2     0 [02E..037)-> BB05 ( cond )                     i gcsafe idxlen bwd LIR 
BB04 [0013]  1       BB03                  2     0 [02E..02F)-> BB06 (always)                     i hascall gcsafe bwd LIR 
BB05 [0014]  1       BB03                  2     0 [02E..02F)                                     i label target hascall gcsafe bwd LIR 
BB06 [0015]  2       BB04,BB05             2     0 [???..???)-> BB14 (always)                     internal label target gcsafe bwd LIR 
BB07 [0003]  1       BB02                  2     0 [037..04B)-> BB10 ( cond )                     i label target hascall gcsafe bwd LIR 
BB08 [0004]  1       BB07                  2     0 [000..062)-> BB16 ( cond )                     i hascall gcsafe newobj bwd LIR 
BB09 [0020]  1       BB08                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd LIR 
BB10 [0005]  2       BB07,BB09             2     0 [062..085)-> BB13 ( cond )                     i label target hascall gcsafe bwd LIR 
BB11 [0006]  1       BB10                  2     0 [000..09C)-> BB16 ( cond )                     i hascall gcsafe newobj bwd LIR 
BB12 [0028]  1       BB11                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd LIR 
BB13 [0007]  2       BB10,BB12             2     0 [09C..0A6)                                     i label target hascall gcsafe bwd LIR 
BB14 [0008]  2       BB06,BB13             4     0 [0A6..0B3)-> BB02 ( cond )                     i label target gcsafe idxlen bwd LIR 
BB15 [0010]  2       BB01,BB14             1       [0B3..0C7)        (return)                     i label target hascall gcsafe LIR 
BB16 [0027]  2       BB08,BB11             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..01D) -> BB15 (cond), preds={} succs={BB02,BB15}
N004 (  2, 10) [000316] H-----------       t316 =    CNS_INT(h) long   0xD1FFAB1E "Started enumerating project paths." $180
                                                  /--*  t316   long   
N005 (  4, 12) [000317] #---G-------       t317 = *  IND       ref    $1c0
N006 (  2, 10) [000003] H-----------         t3 =    CNS_INT(h) long   0xd1ffab1e method $181
N007 (  1,  1) [000001] ------------         t1 =    CNS_INT   int    2 $42
                                                  /--*  t317   ref    arg1 in rdx
                                                  +--*  t3     long   arg0 in rcx
                                                  +--*  t1     int    arg2 in r8
N008 ( 21, 31) [000002] --CXG-------         t2 = *  CALL      ref    SolutionAnalyzer.Logger.Log $101
               [000459] ------------                 IL_OFFSET void   IL offset: 0xc
N002 (  2, 10) [000008] H-----------         t8 =    CNS_INT(h) long   0xd1ffab1e token $182
                                                  /--*  t8     long   arg0 in rcx
N003 ( 16, 16) [000009] --C---------         t9 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1c1
                                                  /--*  t9     ref    
N005 ( 16, 16) [000011] DA----------              *  STORE_LCL_VAR ref    V07 tmp1         d:2
N003 (  1,  1) [000012] ------------        t12 =    LCL_VAR   ref    V07 tmp1         u:2 $1c1
N004 (  1,  1) [000007] ------------         t7 =    CNS_INT   int    100 $43
                                                  /--*  t12    ref    this in rcx
                                                  +--*  t7     int    arg1 in rdx
N005 ( 16, 10) [000013] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor $VN.Void
               [000460] ------------                 IL_OFFSET void   IL offset: 0x13
N001 (  1,  1) [000014] ------------        t14 =    LCL_VAR   ref    V07 tmp1         u:2 (last use) $1c1
                                                  /--*  t14    ref    
N003 (  1,  3) [000016] DA----------              *  STORE_LCL_VAR ref    V01 loc0         d:2
               [000461] ------------                 IL_OFFSET void   IL offset: 0x14
N001 (  1,  1) [000017] ------------        t17 =    LCL_VAR   ref    V00 arg0         u:1 (last use) $80
                                                  /--*  t17    ref    
N003 (  1,  3) [000019] DA----------              *  STORE_LCL_VAR ref    V02 loc1         d:2
               [000462] ------------                 IL_OFFSET void   IL offset: 0x16
N001 (  1,  1) [000020] ------------        t20 =    CNS_INT   int    0 $40
                                                  /--*  t20    int    
N003 (  1,  3) [000022] DA----------              *  STORE_LCL_VAR int    V03 loc2         d:2
               [000463] ------------                 IL_OFFSET void   IL offset: 0xaa
N001 (  1,  1) [000424] ------------       t424 =    LCL_VAR   ref    V02 loc1         u:2 $80
                                                  /--*  t424   ref    
N002 (  3,  3) [000423] ---X--------       t423 = *  ARR_LENGTH int    $240
                                                  /--*  t423   int    
N004 (  3,  3) [000452] DA-X--------              *  STORE_LCL_VAR int    V29 cse1         d:1
N005 (  1,  1) [000453] ------------       t453 =    LCL_VAR   int    V29 cse1         u:1 $240
N007 (  1,  1) [000457] ------------       t457 =    CNS_INT   int    0 $40
                                                  /--*  t453   int    
                                                  +--*  t457   int    
N008 (  6,  6) [000422] J--X---N----       t422 = *  LE        int    $242
                                                  /--*  t422   int    
N009 (  8,  8) [000426] ---X--------              *  JTRUE     void  

------------ BB02 [01D..02E) -> BB07 (cond), preds={BB01,BB14} succs={BB03,BB07}
N001 (  0,  0) [000437] ------------       t437 =    PHI_ARG   int    V03 loc2         u:4
N002 (  0,  0) [000436] ------------       t436 =    PHI_ARG   int    V03 loc2         u:2 $40
                                                  /--*  t437   int    
                                                  +--*  t436   int    
N003 (  0,  0) [000428] ------------       t428 = *  PHI       int   
                                                  /--*  t428   int    
N005 (  0,  0) [000429] DA----------              *  STORE_LCL_VAR int    V03 loc2         d:3
               [000464] ------------                 IL_OFFSET void   IL offset: 0x1d
N002 (  1,  1) [000324] ------------       t324 =    LCL_VAR   ref    V02 loc1         u:2 $80
N003 (  1,  1) [000325] ------------       t325 =    LCL_VAR   int    V03 loc2         u:3 $280
                                                  /--*  t325   int    
N004 (  2,  3) [000328] ------------       t328 = *  CAST      long <- int $300
N005 (  1,  1) [000329] -------N----       t329 =    CNS_INT   long   3 $340
                                                  /--*  t328   long   
                                                  +--*  t329   long   
N006 (  3,  4) [000330] -------N----       t330 = *  LSH       long   $301
N007 (  1,  1) [000331] ------------       t331 =    CNS_INT   long   16 Fseq[#FirstElem] $342
                                                  /--*  t330   long   
                                                  +--*  t331   long   
N008 (  4,  5) [000332] -------N----       t332 = *  ADD       long   $302
                                                  /--*  t324   ref    
                                                  +--*  t332   long   
N009 (  5,  6) [000333] -------N----       t333 = *  ADD       byref  $3c0
                                                  /--*  t333   byref  
N010 (  6,  7) [000030] a---G-------        t30 = *  IND       ref    <l:$1ca, c:$2c1>
                                                  /--*  t30    ref    
N013 (  6,  7) [000032] DA--G-------              *  STORE_LCL_VAR ref    V04 loc3         d:2
               [000465] ------------                 IL_OFFSET void   IL offset: 0x21
N001 (  1,  1) [000196] ------------       t196 =    LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
                                                  /--*  t196   ref    
N002 (  2,  2) [000197] ---X--------              *  NULLCHECK byte   <l:$1d0, c:$1cf>
N004 (  2, 10) [000335] H-----------       t335 =    CNS_INT(h) long   0xD1FFAB1E ".csproj" $184
                                                  /--*  t335   long   
N005 (  4, 12) [000336] #---G-------       t336 = *  IND       ref    $1d1
N006 (  1,  1) [000033] ------------        t33 =    LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
N007 (  1,  1) [000194] ------------       t194 =    CNS_INT   int    0 $40
                                                  /--*  t336   ref    arg1 in rdx
                                                  +--*  t33    ref    this in rcx
                                                  +--*  t194   int    arg2 in r8
N008 ( 20, 23) [000195] --CXG-------       t195 = *  CALL      int    System.String.EndsWith $401
N009 (  1,  1) [000037] ------------        t37 =    CNS_INT   int    0 $40
                                                  /--*  t195   int    
                                                  +--*  t37    int    
N010 ( 22, 25) [000038] J--XG--N----        t38 = *  EQ        int    $244
                                                  /--*  t38    int    
N011 ( 24, 27) [000039] ---XG-------              *  JTRUE     void  

------------ BB03 [02E..037) -> BB05 (cond), preds={BB02} succs={BB04,BB05}
               [000466] ------------                 IL_OFFSET void   IL offset: 0x2e
N001 (  1,  1) [000199] ------------       t199 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
N002 (  1,  1) [000342] ------------       t342 =    CNS_INT   long   20 field offset Fseq[_version] $348
                                                  /--*  t199   ref    
                                                  +--*  t342   long   
N003 (  2,  2) [000343] -------N----       t343 = *  ADD       byref  $386
                                                  /--*  t343   byref  
N004 (  4,  4) [000200] n---GO------       t200 = *  IND       int    <l:$258, c:$257>
N005 (  1,  1) [000201] ------------       t201 =    CNS_INT   int    1 $46
                                                  /--*  t200   int    
                                                  +--*  t201   int    
N006 (  6,  6) [000202] ----GO------       t202 = *  ADD       int    <l:$25c, c:$25b>
N007 (  1,  1) [000177] ------------       t177 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
N008 (  1,  1) [000340] ------------       t340 =    CNS_INT   long   20 field offset Fseq[_version] $348
                                                  /--*  t177   ref    
                                                  +--*  t340   long   
N009 (  2,  2) [000341] -------N----       t341 = *  ADD       byref  $386
                                                  /--*  t341   byref  
                                                  +--*  t202   int    
               [000467] -A--GO------              *  STOREIND  int   
               [000468] ------------                 IL_OFFSET void   IL offset: 0x2e
N001 (  1,  1) [000205] ------------       t205 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
N002 (  1,  1) [000344] ------------       t344 =    CNS_INT   long   8 field offset Fseq[_items] $343
                                                  /--*  t205   ref    
                                                  +--*  t344   long   
N003 (  2,  2) [000345] -------N----       t345 = *  ADD       byref  $387
                                                  /--*  t345   byref  
N004 (  4,  4) [000206] n---GO------       t206 = *  IND       ref    <l:$1f0, c:$1ef>
                                                  /--*  t206   ref    
N006 (  4,  4) [000208] DA--GO------              *  STORE_LCL_VAR ref    V18 tmp12        d:2
               [000469] ------------                 IL_OFFSET void   IL offset: 0x2e
N001 (  1,  1) [000209] ------------       t209 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
N002 (  1,  1) [000346] ------------       t346 =    CNS_INT   long   16 field offset Fseq[_size] $342
                                                  /--*  t209   ref    
                                                  +--*  t346   long   
N003 (  2,  2) [000347] -------N----       t347 = *  ADD       byref  $383
                                                  /--*  t347   byref  
N004 (  4,  4) [000210] n---GO------       t210 = *  IND       int    <l:$260, c:$25f>
                                                  /--*  t210   int    
N006 (  4,  4) [000212] DA--GO------              *  STORE_LCL_VAR int    V19 tmp13        d:2
               [000470] ------------                 IL_OFFSET void   IL offset: 0x2e
N001 (  1,  1) [000214] ------------       t214 =    LCL_VAR   ref    V18 tmp12        u:2 <l:$1ee, c:$2fc>
                                                  /--*  t214   ref    
N002 (  3,  3) [000215] ---X--------       t215 = *  ARR_LENGTH int    <l:$262, c:$261>
N003 (  1,  1) [000213] ------------       t213 =    LCL_VAR   int    V19 tmp13        u:2 <l:$25e, c:$411>
                                                  /--*  t215   int    
                                                  +--*  t213   int    
N004 (  5,  5) [000216] N--X---N-U--       t216 = *  LE        int    <l:$266, c:$265>
                                                  /--*  t216   int    
N005 (  7,  7) [000217] ---X--------              *  JTRUE     void  

------------ BB04 [02E..02F) -> BB06 (always), preds={BB03} succs={BB06}
               [000471] ------------                 IL_OFFSET void   IL offset: 0x2e
N001 (  1,  1) [000221] ------------       t221 =    LCL_VAR   int    V19 tmp13        u:2 <l:$25e, c:$411>
N002 (  1,  1) [000222] ------------       t222 =    CNS_INT   int    1 $46
                                                  /--*  t221   int    
                                                  +--*  t222   int    
N003 (  3,  3) [000223] ------------       t223 = *  ADD       int    <l:$268, c:$267>
N004 (  1,  1) [000220] ------------       t220 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
N005 (  1,  1) [000348] ------------       t348 =    CNS_INT   long   16 field offset Fseq[_size] $342
                                                  /--*  t220   ref    
                                                  +--*  t348   long   
N006 (  2,  2) [000349] -------N----       t349 = *  ADD       byref  $383
                                                  /--*  t349   byref  
                                                  +--*  t223   int    
               [000472] -A--GO------              *  STOREIND  int   
               [000473] ------------                 IL_OFFSET void   IL offset: 0x2e
N004 (  1,  1) [000226] ------------       t226 =    LCL_VAR   ref    V18 tmp12        u:2 (last use) <l:$1ee, c:$2fc>
N005 (  1,  1) [000227] ------------       t227 =    LCL_VAR   int    V19 tmp13        u:2 (last use) <l:$25e, c:$411>
N006 (  1,  1) [000228] ------------       t228 =    LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>
                                                  /--*  t226   ref    arg0 in rcx
                                                  +--*  t227   int    arg1 in rdx
                                                  +--*  t228   ref    arg2 in r8
N007 ( 17, 11) [000229] --CXG-------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST $1db

------------ BB05 [02E..02F), preds={BB03} succs={BB06}
               [000474] ------------                 IL_OFFSET void   IL offset: 0x2e
N003 (  1,  1) [000218] ------------       t218 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
N004 (  1,  1) [000178] ------------       t178 =    LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>
                                                  /--*  t218   ref    this in rcx
                                                  +--*  t178   ref    arg1 in rdx
N005 ( 16, 10) [000219] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize $VN.Void

------------ BB06 [???..???) -> BB14 (always), preds={BB04,BB05} succs={BB14}

------------ BB07 [037..04B) -> BB10 (cond), preds={BB02} succs={BB08,BB10}
               [000475] ------------                 IL_OFFSET void   IL offset: 0x37
N002 (  1,  1) [000235] ------------       t235 =    CNS_INT   int    1 $46
                                                  /--*  t235   int    arg0 in rcx
N003 ( 15,  7) [000236] --CXG-------       t236 = *  CALL      ref    System.IO.EnumerationOptions.FromSearchOption $2c6
                                                  /--*  t236   ref    
N005 ( 15,  7) [000247] DA-XG-------              *  STORE_LCL_VAR ref    V20 tmp14        d:2
N005 (  2, 10) [000356] H-----------       t356 =    CNS_INT(h) long   0xD1FFAB1E "*" $185
                                                  /--*  t356   long   
N006 (  4, 12) [000357] #---G-------       t357 = *  IND       ref    $1d2
N007 (  1,  1) [000040] ------------        t40 =    LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
N008 (  1,  1) [000244] ------------       t244 =    LCL_VAR   ref    V20 tmp14        u:2 (last use) $2c6
N009 (  1,  1) [000243] ------------       t243 =    CNS_INT   int    2 $42
                                                  /--*  t357   ref    arg1 in rdx
                                                  +--*  t40    ref    arg0 in rcx
                                                  +--*  t244   ref    arg3 in r9
                                                  +--*  t243   int    arg2 in r8
N010 ( 21, 24) [000245] --CXG-------       t245 = *  CALL      ref    System.IO.Directory.InternalEnumeratePaths $2cc
                                                  /--*  t245   ref    
N012 ( 21, 24) [000054] DA-XG-------              *  STORE_LCL_VAR ref    V09 tmp3         d:2
N003 (  2, 10) [000047] ------------        t47 =    CNS_INT   long   0x7ffc7e4c17e0 $345
N004 (  1,  1) [000048] ------------        t48 =    CNS_INT   int    35 $47
                                                  /--*  t47    long   arg0 in rcx
                                                  +--*  t48    int    arg1 in rdx
N005 ( 17, 18) [000049] H-CXG-------        t49 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
                                                  /--*  t49    long   
N007 ( 17, 18) [000443] DA-XG-------              *  STORE_LCL_VAR long   V28 cse0         d:1
N010 (  2, 10) [000364] I-----------       t364 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] $186
                                                  /--*  t364   long   
N011 (  4, 12) [000045] n---G-------        t45 = *  IND       ref    <l:$4c0, c:$2cf>
                                                  /--*  t45    ref    
N014 ( 22, 31) [000052] DA-XG-------              *  STORE_LCL_VAR ref    V08 tmp2         d:2
N001 (  1,  1) [000055] ------------        t55 =    LCL_VAR   ref    V09 tmp3         u:2 (last use) $2cc
                                                  /--*  t55    ref    
N003 (  1,  3) [000062] DA----------              *  STORE_LCL_VAR ref    V10 tmp4         d:2
N001 (  1,  1) [000056] ------------        t56 =    LCL_VAR   ref    V08 tmp2         u:2 <l:$4c0, c:$2cf>
                                                  /--*  t56    ref    
N003 (  1,  3) [000065] DA----------              *  STORE_LCL_VAR ref    V11 tmp5         d:2
N001 (  1,  1) [000057] ------------        t57 =    LCL_VAR   ref    V11 tmp5         u:2 (last use) <l:$4c0, c:$2cf>
N002 (  1,  1) [000058] ------------        t58 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t57    ref    
                                                  +--*  t58    ref    
N003 (  3,  3) [000059] J------N----        t59 = *  NE        int    <l:$246, c:$245>
                                                  /--*  t59    int    
N004 (  5,  5) [000060] ------------              *  JTRUE     void  

------------ BB08 [000..062) -> BB16 (cond), preds={BB07} succs={BB09,BB16}
N002 (  2, 10) [000157] H-----------       t157 =    CNS_INT(h) long   0xd1ffab1e token $187
                                                  /--*  t157   long   arg0 in rcx
N003 ( 16, 16) [000158] --C---------       t158 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1d6
                                                  /--*  t158   ref    
N005 ( 16, 16) [000160] DA----------              *  STORE_LCL_VAR ref    V17 tmp11        d:2
N002 (  2, 10) [000368] I-----------       t368 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] $188
                                                  /--*  t368   long   
N003 (  4, 12) [000150] n---G-------       t150 = *  IND       ref    <l:$4c1, c:$2d5>
                                                  /--*  t150   ref    
N006 (  5, 13) [000262] DA--G-------              *  STORE_LCL_VAR ref    V21 tmp15        d:2
N001 (  1,  1) [000249] ------------       t249 =    LCL_VAR   ref    V21 tmp15        u:2 <l:$4c1, c:$2d5>
N002 (  1,  1) [000250] ------------       t250 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t249   ref    
                                                  +--*  t250   ref    
N003 (  3,  3) [000251] J------N----       t251 = *  EQ        int    <l:$248, c:$247>
                                                  /--*  t251   int    
N004 (  5,  5) [000252] ------------              *  JTRUE     void  

------------ BB09 [000..000), preds={BB08} succs={BB10}
N001 (  1,  1) [000161] ------------       t161 =    LCL_VAR   ref    V17 tmp11        u:2 $1d6
N002 (  1,  1) [000369] ------------       t369 =    CNS_INT   long   8 field offset Fseq[_target] $343
                                                  /--*  t161   ref    
                                                  +--*  t369   long   
N003 (  2,  2) [000370] -------N----       t370 = *  ADD       byref  $381
N005 (  1,  1) [000253] ------------       t253 =    LCL_VAR   ref    V21 tmp15        u:2 (last use) <l:$4c1, c:$2d5>
                                                  /--*  t370   byref  
                                                  +--*  t253   ref    
               [000476] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000256] ------------       t256 =    LCL_VAR   ref    V17 tmp11        u:2 $1d6
N002 (  1,  1) [000371] ------------       t371 =    CNS_INT   long   24 field offset Fseq[_methodPtr] $346
                                                  /--*  t256   ref    
                                                  +--*  t371   long   
N003 (  2,  2) [000372] -------N----       t372 = *  ADD       byref  $382
N005 (  2, 10) [000156] H-----------       t156 =    CNS_INT(h) long   0xd1ffab1e ftn $18a
                                                  /--*  t372   byref  
                                                  +--*  t156   long   
               [000477] -A--GO------              *  STOREIND  long  
               [000478] ------------                 IL_OFFSET void   IL offset: 0x5c
N002 (  2, 10) [000375] I-----------       t375 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] $186
N004 (  1,  1) [000164] ------------       t164 =    LCL_VAR   ref    V17 tmp11        u:2 $1d6
                                                  /--*  t375   long   
                                                  +--*  t164   ref    
               [000479] -A--G-------              *  STOREIND  ref   
N001 (  1,  1) [000163] ------------       t163 =    LCL_VAR   ref    V17 tmp11        u:2 (last use) $1d6
                                                  /--*  t163   ref    
N003 (  1,  3) [000175] DA----------              *  STORE_LCL_VAR ref    V11 tmp5         d:4

------------ BB10 [062..085) -> BB13 (cond), preds={BB07,BB09} succs={BB11,BB13}
N001 (  0,  0) [000441] ------------       t441 =    PHI_ARG   ref    V11 tmp5         u:4 $1d6
N002 (  0,  0) [000438] ------------       t438 =    PHI_ARG   ref    V11 tmp5         u:2 <l:$4c0, c:$2cf>
                                                  /--*  t441   ref    
                                                  +--*  t438   ref    
N003 (  0,  0) [000434] ------------       t434 = *  PHI       ref   
                                                  /--*  t434   ref    
N005 (  0,  0) [000435] DA----------              *  STORE_LCL_VAR ref    V11 tmp5         d:3
N004 (  1,  1) [000070] ------------        t70 =    LCL_VAR   ref    V11 tmp5         u:3 (last use) $4c4
N005 (  1,  1) [000069] ------------        t69 =    LCL_VAR   ref    V10 tmp4         u:2 (last use) $2cc
N006 (  2, 10) [000072] H-----------        t72 =    CNS_INT(h) long   0xd1ffab1e method $18d
                                                  /--*  t70    ref    arg2 in r8
                                                  +--*  t69    ref    arg1 in rdx
                                                  +--*  t72    long   arg0 in rcx
N007 ( 18, 20) [000071] --CXG-------        t71 = *  CALL      ref    System.Linq.Enumerable.Where $2db
                                                  /--*  t71    ref    
N009 ( 18, 20) [000075] DA-XG-------              *  STORE_LCL_VAR ref    V05 loc4         d:2
               [000480] ------------                 IL_OFFSET void   IL offset: 0x69
N003 (  2, 10) [000273] ------------       t273 =    CNS_INT   long   0x7ffc7e783cd8 $347
N004 (  1,  1) [000274] ------------       t274 =    CNS_INT   int    40 $4a
                                                  /--*  t273   long   arg0 in rcx
                                                  +--*  t274   int    arg1 in rdx
N005 ( 17, 18) [000275] H-CXG-------       t275 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $309
N006 (  2, 10) [000381] I-----------       t381 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<Compatible>k__BackingField] $18e
                                                  /--*  t381   long   
N007 (  4, 12) [000271] n---G-------       t271 = *  IND       ref    <l:$4c5, c:$2de>
                                                  /--*  t271   ref    
N010 ( 21, 30) [000283] DA-XG-------              *  STORE_LCL_VAR ref    V23 tmp17        d:2
N005 (  2, 10) [000382] H-----------       t382 =    CNS_INT(h) long   0xD1FFAB1E "*.csproj" $18f
                                                  /--*  t382   long   
N006 (  4, 12) [000383] #---G-------       t383 = *  IND       ref    $1e0
N007 (  1,  1) [000077] ------------        t77 =    LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>
N008 (  1,  1) [000280] ------------       t280 =    LCL_VAR   ref    V23 tmp17        u:2 (last use) <l:$4c5, c:$2de>
N009 (  1,  1) [000279] ------------       t279 =    CNS_INT   int    1 $46
                                                  /--*  t383   ref    arg1 in rdx
                                                  +--*  t77    ref    arg0 in rcx
                                                  +--*  t280   ref    arg3 in r9
                                                  +--*  t279   int    arg2 in r8
N010 ( 21, 24) [000281] --CXG-------       t281 = *  CALL      ref    System.IO.Directory.InternalEnumeratePaths $2e3
                                                  /--*  t281   ref    
N012 ( 21, 24) [000290] DA-XG-------              *  STORE_LCL_VAR ref    V24 tmp18        d:2
N004 (  1,  1) [000285] ------------       t285 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
N005 (  1,  1) [000388] ------------       t388 =    CNS_INT   long   16 field offset Fseq[_size] $342
                                                  /--*  t285   ref    
                                                  +--*  t388   long   
N006 (  2,  2) [000389] -------N----       t389 = *  ADD       byref  $383
                                                  /--*  t389   byref  
N007 (  4,  4) [000286] n---GO------       t286 = *  IND       int    <l:$24c, c:$24b>
N008 (  1,  1) [000076] ------------        t76 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
N009 (  1,  1) [000287] ------------       t287 =    LCL_VAR   ref    V24 tmp18        u:2 (last use) $2e3
                                                  /--*  t286   int    arg1 in rdx
                                                  +--*  t76    ref    this in rcx
                                                  +--*  t287   ref    arg2 in r8
N010 ( 20, 15) [000288] --CXGO------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange $VN.Void
               [000481] ------------                 IL_OFFSET void   IL offset: 0x7a
N002 (  2, 10) [000395] I-----------       t395 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] $191
                                                  /--*  t395   long   
N003 (  4, 12) [000084] n---G-------        t84 = *  IND       ref    <l:$4c6, c:$2e9>
                                                  /--*  t84    ref    
N006 (  5, 13) [000091] DA--G-------              *  STORE_LCL_VAR ref    V12 tmp6         d:2
N001 (  1,  1) [000082] ------------        t82 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t82    ref    
N003 (  1,  3) [000098] DA----------              *  STORE_LCL_VAR ref    V13 tmp7         d:2
N001 (  1,  1) [000083] ------------        t83 =    LCL_VAR   ref    V05 loc4         u:2 (last use) $2db
                                                  /--*  t83    ref    
N003 (  1,  3) [000101] DA----------              *  STORE_LCL_VAR ref    V14 tmp8         d:2
N001 (  1,  1) [000092] ------------        t92 =    LCL_VAR   ref    V12 tmp6         u:2 <l:$4c6, c:$2e9>
                                                  /--*  t92    ref    
N003 (  1,  3) [000104] DA----------              *  STORE_LCL_VAR ref    V15 tmp9         d:2
N001 (  1,  1) [000093] ------------        t93 =    LCL_VAR   ref    V15 tmp9         u:2 (last use) <l:$4c6, c:$2e9>
N002 (  1,  1) [000094] ------------        t94 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t93    ref    
                                                  +--*  t94    ref    
N003 (  3,  3) [000095] J------N----        t95 = *  NE        int    <l:$24e, c:$24d>
                                                  /--*  t95    int    
N004 (  5,  5) [000096] ------------              *  JTRUE     void  

------------ BB11 [000..09C) -> BB16 (cond), preds={BB10} succs={BB12,BB16}
N002 (  2, 10) [000128] H-----------       t128 =    CNS_INT(h) long   0xd1ffab1e token $192
                                                  /--*  t128   long   arg0 in rcx
N003 ( 16, 16) [000129] --C---------       t129 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1e4
                                                  /--*  t129   ref    
N005 ( 16, 16) [000131] DA----------              *  STORE_LCL_VAR ref    V16 tmp10        d:2
N002 (  2, 10) [000399] I-----------       t399 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] $188
                                                  /--*  t399   long   
N003 (  4, 12) [000121] n---G-------       t121 = *  IND       ref    <l:$4c7, c:$2f0>
                                                  /--*  t121   ref    
N006 (  5, 13) [000305] DA--G-------              *  STORE_LCL_VAR ref    V25 tmp19        d:2
N001 (  1,  1) [000292] ------------       t292 =    LCL_VAR   ref    V25 tmp19        u:2 <l:$4c7, c:$2f0>
N002 (  1,  1) [000293] ------------       t293 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t292   ref    
                                                  +--*  t293   ref    
N003 (  3,  3) [000294] J------N----       t294 = *  EQ        int    <l:$250, c:$24f>
                                                  /--*  t294   int    
N004 (  5,  5) [000295] ------------              *  JTRUE     void  

------------ BB12 [000..000), preds={BB11} succs={BB13}
N001 (  1,  1) [000132] ------------       t132 =    LCL_VAR   ref    V16 tmp10        u:2 $1e4
N002 (  1,  1) [000400] ------------       t400 =    CNS_INT   long   8 field offset Fseq[_target] $343
                                                  /--*  t132   ref    
                                                  +--*  t400   long   
N003 (  2,  2) [000401] -------N----       t401 = *  ADD       byref  $384
N005 (  1,  1) [000296] ------------       t296 =    LCL_VAR   ref    V25 tmp19        u:2 (last use) <l:$4c7, c:$2f0>
                                                  /--*  t401   byref  
                                                  +--*  t296   ref    
               [000482] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000299] ------------       t299 =    LCL_VAR   ref    V16 tmp10        u:2 $1e4
N002 (  1,  1) [000402] ------------       t402 =    CNS_INT   long   24 field offset Fseq[_methodPtr] $346
                                                  /--*  t299   ref    
                                                  +--*  t402   long   
N003 (  2,  2) [000403] -------N----       t403 = *  ADD       byref  $385
N005 (  2, 10) [000127] H-----------       t127 =    CNS_INT(h) long   0xd1ffab1e ftn $194
                                                  /--*  t403   byref  
                                                  +--*  t127   long   
               [000483] -A--GO------              *  STOREIND  long  
               [000484] ------------                 IL_OFFSET void   IL offset: 0x96
N002 (  2, 10) [000406] I-----------       t406 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] $191
N004 (  1,  1) [000135] ------------       t135 =    LCL_VAR   ref    V16 tmp10        u:2 $1e4
                                                  /--*  t406   long   
                                                  +--*  t135   ref    
               [000485] -A--G-------              *  STOREIND  ref   
N001 (  1,  1) [000134] ------------       t134 =    LCL_VAR   ref    V16 tmp10        u:2 (last use) $1e4
                                                  /--*  t134   ref    
N003 (  1,  3) [000148] DA----------              *  STORE_LCL_VAR ref    V15 tmp9         d:4

------------ BB13 [09C..0A6), preds={BB10,BB12} succs={BB14}
N001 (  0,  0) [000440] ------------       t440 =    PHI_ARG   ref    V15 tmp9         u:4 $1e4
N002 (  0,  0) [000439] ------------       t439 =    PHI_ARG   ref    V15 tmp9         u:2 <l:$4c6, c:$2e9>
                                                  /--*  t440   ref    
                                                  +--*  t439   ref    
N003 (  0,  0) [000431] ------------       t431 = *  PHI       ref   
                                                  /--*  t431   ref    
N005 (  0,  0) [000432] DA----------              *  STORE_LCL_VAR ref    V15 tmp9         d:3
N004 (  1,  1) [000111] ------------       t111 =    LCL_VAR   ref    V15 tmp9         u:3 (last use) $4ca
N005 (  1,  1) [000110] ------------       t110 =    LCL_VAR   ref    V14 tmp8         u:2 (last use) $2db
N006 (  2, 10) [000113] H-----------       t113 =    CNS_INT(h) long   0xd1ffab1e method $196
                                                  /--*  t111   ref    arg2 in r8
                                                  +--*  t110   ref    arg1 in rdx
                                                  +--*  t113   long   arg0 in rcx
N007 ( 18, 20) [000112] --CXG-------       t112 = *  CALL      ref    System.Linq.Enumerable.SelectMany $2f6
                                                  /--*  t112   ref    
N009 ( 18, 20) [000313] DA-XG-------              *  STORE_LCL_VAR ref    V27 tmp21        d:2
N004 (  1,  1) [000308] ------------       t308 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
N005 (  1,  1) [000410] ------------       t410 =    CNS_INT   long   16 field offset Fseq[_size] $342
                                                  /--*  t308   ref    
                                                  +--*  t410   long   
N006 (  2,  2) [000411] -------N----       t411 = *  ADD       byref  $383
                                                  /--*  t411   byref  
N007 (  4,  4) [000309] n---GO------       t309 = *  IND       int    <l:$254, c:$253>
N008 (  1,  1) [000109] ------------       t109 =    LCL_VAR   ref    V01 loc0         u:2 (last use) $1c1
N009 (  1,  1) [000310] ------------       t310 =    LCL_VAR   ref    V27 tmp21        u:2 (last use) $2f6
                                                  /--*  t309   int    arg1 in rdx
                                                  +--*  t109   ref    this in rcx
                                                  +--*  t310   ref    arg2 in r8
N010 ( 20, 15) [000311] --CXGO------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange $VN.Void

------------ BB14 [0A6..0B3) -> BB02 (cond), preds={BB06,BB13} succs={BB15,BB02}
               [000486] ------------                 IL_OFFSET void   IL offset: 0xa6
N001 (  1,  1) [000116] ------------       t116 =    LCL_VAR   int    V03 loc2         u:3 (last use) $280
N002 (  1,  1) [000117] ------------       t117 =    CNS_INT   int    1 $46
                                                  /--*  t116   int    
                                                  +--*  t117   int    
N003 (  3,  3) [000118] ------------       t118 = *  ADD       int    $269
                                                  /--*  t118   int    
N005 (  3,  3) [000120] DA----------              *  STORE_LCL_VAR int    V03 loc2         d:4
               [000487] ------------                 IL_OFFSET void   IL offset: 0xaa
N001 (  1,  1) [000456] ------------       t456 =    LCL_VAR   int    V29 cse1         u:1 $200
N002 (  1,  1) [000023] ------------        t23 =    LCL_VAR   int    V03 loc2         u:4 $269
                                                  /--*  t456   int    
                                                  +--*  t23    int    
N003 (  3,  3) [000026] J------N----        t26 = *  GT        int    $26b
                                                  /--*  t26    int    
N004 (  5,  5) [000027] ------------              *  JTRUE     void  

------------ BB15 [0B3..0C7) (return), preds={BB01,BB14} succs={}
               [000488] ------------                 IL_OFFSET void   IL offset: 0xb3
N003 (  1,  1) [000180] ------------       t180 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
N004 (  2, 10) [000182] H-----------       t182 =    CNS_INT(h) long   0xd1ffab1e method $19c
                                                  /--*  t180   ref    arg1 in rdx
                                                  +--*  t182   long   arg0 in rcx
N005 ( 17, 18) [000181] --CXG-------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle $VN.Void
N004 (  2, 10) [000417] H-----------       t417 =    CNS_INT(h) long   0xD1FFAB1E "Enumerated and shuffled the project paths." $19d
                                                  /--*  t417   long   
N005 (  4, 12) [000418] #---G-------       t418 = *  IND       ref    $1f9
N006 (  2, 10) [000186] H-----------       t186 =    CNS_INT(h) long   0xd1ffab1e method $181
N007 (  1,  1) [000184] ------------       t184 =    CNS_INT   int    2 $42
                                                  /--*  t418   ref    arg1 in rdx
                                                  +--*  t186   long   arg0 in rcx
                                                  +--*  t184   int    arg2 in r8
N008 ( 21, 31) [000185] --CXG-------       t185 = *  CALL      ref    SolutionAnalyzer.Logger.Log $10d
               [000489] ------------                 IL_OFFSET void   IL offset: 0xc5
N001 (  1,  1) [000190] ------------       t190 =    LCL_VAR   ref    V01 loc0         u:2 (last use) $1c1
                                                  /--*  t190   ref    
N002 (  2,  2) [000191] ------------              *  RETURN    ref    $10f

------------ BB16 [000..000) (throw), preds={BB08,BB11} succs={}
N001 ( 14,  5) [000303] --CXG-------                 CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance $VN.Void

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist

*************** Starting PHASE Do 'simple' lowering
Bumping outgoingArgSpaceSize to 32 for call [000002]
outgoingArgSpaceSize 32 sufficient for call [000009], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000013], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000195], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000229], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000219], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000236], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000245], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000049], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000158], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000071], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000275], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000281], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000288], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000129], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000112], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000311], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000181], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000185], which needs 32
outgoingArgSpaceSize 32 sufficient for call [000303], which needs 32

*************** Finishing PHASE Do 'simple' lowering
*************** In fgDebugCheckBBlist
Trees before Lowering nodeinfo

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB15 ( cond )                     i label target hascall gcsafe idxlen newobj LIR 
BB02 [0001]  2       BB01,BB14             4     0 [01D..02E)-> BB07 ( cond )                     i Loop label target hascall gcsafe idxlen nullcheck bwd bwd-target LIR 
BB03 [0002]  1       BB02                  2     0 [02E..037)-> BB05 ( cond )                     i gcsafe idxlen bwd LIR 
BB04 [0013]  1       BB03                  2     0 [02E..02F)-> BB06 (always)                     i hascall gcsafe bwd LIR 
BB05 [0014]  1       BB03                  2     0 [02E..02F)                                     i label target hascall gcsafe bwd LIR 
BB06 [0015]  2       BB04,BB05             2     0 [???..???)-> BB14 (always)                     internal label target gcsafe bwd LIR 
BB07 [0003]  1       BB02                  2     0 [037..04B)-> BB10 ( cond )                     i label target hascall gcsafe bwd LIR 
BB08 [0004]  1       BB07                  2     0 [000..062)-> BB16 ( cond )                     i hascall gcsafe newobj bwd LIR 
BB09 [0020]  1       BB08                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd LIR 
BB10 [0005]  2       BB07,BB09             2     0 [062..085)-> BB13 ( cond )                     i label target hascall gcsafe bwd LIR 
BB11 [0006]  1       BB10                  2     0 [000..09C)-> BB16 ( cond )                     i hascall gcsafe newobj bwd LIR 
BB12 [0028]  1       BB11                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd LIR 
BB13 [0007]  2       BB10,BB12             2     0 [09C..0A6)                                     i label target hascall gcsafe bwd LIR 
BB14 [0008]  2       BB06,BB13             4     0 [0A6..0B3)-> BB02 ( cond )                     i label target gcsafe idxlen bwd LIR 
BB15 [0010]  2       BB01,BB14             1       [0B3..0C7)        (return)                     i label target hascall gcsafe LIR 
BB16 [0027]  2       BB08,BB11             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..01D) -> BB15 (cond), preds={} succs={BB02,BB15}
N004 (  2, 10) [000316] H-----------       t316 =    CNS_INT(h) long   0xD1FFAB1E "Started enumerating project paths." $180
                                                  /--*  t316   long   
N005 (  4, 12) [000317] #---G-------       t317 = *  IND       ref    $1c0
N006 (  2, 10) [000003] H-----------         t3 =    CNS_INT(h) long   0xd1ffab1e method $181
N007 (  1,  1) [000001] ------------         t1 =    CNS_INT   int    2 $42
                                                  /--*  t317   ref    arg1 in rdx
                                                  +--*  t3     long   arg0 in rcx
                                                  +--*  t1     int    arg2 in r8
N008 ( 21, 31) [000002] --CXG-------         t2 = *  CALL      ref    SolutionAnalyzer.Logger.Log $101
               [000459] ------------                 IL_OFFSET void   IL offset: 0xc
N002 (  2, 10) [000008] H-----------         t8 =    CNS_INT(h) long   0xd1ffab1e token $182
                                                  /--*  t8     long   arg0 in rcx
N003 ( 16, 16) [000009] --C---------         t9 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1c1
                                                  /--*  t9     ref    
N005 ( 16, 16) [000011] DA----------              *  STORE_LCL_VAR ref    V07 tmp1         d:2
N003 (  1,  1) [000012] ------------        t12 =    LCL_VAR   ref    V07 tmp1         u:2 $1c1
N004 (  1,  1) [000007] ------------         t7 =    CNS_INT   int    100 $43
                                                  /--*  t12    ref    this in rcx
                                                  +--*  t7     int    arg1 in rdx
N005 ( 16, 10) [000013] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor $VN.Void
               [000460] ------------                 IL_OFFSET void   IL offset: 0x13
N001 (  1,  1) [000014] ------------        t14 =    LCL_VAR   ref    V07 tmp1         u:2 (last use) $1c1
                                                  /--*  t14    ref    
N003 (  1,  3) [000016] DA----------              *  STORE_LCL_VAR ref    V01 loc0         d:2
               [000461] ------------                 IL_OFFSET void   IL offset: 0x14
N001 (  1,  1) [000017] ------------        t17 =    LCL_VAR   ref    V00 arg0         u:1 (last use) $80
                                                  /--*  t17    ref    
N003 (  1,  3) [000019] DA----------              *  STORE_LCL_VAR ref    V02 loc1         d:2
               [000462] ------------                 IL_OFFSET void   IL offset: 0x16
N001 (  1,  1) [000020] ------------        t20 =    CNS_INT   int    0 $40
                                                  /--*  t20    int    
N003 (  1,  3) [000022] DA----------              *  STORE_LCL_VAR int    V03 loc2         d:2
               [000463] ------------                 IL_OFFSET void   IL offset: 0xaa
N001 (  1,  1) [000424] ------------       t424 =    LCL_VAR   ref    V02 loc1         u:2 $80
               [000490] ------------       t490 =    CNS_INT   long   8
                                                  /--*  t424   ref    
                                                  +--*  t490   long   
               [000491] ------------       t491 = *  ADD       ref   
                                                  /--*  t491   ref    
N002 (  3,  3) [000423] ---X--------       t423 = *  IND       int    $240
                                                  /--*  t423   int    
N004 (  3,  3) [000452] DA-X--------              *  STORE_LCL_VAR int    V29 cse1         d:1
N005 (  1,  1) [000453] ------------       t453 =    LCL_VAR   int    V29 cse1         u:1 $240
N007 (  1,  1) [000457] ------------       t457 =    CNS_INT   int    0 $40
                                                  /--*  t453   int    
                                                  +--*  t457   int    
N008 (  6,  6) [000422] J--X---N----       t422 = *  LE        int    $242
                                                  /--*  t422   int    
N009 (  8,  8) [000426] ---X--------              *  JTRUE     void  

------------ BB02 [01D..02E) -> BB07 (cond), preds={BB01,BB14} succs={BB03,BB07}
N001 (  0,  0) [000437] ------------       t437 =    PHI_ARG   int    V03 loc2         u:4
N002 (  0,  0) [000436] ------------       t436 =    PHI_ARG   int    V03 loc2         u:2 $40
                                                  /--*  t437   int    
                                                  +--*  t436   int    
N003 (  0,  0) [000428] ------------       t428 = *  PHI       int   
                                                  /--*  t428   int    
N005 (  0,  0) [000429] DA----------              *  STORE_LCL_VAR int    V03 loc2         d:3
               [000464] ------------                 IL_OFFSET void   IL offset: 0x1d
N002 (  1,  1) [000324] ------------       t324 =    LCL_VAR   ref    V02 loc1         u:2 $80
N003 (  1,  1) [000325] ------------       t325 =    LCL_VAR   int    V03 loc2         u:3 $280
                                                  /--*  t325   int    
N004 (  2,  3) [000328] ------------       t328 = *  CAST      long <- int $300
N005 (  1,  1) [000329] -------N----       t329 =    CNS_INT   long   3 $340
                                                  /--*  t328   long   
                                                  +--*  t329   long   
N006 (  3,  4) [000330] -------N----       t330 = *  LSH       long   $301
N007 (  1,  1) [000331] ------------       t331 =    CNS_INT   long   16 Fseq[#FirstElem] $342
                                                  /--*  t330   long   
                                                  +--*  t331   long   
N008 (  4,  5) [000332] -------N----       t332 = *  ADD       long   $302
                                                  /--*  t324   ref    
                                                  +--*  t332   long   
N009 (  5,  6) [000333] -------N----       t333 = *  ADD       byref  $3c0
                                                  /--*  t333   byref  
N010 (  6,  7) [000030] a---G-------        t30 = *  IND       ref    <l:$1ca, c:$2c1>
                                                  /--*  t30    ref    
N013 (  6,  7) [000032] DA--G-------              *  STORE_LCL_VAR ref    V04 loc3         d:2
               [000465] ------------                 IL_OFFSET void   IL offset: 0x21
N001 (  1,  1) [000196] ------------       t196 =    LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
                                                  /--*  t196   ref    
N002 (  2,  2) [000197] ---X--------              *  NULLCHECK byte   <l:$1d0, c:$1cf>
N004 (  2, 10) [000335] H-----------       t335 =    CNS_INT(h) long   0xD1FFAB1E ".csproj" $184
                                                  /--*  t335   long   
N005 (  4, 12) [000336] #---G-------       t336 = *  IND       ref    $1d1
N006 (  1,  1) [000033] ------------        t33 =    LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
N007 (  1,  1) [000194] ------------       t194 =    CNS_INT   int    0 $40
                                                  /--*  t336   ref    arg1 in rdx
                                                  +--*  t33    ref    this in rcx
                                                  +--*  t194   int    arg2 in r8
N008 ( 20, 23) [000195] --CXG-------       t195 = *  CALL      int    System.String.EndsWith $401
N009 (  1,  1) [000037] ------------        t37 =    CNS_INT   int    0 $40
                                                  /--*  t195   int    
                                                  +--*  t37    int    
N010 ( 22, 25) [000038] J--XG--N----        t38 = *  EQ        int    $244
                                                  /--*  t38    int    
N011 ( 24, 27) [000039] ---XG-------              *  JTRUE     void  

------------ BB03 [02E..037) -> BB05 (cond), preds={BB02} succs={BB04,BB05}
               [000466] ------------                 IL_OFFSET void   IL offset: 0x2e
N001 (  1,  1) [000199] ------------       t199 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
N002 (  1,  1) [000342] ------------       t342 =    CNS_INT   long   20 field offset Fseq[_version] $348
                                                  /--*  t199   ref    
                                                  +--*  t342   long   
N003 (  2,  2) [000343] -------N----       t343 = *  ADD       byref  $386
                                                  /--*  t343   byref  
N004 (  4,  4) [000200] n---GO------       t200 = *  IND       int    <l:$258, c:$257>
N005 (  1,  1) [000201] ------------       t201 =    CNS_INT   int    1 $46
                                                  /--*  t200   int    
                                                  +--*  t201   int    
N006 (  6,  6) [000202] ----GO------       t202 = *  ADD       int    <l:$25c, c:$25b>
N007 (  1,  1) [000177] ------------       t177 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
N008 (  1,  1) [000340] ------------       t340 =    CNS_INT   long   20 field offset Fseq[_version] $348
                                                  /--*  t177   ref    
                                                  +--*  t340   long   
N009 (  2,  2) [000341] -------N----       t341 = *  ADD       byref  $386
                                                  /--*  t341   byref  
                                                  +--*  t202   int    
               [000467] -A--GO------              *  STOREIND  int   
               [000468] ------------                 IL_OFFSET void   IL offset: 0x2e
N001 (  1,  1) [000205] ------------       t205 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
N002 (  1,  1) [000344] ------------       t344 =    CNS_INT   long   8 field offset Fseq[_items] $343
                                                  /--*  t205   ref    
                                                  +--*  t344   long   
N003 (  2,  2) [000345] -------N----       t345 = *  ADD       byref  $387
                                                  /--*  t345   byref  
N004 (  4,  4) [000206] n---GO------       t206 = *  IND       ref    <l:$1f0, c:$1ef>
                                                  /--*  t206   ref    
N006 (  4,  4) [000208] DA--GO------              *  STORE_LCL_VAR ref    V18 tmp12        d:2
               [000469] ------------                 IL_OFFSET void   IL offset: 0x2e
N001 (  1,  1) [000209] ------------       t209 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
N002 (  1,  1) [000346] ------------       t346 =    CNS_INT   long   16 field offset Fseq[_size] $342
                                                  /--*  t209   ref    
                                                  +--*  t346   long   
N003 (  2,  2) [000347] -------N----       t347 = *  ADD       byref  $383
                                                  /--*  t347   byref  
N004 (  4,  4) [000210] n---GO------       t210 = *  IND       int    <l:$260, c:$25f>
                                                  /--*  t210   int    
N006 (  4,  4) [000212] DA--GO------              *  STORE_LCL_VAR int    V19 tmp13        d:2
               [000470] ------------                 IL_OFFSET void   IL offset: 0x2e
N001 (  1,  1) [000214] ------------       t214 =    LCL_VAR   ref    V18 tmp12        u:2 <l:$1ee, c:$2fc>
               [000492] ------------       t492 =    CNS_INT   long   8
                                                  /--*  t214   ref    
                                                  +--*  t492   long   
               [000493] ------------       t493 = *  ADD       ref   
                                                  /--*  t493   ref    
N002 (  3,  3) [000215] ---X--------       t215 = *  IND       int    <l:$262, c:$261>
N003 (  1,  1) [000213] ------------       t213 =    LCL_VAR   int    V19 tmp13        u:2 <l:$25e, c:$411>
                                                  /--*  t215   int    
                                                  +--*  t213   int    
N004 (  5,  5) [000216] N--X---N-U--       t216 = *  LE        int    <l:$266, c:$265>
                                                  /--*  t216   int    
N005 (  7,  7) [000217] ---X--------              *  JTRUE     void  

------------ BB04 [02E..02F) -> BB06 (always), preds={BB03} succs={BB06}
               [000471] ------------                 IL_OFFSET void   IL offset: 0x2e
N001 (  1,  1) [000221] ------------       t221 =    LCL_VAR   int    V19 tmp13        u:2 <l:$25e, c:$411>
N002 (  1,  1) [000222] ------------       t222 =    CNS_INT   int    1 $46
                                                  /--*  t221   int    
                                                  +--*  t222   int    
N003 (  3,  3) [000223] ------------       t223 = *  ADD       int    <l:$268, c:$267>
N004 (  1,  1) [000220] ------------       t220 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
N005 (  1,  1) [000348] ------------       t348 =    CNS_INT   long   16 field offset Fseq[_size] $342
                                                  /--*  t220   ref    
                                                  +--*  t348   long   
N006 (  2,  2) [000349] -------N----       t349 = *  ADD       byref  $383
                                                  /--*  t349   byref  
                                                  +--*  t223   int    
               [000472] -A--GO------              *  STOREIND  int   
               [000473] ------------                 IL_OFFSET void   IL offset: 0x2e
N004 (  1,  1) [000226] ------------       t226 =    LCL_VAR   ref    V18 tmp12        u:2 (last use) <l:$1ee, c:$2fc>
N005 (  1,  1) [000227] ------------       t227 =    LCL_VAR   int    V19 tmp13        u:2 (last use) <l:$25e, c:$411>
N006 (  1,  1) [000228] ------------       t228 =    LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>
                                                  /--*  t226   ref    arg0 in rcx
                                                  +--*  t227   int    arg1 in rdx
                                                  +--*  t228   ref    arg2 in r8
N007 ( 17, 11) [000229] --CXG-------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST $1db

------------ BB05 [02E..02F), preds={BB03} succs={BB06}
               [000474] ------------                 IL_OFFSET void   IL offset: 0x2e
N003 (  1,  1) [000218] ------------       t218 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
N004 (  1,  1) [000178] ------------       t178 =    LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>
                                                  /--*  t218   ref    this in rcx
                                                  +--*  t178   ref    arg1 in rdx
N005 ( 16, 10) [000219] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize $VN.Void

------------ BB06 [???..???) -> BB14 (always), preds={BB04,BB05} succs={BB14}

------------ BB07 [037..04B) -> BB10 (cond), preds={BB02} succs={BB08,BB10}
               [000475] ------------                 IL_OFFSET void   IL offset: 0x37
N002 (  1,  1) [000235] ------------       t235 =    CNS_INT   int    1 $46
                                                  /--*  t235   int    arg0 in rcx
N003 ( 15,  7) [000236] --CXG-------       t236 = *  CALL      ref    System.IO.EnumerationOptions.FromSearchOption $2c6
                                                  /--*  t236   ref    
N005 ( 15,  7) [000247] DA-XG-------              *  STORE_LCL_VAR ref    V20 tmp14        d:2
N005 (  2, 10) [000356] H-----------       t356 =    CNS_INT(h) long   0xD1FFAB1E "*" $185
                                                  /--*  t356   long   
N006 (  4, 12) [000357] #---G-------       t357 = *  IND       ref    $1d2
N007 (  1,  1) [000040] ------------        t40 =    LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
N008 (  1,  1) [000244] ------------       t244 =    LCL_VAR   ref    V20 tmp14        u:2 (last use) $2c6
N009 (  1,  1) [000243] ------------       t243 =    CNS_INT   int    2 $42
                                                  /--*  t357   ref    arg1 in rdx
                                                  +--*  t40    ref    arg0 in rcx
                                                  +--*  t244   ref    arg3 in r9
                                                  +--*  t243   int    arg2 in r8
N010 ( 21, 24) [000245] --CXG-------       t245 = *  CALL      ref    System.IO.Directory.InternalEnumeratePaths $2cc
                                                  /--*  t245   ref    
N012 ( 21, 24) [000054] DA-XG-------              *  STORE_LCL_VAR ref    V09 tmp3         d:2
N003 (  2, 10) [000047] ------------        t47 =    CNS_INT   long   0x7ffc7e4c17e0 $345
N004 (  1,  1) [000048] ------------        t48 =    CNS_INT   int    35 $47
                                                  /--*  t47    long   arg0 in rcx
                                                  +--*  t48    int    arg1 in rdx
N005 ( 17, 18) [000049] H-CXG-------        t49 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
                                                  /--*  t49    long   
N007 ( 17, 18) [000443] DA-XG-------              *  STORE_LCL_VAR long   V28 cse0         d:1
N010 (  2, 10) [000364] I-----------       t364 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] $186
                                                  /--*  t364   long   
N011 (  4, 12) [000045] n---G-------        t45 = *  IND       ref    <l:$4c0, c:$2cf>
                                                  /--*  t45    ref    
N014 ( 22, 31) [000052] DA-XG-------              *  STORE_LCL_VAR ref    V08 tmp2         d:2
N001 (  1,  1) [000055] ------------        t55 =    LCL_VAR   ref    V09 tmp3         u:2 (last use) $2cc
                                                  /--*  t55    ref    
N003 (  1,  3) [000062] DA----------              *  STORE_LCL_VAR ref    V10 tmp4         d:2
N001 (  1,  1) [000056] ------------        t56 =    LCL_VAR   ref    V08 tmp2         u:2 <l:$4c0, c:$2cf>
                                                  /--*  t56    ref    
N003 (  1,  3) [000065] DA----------              *  STORE_LCL_VAR ref    V11 tmp5         d:2
N001 (  1,  1) [000057] ------------        t57 =    LCL_VAR   ref    V11 tmp5         u:2 (last use) <l:$4c0, c:$2cf>
N002 (  1,  1) [000058] ------------        t58 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t57    ref    
                                                  +--*  t58    ref    
N003 (  3,  3) [000059] J------N----        t59 = *  NE        int    <l:$246, c:$245>
                                                  /--*  t59    int    
N004 (  5,  5) [000060] ------------              *  JTRUE     void  

------------ BB08 [000..062) -> BB16 (cond), preds={BB07} succs={BB09,BB16}
N002 (  2, 10) [000157] H-----------       t157 =    CNS_INT(h) long   0xd1ffab1e token $187
                                                  /--*  t157   long   arg0 in rcx
N003 ( 16, 16) [000158] --C---------       t158 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1d6
                                                  /--*  t158   ref    
N005 ( 16, 16) [000160] DA----------              *  STORE_LCL_VAR ref    V17 tmp11        d:2
N002 (  2, 10) [000368] I-----------       t368 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] $188
                                                  /--*  t368   long   
N003 (  4, 12) [000150] n---G-------       t150 = *  IND       ref    <l:$4c1, c:$2d5>
                                                  /--*  t150   ref    
N006 (  5, 13) [000262] DA--G-------              *  STORE_LCL_VAR ref    V21 tmp15        d:2
N001 (  1,  1) [000249] ------------       t249 =    LCL_VAR   ref    V21 tmp15        u:2 <l:$4c1, c:$2d5>
N002 (  1,  1) [000250] ------------       t250 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t249   ref    
                                                  +--*  t250   ref    
N003 (  3,  3) [000251] J------N----       t251 = *  EQ        int    <l:$248, c:$247>
                                                  /--*  t251   int    
N004 (  5,  5) [000252] ------------              *  JTRUE     void  

------------ BB09 [000..000), preds={BB08} succs={BB10}
N001 (  1,  1) [000161] ------------       t161 =    LCL_VAR   ref    V17 tmp11        u:2 $1d6
N002 (  1,  1) [000369] ------------       t369 =    CNS_INT   long   8 field offset Fseq[_target] $343
                                                  /--*  t161   ref    
                                                  +--*  t369   long   
N003 (  2,  2) [000370] -------N----       t370 = *  ADD       byref  $381
N005 (  1,  1) [000253] ------------       t253 =    LCL_VAR   ref    V21 tmp15        u:2 (last use) <l:$4c1, c:$2d5>
                                                  /--*  t370   byref  
                                                  +--*  t253   ref    
               [000476] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000256] ------------       t256 =    LCL_VAR   ref    V17 tmp11        u:2 $1d6
N002 (  1,  1) [000371] ------------       t371 =    CNS_INT   long   24 field offset Fseq[_methodPtr] $346
                                                  /--*  t256   ref    
                                                  +--*  t371   long   
N003 (  2,  2) [000372] -------N----       t372 = *  ADD       byref  $382
N005 (  2, 10) [000156] H-----------       t156 =    CNS_INT(h) long   0xd1ffab1e ftn $18a
                                                  /--*  t372   byref  
                                                  +--*  t156   long   
               [000477] -A--GO------              *  STOREIND  long  
               [000478] ------------                 IL_OFFSET void   IL offset: 0x5c
N002 (  2, 10) [000375] I-----------       t375 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] $186
N004 (  1,  1) [000164] ------------       t164 =    LCL_VAR   ref    V17 tmp11        u:2 $1d6
                                                  /--*  t375   long   
                                                  +--*  t164   ref    
               [000479] -A--G-------              *  STOREIND  ref   
N001 (  1,  1) [000163] ------------       t163 =    LCL_VAR   ref    V17 tmp11        u:2 (last use) $1d6
                                                  /--*  t163   ref    
N003 (  1,  3) [000175] DA----------              *  STORE_LCL_VAR ref    V11 tmp5         d:4

------------ BB10 [062..085) -> BB13 (cond), preds={BB07,BB09} succs={BB11,BB13}
N001 (  0,  0) [000441] ------------       t441 =    PHI_ARG   ref    V11 tmp5         u:4 $1d6
N002 (  0,  0) [000438] ------------       t438 =    PHI_ARG   ref    V11 tmp5         u:2 <l:$4c0, c:$2cf>
                                                  /--*  t441   ref    
                                                  +--*  t438   ref    
N003 (  0,  0) [000434] ------------       t434 = *  PHI       ref   
                                                  /--*  t434   ref    
N005 (  0,  0) [000435] DA----------              *  STORE_LCL_VAR ref    V11 tmp5         d:3
N004 (  1,  1) [000070] ------------        t70 =    LCL_VAR   ref    V11 tmp5         u:3 (last use) $4c4
N005 (  1,  1) [000069] ------------        t69 =    LCL_VAR   ref    V10 tmp4         u:2 (last use) $2cc
N006 (  2, 10) [000072] H-----------        t72 =    CNS_INT(h) long   0xd1ffab1e method $18d
                                                  /--*  t70    ref    arg2 in r8
                                                  +--*  t69    ref    arg1 in rdx
                                                  +--*  t72    long   arg0 in rcx
N007 ( 18, 20) [000071] --CXG-------        t71 = *  CALL      ref    System.Linq.Enumerable.Where $2db
                                                  /--*  t71    ref    
N009 ( 18, 20) [000075] DA-XG-------              *  STORE_LCL_VAR ref    V05 loc4         d:2
               [000480] ------------                 IL_OFFSET void   IL offset: 0x69
N003 (  2, 10) [000273] ------------       t273 =    CNS_INT   long   0x7ffc7e783cd8 $347
N004 (  1,  1) [000274] ------------       t274 =    CNS_INT   int    40 $4a
                                                  /--*  t273   long   arg0 in rcx
                                                  +--*  t274   int    arg1 in rdx
N005 ( 17, 18) [000275] H-CXG-------       t275 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $309
N006 (  2, 10) [000381] I-----------       t381 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<Compatible>k__BackingField] $18e
                                                  /--*  t381   long   
N007 (  4, 12) [000271] n---G-------       t271 = *  IND       ref    <l:$4c5, c:$2de>
                                                  /--*  t271   ref    
N010 ( 21, 30) [000283] DA-XG-------              *  STORE_LCL_VAR ref    V23 tmp17        d:2
N005 (  2, 10) [000382] H-----------       t382 =    CNS_INT(h) long   0xD1FFAB1E "*.csproj" $18f
                                                  /--*  t382   long   
N006 (  4, 12) [000383] #---G-------       t383 = *  IND       ref    $1e0
N007 (  1,  1) [000077] ------------        t77 =    LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>
N008 (  1,  1) [000280] ------------       t280 =    LCL_VAR   ref    V23 tmp17        u:2 (last use) <l:$4c5, c:$2de>
N009 (  1,  1) [000279] ------------       t279 =    CNS_INT   int    1 $46
                                                  /--*  t383   ref    arg1 in rdx
                                                  +--*  t77    ref    arg0 in rcx
                                                  +--*  t280   ref    arg3 in r9
                                                  +--*  t279   int    arg2 in r8
N010 ( 21, 24) [000281] --CXG-------       t281 = *  CALL      ref    System.IO.Directory.InternalEnumeratePaths $2e3
                                                  /--*  t281   ref    
N012 ( 21, 24) [000290] DA-XG-------              *  STORE_LCL_VAR ref    V24 tmp18        d:2
N004 (  1,  1) [000285] ------------       t285 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
N005 (  1,  1) [000388] ------------       t388 =    CNS_INT   long   16 field offset Fseq[_size] $342
                                                  /--*  t285   ref    
                                                  +--*  t388   long   
N006 (  2,  2) [000389] -------N----       t389 = *  ADD       byref  $383
                                                  /--*  t389   byref  
N007 (  4,  4) [000286] n---GO------       t286 = *  IND       int    <l:$24c, c:$24b>
N008 (  1,  1) [000076] ------------        t76 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
N009 (  1,  1) [000287] ------------       t287 =    LCL_VAR   ref    V24 tmp18        u:2 (last use) $2e3
                                                  /--*  t286   int    arg1 in rdx
                                                  +--*  t76    ref    this in rcx
                                                  +--*  t287   ref    arg2 in r8
N010 ( 20, 15) [000288] --CXGO------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange $VN.Void
               [000481] ------------                 IL_OFFSET void   IL offset: 0x7a
N002 (  2, 10) [000395] I-----------       t395 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] $191
                                                  /--*  t395   long   
N003 (  4, 12) [000084] n---G-------        t84 = *  IND       ref    <l:$4c6, c:$2e9>
                                                  /--*  t84    ref    
N006 (  5, 13) [000091] DA--G-------              *  STORE_LCL_VAR ref    V12 tmp6         d:2
N001 (  1,  1) [000082] ------------        t82 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t82    ref    
N003 (  1,  3) [000098] DA----------              *  STORE_LCL_VAR ref    V13 tmp7         d:2
N001 (  1,  1) [000083] ------------        t83 =    LCL_VAR   ref    V05 loc4         u:2 (last use) $2db
                                                  /--*  t83    ref    
N003 (  1,  3) [000101] DA----------              *  STORE_LCL_VAR ref    V14 tmp8         d:2
N001 (  1,  1) [000092] ------------        t92 =    LCL_VAR   ref    V12 tmp6         u:2 <l:$4c6, c:$2e9>
                                                  /--*  t92    ref    
N003 (  1,  3) [000104] DA----------              *  STORE_LCL_VAR ref    V15 tmp9         d:2
N001 (  1,  1) [000093] ------------        t93 =    LCL_VAR   ref    V15 tmp9         u:2 (last use) <l:$4c6, c:$2e9>
N002 (  1,  1) [000094] ------------        t94 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t93    ref    
                                                  +--*  t94    ref    
N003 (  3,  3) [000095] J------N----        t95 = *  NE        int    <l:$24e, c:$24d>
                                                  /--*  t95    int    
N004 (  5,  5) [000096] ------------              *  JTRUE     void  

------------ BB11 [000..09C) -> BB16 (cond), preds={BB10} succs={BB12,BB16}
N002 (  2, 10) [000128] H-----------       t128 =    CNS_INT(h) long   0xd1ffab1e token $192
                                                  /--*  t128   long   arg0 in rcx
N003 ( 16, 16) [000129] --C---------       t129 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1e4
                                                  /--*  t129   ref    
N005 ( 16, 16) [000131] DA----------              *  STORE_LCL_VAR ref    V16 tmp10        d:2
N002 (  2, 10) [000399] I-----------       t399 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] $188
                                                  /--*  t399   long   
N003 (  4, 12) [000121] n---G-------       t121 = *  IND       ref    <l:$4c7, c:$2f0>
                                                  /--*  t121   ref    
N006 (  5, 13) [000305] DA--G-------              *  STORE_LCL_VAR ref    V25 tmp19        d:2
N001 (  1,  1) [000292] ------------       t292 =    LCL_VAR   ref    V25 tmp19        u:2 <l:$4c7, c:$2f0>
N002 (  1,  1) [000293] ------------       t293 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t292   ref    
                                                  +--*  t293   ref    
N003 (  3,  3) [000294] J------N----       t294 = *  EQ        int    <l:$250, c:$24f>
                                                  /--*  t294   int    
N004 (  5,  5) [000295] ------------              *  JTRUE     void  

------------ BB12 [000..000), preds={BB11} succs={BB13}
N001 (  1,  1) [000132] ------------       t132 =    LCL_VAR   ref    V16 tmp10        u:2 $1e4
N002 (  1,  1) [000400] ------------       t400 =    CNS_INT   long   8 field offset Fseq[_target] $343
                                                  /--*  t132   ref    
                                                  +--*  t400   long   
N003 (  2,  2) [000401] -------N----       t401 = *  ADD       byref  $384
N005 (  1,  1) [000296] ------------       t296 =    LCL_VAR   ref    V25 tmp19        u:2 (last use) <l:$4c7, c:$2f0>
                                                  /--*  t401   byref  
                                                  +--*  t296   ref    
               [000482] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000299] ------------       t299 =    LCL_VAR   ref    V16 tmp10        u:2 $1e4
N002 (  1,  1) [000402] ------------       t402 =    CNS_INT   long   24 field offset Fseq[_methodPtr] $346
                                                  /--*  t299   ref    
                                                  +--*  t402   long   
N003 (  2,  2) [000403] -------N----       t403 = *  ADD       byref  $385
N005 (  2, 10) [000127] H-----------       t127 =    CNS_INT(h) long   0xd1ffab1e ftn $194
                                                  /--*  t403   byref  
                                                  +--*  t127   long   
               [000483] -A--GO------              *  STOREIND  long  
               [000484] ------------                 IL_OFFSET void   IL offset: 0x96
N002 (  2, 10) [000406] I-----------       t406 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] $191
N004 (  1,  1) [000135] ------------       t135 =    LCL_VAR   ref    V16 tmp10        u:2 $1e4
                                                  /--*  t406   long   
                                                  +--*  t135   ref    
               [000485] -A--G-------              *  STOREIND  ref   
N001 (  1,  1) [000134] ------------       t134 =    LCL_VAR   ref    V16 tmp10        u:2 (last use) $1e4
                                                  /--*  t134   ref    
N003 (  1,  3) [000148] DA----------              *  STORE_LCL_VAR ref    V15 tmp9         d:4

------------ BB13 [09C..0A6), preds={BB10,BB12} succs={BB14}
N001 (  0,  0) [000440] ------------       t440 =    PHI_ARG   ref    V15 tmp9         u:4 $1e4
N002 (  0,  0) [000439] ------------       t439 =    PHI_ARG   ref    V15 tmp9         u:2 <l:$4c6, c:$2e9>
                                                  /--*  t440   ref    
                                                  +--*  t439   ref    
N003 (  0,  0) [000431] ------------       t431 = *  PHI       ref   
                                                  /--*  t431   ref    
N005 (  0,  0) [000432] DA----------              *  STORE_LCL_VAR ref    V15 tmp9         d:3
N004 (  1,  1) [000111] ------------       t111 =    LCL_VAR   ref    V15 tmp9         u:3 (last use) $4ca
N005 (  1,  1) [000110] ------------       t110 =    LCL_VAR   ref    V14 tmp8         u:2 (last use) $2db
N006 (  2, 10) [000113] H-----------       t113 =    CNS_INT(h) long   0xd1ffab1e method $196
                                                  /--*  t111   ref    arg2 in r8
                                                  +--*  t110   ref    arg1 in rdx
                                                  +--*  t113   long   arg0 in rcx
N007 ( 18, 20) [000112] --CXG-------       t112 = *  CALL      ref    System.Linq.Enumerable.SelectMany $2f6
                                                  /--*  t112   ref    
N009 ( 18, 20) [000313] DA-XG-------              *  STORE_LCL_VAR ref    V27 tmp21        d:2
N004 (  1,  1) [000308] ------------       t308 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
N005 (  1,  1) [000410] ------------       t410 =    CNS_INT   long   16 field offset Fseq[_size] $342
                                                  /--*  t308   ref    
                                                  +--*  t410   long   
N006 (  2,  2) [000411] -------N----       t411 = *  ADD       byref  $383
                                                  /--*  t411   byref  
N007 (  4,  4) [000309] n---GO------       t309 = *  IND       int    <l:$254, c:$253>
N008 (  1,  1) [000109] ------------       t109 =    LCL_VAR   ref    V01 loc0         u:2 (last use) $1c1
N009 (  1,  1) [000310] ------------       t310 =    LCL_VAR   ref    V27 tmp21        u:2 (last use) $2f6
                                                  /--*  t309   int    arg1 in rdx
                                                  +--*  t109   ref    this in rcx
                                                  +--*  t310   ref    arg2 in r8
N010 ( 20, 15) [000311] --CXGO------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange $VN.Void

------------ BB14 [0A6..0B3) -> BB02 (cond), preds={BB06,BB13} succs={BB15,BB02}
               [000486] ------------                 IL_OFFSET void   IL offset: 0xa6
N001 (  1,  1) [000116] ------------       t116 =    LCL_VAR   int    V03 loc2         u:3 (last use) $280
N002 (  1,  1) [000117] ------------       t117 =    CNS_INT   int    1 $46
                                                  /--*  t116   int    
                                                  +--*  t117   int    
N003 (  3,  3) [000118] ------------       t118 = *  ADD       int    $269
                                                  /--*  t118   int    
N005 (  3,  3) [000120] DA----------              *  STORE_LCL_VAR int    V03 loc2         d:4
               [000487] ------------                 IL_OFFSET void   IL offset: 0xaa
N001 (  1,  1) [000456] ------------       t456 =    LCL_VAR   int    V29 cse1         u:1 $200
N002 (  1,  1) [000023] ------------        t23 =    LCL_VAR   int    V03 loc2         u:4 $269
                                                  /--*  t456   int    
                                                  +--*  t23    int    
N003 (  3,  3) [000026] J------N----        t26 = *  GT        int    $26b
                                                  /--*  t26    int    
N004 (  5,  5) [000027] ------------              *  JTRUE     void  

------------ BB15 [0B3..0C7) (return), preds={BB01,BB14} succs={}
               [000488] ------------                 IL_OFFSET void   IL offset: 0xb3
N003 (  1,  1) [000180] ------------       t180 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
N004 (  2, 10) [000182] H-----------       t182 =    CNS_INT(h) long   0xd1ffab1e method $19c
                                                  /--*  t180   ref    arg1 in rdx
                                                  +--*  t182   long   arg0 in rcx
N005 ( 17, 18) [000181] --CXG-------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle $VN.Void
N004 (  2, 10) [000417] H-----------       t417 =    CNS_INT(h) long   0xD1FFAB1E "Enumerated and shuffled the project paths." $19d
                                                  /--*  t417   long   
N005 (  4, 12) [000418] #---G-------       t418 = *  IND       ref    $1f9
N006 (  2, 10) [000186] H-----------       t186 =    CNS_INT(h) long   0xd1ffab1e method $181
N007 (  1,  1) [000184] ------------       t184 =    CNS_INT   int    2 $42
                                                  /--*  t418   ref    arg1 in rdx
                                                  +--*  t186   long   arg0 in rcx
                                                  +--*  t184   int    arg2 in r8
N008 ( 21, 31) [000185] --CXG-------       t185 = *  CALL      ref    SolutionAnalyzer.Logger.Log $10d
               [000489] ------------                 IL_OFFSET void   IL offset: 0xc5
N001 (  1,  1) [000190] ------------       t190 =    LCL_VAR   ref    V01 loc0         u:2 (last use) $1c1
                                                  /--*  t190   ref    
N002 (  2,  2) [000191] ------------              *  RETURN    ref    $10f

------------ BB16 [000..000) (throw), preds={BB08,BB11} succs={}
N001 ( 14,  5) [000303] --CXG-------                 CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance $VN.Void

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Lowering nodeinfo
lowering call (before):
N004 (  2, 10) [000316] H-----------       t316 =    CNS_INT(h) long   0xD1FFAB1E "Started enumerating project paths." $180
                                                  /--*  t316   long   
N005 (  4, 12) [000317] #---G-------       t317 = *  IND       ref    $1c0
N006 (  2, 10) [000003] H-----------         t3 =    CNS_INT(h) long   0xd1ffab1e method $181
N007 (  1,  1) [000001] ------------         t1 =    CNS_INT   int    2 $42
                                                  /--*  t317   ref    arg1 in rdx
                                                  +--*  t3     long   arg0 in rcx
                                                  +--*  t1     int    arg2 in r8
N008 ( 21, 31) [000002] --CXG-------         t2 = *  CALL      ref    SolutionAnalyzer.Logger.Log $101

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000319] ----------L-              *  ARGPLACE  long   $181
lowering arg : N002 (  0,  0) [000318] ----------L-              *  ARGPLACE  ref    $1c0
lowering arg : N003 (  0,  0) [000320] ----------L-              *  ARGPLACE  int    $42

late:
======
lowering arg : N005 (  4, 12) [000317] #---G-------              *  IND       ref    $1c0
new node is :                [000494] ----G-------              *  PUTARG_REG ref    REG rdx

lowering arg : N006 (  2, 10) [000003] H-----------              *  CNS_INT(h) long   0xd1ffab1e method $181
new node is :                [000495] ------------              *  PUTARG_REG long   REG rcx

lowering arg : N007 (  1,  1) [000001] ------------              *  CNS_INT   int    2 $42
new node is :                [000496] ------------              *  PUTARG_REG int    REG r8

lowering call (after):
N004 (  2, 10) [000316] H-----------       t316 =    CNS_INT(h) long   0xD1FFAB1E "Started enumerating project paths." $180
                                                  /--*  t316   long   
N005 (  4, 12) [000317] #---G-------       t317 = *  IND       ref    $1c0
                                                  /--*  t317   ref    
               [000494] ----G-------       t494 = *  PUTARG_REG ref    REG rdx
N006 (  2, 10) [000003] H-----------         t3 =    CNS_INT(h) long   0xd1ffab1e method $181
                                                  /--*  t3     long   
               [000495] ------------       t495 = *  PUTARG_REG long   REG rcx
N007 (  1,  1) [000001] ------------         t1 =    CNS_INT   int    2 $42
                                                  /--*  t1     int    
               [000496] ------------       t496 = *  PUTARG_REG int    REG r8
                                                  /--*  t494   ref    arg1 in rdx
                                                  +--*  t495   long   arg0 in rcx
                                                  +--*  t496   int    arg2 in r8
N008 ( 21, 31) [000002] --CXG-------         t2 = *  CALL      ref    SolutionAnalyzer.Logger.Log $101

lowering call (before):
N002 (  2, 10) [000008] H-----------         t8 =    CNS_INT(h) long   0xd1ffab1e token $182
                                                  /--*  t8     long   arg0 in rcx
N003 ( 16, 16) [000009] --C---------         t9 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1c1

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000321] ----------L-              *  ARGPLACE  long   $182

late:
======
lowering arg : N002 (  2, 10) [000008] H-----------              *  CNS_INT(h) long   0xd1ffab1e token $182
new node is :                [000497] ------------              *  PUTARG_REG long   REG rcx

lowering call (after):
N002 (  2, 10) [000008] H-----------         t8 =    CNS_INT(h) long   0xd1ffab1e token $182
                                                  /--*  t8     long   
               [000497] ------------       t497 = *  PUTARG_REG long   REG rcx
                                                  /--*  t497   long   arg0 in rcx
N003 ( 16, 16) [000009] --C---------         t9 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1c1

lowering store lcl var/field (before):
N002 (  2, 10) [000008] H-----------         t8 =    CNS_INT(h) long   0xd1ffab1e token $182
                                                  /--*  t8     long   
               [000497] ------------       t497 = *  PUTARG_REG long   REG rcx
                                                  /--*  t497   long   arg0 in rcx
N003 ( 16, 16) [000009] --C---------         t9 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1c1
                                                  /--*  t9     ref    
N005 ( 16, 16) [000011] DA----------              *  STORE_LCL_VAR ref    V07 tmp1         d:2

lowering store lcl var/field (after):
N002 (  2, 10) [000008] H-----------         t8 =    CNS_INT(h) long   0xd1ffab1e token $182
                                                  /--*  t8     long   
               [000497] ------------       t497 = *  PUTARG_REG long   REG rcx
                                                  /--*  t497   long   arg0 in rcx
N003 ( 16, 16) [000009] --C---------         t9 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1c1
                                                  /--*  t9     ref    
N005 ( 16, 16) [000011] DA----------              *  STORE_LCL_VAR ref    V07 tmp1         d:2

lowering call (before):
N003 (  1,  1) [000012] ------------        t12 =    LCL_VAR   ref    V07 tmp1         u:2 $1c1
N004 (  1,  1) [000007] ------------         t7 =    CNS_INT   int    100 $43
                                                  /--*  t12    ref    this in rcx
                                                  +--*  t7     int    arg1 in rdx
N005 ( 16, 10) [000013] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor $VN.Void

objp:
======
lowering arg : N001 (  0,  0) [000322] ----------L-              *  ARGPLACE  ref    $105

args:
======
lowering arg : N002 (  0,  0) [000323] ----------L-              *  ARGPLACE  int    $1c1

late:
======
lowering arg : N003 (  1,  1) [000012] ------------              *  LCL_VAR   ref    V07 tmp1         u:2 $1c1
new node is :                [000498] ------------              *  PUTARG_REG ref    REG rcx

lowering arg : N004 (  1,  1) [000007] ------------              *  CNS_INT   int    100 $43
new node is :                [000499] ------------              *  PUTARG_REG int    REG rdx

lowering call (after):
N003 (  1,  1) [000012] ------------        t12 =    LCL_VAR   ref    V07 tmp1         u:2 $1c1
                                                  /--*  t12    ref    
               [000498] ------------       t498 = *  PUTARG_REG ref    REG rcx
N004 (  1,  1) [000007] ------------         t7 =    CNS_INT   int    100 $43
                                                  /--*  t7     int    
               [000499] ------------       t499 = *  PUTARG_REG int    REG rdx
                                                  /--*  t498   ref    this in rcx
                                                  +--*  t499   int    arg1 in rdx
N005 ( 16, 10) [000013] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor $VN.Void

lowering store lcl var/field (before):
N001 (  1,  1) [000014] ------------        t14 =    LCL_VAR   ref    V07 tmp1         u:2 (last use) $1c1
                                                  /--*  t14    ref    
N003 (  1,  3) [000016] DA----------              *  STORE_LCL_VAR ref    V01 loc0         d:2

lowering store lcl var/field (after):
N001 (  1,  1) [000014] ------------        t14 =    LCL_VAR   ref    V07 tmp1         u:2 (last use) $1c1
                                                  /--*  t14    ref    
N003 (  1,  3) [000016] DA----------              *  STORE_LCL_VAR ref    V01 loc0         d:2

lowering store lcl var/field (before):
N001 (  1,  1) [000017] ------------        t17 =    LCL_VAR   ref    V00 arg0         u:1 (last use) $80
                                                  /--*  t17    ref    
N003 (  1,  3) [000019] DA----------              *  STORE_LCL_VAR ref    V02 loc1         d:2

lowering store lcl var/field (after):
N001 (  1,  1) [000017] ------------        t17 =    LCL_VAR   ref    V00 arg0         u:1 (last use) $80
                                                  /--*  t17    ref    
N003 (  1,  3) [000019] DA----------              *  STORE_LCL_VAR ref    V02 loc1         d:2

lowering store lcl var/field (before):
N001 (  1,  1) [000020] ------------        t20 =    CNS_INT   int    0 $40
                                                  /--*  t20    int    
N003 (  1,  3) [000022] DA----------              *  STORE_LCL_VAR int    V03 loc2         d:2

lowering store lcl var/field (after):
N001 (  1,  1) [000020] ------------        t20 =    CNS_INT   int    0 $40
                                                  /--*  t20    int    
N003 (  1,  3) [000022] DA----------              *  STORE_LCL_VAR int    V03 loc2         d:2

Addressing mode:
  Base
    N001 (  1,  1) [000424] ------------              *  LCL_VAR   ref    V02 loc1         u:2 $80
  + 8
Removing unused node:
                 [000490] -c----------              *  CNS_INT   long   8
New addressing mode node:
                 [000491] ------------              *  LEA(b+8)  ref   

lowering store lcl var/field (before):
N001 (  1,  1) [000424] ------------       t424 =    LCL_VAR   ref    V02 loc1         u:2 $80
                                                  /--*  t424   ref    
               [000491] -c----------       t491 = *  LEA(b+8)  ref   
                                                  /--*  t491   ref    
N002 (  3,  3) [000423] ---X--------       t423 = *  IND       int    $240
                                                  /--*  t423   int    
N004 (  3,  3) [000452] DA-X--------              *  STORE_LCL_VAR int    V29 cse1         d:1

lowering store lcl var/field (after):
N001 (  1,  1) [000424] ------------       t424 =    LCL_VAR   ref    V02 loc1         u:2 $80
                                                  /--*  t424   ref    
               [000491] -c----------       t491 = *  LEA(b+8)  ref   
                                                  /--*  t491   ref    
N002 (  3,  3) [000423] ---X--------       t423 = *  IND       int    $240
                                                  /--*  t423   int    
N004 (  3,  3) [000452] DA-X--------              *  STORE_LCL_VAR int    V29 cse1         d:1

lowering store lcl var/field (before):
N001 (  0,  0) [000437] ------------       t437 =    PHI_ARG   int    V03 loc2         u:4
N002 (  0,  0) [000436] ------------       t436 =    PHI_ARG   int    V03 loc2         u:2 $40
                                                  /--*  t437   int    
                                                  +--*  t436   int    
N003 (  0,  0) [000428] ------------       t428 = *  PHI       int   
                                                  /--*  t428   int    
N005 (  0,  0) [000429] DA----------              *  STORE_LCL_VAR int    V03 loc2         d:3

lowering store lcl var/field (after):
N001 (  0,  0) [000437] ------------       t437 =    PHI_ARG   int    V03 loc2         u:4
N002 (  0,  0) [000436] ------------       t436 =    PHI_ARG   int    V03 loc2         u:2 $40
                                                  /--*  t437   int    
                                                  +--*  t436   int    
N003 (  0,  0) [000428] ------------       t428 = *  PHI       int   
                                                  /--*  t428   int    
N005 (  0,  0) [000429] DA----------              *  STORE_LCL_VAR int    V03 loc2         d:3

Addressing mode:
  Base
    N002 (  1,  1) [000324] ------------              *  LCL_VAR   ref    V02 loc1         u:2 $80
  + Index * 8 + 16
    N004 (  2,  3) [000328] ------------              *  CAST      long <- int $300
Removing unused node:
  N008 (  4,  5) [000332] -------N----              *  ADD       long   $302
Removing unused node:
  N007 (  1,  1) [000331] -c----------              *  CNS_INT   long   16 Fseq[#FirstElem] $342
Removing unused node:
  N006 (  3,  4) [000330] -------N----              *  LSH       long   $301
Removing unused node:
  N005 (  1,  1) [000329] -c-----N----              *  CNS_INT   long   3 $340
New addressing mode node:
  N009 (  5,  6) [000333] ------------              *  LEA(b+(i*8)+16) byref 

lowering store lcl var/field (before):
N002 (  1,  1) [000324] ------------       t324 =    LCL_VAR   ref    V02 loc1         u:2 $80
N003 (  1,  1) [000325] ------------       t325 =    LCL_VAR   int    V03 loc2         u:3 $280
                                                  /--*  t325   int    
N004 (  2,  3) [000328] ------------       t328 = *  CAST      long <- int $300
                                                  /--*  t324   ref    
                                                  +--*  t328   long   
N009 (  5,  6) [000333] -c----------       t333 = *  LEA(b+(i*8)+16) byref 
                                                  /--*  t333   byref  
N010 (  6,  7) [000030] a---G-------        t30 = *  IND       ref    <l:$1ca, c:$2c1>
                                                  /--*  t30    ref    
N013 (  6,  7) [000032] DA--G-------              *  STORE_LCL_VAR ref    V04 loc3         d:2

lowering store lcl var/field (after):
N002 (  1,  1) [000324] ------------       t324 =    LCL_VAR   ref    V02 loc1         u:2 $80
N003 (  1,  1) [000325] ------------       t325 =    LCL_VAR   int    V03 loc2         u:3 $280
                                                  /--*  t325   int    
N004 (  2,  3) [000328] ------------       t328 = *  CAST      long <- int $300
                                                  /--*  t324   ref    
                                                  +--*  t328   long   
N009 (  5,  6) [000333] -c----------       t333 = *  LEA(b+(i*8)+16) byref 
                                                  /--*  t333   byref  
N010 (  6,  7) [000030] a---G-------        t30 = *  IND       ref    <l:$1ca, c:$2c1>
                                                  /--*  t30    ref    
N013 (  6,  7) [000032] DA--G-------              *  STORE_LCL_VAR ref    V04 loc3         d:2

lowering call (before):
N004 (  2, 10) [000335] H-----------       t335 =    CNS_INT(h) long   0xD1FFAB1E ".csproj" $184
                                                  /--*  t335   long   
N005 (  4, 12) [000336] #---G-------       t336 = *  IND       ref    $1d1
N006 (  1,  1) [000033] ------------        t33 =    LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
N007 (  1,  1) [000194] ------------       t194 =    CNS_INT   int    0 $40
                                                  /--*  t336   ref    arg1 in rdx
                                                  +--*  t33    ref    this in rcx
                                                  +--*  t194   int    arg2 in r8
N008 ( 20, 23) [000195] --CXG-------       t195 = *  CALL      int    System.String.EndsWith $401

objp:
======
lowering arg : N001 (  0,  0) [000338] ----------L-              *  ARGPLACE  ref    $2c3

args:
======
lowering arg : N002 (  0,  0) [000337] ----------L-              *  ARGPLACE  ref    <l:$1ca, c:$2c1>
lowering arg : N003 (  0,  0) [000339] ----------L-              *  ARGPLACE  int    $1d1

late:
======
lowering arg : N005 (  4, 12) [000336] #---G-------              *  IND       ref    $1d1
new node is :                [000500] ----G-------              *  PUTARG_REG ref    REG rdx

lowering arg : N006 (  1,  1) [000033] ------------              *  LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
new node is :                [000501] ------------              *  PUTARG_REG ref    REG rcx

lowering arg : N007 (  1,  1) [000194] ------------              *  CNS_INT   int    0 $40
new node is :                [000502] ------------              *  PUTARG_REG int    REG r8

lowering call (after):
N004 (  2, 10) [000335] H-----------       t335 =    CNS_INT(h) long   0xD1FFAB1E ".csproj" $184
                                                  /--*  t335   long   
N005 (  4, 12) [000336] #---G-------       t336 = *  IND       ref    $1d1
                                                  /--*  t336   ref    
               [000500] ----G-------       t500 = *  PUTARG_REG ref    REG rdx
N006 (  1,  1) [000033] ------------        t33 =    LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
                                                  /--*  t33    ref    
               [000501] ------------       t501 = *  PUTARG_REG ref    REG rcx
N007 (  1,  1) [000194] ------------       t194 =    CNS_INT   int    0 $40
                                                  /--*  t194   int    
               [000502] ------------       t502 = *  PUTARG_REG int    REG r8
                                                  /--*  t500   ref    arg1 in rdx
                                                  +--*  t501   ref    this in rcx
                                                  +--*  t502   int    arg2 in r8
N008 ( 20, 23) [000195] --CXG-------       t195 = *  CALL      int    System.String.EndsWith $401

Addressing mode:
  Base
    N001 (  1,  1) [000199] ------------              *  LCL_VAR   ref    V01 loc0         u:2 $1c1
  + 20
Removing unused node:
  N002 (  1,  1) [000342] -c----------              *  CNS_INT   long   20 field offset Fseq[_version] $348
New addressing mode node:
  N003 (  2,  2) [000343] ------------              *  LEA(b+20) byref 

Addressing mode:
  Base
    N007 (  1,  1) [000177] ------------              *  LCL_VAR   ref    V01 loc0         u:2 $1c1
  + 20
Removing unused node:
  N008 (  1,  1) [000340] -c----------              *  CNS_INT   long   20 field offset Fseq[_version] $348
New addressing mode node:
  N009 (  2,  2) [000341] ------------              *  LEA(b+20) byref 

Lower succesfully detected an assignment of the form: *addrMode BinOp= source
N001 (  1,  1) [000199] ------------       t199 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t199   ref    
N003 (  2,  2) [000343] -c----------       t343 = *  LEA(b+20) byref 
                                                  /--*  t343   byref  
N004 (  4,  4) [000200] n---GO------       t200 = *  IND       int    <l:$258, c:$257>
N005 (  1,  1) [000201] -c----------       t201 =    CNS_INT   int    1 $46
                                                  /--*  t200   int    
                                                  +--*  t201   int    
N006 (  6,  6) [000202] ----GO------       t202 = *  ADD       int    <l:$25c, c:$25b>
N007 (  1,  1) [000177] ------------       t177 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t177   ref    
N009 (  2,  2) [000341] ------------       t341 = *  LEA(b+20) byref 
                                                  /--*  t341   byref  
                                                  +--*  t202   int    
               [000467] -A--GO------              *  STOREIND  int   
Addressing mode:
  Base
    N001 (  1,  1) [000205] ------------              *  LCL_VAR   ref    V01 loc0         u:2 $1c1
  + 8
Removing unused node:
  N002 (  1,  1) [000344] -c----------              *  CNS_INT   long   8 field offset Fseq[_items] $343
New addressing mode node:
  N003 (  2,  2) [000345] ------------              *  LEA(b+8)  byref 

lowering store lcl var/field (before):
N001 (  1,  1) [000205] ------------       t205 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t205   ref    
N003 (  2,  2) [000345] -c----------       t345 = *  LEA(b+8)  byref 
                                                  /--*  t345   byref  
N004 (  4,  4) [000206] n---GO------       t206 = *  IND       ref    <l:$1f0, c:$1ef>
                                                  /--*  t206   ref    
N006 (  4,  4) [000208] DA--GO------              *  STORE_LCL_VAR ref    V18 tmp12        d:2

lowering store lcl var/field (after):
N001 (  1,  1) [000205] ------------       t205 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t205   ref    
N003 (  2,  2) [000345] -c----------       t345 = *  LEA(b+8)  byref 
                                                  /--*  t345   byref  
N004 (  4,  4) [000206] n---GO------       t206 = *  IND       ref    <l:$1f0, c:$1ef>
                                                  /--*  t206   ref    
N006 (  4,  4) [000208] DA--GO------              *  STORE_LCL_VAR ref    V18 tmp12        d:2

Addressing mode:
  Base
    N001 (  1,  1) [000209] ------------              *  LCL_VAR   ref    V01 loc0         u:2 $1c1
  + 16
Removing unused node:
  N002 (  1,  1) [000346] -c----------              *  CNS_INT   long   16 field offset Fseq[_size] $342
New addressing mode node:
  N003 (  2,  2) [000347] ------------              *  LEA(b+16) byref 

lowering store lcl var/field (before):
N001 (  1,  1) [000209] ------------       t209 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t209   ref    
N003 (  2,  2) [000347] -c----------       t347 = *  LEA(b+16) byref 
                                                  /--*  t347   byref  
N004 (  4,  4) [000210] n---GO------       t210 = *  IND       int    <l:$260, c:$25f>
                                                  /--*  t210   int    
N006 (  4,  4) [000212] DA--GO------              *  STORE_LCL_VAR int    V19 tmp13        d:2

lowering store lcl var/field (after):
N001 (  1,  1) [000209] ------------       t209 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t209   ref    
N003 (  2,  2) [000347] -c----------       t347 = *  LEA(b+16) byref 
                                                  /--*  t347   byref  
N004 (  4,  4) [000210] n---GO------       t210 = *  IND       int    <l:$260, c:$25f>
                                                  /--*  t210   int    
N006 (  4,  4) [000212] DA--GO------              *  STORE_LCL_VAR int    V19 tmp13        d:2

Addressing mode:
  Base
    N001 (  1,  1) [000214] ------------              *  LCL_VAR   ref    V18 tmp12        u:2 <l:$1ee, c:$2fc>
  + 8
Removing unused node:
                 [000492] -c----------              *  CNS_INT   long   8
New addressing mode node:
                 [000493] ------------              *  LEA(b+8)  ref   

Addressing mode:
  Base
    N004 (  1,  1) [000220] ------------              *  LCL_VAR   ref    V01 loc0         u:2 $1c1
  + 16
Removing unused node:
  N005 (  1,  1) [000348] -c----------              *  CNS_INT   long   16 field offset Fseq[_size] $342
New addressing mode node:
  N006 (  2,  2) [000349] ------------              *  LEA(b+16) byref 

Lower of StoreInd didn't mark the node as self contained for reason: 3
N001 (  1,  1) [000221] ------------       t221 =    LCL_VAR   int    V19 tmp13        u:2 <l:$25e, c:$411>
N002 (  1,  1) [000222] -c----------       t222 =    CNS_INT   int    1 $46
                                                  /--*  t221   int    
                                                  +--*  t222   int    
N003 (  3,  3) [000223] ------------       t223 = *  ADD       int    <l:$268, c:$267>
N004 (  1,  1) [000220] ------------       t220 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t220   ref    
N006 (  2,  2) [000349] ------------       t349 = *  LEA(b+16) byref 
                                                  /--*  t349   byref  
                                                  +--*  t223   int    
               [000472] -A--GO------              *  STOREIND  int   
lowering call (before):
N004 (  1,  1) [000226] ------------       t226 =    LCL_VAR   ref    V18 tmp12        u:2 (last use) <l:$1ee, c:$2fc>
N005 (  1,  1) [000227] ------------       t227 =    LCL_VAR   int    V19 tmp13        u:2 (last use) <l:$25e, c:$411>
N006 (  1,  1) [000228] ------------       t228 =    LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>
                                                  /--*  t226   ref    arg0 in rcx
                                                  +--*  t227   int    arg1 in rdx
                                                  +--*  t228   ref    arg2 in r8
N007 ( 17, 11) [000229] --CXG-------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST $1db

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000350] ----------L-              *  ARGPLACE  ref    <l:$1ee, c:$2fc>
lowering arg : N002 (  0,  0) [000351] ----------L-              *  ARGPLACE  int    <l:$25e, c:$411>
lowering arg : N003 (  0,  0) [000352] ----------L-              *  ARGPLACE  ref    <l:$1ca, c:$2c1>

late:
======
lowering arg : N004 (  1,  1) [000226] ------------              *  LCL_VAR   ref    V18 tmp12        u:2 (last use) <l:$1ee, c:$2fc>
new node is :                [000503] ------------              *  PUTARG_REG ref    REG rcx

lowering arg : N005 (  1,  1) [000227] ------------              *  LCL_VAR   int    V19 tmp13        u:2 (last use) <l:$25e, c:$411>
new node is :                [000504] ------------              *  PUTARG_REG int    REG rdx

lowering arg : N006 (  1,  1) [000228] ------------              *  LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>
new node is :                [000505] ------------              *  PUTARG_REG ref    REG r8

lowering call (after):
N004 (  1,  1) [000226] ------------       t226 =    LCL_VAR   ref    V18 tmp12        u:2 (last use) <l:$1ee, c:$2fc>
                                                  /--*  t226   ref    
               [000503] ------------       t503 = *  PUTARG_REG ref    REG rcx
N005 (  1,  1) [000227] ------------       t227 =    LCL_VAR   int    V19 tmp13        u:2 (last use) <l:$25e, c:$411>
                                                  /--*  t227   int    
               [000504] ------------       t504 = *  PUTARG_REG int    REG rdx
N006 (  1,  1) [000228] ------------       t228 =    LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>
                                                  /--*  t228   ref    
               [000505] ------------       t505 = *  PUTARG_REG ref    REG r8
                                                  /--*  t503   ref    arg0 in rcx
                                                  +--*  t504   int    arg1 in rdx
                                                  +--*  t505   ref    arg2 in r8
N007 ( 17, 11) [000229] --CXG-------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST $1db

lowering call (before):
N003 (  1,  1) [000218] ------------       t218 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
N004 (  1,  1) [000178] ------------       t178 =    LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>
                                                  /--*  t218   ref    this in rcx
                                                  +--*  t178   ref    arg1 in rdx
N005 ( 16, 10) [000219] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize $VN.Void

objp:
======
lowering arg : N001 (  0,  0) [000353] ----------L-              *  ARGPLACE  ref    $2fe

args:
======
lowering arg : N002 (  0,  0) [000354] ----------L-              *  ARGPLACE  ref    $1c1

late:
======
lowering arg : N003 (  1,  1) [000218] ------------              *  LCL_VAR   ref    V01 loc0         u:2 $1c1
new node is :                [000506] ------------              *  PUTARG_REG ref    REG rcx

lowering arg : N004 (  1,  1) [000178] ------------              *  LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>
new node is :                [000507] ------------              *  PUTARG_REG ref    REG rdx

lowering call (after):
N003 (  1,  1) [000218] ------------       t218 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t218   ref    
               [000506] ------------       t506 = *  PUTARG_REG ref    REG rcx
N004 (  1,  1) [000178] ------------       t178 =    LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>
                                                  /--*  t178   ref    
               [000507] ------------       t507 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t506   ref    this in rcx
                                                  +--*  t507   ref    arg1 in rdx
N005 ( 16, 10) [000219] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize $VN.Void

lowering call (before):
N002 (  1,  1) [000235] ------------       t235 =    CNS_INT   int    1 $46
                                                  /--*  t235   int    arg0 in rcx
N003 ( 15,  7) [000236] --CXG-------       t236 = *  CALL      ref    System.IO.EnumerationOptions.FromSearchOption $2c6

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000355] ----------L-              *  ARGPLACE  int    $46

late:
======
lowering arg : N002 (  1,  1) [000235] ------------              *  CNS_INT   int    1 $46
new node is :                [000508] ------------              *  PUTARG_REG int    REG rcx

lowering call (after):
N002 (  1,  1) [000235] ------------       t235 =    CNS_INT   int    1 $46
                                                  /--*  t235   int    
               [000508] ------------       t508 = *  PUTARG_REG int    REG rcx
                                                  /--*  t508   int    arg0 in rcx
N003 ( 15,  7) [000236] --CXG-------       t236 = *  CALL      ref    System.IO.EnumerationOptions.FromSearchOption $2c6

lowering store lcl var/field (before):
N002 (  1,  1) [000235] ------------       t235 =    CNS_INT   int    1 $46
                                                  /--*  t235   int    
               [000508] ------------       t508 = *  PUTARG_REG int    REG rcx
                                                  /--*  t508   int    arg0 in rcx
N003 ( 15,  7) [000236] --CXG-------       t236 = *  CALL      ref    System.IO.EnumerationOptions.FromSearchOption $2c6
                                                  /--*  t236   ref    
N005 ( 15,  7) [000247] DA-XG-------              *  STORE_LCL_VAR ref    V20 tmp14        d:2

lowering store lcl var/field (after):
N002 (  1,  1) [000235] ------------       t235 =    CNS_INT   int    1 $46
                                                  /--*  t235   int    
               [000508] ------------       t508 = *  PUTARG_REG int    REG rcx
                                                  /--*  t508   int    arg0 in rcx
N003 ( 15,  7) [000236] --CXG-------       t236 = *  CALL      ref    System.IO.EnumerationOptions.FromSearchOption $2c6
                                                  /--*  t236   ref    
N005 ( 15,  7) [000247] DA-XG-------              *  STORE_LCL_VAR ref    V20 tmp14        d:2

lowering call (before):
N005 (  2, 10) [000356] H-----------       t356 =    CNS_INT(h) long   0xD1FFAB1E "*" $185
                                                  /--*  t356   long   
N006 (  4, 12) [000357] #---G-------       t357 = *  IND       ref    $1d2
N007 (  1,  1) [000040] ------------        t40 =    LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
N008 (  1,  1) [000244] ------------       t244 =    LCL_VAR   ref    V20 tmp14        u:2 (last use) $2c6
N009 (  1,  1) [000243] ------------       t243 =    CNS_INT   int    2 $42
                                                  /--*  t357   ref    arg1 in rdx
                                                  +--*  t40    ref    arg0 in rcx
                                                  +--*  t244   ref    arg3 in r9
                                                  +--*  t243   int    arg2 in r8
N010 ( 21, 24) [000245] --CXG-------       t245 = *  CALL      ref    System.IO.Directory.InternalEnumeratePaths $2cc

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000359] ----------L-              *  ARGPLACE  ref    <l:$1ca, c:$2c1>
lowering arg : N002 (  0,  0) [000358] ----------L-              *  ARGPLACE  ref    $1d2
lowering arg : N003 (  0,  0) [000361] ----------L-              *  ARGPLACE  int    $42
lowering arg : N004 (  0,  0) [000360] ----------L-              *  ARGPLACE  ref    $2c6

late:
======
lowering arg : N006 (  4, 12) [000357] #---G-------              *  IND       ref    $1d2
new node is :                [000509] ----G-------              *  PUTARG_REG ref    REG rdx

lowering arg : N007 (  1,  1) [000040] ------------              *  LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
new node is :                [000510] ------------              *  PUTARG_REG ref    REG rcx

lowering arg : N008 (  1,  1) [000244] ------------              *  LCL_VAR   ref    V20 tmp14        u:2 (last use) $2c6
new node is :                [000511] ------------              *  PUTARG_REG ref    REG r9

lowering arg : N009 (  1,  1) [000243] ------------              *  CNS_INT   int    2 $42
new node is :                [000512] ------------              *  PUTARG_REG int    REG r8

lowering call (after):
N005 (  2, 10) [000356] H-----------       t356 =    CNS_INT(h) long   0xD1FFAB1E "*" $185
                                                  /--*  t356   long   
N006 (  4, 12) [000357] #---G-------       t357 = *  IND       ref    $1d2
                                                  /--*  t357   ref    
               [000509] ----G-------       t509 = *  PUTARG_REG ref    REG rdx
N007 (  1,  1) [000040] ------------        t40 =    LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
                                                  /--*  t40    ref    
               [000510] ------------       t510 = *  PUTARG_REG ref    REG rcx
N008 (  1,  1) [000244] ------------       t244 =    LCL_VAR   ref    V20 tmp14        u:2 (last use) $2c6
                                                  /--*  t244   ref    
               [000511] ------------       t511 = *  PUTARG_REG ref    REG r9
N009 (  1,  1) [000243] ------------       t243 =    CNS_INT   int    2 $42
                                                  /--*  t243   int    
               [000512] ------------       t512 = *  PUTARG_REG int    REG r8
                                                  /--*  t509   ref    arg1 in rdx
                                                  +--*  t510   ref    arg0 in rcx
                                                  +--*  t511   ref    arg3 in r9
                                                  +--*  t512   int    arg2 in r8
N010 ( 21, 24) [000245] --CXG-------       t245 = *  CALL      ref    System.IO.Directory.InternalEnumeratePaths $2cc

lowering store lcl var/field (before):
N005 (  2, 10) [000356] H-----------       t356 =    CNS_INT(h) long   0xD1FFAB1E "*" $185
                                                  /--*  t356   long   
N006 (  4, 12) [000357] #---G-------       t357 = *  IND       ref    $1d2
                                                  /--*  t357   ref    
               [000509] ----G-------       t509 = *  PUTARG_REG ref    REG rdx
N007 (  1,  1) [000040] ------------        t40 =    LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
                                                  /--*  t40    ref    
               [000510] ------------       t510 = *  PUTARG_REG ref    REG rcx
N008 (  1,  1) [000244] ------------       t244 =    LCL_VAR   ref    V20 tmp14        u:2 (last use) $2c6
                                                  /--*  t244   ref    
               [000511] ------------       t511 = *  PUTARG_REG ref    REG r9
N009 (  1,  1) [000243] ------------       t243 =    CNS_INT   int    2 $42
                                                  /--*  t243   int    
               [000512] ------------       t512 = *  PUTARG_REG int    REG r8
                                                  /--*  t509   ref    arg1 in rdx
                                                  +--*  t510   ref    arg0 in rcx
                                                  +--*  t511   ref    arg3 in r9
                                                  +--*  t512   int    arg2 in r8
N010 ( 21, 24) [000245] --CXG-------       t245 = *  CALL      ref    System.IO.Directory.InternalEnumeratePaths $2cc
                                                  /--*  t245   ref    
N012 ( 21, 24) [000054] DA-XG-------              *  STORE_LCL_VAR ref    V09 tmp3         d:2

lowering store lcl var/field (after):
N005 (  2, 10) [000356] H-----------       t356 =    CNS_INT(h) long   0xD1FFAB1E "*" $185
                                                  /--*  t356   long   
N006 (  4, 12) [000357] #---G-------       t357 = *  IND       ref    $1d2
                                                  /--*  t357   ref    
               [000509] ----G-------       t509 = *  PUTARG_REG ref    REG rdx
N007 (  1,  1) [000040] ------------        t40 =    LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
                                                  /--*  t40    ref    
               [000510] ------------       t510 = *  PUTARG_REG ref    REG rcx
N008 (  1,  1) [000244] ------------       t244 =    LCL_VAR   ref    V20 tmp14        u:2 (last use) $2c6
                                                  /--*  t244   ref    
               [000511] ------------       t511 = *  PUTARG_REG ref    REG r9
N009 (  1,  1) [000243] ------------       t243 =    CNS_INT   int    2 $42
                                                  /--*  t243   int    
               [000512] ------------       t512 = *  PUTARG_REG int    REG r8
                                                  /--*  t509   ref    arg1 in rdx
                                                  +--*  t510   ref    arg0 in rcx
                                                  +--*  t511   ref    arg3 in r9
                                                  +--*  t512   int    arg2 in r8
N010 ( 21, 24) [000245] --CXG-------       t245 = *  CALL      ref    System.IO.Directory.InternalEnumeratePaths $2cc
                                                  /--*  t245   ref    
N012 ( 21, 24) [000054] DA-XG-------              *  STORE_LCL_VAR ref    V09 tmp3         d:2

lowering call (before):
N003 (  2, 10) [000047] ------------        t47 =    CNS_INT   long   0x7ffc7e4c17e0 $345
N004 (  1,  1) [000048] ------------        t48 =    CNS_INT   int    35 $47
                                                  /--*  t47    long   arg0 in rcx
                                                  +--*  t48    int    arg1 in rdx
N005 ( 17, 18) [000049] H-CXG-------        t49 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000362] ----------L-              *  ARGPLACE  long   $345
lowering arg : N002 (  0,  0) [000363] ----------L-              *  ARGPLACE  int    $47

late:
======
lowering arg : N003 (  2, 10) [000047] ------------              *  CNS_INT   long   0x7ffc7e4c17e0 $345
new node is :                [000513] ------------              *  PUTARG_REG long   REG rcx

lowering arg : N004 (  1,  1) [000048] ------------              *  CNS_INT   int    35 $47
new node is :                [000514] ------------              *  PUTARG_REG int    REG rdx

lowering call (after):
N003 (  2, 10) [000047] ------------        t47 =    CNS_INT   long   0x7ffc7e4c17e0 $345
                                                  /--*  t47    long   
               [000513] ------------       t513 = *  PUTARG_REG long   REG rcx
N004 (  1,  1) [000048] ------------        t48 =    CNS_INT   int    35 $47
                                                  /--*  t48    int    
               [000514] ------------       t514 = *  PUTARG_REG int    REG rdx
                                                  /--*  t513   long   arg0 in rcx
                                                  +--*  t514   int    arg1 in rdx
N005 ( 17, 18) [000049] H-CXG-------        t49 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305

lowering store lcl var/field (before):
N003 (  2, 10) [000047] ------------        t47 =    CNS_INT   long   0x7ffc7e4c17e0 $345
                                                  /--*  t47    long   
               [000513] ------------       t513 = *  PUTARG_REG long   REG rcx
N004 (  1,  1) [000048] ------------        t48 =    CNS_INT   int    35 $47
                                                  /--*  t48    int    
               [000514] ------------       t514 = *  PUTARG_REG int    REG rdx
                                                  /--*  t513   long   arg0 in rcx
                                                  +--*  t514   int    arg1 in rdx
N005 ( 17, 18) [000049] H-CXG-------        t49 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
                                                  /--*  t49    long   
N007 ( 17, 18) [000443] DA-XG-------              *  STORE_LCL_VAR long   V28 cse0         d:1

lowering store lcl var/field (after):
N003 (  2, 10) [000047] ------------        t47 =    CNS_INT   long   0x7ffc7e4c17e0 $345
                                                  /--*  t47    long   
               [000513] ------------       t513 = *  PUTARG_REG long   REG rcx
N004 (  1,  1) [000048] ------------        t48 =    CNS_INT   int    35 $47
                                                  /--*  t48    int    
               [000514] ------------       t514 = *  PUTARG_REG int    REG rdx
                                                  /--*  t513   long   arg0 in rcx
                                                  +--*  t514   int    arg1 in rdx
N005 ( 17, 18) [000049] H-CXG-------        t49 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
                                                  /--*  t49    long   
N007 ( 17, 18) [000443] DA-XG-------              *  STORE_LCL_VAR long   V28 cse0         d:1

lowering store lcl var/field (before):
N010 (  2, 10) [000364] I-----------       t364 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] $186
                                                  /--*  t364   long   
N011 (  4, 12) [000045] n---G-------        t45 = *  IND       ref    <l:$4c0, c:$2cf>
                                                  /--*  t45    ref    
N014 ( 22, 31) [000052] DA-XG-------              *  STORE_LCL_VAR ref    V08 tmp2         d:2

lowering store lcl var/field (after):
N010 (  2, 10) [000364] I-----------       t364 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] $186
                                                  /--*  t364   long   
N011 (  4, 12) [000045] n---G-------        t45 = *  IND       ref    <l:$4c0, c:$2cf>
                                                  /--*  t45    ref    
N014 ( 22, 31) [000052] DA-XG-------              *  STORE_LCL_VAR ref    V08 tmp2         d:2

lowering store lcl var/field (before):
N001 (  1,  1) [000055] ------------        t55 =    LCL_VAR   ref    V09 tmp3         u:2 (last use) $2cc
                                                  /--*  t55    ref    
N003 (  1,  3) [000062] DA----------              *  STORE_LCL_VAR ref    V10 tmp4         d:2

lowering store lcl var/field (after):
N001 (  1,  1) [000055] ------------        t55 =    LCL_VAR   ref    V09 tmp3         u:2 (last use) $2cc
                                                  /--*  t55    ref    
N003 (  1,  3) [000062] DA----------              *  STORE_LCL_VAR ref    V10 tmp4         d:2

lowering store lcl var/field (before):
N001 (  1,  1) [000056] ------------        t56 =    LCL_VAR   ref    V08 tmp2         u:2 <l:$4c0, c:$2cf>
                                                  /--*  t56    ref    
N003 (  1,  3) [000065] DA----------              *  STORE_LCL_VAR ref    V11 tmp5         d:2

lowering store lcl var/field (after):
N001 (  1,  1) [000056] ------------        t56 =    LCL_VAR   ref    V08 tmp2         u:2 <l:$4c0, c:$2cf>
                                                  /--*  t56    ref    
N003 (  1,  3) [000065] DA----------              *  STORE_LCL_VAR ref    V11 tmp5         d:2

lowering call (before):
N002 (  2, 10) [000157] H-----------       t157 =    CNS_INT(h) long   0xd1ffab1e token $187
                                                  /--*  t157   long   arg0 in rcx
N003 ( 16, 16) [000158] --C---------       t158 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1d6

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000365] ----------L-              *  ARGPLACE  long   $187

late:
======
lowering arg : N002 (  2, 10) [000157] H-----------              *  CNS_INT(h) long   0xd1ffab1e token $187
new node is :                [000515] ------------              *  PUTARG_REG long   REG rcx

lowering call (after):
N002 (  2, 10) [000157] H-----------       t157 =    CNS_INT(h) long   0xd1ffab1e token $187
                                                  /--*  t157   long   
               [000515] ------------       t515 = *  PUTARG_REG long   REG rcx
                                                  /--*  t515   long   arg0 in rcx
N003 ( 16, 16) [000158] --C---------       t158 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1d6

lowering store lcl var/field (before):
N002 (  2, 10) [000157] H-----------       t157 =    CNS_INT(h) long   0xd1ffab1e token $187
                                                  /--*  t157   long   
               [000515] ------------       t515 = *  PUTARG_REG long   REG rcx
                                                  /--*  t515   long   arg0 in rcx
N003 ( 16, 16) [000158] --C---------       t158 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1d6
                                                  /--*  t158   ref    
N005 ( 16, 16) [000160] DA----------              *  STORE_LCL_VAR ref    V17 tmp11        d:2

lowering store lcl var/field (after):
N002 (  2, 10) [000157] H-----------       t157 =    CNS_INT(h) long   0xd1ffab1e token $187
                                                  /--*  t157   long   
               [000515] ------------       t515 = *  PUTARG_REG long   REG rcx
                                                  /--*  t515   long   arg0 in rcx
N003 ( 16, 16) [000158] --C---------       t158 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1d6
                                                  /--*  t158   ref    
N005 ( 16, 16) [000160] DA----------              *  STORE_LCL_VAR ref    V17 tmp11        d:2

lowering store lcl var/field (before):
N002 (  2, 10) [000368] I-----------       t368 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] $188
                                                  /--*  t368   long   
N003 (  4, 12) [000150] n---G-------       t150 = *  IND       ref    <l:$4c1, c:$2d5>
                                                  /--*  t150   ref    
N006 (  5, 13) [000262] DA--G-------              *  STORE_LCL_VAR ref    V21 tmp15        d:2

lowering store lcl var/field (after):
N002 (  2, 10) [000368] I-----------       t368 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] $188
                                                  /--*  t368   long   
N003 (  4, 12) [000150] n---G-------       t150 = *  IND       ref    <l:$4c1, c:$2d5>
                                                  /--*  t150   ref    
N006 (  5, 13) [000262] DA--G-------              *  STORE_LCL_VAR ref    V21 tmp15        d:2

Addressing mode:
  Base
    N001 (  1,  1) [000161] ------------              *  LCL_VAR   ref    V17 tmp11        u:2 $1d6
  + 8
Removing unused node:
  N002 (  1,  1) [000369] -c----------              *  CNS_INT   long   8 field offset Fseq[_target] $343
New addressing mode node:
  N003 (  2,  2) [000370] ------------              *  LEA(b+8)  byref 

Addressing mode:
  Base
    N001 (  1,  1) [000256] ------------              *  LCL_VAR   ref    V17 tmp11        u:2 $1d6
  + 24
Removing unused node:
  N002 (  1,  1) [000371] -c----------              *  CNS_INT   long   24 field offset Fseq[_methodPtr] $346
New addressing mode node:
  N003 (  2,  2) [000372] ------------              *  LEA(b+24) byref 

Lower of StoreInd didn't mark the node as self contained for reason: 4
N001 (  1,  1) [000256] ------------       t256 =    LCL_VAR   ref    V17 tmp11        u:2 $1d6
                                                  /--*  t256   ref    
N003 (  2,  2) [000372] ------------       t372 = *  LEA(b+24) byref 
N005 (  2, 10) [000156] H-----------       t156 =    CNS_INT(h) long   0xd1ffab1e ftn $18a
                                                  /--*  t372   byref  
                                                  +--*  t156   long   
               [000477] -A--GO------              *  STOREIND  long  
lowering store lcl var/field (before):
N001 (  1,  1) [000163] ------------       t163 =    LCL_VAR   ref    V17 tmp11        u:2 (last use) $1d6
                                                  /--*  t163   ref    
N003 (  1,  3) [000175] DA----------              *  STORE_LCL_VAR ref    V11 tmp5         d:4

lowering store lcl var/field (after):
N001 (  1,  1) [000163] ------------       t163 =    LCL_VAR   ref    V17 tmp11        u:2 (last use) $1d6
                                                  /--*  t163   ref    
N003 (  1,  3) [000175] DA----------              *  STORE_LCL_VAR ref    V11 tmp5         d:4

lowering store lcl var/field (before):
N001 (  0,  0) [000441] ------------       t441 =    PHI_ARG   ref    V11 tmp5         u:4 $1d6
N002 (  0,  0) [000438] ------------       t438 =    PHI_ARG   ref    V11 tmp5         u:2 <l:$4c0, c:$2cf>
                                                  /--*  t441   ref    
                                                  +--*  t438   ref    
N003 (  0,  0) [000434] ------------       t434 = *  PHI       ref   
                                                  /--*  t434   ref    
N005 (  0,  0) [000435] DA----------              *  STORE_LCL_VAR ref    V11 tmp5         d:3

lowering store lcl var/field (after):
N001 (  0,  0) [000441] ------------       t441 =    PHI_ARG   ref    V11 tmp5         u:4 $1d6
N002 (  0,  0) [000438] ------------       t438 =    PHI_ARG   ref    V11 tmp5         u:2 <l:$4c0, c:$2cf>
                                                  /--*  t441   ref    
                                                  +--*  t438   ref    
N003 (  0,  0) [000434] ------------       t434 = *  PHI       ref   
                                                  /--*  t434   ref    
N005 (  0,  0) [000435] DA----------              *  STORE_LCL_VAR ref    V11 tmp5         d:3

lowering call (before):
N004 (  1,  1) [000070] ------------        t70 =    LCL_VAR   ref    V11 tmp5         u:3 (last use) $4c4
N005 (  1,  1) [000069] ------------        t69 =    LCL_VAR   ref    V10 tmp4         u:2 (last use) $2cc
N006 (  2, 10) [000072] H-----------        t72 =    CNS_INT(h) long   0xd1ffab1e method $18d
                                                  /--*  t70    ref    arg2 in r8
                                                  +--*  t69    ref    arg1 in rdx
                                                  +--*  t72    long   arg0 in rcx
N007 ( 18, 20) [000071] --CXG-------        t71 = *  CALL      ref    System.Linq.Enumerable.Where $2db

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000378] ----------L-              *  ARGPLACE  long   $18d
lowering arg : N002 (  0,  0) [000377] ----------L-              *  ARGPLACE  ref    $2cc
lowering arg : N003 (  0,  0) [000376] ----------L-              *  ARGPLACE  ref    $4c4

late:
======
lowering arg : N004 (  1,  1) [000070] ------------              *  LCL_VAR   ref    V11 tmp5         u:3 (last use) $4c4
new node is :                [000516] ------------              *  PUTARG_REG ref    REG r8

lowering arg : N005 (  1,  1) [000069] ------------              *  LCL_VAR   ref    V10 tmp4         u:2 (last use) $2cc
new node is :                [000517] ------------              *  PUTARG_REG ref    REG rdx

lowering arg : N006 (  2, 10) [000072] H-----------              *  CNS_INT(h) long   0xd1ffab1e method $18d
new node is :                [000518] ------------              *  PUTARG_REG long   REG rcx

lowering call (after):
N004 (  1,  1) [000070] ------------        t70 =    LCL_VAR   ref    V11 tmp5         u:3 (last use) $4c4
                                                  /--*  t70    ref    
               [000516] ------------       t516 = *  PUTARG_REG ref    REG r8
N005 (  1,  1) [000069] ------------        t69 =    LCL_VAR   ref    V10 tmp4         u:2 (last use) $2cc
                                                  /--*  t69    ref    
               [000517] ------------       t517 = *  PUTARG_REG ref    REG rdx
N006 (  2, 10) [000072] H-----------        t72 =    CNS_INT(h) long   0xd1ffab1e method $18d
                                                  /--*  t72    long   
               [000518] ------------       t518 = *  PUTARG_REG long   REG rcx
                                                  /--*  t516   ref    arg2 in r8
                                                  +--*  t517   ref    arg1 in rdx
                                                  +--*  t518   long   arg0 in rcx
N007 ( 18, 20) [000071] --CXG-------        t71 = *  CALL      ref    System.Linq.Enumerable.Where $2db

lowering store lcl var/field (before):
N004 (  1,  1) [000070] ------------        t70 =    LCL_VAR   ref    V11 tmp5         u:3 (last use) $4c4
                                                  /--*  t70    ref    
               [000516] ------------       t516 = *  PUTARG_REG ref    REG r8
N005 (  1,  1) [000069] ------------        t69 =    LCL_VAR   ref    V10 tmp4         u:2 (last use) $2cc
                                                  /--*  t69    ref    
               [000517] ------------       t517 = *  PUTARG_REG ref    REG rdx
N006 (  2, 10) [000072] H-----------        t72 =    CNS_INT(h) long   0xd1ffab1e method $18d
                                                  /--*  t72    long   
               [000518] ------------       t518 = *  PUTARG_REG long   REG rcx
                                                  /--*  t516   ref    arg2 in r8
                                                  +--*  t517   ref    arg1 in rdx
                                                  +--*  t518   long   arg0 in rcx
N007 ( 18, 20) [000071] --CXG-------        t71 = *  CALL      ref    System.Linq.Enumerable.Where $2db
                                                  /--*  t71    ref    
N009 ( 18, 20) [000075] DA-XG-------              *  STORE_LCL_VAR ref    V05 loc4         d:2

lowering store lcl var/field (after):
N004 (  1,  1) [000070] ------------        t70 =    LCL_VAR   ref    V11 tmp5         u:3 (last use) $4c4
                                                  /--*  t70    ref    
               [000516] ------------       t516 = *  PUTARG_REG ref    REG r8
N005 (  1,  1) [000069] ------------        t69 =    LCL_VAR   ref    V10 tmp4         u:2 (last use) $2cc
                                                  /--*  t69    ref    
               [000517] ------------       t517 = *  PUTARG_REG ref    REG rdx
N006 (  2, 10) [000072] H-----------        t72 =    CNS_INT(h) long   0xd1ffab1e method $18d
                                                  /--*  t72    long   
               [000518] ------------       t518 = *  PUTARG_REG long   REG rcx
                                                  /--*  t516   ref    arg2 in r8
                                                  +--*  t517   ref    arg1 in rdx
                                                  +--*  t518   long   arg0 in rcx
N007 ( 18, 20) [000071] --CXG-------        t71 = *  CALL      ref    System.Linq.Enumerable.Where $2db
                                                  /--*  t71    ref    
N009 ( 18, 20) [000075] DA-XG-------              *  STORE_LCL_VAR ref    V05 loc4         d:2

lowering call (before):
N003 (  2, 10) [000273] ------------       t273 =    CNS_INT   long   0x7ffc7e783cd8 $347
N004 (  1,  1) [000274] ------------       t274 =    CNS_INT   int    40 $4a
                                                  /--*  t273   long   arg0 in rcx
                                                  +--*  t274   int    arg1 in rdx
N005 ( 17, 18) [000275] H-CXG-------       t275 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $309

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000379] ----------L-              *  ARGPLACE  long   $347
lowering arg : N002 (  0,  0) [000380] ----------L-              *  ARGPLACE  int    $4a

late:
======
lowering arg : N003 (  2, 10) [000273] ------------              *  CNS_INT   long   0x7ffc7e783cd8 $347
new node is :                [000519] ------------              *  PUTARG_REG long   REG rcx

lowering arg : N004 (  1,  1) [000274] ------------              *  CNS_INT   int    40 $4a
new node is :                [000520] ------------              *  PUTARG_REG int    REG rdx

lowering call (after):
N003 (  2, 10) [000273] ------------       t273 =    CNS_INT   long   0x7ffc7e783cd8 $347
                                                  /--*  t273   long   
               [000519] ------------       t519 = *  PUTARG_REG long   REG rcx
N004 (  1,  1) [000274] ------------       t274 =    CNS_INT   int    40 $4a
                                                  /--*  t274   int    
               [000520] ------------       t520 = *  PUTARG_REG int    REG rdx
                                                  /--*  t519   long   arg0 in rcx
                                                  +--*  t520   int    arg1 in rdx
N005 ( 17, 18) [000275] H-CXG-------       t275 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $309

lowering store lcl var/field (before):
N006 (  2, 10) [000381] I-----------       t381 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<Compatible>k__BackingField] $18e
                                                  /--*  t381   long   
N007 (  4, 12) [000271] n---G-------       t271 = *  IND       ref    <l:$4c5, c:$2de>
                                                  /--*  t271   ref    
N010 ( 21, 30) [000283] DA-XG-------              *  STORE_LCL_VAR ref    V23 tmp17        d:2

lowering store lcl var/field (after):
N006 (  2, 10) [000381] I-----------       t381 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<Compatible>k__BackingField] $18e
                                                  /--*  t381   long   
N007 (  4, 12) [000271] n---G-------       t271 = *  IND       ref    <l:$4c5, c:$2de>
                                                  /--*  t271   ref    
N010 ( 21, 30) [000283] DA-XG-------              *  STORE_LCL_VAR ref    V23 tmp17        d:2

lowering call (before):
N005 (  2, 10) [000382] H-----------       t382 =    CNS_INT(h) long   0xD1FFAB1E "*.csproj" $18f
                                                  /--*  t382   long   
N006 (  4, 12) [000383] #---G-------       t383 = *  IND       ref    $1e0
N007 (  1,  1) [000077] ------------        t77 =    LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>
N008 (  1,  1) [000280] ------------       t280 =    LCL_VAR   ref    V23 tmp17        u:2 (last use) <l:$4c5, c:$2de>
N009 (  1,  1) [000279] ------------       t279 =    CNS_INT   int    1 $46
                                                  /--*  t383   ref    arg1 in rdx
                                                  +--*  t77    ref    arg0 in rcx
                                                  +--*  t280   ref    arg3 in r9
                                                  +--*  t279   int    arg2 in r8
N010 ( 21, 24) [000281] --CXG-------       t281 = *  CALL      ref    System.IO.Directory.InternalEnumeratePaths $2e3

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000385] ----------L-              *  ARGPLACE  ref    <l:$1ca, c:$2c1>
lowering arg : N002 (  0,  0) [000384] ----------L-              *  ARGPLACE  ref    $1e0
lowering arg : N003 (  0,  0) [000387] ----------L-              *  ARGPLACE  int    $46
lowering arg : N004 (  0,  0) [000386] ----------L-              *  ARGPLACE  ref    <l:$4c5, c:$2de>

late:
======
lowering arg : N006 (  4, 12) [000383] #---G-------              *  IND       ref    $1e0
new node is :                [000521] ----G-------              *  PUTARG_REG ref    REG rdx

lowering arg : N007 (  1,  1) [000077] ------------              *  LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>
new node is :                [000522] ------------              *  PUTARG_REG ref    REG rcx

lowering arg : N008 (  1,  1) [000280] ------------              *  LCL_VAR   ref    V23 tmp17        u:2 (last use) <l:$4c5, c:$2de>
new node is :                [000523] ------------              *  PUTARG_REG ref    REG r9

lowering arg : N009 (  1,  1) [000279] ------------              *  CNS_INT   int    1 $46
new node is :                [000524] ------------              *  PUTARG_REG int    REG r8

lowering call (after):
N005 (  2, 10) [000382] H-----------       t382 =    CNS_INT(h) long   0xD1FFAB1E "*.csproj" $18f
                                                  /--*  t382   long   
N006 (  4, 12) [000383] #---G-------       t383 = *  IND       ref    $1e0
                                                  /--*  t383   ref    
               [000521] ----G-------       t521 = *  PUTARG_REG ref    REG rdx
N007 (  1,  1) [000077] ------------        t77 =    LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>
                                                  /--*  t77    ref    
               [000522] ------------       t522 = *  PUTARG_REG ref    REG rcx
N008 (  1,  1) [000280] ------------       t280 =    LCL_VAR   ref    V23 tmp17        u:2 (last use) <l:$4c5, c:$2de>
                                                  /--*  t280   ref    
               [000523] ------------       t523 = *  PUTARG_REG ref    REG r9
N009 (  1,  1) [000279] ------------       t279 =    CNS_INT   int    1 $46
                                                  /--*  t279   int    
               [000524] ------------       t524 = *  PUTARG_REG int    REG r8
                                                  /--*  t521   ref    arg1 in rdx
                                                  +--*  t522   ref    arg0 in rcx
                                                  +--*  t523   ref    arg3 in r9
                                                  +--*  t524   int    arg2 in r8
N010 ( 21, 24) [000281] --CXG-------       t281 = *  CALL      ref    System.IO.Directory.InternalEnumeratePaths $2e3

lowering store lcl var/field (before):
N005 (  2, 10) [000382] H-----------       t382 =    CNS_INT(h) long   0xD1FFAB1E "*.csproj" $18f
                                                  /--*  t382   long   
N006 (  4, 12) [000383] #---G-------       t383 = *  IND       ref    $1e0
                                                  /--*  t383   ref    
               [000521] ----G-------       t521 = *  PUTARG_REG ref    REG rdx
N007 (  1,  1) [000077] ------------        t77 =    LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>
                                                  /--*  t77    ref    
               [000522] ------------       t522 = *  PUTARG_REG ref    REG rcx
N008 (  1,  1) [000280] ------------       t280 =    LCL_VAR   ref    V23 tmp17        u:2 (last use) <l:$4c5, c:$2de>
                                                  /--*  t280   ref    
               [000523] ------------       t523 = *  PUTARG_REG ref    REG r9
N009 (  1,  1) [000279] ------------       t279 =    CNS_INT   int    1 $46
                                                  /--*  t279   int    
               [000524] ------------       t524 = *  PUTARG_REG int    REG r8
                                                  /--*  t521   ref    arg1 in rdx
                                                  +--*  t522   ref    arg0 in rcx
                                                  +--*  t523   ref    arg3 in r9
                                                  +--*  t524   int    arg2 in r8
N010 ( 21, 24) [000281] --CXG-------       t281 = *  CALL      ref    System.IO.Directory.InternalEnumeratePaths $2e3
                                                  /--*  t281   ref    
N012 ( 21, 24) [000290] DA-XG-------              *  STORE_LCL_VAR ref    V24 tmp18        d:2

lowering store lcl var/field (after):
N005 (  2, 10) [000382] H-----------       t382 =    CNS_INT(h) long   0xD1FFAB1E "*.csproj" $18f
                                                  /--*  t382   long   
N006 (  4, 12) [000383] #---G-------       t383 = *  IND       ref    $1e0
                                                  /--*  t383   ref    
               [000521] ----G-------       t521 = *  PUTARG_REG ref    REG rdx
N007 (  1,  1) [000077] ------------        t77 =    LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>
                                                  /--*  t77    ref    
               [000522] ------------       t522 = *  PUTARG_REG ref    REG rcx
N008 (  1,  1) [000280] ------------       t280 =    LCL_VAR   ref    V23 tmp17        u:2 (last use) <l:$4c5, c:$2de>
                                                  /--*  t280   ref    
               [000523] ------------       t523 = *  PUTARG_REG ref    REG r9
N009 (  1,  1) [000279] ------------       t279 =    CNS_INT   int    1 $46
                                                  /--*  t279   int    
               [000524] ------------       t524 = *  PUTARG_REG int    REG r8
                                                  /--*  t521   ref    arg1 in rdx
                                                  +--*  t522   ref    arg0 in rcx
                                                  +--*  t523   ref    arg3 in r9
                                                  +--*  t524   int    arg2 in r8
N010 ( 21, 24) [000281] --CXG-------       t281 = *  CALL      ref    System.IO.Directory.InternalEnumeratePaths $2e3
                                                  /--*  t281   ref    
N012 ( 21, 24) [000290] DA-XG-------              *  STORE_LCL_VAR ref    V24 tmp18        d:2

Addressing mode:
  Base
    N004 (  1,  1) [000285] ------------              *  LCL_VAR   ref    V01 loc0         u:2 $1c1
  + 16
Removing unused node:
  N005 (  1,  1) [000388] -c----------              *  CNS_INT   long   16 field offset Fseq[_size] $342
New addressing mode node:
  N006 (  2,  2) [000389] ------------              *  LEA(b+16) byref 

lowering call (before):
N004 (  1,  1) [000285] ------------       t285 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t285   ref    
N006 (  2,  2) [000389] -c----------       t389 = *  LEA(b+16) byref 
                                                  /--*  t389   byref  
N007 (  4,  4) [000286] n---GO------       t286 = *  IND       int    <l:$24c, c:$24b>
N008 (  1,  1) [000076] ------------        t76 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
N009 (  1,  1) [000287] ------------       t287 =    LCL_VAR   ref    V24 tmp18        u:2 (last use) $2e3
                                                  /--*  t286   int    arg1 in rdx
                                                  +--*  t76    ref    this in rcx
                                                  +--*  t287   ref    arg2 in r8
N010 ( 20, 15) [000288] --CXGO------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange $VN.Void

objp:
======
lowering arg : N001 (  0,  0) [000391] ----------L-              *  ARGPLACE  ref    $2e6

args:
======
lowering arg : N002 (  0,  0) [000390] ----------L-              *  ARGPLACE  int    $1c1
lowering arg : N003 (  0,  0) [000392] ----------L-              *  ARGPLACE  ref    <l:$24c, c:$24b>

late:
======
lowering arg : N007 (  4,  4) [000286] n---GO------              *  IND       int    <l:$24c, c:$24b>
new node is :                [000525] ----GO------              *  PUTARG_REG int    REG rdx

lowering arg : N008 (  1,  1) [000076] ------------              *  LCL_VAR   ref    V01 loc0         u:2 $1c1
new node is :                [000526] ------------              *  PUTARG_REG ref    REG rcx

lowering arg : N009 (  1,  1) [000287] ------------              *  LCL_VAR   ref    V24 tmp18        u:2 (last use) $2e3
new node is :                [000527] ------------              *  PUTARG_REG ref    REG r8

lowering call (after):
N004 (  1,  1) [000285] ------------       t285 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t285   ref    
N006 (  2,  2) [000389] -c----------       t389 = *  LEA(b+16) byref 
                                                  /--*  t389   byref  
N007 (  4,  4) [000286] n---GO------       t286 = *  IND       int    <l:$24c, c:$24b>
                                                  /--*  t286   int    
               [000525] ----GO------       t525 = *  PUTARG_REG int    REG rdx
N008 (  1,  1) [000076] ------------        t76 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t76    ref    
               [000526] ------------       t526 = *  PUTARG_REG ref    REG rcx
N009 (  1,  1) [000287] ------------       t287 =    LCL_VAR   ref    V24 tmp18        u:2 (last use) $2e3
                                                  /--*  t287   ref    
               [000527] ------------       t527 = *  PUTARG_REG ref    REG r8
                                                  /--*  t525   int    arg1 in rdx
                                                  +--*  t526   ref    this in rcx
                                                  +--*  t527   ref    arg2 in r8
N010 ( 20, 15) [000288] --CXGO------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange $VN.Void

lowering store lcl var/field (before):
N002 (  2, 10) [000395] I-----------       t395 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] $191
                                                  /--*  t395   long   
N003 (  4, 12) [000084] n---G-------        t84 = *  IND       ref    <l:$4c6, c:$2e9>
                                                  /--*  t84    ref    
N006 (  5, 13) [000091] DA--G-------              *  STORE_LCL_VAR ref    V12 tmp6         d:2

lowering store lcl var/field (after):
N002 (  2, 10) [000395] I-----------       t395 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] $191
                                                  /--*  t395   long   
N003 (  4, 12) [000084] n---G-------        t84 = *  IND       ref    <l:$4c6, c:$2e9>
                                                  /--*  t84    ref    
N006 (  5, 13) [000091] DA--G-------              *  STORE_LCL_VAR ref    V12 tmp6         d:2

lowering store lcl var/field (before):
N001 (  1,  1) [000082] ------------        t82 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t82    ref    
N003 (  1,  3) [000098] DA----------              *  STORE_LCL_VAR ref    V13 tmp7         d:2

lowering store lcl var/field (after):
N001 (  1,  1) [000082] ------------        t82 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t82    ref    
N003 (  1,  3) [000098] DA----------              *  STORE_LCL_VAR ref    V13 tmp7         d:2

lowering store lcl var/field (before):
N001 (  1,  1) [000083] ------------        t83 =    LCL_VAR   ref    V05 loc4         u:2 (last use) $2db
                                                  /--*  t83    ref    
N003 (  1,  3) [000101] DA----------              *  STORE_LCL_VAR ref    V14 tmp8         d:2

lowering store lcl var/field (after):
N001 (  1,  1) [000083] ------------        t83 =    LCL_VAR   ref    V05 loc4         u:2 (last use) $2db
                                                  /--*  t83    ref    
N003 (  1,  3) [000101] DA----------              *  STORE_LCL_VAR ref    V14 tmp8         d:2

lowering store lcl var/field (before):
N001 (  1,  1) [000092] ------------        t92 =    LCL_VAR   ref    V12 tmp6         u:2 <l:$4c6, c:$2e9>
                                                  /--*  t92    ref    
N003 (  1,  3) [000104] DA----------              *  STORE_LCL_VAR ref    V15 tmp9         d:2

lowering store lcl var/field (after):
N001 (  1,  1) [000092] ------------        t92 =    LCL_VAR   ref    V12 tmp6         u:2 <l:$4c6, c:$2e9>
                                                  /--*  t92    ref    
N003 (  1,  3) [000104] DA----------              *  STORE_LCL_VAR ref    V15 tmp9         d:2

lowering call (before):
N002 (  2, 10) [000128] H-----------       t128 =    CNS_INT(h) long   0xd1ffab1e token $192
                                                  /--*  t128   long   arg0 in rcx
N003 ( 16, 16) [000129] --C---------       t129 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1e4

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000396] ----------L-              *  ARGPLACE  long   $192

late:
======
lowering arg : N002 (  2, 10) [000128] H-----------              *  CNS_INT(h) long   0xd1ffab1e token $192
new node is :                [000528] ------------              *  PUTARG_REG long   REG rcx

lowering call (after):
N002 (  2, 10) [000128] H-----------       t128 =    CNS_INT(h) long   0xd1ffab1e token $192
                                                  /--*  t128   long   
               [000528] ------------       t528 = *  PUTARG_REG long   REG rcx
                                                  /--*  t528   long   arg0 in rcx
N003 ( 16, 16) [000129] --C---------       t129 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1e4

lowering store lcl var/field (before):
N002 (  2, 10) [000128] H-----------       t128 =    CNS_INT(h) long   0xd1ffab1e token $192
                                                  /--*  t128   long   
               [000528] ------------       t528 = *  PUTARG_REG long   REG rcx
                                                  /--*  t528   long   arg0 in rcx
N003 ( 16, 16) [000129] --C---------       t129 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1e4
                                                  /--*  t129   ref    
N005 ( 16, 16) [000131] DA----------              *  STORE_LCL_VAR ref    V16 tmp10        d:2

lowering store lcl var/field (after):
N002 (  2, 10) [000128] H-----------       t128 =    CNS_INT(h) long   0xd1ffab1e token $192
                                                  /--*  t128   long   
               [000528] ------------       t528 = *  PUTARG_REG long   REG rcx
                                                  /--*  t528   long   arg0 in rcx
N003 ( 16, 16) [000129] --C---------       t129 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1e4
                                                  /--*  t129   ref    
N005 ( 16, 16) [000131] DA----------              *  STORE_LCL_VAR ref    V16 tmp10        d:2

lowering store lcl var/field (before):
N002 (  2, 10) [000399] I-----------       t399 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] $188
                                                  /--*  t399   long   
N003 (  4, 12) [000121] n---G-------       t121 = *  IND       ref    <l:$4c7, c:$2f0>
                                                  /--*  t121   ref    
N006 (  5, 13) [000305] DA--G-------              *  STORE_LCL_VAR ref    V25 tmp19        d:2

lowering store lcl var/field (after):
N002 (  2, 10) [000399] I-----------       t399 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] $188
                                                  /--*  t399   long   
N003 (  4, 12) [000121] n---G-------       t121 = *  IND       ref    <l:$4c7, c:$2f0>
                                                  /--*  t121   ref    
N006 (  5, 13) [000305] DA--G-------              *  STORE_LCL_VAR ref    V25 tmp19        d:2

Addressing mode:
  Base
    N001 (  1,  1) [000132] ------------              *  LCL_VAR   ref    V16 tmp10        u:2 $1e4
  + 8
Removing unused node:
  N002 (  1,  1) [000400] -c----------              *  CNS_INT   long   8 field offset Fseq[_target] $343
New addressing mode node:
  N003 (  2,  2) [000401] ------------              *  LEA(b+8)  byref 

Addressing mode:
  Base
    N001 (  1,  1) [000299] ------------              *  LCL_VAR   ref    V16 tmp10        u:2 $1e4
  + 24
Removing unused node:
  N002 (  1,  1) [000402] -c----------              *  CNS_INT   long   24 field offset Fseq[_methodPtr] $346
New addressing mode node:
  N003 (  2,  2) [000403] ------------              *  LEA(b+24) byref 

Lower of StoreInd didn't mark the node as self contained for reason: 4
N001 (  1,  1) [000299] ------------       t299 =    LCL_VAR   ref    V16 tmp10        u:2 $1e4
                                                  /--*  t299   ref    
N003 (  2,  2) [000403] ------------       t403 = *  LEA(b+24) byref 
N005 (  2, 10) [000127] H-----------       t127 =    CNS_INT(h) long   0xd1ffab1e ftn $194
                                                  /--*  t403   byref  
                                                  +--*  t127   long   
               [000483] -A--GO------              *  STOREIND  long  
lowering store lcl var/field (before):
N001 (  1,  1) [000134] ------------       t134 =    LCL_VAR   ref    V16 tmp10        u:2 (last use) $1e4
                                                  /--*  t134   ref    
N003 (  1,  3) [000148] DA----------              *  STORE_LCL_VAR ref    V15 tmp9         d:4

lowering store lcl var/field (after):
N001 (  1,  1) [000134] ------------       t134 =    LCL_VAR   ref    V16 tmp10        u:2 (last use) $1e4
                                                  /--*  t134   ref    
N003 (  1,  3) [000148] DA----------              *  STORE_LCL_VAR ref    V15 tmp9         d:4

lowering store lcl var/field (before):
N001 (  0,  0) [000440] ------------       t440 =    PHI_ARG   ref    V15 tmp9         u:4 $1e4
N002 (  0,  0) [000439] ------------       t439 =    PHI_ARG   ref    V15 tmp9         u:2 <l:$4c6, c:$2e9>
                                                  /--*  t440   ref    
                                                  +--*  t439   ref    
N003 (  0,  0) [000431] ------------       t431 = *  PHI       ref   
                                                  /--*  t431   ref    
N005 (  0,  0) [000432] DA----------              *  STORE_LCL_VAR ref    V15 tmp9         d:3

lowering store lcl var/field (after):
N001 (  0,  0) [000440] ------------       t440 =    PHI_ARG   ref    V15 tmp9         u:4 $1e4
N002 (  0,  0) [000439] ------------       t439 =    PHI_ARG   ref    V15 tmp9         u:2 <l:$4c6, c:$2e9>
                                                  /--*  t440   ref    
                                                  +--*  t439   ref    
N003 (  0,  0) [000431] ------------       t431 = *  PHI       ref   
                                                  /--*  t431   ref    
N005 (  0,  0) [000432] DA----------              *  STORE_LCL_VAR ref    V15 tmp9         d:3

lowering call (before):
N004 (  1,  1) [000111] ------------       t111 =    LCL_VAR   ref    V15 tmp9         u:3 (last use) $4ca
N005 (  1,  1) [000110] ------------       t110 =    LCL_VAR   ref    V14 tmp8         u:2 (last use) $2db
N006 (  2, 10) [000113] H-----------       t113 =    CNS_INT(h) long   0xd1ffab1e method $196
                                                  /--*  t111   ref    arg2 in r8
                                                  +--*  t110   ref    arg1 in rdx
                                                  +--*  t113   long   arg0 in rcx
N007 ( 18, 20) [000112] --CXG-------       t112 = *  CALL      ref    System.Linq.Enumerable.SelectMany $2f6

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000409] ----------L-              *  ARGPLACE  long   $196
lowering arg : N002 (  0,  0) [000408] ----------L-              *  ARGPLACE  ref    $2db
lowering arg : N003 (  0,  0) [000407] ----------L-              *  ARGPLACE  ref    $4ca

late:
======
lowering arg : N004 (  1,  1) [000111] ------------              *  LCL_VAR   ref    V15 tmp9         u:3 (last use) $4ca
new node is :                [000529] ------------              *  PUTARG_REG ref    REG r8

lowering arg : N005 (  1,  1) [000110] ------------              *  LCL_VAR   ref    V14 tmp8         u:2 (last use) $2db
new node is :                [000530] ------------              *  PUTARG_REG ref    REG rdx

lowering arg : N006 (  2, 10) [000113] H-----------              *  CNS_INT(h) long   0xd1ffab1e method $196
new node is :                [000531] ------------              *  PUTARG_REG long   REG rcx

lowering call (after):
N004 (  1,  1) [000111] ------------       t111 =    LCL_VAR   ref    V15 tmp9         u:3 (last use) $4ca
                                                  /--*  t111   ref    
               [000529] ------------       t529 = *  PUTARG_REG ref    REG r8
N005 (  1,  1) [000110] ------------       t110 =    LCL_VAR   ref    V14 tmp8         u:2 (last use) $2db
                                                  /--*  t110   ref    
               [000530] ------------       t530 = *  PUTARG_REG ref    REG rdx
N006 (  2, 10) [000113] H-----------       t113 =    CNS_INT(h) long   0xd1ffab1e method $196
                                                  /--*  t113   long   
               [000531] ------------       t531 = *  PUTARG_REG long   REG rcx
                                                  /--*  t529   ref    arg2 in r8
                                                  +--*  t530   ref    arg1 in rdx
                                                  +--*  t531   long   arg0 in rcx
N007 ( 18, 20) [000112] --CXG-------       t112 = *  CALL      ref    System.Linq.Enumerable.SelectMany $2f6

lowering store lcl var/field (before):
N004 (  1,  1) [000111] ------------       t111 =    LCL_VAR   ref    V15 tmp9         u:3 (last use) $4ca
                                                  /--*  t111   ref    
               [000529] ------------       t529 = *  PUTARG_REG ref    REG r8
N005 (  1,  1) [000110] ------------       t110 =    LCL_VAR   ref    V14 tmp8         u:2 (last use) $2db
                                                  /--*  t110   ref    
               [000530] ------------       t530 = *  PUTARG_REG ref    REG rdx
N006 (  2, 10) [000113] H-----------       t113 =    CNS_INT(h) long   0xd1ffab1e method $196
                                                  /--*  t113   long   
               [000531] ------------       t531 = *  PUTARG_REG long   REG rcx
                                                  /--*  t529   ref    arg2 in r8
                                                  +--*  t530   ref    arg1 in rdx
                                                  +--*  t531   long   arg0 in rcx
N007 ( 18, 20) [000112] --CXG-------       t112 = *  CALL      ref    System.Linq.Enumerable.SelectMany $2f6
                                                  /--*  t112   ref    
N009 ( 18, 20) [000313] DA-XG-------              *  STORE_LCL_VAR ref    V27 tmp21        d:2

lowering store lcl var/field (after):
N004 (  1,  1) [000111] ------------       t111 =    LCL_VAR   ref    V15 tmp9         u:3 (last use) $4ca
                                                  /--*  t111   ref    
               [000529] ------------       t529 = *  PUTARG_REG ref    REG r8
N005 (  1,  1) [000110] ------------       t110 =    LCL_VAR   ref    V14 tmp8         u:2 (last use) $2db
                                                  /--*  t110   ref    
               [000530] ------------       t530 = *  PUTARG_REG ref    REG rdx
N006 (  2, 10) [000113] H-----------       t113 =    CNS_INT(h) long   0xd1ffab1e method $196
                                                  /--*  t113   long   
               [000531] ------------       t531 = *  PUTARG_REG long   REG rcx
                                                  /--*  t529   ref    arg2 in r8
                                                  +--*  t530   ref    arg1 in rdx
                                                  +--*  t531   long   arg0 in rcx
N007 ( 18, 20) [000112] --CXG-------       t112 = *  CALL      ref    System.Linq.Enumerable.SelectMany $2f6
                                                  /--*  t112   ref    
N009 ( 18, 20) [000313] DA-XG-------              *  STORE_LCL_VAR ref    V27 tmp21        d:2

Addressing mode:
  Base
    N004 (  1,  1) [000308] ------------              *  LCL_VAR   ref    V01 loc0         u:2 $1c1
  + 16
Removing unused node:
  N005 (  1,  1) [000410] -c----------              *  CNS_INT   long   16 field offset Fseq[_size] $342
New addressing mode node:
  N006 (  2,  2) [000411] ------------              *  LEA(b+16) byref 

lowering call (before):
N004 (  1,  1) [000308] ------------       t308 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t308   ref    
N006 (  2,  2) [000411] -c----------       t411 = *  LEA(b+16) byref 
                                                  /--*  t411   byref  
N007 (  4,  4) [000309] n---GO------       t309 = *  IND       int    <l:$254, c:$253>
N008 (  1,  1) [000109] ------------       t109 =    LCL_VAR   ref    V01 loc0         u:2 (last use) $1c1
N009 (  1,  1) [000310] ------------       t310 =    LCL_VAR   ref    V27 tmp21        u:2 (last use) $2f6
                                                  /--*  t309   int    arg1 in rdx
                                                  +--*  t109   ref    this in rcx
                                                  +--*  t310   ref    arg2 in r8
N010 ( 20, 15) [000311] --CXGO------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange $VN.Void

objp:
======
lowering arg : N001 (  0,  0) [000413] ----------L-              *  ARGPLACE  ref    $2f9

args:
======
lowering arg : N002 (  0,  0) [000412] ----------L-              *  ARGPLACE  int    $1c1
lowering arg : N003 (  0,  0) [000414] ----------L-              *  ARGPLACE  ref    <l:$254, c:$253>

late:
======
lowering arg : N007 (  4,  4) [000309] n---GO------              *  IND       int    <l:$254, c:$253>
new node is :                [000532] ----GO------              *  PUTARG_REG int    REG rdx

lowering arg : N008 (  1,  1) [000109] ------------              *  LCL_VAR   ref    V01 loc0         u:2 (last use) $1c1
new node is :                [000533] ------------              *  PUTARG_REG ref    REG rcx

lowering arg : N009 (  1,  1) [000310] ------------              *  LCL_VAR   ref    V27 tmp21        u:2 (last use) $2f6
new node is :                [000534] ------------              *  PUTARG_REG ref    REG r8

lowering call (after):
N004 (  1,  1) [000308] ------------       t308 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t308   ref    
N006 (  2,  2) [000411] -c----------       t411 = *  LEA(b+16) byref 
                                                  /--*  t411   byref  
N007 (  4,  4) [000309] n---GO------       t309 = *  IND       int    <l:$254, c:$253>
                                                  /--*  t309   int    
               [000532] ----GO------       t532 = *  PUTARG_REG int    REG rdx
N008 (  1,  1) [000109] ------------       t109 =    LCL_VAR   ref    V01 loc0         u:2 (last use) $1c1
                                                  /--*  t109   ref    
               [000533] ------------       t533 = *  PUTARG_REG ref    REG rcx
N009 (  1,  1) [000310] ------------       t310 =    LCL_VAR   ref    V27 tmp21        u:2 (last use) $2f6
                                                  /--*  t310   ref    
               [000534] ------------       t534 = *  PUTARG_REG ref    REG r8
                                                  /--*  t532   int    arg1 in rdx
                                                  +--*  t533   ref    this in rcx
                                                  +--*  t534   ref    arg2 in r8
N010 ( 20, 15) [000311] --CXGO------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange $VN.Void

lowering store lcl var/field (before):
N001 (  1,  1) [000116] ------------       t116 =    LCL_VAR   int    V03 loc2         u:3 (last use) $280
N002 (  1,  1) [000117] -c----------       t117 =    CNS_INT   int    1 $46
                                                  /--*  t116   int    
                                                  +--*  t117   int    
N003 (  3,  3) [000118] ------------       t118 = *  ADD       int    $269
                                                  /--*  t118   int    
N005 (  3,  3) [000120] DA----------              *  STORE_LCL_VAR int    V03 loc2         d:4

lowering store lcl var/field (after):
N001 (  1,  1) [000116] ------------       t116 =    LCL_VAR   int    V03 loc2         u:3 (last use) $280
N002 (  1,  1) [000117] -c----------       t117 =    CNS_INT   int    1 $46
                                                  /--*  t116   int    
                                                  +--*  t117   int    
N003 (  3,  3) [000118] ------------       t118 = *  ADD       int    $269
                                                  /--*  t118   int    
N005 (  3,  3) [000120] DA----------              *  STORE_LCL_VAR int    V03 loc2         d:4

lowering call (before):
N003 (  1,  1) [000180] ------------       t180 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
N004 (  2, 10) [000182] H-----------       t182 =    CNS_INT(h) long   0xd1ffab1e method $19c
                                                  /--*  t180   ref    arg1 in rdx
                                                  +--*  t182   long   arg0 in rcx
N005 ( 17, 18) [000181] --CXG-------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle $VN.Void

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000416] ----------L-              *  ARGPLACE  long   $19c
lowering arg : N002 (  0,  0) [000415] ----------L-              *  ARGPLACE  ref    $1c1

late:
======
lowering arg : N003 (  1,  1) [000180] ------------              *  LCL_VAR   ref    V01 loc0         u:2 $1c1
new node is :                [000535] ------------              *  PUTARG_REG ref    REG rdx

lowering arg : N004 (  2, 10) [000182] H-----------              *  CNS_INT(h) long   0xd1ffab1e method $19c
new node is :                [000536] ------------              *  PUTARG_REG long   REG rcx

lowering call (after):
N003 (  1,  1) [000180] ------------       t180 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t180   ref    
               [000535] ------------       t535 = *  PUTARG_REG ref    REG rdx
N004 (  2, 10) [000182] H-----------       t182 =    CNS_INT(h) long   0xd1ffab1e method $19c
                                                  /--*  t182   long   
               [000536] ------------       t536 = *  PUTARG_REG long   REG rcx
                                                  /--*  t535   ref    arg1 in rdx
                                                  +--*  t536   long   arg0 in rcx
N005 ( 17, 18) [000181] --CXG-------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle $VN.Void

lowering call (before):
N004 (  2, 10) [000417] H-----------       t417 =    CNS_INT(h) long   0xD1FFAB1E "Enumerated and shuffled the project paths." $19d
                                                  /--*  t417   long   
N005 (  4, 12) [000418] #---G-------       t418 = *  IND       ref    $1f9
N006 (  2, 10) [000186] H-----------       t186 =    CNS_INT(h) long   0xd1ffab1e method $181
N007 (  1,  1) [000184] ------------       t184 =    CNS_INT   int    2 $42
                                                  /--*  t418   ref    arg1 in rdx
                                                  +--*  t186   long   arg0 in rcx
                                                  +--*  t184   int    arg2 in r8
N008 ( 21, 31) [000185] --CXG-------       t185 = *  CALL      ref    SolutionAnalyzer.Logger.Log $10d

objp:
======

args:
======
lowering arg : N001 (  0,  0) [000420] ----------L-              *  ARGPLACE  long   $181
lowering arg : N002 (  0,  0) [000419] ----------L-              *  ARGPLACE  ref    $1f9
lowering arg : N003 (  0,  0) [000421] ----------L-              *  ARGPLACE  int    $42

late:
======
lowering arg : N005 (  4, 12) [000418] #---G-------              *  IND       ref    $1f9
new node is :                [000537] ----G-------              *  PUTARG_REG ref    REG rdx

lowering arg : N006 (  2, 10) [000186] H-----------              *  CNS_INT(h) long   0xd1ffab1e method $181
new node is :                [000538] ------------              *  PUTARG_REG long   REG rcx

lowering arg : N007 (  1,  1) [000184] ------------              *  CNS_INT   int    2 $42
new node is :                [000539] ------------              *  PUTARG_REG int    REG r8

lowering call (after):
N004 (  2, 10) [000417] H-----------       t417 =    CNS_INT(h) long   0xD1FFAB1E "Enumerated and shuffled the project paths." $19d
                                                  /--*  t417   long   
N005 (  4, 12) [000418] #---G-------       t418 = *  IND       ref    $1f9
                                                  /--*  t418   ref    
               [000537] ----G-------       t537 = *  PUTARG_REG ref    REG rdx
N006 (  2, 10) [000186] H-----------       t186 =    CNS_INT(h) long   0xd1ffab1e method $181
                                                  /--*  t186   long   
               [000538] ------------       t538 = *  PUTARG_REG long   REG rcx
N007 (  1,  1) [000184] ------------       t184 =    CNS_INT   int    2 $42
                                                  /--*  t184   int    
               [000539] ------------       t539 = *  PUTARG_REG int    REG r8
                                                  /--*  t537   ref    arg1 in rdx
                                                  +--*  t538   long   arg0 in rcx
                                                  +--*  t539   int    arg2 in r8
N008 ( 21, 31) [000185] --CXG-------       t185 = *  CALL      ref    SolutionAnalyzer.Logger.Log $10d

lowering GT_RETURN
N002 (  2,  2) [000191] ------------              *  RETURN    ref    $10f
============lowering call (before):
N001 ( 14,  5) [000303] --CXG-------                 CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance $VN.Void

objp:
======

args:
======

late:
======
lowering call (after):
N001 ( 14,  5) [000303] --CXG-------                 CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance $VN.Void

Lower has completed modifying nodes.

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB15 ( cond )                     i label target hascall gcsafe idxlen newobj LIR 
BB02 [0001]  2       BB01,BB14             4     0 [01D..02E)-> BB07 ( cond )                     i Loop label target hascall gcsafe idxlen nullcheck bwd bwd-target LIR 
BB03 [0002]  1       BB02                  2     0 [02E..037)-> BB05 ( cond )                     i gcsafe idxlen bwd LIR 
BB04 [0013]  1       BB03                  2     0 [02E..02F)-> BB06 (always)                     i hascall gcsafe bwd LIR 
BB05 [0014]  1       BB03                  2     0 [02E..02F)                                     i label target hascall gcsafe bwd LIR 
BB06 [0015]  2       BB04,BB05             2     0 [???..???)-> BB14 (always)                     internal label target gcsafe bwd LIR 
BB07 [0003]  1       BB02                  2     0 [037..04B)-> BB10 ( cond )                     i label target hascall gcsafe bwd LIR 
BB08 [0004]  1       BB07                  2     0 [000..062)-> BB16 ( cond )                     i hascall gcsafe newobj bwd LIR 
BB09 [0020]  1       BB08                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd LIR 
BB10 [0005]  2       BB07,BB09             2     0 [062..085)-> BB13 ( cond )                     i label target hascall gcsafe bwd LIR 
BB11 [0006]  1       BB10                  2     0 [000..09C)-> BB16 ( cond )                     i hascall gcsafe newobj bwd LIR 
BB12 [0028]  1       BB11                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd LIR 
BB13 [0007]  2       BB10,BB12             2     0 [09C..0A6)                                     i label target hascall gcsafe bwd LIR 
BB14 [0008]  2       BB06,BB13             4     0 [0A6..0B3)-> BB02 ( cond )                     i label target gcsafe idxlen bwd LIR 
BB15 [0010]  2       BB01,BB14             1       [0B3..0C7)        (return)                     i label target hascall gcsafe LIR 
BB16 [0027]  2       BB08,BB11             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..01D) -> BB15 (cond), preds={} succs={BB02,BB15}
N004 (  2, 10) [000316] H-----------       t316 =    CNS_INT(h) long   0xD1FFAB1E "Started enumerating project paths." $180
                                                  /--*  t316   long   
N005 (  4, 12) [000317] #---G-------       t317 = *  IND       ref    $1c0
                                                  /--*  t317   ref    
               [000494] ----G-------       t494 = *  PUTARG_REG ref    REG rdx
N006 (  2, 10) [000003] H-----------         t3 =    CNS_INT(h) long   0xd1ffab1e method $181
                                                  /--*  t3     long   
               [000495] ------------       t495 = *  PUTARG_REG long   REG rcx
N007 (  1,  1) [000001] ------------         t1 =    CNS_INT   int    2 $42
                                                  /--*  t1     int    
               [000496] ------------       t496 = *  PUTARG_REG int    REG r8
                                                  /--*  t494   ref    arg1 in rdx
                                                  +--*  t495   long   arg0 in rcx
                                                  +--*  t496   int    arg2 in r8
N008 ( 21, 31) [000002] --CXG-------         t2 = *  CALL      ref    SolutionAnalyzer.Logger.Log $101
               [000459] ------------                 IL_OFFSET void   IL offset: 0xc
N002 (  2, 10) [000008] H-----------         t8 =    CNS_INT(h) long   0xd1ffab1e token $182
                                                  /--*  t8     long   
               [000497] ------------       t497 = *  PUTARG_REG long   REG rcx
                                                  /--*  t497   long   arg0 in rcx
N003 ( 16, 16) [000009] --C---------         t9 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1c1
                                                  /--*  t9     ref    
N005 ( 16, 16) [000011] DA----------              *  STORE_LCL_VAR ref    V07 tmp1         d:2
N003 (  1,  1) [000012] ------------        t12 =    LCL_VAR   ref    V07 tmp1         u:2 $1c1
                                                  /--*  t12    ref    
               [000498] ------------       t498 = *  PUTARG_REG ref    REG rcx
N004 (  1,  1) [000007] ------------         t7 =    CNS_INT   int    100 $43
                                                  /--*  t7     int    
               [000499] ------------       t499 = *  PUTARG_REG int    REG rdx
                                                  /--*  t498   ref    this in rcx
                                                  +--*  t499   int    arg1 in rdx
N005 ( 16, 10) [000013] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor $VN.Void
               [000460] ------------                 IL_OFFSET void   IL offset: 0x13
N001 (  1,  1) [000014] ------------        t14 =    LCL_VAR   ref    V07 tmp1         u:2 (last use) $1c1
                                                  /--*  t14    ref    
N003 (  1,  3) [000016] DA----------              *  STORE_LCL_VAR ref    V01 loc0         d:2
               [000461] ------------                 IL_OFFSET void   IL offset: 0x14
N001 (  1,  1) [000017] ------------        t17 =    LCL_VAR   ref    V00 arg0         u:1 (last use) $80
                                                  /--*  t17    ref    
N003 (  1,  3) [000019] DA----------              *  STORE_LCL_VAR ref    V02 loc1         d:2
               [000462] ------------                 IL_OFFSET void   IL offset: 0x16
N001 (  1,  1) [000020] ------------        t20 =    CNS_INT   int    0 $40
                                                  /--*  t20    int    
N003 (  1,  3) [000022] DA----------              *  STORE_LCL_VAR int    V03 loc2         d:2
               [000463] ------------                 IL_OFFSET void   IL offset: 0xaa
N001 (  1,  1) [000424] ------------       t424 =    LCL_VAR   ref    V02 loc1         u:2 $80
                                                  /--*  t424   ref    
               [000491] -c----------       t491 = *  LEA(b+8)  ref   
                                                  /--*  t491   ref    
N002 (  3,  3) [000423] ---X--------       t423 = *  IND       int    $240
                                                  /--*  t423   int    
N004 (  3,  3) [000452] DA-X--------              *  STORE_LCL_VAR int    V29 cse1         d:1
N005 (  1,  1) [000453] ------------       t453 =    LCL_VAR   int    V29 cse1         u:1 $240
N007 (  1,  1) [000457] -c----------       t457 =    CNS_INT   int    0 $40
                                                  /--*  t453   int    
                                                  +--*  t457   int    
N008 (  6,  6) [000422] J--X---N----              *  LE        void   $242
N009 (  8,  8) [000426] ---X--------              *  JTRUE     void  

------------ BB02 [01D..02E) -> BB07 (cond), preds={BB01,BB14} succs={BB03,BB07}
N001 (  0,  0) [000437] ------------       t437 =    PHI_ARG   int    V03 loc2         u:4
N002 (  0,  0) [000436] ------------       t436 =    PHI_ARG   int    V03 loc2         u:2 $40
                                                  /--*  t437   int    
                                                  +--*  t436   int    
N003 (  0,  0) [000428] ------------       t428 = *  PHI       int   
                                                  /--*  t428   int    
N005 (  0,  0) [000429] DA----------              *  STORE_LCL_VAR int    V03 loc2         d:3
               [000464] ------------                 IL_OFFSET void   IL offset: 0x1d
N002 (  1,  1) [000324] ------------       t324 =    LCL_VAR   ref    V02 loc1         u:2 $80
N003 (  1,  1) [000325] ------------       t325 =    LCL_VAR   int    V03 loc2         u:3 $280
                                                  /--*  t325   int    
N004 (  2,  3) [000328] ------------       t328 = *  CAST      long <- int $300
                                                  /--*  t324   ref    
                                                  +--*  t328   long   
N009 (  5,  6) [000333] -c----------       t333 = *  LEA(b+(i*8)+16) byref 
                                                  /--*  t333   byref  
N010 (  6,  7) [000030] a---G-------        t30 = *  IND       ref    <l:$1ca, c:$2c1>
                                                  /--*  t30    ref    
N013 (  6,  7) [000032] DA--G-------              *  STORE_LCL_VAR ref    V04 loc3         d:2
               [000465] ------------                 IL_OFFSET void   IL offset: 0x21
N001 (  1,  1) [000196] ------------       t196 =    LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
                                                  /--*  t196   ref    
N002 (  2,  2) [000197] ---X--------              *  NULLCHECK int    <l:$1d0, c:$1cf>
N004 (  2, 10) [000335] H-----------       t335 =    CNS_INT(h) long   0xD1FFAB1E ".csproj" $184
                                                  /--*  t335   long   
N005 (  4, 12) [000336] #---G-------       t336 = *  IND       ref    $1d1
                                                  /--*  t336   ref    
               [000500] ----G-------       t500 = *  PUTARG_REG ref    REG rdx
N006 (  1,  1) [000033] ------------        t33 =    LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
                                                  /--*  t33    ref    
               [000501] ------------       t501 = *  PUTARG_REG ref    REG rcx
N007 (  1,  1) [000194] ------------       t194 =    CNS_INT   int    0 $40
                                                  /--*  t194   int    
               [000502] ------------       t502 = *  PUTARG_REG int    REG r8
                                                  /--*  t500   ref    arg1 in rdx
                                                  +--*  t501   ref    this in rcx
                                                  +--*  t502   int    arg2 in r8
N008 ( 20, 23) [000195] --CXG-------       t195 = *  CALL      int    System.String.EndsWith $401
N009 (  1,  1) [000037] -c----------        t37 =    CNS_INT   int    0 $40
                                                  /--*  t195   int    
                                                  +--*  t37    int    
N010 ( 22, 25) [000038] J--XG--N----              *  EQ        void   $244
N011 ( 24, 27) [000039] ---XG-------              *  JTRUE     void  

------------ BB03 [02E..037) -> BB05 (cond), preds={BB02} succs={BB04,BB05}
               [000466] ------------                 IL_OFFSET void   IL offset: 0x2e
N001 (  1,  1) [000199] -c----------       t199 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t199   ref    
N003 (  2,  2) [000343] -c----------       t343 = *  LEA(b+20) byref 
                                                  /--*  t343   byref  
N004 (  4,  4) [000200] nc--GO------       t200 = *  IND       int    <l:$258, c:$257>
N005 (  1,  1) [000201] -c----------       t201 =    CNS_INT   int    1 $46
                                                  /--*  t200   int    
                                                  +--*  t201   int    
N006 (  6,  6) [000202] -c--GO------       t202 = *  ADD       int    <l:$25c, c:$25b>
N007 (  1,  1) [000177] ------------       t177 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t177   ref    
N009 (  2,  2) [000341] -c----------       t341 = *  LEA(b+20) byref 
                                                  /--*  t341   byref  
                                                  +--*  t202   int    
               [000467] -A--GO------              *  STOREIND  int   
               [000468] ------------                 IL_OFFSET void   IL offset: 0x2e
N001 (  1,  1) [000205] ------------       t205 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t205   ref    
N003 (  2,  2) [000345] -c----------       t345 = *  LEA(b+8)  byref 
                                                  /--*  t345   byref  
N004 (  4,  4) [000206] n---GO------       t206 = *  IND       ref    <l:$1f0, c:$1ef>
                                                  /--*  t206   ref    
N006 (  4,  4) [000208] DA--GO------              *  STORE_LCL_VAR ref    V18 tmp12        d:2
               [000469] ------------                 IL_OFFSET void   IL offset: 0x2e
N001 (  1,  1) [000209] ------------       t209 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t209   ref    
N003 (  2,  2) [000347] -c----------       t347 = *  LEA(b+16) byref 
                                                  /--*  t347   byref  
N004 (  4,  4) [000210] n---GO------       t210 = *  IND       int    <l:$260, c:$25f>
                                                  /--*  t210   int    
N006 (  4,  4) [000212] DA--GO------              *  STORE_LCL_VAR int    V19 tmp13        d:2
               [000470] ------------                 IL_OFFSET void   IL offset: 0x2e
N001 (  1,  1) [000214] ------------       t214 =    LCL_VAR   ref    V18 tmp12        u:2 <l:$1ee, c:$2fc>
                                                  /--*  t214   ref    
               [000493] -c----------       t493 = *  LEA(b+8)  ref   
                                                  /--*  t493   ref    
N002 (  3,  3) [000215] -c-X--------       t215 = *  IND       int    <l:$262, c:$261>
N003 (  1,  1) [000213] ------------       t213 =    LCL_VAR   int    V19 tmp13        u:2 <l:$25e, c:$411>
                                                  /--*  t215   int    
                                                  +--*  t213   int    
N004 (  5,  5) [000216] N--X---N-U--              *  LE        void   <l:$266, c:$265>
N005 (  7,  7) [000217] ---X--------              *  JTRUE     void  

------------ BB04 [02E..02F) -> BB06 (always), preds={BB03} succs={BB06}
               [000471] ------------                 IL_OFFSET void   IL offset: 0x2e
N001 (  1,  1) [000221] ------------       t221 =    LCL_VAR   int    V19 tmp13        u:2 <l:$25e, c:$411>
N002 (  1,  1) [000222] -c----------       t222 =    CNS_INT   int    1 $46
                                                  /--*  t221   int    
                                                  +--*  t222   int    
N003 (  3,  3) [000223] ------------       t223 = *  ADD       int    <l:$268, c:$267>
N004 (  1,  1) [000220] ------------       t220 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t220   ref    
N006 (  2,  2) [000349] -c----------       t349 = *  LEA(b+16) byref 
                                                  /--*  t349   byref  
                                                  +--*  t223   int    
               [000472] -A--GO------              *  STOREIND  int   
               [000473] ------------                 IL_OFFSET void   IL offset: 0x2e
N004 (  1,  1) [000226] ------------       t226 =    LCL_VAR   ref    V18 tmp12        u:2 (last use) <l:$1ee, c:$2fc>
                                                  /--*  t226   ref    
               [000503] ------------       t503 = *  PUTARG_REG ref    REG rcx
N005 (  1,  1) [000227] ------------       t227 =    LCL_VAR   int    V19 tmp13        u:2 (last use) <l:$25e, c:$411>
                                                  /--*  t227   int    
               [000504] ------------       t504 = *  PUTARG_REG int    REG rdx
N006 (  1,  1) [000228] ------------       t228 =    LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>
                                                  /--*  t228   ref    
               [000505] ------------       t505 = *  PUTARG_REG ref    REG r8
                                                  /--*  t503   ref    arg0 in rcx
                                                  +--*  t504   int    arg1 in rdx
                                                  +--*  t505   ref    arg2 in r8
N007 ( 17, 11) [000229] --CXG-------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST $1db

------------ BB05 [02E..02F), preds={BB03} succs={BB06}
               [000474] ------------                 IL_OFFSET void   IL offset: 0x2e
N003 (  1,  1) [000218] ------------       t218 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t218   ref    
               [000506] ------------       t506 = *  PUTARG_REG ref    REG rcx
N004 (  1,  1) [000178] ------------       t178 =    LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>
                                                  /--*  t178   ref    
               [000507] ------------       t507 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t506   ref    this in rcx
                                                  +--*  t507   ref    arg1 in rdx
N005 ( 16, 10) [000219] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize $VN.Void

------------ BB06 [???..???) -> BB14 (always), preds={BB04,BB05} succs={BB14}

------------ BB07 [037..04B) -> BB10 (cond), preds={BB02} succs={BB08,BB10}
               [000475] ------------                 IL_OFFSET void   IL offset: 0x37
N002 (  1,  1) [000235] ------------       t235 =    CNS_INT   int    1 $46
                                                  /--*  t235   int    
               [000508] ------------       t508 = *  PUTARG_REG int    REG rcx
                                                  /--*  t508   int    arg0 in rcx
N003 ( 15,  7) [000236] --CXG-------       t236 = *  CALL      ref    System.IO.EnumerationOptions.FromSearchOption $2c6
                                                  /--*  t236   ref    
N005 ( 15,  7) [000247] DA-XG-------              *  STORE_LCL_VAR ref    V20 tmp14        d:2
N005 (  2, 10) [000356] H-----------       t356 =    CNS_INT(h) long   0xD1FFAB1E "*" $185
                                                  /--*  t356   long   
N006 (  4, 12) [000357] #---G-------       t357 = *  IND       ref    $1d2
                                                  /--*  t357   ref    
               [000509] ----G-------       t509 = *  PUTARG_REG ref    REG rdx
N007 (  1,  1) [000040] ------------        t40 =    LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
                                                  /--*  t40    ref    
               [000510] ------------       t510 = *  PUTARG_REG ref    REG rcx
N008 (  1,  1) [000244] ------------       t244 =    LCL_VAR   ref    V20 tmp14        u:2 (last use) $2c6
                                                  /--*  t244   ref    
               [000511] ------------       t511 = *  PUTARG_REG ref    REG r9
N009 (  1,  1) [000243] ------------       t243 =    CNS_INT   int    2 $42
                                                  /--*  t243   int    
               [000512] ------------       t512 = *  PUTARG_REG int    REG r8
                                                  /--*  t509   ref    arg1 in rdx
                                                  +--*  t510   ref    arg0 in rcx
                                                  +--*  t511   ref    arg3 in r9
                                                  +--*  t512   int    arg2 in r8
N010 ( 21, 24) [000245] --CXG-------       t245 = *  CALL      ref    System.IO.Directory.InternalEnumeratePaths $2cc
                                                  /--*  t245   ref    
N012 ( 21, 24) [000054] DA-XG-------              *  STORE_LCL_VAR ref    V09 tmp3         d:2
N003 (  2, 10) [000047] ------------        t47 =    CNS_INT   long   0x7ffc7e4c17e0 $345
                                                  /--*  t47    long   
               [000513] ------------       t513 = *  PUTARG_REG long   REG rcx
N004 (  1,  1) [000048] ------------        t48 =    CNS_INT   int    35 $47
                                                  /--*  t48    int    
               [000514] ------------       t514 = *  PUTARG_REG int    REG rdx
                                                  /--*  t513   long   arg0 in rcx
                                                  +--*  t514   int    arg1 in rdx
N005 ( 17, 18) [000049] H-CXG-------        t49 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
                                                  /--*  t49    long   
N007 ( 17, 18) [000443] DA-XG-------              *  STORE_LCL_VAR long   V28 cse0         d:1
N010 (  2, 10) [000364] I-----------       t364 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] $186
                                                  /--*  t364   long   
N011 (  4, 12) [000045] n---G-------        t45 = *  IND       ref    <l:$4c0, c:$2cf>
                                                  /--*  t45    ref    
N014 ( 22, 31) [000052] DA-XG-------              *  STORE_LCL_VAR ref    V08 tmp2         d:2
N001 (  1,  1) [000055] ------------        t55 =    LCL_VAR   ref    V09 tmp3         u:2 (last use) $2cc
                                                  /--*  t55    ref    
N003 (  1,  3) [000062] DA----------              *  STORE_LCL_VAR ref    V10 tmp4         d:2
N001 (  1,  1) [000056] ------------        t56 =    LCL_VAR   ref    V08 tmp2         u:2 <l:$4c0, c:$2cf>
                                                  /--*  t56    ref    
N003 (  1,  3) [000065] DA----------              *  STORE_LCL_VAR ref    V11 tmp5         d:2
N001 (  1,  1) [000057] ------------        t57 =    LCL_VAR   ref    V11 tmp5         u:2 (last use) <l:$4c0, c:$2cf>
N002 (  1,  1) [000058] -c----------        t58 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t57    ref    
                                                  +--*  t58    ref    
N003 (  3,  3) [000059] J------N----              *  NE        void   <l:$246, c:$245>
N004 (  5,  5) [000060] ------------              *  JTRUE     void  

------------ BB08 [000..062) -> BB16 (cond), preds={BB07} succs={BB09,BB16}
N002 (  2, 10) [000157] H-----------       t157 =    CNS_INT(h) long   0xd1ffab1e token $187
                                                  /--*  t157   long   
               [000515] ------------       t515 = *  PUTARG_REG long   REG rcx
                                                  /--*  t515   long   arg0 in rcx
N003 ( 16, 16) [000158] --C---------       t158 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1d6
                                                  /--*  t158   ref    
N005 ( 16, 16) [000160] DA----------              *  STORE_LCL_VAR ref    V17 tmp11        d:2
N002 (  2, 10) [000368] I-----------       t368 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] $188
                                                  /--*  t368   long   
N003 (  4, 12) [000150] n---G-------       t150 = *  IND       ref    <l:$4c1, c:$2d5>
                                                  /--*  t150   ref    
N006 (  5, 13) [000262] DA--G-------              *  STORE_LCL_VAR ref    V21 tmp15        d:2
N001 (  1,  1) [000249] ------------       t249 =    LCL_VAR   ref    V21 tmp15        u:2 <l:$4c1, c:$2d5>
N002 (  1,  1) [000250] -c----------       t250 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t249   ref    
                                                  +--*  t250   ref    
N003 (  3,  3) [000251] J------N----              *  EQ        void   <l:$248, c:$247>
N004 (  5,  5) [000252] ------------              *  JTRUE     void  

------------ BB09 [000..000), preds={BB08} succs={BB10}
N001 (  1,  1) [000161] ------------       t161 =    LCL_VAR   ref    V17 tmp11        u:2 $1d6
                                                  /--*  t161   ref    
N003 (  2,  2) [000370] ------------       t370 = *  LEA(b+8)  byref 
N005 (  1,  1) [000253] ------------       t253 =    LCL_VAR   ref    V21 tmp15        u:2 (last use) <l:$4c1, c:$2d5>
                                                  /--*  t370   byref  
                                                  +--*  t253   ref    
               [000476] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000256] ------------       t256 =    LCL_VAR   ref    V17 tmp11        u:2 $1d6
                                                  /--*  t256   ref    
N003 (  2,  2) [000372] -c----------       t372 = *  LEA(b+24) byref 
N005 (  2, 10) [000156] H-----------       t156 =    CNS_INT(h) long   0xd1ffab1e ftn $18a
                                                  /--*  t372   byref  
                                                  +--*  t156   long   
               [000477] -A--GO------              *  STOREIND  long  
               [000478] ------------                 IL_OFFSET void   IL offset: 0x5c
N002 (  2, 10) [000375] I-----------       t375 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] $186
N004 (  1,  1) [000164] ------------       t164 =    LCL_VAR   ref    V17 tmp11        u:2 $1d6
                                                  /--*  t375   long   
                                                  +--*  t164   ref    
               [000479] -A--G-------              *  STOREIND  ref   
N001 (  1,  1) [000163] ------------       t163 =    LCL_VAR   ref    V17 tmp11        u:2 (last use) $1d6
                                                  /--*  t163   ref    
N003 (  1,  3) [000175] DA----------              *  STORE_LCL_VAR ref    V11 tmp5         d:4

------------ BB10 [062..085) -> BB13 (cond), preds={BB07,BB09} succs={BB11,BB13}
N001 (  0,  0) [000441] ------------       t441 =    PHI_ARG   ref    V11 tmp5         u:4 $1d6
N002 (  0,  0) [000438] ------------       t438 =    PHI_ARG   ref    V11 tmp5         u:2 <l:$4c0, c:$2cf>
                                                  /--*  t441   ref    
                                                  +--*  t438   ref    
N003 (  0,  0) [000434] ------------       t434 = *  PHI       ref   
                                                  /--*  t434   ref    
N005 (  0,  0) [000435] DA----------              *  STORE_LCL_VAR ref    V11 tmp5         d:3
N004 (  1,  1) [000070] ------------        t70 =    LCL_VAR   ref    V11 tmp5         u:3 (last use) $4c4
                                                  /--*  t70    ref    
               [000516] ------------       t516 = *  PUTARG_REG ref    REG r8
N005 (  1,  1) [000069] ------------        t69 =    LCL_VAR   ref    V10 tmp4         u:2 (last use) $2cc
                                                  /--*  t69    ref    
               [000517] ------------       t517 = *  PUTARG_REG ref    REG rdx
N006 (  2, 10) [000072] H-----------        t72 =    CNS_INT(h) long   0xd1ffab1e method $18d
                                                  /--*  t72    long   
               [000518] ------------       t518 = *  PUTARG_REG long   REG rcx
                                                  /--*  t516   ref    arg2 in r8
                                                  +--*  t517   ref    arg1 in rdx
                                                  +--*  t518   long   arg0 in rcx
N007 ( 18, 20) [000071] --CXG-------        t71 = *  CALL      ref    System.Linq.Enumerable.Where $2db
                                                  /--*  t71    ref    
N009 ( 18, 20) [000075] DA-XG-------              *  STORE_LCL_VAR ref    V05 loc4         d:2
               [000480] ------------                 IL_OFFSET void   IL offset: 0x69
N003 (  2, 10) [000273] ------------       t273 =    CNS_INT   long   0x7ffc7e783cd8 $347
                                                  /--*  t273   long   
               [000519] ------------       t519 = *  PUTARG_REG long   REG rcx
N004 (  1,  1) [000274] ------------       t274 =    CNS_INT   int    40 $4a
                                                  /--*  t274   int    
               [000520] ------------       t520 = *  PUTARG_REG int    REG rdx
                                                  /--*  t519   long   arg0 in rcx
                                                  +--*  t520   int    arg1 in rdx
N005 ( 17, 18) [000275] H-CXG-------       t275 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $309
N006 (  2, 10) [000381] I-----------       t381 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<Compatible>k__BackingField] $18e
                                                  /--*  t381   long   
N007 (  4, 12) [000271] n---G-------       t271 = *  IND       ref    <l:$4c5, c:$2de>
                                                  /--*  t271   ref    
N010 ( 21, 30) [000283] DA-XG-------              *  STORE_LCL_VAR ref    V23 tmp17        d:2
N005 (  2, 10) [000382] H-----------       t382 =    CNS_INT(h) long   0xD1FFAB1E "*.csproj" $18f
                                                  /--*  t382   long   
N006 (  4, 12) [000383] #---G-------       t383 = *  IND       ref    $1e0
                                                  /--*  t383   ref    
               [000521] ----G-------       t521 = *  PUTARG_REG ref    REG rdx
N007 (  1,  1) [000077] ------------        t77 =    LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>
                                                  /--*  t77    ref    
               [000522] ------------       t522 = *  PUTARG_REG ref    REG rcx
N008 (  1,  1) [000280] ------------       t280 =    LCL_VAR   ref    V23 tmp17        u:2 (last use) <l:$4c5, c:$2de>
                                                  /--*  t280   ref    
               [000523] ------------       t523 = *  PUTARG_REG ref    REG r9
N009 (  1,  1) [000279] ------------       t279 =    CNS_INT   int    1 $46
                                                  /--*  t279   int    
               [000524] ------------       t524 = *  PUTARG_REG int    REG r8
                                                  /--*  t521   ref    arg1 in rdx
                                                  +--*  t522   ref    arg0 in rcx
                                                  +--*  t523   ref    arg3 in r9
                                                  +--*  t524   int    arg2 in r8
N010 ( 21, 24) [000281] --CXG-------       t281 = *  CALL      ref    System.IO.Directory.InternalEnumeratePaths $2e3
                                                  /--*  t281   ref    
N012 ( 21, 24) [000290] DA-XG-------              *  STORE_LCL_VAR ref    V24 tmp18        d:2
N004 (  1,  1) [000285] ------------       t285 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t285   ref    
N006 (  2,  2) [000389] -c----------       t389 = *  LEA(b+16) byref 
                                                  /--*  t389   byref  
N007 (  4,  4) [000286] n---GO------       t286 = *  IND       int    <l:$24c, c:$24b>
                                                  /--*  t286   int    
               [000525] ----GO------       t525 = *  PUTARG_REG int    REG rdx
N008 (  1,  1) [000076] ------------        t76 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t76    ref    
               [000526] ------------       t526 = *  PUTARG_REG ref    REG rcx
N009 (  1,  1) [000287] ------------       t287 =    LCL_VAR   ref    V24 tmp18        u:2 (last use) $2e3
                                                  /--*  t287   ref    
               [000527] ------------       t527 = *  PUTARG_REG ref    REG r8
                                                  /--*  t525   int    arg1 in rdx
                                                  +--*  t526   ref    this in rcx
                                                  +--*  t527   ref    arg2 in r8
N010 ( 20, 15) [000288] --CXGO------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange $VN.Void
               [000481] ------------                 IL_OFFSET void   IL offset: 0x7a
N002 (  2, 10) [000395] I-----------       t395 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] $191
                                                  /--*  t395   long   
N003 (  4, 12) [000084] n---G-------        t84 = *  IND       ref    <l:$4c6, c:$2e9>
                                                  /--*  t84    ref    
N006 (  5, 13) [000091] DA--G-------              *  STORE_LCL_VAR ref    V12 tmp6         d:2
N001 (  1,  1) [000082] ------------        t82 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t82    ref    
N003 (  1,  3) [000098] DA----------              *  STORE_LCL_VAR ref    V13 tmp7         d:2
N001 (  1,  1) [000083] ------------        t83 =    LCL_VAR   ref    V05 loc4         u:2 (last use) $2db
                                                  /--*  t83    ref    
N003 (  1,  3) [000101] DA----------              *  STORE_LCL_VAR ref    V14 tmp8         d:2
N001 (  1,  1) [000092] ------------        t92 =    LCL_VAR   ref    V12 tmp6         u:2 <l:$4c6, c:$2e9>
                                                  /--*  t92    ref    
N003 (  1,  3) [000104] DA----------              *  STORE_LCL_VAR ref    V15 tmp9         d:2
N001 (  1,  1) [000093] ------------        t93 =    LCL_VAR   ref    V15 tmp9         u:2 (last use) <l:$4c6, c:$2e9>
N002 (  1,  1) [000094] -c----------        t94 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t93    ref    
                                                  +--*  t94    ref    
N003 (  3,  3) [000095] J------N----              *  NE        void   <l:$24e, c:$24d>
N004 (  5,  5) [000096] ------------              *  JTRUE     void  

------------ BB11 [000..09C) -> BB16 (cond), preds={BB10} succs={BB12,BB16}
N002 (  2, 10) [000128] H-----------       t128 =    CNS_INT(h) long   0xd1ffab1e token $192
                                                  /--*  t128   long   
               [000528] ------------       t528 = *  PUTARG_REG long   REG rcx
                                                  /--*  t528   long   arg0 in rcx
N003 ( 16, 16) [000129] --C---------       t129 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1e4
                                                  /--*  t129   ref    
N005 ( 16, 16) [000131] DA----------              *  STORE_LCL_VAR ref    V16 tmp10        d:2
N002 (  2, 10) [000399] I-----------       t399 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] $188
                                                  /--*  t399   long   
N003 (  4, 12) [000121] n---G-------       t121 = *  IND       ref    <l:$4c7, c:$2f0>
                                                  /--*  t121   ref    
N006 (  5, 13) [000305] DA--G-------              *  STORE_LCL_VAR ref    V25 tmp19        d:2
N001 (  1,  1) [000292] ------------       t292 =    LCL_VAR   ref    V25 tmp19        u:2 <l:$4c7, c:$2f0>
N002 (  1,  1) [000293] -c----------       t293 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t292   ref    
                                                  +--*  t293   ref    
N003 (  3,  3) [000294] J------N----              *  EQ        void   <l:$250, c:$24f>
N004 (  5,  5) [000295] ------------              *  JTRUE     void  

------------ BB12 [000..000), preds={BB11} succs={BB13}
N001 (  1,  1) [000132] ------------       t132 =    LCL_VAR   ref    V16 tmp10        u:2 $1e4
                                                  /--*  t132   ref    
N003 (  2,  2) [000401] ------------       t401 = *  LEA(b+8)  byref 
N005 (  1,  1) [000296] ------------       t296 =    LCL_VAR   ref    V25 tmp19        u:2 (last use) <l:$4c7, c:$2f0>
                                                  /--*  t401   byref  
                                                  +--*  t296   ref    
               [000482] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000299] ------------       t299 =    LCL_VAR   ref    V16 tmp10        u:2 $1e4
                                                  /--*  t299   ref    
N003 (  2,  2) [000403] -c----------       t403 = *  LEA(b+24) byref 
N005 (  2, 10) [000127] H-----------       t127 =    CNS_INT(h) long   0xd1ffab1e ftn $194
                                                  /--*  t403   byref  
                                                  +--*  t127   long   
               [000483] -A--GO------              *  STOREIND  long  
               [000484] ------------                 IL_OFFSET void   IL offset: 0x96
N002 (  2, 10) [000406] I-----------       t406 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] $191
N004 (  1,  1) [000135] ------------       t135 =    LCL_VAR   ref    V16 tmp10        u:2 $1e4
                                                  /--*  t406   long   
                                                  +--*  t135   ref    
               [000485] -A--G-------              *  STOREIND  ref   
N001 (  1,  1) [000134] ------------       t134 =    LCL_VAR   ref    V16 tmp10        u:2 (last use) $1e4
                                                  /--*  t134   ref    
N003 (  1,  3) [000148] DA----------              *  STORE_LCL_VAR ref    V15 tmp9         d:4

------------ BB13 [09C..0A6), preds={BB10,BB12} succs={BB14}
N001 (  0,  0) [000440] ------------       t440 =    PHI_ARG   ref    V15 tmp9         u:4 $1e4
N002 (  0,  0) [000439] ------------       t439 =    PHI_ARG   ref    V15 tmp9         u:2 <l:$4c6, c:$2e9>
                                                  /--*  t440   ref    
                                                  +--*  t439   ref    
N003 (  0,  0) [000431] ------------       t431 = *  PHI       ref   
                                                  /--*  t431   ref    
N005 (  0,  0) [000432] DA----------              *  STORE_LCL_VAR ref    V15 tmp9         d:3
N004 (  1,  1) [000111] ------------       t111 =    LCL_VAR   ref    V15 tmp9         u:3 (last use) $4ca
                                                  /--*  t111   ref    
               [000529] ------------       t529 = *  PUTARG_REG ref    REG r8
N005 (  1,  1) [000110] ------------       t110 =    LCL_VAR   ref    V14 tmp8         u:2 (last use) $2db
                                                  /--*  t110   ref    
               [000530] ------------       t530 = *  PUTARG_REG ref    REG rdx
N006 (  2, 10) [000113] H-----------       t113 =    CNS_INT(h) long   0xd1ffab1e method $196
                                                  /--*  t113   long   
               [000531] ------------       t531 = *  PUTARG_REG long   REG rcx
                                                  /--*  t529   ref    arg2 in r8
                                                  +--*  t530   ref    arg1 in rdx
                                                  +--*  t531   long   arg0 in rcx
N007 ( 18, 20) [000112] --CXG-------       t112 = *  CALL      ref    System.Linq.Enumerable.SelectMany $2f6
                                                  /--*  t112   ref    
N009 ( 18, 20) [000313] DA-XG-------              *  STORE_LCL_VAR ref    V27 tmp21        d:2
N004 (  1,  1) [000308] ------------       t308 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t308   ref    
N006 (  2,  2) [000411] -c----------       t411 = *  LEA(b+16) byref 
                                                  /--*  t411   byref  
N007 (  4,  4) [000309] n---GO------       t309 = *  IND       int    <l:$254, c:$253>
                                                  /--*  t309   int    
               [000532] ----GO------       t532 = *  PUTARG_REG int    REG rdx
N008 (  1,  1) [000109] ------------       t109 =    LCL_VAR   ref    V01 loc0         u:2 (last use) $1c1
                                                  /--*  t109   ref    
               [000533] ------------       t533 = *  PUTARG_REG ref    REG rcx
N009 (  1,  1) [000310] ------------       t310 =    LCL_VAR   ref    V27 tmp21        u:2 (last use) $2f6
                                                  /--*  t310   ref    
               [000534] ------------       t534 = *  PUTARG_REG ref    REG r8
                                                  /--*  t532   int    arg1 in rdx
                                                  +--*  t533   ref    this in rcx
                                                  +--*  t534   ref    arg2 in r8
N010 ( 20, 15) [000311] --CXGO------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange $VN.Void

------------ BB14 [0A6..0B3) -> BB02 (cond), preds={BB06,BB13} succs={BB15,BB02}
               [000486] ------------                 IL_OFFSET void   IL offset: 0xa6
N001 (  1,  1) [000116] ------------       t116 =    LCL_VAR   int    V03 loc2         u:3 (last use) $280
N002 (  1,  1) [000117] -c----------       t117 =    CNS_INT   int    1 $46
                                                  /--*  t116   int    
                                                  +--*  t117   int    
N003 (  3,  3) [000118] ------------       t118 = *  ADD       int    $269
                                                  /--*  t118   int    
N005 (  3,  3) [000120] DA----------              *  STORE_LCL_VAR int    V03 loc2         d:4
               [000487] ------------                 IL_OFFSET void   IL offset: 0xaa
N001 (  1,  1) [000456] ------------       t456 =    LCL_VAR   int    V29 cse1         u:1 $200
N002 (  1,  1) [000023] ------------        t23 =    LCL_VAR   int    V03 loc2         u:4 $269
                                                  /--*  t456   int    
                                                  +--*  t23    int    
N003 (  3,  3) [000026] J------N----              *  GT        void   $26b
N004 (  5,  5) [000027] ------------              *  JTRUE     void  

------------ BB15 [0B3..0C7) (return), preds={BB01,BB14} succs={}
               [000488] ------------                 IL_OFFSET void   IL offset: 0xb3
N003 (  1,  1) [000180] ------------       t180 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t180   ref    
               [000535] ------------       t535 = *  PUTARG_REG ref    REG rdx
N004 (  2, 10) [000182] H-----------       t182 =    CNS_INT(h) long   0xd1ffab1e method $19c
                                                  /--*  t182   long   
               [000536] ------------       t536 = *  PUTARG_REG long   REG rcx
                                                  /--*  t535   ref    arg1 in rdx
                                                  +--*  t536   long   arg0 in rcx
N005 ( 17, 18) [000181] --CXG-------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle $VN.Void
N004 (  2, 10) [000417] H-----------       t417 =    CNS_INT(h) long   0xD1FFAB1E "Enumerated and shuffled the project paths." $19d
                                                  /--*  t417   long   
N005 (  4, 12) [000418] #---G-------       t418 = *  IND       ref    $1f9
                                                  /--*  t418   ref    
               [000537] ----G-------       t537 = *  PUTARG_REG ref    REG rdx
N006 (  2, 10) [000186] H-----------       t186 =    CNS_INT(h) long   0xd1ffab1e method $181
                                                  /--*  t186   long   
               [000538] ------------       t538 = *  PUTARG_REG long   REG rcx
N007 (  1,  1) [000184] ------------       t184 =    CNS_INT   int    2 $42
                                                  /--*  t184   int    
               [000539] ------------       t539 = *  PUTARG_REG int    REG r8
                                                  /--*  t537   ref    arg1 in rdx
                                                  +--*  t538   long   arg0 in rcx
                                                  +--*  t539   int    arg2 in r8
N008 ( 21, 31) [000185] --CXG-------       t185 = *  CALL      ref    SolutionAnalyzer.Logger.Log $10d
               [000489] ------------                 IL_OFFSET void   IL offset: 0xc5
N001 (  1,  1) [000190] ------------       t190 =    LCL_VAR   ref    V01 loc0         u:2 (last use) $1c1
                                                  /--*  t190   ref    
N002 (  2,  2) [000191] ------------              *  RETURN    ref    $10f

------------ BB16 [000..000) (throw), preds={BB08,BB11} succs={}
N001 ( 14,  5) [000303] --CXG-------                 CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance $VN.Void

-------------------------------------------------------------------------------------------------------------------

*** lvaComputeRefCounts ***

*** lvaComputeRefCounts -- explicit counts ***
New refCnts for V07: refCnt =  1, refCntWtd = 2   
New refCnts for V07: refCnt =  2, refCntWtd = 4   
New refCnts for V07: refCnt =  3, refCntWtd = 6   
New refCnts for V01: refCnt =  1, refCntWtd = 1   
New refCnts for V00: refCnt =  1, refCntWtd = 1   
New refCnts for V02: refCnt =  1, refCntWtd = 1   
New refCnts for V03: refCnt =  1, refCntWtd = 1   
New refCnts for V02: refCnt =  2, refCntWtd = 2   
New refCnts for V29: refCnt =  1, refCntWtd = 1   
New refCnts for V29: refCnt =  2, refCntWtd = 2   
New refCnts for V02: refCnt =  3, refCntWtd = 6   
New refCnts for V03: refCnt =  2, refCntWtd = 5   
New refCnts for V04: refCnt =  1, refCntWtd = 4   
New refCnts for V04: refCnt =  2, refCntWtd = 8   
New refCnts for V04: refCnt =  3, refCntWtd = 12   
New refCnts for V01: refCnt =  2, refCntWtd = 3   
New refCnts for V01: refCnt =  3, refCntWtd = 5   
New refCnts for V01: refCnt =  4, refCntWtd = 7   
New refCnts for V18: refCnt =  1, refCntWtd = 2   
New refCnts for V01: refCnt =  5, refCntWtd = 9   
New refCnts for V19: refCnt =  1, refCntWtd = 2   
New refCnts for V18: refCnt =  2, refCntWtd = 4   
New refCnts for V19: refCnt =  2, refCntWtd = 4   
New refCnts for V19: refCnt =  3, refCntWtd = 6   
New refCnts for V01: refCnt =  6, refCntWtd = 11   
New refCnts for V18: refCnt =  3, refCntWtd = 6   
New refCnts for V19: refCnt =  4, refCntWtd = 8   
New refCnts for V04: refCnt =  4, refCntWtd = 14   
New refCnts for V01: refCnt =  7, refCntWtd = 13   
New refCnts for V04: refCnt =  5, refCntWtd = 16   
New refCnts for V20: refCnt =  1, refCntWtd = 4   
New refCnts for V04: refCnt =  6, refCntWtd = 18   
New refCnts for V20: refCnt =  2, refCntWtd = 8   
New refCnts for V09: refCnt =  1, refCntWtd = 4   
New refCnts for V28: refCnt =  1, refCntWtd = 2   
New refCnts for V08: refCnt =  1, refCntWtd = 4   
New refCnts for V09: refCnt =  2, refCntWtd = 8   
New refCnts for V10: refCnt =  1, refCntWtd = 2   
New refCnts for V08: refCnt =  2, refCntWtd = 8   
New refCnts for V11: refCnt =  1, refCntWtd = 2   
New refCnts for V11: refCnt =  2, refCntWtd = 4   
New refCnts for V17: refCnt =  1, refCntWtd = 4   
New refCnts for V21: refCnt =  1, refCntWtd = 4   
New refCnts for V21: refCnt =  2, refCntWtd = 8   
New refCnts for V17: refCnt =  2, refCntWtd = 8   
New refCnts for V21: refCnt =  3, refCntWtd = 12   
New refCnts for V17: refCnt =  3, refCntWtd = 12   
New refCnts for V17: refCnt =  4, refCntWtd = 16   
New refCnts for V17: refCnt =  5, refCntWtd = 20   
New refCnts for V11: refCnt =  3, refCntWtd = 6   
New refCnts for V11: refCnt =  4, refCntWtd = 8   
New refCnts for V10: refCnt =  2, refCntWtd = 4   
New refCnts for V05: refCnt =  1, refCntWtd = 2   
New refCnts for V23: refCnt =  1, refCntWtd = 4   
New refCnts for V04: refCnt =  7, refCntWtd = 20   
New refCnts for V23: refCnt =  2, refCntWtd = 8   
New refCnts for V24: refCnt =  1, refCntWtd = 4   
New refCnts for V01: refCnt =  8, refCntWtd = 15   
New refCnts for V01: refCnt =  9, refCntWtd = 17   
New refCnts for V24: refCnt =  2, refCntWtd = 8   
New refCnts for V12: refCnt =  1, refCntWtd = 4   
New refCnts for V01: refCnt = 10, refCntWtd = 19   
New refCnts for V13: refCnt =  1, refCntWtd = 2   
New refCnts for V05: refCnt =  2, refCntWtd = 4   
New refCnts for V14: refCnt =  1, refCntWtd = 2   
New refCnts for V12: refCnt =  2, refCntWtd = 8   
New refCnts for V15: refCnt =  1, refCntWtd = 2   
New refCnts for V15: refCnt =  2, refCntWtd = 4   
New refCnts for V16: refCnt =  1, refCntWtd = 4   
New refCnts for V25: refCnt =  1, refCntWtd = 4   
New refCnts for V25: refCnt =  2, refCntWtd = 8   
New refCnts for V16: refCnt =  2, refCntWtd = 8   
New refCnts for V25: refCnt =  3, refCntWtd = 12   
New refCnts for V16: refCnt =  3, refCntWtd = 12   
New refCnts for V16: refCnt =  4, refCntWtd = 16   
New refCnts for V16: refCnt =  5, refCntWtd = 20   
New refCnts for V15: refCnt =  3, refCntWtd = 6   
New refCnts for V15: refCnt =  4, refCntWtd = 8   
New refCnts for V14: refCnt =  2, refCntWtd = 4   
New refCnts for V27: refCnt =  1, refCntWtd = 4   
New refCnts for V01: refCnt = 11, refCntWtd = 21   
New refCnts for V01: refCnt = 12, refCntWtd = 23   
New refCnts for V27: refCnt =  2, refCntWtd = 8   
New refCnts for V03: refCnt =  3, refCntWtd = 9   
New refCnts for V03: refCnt =  4, refCntWtd = 13   
New refCnts for V29: refCnt =  3, refCntWtd = 6   
New refCnts for V03: refCnt =  5, refCntWtd = 17   
New refCnts for V01: refCnt = 13, refCntWtd = 24   
New refCnts for V01: refCnt = 14, refCntWtd = 25   

*** lvaComputeRefCounts -- implicit counts ***
New refCnts for V00: refCnt =  2, refCntWtd = 2   
New refCnts for V00: refCnt =  3, refCntWtd = 3   
*************** In fgLocalVarLiveness()
; Initial local variable assignments
;
;  V00 arg0              ref  class-hnd
;  V01 loc0              ref  class-hnd exact
;  V02 loc1              ref  class-hnd
;  V03 loc2              int 
;  V04 loc3              ref  class-hnd
;  V05 loc4              ref  class-hnd
;  V06 OutArgs        lclBlk <32>  "OutgoingArgSpace"
;  V07 tmp1              ref  class-hnd exact "NewObj constructor temp"
;  V08 tmp2              ref  class-hnd "dup spill"
;  V09 tmp3              ref  class-hnd "impAppendStmt"
;  V10 tmp4              ref 
;  V11 tmp5              ref 
;  V12 tmp6              ref  class-hnd "dup spill"
;  V13 tmp7              ref 
;  V14 tmp8              ref 
;  V15 tmp9              ref 
;  V16 tmp10             ref  class-hnd exact "NewObj constructor temp"
;  V17 tmp11             ref  class-hnd exact "NewObj constructor temp"
;  V18 tmp12             ref  class-hnd "Inline stloc first use temp"
;  V19 tmp13             int  "Inline stloc first use temp"
;  V20 tmp14             ref  class-hnd "Inlining Arg"
;  V21 tmp15             ref  class-hnd "Inlining Arg"
;  V22 tmp16            long  "Inlining Arg"
;  V23 tmp17             ref  class-hnd "Inlining Arg"
;  V24 tmp18             ref  class-hnd "Inlining Arg"
;  V25 tmp19             ref  class-hnd "Inlining Arg"
;  V26 tmp20            long  "Inlining Arg"
;  V27 tmp21             ref  class-hnd "Inlining Arg"
;  V28 cse0             long  "CSE - aggressive"
;  V29 cse1              int  "CSE - aggressive"
In fgLocalVarLivenessInit
Tracked variable (27 out of 30) table:
V01 loc0          [   ref]: refCnt =   14, refCntWtd =  25   
V04 loc3          [   ref]: refCnt =    7, refCntWtd =  20   
V16 tmp10         [   ref]: refCnt =    5, refCntWtd =  20   
V17 tmp11         [   ref]: refCnt =    5, refCntWtd =  20   
V03 loc2          [   int]: refCnt =    5, refCntWtd =  17   
V21 tmp15         [   ref]: refCnt =    3, refCntWtd =  12   
V25 tmp19         [   ref]: refCnt =    3, refCntWtd =  12   
V11 tmp5          [   ref]: refCnt =    4, refCntWtd =   8   
V15 tmp9          [   ref]: refCnt =    4, refCntWtd =   8   
V19 tmp13         [   int]: refCnt =    4, refCntWtd =   8   
V08 tmp2          [   ref]: refCnt =    2, refCntWtd =   8   
V09 tmp3          [   ref]: refCnt =    2, refCntWtd =   8   
V12 tmp6          [   ref]: refCnt =    2, refCntWtd =   8   
V20 tmp14         [   ref]: refCnt =    2, refCntWtd =   8   
V23 tmp17         [   ref]: refCnt =    2, refCntWtd =   8   
V24 tmp18         [   ref]: refCnt =    2, refCntWtd =   8   
V27 tmp21         [   ref]: refCnt =    2, refCntWtd =   8   
V02 loc1          [   ref]: refCnt =    3, refCntWtd =   6   
V07 tmp1          [   ref]: refCnt =    3, refCntWtd =   6   
V18 tmp12         [   ref]: refCnt =    3, refCntWtd =   6   
V29 cse1          [   int]: refCnt =    3, refCntWtd =   6   
V00 arg0          [   ref]: refCnt =    3, refCntWtd =   3   
V05 loc4          [   ref]: refCnt =    2, refCntWtd =   4   
V10 tmp4          [   ref]: refCnt =    2, refCntWtd =   4   
V14 tmp8          [   ref]: refCnt =    2, refCntWtd =   4   
V13 tmp7          [   ref]: refCnt =    1, refCntWtd =   2   
V28 cse0          [  long]: refCnt =    1, refCntWtd =   2   

*************** In fgPerBlockLocalVarLiveness()
BB01 USE(1)={                    V00} + ByrefExposed + GcHeap
     DEF(5)={V01 V03 V02 V07 V29    } + ByrefExposed* + GcHeap*

BB02 USE(2)={    V03 V02} + ByrefExposed + GcHeap
     DEF(1)={V04        } + ByrefExposed* + GcHeap*

BB03 USE(1)={V01        } + ByrefExposed + GcHeap
     DEF(2)={    V19 V18}

BB04 USE(4)={V01 V04 V19 V18} + ByrefExposed + GcHeap
     DEF(0)={               } + ByrefExposed* + GcHeap*

BB05 USE(2)={V01 V04} + ByrefExposed + GcHeap
     DEF(0)={       } + ByrefExposed* + GcHeap*

BB06 USE(0)={}
     DEF(0)={}

BB07 USE(1)={V04                        } + ByrefExposed + GcHeap
     DEF(6)={    V11 V08 V09 V20 V10 V28} + ByrefExposed* + GcHeap*

BB08 USE(0)={       } + ByrefExposed + GcHeap
     DEF(2)={V17 V21}

BB09 USE(2)={V17 V21    }
     DEF(1)={        V11}

BB10 USE(4)={V01 V04 V11                     V10        } + ByrefExposed + GcHeap
     DEF(7)={            V15 V12 V23 V24 V05     V14 V13} + ByrefExposed* + GcHeap*

BB11 USE(0)={       } + ByrefExposed + GcHeap
     DEF(2)={V16 V25}

BB12 USE(2)={V16 V25    }
     DEF(1)={        V15}

BB13 USE(3)={V01 V15     V14} + ByrefExposed + GcHeap
     DEF(1)={        V27    } + ByrefExposed* + GcHeap*

BB14 USE(2)={V03 V29}
     DEF(1)={V03    }

BB15 USE(1)={V01} + ByrefExposed + GcHeap
     DEF(0)={   } + ByrefExposed* + GcHeap*

BB16 USE(0)={} + ByrefExposed + GcHeap
     DEF(0)={} + ByrefExposed* + GcHeap*

** Memory liveness computed, GcHeap states and ByrefExposed states match
*************** In fgInterBlockLocalVarLiveness()

BB liveness after fgLiveVarAnalysis():

BB01 IN (1)={                V00} + ByrefExposed + GcHeap
     OUT(4)={V01 V03 V02 V29    } + ByrefExposed + GcHeap

BB02 IN (4)={V01     V03 V02 V29} + ByrefExposed + GcHeap
     OUT(5)={V01 V04 V03 V02 V29} + ByrefExposed + GcHeap

BB03 IN (5)={V01 V04 V03     V02     V29} + ByrefExposed + GcHeap
     OUT(7)={V01 V04 V03 V19 V02 V18 V29} + ByrefExposed + GcHeap

BB04 IN (7)={V01 V04 V03 V19 V02 V18 V29} + ByrefExposed + GcHeap
     OUT(4)={V01     V03     V02     V29} + ByrefExposed + GcHeap

BB05 IN (5)={V01 V04 V03 V02 V29} + ByrefExposed + GcHeap
     OUT(4)={V01     V03 V02 V29} + ByrefExposed + GcHeap

BB06 IN (4)={V01 V03 V02 V29} + ByrefExposed + GcHeap
     OUT(4)={V01 V03 V02 V29} + ByrefExposed + GcHeap

BB07 IN (5)={V01 V04 V03     V02 V29    } + ByrefExposed + GcHeap
     OUT(7)={V01 V04 V03 V11 V02 V29 V10} + ByrefExposed + GcHeap

BB08 IN (6)={V01 V04     V03     V02 V29 V10} + ByrefExposed + GcHeap
     OUT(8)={V01 V04 V17 V03 V21 V02 V29 V10} + ByrefExposed + GcHeap

BB09 IN (8)={V01 V04 V17 V03 V21     V02 V29 V10} + ByrefExposed + GcHeap
     OUT(7)={V01 V04     V03     V11 V02 V29 V10} + ByrefExposed + GcHeap

BB10 IN (7)={V01 V04 V03 V11     V02 V29 V10    } + ByrefExposed + GcHeap
     OUT(6)={V01     V03     V15 V02 V29     V14} + ByrefExposed + GcHeap

BB11 IN (5)={V01     V03     V02 V29 V14} + ByrefExposed + GcHeap
     OUT(7)={V01 V16 V03 V25 V02 V29 V14} + ByrefExposed + GcHeap

BB12 IN (7)={V01 V16 V03 V25     V02 V29 V14} + ByrefExposed + GcHeap
     OUT(6)={V01     V03     V15 V02 V29 V14} + ByrefExposed + GcHeap

BB13 IN (6)={V01 V03 V15 V02 V29 V14} + ByrefExposed + GcHeap
     OUT(4)={V01 V03     V02 V29    } + ByrefExposed + GcHeap

BB14 IN (4)={V01 V03 V02 V29} + ByrefExposed + GcHeap
     OUT(4)={V01 V03 V02 V29} + ByrefExposed + GcHeap

BB15 IN (1)={V01} + ByrefExposed + GcHeap
     OUT(0)={   }

BB16 IN (0)={} + ByrefExposed + GcHeap
     OUT(0)={}

Removing dead store:
N007 ( 17, 18) [000443] DA-XG-------              *  STORE_LCL_VAR long   V28 cse0         d:1 (last use)
Removing dead store:
N003 (  1,  3) [000098] DA----------              *  STORE_LCL_VAR ref    V13 tmp7         d:2 (last use)
Removing dead LclVar use:
N001 (  1,  1) [000082] ------------              *  LCL_VAR   ref    V01 loc0         u:2 $1c1

*************** In fgUpdateFlowGraph()
Before updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB15 ( cond )                     i label target hascall gcsafe idxlen newobj LIR 
BB02 [0001]  2       BB01,BB14             4     0 [01D..02E)-> BB07 ( cond )                     i Loop label target hascall gcsafe idxlen nullcheck bwd bwd-target LIR 
BB03 [0002]  1       BB02                  2     0 [02E..037)-> BB05 ( cond )                     i gcsafe idxlen bwd LIR 
BB04 [0013]  1       BB03                  2     0 [02E..02F)-> BB06 (always)                     i hascall gcsafe bwd LIR 
BB05 [0014]  1       BB03                  2     0 [02E..02F)                                     i label target hascall gcsafe bwd LIR 
BB06 [0015]  2       BB04,BB05             2     0 [???..???)-> BB14 (always)                     internal label target gcsafe bwd LIR 
BB07 [0003]  1       BB02                  2     0 [037..04B)-> BB10 ( cond )                     i label target hascall gcsafe bwd LIR 
BB08 [0004]  1       BB07                  2     0 [000..062)-> BB16 ( cond )                     i hascall gcsafe newobj bwd LIR 
BB09 [0020]  1       BB08                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd LIR 
BB10 [0005]  2       BB07,BB09             2     0 [062..085)-> BB13 ( cond )                     i label target hascall gcsafe bwd LIR 
BB11 [0006]  1       BB10                  2     0 [000..09C)-> BB16 ( cond )                     i hascall gcsafe newobj bwd LIR 
BB12 [0028]  1       BB11                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd LIR 
BB13 [0007]  2       BB10,BB12             2     0 [09C..0A6)                                     i label target hascall gcsafe bwd LIR 
BB14 [0008]  2       BB06,BB13             4     0 [0A6..0B3)-> BB02 ( cond )                     i label target gcsafe idxlen bwd LIR 
BB15 [0010]  2       BB01,BB14             1       [0B3..0C7)        (return)                     i label target hascall gcsafe LIR 
BB16 [0027]  2       BB08,BB11             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd LIR 
-----------------------------------------------------------------------------------------------------------------------------------------


Optimizing a jump to an unconditional jump (BB04 -> BB06 -> BB14)

Compacting blocks BB05 and BB06:
*************** In fgDebugCheckBBlist

After updating the flow graph:

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB15 ( cond )                     i label target hascall gcsafe idxlen newobj LIR 
BB02 [0001]  2       BB01,BB14             4     0 [01D..02E)-> BB07 ( cond )                     i Loop label target hascall gcsafe idxlen nullcheck bwd bwd-target LIR 
BB03 [0002]  1       BB02                  2     0 [02E..037)-> BB05 ( cond )                     i gcsafe idxlen bwd LIR 
BB04 [0013]  1       BB03                  2     0 [02E..02F)-> BB14 (always)                     i hascall gcsafe bwd LIR 
BB05 [0014]  1       BB03                  2     0 [02E..02F)-> BB14 (always)                     i label target hascall gcsafe bwd LIR 
BB07 [0003]  1       BB02                  2     0 [037..04B)-> BB10 ( cond )                     i label target hascall gcsafe bwd LIR 
BB08 [0004]  1       BB07                  2     0 [000..062)-> BB16 ( cond )                     i hascall gcsafe newobj bwd LIR 
BB09 [0020]  1       BB08                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd LIR 
BB10 [0005]  2       BB07,BB09             2     0 [062..085)-> BB13 ( cond )                     i label target hascall gcsafe bwd LIR 
BB11 [0006]  1       BB10                  2     0 [000..09C)-> BB16 ( cond )                     i hascall gcsafe newobj bwd LIR 
BB12 [0028]  1       BB11                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd LIR 
BB13 [0007]  2       BB10,BB12             2     0 [09C..0A6)                                     i label target hascall gcsafe bwd LIR 
BB14 [0008]  3       BB04,BB05,BB13        4     0 [0A6..0B3)-> BB02 ( cond )                     i label target gcsafe idxlen bwd LIR 
BB15 [0010]  2       BB01,BB14             1       [0B3..0C7)        (return)                     i label target hascall gcsafe LIR 
BB16 [0027]  2       BB08,BB11             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
*************** In fgDebugCheckBBlist
had to run another liveness pass:
*************** In fgLocalVarLiveness()
; Initial local variable assignments
;
;  V00 arg0              ref  class-hnd
;  V01 loc0              ref  class-hnd exact
;  V02 loc1              ref  class-hnd
;  V03 loc2              int 
;  V04 loc3              ref  class-hnd
;  V05 loc4              ref  class-hnd
;  V06 OutArgs        lclBlk <32>  "OutgoingArgSpace"
;  V07 tmp1              ref  class-hnd exact "NewObj constructor temp"
;  V08 tmp2              ref  class-hnd "dup spill"
;  V09 tmp3              ref  class-hnd "impAppendStmt"
;  V10 tmp4              ref 
;  V11 tmp5              ref 
;  V12 tmp6              ref  class-hnd "dup spill"
;  V13 tmp7              ref 
;  V14 tmp8              ref 
;  V15 tmp9              ref 
;  V16 tmp10             ref  class-hnd exact "NewObj constructor temp"
;  V17 tmp11             ref  class-hnd exact "NewObj constructor temp"
;  V18 tmp12             ref  class-hnd "Inline stloc first use temp"
;  V19 tmp13             int  "Inline stloc first use temp"
;  V20 tmp14             ref  class-hnd "Inlining Arg"
;  V21 tmp15             ref  class-hnd "Inlining Arg"
;  V22 tmp16            long  "Inlining Arg"
;  V23 tmp17             ref  class-hnd "Inlining Arg"
;  V24 tmp18             ref  class-hnd "Inlining Arg"
;  V25 tmp19             ref  class-hnd "Inlining Arg"
;  V26 tmp20            long  "Inlining Arg"
;  V27 tmp21             ref  class-hnd "Inlining Arg"
;  V28 cse0             long  "CSE - aggressive"
;  V29 cse1              int  "CSE - aggressive"
In fgLocalVarLivenessInit
Tracked variable (27 out of 30) table:
V01 loc0          [   ref]: refCnt =   14, refCntWtd =  25   
V04 loc3          [   ref]: refCnt =    7, refCntWtd =  20   
V16 tmp10         [   ref]: refCnt =    5, refCntWtd =  20   
V17 tmp11         [   ref]: refCnt =    5, refCntWtd =  20   
V03 loc2          [   int]: refCnt =    5, refCntWtd =  17   
V21 tmp15         [   ref]: refCnt =    3, refCntWtd =  12   
V25 tmp19         [   ref]: refCnt =    3, refCntWtd =  12   
V11 tmp5          [   ref]: refCnt =    4, refCntWtd =   8   
V15 tmp9          [   ref]: refCnt =    4, refCntWtd =   8   
V19 tmp13         [   int]: refCnt =    4, refCntWtd =   8   
V08 tmp2          [   ref]: refCnt =    2, refCntWtd =   8   
V09 tmp3          [   ref]: refCnt =    2, refCntWtd =   8   
V12 tmp6          [   ref]: refCnt =    2, refCntWtd =   8   
V20 tmp14         [   ref]: refCnt =    2, refCntWtd =   8   
V23 tmp17         [   ref]: refCnt =    2, refCntWtd =   8   
V24 tmp18         [   ref]: refCnt =    2, refCntWtd =   8   
V27 tmp21         [   ref]: refCnt =    2, refCntWtd =   8   
V02 loc1          [   ref]: refCnt =    3, refCntWtd =   6   
V07 tmp1          [   ref]: refCnt =    3, refCntWtd =   6   
V18 tmp12         [   ref]: refCnt =    3, refCntWtd =   6   
V29 cse1          [   int]: refCnt =    3, refCntWtd =   6   
V00 arg0          [   ref]: refCnt =    3, refCntWtd =   3   
V05 loc4          [   ref]: refCnt =    2, refCntWtd =   4   
V10 tmp4          [   ref]: refCnt =    2, refCntWtd =   4   
V14 tmp8          [   ref]: refCnt =    2, refCntWtd =   4   
V13 tmp7          [   ref]: refCnt =    1, refCntWtd =   2   
V28 cse0          [  long]: refCnt =    1, refCntWtd =   2   

*************** In fgPerBlockLocalVarLiveness()
BB01 USE(1)={                    V00} + ByrefExposed + GcHeap
     DEF(5)={V01 V03 V02 V07 V29    } + ByrefExposed* + GcHeap*

BB02 USE(2)={    V03 V02} + ByrefExposed + GcHeap
     DEF(1)={V04        } + ByrefExposed* + GcHeap*

BB03 USE(1)={V01        } + ByrefExposed + GcHeap
     DEF(2)={    V19 V18}

BB04 USE(4)={V01 V04 V19 V18} + ByrefExposed + GcHeap
     DEF(0)={               } + ByrefExposed* + GcHeap*

BB05 USE(2)={V01 V04} + ByrefExposed + GcHeap
     DEF(0)={       } + ByrefExposed* + GcHeap*

BB07 USE(1)={V04                    } + ByrefExposed + GcHeap
     DEF(5)={    V11 V08 V09 V20 V10} + ByrefExposed* + GcHeap*

BB08 USE(0)={       } + ByrefExposed + GcHeap
     DEF(2)={V17 V21}

BB09 USE(2)={V17 V21    }
     DEF(1)={        V11}

BB10 USE(4)={V01 V04 V11                     V10    } + ByrefExposed + GcHeap
     DEF(6)={            V15 V12 V23 V24 V05     V14} + ByrefExposed* + GcHeap*

BB11 USE(0)={       } + ByrefExposed + GcHeap
     DEF(2)={V16 V25}

BB12 USE(2)={V16 V25    }
     DEF(1)={        V15}

BB13 USE(3)={V01 V15     V14} + ByrefExposed + GcHeap
     DEF(1)={        V27    } + ByrefExposed* + GcHeap*

BB14 USE(2)={V03 V29}
     DEF(1)={V03    }

BB15 USE(1)={V01} + ByrefExposed + GcHeap
     DEF(0)={   } + ByrefExposed* + GcHeap*

BB16 USE(0)={} + ByrefExposed + GcHeap
     DEF(0)={} + ByrefExposed* + GcHeap*

** Memory liveness computed, GcHeap states and ByrefExposed states match
*************** In fgInterBlockLocalVarLiveness()

BB liveness after fgLiveVarAnalysis():

BB01 IN (1)={                V00} + ByrefExposed + GcHeap
     OUT(4)={V01 V03 V02 V29    } + ByrefExposed + GcHeap

BB02 IN (4)={V01     V03 V02 V29} + ByrefExposed + GcHeap
     OUT(5)={V01 V04 V03 V02 V29} + ByrefExposed + GcHeap

BB03 IN (5)={V01 V04 V03     V02     V29} + ByrefExposed + GcHeap
     OUT(7)={V01 V04 V03 V19 V02 V18 V29} + ByrefExposed + GcHeap

BB04 IN (7)={V01 V04 V03 V19 V02 V18 V29} + ByrefExposed + GcHeap
     OUT(4)={V01     V03     V02     V29} + ByrefExposed + GcHeap

BB05 IN (5)={V01 V04 V03 V02 V29} + ByrefExposed + GcHeap
     OUT(4)={V01     V03 V02 V29} + ByrefExposed + GcHeap

BB07 IN (5)={V01 V04 V03     V02 V29    } + ByrefExposed + GcHeap
     OUT(7)={V01 V04 V03 V11 V02 V29 V10} + ByrefExposed + GcHeap

BB08 IN (6)={V01 V04     V03     V02 V29 V10} + ByrefExposed + GcHeap
     OUT(8)={V01 V04 V17 V03 V21 V02 V29 V10} + ByrefExposed + GcHeap

BB09 IN (8)={V01 V04 V17 V03 V21     V02 V29 V10} + ByrefExposed + GcHeap
     OUT(7)={V01 V04     V03     V11 V02 V29 V10} + ByrefExposed + GcHeap

BB10 IN (7)={V01 V04 V03 V11     V02 V29 V10    } + ByrefExposed + GcHeap
     OUT(6)={V01     V03     V15 V02 V29     V14} + ByrefExposed + GcHeap

BB11 IN (5)={V01     V03     V02 V29 V14} + ByrefExposed + GcHeap
     OUT(7)={V01 V16 V03 V25 V02 V29 V14} + ByrefExposed + GcHeap

BB12 IN (7)={V01 V16 V03 V25     V02 V29 V14} + ByrefExposed + GcHeap
     OUT(6)={V01     V03     V15 V02 V29 V14} + ByrefExposed + GcHeap

BB13 IN (6)={V01 V03 V15 V02 V29 V14} + ByrefExposed + GcHeap
     OUT(4)={V01 V03     V02 V29    } + ByrefExposed + GcHeap

BB14 IN (4)={V01 V03 V02 V29} + ByrefExposed + GcHeap
     OUT(4)={V01 V03 V02 V29} + ByrefExposed + GcHeap

BB15 IN (1)={V01} + ByrefExposed + GcHeap
     OUT(0)={   }

BB16 IN (0)={} + ByrefExposed + GcHeap
     OUT(0)={}


*** lvaComputeRefCounts ***

*** lvaComputeRefCounts -- explicit counts ***
New refCnts for V07: refCnt =  1, refCntWtd = 2   
New refCnts for V07: refCnt =  2, refCntWtd = 4   
New refCnts for V07: refCnt =  3, refCntWtd = 6   
New refCnts for V01: refCnt =  1, refCntWtd = 1   
New refCnts for V00: refCnt =  1, refCntWtd = 1   
New refCnts for V02: refCnt =  1, refCntWtd = 1   
New refCnts for V03: refCnt =  1, refCntWtd = 1   
New refCnts for V02: refCnt =  2, refCntWtd = 2   
New refCnts for V29: refCnt =  1, refCntWtd = 1   
New refCnts for V29: refCnt =  2, refCntWtd = 2   
New refCnts for V02: refCnt =  3, refCntWtd = 6   
New refCnts for V03: refCnt =  2, refCntWtd = 5   
New refCnts for V04: refCnt =  1, refCntWtd = 4   
New refCnts for V04: refCnt =  2, refCntWtd = 8   
New refCnts for V04: refCnt =  3, refCntWtd = 12   
New refCnts for V01: refCnt =  2, refCntWtd = 3   
New refCnts for V01: refCnt =  3, refCntWtd = 5   
New refCnts for V01: refCnt =  4, refCntWtd = 7   
New refCnts for V18: refCnt =  1, refCntWtd = 2   
New refCnts for V01: refCnt =  5, refCntWtd = 9   
New refCnts for V19: refCnt =  1, refCntWtd = 2   
New refCnts for V18: refCnt =  2, refCntWtd = 4   
New refCnts for V19: refCnt =  2, refCntWtd = 4   
New refCnts for V19: refCnt =  3, refCntWtd = 6   
New refCnts for V01: refCnt =  6, refCntWtd = 11   
New refCnts for V18: refCnt =  3, refCntWtd = 6   
New refCnts for V19: refCnt =  4, refCntWtd = 8   
New refCnts for V04: refCnt =  4, refCntWtd = 14   
New refCnts for V01: refCnt =  7, refCntWtd = 13   
New refCnts for V04: refCnt =  5, refCntWtd = 16   
New refCnts for V20: refCnt =  1, refCntWtd = 4   
New refCnts for V04: refCnt =  6, refCntWtd = 18   
New refCnts for V20: refCnt =  2, refCntWtd = 8   
New refCnts for V09: refCnt =  1, refCntWtd = 4   
New refCnts for V08: refCnt =  1, refCntWtd = 4   
New refCnts for V09: refCnt =  2, refCntWtd = 8   
New refCnts for V10: refCnt =  1, refCntWtd = 2   
New refCnts for V08: refCnt =  2, refCntWtd = 8   
New refCnts for V11: refCnt =  1, refCntWtd = 2   
New refCnts for V11: refCnt =  2, refCntWtd = 4   
New refCnts for V17: refCnt =  1, refCntWtd = 4   
New refCnts for V21: refCnt =  1, refCntWtd = 4   
New refCnts for V21: refCnt =  2, refCntWtd = 8   
New refCnts for V17: refCnt =  2, refCntWtd = 8   
New refCnts for V21: refCnt =  3, refCntWtd = 12   
New refCnts for V17: refCnt =  3, refCntWtd = 12   
New refCnts for V17: refCnt =  4, refCntWtd = 16   
New refCnts for V17: refCnt =  5, refCntWtd = 20   
New refCnts for V11: refCnt =  3, refCntWtd = 6   
New refCnts for V11: refCnt =  4, refCntWtd = 8   
New refCnts for V10: refCnt =  2, refCntWtd = 4   
New refCnts for V05: refCnt =  1, refCntWtd = 2   
New refCnts for V23: refCnt =  1, refCntWtd = 4   
New refCnts for V04: refCnt =  7, refCntWtd = 20   
New refCnts for V23: refCnt =  2, refCntWtd = 8   
New refCnts for V24: refCnt =  1, refCntWtd = 4   
New refCnts for V01: refCnt =  8, refCntWtd = 15   
New refCnts for V01: refCnt =  9, refCntWtd = 17   
New refCnts for V24: refCnt =  2, refCntWtd = 8   
New refCnts for V12: refCnt =  1, refCntWtd = 4   
New refCnts for V05: refCnt =  2, refCntWtd = 4   
New refCnts for V14: refCnt =  1, refCntWtd = 2   
New refCnts for V12: refCnt =  2, refCntWtd = 8   
New refCnts for V15: refCnt =  1, refCntWtd = 2   
New refCnts for V15: refCnt =  2, refCntWtd = 4   
New refCnts for V16: refCnt =  1, refCntWtd = 4   
New refCnts for V25: refCnt =  1, refCntWtd = 4   
New refCnts for V25: refCnt =  2, refCntWtd = 8   
New refCnts for V16: refCnt =  2, refCntWtd = 8   
New refCnts for V25: refCnt =  3, refCntWtd = 12   
New refCnts for V16: refCnt =  3, refCntWtd = 12   
New refCnts for V16: refCnt =  4, refCntWtd = 16   
New refCnts for V16: refCnt =  5, refCntWtd = 20   
New refCnts for V15: refCnt =  3, refCntWtd = 6   
New refCnts for V15: refCnt =  4, refCntWtd = 8   
New refCnts for V14: refCnt =  2, refCntWtd = 4   
New refCnts for V27: refCnt =  1, refCntWtd = 4   
New refCnts for V01: refCnt = 10, refCntWtd = 19   
New refCnts for V01: refCnt = 11, refCntWtd = 21   
New refCnts for V27: refCnt =  2, refCntWtd = 8   
New refCnts for V03: refCnt =  3, refCntWtd = 9   
New refCnts for V03: refCnt =  4, refCntWtd = 13   
New refCnts for V29: refCnt =  3, refCntWtd = 6   
New refCnts for V03: refCnt =  5, refCntWtd = 17   
New refCnts for V01: refCnt = 12, refCntWtd = 22   
New refCnts for V01: refCnt = 13, refCntWtd = 23   

*** lvaComputeRefCounts -- implicit counts ***
New refCnts for V00: refCnt =  2, refCntWtd = 2   
New refCnts for V00: refCnt =  3, refCntWtd = 3   

*************** Finishing PHASE Lowering nodeinfo
Trees after Lowering nodeinfo

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB15 ( cond )                     i label target hascall gcsafe idxlen newobj LIR 
BB02 [0001]  2       BB01,BB14             4     0 [01D..02E)-> BB07 ( cond )                     i Loop label target hascall gcsafe idxlen nullcheck bwd bwd-target LIR 
BB03 [0002]  1       BB02                  2     0 [02E..037)-> BB05 ( cond )                     i gcsafe idxlen bwd LIR 
BB04 [0013]  1       BB03                  2     0 [02E..02F)-> BB14 (always)                     i hascall gcsafe bwd LIR 
BB05 [0014]  1       BB03                  2     0 [02E..02F)-> BB14 (always)                     i label target hascall gcsafe bwd LIR 
BB07 [0003]  1       BB02                  2     0 [037..04B)-> BB10 ( cond )                     i label target hascall gcsafe bwd LIR 
BB08 [0004]  1       BB07                  2     0 [000..062)-> BB16 ( cond )                     i hascall gcsafe newobj bwd LIR 
BB09 [0020]  1       BB08                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd LIR 
BB10 [0005]  2       BB07,BB09             2     0 [062..085)-> BB13 ( cond )                     i label target hascall gcsafe bwd LIR 
BB11 [0006]  1       BB10                  2     0 [000..09C)-> BB16 ( cond )                     i hascall gcsafe newobj bwd LIR 
BB12 [0028]  1       BB11                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd LIR 
BB13 [0007]  2       BB10,BB12             2     0 [09C..0A6)                                     i label target hascall gcsafe bwd LIR 
BB14 [0008]  3       BB04,BB05,BB13        4     0 [0A6..0B3)-> BB02 ( cond )                     i label target gcsafe idxlen bwd LIR 
BB15 [0010]  2       BB01,BB14             1       [0B3..0C7)        (return)                     i label target hascall gcsafe LIR 
BB16 [0027]  2       BB08,BB11             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..01D) -> BB15 (cond), preds={} succs={BB02,BB15}
N004 (  2, 10) [000316] H-----------       t316 =    CNS_INT(h) long   0xD1FFAB1E "Started enumerating project paths." $180
                                                  /--*  t316   long   
N005 (  4, 12) [000317] #---G-------       t317 = *  IND       ref    $1c0
                                                  /--*  t317   ref    
               [000494] ----G-------       t494 = *  PUTARG_REG ref    REG rdx
N006 (  2, 10) [000003] H-----------         t3 =    CNS_INT(h) long   0xd1ffab1e method $181
                                                  /--*  t3     long   
               [000495] ------------       t495 = *  PUTARG_REG long   REG rcx
N007 (  1,  1) [000001] ------------         t1 =    CNS_INT   int    2 $42
                                                  /--*  t1     int    
               [000496] ------------       t496 = *  PUTARG_REG int    REG r8
                                                  /--*  t494   ref    arg1 in rdx
                                                  +--*  t495   long   arg0 in rcx
                                                  +--*  t496   int    arg2 in r8
N008 ( 21, 31) [000002] --CXG-------         t2 = *  CALL      ref    SolutionAnalyzer.Logger.Log $101
               [000459] ------------                 IL_OFFSET void   IL offset: 0xc
N002 (  2, 10) [000008] H-----------         t8 =    CNS_INT(h) long   0xd1ffab1e token $182
                                                  /--*  t8     long   
               [000497] ------------       t497 = *  PUTARG_REG long   REG rcx
                                                  /--*  t497   long   arg0 in rcx
N003 ( 16, 16) [000009] --C---------         t9 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1c1
                                                  /--*  t9     ref    
N005 ( 16, 16) [000011] DA----------              *  STORE_LCL_VAR ref    V07 tmp1         d:2
N003 (  1,  1) [000012] ------------        t12 =    LCL_VAR   ref    V07 tmp1         u:2 $1c1
                                                  /--*  t12    ref    
               [000498] ------------       t498 = *  PUTARG_REG ref    REG rcx
N004 (  1,  1) [000007] ------------         t7 =    CNS_INT   int    100 $43
                                                  /--*  t7     int    
               [000499] ------------       t499 = *  PUTARG_REG int    REG rdx
                                                  /--*  t498   ref    this in rcx
                                                  +--*  t499   int    arg1 in rdx
N005 ( 16, 10) [000013] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor $VN.Void
               [000460] ------------                 IL_OFFSET void   IL offset: 0x13
N001 (  1,  1) [000014] ------------        t14 =    LCL_VAR   ref    V07 tmp1         u:2 (last use) $1c1
                                                  /--*  t14    ref    
N003 (  1,  3) [000016] DA----------              *  STORE_LCL_VAR ref    V01 loc0         d:2
               [000461] ------------                 IL_OFFSET void   IL offset: 0x14
N001 (  1,  1) [000017] ------------        t17 =    LCL_VAR   ref    V00 arg0         u:1 (last use) $80
                                                  /--*  t17    ref    
N003 (  1,  3) [000019] DA----------              *  STORE_LCL_VAR ref    V02 loc1         d:2
               [000462] ------------                 IL_OFFSET void   IL offset: 0x16
N001 (  1,  1) [000020] ------------        t20 =    CNS_INT   int    0 $40
                                                  /--*  t20    int    
N003 (  1,  3) [000022] DA----------              *  STORE_LCL_VAR int    V03 loc2         d:2
               [000463] ------------                 IL_OFFSET void   IL offset: 0xaa
N001 (  1,  1) [000424] ------------       t424 =    LCL_VAR   ref    V02 loc1         u:2 $80
                                                  /--*  t424   ref    
               [000491] -c----------       t491 = *  LEA(b+8)  ref   
                                                  /--*  t491   ref    
N002 (  3,  3) [000423] ---X--------       t423 = *  IND       int    $240
                                                  /--*  t423   int    
N004 (  3,  3) [000452] DA-X--------              *  STORE_LCL_VAR int    V29 cse1         d:1
N005 (  1,  1) [000453] ------------       t453 =    LCL_VAR   int    V29 cse1         u:1 $240
N007 (  1,  1) [000457] -c----------       t457 =    CNS_INT   int    0 $40
                                                  /--*  t453   int    
                                                  +--*  t457   int    
N008 (  6,  6) [000422] J--X---N----              *  LE        void   $242
N009 (  8,  8) [000426] ---X--------              *  JTRUE     void  

------------ BB02 [01D..02E) -> BB07 (cond), preds={BB01,BB14} succs={BB03,BB07}
N001 (  0,  0) [000437] ------------       t437 =    PHI_ARG   int    V03 loc2         u:4
N002 (  0,  0) [000436] ------------       t436 =    PHI_ARG   int    V03 loc2         u:2 $40
                                                  /--*  t437   int    
                                                  +--*  t436   int    
N003 (  0,  0) [000428] ------------       t428 = *  PHI       int   
                                                  /--*  t428   int    
N005 (  0,  0) [000429] DA----------              *  STORE_LCL_VAR int    V03 loc2         d:3
               [000464] ------------                 IL_OFFSET void   IL offset: 0x1d
N002 (  1,  1) [000324] ------------       t324 =    LCL_VAR   ref    V02 loc1         u:2 $80
N003 (  1,  1) [000325] ------------       t325 =    LCL_VAR   int    V03 loc2         u:3 $280
                                                  /--*  t325   int    
N004 (  2,  3) [000328] ------------       t328 = *  CAST      long <- int $300
                                                  /--*  t324   ref    
                                                  +--*  t328   long   
N009 (  5,  6) [000333] -c----------       t333 = *  LEA(b+(i*8)+16) byref 
                                                  /--*  t333   byref  
N010 (  6,  7) [000030] a---G-------        t30 = *  IND       ref    <l:$1ca, c:$2c1>
                                                  /--*  t30    ref    
N013 (  6,  7) [000032] DA--G-------              *  STORE_LCL_VAR ref    V04 loc3         d:2
               [000465] ------------                 IL_OFFSET void   IL offset: 0x21
N001 (  1,  1) [000196] ------------       t196 =    LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
                                                  /--*  t196   ref    
N002 (  2,  2) [000197] ---X--------              *  NULLCHECK int    <l:$1d0, c:$1cf>
N004 (  2, 10) [000335] H-----------       t335 =    CNS_INT(h) long   0xD1FFAB1E ".csproj" $184
                                                  /--*  t335   long   
N005 (  4, 12) [000336] #---G-------       t336 = *  IND       ref    $1d1
                                                  /--*  t336   ref    
               [000500] ----G-------       t500 = *  PUTARG_REG ref    REG rdx
N006 (  1,  1) [000033] ------------        t33 =    LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
                                                  /--*  t33    ref    
               [000501] ------------       t501 = *  PUTARG_REG ref    REG rcx
N007 (  1,  1) [000194] ------------       t194 =    CNS_INT   int    0 $40
                                                  /--*  t194   int    
               [000502] ------------       t502 = *  PUTARG_REG int    REG r8
                                                  /--*  t500   ref    arg1 in rdx
                                                  +--*  t501   ref    this in rcx
                                                  +--*  t502   int    arg2 in r8
N008 ( 20, 23) [000195] --CXG-------       t195 = *  CALL      int    System.String.EndsWith $401
N009 (  1,  1) [000037] -c----------        t37 =    CNS_INT   int    0 $40
                                                  /--*  t195   int    
                                                  +--*  t37    int    
N010 ( 22, 25) [000038] J--XG--N----              *  EQ        void   $244
N011 ( 24, 27) [000039] ---XG-------              *  JTRUE     void  

------------ BB03 [02E..037) -> BB05 (cond), preds={BB02} succs={BB04,BB05}
               [000466] ------------                 IL_OFFSET void   IL offset: 0x2e
N001 (  1,  1) [000199] -c----------       t199 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t199   ref    
N003 (  2,  2) [000343] -c----------       t343 = *  LEA(b+20) byref 
                                                  /--*  t343   byref  
N004 (  4,  4) [000200] nc--GO------       t200 = *  IND       int    <l:$258, c:$257>
N005 (  1,  1) [000201] -c----------       t201 =    CNS_INT   int    1 $46
                                                  /--*  t200   int    
                                                  +--*  t201   int    
N006 (  6,  6) [000202] -c--GO------       t202 = *  ADD       int    <l:$25c, c:$25b>
N007 (  1,  1) [000177] ------------       t177 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t177   ref    
N009 (  2,  2) [000341] -c----------       t341 = *  LEA(b+20) byref 
                                                  /--*  t341   byref  
                                                  +--*  t202   int    
               [000467] -A--GO------              *  STOREIND  int   
               [000468] ------------                 IL_OFFSET void   IL offset: 0x2e
N001 (  1,  1) [000205] ------------       t205 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t205   ref    
N003 (  2,  2) [000345] -c----------       t345 = *  LEA(b+8)  byref 
                                                  /--*  t345   byref  
N004 (  4,  4) [000206] n---GO------       t206 = *  IND       ref    <l:$1f0, c:$1ef>
                                                  /--*  t206   ref    
N006 (  4,  4) [000208] DA--GO------              *  STORE_LCL_VAR ref    V18 tmp12        d:2
               [000469] ------------                 IL_OFFSET void   IL offset: 0x2e
N001 (  1,  1) [000209] ------------       t209 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t209   ref    
N003 (  2,  2) [000347] -c----------       t347 = *  LEA(b+16) byref 
                                                  /--*  t347   byref  
N004 (  4,  4) [000210] n---GO------       t210 = *  IND       int    <l:$260, c:$25f>
                                                  /--*  t210   int    
N006 (  4,  4) [000212] DA--GO------              *  STORE_LCL_VAR int    V19 tmp13        d:2
               [000470] ------------                 IL_OFFSET void   IL offset: 0x2e
N001 (  1,  1) [000214] ------------       t214 =    LCL_VAR   ref    V18 tmp12        u:2 <l:$1ee, c:$2fc>
                                                  /--*  t214   ref    
               [000493] -c----------       t493 = *  LEA(b+8)  ref   
                                                  /--*  t493   ref    
N002 (  3,  3) [000215] -c-X--------       t215 = *  IND       int    <l:$262, c:$261>
N003 (  1,  1) [000213] ------------       t213 =    LCL_VAR   int    V19 tmp13        u:2 <l:$25e, c:$411>
                                                  /--*  t215   int    
                                                  +--*  t213   int    
N004 (  5,  5) [000216] N--X---N-U--              *  LE        void   <l:$266, c:$265>
N005 (  7,  7) [000217] ---X--------              *  JTRUE     void  

------------ BB04 [02E..02F) -> BB14 (always), preds={BB03} succs={BB14}
               [000471] ------------                 IL_OFFSET void   IL offset: 0x2e
N001 (  1,  1) [000221] ------------       t221 =    LCL_VAR   int    V19 tmp13        u:2 <l:$25e, c:$411>
N002 (  1,  1) [000222] -c----------       t222 =    CNS_INT   int    1 $46
                                                  /--*  t221   int    
                                                  +--*  t222   int    
N003 (  3,  3) [000223] ------------       t223 = *  ADD       int    <l:$268, c:$267>
N004 (  1,  1) [000220] ------------       t220 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t220   ref    
N006 (  2,  2) [000349] -c----------       t349 = *  LEA(b+16) byref 
                                                  /--*  t349   byref  
                                                  +--*  t223   int    
               [000472] -A--GO------              *  STOREIND  int   
               [000473] ------------                 IL_OFFSET void   IL offset: 0x2e
N004 (  1,  1) [000226] ------------       t226 =    LCL_VAR   ref    V18 tmp12        u:2 (last use) <l:$1ee, c:$2fc>
                                                  /--*  t226   ref    
               [000503] ------------       t503 = *  PUTARG_REG ref    REG rcx
N005 (  1,  1) [000227] ------------       t227 =    LCL_VAR   int    V19 tmp13        u:2 (last use) <l:$25e, c:$411>
                                                  /--*  t227   int    
               [000504] ------------       t504 = *  PUTARG_REG int    REG rdx
N006 (  1,  1) [000228] ------------       t228 =    LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>
                                                  /--*  t228   ref    
               [000505] ------------       t505 = *  PUTARG_REG ref    REG r8
                                                  /--*  t503   ref    arg0 in rcx
                                                  +--*  t504   int    arg1 in rdx
                                                  +--*  t505   ref    arg2 in r8
N007 ( 17, 11) [000229] --CXG-------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST $1db

------------ BB05 [02E..02F) -> BB14 (always), preds={BB03} succs={BB14}
               [000474] ------------                 IL_OFFSET void   IL offset: 0x2e
N003 (  1,  1) [000218] ------------       t218 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t218   ref    
               [000506] ------------       t506 = *  PUTARG_REG ref    REG rcx
N004 (  1,  1) [000178] ------------       t178 =    LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>
                                                  /--*  t178   ref    
               [000507] ------------       t507 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t506   ref    this in rcx
                                                  +--*  t507   ref    arg1 in rdx
N005 ( 16, 10) [000219] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize $VN.Void

------------ BB07 [037..04B) -> BB10 (cond), preds={BB02} succs={BB08,BB10}
               [000475] ------------                 IL_OFFSET void   IL offset: 0x37
N002 (  1,  1) [000235] ------------       t235 =    CNS_INT   int    1 $46
                                                  /--*  t235   int    
               [000508] ------------       t508 = *  PUTARG_REG int    REG rcx
                                                  /--*  t508   int    arg0 in rcx
N003 ( 15,  7) [000236] --CXG-------       t236 = *  CALL      ref    System.IO.EnumerationOptions.FromSearchOption $2c6
                                                  /--*  t236   ref    
N005 ( 15,  7) [000247] DA-XG-------              *  STORE_LCL_VAR ref    V20 tmp14        d:2
N005 (  2, 10) [000356] H-----------       t356 =    CNS_INT(h) long   0xD1FFAB1E "*" $185
                                                  /--*  t356   long   
N006 (  4, 12) [000357] #---G-------       t357 = *  IND       ref    $1d2
                                                  /--*  t357   ref    
               [000509] ----G-------       t509 = *  PUTARG_REG ref    REG rdx
N007 (  1,  1) [000040] ------------        t40 =    LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
                                                  /--*  t40    ref    
               [000510] ------------       t510 = *  PUTARG_REG ref    REG rcx
N008 (  1,  1) [000244] ------------       t244 =    LCL_VAR   ref    V20 tmp14        u:2 (last use) $2c6
                                                  /--*  t244   ref    
               [000511] ------------       t511 = *  PUTARG_REG ref    REG r9
N009 (  1,  1) [000243] ------------       t243 =    CNS_INT   int    2 $42
                                                  /--*  t243   int    
               [000512] ------------       t512 = *  PUTARG_REG int    REG r8
                                                  /--*  t509   ref    arg1 in rdx
                                                  +--*  t510   ref    arg0 in rcx
                                                  +--*  t511   ref    arg3 in r9
                                                  +--*  t512   int    arg2 in r8
N010 ( 21, 24) [000245] --CXG-------       t245 = *  CALL      ref    System.IO.Directory.InternalEnumeratePaths $2cc
                                                  /--*  t245   ref    
N012 ( 21, 24) [000054] DA-XG-------              *  STORE_LCL_VAR ref    V09 tmp3         d:2
N003 (  2, 10) [000047] ------------        t47 =    CNS_INT   long   0x7ffc7e4c17e0 $345
                                                  /--*  t47    long   
               [000513] ------------       t513 = *  PUTARG_REG long   REG rcx
N004 (  1,  1) [000048] ------------        t48 =    CNS_INT   int    35 $47
                                                  /--*  t48    int    
               [000514] ------------       t514 = *  PUTARG_REG int    REG rdx
                                                  /--*  t513   long   arg0 in rcx
                                                  +--*  t514   int    arg1 in rdx
N005 ( 17, 18) [000049] H-CXG-------        t49 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
N010 (  2, 10) [000364] I-----------       t364 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] $186
                                                  /--*  t364   long   
N011 (  4, 12) [000045] n---G-------        t45 = *  IND       ref    <l:$4c0, c:$2cf>
                                                  /--*  t45    ref    
N014 ( 22, 31) [000052] DA-XG-------              *  STORE_LCL_VAR ref    V08 tmp2         d:2
N001 (  1,  1) [000055] ------------        t55 =    LCL_VAR   ref    V09 tmp3         u:2 (last use) $2cc
                                                  /--*  t55    ref    
N003 (  1,  3) [000062] DA----------              *  STORE_LCL_VAR ref    V10 tmp4         d:2
N001 (  1,  1) [000056] ------------        t56 =    LCL_VAR   ref    V08 tmp2         u:2 (last use) <l:$4c0, c:$2cf>
                                                  /--*  t56    ref    
N003 (  1,  3) [000065] DA----------              *  STORE_LCL_VAR ref    V11 tmp5         d:2
N001 (  1,  1) [000057] ------------        t57 =    LCL_VAR   ref    V11 tmp5         u:2 <l:$4c0, c:$2cf>
N002 (  1,  1) [000058] -c----------        t58 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t57    ref    
                                                  +--*  t58    ref    
N003 (  3,  3) [000059] J------N----              *  NE        void   <l:$246, c:$245>
N004 (  5,  5) [000060] ------------              *  JTRUE     void  

------------ BB08 [000..062) -> BB16 (cond), preds={BB07} succs={BB09,BB16}
N002 (  2, 10) [000157] H-----------       t157 =    CNS_INT(h) long   0xd1ffab1e token $187
                                                  /--*  t157   long   
               [000515] ------------       t515 = *  PUTARG_REG long   REG rcx
                                                  /--*  t515   long   arg0 in rcx
N003 ( 16, 16) [000158] --C---------       t158 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1d6
                                                  /--*  t158   ref    
N005 ( 16, 16) [000160] DA----------              *  STORE_LCL_VAR ref    V17 tmp11        d:2
N002 (  2, 10) [000368] I-----------       t368 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] $188
                                                  /--*  t368   long   
N003 (  4, 12) [000150] n---G-------       t150 = *  IND       ref    <l:$4c1, c:$2d5>
                                                  /--*  t150   ref    
N006 (  5, 13) [000262] DA--G-------              *  STORE_LCL_VAR ref    V21 tmp15        d:2
N001 (  1,  1) [000249] ------------       t249 =    LCL_VAR   ref    V21 tmp15        u:2 <l:$4c1, c:$2d5>
N002 (  1,  1) [000250] -c----------       t250 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t249   ref    
                                                  +--*  t250   ref    
N003 (  3,  3) [000251] J------N----              *  EQ        void   <l:$248, c:$247>
N004 (  5,  5) [000252] ------------              *  JTRUE     void  

------------ BB09 [000..000), preds={BB08} succs={BB10}
N001 (  1,  1) [000161] ------------       t161 =    LCL_VAR   ref    V17 tmp11        u:2 $1d6
                                                  /--*  t161   ref    
N003 (  2,  2) [000370] ------------       t370 = *  LEA(b+8)  byref 
N005 (  1,  1) [000253] ------------       t253 =    LCL_VAR   ref    V21 tmp15        u:2 (last use) <l:$4c1, c:$2d5>
                                                  /--*  t370   byref  
                                                  +--*  t253   ref    
               [000476] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000256] ------------       t256 =    LCL_VAR   ref    V17 tmp11        u:2 $1d6
                                                  /--*  t256   ref    
N003 (  2,  2) [000372] -c----------       t372 = *  LEA(b+24) byref 
N005 (  2, 10) [000156] H-----------       t156 =    CNS_INT(h) long   0xd1ffab1e ftn $18a
                                                  /--*  t372   byref  
                                                  +--*  t156   long   
               [000477] -A--GO------              *  STOREIND  long  
               [000478] ------------                 IL_OFFSET void   IL offset: 0x5c
N002 (  2, 10) [000375] I-----------       t375 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] $186
N004 (  1,  1) [000164] ------------       t164 =    LCL_VAR   ref    V17 tmp11        u:2 $1d6
                                                  /--*  t375   long   
                                                  +--*  t164   ref    
               [000479] -A--G-------              *  STOREIND  ref   
N001 (  1,  1) [000163] ------------       t163 =    LCL_VAR   ref    V17 tmp11        u:2 (last use) $1d6
                                                  /--*  t163   ref    
N003 (  1,  3) [000175] DA----------              *  STORE_LCL_VAR ref    V11 tmp5         d:4

------------ BB10 [062..085) -> BB13 (cond), preds={BB07,BB09} succs={BB11,BB13}
N001 (  0,  0) [000441] ------------       t441 =    PHI_ARG   ref    V11 tmp5         u:4 $1d6
N002 (  0,  0) [000438] ------------       t438 =    PHI_ARG   ref    V11 tmp5         u:2 <l:$4c0, c:$2cf>
                                                  /--*  t441   ref    
                                                  +--*  t438   ref    
N003 (  0,  0) [000434] ------------       t434 = *  PHI       ref   
                                                  /--*  t434   ref    
N005 (  0,  0) [000435] DA----------              *  STORE_LCL_VAR ref    V11 tmp5         d:3
N004 (  1,  1) [000070] ------------        t70 =    LCL_VAR   ref    V11 tmp5         u:3 (last use) $4c4
                                                  /--*  t70    ref    
               [000516] ------------       t516 = *  PUTARG_REG ref    REG r8
N005 (  1,  1) [000069] ------------        t69 =    LCL_VAR   ref    V10 tmp4         u:2 (last use) $2cc
                                                  /--*  t69    ref    
               [000517] ------------       t517 = *  PUTARG_REG ref    REG rdx
N006 (  2, 10) [000072] H-----------        t72 =    CNS_INT(h) long   0xd1ffab1e method $18d
                                                  /--*  t72    long   
               [000518] ------------       t518 = *  PUTARG_REG long   REG rcx
                                                  /--*  t516   ref    arg2 in r8
                                                  +--*  t517   ref    arg1 in rdx
                                                  +--*  t518   long   arg0 in rcx
N007 ( 18, 20) [000071] --CXG-------        t71 = *  CALL      ref    System.Linq.Enumerable.Where $2db
                                                  /--*  t71    ref    
N009 ( 18, 20) [000075] DA-XG-------              *  STORE_LCL_VAR ref    V05 loc4         d:2
               [000480] ------------                 IL_OFFSET void   IL offset: 0x69
N003 (  2, 10) [000273] ------------       t273 =    CNS_INT   long   0x7ffc7e783cd8 $347
                                                  /--*  t273   long   
               [000519] ------------       t519 = *  PUTARG_REG long   REG rcx
N004 (  1,  1) [000274] ------------       t274 =    CNS_INT   int    40 $4a
                                                  /--*  t274   int    
               [000520] ------------       t520 = *  PUTARG_REG int    REG rdx
                                                  /--*  t519   long   arg0 in rcx
                                                  +--*  t520   int    arg1 in rdx
N005 ( 17, 18) [000275] H-CXG-------       t275 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $309
N006 (  2, 10) [000381] I-----------       t381 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<Compatible>k__BackingField] $18e
                                                  /--*  t381   long   
N007 (  4, 12) [000271] n---G-------       t271 = *  IND       ref    <l:$4c5, c:$2de>
                                                  /--*  t271   ref    
N010 ( 21, 30) [000283] DA-XG-------              *  STORE_LCL_VAR ref    V23 tmp17        d:2
N005 (  2, 10) [000382] H-----------       t382 =    CNS_INT(h) long   0xD1FFAB1E "*.csproj" $18f
                                                  /--*  t382   long   
N006 (  4, 12) [000383] #---G-------       t383 = *  IND       ref    $1e0
                                                  /--*  t383   ref    
               [000521] ----G-------       t521 = *  PUTARG_REG ref    REG rdx
N007 (  1,  1) [000077] ------------        t77 =    LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>
                                                  /--*  t77    ref    
               [000522] ------------       t522 = *  PUTARG_REG ref    REG rcx
N008 (  1,  1) [000280] ------------       t280 =    LCL_VAR   ref    V23 tmp17        u:2 (last use) <l:$4c5, c:$2de>
                                                  /--*  t280   ref    
               [000523] ------------       t523 = *  PUTARG_REG ref    REG r9
N009 (  1,  1) [000279] ------------       t279 =    CNS_INT   int    1 $46
                                                  /--*  t279   int    
               [000524] ------------       t524 = *  PUTARG_REG int    REG r8
                                                  /--*  t521   ref    arg1 in rdx
                                                  +--*  t522   ref    arg0 in rcx
                                                  +--*  t523   ref    arg3 in r9
                                                  +--*  t524   int    arg2 in r8
N010 ( 21, 24) [000281] --CXG-------       t281 = *  CALL      ref    System.IO.Directory.InternalEnumeratePaths $2e3
                                                  /--*  t281   ref    
N012 ( 21, 24) [000290] DA-XG-------              *  STORE_LCL_VAR ref    V24 tmp18        d:2
N004 (  1,  1) [000285] ------------       t285 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t285   ref    
N006 (  2,  2) [000389] -c----------       t389 = *  LEA(b+16) byref 
                                                  /--*  t389   byref  
N007 (  4,  4) [000286] n---GO------       t286 = *  IND       int    <l:$24c, c:$24b>
                                                  /--*  t286   int    
               [000525] ----GO------       t525 = *  PUTARG_REG int    REG rdx
N008 (  1,  1) [000076] ------------        t76 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t76    ref    
               [000526] ------------       t526 = *  PUTARG_REG ref    REG rcx
N009 (  1,  1) [000287] ------------       t287 =    LCL_VAR   ref    V24 tmp18        u:2 (last use) $2e3
                                                  /--*  t287   ref    
               [000527] ------------       t527 = *  PUTARG_REG ref    REG r8
                                                  /--*  t525   int    arg1 in rdx
                                                  +--*  t526   ref    this in rcx
                                                  +--*  t527   ref    arg2 in r8
N010 ( 20, 15) [000288] --CXGO------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange $VN.Void
               [000481] ------------                 IL_OFFSET void   IL offset: 0x7a
N002 (  2, 10) [000395] I-----------       t395 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] $191
                                                  /--*  t395   long   
N003 (  4, 12) [000084] n---G-------        t84 = *  IND       ref    <l:$4c6, c:$2e9>
                                                  /--*  t84    ref    
N006 (  5, 13) [000091] DA--G-------              *  STORE_LCL_VAR ref    V12 tmp6         d:2
N001 (  1,  1) [000083] ------------        t83 =    LCL_VAR   ref    V05 loc4         u:2 (last use) $2db
                                                  /--*  t83    ref    
N003 (  1,  3) [000101] DA----------              *  STORE_LCL_VAR ref    V14 tmp8         d:2
N001 (  1,  1) [000092] ------------        t92 =    LCL_VAR   ref    V12 tmp6         u:2 (last use) <l:$4c6, c:$2e9>
                                                  /--*  t92    ref    
N003 (  1,  3) [000104] DA----------              *  STORE_LCL_VAR ref    V15 tmp9         d:2
N001 (  1,  1) [000093] ------------        t93 =    LCL_VAR   ref    V15 tmp9         u:2 <l:$4c6, c:$2e9>
N002 (  1,  1) [000094] -c----------        t94 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t93    ref    
                                                  +--*  t94    ref    
N003 (  3,  3) [000095] J------N----              *  NE        void   <l:$24e, c:$24d>
N004 (  5,  5) [000096] ------------              *  JTRUE     void  

------------ BB11 [000..09C) -> BB16 (cond), preds={BB10} succs={BB12,BB16}
N002 (  2, 10) [000128] H-----------       t128 =    CNS_INT(h) long   0xd1ffab1e token $192
                                                  /--*  t128   long   
               [000528] ------------       t528 = *  PUTARG_REG long   REG rcx
                                                  /--*  t528   long   arg0 in rcx
N003 ( 16, 16) [000129] --C---------       t129 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1e4
                                                  /--*  t129   ref    
N005 ( 16, 16) [000131] DA----------              *  STORE_LCL_VAR ref    V16 tmp10        d:2
N002 (  2, 10) [000399] I-----------       t399 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] $188
                                                  /--*  t399   long   
N003 (  4, 12) [000121] n---G-------       t121 = *  IND       ref    <l:$4c7, c:$2f0>
                                                  /--*  t121   ref    
N006 (  5, 13) [000305] DA--G-------              *  STORE_LCL_VAR ref    V25 tmp19        d:2
N001 (  1,  1) [000292] ------------       t292 =    LCL_VAR   ref    V25 tmp19        u:2 <l:$4c7, c:$2f0>
N002 (  1,  1) [000293] -c----------       t293 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t292   ref    
                                                  +--*  t293   ref    
N003 (  3,  3) [000294] J------N----              *  EQ        void   <l:$250, c:$24f>
N004 (  5,  5) [000295] ------------              *  JTRUE     void  

------------ BB12 [000..000), preds={BB11} succs={BB13}
N001 (  1,  1) [000132] ------------       t132 =    LCL_VAR   ref    V16 tmp10        u:2 $1e4
                                                  /--*  t132   ref    
N003 (  2,  2) [000401] ------------       t401 = *  LEA(b+8)  byref 
N005 (  1,  1) [000296] ------------       t296 =    LCL_VAR   ref    V25 tmp19        u:2 (last use) <l:$4c7, c:$2f0>
                                                  /--*  t401   byref  
                                                  +--*  t296   ref    
               [000482] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000299] ------------       t299 =    LCL_VAR   ref    V16 tmp10        u:2 $1e4
                                                  /--*  t299   ref    
N003 (  2,  2) [000403] -c----------       t403 = *  LEA(b+24) byref 
N005 (  2, 10) [000127] H-----------       t127 =    CNS_INT(h) long   0xd1ffab1e ftn $194
                                                  /--*  t403   byref  
                                                  +--*  t127   long   
               [000483] -A--GO------              *  STOREIND  long  
               [000484] ------------                 IL_OFFSET void   IL offset: 0x96
N002 (  2, 10) [000406] I-----------       t406 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] $191
N004 (  1,  1) [000135] ------------       t135 =    LCL_VAR   ref    V16 tmp10        u:2 $1e4
                                                  /--*  t406   long   
                                                  +--*  t135   ref    
               [000485] -A--G-------              *  STOREIND  ref   
N001 (  1,  1) [000134] ------------       t134 =    LCL_VAR   ref    V16 tmp10        u:2 (last use) $1e4
                                                  /--*  t134   ref    
N003 (  1,  3) [000148] DA----------              *  STORE_LCL_VAR ref    V15 tmp9         d:4

------------ BB13 [09C..0A6), preds={BB10,BB12} succs={BB14}
N001 (  0,  0) [000440] ------------       t440 =    PHI_ARG   ref    V15 tmp9         u:4 $1e4
N002 (  0,  0) [000439] ------------       t439 =    PHI_ARG   ref    V15 tmp9         u:2 <l:$4c6, c:$2e9>
                                                  /--*  t440   ref    
                                                  +--*  t439   ref    
N003 (  0,  0) [000431] ------------       t431 = *  PHI       ref   
                                                  /--*  t431   ref    
N005 (  0,  0) [000432] DA----------              *  STORE_LCL_VAR ref    V15 tmp9         d:3
N004 (  1,  1) [000111] ------------       t111 =    LCL_VAR   ref    V15 tmp9         u:3 (last use) $4ca
                                                  /--*  t111   ref    
               [000529] ------------       t529 = *  PUTARG_REG ref    REG r8
N005 (  1,  1) [000110] ------------       t110 =    LCL_VAR   ref    V14 tmp8         u:2 (last use) $2db
                                                  /--*  t110   ref    
               [000530] ------------       t530 = *  PUTARG_REG ref    REG rdx
N006 (  2, 10) [000113] H-----------       t113 =    CNS_INT(h) long   0xd1ffab1e method $196
                                                  /--*  t113   long   
               [000531] ------------       t531 = *  PUTARG_REG long   REG rcx
                                                  /--*  t529   ref    arg2 in r8
                                                  +--*  t530   ref    arg1 in rdx
                                                  +--*  t531   long   arg0 in rcx
N007 ( 18, 20) [000112] --CXG-------       t112 = *  CALL      ref    System.Linq.Enumerable.SelectMany $2f6
                                                  /--*  t112   ref    
N009 ( 18, 20) [000313] DA-XG-------              *  STORE_LCL_VAR ref    V27 tmp21        d:2
N004 (  1,  1) [000308] ------------       t308 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t308   ref    
N006 (  2,  2) [000411] -c----------       t411 = *  LEA(b+16) byref 
                                                  /--*  t411   byref  
N007 (  4,  4) [000309] n---GO------       t309 = *  IND       int    <l:$254, c:$253>
                                                  /--*  t309   int    
               [000532] ----GO------       t532 = *  PUTARG_REG int    REG rdx
N008 (  1,  1) [000109] ------------       t109 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t109   ref    
               [000533] ------------       t533 = *  PUTARG_REG ref    REG rcx
N009 (  1,  1) [000310] ------------       t310 =    LCL_VAR   ref    V27 tmp21        u:2 (last use) $2f6
                                                  /--*  t310   ref    
               [000534] ------------       t534 = *  PUTARG_REG ref    REG r8
                                                  /--*  t532   int    arg1 in rdx
                                                  +--*  t533   ref    this in rcx
                                                  +--*  t534   ref    arg2 in r8
N010 ( 20, 15) [000311] --CXGO------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange $VN.Void

------------ BB14 [0A6..0B3) -> BB02 (cond), preds={BB04,BB05,BB13} succs={BB15,BB02}
               [000486] ------------                 IL_OFFSET void   IL offset: 0xa6
N001 (  1,  1) [000116] ------------       t116 =    LCL_VAR   int    V03 loc2         u:3 (last use) $280
N002 (  1,  1) [000117] -c----------       t117 =    CNS_INT   int    1 $46
                                                  /--*  t116   int    
                                                  +--*  t117   int    
N003 (  3,  3) [000118] ------------       t118 = *  ADD       int    $269
                                                  /--*  t118   int    
N005 (  3,  3) [000120] DA----------              *  STORE_LCL_VAR int    V03 loc2         d:4
               [000487] ------------                 IL_OFFSET void   IL offset: 0xaa
N001 (  1,  1) [000456] ------------       t456 =    LCL_VAR   int    V29 cse1         u:1 $200
N002 (  1,  1) [000023] ------------        t23 =    LCL_VAR   int    V03 loc2         u:4 $269
                                                  /--*  t456   int    
                                                  +--*  t23    int    
N003 (  3,  3) [000026] J------N----              *  GT        void   $26b
N004 (  5,  5) [000027] ------------              *  JTRUE     void  

------------ BB15 [0B3..0C7) (return), preds={BB01,BB14} succs={}
               [000488] ------------                 IL_OFFSET void   IL offset: 0xb3
N003 (  1,  1) [000180] ------------       t180 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t180   ref    
               [000535] ------------       t535 = *  PUTARG_REG ref    REG rdx
N004 (  2, 10) [000182] H-----------       t182 =    CNS_INT(h) long   0xd1ffab1e method $19c
                                                  /--*  t182   long   
               [000536] ------------       t536 = *  PUTARG_REG long   REG rcx
                                                  /--*  t535   ref    arg1 in rdx
                                                  +--*  t536   long   arg0 in rcx
N005 ( 17, 18) [000181] --CXG-------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle $VN.Void
N004 (  2, 10) [000417] H-----------       t417 =    CNS_INT(h) long   0xD1FFAB1E "Enumerated and shuffled the project paths." $19d
                                                  /--*  t417   long   
N005 (  4, 12) [000418] #---G-------       t418 = *  IND       ref    $1f9
                                                  /--*  t418   ref    
               [000537] ----G-------       t537 = *  PUTARG_REG ref    REG rdx
N006 (  2, 10) [000186] H-----------       t186 =    CNS_INT(h) long   0xd1ffab1e method $181
                                                  /--*  t186   long   
               [000538] ------------       t538 = *  PUTARG_REG long   REG rcx
N007 (  1,  1) [000184] ------------       t184 =    CNS_INT   int    2 $42
                                                  /--*  t184   int    
               [000539] ------------       t539 = *  PUTARG_REG int    REG r8
                                                  /--*  t537   ref    arg1 in rdx
                                                  +--*  t538   long   arg0 in rcx
                                                  +--*  t539   int    arg2 in r8
N008 ( 21, 31) [000185] --CXG-------       t185 = *  CALL      ref    SolutionAnalyzer.Logger.Log $10d
               [000489] ------------                 IL_OFFSET void   IL offset: 0xc5
N001 (  1,  1) [000190] ------------       t190 =    LCL_VAR   ref    V01 loc0         u:2 (last use) $1c1
                                                  /--*  t190   ref    
N002 (  2,  2) [000191] ------------              *  RETURN    ref    $10f

------------ BB16 [000..000) (throw), preds={BB08,BB11} succs={}
N001 ( 14,  5) [000303] --CXG-------                 CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance $VN.Void

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
Trees before Calculate stack level slots

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB15 ( cond )                     i label target hascall gcsafe idxlen newobj LIR 
BB02 [0001]  2       BB01,BB14             4     0 [01D..02E)-> BB07 ( cond )                     i Loop label target hascall gcsafe idxlen nullcheck bwd bwd-target LIR 
BB03 [0002]  1       BB02                  2     0 [02E..037)-> BB05 ( cond )                     i gcsafe idxlen bwd LIR 
BB04 [0013]  1       BB03                  2     0 [02E..02F)-> BB14 (always)                     i hascall gcsafe bwd LIR 
BB05 [0014]  1       BB03                  2     0 [02E..02F)-> BB14 (always)                     i label target hascall gcsafe bwd LIR 
BB07 [0003]  1       BB02                  2     0 [037..04B)-> BB10 ( cond )                     i label target hascall gcsafe bwd LIR 
BB08 [0004]  1       BB07                  2     0 [000..062)-> BB16 ( cond )                     i hascall gcsafe newobj bwd LIR 
BB09 [0020]  1       BB08                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd LIR 
BB10 [0005]  2       BB07,BB09             2     0 [062..085)-> BB13 ( cond )                     i label target hascall gcsafe bwd LIR 
BB11 [0006]  1       BB10                  2     0 [000..09C)-> BB16 ( cond )                     i hascall gcsafe newobj bwd LIR 
BB12 [0028]  1       BB11                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd LIR 
BB13 [0007]  2       BB10,BB12             2     0 [09C..0A6)                                     i label target hascall gcsafe bwd LIR 
BB14 [0008]  3       BB04,BB05,BB13        4     0 [0A6..0B3)-> BB02 ( cond )                     i label target gcsafe idxlen bwd LIR 
BB15 [0010]  2       BB01,BB14             1       [0B3..0C7)        (return)                     i label target hascall gcsafe LIR 
BB16 [0027]  2       BB08,BB11             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..01D) -> BB15 (cond), preds={} succs={BB02,BB15}
N004 (  2, 10) [000316] H-----------       t316 =    CNS_INT(h) long   0xD1FFAB1E "Started enumerating project paths." $180
                                                  /--*  t316   long   
N005 (  4, 12) [000317] #---G-------       t317 = *  IND       ref    $1c0
                                                  /--*  t317   ref    
               [000494] ----G-------       t494 = *  PUTARG_REG ref    REG rdx
N006 (  2, 10) [000003] H-----------         t3 =    CNS_INT(h) long   0xd1ffab1e method $181
                                                  /--*  t3     long   
               [000495] ------------       t495 = *  PUTARG_REG long   REG rcx
N007 (  1,  1) [000001] ------------         t1 =    CNS_INT   int    2 $42
                                                  /--*  t1     int    
               [000496] ------------       t496 = *  PUTARG_REG int    REG r8
                                                  /--*  t494   ref    arg1 in rdx
                                                  +--*  t495   long   arg0 in rcx
                                                  +--*  t496   int    arg2 in r8
N008 ( 21, 31) [000002] --CXG-------         t2 = *  CALL      ref    SolutionAnalyzer.Logger.Log $101
               [000459] ------------                 IL_OFFSET void   IL offset: 0xc
N002 (  2, 10) [000008] H-----------         t8 =    CNS_INT(h) long   0xd1ffab1e token $182
                                                  /--*  t8     long   
               [000497] ------------       t497 = *  PUTARG_REG long   REG rcx
                                                  /--*  t497   long   arg0 in rcx
N003 ( 16, 16) [000009] --C---------         t9 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1c1
                                                  /--*  t9     ref    
N005 ( 16, 16) [000011] DA----------              *  STORE_LCL_VAR ref    V07 tmp1         d:2
N003 (  1,  1) [000012] ------------        t12 =    LCL_VAR   ref    V07 tmp1         u:2 $1c1
                                                  /--*  t12    ref    
               [000498] ------------       t498 = *  PUTARG_REG ref    REG rcx
N004 (  1,  1) [000007] ------------         t7 =    CNS_INT   int    100 $43
                                                  /--*  t7     int    
               [000499] ------------       t499 = *  PUTARG_REG int    REG rdx
                                                  /--*  t498   ref    this in rcx
                                                  +--*  t499   int    arg1 in rdx
N005 ( 16, 10) [000013] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor $VN.Void
               [000460] ------------                 IL_OFFSET void   IL offset: 0x13
N001 (  1,  1) [000014] ------------        t14 =    LCL_VAR   ref    V07 tmp1         u:2 (last use) $1c1
                                                  /--*  t14    ref    
N003 (  1,  3) [000016] DA----------              *  STORE_LCL_VAR ref    V01 loc0         d:2
               [000461] ------------                 IL_OFFSET void   IL offset: 0x14
N001 (  1,  1) [000017] ------------        t17 =    LCL_VAR   ref    V00 arg0         u:1 (last use) $80
                                                  /--*  t17    ref    
N003 (  1,  3) [000019] DA----------              *  STORE_LCL_VAR ref    V02 loc1         d:2
               [000462] ------------                 IL_OFFSET void   IL offset: 0x16
N001 (  1,  1) [000020] ------------        t20 =    CNS_INT   int    0 $40
                                                  /--*  t20    int    
N003 (  1,  3) [000022] DA----------              *  STORE_LCL_VAR int    V03 loc2         d:2
               [000463] ------------                 IL_OFFSET void   IL offset: 0xaa
N001 (  1,  1) [000424] ------------       t424 =    LCL_VAR   ref    V02 loc1         u:2 $80
                                                  /--*  t424   ref    
               [000491] -c----------       t491 = *  LEA(b+8)  ref   
                                                  /--*  t491   ref    
N002 (  3,  3) [000423] ---X--------       t423 = *  IND       int    $240
                                                  /--*  t423   int    
N004 (  3,  3) [000452] DA-X--------              *  STORE_LCL_VAR int    V29 cse1         d:1
N005 (  1,  1) [000453] ------------       t453 =    LCL_VAR   int    V29 cse1         u:1 $240
N007 (  1,  1) [000457] -c----------       t457 =    CNS_INT   int    0 $40
                                                  /--*  t453   int    
                                                  +--*  t457   int    
N008 (  6,  6) [000422] J--X---N----              *  LE        void   $242
N009 (  8,  8) [000426] ---X--------              *  JTRUE     void  

------------ BB02 [01D..02E) -> BB07 (cond), preds={BB01,BB14} succs={BB03,BB07}
N001 (  0,  0) [000437] ------------       t437 =    PHI_ARG   int    V03 loc2         u:4
N002 (  0,  0) [000436] ------------       t436 =    PHI_ARG   int    V03 loc2         u:2 $40
                                                  /--*  t437   int    
                                                  +--*  t436   int    
N003 (  0,  0) [000428] ------------       t428 = *  PHI       int   
                                                  /--*  t428   int    
N005 (  0,  0) [000429] DA----------              *  STORE_LCL_VAR int    V03 loc2         d:3
               [000464] ------------                 IL_OFFSET void   IL offset: 0x1d
N002 (  1,  1) [000324] ------------       t324 =    LCL_VAR   ref    V02 loc1         u:2 $80
N003 (  1,  1) [000325] ------------       t325 =    LCL_VAR   int    V03 loc2         u:3 $280
                                                  /--*  t325   int    
N004 (  2,  3) [000328] ------------       t328 = *  CAST      long <- int $300
                                                  /--*  t324   ref    
                                                  +--*  t328   long   
N009 (  5,  6) [000333] -c----------       t333 = *  LEA(b+(i*8)+16) byref 
                                                  /--*  t333   byref  
N010 (  6,  7) [000030] a---G-------        t30 = *  IND       ref    <l:$1ca, c:$2c1>
                                                  /--*  t30    ref    
N013 (  6,  7) [000032] DA--G-------              *  STORE_LCL_VAR ref    V04 loc3         d:2
               [000465] ------------                 IL_OFFSET void   IL offset: 0x21
N001 (  1,  1) [000196] ------------       t196 =    LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
                                                  /--*  t196   ref    
N002 (  2,  2) [000197] ---X--------              *  NULLCHECK int    <l:$1d0, c:$1cf>
N004 (  2, 10) [000335] H-----------       t335 =    CNS_INT(h) long   0xD1FFAB1E ".csproj" $184
                                                  /--*  t335   long   
N005 (  4, 12) [000336] #---G-------       t336 = *  IND       ref    $1d1
                                                  /--*  t336   ref    
               [000500] ----G-------       t500 = *  PUTARG_REG ref    REG rdx
N006 (  1,  1) [000033] ------------        t33 =    LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
                                                  /--*  t33    ref    
               [000501] ------------       t501 = *  PUTARG_REG ref    REG rcx
N007 (  1,  1) [000194] ------------       t194 =    CNS_INT   int    0 $40
                                                  /--*  t194   int    
               [000502] ------------       t502 = *  PUTARG_REG int    REG r8
                                                  /--*  t500   ref    arg1 in rdx
                                                  +--*  t501   ref    this in rcx
                                                  +--*  t502   int    arg2 in r8
N008 ( 20, 23) [000195] --CXG-------       t195 = *  CALL      int    System.String.EndsWith $401
N009 (  1,  1) [000037] -c----------        t37 =    CNS_INT   int    0 $40
                                                  /--*  t195   int    
                                                  +--*  t37    int    
N010 ( 22, 25) [000038] J--XG--N----              *  EQ        void   $244
N011 ( 24, 27) [000039] ---XG-------              *  JTRUE     void  

------------ BB03 [02E..037) -> BB05 (cond), preds={BB02} succs={BB04,BB05}
               [000466] ------------                 IL_OFFSET void   IL offset: 0x2e
N001 (  1,  1) [000199] -c----------       t199 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t199   ref    
N003 (  2,  2) [000343] -c----------       t343 = *  LEA(b+20) byref 
                                                  /--*  t343   byref  
N004 (  4,  4) [000200] nc--GO------       t200 = *  IND       int    <l:$258, c:$257>
N005 (  1,  1) [000201] -c----------       t201 =    CNS_INT   int    1 $46
                                                  /--*  t200   int    
                                                  +--*  t201   int    
N006 (  6,  6) [000202] -c--GO------       t202 = *  ADD       int    <l:$25c, c:$25b>
N007 (  1,  1) [000177] ------------       t177 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t177   ref    
N009 (  2,  2) [000341] -c----------       t341 = *  LEA(b+20) byref 
                                                  /--*  t341   byref  
                                                  +--*  t202   int    
               [000467] -A--GO------              *  STOREIND  int   
               [000468] ------------                 IL_OFFSET void   IL offset: 0x2e
N001 (  1,  1) [000205] ------------       t205 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t205   ref    
N003 (  2,  2) [000345] -c----------       t345 = *  LEA(b+8)  byref 
                                                  /--*  t345   byref  
N004 (  4,  4) [000206] n---GO------       t206 = *  IND       ref    <l:$1f0, c:$1ef>
                                                  /--*  t206   ref    
N006 (  4,  4) [000208] DA--GO------              *  STORE_LCL_VAR ref    V18 tmp12        d:2
               [000469] ------------                 IL_OFFSET void   IL offset: 0x2e
N001 (  1,  1) [000209] ------------       t209 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t209   ref    
N003 (  2,  2) [000347] -c----------       t347 = *  LEA(b+16) byref 
                                                  /--*  t347   byref  
N004 (  4,  4) [000210] n---GO------       t210 = *  IND       int    <l:$260, c:$25f>
                                                  /--*  t210   int    
N006 (  4,  4) [000212] DA--GO------              *  STORE_LCL_VAR int    V19 tmp13        d:2
               [000470] ------------                 IL_OFFSET void   IL offset: 0x2e
N001 (  1,  1) [000214] ------------       t214 =    LCL_VAR   ref    V18 tmp12        u:2 <l:$1ee, c:$2fc>
                                                  /--*  t214   ref    
               [000493] -c----------       t493 = *  LEA(b+8)  ref   
                                                  /--*  t493   ref    
N002 (  3,  3) [000215] -c-X--------       t215 = *  IND       int    <l:$262, c:$261>
N003 (  1,  1) [000213] ------------       t213 =    LCL_VAR   int    V19 tmp13        u:2 <l:$25e, c:$411>
                                                  /--*  t215   int    
                                                  +--*  t213   int    
N004 (  5,  5) [000216] N--X---N-U--              *  LE        void   <l:$266, c:$265>
N005 (  7,  7) [000217] ---X--------              *  JTRUE     void  

------------ BB04 [02E..02F) -> BB14 (always), preds={BB03} succs={BB14}
               [000471] ------------                 IL_OFFSET void   IL offset: 0x2e
N001 (  1,  1) [000221] ------------       t221 =    LCL_VAR   int    V19 tmp13        u:2 <l:$25e, c:$411>
N002 (  1,  1) [000222] -c----------       t222 =    CNS_INT   int    1 $46
                                                  /--*  t221   int    
                                                  +--*  t222   int    
N003 (  3,  3) [000223] ------------       t223 = *  ADD       int    <l:$268, c:$267>
N004 (  1,  1) [000220] ------------       t220 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t220   ref    
N006 (  2,  2) [000349] -c----------       t349 = *  LEA(b+16) byref 
                                                  /--*  t349   byref  
                                                  +--*  t223   int    
               [000472] -A--GO------              *  STOREIND  int   
               [000473] ------------                 IL_OFFSET void   IL offset: 0x2e
N004 (  1,  1) [000226] ------------       t226 =    LCL_VAR   ref    V18 tmp12        u:2 (last use) <l:$1ee, c:$2fc>
                                                  /--*  t226   ref    
               [000503] ------------       t503 = *  PUTARG_REG ref    REG rcx
N005 (  1,  1) [000227] ------------       t227 =    LCL_VAR   int    V19 tmp13        u:2 (last use) <l:$25e, c:$411>
                                                  /--*  t227   int    
               [000504] ------------       t504 = *  PUTARG_REG int    REG rdx
N006 (  1,  1) [000228] ------------       t228 =    LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>
                                                  /--*  t228   ref    
               [000505] ------------       t505 = *  PUTARG_REG ref    REG r8
                                                  /--*  t503   ref    arg0 in rcx
                                                  +--*  t504   int    arg1 in rdx
                                                  +--*  t505   ref    arg2 in r8
N007 ( 17, 11) [000229] --CXG-------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST $1db

------------ BB05 [02E..02F) -> BB14 (always), preds={BB03} succs={BB14}
               [000474] ------------                 IL_OFFSET void   IL offset: 0x2e
N003 (  1,  1) [000218] ------------       t218 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t218   ref    
               [000506] ------------       t506 = *  PUTARG_REG ref    REG rcx
N004 (  1,  1) [000178] ------------       t178 =    LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>
                                                  /--*  t178   ref    
               [000507] ------------       t507 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t506   ref    this in rcx
                                                  +--*  t507   ref    arg1 in rdx
N005 ( 16, 10) [000219] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize $VN.Void

------------ BB07 [037..04B) -> BB10 (cond), preds={BB02} succs={BB08,BB10}
               [000475] ------------                 IL_OFFSET void   IL offset: 0x37
N002 (  1,  1) [000235] ------------       t235 =    CNS_INT   int    1 $46
                                                  /--*  t235   int    
               [000508] ------------       t508 = *  PUTARG_REG int    REG rcx
                                                  /--*  t508   int    arg0 in rcx
N003 ( 15,  7) [000236] --CXG-------       t236 = *  CALL      ref    System.IO.EnumerationOptions.FromSearchOption $2c6
                                                  /--*  t236   ref    
N005 ( 15,  7) [000247] DA-XG-------              *  STORE_LCL_VAR ref    V20 tmp14        d:2
N005 (  2, 10) [000356] H-----------       t356 =    CNS_INT(h) long   0xD1FFAB1E "*" $185
                                                  /--*  t356   long   
N006 (  4, 12) [000357] #---G-------       t357 = *  IND       ref    $1d2
                                                  /--*  t357   ref    
               [000509] ----G-------       t509 = *  PUTARG_REG ref    REG rdx
N007 (  1,  1) [000040] ------------        t40 =    LCL_VAR   ref    V04 loc3         u:2 <l:$1ca, c:$2c1>
                                                  /--*  t40    ref    
               [000510] ------------       t510 = *  PUTARG_REG ref    REG rcx
N008 (  1,  1) [000244] ------------       t244 =    LCL_VAR   ref    V20 tmp14        u:2 (last use) $2c6
                                                  /--*  t244   ref    
               [000511] ------------       t511 = *  PUTARG_REG ref    REG r9
N009 (  1,  1) [000243] ------------       t243 =    CNS_INT   int    2 $42
                                                  /--*  t243   int    
               [000512] ------------       t512 = *  PUTARG_REG int    REG r8
                                                  /--*  t509   ref    arg1 in rdx
                                                  +--*  t510   ref    arg0 in rcx
                                                  +--*  t511   ref    arg3 in r9
                                                  +--*  t512   int    arg2 in r8
N010 ( 21, 24) [000245] --CXG-------       t245 = *  CALL      ref    System.IO.Directory.InternalEnumeratePaths $2cc
                                                  /--*  t245   ref    
N012 ( 21, 24) [000054] DA-XG-------              *  STORE_LCL_VAR ref    V09 tmp3         d:2
N003 (  2, 10) [000047] ------------        t47 =    CNS_INT   long   0x7ffc7e4c17e0 $345
                                                  /--*  t47    long   
               [000513] ------------       t513 = *  PUTARG_REG long   REG rcx
N004 (  1,  1) [000048] ------------        t48 =    CNS_INT   int    35 $47
                                                  /--*  t48    int    
               [000514] ------------       t514 = *  PUTARG_REG int    REG rdx
                                                  /--*  t513   long   arg0 in rcx
                                                  +--*  t514   int    arg1 in rdx
N005 ( 17, 18) [000049] H-CXG-------        t49 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $305
N010 (  2, 10) [000364] I-----------       t364 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] $186
                                                  /--*  t364   long   
N011 (  4, 12) [000045] n---G-------        t45 = *  IND       ref    <l:$4c0, c:$2cf>
                                                  /--*  t45    ref    
N014 ( 22, 31) [000052] DA-XG-------              *  STORE_LCL_VAR ref    V08 tmp2         d:2
N001 (  1,  1) [000055] ------------        t55 =    LCL_VAR   ref    V09 tmp3         u:2 (last use) $2cc
                                                  /--*  t55    ref    
N003 (  1,  3) [000062] DA----------              *  STORE_LCL_VAR ref    V10 tmp4         d:2
N001 (  1,  1) [000056] ------------        t56 =    LCL_VAR   ref    V08 tmp2         u:2 (last use) <l:$4c0, c:$2cf>
                                                  /--*  t56    ref    
N003 (  1,  3) [000065] DA----------              *  STORE_LCL_VAR ref    V11 tmp5         d:2
N001 (  1,  1) [000057] ------------        t57 =    LCL_VAR   ref    V11 tmp5         u:2 <l:$4c0, c:$2cf>
N002 (  1,  1) [000058] -c----------        t58 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t57    ref    
                                                  +--*  t58    ref    
N003 (  3,  3) [000059] J------N----              *  NE        void   <l:$246, c:$245>
N004 (  5,  5) [000060] ------------              *  JTRUE     void  

------------ BB08 [000..062) -> BB16 (cond), preds={BB07} succs={BB09,BB16}
N002 (  2, 10) [000157] H-----------       t157 =    CNS_INT(h) long   0xd1ffab1e token $187
                                                  /--*  t157   long   
               [000515] ------------       t515 = *  PUTARG_REG long   REG rcx
                                                  /--*  t515   long   arg0 in rcx
N003 ( 16, 16) [000158] --C---------       t158 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1d6
                                                  /--*  t158   ref    
N005 ( 16, 16) [000160] DA----------              *  STORE_LCL_VAR ref    V17 tmp11        d:2
N002 (  2, 10) [000368] I-----------       t368 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] $188
                                                  /--*  t368   long   
N003 (  4, 12) [000150] n---G-------       t150 = *  IND       ref    <l:$4c1, c:$2d5>
                                                  /--*  t150   ref    
N006 (  5, 13) [000262] DA--G-------              *  STORE_LCL_VAR ref    V21 tmp15        d:2
N001 (  1,  1) [000249] ------------       t249 =    LCL_VAR   ref    V21 tmp15        u:2 <l:$4c1, c:$2d5>
N002 (  1,  1) [000250] -c----------       t250 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t249   ref    
                                                  +--*  t250   ref    
N003 (  3,  3) [000251] J------N----              *  EQ        void   <l:$248, c:$247>
N004 (  5,  5) [000252] ------------              *  JTRUE     void  

------------ BB09 [000..000), preds={BB08} succs={BB10}
N001 (  1,  1) [000161] ------------       t161 =    LCL_VAR   ref    V17 tmp11        u:2 $1d6
                                                  /--*  t161   ref    
N003 (  2,  2) [000370] ------------       t370 = *  LEA(b+8)  byref 
N005 (  1,  1) [000253] ------------       t253 =    LCL_VAR   ref    V21 tmp15        u:2 (last use) <l:$4c1, c:$2d5>
                                                  /--*  t370   byref  
                                                  +--*  t253   ref    
               [000476] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000256] ------------       t256 =    LCL_VAR   ref    V17 tmp11        u:2 $1d6
                                                  /--*  t256   ref    
N003 (  2,  2) [000372] -c----------       t372 = *  LEA(b+24) byref 
N005 (  2, 10) [000156] H-----------       t156 =    CNS_INT(h) long   0xd1ffab1e ftn $18a
                                                  /--*  t372   byref  
                                                  +--*  t156   long   
               [000477] -A--GO------              *  STOREIND  long  
               [000478] ------------                 IL_OFFSET void   IL offset: 0x5c
N002 (  2, 10) [000375] I-----------       t375 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] $186
N004 (  1,  1) [000164] ------------       t164 =    LCL_VAR   ref    V17 tmp11        u:2 $1d6
                                                  /--*  t375   long   
                                                  +--*  t164   ref    
               [000479] -A--G-------              *  STOREIND  ref   
N001 (  1,  1) [000163] ------------       t163 =    LCL_VAR   ref    V17 tmp11        u:2 (last use) $1d6
                                                  /--*  t163   ref    
N003 (  1,  3) [000175] DA----------              *  STORE_LCL_VAR ref    V11 tmp5         d:4

------------ BB10 [062..085) -> BB13 (cond), preds={BB07,BB09} succs={BB11,BB13}
N001 (  0,  0) [000441] ------------       t441 =    PHI_ARG   ref    V11 tmp5         u:4 $1d6
N002 (  0,  0) [000438] ------------       t438 =    PHI_ARG   ref    V11 tmp5         u:2 <l:$4c0, c:$2cf>
                                                  /--*  t441   ref    
                                                  +--*  t438   ref    
N003 (  0,  0) [000434] ------------       t434 = *  PHI       ref   
                                                  /--*  t434   ref    
N005 (  0,  0) [000435] DA----------              *  STORE_LCL_VAR ref    V11 tmp5         d:3
N004 (  1,  1) [000070] ------------        t70 =    LCL_VAR   ref    V11 tmp5         u:3 (last use) $4c4
                                                  /--*  t70    ref    
               [000516] ------------       t516 = *  PUTARG_REG ref    REG r8
N005 (  1,  1) [000069] ------------        t69 =    LCL_VAR   ref    V10 tmp4         u:2 (last use) $2cc
                                                  /--*  t69    ref    
               [000517] ------------       t517 = *  PUTARG_REG ref    REG rdx
N006 (  2, 10) [000072] H-----------        t72 =    CNS_INT(h) long   0xd1ffab1e method $18d
                                                  /--*  t72    long   
               [000518] ------------       t518 = *  PUTARG_REG long   REG rcx
                                                  /--*  t516   ref    arg2 in r8
                                                  +--*  t517   ref    arg1 in rdx
                                                  +--*  t518   long   arg0 in rcx
N007 ( 18, 20) [000071] --CXG-------        t71 = *  CALL      ref    System.Linq.Enumerable.Where $2db
                                                  /--*  t71    ref    
N009 ( 18, 20) [000075] DA-XG-------              *  STORE_LCL_VAR ref    V05 loc4         d:2
               [000480] ------------                 IL_OFFSET void   IL offset: 0x69
N003 (  2, 10) [000273] ------------       t273 =    CNS_INT   long   0x7ffc7e783cd8 $347
                                                  /--*  t273   long   
               [000519] ------------       t519 = *  PUTARG_REG long   REG rcx
N004 (  1,  1) [000274] ------------       t274 =    CNS_INT   int    40 $4a
                                                  /--*  t274   int    
               [000520] ------------       t520 = *  PUTARG_REG int    REG rdx
                                                  /--*  t519   long   arg0 in rcx
                                                  +--*  t520   int    arg1 in rdx
N005 ( 17, 18) [000275] H-CXG-------       t275 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE $309
N006 (  2, 10) [000381] I-----------       t381 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<Compatible>k__BackingField] $18e
                                                  /--*  t381   long   
N007 (  4, 12) [000271] n---G-------       t271 = *  IND       ref    <l:$4c5, c:$2de>
                                                  /--*  t271   ref    
N010 ( 21, 30) [000283] DA-XG-------              *  STORE_LCL_VAR ref    V23 tmp17        d:2
N005 (  2, 10) [000382] H-----------       t382 =    CNS_INT(h) long   0xD1FFAB1E "*.csproj" $18f
                                                  /--*  t382   long   
N006 (  4, 12) [000383] #---G-------       t383 = *  IND       ref    $1e0
                                                  /--*  t383   ref    
               [000521] ----G-------       t521 = *  PUTARG_REG ref    REG rdx
N007 (  1,  1) [000077] ------------        t77 =    LCL_VAR   ref    V04 loc3         u:2 (last use) <l:$1ca, c:$2c1>
                                                  /--*  t77    ref    
               [000522] ------------       t522 = *  PUTARG_REG ref    REG rcx
N008 (  1,  1) [000280] ------------       t280 =    LCL_VAR   ref    V23 tmp17        u:2 (last use) <l:$4c5, c:$2de>
                                                  /--*  t280   ref    
               [000523] ------------       t523 = *  PUTARG_REG ref    REG r9
N009 (  1,  1) [000279] ------------       t279 =    CNS_INT   int    1 $46
                                                  /--*  t279   int    
               [000524] ------------       t524 = *  PUTARG_REG int    REG r8
                                                  /--*  t521   ref    arg1 in rdx
                                                  +--*  t522   ref    arg0 in rcx
                                                  +--*  t523   ref    arg3 in r9
                                                  +--*  t524   int    arg2 in r8
N010 ( 21, 24) [000281] --CXG-------       t281 = *  CALL      ref    System.IO.Directory.InternalEnumeratePaths $2e3
                                                  /--*  t281   ref    
N012 ( 21, 24) [000290] DA-XG-------              *  STORE_LCL_VAR ref    V24 tmp18        d:2
N004 (  1,  1) [000285] ------------       t285 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t285   ref    
N006 (  2,  2) [000389] -c----------       t389 = *  LEA(b+16) byref 
                                                  /--*  t389   byref  
N007 (  4,  4) [000286] n---GO------       t286 = *  IND       int    <l:$24c, c:$24b>
                                                  /--*  t286   int    
               [000525] ----GO------       t525 = *  PUTARG_REG int    REG rdx
N008 (  1,  1) [000076] ------------        t76 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t76    ref    
               [000526] ------------       t526 = *  PUTARG_REG ref    REG rcx
N009 (  1,  1) [000287] ------------       t287 =    LCL_VAR   ref    V24 tmp18        u:2 (last use) $2e3
                                                  /--*  t287   ref    
               [000527] ------------       t527 = *  PUTARG_REG ref    REG r8
                                                  /--*  t525   int    arg1 in rdx
                                                  +--*  t526   ref    this in rcx
                                                  +--*  t527   ref    arg2 in r8
N010 ( 20, 15) [000288] --CXGO------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange $VN.Void
               [000481] ------------                 IL_OFFSET void   IL offset: 0x7a
N002 (  2, 10) [000395] I-----------       t395 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] $191
                                                  /--*  t395   long   
N003 (  4, 12) [000084] n---G-------        t84 = *  IND       ref    <l:$4c6, c:$2e9>
                                                  /--*  t84    ref    
N006 (  5, 13) [000091] DA--G-------              *  STORE_LCL_VAR ref    V12 tmp6         d:2
N001 (  1,  1) [000083] ------------        t83 =    LCL_VAR   ref    V05 loc4         u:2 (last use) $2db
                                                  /--*  t83    ref    
N003 (  1,  3) [000101] DA----------              *  STORE_LCL_VAR ref    V14 tmp8         d:2
N001 (  1,  1) [000092] ------------        t92 =    LCL_VAR   ref    V12 tmp6         u:2 (last use) <l:$4c6, c:$2e9>
                                                  /--*  t92    ref    
N003 (  1,  3) [000104] DA----------              *  STORE_LCL_VAR ref    V15 tmp9         d:2
N001 (  1,  1) [000093] ------------        t93 =    LCL_VAR   ref    V15 tmp9         u:2 <l:$4c6, c:$2e9>
N002 (  1,  1) [000094] -c----------        t94 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t93    ref    
                                                  +--*  t94    ref    
N003 (  3,  3) [000095] J------N----              *  NE        void   <l:$24e, c:$24d>
N004 (  5,  5) [000096] ------------              *  JTRUE     void  

------------ BB11 [000..09C) -> BB16 (cond), preds={BB10} succs={BB12,BB16}
N002 (  2, 10) [000128] H-----------       t128 =    CNS_INT(h) long   0xd1ffab1e token $192
                                                  /--*  t128   long   
               [000528] ------------       t528 = *  PUTARG_REG long   REG rcx
                                                  /--*  t528   long   arg0 in rcx
N003 ( 16, 16) [000129] --C---------       t129 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST $1e4
                                                  /--*  t129   ref    
N005 ( 16, 16) [000131] DA----------              *  STORE_LCL_VAR ref    V16 tmp10        d:2
N002 (  2, 10) [000399] I-----------       t399 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] $188
                                                  /--*  t399   long   
N003 (  4, 12) [000121] n---G-------       t121 = *  IND       ref    <l:$4c7, c:$2f0>
                                                  /--*  t121   ref    
N006 (  5, 13) [000305] DA--G-------              *  STORE_LCL_VAR ref    V25 tmp19        d:2
N001 (  1,  1) [000292] ------------       t292 =    LCL_VAR   ref    V25 tmp19        u:2 <l:$4c7, c:$2f0>
N002 (  1,  1) [000293] -c----------       t293 =    CNS_INT   ref    null $VN.Null
                                                  /--*  t292   ref    
                                                  +--*  t293   ref    
N003 (  3,  3) [000294] J------N----              *  EQ        void   <l:$250, c:$24f>
N004 (  5,  5) [000295] ------------              *  JTRUE     void  

------------ BB12 [000..000), preds={BB11} succs={BB13}
N001 (  1,  1) [000132] ------------       t132 =    LCL_VAR   ref    V16 tmp10        u:2 $1e4
                                                  /--*  t132   ref    
N003 (  2,  2) [000401] ------------       t401 = *  LEA(b+8)  byref 
N005 (  1,  1) [000296] ------------       t296 =    LCL_VAR   ref    V25 tmp19        u:2 (last use) <l:$4c7, c:$2f0>
                                                  /--*  t401   byref  
                                                  +--*  t296   ref    
               [000482] -A--GO------              *  STOREIND  ref   
N001 (  1,  1) [000299] ------------       t299 =    LCL_VAR   ref    V16 tmp10        u:2 $1e4
                                                  /--*  t299   ref    
N003 (  2,  2) [000403] -c----------       t403 = *  LEA(b+24) byref 
N005 (  2, 10) [000127] H-----------       t127 =    CNS_INT(h) long   0xd1ffab1e ftn $194
                                                  /--*  t403   byref  
                                                  +--*  t127   long   
               [000483] -A--GO------              *  STOREIND  long  
               [000484] ------------                 IL_OFFSET void   IL offset: 0x96
N002 (  2, 10) [000406] I-----------       t406 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] $191
N004 (  1,  1) [000135] ------------       t135 =    LCL_VAR   ref    V16 tmp10        u:2 $1e4
                                                  /--*  t406   long   
                                                  +--*  t135   ref    
               [000485] -A--G-------              *  STOREIND  ref   
N001 (  1,  1) [000134] ------------       t134 =    LCL_VAR   ref    V16 tmp10        u:2 (last use) $1e4
                                                  /--*  t134   ref    
N003 (  1,  3) [000148] DA----------              *  STORE_LCL_VAR ref    V15 tmp9         d:4

------------ BB13 [09C..0A6), preds={BB10,BB12} succs={BB14}
N001 (  0,  0) [000440] ------------       t440 =    PHI_ARG   ref    V15 tmp9         u:4 $1e4
N002 (  0,  0) [000439] ------------       t439 =    PHI_ARG   ref    V15 tmp9         u:2 <l:$4c6, c:$2e9>
                                                  /--*  t440   ref    
                                                  +--*  t439   ref    
N003 (  0,  0) [000431] ------------       t431 = *  PHI       ref   
                                                  /--*  t431   ref    
N005 (  0,  0) [000432] DA----------              *  STORE_LCL_VAR ref    V15 tmp9         d:3
N004 (  1,  1) [000111] ------------       t111 =    LCL_VAR   ref    V15 tmp9         u:3 (last use) $4ca
                                                  /--*  t111   ref    
               [000529] ------------       t529 = *  PUTARG_REG ref    REG r8
N005 (  1,  1) [000110] ------------       t110 =    LCL_VAR   ref    V14 tmp8         u:2 (last use) $2db
                                                  /--*  t110   ref    
               [000530] ------------       t530 = *  PUTARG_REG ref    REG rdx
N006 (  2, 10) [000113] H-----------       t113 =    CNS_INT(h) long   0xd1ffab1e method $196
                                                  /--*  t113   long   
               [000531] ------------       t531 = *  PUTARG_REG long   REG rcx
                                                  /--*  t529   ref    arg2 in r8
                                                  +--*  t530   ref    arg1 in rdx
                                                  +--*  t531   long   arg0 in rcx
N007 ( 18, 20) [000112] --CXG-------       t112 = *  CALL      ref    System.Linq.Enumerable.SelectMany $2f6
                                                  /--*  t112   ref    
N009 ( 18, 20) [000313] DA-XG-------              *  STORE_LCL_VAR ref    V27 tmp21        d:2
N004 (  1,  1) [000308] ------------       t308 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t308   ref    
N006 (  2,  2) [000411] -c----------       t411 = *  LEA(b+16) byref 
                                                  /--*  t411   byref  
N007 (  4,  4) [000309] n---GO------       t309 = *  IND       int    <l:$254, c:$253>
                                                  /--*  t309   int    
               [000532] ----GO------       t532 = *  PUTARG_REG int    REG rdx
N008 (  1,  1) [000109] ------------       t109 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t109   ref    
               [000533] ------------       t533 = *  PUTARG_REG ref    REG rcx
N009 (  1,  1) [000310] ------------       t310 =    LCL_VAR   ref    V27 tmp21        u:2 (last use) $2f6
                                                  /--*  t310   ref    
               [000534] ------------       t534 = *  PUTARG_REG ref    REG r8
                                                  /--*  t532   int    arg1 in rdx
                                                  +--*  t533   ref    this in rcx
                                                  +--*  t534   ref    arg2 in r8
N010 ( 20, 15) [000311] --CXGO------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange $VN.Void

------------ BB14 [0A6..0B3) -> BB02 (cond), preds={BB04,BB05,BB13} succs={BB15,BB02}
               [000486] ------------                 IL_OFFSET void   IL offset: 0xa6
N001 (  1,  1) [000116] ------------       t116 =    LCL_VAR   int    V03 loc2         u:3 (last use) $280
N002 (  1,  1) [000117] -c----------       t117 =    CNS_INT   int    1 $46
                                                  /--*  t116   int    
                                                  +--*  t117   int    
N003 (  3,  3) [000118] ------------       t118 = *  ADD       int    $269
                                                  /--*  t118   int    
N005 (  3,  3) [000120] DA----------              *  STORE_LCL_VAR int    V03 loc2         d:4
               [000487] ------------                 IL_OFFSET void   IL offset: 0xaa
N001 (  1,  1) [000456] ------------       t456 =    LCL_VAR   int    V29 cse1         u:1 $200
N002 (  1,  1) [000023] ------------        t23 =    LCL_VAR   int    V03 loc2         u:4 $269
                                                  /--*  t456   int    
                                                  +--*  t23    int    
N003 (  3,  3) [000026] J------N----              *  GT        void   $26b
N004 (  5,  5) [000027] ------------              *  JTRUE     void  

------------ BB15 [0B3..0C7) (return), preds={BB01,BB14} succs={}
               [000488] ------------                 IL_OFFSET void   IL offset: 0xb3
N003 (  1,  1) [000180] ------------       t180 =    LCL_VAR   ref    V01 loc0         u:2 $1c1
                                                  /--*  t180   ref    
               [000535] ------------       t535 = *  PUTARG_REG ref    REG rdx
N004 (  2, 10) [000182] H-----------       t182 =    CNS_INT(h) long   0xd1ffab1e method $19c
                                                  /--*  t182   long   
               [000536] ------------       t536 = *  PUTARG_REG long   REG rcx
                                                  /--*  t535   ref    arg1 in rdx
                                                  +--*  t536   long   arg0 in rcx
N005 ( 17, 18) [000181] --CXG-------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle $VN.Void
N004 (  2, 10) [000417] H-----------       t417 =    CNS_INT(h) long   0xD1FFAB1E "Enumerated and shuffled the project paths." $19d
                                                  /--*  t417   long   
N005 (  4, 12) [000418] #---G-------       t418 = *  IND       ref    $1f9
                                                  /--*  t418   ref    
               [000537] ----G-------       t537 = *  PUTARG_REG ref    REG rdx
N006 (  2, 10) [000186] H-----------       t186 =    CNS_INT(h) long   0xd1ffab1e method $181
                                                  /--*  t186   long   
               [000538] ------------       t538 = *  PUTARG_REG long   REG rcx
N007 (  1,  1) [000184] ------------       t184 =    CNS_INT   int    2 $42
                                                  /--*  t184   int    
               [000539] ------------       t539 = *  PUTARG_REG int    REG r8
                                                  /--*  t537   ref    arg1 in rdx
                                                  +--*  t538   long   arg0 in rcx
                                                  +--*  t539   int    arg2 in r8
N008 ( 21, 31) [000185] --CXG-------       t185 = *  CALL      ref    SolutionAnalyzer.Logger.Log $10d
               [000489] ------------                 IL_OFFSET void   IL offset: 0xc5
N001 (  1,  1) [000190] ------------       t190 =    LCL_VAR   ref    V01 loc0         u:2 (last use) $1c1
                                                  /--*  t190   ref    
N002 (  2,  2) [000191] ------------              *  RETURN    ref    $10f

------------ BB16 [000..000) (throw), preds={BB08,BB11} succs={}
N001 ( 14,  5) [000303] --CXG-------                 CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance $VN.Void

-------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Calculate stack level slots

*************** Finishing PHASE Calculate stack level slots [no changes]

*************** Starting PHASE Linear scan register alloc
Clearing modified regs.

buildIntervals ========

-----------------
LIVENESS:
-----------------
BB01 use def in out
{V00}
{V01 V02 V03 V07 V29}
{V00}
{V01 V02 V03 V29}
BB02 use def in out
{V02 V03}
{V04}
{V01 V02 V03 V29}
{V01 V02 V03 V04 V29}
BB03 use def in out
{V01}
{V18 V19}
{V01 V02 V03 V04 V29}
{V01 V02 V03 V04 V18 V19 V29}
BB04 use def in out
{V01 V04 V18 V19}
{}
{V01 V02 V03 V04 V18 V19 V29}
{V01 V02 V03 V29}
BB05 use def in out
{V01 V04}
{}
{V01 V02 V03 V04 V29}
{V01 V02 V03 V29}
BB07 use def in out
{V04}
{V08 V09 V10 V11 V20}
{V01 V02 V03 V04 V29}
{V01 V02 V03 V04 V10 V11 V29}
BB08 use def in out
{}
{V17 V21}
{V01 V02 V03 V04 V10 V29}
{V01 V02 V03 V04 V10 V17 V21 V29}
BB09 use def in out
{V17 V21}
{V11}
{V01 V02 V03 V04 V10 V17 V21 V29}
{V01 V02 V03 V04 V10 V11 V29}
BB10 use def in out
{V01 V04 V10 V11}
{V05 V12 V14 V15 V23 V24}
{V01 V02 V03 V04 V10 V11 V29}
{V01 V02 V03 V14 V15 V29}
BB11 use def in out
{}
{V16 V25}
{V01 V02 V03 V14 V29}
{V01 V02 V03 V14 V16 V25 V29}
BB12 use def in out
{V16 V25}
{V15}
{V01 V02 V03 V14 V16 V25 V29}
{V01 V02 V03 V14 V15 V29}
BB13 use def in out
{V01 V14 V15}
{V27}
{V01 V02 V03 V14 V15 V29}
{V01 V02 V03 V29}
BB14 use def in out
{V03 V29}
{V03}
{V01 V02 V03 V29}
{V01 V02 V03 V29}
BB15 use def in out
{V01}
{}
{V01}
{}
BB16 use def in out
{}
{}
{}
{}
Interval  0: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  0: (V00) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  1: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  1: (V01) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  2: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  2: (V02) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  3: int RefPositions {} physReg:NA Preferences=[allInt]
  Interval  3: (V03) int RefPositions {} physReg:NA Preferences=[allInt]
Interval  4: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  4: (V04) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  5: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  5: (V05) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  6: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  6: (V07) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  7: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  7: (V08) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  8: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  8: (V09) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval  9: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval  9: (V10) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 10: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 10: (V11) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 11: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 11: (V12) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 12: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 12: (V14) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 13: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 13: (V15) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 14: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 14: (V16) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 15: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 15: (V17) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 16: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 16: (V18) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 17: int RefPositions {} physReg:NA Preferences=[allInt]
  Interval 17: (V19) int RefPositions {} physReg:NA Preferences=[allInt]
Interval 18: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 18: (V20) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 19: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 19: (V21) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 20: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 20: (V23) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 21: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 21: (V24) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 22: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 22: (V25) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 23: ref RefPositions {} physReg:NA Preferences=[allInt]
  Interval 23: (V27) ref RefPositions {} physReg:NA Preferences=[allInt]
Interval 24: int RefPositions {} physReg:NA Preferences=[allInt]
  Interval 24: (V29) int RefPositions {} physReg:NA Preferences=[allInt]

FP callee save candidate vars: None

floatVarCount = 0; hasLoops = 1, singleExit = 1
TUPLE STYLE DUMP BEFORE LSRA
LSRA Block Sequence: BB01(  1   ) 
BB02(  4   ) 
BB03(  2   ) 
BB04(  2   ) 
BB05(  2   ) 
BB07(  2   ) 
BB08(  2   ) 
BB09(  2   ) 
BB10(  2   ) 
BB11(  2   ) 
BB12(  2   ) 
BB13(  2   ) 
BB14(  4   ) 
BB15(  1   ) 
BB16(  0   ) 

BB01 [000..01D) -> BB15 (cond), preds={} succs={BB02,BB15}
=====
  N004. t316            =  CNS_INT(h) 0xD1FFAB1E "Started enumerating project paths."
  N005. t317            =  IND      ; t316
  N000. t494            =  PUTARG_REG; t317
  N006. t3              =  CNS_INT(h) 0xd1ffab1e method
  N000. t495            =  PUTARG_REG; t3
  N007. t1              =  CNS_INT   2
  N000. t496            =  PUTARG_REG; t1
  N008.                    CALL     ; t494,t495,t496
  N000.                    IL_OFFSET IL offset: 0xc
  N002. t8              =  CNS_INT(h) 0xd1ffab1e token
  N000. t497            =  PUTARG_REG; t8
  N003. t9              =  CALL help; t497
  N005.                    V07(t11); t9
  N003.                    V07(t12)
  N000. t498            =  PUTARG_REG; t12
  N004. t7              =  CNS_INT   100
  N000. t499            =  PUTARG_REG; t7
  N005.                    CALL     ; t498,t499
  N000.                    IL_OFFSET IL offset: 0x13
  N001.                    V07(t14*)
  N003.                    V01(t16); t14*
  N000.                    IL_OFFSET IL offset: 0x14
  N001.                    V00(t17*)
  N003.                    V02(t19); t17*
  N000.                    IL_OFFSET IL offset: 0x16
  N001. t20             =  CNS_INT   0
  N003.                    V03(t22); t20
  N000.                    IL_OFFSET IL offset: 0xaa
  N001.                    V02(t424)
  N000. t491            =  LEA(b+8) ; t424
  N002. t423            =  IND      ; t491
  N004.                    V29(t452); t423
  N005.                    V29(t453)
  N007.                    CNS_INT   0
  N008.                    LE       ; t453
  N009.                    JTRUE    

BB02 [01D..02E) -> BB07 (cond), preds={BB01,BB14} succs={BB03,BB07}
=====
  N000.                    IL_OFFSET IL offset: 0x1d
  N002.                    V02(t324)
  N003.                    V03(t325)
  N004. t328            =  CAST     ; t325
  N009. t333            =  LEA(b+(i*8)+16); t324,t328
  N010. t30             =  IND      ; t333
  N013.                    V04(t32); t30
  N000.                    IL_OFFSET IL offset: 0x21
  N001.                    V04(t196)
  N002.                    NULLCHECK; t196
  N004. t335            =  CNS_INT(h) 0xD1FFAB1E ".csproj"
  N005. t336            =  IND      ; t335
  N000. t500            =  PUTARG_REG; t336
  N006.                    V04(t33)
  N000. t501            =  PUTARG_REG; t33
  N007. t194            =  CNS_INT   0
  N000. t502            =  PUTARG_REG; t194
  N008. t195            =  CALL     ; t500,t501,t502
  N009.                    CNS_INT   0
  N010.                    EQ       ; t195
  N011.                    JTRUE    

BB03 [02E..037) -> BB05 (cond), preds={BB02} succs={BB04,BB05}
=====
  N000.                    IL_OFFSET IL offset: 0x2e
  N001.                    V01(t199)
  N003.                    LEA(b+20)
  N004.                    IND      
  N005.                    CNS_INT   1
  N006.                    ADD      
  N007.                    V01(t177)
  N009. t341            =  LEA(b+20); t177
  N000.                    STOREIND ; t341
  N000.                    IL_OFFSET IL offset: 0x2e
  N001.                    V01(t205)
  N003. t345            =  LEA(b+8) ; t205
  N004. t206            =  IND      ; t345
  N006.                    V18(t208); t206
  N000.                    IL_OFFSET IL offset: 0x2e
  N001.                    V01(t209)
  N003. t347            =  LEA(b+16); t209
  N004. t210            =  IND      ; t347
  N006.                    V19(t212); t210
  N000.                    IL_OFFSET IL offset: 0x2e
  N001.                    V18(t214)
  N000. t493            =  LEA(b+8) ; t214
  N002. t215            =  IND      ; t493
  N003.                    V19(t213)
  N004.                    LE       ; t215,t213
  N005.                    JTRUE    

BB04 [02E..02F) -> BB14 (always), preds={BB03} succs={BB14}
=====
  N000.                    IL_OFFSET IL offset: 0x2e
  N001.                    V19(t221)
  N002.                    CNS_INT   1
  N003. t223            =  ADD      ; t221
  N004.                    V01(t220)
  N006. t349            =  LEA(b+16); t220
  N000.                    STOREIND ; t349,t223
  N000.                    IL_OFFSET IL offset: 0x2e
  N004.                    V18(t226*)
  N000. t503            =  PUTARG_REG; t226*
  N005.                    V19(t227*)
  N000. t504            =  PUTARG_REG; t227*
  N006.                    V04(t228*)
  N000. t505            =  PUTARG_REG; t228*
  N007.                    CALL help; t503,t504,t505

BB05 [02E..02F) -> BB14 (always), preds={BB03} succs={BB14}
=====
  N000.                    IL_OFFSET IL offset: 0x2e
  N003.                    V01(t218)
  N000. t506            =  PUTARG_REG; t218
  N004.                    V04(t178*)
  N000. t507            =  PUTARG_REG; t178*
  N005.                    CALL     ; t506,t507

BB07 [037..04B) -> BB10 (cond), preds={BB02} succs={BB08,BB10}
=====
  N000.                    IL_OFFSET IL offset: 0x37
  N002. t235            =  CNS_INT   1
  N000. t508            =  PUTARG_REG; t235
  N003. t236            =  CALL     ; t508
  N005.                    V20(t247); t236
  N005. t356            =  CNS_INT(h) 0xD1FFAB1E "*"
  N006. t357            =  IND      ; t356
  N000. t509            =  PUTARG_REG; t357
  N007.                    V04(t40)
  N000. t510            =  PUTARG_REG; t40
  N008.                    V20(t244*)
  N000. t511            =  PUTARG_REG; t244*
  N009. t243            =  CNS_INT   2
  N000. t512            =  PUTARG_REG; t243
  N010. t245            =  CALL     ; t509,t510,t511,t512
  N012.                    V09(t54); t245
  N003. t47             =  CNS_INT   0x7ffc7e4c17e0
  N000. t513            =  PUTARG_REG; t47
  N004. t48             =  CNS_INT   35
  N000. t514            =  PUTARG_REG; t48
  N005.                    CALL help; t513,t514
  N010. t364            =  CNS_INT(h) 0xd1ffab1e static Fseq[<>9__2_0]
  N011. t45             =  IND      ; t364
  N014.                    V08(t52); t45
  N001.                    V09(t55*)
  N003.                    V10(t62); t55*
  N001.                    V08(t56*)
  N003.                    V11(t65); t56*
  N001.                    V11(t57)
  N002.                    CNS_INT   null
  N003.                    NE       ; t57
  N004.                    JTRUE    

BB08 [000..062) -> BB16 (cond), preds={BB07} succs={BB09,BB16}
=====
  N002. t157            =  CNS_INT(h) 0xd1ffab1e token
  N000. t515            =  PUTARG_REG; t157
  N003. t158            =  CALL help; t515
  N005.                    V17(t160); t158
  N002. t368            =  CNS_INT(h) 0xd1ffab1e static Fseq[<>9]
  N003. t150            =  IND      ; t368
  N006.                    V21(t262); t150
  N001.                    V21(t249)
  N002.                    CNS_INT   null
  N003.                    EQ       ; t249
  N004.                    JTRUE    

BB09 [000..000), preds={BB08} succs={BB10}
=====
  N001.                    V17(t161)
  N003. t370            =  LEA(b+8) ; t161
  N005.                    V21(t253*)
  N000.                    STOREIND ; t370,t253*
  N001.                    V17(t256)
  N003. t372            =  LEA(b+24); t256
  N005. t156            =  CNS_INT(h) 0xd1ffab1e ftn
  N000.                    STOREIND ; t372,t156
  N000.                    IL_OFFSET IL offset: 0x5c
  N002. t375            =  CNS_INT(h) 0xd1ffab1e static Fseq[<>9__2_0]
  N004.                    V17(t164)
  N000.                    STOREIND ; t375,t164
  N001.                    V17(t163*)
  N003.                    V11(t175); t163*

BB10 [062..085) -> BB13 (cond), preds={BB07,BB09} succs={BB11,BB13}
=====
  N004.                    V11(t70*)
  N000. t516            =  PUTARG_REG; t70*
  N005.                    V10(t69*)
  N000. t517            =  PUTARG_REG; t69*
  N006. t72             =  CNS_INT(h) 0xd1ffab1e method
  N000. t518            =  PUTARG_REG; t72
  N007. t71             =  CALL     ; t516,t517,t518
  N009.                    V05(t75); t71
  N000.                    IL_OFFSET IL offset: 0x69
  N003. t273            =  CNS_INT   0x7ffc7e783cd8
  N000. t519            =  PUTARG_REG; t273
  N004. t274            =  CNS_INT   40
  N000. t520            =  PUTARG_REG; t274
  N005.                    CALL help; t519,t520
  N006. t381            =  CNS_INT(h) 0xd1ffab1e static Fseq[<Compatible>k__BackingField]
  N007. t271            =  IND      ; t381
  N010.                    V23(t283); t271
  N005. t382            =  CNS_INT(h) 0xD1FFAB1E "*.csproj"
  N006. t383            =  IND      ; t382
  N000. t521            =  PUTARG_REG; t383
  N007.                    V04(t77*)
  N000. t522            =  PUTARG_REG; t77*
  N008.                    V23(t280*)
  N000. t523            =  PUTARG_REG; t280*
  N009. t279            =  CNS_INT   1
  N000. t524            =  PUTARG_REG; t279
  N010. t281            =  CALL     ; t521,t522,t523,t524
  N012.                    V24(t290); t281
  N004.                    V01(t285)
  N006. t389            =  LEA(b+16); t285
  N007. t286            =  IND      ; t389
  N000. t525            =  PUTARG_REG; t286
  N008.                    V01(t76)
  N000. t526            =  PUTARG_REG; t76
  N009.                    V24(t287*)
  N000. t527            =  PUTARG_REG; t287*
  N010.                    CALL     ; t525,t526,t527
  N000.                    IL_OFFSET IL offset: 0x7a
  N002. t395            =  CNS_INT(h) 0xd1ffab1e static Fseq[<>9__2_1]
  N003. t84             =  IND      ; t395
  N006.                    V12(t91); t84
  N001.                    V05(t83*)
  N003.                    V14(t101); t83*
  N001.                    V12(t92*)
  N003.                    V15(t104); t92*
  N001.                    V15(t93)
  N002.                    CNS_INT   null
  N003.                    NE       ; t93
  N004.                    JTRUE    

BB11 [000..09C) -> BB16 (cond), preds={BB10} succs={BB12,BB16}
=====
  N002. t128            =  CNS_INT(h) 0xd1ffab1e token
  N000. t528            =  PUTARG_REG; t128
  N003. t129            =  CALL help; t528
  N005.                    V16(t131); t129
  N002. t399            =  CNS_INT(h) 0xd1ffab1e static Fseq[<>9]
  N003. t121            =  IND      ; t399
  N006.                    V25(t305); t121
  N001.                    V25(t292)
  N002.                    CNS_INT   null
  N003.                    EQ       ; t292
  N004.                    JTRUE    

BB12 [000..000), preds={BB11} succs={BB13}
=====
  N001.                    V16(t132)
  N003. t401            =  LEA(b+8) ; t132
  N005.                    V25(t296*)
  N000.                    STOREIND ; t401,t296*
  N001.                    V16(t299)
  N003. t403            =  LEA(b+24); t299
  N005. t127            =  CNS_INT(h) 0xd1ffab1e ftn
  N000.                    STOREIND ; t403,t127
  N000.                    IL_OFFSET IL offset: 0x96
  N002. t406            =  CNS_INT(h) 0xd1ffab1e static Fseq[<>9__2_1]
  N004.                    V16(t135)
  N000.                    STOREIND ; t406,t135
  N001.                    V16(t134*)
  N003.                    V15(t148); t134*

BB13 [09C..0A6), preds={BB10,BB12} succs={BB14}
=====
  N004.                    V15(t111*)
  N000. t529            =  PUTARG_REG; t111*
  N005.                    V14(t110*)
  N000. t530            =  PUTARG_REG; t110*
  N006. t113            =  CNS_INT(h) 0xd1ffab1e method
  N000. t531            =  PUTARG_REG; t113
  N007. t112            =  CALL     ; t529,t530,t531
  N009.                    V27(t313); t112
  N004.                    V01(t308)
  N006. t411            =  LEA(b+16); t308
  N007. t309            =  IND      ; t411
  N000. t532            =  PUTARG_REG; t309
  N008.                    V01(t109)
  N000. t533            =  PUTARG_REG; t109
  N009.                    V27(t310*)
  N000. t534            =  PUTARG_REG; t310*
  N010.                    CALL     ; t532,t533,t534

BB14 [0A6..0B3) -> BB02 (cond), preds={BB04,BB05,BB13} succs={BB15,BB02}
=====
  N000.                    IL_OFFSET IL offset: 0xa6
  N001.                    V03(t116*)
  N002.                    CNS_INT   1
  N003. t118            =  ADD      ; t116*
  N005.                    V03(t120); t118
  N000.                    IL_OFFSET IL offset: 0xaa
  N001.                    V29(t456)
  N002.                    V03(t23)
  N003.                    GT       ; t456,t23
  N004.                    JTRUE    

BB15 [0B3..0C7) (return), preds={BB01,BB14} succs={}
=====
  N000.                    IL_OFFSET IL offset: 0xb3
  N003.                    V01(t180)
  N000. t535            =  PUTARG_REG; t180
  N004. t182            =  CNS_INT(h) 0xd1ffab1e method
  N000. t536            =  PUTARG_REG; t182
  N005.                    CALL     ; t535,t536
  N004. t417            =  CNS_INT(h) 0xD1FFAB1E "Enumerated and shuffled the project paths."
  N005. t418            =  IND      ; t417
  N000. t537            =  PUTARG_REG; t418
  N006. t186            =  CNS_INT(h) 0xd1ffab1e method
  N000. t538            =  PUTARG_REG; t186
  N007. t184            =  CNS_INT   2
  N000. t539            =  PUTARG_REG; t184
  N008.                    CALL     ; t537,t538,t539
  N000.                    IL_OFFSET IL offset: 0xc5
  N001.                    V01(t190*)
  N002.                    RETURN   ; t190*

BB16 [000..000) (throw), preds={BB08,BB11} succs={}
=====
  N001.                    CALL     




buildIntervals second part ========
Int arg V00 in reg rcx
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00>  BB00 regmask=[rcx] minReg=1 fixed>

NEW BLOCK BB01
<RefPosition #1   @1   RefTypeBB  BB01 regmask=[] minReg=1>

DefList: {  }
N003 (  2, 10) [000316] H-----------              *  CNS_INT(h) long   0xD1FFAB1E "Started enumerating project paths." REG NA $180
Interval 25: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #2   @4   RefTypeDef <Ivl:25> CNS_INT BB01 regmask=[allInt] minReg=1>

DefList: { N003.t316. CNS_INT }
N005 (  4, 12) [000317] #---G-------              *  IND       ref    REG NA $1c0
<RefPosition #3   @5   RefTypeUse <Ivl:25>  BB01 regmask=[allInt] minReg=1 last>
Interval 26: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #4   @6   RefTypeDef <Ivl:26> IND BB01 regmask=[allInt] minReg=1>

DefList: { N005.t317. IND }
N007 (???,???) [000494] ----G-------              *  PUTARG_REG ref    REG rdx
<RefPosition #5   @7   RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #6   @7   RefTypeUse <Ivl:26>  BB01 regmask=[rdx] minReg=1 last fixed>
Interval 27: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #7   @8   RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #8   @8   RefTypeDef <Ivl:27> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>

DefList: { N007.t494. PUTARG_REG }
N009 (  2, 10) [000003] H-----------              *  CNS_INT(h) long   0xd1ffab1e method REG NA $181
Interval 28: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #9   @10  RefTypeDef <Ivl:28> CNS_INT BB01 regmask=[allInt] minReg=1>

DefList: { N007.t494. PUTARG_REG; N009.t3. CNS_INT }
N011 (???,???) [000495] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #10  @11  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #11  @11  RefTypeUse <Ivl:28>  BB01 regmask=[rcx] minReg=1 last fixed>
Interval 29: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #12  @12  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #13  @12  RefTypeDef <Ivl:29> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>

DefList: { N007.t494. PUTARG_REG; N011.t495. PUTARG_REG }
N013 (  1,  1) [000001] ------------              *  CNS_INT   int    2 REG NA $42
Interval 30: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #14  @14  RefTypeDef <Ivl:30> CNS_INT BB01 regmask=[allInt] minReg=1>

DefList: { N007.t494. PUTARG_REG; N011.t495. PUTARG_REG; N013.t1. CNS_INT }
N015 (???,???) [000496] ------------              *  PUTARG_REG int    REG r8
<RefPosition #15  @15  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #16  @15  RefTypeUse <Ivl:30>  BB01 regmask=[r8] minReg=1 last fixed>
Interval 31: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #17  @16  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #18  @16  RefTypeDef <Ivl:31> PUTARG_REG BB01 regmask=[r8] minReg=1 fixed>

DefList: { N007.t494. PUTARG_REG; N011.t495. PUTARG_REG; N015.t496. PUTARG_REG }
N017 ( 21, 31) [000002] --CXG-------              *  CALL      ref    SolutionAnalyzer.Logger.Log REG NA $101
<RefPosition #19  @17  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #20  @17  RefTypeUse <Ivl:27>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #21  @17  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #22  @17  RefTypeUse <Ivl:29>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #23  @17  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #24  @17  RefTypeUse <Ivl:31>  BB01 regmask=[r8] minReg=1 last fixed>
<RefPosition #25  @18  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #26  @18  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #27  @18  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #28  @18  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #29  @18  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #30  @18  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #31  @18  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
Interval 32: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #32  @18  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #33  @18  RefTypeDef <Ivl:32> CALL BB01 regmask=[rax] minReg=1 fixed>

DefList: {  }
N019 (???,???) [000459] ------------              *  IL_OFFSET void   IL offset: 0xc REG NA

DefList: {  }
N021 (  2, 10) [000008] H-----------              *  CNS_INT(h) long   0xd1ffab1e token REG NA $182
Interval 33: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #34  @22  RefTypeDef <Ivl:33> CNS_INT BB01 regmask=[allInt] minReg=1>

DefList: { N021.t8. CNS_INT }
N023 (???,???) [000497] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #35  @23  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #36  @23  RefTypeUse <Ivl:33>  BB01 regmask=[rcx] minReg=1 last fixed>
Interval 34: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #37  @24  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #38  @24  RefTypeDef <Ivl:34> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>

DefList: { N023.t497. PUTARG_REG }
N025 ( 16, 16) [000009] --C---------              *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG NA $1c1
<RefPosition #39  @25  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #40  @25  RefTypeUse <Ivl:34>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #41  @26  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #42  @26  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #43  @26  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #44  @26  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #45  @26  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #46  @26  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #47  @26  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>
Interval 35: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #48  @26  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #49  @26  RefTypeDef <Ivl:35> CALL BB01 regmask=[rax] minReg=1 fixed>

DefList: { N025.t9. CALL }
N027 ( 16, 16) [000011] DA----------              *  STORE_LCL_VAR ref    V07 tmp1         d:2 NA REG NA
<RefPosition #50  @27  RefTypeUse <Ivl:35>  BB01 regmask=[allInt] minReg=1 last>
Assigning related <V07/L6> to <I35>
<RefPosition #51  @28  RefTypeDef <Ivl:6 V07> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N029 (  1,  1) [000012] ------------              *  LCL_VAR   ref    V07 tmp1         u:2 NA REG NA $1c1

DefList: {  }
N031 (???,???) [000498] ------------              *  PUTARG_REG ref    REG rcx
<RefPosition #52  @31  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #53  @31  RefTypeUse <Ivl:6 V07> LCL_VAR BB01 regmask=[rcx] minReg=1 last fixed>
Setting putarg_reg as a pass-through of a non-last use lclVar
Interval 36: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #54  @32  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #55  @32  RefTypeDef <Ivl:36> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
Assigning related <V07/L6> to <I36>

DefList: { N031.t498. PUTARG_REG }
N033 (  1,  1) [000007] ------------              *  CNS_INT   int    100 REG NA $43
Interval 37: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #56  @34  RefTypeDef <Ivl:37> CNS_INT BB01 regmask=[allInt] minReg=1>

DefList: { N031.t498. PUTARG_REG; N033.t7. CNS_INT }
N035 (???,???) [000499] ------------              *  PUTARG_REG int    REG rdx
<RefPosition #57  @35  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #58  @35  RefTypeUse <Ivl:37>  BB01 regmask=[rdx] minReg=1 last fixed>
Interval 38: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #59  @36  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #60  @36  RefTypeDef <Ivl:38> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>

DefList: { N031.t498. PUTARG_REG; N035.t499. PUTARG_REG }
N037 ( 16, 10) [000013] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor REG NA $VN.Void
<RefPosition #61  @37  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #62  @37  RefTypeUse <Ivl:36>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #63  @37  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #64  @37  RefTypeUse <Ivl:38>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #65  @38  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #66  @38  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #67  @38  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #68  @38  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #69  @38  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1>
<RefPosition #70  @38  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1>
<RefPosition #71  @38  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1>

DefList: {  }
N039 (???,???) [000460] ------------              *  IL_OFFSET void   IL offset: 0x13 REG NA

DefList: {  }
N041 (  1,  1) [000014] ------------              *  LCL_VAR   ref    V07 tmp1         u:2 NA (last use) REG NA $1c1

DefList: {  }
N043 (  1,  3) [000016] DA----------              *  STORE_LCL_VAR ref    V01 loc0         d:2 NA REG NA
<RefPosition #72  @43  RefTypeUse <Ivl:6 V07> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
Assigning related <V01/L1> to <V07/L6>
<RefPosition #73  @44  RefTypeDef <Ivl:1 V01> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N045 (???,???) [000461] ------------              *  IL_OFFSET void   IL offset: 0x14 REG NA

DefList: {  }
N047 (  1,  1) [000017] ------------              *  LCL_VAR   ref    V00 arg0         u:1 NA (last use) REG NA $80

DefList: {  }
N049 (  1,  3) [000019] DA----------              *  STORE_LCL_VAR ref    V02 loc1         d:2 NA REG NA
<RefPosition #74  @49  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
Assigning related <V02/L2> to <V00/L0>
<RefPosition #75  @50  RefTypeDef <Ivl:2 V02> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N051 (???,???) [000462] ------------              *  IL_OFFSET void   IL offset: 0x16 REG NA

DefList: {  }
N053 (  1,  1) [000020] ------------              *  CNS_INT   int    0 REG NA $40
Interval 39: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #76  @54  RefTypeDef <Ivl:39> CNS_INT BB01 regmask=[allInt] minReg=1>

DefList: { N053.t20. CNS_INT }
N055 (  1,  3) [000022] DA----------              *  STORE_LCL_VAR int    V03 loc2         d:2 NA REG NA
<RefPosition #77  @55  RefTypeUse <Ivl:39>  BB01 regmask=[allInt] minReg=1 last>
Assigning related <V03/L3> to <I39>
<RefPosition #78  @56  RefTypeDef <Ivl:3 V03> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N057 (???,???) [000463] ------------              *  IL_OFFSET void   IL offset: 0xaa REG NA

DefList: {  }
N059 (  1,  1) [000424] ------------              *  LCL_VAR   ref    V02 loc1         u:2 NA REG NA $80

DefList: {  }
N061 (???,???) [000491] -c----------              *  LEA(b+8)  ref    REG NA
Contained
DefList: {  }
N063 (  3,  3) [000423] ---X--------              *  IND       int    REG NA $240
<RefPosition #79  @63  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
Interval 40: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #80  @64  RefTypeDef <Ivl:40> IND BB01 regmask=[allInt] minReg=1>

DefList: { N063.t423. IND }
N065 (  3,  3) [000452] DA-X--------              *  STORE_LCL_VAR int    V29 cse1         d:1 NA REG NA
<RefPosition #81  @65  RefTypeUse <Ivl:40>  BB01 regmask=[allInt] minReg=1 last>
Assigning related <V29/L24> to <I40>
<RefPosition #82  @66  RefTypeDef <Ivl:24 V29> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N067 (  1,  1) [000453] ------------              *  LCL_VAR   int    V29 cse1         u:1 NA REG NA $240

DefList: {  }
N069 (  1,  1) [000457] -c----------              *  CNS_INT   int    0 REG NA $40
Contained
DefList: {  }
N071 (  6,  6) [000422] J--X---N----              *  LE        void   REG NA $242
<RefPosition #83  @71  RefTypeUse <Ivl:24 V29> LCL_VAR BB01 regmask=[allInt] minReg=1 last>

DefList: {  }
N073 (  8,  8) [000426] ---X--------              *  JTRUE     void   REG NA



CHECKING LAST USES for BB01, liveout={V01 V02 V03 V29}
==============================
use: {V00}
def: {V01 V02 V03 V07 V29}

NEW BLOCK BB02


Setting BB01 as the predecessor for determining incoming variable registers of BB02
<RefPosition #84  @75  RefTypeBB  BB02 regmask=[] minReg=1>

DefList: {  }
N077 (???,???) [000464] ------------              *  IL_OFFSET void   IL offset: 0x1d REG NA

DefList: {  }
N079 (  1,  1) [000324] ------------              *  LCL_VAR   ref    V02 loc1         u:2 NA REG NA $80

DefList: {  }
N081 (  1,  1) [000325] ------------              *  LCL_VAR   int    V03 loc2         u:3 NA REG NA $280

DefList: {  }
N083 (  2,  3) [000328] ------------              *  CAST      long <- int REG NA $300
<RefPosition #85  @83  RefTypeUse <Ivl:3 V03> LCL_VAR BB02 regmask=[allInt] minReg=1 last>
Interval 41: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #86  @84  RefTypeDef <Ivl:41> CAST BB02 regmask=[allInt] minReg=1>

DefList: { N083.t328. CAST }
N085 (  5,  6) [000333] -c----------              *  LEA(b+(i*8)+16) byref  REG NA
Contained
DefList: { N083.t328. CAST }
N087 (  6,  7) [000030] a---G-------              *  IND       ref    REG NA <l:$1ca, c:$2c1>
<RefPosition #87  @87  RefTypeUse <Ivl:2 V02> LCL_VAR BB02 regmask=[allInt] minReg=1 last>
<RefPosition #88  @87  RefTypeUse <Ivl:41>  BB02 regmask=[allInt] minReg=1 last>
Interval 42: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #89  @88  RefTypeDef <Ivl:42> IND BB02 regmask=[allInt] minReg=1>

DefList: { N087.t30. IND }
N089 (  6,  7) [000032] DA--G-------              *  STORE_LCL_VAR ref    V04 loc3         d:2 NA REG NA
<RefPosition #90  @89  RefTypeUse <Ivl:42>  BB02 regmask=[allInt] minReg=1 last>
Assigning related <V04/L4> to <I42>
<RefPosition #91  @90  RefTypeDef <Ivl:4 V04> STORE_LCL_VAR BB02 regmask=[allInt] minReg=1 last>

DefList: {  }
N091 (???,???) [000465] ------------              *  IL_OFFSET void   IL offset: 0x21 REG NA

DefList: {  }
N093 (  1,  1) [000196] ------------              *  LCL_VAR   ref    V04 loc3         u:2 NA REG NA <l:$1ca, c:$2c1>

DefList: {  }
N095 (  2,  2) [000197] ---X--------              *  NULLCHECK int    REG NA <l:$1d0, c:$1cf>
<RefPosition #92  @95  RefTypeUse <Ivl:4 V04> LCL_VAR BB02 regmask=[allInt] minReg=1 last>

DefList: {  }
N097 (  2, 10) [000335] H-----------              *  CNS_INT(h) long   0xD1FFAB1E ".csproj" REG NA $184
Interval 43: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #93  @98  RefTypeDef <Ivl:43> CNS_INT BB02 regmask=[allInt] minReg=1>

DefList: { N097.t335. CNS_INT }
N099 (  4, 12) [000336] #---G-------              *  IND       ref    REG NA $1d1
<RefPosition #94  @99  RefTypeUse <Ivl:43>  BB02 regmask=[allInt] minReg=1 last>
Interval 44: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #95  @100 RefTypeDef <Ivl:44> IND BB02 regmask=[allInt] minReg=1>

DefList: { N099.t336. IND }
N101 (???,???) [000500] ----G-------              *  PUTARG_REG ref    REG rdx
<RefPosition #96  @101 RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #97  @101 RefTypeUse <Ivl:44>  BB02 regmask=[rdx] minReg=1 last fixed>
Interval 45: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #98  @102 RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #99  @102 RefTypeDef <Ivl:45> PUTARG_REG BB02 regmask=[rdx] minReg=1 fixed>

DefList: { N101.t500. PUTARG_REG }
N103 (  1,  1) [000033] ------------              *  LCL_VAR   ref    V04 loc3         u:2 NA REG NA <l:$1ca, c:$2c1>

DefList: { N101.t500. PUTARG_REG }
N105 (???,???) [000501] ------------              *  PUTARG_REG ref    REG rcx
<RefPosition #100 @105 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #101 @105 RefTypeUse <Ivl:4 V04> LCL_VAR BB02 regmask=[rcx] minReg=1 last fixed>
Setting putarg_reg as a pass-through of a non-last use lclVar
Interval 46: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #102 @106 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #103 @106 RefTypeDef <Ivl:46> PUTARG_REG BB02 regmask=[rcx] minReg=1 fixed>
Assigning related <V04/L4> to <I46>

DefList: { N101.t500. PUTARG_REG; N105.t501. PUTARG_REG }
N107 (  1,  1) [000194] ------------              *  CNS_INT   int    0 REG NA $40
Interval 47: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #104 @108 RefTypeDef <Ivl:47> CNS_INT BB02 regmask=[allInt] minReg=1>

DefList: { N101.t500. PUTARG_REG; N105.t501. PUTARG_REG; N107.t194. CNS_INT }
N109 (???,???) [000502] ------------              *  PUTARG_REG int    REG r8
<RefPosition #105 @109 RefTypeFixedReg <Reg:r8 >  BB02 regmask=[r8] minReg=1>
<RefPosition #106 @109 RefTypeUse <Ivl:47>  BB02 regmask=[r8] minReg=1 last fixed>
Interval 48: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #107 @110 RefTypeFixedReg <Reg:r8 >  BB02 regmask=[r8] minReg=1>
<RefPosition #108 @110 RefTypeDef <Ivl:48> PUTARG_REG BB02 regmask=[r8] minReg=1 fixed>

DefList: { N101.t500. PUTARG_REG; N105.t501. PUTARG_REG; N109.t502. PUTARG_REG }
N111 ( 20, 23) [000195] --CXG-------              *  CALL      int    System.String.EndsWith REG NA $401
<RefPosition #109 @111 RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #110 @111 RefTypeUse <Ivl:45>  BB02 regmask=[rdx] minReg=1 last fixed>
<RefPosition #111 @111 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #112 @111 RefTypeUse <Ivl:46>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #113 @111 RefTypeFixedReg <Reg:r8 >  BB02 regmask=[r8] minReg=1>
<RefPosition #114 @111 RefTypeUse <Ivl:48>  BB02 regmask=[r8] minReg=1 last fixed>
<RefPosition #115 @112 RefTypeKill <Reg:rax>  BB02 regmask=[rax] minReg=1>
<RefPosition #116 @112 RefTypeKill <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #117 @112 RefTypeKill <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #118 @112 RefTypeKill <Reg:r8 >  BB02 regmask=[r8] minReg=1>
<RefPosition #119 @112 RefTypeKill <Reg:r9 >  BB02 regmask=[r9] minReg=1>
<RefPosition #120 @112 RefTypeKill <Reg:r10>  BB02 regmask=[r10] minReg=1>
<RefPosition #121 @112 RefTypeKill <Reg:r11>  BB02 regmask=[r11] minReg=1>
Interval 49: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #122 @112 RefTypeFixedReg <Reg:rax>  BB02 regmask=[rax] minReg=1>
<RefPosition #123 @112 RefTypeDef <Ivl:49> CALL BB02 regmask=[rax] minReg=1 fixed>

DefList: { N111.t195. CALL }
N113 (  1,  1) [000037] -c----------              *  CNS_INT   int    0 REG NA $40
Contained
DefList: { N111.t195. CALL }
N115 ( 22, 25) [000038] J--XG--N----              *  EQ        void   REG NA $244
<RefPosition #124 @115 RefTypeUse <Ivl:49>  BB02 regmask=[allInt] minReg=1 last>

DefList: {  }
N117 ( 24, 27) [000039] ---XG-------              *  JTRUE     void   REG NA



CHECKING LAST USES for BB02, liveout={V01 V02 V03 V04 V29}
==============================
use: {V02 V03}
def: {V04}

NEW BLOCK BB03


Setting BB02 as the predecessor for determining incoming variable registers of BB03
<RefPosition #125 @119 RefTypeBB  BB03 regmask=[] minReg=1>

DefList: {  }
N121 (???,???) [000466] ------------              *  IL_OFFSET void   IL offset: 0x2e REG NA

DefList: {  }
N123 (  1,  1) [000199] -c----------              *  LCL_VAR   ref    V01 loc0         u:2 NA REG NA $1c1
Contained
DefList: {  }
N125 (  2,  2) [000343] -c----------              *  LEA(b+20) byref  REG NA
Contained
DefList: {  }
N127 (  4,  4) [000200] nc--GO------              *  IND       int    REG NA <l:$258, c:$257>
Contained
DefList: {  }
N129 (  1,  1) [000201] -c----------              *  CNS_INT   int    1 REG NA $46
Contained
DefList: {  }
N131 (  6,  6) [000202] -c--GO------              *  ADD       int    REG NA <l:$25c, c:$25b>
Contained
DefList: {  }
N133 (  1,  1) [000177] ------------              *  LCL_VAR   ref    V01 loc0         u:2 NA REG NA $1c1

DefList: {  }
N135 (  2,  2) [000341] -c----------              *  LEA(b+20) byref  REG NA
Contained
DefList: {  }
N137 (???,???) [000467] -A--GO------              *  STOREIND  int    REG NA
<RefPosition #126 @137 RefTypeUse <Ivl:1 V01> LCL_VAR BB03 regmask=[allInt] minReg=1 last>

DefList: {  }
N139 (???,???) [000468] ------------              *  IL_OFFSET void   IL offset: 0x2e REG NA

DefList: {  }
N141 (  1,  1) [000205] ------------              *  LCL_VAR   ref    V01 loc0         u:2 NA REG NA $1c1

DefList: {  }
N143 (  2,  2) [000345] -c----------              *  LEA(b+8)  byref  REG NA
Contained
DefList: {  }
N145 (  4,  4) [000206] n---GO------              *  IND       ref    REG NA <l:$1f0, c:$1ef>
<RefPosition #127 @145 RefTypeUse <Ivl:1 V01> LCL_VAR BB03 regmask=[allInt] minReg=1 last>
Interval 50: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #128 @146 RefTypeDef <Ivl:50> IND BB03 regmask=[allInt] minReg=1>

DefList: { N145.t206. IND }
N147 (  4,  4) [000208] DA--GO------              *  STORE_LCL_VAR ref    V18 tmp12        d:2 NA REG NA
<RefPosition #129 @147 RefTypeUse <Ivl:50>  BB03 regmask=[allInt] minReg=1 last>
Assigning related <V18/L16> to <I50>
<RefPosition #130 @148 RefTypeDef <Ivl:16 V18> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1 last>

DefList: {  }
N149 (???,???) [000469] ------------              *  IL_OFFSET void   IL offset: 0x2e REG NA

DefList: {  }
N151 (  1,  1) [000209] ------------              *  LCL_VAR   ref    V01 loc0         u:2 NA REG NA $1c1

DefList: {  }
N153 (  2,  2) [000347] -c----------              *  LEA(b+16) byref  REG NA
Contained
DefList: {  }
N155 (  4,  4) [000210] n---GO------              *  IND       int    REG NA <l:$260, c:$25f>
<RefPosition #131 @155 RefTypeUse <Ivl:1 V01> LCL_VAR BB03 regmask=[allInt] minReg=1 last>
Interval 51: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #132 @156 RefTypeDef <Ivl:51> IND BB03 regmask=[allInt] minReg=1>

DefList: { N155.t210. IND }
N157 (  4,  4) [000212] DA--GO------              *  STORE_LCL_VAR int    V19 tmp13        d:2 NA REG NA
<RefPosition #133 @157 RefTypeUse <Ivl:51>  BB03 regmask=[allInt] minReg=1 last>
Assigning related <V19/L17> to <I51>
<RefPosition #134 @158 RefTypeDef <Ivl:17 V19> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1 last>

DefList: {  }
N159 (???,???) [000470] ------------              *  IL_OFFSET void   IL offset: 0x2e REG NA

DefList: {  }
N161 (  1,  1) [000214] ------------              *  LCL_VAR   ref    V18 tmp12        u:2 NA REG NA <l:$1ee, c:$2fc>

DefList: {  }
N163 (???,???) [000493] -c----------              *  LEA(b+8)  ref    REG NA
Contained
DefList: {  }
N165 (  3,  3) [000215] -c-X--------              *  IND       int    REG NA <l:$262, c:$261>
Contained
DefList: {  }
N167 (  1,  1) [000213] ------------              *  LCL_VAR   int    V19 tmp13        u:2 NA REG NA <l:$25e, c:$411>

DefList: {  }
N169 (  5,  5) [000216] N--X---N-U--              *  LE        void   REG NA <l:$266, c:$265>
<RefPosition #135 @169 RefTypeUse <Ivl:16 V18> LCL_VAR BB03 regmask=[allInt] minReg=1 last>
<RefPosition #136 @169 RefTypeUse <Ivl:17 V19> LCL_VAR BB03 regmask=[allInt] minReg=1 last>

DefList: {  }
N171 (  7,  7) [000217] ---X--------              *  JTRUE     void   REG NA



CHECKING LAST USES for BB03, liveout={V01 V02 V03 V04 V18 V19 V29}
==============================
use: {V01}
def: {V18 V19}

NEW BLOCK BB04


Setting BB03 as the predecessor for determining incoming variable registers of BB04
<RefPosition #137 @173 RefTypeBB  BB04 regmask=[] minReg=1>

DefList: {  }
N175 (???,???) [000471] ------------              *  IL_OFFSET void   IL offset: 0x2e REG NA

DefList: {  }
N177 (  1,  1) [000221] ------------              *  LCL_VAR   int    V19 tmp13        u:2 NA REG NA <l:$25e, c:$411>

DefList: {  }
N179 (  1,  1) [000222] -c----------              *  CNS_INT   int    1 REG NA $46
Contained
DefList: {  }
N181 (  3,  3) [000223] ------------              *  ADD       int    REG NA <l:$268, c:$267>
<RefPosition #138 @181 RefTypeUse <Ivl:17 V19> LCL_VAR BB04 regmask=[allInt] minReg=1 last>
Interval 52: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #139 @182 RefTypeDef <Ivl:52> ADD BB04 regmask=[allInt] minReg=1>

DefList: { N181.t223. ADD }
N183 (  1,  1) [000220] ------------              *  LCL_VAR   ref    V01 loc0         u:2 NA REG NA $1c1

DefList: { N181.t223. ADD }
N185 (  2,  2) [000349] -c----------              *  LEA(b+16) byref  REG NA
Contained
DefList: { N181.t223. ADD }
N187 (???,???) [000472] -A--GO------              *  STOREIND  int    REG NA
<RefPosition #140 @187 RefTypeUse <Ivl:1 V01> LCL_VAR BB04 regmask=[allInt] minReg=1 last>
<RefPosition #141 @187 RefTypeUse <Ivl:52>  BB04 regmask=[allInt] minReg=1 last>

DefList: {  }
N189 (???,???) [000473] ------------              *  IL_OFFSET void   IL offset: 0x2e REG NA

DefList: {  }
N191 (  1,  1) [000226] ------------              *  LCL_VAR   ref    V18 tmp12        u:2 NA (last use) REG NA <l:$1ee, c:$2fc>

DefList: {  }
N193 (???,???) [000503] ------------              *  PUTARG_REG ref    REG rcx
<RefPosition #142 @193 RefTypeFixedReg <Reg:rcx>  BB04 regmask=[rcx] minReg=1>
<RefPosition #143 @193 RefTypeUse <Ivl:16 V18> LCL_VAR BB04 regmask=[rcx] minReg=1 last fixed>
Interval 53: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #144 @194 RefTypeFixedReg <Reg:rcx>  BB04 regmask=[rcx] minReg=1>
<RefPosition #145 @194 RefTypeDef <Ivl:53> PUTARG_REG BB04 regmask=[rcx] minReg=1 fixed>

DefList: { N193.t503. PUTARG_REG }
N195 (  1,  1) [000227] ------------              *  LCL_VAR   int    V19 tmp13        u:2 NA (last use) REG NA <l:$25e, c:$411>

DefList: { N193.t503. PUTARG_REG }
N197 (???,???) [000504] ------------              *  PUTARG_REG int    REG rdx
<RefPosition #146 @197 RefTypeFixedReg <Reg:rdx>  BB04 regmask=[rdx] minReg=1>
<RefPosition #147 @197 RefTypeUse <Ivl:17 V19> LCL_VAR BB04 regmask=[rdx] minReg=1 last fixed>
Interval 54: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #148 @198 RefTypeFixedReg <Reg:rdx>  BB04 regmask=[rdx] minReg=1>
<RefPosition #149 @198 RefTypeDef <Ivl:54> PUTARG_REG BB04 regmask=[rdx] minReg=1 fixed>

DefList: { N193.t503. PUTARG_REG; N197.t504. PUTARG_REG }
N199 (  1,  1) [000228] ------------              *  LCL_VAR   ref    V04 loc3         u:2 NA (last use) REG NA <l:$1ca, c:$2c1>

DefList: { N193.t503. PUTARG_REG; N197.t504. PUTARG_REG }
N201 (???,???) [000505] ------------              *  PUTARG_REG ref    REG r8
<RefPosition #150 @201 RefTypeFixedReg <Reg:r8 >  BB04 regmask=[r8] minReg=1>
<RefPosition #151 @201 RefTypeUse <Ivl:4 V04> LCL_VAR BB04 regmask=[r8] minReg=1 last fixed>
Interval 55: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #152 @202 RefTypeFixedReg <Reg:r8 >  BB04 regmask=[r8] minReg=1>
<RefPosition #153 @202 RefTypeDef <Ivl:55> PUTARG_REG BB04 regmask=[r8] minReg=1 fixed>

DefList: { N193.t503. PUTARG_REG; N197.t504. PUTARG_REG; N201.t505. PUTARG_REG }
N203 ( 17, 11) [000229] --CXG-------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST REG NA $1db
<RefPosition #154 @203 RefTypeFixedReg <Reg:rcx>  BB04 regmask=[rcx] minReg=1>
<RefPosition #155 @203 RefTypeUse <Ivl:53>  BB04 regmask=[rcx] minReg=1 last fixed>
<RefPosition #156 @203 RefTypeFixedReg <Reg:rdx>  BB04 regmask=[rdx] minReg=1>
<RefPosition #157 @203 RefTypeUse <Ivl:54>  BB04 regmask=[rdx] minReg=1 last fixed>
<RefPosition #158 @203 RefTypeFixedReg <Reg:r8 >  BB04 regmask=[r8] minReg=1>
<RefPosition #159 @203 RefTypeUse <Ivl:55>  BB04 regmask=[r8] minReg=1 last fixed>
<RefPosition #160 @204 RefTypeKill <Reg:rax>  BB04 regmask=[rax] minReg=1>
<RefPosition #161 @204 RefTypeKill <Reg:rcx>  BB04 regmask=[rcx] minReg=1>
<RefPosition #162 @204 RefTypeKill <Reg:rdx>  BB04 regmask=[rdx] minReg=1>
<RefPosition #163 @204 RefTypeKill <Reg:r8 >  BB04 regmask=[r8] minReg=1>
<RefPosition #164 @204 RefTypeKill <Reg:r9 >  BB04 regmask=[r9] minReg=1>
<RefPosition #165 @204 RefTypeKill <Reg:r10>  BB04 regmask=[r10] minReg=1>
<RefPosition #166 @204 RefTypeKill <Reg:r11>  BB04 regmask=[r11] minReg=1>



CHECKING LAST USES for BB04, liveout={V01 V02 V03 V29}
==============================
use: {V01 V04 V18 V19}
def: {}

NEW BLOCK BB05


Setting BB03 as the predecessor for determining incoming variable registers of BB05
<RefPosition #167 @205 RefTypeBB  BB05 regmask=[] minReg=1>

DefList: {  }
N207 (???,???) [000474] ------------              *  IL_OFFSET void   IL offset: 0x2e REG NA

DefList: {  }
N209 (  1,  1) [000218] ------------              *  LCL_VAR   ref    V01 loc0         u:2 NA REG NA $1c1

DefList: {  }
N211 (???,???) [000506] ------------              *  PUTARG_REG ref    REG rcx
<RefPosition #168 @211 RefTypeFixedReg <Reg:rcx>  BB05 regmask=[rcx] minReg=1>
<RefPosition #169 @211 RefTypeUse <Ivl:1 V01> LCL_VAR BB05 regmask=[rcx] minReg=1 last fixed>
Setting putarg_reg as a pass-through of a non-last use lclVar
Interval 56: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #170 @212 RefTypeFixedReg <Reg:rcx>  BB05 regmask=[rcx] minReg=1>
<RefPosition #171 @212 RefTypeDef <Ivl:56> PUTARG_REG BB05 regmask=[rcx] minReg=1 fixed>
Assigning related <V01/L1> to <I56>

DefList: { N211.t506. PUTARG_REG }
N213 (  1,  1) [000178] ------------              *  LCL_VAR   ref    V04 loc3         u:2 NA (last use) REG NA <l:$1ca, c:$2c1>

DefList: { N211.t506. PUTARG_REG }
N215 (???,???) [000507] ------------              *  PUTARG_REG ref    REG rdx
<RefPosition #172 @215 RefTypeFixedReg <Reg:rdx>  BB05 regmask=[rdx] minReg=1>
<RefPosition #173 @215 RefTypeUse <Ivl:4 V04> LCL_VAR BB05 regmask=[rdx] minReg=1 last fixed>
Interval 57: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #174 @216 RefTypeFixedReg <Reg:rdx>  BB05 regmask=[rdx] minReg=1>
<RefPosition #175 @216 RefTypeDef <Ivl:57> PUTARG_REG BB05 regmask=[rdx] minReg=1 fixed>

DefList: { N211.t506. PUTARG_REG; N215.t507. PUTARG_REG }
N217 ( 16, 10) [000219] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize REG NA $VN.Void
<RefPosition #176 @217 RefTypeFixedReg <Reg:rcx>  BB05 regmask=[rcx] minReg=1>
<RefPosition #177 @217 RefTypeUse <Ivl:56>  BB05 regmask=[rcx] minReg=1 last fixed>
<RefPosition #178 @217 RefTypeFixedReg <Reg:rdx>  BB05 regmask=[rdx] minReg=1>
<RefPosition #179 @217 RefTypeUse <Ivl:57>  BB05 regmask=[rdx] minReg=1 last fixed>
<RefPosition #180 @218 RefTypeKill <Reg:rax>  BB05 regmask=[rax] minReg=1>
<RefPosition #181 @218 RefTypeKill <Reg:rcx>  BB05 regmask=[rcx] minReg=1>
<RefPosition #182 @218 RefTypeKill <Reg:rdx>  BB05 regmask=[rdx] minReg=1>
<RefPosition #183 @218 RefTypeKill <Reg:r8 >  BB05 regmask=[r8] minReg=1>
<RefPosition #184 @218 RefTypeKill <Reg:r9 >  BB05 regmask=[r9] minReg=1>
<RefPosition #185 @218 RefTypeKill <Reg:r10>  BB05 regmask=[r10] minReg=1>
<RefPosition #186 @218 RefTypeKill <Reg:r11>  BB05 regmask=[r11] minReg=1>



CHECKING LAST USES for BB05, liveout={V01 V02 V03 V29}
==============================
use: {V01 V04}
def: {}

NEW BLOCK BB07


Setting BB02 as the predecessor for determining incoming variable registers of BB07
<RefPosition #187 @219 RefTypeBB  BB07 regmask=[] minReg=1>

DefList: {  }
N221 (???,???) [000475] ------------              *  IL_OFFSET void   IL offset: 0x37 REG NA

DefList: {  }
N223 (  1,  1) [000235] ------------              *  CNS_INT   int    1 REG NA $46
Interval 58: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #188 @224 RefTypeDef <Ivl:58> CNS_INT BB07 regmask=[allInt] minReg=1>

DefList: { N223.t235. CNS_INT }
N225 (???,???) [000508] ------------              *  PUTARG_REG int    REG rcx
<RefPosition #189 @225 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #190 @225 RefTypeUse <Ivl:58>  BB07 regmask=[rcx] minReg=1 last fixed>
Interval 59: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #191 @226 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #192 @226 RefTypeDef <Ivl:59> PUTARG_REG BB07 regmask=[rcx] minReg=1 fixed>

DefList: { N225.t508. PUTARG_REG }
N227 ( 15,  7) [000236] --CXG-------              *  CALL      ref    System.IO.EnumerationOptions.FromSearchOption REG NA $2c6
<RefPosition #193 @227 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #194 @227 RefTypeUse <Ivl:59>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #195 @228 RefTypeKill <Reg:rax>  BB07 regmask=[rax] minReg=1>
<RefPosition #196 @228 RefTypeKill <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #197 @228 RefTypeKill <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #198 @228 RefTypeKill <Reg:r8 >  BB07 regmask=[r8] minReg=1>
<RefPosition #199 @228 RefTypeKill <Reg:r9 >  BB07 regmask=[r9] minReg=1>
<RefPosition #200 @228 RefTypeKill <Reg:r10>  BB07 regmask=[r10] minReg=1>
<RefPosition #201 @228 RefTypeKill <Reg:r11>  BB07 regmask=[r11] minReg=1>
Interval 60: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #202 @228 RefTypeFixedReg <Reg:rax>  BB07 regmask=[rax] minReg=1>
<RefPosition #203 @228 RefTypeDef <Ivl:60> CALL BB07 regmask=[rax] minReg=1 fixed>

DefList: { N227.t236. CALL }
N229 ( 15,  7) [000247] DA-XG-------              *  STORE_LCL_VAR ref    V20 tmp14        d:2 NA REG NA
<RefPosition #204 @229 RefTypeUse <Ivl:60>  BB07 regmask=[allInt] minReg=1 last>
Assigning related <V20/L18> to <I60>
<RefPosition #205 @230 RefTypeDef <Ivl:18 V20> STORE_LCL_VAR BB07 regmask=[allInt] minReg=1 last>

DefList: {  }
N231 (  2, 10) [000356] H-----------              *  CNS_INT(h) long   0xD1FFAB1E "*" REG NA $185
Interval 61: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #206 @232 RefTypeDef <Ivl:61> CNS_INT BB07 regmask=[allInt] minReg=1>

DefList: { N231.t356. CNS_INT }
N233 (  4, 12) [000357] #---G-------              *  IND       ref    REG NA $1d2
<RefPosition #207 @233 RefTypeUse <Ivl:61>  BB07 regmask=[allInt] minReg=1 last>
Interval 62: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #208 @234 RefTypeDef <Ivl:62> IND BB07 regmask=[allInt] minReg=1>

DefList: { N233.t357. IND }
N235 (???,???) [000509] ----G-------              *  PUTARG_REG ref    REG rdx
<RefPosition #209 @235 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #210 @235 RefTypeUse <Ivl:62>  BB07 regmask=[rdx] minReg=1 last fixed>
Interval 63: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #211 @236 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #212 @236 RefTypeDef <Ivl:63> PUTARG_REG BB07 regmask=[rdx] minReg=1 fixed>

DefList: { N235.t509. PUTARG_REG }
N237 (  1,  1) [000040] ------------              *  LCL_VAR   ref    V04 loc3         u:2 NA REG NA <l:$1ca, c:$2c1>

DefList: { N235.t509. PUTARG_REG }
N239 (???,???) [000510] ------------              *  PUTARG_REG ref    REG rcx
<RefPosition #213 @239 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #214 @239 RefTypeUse <Ivl:4 V04> LCL_VAR BB07 regmask=[rcx] minReg=1 last fixed>
Setting putarg_reg as a pass-through of a non-last use lclVar
Interval 64: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #215 @240 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #216 @240 RefTypeDef <Ivl:64> PUTARG_REG BB07 regmask=[rcx] minReg=1 fixed>
Assigning related <V04/L4> to <I64>

DefList: { N235.t509. PUTARG_REG; N239.t510. PUTARG_REG }
N241 (  1,  1) [000244] ------------              *  LCL_VAR   ref    V20 tmp14        u:2 NA (last use) REG NA $2c6

DefList: { N235.t509. PUTARG_REG; N239.t510. PUTARG_REG }
N243 (???,???) [000511] ------------              *  PUTARG_REG ref    REG r9
<RefPosition #217 @243 RefTypeFixedReg <Reg:r9 >  BB07 regmask=[r9] minReg=1>
<RefPosition #218 @243 RefTypeUse <Ivl:18 V20> LCL_VAR BB07 regmask=[r9] minReg=1 last fixed>
Interval 65: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #219 @244 RefTypeFixedReg <Reg:r9 >  BB07 regmask=[r9] minReg=1>
<RefPosition #220 @244 RefTypeDef <Ivl:65> PUTARG_REG BB07 regmask=[r9] minReg=1 fixed>

DefList: { N235.t509. PUTARG_REG; N239.t510. PUTARG_REG; N243.t511. PUTARG_REG }
N245 (  1,  1) [000243] ------------              *  CNS_INT   int    2 REG NA $42
Interval 66: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #221 @246 RefTypeDef <Ivl:66> CNS_INT BB07 regmask=[allInt] minReg=1>

DefList: { N235.t509. PUTARG_REG; N239.t510. PUTARG_REG; N243.t511. PUTARG_REG; N245.t243. CNS_INT }
N247 (???,???) [000512] ------------              *  PUTARG_REG int    REG r8
<RefPosition #222 @247 RefTypeFixedReg <Reg:r8 >  BB07 regmask=[r8] minReg=1>
<RefPosition #223 @247 RefTypeUse <Ivl:66>  BB07 regmask=[r8] minReg=1 last fixed>
Interval 67: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #224 @248 RefTypeFixedReg <Reg:r8 >  BB07 regmask=[r8] minReg=1>
<RefPosition #225 @248 RefTypeDef <Ivl:67> PUTARG_REG BB07 regmask=[r8] minReg=1 fixed>

DefList: { N235.t509. PUTARG_REG; N239.t510. PUTARG_REG; N243.t511. PUTARG_REG; N247.t512. PUTARG_REG }
N249 ( 21, 24) [000245] --CXG-------              *  CALL      ref    System.IO.Directory.InternalEnumeratePaths REG NA $2cc
<RefPosition #226 @249 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #227 @249 RefTypeUse <Ivl:63>  BB07 regmask=[rdx] minReg=1 last fixed>
<RefPosition #228 @249 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #229 @249 RefTypeUse <Ivl:64>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #230 @249 RefTypeFixedReg <Reg:r9 >  BB07 regmask=[r9] minReg=1>
<RefPosition #231 @249 RefTypeUse <Ivl:65>  BB07 regmask=[r9] minReg=1 last fixed>
<RefPosition #232 @249 RefTypeFixedReg <Reg:r8 >  BB07 regmask=[r8] minReg=1>
<RefPosition #233 @249 RefTypeUse <Ivl:67>  BB07 regmask=[r8] minReg=1 last fixed>
<RefPosition #234 @250 RefTypeKill <Reg:rax>  BB07 regmask=[rax] minReg=1>
<RefPosition #235 @250 RefTypeKill <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #236 @250 RefTypeKill <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #237 @250 RefTypeKill <Reg:r8 >  BB07 regmask=[r8] minReg=1>
<RefPosition #238 @250 RefTypeKill <Reg:r9 >  BB07 regmask=[r9] minReg=1>
<RefPosition #239 @250 RefTypeKill <Reg:r10>  BB07 regmask=[r10] minReg=1>
<RefPosition #240 @250 RefTypeKill <Reg:r11>  BB07 regmask=[r11] minReg=1>
Interval 68: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #241 @250 RefTypeFixedReg <Reg:rax>  BB07 regmask=[rax] minReg=1>
<RefPosition #242 @250 RefTypeDef <Ivl:68> CALL BB07 regmask=[rax] minReg=1 fixed>

DefList: { N249.t245. CALL }
N251 ( 21, 24) [000054] DA-XG-------              *  STORE_LCL_VAR ref    V09 tmp3         d:2 NA REG NA
<RefPosition #243 @251 RefTypeUse <Ivl:68>  BB07 regmask=[allInt] minReg=1 last>
Assigning related <V09/L8> to <I68>
<RefPosition #244 @252 RefTypeDef <Ivl:8 V09> STORE_LCL_VAR BB07 regmask=[allInt] minReg=1 last>

DefList: {  }
N253 (  2, 10) [000047] ------------              *  CNS_INT   long   0x7ffc7e4c17e0 REG NA $345
Interval 69: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #245 @254 RefTypeDef <Ivl:69> CNS_INT BB07 regmask=[allInt] minReg=1>

DefList: { N253.t47. CNS_INT }
N255 (???,???) [000513] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #246 @255 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #247 @255 RefTypeUse <Ivl:69>  BB07 regmask=[rcx] minReg=1 last fixed>
Interval 70: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #248 @256 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #249 @256 RefTypeDef <Ivl:70> PUTARG_REG BB07 regmask=[rcx] minReg=1 fixed>

DefList: { N255.t513. PUTARG_REG }
N257 (  1,  1) [000048] ------------              *  CNS_INT   int    35 REG NA $47
Interval 71: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #250 @258 RefTypeDef <Ivl:71> CNS_INT BB07 regmask=[allInt] minReg=1>

DefList: { N255.t513. PUTARG_REG; N257.t48. CNS_INT }
N259 (???,???) [000514] ------------              *  PUTARG_REG int    REG rdx
<RefPosition #251 @259 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #252 @259 RefTypeUse <Ivl:71>  BB07 regmask=[rdx] minReg=1 last fixed>
Interval 72: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #253 @260 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #254 @260 RefTypeDef <Ivl:72> PUTARG_REG BB07 regmask=[rdx] minReg=1 fixed>

DefList: { N255.t513. PUTARG_REG; N259.t514. PUTARG_REG }
N261 ( 17, 18) [000049] H-CXG-------              *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE REG NA $305
<RefPosition #255 @261 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #256 @261 RefTypeUse <Ivl:70>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #257 @261 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #258 @261 RefTypeUse <Ivl:72>  BB07 regmask=[rdx] minReg=1 last fixed>
<RefPosition #259 @262 RefTypeKill <Reg:rax>  BB07 regmask=[rax] minReg=1>
<RefPosition #260 @262 RefTypeKill <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #261 @262 RefTypeKill <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #262 @262 RefTypeKill <Reg:r8 >  BB07 regmask=[r8] minReg=1>
<RefPosition #263 @262 RefTypeKill <Reg:r9 >  BB07 regmask=[r9] minReg=1>
<RefPosition #264 @262 RefTypeKill <Reg:r10>  BB07 regmask=[r10] minReg=1>
<RefPosition #265 @262 RefTypeKill <Reg:r11>  BB07 regmask=[r11] minReg=1>
Interval 73: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #266 @262 RefTypeFixedReg <Reg:rax>  BB07 regmask=[rax] minReg=1>
<RefPosition #267 @262 RefTypeDef <Ivl:73> CALL BB07 regmask=[rax] minReg=1 fixed>

DefList: {  }
N263 (  2, 10) [000364] I-----------              *  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] REG NA $186
Interval 74: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #268 @264 RefTypeDef <Ivl:74> CNS_INT BB07 regmask=[allInt] minReg=1>

DefList: { N263.t364. CNS_INT }
N265 (  4, 12) [000045] n---G-------              *  IND       ref    REG NA <l:$4c0, c:$2cf>
<RefPosition #269 @265 RefTypeUse <Ivl:74>  BB07 regmask=[allInt] minReg=1 last>
Interval 75: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #270 @266 RefTypeDef <Ivl:75> IND BB07 regmask=[allInt] minReg=1>

DefList: { N265.t45. IND }
N267 ( 22, 31) [000052] DA-XG-------              *  STORE_LCL_VAR ref    V08 tmp2         d:2 NA REG NA
<RefPosition #271 @267 RefTypeUse <Ivl:75>  BB07 regmask=[allInt] minReg=1 last>
Assigning related <V08/L7> to <I75>
<RefPosition #272 @268 RefTypeDef <Ivl:7 V08> STORE_LCL_VAR BB07 regmask=[allInt] minReg=1 last>

DefList: {  }
N269 (  1,  1) [000055] ------------              *  LCL_VAR   ref    V09 tmp3         u:2 NA (last use) REG NA $2cc

DefList: {  }
N271 (  1,  3) [000062] DA----------              *  STORE_LCL_VAR ref    V10 tmp4         d:2 NA REG NA
<RefPosition #273 @271 RefTypeUse <Ivl:8 V09> LCL_VAR BB07 regmask=[allInt] minReg=1 last>
Assigning related <V10/L9> to <V09/L8>
<RefPosition #274 @272 RefTypeDef <Ivl:9 V10> STORE_LCL_VAR BB07 regmask=[allInt] minReg=1 last>

DefList: {  }
N273 (  1,  1) [000056] ------------              *  LCL_VAR   ref    V08 tmp2         u:2 NA (last use) REG NA <l:$4c0, c:$2cf>

DefList: {  }
N275 (  1,  3) [000065] DA----------              *  STORE_LCL_VAR ref    V11 tmp5         d:2 NA REG NA
<RefPosition #275 @275 RefTypeUse <Ivl:7 V08> LCL_VAR BB07 regmask=[allInt] minReg=1 last>
Assigning related <V11/L10> to <V08/L7>
<RefPosition #276 @276 RefTypeDef <Ivl:10 V11> STORE_LCL_VAR BB07 regmask=[allInt] minReg=1 last>

DefList: {  }
N277 (  1,  1) [000057] ------------              *  LCL_VAR   ref    V11 tmp5         u:2 NA REG NA <l:$4c0, c:$2cf>

DefList: {  }
N279 (  1,  1) [000058] -c----------              *  CNS_INT   ref    null REG NA $VN.Null
Contained
DefList: {  }
N281 (  3,  3) [000059] J------N----              *  NE        void   REG NA <l:$246, c:$245>
<RefPosition #277 @281 RefTypeUse <Ivl:10 V11> LCL_VAR BB07 regmask=[allInt] minReg=1 last>

DefList: {  }
N283 (  5,  5) [000060] ------------              *  JTRUE     void   REG NA



CHECKING LAST USES for BB07, liveout={V01 V02 V03 V04 V10 V11 V29}
==============================
use: {V04}
def: {V08 V09 V10 V11 V20}

NEW BLOCK BB08


Setting BB07 as the predecessor for determining incoming variable registers of BB08
<RefPosition #278 @285 RefTypeBB  BB08 regmask=[] minReg=1>

DefList: {  }
N287 (  2, 10) [000157] H-----------              *  CNS_INT(h) long   0xd1ffab1e token REG NA $187
Interval 76: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #279 @288 RefTypeDef <Ivl:76> CNS_INT BB08 regmask=[allInt] minReg=1>

DefList: { N287.t157. CNS_INT }
N289 (???,???) [000515] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #280 @289 RefTypeFixedReg <Reg:rcx>  BB08 regmask=[rcx] minReg=1>
<RefPosition #281 @289 RefTypeUse <Ivl:76>  BB08 regmask=[rcx] minReg=1 last fixed>
Interval 77: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #282 @290 RefTypeFixedReg <Reg:rcx>  BB08 regmask=[rcx] minReg=1>
<RefPosition #283 @290 RefTypeDef <Ivl:77> PUTARG_REG BB08 regmask=[rcx] minReg=1 fixed>

DefList: { N289.t515. PUTARG_REG }
N291 ( 16, 16) [000158] --C---------              *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG NA $1d6
<RefPosition #284 @291 RefTypeFixedReg <Reg:rcx>  BB08 regmask=[rcx] minReg=1>
<RefPosition #285 @291 RefTypeUse <Ivl:77>  BB08 regmask=[rcx] minReg=1 last fixed>
<RefPosition #286 @292 RefTypeKill <Reg:rax>  BB08 regmask=[rax] minReg=1>
<RefPosition #287 @292 RefTypeKill <Reg:rcx>  BB08 regmask=[rcx] minReg=1>
<RefPosition #288 @292 RefTypeKill <Reg:rdx>  BB08 regmask=[rdx] minReg=1>
<RefPosition #289 @292 RefTypeKill <Reg:r8 >  BB08 regmask=[r8] minReg=1>
<RefPosition #290 @292 RefTypeKill <Reg:r9 >  BB08 regmask=[r9] minReg=1>
<RefPosition #291 @292 RefTypeKill <Reg:r10>  BB08 regmask=[r10] minReg=1>
<RefPosition #292 @292 RefTypeKill <Reg:r11>  BB08 regmask=[r11] minReg=1>
Interval 78: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #293 @292 RefTypeFixedReg <Reg:rax>  BB08 regmask=[rax] minReg=1>
<RefPosition #294 @292 RefTypeDef <Ivl:78> CALL BB08 regmask=[rax] minReg=1 fixed>

DefList: { N291.t158. CALL }
N293 ( 16, 16) [000160] DA----------              *  STORE_LCL_VAR ref    V17 tmp11        d:2 NA REG NA
<RefPosition #295 @293 RefTypeUse <Ivl:78>  BB08 regmask=[allInt] minReg=1 last>
Assigning related <V17/L15> to <I78>
<RefPosition #296 @294 RefTypeDef <Ivl:15 V17> STORE_LCL_VAR BB08 regmask=[allInt] minReg=1 last>

DefList: {  }
N295 (  2, 10) [000368] I-----------              *  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] REG NA $188
Interval 79: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #297 @296 RefTypeDef <Ivl:79> CNS_INT BB08 regmask=[allInt] minReg=1>

DefList: { N295.t368. CNS_INT }
N297 (  4, 12) [000150] n---G-------              *  IND       ref    REG NA <l:$4c1, c:$2d5>
<RefPosition #298 @297 RefTypeUse <Ivl:79>  BB08 regmask=[allInt] minReg=1 last>
Interval 80: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #299 @298 RefTypeDef <Ivl:80> IND BB08 regmask=[allInt] minReg=1>

DefList: { N297.t150. IND }
N299 (  5, 13) [000262] DA--G-------              *  STORE_LCL_VAR ref    V21 tmp15        d:2 NA REG NA
<RefPosition #300 @299 RefTypeUse <Ivl:80>  BB08 regmask=[allInt] minReg=1 last>
Assigning related <V21/L19> to <I80>
<RefPosition #301 @300 RefTypeDef <Ivl:19 V21> STORE_LCL_VAR BB08 regmask=[allInt] minReg=1 last>

DefList: {  }
N301 (  1,  1) [000249] ------------              *  LCL_VAR   ref    V21 tmp15        u:2 NA REG NA <l:$4c1, c:$2d5>

DefList: {  }
N303 (  1,  1) [000250] -c----------              *  CNS_INT   ref    null REG NA $VN.Null
Contained
DefList: {  }
N305 (  3,  3) [000251] J------N----              *  EQ        void   REG NA <l:$248, c:$247>
<RefPosition #302 @305 RefTypeUse <Ivl:19 V21> LCL_VAR BB08 regmask=[allInt] minReg=1 last>

DefList: {  }
N307 (  5,  5) [000252] ------------              *  JTRUE     void   REG NA



CHECKING LAST USES for BB08, liveout={V01 V02 V03 V04 V10 V17 V21 V29}
==============================
use: {}
def: {V17 V21}

NEW BLOCK BB09


Setting BB08 as the predecessor for determining incoming variable registers of BB09
<RefPosition #303 @309 RefTypeBB  BB09 regmask=[] minReg=1>

DefList: {  }
N311 (  1,  1) [000161] ------------              *  LCL_VAR   ref    V17 tmp11        u:2 NA REG NA $1d6

DefList: {  }
N313 (  2,  2) [000370] ------------              *  LEA(b+8)  byref  REG NA
<RefPosition #304 @313 RefTypeUse <Ivl:15 V17> LCL_VAR BB09 regmask=[allInt] minReg=1 last>
Interval 81: byref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #305 @314 RefTypeDef <Ivl:81> LEA BB09 regmask=[allInt] minReg=1>

DefList: { N313.t370. LEA }
N315 (  1,  1) [000253] ------------              *  LCL_VAR   ref    V21 tmp15        u:2 NA (last use) REG NA <l:$4c1, c:$2d5>

DefList: { N313.t370. LEA }
N317 (???,???) [000476] -A--GO------              *  STOREIND  ref    REG NA
<RefPosition #306 @317 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #307 @317 RefTypeUse <Ivl:81>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #308 @317 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #309 @317 RefTypeUse <Ivl:19 V21> LCL_VAR BB09 regmask=[rdx] minReg=1 last fixed>
<RefPosition #310 @318 RefTypeKill <Reg:rax>  BB09 regmask=[rax] minReg=1>
<RefPosition #311 @318 RefTypeKill <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #312 @318 RefTypeKill <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #313 @318 RefTypeKill <Reg:r8 >  BB09 regmask=[r8] minReg=1>
<RefPosition #314 @318 RefTypeKill <Reg:r9 >  BB09 regmask=[r9] minReg=1>
<RefPosition #315 @318 RefTypeKill <Reg:r10>  BB09 regmask=[r10] minReg=1>
<RefPosition #316 @318 RefTypeKill <Reg:r11>  BB09 regmask=[r11] minReg=1>
<RefPosition #317 @318 RefTypeKill <Reg:mm0>  BB09 regmask=[mm0] minReg=1>
<RefPosition #318 @318 RefTypeKill <Reg:mm1>  BB09 regmask=[mm1] minReg=1>
<RefPosition #319 @318 RefTypeKill <Reg:mm2>  BB09 regmask=[mm2] minReg=1>
<RefPosition #320 @318 RefTypeKill <Reg:mm3>  BB09 regmask=[mm3] minReg=1>
<RefPosition #321 @318 RefTypeKill <Reg:mm4>  BB09 regmask=[mm4] minReg=1>
<RefPosition #322 @318 RefTypeKill <Reg:mm5>  BB09 regmask=[mm5] minReg=1>

DefList: {  }
N319 (  1,  1) [000256] ------------              *  LCL_VAR   ref    V17 tmp11        u:2 NA REG NA $1d6

DefList: {  }
N321 (  2,  2) [000372] -c----------              *  LEA(b+24) byref  REG NA
Contained
DefList: {  }
N323 (  2, 10) [000156] H-----------              *  CNS_INT(h) long   0xd1ffab1e ftn REG NA $18a
Interval 82: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #323 @324 RefTypeDef <Ivl:82> CNS_INT BB09 regmask=[allInt] minReg=1>

DefList: { N323.t156. CNS_INT }
N325 (???,???) [000477] -A--GO------              *  STOREIND  long   REG NA
<RefPosition #324 @325 RefTypeUse <Ivl:15 V17> LCL_VAR BB09 regmask=[allInt] minReg=1 last>
<RefPosition #325 @325 RefTypeUse <Ivl:82>  BB09 regmask=[allInt] minReg=1 last>

DefList: {  }
N327 (???,???) [000478] ------------              *  IL_OFFSET void   IL offset: 0x5c REG NA

DefList: {  }
N329 (  2, 10) [000375] I-----------              *  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] REG NA $186
Interval 83: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #326 @330 RefTypeDef <Ivl:83> CNS_INT BB09 regmask=[allInt] minReg=1>

DefList: { N329.t375. CNS_INT }
N331 (  1,  1) [000164] ------------              *  LCL_VAR   ref    V17 tmp11        u:2 NA REG NA $1d6

DefList: { N329.t375. CNS_INT }
N333 (???,???) [000479] -A--G-------              *  STOREIND  ref    REG NA
<RefPosition #327 @333 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #328 @333 RefTypeUse <Ivl:83>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #329 @333 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #330 @333 RefTypeUse <Ivl:15 V17> LCL_VAR BB09 regmask=[rdx] minReg=1 last fixed>
<RefPosition #331 @334 RefTypeKill <Reg:rax>  BB09 regmask=[rax] minReg=1>
<RefPosition #332 @334 RefTypeKill <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #333 @334 RefTypeKill <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #334 @334 RefTypeKill <Reg:r8 >  BB09 regmask=[r8] minReg=1>
<RefPosition #335 @334 RefTypeKill <Reg:r9 >  BB09 regmask=[r9] minReg=1>
<RefPosition #336 @334 RefTypeKill <Reg:r10>  BB09 regmask=[r10] minReg=1>
<RefPosition #337 @334 RefTypeKill <Reg:r11>  BB09 regmask=[r11] minReg=1>
<RefPosition #338 @334 RefTypeKill <Reg:mm0>  BB09 regmask=[mm0] minReg=1>
<RefPosition #339 @334 RefTypeKill <Reg:mm1>  BB09 regmask=[mm1] minReg=1>
<RefPosition #340 @334 RefTypeKill <Reg:mm2>  BB09 regmask=[mm2] minReg=1>
<RefPosition #341 @334 RefTypeKill <Reg:mm3>  BB09 regmask=[mm3] minReg=1>
<RefPosition #342 @334 RefTypeKill <Reg:mm4>  BB09 regmask=[mm4] minReg=1>
<RefPosition #343 @334 RefTypeKill <Reg:mm5>  BB09 regmask=[mm5] minReg=1>

DefList: {  }
N335 (  1,  1) [000163] ------------              *  LCL_VAR   ref    V17 tmp11        u:2 NA (last use) REG NA $1d6

DefList: {  }
N337 (  1,  3) [000175] DA----------              *  STORE_LCL_VAR ref    V11 tmp5         d:4 NA REG NA
<RefPosition #344 @337 RefTypeUse <Ivl:15 V17> LCL_VAR BB09 regmask=[allInt] minReg=1 last>
Assigning related <V11/L10> to <V17/L15>
<RefPosition #345 @338 RefTypeDef <Ivl:10 V11> STORE_LCL_VAR BB09 regmask=[allInt] minReg=1 last>



CHECKING LAST USES for BB09, liveout={V01 V02 V03 V04 V10 V11 V29}
==============================
use: {V17 V21}
def: {V11}

NEW BLOCK BB10


Setting BB07 as the predecessor for determining incoming variable registers of BB10
<RefPosition #346 @339 RefTypeBB  BB10 regmask=[] minReg=1>

DefList: {  }
N341 (  1,  1) [000070] ------------              *  LCL_VAR   ref    V11 tmp5         u:3 NA (last use) REG NA $4c4

DefList: {  }
N343 (???,???) [000516] ------------              *  PUTARG_REG ref    REG r8
<RefPosition #347 @343 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #348 @343 RefTypeUse <Ivl:10 V11> LCL_VAR BB10 regmask=[r8] minReg=1 last fixed>
Interval 84: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #349 @344 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #350 @344 RefTypeDef <Ivl:84> PUTARG_REG BB10 regmask=[r8] minReg=1 fixed>

DefList: { N343.t516. PUTARG_REG }
N345 (  1,  1) [000069] ------------              *  LCL_VAR   ref    V10 tmp4         u:2 NA (last use) REG NA $2cc

DefList: { N343.t516. PUTARG_REG }
N347 (???,???) [000517] ------------              *  PUTARG_REG ref    REG rdx
<RefPosition #351 @347 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #352 @347 RefTypeUse <Ivl:9 V10> LCL_VAR BB10 regmask=[rdx] minReg=1 last fixed>
Interval 85: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #353 @348 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #354 @348 RefTypeDef <Ivl:85> PUTARG_REG BB10 regmask=[rdx] minReg=1 fixed>

DefList: { N343.t516. PUTARG_REG; N347.t517. PUTARG_REG }
N349 (  2, 10) [000072] H-----------              *  CNS_INT(h) long   0xd1ffab1e method REG NA $18d
Interval 86: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #355 @350 RefTypeDef <Ivl:86> CNS_INT BB10 regmask=[allInt] minReg=1>

DefList: { N343.t516. PUTARG_REG; N347.t517. PUTARG_REG; N349.t72. CNS_INT }
N351 (???,???) [000518] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #356 @351 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #357 @351 RefTypeUse <Ivl:86>  BB10 regmask=[rcx] minReg=1 last fixed>
Interval 87: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #358 @352 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #359 @352 RefTypeDef <Ivl:87> PUTARG_REG BB10 regmask=[rcx] minReg=1 fixed>

DefList: { N343.t516. PUTARG_REG; N347.t517. PUTARG_REG; N351.t518. PUTARG_REG }
N353 ( 18, 20) [000071] --CXG-------              *  CALL      ref    System.Linq.Enumerable.Where REG NA $2db
<RefPosition #360 @353 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #361 @353 RefTypeUse <Ivl:84>  BB10 regmask=[r8] minReg=1 last fixed>
<RefPosition #362 @353 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #363 @353 RefTypeUse <Ivl:85>  BB10 regmask=[rdx] minReg=1 last fixed>
<RefPosition #364 @353 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #365 @353 RefTypeUse <Ivl:87>  BB10 regmask=[rcx] minReg=1 last fixed>
<RefPosition #366 @354 RefTypeKill <Reg:rax>  BB10 regmask=[rax] minReg=1>
<RefPosition #367 @354 RefTypeKill <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #368 @354 RefTypeKill <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #369 @354 RefTypeKill <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #370 @354 RefTypeKill <Reg:r9 >  BB10 regmask=[r9] minReg=1>
<RefPosition #371 @354 RefTypeKill <Reg:r10>  BB10 regmask=[r10] minReg=1>
<RefPosition #372 @354 RefTypeKill <Reg:r11>  BB10 regmask=[r11] minReg=1>
Interval 88: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #373 @354 RefTypeFixedReg <Reg:rax>  BB10 regmask=[rax] minReg=1>
<RefPosition #374 @354 RefTypeDef <Ivl:88> CALL BB10 regmask=[rax] minReg=1 fixed>

DefList: { N353.t71. CALL }
N355 ( 18, 20) [000075] DA-XG-------              *  STORE_LCL_VAR ref    V05 loc4         d:2 NA REG NA
<RefPosition #375 @355 RefTypeUse <Ivl:88>  BB10 regmask=[allInt] minReg=1 last>
Assigning related <V05/L5> to <I88>
<RefPosition #376 @356 RefTypeDef <Ivl:5 V05> STORE_LCL_VAR BB10 regmask=[allInt] minReg=1 last>

DefList: {  }
N357 (???,???) [000480] ------------              *  IL_OFFSET void   IL offset: 0x69 REG NA

DefList: {  }
N359 (  2, 10) [000273] ------------              *  CNS_INT   long   0x7ffc7e783cd8 REG NA $347
Interval 89: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #377 @360 RefTypeDef <Ivl:89> CNS_INT BB10 regmask=[allInt] minReg=1>

DefList: { N359.t273. CNS_INT }
N361 (???,???) [000519] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #378 @361 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #379 @361 RefTypeUse <Ivl:89>  BB10 regmask=[rcx] minReg=1 last fixed>
Interval 90: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #380 @362 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #381 @362 RefTypeDef <Ivl:90> PUTARG_REG BB10 regmask=[rcx] minReg=1 fixed>

DefList: { N361.t519. PUTARG_REG }
N363 (  1,  1) [000274] ------------              *  CNS_INT   int    40 REG NA $4a
Interval 91: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #382 @364 RefTypeDef <Ivl:91> CNS_INT BB10 regmask=[allInt] minReg=1>

DefList: { N361.t519. PUTARG_REG; N363.t274. CNS_INT }
N365 (???,???) [000520] ------------              *  PUTARG_REG int    REG rdx
<RefPosition #383 @365 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #384 @365 RefTypeUse <Ivl:91>  BB10 regmask=[rdx] minReg=1 last fixed>
Interval 92: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #385 @366 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #386 @366 RefTypeDef <Ivl:92> PUTARG_REG BB10 regmask=[rdx] minReg=1 fixed>

DefList: { N361.t519. PUTARG_REG; N365.t520. PUTARG_REG }
N367 ( 17, 18) [000275] H-CXG-------              *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE REG NA $309
<RefPosition #387 @367 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #388 @367 RefTypeUse <Ivl:90>  BB10 regmask=[rcx] minReg=1 last fixed>
<RefPosition #389 @367 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #390 @367 RefTypeUse <Ivl:92>  BB10 regmask=[rdx] minReg=1 last fixed>
<RefPosition #391 @368 RefTypeKill <Reg:rax>  BB10 regmask=[rax] minReg=1>
<RefPosition #392 @368 RefTypeKill <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #393 @368 RefTypeKill <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #394 @368 RefTypeKill <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #395 @368 RefTypeKill <Reg:r9 >  BB10 regmask=[r9] minReg=1>
<RefPosition #396 @368 RefTypeKill <Reg:r10>  BB10 regmask=[r10] minReg=1>
<RefPosition #397 @368 RefTypeKill <Reg:r11>  BB10 regmask=[r11] minReg=1>
Interval 93: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #398 @368 RefTypeFixedReg <Reg:rax>  BB10 regmask=[rax] minReg=1>
<RefPosition #399 @368 RefTypeDef <Ivl:93> CALL BB10 regmask=[rax] minReg=1 fixed>

DefList: {  }
N369 (  2, 10) [000381] I-----------              *  CNS_INT(h) long   0xd1ffab1e static Fseq[<Compatible>k__BackingField] REG NA $18e
Interval 94: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #400 @370 RefTypeDef <Ivl:94> CNS_INT BB10 regmask=[allInt] minReg=1>

DefList: { N369.t381. CNS_INT }
N371 (  4, 12) [000271] n---G-------              *  IND       ref    REG NA <l:$4c5, c:$2de>
<RefPosition #401 @371 RefTypeUse <Ivl:94>  BB10 regmask=[allInt] minReg=1 last>
Interval 95: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #402 @372 RefTypeDef <Ivl:95> IND BB10 regmask=[allInt] minReg=1>

DefList: { N371.t271. IND }
N373 ( 21, 30) [000283] DA-XG-------              *  STORE_LCL_VAR ref    V23 tmp17        d:2 NA REG NA
<RefPosition #403 @373 RefTypeUse <Ivl:95>  BB10 regmask=[allInt] minReg=1 last>
Assigning related <V23/L20> to <I95>
<RefPosition #404 @374 RefTypeDef <Ivl:20 V23> STORE_LCL_VAR BB10 regmask=[allInt] minReg=1 last>

DefList: {  }
N375 (  2, 10) [000382] H-----------              *  CNS_INT(h) long   0xD1FFAB1E "*.csproj" REG NA $18f
Interval 96: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #405 @376 RefTypeDef <Ivl:96> CNS_INT BB10 regmask=[allInt] minReg=1>

DefList: { N375.t382. CNS_INT }
N377 (  4, 12) [000383] #---G-------              *  IND       ref    REG NA $1e0
<RefPosition #406 @377 RefTypeUse <Ivl:96>  BB10 regmask=[allInt] minReg=1 last>
Interval 97: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #407 @378 RefTypeDef <Ivl:97> IND BB10 regmask=[allInt] minReg=1>

DefList: { N377.t383. IND }
N379 (???,???) [000521] ----G-------              *  PUTARG_REG ref    REG rdx
<RefPosition #408 @379 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #409 @379 RefTypeUse <Ivl:97>  BB10 regmask=[rdx] minReg=1 last fixed>
Interval 98: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #410 @380 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #411 @380 RefTypeDef <Ivl:98> PUTARG_REG BB10 regmask=[rdx] minReg=1 fixed>

DefList: { N379.t521. PUTARG_REG }
N381 (  1,  1) [000077] ------------              *  LCL_VAR   ref    V04 loc3         u:2 NA (last use) REG NA <l:$1ca, c:$2c1>

DefList: { N379.t521. PUTARG_REG }
N383 (???,???) [000522] ------------              *  PUTARG_REG ref    REG rcx
<RefPosition #412 @383 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #413 @383 RefTypeUse <Ivl:4 V04> LCL_VAR BB10 regmask=[rcx] minReg=1 last fixed>
Interval 99: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #414 @384 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #415 @384 RefTypeDef <Ivl:99> PUTARG_REG BB10 regmask=[rcx] minReg=1 fixed>

DefList: { N379.t521. PUTARG_REG; N383.t522. PUTARG_REG }
N385 (  1,  1) [000280] ------------              *  LCL_VAR   ref    V23 tmp17        u:2 NA (last use) REG NA <l:$4c5, c:$2de>

DefList: { N379.t521. PUTARG_REG; N383.t522. PUTARG_REG }
N387 (???,???) [000523] ------------              *  PUTARG_REG ref    REG r9
<RefPosition #416 @387 RefTypeFixedReg <Reg:r9 >  BB10 regmask=[r9] minReg=1>
<RefPosition #417 @387 RefTypeUse <Ivl:20 V23> LCL_VAR BB10 regmask=[r9] minReg=1 last fixed>
Interval 100: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #418 @388 RefTypeFixedReg <Reg:r9 >  BB10 regmask=[r9] minReg=1>
<RefPosition #419 @388 RefTypeDef <Ivl:100> PUTARG_REG BB10 regmask=[r9] minReg=1 fixed>

DefList: { N379.t521. PUTARG_REG; N383.t522. PUTARG_REG; N387.t523. PUTARG_REG }
N389 (  1,  1) [000279] ------------              *  CNS_INT   int    1 REG NA $46
Interval 101: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #420 @390 RefTypeDef <Ivl:101> CNS_INT BB10 regmask=[allInt] minReg=1>

DefList: { N379.t521. PUTARG_REG; N383.t522. PUTARG_REG; N387.t523. PUTARG_REG; N389.t279. CNS_INT }
N391 (???,???) [000524] ------------              *  PUTARG_REG int    REG r8
<RefPosition #421 @391 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #422 @391 RefTypeUse <Ivl:101>  BB10 regmask=[r8] minReg=1 last fixed>
Interval 102: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #423 @392 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #424 @392 RefTypeDef <Ivl:102> PUTARG_REG BB10 regmask=[r8] minReg=1 fixed>

DefList: { N379.t521. PUTARG_REG; N383.t522. PUTARG_REG; N387.t523. PUTARG_REG; N391.t524. PUTARG_REG }
N393 ( 21, 24) [000281] --CXG-------              *  CALL      ref    System.IO.Directory.InternalEnumeratePaths REG NA $2e3
<RefPosition #425 @393 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #426 @393 RefTypeUse <Ivl:98>  BB10 regmask=[rdx] minReg=1 last fixed>
<RefPosition #427 @393 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #428 @393 RefTypeUse <Ivl:99>  BB10 regmask=[rcx] minReg=1 last fixed>
<RefPosition #429 @393 RefTypeFixedReg <Reg:r9 >  BB10 regmask=[r9] minReg=1>
<RefPosition #430 @393 RefTypeUse <Ivl:100>  BB10 regmask=[r9] minReg=1 last fixed>
<RefPosition #431 @393 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #432 @393 RefTypeUse <Ivl:102>  BB10 regmask=[r8] minReg=1 last fixed>
<RefPosition #433 @394 RefTypeKill <Reg:rax>  BB10 regmask=[rax] minReg=1>
<RefPosition #434 @394 RefTypeKill <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #435 @394 RefTypeKill <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #436 @394 RefTypeKill <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #437 @394 RefTypeKill <Reg:r9 >  BB10 regmask=[r9] minReg=1>
<RefPosition #438 @394 RefTypeKill <Reg:r10>  BB10 regmask=[r10] minReg=1>
<RefPosition #439 @394 RefTypeKill <Reg:r11>  BB10 regmask=[r11] minReg=1>
Interval 103: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #440 @394 RefTypeFixedReg <Reg:rax>  BB10 regmask=[rax] minReg=1>
<RefPosition #441 @394 RefTypeDef <Ivl:103> CALL BB10 regmask=[rax] minReg=1 fixed>

DefList: { N393.t281. CALL }
N395 ( 21, 24) [000290] DA-XG-------              *  STORE_LCL_VAR ref    V24 tmp18        d:2 NA REG NA
<RefPosition #442 @395 RefTypeUse <Ivl:103>  BB10 regmask=[allInt] minReg=1 last>
Assigning related <V24/L21> to <I103>
<RefPosition #443 @396 RefTypeDef <Ivl:21 V24> STORE_LCL_VAR BB10 regmask=[allInt] minReg=1 last>

DefList: {  }
N397 (  1,  1) [000285] ------------              *  LCL_VAR   ref    V01 loc0         u:2 NA REG NA $1c1

DefList: {  }
N399 (  2,  2) [000389] -c----------              *  LEA(b+16) byref  REG NA
Contained
DefList: {  }
N401 (  4,  4) [000286] n---GO------              *  IND       int    REG NA <l:$24c, c:$24b>
<RefPosition #444 @401 RefTypeUse <Ivl:1 V01> LCL_VAR BB10 regmask=[allInt] minReg=1 last>
Interval 104: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #445 @402 RefTypeDef <Ivl:104> IND BB10 regmask=[allInt] minReg=1>

DefList: { N401.t286. IND }
N403 (???,???) [000525] ----GO------              *  PUTARG_REG int    REG rdx
<RefPosition #446 @403 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #447 @403 RefTypeUse <Ivl:104>  BB10 regmask=[rdx] minReg=1 last fixed>
Interval 105: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #448 @404 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #449 @404 RefTypeDef <Ivl:105> PUTARG_REG BB10 regmask=[rdx] minReg=1 fixed>

DefList: { N403.t525. PUTARG_REG }
N405 (  1,  1) [000076] ------------              *  LCL_VAR   ref    V01 loc0         u:2 NA REG NA $1c1

DefList: { N403.t525. PUTARG_REG }
N407 (???,???) [000526] ------------              *  PUTARG_REG ref    REG rcx
<RefPosition #450 @407 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #451 @407 RefTypeUse <Ivl:1 V01> LCL_VAR BB10 regmask=[rcx] minReg=1 last fixed>
Setting putarg_reg as a pass-through of a non-last use lclVar
Interval 106: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #452 @408 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #453 @408 RefTypeDef <Ivl:106> PUTARG_REG BB10 regmask=[rcx] minReg=1 fixed>
Assigning related <V01/L1> to <I106>

DefList: { N403.t525. PUTARG_REG; N407.t526. PUTARG_REG }
N409 (  1,  1) [000287] ------------              *  LCL_VAR   ref    V24 tmp18        u:2 NA (last use) REG NA $2e3

DefList: { N403.t525. PUTARG_REG; N407.t526. PUTARG_REG }
N411 (???,???) [000527] ------------              *  PUTARG_REG ref    REG r8
<RefPosition #454 @411 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #455 @411 RefTypeUse <Ivl:21 V24> LCL_VAR BB10 regmask=[r8] minReg=1 last fixed>
Interval 107: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #456 @412 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #457 @412 RefTypeDef <Ivl:107> PUTARG_REG BB10 regmask=[r8] minReg=1 fixed>

DefList: { N403.t525. PUTARG_REG; N407.t526. PUTARG_REG; N411.t527. PUTARG_REG }
N413 ( 20, 15) [000288] --CXGO------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange REG NA $VN.Void
<RefPosition #458 @413 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #459 @413 RefTypeUse <Ivl:105>  BB10 regmask=[rdx] minReg=1 last fixed>
<RefPosition #460 @413 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #461 @413 RefTypeUse <Ivl:106>  BB10 regmask=[rcx] minReg=1 last fixed>
<RefPosition #462 @413 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #463 @413 RefTypeUse <Ivl:107>  BB10 regmask=[r8] minReg=1 last fixed>
<RefPosition #464 @414 RefTypeKill <Reg:rax>  BB10 regmask=[rax] minReg=1>
<RefPosition #465 @414 RefTypeKill <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #466 @414 RefTypeKill <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #467 @414 RefTypeKill <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #468 @414 RefTypeKill <Reg:r9 >  BB10 regmask=[r9] minReg=1>
<RefPosition #469 @414 RefTypeKill <Reg:r10>  BB10 regmask=[r10] minReg=1>
<RefPosition #470 @414 RefTypeKill <Reg:r11>  BB10 regmask=[r11] minReg=1>

DefList: {  }
N415 (???,???) [000481] ------------              *  IL_OFFSET void   IL offset: 0x7a REG NA

DefList: {  }
N417 (  2, 10) [000395] I-----------              *  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] REG NA $191
Interval 108: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #471 @418 RefTypeDef <Ivl:108> CNS_INT BB10 regmask=[allInt] minReg=1>

DefList: { N417.t395. CNS_INT }
N419 (  4, 12) [000084] n---G-------              *  IND       ref    REG NA <l:$4c6, c:$2e9>
<RefPosition #472 @419 RefTypeUse <Ivl:108>  BB10 regmask=[allInt] minReg=1 last>
Interval 109: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #473 @420 RefTypeDef <Ivl:109> IND BB10 regmask=[allInt] minReg=1>

DefList: { N419.t84. IND }
N421 (  5, 13) [000091] DA--G-------              *  STORE_LCL_VAR ref    V12 tmp6         d:2 NA REG NA
<RefPosition #474 @421 RefTypeUse <Ivl:109>  BB10 regmask=[allInt] minReg=1 last>
Assigning related <V12/L11> to <I109>
<RefPosition #475 @422 RefTypeDef <Ivl:11 V12> STORE_LCL_VAR BB10 regmask=[allInt] minReg=1 last>

DefList: {  }
N423 (  1,  1) [000083] ------------              *  LCL_VAR   ref    V05 loc4         u:2 NA (last use) REG NA $2db

DefList: {  }
N425 (  1,  3) [000101] DA----------              *  STORE_LCL_VAR ref    V14 tmp8         d:2 NA REG NA
<RefPosition #476 @425 RefTypeUse <Ivl:5 V05> LCL_VAR BB10 regmask=[allInt] minReg=1 last>
Assigning related <V14/L12> to <V05/L5>
<RefPosition #477 @426 RefTypeDef <Ivl:12 V14> STORE_LCL_VAR BB10 regmask=[allInt] minReg=1 last>

DefList: {  }
N427 (  1,  1) [000092] ------------              *  LCL_VAR   ref    V12 tmp6         u:2 NA (last use) REG NA <l:$4c6, c:$2e9>

DefList: {  }
N429 (  1,  3) [000104] DA----------              *  STORE_LCL_VAR ref    V15 tmp9         d:2 NA REG NA
<RefPosition #478 @429 RefTypeUse <Ivl:11 V12> LCL_VAR BB10 regmask=[allInt] minReg=1 last>
Assigning related <V15/L13> to <V12/L11>
<RefPosition #479 @430 RefTypeDef <Ivl:13 V15> STORE_LCL_VAR BB10 regmask=[allInt] minReg=1 last>

DefList: {  }
N431 (  1,  1) [000093] ------------              *  LCL_VAR   ref    V15 tmp9         u:2 NA REG NA <l:$4c6, c:$2e9>

DefList: {  }
N433 (  1,  1) [000094] -c----------              *  CNS_INT   ref    null REG NA $VN.Null
Contained
DefList: {  }
N435 (  3,  3) [000095] J------N----              *  NE        void   REG NA <l:$24e, c:$24d>
<RefPosition #480 @435 RefTypeUse <Ivl:13 V15> LCL_VAR BB10 regmask=[allInt] minReg=1 last>

DefList: {  }
N437 (  5,  5) [000096] ------------              *  JTRUE     void   REG NA



CHECKING LAST USES for BB10, liveout={V01 V02 V03 V14 V15 V29}
==============================
use: {V01 V04 V10 V11}
def: {V05 V12 V14 V15 V23 V24}

NEW BLOCK BB11


Setting BB10 as the predecessor for determining incoming variable registers of BB11
<RefPosition #481 @439 RefTypeBB  BB11 regmask=[] minReg=1>

DefList: {  }
N441 (  2, 10) [000128] H-----------              *  CNS_INT(h) long   0xd1ffab1e token REG NA $192
Interval 110: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #482 @442 RefTypeDef <Ivl:110> CNS_INT BB11 regmask=[allInt] minReg=1>

DefList: { N441.t128. CNS_INT }
N443 (???,???) [000528] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #483 @443 RefTypeFixedReg <Reg:rcx>  BB11 regmask=[rcx] minReg=1>
<RefPosition #484 @443 RefTypeUse <Ivl:110>  BB11 regmask=[rcx] minReg=1 last fixed>
Interval 111: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #485 @444 RefTypeFixedReg <Reg:rcx>  BB11 regmask=[rcx] minReg=1>
<RefPosition #486 @444 RefTypeDef <Ivl:111> PUTARG_REG BB11 regmask=[rcx] minReg=1 fixed>

DefList: { N443.t528. PUTARG_REG }
N445 ( 16, 16) [000129] --C---------              *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG NA $1e4
<RefPosition #487 @445 RefTypeFixedReg <Reg:rcx>  BB11 regmask=[rcx] minReg=1>
<RefPosition #488 @445 RefTypeUse <Ivl:111>  BB11 regmask=[rcx] minReg=1 last fixed>
<RefPosition #489 @446 RefTypeKill <Reg:rax>  BB11 regmask=[rax] minReg=1>
<RefPosition #490 @446 RefTypeKill <Reg:rcx>  BB11 regmask=[rcx] minReg=1>
<RefPosition #491 @446 RefTypeKill <Reg:rdx>  BB11 regmask=[rdx] minReg=1>
<RefPosition #492 @446 RefTypeKill <Reg:r8 >  BB11 regmask=[r8] minReg=1>
<RefPosition #493 @446 RefTypeKill <Reg:r9 >  BB11 regmask=[r9] minReg=1>
<RefPosition #494 @446 RefTypeKill <Reg:r10>  BB11 regmask=[r10] minReg=1>
<RefPosition #495 @446 RefTypeKill <Reg:r11>  BB11 regmask=[r11] minReg=1>
Interval 112: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #496 @446 RefTypeFixedReg <Reg:rax>  BB11 regmask=[rax] minReg=1>
<RefPosition #497 @446 RefTypeDef <Ivl:112> CALL BB11 regmask=[rax] minReg=1 fixed>

DefList: { N445.t129. CALL }
N447 ( 16, 16) [000131] DA----------              *  STORE_LCL_VAR ref    V16 tmp10        d:2 NA REG NA
<RefPosition #498 @447 RefTypeUse <Ivl:112>  BB11 regmask=[allInt] minReg=1 last>
Assigning related <V16/L14> to <I112>
<RefPosition #499 @448 RefTypeDef <Ivl:14 V16> STORE_LCL_VAR BB11 regmask=[allInt] minReg=1 last>

DefList: {  }
N449 (  2, 10) [000399] I-----------              *  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] REG NA $188
Interval 113: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #500 @450 RefTypeDef <Ivl:113> CNS_INT BB11 regmask=[allInt] minReg=1>

DefList: { N449.t399. CNS_INT }
N451 (  4, 12) [000121] n---G-------              *  IND       ref    REG NA <l:$4c7, c:$2f0>
<RefPosition #501 @451 RefTypeUse <Ivl:113>  BB11 regmask=[allInt] minReg=1 last>
Interval 114: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #502 @452 RefTypeDef <Ivl:114> IND BB11 regmask=[allInt] minReg=1>

DefList: { N451.t121. IND }
N453 (  5, 13) [000305] DA--G-------              *  STORE_LCL_VAR ref    V25 tmp19        d:2 NA REG NA
<RefPosition #503 @453 RefTypeUse <Ivl:114>  BB11 regmask=[allInt] minReg=1 last>
Assigning related <V25/L22> to <I114>
<RefPosition #504 @454 RefTypeDef <Ivl:22 V25> STORE_LCL_VAR BB11 regmask=[allInt] minReg=1 last>

DefList: {  }
N455 (  1,  1) [000292] ------------              *  LCL_VAR   ref    V25 tmp19        u:2 NA REG NA <l:$4c7, c:$2f0>

DefList: {  }
N457 (  1,  1) [000293] -c----------              *  CNS_INT   ref    null REG NA $VN.Null
Contained
DefList: {  }
N459 (  3,  3) [000294] J------N----              *  EQ        void   REG NA <l:$250, c:$24f>
<RefPosition #505 @459 RefTypeUse <Ivl:22 V25> LCL_VAR BB11 regmask=[allInt] minReg=1 last>

DefList: {  }
N461 (  5,  5) [000295] ------------              *  JTRUE     void   REG NA



CHECKING LAST USES for BB11, liveout={V01 V02 V03 V14 V16 V25 V29}
==============================
use: {}
def: {V16 V25}

NEW BLOCK BB12


Setting BB11 as the predecessor for determining incoming variable registers of BB12
<RefPosition #506 @463 RefTypeBB  BB12 regmask=[] minReg=1>

DefList: {  }
N465 (  1,  1) [000132] ------------              *  LCL_VAR   ref    V16 tmp10        u:2 NA REG NA $1e4

DefList: {  }
N467 (  2,  2) [000401] ------------              *  LEA(b+8)  byref  REG NA
<RefPosition #507 @467 RefTypeUse <Ivl:14 V16> LCL_VAR BB12 regmask=[allInt] minReg=1 last>
Interval 115: byref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #508 @468 RefTypeDef <Ivl:115> LEA BB12 regmask=[allInt] minReg=1>

DefList: { N467.t401. LEA }
N469 (  1,  1) [000296] ------------              *  LCL_VAR   ref    V25 tmp19        u:2 NA (last use) REG NA <l:$4c7, c:$2f0>

DefList: { N467.t401. LEA }
N471 (???,???) [000482] -A--GO------              *  STOREIND  ref    REG NA
<RefPosition #509 @471 RefTypeFixedReg <Reg:rcx>  BB12 regmask=[rcx] minReg=1>
<RefPosition #510 @471 RefTypeUse <Ivl:115>  BB12 regmask=[rcx] minReg=1 last fixed>
<RefPosition #511 @471 RefTypeFixedReg <Reg:rdx>  BB12 regmask=[rdx] minReg=1>
<RefPosition #512 @471 RefTypeUse <Ivl:22 V25> LCL_VAR BB12 regmask=[rdx] minReg=1 last fixed>
<RefPosition #513 @472 RefTypeKill <Reg:rax>  BB12 regmask=[rax] minReg=1>
<RefPosition #514 @472 RefTypeKill <Reg:rcx>  BB12 regmask=[rcx] minReg=1>
<RefPosition #515 @472 RefTypeKill <Reg:rdx>  BB12 regmask=[rdx] minReg=1>
<RefPosition #516 @472 RefTypeKill <Reg:r8 >  BB12 regmask=[r8] minReg=1>
<RefPosition #517 @472 RefTypeKill <Reg:r9 >  BB12 regmask=[r9] minReg=1>
<RefPosition #518 @472 RefTypeKill <Reg:r10>  BB12 regmask=[r10] minReg=1>
<RefPosition #519 @472 RefTypeKill <Reg:r11>  BB12 regmask=[r11] minReg=1>
<RefPosition #520 @472 RefTypeKill <Reg:mm0>  BB12 regmask=[mm0] minReg=1>
<RefPosition #521 @472 RefTypeKill <Reg:mm1>  BB12 regmask=[mm1] minReg=1>
<RefPosition #522 @472 RefTypeKill <Reg:mm2>  BB12 regmask=[mm2] minReg=1>
<RefPosition #523 @472 RefTypeKill <Reg:mm3>  BB12 regmask=[mm3] minReg=1>
<RefPosition #524 @472 RefTypeKill <Reg:mm4>  BB12 regmask=[mm4] minReg=1>
<RefPosition #525 @472 RefTypeKill <Reg:mm5>  BB12 regmask=[mm5] minReg=1>

DefList: {  }
N473 (  1,  1) [000299] ------------              *  LCL_VAR   ref    V16 tmp10        u:2 NA REG NA $1e4

DefList: {  }
N475 (  2,  2) [000403] -c----------              *  LEA(b+24) byref  REG NA
Contained
DefList: {  }
N477 (  2, 10) [000127] H-----------              *  CNS_INT(h) long   0xd1ffab1e ftn REG NA $194
Interval 116: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #526 @478 RefTypeDef <Ivl:116> CNS_INT BB12 regmask=[allInt] minReg=1>

DefList: { N477.t127. CNS_INT }
N479 (???,???) [000483] -A--GO------              *  STOREIND  long   REG NA
<RefPosition #527 @479 RefTypeUse <Ivl:14 V16> LCL_VAR BB12 regmask=[allInt] minReg=1 last>
<RefPosition #528 @479 RefTypeUse <Ivl:116>  BB12 regmask=[allInt] minReg=1 last>

DefList: {  }
N481 (???,???) [000484] ------------              *  IL_OFFSET void   IL offset: 0x96 REG NA

DefList: {  }
N483 (  2, 10) [000406] I-----------              *  CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] REG NA $191
Interval 117: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #529 @484 RefTypeDef <Ivl:117> CNS_INT BB12 regmask=[allInt] minReg=1>

DefList: { N483.t406. CNS_INT }
N485 (  1,  1) [000135] ------------              *  LCL_VAR   ref    V16 tmp10        u:2 NA REG NA $1e4

DefList: { N483.t406. CNS_INT }
N487 (???,???) [000485] -A--G-------              *  STOREIND  ref    REG NA
<RefPosition #530 @487 RefTypeFixedReg <Reg:rcx>  BB12 regmask=[rcx] minReg=1>
<RefPosition #531 @487 RefTypeUse <Ivl:117>  BB12 regmask=[rcx] minReg=1 last fixed>
<RefPosition #532 @487 RefTypeFixedReg <Reg:rdx>  BB12 regmask=[rdx] minReg=1>
<RefPosition #533 @487 RefTypeUse <Ivl:14 V16> LCL_VAR BB12 regmask=[rdx] minReg=1 last fixed>
<RefPosition #534 @488 RefTypeKill <Reg:rax>  BB12 regmask=[rax] minReg=1>
<RefPosition #535 @488 RefTypeKill <Reg:rcx>  BB12 regmask=[rcx] minReg=1>
<RefPosition #536 @488 RefTypeKill <Reg:rdx>  BB12 regmask=[rdx] minReg=1>
<RefPosition #537 @488 RefTypeKill <Reg:r8 >  BB12 regmask=[r8] minReg=1>
<RefPosition #538 @488 RefTypeKill <Reg:r9 >  BB12 regmask=[r9] minReg=1>
<RefPosition #539 @488 RefTypeKill <Reg:r10>  BB12 regmask=[r10] minReg=1>
<RefPosition #540 @488 RefTypeKill <Reg:r11>  BB12 regmask=[r11] minReg=1>
<RefPosition #541 @488 RefTypeKill <Reg:mm0>  BB12 regmask=[mm0] minReg=1>
<RefPosition #542 @488 RefTypeKill <Reg:mm1>  BB12 regmask=[mm1] minReg=1>
<RefPosition #543 @488 RefTypeKill <Reg:mm2>  BB12 regmask=[mm2] minReg=1>
<RefPosition #544 @488 RefTypeKill <Reg:mm3>  BB12 regmask=[mm3] minReg=1>
<RefPosition #545 @488 RefTypeKill <Reg:mm4>  BB12 regmask=[mm4] minReg=1>
<RefPosition #546 @488 RefTypeKill <Reg:mm5>  BB12 regmask=[mm5] minReg=1>

DefList: {  }
N489 (  1,  1) [000134] ------------              *  LCL_VAR   ref    V16 tmp10        u:2 NA (last use) REG NA $1e4

DefList: {  }
N491 (  1,  3) [000148] DA----------              *  STORE_LCL_VAR ref    V15 tmp9         d:4 NA REG NA
<RefPosition #547 @491 RefTypeUse <Ivl:14 V16> LCL_VAR BB12 regmask=[allInt] minReg=1 last>
Assigning related <V15/L13> to <V16/L14>
<RefPosition #548 @492 RefTypeDef <Ivl:13 V15> STORE_LCL_VAR BB12 regmask=[allInt] minReg=1 last>



CHECKING LAST USES for BB12, liveout={V01 V02 V03 V14 V15 V29}
==============================
use: {V16 V25}
def: {V15}

NEW BLOCK BB13


Setting BB10 as the predecessor for determining incoming variable registers of BB13
<RefPosition #549 @493 RefTypeBB  BB13 regmask=[] minReg=1>

DefList: {  }
N495 (  1,  1) [000111] ------------              *  LCL_VAR   ref    V15 tmp9         u:3 NA (last use) REG NA $4ca

DefList: {  }
N497 (???,???) [000529] ------------              *  PUTARG_REG ref    REG r8
<RefPosition #550 @497 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #551 @497 RefTypeUse <Ivl:13 V15> LCL_VAR BB13 regmask=[r8] minReg=1 last fixed>
Interval 118: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #552 @498 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #553 @498 RefTypeDef <Ivl:118> PUTARG_REG BB13 regmask=[r8] minReg=1 fixed>

DefList: { N497.t529. PUTARG_REG }
N499 (  1,  1) [000110] ------------              *  LCL_VAR   ref    V14 tmp8         u:2 NA (last use) REG NA $2db

DefList: { N497.t529. PUTARG_REG }
N501 (???,???) [000530] ------------              *  PUTARG_REG ref    REG rdx
<RefPosition #554 @501 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #555 @501 RefTypeUse <Ivl:12 V14> LCL_VAR BB13 regmask=[rdx] minReg=1 last fixed>
Interval 119: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #556 @502 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #557 @502 RefTypeDef <Ivl:119> PUTARG_REG BB13 regmask=[rdx] minReg=1 fixed>

DefList: { N497.t529. PUTARG_REG; N501.t530. PUTARG_REG }
N503 (  2, 10) [000113] H-----------              *  CNS_INT(h) long   0xd1ffab1e method REG NA $196
Interval 120: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #558 @504 RefTypeDef <Ivl:120> CNS_INT BB13 regmask=[allInt] minReg=1>

DefList: { N497.t529. PUTARG_REG; N501.t530. PUTARG_REG; N503.t113. CNS_INT }
N505 (???,???) [000531] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #559 @505 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #560 @505 RefTypeUse <Ivl:120>  BB13 regmask=[rcx] minReg=1 last fixed>
Interval 121: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #561 @506 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #562 @506 RefTypeDef <Ivl:121> PUTARG_REG BB13 regmask=[rcx] minReg=1 fixed>

DefList: { N497.t529. PUTARG_REG; N501.t530. PUTARG_REG; N505.t531. PUTARG_REG }
N507 ( 18, 20) [000112] --CXG-------              *  CALL      ref    System.Linq.Enumerable.SelectMany REG NA $2f6
<RefPosition #563 @507 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #564 @507 RefTypeUse <Ivl:118>  BB13 regmask=[r8] minReg=1 last fixed>
<RefPosition #565 @507 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #566 @507 RefTypeUse <Ivl:119>  BB13 regmask=[rdx] minReg=1 last fixed>
<RefPosition #567 @507 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #568 @507 RefTypeUse <Ivl:121>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #569 @508 RefTypeKill <Reg:rax>  BB13 regmask=[rax] minReg=1>
<RefPosition #570 @508 RefTypeKill <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #571 @508 RefTypeKill <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #572 @508 RefTypeKill <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #573 @508 RefTypeKill <Reg:r9 >  BB13 regmask=[r9] minReg=1>
<RefPosition #574 @508 RefTypeKill <Reg:r10>  BB13 regmask=[r10] minReg=1>
<RefPosition #575 @508 RefTypeKill <Reg:r11>  BB13 regmask=[r11] minReg=1>
Interval 122: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #576 @508 RefTypeFixedReg <Reg:rax>  BB13 regmask=[rax] minReg=1>
<RefPosition #577 @508 RefTypeDef <Ivl:122> CALL BB13 regmask=[rax] minReg=1 fixed>

DefList: { N507.t112. CALL }
N509 ( 18, 20) [000313] DA-XG-------              *  STORE_LCL_VAR ref    V27 tmp21        d:2 NA REG NA
<RefPosition #578 @509 RefTypeUse <Ivl:122>  BB13 regmask=[allInt] minReg=1 last>
Assigning related <V27/L23> to <I122>
<RefPosition #579 @510 RefTypeDef <Ivl:23 V27> STORE_LCL_VAR BB13 regmask=[allInt] minReg=1 last>

DefList: {  }
N511 (  1,  1) [000308] ------------              *  LCL_VAR   ref    V01 loc0         u:2 NA REG NA $1c1

DefList: {  }
N513 (  2,  2) [000411] -c----------              *  LEA(b+16) byref  REG NA
Contained
DefList: {  }
N515 (  4,  4) [000309] n---GO------              *  IND       int    REG NA <l:$254, c:$253>
<RefPosition #580 @515 RefTypeUse <Ivl:1 V01> LCL_VAR BB13 regmask=[allInt] minReg=1 last>
Interval 123: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #581 @516 RefTypeDef <Ivl:123> IND BB13 regmask=[allInt] minReg=1>

DefList: { N515.t309. IND }
N517 (???,???) [000532] ----GO------              *  PUTARG_REG int    REG rdx
<RefPosition #582 @517 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #583 @517 RefTypeUse <Ivl:123>  BB13 regmask=[rdx] minReg=1 last fixed>
Interval 124: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #584 @518 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #585 @518 RefTypeDef <Ivl:124> PUTARG_REG BB13 regmask=[rdx] minReg=1 fixed>

DefList: { N517.t532. PUTARG_REG }
N519 (  1,  1) [000109] ------------              *  LCL_VAR   ref    V01 loc0         u:2 NA REG NA $1c1

DefList: { N517.t532. PUTARG_REG }
N521 (???,???) [000533] ------------              *  PUTARG_REG ref    REG rcx
<RefPosition #586 @521 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #587 @521 RefTypeUse <Ivl:1 V01> LCL_VAR BB13 regmask=[rcx] minReg=1 last fixed>
Setting putarg_reg as a pass-through of a non-last use lclVar
Interval 125: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #588 @522 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #589 @522 RefTypeDef <Ivl:125> PUTARG_REG BB13 regmask=[rcx] minReg=1 fixed>
Assigning related <V01/L1> to <I125>

DefList: { N517.t532. PUTARG_REG; N521.t533. PUTARG_REG }
N523 (  1,  1) [000310] ------------              *  LCL_VAR   ref    V27 tmp21        u:2 NA (last use) REG NA $2f6

DefList: { N517.t532. PUTARG_REG; N521.t533. PUTARG_REG }
N525 (???,???) [000534] ------------              *  PUTARG_REG ref    REG r8
<RefPosition #590 @525 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #591 @525 RefTypeUse <Ivl:23 V27> LCL_VAR BB13 regmask=[r8] minReg=1 last fixed>
Interval 126: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #592 @526 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #593 @526 RefTypeDef <Ivl:126> PUTARG_REG BB13 regmask=[r8] minReg=1 fixed>

DefList: { N517.t532. PUTARG_REG; N521.t533. PUTARG_REG; N525.t534. PUTARG_REG }
N527 ( 20, 15) [000311] --CXGO------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange REG NA $VN.Void
<RefPosition #594 @527 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #595 @527 RefTypeUse <Ivl:124>  BB13 regmask=[rdx] minReg=1 last fixed>
<RefPosition #596 @527 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #597 @527 RefTypeUse <Ivl:125>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #598 @527 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #599 @527 RefTypeUse <Ivl:126>  BB13 regmask=[r8] minReg=1 last fixed>
<RefPosition #600 @528 RefTypeKill <Reg:rax>  BB13 regmask=[rax] minReg=1>
<RefPosition #601 @528 RefTypeKill <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #602 @528 RefTypeKill <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #603 @528 RefTypeKill <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #604 @528 RefTypeKill <Reg:r9 >  BB13 regmask=[r9] minReg=1>
<RefPosition #605 @528 RefTypeKill <Reg:r10>  BB13 regmask=[r10] minReg=1>
<RefPosition #606 @528 RefTypeKill <Reg:r11>  BB13 regmask=[r11] minReg=1>



CHECKING LAST USES for BB13, liveout={V01 V02 V03 V29}
==============================
use: {V01 V14 V15}
def: {V27}

NEW BLOCK BB14


Setting BB04 as the predecessor for determining incoming variable registers of BB14
<RefPosition #607 @529 RefTypeBB  BB14 regmask=[] minReg=1>

DefList: {  }
N531 (???,???) [000486] ------------              *  IL_OFFSET void   IL offset: 0xa6 REG NA

DefList: {  }
N533 (  1,  1) [000116] ------------              *  LCL_VAR   int    V03 loc2         u:3 NA (last use) REG NA $280

DefList: {  }
N535 (  1,  1) [000117] -c----------              *  CNS_INT   int    1 REG NA $46
Contained
DefList: {  }
N537 (  3,  3) [000118] ------------              *  ADD       int    REG NA $269
<RefPosition #608 @537 RefTypeUse <Ivl:3 V03> LCL_VAR BB14 regmask=[allInt] minReg=1 last>
Interval 127: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #609 @538 RefTypeDef <Ivl:127> ADD BB14 regmask=[allInt] minReg=1>
Assigning related <I127> to <V03/L3>

DefList: { N537.t118. ADD }
N539 (  3,  3) [000120] DA----------              *  STORE_LCL_VAR int    V03 loc2         d:4 NA REG NA
<RefPosition #610 @539 RefTypeUse <Ivl:127>  BB14 regmask=[allInt] minReg=1 last>
Assigning related <V03/L3> to <I127>
<RefPosition #611 @540 RefTypeDef <Ivl:3 V03> STORE_LCL_VAR BB14 regmask=[allInt] minReg=1 last>

DefList: {  }
N541 (???,???) [000487] ------------              *  IL_OFFSET void   IL offset: 0xaa REG NA

DefList: {  }
N543 (  1,  1) [000456] ------------              *  LCL_VAR   int    V29 cse1         u:1 NA REG NA $200

DefList: {  }
N545 (  1,  1) [000023] ------------              *  LCL_VAR   int    V03 loc2         u:4 NA REG NA $269

DefList: {  }
N547 (  3,  3) [000026] J------N----              *  GT        void   REG NA $26b
<RefPosition #612 @547 RefTypeUse <Ivl:24 V29> LCL_VAR BB14 regmask=[allInt] minReg=1 last>
<RefPosition #613 @547 RefTypeUse <Ivl:3 V03> LCL_VAR BB14 regmask=[allInt] minReg=1 last>

DefList: {  }
N549 (  5,  5) [000027] ------------              *  JTRUE     void   REG NA

Exposed uses:<RefPosition #614 @551 RefTypeExpUse <Ivl:3 V03>  BB14 regmask=[allInt] minReg=1>
 V03<RefPosition #615 @551 RefTypeExpUse <Ivl:2 V02>  BB14 regmask=[allInt] minReg=1>
 V02<RefPosition #616 @551 RefTypeExpUse <Ivl:24 V29>  BB14 regmask=[allInt] minReg=1>
 V29


CHECKING LAST USES for BB14, liveout={V01 V02 V03 V29}
==============================
use: {V03 V29}
def: {V03}

NEW BLOCK BB15


Setting BB14 as the predecessor for determining incoming variable registers of BB15
<RefPosition #617 @551 RefTypeBB  BB15 regmask=[] minReg=1>

DefList: {  }
N553 (???,???) [000488] ------------              *  IL_OFFSET void   IL offset: 0xb3 REG NA

DefList: {  }
N555 (  1,  1) [000180] ------------              *  LCL_VAR   ref    V01 loc0         u:2 NA REG NA $1c1

DefList: {  }
N557 (???,???) [000535] ------------              *  PUTARG_REG ref    REG rdx
<RefPosition #618 @557 RefTypeFixedReg <Reg:rdx>  BB15 regmask=[rdx] minReg=1>
<RefPosition #619 @557 RefTypeUse <Ivl:1 V01> LCL_VAR BB15 regmask=[rdx] minReg=1 last fixed>
Setting putarg_reg as a pass-through of a non-last use lclVar
Interval 128: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #620 @558 RefTypeFixedReg <Reg:rdx>  BB15 regmask=[rdx] minReg=1>
<RefPosition #621 @558 RefTypeDef <Ivl:128> PUTARG_REG BB15 regmask=[rdx] minReg=1 fixed>
Assigning related <V01/L1> to <I128>

DefList: { N557.t535. PUTARG_REG }
N559 (  2, 10) [000182] H-----------              *  CNS_INT(h) long   0xd1ffab1e method REG NA $19c
Interval 129: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #622 @560 RefTypeDef <Ivl:129> CNS_INT BB15 regmask=[allInt] minReg=1>

DefList: { N557.t535. PUTARG_REG; N559.t182. CNS_INT }
N561 (???,???) [000536] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #623 @561 RefTypeFixedReg <Reg:rcx>  BB15 regmask=[rcx] minReg=1>
<RefPosition #624 @561 RefTypeUse <Ivl:129>  BB15 regmask=[rcx] minReg=1 last fixed>
Interval 130: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #625 @562 RefTypeFixedReg <Reg:rcx>  BB15 regmask=[rcx] minReg=1>
<RefPosition #626 @562 RefTypeDef <Ivl:130> PUTARG_REG BB15 regmask=[rcx] minReg=1 fixed>

DefList: { N557.t535. PUTARG_REG; N561.t536. PUTARG_REG }
N563 ( 17, 18) [000181] --CXG-------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle REG NA $VN.Void
<RefPosition #627 @563 RefTypeFixedReg <Reg:rdx>  BB15 regmask=[rdx] minReg=1>
<RefPosition #628 @563 RefTypeUse <Ivl:128>  BB15 regmask=[rdx] minReg=1 last fixed>
<RefPosition #629 @563 RefTypeFixedReg <Reg:rcx>  BB15 regmask=[rcx] minReg=1>
<RefPosition #630 @563 RefTypeUse <Ivl:130>  BB15 regmask=[rcx] minReg=1 last fixed>
<RefPosition #631 @564 RefTypeKill <Reg:rax>  BB15 regmask=[rax] minReg=1>
<RefPosition #632 @564 RefTypeKill <Reg:rcx>  BB15 regmask=[rcx] minReg=1>
<RefPosition #633 @564 RefTypeKill <Reg:rdx>  BB15 regmask=[rdx] minReg=1>
<RefPosition #634 @564 RefTypeKill <Reg:r8 >  BB15 regmask=[r8] minReg=1>
<RefPosition #635 @564 RefTypeKill <Reg:r9 >  BB15 regmask=[r9] minReg=1>
<RefPosition #636 @564 RefTypeKill <Reg:r10>  BB15 regmask=[r10] minReg=1>
<RefPosition #637 @564 RefTypeKill <Reg:r11>  BB15 regmask=[r11] minReg=1>

DefList: {  }
N565 (  2, 10) [000417] H-----------              *  CNS_INT(h) long   0xD1FFAB1E "Enumerated and shuffled the project paths." REG NA $19d
Interval 131: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #638 @566 RefTypeDef <Ivl:131> CNS_INT BB15 regmask=[allInt] minReg=1>

DefList: { N565.t417. CNS_INT }
N567 (  4, 12) [000418] #---G-------              *  IND       ref    REG NA $1f9
<RefPosition #639 @567 RefTypeUse <Ivl:131>  BB15 regmask=[allInt] minReg=1 last>
Interval 132: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #640 @568 RefTypeDef <Ivl:132> IND BB15 regmask=[allInt] minReg=1>

DefList: { N567.t418. IND }
N569 (???,???) [000537] ----G-------              *  PUTARG_REG ref    REG rdx
<RefPosition #641 @569 RefTypeFixedReg <Reg:rdx>  BB15 regmask=[rdx] minReg=1>
<RefPosition #642 @569 RefTypeUse <Ivl:132>  BB15 regmask=[rdx] minReg=1 last fixed>
Interval 133: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #643 @570 RefTypeFixedReg <Reg:rdx>  BB15 regmask=[rdx] minReg=1>
<RefPosition #644 @570 RefTypeDef <Ivl:133> PUTARG_REG BB15 regmask=[rdx] minReg=1 fixed>

DefList: { N569.t537. PUTARG_REG }
N571 (  2, 10) [000186] H-----------              *  CNS_INT(h) long   0xd1ffab1e method REG NA $181
Interval 134: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #645 @572 RefTypeDef <Ivl:134> CNS_INT BB15 regmask=[allInt] minReg=1>

DefList: { N569.t537. PUTARG_REG; N571.t186. CNS_INT }
N573 (???,???) [000538] ------------              *  PUTARG_REG long   REG rcx
<RefPosition #646 @573 RefTypeFixedReg <Reg:rcx>  BB15 regmask=[rcx] minReg=1>
<RefPosition #647 @573 RefTypeUse <Ivl:134>  BB15 regmask=[rcx] minReg=1 last fixed>
Interval 135: long RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #648 @574 RefTypeFixedReg <Reg:rcx>  BB15 regmask=[rcx] minReg=1>
<RefPosition #649 @574 RefTypeDef <Ivl:135> PUTARG_REG BB15 regmask=[rcx] minReg=1 fixed>

DefList: { N569.t537. PUTARG_REG; N573.t538. PUTARG_REG }
N575 (  1,  1) [000184] ------------              *  CNS_INT   int    2 REG NA $42
Interval 136: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #650 @576 RefTypeDef <Ivl:136> CNS_INT BB15 regmask=[allInt] minReg=1>

DefList: { N569.t537. PUTARG_REG; N573.t538. PUTARG_REG; N575.t184. CNS_INT }
N577 (???,???) [000539] ------------              *  PUTARG_REG int    REG r8
<RefPosition #651 @577 RefTypeFixedReg <Reg:r8 >  BB15 regmask=[r8] minReg=1>
<RefPosition #652 @577 RefTypeUse <Ivl:136>  BB15 regmask=[r8] minReg=1 last fixed>
Interval 137: int RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #653 @578 RefTypeFixedReg <Reg:r8 >  BB15 regmask=[r8] minReg=1>
<RefPosition #654 @578 RefTypeDef <Ivl:137> PUTARG_REG BB15 regmask=[r8] minReg=1 fixed>

DefList: { N569.t537. PUTARG_REG; N573.t538. PUTARG_REG; N577.t539. PUTARG_REG }
N579 ( 21, 31) [000185] --CXG-------              *  CALL      ref    SolutionAnalyzer.Logger.Log REG NA $10d
<RefPosition #655 @579 RefTypeFixedReg <Reg:rdx>  BB15 regmask=[rdx] minReg=1>
<RefPosition #656 @579 RefTypeUse <Ivl:133>  BB15 regmask=[rdx] minReg=1 last fixed>
<RefPosition #657 @579 RefTypeFixedReg <Reg:rcx>  BB15 regmask=[rcx] minReg=1>
<RefPosition #658 @579 RefTypeUse <Ivl:135>  BB15 regmask=[rcx] minReg=1 last fixed>
<RefPosition #659 @579 RefTypeFixedReg <Reg:r8 >  BB15 regmask=[r8] minReg=1>
<RefPosition #660 @579 RefTypeUse <Ivl:137>  BB15 regmask=[r8] minReg=1 last fixed>
<RefPosition #661 @580 RefTypeKill <Reg:rax>  BB15 regmask=[rax] minReg=1>
<RefPosition #662 @580 RefTypeKill <Reg:rcx>  BB15 regmask=[rcx] minReg=1>
<RefPosition #663 @580 RefTypeKill <Reg:rdx>  BB15 regmask=[rdx] minReg=1>
<RefPosition #664 @580 RefTypeKill <Reg:r8 >  BB15 regmask=[r8] minReg=1>
<RefPosition #665 @580 RefTypeKill <Reg:r9 >  BB15 regmask=[r9] minReg=1>
<RefPosition #666 @580 RefTypeKill <Reg:r10>  BB15 regmask=[r10] minReg=1>
<RefPosition #667 @580 RefTypeKill <Reg:r11>  BB15 regmask=[r11] minReg=1>
Interval 138: ref RefPositions {} physReg:NA Preferences=[allInt]
<RefPosition #668 @580 RefTypeFixedReg <Reg:rax>  BB15 regmask=[rax] minReg=1>
<RefPosition #669 @580 RefTypeDef <Ivl:138> CALL BB15 regmask=[rax] minReg=1 fixed>

DefList: {  }
N581 (???,???) [000489] ------------              *  IL_OFFSET void   IL offset: 0xc5 REG NA

DefList: {  }
N583 (  1,  1) [000190] ------------              *  LCL_VAR   ref    V01 loc0         u:2 NA (last use) REG NA $1c1

DefList: {  }
N585 (  2,  2) [000191] ------------              *  RETURN    ref    REG NA $10f
<RefPosition #670 @585 RefTypeFixedReg <Reg:rax>  BB15 regmask=[rax] minReg=1>
<RefPosition #671 @585 RefTypeUse <Ivl:1 V01> LCL_VAR BB15 regmask=[rax] minReg=1 last fixed>



CHECKING LAST USES for BB15, liveout={}
==============================
use: {V01}
def: {}

NEW BLOCK BB16


Setting BB08 as the predecessor for determining incoming variable registers of BB16
<RefPosition #672 @587 RefTypeBB  BB16 regmask=[] minReg=1>

firstColdLoc = 589
DefList: {  }
N589 ( 14,  5) [000303] --CXG-------              *  CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance REG NA $VN.Void
<RefPosition #673 @590 RefTypeKill <Reg:rax>  BB16 regmask=[rax] minReg=1>
<RefPosition #674 @590 RefTypeKill <Reg:rcx>  BB16 regmask=[rcx] minReg=1>
<RefPosition #675 @590 RefTypeKill <Reg:rdx>  BB16 regmask=[rdx] minReg=1>
<RefPosition #676 @590 RefTypeKill <Reg:r8 >  BB16 regmask=[r8] minReg=1>
<RefPosition #677 @590 RefTypeKill <Reg:r9 >  BB16 regmask=[r9] minReg=1>
<RefPosition #678 @590 RefTypeKill <Reg:r10>  BB16 regmask=[r10] minReg=1>
<RefPosition #679 @590 RefTypeKill <Reg:r11>  BB16 regmask=[r11] minReg=1>



CHECKING LAST USES for BB16, liveout={}
==============================
use: {}
def: {}

Linear scan intervals BEFORE VALIDATING INTERVALS:
Interval  0: (V00) ref RefPositions {#0@0 #74@49} physReg:rcx Preferences=[rbx rbp rsi rdi r12-r15] RelatedInterval <V02/L2>
Interval  1: (V01) ref RefPositions {#73@44 #126@137 #127@145 #131@155 #140@187 #169@211 #444@401 #451@407 #580@515 #587@521 #619@557 #671@585} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  2: (V02) ref RefPositions {#75@50 #79@63 #87@87 #615@551} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  3: (V03) int RefPositions {#78@56 #85@83 #608@537 #611@540 #613@547 #614@551} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15] RelatedInterval <I127>
Interval  4: (V04) ref RefPositions {#91@90 #92@95 #101@105 #151@201 #173@215 #214@239 #413@383} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  5: (V05) ref RefPositions {#376@356 #476@425} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15] RelatedInterval <V14/L12>
Interval  6: (V07) ref RefPositions {#51@28 #53@31 #72@43} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15] RelatedInterval <V01/L1>
Interval  7: (V08) ref RefPositions {#272@268 #275@275} physReg:NA Preferences=[allInt] RelatedInterval <V11/L10>
Interval  8: (V09) ref RefPositions {#244@252 #273@271} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15] RelatedInterval <V10/L9>
Interval  9: (V10) ref RefPositions {#274@272 #352@347} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval 10: (V11) ref RefPositions {#276@276 #277@281 #345@338 #348@343} physReg:NA Preferences=[r8]
Interval 11: (V12) ref RefPositions {#475@422 #478@429} physReg:NA Preferences=[allInt] RelatedInterval <V15/L13>
Interval 12: (V14) ref RefPositions {#477@426 #555@501} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval 13: (V15) ref RefPositions {#479@430 #480@435 #548@492 #551@497} physReg:NA Preferences=[r8]
Interval 14: (V16) ref RefPositions {#499@448 #507@467 #527@479 #533@487 #547@491} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15] RelatedInterval <V15/L13>
Interval 15: (V17) ref RefPositions {#296@294 #304@313 #324@325 #330@333 #344@337} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15] RelatedInterval <V11/L10>
Interval 16: (V18) ref RefPositions {#130@148 #135@169 #143@193} physReg:NA Preferences=[rcx]
Interval 17: (V19) int RefPositions {#134@158 #136@169 #138@181 #147@197} physReg:NA Preferences=[rdx]
Interval 18: (V20) ref RefPositions {#205@230 #218@243} physReg:NA Preferences=[r9]
Interval 19: (V21) ref RefPositions {#301@300 #302@305 #309@317} physReg:NA Preferences=[rdx]
Interval 20: (V23) ref RefPositions {#404@374 #417@387} physReg:NA Preferences=[r9]
Interval 21: (V24) ref RefPositions {#443@396 #455@411} physReg:NA Preferences=[r8]
Interval 22: (V25) ref RefPositions {#504@454 #505@459 #512@471} physReg:NA Preferences=[rdx]
Interval 23: (V27) ref RefPositions {#579@510 #591@525} physReg:NA Preferences=[r8]
Interval 24: (V29) int RefPositions {#82@66 #83@71 #612@547 #616@551} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval 25: long (constant) RefPositions {#2@4 #3@5} physReg:NA Preferences=[allInt]
Interval 26: ref RefPositions {#4@6 #6@7} physReg:NA Preferences=[rdx]
Interval 27: ref RefPositions {#8@8 #20@17} physReg:NA Preferences=[rdx]
Interval 28: long (constant) RefPositions {#9@10 #11@11} physReg:NA Preferences=[rcx]
Interval 29: long RefPositions {#13@12 #22@17} physReg:NA Preferences=[rcx]
Interval 30: int (constant) RefPositions {#14@14 #16@15} physReg:NA Preferences=[r8]
Interval 31: int RefPositions {#18@16 #24@17} physReg:NA Preferences=[r8]
Interval 32: ref RefPositions {#33@18} physReg:NA Preferences=[rax]
Interval 33: long (constant) RefPositions {#34@22 #36@23} physReg:NA Preferences=[rcx]
Interval 34: long RefPositions {#38@24 #40@25} physReg:NA Preferences=[rcx]
Interval 35: ref RefPositions {#49@26 #50@27} physReg:NA Preferences=[rax] RelatedInterval <V07/L6>
Interval 36: ref (specialPutArg) RefPositions {#55@32 #62@37} physReg:NA Preferences=[rcx] RelatedInterval <V07/L6>
Interval 37: int (constant) RefPositions {#56@34 #58@35} physReg:NA Preferences=[rdx]
Interval 38: int RefPositions {#60@36 #64@37} physReg:NA Preferences=[rdx]
Interval 39: int (constant) RefPositions {#76@54 #77@55} physReg:NA Preferences=[allInt] RelatedInterval <V03/L3>
Interval 40: int RefPositions {#80@64 #81@65} physReg:NA Preferences=[allInt] RelatedInterval <V29/L24>
Interval 41: long RefPositions {#86@84 #88@87} physReg:NA Preferences=[allInt]
Interval 42: ref RefPositions {#89@88 #90@89} physReg:NA Preferences=[allInt] RelatedInterval <V04/L4>
Interval 43: long (constant) RefPositions {#93@98 #94@99} physReg:NA Preferences=[allInt]
Interval 44: ref RefPositions {#95@100 #97@101} physReg:NA Preferences=[rdx]
Interval 45: ref RefPositions {#99@102 #110@111} physReg:NA Preferences=[rdx]
Interval 46: ref (specialPutArg) RefPositions {#103@106 #112@111} physReg:NA Preferences=[rcx] RelatedInterval <V04/L4>
Interval 47: int (constant) RefPositions {#104@108 #106@109} physReg:NA Preferences=[r8]
Interval 48: int RefPositions {#108@110 #114@111} physReg:NA Preferences=[r8]
Interval 49: int RefPositions {#123@112 #124@115} physReg:NA Preferences=[rax]
Interval 50: ref RefPositions {#128@146 #129@147} physReg:NA Preferences=[allInt] RelatedInterval <V18/L16>
Interval 51: int RefPositions {#132@156 #133@157} physReg:NA Preferences=[allInt] RelatedInterval <V19/L17>
Interval 52: int RefPositions {#139@182 #141@187} physReg:NA Preferences=[allInt]
Interval 53: ref RefPositions {#145@194 #155@203} physReg:NA Preferences=[rcx]
Interval 54: int RefPositions {#149@198 #157@203} physReg:NA Preferences=[rdx]
Interval 55: ref RefPositions {#153@202 #159@203} physReg:NA Preferences=[r8]
Interval 56: ref (specialPutArg) RefPositions {#171@212 #177@217} physReg:NA Preferences=[rcx] RelatedInterval <V01/L1>
Interval 57: ref RefPositions {#175@216 #179@217} physReg:NA Preferences=[rdx]
Interval 58: int (constant) RefPositions {#188@224 #190@225} physReg:NA Preferences=[rcx]
Interval 59: int RefPositions {#192@226 #194@227} physReg:NA Preferences=[rcx]
Interval 60: ref RefPositions {#203@228 #204@229} physReg:NA Preferences=[rax] RelatedInterval <V20/L18>
Interval 61: long (constant) RefPositions {#206@232 #207@233} physReg:NA Preferences=[allInt]
Interval 62: ref RefPositions {#208@234 #210@235} physReg:NA Preferences=[rdx]
Interval 63: ref RefPositions {#212@236 #227@249} physReg:NA Preferences=[rdx]
Interval 64: ref (specialPutArg) RefPositions {#216@240 #229@249} physReg:NA Preferences=[rcx] RelatedInterval <V04/L4>
Interval 65: ref RefPositions {#220@244 #231@249} physReg:NA Preferences=[r9]
Interval 66: int (constant) RefPositions {#221@246 #223@247} physReg:NA Preferences=[r8]
Interval 67: int RefPositions {#225@248 #233@249} physReg:NA Preferences=[r8]
Interval 68: ref RefPositions {#242@250 #243@251} physReg:NA Preferences=[rax] RelatedInterval <V09/L8>
Interval 69: long (constant) RefPositions {#245@254 #247@255} physReg:NA Preferences=[rcx]
Interval 70: long RefPositions {#249@256 #256@261} physReg:NA Preferences=[rcx]
Interval 71: int (constant) RefPositions {#250@258 #252@259} physReg:NA Preferences=[rdx]
Interval 72: int RefPositions {#254@260 #258@261} physReg:NA Preferences=[rdx]
Interval 73: long RefPositions {#267@262} physReg:NA Preferences=[rax]
Interval 74: long (constant) RefPositions {#268@264 #269@265} physReg:NA Preferences=[allInt]
Interval 75: ref RefPositions {#270@266 #271@267} physReg:NA Preferences=[allInt] RelatedInterval <V08/L7>
Interval 76: long (constant) RefPositions {#279@288 #281@289} physReg:NA Preferences=[rcx]
Interval 77: long RefPositions {#283@290 #285@291} physReg:NA Preferences=[rcx]
Interval 78: ref RefPositions {#294@292 #295@293} physReg:NA Preferences=[rax] RelatedInterval <V17/L15>
Interval 79: long (constant) RefPositions {#297@296 #298@297} physReg:NA Preferences=[allInt]
Interval 80: ref RefPositions {#299@298 #300@299} physReg:NA Preferences=[allInt] RelatedInterval <V21/L19>
Interval 81: byref RefPositions {#305@314 #307@317} physReg:NA Preferences=[rcx]
Interval 82: long (constant) RefPositions {#323@324 #325@325} physReg:NA Preferences=[allInt]
Interval 83: long (constant) RefPositions {#326@330 #328@333} physReg:NA Preferences=[rcx]
Interval 84: ref RefPositions {#350@344 #361@353} physReg:NA Preferences=[r8]
Interval 85: ref RefPositions {#354@348 #363@353} physReg:NA Preferences=[rdx]
Interval 86: long (constant) RefPositions {#355@350 #357@351} physReg:NA Preferences=[rcx]
Interval 87: long RefPositions {#359@352 #365@353} physReg:NA Preferences=[rcx]
Interval 88: ref RefPositions {#374@354 #375@355} physReg:NA Preferences=[rax] RelatedInterval <V05/L5>
Interval 89: long (constant) RefPositions {#377@360 #379@361} physReg:NA Preferences=[rcx]
Interval 90: long RefPositions {#381@362 #388@367} physReg:NA Preferences=[rcx]
Interval 91: int (constant) RefPositions {#382@364 #384@365} physReg:NA Preferences=[rdx]
Interval 92: int RefPositions {#386@366 #390@367} physReg:NA Preferences=[rdx]
Interval 93: long RefPositions {#399@368} physReg:NA Preferences=[rax]
Interval 94: long (constant) RefPositions {#400@370 #401@371} physReg:NA Preferences=[allInt]
Interval 95: ref RefPositions {#402@372 #403@373} physReg:NA Preferences=[allInt] RelatedInterval <V23/L20>
Interval 96: long (constant) RefPositions {#405@376 #406@377} physReg:NA Preferences=[allInt]
Interval 97: ref RefPositions {#407@378 #409@379} physReg:NA Preferences=[rdx]
Interval 98: ref RefPositions {#411@380 #426@393} physReg:NA Preferences=[rdx]
Interval 99: ref RefPositions {#415@384 #428@393} physReg:NA Preferences=[rcx]
Interval 100: ref RefPositions {#419@388 #430@393} physReg:NA Preferences=[r9]
Interval 101: int (constant) RefPositions {#420@390 #422@391} physReg:NA Preferences=[r8]
Interval 102: int RefPositions {#424@392 #432@393} physReg:NA Preferences=[r8]
Interval 103: ref RefPositions {#441@394 #442@395} physReg:NA Preferences=[rax] RelatedInterval <V24/L21>
Interval 104: int RefPositions {#445@402 #447@403} physReg:NA Preferences=[rdx]
Interval 105: int RefPositions {#449@404 #459@413} physReg:NA Preferences=[rdx]
Interval 106: ref (specialPutArg) RefPositions {#453@408 #461@413} physReg:NA Preferences=[rcx] RelatedInterval <V01/L1>
Interval 107: ref RefPositions {#457@412 #463@413} physReg:NA Preferences=[r8]
Interval 108: long (constant) RefPositions {#471@418 #472@419} physReg:NA Preferences=[allInt]
Interval 109: ref RefPositions {#473@420 #474@421} physReg:NA Preferences=[allInt] RelatedInterval <V12/L11>
Interval 110: long (constant) RefPositions {#482@442 #484@443} physReg:NA Preferences=[rcx]
Interval 111: long RefPositions {#486@444 #488@445} physReg:NA Preferences=[rcx]
Interval 112: ref RefPositions {#497@446 #498@447} physReg:NA Preferences=[rax] RelatedInterval <V16/L14>
Interval 113: long (constant) RefPositions {#500@450 #501@451} physReg:NA Preferences=[allInt]
Interval 114: ref RefPositions {#502@452 #503@453} physReg:NA Preferences=[allInt] RelatedInterval <V25/L22>
Interval 115: byref RefPositions {#508@468 #510@471} physReg:NA Preferences=[rcx]
Interval 116: long (constant) RefPositions {#526@478 #528@479} physReg:NA Preferences=[allInt]
Interval 117: long (constant) RefPositions {#529@484 #531@487} physReg:NA Preferences=[rcx]
Interval 118: ref RefPositions {#553@498 #564@507} physReg:NA Preferences=[r8]
Interval 119: ref RefPositions {#557@502 #566@507} physReg:NA Preferences=[rdx]
Interval 120: long (constant) RefPositions {#558@504 #560@505} physReg:NA Preferences=[rcx]
Interval 121: long RefPositions {#562@506 #568@507} physReg:NA Preferences=[rcx]
Interval 122: ref RefPositions {#577@508 #578@509} physReg:NA Preferences=[rax] RelatedInterval <V27/L23>
Interval 123: int RefPositions {#581@516 #583@517} physReg:NA Preferences=[rdx]
Interval 124: int RefPositions {#585@518 #595@527} physReg:NA Preferences=[rdx]
Interval 125: ref (specialPutArg) RefPositions {#589@522 #597@527} physReg:NA Preferences=[rcx] RelatedInterval <V01/L1>
Interval 126: ref RefPositions {#593@526 #599@527} physReg:NA Preferences=[r8]
Interval 127: int RefPositions {#609@538 #610@539} physReg:NA Preferences=[allInt] RelatedInterval <V03/L3>
Interval 128: ref (specialPutArg) RefPositions {#621@558 #628@563} physReg:NA Preferences=[rdx] RelatedInterval <V01/L1>
Interval 129: long (constant) RefPositions {#622@560 #624@561} physReg:NA Preferences=[rcx]
Interval 130: long RefPositions {#626@562 #630@563} physReg:NA Preferences=[rcx]
Interval 131: long (constant) RefPositions {#638@566 #639@567} physReg:NA Preferences=[allInt]
Interval 132: ref RefPositions {#640@568 #642@569} physReg:NA Preferences=[rdx]
Interval 133: ref RefPositions {#644@570 #656@579} physReg:NA Preferences=[rdx]
Interval 134: long (constant) RefPositions {#645@572 #647@573} physReg:NA Preferences=[rcx]
Interval 135: long RefPositions {#649@574 #658@579} physReg:NA Preferences=[rcx]
Interval 136: int (constant) RefPositions {#650@576 #652@577} physReg:NA Preferences=[r8]
Interval 137: int RefPositions {#654@578 #660@579} physReg:NA Preferences=[r8]
Interval 138: ref RefPositions {#669@580} physReg:NA Preferences=[rax]

------------
REFPOSITIONS BEFORE VALIDATING INTERVALS: 
------------
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00>  BB00 regmask=[rcx] minReg=1 fixed regOptional>
<RefPosition #1   @1   RefTypeBB  BB01 regmask=[] minReg=1>
<RefPosition #2   @4   RefTypeDef <Ivl:25> CNS_INT BB01 regmask=[allInt] minReg=1>
<RefPosition #3   @5   RefTypeUse <Ivl:25>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #4   @6   RefTypeDef <Ivl:26> IND BB01 regmask=[rdx] minReg=1>
<RefPosition #5   @7   RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #6   @7   RefTypeUse <Ivl:26>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #7   @8   RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #8   @8   RefTypeDef <Ivl:27> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>
<RefPosition #9   @10  RefTypeDef <Ivl:28> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #10  @11  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #11  @11  RefTypeUse <Ivl:28>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #12  @12  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #13  @12  RefTypeDef <Ivl:29> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #14  @14  RefTypeDef <Ivl:30> CNS_INT BB01 regmask=[r8] minReg=1>
<RefPosition #15  @15  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #16  @15  RefTypeUse <Ivl:30>  BB01 regmask=[r8] minReg=1 last fixed>
<RefPosition #17  @16  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #18  @16  RefTypeDef <Ivl:31> PUTARG_REG BB01 regmask=[r8] minReg=1 fixed>
<RefPosition #19  @17  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #20  @17  RefTypeUse <Ivl:27>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #21  @17  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #22  @17  RefTypeUse <Ivl:29>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #23  @17  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #24  @17  RefTypeUse <Ivl:31>  BB01 regmask=[r8] minReg=1 last fixed>
<RefPosition #25  @18  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #26  @18  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #27  @18  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #28  @18  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #29  @18  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #30  @18  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #31  @18  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #32  @18  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #33  @18  RefTypeDef <Ivl:32> CALL BB01 regmask=[rax] minReg=1 last fixed local>
<RefPosition #34  @22  RefTypeDef <Ivl:33> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #35  @23  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #36  @23  RefTypeUse <Ivl:33>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #37  @24  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #38  @24  RefTypeDef <Ivl:34> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #39  @25  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #40  @25  RefTypeUse <Ivl:34>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #41  @26  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #42  @26  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #43  @26  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #44  @26  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #45  @26  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #46  @26  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #47  @26  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #48  @26  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #49  @26  RefTypeDef <Ivl:35> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #50  @27  RefTypeUse <Ivl:35>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #51  @28  RefTypeDef <Ivl:6 V07> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #52  @31  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #53  @31  RefTypeUse <Ivl:6 V07> LCL_VAR BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #54  @32  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #55  @32  RefTypeDef <Ivl:36> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #56  @34  RefTypeDef <Ivl:37> CNS_INT BB01 regmask=[rdx] minReg=1>
<RefPosition #57  @35  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #58  @35  RefTypeUse <Ivl:37>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #59  @36  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #60  @36  RefTypeDef <Ivl:38> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>
<RefPosition #61  @37  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #62  @37  RefTypeUse <Ivl:36>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #63  @37  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #64  @37  RefTypeUse <Ivl:38>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #65  @38  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #66  @38  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #67  @38  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #68  @38  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #69  @38  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #70  @38  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #71  @38  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #72  @43  RefTypeUse <Ivl:6 V07> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #73  @44  RefTypeDef <Ivl:1 V01> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #74  @49  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #75  @50  RefTypeDef <Ivl:2 V02> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #76  @54  RefTypeDef <Ivl:39> CNS_INT BB01 regmask=[allInt] minReg=1>
<RefPosition #77  @55  RefTypeUse <Ivl:39>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #78  @56  RefTypeDef <Ivl:3 V03> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #79  @63  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #80  @64  RefTypeDef <Ivl:40> IND BB01 regmask=[allInt] minReg=1>
<RefPosition #81  @65  RefTypeUse <Ivl:40>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #82  @66  RefTypeDef <Ivl:24 V29> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #83  @71  RefTypeUse <Ivl:24 V29> LCL_VAR BB01 regmask=[allInt] minReg=1 regOptional>
<RefPosition #84  @75  RefTypeBB  BB02 regmask=[] minReg=1>
<RefPosition #85  @83  RefTypeUse <Ivl:3 V03> LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #86  @84  RefTypeDef <Ivl:41> CAST BB02 regmask=[allInt] minReg=1>
<RefPosition #87  @87  RefTypeUse <Ivl:2 V02> LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #88  @87  RefTypeUse <Ivl:41>  BB02 regmask=[allInt] minReg=1 last>
<RefPosition #89  @88  RefTypeDef <Ivl:42> IND BB02 regmask=[allInt] minReg=1>
<RefPosition #90  @89  RefTypeUse <Ivl:42>  BB02 regmask=[allInt] minReg=1 last>
<RefPosition #91  @90  RefTypeDef <Ivl:4 V04> STORE_LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #92  @95  RefTypeUse <Ivl:4 V04> LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #93  @98  RefTypeDef <Ivl:43> CNS_INT BB02 regmask=[allInt] minReg=1>
<RefPosition #94  @99  RefTypeUse <Ivl:43>  BB02 regmask=[allInt] minReg=1 last>
<RefPosition #95  @100 RefTypeDef <Ivl:44> IND BB02 regmask=[rdx] minReg=1>
<RefPosition #96  @101 RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #97  @101 RefTypeUse <Ivl:44>  BB02 regmask=[rdx] minReg=1 last fixed>
<RefPosition #98  @102 RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #99  @102 RefTypeDef <Ivl:45> PUTARG_REG BB02 regmask=[rdx] minReg=1 fixed>
<RefPosition #100 @105 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #101 @105 RefTypeUse <Ivl:4 V04> LCL_VAR BB02 regmask=[rcx] minReg=1 fixed>
<RefPosition #102 @106 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #103 @106 RefTypeDef <Ivl:46> PUTARG_REG BB02 regmask=[rcx] minReg=1 fixed>
<RefPosition #104 @108 RefTypeDef <Ivl:47> CNS_INT BB02 regmask=[r8] minReg=1>
<RefPosition #105 @109 RefTypeFixedReg <Reg:r8 >  BB02 regmask=[r8] minReg=1>
<RefPosition #106 @109 RefTypeUse <Ivl:47>  BB02 regmask=[r8] minReg=1 last fixed>
<RefPosition #107 @110 RefTypeFixedReg <Reg:r8 >  BB02 regmask=[r8] minReg=1>
<RefPosition #108 @110 RefTypeDef <Ivl:48> PUTARG_REG BB02 regmask=[r8] minReg=1 fixed>
<RefPosition #109 @111 RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #110 @111 RefTypeUse <Ivl:45>  BB02 regmask=[rdx] minReg=1 last fixed>
<RefPosition #111 @111 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #112 @111 RefTypeUse <Ivl:46>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #113 @111 RefTypeFixedReg <Reg:r8 >  BB02 regmask=[r8] minReg=1>
<RefPosition #114 @111 RefTypeUse <Ivl:48>  BB02 regmask=[r8] minReg=1 last fixed>
<RefPosition #115 @112 RefTypeKill <Reg:rax>  BB02 regmask=[rax] minReg=1 last>
<RefPosition #116 @112 RefTypeKill <Reg:rcx>  BB02 regmask=[rcx] minReg=1 last>
<RefPosition #117 @112 RefTypeKill <Reg:rdx>  BB02 regmask=[rdx] minReg=1 last>
<RefPosition #118 @112 RefTypeKill <Reg:r8 >  BB02 regmask=[r8] minReg=1 last>
<RefPosition #119 @112 RefTypeKill <Reg:r9 >  BB02 regmask=[r9] minReg=1 last>
<RefPosition #120 @112 RefTypeKill <Reg:r10>  BB02 regmask=[r10] minReg=1 last>
<RefPosition #121 @112 RefTypeKill <Reg:r11>  BB02 regmask=[r11] minReg=1 last>
<RefPosition #122 @112 RefTypeFixedReg <Reg:rax>  BB02 regmask=[rax] minReg=1>
<RefPosition #123 @112 RefTypeDef <Ivl:49> CALL BB02 regmask=[rax] minReg=1 fixed>
<RefPosition #124 @115 RefTypeUse <Ivl:49>  BB02 regmask=[allInt] minReg=1 last regOptional>
<RefPosition #125 @119 RefTypeBB  BB03 regmask=[] minReg=1>
<RefPosition #126 @137 RefTypeUse <Ivl:1 V01> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #127 @145 RefTypeUse <Ivl:1 V01> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #128 @146 RefTypeDef <Ivl:50> IND BB03 regmask=[allInt] minReg=1>
<RefPosition #129 @147 RefTypeUse <Ivl:50>  BB03 regmask=[allInt] minReg=1 last>
<RefPosition #130 @148 RefTypeDef <Ivl:16 V18> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #131 @155 RefTypeUse <Ivl:1 V01> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #132 @156 RefTypeDef <Ivl:51> IND BB03 regmask=[allInt] minReg=1>
<RefPosition #133 @157 RefTypeUse <Ivl:51>  BB03 regmask=[allInt] minReg=1 last>
<RefPosition #134 @158 RefTypeDef <Ivl:17 V19> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #135 @169 RefTypeUse <Ivl:16 V18> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #136 @169 RefTypeUse <Ivl:17 V19> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #137 @173 RefTypeBB  BB04 regmask=[] minReg=1>
<RefPosition #138 @181 RefTypeUse <Ivl:17 V19> LCL_VAR BB04 regmask=[allInt] minReg=1>
<RefPosition #139 @182 RefTypeDef <Ivl:52> ADD BB04 regmask=[allInt] minReg=1>
<RefPosition #140 @187 RefTypeUse <Ivl:1 V01> LCL_VAR BB04 regmask=[allInt] minReg=1>
<RefPosition #141 @187 RefTypeUse <Ivl:52>  BB04 regmask=[allInt] minReg=1 last>
<RefPosition #142 @193 RefTypeFixedReg <Reg:rcx>  BB04 regmask=[rcx] minReg=1>
<RefPosition #143 @193 RefTypeUse <Ivl:16 V18> LCL_VAR BB04 regmask=[rcx] minReg=1 last fixed>
<RefPosition #144 @194 RefTypeFixedReg <Reg:rcx>  BB04 regmask=[rcx] minReg=1>
<RefPosition #145 @194 RefTypeDef <Ivl:53> PUTARG_REG BB04 regmask=[rcx] minReg=1 fixed>
<RefPosition #146 @197 RefTypeFixedReg <Reg:rdx>  BB04 regmask=[rdx] minReg=1>
<RefPosition #147 @197 RefTypeUse <Ivl:17 V19> LCL_VAR BB04 regmask=[rdx] minReg=1 last fixed>
<RefPosition #148 @198 RefTypeFixedReg <Reg:rdx>  BB04 regmask=[rdx] minReg=1>
<RefPosition #149 @198 RefTypeDef <Ivl:54> PUTARG_REG BB04 regmask=[rdx] minReg=1 fixed>
<RefPosition #150 @201 RefTypeFixedReg <Reg:r8 >  BB04 regmask=[r8] minReg=1>
<RefPosition #151 @201 RefTypeUse <Ivl:4 V04> LCL_VAR BB04 regmask=[r8] minReg=1 last fixed>
<RefPosition #152 @202 RefTypeFixedReg <Reg:r8 >  BB04 regmask=[r8] minReg=1>
<RefPosition #153 @202 RefTypeDef <Ivl:55> PUTARG_REG BB04 regmask=[r8] minReg=1 fixed>
<RefPosition #154 @203 RefTypeFixedReg <Reg:rcx>  BB04 regmask=[rcx] minReg=1>
<RefPosition #155 @203 RefTypeUse <Ivl:53>  BB04 regmask=[rcx] minReg=1 last fixed>
<RefPosition #156 @203 RefTypeFixedReg <Reg:rdx>  BB04 regmask=[rdx] minReg=1>
<RefPosition #157 @203 RefTypeUse <Ivl:54>  BB04 regmask=[rdx] minReg=1 last fixed>
<RefPosition #158 @203 RefTypeFixedReg <Reg:r8 >  BB04 regmask=[r8] minReg=1>
<RefPosition #159 @203 RefTypeUse <Ivl:55>  BB04 regmask=[r8] minReg=1 last fixed>
<RefPosition #160 @204 RefTypeKill <Reg:rax>  BB04 regmask=[rax] minReg=1 last>
<RefPosition #161 @204 RefTypeKill <Reg:rcx>  BB04 regmask=[rcx] minReg=1 last>
<RefPosition #162 @204 RefTypeKill <Reg:rdx>  BB04 regmask=[rdx] minReg=1 last>
<RefPosition #163 @204 RefTypeKill <Reg:r8 >  BB04 regmask=[r8] minReg=1 last>
<RefPosition #164 @204 RefTypeKill <Reg:r9 >  BB04 regmask=[r9] minReg=1 last>
<RefPosition #165 @204 RefTypeKill <Reg:r10>  BB04 regmask=[r10] minReg=1 last>
<RefPosition #166 @204 RefTypeKill <Reg:r11>  BB04 regmask=[r11] minReg=1 last>
<RefPosition #167 @205 RefTypeBB  BB05 regmask=[] minReg=1>
<RefPosition #168 @211 RefTypeFixedReg <Reg:rcx>  BB05 regmask=[rcx] minReg=1>
<RefPosition #169 @211 RefTypeUse <Ivl:1 V01> LCL_VAR BB05 regmask=[rcx] minReg=1 fixed>
<RefPosition #170 @212 RefTypeFixedReg <Reg:rcx>  BB05 regmask=[rcx] minReg=1>
<RefPosition #171 @212 RefTypeDef <Ivl:56> PUTARG_REG BB05 regmask=[rcx] minReg=1 fixed>
<RefPosition #172 @215 RefTypeFixedReg <Reg:rdx>  BB05 regmask=[rdx] minReg=1>
<RefPosition #173 @215 RefTypeUse <Ivl:4 V04> LCL_VAR BB05 regmask=[rdx] minReg=1 last fixed>
<RefPosition #174 @216 RefTypeFixedReg <Reg:rdx>  BB05 regmask=[rdx] minReg=1>
<RefPosition #175 @216 RefTypeDef <Ivl:57> PUTARG_REG BB05 regmask=[rdx] minReg=1 fixed>
<RefPosition #176 @217 RefTypeFixedReg <Reg:rcx>  BB05 regmask=[rcx] minReg=1>
<RefPosition #177 @217 RefTypeUse <Ivl:56>  BB05 regmask=[rcx] minReg=1 last fixed>
<RefPosition #178 @217 RefTypeFixedReg <Reg:rdx>  BB05 regmask=[rdx] minReg=1>
<RefPosition #179 @217 RefTypeUse <Ivl:57>  BB05 regmask=[rdx] minReg=1 last fixed>
<RefPosition #180 @218 RefTypeKill <Reg:rax>  BB05 regmask=[rax] minReg=1 last>
<RefPosition #181 @218 RefTypeKill <Reg:rcx>  BB05 regmask=[rcx] minReg=1 last>
<RefPosition #182 @218 RefTypeKill <Reg:rdx>  BB05 regmask=[rdx] minReg=1 last>
<RefPosition #183 @218 RefTypeKill <Reg:r8 >  BB05 regmask=[r8] minReg=1 last>
<RefPosition #184 @218 RefTypeKill <Reg:r9 >  BB05 regmask=[r9] minReg=1 last>
<RefPosition #185 @218 RefTypeKill <Reg:r10>  BB05 regmask=[r10] minReg=1 last>
<RefPosition #186 @218 RefTypeKill <Reg:r11>  BB05 regmask=[r11] minReg=1 last>
<RefPosition #187 @219 RefTypeBB  BB07 regmask=[] minReg=1>
<RefPosition #188 @224 RefTypeDef <Ivl:58> CNS_INT BB07 regmask=[rcx] minReg=1>
<RefPosition #189 @225 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #190 @225 RefTypeUse <Ivl:58>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #191 @226 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #192 @226 RefTypeDef <Ivl:59> PUTARG_REG BB07 regmask=[rcx] minReg=1 fixed>
<RefPosition #193 @227 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #194 @227 RefTypeUse <Ivl:59>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #195 @228 RefTypeKill <Reg:rax>  BB07 regmask=[rax] minReg=1 last>
<RefPosition #196 @228 RefTypeKill <Reg:rcx>  BB07 regmask=[rcx] minReg=1 last>
<RefPosition #197 @228 RefTypeKill <Reg:rdx>  BB07 regmask=[rdx] minReg=1 last>
<RefPosition #198 @228 RefTypeKill <Reg:r8 >  BB07 regmask=[r8] minReg=1 last>
<RefPosition #199 @228 RefTypeKill <Reg:r9 >  BB07 regmask=[r9] minReg=1 last>
<RefPosition #200 @228 RefTypeKill <Reg:r10>  BB07 regmask=[r10] minReg=1 last>
<RefPosition #201 @228 RefTypeKill <Reg:r11>  BB07 regmask=[r11] minReg=1 last>
<RefPosition #202 @228 RefTypeFixedReg <Reg:rax>  BB07 regmask=[rax] minReg=1>
<RefPosition #203 @228 RefTypeDef <Ivl:60> CALL BB07 regmask=[rax] minReg=1 fixed>
<RefPosition #204 @229 RefTypeUse <Ivl:60>  BB07 regmask=[allInt] minReg=1 last>
<RefPosition #205 @230 RefTypeDef <Ivl:18 V20> STORE_LCL_VAR BB07 regmask=[allInt] minReg=1>
<RefPosition #206 @232 RefTypeDef <Ivl:61> CNS_INT BB07 regmask=[allInt] minReg=1>
<RefPosition #207 @233 RefTypeUse <Ivl:61>  BB07 regmask=[allInt] minReg=1 last>
<RefPosition #208 @234 RefTypeDef <Ivl:62> IND BB07 regmask=[rdx] minReg=1>
<RefPosition #209 @235 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #210 @235 RefTypeUse <Ivl:62>  BB07 regmask=[rdx] minReg=1 last fixed>
<RefPosition #211 @236 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #212 @236 RefTypeDef <Ivl:63> PUTARG_REG BB07 regmask=[rdx] minReg=1 fixed>
<RefPosition #213 @239 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #214 @239 RefTypeUse <Ivl:4 V04> LCL_VAR BB07 regmask=[rcx] minReg=1 fixed>
<RefPosition #215 @240 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #216 @240 RefTypeDef <Ivl:64> PUTARG_REG BB07 regmask=[rcx] minReg=1 fixed>
<RefPosition #217 @243 RefTypeFixedReg <Reg:r9 >  BB07 regmask=[r9] minReg=1>
<RefPosition #218 @243 RefTypeUse <Ivl:18 V20> LCL_VAR BB07 regmask=[r9] minReg=1 last fixed>
<RefPosition #219 @244 RefTypeFixedReg <Reg:r9 >  BB07 regmask=[r9] minReg=1>
<RefPosition #220 @244 RefTypeDef <Ivl:65> PUTARG_REG BB07 regmask=[r9] minReg=1 fixed>
<RefPosition #221 @246 RefTypeDef <Ivl:66> CNS_INT BB07 regmask=[r8] minReg=1>
<RefPosition #222 @247 RefTypeFixedReg <Reg:r8 >  BB07 regmask=[r8] minReg=1>
<RefPosition #223 @247 RefTypeUse <Ivl:66>  BB07 regmask=[r8] minReg=1 last fixed>
<RefPosition #224 @248 RefTypeFixedReg <Reg:r8 >  BB07 regmask=[r8] minReg=1>
<RefPosition #225 @248 RefTypeDef <Ivl:67> PUTARG_REG BB07 regmask=[r8] minReg=1 fixed>
<RefPosition #226 @249 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #227 @249 RefTypeUse <Ivl:63>  BB07 regmask=[rdx] minReg=1 last fixed>
<RefPosition #228 @249 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #229 @249 RefTypeUse <Ivl:64>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #230 @249 RefTypeFixedReg <Reg:r9 >  BB07 regmask=[r9] minReg=1>
<RefPosition #231 @249 RefTypeUse <Ivl:65>  BB07 regmask=[r9] minReg=1 last fixed>
<RefPosition #232 @249 RefTypeFixedReg <Reg:r8 >  BB07 regmask=[r8] minReg=1>
<RefPosition #233 @249 RefTypeUse <Ivl:67>  BB07 regmask=[r8] minReg=1 last fixed>
<RefPosition #234 @250 RefTypeKill <Reg:rax>  BB07 regmask=[rax] minReg=1 last>
<RefPosition #235 @250 RefTypeKill <Reg:rcx>  BB07 regmask=[rcx] minReg=1 last>
<RefPosition #236 @250 RefTypeKill <Reg:rdx>  BB07 regmask=[rdx] minReg=1 last>
<RefPosition #237 @250 RefTypeKill <Reg:r8 >  BB07 regmask=[r8] minReg=1 last>
<RefPosition #238 @250 RefTypeKill <Reg:r9 >  BB07 regmask=[r9] minReg=1 last>
<RefPosition #239 @250 RefTypeKill <Reg:r10>  BB07 regmask=[r10] minReg=1 last>
<RefPosition #240 @250 RefTypeKill <Reg:r11>  BB07 regmask=[r11] minReg=1 last>
<RefPosition #241 @250 RefTypeFixedReg <Reg:rax>  BB07 regmask=[rax] minReg=1>
<RefPosition #242 @250 RefTypeDef <Ivl:68> CALL BB07 regmask=[rax] minReg=1 fixed>
<RefPosition #243 @251 RefTypeUse <Ivl:68>  BB07 regmask=[allInt] minReg=1 last>
<RefPosition #244 @252 RefTypeDef <Ivl:8 V09> STORE_LCL_VAR BB07 regmask=[allInt] minReg=1>
<RefPosition #245 @254 RefTypeDef <Ivl:69> CNS_INT BB07 regmask=[rcx] minReg=1>
<RefPosition #246 @255 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #247 @255 RefTypeUse <Ivl:69>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #248 @256 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #249 @256 RefTypeDef <Ivl:70> PUTARG_REG BB07 regmask=[rcx] minReg=1 fixed>
<RefPosition #250 @258 RefTypeDef <Ivl:71> CNS_INT BB07 regmask=[rdx] minReg=1>
<RefPosition #251 @259 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #252 @259 RefTypeUse <Ivl:71>  BB07 regmask=[rdx] minReg=1 last fixed>
<RefPosition #253 @260 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #254 @260 RefTypeDef <Ivl:72> PUTARG_REG BB07 regmask=[rdx] minReg=1 fixed>
<RefPosition #255 @261 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #256 @261 RefTypeUse <Ivl:70>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #257 @261 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #258 @261 RefTypeUse <Ivl:72>  BB07 regmask=[rdx] minReg=1 last fixed>
<RefPosition #259 @262 RefTypeKill <Reg:rax>  BB07 regmask=[rax] minReg=1 last>
<RefPosition #260 @262 RefTypeKill <Reg:rcx>  BB07 regmask=[rcx] minReg=1 last>
<RefPosition #261 @262 RefTypeKill <Reg:rdx>  BB07 regmask=[rdx] minReg=1 last>
<RefPosition #262 @262 RefTypeKill <Reg:r8 >  BB07 regmask=[r8] minReg=1 last>
<RefPosition #263 @262 RefTypeKill <Reg:r9 >  BB07 regmask=[r9] minReg=1 last>
<RefPosition #264 @262 RefTypeKill <Reg:r10>  BB07 regmask=[r10] minReg=1 last>
<RefPosition #265 @262 RefTypeKill <Reg:r11>  BB07 regmask=[r11] minReg=1 last>
<RefPosition #266 @262 RefTypeFixedReg <Reg:rax>  BB07 regmask=[rax] minReg=1>
<RefPosition #267 @262 RefTypeDef <Ivl:73> CALL BB07 regmask=[rax] minReg=1 last fixed local>
<RefPosition #268 @264 RefTypeDef <Ivl:74> CNS_INT BB07 regmask=[allInt] minReg=1>
<RefPosition #269 @265 RefTypeUse <Ivl:74>  BB07 regmask=[allInt] minReg=1 last>
<RefPosition #270 @266 RefTypeDef <Ivl:75> IND BB07 regmask=[allInt] minReg=1>
<RefPosition #271 @267 RefTypeUse <Ivl:75>  BB07 regmask=[allInt] minReg=1 last>
<RefPosition #272 @268 RefTypeDef <Ivl:7 V08> STORE_LCL_VAR BB07 regmask=[allInt] minReg=1>
<RefPosition #273 @271 RefTypeUse <Ivl:8 V09> LCL_VAR BB07 regmask=[allInt] minReg=1 last>
<RefPosition #274 @272 RefTypeDef <Ivl:9 V10> STORE_LCL_VAR BB07 regmask=[allInt] minReg=1>
<RefPosition #275 @275 RefTypeUse <Ivl:7 V08> LCL_VAR BB07 regmask=[allInt] minReg=1 last>
<RefPosition #276 @276 RefTypeDef <Ivl:10 V11> STORE_LCL_VAR BB07 regmask=[allInt] minReg=1>
<RefPosition #277 @281 RefTypeUse <Ivl:10 V11> LCL_VAR BB07 regmask=[allInt] minReg=1 regOptional>
<RefPosition #278 @285 RefTypeBB  BB08 regmask=[] minReg=1>
<RefPosition #279 @288 RefTypeDef <Ivl:76> CNS_INT BB08 regmask=[rcx] minReg=1>
<RefPosition #280 @289 RefTypeFixedReg <Reg:rcx>  BB08 regmask=[rcx] minReg=1>
<RefPosition #281 @289 RefTypeUse <Ivl:76>  BB08 regmask=[rcx] minReg=1 last fixed>
<RefPosition #282 @290 RefTypeFixedReg <Reg:rcx>  BB08 regmask=[rcx] minReg=1>
<RefPosition #283 @290 RefTypeDef <Ivl:77> PUTARG_REG BB08 regmask=[rcx] minReg=1 fixed>
<RefPosition #284 @291 RefTypeFixedReg <Reg:rcx>  BB08 regmask=[rcx] minReg=1>
<RefPosition #285 @291 RefTypeUse <Ivl:77>  BB08 regmask=[rcx] minReg=1 last fixed>
<RefPosition #286 @292 RefTypeKill <Reg:rax>  BB08 regmask=[rax] minReg=1 last>
<RefPosition #287 @292 RefTypeKill <Reg:rcx>  BB08 regmask=[rcx] minReg=1 last>
<RefPosition #288 @292 RefTypeKill <Reg:rdx>  BB08 regmask=[rdx] minReg=1 last>
<RefPosition #289 @292 RefTypeKill <Reg:r8 >  BB08 regmask=[r8] minReg=1 last>
<RefPosition #290 @292 RefTypeKill <Reg:r9 >  BB08 regmask=[r9] minReg=1 last>
<RefPosition #291 @292 RefTypeKill <Reg:r10>  BB08 regmask=[r10] minReg=1 last>
<RefPosition #292 @292 RefTypeKill <Reg:r11>  BB08 regmask=[r11] minReg=1 last>
<RefPosition #293 @292 RefTypeFixedReg <Reg:rax>  BB08 regmask=[rax] minReg=1>
<RefPosition #294 @292 RefTypeDef <Ivl:78> CALL BB08 regmask=[rax] minReg=1 fixed>
<RefPosition #295 @293 RefTypeUse <Ivl:78>  BB08 regmask=[allInt] minReg=1 last>
<RefPosition #296 @294 RefTypeDef <Ivl:15 V17> STORE_LCL_VAR BB08 regmask=[allInt] minReg=1>
<RefPosition #297 @296 RefTypeDef <Ivl:79> CNS_INT BB08 regmask=[allInt] minReg=1>
<RefPosition #298 @297 RefTypeUse <Ivl:79>  BB08 regmask=[allInt] minReg=1 last>
<RefPosition #299 @298 RefTypeDef <Ivl:80> IND BB08 regmask=[allInt] minReg=1>
<RefPosition #300 @299 RefTypeUse <Ivl:80>  BB08 regmask=[allInt] minReg=1 last>
<RefPosition #301 @300 RefTypeDef <Ivl:19 V21> STORE_LCL_VAR BB08 regmask=[allInt] minReg=1>
<RefPosition #302 @305 RefTypeUse <Ivl:19 V21> LCL_VAR BB08 regmask=[allInt] minReg=1 regOptional>
<RefPosition #303 @309 RefTypeBB  BB09 regmask=[] minReg=1>
<RefPosition #304 @313 RefTypeUse <Ivl:15 V17> LCL_VAR BB09 regmask=[allInt] minReg=1>
<RefPosition #305 @314 RefTypeDef <Ivl:81> LEA BB09 regmask=[rcx] minReg=1>
<RefPosition #306 @317 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #307 @317 RefTypeUse <Ivl:81>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #308 @317 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #309 @317 RefTypeUse <Ivl:19 V21> LCL_VAR BB09 regmask=[rdx] minReg=1 last fixed>
<RefPosition #310 @318 RefTypeKill <Reg:rax>  BB09 regmask=[rax] minReg=1 last>
<RefPosition #311 @318 RefTypeKill <Reg:rcx>  BB09 regmask=[rcx] minReg=1 last>
<RefPosition #312 @318 RefTypeKill <Reg:rdx>  BB09 regmask=[rdx] minReg=1 last>
<RefPosition #313 @318 RefTypeKill <Reg:r8 >  BB09 regmask=[r8] minReg=1 last>
<RefPosition #314 @318 RefTypeKill <Reg:r9 >  BB09 regmask=[r9] minReg=1 last>
<RefPosition #315 @318 RefTypeKill <Reg:r10>  BB09 regmask=[r10] minReg=1 last>
<RefPosition #316 @318 RefTypeKill <Reg:r11>  BB09 regmask=[r11] minReg=1 last>
<RefPosition #317 @318 RefTypeKill <Reg:mm0>  BB09 regmask=[mm0] minReg=1 last>
<RefPosition #318 @318 RefTypeKill <Reg:mm1>  BB09 regmask=[mm1] minReg=1 last>
<RefPosition #319 @318 RefTypeKill <Reg:mm2>  BB09 regmask=[mm2] minReg=1 last>
<RefPosition #320 @318 RefTypeKill <Reg:mm3>  BB09 regmask=[mm3] minReg=1 last>
<RefPosition #321 @318 RefTypeKill <Reg:mm4>  BB09 regmask=[mm4] minReg=1 last>
<RefPosition #322 @318 RefTypeKill <Reg:mm5>  BB09 regmask=[mm5] minReg=1 last>
<RefPosition #323 @324 RefTypeDef <Ivl:82> CNS_INT BB09 regmask=[allInt] minReg=1>
<RefPosition #324 @325 RefTypeUse <Ivl:15 V17> LCL_VAR BB09 regmask=[allInt] minReg=1>
<RefPosition #325 @325 RefTypeUse <Ivl:82>  BB09 regmask=[allInt] minReg=1 last>
<RefPosition #326 @330 RefTypeDef <Ivl:83> CNS_INT BB09 regmask=[rcx] minReg=1>
<RefPosition #327 @333 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #328 @333 RefTypeUse <Ivl:83>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #329 @333 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #330 @333 RefTypeUse <Ivl:15 V17> LCL_VAR BB09 regmask=[rdx] minReg=1 fixed>
<RefPosition #331 @334 RefTypeKill <Reg:rax>  BB09 regmask=[rax] minReg=1 last>
<RefPosition #332 @334 RefTypeKill <Reg:rcx>  BB09 regmask=[rcx] minReg=1 last>
<RefPosition #333 @334 RefTypeKill <Reg:rdx>  BB09 regmask=[rdx] minReg=1 last>
<RefPosition #334 @334 RefTypeKill <Reg:r8 >  BB09 regmask=[r8] minReg=1 last>
<RefPosition #335 @334 RefTypeKill <Reg:r9 >  BB09 regmask=[r9] minReg=1 last>
<RefPosition #336 @334 RefTypeKill <Reg:r10>  BB09 regmask=[r10] minReg=1 last>
<RefPosition #337 @334 RefTypeKill <Reg:r11>  BB09 regmask=[r11] minReg=1 last>
<RefPosition #338 @334 RefTypeKill <Reg:mm0>  BB09 regmask=[mm0] minReg=1 last>
<RefPosition #339 @334 RefTypeKill <Reg:mm1>  BB09 regmask=[mm1] minReg=1 last>
<RefPosition #340 @334 RefTypeKill <Reg:mm2>  BB09 regmask=[mm2] minReg=1 last>
<RefPosition #341 @334 RefTypeKill <Reg:mm3>  BB09 regmask=[mm3] minReg=1 last>
<RefPosition #342 @334 RefTypeKill <Reg:mm4>  BB09 regmask=[mm4] minReg=1 last>
<RefPosition #343 @334 RefTypeKill <Reg:mm5>  BB09 regmask=[mm5] minReg=1 last>
<RefPosition #344 @337 RefTypeUse <Ivl:15 V17> LCL_VAR BB09 regmask=[allInt] minReg=1 last>
<RefPosition #345 @338 RefTypeDef <Ivl:10 V11> STORE_LCL_VAR BB09 regmask=[allInt] minReg=1>
<RefPosition #346 @339 RefTypeBB  BB10 regmask=[] minReg=1>
<RefPosition #347 @343 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #348 @343 RefTypeUse <Ivl:10 V11> LCL_VAR BB10 regmask=[r8] minReg=1 last fixed>
<RefPosition #349 @344 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #350 @344 RefTypeDef <Ivl:84> PUTARG_REG BB10 regmask=[r8] minReg=1 fixed>
<RefPosition #351 @347 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #352 @347 RefTypeUse <Ivl:9 V10> LCL_VAR BB10 regmask=[rdx] minReg=1 last fixed>
<RefPosition #353 @348 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #354 @348 RefTypeDef <Ivl:85> PUTARG_REG BB10 regmask=[rdx] minReg=1 fixed>
<RefPosition #355 @350 RefTypeDef <Ivl:86> CNS_INT BB10 regmask=[rcx] minReg=1>
<RefPosition #356 @351 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #357 @351 RefTypeUse <Ivl:86>  BB10 regmask=[rcx] minReg=1 last fixed>
<RefPosition #358 @352 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #359 @352 RefTypeDef <Ivl:87> PUTARG_REG BB10 regmask=[rcx] minReg=1 fixed>
<RefPosition #360 @353 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #361 @353 RefTypeUse <Ivl:84>  BB10 regmask=[r8] minReg=1 last fixed>
<RefPosition #362 @353 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #363 @353 RefTypeUse <Ivl:85>  BB10 regmask=[rdx] minReg=1 last fixed>
<RefPosition #364 @353 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #365 @353 RefTypeUse <Ivl:87>  BB10 regmask=[rcx] minReg=1 last fixed>
<RefPosition #366 @354 RefTypeKill <Reg:rax>  BB10 regmask=[rax] minReg=1 last>
<RefPosition #367 @354 RefTypeKill <Reg:rcx>  BB10 regmask=[rcx] minReg=1 last>
<RefPosition #368 @354 RefTypeKill <Reg:rdx>  BB10 regmask=[rdx] minReg=1 last>
<RefPosition #369 @354 RefTypeKill <Reg:r8 >  BB10 regmask=[r8] minReg=1 last>
<RefPosition #370 @354 RefTypeKill <Reg:r9 >  BB10 regmask=[r9] minReg=1 last>
<RefPosition #371 @354 RefTypeKill <Reg:r10>  BB10 regmask=[r10] minReg=1 last>
<RefPosition #372 @354 RefTypeKill <Reg:r11>  BB10 regmask=[r11] minReg=1 last>
<RefPosition #373 @354 RefTypeFixedReg <Reg:rax>  BB10 regmask=[rax] minReg=1>
<RefPosition #374 @354 RefTypeDef <Ivl:88> CALL BB10 regmask=[rax] minReg=1 fixed>
<RefPosition #375 @355 RefTypeUse <Ivl:88>  BB10 regmask=[allInt] minReg=1 last>
<RefPosition #376 @356 RefTypeDef <Ivl:5 V05> STORE_LCL_VAR BB10 regmask=[allInt] minReg=1>
<RefPosition #377 @360 RefTypeDef <Ivl:89> CNS_INT BB10 regmask=[rcx] minReg=1>
<RefPosition #378 @361 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #379 @361 RefTypeUse <Ivl:89>  BB10 regmask=[rcx] minReg=1 last fixed>
<RefPosition #380 @362 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #381 @362 RefTypeDef <Ivl:90> PUTARG_REG BB10 regmask=[rcx] minReg=1 fixed>
<RefPosition #382 @364 RefTypeDef <Ivl:91> CNS_INT BB10 regmask=[rdx] minReg=1>
<RefPosition #383 @365 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #384 @365 RefTypeUse <Ivl:91>  BB10 regmask=[rdx] minReg=1 last fixed>
<RefPosition #385 @366 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #386 @366 RefTypeDef <Ivl:92> PUTARG_REG BB10 regmask=[rdx] minReg=1 fixed>
<RefPosition #387 @367 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #388 @367 RefTypeUse <Ivl:90>  BB10 regmask=[rcx] minReg=1 last fixed>
<RefPosition #389 @367 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #390 @367 RefTypeUse <Ivl:92>  BB10 regmask=[rdx] minReg=1 last fixed>
<RefPosition #391 @368 RefTypeKill <Reg:rax>  BB10 regmask=[rax] minReg=1 last>
<RefPosition #392 @368 RefTypeKill <Reg:rcx>  BB10 regmask=[rcx] minReg=1 last>
<RefPosition #393 @368 RefTypeKill <Reg:rdx>  BB10 regmask=[rdx] minReg=1 last>
<RefPosition #394 @368 RefTypeKill <Reg:r8 >  BB10 regmask=[r8] minReg=1 last>
<RefPosition #395 @368 RefTypeKill <Reg:r9 >  BB10 regmask=[r9] minReg=1 last>
<RefPosition #396 @368 RefTypeKill <Reg:r10>  BB10 regmask=[r10] minReg=1 last>
<RefPosition #397 @368 RefTypeKill <Reg:r11>  BB10 regmask=[r11] minReg=1 last>
<RefPosition #398 @368 RefTypeFixedReg <Reg:rax>  BB10 regmask=[rax] minReg=1>
<RefPosition #399 @368 RefTypeDef <Ivl:93> CALL BB10 regmask=[rax] minReg=1 last fixed local>
<RefPosition #400 @370 RefTypeDef <Ivl:94> CNS_INT BB10 regmask=[allInt] minReg=1>
<RefPosition #401 @371 RefTypeUse <Ivl:94>  BB10 regmask=[allInt] minReg=1 last>
<RefPosition #402 @372 RefTypeDef <Ivl:95> IND BB10 regmask=[allInt] minReg=1>
<RefPosition #403 @373 RefTypeUse <Ivl:95>  BB10 regmask=[allInt] minReg=1 last>
<RefPosition #404 @374 RefTypeDef <Ivl:20 V23> STORE_LCL_VAR BB10 regmask=[allInt] minReg=1>
<RefPosition #405 @376 RefTypeDef <Ivl:96> CNS_INT BB10 regmask=[allInt] minReg=1>
<RefPosition #406 @377 RefTypeUse <Ivl:96>  BB10 regmask=[allInt] minReg=1 last>
<RefPosition #407 @378 RefTypeDef <Ivl:97> IND BB10 regmask=[rdx] minReg=1>
<RefPosition #408 @379 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #409 @379 RefTypeUse <Ivl:97>  BB10 regmask=[rdx] minReg=1 last fixed>
<RefPosition #410 @380 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #411 @380 RefTypeDef <Ivl:98> PUTARG_REG BB10 regmask=[rdx] minReg=1 fixed>
<RefPosition #412 @383 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #413 @383 RefTypeUse <Ivl:4 V04> LCL_VAR BB10 regmask=[rcx] minReg=1 last fixed>
<RefPosition #414 @384 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #415 @384 RefTypeDef <Ivl:99> PUTARG_REG BB10 regmask=[rcx] minReg=1 fixed>
<RefPosition #416 @387 RefTypeFixedReg <Reg:r9 >  BB10 regmask=[r9] minReg=1>
<RefPosition #417 @387 RefTypeUse <Ivl:20 V23> LCL_VAR BB10 regmask=[r9] minReg=1 last fixed>
<RefPosition #418 @388 RefTypeFixedReg <Reg:r9 >  BB10 regmask=[r9] minReg=1>
<RefPosition #419 @388 RefTypeDef <Ivl:100> PUTARG_REG BB10 regmask=[r9] minReg=1 fixed>
<RefPosition #420 @390 RefTypeDef <Ivl:101> CNS_INT BB10 regmask=[r8] minReg=1>
<RefPosition #421 @391 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #422 @391 RefTypeUse <Ivl:101>  BB10 regmask=[r8] minReg=1 last fixed>
<RefPosition #423 @392 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #424 @392 RefTypeDef <Ivl:102> PUTARG_REG BB10 regmask=[r8] minReg=1 fixed>
<RefPosition #425 @393 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #426 @393 RefTypeUse <Ivl:98>  BB10 regmask=[rdx] minReg=1 last fixed>
<RefPosition #427 @393 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #428 @393 RefTypeUse <Ivl:99>  BB10 regmask=[rcx] minReg=1 last fixed>
<RefPosition #429 @393 RefTypeFixedReg <Reg:r9 >  BB10 regmask=[r9] minReg=1>
<RefPosition #430 @393 RefTypeUse <Ivl:100>  BB10 regmask=[r9] minReg=1 last fixed>
<RefPosition #431 @393 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #432 @393 RefTypeUse <Ivl:102>  BB10 regmask=[r8] minReg=1 last fixed>
<RefPosition #433 @394 RefTypeKill <Reg:rax>  BB10 regmask=[rax] minReg=1 last>
<RefPosition #434 @394 RefTypeKill <Reg:rcx>  BB10 regmask=[rcx] minReg=1 last>
<RefPosition #435 @394 RefTypeKill <Reg:rdx>  BB10 regmask=[rdx] minReg=1 last>
<RefPosition #436 @394 RefTypeKill <Reg:r8 >  BB10 regmask=[r8] minReg=1 last>
<RefPosition #437 @394 RefTypeKill <Reg:r9 >  BB10 regmask=[r9] minReg=1 last>
<RefPosition #438 @394 RefTypeKill <Reg:r10>  BB10 regmask=[r10] minReg=1 last>
<RefPosition #439 @394 RefTypeKill <Reg:r11>  BB10 regmask=[r11] minReg=1 last>
<RefPosition #440 @394 RefTypeFixedReg <Reg:rax>  BB10 regmask=[rax] minReg=1>
<RefPosition #441 @394 RefTypeDef <Ivl:103> CALL BB10 regmask=[rax] minReg=1 fixed>
<RefPosition #442 @395 RefTypeUse <Ivl:103>  BB10 regmask=[allInt] minReg=1 last>
<RefPosition #443 @396 RefTypeDef <Ivl:21 V24> STORE_LCL_VAR BB10 regmask=[allInt] minReg=1>
<RefPosition #444 @401 RefTypeUse <Ivl:1 V01> LCL_VAR BB10 regmask=[allInt] minReg=1>
<RefPosition #445 @402 RefTypeDef <Ivl:104> IND BB10 regmask=[rdx] minReg=1>
<RefPosition #446 @403 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #447 @403 RefTypeUse <Ivl:104>  BB10 regmask=[rdx] minReg=1 last fixed>
<RefPosition #448 @404 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #449 @404 RefTypeDef <Ivl:105> PUTARG_REG BB10 regmask=[rdx] minReg=1 fixed>
<RefPosition #450 @407 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #451 @407 RefTypeUse <Ivl:1 V01> LCL_VAR BB10 regmask=[rcx] minReg=1 fixed>
<RefPosition #452 @408 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #453 @408 RefTypeDef <Ivl:106> PUTARG_REG BB10 regmask=[rcx] minReg=1 fixed>
<RefPosition #454 @411 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #455 @411 RefTypeUse <Ivl:21 V24> LCL_VAR BB10 regmask=[r8] minReg=1 last fixed>
<RefPosition #456 @412 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #457 @412 RefTypeDef <Ivl:107> PUTARG_REG BB10 regmask=[r8] minReg=1 fixed>
<RefPosition #458 @413 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #459 @413 RefTypeUse <Ivl:105>  BB10 regmask=[rdx] minReg=1 last fixed>
<RefPosition #460 @413 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #461 @413 RefTypeUse <Ivl:106>  BB10 regmask=[rcx] minReg=1 last fixed>
<RefPosition #462 @413 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #463 @413 RefTypeUse <Ivl:107>  BB10 regmask=[r8] minReg=1 last fixed>
<RefPosition #464 @414 RefTypeKill <Reg:rax>  BB10 regmask=[rax] minReg=1 last>
<RefPosition #465 @414 RefTypeKill <Reg:rcx>  BB10 regmask=[rcx] minReg=1 last>
<RefPosition #466 @414 RefTypeKill <Reg:rdx>  BB10 regmask=[rdx] minReg=1 last>
<RefPosition #467 @414 RefTypeKill <Reg:r8 >  BB10 regmask=[r8] minReg=1 last>
<RefPosition #468 @414 RefTypeKill <Reg:r9 >  BB10 regmask=[r9] minReg=1 last>
<RefPosition #469 @414 RefTypeKill <Reg:r10>  BB10 regmask=[r10] minReg=1 last>
<RefPosition #470 @414 RefTypeKill <Reg:r11>  BB10 regmask=[r11] minReg=1 last>
<RefPosition #471 @418 RefTypeDef <Ivl:108> CNS_INT BB10 regmask=[allInt] minReg=1>
<RefPosition #472 @419 RefTypeUse <Ivl:108>  BB10 regmask=[allInt] minReg=1 last>
<RefPosition #473 @420 RefTypeDef <Ivl:109> IND BB10 regmask=[allInt] minReg=1>
<RefPosition #474 @421 RefTypeUse <Ivl:109>  BB10 regmask=[allInt] minReg=1 last>
<RefPosition #475 @422 RefTypeDef <Ivl:11 V12> STORE_LCL_VAR BB10 regmask=[allInt] minReg=1>
<RefPosition #476 @425 RefTypeUse <Ivl:5 V05> LCL_VAR BB10 regmask=[allInt] minReg=1 last>
<RefPosition #477 @426 RefTypeDef <Ivl:12 V14> STORE_LCL_VAR BB10 regmask=[allInt] minReg=1>
<RefPosition #478 @429 RefTypeUse <Ivl:11 V12> LCL_VAR BB10 regmask=[allInt] minReg=1 last>
<RefPosition #479 @430 RefTypeDef <Ivl:13 V15> STORE_LCL_VAR BB10 regmask=[allInt] minReg=1>
<RefPosition #480 @435 RefTypeUse <Ivl:13 V15> LCL_VAR BB10 regmask=[allInt] minReg=1 regOptional>
<RefPosition #481 @439 RefTypeBB  BB11 regmask=[] minReg=1>
<RefPosition #482 @442 RefTypeDef <Ivl:110> CNS_INT BB11 regmask=[rcx] minReg=1>
<RefPosition #483 @443 RefTypeFixedReg <Reg:rcx>  BB11 regmask=[rcx] minReg=1>
<RefPosition #484 @443 RefTypeUse <Ivl:110>  BB11 regmask=[rcx] minReg=1 last fixed>
<RefPosition #485 @444 RefTypeFixedReg <Reg:rcx>  BB11 regmask=[rcx] minReg=1>
<RefPosition #486 @444 RefTypeDef <Ivl:111> PUTARG_REG BB11 regmask=[rcx] minReg=1 fixed>
<RefPosition #487 @445 RefTypeFixedReg <Reg:rcx>  BB11 regmask=[rcx] minReg=1>
<RefPosition #488 @445 RefTypeUse <Ivl:111>  BB11 regmask=[rcx] minReg=1 last fixed>
<RefPosition #489 @446 RefTypeKill <Reg:rax>  BB11 regmask=[rax] minReg=1 last>
<RefPosition #490 @446 RefTypeKill <Reg:rcx>  BB11 regmask=[rcx] minReg=1 last>
<RefPosition #491 @446 RefTypeKill <Reg:rdx>  BB11 regmask=[rdx] minReg=1 last>
<RefPosition #492 @446 RefTypeKill <Reg:r8 >  BB11 regmask=[r8] minReg=1 last>
<RefPosition #493 @446 RefTypeKill <Reg:r9 >  BB11 regmask=[r9] minReg=1 last>
<RefPosition #494 @446 RefTypeKill <Reg:r10>  BB11 regmask=[r10] minReg=1 last>
<RefPosition #495 @446 RefTypeKill <Reg:r11>  BB11 regmask=[r11] minReg=1 last>
<RefPosition #496 @446 RefTypeFixedReg <Reg:rax>  BB11 regmask=[rax] minReg=1>
<RefPosition #497 @446 RefTypeDef <Ivl:112> CALL BB11 regmask=[rax] minReg=1 fixed>
<RefPosition #498 @447 RefTypeUse <Ivl:112>  BB11 regmask=[allInt] minReg=1 last>
<RefPosition #499 @448 RefTypeDef <Ivl:14 V16> STORE_LCL_VAR BB11 regmask=[allInt] minReg=1>
<RefPosition #500 @450 RefTypeDef <Ivl:113> CNS_INT BB11 regmask=[allInt] minReg=1>
<RefPosition #501 @451 RefTypeUse <Ivl:113>  BB11 regmask=[allInt] minReg=1 last>
<RefPosition #502 @452 RefTypeDef <Ivl:114> IND BB11 regmask=[allInt] minReg=1>
<RefPosition #503 @453 RefTypeUse <Ivl:114>  BB11 regmask=[allInt] minReg=1 last>
<RefPosition #504 @454 RefTypeDef <Ivl:22 V25> STORE_LCL_VAR BB11 regmask=[allInt] minReg=1>
<RefPosition #505 @459 RefTypeUse <Ivl:22 V25> LCL_VAR BB11 regmask=[allInt] minReg=1 regOptional>
<RefPosition #506 @463 RefTypeBB  BB12 regmask=[] minReg=1>
<RefPosition #507 @467 RefTypeUse <Ivl:14 V16> LCL_VAR BB12 regmask=[allInt] minReg=1>
<RefPosition #508 @468 RefTypeDef <Ivl:115> LEA BB12 regmask=[rcx] minReg=1>
<RefPosition #509 @471 RefTypeFixedReg <Reg:rcx>  BB12 regmask=[rcx] minReg=1>
<RefPosition #510 @471 RefTypeUse <Ivl:115>  BB12 regmask=[rcx] minReg=1 last fixed>
<RefPosition #511 @471 RefTypeFixedReg <Reg:rdx>  BB12 regmask=[rdx] minReg=1>
<RefPosition #512 @471 RefTypeUse <Ivl:22 V25> LCL_VAR BB12 regmask=[rdx] minReg=1 last fixed>
<RefPosition #513 @472 RefTypeKill <Reg:rax>  BB12 regmask=[rax] minReg=1 last>
<RefPosition #514 @472 RefTypeKill <Reg:rcx>  BB12 regmask=[rcx] minReg=1 last>
<RefPosition #515 @472 RefTypeKill <Reg:rdx>  BB12 regmask=[rdx] minReg=1 last>
<RefPosition #516 @472 RefTypeKill <Reg:r8 >  BB12 regmask=[r8] minReg=1 last>
<RefPosition #517 @472 RefTypeKill <Reg:r9 >  BB12 regmask=[r9] minReg=1 last>
<RefPosition #518 @472 RefTypeKill <Reg:r10>  BB12 regmask=[r10] minReg=1 last>
<RefPosition #519 @472 RefTypeKill <Reg:r11>  BB12 regmask=[r11] minReg=1 last>
<RefPosition #520 @472 RefTypeKill <Reg:mm0>  BB12 regmask=[mm0] minReg=1 last>
<RefPosition #521 @472 RefTypeKill <Reg:mm1>  BB12 regmask=[mm1] minReg=1 last>
<RefPosition #522 @472 RefTypeKill <Reg:mm2>  BB12 regmask=[mm2] minReg=1 last>
<RefPosition #523 @472 RefTypeKill <Reg:mm3>  BB12 regmask=[mm3] minReg=1 last>
<RefPosition #524 @472 RefTypeKill <Reg:mm4>  BB12 regmask=[mm4] minReg=1 last>
<RefPosition #525 @472 RefTypeKill <Reg:mm5>  BB12 regmask=[mm5] minReg=1 last>
<RefPosition #526 @478 RefTypeDef <Ivl:116> CNS_INT BB12 regmask=[allInt] minReg=1>
<RefPosition #527 @479 RefTypeUse <Ivl:14 V16> LCL_VAR BB12 regmask=[allInt] minReg=1>
<RefPosition #528 @479 RefTypeUse <Ivl:116>  BB12 regmask=[allInt] minReg=1 last>
<RefPosition #529 @484 RefTypeDef <Ivl:117> CNS_INT BB12 regmask=[rcx] minReg=1>
<RefPosition #530 @487 RefTypeFixedReg <Reg:rcx>  BB12 regmask=[rcx] minReg=1>
<RefPosition #531 @487 RefTypeUse <Ivl:117>  BB12 regmask=[rcx] minReg=1 last fixed>
<RefPosition #532 @487 RefTypeFixedReg <Reg:rdx>  BB12 regmask=[rdx] minReg=1>
<RefPosition #533 @487 RefTypeUse <Ivl:14 V16> LCL_VAR BB12 regmask=[rdx] minReg=1 fixed>
<RefPosition #534 @488 RefTypeKill <Reg:rax>  BB12 regmask=[rax] minReg=1 last>
<RefPosition #535 @488 RefTypeKill <Reg:rcx>  BB12 regmask=[rcx] minReg=1 last>
<RefPosition #536 @488 RefTypeKill <Reg:rdx>  BB12 regmask=[rdx] minReg=1 last>
<RefPosition #537 @488 RefTypeKill <Reg:r8 >  BB12 regmask=[r8] minReg=1 last>
<RefPosition #538 @488 RefTypeKill <Reg:r9 >  BB12 regmask=[r9] minReg=1 last>
<RefPosition #539 @488 RefTypeKill <Reg:r10>  BB12 regmask=[r10] minReg=1 last>
<RefPosition #540 @488 RefTypeKill <Reg:r11>  BB12 regmask=[r11] minReg=1 last>
<RefPosition #541 @488 RefTypeKill <Reg:mm0>  BB12 regmask=[mm0] minReg=1 last>
<RefPosition #542 @488 RefTypeKill <Reg:mm1>  BB12 regmask=[mm1] minReg=1 last>
<RefPosition #543 @488 RefTypeKill <Reg:mm2>  BB12 regmask=[mm2] minReg=1 last>
<RefPosition #544 @488 RefTypeKill <Reg:mm3>  BB12 regmask=[mm3] minReg=1 last>
<RefPosition #545 @488 RefTypeKill <Reg:mm4>  BB12 regmask=[mm4] minReg=1 last>
<RefPosition #546 @488 RefTypeKill <Reg:mm5>  BB12 regmask=[mm5] minReg=1 last>
<RefPosition #547 @491 RefTypeUse <Ivl:14 V16> LCL_VAR BB12 regmask=[allInt] minReg=1 last>
<RefPosition #548 @492 RefTypeDef <Ivl:13 V15> STORE_LCL_VAR BB12 regmask=[allInt] minReg=1>
<RefPosition #549 @493 RefTypeBB  BB13 regmask=[] minReg=1>
<RefPosition #550 @497 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #551 @497 RefTypeUse <Ivl:13 V15> LCL_VAR BB13 regmask=[r8] minReg=1 last fixed>
<RefPosition #552 @498 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #553 @498 RefTypeDef <Ivl:118> PUTARG_REG BB13 regmask=[r8] minReg=1 fixed>
<RefPosition #554 @501 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #555 @501 RefTypeUse <Ivl:12 V14> LCL_VAR BB13 regmask=[rdx] minReg=1 last fixed>
<RefPosition #556 @502 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #557 @502 RefTypeDef <Ivl:119> PUTARG_REG BB13 regmask=[rdx] minReg=1 fixed>
<RefPosition #558 @504 RefTypeDef <Ivl:120> CNS_INT BB13 regmask=[rcx] minReg=1>
<RefPosition #559 @505 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #560 @505 RefTypeUse <Ivl:120>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #561 @506 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #562 @506 RefTypeDef <Ivl:121> PUTARG_REG BB13 regmask=[rcx] minReg=1 fixed>
<RefPosition #563 @507 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #564 @507 RefTypeUse <Ivl:118>  BB13 regmask=[r8] minReg=1 last fixed>
<RefPosition #565 @507 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #566 @507 RefTypeUse <Ivl:119>  BB13 regmask=[rdx] minReg=1 last fixed>
<RefPosition #567 @507 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #568 @507 RefTypeUse <Ivl:121>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #569 @508 RefTypeKill <Reg:rax>  BB13 regmask=[rax] minReg=1 last>
<RefPosition #570 @508 RefTypeKill <Reg:rcx>  BB13 regmask=[rcx] minReg=1 last>
<RefPosition #571 @508 RefTypeKill <Reg:rdx>  BB13 regmask=[rdx] minReg=1 last>
<RefPosition #572 @508 RefTypeKill <Reg:r8 >  BB13 regmask=[r8] minReg=1 last>
<RefPosition #573 @508 RefTypeKill <Reg:r9 >  BB13 regmask=[r9] minReg=1 last>
<RefPosition #574 @508 RefTypeKill <Reg:r10>  BB13 regmask=[r10] minReg=1 last>
<RefPosition #575 @508 RefTypeKill <Reg:r11>  BB13 regmask=[r11] minReg=1 last>
<RefPosition #576 @508 RefTypeFixedReg <Reg:rax>  BB13 regmask=[rax] minReg=1>
<RefPosition #577 @508 RefTypeDef <Ivl:122> CALL BB13 regmask=[rax] minReg=1 fixed>
<RefPosition #578 @509 RefTypeUse <Ivl:122>  BB13 regmask=[allInt] minReg=1 last>
<RefPosition #579 @510 RefTypeDef <Ivl:23 V27> STORE_LCL_VAR BB13 regmask=[allInt] minReg=1>
<RefPosition #580 @515 RefTypeUse <Ivl:1 V01> LCL_VAR BB13 regmask=[allInt] minReg=1>
<RefPosition #581 @516 RefTypeDef <Ivl:123> IND BB13 regmask=[rdx] minReg=1>
<RefPosition #582 @517 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #583 @517 RefTypeUse <Ivl:123>  BB13 regmask=[rdx] minReg=1 last fixed>
<RefPosition #584 @518 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #585 @518 RefTypeDef <Ivl:124> PUTARG_REG BB13 regmask=[rdx] minReg=1 fixed>
<RefPosition #586 @521 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #587 @521 RefTypeUse <Ivl:1 V01> LCL_VAR BB13 regmask=[rcx] minReg=1 fixed>
<RefPosition #588 @522 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #589 @522 RefTypeDef <Ivl:125> PUTARG_REG BB13 regmask=[rcx] minReg=1 fixed>
<RefPosition #590 @525 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #591 @525 RefTypeUse <Ivl:23 V27> LCL_VAR BB13 regmask=[r8] minReg=1 last fixed>
<RefPosition #592 @526 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #593 @526 RefTypeDef <Ivl:126> PUTARG_REG BB13 regmask=[r8] minReg=1 fixed>
<RefPosition #594 @527 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #595 @527 RefTypeUse <Ivl:124>  BB13 regmask=[rdx] minReg=1 last fixed>
<RefPosition #596 @527 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #597 @527 RefTypeUse <Ivl:125>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #598 @527 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #599 @527 RefTypeUse <Ivl:126>  BB13 regmask=[r8] minReg=1 last fixed>
<RefPosition #600 @528 RefTypeKill <Reg:rax>  BB13 regmask=[rax] minReg=1 last>
<RefPosition #601 @528 RefTypeKill <Reg:rcx>  BB13 regmask=[rcx] minReg=1 last>
<RefPosition #602 @528 RefTypeKill <Reg:rdx>  BB13 regmask=[rdx] minReg=1 last>
<RefPosition #603 @528 RefTypeKill <Reg:r8 >  BB13 regmask=[r8] minReg=1 last>
<RefPosition #604 @528 RefTypeKill <Reg:r9 >  BB13 regmask=[r9] minReg=1 last>
<RefPosition #605 @528 RefTypeKill <Reg:r10>  BB13 regmask=[r10] minReg=1 last>
<RefPosition #606 @528 RefTypeKill <Reg:r11>  BB13 regmask=[r11] minReg=1 last>
<RefPosition #607 @529 RefTypeBB  BB14 regmask=[] minReg=1>
<RefPosition #608 @537 RefTypeUse <Ivl:3 V03> LCL_VAR BB14 regmask=[allInt] minReg=1 last>
<RefPosition #609 @538 RefTypeDef <Ivl:127> ADD BB14 regmask=[allInt] minReg=1>
<RefPosition #610 @539 RefTypeUse <Ivl:127>  BB14 regmask=[allInt] minReg=1 last>
<RefPosition #611 @540 RefTypeDef <Ivl:3 V03> STORE_LCL_VAR BB14 regmask=[allInt] minReg=1>
<RefPosition #612 @547 RefTypeUse <Ivl:24 V29> LCL_VAR BB14 regmask=[allInt] minReg=1 regOptional>
<RefPosition #613 @547 RefTypeUse <Ivl:3 V03> LCL_VAR BB14 regmask=[allInt] minReg=1>
<RefPosition #614 @551 RefTypeExpUse <Ivl:3 V03>  BB14 regmask=[allInt] minReg=1 regOptional>
<RefPosition #615 @551 RefTypeExpUse <Ivl:2 V02>  BB14 regmask=[allInt] minReg=1 regOptional>
<RefPosition #616 @551 RefTypeExpUse <Ivl:24 V29>  BB14 regmask=[allInt] minReg=1 regOptional>
<RefPosition #617 @551 RefTypeBB  BB15 regmask=[] minReg=1>
<RefPosition #618 @557 RefTypeFixedReg <Reg:rdx>  BB15 regmask=[rdx] minReg=1>
<RefPosition #619 @557 RefTypeUse <Ivl:1 V01> LCL_VAR BB15 regmask=[rdx] minReg=1 fixed>
<RefPosition #620 @558 RefTypeFixedReg <Reg:rdx>  BB15 regmask=[rdx] minReg=1>
<RefPosition #621 @558 RefTypeDef <Ivl:128> PUTARG_REG BB15 regmask=[rdx] minReg=1 fixed>
<RefPosition #622 @560 RefTypeDef <Ivl:129> CNS_INT BB15 regmask=[rcx] minReg=1>
<RefPosition #623 @561 RefTypeFixedReg <Reg:rcx>  BB15 regmask=[rcx] minReg=1>
<RefPosition #624 @561 RefTypeUse <Ivl:129>  BB15 regmask=[rcx] minReg=1 last fixed>
<RefPosition #625 @562 RefTypeFixedReg <Reg:rcx>  BB15 regmask=[rcx] minReg=1>
<RefPosition #626 @562 RefTypeDef <Ivl:130> PUTARG_REG BB15 regmask=[rcx] minReg=1 fixed>
<RefPosition #627 @563 RefTypeFixedReg <Reg:rdx>  BB15 regmask=[rdx] minReg=1>
<RefPosition #628 @563 RefTypeUse <Ivl:128>  BB15 regmask=[rdx] minReg=1 last fixed>
<RefPosition #629 @563 RefTypeFixedReg <Reg:rcx>  BB15 regmask=[rcx] minReg=1>
<RefPosition #630 @563 RefTypeUse <Ivl:130>  BB15 regmask=[rcx] minReg=1 last fixed>
<RefPosition #631 @564 RefTypeKill <Reg:rax>  BB15 regmask=[rax] minReg=1 last>
<RefPosition #632 @564 RefTypeKill <Reg:rcx>  BB15 regmask=[rcx] minReg=1 last>
<RefPosition #633 @564 RefTypeKill <Reg:rdx>  BB15 regmask=[rdx] minReg=1 last>
<RefPosition #634 @564 RefTypeKill <Reg:r8 >  BB15 regmask=[r8] minReg=1 last>
<RefPosition #635 @564 RefTypeKill <Reg:r9 >  BB15 regmask=[r9] minReg=1 last>
<RefPosition #636 @564 RefTypeKill <Reg:r10>  BB15 regmask=[r10] minReg=1 last>
<RefPosition #637 @564 RefTypeKill <Reg:r11>  BB15 regmask=[r11] minReg=1 last>
<RefPosition #638 @566 RefTypeDef <Ivl:131> CNS_INT BB15 regmask=[allInt] minReg=1>
<RefPosition #639 @567 RefTypeUse <Ivl:131>  BB15 regmask=[allInt] minReg=1 last>
<RefPosition #640 @568 RefTypeDef <Ivl:132> IND BB15 regmask=[rdx] minReg=1>
<RefPosition #641 @569 RefTypeFixedReg <Reg:rdx>  BB15 regmask=[rdx] minReg=1>
<RefPosition #642 @569 RefTypeUse <Ivl:132>  BB15 regmask=[rdx] minReg=1 last fixed>
<RefPosition #643 @570 RefTypeFixedReg <Reg:rdx>  BB15 regmask=[rdx] minReg=1>
<RefPosition #644 @570 RefTypeDef <Ivl:133> PUTARG_REG BB15 regmask=[rdx] minReg=1 fixed>
<RefPosition #645 @572 RefTypeDef <Ivl:134> CNS_INT BB15 regmask=[rcx] minReg=1>
<RefPosition #646 @573 RefTypeFixedReg <Reg:rcx>  BB15 regmask=[rcx] minReg=1>
<RefPosition #647 @573 RefTypeUse <Ivl:134>  BB15 regmask=[rcx] minReg=1 last fixed>
<RefPosition #648 @574 RefTypeFixedReg <Reg:rcx>  BB15 regmask=[rcx] minReg=1>
<RefPosition #649 @574 RefTypeDef <Ivl:135> PUTARG_REG BB15 regmask=[rcx] minReg=1 fixed>
<RefPosition #650 @576 RefTypeDef <Ivl:136> CNS_INT BB15 regmask=[r8] minReg=1>
<RefPosition #651 @577 RefTypeFixedReg <Reg:r8 >  BB15 regmask=[r8] minReg=1>
<RefPosition #652 @577 RefTypeUse <Ivl:136>  BB15 regmask=[r8] minReg=1 last fixed>
<RefPosition #653 @578 RefTypeFixedReg <Reg:r8 >  BB15 regmask=[r8] minReg=1>
<RefPosition #654 @578 RefTypeDef <Ivl:137> PUTARG_REG BB15 regmask=[r8] minReg=1 fixed>
<RefPosition #655 @579 RefTypeFixedReg <Reg:rdx>  BB15 regmask=[rdx] minReg=1>
<RefPosition #656 @579 RefTypeUse <Ivl:133>  BB15 regmask=[rdx] minReg=1 last fixed>
<RefPosition #657 @579 RefTypeFixedReg <Reg:rcx>  BB15 regmask=[rcx] minReg=1>
<RefPosition #658 @579 RefTypeUse <Ivl:135>  BB15 regmask=[rcx] minReg=1 last fixed>
<RefPosition #659 @579 RefTypeFixedReg <Reg:r8 >  BB15 regmask=[r8] minReg=1>
<RefPosition #660 @579 RefTypeUse <Ivl:137>  BB15 regmask=[r8] minReg=1 last fixed>
<RefPosition #661 @580 RefTypeKill <Reg:rax>  BB15 regmask=[rax] minReg=1 last>
<RefPosition #662 @580 RefTypeKill <Reg:rcx>  BB15 regmask=[rcx] minReg=1 last>
<RefPosition #663 @580 RefTypeKill <Reg:rdx>  BB15 regmask=[rdx] minReg=1 last>
<RefPosition #664 @580 RefTypeKill <Reg:r8 >  BB15 regmask=[r8] minReg=1 last>
<RefPosition #665 @580 RefTypeKill <Reg:r9 >  BB15 regmask=[r9] minReg=1 last>
<RefPosition #666 @580 RefTypeKill <Reg:r10>  BB15 regmask=[r10] minReg=1 last>
<RefPosition #667 @580 RefTypeKill <Reg:r11>  BB15 regmask=[r11] minReg=1 last>
<RefPosition #668 @580 RefTypeFixedReg <Reg:rax>  BB15 regmask=[rax] minReg=1>
<RefPosition #669 @580 RefTypeDef <Ivl:138> CALL BB15 regmask=[rax] minReg=1 last fixed local>
<RefPosition #670 @585 RefTypeFixedReg <Reg:rax>  BB15 regmask=[rax] minReg=1>
<RefPosition #671 @585 RefTypeUse <Ivl:1 V01> LCL_VAR BB15 regmask=[rax] minReg=1 last fixed>
<RefPosition #672 @587 RefTypeBB  BB16 regmask=[] minReg=1>
<RefPosition #673 @590 RefTypeKill <Reg:rax>  BB16 regmask=[rax] minReg=1 last>
<RefPosition #674 @590 RefTypeKill <Reg:rcx>  BB16 regmask=[rcx] minReg=1 last>
<RefPosition #675 @590 RefTypeKill <Reg:rdx>  BB16 regmask=[rdx] minReg=1 last>
<RefPosition #676 @590 RefTypeKill <Reg:r8 >  BB16 regmask=[r8] minReg=1 last>
<RefPosition #677 @590 RefTypeKill <Reg:r9 >  BB16 regmask=[r9] minReg=1 last>
<RefPosition #678 @590 RefTypeKill <Reg:r10>  BB16 regmask=[r10] minReg=1 last>
<RefPosition #679 @590 RefTypeKill <Reg:r11>  BB16 regmask=[r11] minReg=1 last>
-----------------
<RefPosition #73  @44  RefTypeDef <Ivl:1 V01> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #126 @137 RefTypeUse <Ivl:1 V01> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #127 @145 RefTypeUse <Ivl:1 V01> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #131 @155 RefTypeUse <Ivl:1 V01> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #140 @187 RefTypeUse <Ivl:1 V01> LCL_VAR BB04 regmask=[allInt] minReg=1>
<RefPosition #169 @211 RefTypeUse <Ivl:1 V01> LCL_VAR BB05 regmask=[rcx] minReg=1 fixed>
<RefPosition #444 @401 RefTypeUse <Ivl:1 V01> LCL_VAR BB10 regmask=[allInt] minReg=1>
<RefPosition #451 @407 RefTypeUse <Ivl:1 V01> LCL_VAR BB10 regmask=[rcx] minReg=1 fixed>
<RefPosition #580 @515 RefTypeUse <Ivl:1 V01> LCL_VAR BB13 regmask=[allInt] minReg=1>
<RefPosition #587 @521 RefTypeUse <Ivl:1 V01> LCL_VAR BB13 regmask=[rcx] minReg=1 fixed>
<RefPosition #619 @557 RefTypeUse <Ivl:1 V01> LCL_VAR BB15 regmask=[rdx] minReg=1 fixed>
<RefPosition #671 @585 RefTypeUse <Ivl:1 V01> LCL_VAR BB15 regmask=[rax] minReg=1 last fixed>
-----------------
<RefPosition #91  @90  RefTypeDef <Ivl:4 V04> STORE_LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #92  @95  RefTypeUse <Ivl:4 V04> LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #101 @105 RefTypeUse <Ivl:4 V04> LCL_VAR BB02 regmask=[rcx] minReg=1 fixed>
<RefPosition #151 @201 RefTypeUse <Ivl:4 V04> LCL_VAR BB04 regmask=[r8] minReg=1 last fixed>
<RefPosition #173 @215 RefTypeUse <Ivl:4 V04> LCL_VAR BB05 regmask=[rdx] minReg=1 last fixed>
GetProjectPaths: LocalVar V04: undefined use at 215
<RefPosition #214 @239 RefTypeUse <Ivl:4 V04> LCL_VAR BB07 regmask=[rcx] minReg=1 fixed>
GetProjectPaths: LocalVar V04: undefined use at 239
<RefPosition #413 @383 RefTypeUse <Ivl:4 V04> LCL_VAR BB10 regmask=[rcx] minReg=1 last fixed>
GetProjectPaths: LocalVar V04: undefined use at 383
-----------------
<RefPosition #499 @448 RefTypeDef <Ivl:14 V16> STORE_LCL_VAR BB11 regmask=[allInt] minReg=1>
<RefPosition #507 @467 RefTypeUse <Ivl:14 V16> LCL_VAR BB12 regmask=[allInt] minReg=1>
<RefPosition #527 @479 RefTypeUse <Ivl:14 V16> LCL_VAR BB12 regmask=[allInt] minReg=1>
<RefPosition #533 @487 RefTypeUse <Ivl:14 V16> LCL_VAR BB12 regmask=[rdx] minReg=1 fixed>
<RefPosition #547 @491 RefTypeUse <Ivl:14 V16> LCL_VAR BB12 regmask=[allInt] minReg=1 last>
-----------------
<RefPosition #296 @294 RefTypeDef <Ivl:15 V17> STORE_LCL_VAR BB08 regmask=[allInt] minReg=1>
<RefPosition #304 @313 RefTypeUse <Ivl:15 V17> LCL_VAR BB09 regmask=[allInt] minReg=1>
<RefPosition #324 @325 RefTypeUse <Ivl:15 V17> LCL_VAR BB09 regmask=[allInt] minReg=1>
<RefPosition #330 @333 RefTypeUse <Ivl:15 V17> LCL_VAR BB09 regmask=[rdx] minReg=1 fixed>
<RefPosition #344 @337 RefTypeUse <Ivl:15 V17> LCL_VAR BB09 regmask=[allInt] minReg=1 last>
-----------------
<RefPosition #78  @56  RefTypeDef <Ivl:3 V03> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #85  @83  RefTypeUse <Ivl:3 V03> LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #608 @537 RefTypeUse <Ivl:3 V03> LCL_VAR BB14 regmask=[allInt] minReg=1 last>
<RefPosition #611 @540 RefTypeDef <Ivl:3 V03> STORE_LCL_VAR BB14 regmask=[allInt] minReg=1>
<RefPosition #613 @547 RefTypeUse <Ivl:3 V03> LCL_VAR BB14 regmask=[allInt] minReg=1>
<RefPosition #614 @551 RefTypeExpUse <Ivl:3 V03>  BB14 regmask=[allInt] minReg=1 regOptional>
-----------------
<RefPosition #301 @300 RefTypeDef <Ivl:19 V21> STORE_LCL_VAR BB08 regmask=[allInt] minReg=1>
<RefPosition #302 @305 RefTypeUse <Ivl:19 V21> LCL_VAR BB08 regmask=[allInt] minReg=1 regOptional>
<RefPosition #309 @317 RefTypeUse <Ivl:19 V21> LCL_VAR BB09 regmask=[rdx] minReg=1 last fixed>
-----------------
<RefPosition #504 @454 RefTypeDef <Ivl:22 V25> STORE_LCL_VAR BB11 regmask=[allInt] minReg=1>
<RefPosition #505 @459 RefTypeUse <Ivl:22 V25> LCL_VAR BB11 regmask=[allInt] minReg=1 regOptional>
<RefPosition #512 @471 RefTypeUse <Ivl:22 V25> LCL_VAR BB12 regmask=[rdx] minReg=1 last fixed>
-----------------
<RefPosition #276 @276 RefTypeDef <Ivl:10 V11> STORE_LCL_VAR BB07 regmask=[allInt] minReg=1>
<RefPosition #277 @281 RefTypeUse <Ivl:10 V11> LCL_VAR BB07 regmask=[allInt] minReg=1 regOptional>
<RefPosition #345 @338 RefTypeDef <Ivl:10 V11> STORE_LCL_VAR BB09 regmask=[allInt] minReg=1>
<RefPosition #348 @343 RefTypeUse <Ivl:10 V11> LCL_VAR BB10 regmask=[r8] minReg=1 last fixed>
-----------------
<RefPosition #479 @430 RefTypeDef <Ivl:13 V15> STORE_LCL_VAR BB10 regmask=[allInt] minReg=1>
<RefPosition #480 @435 RefTypeUse <Ivl:13 V15> LCL_VAR BB10 regmask=[allInt] minReg=1 regOptional>
<RefPosition #548 @492 RefTypeDef <Ivl:13 V15> STORE_LCL_VAR BB12 regmask=[allInt] minReg=1>
<RefPosition #551 @497 RefTypeUse <Ivl:13 V15> LCL_VAR BB13 regmask=[r8] minReg=1 last fixed>
-----------------
<RefPosition #134 @158 RefTypeDef <Ivl:17 V19> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #136 @169 RefTypeUse <Ivl:17 V19> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #138 @181 RefTypeUse <Ivl:17 V19> LCL_VAR BB04 regmask=[allInt] minReg=1>
<RefPosition #147 @197 RefTypeUse <Ivl:17 V19> LCL_VAR BB04 regmask=[rdx] minReg=1 last fixed>
-----------------
<RefPosition #272 @268 RefTypeDef <Ivl:7 V08> STORE_LCL_VAR BB07 regmask=[allInt] minReg=1>
<RefPosition #275 @275 RefTypeUse <Ivl:7 V08> LCL_VAR BB07 regmask=[allInt] minReg=1 last>
-----------------
<RefPosition #244 @252 RefTypeDef <Ivl:8 V09> STORE_LCL_VAR BB07 regmask=[allInt] minReg=1>
<RefPosition #273 @271 RefTypeUse <Ivl:8 V09> LCL_VAR BB07 regmask=[allInt] minReg=1 last>
-----------------
<RefPosition #475 @422 RefTypeDef <Ivl:11 V12> STORE_LCL_VAR BB10 regmask=[allInt] minReg=1>
<RefPosition #478 @429 RefTypeUse <Ivl:11 V12> LCL_VAR BB10 regmask=[allInt] minReg=1 last>
-----------------
<RefPosition #205 @230 RefTypeDef <Ivl:18 V20> STORE_LCL_VAR BB07 regmask=[allInt] minReg=1>
<RefPosition #218 @243 RefTypeUse <Ivl:18 V20> LCL_VAR BB07 regmask=[r9] minReg=1 last fixed>
-----------------
<RefPosition #404 @374 RefTypeDef <Ivl:20 V23> STORE_LCL_VAR BB10 regmask=[allInt] minReg=1>
<RefPosition #417 @387 RefTypeUse <Ivl:20 V23> LCL_VAR BB10 regmask=[r9] minReg=1 last fixed>
-----------------
<RefPosition #443 @396 RefTypeDef <Ivl:21 V24> STORE_LCL_VAR BB10 regmask=[allInt] minReg=1>
<RefPosition #455 @411 RefTypeUse <Ivl:21 V24> LCL_VAR BB10 regmask=[r8] minReg=1 last fixed>
-----------------
<RefPosition #579 @510 RefTypeDef <Ivl:23 V27> STORE_LCL_VAR BB13 regmask=[allInt] minReg=1>
<RefPosition #591 @525 RefTypeUse <Ivl:23 V27> LCL_VAR BB13 regmask=[r8] minReg=1 last fixed>
-----------------
<RefPosition #75  @50  RefTypeDef <Ivl:2 V02> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #79  @63  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #87  @87  RefTypeUse <Ivl:2 V02> LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #615 @551 RefTypeExpUse <Ivl:2 V02>  BB14 regmask=[allInt] minReg=1 regOptional>
-----------------
<RefPosition #51  @28  RefTypeDef <Ivl:6 V07> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #53  @31  RefTypeUse <Ivl:6 V07> LCL_VAR BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #72  @43  RefTypeUse <Ivl:6 V07> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
-----------------
<RefPosition #130 @148 RefTypeDef <Ivl:16 V18> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #135 @169 RefTypeUse <Ivl:16 V18> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #143 @193 RefTypeUse <Ivl:16 V18> LCL_VAR BB04 regmask=[rcx] minReg=1 last fixed>
-----------------
<RefPosition #82  @66  RefTypeDef <Ivl:24 V29> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #83  @71  RefTypeUse <Ivl:24 V29> LCL_VAR BB01 regmask=[allInt] minReg=1 regOptional>
<RefPosition #612 @547 RefTypeUse <Ivl:24 V29> LCL_VAR BB14 regmask=[allInt] minReg=1 regOptional>
<RefPosition #616 @551 RefTypeExpUse <Ivl:24 V29>  BB14 regmask=[allInt] minReg=1 regOptional>
-----------------
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00>  BB00 regmask=[rcx] minReg=1 fixed regOptional>
<RefPosition #74  @49  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
-----------------
<RefPosition #376 @356 RefTypeDef <Ivl:5 V05> STORE_LCL_VAR BB10 regmask=[allInt] minReg=1>
<RefPosition #476 @425 RefTypeUse <Ivl:5 V05> LCL_VAR BB10 regmask=[allInt] minReg=1 last>
-----------------
<RefPosition #274 @272 RefTypeDef <Ivl:9 V10> STORE_LCL_VAR BB07 regmask=[allInt] minReg=1>
<RefPosition #352 @347 RefTypeUse <Ivl:9 V10> LCL_VAR BB10 regmask=[rdx] minReg=1 last fixed>
-----------------
<RefPosition #477 @426 RefTypeDef <Ivl:12 V14> STORE_LCL_VAR BB10 regmask=[allInt] minReg=1>
<RefPosition #555 @501 RefTypeUse <Ivl:12 V14> LCL_VAR BB13 regmask=[rdx] minReg=1 last fixed>
TUPLE STYLE DUMP WITH REF POSITIONS
Incoming Parameters:  V00
BB01 [000..01D) -> BB15 (cond), preds={} succs={BB02,BB15}
=====
  N003.                    CNS_INT(h) 0xD1FFAB1E "Started enumerating project paths."
        Def:<I25>(#2)
  N005.                    IND      
                               Use:<I25>(#3) *
        Def:<I26>(#4)
  N007.                    PUTARG_REG
                               Use:<I26>(#6) Fixed:rdx(#5) *
        Def:<I27>(#8) rdx
  N009.                    CNS_INT(h) 0xd1ffab1e method
        Def:<I28>(#9)
  N011.                    PUTARG_REG
                               Use:<I28>(#11) Fixed:rcx(#10) *
        Def:<I29>(#13) rcx
  N013.                    CNS_INT   2
        Def:<I30>(#14)
  N015.                    PUTARG_REG
                               Use:<I30>(#16) Fixed:r8(#15) *
        Def:<I31>(#18) r8
  N017.                    CALL     
                               Use:<I27>(#20) Fixed:rdx(#19) *
                               Use:<I29>(#22) Fixed:rcx(#21) *
                               Use:<I31>(#24) Fixed:r8(#23) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I32>(#33) rax LocalDefUse *
  N019.                    IL_OFFSET IL offset: 0xc
  N021.                    CNS_INT(h) 0xd1ffab1e token
        Def:<I33>(#34)
  N023.                    PUTARG_REG
                               Use:<I33>(#36) Fixed:rcx(#35) *
        Def:<I34>(#38) rcx
  N025.                    CALL help
                               Use:<I34>(#40) Fixed:rcx(#39) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I35>(#49) rax Pref:<V07/L6>
  N027.                    V07(L6)
                               Use:<I35>(#50) *
        Def:<V07/L6>(#51) Pref:<V01/L1>
  N029.                    V07(L6)
  N031.                    PUTARG_REG
                               Use:<V07/L6>(#53) Fixed:rcx(#52)
        Def:<I36>(#55) rcx Pref:<V07/L6>
  N033.                    CNS_INT   100
        Def:<I37>(#56)
  N035.                    PUTARG_REG
                               Use:<I37>(#58) Fixed:rdx(#57) *
        Def:<I38>(#60) rdx
  N037.                    CALL     
                               Use:<I36>(#62) Fixed:rcx(#61) *
                               Use:<I38>(#64) Fixed:rdx(#63) *
        Kill: rax rcx rdx r8 r9 r10 r11 
  N039.                    IL_OFFSET IL offset: 0x13
  N041.                    V07(L6)
  N043.                    V01(L1)
                               Use:<V07/L6>(#72) *
        Def:<V01/L1>(#73)
  N045.                    IL_OFFSET IL offset: 0x14
  N047.                    V00(L0)
  N049.                    V02(L2)
                               Use:<V00/L0>(#74) *
        Def:<V02/L2>(#75)
  N051.                    IL_OFFSET IL offset: 0x16
  N053.                    CNS_INT   0
        Def:<I39>(#76) Pref:<V03/L3>
  N055.                    V03(L3)
                               Use:<I39>(#77) *
        Def:<V03/L3>(#78) Pref:<I127>
  N057.                    IL_OFFSET IL offset: 0xaa
  N059.                    V02(L2)
  N061.                    LEA(b+8) 
  N063.                    IND      
                               Use:<V02/L2>(#79)
        Def:<I40>(#80) Pref:<V29/L24>
  N065.                    V29(L24)
                               Use:<I40>(#81) *
        Def:<V29/L24>(#82)
  N067.                    V29(L24)
  N069.                    CNS_INT   0
  N071.                    LE       
                               Use:<V29/L24>(#83)
  N073.                    JTRUE    

BB02 [01D..02E) -> BB07 (cond), preds={BB01,BB14} succs={BB03,BB07}
=====
  N077.                    IL_OFFSET IL offset: 0x1d
  N079.                    V02(L2)
  N081.                    V03(L3)
  N083.                    CAST     
                               Use:<V03/L3>(#85)
        Def:<I41>(#86)
  N085.                    LEA(b+(i*8)+16)
  N087.                    IND      
                               Use:<V02/L2>(#87)
                               Use:<I41>(#88) *
        Def:<I42>(#89) Pref:<V04/L4>
  N089.                    V04(L4)
                               Use:<I42>(#90) *
        Def:<V04/L4>(#91)
  N091.                    IL_OFFSET IL offset: 0x21
  N093.                    V04(L4)
  N095.                    NULLCHECK
                               Use:<V04/L4>(#92)
  N097.                    CNS_INT(h) 0xD1FFAB1E ".csproj"
        Def:<I43>(#93)
  N099.                    IND      
                               Use:<I43>(#94) *
        Def:<I44>(#95)
  N101.                    PUTARG_REG
                               Use:<I44>(#97) Fixed:rdx(#96) *
        Def:<I45>(#99) rdx
  N103.                    V04(L4)
  N105.                    PUTARG_REG
                               Use:<V04/L4>(#101) Fixed:rcx(#100)
        Def:<I46>(#103) rcx Pref:<V04/L4>
  N107.                    CNS_INT   0
        Def:<I47>(#104)
  N109.                    PUTARG_REG
                               Use:<I47>(#106) Fixed:r8(#105) *
        Def:<I48>(#108) r8
  N111.                    CALL     
                               Use:<I45>(#110) Fixed:rdx(#109) *
                               Use:<I46>(#112) Fixed:rcx(#111) *
                               Use:<I48>(#114) Fixed:r8(#113) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I49>(#123) rax
  N113.                    CNS_INT   0
  N115.                    EQ       
                               Use:<I49>(#124) *
  N117.                    JTRUE    

BB03 [02E..037) -> BB05 (cond), preds={BB02} succs={BB04,BB05}
=====
  N121.                    IL_OFFSET IL offset: 0x2e
  N123.                    V01(L1)
  N125.                    LEA(b+20)
  N127.                    IND      
  N129.                    CNS_INT   1
  N131.                    ADD      
  N133.                    V01(L1)
  N135.                    LEA(b+20)
  N137.                    STOREIND 
                               Use:<V01/L1>(#126)
  N139.                    IL_OFFSET IL offset: 0x2e
  N141.                    V01(L1)
  N143.                    LEA(b+8) 
  N145.                    IND      
                               Use:<V01/L1>(#127)
        Def:<I50>(#128) Pref:<V18/L16>
  N147.                    V18(L16)
                               Use:<I50>(#129) *
        Def:<V18/L16>(#130)
  N149.                    IL_OFFSET IL offset: 0x2e
  N151.                    V01(L1)
  N153.                    LEA(b+16)
  N155.                    IND      
                               Use:<V01/L1>(#131)
        Def:<I51>(#132) Pref:<V19/L17>
  N157.                    V19(L17)
                               Use:<I51>(#133) *
        Def:<V19/L17>(#134)
  N159.                    IL_OFFSET IL offset: 0x2e
  N161.                    V18(L16)
  N163.                    LEA(b+8) 
  N165.                    IND      
  N167.                    V19(L17)
  N169.                    LE       
                               Use:<V18/L16>(#135)
                               Use:<V19/L17>(#136)
  N171.                    JTRUE    

BB04 [02E..02F) -> BB14 (always), preds={BB03} succs={BB14}
=====
  N175.                    IL_OFFSET IL offset: 0x2e
  N177.                    V19(L17)
  N179.                    CNS_INT   1
  N181.                    ADD      
                               Use:<V19/L17>(#138)
        Def:<I52>(#139)
  N183.                    V01(L1)
  N185.                    LEA(b+16)
  N187.                    STOREIND 
                               Use:<V01/L1>(#140)
                               Use:<I52>(#141) *
  N189.                    IL_OFFSET IL offset: 0x2e
  N191.                    V18(L16)
  N193.                    PUTARG_REG
                               Use:<V18/L16>(#143) Fixed:rcx(#142) *
        Def:<I53>(#145) rcx
  N195.                    V19(L17)
  N197.                    PUTARG_REG
                               Use:<V19/L17>(#147) Fixed:rdx(#146) *
        Def:<I54>(#149) rdx
  N199.                    V04(L4)
  N201.                    PUTARG_REG
                               Use:<V04/L4>(#151) Fixed:r8(#150) *
        Def:<I55>(#153) r8
  N203.                    CALL help
                               Use:<I53>(#155) Fixed:rcx(#154) *
                               Use:<I54>(#157) Fixed:rdx(#156) *
                               Use:<I55>(#159) Fixed:r8(#158) *
        Kill: rax rcx rdx r8 r9 r10 r11 

BB05 [02E..02F) -> BB14 (always), preds={BB03} succs={BB14}
=====
  N207.                    IL_OFFSET IL offset: 0x2e
  N209.                    V01(L1)
  N211.                    PUTARG_REG
                               Use:<V01/L1>(#169) Fixed:rcx(#168)
        Def:<I56>(#171) rcx Pref:<V01/L1>
  N213.                    V04(L4)
  N215.                    PUTARG_REG
                               Use:<V04/L4>(#173) Fixed:rdx(#172) *
        Def:<I57>(#175) rdx
  N217.                    CALL     
                               Use:<I56>(#177) Fixed:rcx(#176) *
                               Use:<I57>(#179) Fixed:rdx(#178) *
        Kill: rax rcx rdx r8 r9 r10 r11 

BB07 [037..04B) -> BB10 (cond), preds={BB02} succs={BB08,BB10}
=====
  N221.                    IL_OFFSET IL offset: 0x37
  N223.                    CNS_INT   1
        Def:<I58>(#188)
  N225.                    PUTARG_REG
                               Use:<I58>(#190) Fixed:rcx(#189) *
        Def:<I59>(#192) rcx
  N227.                    CALL     
                               Use:<I59>(#194) Fixed:rcx(#193) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I60>(#203) rax Pref:<V20/L18>
  N229.                    V20(L18)
                               Use:<I60>(#204) *
        Def:<V20/L18>(#205)
  N231.                    CNS_INT(h) 0xD1FFAB1E "*"
        Def:<I61>(#206)
  N233.                    IND      
                               Use:<I61>(#207) *
        Def:<I62>(#208)
  N235.                    PUTARG_REG
                               Use:<I62>(#210) Fixed:rdx(#209) *
        Def:<I63>(#212) rdx
  N237.                    V04(L4)
  N239.                    PUTARG_REG
                               Use:<V04/L4>(#214) Fixed:rcx(#213)
        Def:<I64>(#216) rcx Pref:<V04/L4>
  N241.                    V20(L18)
  N243.                    PUTARG_REG
                               Use:<V20/L18>(#218) Fixed:r9(#217) *
        Def:<I65>(#220) r9
  N245.                    CNS_INT   2
        Def:<I66>(#221)
  N247.                    PUTARG_REG
                               Use:<I66>(#223) Fixed:r8(#222) *
        Def:<I67>(#225) r8
  N249.                    CALL     
                               Use:<I63>(#227) Fixed:rdx(#226) *
                               Use:<I64>(#229) Fixed:rcx(#228) *
                               Use:<I65>(#231) Fixed:r9(#230) *
                               Use:<I67>(#233) Fixed:r8(#232) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I68>(#242) rax Pref:<V09/L8>
  N251.                    V09(L8)
                               Use:<I68>(#243) *
        Def:<V09/L8>(#244) Pref:<V10/L9>
  N253.                    CNS_INT   0x7ffc7e4c17e0
        Def:<I69>(#245)
  N255.                    PUTARG_REG
                               Use:<I69>(#247) Fixed:rcx(#246) *
        Def:<I70>(#249) rcx
  N257.                    CNS_INT   35
        Def:<I71>(#250)
  N259.                    PUTARG_REG
                               Use:<I71>(#252) Fixed:rdx(#251) *
        Def:<I72>(#254) rdx
  N261.                    CALL help
                               Use:<I70>(#256) Fixed:rcx(#255) *
                               Use:<I72>(#258) Fixed:rdx(#257) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I73>(#267) rax LocalDefUse *
  N263.                    CNS_INT(h) 0xd1ffab1e static Fseq[<>9__2_0]
        Def:<I74>(#268)
  N265.                    IND      
                               Use:<I74>(#269) *
        Def:<I75>(#270) Pref:<V08/L7>
  N267.                    V08(L7)
                               Use:<I75>(#271) *
        Def:<V08/L7>(#272) Pref:<V11/L10>
  N269.                    V09(L8)
  N271.                    V10(L9)
                               Use:<V09/L8>(#273) *
        Def:<V10/L9>(#274)
  N273.                    V08(L7)
  N275.                    V11(L10)
                               Use:<V08/L7>(#275) *
        Def:<V11/L10>(#276)
  N277.                    V11(L10)
  N279.                    CNS_INT   null
  N281.                    NE       
                               Use:<V11/L10>(#277)
  N283.                    JTRUE    

BB08 [000..062) -> BB16 (cond), preds={BB07} succs={BB09,BB16}
=====
  N287.                    CNS_INT(h) 0xd1ffab1e token
        Def:<I76>(#279)
  N289.                    PUTARG_REG
                               Use:<I76>(#281) Fixed:rcx(#280) *
        Def:<I77>(#283) rcx
  N291.                    CALL help
                               Use:<I77>(#285) Fixed:rcx(#284) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I78>(#294) rax Pref:<V17/L15>
  N293.                    V17(L15)
                               Use:<I78>(#295) *
        Def:<V17/L15>(#296) Pref:<V11/L10>
  N295.                    CNS_INT(h) 0xd1ffab1e static Fseq[<>9]
        Def:<I79>(#297)
  N297.                    IND      
                               Use:<I79>(#298) *
        Def:<I80>(#299) Pref:<V21/L19>
  N299.                    V21(L19)
                               Use:<I80>(#300) *
        Def:<V21/L19>(#301)
  N301.                    V21(L19)
  N303.                    CNS_INT   null
  N305.                    EQ       
                               Use:<V21/L19>(#302)
  N307.                    JTRUE    

BB09 [000..000), preds={BB08} succs={BB10}
=====
  N311.                    V17(L15)
  N313.                    LEA(b+8) 
                               Use:<V17/L15>(#304)
        Def:<I81>(#305)
  N315.                    V21(L19)
  N317.                    STOREIND 
                               Use:<I81>(#307) Fixed:rcx(#306) *
                               Use:<V21/L19>(#309) Fixed:rdx(#308) *
        Kill: rax rcx rdx r8 r9 r10 r11 mm0 mm1 mm2 mm3 mm4 mm5 
  N319.                    V17(L15)
  N321.                    LEA(b+24)
  N323.                    CNS_INT(h) 0xd1ffab1e ftn
        Def:<I82>(#323)
  N325.                    STOREIND 
                               Use:<V17/L15>(#324)
                               Use:<I82>(#325) *
  N327.                    IL_OFFSET IL offset: 0x5c
  N329.                    CNS_INT(h) 0xd1ffab1e static Fseq[<>9__2_0]
        Def:<I83>(#326)
  N331.                    V17(L15)
  N333.                    STOREIND 
                               Use:<I83>(#328) Fixed:rcx(#327) *
                               Use:<V17/L15>(#330) Fixed:rdx(#329)
        Kill: rax rcx rdx r8 r9 r10 r11 mm0 mm1 mm2 mm3 mm4 mm5 
  N335.                    V17(L15)
  N337.                    V11(L10)
                               Use:<V17/L15>(#344) *
        Def:<V11/L10>(#345)

BB10 [062..085) -> BB13 (cond), preds={BB07,BB09} succs={BB11,BB13}
=====
  N341.                    V11(L10)
  N343.                    PUTARG_REG
                               Use:<V11/L10>(#348) Fixed:r8(#347) *
        Def:<I84>(#350) r8
  N345.                    V10(L9)
  N347.                    PUTARG_REG
                               Use:<V10/L9>(#352) Fixed:rdx(#351) *
        Def:<I85>(#354) rdx
  N349.                    CNS_INT(h) 0xd1ffab1e method
        Def:<I86>(#355)
  N351.                    PUTARG_REG
                               Use:<I86>(#357) Fixed:rcx(#356) *
        Def:<I87>(#359) rcx
  N353.                    CALL     
                               Use:<I84>(#361) Fixed:r8(#360) *
                               Use:<I85>(#363) Fixed:rdx(#362) *
                               Use:<I87>(#365) Fixed:rcx(#364) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I88>(#374) rax Pref:<V05/L5>
  N355.                    V05(L5)
                               Use:<I88>(#375) *
        Def:<V05/L5>(#376) Pref:<V14/L12>
  N357.                    IL_OFFSET IL offset: 0x69
  N359.                    CNS_INT   0x7ffc7e783cd8
        Def:<I89>(#377)
  N361.                    PUTARG_REG
                               Use:<I89>(#379) Fixed:rcx(#378) *
        Def:<I90>(#381) rcx
  N363.                    CNS_INT   40
        Def:<I91>(#382)
  N365.                    PUTARG_REG
                               Use:<I91>(#384) Fixed:rdx(#383) *
        Def:<I92>(#386) rdx
  N367.                    CALL help
                               Use:<I90>(#388) Fixed:rcx(#387) *
                               Use:<I92>(#390) Fixed:rdx(#389) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I93>(#399) rax LocalDefUse *
  N369.                    CNS_INT(h) 0xd1ffab1e static Fseq[<Compatible>k__BackingField]
        Def:<I94>(#400)
  N371.                    IND      
                               Use:<I94>(#401) *
        Def:<I95>(#402) Pref:<V23/L20>
  N373.                    V23(L20)
                               Use:<I95>(#403) *
        Def:<V23/L20>(#404)
  N375.                    CNS_INT(h) 0xD1FFAB1E "*.csproj"
        Def:<I96>(#405)
  N377.                    IND      
                               Use:<I96>(#406) *
        Def:<I97>(#407)
  N379.                    PUTARG_REG
                               Use:<I97>(#409) Fixed:rdx(#408) *
        Def:<I98>(#411) rdx
  N381.                    V04(L4)
  N383.                    PUTARG_REG
                               Use:<V04/L4>(#413) Fixed:rcx(#412) *
        Def:<I99>(#415) rcx
  N385.                    V23(L20)
  N387.                    PUTARG_REG
                               Use:<V23/L20>(#417) Fixed:r9(#416) *
        Def:<I100>(#419) r9
  N389.                    CNS_INT   1
        Def:<I101>(#420)
  N391.                    PUTARG_REG
                               Use:<I101>(#422) Fixed:r8(#421) *
        Def:<I102>(#424) r8
  N393.                    CALL     
                               Use:<I98>(#426) Fixed:rdx(#425) *
                               Use:<I99>(#428) Fixed:rcx(#427) *
                               Use:<I100>(#430) Fixed:r9(#429) *
                               Use:<I102>(#432) Fixed:r8(#431) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I103>(#441) rax Pref:<V24/L21>
  N395.                    V24(L21)
                               Use:<I103>(#442) *
        Def:<V24/L21>(#443)
  N397.                    V01(L1)
  N399.                    LEA(b+16)
  N401.                    IND      
                               Use:<V01/L1>(#444)
        Def:<I104>(#445)
  N403.                    PUTARG_REG
                               Use:<I104>(#447) Fixed:rdx(#446) *
        Def:<I105>(#449) rdx
  N405.                    V01(L1)
  N407.                    PUTARG_REG
                               Use:<V01/L1>(#451) Fixed:rcx(#450)
        Def:<I106>(#453) rcx Pref:<V01/L1>
  N409.                    V24(L21)
  N411.                    PUTARG_REG
                               Use:<V24/L21>(#455) Fixed:r8(#454) *
        Def:<I107>(#457) r8
  N413.                    CALL     
                               Use:<I105>(#459) Fixed:rdx(#458) *
                               Use:<I106>(#461) Fixed:rcx(#460) *
                               Use:<I107>(#463) Fixed:r8(#462) *
        Kill: rax rcx rdx r8 r9 r10 r11 
  N415.                    IL_OFFSET IL offset: 0x7a
  N417.                    CNS_INT(h) 0xd1ffab1e static Fseq[<>9__2_1]
        Def:<I108>(#471)
  N419.                    IND      
                               Use:<I108>(#472) *
        Def:<I109>(#473) Pref:<V12/L11>
  N421.                    V12(L11)
                               Use:<I109>(#474) *
        Def:<V12/L11>(#475) Pref:<V15/L13>
  N423.                    V05(L5)
  N425.                    V14(L12)
                               Use:<V05/L5>(#476) *
        Def:<V14/L12>(#477)
  N427.                    V12(L11)
  N429.                    V15(L13)
                               Use:<V12/L11>(#478) *
        Def:<V15/L13>(#479)
  N431.                    V15(L13)
  N433.                    CNS_INT   null
  N435.                    NE       
                               Use:<V15/L13>(#480)
  N437.                    JTRUE    

BB11 [000..09C) -> BB16 (cond), preds={BB10} succs={BB12,BB16}
=====
  N441.                    CNS_INT(h) 0xd1ffab1e token
        Def:<I110>(#482)
  N443.                    PUTARG_REG
                               Use:<I110>(#484) Fixed:rcx(#483) *
        Def:<I111>(#486) rcx
  N445.                    CALL help
                               Use:<I111>(#488) Fixed:rcx(#487) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I112>(#497) rax Pref:<V16/L14>
  N447.                    V16(L14)
                               Use:<I112>(#498) *
        Def:<V16/L14>(#499) Pref:<V15/L13>
  N449.                    CNS_INT(h) 0xd1ffab1e static Fseq[<>9]
        Def:<I113>(#500)
  N451.                    IND      
                               Use:<I113>(#501) *
        Def:<I114>(#502) Pref:<V25/L22>
  N453.                    V25(L22)
                               Use:<I114>(#503) *
        Def:<V25/L22>(#504)
  N455.                    V25(L22)
  N457.                    CNS_INT   null
  N459.                    EQ       
                               Use:<V25/L22>(#505)
  N461.                    JTRUE    

BB12 [000..000), preds={BB11} succs={BB13}
=====
  N465.                    V16(L14)
  N467.                    LEA(b+8) 
                               Use:<V16/L14>(#507)
        Def:<I115>(#508)
  N469.                    V25(L22)
  N471.                    STOREIND 
                               Use:<I115>(#510) Fixed:rcx(#509) *
                               Use:<V25/L22>(#512) Fixed:rdx(#511) *
        Kill: rax rcx rdx r8 r9 r10 r11 mm0 mm1 mm2 mm3 mm4 mm5 
  N473.                    V16(L14)
  N475.                    LEA(b+24)
  N477.                    CNS_INT(h) 0xd1ffab1e ftn
        Def:<I116>(#526)
  N479.                    STOREIND 
                               Use:<V16/L14>(#527)
                               Use:<I116>(#528) *
  N481.                    IL_OFFSET IL offset: 0x96
  N483.                    CNS_INT(h) 0xd1ffab1e static Fseq[<>9__2_1]
        Def:<I117>(#529)
  N485.                    V16(L14)
  N487.                    STOREIND 
                               Use:<I117>(#531) Fixed:rcx(#530) *
                               Use:<V16/L14>(#533) Fixed:rdx(#532)
        Kill: rax rcx rdx r8 r9 r10 r11 mm0 mm1 mm2 mm3 mm4 mm5 
  N489.                    V16(L14)
  N491.                    V15(L13)
                               Use:<V16/L14>(#547) *
        Def:<V15/L13>(#548)

BB13 [09C..0A6), preds={BB10,BB12} succs={BB14}
=====
  N495.                    V15(L13)
  N497.                    PUTARG_REG
                               Use:<V15/L13>(#551) Fixed:r8(#550) *
        Def:<I118>(#553) r8
  N499.                    V14(L12)
  N501.                    PUTARG_REG
                               Use:<V14/L12>(#555) Fixed:rdx(#554) *
        Def:<I119>(#557) rdx
  N503.                    CNS_INT(h) 0xd1ffab1e method
        Def:<I120>(#558)
  N505.                    PUTARG_REG
                               Use:<I120>(#560) Fixed:rcx(#559) *
        Def:<I121>(#562) rcx
  N507.                    CALL     
                               Use:<I118>(#564) Fixed:r8(#563) *
                               Use:<I119>(#566) Fixed:rdx(#565) *
                               Use:<I121>(#568) Fixed:rcx(#567) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I122>(#577) rax Pref:<V27/L23>
  N509.                    V27(L23)
                               Use:<I122>(#578) *
        Def:<V27/L23>(#579)
  N511.                    V01(L1)
  N513.                    LEA(b+16)
  N515.                    IND      
                               Use:<V01/L1>(#580)
        Def:<I123>(#581)
  N517.                    PUTARG_REG
                               Use:<I123>(#583) Fixed:rdx(#582) *
        Def:<I124>(#585) rdx
  N519.                    V01(L1)
  N521.                    PUTARG_REG
                               Use:<V01/L1>(#587) Fixed:rcx(#586)
        Def:<I125>(#589) rcx Pref:<V01/L1>
  N523.                    V27(L23)
  N525.                    PUTARG_REG
                               Use:<V27/L23>(#591) Fixed:r8(#590) *
        Def:<I126>(#593) r8
  N527.                    CALL     
                               Use:<I124>(#595) Fixed:rdx(#594) *
                               Use:<I125>(#597) Fixed:rcx(#596) *
                               Use:<I126>(#599) Fixed:r8(#598) *
        Kill: rax rcx rdx r8 r9 r10 r11 

BB14 [0A6..0B3) -> BB02 (cond), preds={BB04,BB05,BB13} succs={BB15,BB02}
=====
  N531.                    IL_OFFSET IL offset: 0xa6
  N533.                    V03(L3)
  N535.                    CNS_INT   1
  N537.                    ADD      
                               Use:<V03/L3>(#608) *
        Def:<I127>(#609) Pref:<V03/L3>
  N539.                    V03(L3)
                               Use:<I127>(#610) *
        Def:<V03/L3>(#611) Pref:<I127>
  N541.                    IL_OFFSET IL offset: 0xaa
  N543.                    V29(L24)
  N545.                    V03(L3)
  N547.                    GT       
                               Use:<V29/L24>(#612)
                               Use:<V03/L3>(#613)
  N549.                    JTRUE    

  Exposed use of V03 at #614
  Exposed use of V02 at #615
  Exposed use of V29 at #616
BB15 [0B3..0C7) (return), preds={BB01,BB14} succs={}
=====
  N553.                    IL_OFFSET IL offset: 0xb3
  N555.                    V01(L1)
  N557.                    PUTARG_REG
                               Use:<V01/L1>(#619) Fixed:rdx(#618)
        Def:<I128>(#621) rdx Pref:<V01/L1>
  N559.                    CNS_INT(h) 0xd1ffab1e method
        Def:<I129>(#622)
  N561.                    PUTARG_REG
                               Use:<I129>(#624) Fixed:rcx(#623) *
        Def:<I130>(#626) rcx
  N563.                    CALL     
                               Use:<I128>(#628) Fixed:rdx(#627) *
                               Use:<I130>(#630) Fixed:rcx(#629) *
        Kill: rax rcx rdx r8 r9 r10 r11 
  N565.                    CNS_INT(h) 0xD1FFAB1E "Enumerated and shuffled the project paths."
        Def:<I131>(#638)
  N567.                    IND      
                               Use:<I131>(#639) *
        Def:<I132>(#640)
  N569.                    PUTARG_REG
                               Use:<I132>(#642) Fixed:rdx(#641) *
        Def:<I133>(#644) rdx
  N571.                    CNS_INT(h) 0xd1ffab1e method
        Def:<I134>(#645)
  N573.                    PUTARG_REG
                               Use:<I134>(#647) Fixed:rcx(#646) *
        Def:<I135>(#649) rcx
  N575.                    CNS_INT   2
        Def:<I136>(#650)
  N577.                    PUTARG_REG
                               Use:<I136>(#652) Fixed:r8(#651) *
        Def:<I137>(#654) r8
  N579.                    CALL     
                               Use:<I133>(#656) Fixed:rdx(#655) *
                               Use:<I135>(#658) Fixed:rcx(#657) *
                               Use:<I137>(#660) Fixed:r8(#659) *
        Kill: rax rcx rdx r8 r9 r10 r11 
        Def:<I138>(#669) rax LocalDefUse *
  N581.                    IL_OFFSET IL offset: 0xc5
  N583.                    V01(L1)
  N585.                    RETURN   
                               Use:<V01/L1>(#671) Fixed:rax(#670) *

BB16 [000..000) (throw), preds={BB08,BB11} succs={}
=====
  N589.                    CALL     
        Kill: rax rcx rdx r8 r9 r10 r11 




Linear scan intervals after buildIntervals:
Interval  0: (V00) ref RefPositions {#0@0 #74@49} physReg:rcx Preferences=[rbx rbp rsi rdi r12-r15] RelatedInterval <V02/L2>
Interval  1: (V01) ref RefPositions {#73@44 #126@137 #127@145 #131@155 #140@187 #169@211 #444@401 #451@407 #580@515 #587@521 #619@557 #671@585} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  2: (V02) ref RefPositions {#75@50 #79@63 #87@87 #615@551} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  3: (V03) int RefPositions {#78@56 #85@83 #608@537 #611@540 #613@547 #614@551} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15] RelatedInterval <I127>
Interval  4: (V04) ref RefPositions {#91@90 #92@95 #101@105 #151@201 #173@215 #214@239 #413@383} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  5: (V05) ref RefPositions {#376@356 #476@425} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15] RelatedInterval <V14/L12>
Interval  6: (V07) ref RefPositions {#51@28 #53@31 #72@43} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15] RelatedInterval <V01/L1>
Interval  7: (V08) ref RefPositions {#272@268 #275@275} physReg:NA Preferences=[allInt] RelatedInterval <V11/L10>
Interval  8: (V09) ref RefPositions {#244@252 #273@271} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15] RelatedInterval <V10/L9>
Interval  9: (V10) ref RefPositions {#274@272 #352@347} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval 10: (V11) ref RefPositions {#276@276 #277@281 #345@338 #348@343} physReg:NA Preferences=[r8]
Interval 11: (V12) ref RefPositions {#475@422 #478@429} physReg:NA Preferences=[allInt] RelatedInterval <V15/L13>
Interval 12: (V14) ref RefPositions {#477@426 #555@501} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval 13: (V15) ref RefPositions {#479@430 #480@435 #548@492 #551@497} physReg:NA Preferences=[r8]
Interval 14: (V16) ref RefPositions {#499@448 #507@467 #527@479 #533@487 #547@491} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15] RelatedInterval <V15/L13>
Interval 15: (V17) ref RefPositions {#296@294 #304@313 #324@325 #330@333 #344@337} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15] RelatedInterval <V11/L10>
Interval 16: (V18) ref RefPositions {#130@148 #135@169 #143@193} physReg:NA Preferences=[rcx]
Interval 17: (V19) int RefPositions {#134@158 #136@169 #138@181 #147@197} physReg:NA Preferences=[rdx]
Interval 18: (V20) ref RefPositions {#205@230 #218@243} physReg:NA Preferences=[r9]
Interval 19: (V21) ref RefPositions {#301@300 #302@305 #309@317} physReg:NA Preferences=[rdx]
Interval 20: (V23) ref RefPositions {#404@374 #417@387} physReg:NA Preferences=[r9]
Interval 21: (V24) ref RefPositions {#443@396 #455@411} physReg:NA Preferences=[r8]
Interval 22: (V25) ref RefPositions {#504@454 #505@459 #512@471} physReg:NA Preferences=[rdx]
Interval 23: (V27) ref RefPositions {#579@510 #591@525} physReg:NA Preferences=[r8]
Interval 24: (V29) int RefPositions {#82@66 #83@71 #612@547 #616@551} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval 25: long (constant) RefPositions {#2@4 #3@5} physReg:NA Preferences=[allInt]
Interval 26: ref RefPositions {#4@6 #6@7} physReg:NA Preferences=[rdx]
Interval 27: ref RefPositions {#8@8 #20@17} physReg:NA Preferences=[rdx]
Interval 28: long (constant) RefPositions {#9@10 #11@11} physReg:NA Preferences=[rcx]
Interval 29: long RefPositions {#13@12 #22@17} physReg:NA Preferences=[rcx]
Interval 30: int (constant) RefPositions {#14@14 #16@15} physReg:NA Preferences=[r8]
Interval 31: int RefPositions {#18@16 #24@17} physReg:NA Preferences=[r8]
Interval 32: ref RefPositions {#33@18} physReg:NA Preferences=[rax]
Interval 33: long (constant) RefPositions {#34@22 #36@23} physReg:NA Preferences=[rcx]
Interval 34: long RefPositions {#38@24 #40@25} physReg:NA Preferences=[rcx]
Interval 35: ref RefPositions {#49@26 #50@27} physReg:NA Preferences=[rax] RelatedInterval <V07/L6>
Interval 36: ref (specialPutArg) RefPositions {#55@32 #62@37} physReg:NA Preferences=[rcx] RelatedInterval <V07/L6>
Interval 37: int (constant) RefPositions {#56@34 #58@35} physReg:NA Preferences=[rdx]
Interval 38: int RefPositions {#60@36 #64@37} physReg:NA Preferences=[rdx]
Interval 39: int (constant) RefPositions {#76@54 #77@55} physReg:NA Preferences=[allInt] RelatedInterval <V03/L3>
Interval 40: int RefPositions {#80@64 #81@65} physReg:NA Preferences=[allInt] RelatedInterval <V29/L24>
Interval 41: long RefPositions {#86@84 #88@87} physReg:NA Preferences=[allInt]
Interval 42: ref RefPositions {#89@88 #90@89} physReg:NA Preferences=[allInt] RelatedInterval <V04/L4>
Interval 43: long (constant) RefPositions {#93@98 #94@99} physReg:NA Preferences=[allInt]
Interval 44: ref RefPositions {#95@100 #97@101} physReg:NA Preferences=[rdx]
Interval 45: ref RefPositions {#99@102 #110@111} physReg:NA Preferences=[rdx]
Interval 46: ref (specialPutArg) RefPositions {#103@106 #112@111} physReg:NA Preferences=[rcx] RelatedInterval <V04/L4>
Interval 47: int (constant) RefPositions {#104@108 #106@109} physReg:NA Preferences=[r8]
Interval 48: int RefPositions {#108@110 #114@111} physReg:NA Preferences=[r8]
Interval 49: int RefPositions {#123@112 #124@115} physReg:NA Preferences=[rax]
Interval 50: ref RefPositions {#128@146 #129@147} physReg:NA Preferences=[allInt] RelatedInterval <V18/L16>
Interval 51: int RefPositions {#132@156 #133@157} physReg:NA Preferences=[allInt] RelatedInterval <V19/L17>
Interval 52: int RefPositions {#139@182 #141@187} physReg:NA Preferences=[allInt]
Interval 53: ref RefPositions {#145@194 #155@203} physReg:NA Preferences=[rcx]
Interval 54: int RefPositions {#149@198 #157@203} physReg:NA Preferences=[rdx]
Interval 55: ref RefPositions {#153@202 #159@203} physReg:NA Preferences=[r8]
Interval 56: ref (specialPutArg) RefPositions {#171@212 #177@217} physReg:NA Preferences=[rcx] RelatedInterval <V01/L1>
Interval 57: ref RefPositions {#175@216 #179@217} physReg:NA Preferences=[rdx]
Interval 58: int (constant) RefPositions {#188@224 #190@225} physReg:NA Preferences=[rcx]
Interval 59: int RefPositions {#192@226 #194@227} physReg:NA Preferences=[rcx]
Interval 60: ref RefPositions {#203@228 #204@229} physReg:NA Preferences=[rax] RelatedInterval <V20/L18>
Interval 61: long (constant) RefPositions {#206@232 #207@233} physReg:NA Preferences=[allInt]
Interval 62: ref RefPositions {#208@234 #210@235} physReg:NA Preferences=[rdx]
Interval 63: ref RefPositions {#212@236 #227@249} physReg:NA Preferences=[rdx]
Interval 64: ref (specialPutArg) RefPositions {#216@240 #229@249} physReg:NA Preferences=[rcx] RelatedInterval <V04/L4>
Interval 65: ref RefPositions {#220@244 #231@249} physReg:NA Preferences=[r9]
Interval 66: int (constant) RefPositions {#221@246 #223@247} physReg:NA Preferences=[r8]
Interval 67: int RefPositions {#225@248 #233@249} physReg:NA Preferences=[r8]
Interval 68: ref RefPositions {#242@250 #243@251} physReg:NA Preferences=[rax] RelatedInterval <V09/L8>
Interval 69: long (constant) RefPositions {#245@254 #247@255} physReg:NA Preferences=[rcx]
Interval 70: long RefPositions {#249@256 #256@261} physReg:NA Preferences=[rcx]
Interval 71: int (constant) RefPositions {#250@258 #252@259} physReg:NA Preferences=[rdx]
Interval 72: int RefPositions {#254@260 #258@261} physReg:NA Preferences=[rdx]
Interval 73: long RefPositions {#267@262} physReg:NA Preferences=[rax]
Interval 74: long (constant) RefPositions {#268@264 #269@265} physReg:NA Preferences=[allInt]
Interval 75: ref RefPositions {#270@266 #271@267} physReg:NA Preferences=[allInt] RelatedInterval <V08/L7>
Interval 76: long (constant) RefPositions {#279@288 #281@289} physReg:NA Preferences=[rcx]
Interval 77: long RefPositions {#283@290 #285@291} physReg:NA Preferences=[rcx]
Interval 78: ref RefPositions {#294@292 #295@293} physReg:NA Preferences=[rax] RelatedInterval <V17/L15>
Interval 79: long (constant) RefPositions {#297@296 #298@297} physReg:NA Preferences=[allInt]
Interval 80: ref RefPositions {#299@298 #300@299} physReg:NA Preferences=[allInt] RelatedInterval <V21/L19>
Interval 81: byref RefPositions {#305@314 #307@317} physReg:NA Preferences=[rcx]
Interval 82: long (constant) RefPositions {#323@324 #325@325} physReg:NA Preferences=[allInt]
Interval 83: long (constant) RefPositions {#326@330 #328@333} physReg:NA Preferences=[rcx]
Interval 84: ref RefPositions {#350@344 #361@353} physReg:NA Preferences=[r8]
Interval 85: ref RefPositions {#354@348 #363@353} physReg:NA Preferences=[rdx]
Interval 86: long (constant) RefPositions {#355@350 #357@351} physReg:NA Preferences=[rcx]
Interval 87: long RefPositions {#359@352 #365@353} physReg:NA Preferences=[rcx]
Interval 88: ref RefPositions {#374@354 #375@355} physReg:NA Preferences=[rax] RelatedInterval <V05/L5>
Interval 89: long (constant) RefPositions {#377@360 #379@361} physReg:NA Preferences=[rcx]
Interval 90: long RefPositions {#381@362 #388@367} physReg:NA Preferences=[rcx]
Interval 91: int (constant) RefPositions {#382@364 #384@365} physReg:NA Preferences=[rdx]
Interval 92: int RefPositions {#386@366 #390@367} physReg:NA Preferences=[rdx]
Interval 93: long RefPositions {#399@368} physReg:NA Preferences=[rax]
Interval 94: long (constant) RefPositions {#400@370 #401@371} physReg:NA Preferences=[allInt]
Interval 95: ref RefPositions {#402@372 #403@373} physReg:NA Preferences=[allInt] RelatedInterval <V23/L20>
Interval 96: long (constant) RefPositions {#405@376 #406@377} physReg:NA Preferences=[allInt]
Interval 97: ref RefPositions {#407@378 #409@379} physReg:NA Preferences=[rdx]
Interval 98: ref RefPositions {#411@380 #426@393} physReg:NA Preferences=[rdx]
Interval 99: ref RefPositions {#415@384 #428@393} physReg:NA Preferences=[rcx]
Interval 100: ref RefPositions {#419@388 #430@393} physReg:NA Preferences=[r9]
Interval 101: int (constant) RefPositions {#420@390 #422@391} physReg:NA Preferences=[r8]
Interval 102: int RefPositions {#424@392 #432@393} physReg:NA Preferences=[r8]
Interval 103: ref RefPositions {#441@394 #442@395} physReg:NA Preferences=[rax] RelatedInterval <V24/L21>
Interval 104: int RefPositions {#445@402 #447@403} physReg:NA Preferences=[rdx]
Interval 105: int RefPositions {#449@404 #459@413} physReg:NA Preferences=[rdx]
Interval 106: ref (specialPutArg) RefPositions {#453@408 #461@413} physReg:NA Preferences=[rcx] RelatedInterval <V01/L1>
Interval 107: ref RefPositions {#457@412 #463@413} physReg:NA Preferences=[r8]
Interval 108: long (constant) RefPositions {#471@418 #472@419} physReg:NA Preferences=[allInt]
Interval 109: ref RefPositions {#473@420 #474@421} physReg:NA Preferences=[allInt] RelatedInterval <V12/L11>
Interval 110: long (constant) RefPositions {#482@442 #484@443} physReg:NA Preferences=[rcx]
Interval 111: long RefPositions {#486@444 #488@445} physReg:NA Preferences=[rcx]
Interval 112: ref RefPositions {#497@446 #498@447} physReg:NA Preferences=[rax] RelatedInterval <V16/L14>
Interval 113: long (constant) RefPositions {#500@450 #501@451} physReg:NA Preferences=[allInt]
Interval 114: ref RefPositions {#502@452 #503@453} physReg:NA Preferences=[allInt] RelatedInterval <V25/L22>
Interval 115: byref RefPositions {#508@468 #510@471} physReg:NA Preferences=[rcx]
Interval 116: long (constant) RefPositions {#526@478 #528@479} physReg:NA Preferences=[allInt]
Interval 117: long (constant) RefPositions {#529@484 #531@487} physReg:NA Preferences=[rcx]
Interval 118: ref RefPositions {#553@498 #564@507} physReg:NA Preferences=[r8]
Interval 119: ref RefPositions {#557@502 #566@507} physReg:NA Preferences=[rdx]
Interval 120: long (constant) RefPositions {#558@504 #560@505} physReg:NA Preferences=[rcx]
Interval 121: long RefPositions {#562@506 #568@507} physReg:NA Preferences=[rcx]
Interval 122: ref RefPositions {#577@508 #578@509} physReg:NA Preferences=[rax] RelatedInterval <V27/L23>
Interval 123: int RefPositions {#581@516 #583@517} physReg:NA Preferences=[rdx]
Interval 124: int RefPositions {#585@518 #595@527} physReg:NA Preferences=[rdx]
Interval 125: ref (specialPutArg) RefPositions {#589@522 #597@527} physReg:NA Preferences=[rcx] RelatedInterval <V01/L1>
Interval 126: ref RefPositions {#593@526 #599@527} physReg:NA Preferences=[r8]
Interval 127: int RefPositions {#609@538 #610@539} physReg:NA Preferences=[allInt] RelatedInterval <V03/L3>
Interval 128: ref (specialPutArg) RefPositions {#621@558 #628@563} physReg:NA Preferences=[rdx] RelatedInterval <V01/L1>
Interval 129: long (constant) RefPositions {#622@560 #624@561} physReg:NA Preferences=[rcx]
Interval 130: long RefPositions {#626@562 #630@563} physReg:NA Preferences=[rcx]
Interval 131: long (constant) RefPositions {#638@566 #639@567} physReg:NA Preferences=[allInt]
Interval 132: ref RefPositions {#640@568 #642@569} physReg:NA Preferences=[rdx]
Interval 133: ref RefPositions {#644@570 #656@579} physReg:NA Preferences=[rdx]
Interval 134: long (constant) RefPositions {#645@572 #647@573} physReg:NA Preferences=[rcx]
Interval 135: long RefPositions {#649@574 #658@579} physReg:NA Preferences=[rcx]
Interval 136: int (constant) RefPositions {#650@576 #652@577} physReg:NA Preferences=[r8]
Interval 137: int RefPositions {#654@578 #660@579} physReg:NA Preferences=[r8]
Interval 138: ref RefPositions {#669@580} physReg:NA Preferences=[rax]

*************** In LinearScan::allocateRegisters()

Linear scan intervals before allocateRegisters:
Interval  0: (V00) ref RefPositions {#0@0 #74@49} physReg:rcx Preferences=[rbx rbp rsi rdi r12-r15] RelatedInterval <V02/L2>
Interval  1: (V01) ref RefPositions {#73@44 #126@137 #127@145 #131@155 #140@187 #169@211 #444@401 #451@407 #580@515 #587@521 #619@557 #671@585} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  2: (V02) ref RefPositions {#75@50 #79@63 #87@87 #615@551} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  3: (V03) int RefPositions {#78@56 #85@83 #608@537 #611@540 #613@547 #614@551} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15] RelatedInterval <I127>
Interval  4: (V04) ref RefPositions {#91@90 #92@95 #101@105 #151@201 #173@215 #214@239 #413@383} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval  5: (V05) ref RefPositions {#376@356 #476@425} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15] RelatedInterval <V14/L12>
Interval  6: (V07) ref RefPositions {#51@28 #53@31 #72@43} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15] RelatedInterval <V01/L1>
Interval  7: (V08) ref RefPositions {#272@268 #275@275} physReg:NA Preferences=[allInt] RelatedInterval <V11/L10>
Interval  8: (V09) ref RefPositions {#244@252 #273@271} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15] RelatedInterval <V10/L9>
Interval  9: (V10) ref RefPositions {#274@272 #352@347} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval 10: (V11) ref RefPositions {#276@276 #277@281 #345@338 #348@343} physReg:NA Preferences=[r8]
Interval 11: (V12) ref RefPositions {#475@422 #478@429} physReg:NA Preferences=[allInt] RelatedInterval <V15/L13>
Interval 12: (V14) ref RefPositions {#477@426 #555@501} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval 13: (V15) ref RefPositions {#479@430 #480@435 #548@492 #551@497} physReg:NA Preferences=[r8]
Interval 14: (V16) ref RefPositions {#499@448 #507@467 #527@479 #533@487 #547@491} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15] RelatedInterval <V15/L13>
Interval 15: (V17) ref RefPositions {#296@294 #304@313 #324@325 #330@333 #344@337} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15] RelatedInterval <V11/L10>
Interval 16: (V18) ref RefPositions {#130@148 #135@169 #143@193} physReg:NA Preferences=[rcx]
Interval 17: (V19) int RefPositions {#134@158 #136@169 #138@181 #147@197} physReg:NA Preferences=[rdx]
Interval 18: (V20) ref RefPositions {#205@230 #218@243} physReg:NA Preferences=[r9]
Interval 19: (V21) ref RefPositions {#301@300 #302@305 #309@317} physReg:NA Preferences=[rdx]
Interval 20: (V23) ref RefPositions {#404@374 #417@387} physReg:NA Preferences=[r9]
Interval 21: (V24) ref RefPositions {#443@396 #455@411} physReg:NA Preferences=[r8]
Interval 22: (V25) ref RefPositions {#504@454 #505@459 #512@471} physReg:NA Preferences=[rdx]
Interval 23: (V27) ref RefPositions {#579@510 #591@525} physReg:NA Preferences=[r8]
Interval 24: (V29) int RefPositions {#82@66 #83@71 #612@547 #616@551} physReg:NA Preferences=[rbx rbp rsi rdi r12-r15]
Interval 25: long (constant) RefPositions {#2@4 #3@5} physReg:NA Preferences=[allInt]
Interval 26: ref RefPositions {#4@6 #6@7} physReg:NA Preferences=[rdx]
Interval 27: ref RefPositions {#8@8 #20@17} physReg:NA Preferences=[rdx]
Interval 28: long (constant) RefPositions {#9@10 #11@11} physReg:NA Preferences=[rcx]
Interval 29: long RefPositions {#13@12 #22@17} physReg:NA Preferences=[rcx]
Interval 30: int (constant) RefPositions {#14@14 #16@15} physReg:NA Preferences=[r8]
Interval 31: int RefPositions {#18@16 #24@17} physReg:NA Preferences=[r8]
Interval 32: ref RefPositions {#33@18} physReg:NA Preferences=[rax]
Interval 33: long (constant) RefPositions {#34@22 #36@23} physReg:NA Preferences=[rcx]
Interval 34: long RefPositions {#38@24 #40@25} physReg:NA Preferences=[rcx]
Interval 35: ref RefPositions {#49@26 #50@27} physReg:NA Preferences=[rax] RelatedInterval <V07/L6>
Interval 36: ref (specialPutArg) RefPositions {#55@32 #62@37} physReg:NA Preferences=[rcx] RelatedInterval <V07/L6>
Interval 37: int (constant) RefPositions {#56@34 #58@35} physReg:NA Preferences=[rdx]
Interval 38: int RefPositions {#60@36 #64@37} physReg:NA Preferences=[rdx]
Interval 39: int (constant) RefPositions {#76@54 #77@55} physReg:NA Preferences=[allInt] RelatedInterval <V03/L3>
Interval 40: int RefPositions {#80@64 #81@65} physReg:NA Preferences=[allInt] RelatedInterval <V29/L24>
Interval 41: long RefPositions {#86@84 #88@87} physReg:NA Preferences=[allInt]
Interval 42: ref RefPositions {#89@88 #90@89} physReg:NA Preferences=[allInt] RelatedInterval <V04/L4>
Interval 43: long (constant) RefPositions {#93@98 #94@99} physReg:NA Preferences=[allInt]
Interval 44: ref RefPositions {#95@100 #97@101} physReg:NA Preferences=[rdx]
Interval 45: ref RefPositions {#99@102 #110@111} physReg:NA Preferences=[rdx]
Interval 46: ref (specialPutArg) RefPositions {#103@106 #112@111} physReg:NA Preferences=[rcx] RelatedInterval <V04/L4>
Interval 47: int (constant) RefPositions {#104@108 #106@109} physReg:NA Preferences=[r8]
Interval 48: int RefPositions {#108@110 #114@111} physReg:NA Preferences=[r8]
Interval 49: int RefPositions {#123@112 #124@115} physReg:NA Preferences=[rax]
Interval 50: ref RefPositions {#128@146 #129@147} physReg:NA Preferences=[allInt] RelatedInterval <V18/L16>
Interval 51: int RefPositions {#132@156 #133@157} physReg:NA Preferences=[allInt] RelatedInterval <V19/L17>
Interval 52: int RefPositions {#139@182 #141@187} physReg:NA Preferences=[allInt]
Interval 53: ref RefPositions {#145@194 #155@203} physReg:NA Preferences=[rcx]
Interval 54: int RefPositions {#149@198 #157@203} physReg:NA Preferences=[rdx]
Interval 55: ref RefPositions {#153@202 #159@203} physReg:NA Preferences=[r8]
Interval 56: ref (specialPutArg) RefPositions {#171@212 #177@217} physReg:NA Preferences=[rcx] RelatedInterval <V01/L1>
Interval 57: ref RefPositions {#175@216 #179@217} physReg:NA Preferences=[rdx]
Interval 58: int (constant) RefPositions {#188@224 #190@225} physReg:NA Preferences=[rcx]
Interval 59: int RefPositions {#192@226 #194@227} physReg:NA Preferences=[rcx]
Interval 60: ref RefPositions {#203@228 #204@229} physReg:NA Preferences=[rax] RelatedInterval <V20/L18>
Interval 61: long (constant) RefPositions {#206@232 #207@233} physReg:NA Preferences=[allInt]
Interval 62: ref RefPositions {#208@234 #210@235} physReg:NA Preferences=[rdx]
Interval 63: ref RefPositions {#212@236 #227@249} physReg:NA Preferences=[rdx]
Interval 64: ref (specialPutArg) RefPositions {#216@240 #229@249} physReg:NA Preferences=[rcx] RelatedInterval <V04/L4>
Interval 65: ref RefPositions {#220@244 #231@249} physReg:NA Preferences=[r9]
Interval 66: int (constant) RefPositions {#221@246 #223@247} physReg:NA Preferences=[r8]
Interval 67: int RefPositions {#225@248 #233@249} physReg:NA Preferences=[r8]
Interval 68: ref RefPositions {#242@250 #243@251} physReg:NA Preferences=[rax] RelatedInterval <V09/L8>
Interval 69: long (constant) RefPositions {#245@254 #247@255} physReg:NA Preferences=[rcx]
Interval 70: long RefPositions {#249@256 #256@261} physReg:NA Preferences=[rcx]
Interval 71: int (constant) RefPositions {#250@258 #252@259} physReg:NA Preferences=[rdx]
Interval 72: int RefPositions {#254@260 #258@261} physReg:NA Preferences=[rdx]
Interval 73: long RefPositions {#267@262} physReg:NA Preferences=[rax]
Interval 74: long (constant) RefPositions {#268@264 #269@265} physReg:NA Preferences=[allInt]
Interval 75: ref RefPositions {#270@266 #271@267} physReg:NA Preferences=[allInt] RelatedInterval <V08/L7>
Interval 76: long (constant) RefPositions {#279@288 #281@289} physReg:NA Preferences=[rcx]
Interval 77: long RefPositions {#283@290 #285@291} physReg:NA Preferences=[rcx]
Interval 78: ref RefPositions {#294@292 #295@293} physReg:NA Preferences=[rax] RelatedInterval <V17/L15>
Interval 79: long (constant) RefPositions {#297@296 #298@297} physReg:NA Preferences=[allInt]
Interval 80: ref RefPositions {#299@298 #300@299} physReg:NA Preferences=[allInt] RelatedInterval <V21/L19>
Interval 81: byref RefPositions {#305@314 #307@317} physReg:NA Preferences=[rcx]
Interval 82: long (constant) RefPositions {#323@324 #325@325} physReg:NA Preferences=[allInt]
Interval 83: long (constant) RefPositions {#326@330 #328@333} physReg:NA Preferences=[rcx]
Interval 84: ref RefPositions {#350@344 #361@353} physReg:NA Preferences=[r8]
Interval 85: ref RefPositions {#354@348 #363@353} physReg:NA Preferences=[rdx]
Interval 86: long (constant) RefPositions {#355@350 #357@351} physReg:NA Preferences=[rcx]
Interval 87: long RefPositions {#359@352 #365@353} physReg:NA Preferences=[rcx]
Interval 88: ref RefPositions {#374@354 #375@355} physReg:NA Preferences=[rax] RelatedInterval <V05/L5>
Interval 89: long (constant) RefPositions {#377@360 #379@361} physReg:NA Preferences=[rcx]
Interval 90: long RefPositions {#381@362 #388@367} physReg:NA Preferences=[rcx]
Interval 91: int (constant) RefPositions {#382@364 #384@365} physReg:NA Preferences=[rdx]
Interval 92: int RefPositions {#386@366 #390@367} physReg:NA Preferences=[rdx]
Interval 93: long RefPositions {#399@368} physReg:NA Preferences=[rax]
Interval 94: long (constant) RefPositions {#400@370 #401@371} physReg:NA Preferences=[allInt]
Interval 95: ref RefPositions {#402@372 #403@373} physReg:NA Preferences=[allInt] RelatedInterval <V23/L20>
Interval 96: long (constant) RefPositions {#405@376 #406@377} physReg:NA Preferences=[allInt]
Interval 97: ref RefPositions {#407@378 #409@379} physReg:NA Preferences=[rdx]
Interval 98: ref RefPositions {#411@380 #426@393} physReg:NA Preferences=[rdx]
Interval 99: ref RefPositions {#415@384 #428@393} physReg:NA Preferences=[rcx]
Interval 100: ref RefPositions {#419@388 #430@393} physReg:NA Preferences=[r9]
Interval 101: int (constant) RefPositions {#420@390 #422@391} physReg:NA Preferences=[r8]
Interval 102: int RefPositions {#424@392 #432@393} physReg:NA Preferences=[r8]
Interval 103: ref RefPositions {#441@394 #442@395} physReg:NA Preferences=[rax] RelatedInterval <V24/L21>
Interval 104: int RefPositions {#445@402 #447@403} physReg:NA Preferences=[rdx]
Interval 105: int RefPositions {#449@404 #459@413} physReg:NA Preferences=[rdx]
Interval 106: ref (specialPutArg) RefPositions {#453@408 #461@413} physReg:NA Preferences=[rcx] RelatedInterval <V01/L1>
Interval 107: ref RefPositions {#457@412 #463@413} physReg:NA Preferences=[r8]
Interval 108: long (constant) RefPositions {#471@418 #472@419} physReg:NA Preferences=[allInt]
Interval 109: ref RefPositions {#473@420 #474@421} physReg:NA Preferences=[allInt] RelatedInterval <V12/L11>
Interval 110: long (constant) RefPositions {#482@442 #484@443} physReg:NA Preferences=[rcx]
Interval 111: long RefPositions {#486@444 #488@445} physReg:NA Preferences=[rcx]
Interval 112: ref RefPositions {#497@446 #498@447} physReg:NA Preferences=[rax] RelatedInterval <V16/L14>
Interval 113: long (constant) RefPositions {#500@450 #501@451} physReg:NA Preferences=[allInt]
Interval 114: ref RefPositions {#502@452 #503@453} physReg:NA Preferences=[allInt] RelatedInterval <V25/L22>
Interval 115: byref RefPositions {#508@468 #510@471} physReg:NA Preferences=[rcx]
Interval 116: long (constant) RefPositions {#526@478 #528@479} physReg:NA Preferences=[allInt]
Interval 117: long (constant) RefPositions {#529@484 #531@487} physReg:NA Preferences=[rcx]
Interval 118: ref RefPositions {#553@498 #564@507} physReg:NA Preferences=[r8]
Interval 119: ref RefPositions {#557@502 #566@507} physReg:NA Preferences=[rdx]
Interval 120: long (constant) RefPositions {#558@504 #560@505} physReg:NA Preferences=[rcx]
Interval 121: long RefPositions {#562@506 #568@507} physReg:NA Preferences=[rcx]
Interval 122: ref RefPositions {#577@508 #578@509} physReg:NA Preferences=[rax] RelatedInterval <V27/L23>
Interval 123: int RefPositions {#581@516 #583@517} physReg:NA Preferences=[rdx]
Interval 124: int RefPositions {#585@518 #595@527} physReg:NA Preferences=[rdx]
Interval 125: ref (specialPutArg) RefPositions {#589@522 #597@527} physReg:NA Preferences=[rcx] RelatedInterval <V01/L1>
Interval 126: ref RefPositions {#593@526 #599@527} physReg:NA Preferences=[r8]
Interval 127: int RefPositions {#609@538 #610@539} physReg:NA Preferences=[allInt] RelatedInterval <V03/L3>
Interval 128: ref (specialPutArg) RefPositions {#621@558 #628@563} physReg:NA Preferences=[rdx] RelatedInterval <V01/L1>
Interval 129: long (constant) RefPositions {#622@560 #624@561} physReg:NA Preferences=[rcx]
Interval 130: long RefPositions {#626@562 #630@563} physReg:NA Preferences=[rcx]
Interval 131: long (constant) RefPositions {#638@566 #639@567} physReg:NA Preferences=[allInt]
Interval 132: ref RefPositions {#640@568 #642@569} physReg:NA Preferences=[rdx]
Interval 133: ref RefPositions {#644@570 #656@579} physReg:NA Preferences=[rdx]
Interval 134: long (constant) RefPositions {#645@572 #647@573} physReg:NA Preferences=[rcx]
Interval 135: long RefPositions {#649@574 #658@579} physReg:NA Preferences=[rcx]
Interval 136: int (constant) RefPositions {#650@576 #652@577} physReg:NA Preferences=[r8]
Interval 137: int RefPositions {#654@578 #660@579} physReg:NA Preferences=[r8]
Interval 138: ref RefPositions {#669@580} physReg:NA Preferences=[rax]

------------
REFPOSITIONS BEFORE ALLOCATION: 
------------
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00>  BB00 regmask=[rcx] minReg=1 fixed regOptional>
<RefPosition #1   @1   RefTypeBB  BB01 regmask=[] minReg=1>
<RefPosition #2   @4   RefTypeDef <Ivl:25> CNS_INT BB01 regmask=[allInt] minReg=1>
<RefPosition #3   @5   RefTypeUse <Ivl:25>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #4   @6   RefTypeDef <Ivl:26> IND BB01 regmask=[rdx] minReg=1>
<RefPosition #5   @7   RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #6   @7   RefTypeUse <Ivl:26>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #7   @8   RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #8   @8   RefTypeDef <Ivl:27> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>
<RefPosition #9   @10  RefTypeDef <Ivl:28> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #10  @11  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #11  @11  RefTypeUse <Ivl:28>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #12  @12  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #13  @12  RefTypeDef <Ivl:29> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #14  @14  RefTypeDef <Ivl:30> CNS_INT BB01 regmask=[r8] minReg=1>
<RefPosition #15  @15  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #16  @15  RefTypeUse <Ivl:30>  BB01 regmask=[r8] minReg=1 last fixed>
<RefPosition #17  @16  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #18  @16  RefTypeDef <Ivl:31> PUTARG_REG BB01 regmask=[r8] minReg=1 fixed>
<RefPosition #19  @17  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #20  @17  RefTypeUse <Ivl:27>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #21  @17  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #22  @17  RefTypeUse <Ivl:29>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #23  @17  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #24  @17  RefTypeUse <Ivl:31>  BB01 regmask=[r8] minReg=1 last fixed>
<RefPosition #25  @18  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #26  @18  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #27  @18  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #28  @18  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #29  @18  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #30  @18  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #31  @18  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #32  @18  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #33  @18  RefTypeDef <Ivl:32> CALL BB01 regmask=[rax] minReg=1 last fixed local>
<RefPosition #34  @22  RefTypeDef <Ivl:33> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #35  @23  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #36  @23  RefTypeUse <Ivl:33>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #37  @24  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #38  @24  RefTypeDef <Ivl:34> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #39  @25  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #40  @25  RefTypeUse <Ivl:34>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #41  @26  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #42  @26  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #43  @26  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #44  @26  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #45  @26  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #46  @26  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #47  @26  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #48  @26  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #49  @26  RefTypeDef <Ivl:35> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #50  @27  RefTypeUse <Ivl:35>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #51  @28  RefTypeDef <Ivl:6 V07> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #52  @31  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #53  @31  RefTypeUse <Ivl:6 V07> LCL_VAR BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #54  @32  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #55  @32  RefTypeDef <Ivl:36> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #56  @34  RefTypeDef <Ivl:37> CNS_INT BB01 regmask=[rdx] minReg=1>
<RefPosition #57  @35  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #58  @35  RefTypeUse <Ivl:37>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #59  @36  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #60  @36  RefTypeDef <Ivl:38> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>
<RefPosition #61  @37  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #62  @37  RefTypeUse <Ivl:36>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #63  @37  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #64  @37  RefTypeUse <Ivl:38>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #65  @38  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #66  @38  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #67  @38  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #68  @38  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #69  @38  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #70  @38  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #71  @38  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #72  @43  RefTypeUse <Ivl:6 V07> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #73  @44  RefTypeDef <Ivl:1 V01> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #74  @49  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
<RefPosition #75  @50  RefTypeDef <Ivl:2 V02> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #76  @54  RefTypeDef <Ivl:39> CNS_INT BB01 regmask=[allInt] minReg=1>
<RefPosition #77  @55  RefTypeUse <Ivl:39>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #78  @56  RefTypeDef <Ivl:3 V03> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #79  @63  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #80  @64  RefTypeDef <Ivl:40> IND BB01 regmask=[allInt] minReg=1>
<RefPosition #81  @65  RefTypeUse <Ivl:40>  BB01 regmask=[allInt] minReg=1 last>
<RefPosition #82  @66  RefTypeDef <Ivl:24 V29> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #83  @71  RefTypeUse <Ivl:24 V29> LCL_VAR BB01 regmask=[allInt] minReg=1 regOptional>
<RefPosition #84  @75  RefTypeBB  BB02 regmask=[] minReg=1>
<RefPosition #85  @83  RefTypeUse <Ivl:3 V03> LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #86  @84  RefTypeDef <Ivl:41> CAST BB02 regmask=[allInt] minReg=1>
<RefPosition #87  @87  RefTypeUse <Ivl:2 V02> LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #88  @87  RefTypeUse <Ivl:41>  BB02 regmask=[allInt] minReg=1 last>
<RefPosition #89  @88  RefTypeDef <Ivl:42> IND BB02 regmask=[allInt] minReg=1>
<RefPosition #90  @89  RefTypeUse <Ivl:42>  BB02 regmask=[allInt] minReg=1 last>
<RefPosition #91  @90  RefTypeDef <Ivl:4 V04> STORE_LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #92  @95  RefTypeUse <Ivl:4 V04> LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #93  @98  RefTypeDef <Ivl:43> CNS_INT BB02 regmask=[allInt] minReg=1>
<RefPosition #94  @99  RefTypeUse <Ivl:43>  BB02 regmask=[allInt] minReg=1 last>
<RefPosition #95  @100 RefTypeDef <Ivl:44> IND BB02 regmask=[rdx] minReg=1>
<RefPosition #96  @101 RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #97  @101 RefTypeUse <Ivl:44>  BB02 regmask=[rdx] minReg=1 last fixed>
<RefPosition #98  @102 RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #99  @102 RefTypeDef <Ivl:45> PUTARG_REG BB02 regmask=[rdx] minReg=1 fixed>
<RefPosition #100 @105 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #101 @105 RefTypeUse <Ivl:4 V04> LCL_VAR BB02 regmask=[rcx] minReg=1 fixed>
<RefPosition #102 @106 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #103 @106 RefTypeDef <Ivl:46> PUTARG_REG BB02 regmask=[rcx] minReg=1 fixed>
<RefPosition #104 @108 RefTypeDef <Ivl:47> CNS_INT BB02 regmask=[r8] minReg=1>
<RefPosition #105 @109 RefTypeFixedReg <Reg:r8 >  BB02 regmask=[r8] minReg=1>
<RefPosition #106 @109 RefTypeUse <Ivl:47>  BB02 regmask=[r8] minReg=1 last fixed>
<RefPosition #107 @110 RefTypeFixedReg <Reg:r8 >  BB02 regmask=[r8] minReg=1>
<RefPosition #108 @110 RefTypeDef <Ivl:48> PUTARG_REG BB02 regmask=[r8] minReg=1 fixed>
<RefPosition #109 @111 RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #110 @111 RefTypeUse <Ivl:45>  BB02 regmask=[rdx] minReg=1 last fixed>
<RefPosition #111 @111 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #112 @111 RefTypeUse <Ivl:46>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #113 @111 RefTypeFixedReg <Reg:r8 >  BB02 regmask=[r8] minReg=1>
<RefPosition #114 @111 RefTypeUse <Ivl:48>  BB02 regmask=[r8] minReg=1 last fixed>
<RefPosition #115 @112 RefTypeKill <Reg:rax>  BB02 regmask=[rax] minReg=1 last>
<RefPosition #116 @112 RefTypeKill <Reg:rcx>  BB02 regmask=[rcx] minReg=1 last>
<RefPosition #117 @112 RefTypeKill <Reg:rdx>  BB02 regmask=[rdx] minReg=1 last>
<RefPosition #118 @112 RefTypeKill <Reg:r8 >  BB02 regmask=[r8] minReg=1 last>
<RefPosition #119 @112 RefTypeKill <Reg:r9 >  BB02 regmask=[r9] minReg=1 last>
<RefPosition #120 @112 RefTypeKill <Reg:r10>  BB02 regmask=[r10] minReg=1 last>
<RefPosition #121 @112 RefTypeKill <Reg:r11>  BB02 regmask=[r11] minReg=1 last>
<RefPosition #122 @112 RefTypeFixedReg <Reg:rax>  BB02 regmask=[rax] minReg=1>
<RefPosition #123 @112 RefTypeDef <Ivl:49> CALL BB02 regmask=[rax] minReg=1 fixed>
<RefPosition #124 @115 RefTypeUse <Ivl:49>  BB02 regmask=[allInt] minReg=1 last regOptional>
<RefPosition #125 @119 RefTypeBB  BB03 regmask=[] minReg=1>
<RefPosition #126 @137 RefTypeUse <Ivl:1 V01> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #127 @145 RefTypeUse <Ivl:1 V01> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #128 @146 RefTypeDef <Ivl:50> IND BB03 regmask=[allInt] minReg=1>
<RefPosition #129 @147 RefTypeUse <Ivl:50>  BB03 regmask=[allInt] minReg=1 last>
<RefPosition #130 @148 RefTypeDef <Ivl:16 V18> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #131 @155 RefTypeUse <Ivl:1 V01> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #132 @156 RefTypeDef <Ivl:51> IND BB03 regmask=[allInt] minReg=1>
<RefPosition #133 @157 RefTypeUse <Ivl:51>  BB03 regmask=[allInt] minReg=1 last>
<RefPosition #134 @158 RefTypeDef <Ivl:17 V19> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #135 @169 RefTypeUse <Ivl:16 V18> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #136 @169 RefTypeUse <Ivl:17 V19> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #137 @173 RefTypeBB  BB04 regmask=[] minReg=1>
<RefPosition #138 @181 RefTypeUse <Ivl:17 V19> LCL_VAR BB04 regmask=[allInt] minReg=1>
<RefPosition #139 @182 RefTypeDef <Ivl:52> ADD BB04 regmask=[allInt] minReg=1>
<RefPosition #140 @187 RefTypeUse <Ivl:1 V01> LCL_VAR BB04 regmask=[allInt] minReg=1>
<RefPosition #141 @187 RefTypeUse <Ivl:52>  BB04 regmask=[allInt] minReg=1 last>
<RefPosition #142 @193 RefTypeFixedReg <Reg:rcx>  BB04 regmask=[rcx] minReg=1>
<RefPosition #143 @193 RefTypeUse <Ivl:16 V18> LCL_VAR BB04 regmask=[rcx] minReg=1 last fixed>
<RefPosition #144 @194 RefTypeFixedReg <Reg:rcx>  BB04 regmask=[rcx] minReg=1>
<RefPosition #145 @194 RefTypeDef <Ivl:53> PUTARG_REG BB04 regmask=[rcx] minReg=1 fixed>
<RefPosition #146 @197 RefTypeFixedReg <Reg:rdx>  BB04 regmask=[rdx] minReg=1>
<RefPosition #147 @197 RefTypeUse <Ivl:17 V19> LCL_VAR BB04 regmask=[rdx] minReg=1 last fixed>
<RefPosition #148 @198 RefTypeFixedReg <Reg:rdx>  BB04 regmask=[rdx] minReg=1>
<RefPosition #149 @198 RefTypeDef <Ivl:54> PUTARG_REG BB04 regmask=[rdx] minReg=1 fixed>
<RefPosition #150 @201 RefTypeFixedReg <Reg:r8 >  BB04 regmask=[r8] minReg=1>
<RefPosition #151 @201 RefTypeUse <Ivl:4 V04> LCL_VAR BB04 regmask=[r8] minReg=1 last fixed>
<RefPosition #152 @202 RefTypeFixedReg <Reg:r8 >  BB04 regmask=[r8] minReg=1>
<RefPosition #153 @202 RefTypeDef <Ivl:55> PUTARG_REG BB04 regmask=[r8] minReg=1 fixed>
<RefPosition #154 @203 RefTypeFixedReg <Reg:rcx>  BB04 regmask=[rcx] minReg=1>
<RefPosition #155 @203 RefTypeUse <Ivl:53>  BB04 regmask=[rcx] minReg=1 last fixed>
<RefPosition #156 @203 RefTypeFixedReg <Reg:rdx>  BB04 regmask=[rdx] minReg=1>
<RefPosition #157 @203 RefTypeUse <Ivl:54>  BB04 regmask=[rdx] minReg=1 last fixed>
<RefPosition #158 @203 RefTypeFixedReg <Reg:r8 >  BB04 regmask=[r8] minReg=1>
<RefPosition #159 @203 RefTypeUse <Ivl:55>  BB04 regmask=[r8] minReg=1 last fixed>
<RefPosition #160 @204 RefTypeKill <Reg:rax>  BB04 regmask=[rax] minReg=1 last>
<RefPosition #161 @204 RefTypeKill <Reg:rcx>  BB04 regmask=[rcx] minReg=1 last>
<RefPosition #162 @204 RefTypeKill <Reg:rdx>  BB04 regmask=[rdx] minReg=1 last>
<RefPosition #163 @204 RefTypeKill <Reg:r8 >  BB04 regmask=[r8] minReg=1 last>
<RefPosition #164 @204 RefTypeKill <Reg:r9 >  BB04 regmask=[r9] minReg=1 last>
<RefPosition #165 @204 RefTypeKill <Reg:r10>  BB04 regmask=[r10] minReg=1 last>
<RefPosition #166 @204 RefTypeKill <Reg:r11>  BB04 regmask=[r11] minReg=1 last>
<RefPosition #167 @205 RefTypeBB  BB05 regmask=[] minReg=1>
<RefPosition #168 @211 RefTypeFixedReg <Reg:rcx>  BB05 regmask=[rcx] minReg=1>
<RefPosition #169 @211 RefTypeUse <Ivl:1 V01> LCL_VAR BB05 regmask=[rcx] minReg=1 fixed>
<RefPosition #170 @212 RefTypeFixedReg <Reg:rcx>  BB05 regmask=[rcx] minReg=1>
<RefPosition #171 @212 RefTypeDef <Ivl:56> PUTARG_REG BB05 regmask=[rcx] minReg=1 fixed>
<RefPosition #172 @215 RefTypeFixedReg <Reg:rdx>  BB05 regmask=[rdx] minReg=1>
<RefPosition #173 @215 RefTypeUse <Ivl:4 V04> LCL_VAR BB05 regmask=[rdx] minReg=1 last fixed>
<RefPosition #174 @216 RefTypeFixedReg <Reg:rdx>  BB05 regmask=[rdx] minReg=1>
<RefPosition #175 @216 RefTypeDef <Ivl:57> PUTARG_REG BB05 regmask=[rdx] minReg=1 fixed>
<RefPosition #176 @217 RefTypeFixedReg <Reg:rcx>  BB05 regmask=[rcx] minReg=1>
<RefPosition #177 @217 RefTypeUse <Ivl:56>  BB05 regmask=[rcx] minReg=1 last fixed>
<RefPosition #178 @217 RefTypeFixedReg <Reg:rdx>  BB05 regmask=[rdx] minReg=1>
<RefPosition #179 @217 RefTypeUse <Ivl:57>  BB05 regmask=[rdx] minReg=1 last fixed>
<RefPosition #180 @218 RefTypeKill <Reg:rax>  BB05 regmask=[rax] minReg=1 last>
<RefPosition #181 @218 RefTypeKill <Reg:rcx>  BB05 regmask=[rcx] minReg=1 last>
<RefPosition #182 @218 RefTypeKill <Reg:rdx>  BB05 regmask=[rdx] minReg=1 last>
<RefPosition #183 @218 RefTypeKill <Reg:r8 >  BB05 regmask=[r8] minReg=1 last>
<RefPosition #184 @218 RefTypeKill <Reg:r9 >  BB05 regmask=[r9] minReg=1 last>
<RefPosition #185 @218 RefTypeKill <Reg:r10>  BB05 regmask=[r10] minReg=1 last>
<RefPosition #186 @218 RefTypeKill <Reg:r11>  BB05 regmask=[r11] minReg=1 last>
<RefPosition #187 @219 RefTypeBB  BB07 regmask=[] minReg=1>
<RefPosition #188 @224 RefTypeDef <Ivl:58> CNS_INT BB07 regmask=[rcx] minReg=1>
<RefPosition #189 @225 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #190 @225 RefTypeUse <Ivl:58>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #191 @226 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #192 @226 RefTypeDef <Ivl:59> PUTARG_REG BB07 regmask=[rcx] minReg=1 fixed>
<RefPosition #193 @227 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #194 @227 RefTypeUse <Ivl:59>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #195 @228 RefTypeKill <Reg:rax>  BB07 regmask=[rax] minReg=1 last>
<RefPosition #196 @228 RefTypeKill <Reg:rcx>  BB07 regmask=[rcx] minReg=1 last>
<RefPosition #197 @228 RefTypeKill <Reg:rdx>  BB07 regmask=[rdx] minReg=1 last>
<RefPosition #198 @228 RefTypeKill <Reg:r8 >  BB07 regmask=[r8] minReg=1 last>
<RefPosition #199 @228 RefTypeKill <Reg:r9 >  BB07 regmask=[r9] minReg=1 last>
<RefPosition #200 @228 RefTypeKill <Reg:r10>  BB07 regmask=[r10] minReg=1 last>
<RefPosition #201 @228 RefTypeKill <Reg:r11>  BB07 regmask=[r11] minReg=1 last>
<RefPosition #202 @228 RefTypeFixedReg <Reg:rax>  BB07 regmask=[rax] minReg=1>
<RefPosition #203 @228 RefTypeDef <Ivl:60> CALL BB07 regmask=[rax] minReg=1 fixed>
<RefPosition #204 @229 RefTypeUse <Ivl:60>  BB07 regmask=[allInt] minReg=1 last>
<RefPosition #205 @230 RefTypeDef <Ivl:18 V20> STORE_LCL_VAR BB07 regmask=[allInt] minReg=1>
<RefPosition #206 @232 RefTypeDef <Ivl:61> CNS_INT BB07 regmask=[allInt] minReg=1>
<RefPosition #207 @233 RefTypeUse <Ivl:61>  BB07 regmask=[allInt] minReg=1 last>
<RefPosition #208 @234 RefTypeDef <Ivl:62> IND BB07 regmask=[rdx] minReg=1>
<RefPosition #209 @235 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #210 @235 RefTypeUse <Ivl:62>  BB07 regmask=[rdx] minReg=1 last fixed>
<RefPosition #211 @236 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #212 @236 RefTypeDef <Ivl:63> PUTARG_REG BB07 regmask=[rdx] minReg=1 fixed>
<RefPosition #213 @239 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #214 @239 RefTypeUse <Ivl:4 V04> LCL_VAR BB07 regmask=[rcx] minReg=1 fixed>
<RefPosition #215 @240 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #216 @240 RefTypeDef <Ivl:64> PUTARG_REG BB07 regmask=[rcx] minReg=1 fixed>
<RefPosition #217 @243 RefTypeFixedReg <Reg:r9 >  BB07 regmask=[r9] minReg=1>
<RefPosition #218 @243 RefTypeUse <Ivl:18 V20> LCL_VAR BB07 regmask=[r9] minReg=1 last fixed>
<RefPosition #219 @244 RefTypeFixedReg <Reg:r9 >  BB07 regmask=[r9] minReg=1>
<RefPosition #220 @244 RefTypeDef <Ivl:65> PUTARG_REG BB07 regmask=[r9] minReg=1 fixed>
<RefPosition #221 @246 RefTypeDef <Ivl:66> CNS_INT BB07 regmask=[r8] minReg=1>
<RefPosition #222 @247 RefTypeFixedReg <Reg:r8 >  BB07 regmask=[r8] minReg=1>
<RefPosition #223 @247 RefTypeUse <Ivl:66>  BB07 regmask=[r8] minReg=1 last fixed>
<RefPosition #224 @248 RefTypeFixedReg <Reg:r8 >  BB07 regmask=[r8] minReg=1>
<RefPosition #225 @248 RefTypeDef <Ivl:67> PUTARG_REG BB07 regmask=[r8] minReg=1 fixed>
<RefPosition #226 @249 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #227 @249 RefTypeUse <Ivl:63>  BB07 regmask=[rdx] minReg=1 last fixed>
<RefPosition #228 @249 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #229 @249 RefTypeUse <Ivl:64>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #230 @249 RefTypeFixedReg <Reg:r9 >  BB07 regmask=[r9] minReg=1>
<RefPosition #231 @249 RefTypeUse <Ivl:65>  BB07 regmask=[r9] minReg=1 last fixed>
<RefPosition #232 @249 RefTypeFixedReg <Reg:r8 >  BB07 regmask=[r8] minReg=1>
<RefPosition #233 @249 RefTypeUse <Ivl:67>  BB07 regmask=[r8] minReg=1 last fixed>
<RefPosition #234 @250 RefTypeKill <Reg:rax>  BB07 regmask=[rax] minReg=1 last>
<RefPosition #235 @250 RefTypeKill <Reg:rcx>  BB07 regmask=[rcx] minReg=1 last>
<RefPosition #236 @250 RefTypeKill <Reg:rdx>  BB07 regmask=[rdx] minReg=1 last>
<RefPosition #237 @250 RefTypeKill <Reg:r8 >  BB07 regmask=[r8] minReg=1 last>
<RefPosition #238 @250 RefTypeKill <Reg:r9 >  BB07 regmask=[r9] minReg=1 last>
<RefPosition #239 @250 RefTypeKill <Reg:r10>  BB07 regmask=[r10] minReg=1 last>
<RefPosition #240 @250 RefTypeKill <Reg:r11>  BB07 regmask=[r11] minReg=1 last>
<RefPosition #241 @250 RefTypeFixedReg <Reg:rax>  BB07 regmask=[rax] minReg=1>
<RefPosition #242 @250 RefTypeDef <Ivl:68> CALL BB07 regmask=[rax] minReg=1 fixed>
<RefPosition #243 @251 RefTypeUse <Ivl:68>  BB07 regmask=[allInt] minReg=1 last>
<RefPosition #244 @252 RefTypeDef <Ivl:8 V09> STORE_LCL_VAR BB07 regmask=[allInt] minReg=1>
<RefPosition #245 @254 RefTypeDef <Ivl:69> CNS_INT BB07 regmask=[rcx] minReg=1>
<RefPosition #246 @255 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #247 @255 RefTypeUse <Ivl:69>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #248 @256 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #249 @256 RefTypeDef <Ivl:70> PUTARG_REG BB07 regmask=[rcx] minReg=1 fixed>
<RefPosition #250 @258 RefTypeDef <Ivl:71> CNS_INT BB07 regmask=[rdx] minReg=1>
<RefPosition #251 @259 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #252 @259 RefTypeUse <Ivl:71>  BB07 regmask=[rdx] minReg=1 last fixed>
<RefPosition #253 @260 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #254 @260 RefTypeDef <Ivl:72> PUTARG_REG BB07 regmask=[rdx] minReg=1 fixed>
<RefPosition #255 @261 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #256 @261 RefTypeUse <Ivl:70>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #257 @261 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #258 @261 RefTypeUse <Ivl:72>  BB07 regmask=[rdx] minReg=1 last fixed>
<RefPosition #259 @262 RefTypeKill <Reg:rax>  BB07 regmask=[rax] minReg=1 last>
<RefPosition #260 @262 RefTypeKill <Reg:rcx>  BB07 regmask=[rcx] minReg=1 last>
<RefPosition #261 @262 RefTypeKill <Reg:rdx>  BB07 regmask=[rdx] minReg=1 last>
<RefPosition #262 @262 RefTypeKill <Reg:r8 >  BB07 regmask=[r8] minReg=1 last>
<RefPosition #263 @262 RefTypeKill <Reg:r9 >  BB07 regmask=[r9] minReg=1 last>
<RefPosition #264 @262 RefTypeKill <Reg:r10>  BB07 regmask=[r10] minReg=1 last>
<RefPosition #265 @262 RefTypeKill <Reg:r11>  BB07 regmask=[r11] minReg=1 last>
<RefPosition #266 @262 RefTypeFixedReg <Reg:rax>  BB07 regmask=[rax] minReg=1>
<RefPosition #267 @262 RefTypeDef <Ivl:73> CALL BB07 regmask=[rax] minReg=1 last fixed local>
<RefPosition #268 @264 RefTypeDef <Ivl:74> CNS_INT BB07 regmask=[allInt] minReg=1>
<RefPosition #269 @265 RefTypeUse <Ivl:74>  BB07 regmask=[allInt] minReg=1 last>
<RefPosition #270 @266 RefTypeDef <Ivl:75> IND BB07 regmask=[allInt] minReg=1>
<RefPosition #271 @267 RefTypeUse <Ivl:75>  BB07 regmask=[allInt] minReg=1 last>
<RefPosition #272 @268 RefTypeDef <Ivl:7 V08> STORE_LCL_VAR BB07 regmask=[allInt] minReg=1>
<RefPosition #273 @271 RefTypeUse <Ivl:8 V09> LCL_VAR BB07 regmask=[allInt] minReg=1 last>
<RefPosition #274 @272 RefTypeDef <Ivl:9 V10> STORE_LCL_VAR BB07 regmask=[allInt] minReg=1>
<RefPosition #275 @275 RefTypeUse <Ivl:7 V08> LCL_VAR BB07 regmask=[allInt] minReg=1 last>
<RefPosition #276 @276 RefTypeDef <Ivl:10 V11> STORE_LCL_VAR BB07 regmask=[allInt] minReg=1>
<RefPosition #277 @281 RefTypeUse <Ivl:10 V11> LCL_VAR BB07 regmask=[allInt] minReg=1 regOptional>
<RefPosition #278 @285 RefTypeBB  BB08 regmask=[] minReg=1>
<RefPosition #279 @288 RefTypeDef <Ivl:76> CNS_INT BB08 regmask=[rcx] minReg=1>
<RefPosition #280 @289 RefTypeFixedReg <Reg:rcx>  BB08 regmask=[rcx] minReg=1>
<RefPosition #281 @289 RefTypeUse <Ivl:76>  BB08 regmask=[rcx] minReg=1 last fixed>
<RefPosition #282 @290 RefTypeFixedReg <Reg:rcx>  BB08 regmask=[rcx] minReg=1>
<RefPosition #283 @290 RefTypeDef <Ivl:77> PUTARG_REG BB08 regmask=[rcx] minReg=1 fixed>
<RefPosition #284 @291 RefTypeFixedReg <Reg:rcx>  BB08 regmask=[rcx] minReg=1>
<RefPosition #285 @291 RefTypeUse <Ivl:77>  BB08 regmask=[rcx] minReg=1 last fixed>
<RefPosition #286 @292 RefTypeKill <Reg:rax>  BB08 regmask=[rax] minReg=1 last>
<RefPosition #287 @292 RefTypeKill <Reg:rcx>  BB08 regmask=[rcx] minReg=1 last>
<RefPosition #288 @292 RefTypeKill <Reg:rdx>  BB08 regmask=[rdx] minReg=1 last>
<RefPosition #289 @292 RefTypeKill <Reg:r8 >  BB08 regmask=[r8] minReg=1 last>
<RefPosition #290 @292 RefTypeKill <Reg:r9 >  BB08 regmask=[r9] minReg=1 last>
<RefPosition #291 @292 RefTypeKill <Reg:r10>  BB08 regmask=[r10] minReg=1 last>
<RefPosition #292 @292 RefTypeKill <Reg:r11>  BB08 regmask=[r11] minReg=1 last>
<RefPosition #293 @292 RefTypeFixedReg <Reg:rax>  BB08 regmask=[rax] minReg=1>
<RefPosition #294 @292 RefTypeDef <Ivl:78> CALL BB08 regmask=[rax] minReg=1 fixed>
<RefPosition #295 @293 RefTypeUse <Ivl:78>  BB08 regmask=[allInt] minReg=1 last>
<RefPosition #296 @294 RefTypeDef <Ivl:15 V17> STORE_LCL_VAR BB08 regmask=[allInt] minReg=1>
<RefPosition #297 @296 RefTypeDef <Ivl:79> CNS_INT BB08 regmask=[allInt] minReg=1>
<RefPosition #298 @297 RefTypeUse <Ivl:79>  BB08 regmask=[allInt] minReg=1 last>
<RefPosition #299 @298 RefTypeDef <Ivl:80> IND BB08 regmask=[allInt] minReg=1>
<RefPosition #300 @299 RefTypeUse <Ivl:80>  BB08 regmask=[allInt] minReg=1 last>
<RefPosition #301 @300 RefTypeDef <Ivl:19 V21> STORE_LCL_VAR BB08 regmask=[allInt] minReg=1>
<RefPosition #302 @305 RefTypeUse <Ivl:19 V21> LCL_VAR BB08 regmask=[allInt] minReg=1 regOptional>
<RefPosition #303 @309 RefTypeBB  BB09 regmask=[] minReg=1>
<RefPosition #304 @313 RefTypeUse <Ivl:15 V17> LCL_VAR BB09 regmask=[allInt] minReg=1>
<RefPosition #305 @314 RefTypeDef <Ivl:81> LEA BB09 regmask=[rcx] minReg=1>
<RefPosition #306 @317 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #307 @317 RefTypeUse <Ivl:81>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #308 @317 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #309 @317 RefTypeUse <Ivl:19 V21> LCL_VAR BB09 regmask=[rdx] minReg=1 last fixed>
<RefPosition #310 @318 RefTypeKill <Reg:rax>  BB09 regmask=[rax] minReg=1 last>
<RefPosition #311 @318 RefTypeKill <Reg:rcx>  BB09 regmask=[rcx] minReg=1 last>
<RefPosition #312 @318 RefTypeKill <Reg:rdx>  BB09 regmask=[rdx] minReg=1 last>
<RefPosition #313 @318 RefTypeKill <Reg:r8 >  BB09 regmask=[r8] minReg=1 last>
<RefPosition #314 @318 RefTypeKill <Reg:r9 >  BB09 regmask=[r9] minReg=1 last>
<RefPosition #315 @318 RefTypeKill <Reg:r10>  BB09 regmask=[r10] minReg=1 last>
<RefPosition #316 @318 RefTypeKill <Reg:r11>  BB09 regmask=[r11] minReg=1 last>
<RefPosition #317 @318 RefTypeKill <Reg:mm0>  BB09 regmask=[mm0] minReg=1 last>
<RefPosition #318 @318 RefTypeKill <Reg:mm1>  BB09 regmask=[mm1] minReg=1 last>
<RefPosition #319 @318 RefTypeKill <Reg:mm2>  BB09 regmask=[mm2] minReg=1 last>
<RefPosition #320 @318 RefTypeKill <Reg:mm3>  BB09 regmask=[mm3] minReg=1 last>
<RefPosition #321 @318 RefTypeKill <Reg:mm4>  BB09 regmask=[mm4] minReg=1 last>
<RefPosition #322 @318 RefTypeKill <Reg:mm5>  BB09 regmask=[mm5] minReg=1 last>
<RefPosition #323 @324 RefTypeDef <Ivl:82> CNS_INT BB09 regmask=[allInt] minReg=1>
<RefPosition #324 @325 RefTypeUse <Ivl:15 V17> LCL_VAR BB09 regmask=[allInt] minReg=1>
<RefPosition #325 @325 RefTypeUse <Ivl:82>  BB09 regmask=[allInt] minReg=1 last>
<RefPosition #326 @330 RefTypeDef <Ivl:83> CNS_INT BB09 regmask=[rcx] minReg=1>
<RefPosition #327 @333 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #328 @333 RefTypeUse <Ivl:83>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #329 @333 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #330 @333 RefTypeUse <Ivl:15 V17> LCL_VAR BB09 regmask=[rdx] minReg=1 fixed>
<RefPosition #331 @334 RefTypeKill <Reg:rax>  BB09 regmask=[rax] minReg=1 last>
<RefPosition #332 @334 RefTypeKill <Reg:rcx>  BB09 regmask=[rcx] minReg=1 last>
<RefPosition #333 @334 RefTypeKill <Reg:rdx>  BB09 regmask=[rdx] minReg=1 last>
<RefPosition #334 @334 RefTypeKill <Reg:r8 >  BB09 regmask=[r8] minReg=1 last>
<RefPosition #335 @334 RefTypeKill <Reg:r9 >  BB09 regmask=[r9] minReg=1 last>
<RefPosition #336 @334 RefTypeKill <Reg:r10>  BB09 regmask=[r10] minReg=1 last>
<RefPosition #337 @334 RefTypeKill <Reg:r11>  BB09 regmask=[r11] minReg=1 last>
<RefPosition #338 @334 RefTypeKill <Reg:mm0>  BB09 regmask=[mm0] minReg=1 last>
<RefPosition #339 @334 RefTypeKill <Reg:mm1>  BB09 regmask=[mm1] minReg=1 last>
<RefPosition #340 @334 RefTypeKill <Reg:mm2>  BB09 regmask=[mm2] minReg=1 last>
<RefPosition #341 @334 RefTypeKill <Reg:mm3>  BB09 regmask=[mm3] minReg=1 last>
<RefPosition #342 @334 RefTypeKill <Reg:mm4>  BB09 regmask=[mm4] minReg=1 last>
<RefPosition #343 @334 RefTypeKill <Reg:mm5>  BB09 regmask=[mm5] minReg=1 last>
<RefPosition #344 @337 RefTypeUse <Ivl:15 V17> LCL_VAR BB09 regmask=[allInt] minReg=1 last>
<RefPosition #345 @338 RefTypeDef <Ivl:10 V11> STORE_LCL_VAR BB09 regmask=[allInt] minReg=1>
<RefPosition #346 @339 RefTypeBB  BB10 regmask=[] minReg=1>
<RefPosition #347 @343 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #348 @343 RefTypeUse <Ivl:10 V11> LCL_VAR BB10 regmask=[r8] minReg=1 last fixed>
<RefPosition #349 @344 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #350 @344 RefTypeDef <Ivl:84> PUTARG_REG BB10 regmask=[r8] minReg=1 fixed>
<RefPosition #351 @347 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #352 @347 RefTypeUse <Ivl:9 V10> LCL_VAR BB10 regmask=[rdx] minReg=1 last fixed>
<RefPosition #353 @348 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #354 @348 RefTypeDef <Ivl:85> PUTARG_REG BB10 regmask=[rdx] minReg=1 fixed>
<RefPosition #355 @350 RefTypeDef <Ivl:86> CNS_INT BB10 regmask=[rcx] minReg=1>
<RefPosition #356 @351 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #357 @351 RefTypeUse <Ivl:86>  BB10 regmask=[rcx] minReg=1 last fixed>
<RefPosition #358 @352 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #359 @352 RefTypeDef <Ivl:87> PUTARG_REG BB10 regmask=[rcx] minReg=1 fixed>
<RefPosition #360 @353 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #361 @353 RefTypeUse <Ivl:84>  BB10 regmask=[r8] minReg=1 last fixed>
<RefPosition #362 @353 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #363 @353 RefTypeUse <Ivl:85>  BB10 regmask=[rdx] minReg=1 last fixed>
<RefPosition #364 @353 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #365 @353 RefTypeUse <Ivl:87>  BB10 regmask=[rcx] minReg=1 last fixed>
<RefPosition #366 @354 RefTypeKill <Reg:rax>  BB10 regmask=[rax] minReg=1 last>
<RefPosition #367 @354 RefTypeKill <Reg:rcx>  BB10 regmask=[rcx] minReg=1 last>
<RefPosition #368 @354 RefTypeKill <Reg:rdx>  BB10 regmask=[rdx] minReg=1 last>
<RefPosition #369 @354 RefTypeKill <Reg:r8 >  BB10 regmask=[r8] minReg=1 last>
<RefPosition #370 @354 RefTypeKill <Reg:r9 >  BB10 regmask=[r9] minReg=1 last>
<RefPosition #371 @354 RefTypeKill <Reg:r10>  BB10 regmask=[r10] minReg=1 last>
<RefPosition #372 @354 RefTypeKill <Reg:r11>  BB10 regmask=[r11] minReg=1 last>
<RefPosition #373 @354 RefTypeFixedReg <Reg:rax>  BB10 regmask=[rax] minReg=1>
<RefPosition #374 @354 RefTypeDef <Ivl:88> CALL BB10 regmask=[rax] minReg=1 fixed>
<RefPosition #375 @355 RefTypeUse <Ivl:88>  BB10 regmask=[allInt] minReg=1 last>
<RefPosition #376 @356 RefTypeDef <Ivl:5 V05> STORE_LCL_VAR BB10 regmask=[allInt] minReg=1>
<RefPosition #377 @360 RefTypeDef <Ivl:89> CNS_INT BB10 regmask=[rcx] minReg=1>
<RefPosition #378 @361 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #379 @361 RefTypeUse <Ivl:89>  BB10 regmask=[rcx] minReg=1 last fixed>
<RefPosition #380 @362 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #381 @362 RefTypeDef <Ivl:90> PUTARG_REG BB10 regmask=[rcx] minReg=1 fixed>
<RefPosition #382 @364 RefTypeDef <Ivl:91> CNS_INT BB10 regmask=[rdx] minReg=1>
<RefPosition #383 @365 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #384 @365 RefTypeUse <Ivl:91>  BB10 regmask=[rdx] minReg=1 last fixed>
<RefPosition #385 @366 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #386 @366 RefTypeDef <Ivl:92> PUTARG_REG BB10 regmask=[rdx] minReg=1 fixed>
<RefPosition #387 @367 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #388 @367 RefTypeUse <Ivl:90>  BB10 regmask=[rcx] minReg=1 last fixed>
<RefPosition #389 @367 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #390 @367 RefTypeUse <Ivl:92>  BB10 regmask=[rdx] minReg=1 last fixed>
<RefPosition #391 @368 RefTypeKill <Reg:rax>  BB10 regmask=[rax] minReg=1 last>
<RefPosition #392 @368 RefTypeKill <Reg:rcx>  BB10 regmask=[rcx] minReg=1 last>
<RefPosition #393 @368 RefTypeKill <Reg:rdx>  BB10 regmask=[rdx] minReg=1 last>
<RefPosition #394 @368 RefTypeKill <Reg:r8 >  BB10 regmask=[r8] minReg=1 last>
<RefPosition #395 @368 RefTypeKill <Reg:r9 >  BB10 regmask=[r9] minReg=1 last>
<RefPosition #396 @368 RefTypeKill <Reg:r10>  BB10 regmask=[r10] minReg=1 last>
<RefPosition #397 @368 RefTypeKill <Reg:r11>  BB10 regmask=[r11] minReg=1 last>
<RefPosition #398 @368 RefTypeFixedReg <Reg:rax>  BB10 regmask=[rax] minReg=1>
<RefPosition #399 @368 RefTypeDef <Ivl:93> CALL BB10 regmask=[rax] minReg=1 last fixed local>
<RefPosition #400 @370 RefTypeDef <Ivl:94> CNS_INT BB10 regmask=[allInt] minReg=1>
<RefPosition #401 @371 RefTypeUse <Ivl:94>  BB10 regmask=[allInt] minReg=1 last>
<RefPosition #402 @372 RefTypeDef <Ivl:95> IND BB10 regmask=[allInt] minReg=1>
<RefPosition #403 @373 RefTypeUse <Ivl:95>  BB10 regmask=[allInt] minReg=1 last>
<RefPosition #404 @374 RefTypeDef <Ivl:20 V23> STORE_LCL_VAR BB10 regmask=[allInt] minReg=1>
<RefPosition #405 @376 RefTypeDef <Ivl:96> CNS_INT BB10 regmask=[allInt] minReg=1>
<RefPosition #406 @377 RefTypeUse <Ivl:96>  BB10 regmask=[allInt] minReg=1 last>
<RefPosition #407 @378 RefTypeDef <Ivl:97> IND BB10 regmask=[rdx] minReg=1>
<RefPosition #408 @379 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #409 @379 RefTypeUse <Ivl:97>  BB10 regmask=[rdx] minReg=1 last fixed>
<RefPosition #410 @380 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #411 @380 RefTypeDef <Ivl:98> PUTARG_REG BB10 regmask=[rdx] minReg=1 fixed>
<RefPosition #412 @383 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #413 @383 RefTypeUse <Ivl:4 V04> LCL_VAR BB10 regmask=[rcx] minReg=1 last fixed>
<RefPosition #414 @384 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #415 @384 RefTypeDef <Ivl:99> PUTARG_REG BB10 regmask=[rcx] minReg=1 fixed>
<RefPosition #416 @387 RefTypeFixedReg <Reg:r9 >  BB10 regmask=[r9] minReg=1>
<RefPosition #417 @387 RefTypeUse <Ivl:20 V23> LCL_VAR BB10 regmask=[r9] minReg=1 last fixed>
<RefPosition #418 @388 RefTypeFixedReg <Reg:r9 >  BB10 regmask=[r9] minReg=1>
<RefPosition #419 @388 RefTypeDef <Ivl:100> PUTARG_REG BB10 regmask=[r9] minReg=1 fixed>
<RefPosition #420 @390 RefTypeDef <Ivl:101> CNS_INT BB10 regmask=[r8] minReg=1>
<RefPosition #421 @391 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #422 @391 RefTypeUse <Ivl:101>  BB10 regmask=[r8] minReg=1 last fixed>
<RefPosition #423 @392 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #424 @392 RefTypeDef <Ivl:102> PUTARG_REG BB10 regmask=[r8] minReg=1 fixed>
<RefPosition #425 @393 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #426 @393 RefTypeUse <Ivl:98>  BB10 regmask=[rdx] minReg=1 last fixed>
<RefPosition #427 @393 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #428 @393 RefTypeUse <Ivl:99>  BB10 regmask=[rcx] minReg=1 last fixed>
<RefPosition #429 @393 RefTypeFixedReg <Reg:r9 >  BB10 regmask=[r9] minReg=1>
<RefPosition #430 @393 RefTypeUse <Ivl:100>  BB10 regmask=[r9] minReg=1 last fixed>
<RefPosition #431 @393 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #432 @393 RefTypeUse <Ivl:102>  BB10 regmask=[r8] minReg=1 last fixed>
<RefPosition #433 @394 RefTypeKill <Reg:rax>  BB10 regmask=[rax] minReg=1 last>
<RefPosition #434 @394 RefTypeKill <Reg:rcx>  BB10 regmask=[rcx] minReg=1 last>
<RefPosition #435 @394 RefTypeKill <Reg:rdx>  BB10 regmask=[rdx] minReg=1 last>
<RefPosition #436 @394 RefTypeKill <Reg:r8 >  BB10 regmask=[r8] minReg=1 last>
<RefPosition #437 @394 RefTypeKill <Reg:r9 >  BB10 regmask=[r9] minReg=1 last>
<RefPosition #438 @394 RefTypeKill <Reg:r10>  BB10 regmask=[r10] minReg=1 last>
<RefPosition #439 @394 RefTypeKill <Reg:r11>  BB10 regmask=[r11] minReg=1 last>
<RefPosition #440 @394 RefTypeFixedReg <Reg:rax>  BB10 regmask=[rax] minReg=1>
<RefPosition #441 @394 RefTypeDef <Ivl:103> CALL BB10 regmask=[rax] minReg=1 fixed>
<RefPosition #442 @395 RefTypeUse <Ivl:103>  BB10 regmask=[allInt] minReg=1 last>
<RefPosition #443 @396 RefTypeDef <Ivl:21 V24> STORE_LCL_VAR BB10 regmask=[allInt] minReg=1>
<RefPosition #444 @401 RefTypeUse <Ivl:1 V01> LCL_VAR BB10 regmask=[allInt] minReg=1>
<RefPosition #445 @402 RefTypeDef <Ivl:104> IND BB10 regmask=[rdx] minReg=1>
<RefPosition #446 @403 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #447 @403 RefTypeUse <Ivl:104>  BB10 regmask=[rdx] minReg=1 last fixed>
<RefPosition #448 @404 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #449 @404 RefTypeDef <Ivl:105> PUTARG_REG BB10 regmask=[rdx] minReg=1 fixed>
<RefPosition #450 @407 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #451 @407 RefTypeUse <Ivl:1 V01> LCL_VAR BB10 regmask=[rcx] minReg=1 fixed>
<RefPosition #452 @408 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #453 @408 RefTypeDef <Ivl:106> PUTARG_REG BB10 regmask=[rcx] minReg=1 fixed>
<RefPosition #454 @411 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #455 @411 RefTypeUse <Ivl:21 V24> LCL_VAR BB10 regmask=[r8] minReg=1 last fixed>
<RefPosition #456 @412 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #457 @412 RefTypeDef <Ivl:107> PUTARG_REG BB10 regmask=[r8] minReg=1 fixed>
<RefPosition #458 @413 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #459 @413 RefTypeUse <Ivl:105>  BB10 regmask=[rdx] minReg=1 last fixed>
<RefPosition #460 @413 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #461 @413 RefTypeUse <Ivl:106>  BB10 regmask=[rcx] minReg=1 last fixed>
<RefPosition #462 @413 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #463 @413 RefTypeUse <Ivl:107>  BB10 regmask=[r8] minReg=1 last fixed>
<RefPosition #464 @414 RefTypeKill <Reg:rax>  BB10 regmask=[rax] minReg=1 last>
<RefPosition #465 @414 RefTypeKill <Reg:rcx>  BB10 regmask=[rcx] minReg=1 last>
<RefPosition #466 @414 RefTypeKill <Reg:rdx>  BB10 regmask=[rdx] minReg=1 last>
<RefPosition #467 @414 RefTypeKill <Reg:r8 >  BB10 regmask=[r8] minReg=1 last>
<RefPosition #468 @414 RefTypeKill <Reg:r9 >  BB10 regmask=[r9] minReg=1 last>
<RefPosition #469 @414 RefTypeKill <Reg:r10>  BB10 regmask=[r10] minReg=1 last>
<RefPosition #470 @414 RefTypeKill <Reg:r11>  BB10 regmask=[r11] minReg=1 last>
<RefPosition #471 @418 RefTypeDef <Ivl:108> CNS_INT BB10 regmask=[allInt] minReg=1>
<RefPosition #472 @419 RefTypeUse <Ivl:108>  BB10 regmask=[allInt] minReg=1 last>
<RefPosition #473 @420 RefTypeDef <Ivl:109> IND BB10 regmask=[allInt] minReg=1>
<RefPosition #474 @421 RefTypeUse <Ivl:109>  BB10 regmask=[allInt] minReg=1 last>
<RefPosition #475 @422 RefTypeDef <Ivl:11 V12> STORE_LCL_VAR BB10 regmask=[allInt] minReg=1>
<RefPosition #476 @425 RefTypeUse <Ivl:5 V05> LCL_VAR BB10 regmask=[allInt] minReg=1 last>
<RefPosition #477 @426 RefTypeDef <Ivl:12 V14> STORE_LCL_VAR BB10 regmask=[allInt] minReg=1>
<RefPosition #478 @429 RefTypeUse <Ivl:11 V12> LCL_VAR BB10 regmask=[allInt] minReg=1 last>
<RefPosition #479 @430 RefTypeDef <Ivl:13 V15> STORE_LCL_VAR BB10 regmask=[allInt] minReg=1>
<RefPosition #480 @435 RefTypeUse <Ivl:13 V15> LCL_VAR BB10 regmask=[allInt] minReg=1 regOptional>
<RefPosition #481 @439 RefTypeBB  BB11 regmask=[] minReg=1>
<RefPosition #482 @442 RefTypeDef <Ivl:110> CNS_INT BB11 regmask=[rcx] minReg=1>
<RefPosition #483 @443 RefTypeFixedReg <Reg:rcx>  BB11 regmask=[rcx] minReg=1>
<RefPosition #484 @443 RefTypeUse <Ivl:110>  BB11 regmask=[rcx] minReg=1 last fixed>
<RefPosition #485 @444 RefTypeFixedReg <Reg:rcx>  BB11 regmask=[rcx] minReg=1>
<RefPosition #486 @444 RefTypeDef <Ivl:111> PUTARG_REG BB11 regmask=[rcx] minReg=1 fixed>
<RefPosition #487 @445 RefTypeFixedReg <Reg:rcx>  BB11 regmask=[rcx] minReg=1>
<RefPosition #488 @445 RefTypeUse <Ivl:111>  BB11 regmask=[rcx] minReg=1 last fixed>
<RefPosition #489 @446 RefTypeKill <Reg:rax>  BB11 regmask=[rax] minReg=1 last>
<RefPosition #490 @446 RefTypeKill <Reg:rcx>  BB11 regmask=[rcx] minReg=1 last>
<RefPosition #491 @446 RefTypeKill <Reg:rdx>  BB11 regmask=[rdx] minReg=1 last>
<RefPosition #492 @446 RefTypeKill <Reg:r8 >  BB11 regmask=[r8] minReg=1 last>
<RefPosition #493 @446 RefTypeKill <Reg:r9 >  BB11 regmask=[r9] minReg=1 last>
<RefPosition #494 @446 RefTypeKill <Reg:r10>  BB11 regmask=[r10] minReg=1 last>
<RefPosition #495 @446 RefTypeKill <Reg:r11>  BB11 regmask=[r11] minReg=1 last>
<RefPosition #496 @446 RefTypeFixedReg <Reg:rax>  BB11 regmask=[rax] minReg=1>
<RefPosition #497 @446 RefTypeDef <Ivl:112> CALL BB11 regmask=[rax] minReg=1 fixed>
<RefPosition #498 @447 RefTypeUse <Ivl:112>  BB11 regmask=[allInt] minReg=1 last>
<RefPosition #499 @448 RefTypeDef <Ivl:14 V16> STORE_LCL_VAR BB11 regmask=[allInt] minReg=1>
<RefPosition #500 @450 RefTypeDef <Ivl:113> CNS_INT BB11 regmask=[allInt] minReg=1>
<RefPosition #501 @451 RefTypeUse <Ivl:113>  BB11 regmask=[allInt] minReg=1 last>
<RefPosition #502 @452 RefTypeDef <Ivl:114> IND BB11 regmask=[allInt] minReg=1>
<RefPosition #503 @453 RefTypeUse <Ivl:114>  BB11 regmask=[allInt] minReg=1 last>
<RefPosition #504 @454 RefTypeDef <Ivl:22 V25> STORE_LCL_VAR BB11 regmask=[allInt] minReg=1>
<RefPosition #505 @459 RefTypeUse <Ivl:22 V25> LCL_VAR BB11 regmask=[allInt] minReg=1 regOptional>
<RefPosition #506 @463 RefTypeBB  BB12 regmask=[] minReg=1>
<RefPosition #507 @467 RefTypeUse <Ivl:14 V16> LCL_VAR BB12 regmask=[allInt] minReg=1>
<RefPosition #508 @468 RefTypeDef <Ivl:115> LEA BB12 regmask=[rcx] minReg=1>
<RefPosition #509 @471 RefTypeFixedReg <Reg:rcx>  BB12 regmask=[rcx] minReg=1>
<RefPosition #510 @471 RefTypeUse <Ivl:115>  BB12 regmask=[rcx] minReg=1 last fixed>
<RefPosition #511 @471 RefTypeFixedReg <Reg:rdx>  BB12 regmask=[rdx] minReg=1>
<RefPosition #512 @471 RefTypeUse <Ivl:22 V25> LCL_VAR BB12 regmask=[rdx] minReg=1 last fixed>
<RefPosition #513 @472 RefTypeKill <Reg:rax>  BB12 regmask=[rax] minReg=1 last>
<RefPosition #514 @472 RefTypeKill <Reg:rcx>  BB12 regmask=[rcx] minReg=1 last>
<RefPosition #515 @472 RefTypeKill <Reg:rdx>  BB12 regmask=[rdx] minReg=1 last>
<RefPosition #516 @472 RefTypeKill <Reg:r8 >  BB12 regmask=[r8] minReg=1 last>
<RefPosition #517 @472 RefTypeKill <Reg:r9 >  BB12 regmask=[r9] minReg=1 last>
<RefPosition #518 @472 RefTypeKill <Reg:r10>  BB12 regmask=[r10] minReg=1 last>
<RefPosition #519 @472 RefTypeKill <Reg:r11>  BB12 regmask=[r11] minReg=1 last>
<RefPosition #520 @472 RefTypeKill <Reg:mm0>  BB12 regmask=[mm0] minReg=1 last>
<RefPosition #521 @472 RefTypeKill <Reg:mm1>  BB12 regmask=[mm1] minReg=1 last>
<RefPosition #522 @472 RefTypeKill <Reg:mm2>  BB12 regmask=[mm2] minReg=1 last>
<RefPosition #523 @472 RefTypeKill <Reg:mm3>  BB12 regmask=[mm3] minReg=1 last>
<RefPosition #524 @472 RefTypeKill <Reg:mm4>  BB12 regmask=[mm4] minReg=1 last>
<RefPosition #525 @472 RefTypeKill <Reg:mm5>  BB12 regmask=[mm5] minReg=1 last>
<RefPosition #526 @478 RefTypeDef <Ivl:116> CNS_INT BB12 regmask=[allInt] minReg=1>
<RefPosition #527 @479 RefTypeUse <Ivl:14 V16> LCL_VAR BB12 regmask=[allInt] minReg=1>
<RefPosition #528 @479 RefTypeUse <Ivl:116>  BB12 regmask=[allInt] minReg=1 last>
<RefPosition #529 @484 RefTypeDef <Ivl:117> CNS_INT BB12 regmask=[rcx] minReg=1>
<RefPosition #530 @487 RefTypeFixedReg <Reg:rcx>  BB12 regmask=[rcx] minReg=1>
<RefPosition #531 @487 RefTypeUse <Ivl:117>  BB12 regmask=[rcx] minReg=1 last fixed>
<RefPosition #532 @487 RefTypeFixedReg <Reg:rdx>  BB12 regmask=[rdx] minReg=1>
<RefPosition #533 @487 RefTypeUse <Ivl:14 V16> LCL_VAR BB12 regmask=[rdx] minReg=1 fixed>
<RefPosition #534 @488 RefTypeKill <Reg:rax>  BB12 regmask=[rax] minReg=1 last>
<RefPosition #535 @488 RefTypeKill <Reg:rcx>  BB12 regmask=[rcx] minReg=1 last>
<RefPosition #536 @488 RefTypeKill <Reg:rdx>  BB12 regmask=[rdx] minReg=1 last>
<RefPosition #537 @488 RefTypeKill <Reg:r8 >  BB12 regmask=[r8] minReg=1 last>
<RefPosition #538 @488 RefTypeKill <Reg:r9 >  BB12 regmask=[r9] minReg=1 last>
<RefPosition #539 @488 RefTypeKill <Reg:r10>  BB12 regmask=[r10] minReg=1 last>
<RefPosition #540 @488 RefTypeKill <Reg:r11>  BB12 regmask=[r11] minReg=1 last>
<RefPosition #541 @488 RefTypeKill <Reg:mm0>  BB12 regmask=[mm0] minReg=1 last>
<RefPosition #542 @488 RefTypeKill <Reg:mm1>  BB12 regmask=[mm1] minReg=1 last>
<RefPosition #543 @488 RefTypeKill <Reg:mm2>  BB12 regmask=[mm2] minReg=1 last>
<RefPosition #544 @488 RefTypeKill <Reg:mm3>  BB12 regmask=[mm3] minReg=1 last>
<RefPosition #545 @488 RefTypeKill <Reg:mm4>  BB12 regmask=[mm4] minReg=1 last>
<RefPosition #546 @488 RefTypeKill <Reg:mm5>  BB12 regmask=[mm5] minReg=1 last>
<RefPosition #547 @491 RefTypeUse <Ivl:14 V16> LCL_VAR BB12 regmask=[allInt] minReg=1 last>
<RefPosition #548 @492 RefTypeDef <Ivl:13 V15> STORE_LCL_VAR BB12 regmask=[allInt] minReg=1>
<RefPosition #549 @493 RefTypeBB  BB13 regmask=[] minReg=1>
<RefPosition #550 @497 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #551 @497 RefTypeUse <Ivl:13 V15> LCL_VAR BB13 regmask=[r8] minReg=1 last fixed>
<RefPosition #552 @498 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #553 @498 RefTypeDef <Ivl:118> PUTARG_REG BB13 regmask=[r8] minReg=1 fixed>
<RefPosition #554 @501 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #555 @501 RefTypeUse <Ivl:12 V14> LCL_VAR BB13 regmask=[rdx] minReg=1 last fixed>
<RefPosition #556 @502 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #557 @502 RefTypeDef <Ivl:119> PUTARG_REG BB13 regmask=[rdx] minReg=1 fixed>
<RefPosition #558 @504 RefTypeDef <Ivl:120> CNS_INT BB13 regmask=[rcx] minReg=1>
<RefPosition #559 @505 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #560 @505 RefTypeUse <Ivl:120>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #561 @506 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #562 @506 RefTypeDef <Ivl:121> PUTARG_REG BB13 regmask=[rcx] minReg=1 fixed>
<RefPosition #563 @507 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #564 @507 RefTypeUse <Ivl:118>  BB13 regmask=[r8] minReg=1 last fixed>
<RefPosition #565 @507 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #566 @507 RefTypeUse <Ivl:119>  BB13 regmask=[rdx] minReg=1 last fixed>
<RefPosition #567 @507 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #568 @507 RefTypeUse <Ivl:121>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #569 @508 RefTypeKill <Reg:rax>  BB13 regmask=[rax] minReg=1 last>
<RefPosition #570 @508 RefTypeKill <Reg:rcx>  BB13 regmask=[rcx] minReg=1 last>
<RefPosition #571 @508 RefTypeKill <Reg:rdx>  BB13 regmask=[rdx] minReg=1 last>
<RefPosition #572 @508 RefTypeKill <Reg:r8 >  BB13 regmask=[r8] minReg=1 last>
<RefPosition #573 @508 RefTypeKill <Reg:r9 >  BB13 regmask=[r9] minReg=1 last>
<RefPosition #574 @508 RefTypeKill <Reg:r10>  BB13 regmask=[r10] minReg=1 last>
<RefPosition #575 @508 RefTypeKill <Reg:r11>  BB13 regmask=[r11] minReg=1 last>
<RefPosition #576 @508 RefTypeFixedReg <Reg:rax>  BB13 regmask=[rax] minReg=1>
<RefPosition #577 @508 RefTypeDef <Ivl:122> CALL BB13 regmask=[rax] minReg=1 fixed>
<RefPosition #578 @509 RefTypeUse <Ivl:122>  BB13 regmask=[allInt] minReg=1 last>
<RefPosition #579 @510 RefTypeDef <Ivl:23 V27> STORE_LCL_VAR BB13 regmask=[allInt] minReg=1>
<RefPosition #580 @515 RefTypeUse <Ivl:1 V01> LCL_VAR BB13 regmask=[allInt] minReg=1>
<RefPosition #581 @516 RefTypeDef <Ivl:123> IND BB13 regmask=[rdx] minReg=1>
<RefPosition #582 @517 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #583 @517 RefTypeUse <Ivl:123>  BB13 regmask=[rdx] minReg=1 last fixed>
<RefPosition #584 @518 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #585 @518 RefTypeDef <Ivl:124> PUTARG_REG BB13 regmask=[rdx] minReg=1 fixed>
<RefPosition #586 @521 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #587 @521 RefTypeUse <Ivl:1 V01> LCL_VAR BB13 regmask=[rcx] minReg=1 fixed>
<RefPosition #588 @522 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #589 @522 RefTypeDef <Ivl:125> PUTARG_REG BB13 regmask=[rcx] minReg=1 fixed>
<RefPosition #590 @525 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #591 @525 RefTypeUse <Ivl:23 V27> LCL_VAR BB13 regmask=[r8] minReg=1 last fixed>
<RefPosition #592 @526 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #593 @526 RefTypeDef <Ivl:126> PUTARG_REG BB13 regmask=[r8] minReg=1 fixed>
<RefPosition #594 @527 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #595 @527 RefTypeUse <Ivl:124>  BB13 regmask=[rdx] minReg=1 last fixed>
<RefPosition #596 @527 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #597 @527 RefTypeUse <Ivl:125>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #598 @527 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #599 @527 RefTypeUse <Ivl:126>  BB13 regmask=[r8] minReg=1 last fixed>
<RefPosition #600 @528 RefTypeKill <Reg:rax>  BB13 regmask=[rax] minReg=1 last>
<RefPosition #601 @528 RefTypeKill <Reg:rcx>  BB13 regmask=[rcx] minReg=1 last>
<RefPosition #602 @528 RefTypeKill <Reg:rdx>  BB13 regmask=[rdx] minReg=1 last>
<RefPosition #603 @528 RefTypeKill <Reg:r8 >  BB13 regmask=[r8] minReg=1 last>
<RefPosition #604 @528 RefTypeKill <Reg:r9 >  BB13 regmask=[r9] minReg=1 last>
<RefPosition #605 @528 RefTypeKill <Reg:r10>  BB13 regmask=[r10] minReg=1 last>
<RefPosition #606 @528 RefTypeKill <Reg:r11>  BB13 regmask=[r11] minReg=1 last>
<RefPosition #607 @529 RefTypeBB  BB14 regmask=[] minReg=1>
<RefPosition #608 @537 RefTypeUse <Ivl:3 V03> LCL_VAR BB14 regmask=[allInt] minReg=1 last>
<RefPosition #609 @538 RefTypeDef <Ivl:127> ADD BB14 regmask=[allInt] minReg=1>
<RefPosition #610 @539 RefTypeUse <Ivl:127>  BB14 regmask=[allInt] minReg=1 last>
<RefPosition #611 @540 RefTypeDef <Ivl:3 V03> STORE_LCL_VAR BB14 regmask=[allInt] minReg=1>
<RefPosition #612 @547 RefTypeUse <Ivl:24 V29> LCL_VAR BB14 regmask=[allInt] minReg=1 regOptional>
<RefPosition #613 @547 RefTypeUse <Ivl:3 V03> LCL_VAR BB14 regmask=[allInt] minReg=1>
<RefPosition #614 @551 RefTypeExpUse <Ivl:3 V03>  BB14 regmask=[allInt] minReg=1 regOptional>
<RefPosition #615 @551 RefTypeExpUse <Ivl:2 V02>  BB14 regmask=[allInt] minReg=1 regOptional>
<RefPosition #616 @551 RefTypeExpUse <Ivl:24 V29>  BB14 regmask=[allInt] minReg=1 regOptional>
<RefPosition #617 @551 RefTypeBB  BB15 regmask=[] minReg=1>
<RefPosition #618 @557 RefTypeFixedReg <Reg:rdx>  BB15 regmask=[rdx] minReg=1>
<RefPosition #619 @557 RefTypeUse <Ivl:1 V01> LCL_VAR BB15 regmask=[rdx] minReg=1 fixed>
<RefPosition #620 @558 RefTypeFixedReg <Reg:rdx>  BB15 regmask=[rdx] minReg=1>
<RefPosition #621 @558 RefTypeDef <Ivl:128> PUTARG_REG BB15 regmask=[rdx] minReg=1 fixed>
<RefPosition #622 @560 RefTypeDef <Ivl:129> CNS_INT BB15 regmask=[rcx] minReg=1>
<RefPosition #623 @561 RefTypeFixedReg <Reg:rcx>  BB15 regmask=[rcx] minReg=1>
<RefPosition #624 @561 RefTypeUse <Ivl:129>  BB15 regmask=[rcx] minReg=1 last fixed>
<RefPosition #625 @562 RefTypeFixedReg <Reg:rcx>  BB15 regmask=[rcx] minReg=1>
<RefPosition #626 @562 RefTypeDef <Ivl:130> PUTARG_REG BB15 regmask=[rcx] minReg=1 fixed>
<RefPosition #627 @563 RefTypeFixedReg <Reg:rdx>  BB15 regmask=[rdx] minReg=1>
<RefPosition #628 @563 RefTypeUse <Ivl:128>  BB15 regmask=[rdx] minReg=1 last fixed>
<RefPosition #629 @563 RefTypeFixedReg <Reg:rcx>  BB15 regmask=[rcx] minReg=1>
<RefPosition #630 @563 RefTypeUse <Ivl:130>  BB15 regmask=[rcx] minReg=1 last fixed>
<RefPosition #631 @564 RefTypeKill <Reg:rax>  BB15 regmask=[rax] minReg=1 last>
<RefPosition #632 @564 RefTypeKill <Reg:rcx>  BB15 regmask=[rcx] minReg=1 last>
<RefPosition #633 @564 RefTypeKill <Reg:rdx>  BB15 regmask=[rdx] minReg=1 last>
<RefPosition #634 @564 RefTypeKill <Reg:r8 >  BB15 regmask=[r8] minReg=1 last>
<RefPosition #635 @564 RefTypeKill <Reg:r9 >  BB15 regmask=[r9] minReg=1 last>
<RefPosition #636 @564 RefTypeKill <Reg:r10>  BB15 regmask=[r10] minReg=1 last>
<RefPosition #637 @564 RefTypeKill <Reg:r11>  BB15 regmask=[r11] minReg=1 last>
<RefPosition #638 @566 RefTypeDef <Ivl:131> CNS_INT BB15 regmask=[allInt] minReg=1>
<RefPosition #639 @567 RefTypeUse <Ivl:131>  BB15 regmask=[allInt] minReg=1 last>
<RefPosition #640 @568 RefTypeDef <Ivl:132> IND BB15 regmask=[rdx] minReg=1>
<RefPosition #641 @569 RefTypeFixedReg <Reg:rdx>  BB15 regmask=[rdx] minReg=1>
<RefPosition #642 @569 RefTypeUse <Ivl:132>  BB15 regmask=[rdx] minReg=1 last fixed>
<RefPosition #643 @570 RefTypeFixedReg <Reg:rdx>  BB15 regmask=[rdx] minReg=1>
<RefPosition #644 @570 RefTypeDef <Ivl:133> PUTARG_REG BB15 regmask=[rdx] minReg=1 fixed>
<RefPosition #645 @572 RefTypeDef <Ivl:134> CNS_INT BB15 regmask=[rcx] minReg=1>
<RefPosition #646 @573 RefTypeFixedReg <Reg:rcx>  BB15 regmask=[rcx] minReg=1>
<RefPosition #647 @573 RefTypeUse <Ivl:134>  BB15 regmask=[rcx] minReg=1 last fixed>
<RefPosition #648 @574 RefTypeFixedReg <Reg:rcx>  BB15 regmask=[rcx] minReg=1>
<RefPosition #649 @574 RefTypeDef <Ivl:135> PUTARG_REG BB15 regmask=[rcx] minReg=1 fixed>
<RefPosition #650 @576 RefTypeDef <Ivl:136> CNS_INT BB15 regmask=[r8] minReg=1>
<RefPosition #651 @577 RefTypeFixedReg <Reg:r8 >  BB15 regmask=[r8] minReg=1>
<RefPosition #652 @577 RefTypeUse <Ivl:136>  BB15 regmask=[r8] minReg=1 last fixed>
<RefPosition #653 @578 RefTypeFixedReg <Reg:r8 >  BB15 regmask=[r8] minReg=1>
<RefPosition #654 @578 RefTypeDef <Ivl:137> PUTARG_REG BB15 regmask=[r8] minReg=1 fixed>
<RefPosition #655 @579 RefTypeFixedReg <Reg:rdx>  BB15 regmask=[rdx] minReg=1>
<RefPosition #656 @579 RefTypeUse <Ivl:133>  BB15 regmask=[rdx] minReg=1 last fixed>
<RefPosition #657 @579 RefTypeFixedReg <Reg:rcx>  BB15 regmask=[rcx] minReg=1>
<RefPosition #658 @579 RefTypeUse <Ivl:135>  BB15 regmask=[rcx] minReg=1 last fixed>
<RefPosition #659 @579 RefTypeFixedReg <Reg:r8 >  BB15 regmask=[r8] minReg=1>
<RefPosition #660 @579 RefTypeUse <Ivl:137>  BB15 regmask=[r8] minReg=1 last fixed>
<RefPosition #661 @580 RefTypeKill <Reg:rax>  BB15 regmask=[rax] minReg=1 last>
<RefPosition #662 @580 RefTypeKill <Reg:rcx>  BB15 regmask=[rcx] minReg=1 last>
<RefPosition #663 @580 RefTypeKill <Reg:rdx>  BB15 regmask=[rdx] minReg=1 last>
<RefPosition #664 @580 RefTypeKill <Reg:r8 >  BB15 regmask=[r8] minReg=1 last>
<RefPosition #665 @580 RefTypeKill <Reg:r9 >  BB15 regmask=[r9] minReg=1 last>
<RefPosition #666 @580 RefTypeKill <Reg:r10>  BB15 regmask=[r10] minReg=1 last>
<RefPosition #667 @580 RefTypeKill <Reg:r11>  BB15 regmask=[r11] minReg=1 last>
<RefPosition #668 @580 RefTypeFixedReg <Reg:rax>  BB15 regmask=[rax] minReg=1>
<RefPosition #669 @580 RefTypeDef <Ivl:138> CALL BB15 regmask=[rax] minReg=1 last fixed local>
<RefPosition #670 @585 RefTypeFixedReg <Reg:rax>  BB15 regmask=[rax] minReg=1>
<RefPosition #671 @585 RefTypeUse <Ivl:1 V01> LCL_VAR BB15 regmask=[rax] minReg=1 last fixed>
<RefPosition #672 @587 RefTypeBB  BB16 regmask=[] minReg=1>
<RefPosition #673 @590 RefTypeKill <Reg:rax>  BB16 regmask=[rax] minReg=1 last>
<RefPosition #674 @590 RefTypeKill <Reg:rcx>  BB16 regmask=[rcx] minReg=1 last>
<RefPosition #675 @590 RefTypeKill <Reg:rdx>  BB16 regmask=[rdx] minReg=1 last>
<RefPosition #676 @590 RefTypeKill <Reg:r8 >  BB16 regmask=[r8] minReg=1 last>
<RefPosition #677 @590 RefTypeKill <Reg:r9 >  BB16 regmask=[r9] minReg=1 last>
<RefPosition #678 @590 RefTypeKill <Reg:r10>  BB16 regmask=[r10] minReg=1 last>
<RefPosition #679 @590 RefTypeKill <Reg:r11>  BB16 regmask=[r11] minReg=1 last>

VAR REFPOSITIONS BEFORE ALLOCATION
--- V00  (Interval 0)
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00>  BB00 regmask=[rcx] minReg=1 fixed regOptional>
<RefPosition #74  @49  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
--- V01  (Interval 1)
<RefPosition #73  @44  RefTypeDef <Ivl:1 V01> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #126 @137 RefTypeUse <Ivl:1 V01> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #127 @145 RefTypeUse <Ivl:1 V01> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #131 @155 RefTypeUse <Ivl:1 V01> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #140 @187 RefTypeUse <Ivl:1 V01> LCL_VAR BB04 regmask=[allInt] minReg=1>
<RefPosition #169 @211 RefTypeUse <Ivl:1 V01> LCL_VAR BB05 regmask=[rcx] minReg=1 fixed>
<RefPosition #444 @401 RefTypeUse <Ivl:1 V01> LCL_VAR BB10 regmask=[allInt] minReg=1>
<RefPosition #451 @407 RefTypeUse <Ivl:1 V01> LCL_VAR BB10 regmask=[rcx] minReg=1 fixed>
<RefPosition #580 @515 RefTypeUse <Ivl:1 V01> LCL_VAR BB13 regmask=[allInt] minReg=1>
<RefPosition #587 @521 RefTypeUse <Ivl:1 V01> LCL_VAR BB13 regmask=[rcx] minReg=1 fixed>
<RefPosition #619 @557 RefTypeUse <Ivl:1 V01> LCL_VAR BB15 regmask=[rdx] minReg=1 fixed>
<RefPosition #671 @585 RefTypeUse <Ivl:1 V01> LCL_VAR BB15 regmask=[rax] minReg=1 last fixed>
--- V02  (Interval 2)
<RefPosition #75  @50  RefTypeDef <Ivl:2 V02> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #79  @63  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #87  @87  RefTypeUse <Ivl:2 V02> LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #615 @551 RefTypeExpUse <Ivl:2 V02>  BB14 regmask=[allInt] minReg=1 regOptional>
--- V03  (Interval 3)
<RefPosition #78  @56  RefTypeDef <Ivl:3 V03> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #85  @83  RefTypeUse <Ivl:3 V03> LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #608 @537 RefTypeUse <Ivl:3 V03> LCL_VAR BB14 regmask=[allInt] minReg=1 last>
<RefPosition #611 @540 RefTypeDef <Ivl:3 V03> STORE_LCL_VAR BB14 regmask=[allInt] minReg=1>
<RefPosition #613 @547 RefTypeUse <Ivl:3 V03> LCL_VAR BB14 regmask=[allInt] minReg=1>
<RefPosition #614 @551 RefTypeExpUse <Ivl:3 V03>  BB14 regmask=[allInt] minReg=1 regOptional>
--- V04  (Interval 4)
<RefPosition #91  @90  RefTypeDef <Ivl:4 V04> STORE_LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #92  @95  RefTypeUse <Ivl:4 V04> LCL_VAR BB02 regmask=[allInt] minReg=1>
<RefPosition #101 @105 RefTypeUse <Ivl:4 V04> LCL_VAR BB02 regmask=[rcx] minReg=1 fixed>
<RefPosition #151 @201 RefTypeUse <Ivl:4 V04> LCL_VAR BB04 regmask=[r8] minReg=1 last fixed>
<RefPosition #173 @215 RefTypeUse <Ivl:4 V04> LCL_VAR BB05 regmask=[rdx] minReg=1 last fixed>
<RefPosition #214 @239 RefTypeUse <Ivl:4 V04> LCL_VAR BB07 regmask=[rcx] minReg=1 fixed>
<RefPosition #413 @383 RefTypeUse <Ivl:4 V04> LCL_VAR BB10 regmask=[rcx] minReg=1 last fixed>
--- V05  (Interval 5)
<RefPosition #376 @356 RefTypeDef <Ivl:5 V05> STORE_LCL_VAR BB10 regmask=[allInt] minReg=1>
<RefPosition #476 @425 RefTypeUse <Ivl:5 V05> LCL_VAR BB10 regmask=[allInt] minReg=1 last>
--- V06
--- V07  (Interval 6)
<RefPosition #51  @28  RefTypeDef <Ivl:6 V07> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #53  @31  RefTypeUse <Ivl:6 V07> LCL_VAR BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #72  @43  RefTypeUse <Ivl:6 V07> LCL_VAR BB01 regmask=[allInt] minReg=1 last>
--- V08  (Interval 7)
<RefPosition #272 @268 RefTypeDef <Ivl:7 V08> STORE_LCL_VAR BB07 regmask=[allInt] minReg=1>
<RefPosition #275 @275 RefTypeUse <Ivl:7 V08> LCL_VAR BB07 regmask=[allInt] minReg=1 last>
--- V09  (Interval 8)
<RefPosition #244 @252 RefTypeDef <Ivl:8 V09> STORE_LCL_VAR BB07 regmask=[allInt] minReg=1>
<RefPosition #273 @271 RefTypeUse <Ivl:8 V09> LCL_VAR BB07 regmask=[allInt] minReg=1 last>
--- V10  (Interval 9)
<RefPosition #274 @272 RefTypeDef <Ivl:9 V10> STORE_LCL_VAR BB07 regmask=[allInt] minReg=1>
<RefPosition #352 @347 RefTypeUse <Ivl:9 V10> LCL_VAR BB10 regmask=[rdx] minReg=1 last fixed>
--- V11  (Interval 10)
<RefPosition #276 @276 RefTypeDef <Ivl:10 V11> STORE_LCL_VAR BB07 regmask=[allInt] minReg=1>
<RefPosition #277 @281 RefTypeUse <Ivl:10 V11> LCL_VAR BB07 regmask=[allInt] minReg=1 regOptional>
<RefPosition #345 @338 RefTypeDef <Ivl:10 V11> STORE_LCL_VAR BB09 regmask=[allInt] minReg=1>
<RefPosition #348 @343 RefTypeUse <Ivl:10 V11> LCL_VAR BB10 regmask=[r8] minReg=1 last fixed>
--- V12  (Interval 11)
<RefPosition #475 @422 RefTypeDef <Ivl:11 V12> STORE_LCL_VAR BB10 regmask=[allInt] minReg=1>
<RefPosition #478 @429 RefTypeUse <Ivl:11 V12> LCL_VAR BB10 regmask=[allInt] minReg=1 last>
--- V13
--- V14  (Interval 12)
<RefPosition #477 @426 RefTypeDef <Ivl:12 V14> STORE_LCL_VAR BB10 regmask=[allInt] minReg=1>
<RefPosition #555 @501 RefTypeUse <Ivl:12 V14> LCL_VAR BB13 regmask=[rdx] minReg=1 last fixed>
--- V15  (Interval 13)
<RefPosition #479 @430 RefTypeDef <Ivl:13 V15> STORE_LCL_VAR BB10 regmask=[allInt] minReg=1>
<RefPosition #480 @435 RefTypeUse <Ivl:13 V15> LCL_VAR BB10 regmask=[allInt] minReg=1 regOptional>
<RefPosition #548 @492 RefTypeDef <Ivl:13 V15> STORE_LCL_VAR BB12 regmask=[allInt] minReg=1>
<RefPosition #551 @497 RefTypeUse <Ivl:13 V15> LCL_VAR BB13 regmask=[r8] minReg=1 last fixed>
--- V16  (Interval 14)
<RefPosition #499 @448 RefTypeDef <Ivl:14 V16> STORE_LCL_VAR BB11 regmask=[allInt] minReg=1>
<RefPosition #507 @467 RefTypeUse <Ivl:14 V16> LCL_VAR BB12 regmask=[allInt] minReg=1>
<RefPosition #527 @479 RefTypeUse <Ivl:14 V16> LCL_VAR BB12 regmask=[allInt] minReg=1>
<RefPosition #533 @487 RefTypeUse <Ivl:14 V16> LCL_VAR BB12 regmask=[rdx] minReg=1 fixed>
<RefPosition #547 @491 RefTypeUse <Ivl:14 V16> LCL_VAR BB12 regmask=[allInt] minReg=1 last>
--- V17  (Interval 15)
<RefPosition #296 @294 RefTypeDef <Ivl:15 V17> STORE_LCL_VAR BB08 regmask=[allInt] minReg=1>
<RefPosition #304 @313 RefTypeUse <Ivl:15 V17> LCL_VAR BB09 regmask=[allInt] minReg=1>
<RefPosition #324 @325 RefTypeUse <Ivl:15 V17> LCL_VAR BB09 regmask=[allInt] minReg=1>
<RefPosition #330 @333 RefTypeUse <Ivl:15 V17> LCL_VAR BB09 regmask=[rdx] minReg=1 fixed>
<RefPosition #344 @337 RefTypeUse <Ivl:15 V17> LCL_VAR BB09 regmask=[allInt] minReg=1 last>
--- V18  (Interval 16)
<RefPosition #130 @148 RefTypeDef <Ivl:16 V18> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #135 @169 RefTypeUse <Ivl:16 V18> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #143 @193 RefTypeUse <Ivl:16 V18> LCL_VAR BB04 regmask=[rcx] minReg=1 last fixed>
--- V19  (Interval 17)
<RefPosition #134 @158 RefTypeDef <Ivl:17 V19> STORE_LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #136 @169 RefTypeUse <Ivl:17 V19> LCL_VAR BB03 regmask=[allInt] minReg=1>
<RefPosition #138 @181 RefTypeUse <Ivl:17 V19> LCL_VAR BB04 regmask=[allInt] minReg=1>
<RefPosition #147 @197 RefTypeUse <Ivl:17 V19> LCL_VAR BB04 regmask=[rdx] minReg=1 last fixed>
--- V20  (Interval 18)
<RefPosition #205 @230 RefTypeDef <Ivl:18 V20> STORE_LCL_VAR BB07 regmask=[allInt] minReg=1>
<RefPosition #218 @243 RefTypeUse <Ivl:18 V20> LCL_VAR BB07 regmask=[r9] minReg=1 last fixed>
--- V21  (Interval 19)
<RefPosition #301 @300 RefTypeDef <Ivl:19 V21> STORE_LCL_VAR BB08 regmask=[allInt] minReg=1>
<RefPosition #302 @305 RefTypeUse <Ivl:19 V21> LCL_VAR BB08 regmask=[allInt] minReg=1 regOptional>
<RefPosition #309 @317 RefTypeUse <Ivl:19 V21> LCL_VAR BB09 regmask=[rdx] minReg=1 last fixed>
--- V22
--- V23  (Interval 20)
<RefPosition #404 @374 RefTypeDef <Ivl:20 V23> STORE_LCL_VAR BB10 regmask=[allInt] minReg=1>
<RefPosition #417 @387 RefTypeUse <Ivl:20 V23> LCL_VAR BB10 regmask=[r9] minReg=1 last fixed>
--- V24  (Interval 21)
<RefPosition #443 @396 RefTypeDef <Ivl:21 V24> STORE_LCL_VAR BB10 regmask=[allInt] minReg=1>
<RefPosition #455 @411 RefTypeUse <Ivl:21 V24> LCL_VAR BB10 regmask=[r8] minReg=1 last fixed>
--- V25  (Interval 22)
<RefPosition #504 @454 RefTypeDef <Ivl:22 V25> STORE_LCL_VAR BB11 regmask=[allInt] minReg=1>
<RefPosition #505 @459 RefTypeUse <Ivl:22 V25> LCL_VAR BB11 regmask=[allInt] minReg=1 regOptional>
<RefPosition #512 @471 RefTypeUse <Ivl:22 V25> LCL_VAR BB12 regmask=[rdx] minReg=1 last fixed>
--- V26
--- V27  (Interval 23)
<RefPosition #579 @510 RefTypeDef <Ivl:23 V27> STORE_LCL_VAR BB13 regmask=[allInt] minReg=1>
<RefPosition #591 @525 RefTypeUse <Ivl:23 V27> LCL_VAR BB13 regmask=[r8] minReg=1 last fixed>
--- V28
--- V29  (Interval 24)
<RefPosition #82  @66  RefTypeDef <Ivl:24 V29> STORE_LCL_VAR BB01 regmask=[allInt] minReg=1>
<RefPosition #83  @71  RefTypeUse <Ivl:24 V29> LCL_VAR BB01 regmask=[allInt] minReg=1 regOptional>
<RefPosition #612 @547 RefTypeUse <Ivl:24 V29> LCL_VAR BB14 regmask=[allInt] minReg=1 regOptional>
<RefPosition #616 @551 RefTypeExpUse <Ivl:24 V29>  BB14 regmask=[allInt] minReg=1 regOptional>



Allocating Registers
--------------------
The following table has one or more rows for each RefPosition that is handled during allocation.
The first column provides the basic information about the RefPosition, with its type (e.g. Def,
Use, Fixd) followed by a '*' if it is a last use, and a 'D' if it is delayRegFree, and then the
action taken during allocation (e.g. Alloc a new register, or Keep an existing one).
The subsequent columns show the Interval occupying each register, if any, followed by 'a' if it is
active, a 'p' if it is a large vector that has been partially spilled, and 'i'if it is inactive.
Columns are only printed up to the last modifed register, which may increase during allocation,
in which case additional columns will appear.  
Registers which are not marked modified have ---- in their column.

---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+
                                 |     |V0  a|     |     |     |     |     |     |     |
  0.#0   V0    Parm   Alloc rsi  |     |     |     |     |     |V0  a|     |     |     |
  1.#1   BB1  PredBB0            |     |     |     |     |     |V0  a|     |     |     |
  4.#2   C25   Def    Alloc rdx  |     |     |C25 a|     |     |V0  a|     |     |     |
  5.#3   C25   Use *  Keep  rdx  |     |     |C25 a|     |     |V0  a|     |     |     |
  6.#4   I26   Def    Alloc rdx  |     |     |I26 a|     |     |V0  a|     |     |     |
  7.#5   rdx   Fixd   Keep  rdx  |     |     |I26 a|     |     |V0  a|     |     |     |
  7.#6   I26   Use *  Keep  rdx  |     |     |I26 a|     |     |V0  a|     |     |     |
  8.#7   rdx   Fixd   Keep  rdx  |     |     |     |     |     |V0  a|     |     |     |
  8.#8   I27   Def    Alloc rdx  |     |     |I27 a|     |     |V0  a|     |     |     |
 10.#9   C28   Def    Alloc rcx  |     |C28 a|I27 a|     |     |V0  a|     |     |     |
 11.#10  rcx   Fixd   Keep  rcx  |     |C28 a|I27 a|     |     |V0  a|     |     |     |
 11.#11  C28   Use *  Keep  rcx  |     |C28 a|I27 a|     |     |V0  a|     |     |     |
 12.#12  rcx   Fixd   Keep  rcx  |     |     |I27 a|     |     |V0  a|     |     |     |
 12.#13  I29   Def    Alloc rcx  |     |I29 a|I27 a|     |     |V0  a|     |     |     |
 14.#14  C30   Def    Alloc r8   |     |I29 a|I27 a|     |     |V0  a|     |C30 a|     |
 15.#15  r8    Fixd   Keep  r8   |     |I29 a|I27 a|     |     |V0  a|     |C30 a|     |
 15.#16  C30   Use *  Keep  r8   |     |I29 a|I27 a|     |     |V0  a|     |C30 a|     |
 16.#17  r8    Fixd   Keep  r8   |     |I29 a|I27 a|     |     |V0  a|     |     |     |
 16.#18  I31   Def    Alloc r8   |     |I29 a|I27 a|     |     |V0  a|     |I31 a|     |
 17.#19  rdx   Fixd   Keep  rdx  |     |I29 a|I27 a|     |     |V0  a|     |I31 a|     |
 17.#20  I27   Use *  Keep  rdx  |     |I29 a|I27 a|     |     |V0  a|     |I31 a|     |
 17.#21  rcx   Fixd   Keep  rcx  |     |I29 a|I27 a|     |     |V0  a|     |I31 a|     |
 17.#22  I29   Use *  Keep  rcx  |     |I29 a|I27 a|     |     |V0  a|     |I31 a|     |
 17.#23  r8    Fixd   Keep  r8   |     |I29 a|I27 a|     |     |V0  a|     |I31 a|     |
 17.#24  I31   Use *  Keep  r8   |     |I29 a|I27 a|     |     |V0  a|     |I31 a|     |
 18.#25  rax   Kill   Keep  rax  |     |     |     |     |     |V0  a|     |     |     |
 18.#26  rcx   Kill   Keep  rcx  |     |     |     |     |     |V0  a|     |     |     |
 18.#27  rdx   Kill   Keep  rdx  |     |     |     |     |     |V0  a|     |     |     |
 18.#28  r8    Kill   Keep  r8   |     |     |     |     |     |V0  a|     |     |     |
 18.#29  r9    Kill   Keep  r9   |     |     |     |     |     |V0  a|     |     |     |
 18.#30  r10   Kill   Keep  r10  |     |     |     |     |     |V0  a|     |     |     |
 18.#31  r11   Kill   Keep  r11  |     |     |     |     |     |V0  a|     |     |     |
 18.#32  rax   Fixd   Keep  rax  |     |     |     |     |     |V0  a|     |     |     |
 18.#33  I32   Def *  Alloc rax  |I32 a|     |     |     |     |V0  a|     |     |     |
 22.#34  C33   Def    Alloc rcx  |     |C33 a|     |     |     |V0  a|     |     |     |
 23.#35  rcx   Fixd   Keep  rcx  |     |C33 a|     |     |     |V0  a|     |     |     |
 23.#36  C33   Use *  Keep  rcx  |     |C33 a|     |     |     |V0  a|     |     |     |
 24.#37  rcx   Fixd   Keep  rcx  |     |     |     |     |     |V0  a|     |     |     |
 24.#38  I34   Def    Alloc rcx  |     |I34 a|     |     |     |V0  a|     |     |     |
 25.#39  rcx   Fixd   Keep  rcx  |     |I34 a|     |     |     |V0  a|     |     |     |
 25.#40  I34   Use *  Keep  rcx  |     |I34 a|     |     |     |V0  a|     |     |     |
 26.#41  rax   Kill   Keep  rax  |     |     |     |     |     |V0  a|     |     |     |
 26.#42  rcx   Kill   Keep  rcx  |     |     |     |     |     |V0  a|     |     |     |
 26.#43  rdx   Kill   Keep  rdx  |     |     |     |     |     |V0  a|     |     |     |
 26.#44  r8    Kill   Keep  r8   |     |     |     |     |     |V0  a|     |     |     |
 26.#45  r9    Kill   Keep  r9   |     |     |     |     |     |V0  a|     |     |     |
 26.#46  r10   Kill   Keep  r10  |     |     |     |     |     |V0  a|     |     |     |
 26.#47  r11   Kill   Keep  r11  |     |     |     |     |     |V0  a|     |     |     |
 26.#48  rax   Fixd   Keep  rax  |     |     |     |     |     |V0  a|     |     |     |
 26.#49  I35   Def    Alloc rax  |I35 a|     |     |     |     |V0  a|     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+
 27.#50  I35   Use *  Keep  rax  |I35 a|     |     |     |     |V0  a|     |     |     |
 28.#51  V7    Def    Alloc rdi  |     |     |     |     |     |V0  a|V7  a|     |     |
 31.#52  rcx   Fixd   Keep  rcx  |     |     |     |     |     |V0  a|V7  a|     |     |
 31.#53  V7    Use    Copy  rcx  |     |V7  a|     |     |     |V0  a|V7  a|     |     |
 32.#54  rcx   Fixd   Keep  rcx  |     |V7  a|     |     |     |V0  a|V7  a|     |     |
 32.#55  I36   Def    Alloc rcx  |     |I36 a|     |     |     |V0  a|V7  a|     |     |
 34.#56  C37   Def    Alloc rdx  |     |I36 a|C37 a|     |     |V0  a|V7  a|     |     |
 35.#57  rdx   Fixd   Keep  rdx  |     |I36 a|C37 a|     |     |V0  a|V7  a|     |     |
 35.#58  C37   Use *  Keep  rdx  |     |I36 a|C37 a|     |     |V0  a|V7  a|     |     |
 36.#59  rdx   Fixd   Keep  rdx  |     |I36 a|     |     |     |V0  a|V7  a|     |     |
 36.#60  I38   Def    Alloc rdx  |     |I36 a|I38 a|     |     |V0  a|V7  a|     |     |
 37.#61  rcx   Fixd   Keep  rcx  |     |I36 a|I38 a|     |     |V0  a|V7  a|     |     |
 37.#62  I36   Use *  Keep  rcx  |     |I36 a|I38 a|     |     |V0  a|V7  a|     |     |
 37.#63  rdx   Fixd   Keep  rdx  |     |I36 a|I38 a|     |     |V0  a|V7  a|     |     |
 37.#64  I38   Use *  Keep  rdx  |     |I36 a|I38 a|     |     |V0  a|V7  a|     |     |
 38.#65  rax   Kill   Keep  rax  |     |     |     |     |     |V0  a|V7  a|     |     |
 38.#66  rcx   Kill   Keep  rcx  |     |     |     |     |     |V0  a|V7  a|     |     |
 38.#67  rdx   Kill   Keep  rdx  |     |     |     |     |     |V0  a|V7  a|     |     |
 38.#68  r8    Kill   Keep  r8   |     |     |     |     |     |V0  a|V7  a|     |     |
 38.#69  r9    Kill   Keep  r9   |     |     |     |     |     |V0  a|V7  a|     |     |
 38.#70  r10   Kill   Keep  r10  |     |     |     |     |     |V0  a|V7  a|     |     |
 38.#71  r11   Kill   Keep  r11  |     |     |     |     |     |V0  a|V7  a|     |     |
 43.#72  V7    Use *  Keep  rdi  |     |     |     |     |     |V0  a|V7  a|     |     |
 44.#73  V1    Def    Alloc rdi  |     |     |     |     |     |V0  a|V1  a|     |     |
 49.#74  V0    Use *  Keep  rsi  |     |     |     |     |     |V0  a|V1  a|     |     |
 50.#75  V2    Def    Alloc rsi  |     |     |     |     |     |V2  a|V1  a|     |     |
 54.#76  C39   Def    Alloc rbx  |     |     |     |C39 a|     |V2  a|V1  a|     |     |
 55.#77  C39   Use *  Keep  rbx  |     |     |     |C39 a|     |V2  a|V1  a|     |     |
 56.#78  V3    Def    Alloc rbx  |     |     |     |V3  a|     |V2  a|V1  a|     |     |
 63.#79  V2    Use    Keep  rsi  |     |     |     |V3  a|     |V2  a|V1  a|     |     |
 64.#80  I40   Def    Alloc rbp  |     |     |     |V3  a|I40 a|V2  a|V1  a|     |     |
 65.#81  I40   Use *  Keep  rbp  |     |     |     |V3  a|I40 a|V2  a|V1  a|     |     |
 66.#82  V29   Def    Alloc rbp  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |
 71.#83  V29   Use    Keep  rbp  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+
 75.#84  BB2  PredBB1            |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |
 83.#85  V3    Use    Keep  rbx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |
 84.#86  I41   Def    Alloc rdx  |     |     |I41 a|V3  a|V29 a|V2  a|V1  a|     |     |
 87.#87  V2    Use    Keep  rsi  |     |     |I41 a|V3  a|V29 a|V2  a|V1  a|     |     |
 87.#88  I41   Use *  Keep  rdx  |     |     |I41 a|V3  a|V29 a|V2  a|V1  a|     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r14  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
 88.#89  I42   Def    Alloc r14  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |I42 a|
 89.#90  I42   Use *  Keep  r14  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |I42 a|
 90.#91  V4    Def    Alloc r14  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
 95.#92  V4    Use    Keep  r14  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
 98.#93  C43   Def    Alloc rdx  |     |     |C43 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
 99.#94  C43   Use *  Keep  rdx  |     |     |C43 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
100.#95  I44   Def    Alloc rdx  |     |     |I44 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
101.#96  rdx   Fixd   Keep  rdx  |     |     |I44 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
101.#97  I44   Use *  Keep  rdx  |     |     |I44 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
102.#98  rdx   Fixd   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
102.#99  I45   Def    Alloc rdx  |     |     |I45 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
105.#100 rcx   Fixd   Keep  rcx  |     |     |I45 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
105.#101 V4    Use    Copy  rcx  |     |V4  a|I45 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
106.#102 rcx   Fixd   Keep  rcx  |     |V4  a|I45 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
106.#103 I46   Def    Alloc rcx  |     |I46 a|I45 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
108.#104 C47   Def    Alloc r8   |     |I46 a|I45 a|V3  a|V29 a|V2  a|V1  a|C47 a|     |V4  a|
109.#105 r8    Fixd   Keep  r8   |     |I46 a|I45 a|V3  a|V29 a|V2  a|V1  a|C47 a|     |V4  a|
109.#106 C47   Use *  Keep  r8   |     |I46 a|I45 a|V3  a|V29 a|V2  a|V1  a|C47 a|     |V4  a|
110.#107 r8    Fixd   Keep  r8   |     |I46 a|I45 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
110.#108 I48   Def    Alloc r8   |     |I46 a|I45 a|V3  a|V29 a|V2  a|V1  a|I48 a|     |V4  a|
111.#109 rdx   Fixd   Keep  rdx  |     |I46 a|I45 a|V3  a|V29 a|V2  a|V1  a|I48 a|     |V4  a|
111.#110 I45   Use *  Keep  rdx  |     |I46 a|I45 a|V3  a|V29 a|V2  a|V1  a|I48 a|     |V4  a|
111.#111 rcx   Fixd   Keep  rcx  |     |I46 a|I45 a|V3  a|V29 a|V2  a|V1  a|I48 a|     |V4  a|
111.#112 I46   Use *  Keep  rcx  |     |I46 a|I45 a|V3  a|V29 a|V2  a|V1  a|I48 a|     |V4  a|
111.#113 r8    Fixd   Keep  r8   |     |I46 a|I45 a|V3  a|V29 a|V2  a|V1  a|I48 a|     |V4  a|
111.#114 I48   Use *  Keep  r8   |     |I46 a|I45 a|V3  a|V29 a|V2  a|V1  a|I48 a|     |V4  a|
112.#115 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
112.#116 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
112.#117 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
112.#118 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
112.#119 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
112.#120 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
112.#121 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
112.#122 rax   Fixd   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
112.#123 I49   Def    Alloc rax  |I49 a|     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
115.#124 I49   Use *  Keep  rax  |I49 a|     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r14  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
119.#125 BB3  PredBB2            |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
137.#126 V1    Use    Keep  rdi  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
145.#127 V1    Use    Keep  rdi  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
146.#128 I50   Def    Alloc rcx  |     |I50 a|     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
147.#129 I50   Use *  Keep  rcx  |     |I50 a|     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
148.#130 V18   Def    Alloc rcx  |     |V18 a|     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
155.#131 V1    Use    Keep  rdi  |     |V18 a|     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
156.#132 I51   Def    Alloc rdx  |     |V18 a|I51 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
157.#133 I51   Use *  Keep  rdx  |     |V18 a|I51 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
158.#134 V19   Def    Alloc rdx  |     |V18 a|V19 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
169.#135 V18   Use    Keep  rcx  |     |V18 a|V19 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
169.#136 V19   Use    Keep  rdx  |     |V18 a|V19 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r14  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
173.#137 BB4  PredBB3            |     |V18 a|V19 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
181.#138 V19   Use    Keep  rdx  |     |V18 a|V19 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
182.#139 I52   Def    Alloc r8   |     |V18 a|V19 a|V3  a|V29 a|V2  a|V1  a|I52 a|     |V4  a|
187.#140 V1    Use    Keep  rdi  |     |V18 a|V19 a|V3  a|V29 a|V2  a|V1  a|I52 a|     |V4  a|
187.#141 I52   Use *  Keep  r8   |     |V18 a|V19 a|V3  a|V29 a|V2  a|V1  a|I52 a|     |V4  a|
193.#142 rcx   Fixd   Keep  rcx  |     |V18 a|V19 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
193.#143 V18   Use *  Keep  rcx  |     |V18 a|V19 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
194.#144 rcx   Fixd   Keep  rcx  |     |     |V19 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
194.#145 I53   Def    Alloc rcx  |     |I53 a|V19 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
197.#146 rdx   Fixd   Keep  rdx  |     |I53 a|V19 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
197.#147 V19   Use *  Keep  rdx  |     |I53 a|V19 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
198.#148 rdx   Fixd   Keep  rdx  |     |I53 a|     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
198.#149 I54   Def    Alloc rdx  |     |I53 a|I54 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
201.#150 r8    Fixd   Keep  r8   |     |I53 a|I54 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
201.#151 V4    Use *  Copy  r8   |     |I53 a|I54 a|V3  a|V29 a|V2  a|V1  a|V4  a|     |V4  a|
202.#152 r8    Fixd   Keep  r8   |     |I53 a|I54 a|V3  a|V29 a|V2  a|V1  a|V4  i|     |V4  i|
202.#153 I55   Def    Alloc r8   |     |I53 a|I54 a|V3  a|V29 a|V2  a|V1  a|I55 a|     |V4  i|
203.#154 rcx   Fixd   Keep  rcx  |     |I53 a|I54 a|V3  a|V29 a|V2  a|V1  a|I55 a|     |V4  i|
203.#155 I53   Use *  Keep  rcx  |     |I53 a|I54 a|V3  a|V29 a|V2  a|V1  a|I55 a|     |V4  i|
203.#156 rdx   Fixd   Keep  rdx  |     |I53 a|I54 a|V3  a|V29 a|V2  a|V1  a|I55 a|     |V4  i|
203.#157 I54   Use *  Keep  rdx  |     |I53 a|I54 a|V3  a|V29 a|V2  a|V1  a|I55 a|     |V4  i|
203.#158 r8    Fixd   Keep  r8   |     |I53 a|I54 a|V3  a|V29 a|V2  a|V1  a|I55 a|     |V4  i|
203.#159 I55   Use *  Keep  r8   |     |I53 a|I54 a|V3  a|V29 a|V2  a|V1  a|I55 a|     |V4  i|
204.#160 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  i|
204.#161 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  i|
204.#162 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  i|
204.#163 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  i|
204.#164 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  i|
204.#165 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  i|
204.#166 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  i|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r14  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
205.#167 BB5  PredBB3            |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
211.#168 rcx   Fixd   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
211.#169 V1    Use    Copy  rcx  |     |V1  a|     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
212.#170 rcx   Fixd   Keep  rcx  |     |V1  a|     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
212.#171 I56   Def    Alloc rcx  |     |I56 a|     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
215.#172 rdx   Fixd   Keep  rdx  |     |I56 a|     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
215.#173 V4    Use *  Copy  rdx  |     |I56 a|V4  a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
216.#174 rdx   Fixd   Keep  rdx  |     |I56 a|V4  i|V3  a|V29 a|V2  a|V1  a|     |     |V4  i|
216.#175 I57   Def    Alloc rdx  |     |I56 a|I57 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  i|
217.#176 rcx   Fixd   Keep  rcx  |     |I56 a|I57 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  i|
217.#177 I56   Use *  Keep  rcx  |     |I56 a|I57 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  i|
217.#178 rdx   Fixd   Keep  rdx  |     |I56 a|I57 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  i|
217.#179 I57   Use *  Keep  rdx  |     |I56 a|I57 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  i|
218.#180 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  i|
218.#181 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  i|
218.#182 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  i|
218.#183 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  i|
218.#184 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  i|
218.#185 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  i|
218.#186 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  i|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r14  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
219.#187 BB7  PredBB2            |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
224.#188 C58   Def    Alloc rcx  |     |C58 a|     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
225.#189 rcx   Fixd   Keep  rcx  |     |C58 a|     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
225.#190 C58   Use *  Keep  rcx  |     |C58 a|     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
226.#191 rcx   Fixd   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
226.#192 I59   Def    Alloc rcx  |     |I59 a|     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
227.#193 rcx   Fixd   Keep  rcx  |     |I59 a|     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
227.#194 I59   Use *  Keep  rcx  |     |I59 a|     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
228.#195 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
228.#196 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
228.#197 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
228.#198 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
228.#199 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
228.#200 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
228.#201 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
228.#202 rax   Fixd   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
228.#203 I60   Def    Alloc rax  |I60 a|     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
229.#204 I60   Use *  Keep  rax  |I60 a|     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
230.#205 V20   Def    Alloc r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |V20 a|V4  a|
232.#206 C61   Def    Alloc rdx  |     |     |C61 a|V3  a|V29 a|V2  a|V1  a|     |V20 a|V4  a|
233.#207 C61   Use *  Keep  rdx  |     |     |C61 a|V3  a|V29 a|V2  a|V1  a|     |V20 a|V4  a|
234.#208 I62   Def    Alloc rdx  |     |     |I62 a|V3  a|V29 a|V2  a|V1  a|     |V20 a|V4  a|
235.#209 rdx   Fixd   Keep  rdx  |     |     |I62 a|V3  a|V29 a|V2  a|V1  a|     |V20 a|V4  a|
235.#210 I62   Use *  Keep  rdx  |     |     |I62 a|V3  a|V29 a|V2  a|V1  a|     |V20 a|V4  a|
236.#211 rdx   Fixd   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |V20 a|V4  a|
236.#212 I63   Def    Alloc rdx  |     |     |I63 a|V3  a|V29 a|V2  a|V1  a|     |V20 a|V4  a|
239.#213 rcx   Fixd   Keep  rcx  |     |     |I63 a|V3  a|V29 a|V2  a|V1  a|     |V20 a|V4  a|
239.#214 V4    Use    Copy  rcx  |     |V4  a|I63 a|V3  a|V29 a|V2  a|V1  a|     |V20 a|V4  a|
240.#215 rcx   Fixd   Keep  rcx  |     |V4  a|I63 a|V3  a|V29 a|V2  a|V1  a|     |V20 a|V4  a|
240.#216 I64   Def    Alloc rcx  |     |I64 a|I63 a|V3  a|V29 a|V2  a|V1  a|     |V20 a|V4  a|
243.#217 r9    Fixd   Keep  r9   |     |I64 a|I63 a|V3  a|V29 a|V2  a|V1  a|     |V20 a|V4  a|
243.#218 V20   Use *  Keep  r9   |     |I64 a|I63 a|V3  a|V29 a|V2  a|V1  a|     |V20 a|V4  a|
244.#219 r9    Fixd   Keep  r9   |     |I64 a|I63 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
244.#220 I65   Def    Alloc r9   |     |I64 a|I63 a|V3  a|V29 a|V2  a|V1  a|     |I65 a|V4  a|
246.#221 C66   Def    Alloc r8   |     |I64 a|I63 a|V3  a|V29 a|V2  a|V1  a|C66 a|I65 a|V4  a|
247.#222 r8    Fixd   Keep  r8   |     |I64 a|I63 a|V3  a|V29 a|V2  a|V1  a|C66 a|I65 a|V4  a|
247.#223 C66   Use *  Keep  r8   |     |I64 a|I63 a|V3  a|V29 a|V2  a|V1  a|C66 a|I65 a|V4  a|
248.#224 r8    Fixd   Keep  r8   |     |I64 a|I63 a|V3  a|V29 a|V2  a|V1  a|     |I65 a|V4  a|
248.#225 I67   Def    Alloc r8   |     |I64 a|I63 a|V3  a|V29 a|V2  a|V1  a|I67 a|I65 a|V4  a|
249.#226 rdx   Fixd   Keep  rdx  |     |I64 a|I63 a|V3  a|V29 a|V2  a|V1  a|I67 a|I65 a|V4  a|
249.#227 I63   Use *  Keep  rdx  |     |I64 a|I63 a|V3  a|V29 a|V2  a|V1  a|I67 a|I65 a|V4  a|
249.#228 rcx   Fixd   Keep  rcx  |     |I64 a|I63 a|V3  a|V29 a|V2  a|V1  a|I67 a|I65 a|V4  a|
249.#229 I64   Use *  Keep  rcx  |     |I64 a|I63 a|V3  a|V29 a|V2  a|V1  a|I67 a|I65 a|V4  a|
249.#230 r9    Fixd   Keep  r9   |     |I64 a|I63 a|V3  a|V29 a|V2  a|V1  a|I67 a|I65 a|V4  a|
249.#231 I65   Use *  Keep  r9   |     |I64 a|I63 a|V3  a|V29 a|V2  a|V1  a|I67 a|I65 a|V4  a|
249.#232 r8    Fixd   Keep  r8   |     |I64 a|I63 a|V3  a|V29 a|V2  a|V1  a|I67 a|I65 a|V4  a|
249.#233 I67   Use *  Keep  r8   |     |I64 a|I63 a|V3  a|V29 a|V2  a|V1  a|I67 a|I65 a|V4  a|
250.#234 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
250.#235 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
250.#236 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
250.#237 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
250.#238 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
250.#239 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
250.#240 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
250.#241 rax   Fixd   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r14  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
250.#242 I68   Def    Alloc rax  |I68 a|     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
251.#243 I68   Use *  Keep  rax  |I68 a|     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
252.#244 V9    Def    Alloc r15  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|V9  a|
254.#245 C69   Def    Alloc rcx  |     |C69 a|     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|V9  a|
255.#246 rcx   Fixd   Keep  rcx  |     |C69 a|     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|V9  a|
255.#247 C69   Use *  Keep  rcx  |     |C69 a|     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|V9  a|
256.#248 rcx   Fixd   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|V9  a|
256.#249 I70   Def    Alloc rcx  |     |I70 a|     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|V9  a|
258.#250 C71   Def    Alloc rdx  |     |I70 a|C71 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|V9  a|
259.#251 rdx   Fixd   Keep  rdx  |     |I70 a|C71 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|V9  a|
259.#252 C71   Use *  Keep  rdx  |     |I70 a|C71 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|V9  a|
260.#253 rdx   Fixd   Keep  rdx  |     |I70 a|     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|V9  a|
260.#254 I72   Def    Alloc rdx  |     |I70 a|I72 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|V9  a|
261.#255 rcx   Fixd   Keep  rcx  |     |I70 a|I72 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|V9  a|
261.#256 I70   Use *  Keep  rcx  |     |I70 a|I72 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|V9  a|
261.#257 rdx   Fixd   Keep  rdx  |     |I70 a|I72 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|V9  a|
261.#258 I72   Use *  Keep  rdx  |     |I70 a|I72 a|V3  a|V29 a|V2  a|V1  a|     |     |V4  a|V9  a|
262.#259 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|V9  a|
262.#260 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|V9  a|
262.#261 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|V9  a|
262.#262 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|V9  a|
262.#263 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|V9  a|
262.#264 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|V9  a|
262.#265 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|V9  a|
262.#266 rax   Fixd   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|V9  a|
262.#267 I73   Def *  Alloc rax  |I73 a|     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|V9  a|
264.#268 C74   Def    Alloc rcx  |     |C74 a|     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|V9  a|
265.#269 C74   Use *  Keep  rcx  |     |C74 a|     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|V9  a|
266.#270 I75   Def    Alloc r8   |     |C74 i|     |V3  a|V29 a|V2  a|V1  a|I75 a|     |V4  a|V9  a|
267.#271 I75   Use *  Keep  r8   |     |C74 i|     |V3  a|V29 a|V2  a|V1  a|I75 a|     |V4  a|V9  a|
268.#272 V8    Def    Alloc r8   |     |C74 i|     |V3  a|V29 a|V2  a|V1  a|V8  a|     |V4  a|V9  a|
271.#273 V9    Use *  Keep  r15  |     |C74 i|     |V3  a|V29 a|V2  a|V1  a|V8  a|     |V4  a|V9  a|
272.#274 V10   Def    Alloc r15  |     |C74 i|     |V3  a|V29 a|V2  a|V1  a|V8  a|     |V4  a|V10 a|
275.#275 V8    Use *  Keep  r8   |     |C74 i|     |V3  a|V29 a|V2  a|V1  a|V8  a|     |V4  a|V10 a|
276.#276 V11   Def    Alloc r8   |     |C74 i|     |V3  a|V29 a|V2  a|V1  a|V11 a|     |V4  a|V10 a|
281.#277 V11   Use    Keep  r8   |     |C74 i|     |V3  a|V29 a|V2  a|V1  a|V11 a|     |V4  a|V10 a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
285.#278 BB8  PredBB7            |     |     |     |V3  a|V29 a|V2  a|V1  a|V11 i|     |V4  a|V10 a|
288.#279 C76   Def    Alloc rcx  |     |C76 a|     |V3  a|V29 a|V2  a|V1  a|V11 i|     |V4  a|V10 a|
289.#280 rcx   Fixd   Keep  rcx  |     |C76 a|     |V3  a|V29 a|V2  a|V1  a|V11 i|     |V4  a|V10 a|
289.#281 C76   Use *  Keep  rcx  |     |C76 a|     |V3  a|V29 a|V2  a|V1  a|V11 i|     |V4  a|V10 a|
290.#282 rcx   Fixd   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|V11 i|     |V4  a|V10 a|
290.#283 I77   Def    Alloc rcx  |     |I77 a|     |V3  a|V29 a|V2  a|V1  a|V11 i|     |V4  a|V10 a|
291.#284 rcx   Fixd   Keep  rcx  |     |I77 a|     |V3  a|V29 a|V2  a|V1  a|V11 i|     |V4  a|V10 a|
291.#285 I77   Use *  Keep  rcx  |     |I77 a|     |V3  a|V29 a|V2  a|V1  a|V11 i|     |V4  a|V10 a|
292.#286 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|V11 i|     |V4  a|V10 a|
292.#287 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|V11 i|     |V4  a|V10 a|
292.#288 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|V11 i|     |V4  a|V10 a|
292.#289 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|V10 a|
292.#290 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|V10 a|
292.#291 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|V10 a|
292.#292 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|V10 a|
292.#293 rax   Fixd   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|V10 a|
292.#294 I78   Def    Alloc rax  |I78 a|     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|V10 a|
293.#295 I78   Use *  Keep  rax  |I78 a|     |     |V3  a|V29 a|V2  a|V1  a|     |     |V4  a|V10 a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r12  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
294.#296 V17   Def    Alloc r12  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
296.#297 C79   Def    Alloc rdx  |     |     |C79 a|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
297.#298 C79   Use *  Keep  rdx  |     |     |C79 a|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
298.#299 I80   Def    Alloc rdx  |     |     |I80 a|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
299.#300 I80   Use *  Keep  rdx  |     |     |I80 a|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
300.#301 V21   Def    Alloc rdx  |     |     |V21 a|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
305.#302 V21   Use    Keep  rdx  |     |     |V21 a|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r12  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
309.#303 BB9  PredBB8            |     |     |V21 a|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
313.#304 V17   Use    Keep  r12  |     |     |V21 a|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
314.#305 I81   Def    Alloc rcx  |     |I81 a|V21 a|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
317.#306 rcx   Fixd   Keep  rcx  |     |I81 a|V21 a|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
317.#307 I81   Use *  Keep  rcx  |     |I81 a|V21 a|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
317.#308 rdx   Fixd   Keep  rdx  |     |I81 a|V21 a|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
317.#309 V21   Use *  Keep  rdx  |     |I81 a|V21 a|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
318.#310 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
318.#311 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
318.#312 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
318.#313 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
318.#314 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
318.#315 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
318.#316 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
318.#317 mm0   Kill   Keep  mm0  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
318.#318 mm1   Kill   Keep  mm1  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
318.#319 mm2   Kill   Keep  mm2  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
318.#320 mm3   Kill   Keep  mm3  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
318.#321 mm4   Kill   Keep  mm4  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
318.#322 mm5   Kill   Keep  mm5  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
324.#323 C82   Def    Alloc rdx  |     |     |C82 a|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
325.#324 V17   Use    Keep  r12  |     |     |C82 a|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
325.#325 C82   Use *  Keep  rdx  |     |     |C82 a|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
330.#326 C83   Def    Alloc rcx  |     |C83 a|C82 i|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
333.#327 rcx   Fixd   Keep  rcx  |     |C83 a|C82 i|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
333.#328 C83   Use *  Keep  rcx  |     |C83 a|C82 i|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
333.#329 rdx   Fixd   Keep  rdx  |     |C83 a|     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
333.#330 V17   Use    Copy  rdx  |     |C83 a|V17 a|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
334.#331 rax   Kill   Keep  rax  |     |C83 i|V17 a|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
334.#332 rcx   Kill   Keep  rcx  |     |     |V17 a|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
334.#333 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
334.#334 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
334.#335 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
334.#336 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
334.#337 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
334.#338 mm0   Kill   Keep  mm0  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
334.#339 mm1   Kill   Keep  mm1  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
334.#340 mm2   Kill   Keep  mm2  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
334.#341 mm3   Kill   Keep  mm3  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
334.#342 mm4   Kill   Keep  mm4  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
334.#343 mm5   Kill   Keep  mm5  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
337.#344 V17   Use *  Keep  r12  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
338.#345 V11   Def    Alloc r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|V11 a|     |     |V4  a|V10 a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r12  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
339.#346 BB10 PredBB7            |     |     |     |V3  a|V29 a|V2  a|V1  a|V11 a|     |     |V4  a|V10 a|
343.#347 r8    Fixd   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|V11 a|     |     |V4  a|V10 a|
343.#348 V11   Use *  Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|V11 a|     |     |V4  a|V10 a|
344.#349 r8    Fixd   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V10 a|
344.#350 I84   Def    Alloc r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|I84 a|     |     |V4  a|V10 a|
347.#351 rdx   Fixd   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|I84 a|     |     |V4  a|V10 a|
347.#352 V10   Use *  Copy  rdx  |     |     |V10 a|V3  a|V29 a|V2  a|V1  a|I84 a|     |     |V4  a|V10 a|
348.#353 rdx   Fixd   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|I84 a|     |     |V4  a|     |
348.#354 I85   Def    Alloc rdx  |     |     |I85 a|V3  a|V29 a|V2  a|V1  a|I84 a|     |     |V4  a|     |
350.#355 C86   Def    Alloc rcx  |     |C86 a|I85 a|V3  a|V29 a|V2  a|V1  a|I84 a|     |     |V4  a|     |
351.#356 rcx   Fixd   Keep  rcx  |     |C86 a|I85 a|V3  a|V29 a|V2  a|V1  a|I84 a|     |     |V4  a|     |
351.#357 C86   Use *  Keep  rcx  |     |C86 a|I85 a|V3  a|V29 a|V2  a|V1  a|I84 a|     |     |V4  a|     |
352.#358 rcx   Fixd   Keep  rcx  |     |     |I85 a|V3  a|V29 a|V2  a|V1  a|I84 a|     |     |V4  a|     |
352.#359 I87   Def    Alloc rcx  |     |I87 a|I85 a|V3  a|V29 a|V2  a|V1  a|I84 a|     |     |V4  a|     |
353.#360 r8    Fixd   Keep  r8   |     |I87 a|I85 a|V3  a|V29 a|V2  a|V1  a|I84 a|     |     |V4  a|     |
353.#361 I84   Use *  Keep  r8   |     |I87 a|I85 a|V3  a|V29 a|V2  a|V1  a|I84 a|     |     |V4  a|     |
353.#362 rdx   Fixd   Keep  rdx  |     |I87 a|I85 a|V3  a|V29 a|V2  a|V1  a|I84 a|     |     |V4  a|     |
353.#363 I85   Use *  Keep  rdx  |     |I87 a|I85 a|V3  a|V29 a|V2  a|V1  a|I84 a|     |     |V4  a|     |
353.#364 rcx   Fixd   Keep  rcx  |     |I87 a|I85 a|V3  a|V29 a|V2  a|V1  a|I84 a|     |     |V4  a|     |
353.#365 I87   Use *  Keep  rcx  |     |I87 a|I85 a|V3  a|V29 a|V2  a|V1  a|I84 a|     |     |V4  a|     |
354.#366 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
354.#367 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
354.#368 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
354.#369 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
354.#370 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
354.#371 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
354.#372 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
354.#373 rax   Fixd   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
354.#374 I88   Def    Alloc rax  |I88 a|     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
355.#375 I88   Use *  Keep  rax  |I88 a|     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
356.#376 V5    Def    Alloc r15  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
360.#377 C89   Def    Alloc rcx  |     |C89 a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
361.#378 rcx   Fixd   Keep  rcx  |     |C89 a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
361.#379 C89   Use *  Keep  rcx  |     |C89 a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
362.#380 rcx   Fixd   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
362.#381 I90   Def    Alloc rcx  |     |I90 a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
364.#382 C91   Def    Alloc rdx  |     |I90 a|C91 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
365.#383 rdx   Fixd   Keep  rdx  |     |I90 a|C91 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
365.#384 C91   Use *  Keep  rdx  |     |I90 a|C91 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
366.#385 rdx   Fixd   Keep  rdx  |     |I90 a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
366.#386 I92   Def    Alloc rdx  |     |I90 a|I92 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
367.#387 rcx   Fixd   Keep  rcx  |     |I90 a|I92 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
367.#388 I90   Use *  Keep  rcx  |     |I90 a|I92 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
367.#389 rdx   Fixd   Keep  rdx  |     |I90 a|I92 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
367.#390 I92   Use *  Keep  rdx  |     |I90 a|I92 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
368.#391 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
368.#392 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
368.#393 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
368.#394 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
368.#395 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
368.#396 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
368.#397 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
368.#398 rax   Fixd   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r12  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
368.#399 I93   Def *  Alloc rax  |I93 a|     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
370.#400 C94   Def    Alloc rdx  |     |     |C94 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
371.#401 C94   Use *  Keep  rdx  |     |     |C94 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
372.#402 I95   Def    Alloc r9   |     |     |C94 i|V3  a|V29 a|V2  a|V1  a|     |I95 a|     |V4  a|V5  a|
373.#403 I95   Use *  Keep  r9   |     |     |C94 i|V3  a|V29 a|V2  a|V1  a|     |I95 a|     |V4  a|V5  a|
374.#404 V23   Def    Alloc r9   |     |     |C94 i|V3  a|V29 a|V2  a|V1  a|     |V23 a|     |V4  a|V5  a|
376.#405 C96   Def    Alloc rdx  |     |     |C96 a|V3  a|V29 a|V2  a|V1  a|     |V23 a|     |V4  a|V5  a|
377.#406 C96   Use *  Keep  rdx  |     |     |C96 a|V3  a|V29 a|V2  a|V1  a|     |V23 a|     |V4  a|V5  a|
378.#407 I97   Def    Alloc rdx  |     |     |I97 a|V3  a|V29 a|V2  a|V1  a|     |V23 a|     |V4  a|V5  a|
379.#408 rdx   Fixd   Keep  rdx  |     |     |I97 a|V3  a|V29 a|V2  a|V1  a|     |V23 a|     |V4  a|V5  a|
379.#409 I97   Use *  Keep  rdx  |     |     |I97 a|V3  a|V29 a|V2  a|V1  a|     |V23 a|     |V4  a|V5  a|
380.#410 rdx   Fixd   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |V23 a|     |V4  a|V5  a|
380.#411 I98   Def    Alloc rdx  |     |     |I98 a|V3  a|V29 a|V2  a|V1  a|     |V23 a|     |V4  a|V5  a|
383.#412 rcx   Fixd   Keep  rcx  |     |     |I98 a|V3  a|V29 a|V2  a|V1  a|     |V23 a|     |V4  a|V5  a|
383.#413 V4    Use *  Copy  rcx  |     |V4  a|I98 a|V3  a|V29 a|V2  a|V1  a|     |V23 a|     |V4  a|V5  a|
384.#414 rcx   Fixd   Keep  rcx  |     |     |I98 a|V3  a|V29 a|V2  a|V1  a|     |V23 a|     |     |V5  a|
384.#415 I99   Def    Alloc rcx  |     |I99 a|I98 a|V3  a|V29 a|V2  a|V1  a|     |V23 a|     |     |V5  a|
387.#416 r9    Fixd   Keep  r9   |     |I99 a|I98 a|V3  a|V29 a|V2  a|V1  a|     |V23 a|     |     |V5  a|
387.#417 V23   Use *  Keep  r9   |     |I99 a|I98 a|V3  a|V29 a|V2  a|V1  a|     |V23 a|     |     |V5  a|
388.#418 r9    Fixd   Keep  r9   |     |I99 a|I98 a|V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
388.#419 I100  Def    Alloc r9   |     |I99 a|I98 a|V3  a|V29 a|V2  a|V1  a|     |I100a|     |     |V5  a|
390.#420 C101  Def    Alloc r8   |     |I99 a|I98 a|V3  a|V29 a|V2  a|V1  a|C101a|I100a|     |     |V5  a|
391.#421 r8    Fixd   Keep  r8   |     |I99 a|I98 a|V3  a|V29 a|V2  a|V1  a|C101a|I100a|     |     |V5  a|
391.#422 C101  Use *  Keep  r8   |     |I99 a|I98 a|V3  a|V29 a|V2  a|V1  a|C101a|I100a|     |     |V5  a|
392.#423 r8    Fixd   Keep  r8   |     |I99 a|I98 a|V3  a|V29 a|V2  a|V1  a|     |I100a|     |     |V5  a|
392.#424 I102  Def    Alloc r8   |     |I99 a|I98 a|V3  a|V29 a|V2  a|V1  a|I102a|I100a|     |     |V5  a|
393.#425 rdx   Fixd   Keep  rdx  |     |I99 a|I98 a|V3  a|V29 a|V2  a|V1  a|I102a|I100a|     |     |V5  a|
393.#426 I98   Use *  Keep  rdx  |     |I99 a|I98 a|V3  a|V29 a|V2  a|V1  a|I102a|I100a|     |     |V5  a|
393.#427 rcx   Fixd   Keep  rcx  |     |I99 a|I98 a|V3  a|V29 a|V2  a|V1  a|I102a|I100a|     |     |V5  a|
393.#428 I99   Use *  Keep  rcx  |     |I99 a|I98 a|V3  a|V29 a|V2  a|V1  a|I102a|I100a|     |     |V5  a|
393.#429 r9    Fixd   Keep  r9   |     |I99 a|I98 a|V3  a|V29 a|V2  a|V1  a|I102a|I100a|     |     |V5  a|
393.#430 I100  Use *  Keep  r9   |     |I99 a|I98 a|V3  a|V29 a|V2  a|V1  a|I102a|I100a|     |     |V5  a|
393.#431 r8    Fixd   Keep  r8   |     |I99 a|I98 a|V3  a|V29 a|V2  a|V1  a|I102a|I100a|     |     |V5  a|
393.#432 I102  Use *  Keep  r8   |     |I99 a|I98 a|V3  a|V29 a|V2  a|V1  a|I102a|I100a|     |     |V5  a|
394.#433 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
394.#434 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
394.#435 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
394.#436 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
394.#437 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
394.#438 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
394.#439 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
394.#440 rax   Fixd   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
394.#441 I103  Def    Alloc rax  |I103a|     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
395.#442 I103  Use *  Keep  rax  |I103a|     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
396.#443 V24   Def    Alloc r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|V24 a|     |     |     |V5  a|
401.#444 V1    Use    Keep  rdi  |     |     |     |V3  a|V29 a|V2  a|V1  a|V24 a|     |     |     |V5  a|
402.#445 I104  Def    Alloc rdx  |     |     |I104a|V3  a|V29 a|V2  a|V1  a|V24 a|     |     |     |V5  a|
403.#446 rdx   Fixd   Keep  rdx  |     |     |I104a|V3  a|V29 a|V2  a|V1  a|V24 a|     |     |     |V5  a|
403.#447 I104  Use *  Keep  rdx  |     |     |I104a|V3  a|V29 a|V2  a|V1  a|V24 a|     |     |     |V5  a|
404.#448 rdx   Fixd   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|V24 a|     |     |     |V5  a|
404.#449 I105  Def    Alloc rdx  |     |     |I105a|V3  a|V29 a|V2  a|V1  a|V24 a|     |     |     |V5  a|
407.#450 rcx   Fixd   Keep  rcx  |     |     |I105a|V3  a|V29 a|V2  a|V1  a|V24 a|     |     |     |V5  a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r12  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
407.#451 V1    Use    Copy  rcx  |     |V1  a|I105a|V3  a|V29 a|V2  a|V1  a|V24 a|     |     |     |V5  a|
408.#452 rcx   Fixd   Keep  rcx  |     |V1  a|I105a|V3  a|V29 a|V2  a|V1  a|V24 a|     |     |     |V5  a|
408.#453 I106  Def    Alloc rcx  |     |I106a|I105a|V3  a|V29 a|V2  a|V1  a|V24 a|     |     |     |V5  a|
411.#454 r8    Fixd   Keep  r8   |     |I106a|I105a|V3  a|V29 a|V2  a|V1  a|V24 a|     |     |     |V5  a|
411.#455 V24   Use *  Keep  r8   |     |I106a|I105a|V3  a|V29 a|V2  a|V1  a|V24 a|     |     |     |V5  a|
412.#456 r8    Fixd   Keep  r8   |     |I106a|I105a|V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
412.#457 I107  Def    Alloc r8   |     |I106a|I105a|V3  a|V29 a|V2  a|V1  a|I107a|     |     |     |V5  a|
413.#458 rdx   Fixd   Keep  rdx  |     |I106a|I105a|V3  a|V29 a|V2  a|V1  a|I107a|     |     |     |V5  a|
413.#459 I105  Use *  Keep  rdx  |     |I106a|I105a|V3  a|V29 a|V2  a|V1  a|I107a|     |     |     |V5  a|
413.#460 rcx   Fixd   Keep  rcx  |     |I106a|I105a|V3  a|V29 a|V2  a|V1  a|I107a|     |     |     |V5  a|
413.#461 I106  Use *  Keep  rcx  |     |I106a|I105a|V3  a|V29 a|V2  a|V1  a|I107a|     |     |     |V5  a|
413.#462 r8    Fixd   Keep  r8   |     |I106a|I105a|V3  a|V29 a|V2  a|V1  a|I107a|     |     |     |V5  a|
413.#463 I107  Use *  Keep  r8   |     |I106a|I105a|V3  a|V29 a|V2  a|V1  a|I107a|     |     |     |V5  a|
414.#464 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
414.#465 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
414.#466 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
414.#467 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
414.#468 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
414.#469 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
414.#470 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
418.#471 C108  Def    Alloc rcx  |     |C108a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
419.#472 C108  Use *  Keep  rcx  |     |C108a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
420.#473 I109  Def    Alloc r8   |     |C108i|     |V3  a|V29 a|V2  a|V1  a|I109a|     |     |     |V5  a|
421.#474 I109  Use *  Keep  r8   |     |C108i|     |V3  a|V29 a|V2  a|V1  a|I109a|     |     |     |V5  a|
422.#475 V12   Def    Alloc r8   |     |C108i|     |V3  a|V29 a|V2  a|V1  a|V12 a|     |     |     |V5  a|
425.#476 V5    Use *  Keep  r15  |     |C108i|     |V3  a|V29 a|V2  a|V1  a|V12 a|     |     |     |V5  a|
426.#477 V14   Def    Alloc r15  |     |C108i|     |V3  a|V29 a|V2  a|V1  a|V12 a|     |     |     |V14 a|
429.#478 V12   Use *  Keep  r8   |     |C108i|     |V3  a|V29 a|V2  a|V1  a|V12 a|     |     |     |V14 a|
430.#479 V15   Def    Alloc r8   |     |C108i|     |V3  a|V29 a|V2  a|V1  a|V15 a|     |     |     |V14 a|
435.#480 V15   Use    Keep  r8   |     |C108i|     |V3  a|V29 a|V2  a|V1  a|V15 a|     |     |     |V14 a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r12  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
439.#481 BB11 PredBB10           |     |     |     |V3  a|V29 a|V2  a|V1  a|V15 i|     |     |     |V14 a|
442.#482 C110  Def    Alloc rcx  |     |C110a|     |V3  a|V29 a|V2  a|V1  a|V15 i|     |     |     |V14 a|
443.#483 rcx   Fixd   Keep  rcx  |     |C110a|     |V3  a|V29 a|V2  a|V1  a|V15 i|     |     |     |V14 a|
443.#484 C110  Use *  Keep  rcx  |     |C110a|     |V3  a|V29 a|V2  a|V1  a|V15 i|     |     |     |V14 a|
444.#485 rcx   Fixd   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|V15 i|     |     |     |V14 a|
444.#486 I111  Def    Alloc rcx  |     |I111a|     |V3  a|V29 a|V2  a|V1  a|V15 i|     |     |     |V14 a|
445.#487 rcx   Fixd   Keep  rcx  |     |I111a|     |V3  a|V29 a|V2  a|V1  a|V15 i|     |     |     |V14 a|
445.#488 I111  Use *  Keep  rcx  |     |I111a|     |V3  a|V29 a|V2  a|V1  a|V15 i|     |     |     |V14 a|
446.#489 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|V15 i|     |     |     |V14 a|
446.#490 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|V15 i|     |     |     |V14 a|
446.#491 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|V15 i|     |     |     |V14 a|
446.#492 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V14 a|
446.#493 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V14 a|
446.#494 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V14 a|
446.#495 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V14 a|
446.#496 rax   Fixd   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V14 a|
446.#497 I112  Def    Alloc rax  |I112a|     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V14 a|
447.#498 I112  Use *  Keep  rax  |I112a|     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V14 a|
448.#499 V16   Def    Alloc r14  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
450.#500 C113  Def    Alloc rdx  |     |     |C113a|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
451.#501 C113  Use *  Keep  rdx  |     |     |C113a|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
452.#502 I114  Def    Alloc rdx  |     |     |I114a|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
453.#503 I114  Use *  Keep  rdx  |     |     |I114a|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
454.#504 V25   Def    Alloc rdx  |     |     |V25 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
459.#505 V25   Use    Keep  rdx  |     |     |V25 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r12  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
463.#506 BB12 PredBB11           |     |     |V25 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
467.#507 V16   Use    Keep  r14  |     |     |V25 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
468.#508 I115  Def    Alloc rcx  |     |I115a|V25 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
471.#509 rcx   Fixd   Keep  rcx  |     |I115a|V25 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
471.#510 I115  Use *  Keep  rcx  |     |I115a|V25 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
471.#511 rdx   Fixd   Keep  rdx  |     |I115a|V25 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
471.#512 V25   Use *  Keep  rdx  |     |I115a|V25 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
472.#513 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
472.#514 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
472.#515 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
472.#516 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
472.#517 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
472.#518 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
472.#519 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
472.#520 mm0   Kill   Keep  mm0  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
472.#521 mm1   Kill   Keep  mm1  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
472.#522 mm2   Kill   Keep  mm2  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
472.#523 mm3   Kill   Keep  mm3  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
472.#524 mm4   Kill   Keep  mm4  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
472.#525 mm5   Kill   Keep  mm5  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
478.#526 C116  Def    Alloc rdx  |     |     |C116a|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
479.#527 V16   Use    Keep  r14  |     |     |C116a|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
479.#528 C116  Use *  Keep  rdx  |     |     |C116a|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
484.#529 C117  Def    Alloc rcx  |     |C117a|C116i|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
487.#530 rcx   Fixd   Keep  rcx  |     |C117a|C116i|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
487.#531 C117  Use *  Keep  rcx  |     |C117a|C116i|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
487.#532 rdx   Fixd   Keep  rdx  |     |C117a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
487.#533 V16   Use    Copy  rdx  |     |C117a|V16 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
488.#534 rax   Kill   Keep  rax  |     |C117i|V16 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
488.#535 rcx   Kill   Keep  rcx  |     |     |V16 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
488.#536 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
488.#537 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
488.#538 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
488.#539 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
488.#540 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
488.#541 mm0   Kill   Keep  mm0  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
488.#542 mm1   Kill   Keep  mm1  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
488.#543 mm2   Kill   Keep  mm2  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
488.#544 mm3   Kill   Keep  mm3  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
488.#545 mm4   Kill   Keep  mm4  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
488.#546 mm5   Kill   Keep  mm5  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
491.#547 V16   Use *  Keep  r14  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
492.#548 V15   Def    Alloc r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|V15 a|     |     |     |V14 a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r12  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
493.#549 BB13 PredBB10           |     |     |     |V3  a|V29 a|V2  a|V1  a|V15 a|     |     |     |V14 a|
497.#550 r8    Fixd   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|V15 a|     |     |     |V14 a|
497.#551 V15   Use *  Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|V15 a|     |     |     |V14 a|
498.#552 r8    Fixd   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V14 a|
498.#553 I118  Def    Alloc r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|I118a|     |     |     |V14 a|
501.#554 rdx   Fixd   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|I118a|     |     |     |V14 a|
501.#555 V14   Use *  Copy  rdx  |     |     |V14 a|V3  a|V29 a|V2  a|V1  a|I118a|     |     |     |V14 a|
502.#556 rdx   Fixd   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|I118a|     |     |     |     |
502.#557 I119  Def    Alloc rdx  |     |     |I119a|V3  a|V29 a|V2  a|V1  a|I118a|     |     |     |     |
504.#558 C120  Def    Alloc rcx  |     |C120a|I119a|V3  a|V29 a|V2  a|V1  a|I118a|     |     |     |     |
505.#559 rcx   Fixd   Keep  rcx  |     |C120a|I119a|V3  a|V29 a|V2  a|V1  a|I118a|     |     |     |     |
505.#560 C120  Use *  Keep  rcx  |     |C120a|I119a|V3  a|V29 a|V2  a|V1  a|I118a|     |     |     |     |
506.#561 rcx   Fixd   Keep  rcx  |     |     |I119a|V3  a|V29 a|V2  a|V1  a|I118a|     |     |     |     |
506.#562 I121  Def    Alloc rcx  |     |I121a|I119a|V3  a|V29 a|V2  a|V1  a|I118a|     |     |     |     |
507.#563 r8    Fixd   Keep  r8   |     |I121a|I119a|V3  a|V29 a|V2  a|V1  a|I118a|     |     |     |     |
507.#564 I118  Use *  Keep  r8   |     |I121a|I119a|V3  a|V29 a|V2  a|V1  a|I118a|     |     |     |     |
507.#565 rdx   Fixd   Keep  rdx  |     |I121a|I119a|V3  a|V29 a|V2  a|V1  a|I118a|     |     |     |     |
507.#566 I119  Use *  Keep  rdx  |     |I121a|I119a|V3  a|V29 a|V2  a|V1  a|I118a|     |     |     |     |
507.#567 rcx   Fixd   Keep  rcx  |     |I121a|I119a|V3  a|V29 a|V2  a|V1  a|I118a|     |     |     |     |
507.#568 I121  Use *  Keep  rcx  |     |I121a|I119a|V3  a|V29 a|V2  a|V1  a|I118a|     |     |     |     |
508.#569 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
508.#570 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
508.#571 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
508.#572 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
508.#573 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
508.#574 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
508.#575 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
508.#576 rax   Fixd   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
508.#577 I122  Def    Alloc rax  |I122a|     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
509.#578 I122  Use *  Keep  rax  |I122a|     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
510.#579 V27   Def    Alloc r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|V27 a|     |     |     |     |
515.#580 V1    Use    Keep  rdi  |     |     |     |V3  a|V29 a|V2  a|V1  a|V27 a|     |     |     |     |
516.#581 I123  Def    Alloc rdx  |     |     |I123a|V3  a|V29 a|V2  a|V1  a|V27 a|     |     |     |     |
517.#582 rdx   Fixd   Keep  rdx  |     |     |I123a|V3  a|V29 a|V2  a|V1  a|V27 a|     |     |     |     |
517.#583 I123  Use *  Keep  rdx  |     |     |I123a|V3  a|V29 a|V2  a|V1  a|V27 a|     |     |     |     |
518.#584 rdx   Fixd   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|V27 a|     |     |     |     |
518.#585 I124  Def    Alloc rdx  |     |     |I124a|V3  a|V29 a|V2  a|V1  a|V27 a|     |     |     |     |
521.#586 rcx   Fixd   Keep  rcx  |     |     |I124a|V3  a|V29 a|V2  a|V1  a|V27 a|     |     |     |     |
521.#587 V1    Use    Copy  rcx  |     |V1  a|I124a|V3  a|V29 a|V2  a|V1  a|V27 a|     |     |     |     |
522.#588 rcx   Fixd   Keep  rcx  |     |V1  a|I124a|V3  a|V29 a|V2  a|V1  a|V27 a|     |     |     |     |
522.#589 I125  Def    Alloc rcx  |     |I125a|I124a|V3  a|V29 a|V2  a|V1  a|V27 a|     |     |     |     |
525.#590 r8    Fixd   Keep  r8   |     |I125a|I124a|V3  a|V29 a|V2  a|V1  a|V27 a|     |     |     |     |
525.#591 V27   Use *  Keep  r8   |     |I125a|I124a|V3  a|V29 a|V2  a|V1  a|V27 a|     |     |     |     |
526.#592 r8    Fixd   Keep  r8   |     |I125a|I124a|V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
526.#593 I126  Def    Alloc r8   |     |I125a|I124a|V3  a|V29 a|V2  a|V1  a|I126a|     |     |     |     |
527.#594 rdx   Fixd   Keep  rdx  |     |I125a|I124a|V3  a|V29 a|V2  a|V1  a|I126a|     |     |     |     |
527.#595 I124  Use *  Keep  rdx  |     |I125a|I124a|V3  a|V29 a|V2  a|V1  a|I126a|     |     |     |     |
527.#596 rcx   Fixd   Keep  rcx  |     |I125a|I124a|V3  a|V29 a|V2  a|V1  a|I126a|     |     |     |     |
527.#597 I125  Use *  Keep  rcx  |     |I125a|I124a|V3  a|V29 a|V2  a|V1  a|I126a|     |     |     |     |
527.#598 r8    Fixd   Keep  r8   |     |I125a|I124a|V3  a|V29 a|V2  a|V1  a|I126a|     |     |     |     |
527.#599 I126  Use *  Keep  r8   |     |I125a|I124a|V3  a|V29 a|V2  a|V1  a|I126a|     |     |     |     |
528.#600 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
528.#601 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
528.#602 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
528.#603 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
528.#604 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
528.#605 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
528.#606 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r12  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
529.#607 BB14 PredBB4            |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
537.#608 V3    Use *  Keep  rbx  |     |     |     |V3  i|V29 a|V2  a|V1  a|     |     |     |     |     |
538.#609 I127  Def    Alloc rbx  |     |     |     |I127a|V29 a|V2  a|V1  a|     |     |     |     |     |
539.#610 I127  Use *  Keep  rbx  |     |     |     |I127a|V29 a|V2  a|V1  a|     |     |     |     |     |
                      Restr rbx  |     |     |     |V3  i|V29 a|V2  a|V1  a|     |     |     |     |     |
540.#611 V3    Def    Alloc rbx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
547.#612 V29   Use    Keep  rbp  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
547.#613 V3    Use    Keep  rbx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
551.#614 V3    ExpU   Keep  NA   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
551.#615 V2    ExpU   Keep  NA   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
551.#616 V29   ExpU   Keep  NA   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r12  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
551.#617 BB15 PredBB14           |     |     |     |     |     |     |V1  a|     |     |     |     |     |
557.#618 rdx   Fixd   Keep  rdx  |     |     |     |     |     |     |V1  a|     |     |     |     |     |
557.#619 V1    Use    Copy  rdx  |     |     |V1  a|     |     |     |V1  a|     |     |     |     |     |
558.#620 rdx   Fixd   Keep  rdx  |     |     |V1  a|     |     |     |V1  a|     |     |     |     |     |
558.#621 I128  Def    Alloc rdx  |     |     |I128a|     |     |     |V1  a|     |     |     |     |     |
560.#622 C129  Def    Alloc rcx  |     |C129a|I128a|     |     |     |V1  a|     |     |     |     |     |
561.#623 rcx   Fixd   Keep  rcx  |     |C129a|I128a|     |     |     |V1  a|     |     |     |     |     |
561.#624 C129  Use *  Keep  rcx  |     |C129a|I128a|     |     |     |V1  a|     |     |     |     |     |
562.#625 rcx   Fixd   Keep  rcx  |     |     |I128a|     |     |     |V1  a|     |     |     |     |     |
562.#626 I130  Def    Alloc rcx  |     |I130a|I128a|     |     |     |V1  a|     |     |     |     |     |
563.#627 rdx   Fixd   Keep  rdx  |     |I130a|I128a|     |     |     |V1  a|     |     |     |     |     |
563.#628 I128  Use *  Keep  rdx  |     |I130a|I128a|     |     |     |V1  a|     |     |     |     |     |
563.#629 rcx   Fixd   Keep  rcx  |     |I130a|I128a|     |     |     |V1  a|     |     |     |     |     |
563.#630 I130  Use *  Keep  rcx  |     |I130a|I128a|     |     |     |V1  a|     |     |     |     |     |
564.#631 rax   Kill   Keep  rax  |     |     |     |     |     |     |V1  a|     |     |     |     |     |
564.#632 rcx   Kill   Keep  rcx  |     |     |     |     |     |     |V1  a|     |     |     |     |     |
564.#633 rdx   Kill   Keep  rdx  |     |     |     |     |     |     |V1  a|     |     |     |     |     |
564.#634 r8    Kill   Keep  r8   |     |     |     |     |     |     |V1  a|     |     |     |     |     |
564.#635 r9    Kill   Keep  r9   |     |     |     |     |     |     |V1  a|     |     |     |     |     |
564.#636 r10   Kill   Keep  r10  |     |     |     |     |     |     |V1  a|     |     |     |     |     |
564.#637 r11   Kill   Keep  r11  |     |     |     |     |     |     |V1  a|     |     |     |     |     |
566.#638 C131  Def    Alloc rdx  |     |     |C131a|     |     |     |V1  a|     |     |     |     |     |
567.#639 C131  Use *  Keep  rdx  |     |     |C131a|     |     |     |V1  a|     |     |     |     |     |
568.#640 I132  Def    Alloc rdx  |     |     |I132a|     |     |     |V1  a|     |     |     |     |     |
569.#641 rdx   Fixd   Keep  rdx  |     |     |I132a|     |     |     |V1  a|     |     |     |     |     |
569.#642 I132  Use *  Keep  rdx  |     |     |I132a|     |     |     |V1  a|     |     |     |     |     |
570.#643 rdx   Fixd   Keep  rdx  |     |     |     |     |     |     |V1  a|     |     |     |     |     |
570.#644 I133  Def    Alloc rdx  |     |     |I133a|     |     |     |V1  a|     |     |     |     |     |
572.#645 C134  Def    Alloc rcx  |     |C134a|I133a|     |     |     |V1  a|     |     |     |     |     |
573.#646 rcx   Fixd   Keep  rcx  |     |C134a|I133a|     |     |     |V1  a|     |     |     |     |     |
573.#647 C134  Use *  Keep  rcx  |     |C134a|I133a|     |     |     |V1  a|     |     |     |     |     |
574.#648 rcx   Fixd   Keep  rcx  |     |     |I133a|     |     |     |V1  a|     |     |     |     |     |
574.#649 I135  Def    Alloc rcx  |     |I135a|I133a|     |     |     |V1  a|     |     |     |     |     |
576.#650 C136  Def    Alloc r8   |     |I135a|I133a|     |     |     |V1  a|C136a|     |     |     |     |
577.#651 r8    Fixd   Keep  r8   |     |I135a|I133a|     |     |     |V1  a|C136a|     |     |     |     |
577.#652 C136  Use *  Keep  r8   |     |I135a|I133a|     |     |     |V1  a|C136a|     |     |     |     |
578.#653 r8    Fixd   Keep  r8   |     |I135a|I133a|     |     |     |V1  a|     |     |     |     |     |
578.#654 I137  Def    Alloc r8   |     |I135a|I133a|     |     |     |V1  a|I137a|     |     |     |     |
579.#655 rdx   Fixd   Keep  rdx  |     |I135a|I133a|     |     |     |V1  a|I137a|     |     |     |     |
579.#656 I133  Use *  Keep  rdx  |     |I135a|I133a|     |     |     |V1  a|I137a|     |     |     |     |
579.#657 rcx   Fixd   Keep  rcx  |     |I135a|I133a|     |     |     |V1  a|I137a|     |     |     |     |
579.#658 I135  Use *  Keep  rcx  |     |I135a|I133a|     |     |     |V1  a|I137a|     |     |     |     |
579.#659 r8    Fixd   Keep  r8   |     |I135a|I133a|     |     |     |V1  a|I137a|     |     |     |     |
579.#660 I137  Use *  Keep  r8   |     |I135a|I133a|     |     |     |V1  a|I137a|     |     |     |     |
580.#661 rax   Kill   Keep  rax  |     |     |     |     |     |     |V1  a|     |     |     |     |     |
580.#662 rcx   Kill   Keep  rcx  |     |     |     |     |     |     |V1  a|     |     |     |     |     |
580.#663 rdx   Kill   Keep  rdx  |     |     |     |     |     |     |V1  a|     |     |     |     |     |
580.#664 r8    Kill   Keep  r8   |     |     |     |     |     |     |V1  a|     |     |     |     |     |
580.#665 r9    Kill   Keep  r9   |     |     |     |     |     |     |V1  a|     |     |     |     |     |
580.#666 r10   Kill   Keep  r10  |     |     |     |     |     |     |V1  a|     |     |     |     |     |
580.#667 r11   Kill   Keep  r11  |     |     |     |     |     |     |V1  a|     |     |     |     |     |
580.#668 rax   Fixd   Keep  rax  |     |     |     |     |     |     |V1  a|     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r12  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
580.#669 I138  Def *  Alloc rax  |I138a|     |     |     |     |     |V1  a|     |     |     |     |     |
585.#670 rax   Fixd   Keep  rax  |     |     |     |     |     |     |V1  a|     |     |     |     |     |
585.#671 V1    Use *  Copy  rax  |V1  a|     |     |     |     |     |V1  a|     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r12  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
587.#672 BB16 PredBB8            |     |     |     |     |     |     |     |     |     |     |     |     |
590.#673 rax   Kill   Keep  rax  |     |     |     |     |     |     |     |     |     |     |     |     |
590.#674 rcx   Kill   Keep  rcx  |     |     |     |     |     |     |     |     |     |     |     |     |
590.#675 rdx   Kill   Keep  rdx  |     |     |     |     |     |     |     |     |     |     |     |     |
590.#676 r8    Kill   Keep  r8   |     |     |     |     |     |     |     |     |     |     |     |     |
590.#677 r9    Kill   Keep  r9   |     |     |     |     |     |     |     |     |     |     |     |     |
590.#678 r10   Kill   Keep  r10  |     |     |     |     |     |     |     |     |     |     |     |     |
590.#679 r11   Kill   Keep  r11  |     |     |     |     |     |     |     |     |     |     |     |     |

------------
REFPOSITIONS AFTER ALLOCATION: 
------------
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00>  BB00 regmask=[rsi] minReg=1 regOptional>
<RefPosition #1   @1   RefTypeBB  BB01 regmask=[] minReg=1>
<RefPosition #2   @4   RefTypeDef <Ivl:25> CNS_INT BB01 regmask=[rdx] minReg=1>
<RefPosition #3   @5   RefTypeUse <Ivl:25>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #4   @6   RefTypeDef <Ivl:26> IND BB01 regmask=[rdx] minReg=1>
<RefPosition #5   @7   RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #6   @7   RefTypeUse <Ivl:26>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #7   @8   RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #8   @8   RefTypeDef <Ivl:27> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>
<RefPosition #9   @10  RefTypeDef <Ivl:28> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #10  @11  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #11  @11  RefTypeUse <Ivl:28>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #12  @12  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #13  @12  RefTypeDef <Ivl:29> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #14  @14  RefTypeDef <Ivl:30> CNS_INT BB01 regmask=[r8] minReg=1>
<RefPosition #15  @15  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #16  @15  RefTypeUse <Ivl:30>  BB01 regmask=[r8] minReg=1 last fixed>
<RefPosition #17  @16  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #18  @16  RefTypeDef <Ivl:31> PUTARG_REG BB01 regmask=[r8] minReg=1 fixed>
<RefPosition #19  @17  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #20  @17  RefTypeUse <Ivl:27>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #21  @17  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #22  @17  RefTypeUse <Ivl:29>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #23  @17  RefTypeFixedReg <Reg:r8 >  BB01 regmask=[r8] minReg=1>
<RefPosition #24  @17  RefTypeUse <Ivl:31>  BB01 regmask=[r8] minReg=1 last fixed>
<RefPosition #25  @18  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #26  @18  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #27  @18  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #28  @18  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #29  @18  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #30  @18  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #31  @18  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #32  @18  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #33  @18  RefTypeDef <Ivl:32> CALL BB01 regmask=[rax] minReg=1 last fixed local>
<RefPosition #34  @22  RefTypeDef <Ivl:33> CNS_INT BB01 regmask=[rcx] minReg=1>
<RefPosition #35  @23  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #36  @23  RefTypeUse <Ivl:33>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #37  @24  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #38  @24  RefTypeDef <Ivl:34> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #39  @25  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #40  @25  RefTypeUse <Ivl:34>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #41  @26  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #42  @26  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #43  @26  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #44  @26  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #45  @26  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #46  @26  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #47  @26  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #48  @26  RefTypeFixedReg <Reg:rax>  BB01 regmask=[rax] minReg=1>
<RefPosition #49  @26  RefTypeDef <Ivl:35> CALL BB01 regmask=[rax] minReg=1 fixed>
<RefPosition #50  @27  RefTypeUse <Ivl:35>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #51  @28  RefTypeDef <Ivl:6 V07> STORE_LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #52  @31  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #53  @31  RefTypeUse <Ivl:6 V07> LCL_VAR BB01 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #54  @32  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #55  @32  RefTypeDef <Ivl:36> PUTARG_REG BB01 regmask=[rcx] minReg=1 fixed>
<RefPosition #56  @34  RefTypeDef <Ivl:37> CNS_INT BB01 regmask=[rdx] minReg=1>
<RefPosition #57  @35  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #58  @35  RefTypeUse <Ivl:37>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #59  @36  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #60  @36  RefTypeDef <Ivl:38> PUTARG_REG BB01 regmask=[rdx] minReg=1 fixed>
<RefPosition #61  @37  RefTypeFixedReg <Reg:rcx>  BB01 regmask=[rcx] minReg=1>
<RefPosition #62  @37  RefTypeUse <Ivl:36>  BB01 regmask=[rcx] minReg=1 last fixed>
<RefPosition #63  @37  RefTypeFixedReg <Reg:rdx>  BB01 regmask=[rdx] minReg=1>
<RefPosition #64  @37  RefTypeUse <Ivl:38>  BB01 regmask=[rdx] minReg=1 last fixed>
<RefPosition #65  @38  RefTypeKill <Reg:rax>  BB01 regmask=[rax] minReg=1 last>
<RefPosition #66  @38  RefTypeKill <Reg:rcx>  BB01 regmask=[rcx] minReg=1 last>
<RefPosition #67  @38  RefTypeKill <Reg:rdx>  BB01 regmask=[rdx] minReg=1 last>
<RefPosition #68  @38  RefTypeKill <Reg:r8 >  BB01 regmask=[r8] minReg=1 last>
<RefPosition #69  @38  RefTypeKill <Reg:r9 >  BB01 regmask=[r9] minReg=1 last>
<RefPosition #70  @38  RefTypeKill <Reg:r10>  BB01 regmask=[r10] minReg=1 last>
<RefPosition #71  @38  RefTypeKill <Reg:r11>  BB01 regmask=[r11] minReg=1 last>
<RefPosition #72  @43  RefTypeUse <Ivl:6 V07> LCL_VAR BB01 regmask=[rdi] minReg=1 last>
<RefPosition #73  @44  RefTypeDef <Ivl:1 V01> STORE_LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #74  @49  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rsi] minReg=1 last>
<RefPosition #75  @50  RefTypeDef <Ivl:2 V02> STORE_LCL_VAR BB01 regmask=[rsi] minReg=1>
<RefPosition #76  @54  RefTypeDef <Ivl:39> CNS_INT BB01 regmask=[rbx] minReg=1>
<RefPosition #77  @55  RefTypeUse <Ivl:39>  BB01 regmask=[rbx] minReg=1 last>
<RefPosition #78  @56  RefTypeDef <Ivl:3 V03> STORE_LCL_VAR BB01 regmask=[rbx] minReg=1>
<RefPosition #79  @63  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[rsi] minReg=1>
<RefPosition #80  @64  RefTypeDef <Ivl:40> IND BB01 regmask=[rbp] minReg=1>
<RefPosition #81  @65  RefTypeUse <Ivl:40>  BB01 regmask=[rbp] minReg=1 last>
<RefPosition #82  @66  RefTypeDef <Ivl:24 V29> STORE_LCL_VAR BB01 regmask=[rbp] minReg=1>
<RefPosition #83  @71  RefTypeUse <Ivl:24 V29> LCL_VAR BB01 regmask=[rbp] minReg=1 regOptional>
<RefPosition #84  @75  RefTypeBB  BB02 regmask=[] minReg=1>
<RefPosition #85  @83  RefTypeUse <Ivl:3 V03> LCL_VAR BB02 regmask=[rbx] minReg=1>
<RefPosition #86  @84  RefTypeDef <Ivl:41> CAST BB02 regmask=[rdx] minReg=1>
<RefPosition #87  @87  RefTypeUse <Ivl:2 V02> LCL_VAR BB02 regmask=[rsi] minReg=1>
<RefPosition #88  @87  RefTypeUse <Ivl:41>  BB02 regmask=[rdx] minReg=1 last>
<RefPosition #89  @88  RefTypeDef <Ivl:42> IND BB02 regmask=[r14] minReg=1>
<RefPosition #90  @89  RefTypeUse <Ivl:42>  BB02 regmask=[r14] minReg=1 last>
<RefPosition #91  @90  RefTypeDef <Ivl:4 V04> STORE_LCL_VAR BB02 regmask=[r14] minReg=1>
<RefPosition #92  @95  RefTypeUse <Ivl:4 V04> LCL_VAR BB02 regmask=[r14] minReg=1>
<RefPosition #93  @98  RefTypeDef <Ivl:43> CNS_INT BB02 regmask=[rdx] minReg=1>
<RefPosition #94  @99  RefTypeUse <Ivl:43>  BB02 regmask=[rdx] minReg=1 last>
<RefPosition #95  @100 RefTypeDef <Ivl:44> IND BB02 regmask=[rdx] minReg=1>
<RefPosition #96  @101 RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #97  @101 RefTypeUse <Ivl:44>  BB02 regmask=[rdx] minReg=1 last fixed>
<RefPosition #98  @102 RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #99  @102 RefTypeDef <Ivl:45> PUTARG_REG BB02 regmask=[rdx] minReg=1 fixed>
<RefPosition #100 @105 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #101 @105 RefTypeUse <Ivl:4 V04> LCL_VAR BB02 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #102 @106 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #103 @106 RefTypeDef <Ivl:46> PUTARG_REG BB02 regmask=[rcx] minReg=1 fixed>
<RefPosition #104 @108 RefTypeDef <Ivl:47> CNS_INT BB02 regmask=[r8] minReg=1>
<RefPosition #105 @109 RefTypeFixedReg <Reg:r8 >  BB02 regmask=[r8] minReg=1>
<RefPosition #106 @109 RefTypeUse <Ivl:47>  BB02 regmask=[r8] minReg=1 last fixed>
<RefPosition #107 @110 RefTypeFixedReg <Reg:r8 >  BB02 regmask=[r8] minReg=1>
<RefPosition #108 @110 RefTypeDef <Ivl:48> PUTARG_REG BB02 regmask=[r8] minReg=1 fixed>
<RefPosition #109 @111 RefTypeFixedReg <Reg:rdx>  BB02 regmask=[rdx] minReg=1>
<RefPosition #110 @111 RefTypeUse <Ivl:45>  BB02 regmask=[rdx] minReg=1 last fixed>
<RefPosition #111 @111 RefTypeFixedReg <Reg:rcx>  BB02 regmask=[rcx] minReg=1>
<RefPosition #112 @111 RefTypeUse <Ivl:46>  BB02 regmask=[rcx] minReg=1 last fixed>
<RefPosition #113 @111 RefTypeFixedReg <Reg:r8 >  BB02 regmask=[r8] minReg=1>
<RefPosition #114 @111 RefTypeUse <Ivl:48>  BB02 regmask=[r8] minReg=1 last fixed>
<RefPosition #115 @112 RefTypeKill <Reg:rax>  BB02 regmask=[rax] minReg=1 last>
<RefPosition #116 @112 RefTypeKill <Reg:rcx>  BB02 regmask=[rcx] minReg=1 last>
<RefPosition #117 @112 RefTypeKill <Reg:rdx>  BB02 regmask=[rdx] minReg=1 last>
<RefPosition #118 @112 RefTypeKill <Reg:r8 >  BB02 regmask=[r8] minReg=1 last>
<RefPosition #119 @112 RefTypeKill <Reg:r9 >  BB02 regmask=[r9] minReg=1 last>
<RefPosition #120 @112 RefTypeKill <Reg:r10>  BB02 regmask=[r10] minReg=1 last>
<RefPosition #121 @112 RefTypeKill <Reg:r11>  BB02 regmask=[r11] minReg=1 last>
<RefPosition #122 @112 RefTypeFixedReg <Reg:rax>  BB02 regmask=[rax] minReg=1>
<RefPosition #123 @112 RefTypeDef <Ivl:49> CALL BB02 regmask=[rax] minReg=1 fixed>
<RefPosition #124 @115 RefTypeUse <Ivl:49>  BB02 regmask=[rax] minReg=1 last regOptional>
<RefPosition #125 @119 RefTypeBB  BB03 regmask=[] minReg=1>
<RefPosition #126 @137 RefTypeUse <Ivl:1 V01> LCL_VAR BB03 regmask=[rdi] minReg=1>
<RefPosition #127 @145 RefTypeUse <Ivl:1 V01> LCL_VAR BB03 regmask=[rdi] minReg=1>
<RefPosition #128 @146 RefTypeDef <Ivl:50> IND BB03 regmask=[rcx] minReg=1>
<RefPosition #129 @147 RefTypeUse <Ivl:50>  BB03 regmask=[rcx] minReg=1 last>
<RefPosition #130 @148 RefTypeDef <Ivl:16 V18> STORE_LCL_VAR BB03 regmask=[rcx] minReg=1>
<RefPosition #131 @155 RefTypeUse <Ivl:1 V01> LCL_VAR BB03 regmask=[rdi] minReg=1>
<RefPosition #132 @156 RefTypeDef <Ivl:51> IND BB03 regmask=[rdx] minReg=1>
<RefPosition #133 @157 RefTypeUse <Ivl:51>  BB03 regmask=[rdx] minReg=1 last>
<RefPosition #134 @158 RefTypeDef <Ivl:17 V19> STORE_LCL_VAR BB03 regmask=[rdx] minReg=1>
<RefPosition #135 @169 RefTypeUse <Ivl:16 V18> LCL_VAR BB03 regmask=[rcx] minReg=1>
<RefPosition #136 @169 RefTypeUse <Ivl:17 V19> LCL_VAR BB03 regmask=[rdx] minReg=1>
<RefPosition #137 @173 RefTypeBB  BB04 regmask=[] minReg=1>
<RefPosition #138 @181 RefTypeUse <Ivl:17 V19> LCL_VAR BB04 regmask=[rdx] minReg=1>
<RefPosition #139 @182 RefTypeDef <Ivl:52> ADD BB04 regmask=[r8] minReg=1>
<RefPosition #140 @187 RefTypeUse <Ivl:1 V01> LCL_VAR BB04 regmask=[rdi] minReg=1>
<RefPosition #141 @187 RefTypeUse <Ivl:52>  BB04 regmask=[r8] minReg=1 last>
<RefPosition #142 @193 RefTypeFixedReg <Reg:rcx>  BB04 regmask=[rcx] minReg=1>
<RefPosition #143 @193 RefTypeUse <Ivl:16 V18> LCL_VAR BB04 regmask=[rcx] minReg=1 last fixed>
<RefPosition #144 @194 RefTypeFixedReg <Reg:rcx>  BB04 regmask=[rcx] minReg=1>
<RefPosition #145 @194 RefTypeDef <Ivl:53> PUTARG_REG BB04 regmask=[rcx] minReg=1 fixed>
<RefPosition #146 @197 RefTypeFixedReg <Reg:rdx>  BB04 regmask=[rdx] minReg=1>
<RefPosition #147 @197 RefTypeUse <Ivl:17 V19> LCL_VAR BB04 regmask=[rdx] minReg=1 last fixed>
<RefPosition #148 @198 RefTypeFixedReg <Reg:rdx>  BB04 regmask=[rdx] minReg=1>
<RefPosition #149 @198 RefTypeDef <Ivl:54> PUTARG_REG BB04 regmask=[rdx] minReg=1 fixed>
<RefPosition #150 @201 RefTypeFixedReg <Reg:r8 >  BB04 regmask=[r8] minReg=1>
<RefPosition #151 @201 RefTypeUse <Ivl:4 V04> LCL_VAR BB04 regmask=[r8] minReg=1 last copy fixed>
<RefPosition #152 @202 RefTypeFixedReg <Reg:r8 >  BB04 regmask=[r8] minReg=1>
<RefPosition #153 @202 RefTypeDef <Ivl:55> PUTARG_REG BB04 regmask=[r8] minReg=1 fixed>
<RefPosition #154 @203 RefTypeFixedReg <Reg:rcx>  BB04 regmask=[rcx] minReg=1>
<RefPosition #155 @203 RefTypeUse <Ivl:53>  BB04 regmask=[rcx] minReg=1 last fixed>
<RefPosition #156 @203 RefTypeFixedReg <Reg:rdx>  BB04 regmask=[rdx] minReg=1>
<RefPosition #157 @203 RefTypeUse <Ivl:54>  BB04 regmask=[rdx] minReg=1 last fixed>
<RefPosition #158 @203 RefTypeFixedReg <Reg:r8 >  BB04 regmask=[r8] minReg=1>
<RefPosition #159 @203 RefTypeUse <Ivl:55>  BB04 regmask=[r8] minReg=1 last fixed>
<RefPosition #160 @204 RefTypeKill <Reg:rax>  BB04 regmask=[rax] minReg=1 last>
<RefPosition #161 @204 RefTypeKill <Reg:rcx>  BB04 regmask=[rcx] minReg=1 last>
<RefPosition #162 @204 RefTypeKill <Reg:rdx>  BB04 regmask=[rdx] minReg=1 last>
<RefPosition #163 @204 RefTypeKill <Reg:r8 >  BB04 regmask=[r8] minReg=1 last>
<RefPosition #164 @204 RefTypeKill <Reg:r9 >  BB04 regmask=[r9] minReg=1 last>
<RefPosition #165 @204 RefTypeKill <Reg:r10>  BB04 regmask=[r10] minReg=1 last>
<RefPosition #166 @204 RefTypeKill <Reg:r11>  BB04 regmask=[r11] minReg=1 last>
<RefPosition #167 @205 RefTypeBB  BB05 regmask=[] minReg=1>
<RefPosition #168 @211 RefTypeFixedReg <Reg:rcx>  BB05 regmask=[rcx] minReg=1>
<RefPosition #169 @211 RefTypeUse <Ivl:1 V01> LCL_VAR BB05 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #170 @212 RefTypeFixedReg <Reg:rcx>  BB05 regmask=[rcx] minReg=1>
<RefPosition #171 @212 RefTypeDef <Ivl:56> PUTARG_REG BB05 regmask=[rcx] minReg=1 fixed>
<RefPosition #172 @215 RefTypeFixedReg <Reg:rdx>  BB05 regmask=[rdx] minReg=1>
<RefPosition #173 @215 RefTypeUse <Ivl:4 V04> LCL_VAR BB05 regmask=[rdx] minReg=1 last copy fixed>
<RefPosition #174 @216 RefTypeFixedReg <Reg:rdx>  BB05 regmask=[rdx] minReg=1>
<RefPosition #175 @216 RefTypeDef <Ivl:57> PUTARG_REG BB05 regmask=[rdx] minReg=1 fixed>
<RefPosition #176 @217 RefTypeFixedReg <Reg:rcx>  BB05 regmask=[rcx] minReg=1>
<RefPosition #177 @217 RefTypeUse <Ivl:56>  BB05 regmask=[rcx] minReg=1 last fixed>
<RefPosition #178 @217 RefTypeFixedReg <Reg:rdx>  BB05 regmask=[rdx] minReg=1>
<RefPosition #179 @217 RefTypeUse <Ivl:57>  BB05 regmask=[rdx] minReg=1 last fixed>
<RefPosition #180 @218 RefTypeKill <Reg:rax>  BB05 regmask=[rax] minReg=1 last>
<RefPosition #181 @218 RefTypeKill <Reg:rcx>  BB05 regmask=[rcx] minReg=1 last>
<RefPosition #182 @218 RefTypeKill <Reg:rdx>  BB05 regmask=[rdx] minReg=1 last>
<RefPosition #183 @218 RefTypeKill <Reg:r8 >  BB05 regmask=[r8] minReg=1 last>
<RefPosition #184 @218 RefTypeKill <Reg:r9 >  BB05 regmask=[r9] minReg=1 last>
<RefPosition #185 @218 RefTypeKill <Reg:r10>  BB05 regmask=[r10] minReg=1 last>
<RefPosition #186 @218 RefTypeKill <Reg:r11>  BB05 regmask=[r11] minReg=1 last>
<RefPosition #187 @219 RefTypeBB  BB07 regmask=[] minReg=1>
<RefPosition #188 @224 RefTypeDef <Ivl:58> CNS_INT BB07 regmask=[rcx] minReg=1>
<RefPosition #189 @225 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #190 @225 RefTypeUse <Ivl:58>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #191 @226 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #192 @226 RefTypeDef <Ivl:59> PUTARG_REG BB07 regmask=[rcx] minReg=1 fixed>
<RefPosition #193 @227 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #194 @227 RefTypeUse <Ivl:59>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #195 @228 RefTypeKill <Reg:rax>  BB07 regmask=[rax] minReg=1 last>
<RefPosition #196 @228 RefTypeKill <Reg:rcx>  BB07 regmask=[rcx] minReg=1 last>
<RefPosition #197 @228 RefTypeKill <Reg:rdx>  BB07 regmask=[rdx] minReg=1 last>
<RefPosition #198 @228 RefTypeKill <Reg:r8 >  BB07 regmask=[r8] minReg=1 last>
<RefPosition #199 @228 RefTypeKill <Reg:r9 >  BB07 regmask=[r9] minReg=1 last>
<RefPosition #200 @228 RefTypeKill <Reg:r10>  BB07 regmask=[r10] minReg=1 last>
<RefPosition #201 @228 RefTypeKill <Reg:r11>  BB07 regmask=[r11] minReg=1 last>
<RefPosition #202 @228 RefTypeFixedReg <Reg:rax>  BB07 regmask=[rax] minReg=1>
<RefPosition #203 @228 RefTypeDef <Ivl:60> CALL BB07 regmask=[rax] minReg=1 fixed>
<RefPosition #204 @229 RefTypeUse <Ivl:60>  BB07 regmask=[rax] minReg=1 last>
<RefPosition #205 @230 RefTypeDef <Ivl:18 V20> STORE_LCL_VAR BB07 regmask=[r9] minReg=1>
<RefPosition #206 @232 RefTypeDef <Ivl:61> CNS_INT BB07 regmask=[rdx] minReg=1>
<RefPosition #207 @233 RefTypeUse <Ivl:61>  BB07 regmask=[rdx] minReg=1 last>
<RefPosition #208 @234 RefTypeDef <Ivl:62> IND BB07 regmask=[rdx] minReg=1>
<RefPosition #209 @235 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #210 @235 RefTypeUse <Ivl:62>  BB07 regmask=[rdx] minReg=1 last fixed>
<RefPosition #211 @236 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #212 @236 RefTypeDef <Ivl:63> PUTARG_REG BB07 regmask=[rdx] minReg=1 fixed>
<RefPosition #213 @239 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #214 @239 RefTypeUse <Ivl:4 V04> LCL_VAR BB07 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #215 @240 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #216 @240 RefTypeDef <Ivl:64> PUTARG_REG BB07 regmask=[rcx] minReg=1 fixed>
<RefPosition #217 @243 RefTypeFixedReg <Reg:r9 >  BB07 regmask=[r9] minReg=1>
<RefPosition #218 @243 RefTypeUse <Ivl:18 V20> LCL_VAR BB07 regmask=[r9] minReg=1 last fixed>
<RefPosition #219 @244 RefTypeFixedReg <Reg:r9 >  BB07 regmask=[r9] minReg=1>
<RefPosition #220 @244 RefTypeDef <Ivl:65> PUTARG_REG BB07 regmask=[r9] minReg=1 fixed>
<RefPosition #221 @246 RefTypeDef <Ivl:66> CNS_INT BB07 regmask=[r8] minReg=1>
<RefPosition #222 @247 RefTypeFixedReg <Reg:r8 >  BB07 regmask=[r8] minReg=1>
<RefPosition #223 @247 RefTypeUse <Ivl:66>  BB07 regmask=[r8] minReg=1 last fixed>
<RefPosition #224 @248 RefTypeFixedReg <Reg:r8 >  BB07 regmask=[r8] minReg=1>
<RefPosition #225 @248 RefTypeDef <Ivl:67> PUTARG_REG BB07 regmask=[r8] minReg=1 fixed>
<RefPosition #226 @249 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #227 @249 RefTypeUse <Ivl:63>  BB07 regmask=[rdx] minReg=1 last fixed>
<RefPosition #228 @249 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #229 @249 RefTypeUse <Ivl:64>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #230 @249 RefTypeFixedReg <Reg:r9 >  BB07 regmask=[r9] minReg=1>
<RefPosition #231 @249 RefTypeUse <Ivl:65>  BB07 regmask=[r9] minReg=1 last fixed>
<RefPosition #232 @249 RefTypeFixedReg <Reg:r8 >  BB07 regmask=[r8] minReg=1>
<RefPosition #233 @249 RefTypeUse <Ivl:67>  BB07 regmask=[r8] minReg=1 last fixed>
<RefPosition #234 @250 RefTypeKill <Reg:rax>  BB07 regmask=[rax] minReg=1 last>
<RefPosition #235 @250 RefTypeKill <Reg:rcx>  BB07 regmask=[rcx] minReg=1 last>
<RefPosition #236 @250 RefTypeKill <Reg:rdx>  BB07 regmask=[rdx] minReg=1 last>
<RefPosition #237 @250 RefTypeKill <Reg:r8 >  BB07 regmask=[r8] minReg=1 last>
<RefPosition #238 @250 RefTypeKill <Reg:r9 >  BB07 regmask=[r9] minReg=1 last>
<RefPosition #239 @250 RefTypeKill <Reg:r10>  BB07 regmask=[r10] minReg=1 last>
<RefPosition #240 @250 RefTypeKill <Reg:r11>  BB07 regmask=[r11] minReg=1 last>
<RefPosition #241 @250 RefTypeFixedReg <Reg:rax>  BB07 regmask=[rax] minReg=1>
<RefPosition #242 @250 RefTypeDef <Ivl:68> CALL BB07 regmask=[rax] minReg=1 fixed>
<RefPosition #243 @251 RefTypeUse <Ivl:68>  BB07 regmask=[rax] minReg=1 last>
<RefPosition #244 @252 RefTypeDef <Ivl:8 V09> STORE_LCL_VAR BB07 regmask=[r15] minReg=1>
<RefPosition #245 @254 RefTypeDef <Ivl:69> CNS_INT BB07 regmask=[rcx] minReg=1>
<RefPosition #246 @255 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #247 @255 RefTypeUse <Ivl:69>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #248 @256 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #249 @256 RefTypeDef <Ivl:70> PUTARG_REG BB07 regmask=[rcx] minReg=1 fixed>
<RefPosition #250 @258 RefTypeDef <Ivl:71> CNS_INT BB07 regmask=[rdx] minReg=1>
<RefPosition #251 @259 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #252 @259 RefTypeUse <Ivl:71>  BB07 regmask=[rdx] minReg=1 last fixed>
<RefPosition #253 @260 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #254 @260 RefTypeDef <Ivl:72> PUTARG_REG BB07 regmask=[rdx] minReg=1 fixed>
<RefPosition #255 @261 RefTypeFixedReg <Reg:rcx>  BB07 regmask=[rcx] minReg=1>
<RefPosition #256 @261 RefTypeUse <Ivl:70>  BB07 regmask=[rcx] minReg=1 last fixed>
<RefPosition #257 @261 RefTypeFixedReg <Reg:rdx>  BB07 regmask=[rdx] minReg=1>
<RefPosition #258 @261 RefTypeUse <Ivl:72>  BB07 regmask=[rdx] minReg=1 last fixed>
<RefPosition #259 @262 RefTypeKill <Reg:rax>  BB07 regmask=[rax] minReg=1 last>
<RefPosition #260 @262 RefTypeKill <Reg:rcx>  BB07 regmask=[rcx] minReg=1 last>
<RefPosition #261 @262 RefTypeKill <Reg:rdx>  BB07 regmask=[rdx] minReg=1 last>
<RefPosition #262 @262 RefTypeKill <Reg:r8 >  BB07 regmask=[r8] minReg=1 last>
<RefPosition #263 @262 RefTypeKill <Reg:r9 >  BB07 regmask=[r9] minReg=1 last>
<RefPosition #264 @262 RefTypeKill <Reg:r10>  BB07 regmask=[r10] minReg=1 last>
<RefPosition #265 @262 RefTypeKill <Reg:r11>  BB07 regmask=[r11] minReg=1 last>
<RefPosition #266 @262 RefTypeFixedReg <Reg:rax>  BB07 regmask=[rax] minReg=1>
<RefPosition #267 @262 RefTypeDef <Ivl:73> CALL BB07 regmask=[rax] minReg=1 last fixed local>
<RefPosition #268 @264 RefTypeDef <Ivl:74> CNS_INT BB07 regmask=[rcx] minReg=1>
<RefPosition #269 @265 RefTypeUse <Ivl:74>  BB07 regmask=[rcx] minReg=1 last>
<RefPosition #270 @266 RefTypeDef <Ivl:75> IND BB07 regmask=[r8] minReg=1>
<RefPosition #271 @267 RefTypeUse <Ivl:75>  BB07 regmask=[r8] minReg=1 last>
<RefPosition #272 @268 RefTypeDef <Ivl:7 V08> STORE_LCL_VAR BB07 regmask=[r8] minReg=1>
<RefPosition #273 @271 RefTypeUse <Ivl:8 V09> LCL_VAR BB07 regmask=[r15] minReg=1 last>
<RefPosition #274 @272 RefTypeDef <Ivl:9 V10> STORE_LCL_VAR BB07 regmask=[r15] minReg=1>
<RefPosition #275 @275 RefTypeUse <Ivl:7 V08> LCL_VAR BB07 regmask=[r8] minReg=1 last>
<RefPosition #276 @276 RefTypeDef <Ivl:10 V11> STORE_LCL_VAR BB07 regmask=[r8] minReg=1>
<RefPosition #277 @281 RefTypeUse <Ivl:10 V11> LCL_VAR BB07 regmask=[r8] minReg=1 regOptional>
<RefPosition #278 @285 RefTypeBB  BB08 regmask=[] minReg=1>
<RefPosition #279 @288 RefTypeDef <Ivl:76> CNS_INT BB08 regmask=[rcx] minReg=1>
<RefPosition #280 @289 RefTypeFixedReg <Reg:rcx>  BB08 regmask=[rcx] minReg=1>
<RefPosition #281 @289 RefTypeUse <Ivl:76>  BB08 regmask=[rcx] minReg=1 last fixed>
<RefPosition #282 @290 RefTypeFixedReg <Reg:rcx>  BB08 regmask=[rcx] minReg=1>
<RefPosition #283 @290 RefTypeDef <Ivl:77> PUTARG_REG BB08 regmask=[rcx] minReg=1 fixed>
<RefPosition #284 @291 RefTypeFixedReg <Reg:rcx>  BB08 regmask=[rcx] minReg=1>
<RefPosition #285 @291 RefTypeUse <Ivl:77>  BB08 regmask=[rcx] minReg=1 last fixed>
<RefPosition #286 @292 RefTypeKill <Reg:rax>  BB08 regmask=[rax] minReg=1 last>
<RefPosition #287 @292 RefTypeKill <Reg:rcx>  BB08 regmask=[rcx] minReg=1 last>
<RefPosition #288 @292 RefTypeKill <Reg:rdx>  BB08 regmask=[rdx] minReg=1 last>
<RefPosition #289 @292 RefTypeKill <Reg:r8 >  BB08 regmask=[r8] minReg=1 last>
<RefPosition #290 @292 RefTypeKill <Reg:r9 >  BB08 regmask=[r9] minReg=1 last>
<RefPosition #291 @292 RefTypeKill <Reg:r10>  BB08 regmask=[r10] minReg=1 last>
<RefPosition #292 @292 RefTypeKill <Reg:r11>  BB08 regmask=[r11] minReg=1 last>
<RefPosition #293 @292 RefTypeFixedReg <Reg:rax>  BB08 regmask=[rax] minReg=1>
<RefPosition #294 @292 RefTypeDef <Ivl:78> CALL BB08 regmask=[rax] minReg=1 fixed>
<RefPosition #295 @293 RefTypeUse <Ivl:78>  BB08 regmask=[rax] minReg=1 last>
<RefPosition #296 @294 RefTypeDef <Ivl:15 V17> STORE_LCL_VAR BB08 regmask=[r12] minReg=1>
<RefPosition #297 @296 RefTypeDef <Ivl:79> CNS_INT BB08 regmask=[rdx] minReg=1>
<RefPosition #298 @297 RefTypeUse <Ivl:79>  BB08 regmask=[rdx] minReg=1 last>
<RefPosition #299 @298 RefTypeDef <Ivl:80> IND BB08 regmask=[rdx] minReg=1>
<RefPosition #300 @299 RefTypeUse <Ivl:80>  BB08 regmask=[rdx] minReg=1 last>
<RefPosition #301 @300 RefTypeDef <Ivl:19 V21> STORE_LCL_VAR BB08 regmask=[rdx] minReg=1>
<RefPosition #302 @305 RefTypeUse <Ivl:19 V21> LCL_VAR BB08 regmask=[rdx] minReg=1 regOptional>
<RefPosition #303 @309 RefTypeBB  BB09 regmask=[] minReg=1>
<RefPosition #304 @313 RefTypeUse <Ivl:15 V17> LCL_VAR BB09 regmask=[r12] minReg=1>
<RefPosition #305 @314 RefTypeDef <Ivl:81> LEA BB09 regmask=[rcx] minReg=1>
<RefPosition #306 @317 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #307 @317 RefTypeUse <Ivl:81>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #308 @317 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #309 @317 RefTypeUse <Ivl:19 V21> LCL_VAR BB09 regmask=[rdx] minReg=1 last fixed>
<RefPosition #310 @318 RefTypeKill <Reg:rax>  BB09 regmask=[rax] minReg=1 last>
<RefPosition #311 @318 RefTypeKill <Reg:rcx>  BB09 regmask=[rcx] minReg=1 last>
<RefPosition #312 @318 RefTypeKill <Reg:rdx>  BB09 regmask=[rdx] minReg=1 last>
<RefPosition #313 @318 RefTypeKill <Reg:r8 >  BB09 regmask=[r8] minReg=1 last>
<RefPosition #314 @318 RefTypeKill <Reg:r9 >  BB09 regmask=[r9] minReg=1 last>
<RefPosition #315 @318 RefTypeKill <Reg:r10>  BB09 regmask=[r10] minReg=1 last>
<RefPosition #316 @318 RefTypeKill <Reg:r11>  BB09 regmask=[r11] minReg=1 last>
<RefPosition #317 @318 RefTypeKill <Reg:mm0>  BB09 regmask=[mm0] minReg=1 last>
<RefPosition #318 @318 RefTypeKill <Reg:mm1>  BB09 regmask=[mm1] minReg=1 last>
<RefPosition #319 @318 RefTypeKill <Reg:mm2>  BB09 regmask=[mm2] minReg=1 last>
<RefPosition #320 @318 RefTypeKill <Reg:mm3>  BB09 regmask=[mm3] minReg=1 last>
<RefPosition #321 @318 RefTypeKill <Reg:mm4>  BB09 regmask=[mm4] minReg=1 last>
<RefPosition #322 @318 RefTypeKill <Reg:mm5>  BB09 regmask=[mm5] minReg=1 last>
<RefPosition #323 @324 RefTypeDef <Ivl:82> CNS_INT BB09 regmask=[rdx] minReg=1>
<RefPosition #324 @325 RefTypeUse <Ivl:15 V17> LCL_VAR BB09 regmask=[r12] minReg=1>
<RefPosition #325 @325 RefTypeUse <Ivl:82>  BB09 regmask=[rdx] minReg=1 last>
<RefPosition #326 @330 RefTypeDef <Ivl:83> CNS_INT BB09 regmask=[rcx] minReg=1>
<RefPosition #327 @333 RefTypeFixedReg <Reg:rcx>  BB09 regmask=[rcx] minReg=1>
<RefPosition #328 @333 RefTypeUse <Ivl:83>  BB09 regmask=[rcx] minReg=1 last fixed>
<RefPosition #329 @333 RefTypeFixedReg <Reg:rdx>  BB09 regmask=[rdx] minReg=1>
<RefPosition #330 @333 RefTypeUse <Ivl:15 V17> LCL_VAR BB09 regmask=[rdx] minReg=1 copy fixed>
<RefPosition #331 @334 RefTypeKill <Reg:rax>  BB09 regmask=[rax] minReg=1 last>
<RefPosition #332 @334 RefTypeKill <Reg:rcx>  BB09 regmask=[rcx] minReg=1 last>
<RefPosition #333 @334 RefTypeKill <Reg:rdx>  BB09 regmask=[rdx] minReg=1 last>
<RefPosition #334 @334 RefTypeKill <Reg:r8 >  BB09 regmask=[r8] minReg=1 last>
<RefPosition #335 @334 RefTypeKill <Reg:r9 >  BB09 regmask=[r9] minReg=1 last>
<RefPosition #336 @334 RefTypeKill <Reg:r10>  BB09 regmask=[r10] minReg=1 last>
<RefPosition #337 @334 RefTypeKill <Reg:r11>  BB09 regmask=[r11] minReg=1 last>
<RefPosition #338 @334 RefTypeKill <Reg:mm0>  BB09 regmask=[mm0] minReg=1 last>
<RefPosition #339 @334 RefTypeKill <Reg:mm1>  BB09 regmask=[mm1] minReg=1 last>
<RefPosition #340 @334 RefTypeKill <Reg:mm2>  BB09 regmask=[mm2] minReg=1 last>
<RefPosition #341 @334 RefTypeKill <Reg:mm3>  BB09 regmask=[mm3] minReg=1 last>
<RefPosition #342 @334 RefTypeKill <Reg:mm4>  BB09 regmask=[mm4] minReg=1 last>
<RefPosition #343 @334 RefTypeKill <Reg:mm5>  BB09 regmask=[mm5] minReg=1 last>
<RefPosition #344 @337 RefTypeUse <Ivl:15 V17> LCL_VAR BB09 regmask=[r12] minReg=1 last>
<RefPosition #345 @338 RefTypeDef <Ivl:10 V11> STORE_LCL_VAR BB09 regmask=[r8] minReg=1>
<RefPosition #346 @339 RefTypeBB  BB10 regmask=[] minReg=1>
<RefPosition #347 @343 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #348 @343 RefTypeUse <Ivl:10 V11> LCL_VAR BB10 regmask=[r8] minReg=1 last fixed>
<RefPosition #349 @344 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #350 @344 RefTypeDef <Ivl:84> PUTARG_REG BB10 regmask=[r8] minReg=1 fixed>
<RefPosition #351 @347 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #352 @347 RefTypeUse <Ivl:9 V10> LCL_VAR BB10 regmask=[rdx] minReg=1 last copy fixed>
<RefPosition #353 @348 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #354 @348 RefTypeDef <Ivl:85> PUTARG_REG BB10 regmask=[rdx] minReg=1 fixed>
<RefPosition #355 @350 RefTypeDef <Ivl:86> CNS_INT BB10 regmask=[rcx] minReg=1>
<RefPosition #356 @351 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #357 @351 RefTypeUse <Ivl:86>  BB10 regmask=[rcx] minReg=1 last fixed>
<RefPosition #358 @352 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #359 @352 RefTypeDef <Ivl:87> PUTARG_REG BB10 regmask=[rcx] minReg=1 fixed>
<RefPosition #360 @353 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #361 @353 RefTypeUse <Ivl:84>  BB10 regmask=[r8] minReg=1 last fixed>
<RefPosition #362 @353 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #363 @353 RefTypeUse <Ivl:85>  BB10 regmask=[rdx] minReg=1 last fixed>
<RefPosition #364 @353 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #365 @353 RefTypeUse <Ivl:87>  BB10 regmask=[rcx] minReg=1 last fixed>
<RefPosition #366 @354 RefTypeKill <Reg:rax>  BB10 regmask=[rax] minReg=1 last>
<RefPosition #367 @354 RefTypeKill <Reg:rcx>  BB10 regmask=[rcx] minReg=1 last>
<RefPosition #368 @354 RefTypeKill <Reg:rdx>  BB10 regmask=[rdx] minReg=1 last>
<RefPosition #369 @354 RefTypeKill <Reg:r8 >  BB10 regmask=[r8] minReg=1 last>
<RefPosition #370 @354 RefTypeKill <Reg:r9 >  BB10 regmask=[r9] minReg=1 last>
<RefPosition #371 @354 RefTypeKill <Reg:r10>  BB10 regmask=[r10] minReg=1 last>
<RefPosition #372 @354 RefTypeKill <Reg:r11>  BB10 regmask=[r11] minReg=1 last>
<RefPosition #373 @354 RefTypeFixedReg <Reg:rax>  BB10 regmask=[rax] minReg=1>
<RefPosition #374 @354 RefTypeDef <Ivl:88> CALL BB10 regmask=[rax] minReg=1 fixed>
<RefPosition #375 @355 RefTypeUse <Ivl:88>  BB10 regmask=[rax] minReg=1 last>
<RefPosition #376 @356 RefTypeDef <Ivl:5 V05> STORE_LCL_VAR BB10 regmask=[r15] minReg=1>
<RefPosition #377 @360 RefTypeDef <Ivl:89> CNS_INT BB10 regmask=[rcx] minReg=1>
<RefPosition #378 @361 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #379 @361 RefTypeUse <Ivl:89>  BB10 regmask=[rcx] minReg=1 last fixed>
<RefPosition #380 @362 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #381 @362 RefTypeDef <Ivl:90> PUTARG_REG BB10 regmask=[rcx] minReg=1 fixed>
<RefPosition #382 @364 RefTypeDef <Ivl:91> CNS_INT BB10 regmask=[rdx] minReg=1>
<RefPosition #383 @365 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #384 @365 RefTypeUse <Ivl:91>  BB10 regmask=[rdx] minReg=1 last fixed>
<RefPosition #385 @366 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #386 @366 RefTypeDef <Ivl:92> PUTARG_REG BB10 regmask=[rdx] minReg=1 fixed>
<RefPosition #387 @367 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #388 @367 RefTypeUse <Ivl:90>  BB10 regmask=[rcx] minReg=1 last fixed>
<RefPosition #389 @367 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #390 @367 RefTypeUse <Ivl:92>  BB10 regmask=[rdx] minReg=1 last fixed>
<RefPosition #391 @368 RefTypeKill <Reg:rax>  BB10 regmask=[rax] minReg=1 last>
<RefPosition #392 @368 RefTypeKill <Reg:rcx>  BB10 regmask=[rcx] minReg=1 last>
<RefPosition #393 @368 RefTypeKill <Reg:rdx>  BB10 regmask=[rdx] minReg=1 last>
<RefPosition #394 @368 RefTypeKill <Reg:r8 >  BB10 regmask=[r8] minReg=1 last>
<RefPosition #395 @368 RefTypeKill <Reg:r9 >  BB10 regmask=[r9] minReg=1 last>
<RefPosition #396 @368 RefTypeKill <Reg:r10>  BB10 regmask=[r10] minReg=1 last>
<RefPosition #397 @368 RefTypeKill <Reg:r11>  BB10 regmask=[r11] minReg=1 last>
<RefPosition #398 @368 RefTypeFixedReg <Reg:rax>  BB10 regmask=[rax] minReg=1>
<RefPosition #399 @368 RefTypeDef <Ivl:93> CALL BB10 regmask=[rax] minReg=1 last fixed local>
<RefPosition #400 @370 RefTypeDef <Ivl:94> CNS_INT BB10 regmask=[rdx] minReg=1>
<RefPosition #401 @371 RefTypeUse <Ivl:94>  BB10 regmask=[rdx] minReg=1 last>
<RefPosition #402 @372 RefTypeDef <Ivl:95> IND BB10 regmask=[r9] minReg=1>
<RefPosition #403 @373 RefTypeUse <Ivl:95>  BB10 regmask=[r9] minReg=1 last>
<RefPosition #404 @374 RefTypeDef <Ivl:20 V23> STORE_LCL_VAR BB10 regmask=[r9] minReg=1>
<RefPosition #405 @376 RefTypeDef <Ivl:96> CNS_INT BB10 regmask=[rdx] minReg=1>
<RefPosition #406 @377 RefTypeUse <Ivl:96>  BB10 regmask=[rdx] minReg=1 last>
<RefPosition #407 @378 RefTypeDef <Ivl:97> IND BB10 regmask=[rdx] minReg=1>
<RefPosition #408 @379 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #409 @379 RefTypeUse <Ivl:97>  BB10 regmask=[rdx] minReg=1 last fixed>
<RefPosition #410 @380 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #411 @380 RefTypeDef <Ivl:98> PUTARG_REG BB10 regmask=[rdx] minReg=1 fixed>
<RefPosition #412 @383 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #413 @383 RefTypeUse <Ivl:4 V04> LCL_VAR BB10 regmask=[rcx] minReg=1 last copy fixed>
<RefPosition #414 @384 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #415 @384 RefTypeDef <Ivl:99> PUTARG_REG BB10 regmask=[rcx] minReg=1 fixed>
<RefPosition #416 @387 RefTypeFixedReg <Reg:r9 >  BB10 regmask=[r9] minReg=1>
<RefPosition #417 @387 RefTypeUse <Ivl:20 V23> LCL_VAR BB10 regmask=[r9] minReg=1 last fixed>
<RefPosition #418 @388 RefTypeFixedReg <Reg:r9 >  BB10 regmask=[r9] minReg=1>
<RefPosition #419 @388 RefTypeDef <Ivl:100> PUTARG_REG BB10 regmask=[r9] minReg=1 fixed>
<RefPosition #420 @390 RefTypeDef <Ivl:101> CNS_INT BB10 regmask=[r8] minReg=1>
<RefPosition #421 @391 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #422 @391 RefTypeUse <Ivl:101>  BB10 regmask=[r8] minReg=1 last fixed>
<RefPosition #423 @392 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #424 @392 RefTypeDef <Ivl:102> PUTARG_REG BB10 regmask=[r8] minReg=1 fixed>
<RefPosition #425 @393 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #426 @393 RefTypeUse <Ivl:98>  BB10 regmask=[rdx] minReg=1 last fixed>
<RefPosition #427 @393 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #428 @393 RefTypeUse <Ivl:99>  BB10 regmask=[rcx] minReg=1 last fixed>
<RefPosition #429 @393 RefTypeFixedReg <Reg:r9 >  BB10 regmask=[r9] minReg=1>
<RefPosition #430 @393 RefTypeUse <Ivl:100>  BB10 regmask=[r9] minReg=1 last fixed>
<RefPosition #431 @393 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #432 @393 RefTypeUse <Ivl:102>  BB10 regmask=[r8] minReg=1 last fixed>
<RefPosition #433 @394 RefTypeKill <Reg:rax>  BB10 regmask=[rax] minReg=1 last>
<RefPosition #434 @394 RefTypeKill <Reg:rcx>  BB10 regmask=[rcx] minReg=1 last>
<RefPosition #435 @394 RefTypeKill <Reg:rdx>  BB10 regmask=[rdx] minReg=1 last>
<RefPosition #436 @394 RefTypeKill <Reg:r8 >  BB10 regmask=[r8] minReg=1 last>
<RefPosition #437 @394 RefTypeKill <Reg:r9 >  BB10 regmask=[r9] minReg=1 last>
<RefPosition #438 @394 RefTypeKill <Reg:r10>  BB10 regmask=[r10] minReg=1 last>
<RefPosition #439 @394 RefTypeKill <Reg:r11>  BB10 regmask=[r11] minReg=1 last>
<RefPosition #440 @394 RefTypeFixedReg <Reg:rax>  BB10 regmask=[rax] minReg=1>
<RefPosition #441 @394 RefTypeDef <Ivl:103> CALL BB10 regmask=[rax] minReg=1 fixed>
<RefPosition #442 @395 RefTypeUse <Ivl:103>  BB10 regmask=[rax] minReg=1 last>
<RefPosition #443 @396 RefTypeDef <Ivl:21 V24> STORE_LCL_VAR BB10 regmask=[r8] minReg=1>
<RefPosition #444 @401 RefTypeUse <Ivl:1 V01> LCL_VAR BB10 regmask=[rdi] minReg=1>
<RefPosition #445 @402 RefTypeDef <Ivl:104> IND BB10 regmask=[rdx] minReg=1>
<RefPosition #446 @403 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #447 @403 RefTypeUse <Ivl:104>  BB10 regmask=[rdx] minReg=1 last fixed>
<RefPosition #448 @404 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #449 @404 RefTypeDef <Ivl:105> PUTARG_REG BB10 regmask=[rdx] minReg=1 fixed>
<RefPosition #450 @407 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #451 @407 RefTypeUse <Ivl:1 V01> LCL_VAR BB10 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #452 @408 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #453 @408 RefTypeDef <Ivl:106> PUTARG_REG BB10 regmask=[rcx] minReg=1 fixed>
<RefPosition #454 @411 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #455 @411 RefTypeUse <Ivl:21 V24> LCL_VAR BB10 regmask=[r8] minReg=1 last fixed>
<RefPosition #456 @412 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #457 @412 RefTypeDef <Ivl:107> PUTARG_REG BB10 regmask=[r8] minReg=1 fixed>
<RefPosition #458 @413 RefTypeFixedReg <Reg:rdx>  BB10 regmask=[rdx] minReg=1>
<RefPosition #459 @413 RefTypeUse <Ivl:105>  BB10 regmask=[rdx] minReg=1 last fixed>
<RefPosition #460 @413 RefTypeFixedReg <Reg:rcx>  BB10 regmask=[rcx] minReg=1>
<RefPosition #461 @413 RefTypeUse <Ivl:106>  BB10 regmask=[rcx] minReg=1 last fixed>
<RefPosition #462 @413 RefTypeFixedReg <Reg:r8 >  BB10 regmask=[r8] minReg=1>
<RefPosition #463 @413 RefTypeUse <Ivl:107>  BB10 regmask=[r8] minReg=1 last fixed>
<RefPosition #464 @414 RefTypeKill <Reg:rax>  BB10 regmask=[rax] minReg=1 last>
<RefPosition #465 @414 RefTypeKill <Reg:rcx>  BB10 regmask=[rcx] minReg=1 last>
<RefPosition #466 @414 RefTypeKill <Reg:rdx>  BB10 regmask=[rdx] minReg=1 last>
<RefPosition #467 @414 RefTypeKill <Reg:r8 >  BB10 regmask=[r8] minReg=1 last>
<RefPosition #468 @414 RefTypeKill <Reg:r9 >  BB10 regmask=[r9] minReg=1 last>
<RefPosition #469 @414 RefTypeKill <Reg:r10>  BB10 regmask=[r10] minReg=1 last>
<RefPosition #470 @414 RefTypeKill <Reg:r11>  BB10 regmask=[r11] minReg=1 last>
<RefPosition #471 @418 RefTypeDef <Ivl:108> CNS_INT BB10 regmask=[rcx] minReg=1>
<RefPosition #472 @419 RefTypeUse <Ivl:108>  BB10 regmask=[rcx] minReg=1 last>
<RefPosition #473 @420 RefTypeDef <Ivl:109> IND BB10 regmask=[r8] minReg=1>
<RefPosition #474 @421 RefTypeUse <Ivl:109>  BB10 regmask=[r8] minReg=1 last>
<RefPosition #475 @422 RefTypeDef <Ivl:11 V12> STORE_LCL_VAR BB10 regmask=[r8] minReg=1>
<RefPosition #476 @425 RefTypeUse <Ivl:5 V05> LCL_VAR BB10 regmask=[r15] minReg=1 last>
<RefPosition #477 @426 RefTypeDef <Ivl:12 V14> STORE_LCL_VAR BB10 regmask=[r15] minReg=1>
<RefPosition #478 @429 RefTypeUse <Ivl:11 V12> LCL_VAR BB10 regmask=[r8] minReg=1 last>
<RefPosition #479 @430 RefTypeDef <Ivl:13 V15> STORE_LCL_VAR BB10 regmask=[r8] minReg=1>
<RefPosition #480 @435 RefTypeUse <Ivl:13 V15> LCL_VAR BB10 regmask=[r8] minReg=1 regOptional>
<RefPosition #481 @439 RefTypeBB  BB11 regmask=[] minReg=1>
<RefPosition #482 @442 RefTypeDef <Ivl:110> CNS_INT BB11 regmask=[rcx] minReg=1>
<RefPosition #483 @443 RefTypeFixedReg <Reg:rcx>  BB11 regmask=[rcx] minReg=1>
<RefPosition #484 @443 RefTypeUse <Ivl:110>  BB11 regmask=[rcx] minReg=1 last fixed>
<RefPosition #485 @444 RefTypeFixedReg <Reg:rcx>  BB11 regmask=[rcx] minReg=1>
<RefPosition #486 @444 RefTypeDef <Ivl:111> PUTARG_REG BB11 regmask=[rcx] minReg=1 fixed>
<RefPosition #487 @445 RefTypeFixedReg <Reg:rcx>  BB11 regmask=[rcx] minReg=1>
<RefPosition #488 @445 RefTypeUse <Ivl:111>  BB11 regmask=[rcx] minReg=1 last fixed>
<RefPosition #489 @446 RefTypeKill <Reg:rax>  BB11 regmask=[rax] minReg=1 last>
<RefPosition #490 @446 RefTypeKill <Reg:rcx>  BB11 regmask=[rcx] minReg=1 last>
<RefPosition #491 @446 RefTypeKill <Reg:rdx>  BB11 regmask=[rdx] minReg=1 last>
<RefPosition #492 @446 RefTypeKill <Reg:r8 >  BB11 regmask=[r8] minReg=1 last>
<RefPosition #493 @446 RefTypeKill <Reg:r9 >  BB11 regmask=[r9] minReg=1 last>
<RefPosition #494 @446 RefTypeKill <Reg:r10>  BB11 regmask=[r10] minReg=1 last>
<RefPosition #495 @446 RefTypeKill <Reg:r11>  BB11 regmask=[r11] minReg=1 last>
<RefPosition #496 @446 RefTypeFixedReg <Reg:rax>  BB11 regmask=[rax] minReg=1>
<RefPosition #497 @446 RefTypeDef <Ivl:112> CALL BB11 regmask=[rax] minReg=1 fixed>
<RefPosition #498 @447 RefTypeUse <Ivl:112>  BB11 regmask=[rax] minReg=1 last>
<RefPosition #499 @448 RefTypeDef <Ivl:14 V16> STORE_LCL_VAR BB11 regmask=[r14] minReg=1>
<RefPosition #500 @450 RefTypeDef <Ivl:113> CNS_INT BB11 regmask=[rdx] minReg=1>
<RefPosition #501 @451 RefTypeUse <Ivl:113>  BB11 regmask=[rdx] minReg=1 last>
<RefPosition #502 @452 RefTypeDef <Ivl:114> IND BB11 regmask=[rdx] minReg=1>
<RefPosition #503 @453 RefTypeUse <Ivl:114>  BB11 regmask=[rdx] minReg=1 last>
<RefPosition #504 @454 RefTypeDef <Ivl:22 V25> STORE_LCL_VAR BB11 regmask=[rdx] minReg=1>
<RefPosition #505 @459 RefTypeUse <Ivl:22 V25> LCL_VAR BB11 regmask=[rdx] minReg=1 regOptional>
<RefPosition #506 @463 RefTypeBB  BB12 regmask=[] minReg=1>
<RefPosition #507 @467 RefTypeUse <Ivl:14 V16> LCL_VAR BB12 regmask=[r14] minReg=1>
<RefPosition #508 @468 RefTypeDef <Ivl:115> LEA BB12 regmask=[rcx] minReg=1>
<RefPosition #509 @471 RefTypeFixedReg <Reg:rcx>  BB12 regmask=[rcx] minReg=1>
<RefPosition #510 @471 RefTypeUse <Ivl:115>  BB12 regmask=[rcx] minReg=1 last fixed>
<RefPosition #511 @471 RefTypeFixedReg <Reg:rdx>  BB12 regmask=[rdx] minReg=1>
<RefPosition #512 @471 RefTypeUse <Ivl:22 V25> LCL_VAR BB12 regmask=[rdx] minReg=1 last fixed>
<RefPosition #513 @472 RefTypeKill <Reg:rax>  BB12 regmask=[rax] minReg=1 last>
<RefPosition #514 @472 RefTypeKill <Reg:rcx>  BB12 regmask=[rcx] minReg=1 last>
<RefPosition #515 @472 RefTypeKill <Reg:rdx>  BB12 regmask=[rdx] minReg=1 last>
<RefPosition #516 @472 RefTypeKill <Reg:r8 >  BB12 regmask=[r8] minReg=1 last>
<RefPosition #517 @472 RefTypeKill <Reg:r9 >  BB12 regmask=[r9] minReg=1 last>
<RefPosition #518 @472 RefTypeKill <Reg:r10>  BB12 regmask=[r10] minReg=1 last>
<RefPosition #519 @472 RefTypeKill <Reg:r11>  BB12 regmask=[r11] minReg=1 last>
<RefPosition #520 @472 RefTypeKill <Reg:mm0>  BB12 regmask=[mm0] minReg=1 last>
<RefPosition #521 @472 RefTypeKill <Reg:mm1>  BB12 regmask=[mm1] minReg=1 last>
<RefPosition #522 @472 RefTypeKill <Reg:mm2>  BB12 regmask=[mm2] minReg=1 last>
<RefPosition #523 @472 RefTypeKill <Reg:mm3>  BB12 regmask=[mm3] minReg=1 last>
<RefPosition #524 @472 RefTypeKill <Reg:mm4>  BB12 regmask=[mm4] minReg=1 last>
<RefPosition #525 @472 RefTypeKill <Reg:mm5>  BB12 regmask=[mm5] minReg=1 last>
<RefPosition #526 @478 RefTypeDef <Ivl:116> CNS_INT BB12 regmask=[rdx] minReg=1>
<RefPosition #527 @479 RefTypeUse <Ivl:14 V16> LCL_VAR BB12 regmask=[r14] minReg=1>
<RefPosition #528 @479 RefTypeUse <Ivl:116>  BB12 regmask=[rdx] minReg=1 last>
<RefPosition #529 @484 RefTypeDef <Ivl:117> CNS_INT BB12 regmask=[rcx] minReg=1>
<RefPosition #530 @487 RefTypeFixedReg <Reg:rcx>  BB12 regmask=[rcx] minReg=1>
<RefPosition #531 @487 RefTypeUse <Ivl:117>  BB12 regmask=[rcx] minReg=1 last fixed>
<RefPosition #532 @487 RefTypeFixedReg <Reg:rdx>  BB12 regmask=[rdx] minReg=1>
<RefPosition #533 @487 RefTypeUse <Ivl:14 V16> LCL_VAR BB12 regmask=[rdx] minReg=1 copy fixed>
<RefPosition #534 @488 RefTypeKill <Reg:rax>  BB12 regmask=[rax] minReg=1 last>
<RefPosition #535 @488 RefTypeKill <Reg:rcx>  BB12 regmask=[rcx] minReg=1 last>
<RefPosition #536 @488 RefTypeKill <Reg:rdx>  BB12 regmask=[rdx] minReg=1 last>
<RefPosition #537 @488 RefTypeKill <Reg:r8 >  BB12 regmask=[r8] minReg=1 last>
<RefPosition #538 @488 RefTypeKill <Reg:r9 >  BB12 regmask=[r9] minReg=1 last>
<RefPosition #539 @488 RefTypeKill <Reg:r10>  BB12 regmask=[r10] minReg=1 last>
<RefPosition #540 @488 RefTypeKill <Reg:r11>  BB12 regmask=[r11] minReg=1 last>
<RefPosition #541 @488 RefTypeKill <Reg:mm0>  BB12 regmask=[mm0] minReg=1 last>
<RefPosition #542 @488 RefTypeKill <Reg:mm1>  BB12 regmask=[mm1] minReg=1 last>
<RefPosition #543 @488 RefTypeKill <Reg:mm2>  BB12 regmask=[mm2] minReg=1 last>
<RefPosition #544 @488 RefTypeKill <Reg:mm3>  BB12 regmask=[mm3] minReg=1 last>
<RefPosition #545 @488 RefTypeKill <Reg:mm4>  BB12 regmask=[mm4] minReg=1 last>
<RefPosition #546 @488 RefTypeKill <Reg:mm5>  BB12 regmask=[mm5] minReg=1 last>
<RefPosition #547 @491 RefTypeUse <Ivl:14 V16> LCL_VAR BB12 regmask=[r14] minReg=1 last>
<RefPosition #548 @492 RefTypeDef <Ivl:13 V15> STORE_LCL_VAR BB12 regmask=[r8] minReg=1>
<RefPosition #549 @493 RefTypeBB  BB13 regmask=[] minReg=1>
<RefPosition #550 @497 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #551 @497 RefTypeUse <Ivl:13 V15> LCL_VAR BB13 regmask=[r8] minReg=1 last fixed>
<RefPosition #552 @498 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #553 @498 RefTypeDef <Ivl:118> PUTARG_REG BB13 regmask=[r8] minReg=1 fixed>
<RefPosition #554 @501 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #555 @501 RefTypeUse <Ivl:12 V14> LCL_VAR BB13 regmask=[rdx] minReg=1 last copy fixed>
<RefPosition #556 @502 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #557 @502 RefTypeDef <Ivl:119> PUTARG_REG BB13 regmask=[rdx] minReg=1 fixed>
<RefPosition #558 @504 RefTypeDef <Ivl:120> CNS_INT BB13 regmask=[rcx] minReg=1>
<RefPosition #559 @505 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #560 @505 RefTypeUse <Ivl:120>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #561 @506 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #562 @506 RefTypeDef <Ivl:121> PUTARG_REG BB13 regmask=[rcx] minReg=1 fixed>
<RefPosition #563 @507 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #564 @507 RefTypeUse <Ivl:118>  BB13 regmask=[r8] minReg=1 last fixed>
<RefPosition #565 @507 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #566 @507 RefTypeUse <Ivl:119>  BB13 regmask=[rdx] minReg=1 last fixed>
<RefPosition #567 @507 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #568 @507 RefTypeUse <Ivl:121>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #569 @508 RefTypeKill <Reg:rax>  BB13 regmask=[rax] minReg=1 last>
<RefPosition #570 @508 RefTypeKill <Reg:rcx>  BB13 regmask=[rcx] minReg=1 last>
<RefPosition #571 @508 RefTypeKill <Reg:rdx>  BB13 regmask=[rdx] minReg=1 last>
<RefPosition #572 @508 RefTypeKill <Reg:r8 >  BB13 regmask=[r8] minReg=1 last>
<RefPosition #573 @508 RefTypeKill <Reg:r9 >  BB13 regmask=[r9] minReg=1 last>
<RefPosition #574 @508 RefTypeKill <Reg:r10>  BB13 regmask=[r10] minReg=1 last>
<RefPosition #575 @508 RefTypeKill <Reg:r11>  BB13 regmask=[r11] minReg=1 last>
<RefPosition #576 @508 RefTypeFixedReg <Reg:rax>  BB13 regmask=[rax] minReg=1>
<RefPosition #577 @508 RefTypeDef <Ivl:122> CALL BB13 regmask=[rax] minReg=1 fixed>
<RefPosition #578 @509 RefTypeUse <Ivl:122>  BB13 regmask=[rax] minReg=1 last>
<RefPosition #579 @510 RefTypeDef <Ivl:23 V27> STORE_LCL_VAR BB13 regmask=[r8] minReg=1>
<RefPosition #580 @515 RefTypeUse <Ivl:1 V01> LCL_VAR BB13 regmask=[rdi] minReg=1>
<RefPosition #581 @516 RefTypeDef <Ivl:123> IND BB13 regmask=[rdx] minReg=1>
<RefPosition #582 @517 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #583 @517 RefTypeUse <Ivl:123>  BB13 regmask=[rdx] minReg=1 last fixed>
<RefPosition #584 @518 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #585 @518 RefTypeDef <Ivl:124> PUTARG_REG BB13 regmask=[rdx] minReg=1 fixed>
<RefPosition #586 @521 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #587 @521 RefTypeUse <Ivl:1 V01> LCL_VAR BB13 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #588 @522 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #589 @522 RefTypeDef <Ivl:125> PUTARG_REG BB13 regmask=[rcx] minReg=1 fixed>
<RefPosition #590 @525 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #591 @525 RefTypeUse <Ivl:23 V27> LCL_VAR BB13 regmask=[r8] minReg=1 last fixed>
<RefPosition #592 @526 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #593 @526 RefTypeDef <Ivl:126> PUTARG_REG BB13 regmask=[r8] minReg=1 fixed>
<RefPosition #594 @527 RefTypeFixedReg <Reg:rdx>  BB13 regmask=[rdx] minReg=1>
<RefPosition #595 @527 RefTypeUse <Ivl:124>  BB13 regmask=[rdx] minReg=1 last fixed>
<RefPosition #596 @527 RefTypeFixedReg <Reg:rcx>  BB13 regmask=[rcx] minReg=1>
<RefPosition #597 @527 RefTypeUse <Ivl:125>  BB13 regmask=[rcx] minReg=1 last fixed>
<RefPosition #598 @527 RefTypeFixedReg <Reg:r8 >  BB13 regmask=[r8] minReg=1>
<RefPosition #599 @527 RefTypeUse <Ivl:126>  BB13 regmask=[r8] minReg=1 last fixed>
<RefPosition #600 @528 RefTypeKill <Reg:rax>  BB13 regmask=[rax] minReg=1 last>
<RefPosition #601 @528 RefTypeKill <Reg:rcx>  BB13 regmask=[rcx] minReg=1 last>
<RefPosition #602 @528 RefTypeKill <Reg:rdx>  BB13 regmask=[rdx] minReg=1 last>
<RefPosition #603 @528 RefTypeKill <Reg:r8 >  BB13 regmask=[r8] minReg=1 last>
<RefPosition #604 @528 RefTypeKill <Reg:r9 >  BB13 regmask=[r9] minReg=1 last>
<RefPosition #605 @528 RefTypeKill <Reg:r10>  BB13 regmask=[r10] minReg=1 last>
<RefPosition #606 @528 RefTypeKill <Reg:r11>  BB13 regmask=[r11] minReg=1 last>
<RefPosition #607 @529 RefTypeBB  BB14 regmask=[] minReg=1>
<RefPosition #608 @537 RefTypeUse <Ivl:3 V03> LCL_VAR BB14 regmask=[rbx] minReg=1 last>
<RefPosition #609 @538 RefTypeDef <Ivl:127> ADD BB14 regmask=[rbx] minReg=1>
<RefPosition #610 @539 RefTypeUse <Ivl:127>  BB14 regmask=[rbx] minReg=1 last>
<RefPosition #611 @540 RefTypeDef <Ivl:3 V03> STORE_LCL_VAR BB14 regmask=[rbx] minReg=1>
<RefPosition #612 @547 RefTypeUse <Ivl:24 V29> LCL_VAR BB14 regmask=[rbp] minReg=1 regOptional>
<RefPosition #613 @547 RefTypeUse <Ivl:3 V03> LCL_VAR BB14 regmask=[rbx] minReg=1>
<RefPosition #614 @551 RefTypeExpUse <Ivl:3 V03>  BB14 regmask=[allInt] minReg=1 regOptional>
<RefPosition #615 @551 RefTypeExpUse <Ivl:2 V02>  BB14 regmask=[allInt] minReg=1 regOptional>
<RefPosition #616 @551 RefTypeExpUse <Ivl:24 V29>  BB14 regmask=[allInt] minReg=1 regOptional>
<RefPosition #617 @551 RefTypeBB  BB15 regmask=[] minReg=1>
<RefPosition #618 @557 RefTypeFixedReg <Reg:rdx>  BB15 regmask=[rdx] minReg=1>
<RefPosition #619 @557 RefTypeUse <Ivl:1 V01> LCL_VAR BB15 regmask=[rdx] minReg=1 copy fixed>
<RefPosition #620 @558 RefTypeFixedReg <Reg:rdx>  BB15 regmask=[rdx] minReg=1>
<RefPosition #621 @558 RefTypeDef <Ivl:128> PUTARG_REG BB15 regmask=[rdx] minReg=1 fixed>
<RefPosition #622 @560 RefTypeDef <Ivl:129> CNS_INT BB15 regmask=[rcx] minReg=1>
<RefPosition #623 @561 RefTypeFixedReg <Reg:rcx>  BB15 regmask=[rcx] minReg=1>
<RefPosition #624 @561 RefTypeUse <Ivl:129>  BB15 regmask=[rcx] minReg=1 last fixed>
<RefPosition #625 @562 RefTypeFixedReg <Reg:rcx>  BB15 regmask=[rcx] minReg=1>
<RefPosition #626 @562 RefTypeDef <Ivl:130> PUTARG_REG BB15 regmask=[rcx] minReg=1 fixed>
<RefPosition #627 @563 RefTypeFixedReg <Reg:rdx>  BB15 regmask=[rdx] minReg=1>
<RefPosition #628 @563 RefTypeUse <Ivl:128>  BB15 regmask=[rdx] minReg=1 last fixed>
<RefPosition #629 @563 RefTypeFixedReg <Reg:rcx>  BB15 regmask=[rcx] minReg=1>
<RefPosition #630 @563 RefTypeUse <Ivl:130>  BB15 regmask=[rcx] minReg=1 last fixed>
<RefPosition #631 @564 RefTypeKill <Reg:rax>  BB15 regmask=[rax] minReg=1 last>
<RefPosition #632 @564 RefTypeKill <Reg:rcx>  BB15 regmask=[rcx] minReg=1 last>
<RefPosition #633 @564 RefTypeKill <Reg:rdx>  BB15 regmask=[rdx] minReg=1 last>
<RefPosition #634 @564 RefTypeKill <Reg:r8 >  BB15 regmask=[r8] minReg=1 last>
<RefPosition #635 @564 RefTypeKill <Reg:r9 >  BB15 regmask=[r9] minReg=1 last>
<RefPosition #636 @564 RefTypeKill <Reg:r10>  BB15 regmask=[r10] minReg=1 last>
<RefPosition #637 @564 RefTypeKill <Reg:r11>  BB15 regmask=[r11] minReg=1 last>
<RefPosition #638 @566 RefTypeDef <Ivl:131> CNS_INT BB15 regmask=[rdx] minReg=1>
<RefPosition #639 @567 RefTypeUse <Ivl:131>  BB15 regmask=[rdx] minReg=1 last>
<RefPosition #640 @568 RefTypeDef <Ivl:132> IND BB15 regmask=[rdx] minReg=1>
<RefPosition #641 @569 RefTypeFixedReg <Reg:rdx>  BB15 regmask=[rdx] minReg=1>
<RefPosition #642 @569 RefTypeUse <Ivl:132>  BB15 regmask=[rdx] minReg=1 last fixed>
<RefPosition #643 @570 RefTypeFixedReg <Reg:rdx>  BB15 regmask=[rdx] minReg=1>
<RefPosition #644 @570 RefTypeDef <Ivl:133> PUTARG_REG BB15 regmask=[rdx] minReg=1 fixed>
<RefPosition #645 @572 RefTypeDef <Ivl:134> CNS_INT BB15 regmask=[rcx] minReg=1>
<RefPosition #646 @573 RefTypeFixedReg <Reg:rcx>  BB15 regmask=[rcx] minReg=1>
<RefPosition #647 @573 RefTypeUse <Ivl:134>  BB15 regmask=[rcx] minReg=1 last fixed>
<RefPosition #648 @574 RefTypeFixedReg <Reg:rcx>  BB15 regmask=[rcx] minReg=1>
<RefPosition #649 @574 RefTypeDef <Ivl:135> PUTARG_REG BB15 regmask=[rcx] minReg=1 fixed>
<RefPosition #650 @576 RefTypeDef <Ivl:136> CNS_INT BB15 regmask=[r8] minReg=1>
<RefPosition #651 @577 RefTypeFixedReg <Reg:r8 >  BB15 regmask=[r8] minReg=1>
<RefPosition #652 @577 RefTypeUse <Ivl:136>  BB15 regmask=[r8] minReg=1 last fixed>
<RefPosition #653 @578 RefTypeFixedReg <Reg:r8 >  BB15 regmask=[r8] minReg=1>
<RefPosition #654 @578 RefTypeDef <Ivl:137> PUTARG_REG BB15 regmask=[r8] minReg=1 fixed>
<RefPosition #655 @579 RefTypeFixedReg <Reg:rdx>  BB15 regmask=[rdx] minReg=1>
<RefPosition #656 @579 RefTypeUse <Ivl:133>  BB15 regmask=[rdx] minReg=1 last fixed>
<RefPosition #657 @579 RefTypeFixedReg <Reg:rcx>  BB15 regmask=[rcx] minReg=1>
<RefPosition #658 @579 RefTypeUse <Ivl:135>  BB15 regmask=[rcx] minReg=1 last fixed>
<RefPosition #659 @579 RefTypeFixedReg <Reg:r8 >  BB15 regmask=[r8] minReg=1>
<RefPosition #660 @579 RefTypeUse <Ivl:137>  BB15 regmask=[r8] minReg=1 last fixed>
<RefPosition #661 @580 RefTypeKill <Reg:rax>  BB15 regmask=[rax] minReg=1 last>
<RefPosition #662 @580 RefTypeKill <Reg:rcx>  BB15 regmask=[rcx] minReg=1 last>
<RefPosition #663 @580 RefTypeKill <Reg:rdx>  BB15 regmask=[rdx] minReg=1 last>
<RefPosition #664 @580 RefTypeKill <Reg:r8 >  BB15 regmask=[r8] minReg=1 last>
<RefPosition #665 @580 RefTypeKill <Reg:r9 >  BB15 regmask=[r9] minReg=1 last>
<RefPosition #666 @580 RefTypeKill <Reg:r10>  BB15 regmask=[r10] minReg=1 last>
<RefPosition #667 @580 RefTypeKill <Reg:r11>  BB15 regmask=[r11] minReg=1 last>
<RefPosition #668 @580 RefTypeFixedReg <Reg:rax>  BB15 regmask=[rax] minReg=1>
<RefPosition #669 @580 RefTypeDef <Ivl:138> CALL BB15 regmask=[rax] minReg=1 last fixed local>
<RefPosition #670 @585 RefTypeFixedReg <Reg:rax>  BB15 regmask=[rax] minReg=1>
<RefPosition #671 @585 RefTypeUse <Ivl:1 V01> LCL_VAR BB15 regmask=[rax] minReg=1 last copy fixed>
<RefPosition #672 @587 RefTypeBB  BB16 regmask=[] minReg=1>
<RefPosition #673 @590 RefTypeKill <Reg:rax>  BB16 regmask=[rax] minReg=1 last>
<RefPosition #674 @590 RefTypeKill <Reg:rcx>  BB16 regmask=[rcx] minReg=1 last>
<RefPosition #675 @590 RefTypeKill <Reg:rdx>  BB16 regmask=[rdx] minReg=1 last>
<RefPosition #676 @590 RefTypeKill <Reg:r8 >  BB16 regmask=[r8] minReg=1 last>
<RefPosition #677 @590 RefTypeKill <Reg:r9 >  BB16 regmask=[r9] minReg=1 last>
<RefPosition #678 @590 RefTypeKill <Reg:r10>  BB16 regmask=[r10] minReg=1 last>
<RefPosition #679 @590 RefTypeKill <Reg:r11>  BB16 regmask=[r11] minReg=1 last>

VAR REFPOSITIONS AFTER ALLOCATION
--- V00  (Interval 0)
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00>  BB00 regmask=[rsi] minReg=1 regOptional>
<RefPosition #74  @49  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[rsi] minReg=1 last>
--- V01  (Interval 1)
<RefPosition #73  @44  RefTypeDef <Ivl:1 V01> STORE_LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #126 @137 RefTypeUse <Ivl:1 V01> LCL_VAR BB03 regmask=[rdi] minReg=1>
<RefPosition #127 @145 RefTypeUse <Ivl:1 V01> LCL_VAR BB03 regmask=[rdi] minReg=1>
<RefPosition #131 @155 RefTypeUse <Ivl:1 V01> LCL_VAR BB03 regmask=[rdi] minReg=1>
<RefPosition #140 @187 RefTypeUse <Ivl:1 V01> LCL_VAR BB04 regmask=[rdi] minReg=1>
<RefPosition #169 @211 RefTypeUse <Ivl:1 V01> LCL_VAR BB05 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #444 @401 RefTypeUse <Ivl:1 V01> LCL_VAR BB10 regmask=[rdi] minReg=1>
<RefPosition #451 @407 RefTypeUse <Ivl:1 V01> LCL_VAR BB10 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #580 @515 RefTypeUse <Ivl:1 V01> LCL_VAR BB13 regmask=[rdi] minReg=1>
<RefPosition #587 @521 RefTypeUse <Ivl:1 V01> LCL_VAR BB13 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #619 @557 RefTypeUse <Ivl:1 V01> LCL_VAR BB15 regmask=[rdx] minReg=1 copy fixed>
<RefPosition #671 @585 RefTypeUse <Ivl:1 V01> LCL_VAR BB15 regmask=[rax] minReg=1 last copy fixed>
--- V02  (Interval 2)
<RefPosition #75  @50  RefTypeDef <Ivl:2 V02> STORE_LCL_VAR BB01 regmask=[rsi] minReg=1>
<RefPosition #79  @63  RefTypeUse <Ivl:2 V02> LCL_VAR BB01 regmask=[rsi] minReg=1>
<RefPosition #87  @87  RefTypeUse <Ivl:2 V02> LCL_VAR BB02 regmask=[rsi] minReg=1>
<RefPosition #615 @551 RefTypeExpUse <Ivl:2 V02>  BB14 regmask=[allInt] minReg=1 regOptional>
--- V03  (Interval 3)
<RefPosition #78  @56  RefTypeDef <Ivl:3 V03> STORE_LCL_VAR BB01 regmask=[rbx] minReg=1>
<RefPosition #85  @83  RefTypeUse <Ivl:3 V03> LCL_VAR BB02 regmask=[rbx] minReg=1>
<RefPosition #608 @537 RefTypeUse <Ivl:3 V03> LCL_VAR BB14 regmask=[rbx] minReg=1 last>
<RefPosition #611 @540 RefTypeDef <Ivl:3 V03> STORE_LCL_VAR BB14 regmask=[rbx] minReg=1>
<RefPosition #613 @547 RefTypeUse <Ivl:3 V03> LCL_VAR BB14 regmask=[rbx] minReg=1>
<RefPosition #614 @551 RefTypeExpUse <Ivl:3 V03>  BB14 regmask=[allInt] minReg=1 regOptional>
--- V04  (Interval 4)
<RefPosition #91  @90  RefTypeDef <Ivl:4 V04> STORE_LCL_VAR BB02 regmask=[r14] minReg=1>
<RefPosition #92  @95  RefTypeUse <Ivl:4 V04> LCL_VAR BB02 regmask=[r14] minReg=1>
<RefPosition #101 @105 RefTypeUse <Ivl:4 V04> LCL_VAR BB02 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #151 @201 RefTypeUse <Ivl:4 V04> LCL_VAR BB04 regmask=[r8] minReg=1 last copy fixed>
<RefPosition #173 @215 RefTypeUse <Ivl:4 V04> LCL_VAR BB05 regmask=[rdx] minReg=1 last copy fixed>
<RefPosition #214 @239 RefTypeUse <Ivl:4 V04> LCL_VAR BB07 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #413 @383 RefTypeUse <Ivl:4 V04> LCL_VAR BB10 regmask=[rcx] minReg=1 last copy fixed>
--- V05  (Interval 5)
<RefPosition #376 @356 RefTypeDef <Ivl:5 V05> STORE_LCL_VAR BB10 regmask=[r15] minReg=1>
<RefPosition #476 @425 RefTypeUse <Ivl:5 V05> LCL_VAR BB10 regmask=[r15] minReg=1 last>
--- V06
--- V07  (Interval 6)
<RefPosition #51  @28  RefTypeDef <Ivl:6 V07> STORE_LCL_VAR BB01 regmask=[rdi] minReg=1>
<RefPosition #53  @31  RefTypeUse <Ivl:6 V07> LCL_VAR BB01 regmask=[rcx] minReg=1 copy fixed>
<RefPosition #72  @43  RefTypeUse <Ivl:6 V07> LCL_VAR BB01 regmask=[rdi] minReg=1 last>
--- V08  (Interval 7)
<RefPosition #272 @268 RefTypeDef <Ivl:7 V08> STORE_LCL_VAR BB07 regmask=[r8] minReg=1>
<RefPosition #275 @275 RefTypeUse <Ivl:7 V08> LCL_VAR BB07 regmask=[r8] minReg=1 last>
--- V09  (Interval 8)
<RefPosition #244 @252 RefTypeDef <Ivl:8 V09> STORE_LCL_VAR BB07 regmask=[r15] minReg=1>
<RefPosition #273 @271 RefTypeUse <Ivl:8 V09> LCL_VAR BB07 regmask=[r15] minReg=1 last>
--- V10  (Interval 9)
<RefPosition #274 @272 RefTypeDef <Ivl:9 V10> STORE_LCL_VAR BB07 regmask=[r15] minReg=1>
<RefPosition #352 @347 RefTypeUse <Ivl:9 V10> LCL_VAR BB10 regmask=[rdx] minReg=1 last copy fixed>
--- V11  (Interval 10)
<RefPosition #276 @276 RefTypeDef <Ivl:10 V11> STORE_LCL_VAR BB07 regmask=[r8] minReg=1>
<RefPosition #277 @281 RefTypeUse <Ivl:10 V11> LCL_VAR BB07 regmask=[r8] minReg=1 regOptional>
<RefPosition #345 @338 RefTypeDef <Ivl:10 V11> STORE_LCL_VAR BB09 regmask=[r8] minReg=1>
<RefPosition #348 @343 RefTypeUse <Ivl:10 V11> LCL_VAR BB10 regmask=[r8] minReg=1 last fixed>
--- V12  (Interval 11)
<RefPosition #475 @422 RefTypeDef <Ivl:11 V12> STORE_LCL_VAR BB10 regmask=[r8] minReg=1>
<RefPosition #478 @429 RefTypeUse <Ivl:11 V12> LCL_VAR BB10 regmask=[r8] minReg=1 last>
--- V13
--- V14  (Interval 12)
<RefPosition #477 @426 RefTypeDef <Ivl:12 V14> STORE_LCL_VAR BB10 regmask=[r15] minReg=1>
<RefPosition #555 @501 RefTypeUse <Ivl:12 V14> LCL_VAR BB13 regmask=[rdx] minReg=1 last copy fixed>
--- V15  (Interval 13)
<RefPosition #479 @430 RefTypeDef <Ivl:13 V15> STORE_LCL_VAR BB10 regmask=[r8] minReg=1>
<RefPosition #480 @435 RefTypeUse <Ivl:13 V15> LCL_VAR BB10 regmask=[r8] minReg=1 regOptional>
<RefPosition #548 @492 RefTypeDef <Ivl:13 V15> STORE_LCL_VAR BB12 regmask=[r8] minReg=1>
<RefPosition #551 @497 RefTypeUse <Ivl:13 V15> LCL_VAR BB13 regmask=[r8] minReg=1 last fixed>
--- V16  (Interval 14)
<RefPosition #499 @448 RefTypeDef <Ivl:14 V16> STORE_LCL_VAR BB11 regmask=[r14] minReg=1>
<RefPosition #507 @467 RefTypeUse <Ivl:14 V16> LCL_VAR BB12 regmask=[r14] minReg=1>
<RefPosition #527 @479 RefTypeUse <Ivl:14 V16> LCL_VAR BB12 regmask=[r14] minReg=1>
<RefPosition #533 @487 RefTypeUse <Ivl:14 V16> LCL_VAR BB12 regmask=[rdx] minReg=1 copy fixed>
<RefPosition #547 @491 RefTypeUse <Ivl:14 V16> LCL_VAR BB12 regmask=[r14] minReg=1 last>
--- V17  (Interval 15)
<RefPosition #296 @294 RefTypeDef <Ivl:15 V17> STORE_LCL_VAR BB08 regmask=[r12] minReg=1>
<RefPosition #304 @313 RefTypeUse <Ivl:15 V17> LCL_VAR BB09 regmask=[r12] minReg=1>
<RefPosition #324 @325 RefTypeUse <Ivl:15 V17> LCL_VAR BB09 regmask=[r12] minReg=1>
<RefPosition #330 @333 RefTypeUse <Ivl:15 V17> LCL_VAR BB09 regmask=[rdx] minReg=1 copy fixed>
<RefPosition #344 @337 RefTypeUse <Ivl:15 V17> LCL_VAR BB09 regmask=[r12] minReg=1 last>
--- V18  (Interval 16)
<RefPosition #130 @148 RefTypeDef <Ivl:16 V18> STORE_LCL_VAR BB03 regmask=[rcx] minReg=1>
<RefPosition #135 @169 RefTypeUse <Ivl:16 V18> LCL_VAR BB03 regmask=[rcx] minReg=1>
<RefPosition #143 @193 RefTypeUse <Ivl:16 V18> LCL_VAR BB04 regmask=[rcx] minReg=1 last fixed>
--- V19  (Interval 17)
<RefPosition #134 @158 RefTypeDef <Ivl:17 V19> STORE_LCL_VAR BB03 regmask=[rdx] minReg=1>
<RefPosition #136 @169 RefTypeUse <Ivl:17 V19> LCL_VAR BB03 regmask=[rdx] minReg=1>
<RefPosition #138 @181 RefTypeUse <Ivl:17 V19> LCL_VAR BB04 regmask=[rdx] minReg=1>
<RefPosition #147 @197 RefTypeUse <Ivl:17 V19> LCL_VAR BB04 regmask=[rdx] minReg=1 last fixed>
--- V20  (Interval 18)
<RefPosition #205 @230 RefTypeDef <Ivl:18 V20> STORE_LCL_VAR BB07 regmask=[r9] minReg=1>
<RefPosition #218 @243 RefTypeUse <Ivl:18 V20> LCL_VAR BB07 regmask=[r9] minReg=1 last fixed>
--- V21  (Interval 19)
<RefPosition #301 @300 RefTypeDef <Ivl:19 V21> STORE_LCL_VAR BB08 regmask=[rdx] minReg=1>
<RefPosition #302 @305 RefTypeUse <Ivl:19 V21> LCL_VAR BB08 regmask=[rdx] minReg=1 regOptional>
<RefPosition #309 @317 RefTypeUse <Ivl:19 V21> LCL_VAR BB09 regmask=[rdx] minReg=1 last fixed>
--- V22
--- V23  (Interval 20)
<RefPosition #404 @374 RefTypeDef <Ivl:20 V23> STORE_LCL_VAR BB10 regmask=[r9] minReg=1>
<RefPosition #417 @387 RefTypeUse <Ivl:20 V23> LCL_VAR BB10 regmask=[r9] minReg=1 last fixed>
--- V24  (Interval 21)
<RefPosition #443 @396 RefTypeDef <Ivl:21 V24> STORE_LCL_VAR BB10 regmask=[r8] minReg=1>
<RefPosition #455 @411 RefTypeUse <Ivl:21 V24> LCL_VAR BB10 regmask=[r8] minReg=1 last fixed>
--- V25  (Interval 22)
<RefPosition #504 @454 RefTypeDef <Ivl:22 V25> STORE_LCL_VAR BB11 regmask=[rdx] minReg=1>
<RefPosition #505 @459 RefTypeUse <Ivl:22 V25> LCL_VAR BB11 regmask=[rdx] minReg=1 regOptional>
<RefPosition #512 @471 RefTypeUse <Ivl:22 V25> LCL_VAR BB12 regmask=[rdx] minReg=1 last fixed>
--- V26
--- V27  (Interval 23)
<RefPosition #579 @510 RefTypeDef <Ivl:23 V27> STORE_LCL_VAR BB13 regmask=[r8] minReg=1>
<RefPosition #591 @525 RefTypeUse <Ivl:23 V27> LCL_VAR BB13 regmask=[r8] minReg=1 last fixed>
--- V28
--- V29  (Interval 24)
<RefPosition #82  @66  RefTypeDef <Ivl:24 V29> STORE_LCL_VAR BB01 regmask=[rbp] minReg=1>
<RefPosition #83  @71  RefTypeUse <Ivl:24 V29> LCL_VAR BB01 regmask=[rbp] minReg=1 regOptional>
<RefPosition #612 @547 RefTypeUse <Ivl:24 V29> LCL_VAR BB14 regmask=[rbp] minReg=1 regOptional>
<RefPosition #616 @551 RefTypeExpUse <Ivl:24 V29>  BB14 regmask=[allInt] minReg=1 regOptional>

Active intervals at end of allocation:

-----------------------
RESOLVING BB BOUNDARIES
-----------------------
Resolution Candidates: {V00 V01 V02 V03 V04 V10 V11 V14 V15 V16 V17 V18 V19 V21 V25 V29}
Has Critical Edges

Prior to Resolution

BB01
use def in out
{V00}
{V01 V02 V03 V07 V29}
{V00}
{V01 V02 V03 V29}
Var=Reg beg of BB01: V00=rsi 
Var=Reg end of BB01: V01=rdi V03=rbx V02=rsi V29=rbp 

BB02
use def in out
{V02 V03}
{V04}
{V01 V02 V03 V29}
{V01 V02 V03 V04 V29}
Var=Reg beg of BB02: V01=rdi V03=rbx V02=rsi V29=rbp 
Var=Reg end of BB02: V01=rdi V04=r14 V03=rbx V02=rsi V29=rbp 

BB03
use def in out
{V01}
{V18 V19}
{V01 V02 V03 V04 V29}
{V01 V02 V03 V04 V18 V19 V29}
Var=Reg beg of BB03: V01=rdi V04=r14 V03=rbx V02=rsi V29=rbp 
Var=Reg end of BB03: V01=rdi V04=r14 V03=rbx V19=rdx V02=rsi V18=rcx V29=rbp 

BB04
use def in out
{V01 V04 V18 V19}
{}
{V01 V02 V03 V04 V18 V19 V29}
{V01 V02 V03 V29}
Var=Reg beg of BB04: V01=rdi V04=r14 V03=rbx V19=rdx V02=rsi V18=rcx V29=rbp 
Var=Reg end of BB04: V01=rdi V03=rbx V02=rsi V29=rbp 

BB05
use def in out
{V01 V04}
{}
{V01 V02 V03 V04 V29}
{V01 V02 V03 V29}
Var=Reg beg of BB05: V01=rdi V04=r14 V03=rbx V02=rsi V29=rbp 
Var=Reg end of BB05: V01=rdi V03=rbx V02=rsi V29=rbp 

BB07
use def in out
{V04}
{V08 V09 V10 V11 V20}
{V01 V02 V03 V04 V29}
{V01 V02 V03 V04 V10 V11 V29}
Var=Reg beg of BB07: V01=rdi V04=r14 V03=rbx V02=rsi V29=rbp 
Var=Reg end of BB07: V01=rdi V04=r14 V03=rbx V11=r8 V02=rsi V29=rbp V10=r15 

BB08
use def in out
{}
{V17 V21}
{V01 V02 V03 V04 V10 V29}
{V01 V02 V03 V04 V10 V17 V21 V29}
Var=Reg beg of BB08: V01=rdi V04=r14 V03=rbx V02=rsi V29=rbp V10=r15 
Var=Reg end of BB08: V01=rdi V04=r14 V17=r12 V03=rbx V21=rdx V02=rsi V29=rbp V10=r15 

BB09
use def in out
{V17 V21}
{V11}
{V01 V02 V03 V04 V10 V17 V21 V29}
{V01 V02 V03 V04 V10 V11 V29}
Var=Reg beg of BB09: V01=rdi V04=r14 V17=r12 V03=rbx V21=rdx V02=rsi V29=rbp V10=r15 
Var=Reg end of BB09: V01=rdi V04=r14 V03=rbx V11=r8 V02=rsi V29=rbp V10=r15 

BB10
use def in out
{V01 V04 V10 V11}
{V05 V12 V14 V15 V23 V24}
{V01 V02 V03 V04 V10 V11 V29}
{V01 V02 V03 V14 V15 V29}
Var=Reg beg of BB10: V01=rdi V04=r14 V03=rbx V11=r8 V02=rsi V29=rbp V10=r15 
Var=Reg end of BB10: V01=rdi V03=rbx V15=r8 V02=rsi V29=rbp V14=r15 

BB11
use def in out
{}
{V16 V25}
{V01 V02 V03 V14 V29}
{V01 V02 V03 V14 V16 V25 V29}
Var=Reg beg of BB11: V01=rdi V03=rbx V02=rsi V29=rbp V14=r15 
Var=Reg end of BB11: V01=rdi V16=r14 V03=rbx V25=rdx V02=rsi V29=rbp V14=r15 

BB12
use def in out
{V16 V25}
{V15}
{V01 V02 V03 V14 V16 V25 V29}
{V01 V02 V03 V14 V15 V29}
Var=Reg beg of BB12: V01=rdi V16=r14 V03=rbx V25=rdx V02=rsi V29=rbp V14=r15 
Var=Reg end of BB12: V01=rdi V03=rbx V15=r8 V02=rsi V29=rbp V14=r15 

BB13
use def in out
{V01 V14 V15}
{V27}
{V01 V02 V03 V14 V15 V29}
{V01 V02 V03 V29}
Var=Reg beg of BB13: V01=rdi V03=rbx V15=r8 V02=rsi V29=rbp V14=r15 
Var=Reg end of BB13: V01=rdi V03=rbx V02=rsi V29=rbp 

BB14
use def in out
{V03 V29}
{V03}
{V01 V02 V03 V29}
{V01 V02 V03 V29}
Var=Reg beg of BB14: V01=rdi V03=rbx V02=rsi V29=rbp 
Var=Reg end of BB14: V01=rdi V03=rbx V02=rsi V29=rbp 

BB15
use def in out
{V01}
{}
{V01}
{}
Var=Reg beg of BB15: V01=rdi 
Var=Reg end of BB15: none

BB16
use def in out
{}
{}
{}
{}
Var=Reg beg of BB16: none
Var=Reg end of BB16: none


RESOLVING EDGES
  Set V00 argument initial register to rsi
Trees after linear scan register allocator (LSRA)

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB15 ( cond )                     i label target hascall gcsafe idxlen newobj LIR 
BB02 [0001]  2       BB01,BB14             4     0 [01D..02E)-> BB07 ( cond )                     i Loop label target hascall gcsafe idxlen nullcheck bwd bwd-target LIR 
BB03 [0002]  1       BB02                  2     0 [02E..037)-> BB05 ( cond )                     i gcsafe idxlen bwd LIR 
BB04 [0013]  1       BB03                  2     0 [02E..02F)-> BB14 (always)                     i hascall gcsafe bwd LIR 
BB05 [0014]  1       BB03                  2     0 [02E..02F)-> BB14 (always)                     i label target hascall gcsafe bwd LIR 
BB07 [0003]  1       BB02                  2     0 [037..04B)-> BB10 ( cond )                     i label target hascall gcsafe bwd LIR 
BB08 [0004]  1       BB07                  2     0 [000..062)-> BB16 ( cond )                     i hascall gcsafe newobj bwd LIR 
BB09 [0020]  1       BB08                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd LIR 
BB10 [0005]  2       BB07,BB09             2     0 [062..085)-> BB13 ( cond )                     i label target hascall gcsafe bwd LIR 
BB11 [0006]  1       BB10                  2     0 [000..09C)-> BB16 ( cond )                     i hascall gcsafe newobj bwd LIR 
BB12 [0028]  1       BB11                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd LIR 
BB13 [0007]  2       BB10,BB12             2     0 [09C..0A6)                                     i label target hascall gcsafe bwd LIR 
BB14 [0008]  3       BB04,BB05,BB13        4     0 [0A6..0B3)-> BB02 ( cond )                     i label target gcsafe idxlen bwd LIR 
BB15 [0010]  2       BB01,BB14             1       [0B3..0C7)        (return)                     i label target hascall gcsafe LIR 
BB16 [0027]  2       BB08,BB11             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [000..01D) -> BB15 (cond), preds={} succs={BB02,BB15}
N003 (  2, 10) [000316] H-----------       t316 =    CNS_INT(h) long   0xD1FFAB1E "Started enumerating project paths." REG rdx $180
                                                  /--*  t316   long   
N005 (  4, 12) [000317] #---G-------       t317 = *  IND       ref    REG rdx $1c0
                                                  /--*  t317   ref    
N007 (???,???) [000494] ----G-------       t494 = *  PUTARG_REG ref    REG rdx
N009 (  2, 10) [000003] H-----------         t3 =    CNS_INT(h) long   0xd1ffab1e method REG rcx $181
                                                  /--*  t3     long   
N011 (???,???) [000495] ------------       t495 = *  PUTARG_REG long   REG rcx
N013 (  1,  1) [000001] ------------         t1 =    CNS_INT   int    2 REG r8 $42
                                                  /--*  t1     int    
N015 (???,???) [000496] ------------       t496 = *  PUTARG_REG int    REG r8
                                                  /--*  t494   ref    arg1 in rdx
                                                  +--*  t495   long   arg0 in rcx
                                                  +--*  t496   int    arg2 in r8
N017 ( 21, 31) [000002] --CXG-------         t2 = *  CALL      ref    SolutionAnalyzer.Logger.Log REG rax $101
N019 (???,???) [000459] ------------                 IL_OFFSET void   IL offset: 0xc REG NA
N021 (  2, 10) [000008] H-----------         t8 =    CNS_INT(h) long   0xd1ffab1e token REG rcx $182
                                                  /--*  t8     long   
N023 (???,???) [000497] ------------       t497 = *  PUTARG_REG long   REG rcx
                                                  /--*  t497   long   arg0 in rcx
N025 ( 16, 16) [000009] --C---------         t9 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $1c1
                                                  /--*  t9     ref    
N027 ( 16, 16) [000011] DA----------              *  STORE_LCL_VAR ref    V07 tmp1         d:2 rdi REG rdi
N029 (  1,  1) [000012] ------------        t12 =    LCL_VAR   ref    V07 tmp1         u:2 rdi REG rdi $1c1
                                                  /--*  t12    ref    
N031 (???,???) [000498] ------------       t498 = *  PUTARG_REG ref    REG rcx
N033 (  1,  1) [000007] ------------         t7 =    CNS_INT   int    100 REG rdx $43
                                                  /--*  t7     int    
N035 (???,???) [000499] ------------       t499 = *  PUTARG_REG int    REG rdx
                                                  /--*  t498   ref    this in rcx
                                                  +--*  t499   int    arg1 in rdx
N037 ( 16, 10) [000013] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor REG NA $VN.Void
N039 (???,???) [000460] ------------                 IL_OFFSET void   IL offset: 0x13 REG NA
N041 (  1,  1) [000014] ------------        t14 =    LCL_VAR   ref    V07 tmp1         u:2 rdi (last use) REG rdi $1c1
                                                  /--*  t14    ref    
N043 (  1,  3) [000016] DA----------              *  STORE_LCL_VAR ref    V01 loc0         d:2 rdi REG rdi
N045 (???,???) [000461] ------------                 IL_OFFSET void   IL offset: 0x14 REG NA
N047 (  1,  1) [000017] ------------        t17 =    LCL_VAR   ref    V00 arg0         u:1 rsi (last use) REG rsi $80
                                                  /--*  t17    ref    
N049 (  1,  3) [000019] DA----------              *  STORE_LCL_VAR ref    V02 loc1         d:2 rsi REG rsi
N051 (???,???) [000462] ------------                 IL_OFFSET void   IL offset: 0x16 REG NA
N053 (  1,  1) [000020] ------------        t20 =    CNS_INT   int    0 REG rbx $40
                                                  /--*  t20    int    
N055 (  1,  3) [000022] DA----------              *  STORE_LCL_VAR int    V03 loc2         d:2 rbx REG rbx
N057 (???,???) [000463] ------------                 IL_OFFSET void   IL offset: 0xaa REG NA
N059 (  1,  1) [000424] ------------       t424 =    LCL_VAR   ref    V02 loc1         u:2 rsi REG rsi $80
                                                  /--*  t424   ref    
N061 (???,???) [000491] -c----------       t491 = *  LEA(b+8)  ref    REG NA
                                                  /--*  t491   ref    
N063 (  3,  3) [000423] ---X--------       t423 = *  IND       int    REG rbp $240
                                                  /--*  t423   int    
N065 (  3,  3) [000452] DA-X--------              *  STORE_LCL_VAR int    V29 cse1         d:1 rbp REG rbp
N067 (  1,  1) [000453] ------------       t453 =    LCL_VAR   int    V29 cse1         u:1 rbp REG rbp $240
N069 (  1,  1) [000457] -c----------       t457 =    CNS_INT   int    0 REG NA $40
                                                  /--*  t453   int    
                                                  +--*  t457   int    
N071 (  6,  6) [000422] J--X---N----              *  LE        void   REG NA $242
N073 (  8,  8) [000426] ---X--------              *  JTRUE     void   REG NA

------------ BB02 [01D..02E) -> BB07 (cond), preds={BB01,BB14} succs={BB03,BB07}
N001 (  0,  0) [000437] ------------       t437 =    PHI_ARG   int    V03 loc2         u:4 rbx
N002 (  0,  0) [000436] ------------       t436 =    PHI_ARG   int    V03 loc2         u:2 rbx $40
                                                  /--*  t437   int    
                                                  +--*  t436   int    
N003 (  0,  0) [000428] ------------       t428 = *  PHI       int   
                                                  /--*  t428   int    
N005 (  0,  0) [000429] DA----------              *  STORE_LCL_VAR int    V03 loc2         d:3 rbx
N077 (???,???) [000464] ------------                 IL_OFFSET void   IL offset: 0x1d REG NA
N079 (  1,  1) [000324] ------------       t324 =    LCL_VAR   ref    V02 loc1         u:2 rsi REG rsi $80
N081 (  1,  1) [000325] ------------       t325 =    LCL_VAR   int    V03 loc2         u:3 rbx REG rbx $280
                                                  /--*  t325   int    
N083 (  2,  3) [000328] ------------       t328 = *  CAST      long <- int REG rdx $300
                                                  /--*  t324   ref    
                                                  +--*  t328   long   
N085 (  5,  6) [000333] -c----------       t333 = *  LEA(b+(i*8)+16) byref  REG NA
                                                  /--*  t333   byref  
N087 (  6,  7) [000030] a---G-------        t30 = *  IND       ref    REG r14 <l:$1ca, c:$2c1>
                                                  /--*  t30    ref    
N089 (  6,  7) [000032] DA--G-------              *  STORE_LCL_VAR ref    V04 loc3         d:2 r14 REG r14
N091 (???,???) [000465] ------------                 IL_OFFSET void   IL offset: 0x21 REG NA
N093 (  1,  1) [000196] ------------       t196 =    LCL_VAR   ref    V04 loc3         u:2 r14 REG r14 <l:$1ca, c:$2c1>
                                                  /--*  t196   ref    
N095 (  2,  2) [000197] ---X--------              *  NULLCHECK int    REG NA <l:$1d0, c:$1cf>
N097 (  2, 10) [000335] H-----------       t335 =    CNS_INT(h) long   0xD1FFAB1E ".csproj" REG rdx $184
                                                  /--*  t335   long   
N099 (  4, 12) [000336] #---G-------       t336 = *  IND       ref    REG rdx $1d1
                                                  /--*  t336   ref    
N101 (???,???) [000500] ----G-------       t500 = *  PUTARG_REG ref    REG rdx
N103 (  1,  1) [000033] ------------        t33 =    LCL_VAR   ref    V04 loc3         u:2 r14 REG r14 <l:$1ca, c:$2c1>
                                                  /--*  t33    ref    
N105 (???,???) [000501] ------------       t501 = *  PUTARG_REG ref    REG rcx
N107 (  1,  1) [000194] ------------       t194 =    CNS_INT   int    0 REG r8 $40
                                                  /--*  t194   int    
N109 (???,???) [000502] ------------       t502 = *  PUTARG_REG int    REG r8
                                                  /--*  t500   ref    arg1 in rdx
                                                  +--*  t501   ref    this in rcx
                                                  +--*  t502   int    arg2 in r8
N111 ( 20, 23) [000195] --CXG-------       t195 = *  CALL      int    System.String.EndsWith REG rax $401
N113 (  1,  1) [000037] -c----------        t37 =    CNS_INT   int    0 REG NA $40
                                                  /--*  t195   int    
                                                  +--*  t37    int    
N115 ( 22, 25) [000038] J--XG--N----              *  EQ        void   REG NA $244
N117 ( 24, 27) [000039] ---XG-------              *  JTRUE     void   REG NA

------------ BB03 [02E..037) -> BB05 (cond), preds={BB02} succs={BB04,BB05}
N121 (???,???) [000466] ------------                 IL_OFFSET void   IL offset: 0x2e REG NA
N123 (  1,  1) [000199] -c----------       t199 =    LCL_VAR   ref    V01 loc0         u:2 rdi REG NA $1c1
                                                  /--*  t199   ref    
N125 (  2,  2) [000343] -c----------       t343 = *  LEA(b+20) byref  REG NA
                                                  /--*  t343   byref  
N127 (  4,  4) [000200] nc--GO------       t200 = *  IND       int    REG NA <l:$258, c:$257>
N129 (  1,  1) [000201] -c----------       t201 =    CNS_INT   int    1 REG NA $46
                                                  /--*  t200   int    
                                                  +--*  t201   int    
N131 (  6,  6) [000202] -c--GO------       t202 = *  ADD       int    REG NA <l:$25c, c:$25b>
N133 (  1,  1) [000177] ------------       t177 =    LCL_VAR   ref    V01 loc0         u:2 rdi REG rdi $1c1
                                                  /--*  t177   ref    
N135 (  2,  2) [000341] -c----------       t341 = *  LEA(b+20) byref  REG NA
                                                  /--*  t341   byref  
                                                  +--*  t202   int    
N137 (???,???) [000467] -A--GO------              *  STOREIND  int    REG NA
N139 (???,???) [000468] ------------                 IL_OFFSET void   IL offset: 0x2e REG NA
N141 (  1,  1) [000205] ------------       t205 =    LCL_VAR   ref    V01 loc0         u:2 rdi REG rdi $1c1
                                                  /--*  t205   ref    
N143 (  2,  2) [000345] -c----------       t345 = *  LEA(b+8)  byref  REG NA
                                                  /--*  t345   byref  
N145 (  4,  4) [000206] n---GO------       t206 = *  IND       ref    REG rcx <l:$1f0, c:$1ef>
                                                  /--*  t206   ref    
N147 (  4,  4) [000208] DA--GO------              *  STORE_LCL_VAR ref    V18 tmp12        d:2 rcx REG rcx
N149 (???,???) [000469] ------------                 IL_OFFSET void   IL offset: 0x2e REG NA
N151 (  1,  1) [000209] ------------       t209 =    LCL_VAR   ref    V01 loc0         u:2 rdi REG rdi $1c1
                                                  /--*  t209   ref    
N153 (  2,  2) [000347] -c----------       t347 = *  LEA(b+16) byref  REG NA
                                                  /--*  t347   byref  
N155 (  4,  4) [000210] n---GO------       t210 = *  IND       int    REG rdx <l:$260, c:$25f>
                                                  /--*  t210   int    
N157 (  4,  4) [000212] DA--GO------              *  STORE_LCL_VAR int    V19 tmp13        d:2 rdx REG rdx
N159 (???,???) [000470] ------------                 IL_OFFSET void   IL offset: 0x2e REG NA
N161 (  1,  1) [000214] ------------       t214 =    LCL_VAR   ref    V18 tmp12        u:2 rcx REG rcx <l:$1ee, c:$2fc>
                                                  /--*  t214   ref    
N163 (???,???) [000493] -c----------       t493 = *  LEA(b+8)  ref    REG NA
                                                  /--*  t493   ref    
N165 (  3,  3) [000215] -c-X--------       t215 = *  IND       int    REG NA <l:$262, c:$261>
N167 (  1,  1) [000213] ------------       t213 =    LCL_VAR   int    V19 tmp13        u:2 rdx REG rdx <l:$25e, c:$411>
                                                  /--*  t215   int    
                                                  +--*  t213   int    
N169 (  5,  5) [000216] N--X---N-U--              *  LE        void   REG NA <l:$266, c:$265>
N171 (  7,  7) [000217] ---X--------              *  JTRUE     void   REG NA

------------ BB04 [02E..02F) -> BB14 (always), preds={BB03} succs={BB14}
N175 (???,???) [000471] ------------                 IL_OFFSET void   IL offset: 0x2e REG NA
N177 (  1,  1) [000221] ------------       t221 =    LCL_VAR   int    V19 tmp13        u:2 rdx REG rdx <l:$25e, c:$411>
N179 (  1,  1) [000222] -c----------       t222 =    CNS_INT   int    1 REG NA $46
                                                  /--*  t221   int    
                                                  +--*  t222   int    
N181 (  3,  3) [000223] ------------       t223 = *  ADD       int    REG r8 <l:$268, c:$267>
N183 (  1,  1) [000220] ------------       t220 =    LCL_VAR   ref    V01 loc0         u:2 rdi REG rdi $1c1
                                                  /--*  t220   ref    
N185 (  2,  2) [000349] -c----------       t349 = *  LEA(b+16) byref  REG NA
                                                  /--*  t349   byref  
                                                  +--*  t223   int    
N187 (???,???) [000472] -A--GO------              *  STOREIND  int    REG NA
N189 (???,???) [000473] ------------                 IL_OFFSET void   IL offset: 0x2e REG NA
N191 (  1,  1) [000226] ------------       t226 =    LCL_VAR   ref    V18 tmp12        u:2 rcx (last use) REG rcx <l:$1ee, c:$2fc>
                                                  /--*  t226   ref    
N193 (???,???) [000503] ------------       t503 = *  PUTARG_REG ref    REG rcx
N195 (  1,  1) [000227] ------------       t227 =    LCL_VAR   int    V19 tmp13        u:2 rdx (last use) REG rdx <l:$25e, c:$411>
                                                  /--*  t227   int    
N197 (???,???) [000504] ------------       t504 = *  PUTARG_REG int    REG rdx
N199 (  1,  1) [000228] ------------       t228 =    LCL_VAR   ref    V04 loc3         u:2 r14 (last use) REG r14 <l:$1ca, c:$2c1>
                                                  /--*  t228   ref    
N201 (???,???) [000505] ------------       t505 = *  PUTARG_REG ref    REG r8
                                                  /--*  t503   ref    arg0 in rcx
                                                  +--*  t504   int    arg1 in rdx
                                                  +--*  t505   ref    arg2 in r8
N203 ( 17, 11) [000229] --CXG-------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST REG NA $1db

------------ BB05 [02E..02F) -> BB14 (always), preds={BB03} succs={BB14}
N207 (???,???) [000474] ------------                 IL_OFFSET void   IL offset: 0x2e REG NA
N209 (  1,  1) [000218] ------------       t218 =    LCL_VAR   ref    V01 loc0         u:2 rdi REG rdi $1c1
                                                  /--*  t218   ref    
N211 (???,???) [000506] ------------       t506 = *  PUTARG_REG ref    REG rcx
N213 (  1,  1) [000178] ------------       t178 =    LCL_VAR   ref    V04 loc3         u:2 r14 (last use) REG r14 <l:$1ca, c:$2c1>
                                                  /--*  t178   ref    
N215 (???,???) [000507] ------------       t507 = *  PUTARG_REG ref    REG rdx
                                                  /--*  t506   ref    this in rcx
                                                  +--*  t507   ref    arg1 in rdx
N217 ( 16, 10) [000219] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize REG NA $VN.Void

------------ BB07 [037..04B) -> BB10 (cond), preds={BB02} succs={BB08,BB10}
N221 (???,???) [000475] ------------                 IL_OFFSET void   IL offset: 0x37 REG NA
N223 (  1,  1) [000235] ------------       t235 =    CNS_INT   int    1 REG rcx $46
                                                  /--*  t235   int    
N225 (???,???) [000508] ------------       t508 = *  PUTARG_REG int    REG rcx
                                                  /--*  t508   int    arg0 in rcx
N227 ( 15,  7) [000236] --CXG-------       t236 = *  CALL      ref    System.IO.EnumerationOptions.FromSearchOption REG rax $2c6
                                                  /--*  t236   ref    
N229 ( 15,  7) [000247] DA-XG-------              *  STORE_LCL_VAR ref    V20 tmp14        d:2 r9 REG r9
N231 (  2, 10) [000356] H-----------       t356 =    CNS_INT(h) long   0xD1FFAB1E "*" REG rdx $185
                                                  /--*  t356   long   
N233 (  4, 12) [000357] #---G-------       t357 = *  IND       ref    REG rdx $1d2
                                                  /--*  t357   ref    
N235 (???,???) [000509] ----G-------       t509 = *  PUTARG_REG ref    REG rdx
N237 (  1,  1) [000040] ------------        t40 =    LCL_VAR   ref    V04 loc3         u:2 r14 REG r14 <l:$1ca, c:$2c1>
                                                  /--*  t40    ref    
N239 (???,???) [000510] ------------       t510 = *  PUTARG_REG ref    REG rcx
N241 (  1,  1) [000244] ------------       t244 =    LCL_VAR   ref    V20 tmp14        u:2 r9 (last use) REG r9 $2c6
                                                  /--*  t244   ref    
N243 (???,???) [000511] ------------       t511 = *  PUTARG_REG ref    REG r9
N245 (  1,  1) [000243] ------------       t243 =    CNS_INT   int    2 REG r8 $42
                                                  /--*  t243   int    
N247 (???,???) [000512] ------------       t512 = *  PUTARG_REG int    REG r8
                                                  /--*  t509   ref    arg1 in rdx
                                                  +--*  t510   ref    arg0 in rcx
                                                  +--*  t511   ref    arg3 in r9
                                                  +--*  t512   int    arg2 in r8
N249 ( 21, 24) [000245] --CXG-------       t245 = *  CALL      ref    System.IO.Directory.InternalEnumeratePaths REG rax $2cc
                                                  /--*  t245   ref    
N251 ( 21, 24) [000054] DA-XG-------              *  STORE_LCL_VAR ref    V09 tmp3         d:2 r15 REG r15
N253 (  2, 10) [000047] ------------        t47 =    CNS_INT   long   0x7ffc7e4c17e0 REG rcx $345
                                                  /--*  t47    long   
N255 (???,???) [000513] ------------       t513 = *  PUTARG_REG long   REG rcx
N257 (  1,  1) [000048] ------------        t48 =    CNS_INT   int    35 REG rdx $47
                                                  /--*  t48    int    
N259 (???,???) [000514] ------------       t514 = *  PUTARG_REG int    REG rdx
                                                  /--*  t513   long   arg0 in rcx
                                                  +--*  t514   int    arg1 in rdx
N261 ( 17, 18) [000049] H-CXG-------        t49 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE REG rax $305
N263 (  2, 10) [000364] I-----------       t364 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] REG rcx $186
                                                  /--*  t364   long   
N265 (  4, 12) [000045] n---G-------        t45 = *  IND       ref    REG r8 <l:$4c0, c:$2cf>
                                                  /--*  t45    ref    
N267 ( 22, 31) [000052] DA-XG-------              *  STORE_LCL_VAR ref    V08 tmp2         d:2 r8 REG r8
N269 (  1,  1) [000055] ------------        t55 =    LCL_VAR   ref    V09 tmp3         u:2 r15 (last use) REG r15 $2cc
                                                  /--*  t55    ref    
N271 (  1,  3) [000062] DA----------              *  STORE_LCL_VAR ref    V10 tmp4         d:2 r15 REG r15
N273 (  1,  1) [000056] ------------        t56 =    LCL_VAR   ref    V08 tmp2         u:2 r8 (last use) REG r8 <l:$4c0, c:$2cf>
                                                  /--*  t56    ref    
N275 (  1,  3) [000065] DA----------              *  STORE_LCL_VAR ref    V11 tmp5         d:2 r8 REG r8
N277 (  1,  1) [000057] ------------        t57 =    LCL_VAR   ref    V11 tmp5         u:2 r8 REG r8 <l:$4c0, c:$2cf>
N279 (  1,  1) [000058] -c----------        t58 =    CNS_INT   ref    null REG NA $VN.Null
                                                  /--*  t57    ref    
                                                  +--*  t58    ref    
N281 (  3,  3) [000059] J------N----              *  NE        void   REG NA <l:$246, c:$245>
N283 (  5,  5) [000060] ------------              *  JTRUE     void   REG NA

------------ BB08 [000..062) -> BB16 (cond), preds={BB07} succs={BB09,BB16}
N287 (  2, 10) [000157] H-----------       t157 =    CNS_INT(h) long   0xd1ffab1e token REG rcx $187
                                                  /--*  t157   long   
N289 (???,???) [000515] ------------       t515 = *  PUTARG_REG long   REG rcx
                                                  /--*  t515   long   arg0 in rcx
N291 ( 16, 16) [000158] --C---------       t158 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $1d6
                                                  /--*  t158   ref    
N293 ( 16, 16) [000160] DA----------              *  STORE_LCL_VAR ref    V17 tmp11        d:2 r12 REG r12
N295 (  2, 10) [000368] I-----------       t368 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] REG rdx $188
                                                  /--*  t368   long   
N297 (  4, 12) [000150] n---G-------       t150 = *  IND       ref    REG rdx <l:$4c1, c:$2d5>
                                                  /--*  t150   ref    
N299 (  5, 13) [000262] DA--G-------              *  STORE_LCL_VAR ref    V21 tmp15        d:2 rdx REG rdx
N301 (  1,  1) [000249] ------------       t249 =    LCL_VAR   ref    V21 tmp15        u:2 rdx REG rdx <l:$4c1, c:$2d5>
N303 (  1,  1) [000250] -c----------       t250 =    CNS_INT   ref    null REG NA $VN.Null
                                                  /--*  t249   ref    
                                                  +--*  t250   ref    
N305 (  3,  3) [000251] J------N----              *  EQ        void   REG NA <l:$248, c:$247>
N307 (  5,  5) [000252] ------------              *  JTRUE     void   REG NA

------------ BB09 [000..000), preds={BB08} succs={BB10}
N311 (  1,  1) [000161] ------------       t161 =    LCL_VAR   ref    V17 tmp11        u:2 r12 REG r12 $1d6
                                                  /--*  t161   ref    
N313 (  2,  2) [000370] ------------       t370 = *  LEA(b+8)  byref  REG rcx
N315 (  1,  1) [000253] ------------       t253 =    LCL_VAR   ref    V21 tmp15        u:2 rdx (last use) REG rdx <l:$4c1, c:$2d5>
                                                  /--*  t370   byref  
                                                  +--*  t253   ref    
N317 (???,???) [000476] -A--GO------              *  STOREIND  ref    REG NA
N319 (  1,  1) [000256] ------------       t256 =    LCL_VAR   ref    V17 tmp11        u:2 r12 REG r12 $1d6
                                                  /--*  t256   ref    
N321 (  2,  2) [000372] -c----------       t372 = *  LEA(b+24) byref  REG NA
N323 (  2, 10) [000156] H-----------       t156 =    CNS_INT(h) long   0xd1ffab1e ftn REG rdx $18a
                                                  /--*  t372   byref  
                                                  +--*  t156   long   
N325 (???,???) [000477] -A--GO------              *  STOREIND  long   REG NA
N327 (???,???) [000478] ------------                 IL_OFFSET void   IL offset: 0x5c REG NA
N329 (  2, 10) [000375] I-----------       t375 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] REG rcx $186
N331 (  1,  1) [000164] ------------       t164 =    LCL_VAR   ref    V17 tmp11        u:2 r12 REG r12 $1d6
                                                  /--*  t375   long   
                                                  +--*  t164   ref    
N333 (???,???) [000479] -A--G-------              *  STOREIND  ref    REG NA
N335 (  1,  1) [000163] ------------       t163 =    LCL_VAR   ref    V17 tmp11        u:2 r12 (last use) REG r12 $1d6
                                                  /--*  t163   ref    
N337 (  1,  3) [000175] DA----------              *  STORE_LCL_VAR ref    V11 tmp5         d:4 r8 REG r8

------------ BB10 [062..085) -> BB13 (cond), preds={BB07,BB09} succs={BB11,BB13}
N001 (  0,  0) [000441] ------------       t441 =    PHI_ARG   ref    V11 tmp5         u:4 r8 $1d6
N002 (  0,  0) [000438] ------------       t438 =    PHI_ARG   ref    V11 tmp5         u:2 r8 <l:$4c0, c:$2cf>
                                                  /--*  t441   ref    
                                                  +--*  t438   ref    
N003 (  0,  0) [000434] ------------       t434 = *  PHI       ref   
                                                  /--*  t434   ref    
N005 (  0,  0) [000435] DA----------              *  STORE_LCL_VAR ref    V11 tmp5         d:3 r8
N341 (  1,  1) [000070] ------------        t70 =    LCL_VAR   ref    V11 tmp5         u:3 r8 (last use) REG r8 $4c4
                                                  /--*  t70    ref    
N343 (???,???) [000516] ------------       t516 = *  PUTARG_REG ref    REG r8
N345 (  1,  1) [000069] ------------        t69 =    LCL_VAR   ref    V10 tmp4         u:2 r15 (last use) REG r15 $2cc
                                                  /--*  t69    ref    
N347 (???,???) [000517] ------------       t517 = *  PUTARG_REG ref    REG rdx
N349 (  2, 10) [000072] H-----------        t72 =    CNS_INT(h) long   0xd1ffab1e method REG rcx $18d
                                                  /--*  t72    long   
N351 (???,???) [000518] ------------       t518 = *  PUTARG_REG long   REG rcx
                                                  /--*  t516   ref    arg2 in r8
                                                  +--*  t517   ref    arg1 in rdx
                                                  +--*  t518   long   arg0 in rcx
N353 ( 18, 20) [000071] --CXG-------        t71 = *  CALL      ref    System.Linq.Enumerable.Where REG rax $2db
                                                  /--*  t71    ref    
N355 ( 18, 20) [000075] DA-XG-------              *  STORE_LCL_VAR ref    V05 loc4         d:2 r15 REG r15
N357 (???,???) [000480] ------------                 IL_OFFSET void   IL offset: 0x69 REG NA
N359 (  2, 10) [000273] ------------       t273 =    CNS_INT   long   0x7ffc7e783cd8 REG rcx $347
                                                  /--*  t273   long   
N361 (???,???) [000519] ------------       t519 = *  PUTARG_REG long   REG rcx
N363 (  1,  1) [000274] ------------       t274 =    CNS_INT   int    40 REG rdx $4a
                                                  /--*  t274   int    
N365 (???,???) [000520] ------------       t520 = *  PUTARG_REG int    REG rdx
                                                  /--*  t519   long   arg0 in rcx
                                                  +--*  t520   int    arg1 in rdx
N367 ( 17, 18) [000275] H-CXG-------       t275 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE REG rax $309
N369 (  2, 10) [000381] I-----------       t381 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<Compatible>k__BackingField] REG rdx $18e
                                                  /--*  t381   long   
N371 (  4, 12) [000271] n---G-------       t271 = *  IND       ref    REG r9 <l:$4c5, c:$2de>
                                                  /--*  t271   ref    
N373 ( 21, 30) [000283] DA-XG-------              *  STORE_LCL_VAR ref    V23 tmp17        d:2 r9 REG r9
N375 (  2, 10) [000382] H-----------       t382 =    CNS_INT(h) long   0xD1FFAB1E "*.csproj" REG rdx $18f
                                                  /--*  t382   long   
N377 (  4, 12) [000383] #---G-------       t383 = *  IND       ref    REG rdx $1e0
                                                  /--*  t383   ref    
N379 (???,???) [000521] ----G-------       t521 = *  PUTARG_REG ref    REG rdx
N381 (  1,  1) [000077] ------------        t77 =    LCL_VAR   ref    V04 loc3         u:2 r14 (last use) REG r14 <l:$1ca, c:$2c1>
                                                  /--*  t77    ref    
N383 (???,???) [000522] ------------       t522 = *  PUTARG_REG ref    REG rcx
N385 (  1,  1) [000280] ------------       t280 =    LCL_VAR   ref    V23 tmp17        u:2 r9 (last use) REG r9 <l:$4c5, c:$2de>
                                                  /--*  t280   ref    
N387 (???,???) [000523] ------------       t523 = *  PUTARG_REG ref    REG r9
N389 (  1,  1) [000279] ------------       t279 =    CNS_INT   int    1 REG r8 $46
                                                  /--*  t279   int    
N391 (???,???) [000524] ------------       t524 = *  PUTARG_REG int    REG r8
                                                  /--*  t521   ref    arg1 in rdx
                                                  +--*  t522   ref    arg0 in rcx
                                                  +--*  t523   ref    arg3 in r9
                                                  +--*  t524   int    arg2 in r8
N393 ( 21, 24) [000281] --CXG-------       t281 = *  CALL      ref    System.IO.Directory.InternalEnumeratePaths REG rax $2e3
                                                  /--*  t281   ref    
N395 ( 21, 24) [000290] DA-XG-------              *  STORE_LCL_VAR ref    V24 tmp18        d:2 r8 REG r8
N397 (  1,  1) [000285] ------------       t285 =    LCL_VAR   ref    V01 loc0         u:2 rdi REG rdi $1c1
                                                  /--*  t285   ref    
N399 (  2,  2) [000389] -c----------       t389 = *  LEA(b+16) byref  REG NA
                                                  /--*  t389   byref  
N401 (  4,  4) [000286] n---GO------       t286 = *  IND       int    REG rdx <l:$24c, c:$24b>
                                                  /--*  t286   int    
N403 (???,???) [000525] ----GO------       t525 = *  PUTARG_REG int    REG rdx
N405 (  1,  1) [000076] ------------        t76 =    LCL_VAR   ref    V01 loc0         u:2 rdi REG rdi $1c1
                                                  /--*  t76    ref    
N407 (???,???) [000526] ------------       t526 = *  PUTARG_REG ref    REG rcx
N409 (  1,  1) [000287] ------------       t287 =    LCL_VAR   ref    V24 tmp18        u:2 r8 (last use) REG r8 $2e3
                                                  /--*  t287   ref    
N411 (???,???) [000527] ------------       t527 = *  PUTARG_REG ref    REG r8
                                                  /--*  t525   int    arg1 in rdx
                                                  +--*  t526   ref    this in rcx
                                                  +--*  t527   ref    arg2 in r8
N413 ( 20, 15) [000288] --CXGO------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange REG NA $VN.Void
N415 (???,???) [000481] ------------                 IL_OFFSET void   IL offset: 0x7a REG NA
N417 (  2, 10) [000395] I-----------       t395 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] REG rcx $191
                                                  /--*  t395   long   
N419 (  4, 12) [000084] n---G-------        t84 = *  IND       ref    REG r8 <l:$4c6, c:$2e9>
                                                  /--*  t84    ref    
N421 (  5, 13) [000091] DA--G-------              *  STORE_LCL_VAR ref    V12 tmp6         d:2 r8 REG r8
N423 (  1,  1) [000083] ------------        t83 =    LCL_VAR   ref    V05 loc4         u:2 r15 (last use) REG r15 $2db
                                                  /--*  t83    ref    
N425 (  1,  3) [000101] DA----------              *  STORE_LCL_VAR ref    V14 tmp8         d:2 r15 REG r15
N427 (  1,  1) [000092] ------------        t92 =    LCL_VAR   ref    V12 tmp6         u:2 r8 (last use) REG r8 <l:$4c6, c:$2e9>
                                                  /--*  t92    ref    
N429 (  1,  3) [000104] DA----------              *  STORE_LCL_VAR ref    V15 tmp9         d:2 r8 REG r8
N431 (  1,  1) [000093] ------------        t93 =    LCL_VAR   ref    V15 tmp9         u:2 r8 REG r8 <l:$4c6, c:$2e9>
N433 (  1,  1) [000094] -c----------        t94 =    CNS_INT   ref    null REG NA $VN.Null
                                                  /--*  t93    ref    
                                                  +--*  t94    ref    
N435 (  3,  3) [000095] J------N----              *  NE        void   REG NA <l:$24e, c:$24d>
N437 (  5,  5) [000096] ------------              *  JTRUE     void   REG NA

------------ BB11 [000..09C) -> BB16 (cond), preds={BB10} succs={BB12,BB16}
N441 (  2, 10) [000128] H-----------       t128 =    CNS_INT(h) long   0xd1ffab1e token REG rcx $192
                                                  /--*  t128   long   
N443 (???,???) [000528] ------------       t528 = *  PUTARG_REG long   REG rcx
                                                  /--*  t528   long   arg0 in rcx
N445 ( 16, 16) [000129] --C---------       t129 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $1e4
                                                  /--*  t129   ref    
N447 ( 16, 16) [000131] DA----------              *  STORE_LCL_VAR ref    V16 tmp10        d:2 r14 REG r14
N449 (  2, 10) [000399] I-----------       t399 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] REG rdx $188
                                                  /--*  t399   long   
N451 (  4, 12) [000121] n---G-------       t121 = *  IND       ref    REG rdx <l:$4c7, c:$2f0>
                                                  /--*  t121   ref    
N453 (  5, 13) [000305] DA--G-------              *  STORE_LCL_VAR ref    V25 tmp19        d:2 rdx REG rdx
N455 (  1,  1) [000292] ------------       t292 =    LCL_VAR   ref    V25 tmp19        u:2 rdx REG rdx <l:$4c7, c:$2f0>
N457 (  1,  1) [000293] -c----------       t293 =    CNS_INT   ref    null REG NA $VN.Null
                                                  /--*  t292   ref    
                                                  +--*  t293   ref    
N459 (  3,  3) [000294] J------N----              *  EQ        void   REG NA <l:$250, c:$24f>
N461 (  5,  5) [000295] ------------              *  JTRUE     void   REG NA

------------ BB12 [000..000), preds={BB11} succs={BB13}
N465 (  1,  1) [000132] ------------       t132 =    LCL_VAR   ref    V16 tmp10        u:2 r14 REG r14 $1e4
                                                  /--*  t132   ref    
N467 (  2,  2) [000401] ------------       t401 = *  LEA(b+8)  byref  REG rcx
N469 (  1,  1) [000296] ------------       t296 =    LCL_VAR   ref    V25 tmp19        u:2 rdx (last use) REG rdx <l:$4c7, c:$2f0>
                                                  /--*  t401   byref  
                                                  +--*  t296   ref    
N471 (???,???) [000482] -A--GO------              *  STOREIND  ref    REG NA
N473 (  1,  1) [000299] ------------       t299 =    LCL_VAR   ref    V16 tmp10        u:2 r14 REG r14 $1e4
                                                  /--*  t299   ref    
N475 (  2,  2) [000403] -c----------       t403 = *  LEA(b+24) byref  REG NA
N477 (  2, 10) [000127] H-----------       t127 =    CNS_INT(h) long   0xd1ffab1e ftn REG rdx $194
                                                  /--*  t403   byref  
                                                  +--*  t127   long   
N479 (???,???) [000483] -A--GO------              *  STOREIND  long   REG NA
N481 (???,???) [000484] ------------                 IL_OFFSET void   IL offset: 0x96 REG NA
N483 (  2, 10) [000406] I-----------       t406 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] REG rcx $191
N485 (  1,  1) [000135] ------------       t135 =    LCL_VAR   ref    V16 tmp10        u:2 r14 REG r14 $1e4
                                                  /--*  t406   long   
                                                  +--*  t135   ref    
N487 (???,???) [000485] -A--G-------              *  STOREIND  ref    REG NA
N489 (  1,  1) [000134] ------------       t134 =    LCL_VAR   ref    V16 tmp10        u:2 r14 (last use) REG r14 $1e4
                                                  /--*  t134   ref    
N491 (  1,  3) [000148] DA----------              *  STORE_LCL_VAR ref    V15 tmp9         d:4 r8 REG r8

------------ BB13 [09C..0A6), preds={BB10,BB12} succs={BB14}
N001 (  0,  0) [000440] ------------       t440 =    PHI_ARG   ref    V15 tmp9         u:4 r8 $1e4
N002 (  0,  0) [000439] ------------       t439 =    PHI_ARG   ref    V15 tmp9         u:2 r8 <l:$4c6, c:$2e9>
                                                  /--*  t440   ref    
                                                  +--*  t439   ref    
N003 (  0,  0) [000431] ------------       t431 = *  PHI       ref   
                                                  /--*  t431   ref    
N005 (  0,  0) [000432] DA----------              *  STORE_LCL_VAR ref    V15 tmp9         d:3 r8
N495 (  1,  1) [000111] ------------       t111 =    LCL_VAR   ref    V15 tmp9         u:3 r8 (last use) REG r8 $4ca
                                                  /--*  t111   ref    
N497 (???,???) [000529] ------------       t529 = *  PUTARG_REG ref    REG r8
N499 (  1,  1) [000110] ------------       t110 =    LCL_VAR   ref    V14 tmp8         u:2 r15 (last use) REG r15 $2db
                                                  /--*  t110   ref    
N501 (???,???) [000530] ------------       t530 = *  PUTARG_REG ref    REG rdx
N503 (  2, 10) [000113] H-----------       t113 =    CNS_INT(h) long   0xd1ffab1e method REG rcx $196
                                                  /--*  t113   long   
N505 (???,???) [000531] ------------       t531 = *  PUTARG_REG long   REG rcx
                                                  /--*  t529   ref    arg2 in r8
                                                  +--*  t530   ref    arg1 in rdx
                                                  +--*  t531   long   arg0 in rcx
N507 ( 18, 20) [000112] --CXG-------       t112 = *  CALL      ref    System.Linq.Enumerable.SelectMany REG rax $2f6
                                                  /--*  t112   ref    
N509 ( 18, 20) [000313] DA-XG-------              *  STORE_LCL_VAR ref    V27 tmp21        d:2 r8 REG r8
N511 (  1,  1) [000308] ------------       t308 =    LCL_VAR   ref    V01 loc0         u:2 rdi REG rdi $1c1
                                                  /--*  t308   ref    
N513 (  2,  2) [000411] -c----------       t411 = *  LEA(b+16) byref  REG NA
                                                  /--*  t411   byref  
N515 (  4,  4) [000309] n---GO------       t309 = *  IND       int    REG rdx <l:$254, c:$253>
                                                  /--*  t309   int    
N517 (???,???) [000532] ----GO------       t532 = *  PUTARG_REG int    REG rdx
N519 (  1,  1) [000109] ------------       t109 =    LCL_VAR   ref    V01 loc0         u:2 rdi REG rdi $1c1
                                                  /--*  t109   ref    
N521 (???,???) [000533] ------------       t533 = *  PUTARG_REG ref    REG rcx
N523 (  1,  1) [000310] ------------       t310 =    LCL_VAR   ref    V27 tmp21        u:2 r8 (last use) REG r8 $2f6
                                                  /--*  t310   ref    
N525 (???,???) [000534] ------------       t534 = *  PUTARG_REG ref    REG r8
                                                  /--*  t532   int    arg1 in rdx
                                                  +--*  t533   ref    this in rcx
                                                  +--*  t534   ref    arg2 in r8
N527 ( 20, 15) [000311] --CXGO------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange REG NA $VN.Void

------------ BB14 [0A6..0B3) -> BB02 (cond), preds={BB04,BB05,BB13} succs={BB15,BB02}
N531 (???,???) [000486] ------------                 IL_OFFSET void   IL offset: 0xa6 REG NA
N533 (  1,  1) [000116] ------------       t116 =    LCL_VAR   int    V03 loc2         u:3 rbx (last use) REG rbx $280
N535 (  1,  1) [000117] -c----------       t117 =    CNS_INT   int    1 REG NA $46
                                                  /--*  t116   int    
                                                  +--*  t117   int    
N537 (  3,  3) [000118] ------------       t118 = *  ADD       int    REG rbx $269
                                                  /--*  t118   int    
N539 (  3,  3) [000120] DA----------              *  STORE_LCL_VAR int    V03 loc2         d:4 rbx REG rbx
N541 (???,???) [000487] ------------                 IL_OFFSET void   IL offset: 0xaa REG NA
N543 (  1,  1) [000456] ------------       t456 =    LCL_VAR   int    V29 cse1         u:1 rbp REG rbp $200
N545 (  1,  1) [000023] ------------        t23 =    LCL_VAR   int    V03 loc2         u:4 rbx REG rbx $269
                                                  /--*  t456   int    
                                                  +--*  t23    int    
N547 (  3,  3) [000026] J------N----              *  GT        void   REG NA $26b
N549 (  5,  5) [000027] ------------              *  JTRUE     void   REG NA

------------ BB15 [0B3..0C7) (return), preds={BB01,BB14} succs={}
N553 (???,???) [000488] ------------                 IL_OFFSET void   IL offset: 0xb3 REG NA
N555 (  1,  1) [000180] ------------       t180 =    LCL_VAR   ref    V01 loc0         u:2 rdi REG rdi $1c1
                                                  /--*  t180   ref    
N557 (???,???) [000535] ------------       t535 = *  PUTARG_REG ref    REG rdx
N559 (  2, 10) [000182] H-----------       t182 =    CNS_INT(h) long   0xd1ffab1e method REG rcx $19c
                                                  /--*  t182   long   
N561 (???,???) [000536] ------------       t536 = *  PUTARG_REG long   REG rcx
                                                  /--*  t535   ref    arg1 in rdx
                                                  +--*  t536   long   arg0 in rcx
N563 ( 17, 18) [000181] --CXG-------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle REG NA $VN.Void
N565 (  2, 10) [000417] H-----------       t417 =    CNS_INT(h) long   0xD1FFAB1E "Enumerated and shuffled the project paths." REG rdx $19d
                                                  /--*  t417   long   
N567 (  4, 12) [000418] #---G-------       t418 = *  IND       ref    REG rdx $1f9
                                                  /--*  t418   ref    
N569 (???,???) [000537] ----G-------       t537 = *  PUTARG_REG ref    REG rdx
N571 (  2, 10) [000186] H-----------       t186 =    CNS_INT(h) long   0xd1ffab1e method REG rcx $181
                                                  /--*  t186   long   
N573 (???,???) [000538] ------------       t538 = *  PUTARG_REG long   REG rcx
N575 (  1,  1) [000184] ------------       t184 =    CNS_INT   int    2 REG r8 $42
                                                  /--*  t184   int    
N577 (???,???) [000539] ------------       t539 = *  PUTARG_REG int    REG r8
                                                  /--*  t537   ref    arg1 in rdx
                                                  +--*  t538   long   arg0 in rcx
                                                  +--*  t539   int    arg2 in r8
N579 ( 21, 31) [000185] --CXG-------       t185 = *  CALL      ref    SolutionAnalyzer.Logger.Log REG rax $10d
N581 (???,???) [000489] ------------                 IL_OFFSET void   IL offset: 0xc5 REG NA
N583 (  1,  1) [000190] ------------       t190 =    LCL_VAR   ref    V01 loc0         u:2 rdi (last use) REG rdi $1c1
                                                  /--*  t190   ref    
N585 (  2,  2) [000191] ------------              *  RETURN    ref    REG NA $10f

------------ BB16 [000..000) (throw), preds={BB08,BB11} succs={}
N589 ( 14,  5) [000303] --CXG-------                 CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance REG NA $VN.Void

-------------------------------------------------------------------------------------------------------------------

Final allocation
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r12  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
  0.#0   V0    Parm   Alloc rsi  |     |     |     |     |     |V0  a|     |     |     |     |     |     |
  1.#1   BB1  PredBB0            |     |     |     |     |     |V0  a|     |     |     |     |     |     |
  4.#2   C25   Def    Alloc rdx  |     |     |C25 a|     |     |V0  a|     |     |     |     |     |     |
  5.#3   C25   Use *  Keep  rdx  |     |     |C25 i|     |     |V0  a|     |     |     |     |     |     |
  6.#4   I26   Def    Alloc rdx  |     |     |I26 a|     |     |V0  a|     |     |     |     |     |     |
  7.#5   rdx   Fixd   Keep  rdx  |     |     |I26 a|     |     |V0  a|     |     |     |     |     |     |
  7.#6   I26   Use *  Keep  rdx  |     |     |I26 i|     |     |V0  a|     |     |     |     |     |     |
  8.#7   rdx   Fixd   Keep  rdx  |     |     |     |     |     |V0  a|     |     |     |     |     |     |
  8.#8   I27   Def    Alloc rdx  |     |     |I27 a|     |     |V0  a|     |     |     |     |     |     |
 10.#9   C28   Def    Alloc rcx  |     |C28 a|I27 a|     |     |V0  a|     |     |     |     |     |     |
 11.#10  rcx   Fixd   Keep  rcx  |     |C28 a|I27 a|     |     |V0  a|     |     |     |     |     |     |
 11.#11  C28   Use *  Keep  rcx  |     |C28 i|I27 a|     |     |V0  a|     |     |     |     |     |     |
 12.#12  rcx   Fixd   Keep  rcx  |     |     |I27 a|     |     |V0  a|     |     |     |     |     |     |
 12.#13  I29   Def    Alloc rcx  |     |I29 a|I27 a|     |     |V0  a|     |     |     |     |     |     |
 14.#14  C30   Def    Alloc r8   |     |I29 a|I27 a|     |     |V0  a|     |C30 a|     |     |     |     |
 15.#15  r8    Fixd   Keep  r8   |     |I29 a|I27 a|     |     |V0  a|     |C30 a|     |     |     |     |
 15.#16  C30   Use *  Keep  r8   |     |I29 a|I27 a|     |     |V0  a|     |C30 i|     |     |     |     |
 16.#17  r8    Fixd   Keep  r8   |     |I29 a|I27 a|     |     |V0  a|     |     |     |     |     |     |
 16.#18  I31   Def    Alloc r8   |     |I29 a|I27 a|     |     |V0  a|     |I31 a|     |     |     |     |
 17.#19  rdx   Fixd   Keep  rdx  |     |I29 a|I27 a|     |     |V0  a|     |I31 a|     |     |     |     |
 17.#20  I27   Use *  Keep  rdx  |     |I29 a|I27 i|     |     |V0  a|     |I31 a|     |     |     |     |
 17.#21  rcx   Fixd   Keep  rcx  |     |I29 a|     |     |     |V0  a|     |I31 a|     |     |     |     |
 17.#22  I29   Use *  Keep  rcx  |     |I29 i|     |     |     |V0  a|     |I31 a|     |     |     |     |
 17.#23  r8    Fixd   Keep  r8   |     |     |     |     |     |V0  a|     |I31 a|     |     |     |     |
 17.#24  I31   Use *  Keep  r8   |     |     |     |     |     |V0  a|     |I31 i|     |     |     |     |
 18.#25  rax   Kill   Keep  rax  |     |     |     |     |     |V0  a|     |     |     |     |     |     |
 18.#26  rcx   Kill   Keep  rcx  |     |     |     |     |     |V0  a|     |     |     |     |     |     |
 18.#27  rdx   Kill   Keep  rdx  |     |     |     |     |     |V0  a|     |     |     |     |     |     |
 18.#28  r8    Kill   Keep  r8   |     |     |     |     |     |V0  a|     |     |     |     |     |     |
 18.#29  r9    Kill   Keep  r9   |     |     |     |     |     |V0  a|     |     |     |     |     |     |
 18.#30  r10   Kill   Keep  r10  |     |     |     |     |     |V0  a|     |     |     |     |     |     |
 18.#31  r11   Kill   Keep  r11  |     |     |     |     |     |V0  a|     |     |     |     |     |     |
 18.#32  rax   Fixd   Keep  rax  |     |     |     |     |     |V0  a|     |     |     |     |     |     |
 18.#33  I32   Def *  Alloc rax  |I32 i|     |     |     |     |V0  a|     |     |     |     |     |     |
 22.#34  C33   Def    Alloc rcx  |     |C33 a|     |     |     |V0  a|     |     |     |     |     |     |
 23.#35  rcx   Fixd   Keep  rcx  |     |C33 a|     |     |     |V0  a|     |     |     |     |     |     |
 23.#36  C33   Use *  Keep  rcx  |     |C33 i|     |     |     |V0  a|     |     |     |     |     |     |
 24.#37  rcx   Fixd   Keep  rcx  |     |     |     |     |     |V0  a|     |     |     |     |     |     |
 24.#38  I34   Def    Alloc rcx  |     |I34 a|     |     |     |V0  a|     |     |     |     |     |     |
 25.#39  rcx   Fixd   Keep  rcx  |     |I34 a|     |     |     |V0  a|     |     |     |     |     |     |
 25.#40  I34   Use *  Keep  rcx  |     |I34 i|     |     |     |V0  a|     |     |     |     |     |     |
 26.#41  rax   Kill   Keep  rax  |     |     |     |     |     |V0  a|     |     |     |     |     |     |
 26.#42  rcx   Kill   Keep  rcx  |     |     |     |     |     |V0  a|     |     |     |     |     |     |
 26.#43  rdx   Kill   Keep  rdx  |     |     |     |     |     |V0  a|     |     |     |     |     |     |
 26.#44  r8    Kill   Keep  r8   |     |     |     |     |     |V0  a|     |     |     |     |     |     |
 26.#45  r9    Kill   Keep  r9   |     |     |     |     |     |V0  a|     |     |     |     |     |     |
 26.#46  r10   Kill   Keep  r10  |     |     |     |     |     |V0  a|     |     |     |     |     |     |
 26.#47  r11   Kill   Keep  r11  |     |     |     |     |     |V0  a|     |     |     |     |     |     |
 26.#48  rax   Fixd   Keep  rax  |     |     |     |     |     |V0  a|     |     |     |     |     |     |
 26.#49  I35   Def    Alloc rax  |I35 a|     |     |     |     |V0  a|     |     |     |     |     |     |
 27.#50  I35   Use *  Keep  rax  |I35 i|     |     |     |     |V0  a|     |     |     |     |     |     |
 28.#51  V7    Def    Alloc rdi  |     |     |     |     |     |V0  a|V7  a|     |     |     |     |     |
 31.#52  rcx   Fixd   Keep  rcx  |     |     |     |     |     |V0  a|V7  a|     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r12  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
 31.#53  V7    Use    Copy  rcx  |     |V7  a|     |     |     |V0  a|V7  a|     |     |     |     |     |
 32.#54  rcx   Fixd   Keep  rcx  |     |     |     |     |     |V0  a|V7  a|     |     |     |     |     |
 32.#55  I36   Def    Alloc rcx  |     |I36 a|     |     |     |V0  a|V7  a|     |     |     |     |     |
 34.#56  C37   Def    Alloc rdx  |     |I36 a|C37 a|     |     |V0  a|V7  a|     |     |     |     |     |
 35.#57  rdx   Fixd   Keep  rdx  |     |I36 a|C37 a|     |     |V0  a|V7  a|     |     |     |     |     |
 35.#58  C37   Use *  Keep  rdx  |     |I36 a|C37 i|     |     |V0  a|V7  a|     |     |     |     |     |
 36.#59  rdx   Fixd   Keep  rdx  |     |I36 a|     |     |     |V0  a|V7  a|     |     |     |     |     |
 36.#60  I38   Def    Alloc rdx  |     |I36 a|I38 a|     |     |V0  a|V7  a|     |     |     |     |     |
 37.#61  rcx   Fixd   Keep  rcx  |     |I36 a|I38 a|     |     |V0  a|V7  a|     |     |     |     |     |
 37.#62  I36   Use *  Keep  rcx  |     |I36 i|I38 a|     |     |V0  a|V7  a|     |     |     |     |     |
 37.#63  rdx   Fixd   Keep  rdx  |     |     |I38 a|     |     |V0  a|V7  a|     |     |     |     |     |
 37.#64  I38   Use *  Keep  rdx  |     |     |I38 i|     |     |V0  a|V7  a|     |     |     |     |     |
 38.#65  rax   Kill   Keep  rax  |     |     |     |     |     |V0  a|V7  a|     |     |     |     |     |
 38.#66  rcx   Kill   Keep  rcx  |     |     |     |     |     |V0  a|V7  a|     |     |     |     |     |
 38.#67  rdx   Kill   Keep  rdx  |     |     |     |     |     |V0  a|V7  a|     |     |     |     |     |
 38.#68  r8    Kill   Keep  r8   |     |     |     |     |     |V0  a|V7  a|     |     |     |     |     |
 38.#69  r9    Kill   Keep  r9   |     |     |     |     |     |V0  a|V7  a|     |     |     |     |     |
 38.#70  r10   Kill   Keep  r10  |     |     |     |     |     |V0  a|V7  a|     |     |     |     |     |
 38.#71  r11   Kill   Keep  r11  |     |     |     |     |     |V0  a|V7  a|     |     |     |     |     |
 43.#72  V7    Use *  Keep  rdi  |     |     |     |     |     |V0  a|V7  i|     |     |     |     |     |
 44.#73  V1    Def    Alloc rdi  |     |     |     |     |     |V0  a|V1  a|     |     |     |     |     |
 49.#74  V0    Use *  Keep  rsi  |     |     |     |     |     |V0  i|V1  a|     |     |     |     |     |
 50.#75  V2    Def    Alloc rsi  |     |     |     |     |     |V2  a|V1  a|     |     |     |     |     |
 54.#76  C39   Def    Alloc rbx  |     |     |     |C39 a|     |V2  a|V1  a|     |     |     |     |     |
 55.#77  C39   Use *  Keep  rbx  |     |     |     |C39 i|     |V2  a|V1  a|     |     |     |     |     |
 56.#78  V3    Def    Alloc rbx  |     |     |     |V3  a|     |V2  a|V1  a|     |     |     |     |     |
 63.#79  V2    Use    Keep  rsi  |     |     |     |V3  a|     |V2  a|V1  a|     |     |     |     |     |
 64.#80  I40   Def    Alloc rbp  |     |     |     |V3  a|I40 a|V2  a|V1  a|     |     |     |     |     |
 65.#81  I40   Use *  Keep  rbp  |     |     |     |V3  a|I40 i|V2  a|V1  a|     |     |     |     |     |
 66.#82  V29   Def    Alloc rbp  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
 71.#83  V29   Use    Keep  rbp  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r12  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
 75.#84  BB2  PredBB1            |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
 83.#85  V3    Use    Keep  rbx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
 84.#86  I41   Def    Alloc rdx  |     |     |I41 a|V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
 87.#87  V2    Use    Keep  rsi  |     |     |I41 a|V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
 87.#88  I41   Use *  Keep  rdx  |     |     |I41 i|V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
 88.#89  I42   Def    Alloc r14  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |I42 a|     |
 89.#90  I42   Use *  Keep  r14  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |I42 i|     |
 90.#91  V4    Def    Alloc r14  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
 95.#92  V4    Use    Keep  r14  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
 98.#93  C43   Def    Alloc rdx  |     |     |C43 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
 99.#94  C43   Use *  Keep  rdx  |     |     |C43 i|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
100.#95  I44   Def    Alloc rdx  |     |     |I44 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
101.#96  rdx   Fixd   Keep  rdx  |     |     |I44 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
101.#97  I44   Use *  Keep  rdx  |     |     |I44 i|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
102.#98  rdx   Fixd   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
102.#99  I45   Def    Alloc rdx  |     |     |I45 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
105.#100 rcx   Fixd   Keep  rcx  |     |     |I45 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
105.#101 V4    Use    Copy  rcx  |     |V4  a|I45 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
106.#102 rcx   Fixd   Keep  rcx  |     |     |I45 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
106.#103 I46   Def    Alloc rcx  |     |I46 a|I45 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
108.#104 C47   Def    Alloc r8   |     |I46 a|I45 a|V3  a|V29 a|V2  a|V1  a|C47 a|     |     |V4  a|     |
109.#105 r8    Fixd   Keep  r8   |     |I46 a|I45 a|V3  a|V29 a|V2  a|V1  a|C47 a|     |     |V4  a|     |
109.#106 C47   Use *  Keep  r8   |     |I46 a|I45 a|V3  a|V29 a|V2  a|V1  a|C47 i|     |     |V4  a|     |
110.#107 r8    Fixd   Keep  r8   |     |I46 a|I45 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
110.#108 I48   Def    Alloc r8   |     |I46 a|I45 a|V3  a|V29 a|V2  a|V1  a|I48 a|     |     |V4  a|     |
111.#109 rdx   Fixd   Keep  rdx  |     |I46 a|I45 a|V3  a|V29 a|V2  a|V1  a|I48 a|     |     |V4  a|     |
111.#110 I45   Use *  Keep  rdx  |     |I46 a|I45 i|V3  a|V29 a|V2  a|V1  a|I48 a|     |     |V4  a|     |
111.#111 rcx   Fixd   Keep  rcx  |     |I46 a|     |V3  a|V29 a|V2  a|V1  a|I48 a|     |     |V4  a|     |
111.#112 I46   Use *  Keep  rcx  |     |I46 i|     |V3  a|V29 a|V2  a|V1  a|I48 a|     |     |V4  a|     |
111.#113 r8    Fixd   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|I48 a|     |     |V4  a|     |
111.#114 I48   Use *  Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|I48 i|     |     |V4  a|     |
112.#115 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
112.#116 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
112.#117 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
112.#118 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
112.#119 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
112.#120 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
112.#121 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
112.#122 rax   Fixd   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
112.#123 I49   Def    Alloc rax  |I49 a|     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
115.#124 I49   Use *  Keep  rax  |I49 i|     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r12  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
119.#125 BB3  PredBB2            |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
137.#126 V1    Use    Keep  rdi  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
145.#127 V1    Use    Keep  rdi  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
146.#128 I50   Def    Alloc rcx  |     |I50 a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
147.#129 I50   Use *  Keep  rcx  |     |I50 i|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
148.#130 V18   Def    Alloc rcx  |     |V18 a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
155.#131 V1    Use    Keep  rdi  |     |V18 a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
156.#132 I51   Def    Alloc rdx  |     |V18 a|I51 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
157.#133 I51   Use *  Keep  rdx  |     |V18 a|I51 i|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
158.#134 V19   Def    Alloc rdx  |     |V18 a|V19 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
169.#135 V18   Use    Keep  rcx  |     |V18 a|V19 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
169.#136 V19   Use    Keep  rdx  |     |V18 a|V19 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r12  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
173.#137 BB4  PredBB3            |     |V18 a|V19 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
181.#138 V19   Use    Keep  rdx  |     |V18 a|V19 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
182.#139 I52   Def    Alloc r8   |     |V18 a|V19 a|V3  a|V29 a|V2  a|V1  a|I52 a|     |     |V4  a|     |
187.#140 V1    Use    Keep  rdi  |     |V18 a|V19 a|V3  a|V29 a|V2  a|V1  a|I52 a|     |     |V4  a|     |
187.#141 I52   Use *  Keep  r8   |     |V18 a|V19 a|V3  a|V29 a|V2  a|V1  a|I52 i|     |     |V4  a|     |
193.#142 rcx   Fixd   Keep  rcx  |     |V18 a|V19 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
193.#143 V18   Use *  Keep  rcx  |     |V18 i|V19 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
194.#144 rcx   Fixd   Keep  rcx  |     |     |V19 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
194.#145 I53   Def    Alloc rcx  |     |I53 a|V19 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
197.#146 rdx   Fixd   Keep  rdx  |     |I53 a|V19 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
197.#147 V19   Use *  Keep  rdx  |     |I53 a|V19 i|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
198.#148 rdx   Fixd   Keep  rdx  |     |I53 a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
198.#149 I54   Def    Alloc rdx  |     |I53 a|I54 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
201.#150 r8    Fixd   Keep  r8   |     |I53 a|I54 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
201.#151 V4    Use *  Copy  r8   |     |I53 a|I54 a|V3  a|V29 a|V2  a|V1  a|V4  i|     |     |V4  i|     |
202.#152 r8    Fixd   Keep  r8   |     |I53 a|I54 a|V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
202.#153 I55   Def    Alloc r8   |     |I53 a|I54 a|V3  a|V29 a|V2  a|V1  a|I55 a|     |     |     |     |
203.#154 rcx   Fixd   Keep  rcx  |     |I53 a|I54 a|V3  a|V29 a|V2  a|V1  a|I55 a|     |     |     |     |
203.#155 I53   Use *  Keep  rcx  |     |I53 i|I54 a|V3  a|V29 a|V2  a|V1  a|I55 a|     |     |     |     |
203.#156 rdx   Fixd   Keep  rdx  |     |     |I54 a|V3  a|V29 a|V2  a|V1  a|I55 a|     |     |     |     |
203.#157 I54   Use *  Keep  rdx  |     |     |I54 i|V3  a|V29 a|V2  a|V1  a|I55 a|     |     |     |     |
203.#158 r8    Fixd   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|I55 a|     |     |     |     |
203.#159 I55   Use *  Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|I55 i|     |     |     |     |
204.#160 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
204.#161 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
204.#162 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
204.#163 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
204.#164 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
204.#165 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
204.#166 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r12  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
205.#167 BB5  PredBB3            |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
211.#168 rcx   Fixd   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
211.#169 V1    Use    Copy  rcx  |     |V1  a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
212.#170 rcx   Fixd   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
212.#171 I56   Def    Alloc rcx  |     |I56 a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
215.#172 rdx   Fixd   Keep  rdx  |     |I56 a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
215.#173 V4    Use *  Copy  rdx  |     |I56 a|V4  i|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  i|     |
216.#174 rdx   Fixd   Keep  rdx  |     |I56 a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
216.#175 I57   Def    Alloc rdx  |     |I56 a|I57 a|V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
217.#176 rcx   Fixd   Keep  rcx  |     |I56 a|I57 a|V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
217.#177 I56   Use *  Keep  rcx  |     |I56 i|I57 a|V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
217.#178 rdx   Fixd   Keep  rdx  |     |     |I57 a|V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
217.#179 I57   Use *  Keep  rdx  |     |     |I57 i|V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
218.#180 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
218.#181 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
218.#182 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
218.#183 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
218.#184 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
218.#185 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
218.#186 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r12  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
219.#187 BB7  PredBB2            |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
224.#188 C58   Def    Alloc rcx  |     |C58 a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
225.#189 rcx   Fixd   Keep  rcx  |     |C58 a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
225.#190 C58   Use *  Keep  rcx  |     |C58 i|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
226.#191 rcx   Fixd   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
226.#192 I59   Def    Alloc rcx  |     |I59 a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
227.#193 rcx   Fixd   Keep  rcx  |     |I59 a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
227.#194 I59   Use *  Keep  rcx  |     |I59 i|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
228.#195 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
228.#196 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
228.#197 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
228.#198 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
228.#199 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
228.#200 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
228.#201 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
228.#202 rax   Fixd   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
228.#203 I60   Def    Alloc rax  |I60 a|     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
229.#204 I60   Use *  Keep  rax  |I60 i|     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
230.#205 V20   Def    Alloc r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |V20 a|     |V4  a|     |
232.#206 C61   Def    Alloc rdx  |     |     |C61 a|V3  a|V29 a|V2  a|V1  a|     |V20 a|     |V4  a|     |
233.#207 C61   Use *  Keep  rdx  |     |     |C61 i|V3  a|V29 a|V2  a|V1  a|     |V20 a|     |V4  a|     |
234.#208 I62   Def    Alloc rdx  |     |     |I62 a|V3  a|V29 a|V2  a|V1  a|     |V20 a|     |V4  a|     |
235.#209 rdx   Fixd   Keep  rdx  |     |     |I62 a|V3  a|V29 a|V2  a|V1  a|     |V20 a|     |V4  a|     |
235.#210 I62   Use *  Keep  rdx  |     |     |I62 i|V3  a|V29 a|V2  a|V1  a|     |V20 a|     |V4  a|     |
236.#211 rdx   Fixd   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |V20 a|     |V4  a|     |
236.#212 I63   Def    Alloc rdx  |     |     |I63 a|V3  a|V29 a|V2  a|V1  a|     |V20 a|     |V4  a|     |
239.#213 rcx   Fixd   Keep  rcx  |     |     |I63 a|V3  a|V29 a|V2  a|V1  a|     |V20 a|     |V4  a|     |
239.#214 V4    Use    Copy  rcx  |     |V4  a|I63 a|V3  a|V29 a|V2  a|V1  a|     |V20 a|     |V4  a|     |
240.#215 rcx   Fixd   Keep  rcx  |     |     |I63 a|V3  a|V29 a|V2  a|V1  a|     |V20 a|     |V4  a|     |
240.#216 I64   Def    Alloc rcx  |     |I64 a|I63 a|V3  a|V29 a|V2  a|V1  a|     |V20 a|     |V4  a|     |
243.#217 r9    Fixd   Keep  r9   |     |I64 a|I63 a|V3  a|V29 a|V2  a|V1  a|     |V20 a|     |V4  a|     |
243.#218 V20   Use *  Keep  r9   |     |I64 a|I63 a|V3  a|V29 a|V2  a|V1  a|     |V20 i|     |V4  a|     |
244.#219 r9    Fixd   Keep  r9   |     |I64 a|I63 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
244.#220 I65   Def    Alloc r9   |     |I64 a|I63 a|V3  a|V29 a|V2  a|V1  a|     |I65 a|     |V4  a|     |
246.#221 C66   Def    Alloc r8   |     |I64 a|I63 a|V3  a|V29 a|V2  a|V1  a|C66 a|I65 a|     |V4  a|     |
247.#222 r8    Fixd   Keep  r8   |     |I64 a|I63 a|V3  a|V29 a|V2  a|V1  a|C66 a|I65 a|     |V4  a|     |
247.#223 C66   Use *  Keep  r8   |     |I64 a|I63 a|V3  a|V29 a|V2  a|V1  a|C66 i|I65 a|     |V4  a|     |
248.#224 r8    Fixd   Keep  r8   |     |I64 a|I63 a|V3  a|V29 a|V2  a|V1  a|     |I65 a|     |V4  a|     |
248.#225 I67   Def    Alloc r8   |     |I64 a|I63 a|V3  a|V29 a|V2  a|V1  a|I67 a|I65 a|     |V4  a|     |
249.#226 rdx   Fixd   Keep  rdx  |     |I64 a|I63 a|V3  a|V29 a|V2  a|V1  a|I67 a|I65 a|     |V4  a|     |
249.#227 I63   Use *  Keep  rdx  |     |I64 a|I63 i|V3  a|V29 a|V2  a|V1  a|I67 a|I65 a|     |V4  a|     |
249.#228 rcx   Fixd   Keep  rcx  |     |I64 a|     |V3  a|V29 a|V2  a|V1  a|I67 a|I65 a|     |V4  a|     |
249.#229 I64   Use *  Keep  rcx  |     |I64 i|     |V3  a|V29 a|V2  a|V1  a|I67 a|I65 a|     |V4  a|     |
249.#230 r9    Fixd   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|I67 a|I65 a|     |V4  a|     |
249.#231 I65   Use *  Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|I67 a|I65 i|     |V4  a|     |
249.#232 r8    Fixd   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|I67 a|     |     |V4  a|     |
249.#233 I67   Use *  Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|I67 i|     |     |V4  a|     |
250.#234 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
250.#235 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
250.#236 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
250.#237 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
250.#238 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
250.#239 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
250.#240 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
250.#241 rax   Fixd   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
250.#242 I68   Def    Alloc rax  |I68 a|     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
251.#243 I68   Use *  Keep  rax  |I68 i|     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
252.#244 V9    Def    Alloc r15  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V9  a|
254.#245 C69   Def    Alloc rcx  |     |C69 a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V9  a|
255.#246 rcx   Fixd   Keep  rcx  |     |C69 a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V9  a|
255.#247 C69   Use *  Keep  rcx  |     |C69 i|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V9  a|
256.#248 rcx   Fixd   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V9  a|
256.#249 I70   Def    Alloc rcx  |     |I70 a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V9  a|
258.#250 C71   Def    Alloc rdx  |     |I70 a|C71 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V9  a|
259.#251 rdx   Fixd   Keep  rdx  |     |I70 a|C71 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V9  a|
259.#252 C71   Use *  Keep  rdx  |     |I70 a|C71 i|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V9  a|
260.#253 rdx   Fixd   Keep  rdx  |     |I70 a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V9  a|
260.#254 I72   Def    Alloc rdx  |     |I70 a|I72 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V9  a|
261.#255 rcx   Fixd   Keep  rcx  |     |I70 a|I72 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V9  a|
261.#256 I70   Use *  Keep  rcx  |     |I70 i|I72 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V9  a|
261.#257 rdx   Fixd   Keep  rdx  |     |     |I72 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V9  a|
261.#258 I72   Use *  Keep  rdx  |     |     |I72 i|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V9  a|
262.#259 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V9  a|
262.#260 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V9  a|
262.#261 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V9  a|
262.#262 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V9  a|
262.#263 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V9  a|
262.#264 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V9  a|
262.#265 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V9  a|
262.#266 rax   Fixd   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V9  a|
262.#267 I73   Def *  Alloc rax  |I73 i|     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V9  a|
264.#268 C74   Def    Alloc rcx  |     |C74 a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V9  a|
265.#269 C74   Use *  Keep  rcx  |     |C74 i|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V9  a|
266.#270 I75   Def    Alloc r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|I75 a|     |     |V4  a|V9  a|
267.#271 I75   Use *  Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|I75 i|     |     |V4  a|V9  a|
268.#272 V8    Def    Alloc r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|V8  a|     |     |V4  a|V9  a|
271.#273 V9    Use *  Keep  r15  |     |     |     |V3  a|V29 a|V2  a|V1  a|V8  a|     |     |V4  a|V9  i|
272.#274 V10   Def    Alloc r15  |     |     |     |V3  a|V29 a|V2  a|V1  a|V8  a|     |     |V4  a|V10 a|
275.#275 V8    Use *  Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|V8  i|     |     |V4  a|V10 a|
276.#276 V11   Def    Alloc r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|V11 a|     |     |V4  a|V10 a|
281.#277 V11   Use    Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|V11 a|     |     |V4  a|V10 a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r12  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
285.#278 BB8  PredBB7            |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V10 a|
288.#279 C76   Def    Alloc rcx  |     |C76 a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V10 a|
289.#280 rcx   Fixd   Keep  rcx  |     |C76 a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V10 a|
289.#281 C76   Use *  Keep  rcx  |     |C76 i|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V10 a|
290.#282 rcx   Fixd   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V10 a|
290.#283 I77   Def    Alloc rcx  |     |I77 a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V10 a|
291.#284 rcx   Fixd   Keep  rcx  |     |I77 a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V10 a|
291.#285 I77   Use *  Keep  rcx  |     |I77 i|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V10 a|
292.#286 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V10 a|
292.#287 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V10 a|
292.#288 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V10 a|
292.#289 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V10 a|
292.#290 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V10 a|
292.#291 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V10 a|
292.#292 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V10 a|
292.#293 rax   Fixd   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V10 a|
292.#294 I78   Def    Alloc rax  |I78 a|     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V10 a|
293.#295 I78   Use *  Keep  rax  |I78 i|     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V10 a|
294.#296 V17   Def    Alloc r12  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
296.#297 C79   Def    Alloc rdx  |     |     |C79 a|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
297.#298 C79   Use *  Keep  rdx  |     |     |C79 i|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
298.#299 I80   Def    Alloc rdx  |     |     |I80 a|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
299.#300 I80   Use *  Keep  rdx  |     |     |I80 i|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
300.#301 V21   Def    Alloc rdx  |     |     |V21 a|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
305.#302 V21   Use    Keep  rdx  |     |     |V21 a|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r12  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
309.#303 BB9  PredBB8            |     |     |V21 a|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
313.#304 V17   Use    Keep  r12  |     |     |V21 a|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
314.#305 I81   Def    Alloc rcx  |     |I81 a|V21 a|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
317.#306 rcx   Fixd   Keep  rcx  |     |I81 a|V21 a|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
317.#307 I81   Use *  Keep  rcx  |     |I81 i|V21 a|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
317.#308 rdx   Fixd   Keep  rdx  |     |     |V21 a|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
317.#309 V21   Use *  Keep  rdx  |     |     |V21 i|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
318.#310 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
318.#311 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
318.#312 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
318.#313 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
318.#314 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
318.#315 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
318.#316 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
318.#317 mm0   Kill   Keep  mm0  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
318.#318 mm1   Kill   Keep  mm1  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
318.#319 mm2   Kill   Keep  mm2  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
318.#320 mm3   Kill   Keep  mm3  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
318.#321 mm4   Kill   Keep  mm4  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
318.#322 mm5   Kill   Keep  mm5  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
324.#323 C82   Def    Alloc rdx  |     |     |C82 a|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
325.#324 V17   Use    Keep  r12  |     |     |C82 a|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
325.#325 C82   Use *  Keep  rdx  |     |     |C82 i|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
330.#326 C83   Def    Alloc rcx  |     |C83 a|     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
333.#327 rcx   Fixd   Keep  rcx  |     |C83 a|     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
333.#328 C83   Use *  Keep  rcx  |     |C83 i|     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
333.#329 rdx   Fixd   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
333.#330 V17   Use    Copy  rdx  |     |     |V17 a|V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
334.#331 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
334.#332 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
334.#333 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
334.#334 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
334.#335 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
334.#336 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
334.#337 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
334.#338 mm0   Kill   Keep  mm0  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
334.#339 mm1   Kill   Keep  mm1  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
334.#340 mm2   Kill   Keep  mm2  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
334.#341 mm3   Kill   Keep  mm3  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
334.#342 mm4   Kill   Keep  mm4  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
334.#343 mm5   Kill   Keep  mm5  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 a|V4  a|V10 a|
337.#344 V17   Use *  Keep  r12  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |V17 i|V4  a|V10 a|
338.#345 V11   Def    Alloc r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|V11 a|     |     |V4  a|V10 a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r12  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
339.#346 BB10 PredBB7            |     |     |     |V3  a|V29 a|V2  a|V1  a|V11 a|     |     |V4  a|V10 a|
343.#347 r8    Fixd   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|V11 a|     |     |V4  a|V10 a|
343.#348 V11   Use *  Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|V11 i|     |     |V4  a|V10 a|
344.#349 r8    Fixd   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V10 a|
344.#350 I84   Def    Alloc r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|I84 a|     |     |V4  a|V10 a|
347.#351 rdx   Fixd   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|I84 a|     |     |V4  a|V10 a|
347.#352 V10   Use *  Copy  rdx  |     |     |V10 i|V3  a|V29 a|V2  a|V1  a|I84 a|     |     |V4  a|V10 i|
348.#353 rdx   Fixd   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|I84 a|     |     |V4  a|     |
348.#354 I85   Def    Alloc rdx  |     |     |I85 a|V3  a|V29 a|V2  a|V1  a|I84 a|     |     |V4  a|     |
350.#355 C86   Def    Alloc rcx  |     |C86 a|I85 a|V3  a|V29 a|V2  a|V1  a|I84 a|     |     |V4  a|     |
351.#356 rcx   Fixd   Keep  rcx  |     |C86 a|I85 a|V3  a|V29 a|V2  a|V1  a|I84 a|     |     |V4  a|     |
351.#357 C86   Use *  Keep  rcx  |     |C86 i|I85 a|V3  a|V29 a|V2  a|V1  a|I84 a|     |     |V4  a|     |
352.#358 rcx   Fixd   Keep  rcx  |     |     |I85 a|V3  a|V29 a|V2  a|V1  a|I84 a|     |     |V4  a|     |
352.#359 I87   Def    Alloc rcx  |     |I87 a|I85 a|V3  a|V29 a|V2  a|V1  a|I84 a|     |     |V4  a|     |
353.#360 r8    Fixd   Keep  r8   |     |I87 a|I85 a|V3  a|V29 a|V2  a|V1  a|I84 a|     |     |V4  a|     |
353.#361 I84   Use *  Keep  r8   |     |I87 a|I85 a|V3  a|V29 a|V2  a|V1  a|I84 i|     |     |V4  a|     |
353.#362 rdx   Fixd   Keep  rdx  |     |I87 a|I85 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
353.#363 I85   Use *  Keep  rdx  |     |I87 a|I85 i|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
353.#364 rcx   Fixd   Keep  rcx  |     |I87 a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
353.#365 I87   Use *  Keep  rcx  |     |I87 i|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
354.#366 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
354.#367 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
354.#368 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
354.#369 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
354.#370 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
354.#371 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
354.#372 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
354.#373 rax   Fixd   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
354.#374 I88   Def    Alloc rax  |I88 a|     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
355.#375 I88   Use *  Keep  rax  |I88 i|     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|     |
356.#376 V5    Def    Alloc r15  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
360.#377 C89   Def    Alloc rcx  |     |C89 a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
361.#378 rcx   Fixd   Keep  rcx  |     |C89 a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
361.#379 C89   Use *  Keep  rcx  |     |C89 i|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
362.#380 rcx   Fixd   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
362.#381 I90   Def    Alloc rcx  |     |I90 a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
364.#382 C91   Def    Alloc rdx  |     |I90 a|C91 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
365.#383 rdx   Fixd   Keep  rdx  |     |I90 a|C91 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
365.#384 C91   Use *  Keep  rdx  |     |I90 a|C91 i|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
366.#385 rdx   Fixd   Keep  rdx  |     |I90 a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
366.#386 I92   Def    Alloc rdx  |     |I90 a|I92 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
367.#387 rcx   Fixd   Keep  rcx  |     |I90 a|I92 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
367.#388 I90   Use *  Keep  rcx  |     |I90 i|I92 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
367.#389 rdx   Fixd   Keep  rdx  |     |     |I92 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
367.#390 I92   Use *  Keep  rdx  |     |     |I92 i|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
368.#391 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
368.#392 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
368.#393 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
368.#394 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
368.#395 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
368.#396 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
368.#397 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
368.#398 rax   Fixd   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
368.#399 I93   Def *  Alloc rax  |I93 i|     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
370.#400 C94   Def    Alloc rdx  |     |     |C94 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
371.#401 C94   Use *  Keep  rdx  |     |     |C94 i|V3  a|V29 a|V2  a|V1  a|     |     |     |V4  a|V5  a|
372.#402 I95   Def    Alloc r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |I95 a|     |V4  a|V5  a|
373.#403 I95   Use *  Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |I95 i|     |V4  a|V5  a|
374.#404 V23   Def    Alloc r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |V23 a|     |V4  a|V5  a|
376.#405 C96   Def    Alloc rdx  |     |     |C96 a|V3  a|V29 a|V2  a|V1  a|     |V23 a|     |V4  a|V5  a|
377.#406 C96   Use *  Keep  rdx  |     |     |C96 i|V3  a|V29 a|V2  a|V1  a|     |V23 a|     |V4  a|V5  a|
378.#407 I97   Def    Alloc rdx  |     |     |I97 a|V3  a|V29 a|V2  a|V1  a|     |V23 a|     |V4  a|V5  a|
379.#408 rdx   Fixd   Keep  rdx  |     |     |I97 a|V3  a|V29 a|V2  a|V1  a|     |V23 a|     |V4  a|V5  a|
379.#409 I97   Use *  Keep  rdx  |     |     |I97 i|V3  a|V29 a|V2  a|V1  a|     |V23 a|     |V4  a|V5  a|
380.#410 rdx   Fixd   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |V23 a|     |V4  a|V5  a|
380.#411 I98   Def    Alloc rdx  |     |     |I98 a|V3  a|V29 a|V2  a|V1  a|     |V23 a|     |V4  a|V5  a|
383.#412 rcx   Fixd   Keep  rcx  |     |     |I98 a|V3  a|V29 a|V2  a|V1  a|     |V23 a|     |V4  a|V5  a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r12  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
383.#413 V4    Use *  Copy  rcx  |     |V4  i|I98 a|V3  a|V29 a|V2  a|V1  a|     |V23 a|     |V4  i|V5  a|
384.#414 rcx   Fixd   Keep  rcx  |     |     |I98 a|V3  a|V29 a|V2  a|V1  a|     |V23 a|     |     |V5  a|
384.#415 I99   Def    Alloc rcx  |     |I99 a|I98 a|V3  a|V29 a|V2  a|V1  a|     |V23 a|     |     |V5  a|
387.#416 r9    Fixd   Keep  r9   |     |I99 a|I98 a|V3  a|V29 a|V2  a|V1  a|     |V23 a|     |     |V5  a|
387.#417 V23   Use *  Keep  r9   |     |I99 a|I98 a|V3  a|V29 a|V2  a|V1  a|     |V23 i|     |     |V5  a|
388.#418 r9    Fixd   Keep  r9   |     |I99 a|I98 a|V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
388.#419 I100  Def    Alloc r9   |     |I99 a|I98 a|V3  a|V29 a|V2  a|V1  a|     |I100a|     |     |V5  a|
390.#420 C101  Def    Alloc r8   |     |I99 a|I98 a|V3  a|V29 a|V2  a|V1  a|C101a|I100a|     |     |V5  a|
391.#421 r8    Fixd   Keep  r8   |     |I99 a|I98 a|V3  a|V29 a|V2  a|V1  a|C101a|I100a|     |     |V5  a|
391.#422 C101  Use *  Keep  r8   |     |I99 a|I98 a|V3  a|V29 a|V2  a|V1  a|C101i|I100a|     |     |V5  a|
392.#423 r8    Fixd   Keep  r8   |     |I99 a|I98 a|V3  a|V29 a|V2  a|V1  a|     |I100a|     |     |V5  a|
392.#424 I102  Def    Alloc r8   |     |I99 a|I98 a|V3  a|V29 a|V2  a|V1  a|I102a|I100a|     |     |V5  a|
393.#425 rdx   Fixd   Keep  rdx  |     |I99 a|I98 a|V3  a|V29 a|V2  a|V1  a|I102a|I100a|     |     |V5  a|
393.#426 I98   Use *  Keep  rdx  |     |I99 a|I98 i|V3  a|V29 a|V2  a|V1  a|I102a|I100a|     |     |V5  a|
393.#427 rcx   Fixd   Keep  rcx  |     |I99 a|     |V3  a|V29 a|V2  a|V1  a|I102a|I100a|     |     |V5  a|
393.#428 I99   Use *  Keep  rcx  |     |I99 i|     |V3  a|V29 a|V2  a|V1  a|I102a|I100a|     |     |V5  a|
393.#429 r9    Fixd   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|I102a|I100a|     |     |V5  a|
393.#430 I100  Use *  Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|I102a|I100i|     |     |V5  a|
393.#431 r8    Fixd   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|I102a|     |     |     |V5  a|
393.#432 I102  Use *  Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|I102i|     |     |     |V5  a|
394.#433 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
394.#434 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
394.#435 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
394.#436 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
394.#437 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
394.#438 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
394.#439 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
394.#440 rax   Fixd   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
394.#441 I103  Def    Alloc rax  |I103a|     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
395.#442 I103  Use *  Keep  rax  |I103i|     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
396.#443 V24   Def    Alloc r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|V24 a|     |     |     |V5  a|
401.#444 V1    Use    Keep  rdi  |     |     |     |V3  a|V29 a|V2  a|V1  a|V24 a|     |     |     |V5  a|
402.#445 I104  Def    Alloc rdx  |     |     |I104a|V3  a|V29 a|V2  a|V1  a|V24 a|     |     |     |V5  a|
403.#446 rdx   Fixd   Keep  rdx  |     |     |I104a|V3  a|V29 a|V2  a|V1  a|V24 a|     |     |     |V5  a|
403.#447 I104  Use *  Keep  rdx  |     |     |I104i|V3  a|V29 a|V2  a|V1  a|V24 a|     |     |     |V5  a|
404.#448 rdx   Fixd   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|V24 a|     |     |     |V5  a|
404.#449 I105  Def    Alloc rdx  |     |     |I105a|V3  a|V29 a|V2  a|V1  a|V24 a|     |     |     |V5  a|
407.#450 rcx   Fixd   Keep  rcx  |     |     |I105a|V3  a|V29 a|V2  a|V1  a|V24 a|     |     |     |V5  a|
407.#451 V1    Use    Copy  rcx  |     |V1  a|I105a|V3  a|V29 a|V2  a|V1  a|V24 a|     |     |     |V5  a|
408.#452 rcx   Fixd   Keep  rcx  |     |     |I105a|V3  a|V29 a|V2  a|V1  a|V24 a|     |     |     |V5  a|
408.#453 I106  Def    Alloc rcx  |     |I106a|I105a|V3  a|V29 a|V2  a|V1  a|V24 a|     |     |     |V5  a|
411.#454 r8    Fixd   Keep  r8   |     |I106a|I105a|V3  a|V29 a|V2  a|V1  a|V24 a|     |     |     |V5  a|
411.#455 V24   Use *  Keep  r8   |     |I106a|I105a|V3  a|V29 a|V2  a|V1  a|V24 i|     |     |     |V5  a|
412.#456 r8    Fixd   Keep  r8   |     |I106a|I105a|V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
412.#457 I107  Def    Alloc r8   |     |I106a|I105a|V3  a|V29 a|V2  a|V1  a|I107a|     |     |     |V5  a|
413.#458 rdx   Fixd   Keep  rdx  |     |I106a|I105a|V3  a|V29 a|V2  a|V1  a|I107a|     |     |     |V5  a|
413.#459 I105  Use *  Keep  rdx  |     |I106a|I105i|V3  a|V29 a|V2  a|V1  a|I107a|     |     |     |V5  a|
413.#460 rcx   Fixd   Keep  rcx  |     |I106a|     |V3  a|V29 a|V2  a|V1  a|I107a|     |     |     |V5  a|
413.#461 I106  Use *  Keep  rcx  |     |I106i|     |V3  a|V29 a|V2  a|V1  a|I107a|     |     |     |V5  a|
413.#462 r8    Fixd   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|I107a|     |     |     |V5  a|
413.#463 I107  Use *  Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|I107i|     |     |     |V5  a|
414.#464 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
414.#465 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
414.#466 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
414.#467 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
414.#468 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
414.#469 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
414.#470 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
418.#471 C108  Def    Alloc rcx  |     |C108a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
419.#472 C108  Use *  Keep  rcx  |     |C108i|     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V5  a|
420.#473 I109  Def    Alloc r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|I109a|     |     |     |V5  a|
421.#474 I109  Use *  Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|I109i|     |     |     |V5  a|
422.#475 V12   Def    Alloc r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|V12 a|     |     |     |V5  a|
425.#476 V5    Use *  Keep  r15  |     |     |     |V3  a|V29 a|V2  a|V1  a|V12 a|     |     |     |V5  i|
426.#477 V14   Def    Alloc r15  |     |     |     |V3  a|V29 a|V2  a|V1  a|V12 a|     |     |     |V14 a|
429.#478 V12   Use *  Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|V12 i|     |     |     |V14 a|
430.#479 V15   Def    Alloc r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|V15 a|     |     |     |V14 a|
435.#480 V15   Use    Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|V15 a|     |     |     |V14 a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r12  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
439.#481 BB11 PredBB10           |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V14 a|
442.#482 C110  Def    Alloc rcx  |     |C110a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V14 a|
443.#483 rcx   Fixd   Keep  rcx  |     |C110a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V14 a|
443.#484 C110  Use *  Keep  rcx  |     |C110i|     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V14 a|
444.#485 rcx   Fixd   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V14 a|
444.#486 I111  Def    Alloc rcx  |     |I111a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V14 a|
445.#487 rcx   Fixd   Keep  rcx  |     |I111a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V14 a|
445.#488 I111  Use *  Keep  rcx  |     |I111i|     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V14 a|
446.#489 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V14 a|
446.#490 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V14 a|
446.#491 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V14 a|
446.#492 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V14 a|
446.#493 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V14 a|
446.#494 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V14 a|
446.#495 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V14 a|
446.#496 rax   Fixd   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V14 a|
446.#497 I112  Def    Alloc rax  |I112a|     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V14 a|
447.#498 I112  Use *  Keep  rax  |I112i|     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V14 a|
448.#499 V16   Def    Alloc r14  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
450.#500 C113  Def    Alloc rdx  |     |     |C113a|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
451.#501 C113  Use *  Keep  rdx  |     |     |C113i|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
452.#502 I114  Def    Alloc rdx  |     |     |I114a|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
453.#503 I114  Use *  Keep  rdx  |     |     |I114i|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
454.#504 V25   Def    Alloc rdx  |     |     |V25 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
459.#505 V25   Use    Keep  rdx  |     |     |V25 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r12  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
463.#506 BB12 PredBB11           |     |     |V25 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
467.#507 V16   Use    Keep  r14  |     |     |V25 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
468.#508 I115  Def    Alloc rcx  |     |I115a|V25 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
471.#509 rcx   Fixd   Keep  rcx  |     |I115a|V25 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
471.#510 I115  Use *  Keep  rcx  |     |I115i|V25 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
471.#511 rdx   Fixd   Keep  rdx  |     |     |V25 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
471.#512 V25   Use *  Keep  rdx  |     |     |V25 i|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
472.#513 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
472.#514 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
472.#515 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
472.#516 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
472.#517 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
472.#518 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
472.#519 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
472.#520 mm0   Kill   Keep  mm0  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
472.#521 mm1   Kill   Keep  mm1  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
472.#522 mm2   Kill   Keep  mm2  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
472.#523 mm3   Kill   Keep  mm3  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
472.#524 mm4   Kill   Keep  mm4  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
472.#525 mm5   Kill   Keep  mm5  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
478.#526 C116  Def    Alloc rdx  |     |     |C116a|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
479.#527 V16   Use    Keep  r14  |     |     |C116a|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
479.#528 C116  Use *  Keep  rdx  |     |     |C116i|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
484.#529 C117  Def    Alloc rcx  |     |C117a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
487.#530 rcx   Fixd   Keep  rcx  |     |C117a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
487.#531 C117  Use *  Keep  rcx  |     |C117i|     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
487.#532 rdx   Fixd   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
487.#533 V16   Use    Copy  rdx  |     |     |V16 a|V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
488.#534 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
488.#535 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
488.#536 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
488.#537 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
488.#538 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
488.#539 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
488.#540 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
488.#541 mm0   Kill   Keep  mm0  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
488.#542 mm1   Kill   Keep  mm1  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
488.#543 mm2   Kill   Keep  mm2  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
488.#544 mm3   Kill   Keep  mm3  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
488.#545 mm4   Kill   Keep  mm4  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
488.#546 mm5   Kill   Keep  mm5  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 a|V14 a|
491.#547 V16   Use *  Keep  r14  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |V16 i|V14 a|
492.#548 V15   Def    Alloc r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|V15 a|     |     |     |V14 a|
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r12  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
493.#549 BB13 PredBB10           |     |     |     |V3  a|V29 a|V2  a|V1  a|V15 a|     |     |     |V14 a|
497.#550 r8    Fixd   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|V15 a|     |     |     |V14 a|
497.#551 V15   Use *  Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|V15 i|     |     |     |V14 a|
498.#552 r8    Fixd   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |V14 a|
498.#553 I118  Def    Alloc r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|I118a|     |     |     |V14 a|
501.#554 rdx   Fixd   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|I118a|     |     |     |V14 a|
501.#555 V14   Use *  Copy  rdx  |     |     |V14 i|V3  a|V29 a|V2  a|V1  a|I118a|     |     |     |V14 i|
502.#556 rdx   Fixd   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|I118a|     |     |     |     |
502.#557 I119  Def    Alloc rdx  |     |     |I119a|V3  a|V29 a|V2  a|V1  a|I118a|     |     |     |     |
504.#558 C120  Def    Alloc rcx  |     |C120a|I119a|V3  a|V29 a|V2  a|V1  a|I118a|     |     |     |     |
505.#559 rcx   Fixd   Keep  rcx  |     |C120a|I119a|V3  a|V29 a|V2  a|V1  a|I118a|     |     |     |     |
505.#560 C120  Use *  Keep  rcx  |     |C120i|I119a|V3  a|V29 a|V2  a|V1  a|I118a|     |     |     |     |
506.#561 rcx   Fixd   Keep  rcx  |     |     |I119a|V3  a|V29 a|V2  a|V1  a|I118a|     |     |     |     |
506.#562 I121  Def    Alloc rcx  |     |I121a|I119a|V3  a|V29 a|V2  a|V1  a|I118a|     |     |     |     |
507.#563 r8    Fixd   Keep  r8   |     |I121a|I119a|V3  a|V29 a|V2  a|V1  a|I118a|     |     |     |     |
507.#564 I118  Use *  Keep  r8   |     |I121a|I119a|V3  a|V29 a|V2  a|V1  a|I118i|     |     |     |     |
507.#565 rdx   Fixd   Keep  rdx  |     |I121a|I119a|V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
507.#566 I119  Use *  Keep  rdx  |     |I121a|I119i|V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
507.#567 rcx   Fixd   Keep  rcx  |     |I121a|     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
507.#568 I121  Use *  Keep  rcx  |     |I121i|     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
508.#569 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
508.#570 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
508.#571 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
508.#572 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
508.#573 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
508.#574 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
508.#575 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
508.#576 rax   Fixd   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
508.#577 I122  Def    Alloc rax  |I122a|     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
509.#578 I122  Use *  Keep  rax  |I122i|     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
510.#579 V27   Def    Alloc r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|V27 a|     |     |     |     |
515.#580 V1    Use    Keep  rdi  |     |     |     |V3  a|V29 a|V2  a|V1  a|V27 a|     |     |     |     |
516.#581 I123  Def    Alloc rdx  |     |     |I123a|V3  a|V29 a|V2  a|V1  a|V27 a|     |     |     |     |
517.#582 rdx   Fixd   Keep  rdx  |     |     |I123a|V3  a|V29 a|V2  a|V1  a|V27 a|     |     |     |     |
517.#583 I123  Use *  Keep  rdx  |     |     |I123i|V3  a|V29 a|V2  a|V1  a|V27 a|     |     |     |     |
518.#584 rdx   Fixd   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|V27 a|     |     |     |     |
518.#585 I124  Def    Alloc rdx  |     |     |I124a|V3  a|V29 a|V2  a|V1  a|V27 a|     |     |     |     |
521.#586 rcx   Fixd   Keep  rcx  |     |     |I124a|V3  a|V29 a|V2  a|V1  a|V27 a|     |     |     |     |
521.#587 V1    Use    Copy  rcx  |     |V1  a|I124a|V3  a|V29 a|V2  a|V1  a|V27 a|     |     |     |     |
522.#588 rcx   Fixd   Keep  rcx  |     |     |I124a|V3  a|V29 a|V2  a|V1  a|V27 a|     |     |     |     |
522.#589 I125  Def    Alloc rcx  |     |I125a|I124a|V3  a|V29 a|V2  a|V1  a|V27 a|     |     |     |     |
525.#590 r8    Fixd   Keep  r8   |     |I125a|I124a|V3  a|V29 a|V2  a|V1  a|V27 a|     |     |     |     |
525.#591 V27   Use *  Keep  r8   |     |I125a|I124a|V3  a|V29 a|V2  a|V1  a|V27 i|     |     |     |     |
526.#592 r8    Fixd   Keep  r8   |     |I125a|I124a|V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
526.#593 I126  Def    Alloc r8   |     |I125a|I124a|V3  a|V29 a|V2  a|V1  a|I126a|     |     |     |     |
527.#594 rdx   Fixd   Keep  rdx  |     |I125a|I124a|V3  a|V29 a|V2  a|V1  a|I126a|     |     |     |     |
527.#595 I124  Use *  Keep  rdx  |     |I125a|I124i|V3  a|V29 a|V2  a|V1  a|I126a|     |     |     |     |
527.#596 rcx   Fixd   Keep  rcx  |     |I125a|     |V3  a|V29 a|V2  a|V1  a|I126a|     |     |     |     |
527.#597 I125  Use *  Keep  rcx  |     |I125i|     |V3  a|V29 a|V2  a|V1  a|I126a|     |     |     |     |
527.#598 r8    Fixd   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|I126a|     |     |     |     |
527.#599 I126  Use *  Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|I126i|     |     |     |     |
528.#600 rax   Kill   Keep  rax  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
528.#601 rcx   Kill   Keep  rcx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
528.#602 rdx   Kill   Keep  rdx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
528.#603 r8    Kill   Keep  r8   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
528.#604 r9    Kill   Keep  r9   |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
528.#605 r10   Kill   Keep  r10  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
528.#606 r11   Kill   Keep  r11  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r12  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
529.#607 BB14 PredBB4            |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
537.#608 V3    Use *  Keep  rbx  |     |     |     |V3  i|V29 a|V2  a|V1  a|     |     |     |     |     |
538.#609 I127  Def    Alloc rbx  |     |     |     |I127a|V29 a|V2  a|V1  a|     |     |     |     |     |
539.#610 I127  Use *  Keep  rbx  |     |     |     |I127i|V29 a|V2  a|V1  a|     |     |     |     |     |
540.#611 V3    Def    Alloc rbx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
547.#612 V29   Use    Keep  rbp  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
547.#613 V3    Use    Keep  rbx  |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
551.#614 V3    ExpU              |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
551.#615 V2    ExpU              |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
551.#616 V29   ExpU              |     |     |     |V3  a|V29 a|V2  a|V1  a|     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r12  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
551.#617 BB15 PredBB14           |     |     |     |     |     |     |V1  a|     |     |     |     |     |
557.#618 rdx   Fixd   Keep  rdx  |     |     |     |     |     |     |V1  a|     |     |     |     |     |
557.#619 V1    Use    Copy  rdx  |     |     |V1  a|     |     |     |V1  a|     |     |     |     |     |
558.#620 rdx   Fixd   Keep  rdx  |     |     |     |     |     |     |V1  a|     |     |     |     |     |
558.#621 I128  Def    Alloc rdx  |     |     |I128a|     |     |     |V1  a|     |     |     |     |     |
560.#622 C129  Def    Alloc rcx  |     |C129a|I128a|     |     |     |V1  a|     |     |     |     |     |
561.#623 rcx   Fixd   Keep  rcx  |     |C129a|I128a|     |     |     |V1  a|     |     |     |     |     |
561.#624 C129  Use *  Keep  rcx  |     |C129i|I128a|     |     |     |V1  a|     |     |     |     |     |
562.#625 rcx   Fixd   Keep  rcx  |     |     |I128a|     |     |     |V1  a|     |     |     |     |     |
562.#626 I130  Def    Alloc rcx  |     |I130a|I128a|     |     |     |V1  a|     |     |     |     |     |
563.#627 rdx   Fixd   Keep  rdx  |     |I130a|I128a|     |     |     |V1  a|     |     |     |     |     |
563.#628 I128  Use *  Keep  rdx  |     |I130a|I128i|     |     |     |V1  a|     |     |     |     |     |
563.#629 rcx   Fixd   Keep  rcx  |     |I130a|     |     |     |     |V1  a|     |     |     |     |     |
563.#630 I130  Use *  Keep  rcx  |     |I130i|     |     |     |     |V1  a|     |     |     |     |     |
564.#631 rax   Kill   Keep  rax  |     |     |     |     |     |     |V1  a|     |     |     |     |     |
564.#632 rcx   Kill   Keep  rcx  |     |     |     |     |     |     |V1  a|     |     |     |     |     |
564.#633 rdx   Kill   Keep  rdx  |     |     |     |     |     |     |V1  a|     |     |     |     |     |
564.#634 r8    Kill   Keep  r8   |     |     |     |     |     |     |V1  a|     |     |     |     |     |
564.#635 r9    Kill   Keep  r9   |     |     |     |     |     |     |V1  a|     |     |     |     |     |
564.#636 r10   Kill   Keep  r10  |     |     |     |     |     |     |V1  a|     |     |     |     |     |
564.#637 r11   Kill   Keep  r11  |     |     |     |     |     |     |V1  a|     |     |     |     |     |
566.#638 C131  Def    Alloc rdx  |     |     |C131a|     |     |     |V1  a|     |     |     |     |     |
567.#639 C131  Use *  Keep  rdx  |     |     |C131i|     |     |     |V1  a|     |     |     |     |     |
568.#640 I132  Def    Alloc rdx  |     |     |I132a|     |     |     |V1  a|     |     |     |     |     |
569.#641 rdx   Fixd   Keep  rdx  |     |     |I132a|     |     |     |V1  a|     |     |     |     |     |
569.#642 I132  Use *  Keep  rdx  |     |     |I132i|     |     |     |V1  a|     |     |     |     |     |
570.#643 rdx   Fixd   Keep  rdx  |     |     |     |     |     |     |V1  a|     |     |     |     |     |
570.#644 I133  Def    Alloc rdx  |     |     |I133a|     |     |     |V1  a|     |     |     |     |     |
572.#645 C134  Def    Alloc rcx  |     |C134a|I133a|     |     |     |V1  a|     |     |     |     |     |
573.#646 rcx   Fixd   Keep  rcx  |     |C134a|I133a|     |     |     |V1  a|     |     |     |     |     |
573.#647 C134  Use *  Keep  rcx  |     |C134i|I133a|     |     |     |V1  a|     |     |     |     |     |
574.#648 rcx   Fixd   Keep  rcx  |     |     |I133a|     |     |     |V1  a|     |     |     |     |     |
574.#649 I135  Def    Alloc rcx  |     |I135a|I133a|     |     |     |V1  a|     |     |     |     |     |
576.#650 C136  Def    Alloc r8   |     |I135a|I133a|     |     |     |V1  a|C136a|     |     |     |     |
577.#651 r8    Fixd   Keep  r8   |     |I135a|I133a|     |     |     |V1  a|C136a|     |     |     |     |
577.#652 C136  Use *  Keep  r8   |     |I135a|I133a|     |     |     |V1  a|C136i|     |     |     |     |
578.#653 r8    Fixd   Keep  r8   |     |I135a|I133a|     |     |     |V1  a|     |     |     |     |     |
578.#654 I137  Def    Alloc r8   |     |I135a|I133a|     |     |     |V1  a|I137a|     |     |     |     |
579.#655 rdx   Fixd   Keep  rdx  |     |I135a|I133a|     |     |     |V1  a|I137a|     |     |     |     |
579.#656 I133  Use *  Keep  rdx  |     |I135a|I133i|     |     |     |V1  a|I137a|     |     |     |     |
579.#657 rcx   Fixd   Keep  rcx  |     |I135a|     |     |     |     |V1  a|I137a|     |     |     |     |
579.#658 I135  Use *  Keep  rcx  |     |I135i|     |     |     |     |V1  a|I137a|     |     |     |     |
579.#659 r8    Fixd   Keep  r8   |     |     |     |     |     |     |V1  a|I137a|     |     |     |     |
579.#660 I137  Use *  Keep  r8   |     |     |     |     |     |     |V1  a|I137i|     |     |     |     |
580.#661 rax   Kill   Keep  rax  |     |     |     |     |     |     |V1  a|     |     |     |     |     |
580.#662 rcx   Kill   Keep  rcx  |     |     |     |     |     |     |V1  a|     |     |     |     |     |
580.#663 rdx   Kill   Keep  rdx  |     |     |     |     |     |     |V1  a|     |     |     |     |     |
580.#664 r8    Kill   Keep  r8   |     |     |     |     |     |     |V1  a|     |     |     |     |     |
580.#665 r9    Kill   Keep  r9   |     |     |     |     |     |     |V1  a|     |     |     |     |     |
580.#666 r10   Kill   Keep  r10  |     |     |     |     |     |     |V1  a|     |     |     |     |     |
580.#667 r11   Kill   Keep  r11  |     |     |     |     |     |     |V1  a|     |     |     |     |     |
580.#668 rax   Fixd   Keep  rax  |     |     |     |     |     |     |V1  a|     |     |     |     |     |
580.#669 I138  Def *  Alloc rax  |I138i|     |     |     |     |     |V1  a|     |     |     |     |     |
585.#670 rax   Fixd   Keep  rax  |     |     |     |     |     |     |V1  a|     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r12  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
585.#671 V1    Use *  Copy  rax  |V1  i|     |     |     |     |     |V1  i|     |     |     |     |     |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
Loc RP#  Name  Type  Action Reg  |rax  |rcx  |rdx  |rbx  |rbp  |rsi  |rdi  |r8   |r9   |r12  |r14  |r15  |
---------------------------------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
587.#672 BB16 PredBB8            |     |     |     |     |     |     |     |     |     |     |     |     |
590.#673 rax   Kill   Keep  rax  |     |     |     |     |     |     |     |     |     |     |     |     |
590.#674 rcx   Kill   Keep  rcx  |     |     |     |     |     |     |     |     |     |     |     |     |
590.#675 rdx   Kill   Keep  rdx  |     |     |     |     |     |     |     |     |     |     |     |     |
590.#676 r8    Kill   Keep  r8   |     |     |     |     |     |     |     |     |     |     |     |     |
590.#677 r9    Kill   Keep  r9   |     |     |     |     |     |     |     |     |     |     |     |     |
590.#678 r10   Kill   Keep  r10  |     |     |     |     |     |     |     |     |     |     |     |     |
590.#679 r11   Kill   Keep  r11  |     |     |     |     |     |     |     |     |     |     |     |     |

Recording the maximum number of concurrent spills:

----------
LSRA Stats
----------
Total Tracked Vars:  27
Total Reg Cand Vars: 25
Total number of Intervals: 138
Total number of RefPositions: 679
Total Spill Count: 0    Weighted: 0.000000
Total CopyReg Count: 0   Weighted: 0.000000
Total ResolutionMov Count: 0    Weighted: 0.000000
Total number of split edges: 0
Total Number of spill temps created: 0

TUPLE STYLE DUMP WITH REGISTER ASSIGNMENTS
Incoming Parameters:  V00(rcx=>rsi)
BB01 [000..01D) -> BB15 (cond), preds={} succs={BB02,BB15}
=====
  N003. rdx             =  CNS_INT(h) 0xD1FFAB1E "Started enumerating project paths."
  N005. rdx             =  IND      ; rdx
  N007. rdx             =  PUTARG_REG; rdx
  N009. rcx             =  CNS_INT(h) 0xd1ffab1e method
  N011. rcx             =  PUTARG_REG; rcx
  N013. r8              =  CNS_INT   2
  N015. r8              =  PUTARG_REG; r8
* N017. rax             =  CALL     ; rdx,rcx,r8
  N019.                    IL_OFFSET IL offset: 0xc
  N021. rcx             =  CNS_INT(h) 0xd1ffab1e token
  N023. rcx             =  PUTARG_REG; rcx
  N025. rax             =  CALL help; rcx
* N027.                    V07(rdi); rax
  N029.                    V07(rdi)
  N031. rcx             =  PUTARG_REG; rdi
  N033. rdx             =  CNS_INT   100
  N035. rdx             =  PUTARG_REG; rdx
  N037.                    CALL     ; rcx,rdx
  N039.                    IL_OFFSET IL offset: 0x13
  N041.                    V07(rdi*)
* N043.                    V01(rdi); rdi*
  N045.                    IL_OFFSET IL offset: 0x14
  N047.                    V00(rsi*)
* N049.                    V02(rsi); rsi*
  N051.                    IL_OFFSET IL offset: 0x16
  N053. rbx             =  CNS_INT   0
* N055.                    V03(rbx); rbx
  N057.                    IL_OFFSET IL offset: 0xaa
  N059.                    V02(rsi)
  N061. STK             =  LEA(b+8) ; rsi
  N063. rbp             =  IND      ; STK
* N065.                    V29(rbp); rbp
  N067.                    V29(rbp)
  N069.                    CNS_INT   0
  N071.                    LE       ; rbp
  N073.                    JTRUE    
Var=Reg end of BB01: V01=rdi V03=rbx V02=rsi V29=rbp 

BB02 [01D..02E) -> BB07 (cond), preds={BB01,BB14} succs={BB03,BB07}
=====
Predecessor for variable locations: BB01
Var=Reg beg of BB02: V01=rdi V03=rbx V02=rsi V29=rbp 
  N077.                    IL_OFFSET IL offset: 0x1d
  N079.                    V02(rsi)
  N081.                    V03(rbx)
  N083. rdx             =  CAST     ; rbx
  N085. STK             =  LEA(b+(i*8)+16); rsi,rdx
  N087. r14             =  IND      ; STK
* N089.                    V04(r14); r14
  N091.                    IL_OFFSET IL offset: 0x21
  N093.                    V04(r14)
  N095.                    NULLCHECK; r14
  N097. rdx             =  CNS_INT(h) 0xD1FFAB1E ".csproj"
  N099. rdx             =  IND      ; rdx
  N101. rdx             =  PUTARG_REG; rdx
  N103.                    V04(r14)
  N105. rcx             =  PUTARG_REG; r14
  N107. r8              =  CNS_INT   0
  N109. r8              =  PUTARG_REG; r8
  N111. rax             =  CALL     ; rdx,rcx,r8
  N113.                    CNS_INT   0
  N115.                    EQ       ; rax
  N117.                    JTRUE    
Var=Reg end of BB02: V01=rdi V04=r14 V03=rbx V02=rsi V29=rbp 

BB03 [02E..037) -> BB05 (cond), preds={BB02} succs={BB04,BB05}
=====
Predecessor for variable locations: BB02
Var=Reg beg of BB03: V01=rdi V04=r14 V03=rbx V02=rsi V29=rbp 
  N121.                    IL_OFFSET IL offset: 0x2e
  N123.                    V01(STK)
  N125.                    LEA(b+20)
  N127.                    IND      
  N129.                    CNS_INT   1
  N131.                    ADD      
  N133.                    V01(rdi)
  N135. STK             =  LEA(b+20); rdi
  N137.                    STOREIND ; STK
  N139.                    IL_OFFSET IL offset: 0x2e
  N141.                    V01(rdi)
  N143. STK             =  LEA(b+8) ; rdi
  N145. rcx             =  IND      ; STK
* N147.                    V18(rcx); rcx
  N149.                    IL_OFFSET IL offset: 0x2e
  N151.                    V01(rdi)
  N153. STK             =  LEA(b+16); rdi
  N155. rdx             =  IND      ; STK
* N157.                    V19(rdx); rdx
  N159.                    IL_OFFSET IL offset: 0x2e
  N161.                    V18(rcx)
  N163. STK             =  LEA(b+8) ; rcx
  N165. STK             =  IND      ; STK
  N167.                    V19(rdx)
  N169.                    LE       ; STK,rdx
  N171.                    JTRUE    
Var=Reg end of BB03: V01=rdi V04=r14 V03=rbx V19=rdx V02=rsi V18=rcx V29=rbp 

BB04 [02E..02F) -> BB14 (always), preds={BB03} succs={BB14}
=====
Predecessor for variable locations: BB03
Var=Reg beg of BB04: V01=rdi V04=r14 V03=rbx V19=rdx V02=rsi V18=rcx V29=rbp 
  N175.                    IL_OFFSET IL offset: 0x2e
  N177.                    V19(rdx)
  N179.                    CNS_INT   1
  N181. r8              =  ADD      ; rdx
  N183.                    V01(rdi)
  N185. STK             =  LEA(b+16); rdi
  N187.                    STOREIND ; STK,r8
  N189.                    IL_OFFSET IL offset: 0x2e
  N191.                    V18(rcx*)
  N193. rcx             =  PUTARG_REG; rcx*
  N195.                    V19(rdx*)
  N197. rdx             =  PUTARG_REG; rdx*
  N199.                    V04(r14*)
  N201. r8              =  PUTARG_REG; r14*
  N203.                    CALL help; rcx,rdx,r8
Var=Reg end of BB04: V01=rdi V03=rbx V02=rsi V29=rbp 

BB05 [02E..02F) -> BB14 (always), preds={BB03} succs={BB14}
=====
Predecessor for variable locations: BB03
Var=Reg beg of BB05: V01=rdi V04=r14 V03=rbx V02=rsi V29=rbp 
  N207.                    IL_OFFSET IL offset: 0x2e
  N209.                    V01(rdi)
  N211. rcx             =  PUTARG_REG; rdi
  N213.                    V04(r14*)
  N215. rdx             =  PUTARG_REG; r14*
  N217.                    CALL     ; rcx,rdx
Var=Reg end of BB05: V01=rdi V03=rbx V02=rsi V29=rbp 

BB07 [037..04B) -> BB10 (cond), preds={BB02} succs={BB08,BB10}
=====
Predecessor for variable locations: BB02
Var=Reg beg of BB07: V01=rdi V04=r14 V03=rbx V02=rsi V29=rbp 
  N221.                    IL_OFFSET IL offset: 0x37
  N223. rcx             =  CNS_INT   1
  N225. rcx             =  PUTARG_REG; rcx
  N227. rax             =  CALL     ; rcx
* N229.                    V20(r9); rax
  N231. rdx             =  CNS_INT(h) 0xD1FFAB1E "*"
  N233. rdx             =  IND      ; rdx
  N235. rdx             =  PUTARG_REG; rdx
  N237.                    V04(r14)
  N239. rcx             =  PUTARG_REG; r14
  N241.                    V20(r9*)
  N243. r9              =  PUTARG_REG; r9*
  N245. r8              =  CNS_INT   2
  N247. r8              =  PUTARG_REG; r8
  N249. rax             =  CALL     ; rdx,rcx,r9,r8
* N251.                    V09(r15); rax
  N253. rcx             =  CNS_INT   0x7ffc7e4c17e0
  N255. rcx             =  PUTARG_REG; rcx
  N257. rdx             =  CNS_INT   35
  N259. rdx             =  PUTARG_REG; rdx
* N261. rax             =  CALL help; rcx,rdx
  N263. rcx             =  CNS_INT(h) 0xd1ffab1e static Fseq[<>9__2_0]
  N265. r8              =  IND      ; rcx
* N267.                    V08(r8); r8
  N269.                    V09(r15*)
* N271.                    V10(r15); r15*
  N273.                    V08(r8*)
* N275.                    V11(r8); r8*
  N277.                    V11(r8)
  N279.                    CNS_INT   null
  N281.                    NE       ; r8
  N283.                    JTRUE    
Var=Reg end of BB07: V01=rdi V04=r14 V03=rbx V11=r8 V02=rsi V29=rbp V10=r15 

BB08 [000..062) -> BB16 (cond), preds={BB07} succs={BB09,BB16}
=====
Predecessor for variable locations: BB07
Var=Reg beg of BB08: V01=rdi V04=r14 V03=rbx V02=rsi V29=rbp V10=r15 
  N287. rcx             =  CNS_INT(h) 0xd1ffab1e token
  N289. rcx             =  PUTARG_REG; rcx
  N291. rax             =  CALL help; rcx
* N293.                    V17(r12); rax
  N295. rdx             =  CNS_INT(h) 0xd1ffab1e static Fseq[<>9]
  N297. rdx             =  IND      ; rdx
* N299.                    V21(rdx); rdx
  N301.                    V21(rdx)
  N303.                    CNS_INT   null
  N305.                    EQ       ; rdx
  N307.                    JTRUE    
Var=Reg end of BB08: V01=rdi V04=r14 V17=r12 V03=rbx V21=rdx V02=rsi V29=rbp V10=r15 

BB09 [000..000), preds={BB08} succs={BB10}
=====
Predecessor for variable locations: BB08
Var=Reg beg of BB09: V01=rdi V04=r14 V17=r12 V03=rbx V21=rdx V02=rsi V29=rbp V10=r15 
  N311.                    V17(r12)
  N313. rcx             =  LEA(b+8) ; r12
  N315.                    V21(rdx*)
  N317.                    STOREIND ; rcx,rdx*
  N319.                    V17(r12)
  N321. STK             =  LEA(b+24); r12
  N323. rdx             =  CNS_INT(h) 0xd1ffab1e ftn
  N325.                    STOREIND ; STK,rdx
  N327.                    IL_OFFSET IL offset: 0x5c
  N329. rcx             =  CNS_INT(h) 0xd1ffab1e static Fseq[<>9__2_0]
  N331.                    V17(r12)
  N333.                    STOREIND ; rcx,r12
  N335.                    V17(r12*)
* N337.                    V11(r8); r12*
Var=Reg end of BB09: V01=rdi V04=r14 V03=rbx V11=r8 V02=rsi V29=rbp V10=r15 

BB10 [062..085) -> BB13 (cond), preds={BB07,BB09} succs={BB11,BB13}
=====
Predecessor for variable locations: BB07
Var=Reg beg of BB10: V01=rdi V04=r14 V03=rbx V11=r8 V02=rsi V29=rbp V10=r15 
  N341.                    V11(r8*)
  N343. r8              =  PUTARG_REG; r8*
  N345.                    V10(r15*)
  N347. rdx             =  PUTARG_REG; r15*
  N349. rcx             =  CNS_INT(h) 0xd1ffab1e method
  N351. rcx             =  PUTARG_REG; rcx
  N353. rax             =  CALL     ; r8,rdx,rcx
* N355.                    V05(r15); rax
  N357.                    IL_OFFSET IL offset: 0x69
  N359. rcx             =  CNS_INT   0x7ffc7e783cd8
  N361. rcx             =  PUTARG_REG; rcx
  N363. rdx             =  CNS_INT   40
  N365. rdx             =  PUTARG_REG; rdx
* N367. rax             =  CALL help; rcx,rdx
  N369. rdx             =  CNS_INT(h) 0xd1ffab1e static Fseq[<Compatible>k__BackingField]
  N371. r9              =  IND      ; rdx
* N373.                    V23(r9); r9
  N375. rdx             =  CNS_INT(h) 0xD1FFAB1E "*.csproj"
  N377. rdx             =  IND      ; rdx
  N379. rdx             =  PUTARG_REG; rdx
  N381.                    V04(r14*)
  N383. rcx             =  PUTARG_REG; r14*
  N385.                    V23(r9*)
  N387. r9              =  PUTARG_REG; r9*
  N389. r8              =  CNS_INT   1
  N391. r8              =  PUTARG_REG; r8
  N393. rax             =  CALL     ; rdx,rcx,r9,r8
* N395.                    V24(r8); rax
  N397.                    V01(rdi)
  N399. STK             =  LEA(b+16); rdi
  N401. rdx             =  IND      ; STK
  N403. rdx             =  PUTARG_REG; rdx
  N405.                    V01(rdi)
  N407. rcx             =  PUTARG_REG; rdi
  N409.                    V24(r8*)
  N411. r8              =  PUTARG_REG; r8*
  N413.                    CALL     ; rdx,rcx,r8
  N415.                    IL_OFFSET IL offset: 0x7a
  N417. rcx             =  CNS_INT(h) 0xd1ffab1e static Fseq[<>9__2_1]
  N419. r8              =  IND      ; rcx
* N421.                    V12(r8); r8
  N423.                    V05(r15*)
* N425.                    V14(r15); r15*
  N427.                    V12(r8*)
* N429.                    V15(r8); r8*
  N431.                    V15(r8)
  N433.                    CNS_INT   null
  N435.                    NE       ; r8
  N437.                    JTRUE    
Var=Reg end of BB10: V01=rdi V03=rbx V15=r8 V02=rsi V29=rbp V14=r15 

BB11 [000..09C) -> BB16 (cond), preds={BB10} succs={BB12,BB16}
=====
Predecessor for variable locations: BB10
Var=Reg beg of BB11: V01=rdi V03=rbx V02=rsi V29=rbp V14=r15 
  N441. rcx             =  CNS_INT(h) 0xd1ffab1e token
  N443. rcx             =  PUTARG_REG; rcx
  N445. rax             =  CALL help; rcx
* N447.                    V16(r14); rax
  N449. rdx             =  CNS_INT(h) 0xd1ffab1e static Fseq[<>9]
  N451. rdx             =  IND      ; rdx
* N453.                    V25(rdx); rdx
  N455.                    V25(rdx)
  N457.                    CNS_INT   null
  N459.                    EQ       ; rdx
  N461.                    JTRUE    
Var=Reg end of BB11: V01=rdi V16=r14 V03=rbx V25=rdx V02=rsi V29=rbp V14=r15 

BB12 [000..000), preds={BB11} succs={BB13}
=====
Predecessor for variable locations: BB11
Var=Reg beg of BB12: V01=rdi V16=r14 V03=rbx V25=rdx V02=rsi V29=rbp V14=r15 
  N465.                    V16(r14)
  N467. rcx             =  LEA(b+8) ; r14
  N469.                    V25(rdx*)
  N471.                    STOREIND ; rcx,rdx*
  N473.                    V16(r14)
  N475. STK             =  LEA(b+24); r14
  N477. rdx             =  CNS_INT(h) 0xd1ffab1e ftn
  N479.                    STOREIND ; STK,rdx
  N481.                    IL_OFFSET IL offset: 0x96
  N483. rcx             =  CNS_INT(h) 0xd1ffab1e static Fseq[<>9__2_1]
  N485.                    V16(r14)
  N487.                    STOREIND ; rcx,r14
  N489.                    V16(r14*)
* N491.                    V15(r8); r14*
Var=Reg end of BB12: V01=rdi V03=rbx V15=r8 V02=rsi V29=rbp V14=r15 

BB13 [09C..0A6), preds={BB10,BB12} succs={BB14}
=====
Predecessor for variable locations: BB10
Var=Reg beg of BB13: V01=rdi V03=rbx V15=r8 V02=rsi V29=rbp V14=r15 
  N495.                    V15(r8*)
  N497. r8              =  PUTARG_REG; r8*
  N499.                    V14(r15*)
  N501. rdx             =  PUTARG_REG; r15*
  N503. rcx             =  CNS_INT(h) 0xd1ffab1e method
  N505. rcx             =  PUTARG_REG; rcx
  N507. rax             =  CALL     ; r8,rdx,rcx
* N509.                    V27(r8); rax
  N511.                    V01(rdi)
  N513. STK             =  LEA(b+16); rdi
  N515. rdx             =  IND      ; STK
  N517. rdx             =  PUTARG_REG; rdx
  N519.                    V01(rdi)
  N521. rcx             =  PUTARG_REG; rdi
  N523.                    V27(r8*)
  N525. r8              =  PUTARG_REG; r8*
  N527.                    CALL     ; rdx,rcx,r8
Var=Reg end of BB13: V01=rdi V03=rbx V02=rsi V29=rbp 

BB14 [0A6..0B3) -> BB02 (cond), preds={BB04,BB05,BB13} succs={BB15,BB02}
=====
Predecessor for variable locations: BB04
Var=Reg beg of BB14: V01=rdi V03=rbx V02=rsi V29=rbp 
  N531.                    IL_OFFSET IL offset: 0xa6
  N533.                    V03(rbx*)
  N535.                    CNS_INT   1
  N537. rbx             =  ADD      ; rbx*
* N539.                    V03(rbx); rbx
  N541.                    IL_OFFSET IL offset: 0xaa
  N543.                    V29(rbp)
  N545.                    V03(rbx)
  N547.                    GT       ; rbp,rbx
  N549.                    JTRUE    
Var=Reg end of BB14: V01=rdi V03=rbx V02=rsi V29=rbp 

BB15 [0B3..0C7) (return), preds={BB01,BB14} succs={}
=====
Predecessor for variable locations: BB14
Var=Reg beg of BB15: V01=rdi 
  N553.                    IL_OFFSET IL offset: 0xb3
  N555.                    V01(rdi)
  N557. rdx             =  PUTARG_REG; rdi
  N559. rcx             =  CNS_INT(h) 0xd1ffab1e method
  N561. rcx             =  PUTARG_REG; rcx
  N563.                    CALL     ; rdx,rcx
  N565. rdx             =  CNS_INT(h) 0xD1FFAB1E "Enumerated and shuffled the project paths."
  N567. rdx             =  IND      ; rdx
  N569. rdx             =  PUTARG_REG; rdx
  N571. rcx             =  CNS_INT(h) 0xd1ffab1e method
  N573. rcx             =  PUTARG_REG; rcx
  N575. r8              =  CNS_INT   2
  N577. r8              =  PUTARG_REG; r8
* N579. rax             =  CALL     ; rdx,rcx,r8
  N581.                    IL_OFFSET IL offset: 0xc5
  N583.                    V01(rdi*)
  N585.                    RETURN   ; rdi*
Var=Reg end of BB15: none

BB16 [000..000) (throw), preds={BB08,BB11} succs={}
=====
Predecessor for variable locations: BB08
Var=Reg beg of BB16: none
  N589.                    CALL     
Var=Reg end of BB16: none




*************** Finishing PHASE Linear scan register alloc
*************** In genGenerateCode()

-----------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight    lp [IL range]     [jump]      [EH region]         [flags]
-----------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1       [000..01D)-> BB15 ( cond )                     i label target hascall gcsafe idxlen newobj LIR 
BB02 [0001]  2       BB01,BB14             4     0 [01D..02E)-> BB07 ( cond )                     i Loop label target hascall gcsafe idxlen nullcheck bwd bwd-target LIR 
BB03 [0002]  1       BB02                  2     0 [02E..037)-> BB05 ( cond )                     i gcsafe idxlen bwd LIR 
BB04 [0013]  1       BB03                  2     0 [02E..02F)-> BB14 (always)                     i hascall gcsafe bwd LIR 
BB05 [0014]  1       BB03                  2     0 [02E..02F)-> BB14 (always)                     i label target hascall gcsafe bwd LIR 
BB07 [0003]  1       BB02                  2     0 [037..04B)-> BB10 ( cond )                     i label target hascall gcsafe bwd LIR 
BB08 [0004]  1       BB07                  2     0 [000..062)-> BB16 ( cond )                     i hascall gcsafe newobj bwd LIR 
BB09 [0020]  1       BB08                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd LIR 
BB10 [0005]  2       BB07,BB09             2     0 [062..085)-> BB13 ( cond )                     i label target hascall gcsafe bwd LIR 
BB11 [0006]  1       BB10                  2     0 [000..09C)-> BB16 ( cond )                     i hascall gcsafe newobj bwd LIR 
BB12 [0028]  1       BB11                  2     0 [000..000)                                     i internal label target hascall gcsafe newobj bwd LIR 
BB13 [0007]  2       BB10,BB12             2     0 [09C..0A6)                                     i label target hascall gcsafe bwd LIR 
BB14 [0008]  3       BB04,BB05,BB13        4     0 [0A6..0B3)-> BB02 ( cond )                     i label target gcsafe idxlen bwd LIR 
BB15 [0010]  2       BB01,BB14             1       [0B3..0C7)        (return)                     i label target hascall gcsafe LIR 
BB16 [0027]  2       BB08,BB11             0       [000..000)        (throw )                     i internal rare label target hascall gcsafe bwd LIR 
-----------------------------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Generate code
*************** In fgDebugCheckBBlist
Finalizing stack frame
Recording Var Locations at start of BB01
  V00(rsi)
Modified regs: [rax rcx rdx rbx rbp rsi rdi r8-r12 r14-r15 mm0-mm5]
Callee-saved registers pushed: 7 [rbx rbp rsi rdi r12 r14-r15]
*************** In lvaAssignFrameOffsets(FINAL_FRAME_LAYOUT)
Assign V06 OutArgs, size=32, stkOffs=-0x60
--- delta bump 8 for RA
--- delta bump 88 for RSP frame
--- virtual stack offset to actual stack offset delta is 96
-- V00 was 0, now 96
-- V06 was -96, now 0
; Final local variable assignments
;
;  V00 arg0         [V00,T21] (  3,  3   )     ref  ->  rsi         class-hnd
;  V01 loc0         [V01,T00] ( 13, 23   )     ref  ->  rdi         class-hnd exact
;  V02 loc1         [V02,T17] (  3,  6   )     ref  ->  rsi         class-hnd
;  V03 loc2         [V03,T04] (  5, 17   )     int  ->  rbx        
;  V04 loc3         [V04,T01] (  7, 20   )     ref  ->  r14         class-hnd
;  V05 loc4         [V05,T22] (  2,  4   )     ref  ->  r15         class-hnd
;  V06 OutArgs      [V06    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V07 tmp1         [V07,T18] (  3,  6   )     ref  ->  rdi         class-hnd exact "NewObj constructor temp"
;  V08 tmp2         [V08,T10] (  2,  8   )     ref  ->   r8         class-hnd "dup spill"
;  V09 tmp3         [V09,T11] (  2,  8   )     ref  ->  r15         class-hnd "impAppendStmt"
;  V10 tmp4         [V10,T23] (  2,  4   )     ref  ->  r15        
;  V11 tmp5         [V11,T07] (  4,  8   )     ref  ->   r8        
;  V12 tmp6         [V12,T12] (  2,  8   )     ref  ->   r8         class-hnd "dup spill"
;* V13 tmp7         [V13,T25] (  0,  0   )     ref  ->  zero-ref   
;  V14 tmp8         [V14,T24] (  2,  4   )     ref  ->  r15        
;  V15 tmp9         [V15,T08] (  4,  8   )     ref  ->   r8        
;  V16 tmp10        [V16,T02] (  5, 20   )     ref  ->  r14         class-hnd exact "NewObj constructor temp"
;  V17 tmp11        [V17,T03] (  5, 20   )     ref  ->  r12         class-hnd exact "NewObj constructor temp"
;  V18 tmp12        [V18,T19] (  3,  6   )     ref  ->  rcx         class-hnd "Inline stloc first use temp"
;  V19 tmp13        [V19,T09] (  4,  8   )     int  ->  rdx         "Inline stloc first use temp"
;  V20 tmp14        [V20,T13] (  2,  8   )     ref  ->   r9         class-hnd "Inlining Arg"
;  V21 tmp15        [V21,T05] (  3, 12   )     ref  ->  rdx         class-hnd "Inlining Arg"
;* V22 tmp16        [V22    ] (  0,  0   )    long  ->  zero-ref    "Inlining Arg"
;  V23 tmp17        [V23,T14] (  2,  8   )     ref  ->   r9         class-hnd "Inlining Arg"
;  V24 tmp18        [V24,T15] (  2,  8   )     ref  ->   r8         class-hnd "Inlining Arg"
;  V25 tmp19        [V25,T06] (  3, 12   )     ref  ->  rdx         class-hnd "Inlining Arg"
;* V26 tmp20        [V26    ] (  0,  0   )    long  ->  zero-ref    "Inlining Arg"
;  V27 tmp21        [V27,T16] (  2,  8   )     ref  ->   r8         class-hnd "Inlining Arg"
;* V28 cse0         [V28,T26] (  0,  0   )    long  ->  zero-ref    "CSE - aggressive"
;  V29 cse1         [V29,T20] (  3,  6   )     int  ->  rbp         "CSE - aggressive"
;
; Lcl frame size = 32
Setting stack level from -572662307 to 0

=============== Generating BB01 [000..01D) -> BB15 (cond), preds={} succs={BB02,BB15} flags=0x00000002.205b0020: i label target hascall gcsafe idxlen newobj LIR 
BB01 IN (1)={                V00} + ByrefExposed + GcHeap
     OUT(4)={V01 V03 V02 V29    } + ByrefExposed + GcHeap

Recording Var Locations at start of BB01
  V00(rsi)
Change life 0000000000000000 {} -> 0000000000200000 {V00}
							V00 in reg rsi is becoming live  [------]
							Live regs: 00000000 {} => 00000040 {rsi}
							Live regs: (unchanged) 00000040 {rsi}
							GC regs: (unchanged) 00000040 {rsi}
							Byref regs: (unchanged) 00000000 {}

      L_M47830_BB01:
Label: IG02, GCvars=0000000000000000 {}, gcrefRegs=00000040 {rsi}, byrefRegs=00000000 {}

Scope info: begin block BB01, IL range [000..01D)
Scope info: open scopes =
   0 (V00 arg0) [000..0C7)
Generating: N003 (  2, 10) [000316] H-----------       t316 =    CNS_INT(h) long   0xD1FFAB1E "Started enumerating project paths." REG rdx $180
IN0001:        mov      rdx, 0xD1FFAB1E
                                                              /--*  t316   long   
Generating: N005 (  4, 12) [000317] #---G-------       t317 = *  IND       ref    REG rdx $1c0
IN0002:        mov      rdx, gword ptr [rdx]
							GC regs: 00000040 {rsi} => 00000044 {rdx rsi}
                                                              /--*  t317   ref    
Generating: N007 (???,???) [000494] ----G-------       t494 = *  PUTARG_REG ref    REG rdx
							GC regs: 00000044 {rdx rsi} => 00000040 {rsi}
							GC regs: 00000040 {rsi} => 00000044 {rdx rsi}
Generating: N009 (  2, 10) [000003] H-----------         t3 =    CNS_INT(h) long   0xd1ffab1e method REG rcx $181
IN0003:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t3     long   
Generating: N011 (???,???) [000495] ------------       t495 = *  PUTARG_REG long   REG rcx
Generating: N013 (  1,  1) [000001] ------------         t1 =    CNS_INT   int    2 REG r8 $42
IN0004:        mov      r8d, 2
                                                              /--*  t1     int    
Generating: N015 (???,???) [000496] ------------       t496 = *  PUTARG_REG int    REG r8
                                                              /--*  t494   ref    arg1 in rdx
                                                              +--*  t495   long   arg0 in rcx
                                                              +--*  t496   int    arg2 in r8
Generating: N017 ( 21, 31) [000002] --CXG-------         t2 = *  CALL      ref    SolutionAnalyzer.Logger.Log REG rax $101
							GC regs: 00000044 {rdx rsi} => 00000040 {rsi}
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000040 {rsi}, byrefRegs=00000000 {}
IN0005:        call     SolutionAnalyzer.Logger:Log(System.__Canon,int):System.__Canon
							GC regs: 00000040 {rsi} => 00000041 {rax rsi}
							GC regs: 00000041 {rax rsi} => 00000040 {rsi}
Added IP mapping: 0x000C STACK_EMPTY (G_M47830_IG02,ins#5,ofs#34) label
Generating: N019 (???,???) [000459] ------------                 IL_OFFSET void   IL offset: 0xc REG NA
Generating: N021 (  2, 10) [000008] H-----------         t8 =    CNS_INT(h) long   0xd1ffab1e token REG rcx $182
IN0006:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t8     long   
Generating: N023 (???,???) [000497] ------------       t497 = *  PUTARG_REG long   REG rcx
                                                              /--*  t497   long   arg0 in rcx
Generating: N025 ( 16, 16) [000009] --C---------         t9 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $1c1
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000040 {rsi}, byrefRegs=00000000 {}
IN0007:        call     CORINFO_HELP_NEWSFAST
							GC regs: 00000040 {rsi} => 00000041 {rax rsi}
                                                              /--*  t9     ref    
Generating: N027 ( 16, 16) [000011] DA----------              *  STORE_LCL_VAR ref    V07 tmp1         d:2 rdi REG rdi
							GC regs: 00000041 {rax rsi} => 00000040 {rsi}
IN0008:        mov      rdi, rax
							V07 in reg rdi is becoming live  [000011]
							Live regs: 00000040 {rsi} => 000000C0 {rsi rdi}
							Live vars: {V00} => {V00 V07}
							GC regs: 00000040 {rsi} => 000000C0 {rsi rdi}
Generating: N029 (  1,  1) [000012] ------------        t12 =    LCL_VAR   ref    V07 tmp1         u:2 rdi REG rdi $1c1
                                                              /--*  t12    ref    
Generating: N031 (???,???) [000498] ------------       t498 = *  PUTARG_REG ref    REG rcx
IN0009:        mov      rcx, rdi
							GC regs: 000000C0 {rsi rdi} => 000000C2 {rcx rsi rdi}
Generating: N033 (  1,  1) [000007] ------------         t7 =    CNS_INT   int    100 REG rdx $43
IN000a:        mov      edx, 100
                                                              /--*  t7     int    
Generating: N035 (???,???) [000499] ------------       t499 = *  PUTARG_REG int    REG rdx
                                                              /--*  t498   ref    this in rcx
                                                              +--*  t499   int    arg1 in rdx
Generating: N037 ( 16, 10) [000013] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon]..ctor REG NA $VN.Void
							GC regs: 000000C2 {rcx rsi rdi} => 000000C0 {rsi rdi}
							Call: GCvars=0000000000000000 {}, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}
IN000b:        call     System.Collections.Generic.List`1[__Canon][System.__Canon]:.ctor(int):this
Added IP mapping: 0x0013 (G_M47830_IG02,ins#11,ofs#65)
Generating: N039 (???,???) [000460] ------------                 IL_OFFSET void   IL offset: 0x13 REG NA
Generating: N041 (  1,  1) [000014] ------------        t14 =    LCL_VAR   ref    V07 tmp1         u:2 rdi (last use) REG rdi $1c1
                                                              /--*  t14    ref    
Generating: N043 (  1,  3) [000016] DA----------              *  STORE_LCL_VAR ref    V01 loc0         d:2 rdi REG rdi
							V07 in reg rdi is becoming dead  [000014]
							Live regs: 000000C0 {rsi rdi} => 00000040 {rsi}
							Live vars: {V00 V07} => {V00}
							GC regs: 000000C0 {rsi rdi} => 00000040 {rsi}
							V01 in reg rdi is becoming live  [000016]
							Live regs: 00000040 {rsi} => 000000C0 {rsi rdi}
							Live vars: {V00} => {V00 V01}
							GC regs: 00000040 {rsi} => 000000C0 {rsi rdi}
Added IP mapping: 0x0014 STACK_EMPTY (G_M47830_IG02,ins#11,ofs#65)
Generating: N045 (???,???) [000461] ------------                 IL_OFFSET void   IL offset: 0x14 REG NA
Generating: N047 (  1,  1) [000017] ------------        t17 =    LCL_VAR   ref    V00 arg0         u:1 rsi (last use) REG rsi $80
                                                              /--*  t17    ref    
Generating: N049 (  1,  3) [000019] DA----------              *  STORE_LCL_VAR ref    V02 loc1         d:2 rsi REG rsi
							V00 in reg rsi is becoming dead  [000017]
							Live regs: 000000C0 {rsi rdi} => 00000080 {rdi}
							Live vars: {V00 V01} => {V01}
							GC regs: 000000C0 {rsi rdi} => 00000080 {rdi}
							V02 in reg rsi is becoming live  [000019]
							Live regs: 00000080 {rdi} => 000000C0 {rsi rdi}
							Live vars: {V01} => {V01 V02}
							GC regs: 00000080 {rdi} => 000000C0 {rsi rdi}
Added IP mapping: 0x0016 STACK_EMPTY (G_M47830_IG02,ins#11,ofs#65)
Generating: N051 (???,???) [000462] ------------                 IL_OFFSET void   IL offset: 0x16 REG NA
Generating: N053 (  1,  1) [000020] ------------        t20 =    CNS_INT   int    0 REG rbx $40
IN000c:        xor      ebx, ebx
                                                              /--*  t20    int    
Generating: N055 (  1,  3) [000022] DA----------              *  STORE_LCL_VAR int    V03 loc2         d:2 rbx REG rbx
							V03 in reg rbx is becoming live  [000022]
							Live regs: 000000C0 {rsi rdi} => 000000C8 {rbx rsi rdi}
							Live vars: {V01 V02} => {V01 V02 V03}
Added IP mapping: 0x00AA STACK_EMPTY (G_M47830_IG02,ins#12,ofs#67)
Generating: N057 (???,???) [000463] ------------                 IL_OFFSET void   IL offset: 0xaa REG NA
Generating: N059 (  1,  1) [000424] ------------       t424 =    LCL_VAR   ref    V02 loc1         u:2 rsi REG rsi $80
                                                              /--*  t424   ref    
Generating: N061 (???,???) [000491] -c----------       t491 = *  LEA(b+8)  ref    REG NA
                                                              /--*  t491   ref    
Generating: N063 (  3,  3) [000423] ---X--------       t423 = *  IND       int    REG rbp $240
IN000d:        mov      ebp, dword ptr [rsi+8]
                                                              /--*  t423   int    
Generating: N065 (  3,  3) [000452] DA-X--------              *  STORE_LCL_VAR int    V29 cse1         d:1 rbp REG rbp
							V29 in reg rbp is becoming live  [000452]
							Live regs: 000000C8 {rbx rsi rdi} => 000000E8 {rbx rbp rsi rdi}
							Live vars: {V01 V02 V03} => {V01 V02 V03 V29}
Generating: N067 (  1,  1) [000453] ------------       t453 =    LCL_VAR   int    V29 cse1         u:1 rbp REG rbp $240
Generating: N069 (  1,  1) [000457] -c----------       t457 =    CNS_INT   int    0 REG NA $40
                                                              /--*  t453   int    
                                                              +--*  t457   int    
Generating: N071 (  6,  6) [000422] J--X---N----              *  LE        void   REG NA $242
IN000e:        test     ebp, ebp
Generating: N073 (  8,  8) [000426] ---X--------              *  JTRUE     void   REG NA
IN000f:        jle      L_M47830_BB15

Scope info: end block BB01, IL range [000..01D)
Scope info: open scopes =
   <none>

=============== Generating BB02 [01D..02E) -> BB07 (cond), preds={BB01,BB14} succs={BB03,BB07} flags=0x0000000a.211b2420: i Loop label target hascall gcsafe idxlen nullcheck bwd bwd-target LIR 
BB02 IN (4)={V01     V03 V02 V29} + ByrefExposed + GcHeap
     OUT(5)={V01 V04 V03 V02 V29} + ByrefExposed + GcHeap

Recording Var Locations at start of BB02
  V01(rdi)  V03(rbx)  V02(rsi)  V29(rbp)
Liveness not changing: 0000000000120011 {V01 V02 V03 V29}
							Live regs: 00000000 {} => 000000E8 {rbx rbp rsi rdi}
							GC regs: 00000000 {} => 000000C0 {rsi rdi}
							Byref regs: (unchanged) 00000000 {}

      L_M47830_BB02:

      G_M47830_IG02:        ; offs=000000H, funclet=00, bbWeight=1   
Label: IG03, GCvars=0000000000000000 {}, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}

Scope info: begin block BB02, IL range [01D..02E)
Scope info: open scopes =
   1 (V01 loc0) [000..0C7)
   3 (V03 loc2) [000..0C7)
   2 (V02 loc1) [000..0C7)
Added IP mapping: 0x001D STACK_EMPTY (G_M47830_IG03,ins#0,ofs#0) label
Generating: N077 (???,???) [000464] ------------                 IL_OFFSET void   IL offset: 0x1d REG NA
Generating: N079 (  1,  1) [000324] ------------       t324 =    LCL_VAR   ref    V02 loc1         u:2 rsi REG rsi $80
Generating: N081 (  1,  1) [000325] ------------       t325 =    LCL_VAR   int    V03 loc2         u:3 rbx REG rbx $280
                                                              /--*  t325   int    
Generating: N083 (  2,  3) [000328] ------------       t328 = *  CAST      long <- int REG rdx $300
IN0010:        movsxd   rdx, ebx
                                                              /--*  t324   ref    
                                                              +--*  t328   long   
Generating: N085 (  5,  6) [000333] -c----------       t333 = *  LEA(b+(i*8)+16) byref  REG NA
                                                              /--*  t333   byref  
Generating: N087 (  6,  7) [000030] a---G-------        t30 = *  IND       ref    REG r14 <l:$1ca, c:$2c1>
IN0011:        mov      r14, gword ptr [rsi+8*rdx+16]
							GC regs: 000000C0 {rsi rdi} => 000040C0 {rsi rdi r14}
                                                              /--*  t30    ref    
Generating: N089 (  6,  7) [000032] DA--G-------              *  STORE_LCL_VAR ref    V04 loc3         d:2 r14 REG r14
							GC regs: 000040C0 {rsi rdi r14} => 000000C0 {rsi rdi}
							V04 in reg r14 is becoming live  [000032]
							Live regs: 000000E8 {rbx rbp rsi rdi} => 000040E8 {rbx rbp rsi rdi r14}
							Live vars: {V01 V02 V03 V29} => {V01 V02 V03 V04 V29}
							GC regs: 000000C0 {rsi rdi} => 000040C0 {rsi rdi r14}
Added IP mapping: 0x0021 STACK_EMPTY (G_M47830_IG03,ins#2,ofs#8)
Generating: N091 (???,???) [000465] ------------                 IL_OFFSET void   IL offset: 0x21 REG NA
Generating: N093 (  1,  1) [000196] ------------       t196 =    LCL_VAR   ref    V04 loc3         u:2 r14 REG r14 <l:$1ca, c:$2c1>
                                                              /--*  t196   ref    
Generating: N095 (  2,  2) [000197] ---X--------              *  NULLCHECK int    REG NA <l:$1d0, c:$1cf>
IN0012:        cmp      dword ptr [r14], r14d
Generating: N097 (  2, 10) [000335] H-----------       t335 =    CNS_INT(h) long   0xD1FFAB1E ".csproj" REG rdx $184
IN0013:        mov      rdx, 0xD1FFAB1E
                                                              /--*  t335   long   
Generating: N099 (  4, 12) [000336] #---G-------       t336 = *  IND       ref    REG rdx $1d1
IN0014:        mov      rdx, gword ptr [rdx]
							GC regs: 000040C0 {rsi rdi r14} => 000040C4 {rdx rsi rdi r14}
                                                              /--*  t336   ref    
Generating: N101 (???,???) [000500] ----G-------       t500 = *  PUTARG_REG ref    REG rdx
							GC regs: 000040C4 {rdx rsi rdi r14} => 000040C0 {rsi rdi r14}
							GC regs: 000040C0 {rsi rdi r14} => 000040C4 {rdx rsi rdi r14}
Generating: N103 (  1,  1) [000033] ------------        t33 =    LCL_VAR   ref    V04 loc3         u:2 r14 REG r14 <l:$1ca, c:$2c1>
                                                              /--*  t33    ref    
Generating: N105 (???,???) [000501] ------------       t501 = *  PUTARG_REG ref    REG rcx
IN0015:        mov      rcx, r14
							GC regs: 000040C4 {rdx rsi rdi r14} => 000040C6 {rcx rdx rsi rdi r14}
Generating: N107 (  1,  1) [000194] ------------       t194 =    CNS_INT   int    0 REG r8 $40
IN0016:        xor      r8d, r8d
                                                              /--*  t194   int    
Generating: N109 (???,???) [000502] ------------       t502 = *  PUTARG_REG int    REG r8
                                                              /--*  t500   ref    arg1 in rdx
                                                              +--*  t501   ref    this in rcx
                                                              +--*  t502   int    arg2 in r8
Generating: N111 ( 20, 23) [000195] --CXG-------       t195 = *  CALL      int    System.String.EndsWith REG rax $401
							GC regs: 000040C6 {rcx rdx rsi rdi r14} => 000040C2 {rcx rsi rdi r14}
							GC regs: 000040C2 {rcx rsi rdi r14} => 000040C0 {rsi rdi r14}
							Call: GCvars=0000000000000000 {}, gcrefRegs=000040C0 {rsi rdi r14}, byrefRegs=00000000 {}
IN0017:        call     System.String:EndsWith(System.String,int):bool:this
Generating: N113 (  1,  1) [000037] -c----------        t37 =    CNS_INT   int    0 REG NA $40
                                                              /--*  t195   int    
                                                              +--*  t37    int    
Generating: N115 ( 22, 25) [000038] J--XG--N----              *  EQ        void   REG NA $244
IN0018:        test     eax, eax
Generating: N117 ( 24, 27) [000039] ---XG-------              *  JTRUE     void   REG NA
IN0019:        je       L_M47830_BB07

Scope info: end block BB02, IL range [01D..02E)
Scope info: open scopes =
   1 (V01 loc0) [000..0C7)
   3 (V03 loc2) [000..0C7)
   2 (V02 loc1) [000..0C7)

=============== Generating BB03 [02E..037) -> BB05 (cond), preds={BB02} succs={BB04,BB05} flags=0x00000000.21180020: i gcsafe idxlen bwd LIR 
BB03 IN (5)={V01 V04 V03     V02     V29} + ByrefExposed + GcHeap
     OUT(7)={V01 V04 V03 V19 V02 V18 V29} + ByrefExposed + GcHeap

Recording Var Locations at start of BB03
  V01(rdi)  V04(r14)  V03(rbx)  V02(rsi)  V29(rbp)
Liveness not changing: 0000000000120013 {V01 V02 V03 V04 V29}
							Live regs: 00000000 {} => 000040E8 {rbx rbp rsi rdi r14}
							GC regs: 00000000 {} => 000040C0 {rsi rdi r14}
							Byref regs: (unchanged) 00000000 {}

      L_M47830_BB03:

      G_M47830_IG03:        ; offs=00004EH, funclet=00, bbWeight=4   
Label: IG04, GCvars=0000000000000000 {}, gcrefRegs=000040C0 {rsi rdi r14}, byrefRegs=00000000 {}

Scope info: begin block BB03, IL range [02E..037)
Scope info: open scopes =
   1 (V01 loc0) [000..0C7)
   3 (V03 loc2) [000..0C7)
   2 (V02 loc1) [000..0C7)
   4 (V04 loc3) [000..0C7)
Added IP mapping: 0x002E STACK_EMPTY (G_M47830_IG04,ins#0,ofs#0) label
Generating: N121 (???,???) [000466] ------------                 IL_OFFSET void   IL offset: 0x2e REG NA
Generating: N123 (  1,  1) [000199] -c----------       t199 =    LCL_VAR   ref    V01 loc0         u:2 rdi REG NA $1c1
                                                              /--*  t199   ref    
Generating: N125 (  2,  2) [000343] -c----------       t343 = *  LEA(b+20) byref  REG NA
                                                              /--*  t343   byref  
Generating: N127 (  4,  4) [000200] nc--GO------       t200 = *  IND       int    REG NA <l:$258, c:$257>
Generating: N129 (  1,  1) [000201] -c----------       t201 =    CNS_INT   int    1 REG NA $46
                                                              /--*  t200   int    
                                                              +--*  t201   int    
Generating: N131 (  6,  6) [000202] -c--GO------       t202 = *  ADD       int    REG NA <l:$25c, c:$25b>
Generating: N133 (  1,  1) [000177] ------------       t177 =    LCL_VAR   ref    V01 loc0         u:2 rdi REG rdi $1c1
                                                              /--*  t177   ref    
Generating: N135 (  2,  2) [000341] -c----------       t341 = *  LEA(b+20) byref  REG NA
                                                              /--*  t341   byref  
                                                              +--*  t202   int    
Generating: N137 (???,???) [000467] -A--GO------              *  STOREIND  int    REG NA
IN001a:        inc      dword ptr [rdi+20]
genIPmappingAdd: ignoring duplicate IL offset 0x2e
Generating: N139 (???,???) [000468] ------------                 IL_OFFSET void   IL offset: 0x2e REG NA
Generating: N141 (  1,  1) [000205] ------------       t205 =    LCL_VAR   ref    V01 loc0         u:2 rdi REG rdi $1c1
                                                              /--*  t205   ref    
Generating: N143 (  2,  2) [000345] -c----------       t345 = *  LEA(b+8)  byref  REG NA
                                                              /--*  t345   byref  
Generating: N145 (  4,  4) [000206] n---GO------       t206 = *  IND       ref    REG rcx <l:$1f0, c:$1ef>
IN001b:        mov      rcx, gword ptr [rdi+8]
							GC regs: 000040C0 {rsi rdi r14} => 000040C2 {rcx rsi rdi r14}
                                                              /--*  t206   ref    
Generating: N147 (  4,  4) [000208] DA--GO------              *  STORE_LCL_VAR ref    V18 tmp12        d:2 rcx REG rcx
							GC regs: 000040C2 {rcx rsi rdi r14} => 000040C0 {rsi rdi r14}
							V18 in reg rcx is becoming live  [000208]
							Live regs: 000040E8 {rbx rbp rsi rdi r14} => 000040EA {rcx rbx rbp rsi rdi r14}
							Live vars: {V01 V02 V03 V04 V29} => {V01 V02 V03 V04 V18 V29}
							GC regs: 000040C0 {rsi rdi r14} => 000040C2 {rcx rsi rdi r14}
genIPmappingAdd: ignoring duplicate IL offset 0x2e
Generating: N149 (???,???) [000469] ------------                 IL_OFFSET void   IL offset: 0x2e REG NA
Generating: N151 (  1,  1) [000209] ------------       t209 =    LCL_VAR   ref    V01 loc0         u:2 rdi REG rdi $1c1
                                                              /--*  t209   ref    
Generating: N153 (  2,  2) [000347] -c----------       t347 = *  LEA(b+16) byref  REG NA
                                                              /--*  t347   byref  
Generating: N155 (  4,  4) [000210] n---GO------       t210 = *  IND       int    REG rdx <l:$260, c:$25f>
IN001c:        mov      edx, dword ptr [rdi+16]
                                                              /--*  t210   int    
Generating: N157 (  4,  4) [000212] DA--GO------              *  STORE_LCL_VAR int    V19 tmp13        d:2 rdx REG rdx
							V19 in reg rdx is becoming live  [000212]
							Live regs: 000040EA {rcx rbx rbp rsi rdi r14} => 000040EE {rcx rdx rbx rbp rsi rdi r14}
							Live vars: {V01 V02 V03 V04 V18 V29} => {V01 V02 V03 V04 V18 V19 V29}
genIPmappingAdd: ignoring duplicate IL offset 0x2e
Generating: N159 (???,???) [000470] ------------                 IL_OFFSET void   IL offset: 0x2e REG NA
Generating: N161 (  1,  1) [000214] ------------       t214 =    LCL_VAR   ref    V18 tmp12        u:2 rcx REG rcx <l:$1ee, c:$2fc>
                                                              /--*  t214   ref    
Generating: N163 (???,???) [000493] -c----------       t493 = *  LEA(b+8)  ref    REG NA
                                                              /--*  t493   ref    
Generating: N165 (  3,  3) [000215] -c-X--------       t215 = *  IND       int    REG NA <l:$262, c:$261>
Generating: N167 (  1,  1) [000213] ------------       t213 =    LCL_VAR   int    V19 tmp13        u:2 rdx REG rdx <l:$25e, c:$411>
                                                              /--*  t215   int    
                                                              +--*  t213   int    
Generating: N169 (  5,  5) [000216] N--X---N-U--              *  LE        void   REG NA <l:$266, c:$265>
IN001d:        cmp      dword ptr [rcx+8], edx
Generating: N171 (  7,  7) [000217] ---X--------              *  JTRUE     void   REG NA
IN001e:        jbe      L_M47830_BB05

Scope info: end block BB03, IL range [02E..037)
Scope info: open scopes =
   1 (V01 loc0) [000..0C7)
   3 (V03 loc2) [000..0C7)
   2 (V02 loc1) [000..0C7)
   4 (V04 loc3) [000..0C7)

=============== Generating BB04 [02E..02F) -> BB14 (always), preds={BB03} succs={BB14} flags=0x00000002.21080020: i hascall gcsafe bwd LIR 
BB04 IN (7)={V01 V04 V03 V19 V02 V18 V29} + ByrefExposed + GcHeap
     OUT(4)={V01     V03     V02     V29} + ByrefExposed + GcHeap

Recording Var Locations at start of BB04
  V01(rdi)  V04(r14)  V03(rbx)  V19(rdx)  V02(rsi)  V18(rcx)  V29(rbp)
Liveness not changing: 00000000001A0213 {V01 V02 V03 V04 V18 V19 V29}
							Live regs: 00000000 {} => 000040EE {rcx rdx rbx rbp rsi rdi r14}
							GC regs: 00000000 {} => 000040C2 {rcx rsi rdi r14}
							Byref regs: (unchanged) 00000000 {}

      L_M47830_BB04:

Scope info: begin block BB04, IL range [02E..02F)
Scope info: open scopes =
   1 (V01 loc0) [000..0C7)
   3 (V03 loc2) [000..0C7)
   2 (V02 loc1) [000..0C7)
   4 (V04 loc3) [000..0C7)
genIPmappingAdd: ignoring duplicate IL offset 0x2e
Generating: N175 (???,???) [000471] ------------                 IL_OFFSET void   IL offset: 0x2e REG NA
Generating: N177 (  1,  1) [000221] ------------       t221 =    LCL_VAR   int    V19 tmp13        u:2 rdx REG rdx <l:$25e, c:$411>
Generating: N179 (  1,  1) [000222] -c----------       t222 =    CNS_INT   int    1 REG NA $46
                                                              /--*  t221   int    
                                                              +--*  t222   int    
Generating: N181 (  3,  3) [000223] ------------       t223 = *  ADD       int    REG r8 <l:$268, c:$267>
IN001f:        lea      r8d, [rdx+1]
Generating: N183 (  1,  1) [000220] ------------       t220 =    LCL_VAR   ref    V01 loc0         u:2 rdi REG rdi $1c1
                                                              /--*  t220   ref    
Generating: N185 (  2,  2) [000349] -c----------       t349 = *  LEA(b+16) byref  REG NA
                                                              /--*  t349   byref  
                                                              +--*  t223   int    
Generating: N187 (???,???) [000472] -A--GO------              *  STOREIND  int    REG NA
IN0020:        mov      dword ptr [rdi+16], r8d
genIPmappingAdd: ignoring duplicate IL offset 0x2e
Generating: N189 (???,???) [000473] ------------                 IL_OFFSET void   IL offset: 0x2e REG NA
Generating: N191 (  1,  1) [000226] ------------       t226 =    LCL_VAR   ref    V18 tmp12        u:2 rcx (last use) REG rcx <l:$1ee, c:$2fc>
                                                              /--*  t226   ref    
Generating: N193 (???,???) [000503] ------------       t503 = *  PUTARG_REG ref    REG rcx
							V18 in reg rcx is becoming dead  [000226]
							Live regs: 000040EE {rcx rdx rbx rbp rsi rdi r14} => 000040EC {rdx rbx rbp rsi rdi r14}
							Live vars: {V01 V02 V03 V04 V18 V19 V29} => {V01 V02 V03 V04 V19 V29}
							GC regs: 000040C2 {rcx rsi rdi r14} => 000040C0 {rsi rdi r14}
							GC regs: 000040C0 {rsi rdi r14} => 000040C2 {rcx rsi rdi r14}
Generating: N195 (  1,  1) [000227] ------------       t227 =    LCL_VAR   int    V19 tmp13        u:2 rdx (last use) REG rdx <l:$25e, c:$411>
                                                              /--*  t227   int    
Generating: N197 (???,???) [000504] ------------       t504 = *  PUTARG_REG int    REG rdx
							V19 in reg rdx is becoming dead  [000227]
							Live regs: 000040EC {rdx rbx rbp rsi rdi r14} => 000040E8 {rbx rbp rsi rdi r14}
							Live vars: {V01 V02 V03 V04 V19 V29} => {V01 V02 V03 V04 V29}
Generating: N199 (  1,  1) [000228] ------------       t228 =    LCL_VAR   ref    V04 loc3         u:2 r14 (last use) REG r14 <l:$1ca, c:$2c1>
                                                              /--*  t228   ref    
Generating: N201 (???,???) [000505] ------------       t505 = *  PUTARG_REG ref    REG r8
							V04 in reg r14 is becoming dead  [000228]
							Live regs: 000040E8 {rbx rbp rsi rdi r14} => 000000E8 {rbx rbp rsi rdi}
							Live vars: {V01 V02 V03 V04 V29} => {V01 V02 V03 V29}
							GC regs: 000040C2 {rcx rsi rdi r14} => 000000C2 {rcx rsi rdi}
IN0021:        mov      r8, r14
							GC regs: 000000C2 {rcx rsi rdi} => 000001C2 {rcx rsi rdi r8}
                                                              /--*  t503   ref    arg0 in rcx
                                                              +--*  t504   int    arg1 in rdx
                                                              +--*  t505   ref    arg2 in r8
Generating: N203 ( 17, 11) [000229] --CXG-------              *  CALL help void   HELPER.CORINFO_HELP_ARRADDR_ST REG NA $1db
							GC regs: 000001C2 {rcx rsi rdi r8} => 000001C0 {rsi rdi r8}
							GC regs: 000001C0 {rsi rdi r8} => 000000C0 {rsi rdi}
							Call: GCvars=0000000000000000 {}, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}
IN0022:        call     CORINFO_HELP_ARRADDR_ST

Scope info: end block BB04, IL range [02E..02F)
Scope info: open scopes =
   1 (V01 loc0) [000..0C7)
   3 (V03 loc2) [000..0C7)
   2 (V02 loc1) [000..0C7)
IN0023:        jmp      L_M47830_BB14

=============== Generating BB05 [02E..02F) -> BB14 (always), preds={BB03} succs={BB14} flags=0x00000002.210b0020: i label target hascall gcsafe bwd LIR 
BB05 IN (5)={V01 V04 V03 V02 V29} + ByrefExposed + GcHeap
     OUT(4)={V01     V03 V02 V29} + ByrefExposed + GcHeap

Recording Var Locations at start of BB05
  V01(rdi)  V04(r14)  V03(rbx)  V02(rsi)  V29(rbp)
Change life 0000000000120011 {V01 V02 V03 V29} -> 0000000000120013 {V01 V02 V03 V04 V29}
							V04 in reg r14 is becoming live  [------]
							Live regs: 00000000 {} => 00004000 {r14}
							Live regs: 00004000 {r14} => 000040E8 {rbx rbp rsi rdi r14}
							GC regs: 00004000 {r14} => 000040C0 {rsi rdi r14}
							Byref regs: (unchanged) 00000000 {}

      L_M47830_BB05:

      G_M47830_IG04:        ; offs=000079H, funclet=00, bbWeight=2   
Label: IG05, GCvars=0000000000000000 {}, gcrefRegs=000040C0 {rsi rdi r14}, byrefRegs=00000000 {}

Scope info: begin block BB05, IL range [02E..02F)
Scope info: open scopes =
   1 (V01 loc0) [000..0C7)
   3 (V03 loc2) [000..0C7)
   2 (V02 loc1) [000..0C7)
   4 (V04 loc3) [000..0C7)
genIPmappingAdd: ignoring duplicate IL offset 0x2e
Generating: N207 (???,???) [000474] ------------                 IL_OFFSET void   IL offset: 0x2e REG NA
Generating: N209 (  1,  1) [000218] ------------       t218 =    LCL_VAR   ref    V01 loc0         u:2 rdi REG rdi $1c1
                                                              /--*  t218   ref    
Generating: N211 (???,???) [000506] ------------       t506 = *  PUTARG_REG ref    REG rcx
IN0024:        mov      rcx, rdi
							GC regs: 000040C0 {rsi rdi r14} => 000040C2 {rcx rsi rdi r14}
Generating: N213 (  1,  1) [000178] ------------       t178 =    LCL_VAR   ref    V04 loc3         u:2 r14 (last use) REG r14 <l:$1ca, c:$2c1>
                                                              /--*  t178   ref    
Generating: N215 (???,???) [000507] ------------       t507 = *  PUTARG_REG ref    REG rdx
							V04 in reg r14 is becoming dead  [000178]
							Live regs: 000040E8 {rbx rbp rsi rdi r14} => 000000E8 {rbx rbp rsi rdi}
							Live vars: {V01 V02 V03 V04 V29} => {V01 V02 V03 V29}
							GC regs: 000040C2 {rcx rsi rdi r14} => 000000C2 {rcx rsi rdi}
IN0025:        mov      rdx, r14
							GC regs: 000000C2 {rcx rsi rdi} => 000000C6 {rcx rdx rsi rdi}
                                                              /--*  t506   ref    this in rcx
                                                              +--*  t507   ref    arg1 in rdx
Generating: N217 ( 16, 10) [000219] --CXG-------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].AddWithResize REG NA $VN.Void
							GC regs: 000000C6 {rcx rdx rsi rdi} => 000000C4 {rdx rsi rdi}
							GC regs: 000000C4 {rdx rsi rdi} => 000000C0 {rsi rdi}
							Call: GCvars=0000000000000000 {}, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}
IN0026:        call     System.Collections.Generic.List`1[__Canon][System.__Canon]:AddWithResize(System.__Canon):this

Scope info: end block BB05, IL range [02E..02F)
Scope info: open scopes =
   1 (V01 loc0) [000..0C7)
   3 (V03 loc2) [000..0C7)
   2 (V02 loc1) [000..0C7)
IN0027:        jmp      L_M47830_BB14

=============== Generating BB07 [037..04B) -> BB10 (cond), preds={BB02} succs={BB08,BB10} flags=0x00000002.210b0020: i label target hascall gcsafe bwd LIR 
BB07 IN (5)={V01 V04 V03     V02 V29    } + ByrefExposed + GcHeap
     OUT(7)={V01 V04 V03 V11 V02 V29 V10} + ByrefExposed + GcHeap

Recording Var Locations at start of BB07
  V01(rdi)  V04(r14)  V03(rbx)  V02(rsi)  V29(rbp)
Change life 0000000000120011 {V01 V02 V03 V29} -> 0000000000120013 {V01 V02 V03 V04 V29}
							V04 in reg r14 is becoming live  [------]
							Live regs: 00000000 {} => 00004000 {r14}
							Live regs: 00004000 {r14} => 000040E8 {rbx rbp rsi rdi r14}
							GC regs: 00004000 {r14} => 000040C0 {rsi rdi r14}
							Byref regs: (unchanged) 00000000 {}

      L_M47830_BB07:

      G_M47830_IG05:        ; offs=0000A1H, funclet=00, bbWeight=2   
Label: IG06, GCvars=0000000000000000 {}, gcrefRegs=000040C0 {rsi rdi r14}, byrefRegs=00000000 {}

Scope info: begin block BB07, IL range [037..04B)
Scope info: open scopes =
   1 (V01 loc0) [000..0C7)
   3 (V03 loc2) [000..0C7)
   2 (V02 loc1) [000..0C7)
   4 (V04 loc3) [000..0C7)
Added IP mapping: 0x0037 STACK_EMPTY (G_M47830_IG06,ins#0,ofs#0) label
Generating: N221 (???,???) [000475] ------------                 IL_OFFSET void   IL offset: 0x37 REG NA
Generating: N223 (  1,  1) [000235] ------------       t235 =    CNS_INT   int    1 REG rcx $46
IN0028:        mov      ecx, 1
                                                              /--*  t235   int    
Generating: N225 (???,???) [000508] ------------       t508 = *  PUTARG_REG int    REG rcx
                                                              /--*  t508   int    arg0 in rcx
Generating: N227 ( 15,  7) [000236] --CXG-------       t236 = *  CALL      ref    System.IO.EnumerationOptions.FromSearchOption REG rax $2c6
							Call: GCvars=0000000000000000 {}, gcrefRegs=000040C0 {rsi rdi r14}, byrefRegs=00000000 {}
IN0029:        call     System.IO.EnumerationOptions:FromSearchOption(int):System.IO.EnumerationOptions
							GC regs: 000040C0 {rsi rdi r14} => 000040C1 {rax rsi rdi r14}
                                                              /--*  t236   ref    
Generating: N229 ( 15,  7) [000247] DA-XG-------              *  STORE_LCL_VAR ref    V20 tmp14        d:2 r9 REG r9
							GC regs: 000040C1 {rax rsi rdi r14} => 000040C0 {rsi rdi r14}
IN002a:        mov      r9, rax
							V20 in reg r9 is becoming live  [000247]
							Live regs: 000040E8 {rbx rbp rsi rdi r14} => 000042E8 {rbx rbp rsi rdi r9 r14}
							Live vars: {V01 V02 V03 V04 V29} => {V01 V02 V03 V04 V20 V29}
							GC regs: 000040C0 {rsi rdi r14} => 000042C0 {rsi rdi r9 r14}
Generating: N231 (  2, 10) [000356] H-----------       t356 =    CNS_INT(h) long   0xD1FFAB1E "*" REG rdx $185
IN002b:        mov      rdx, 0xD1FFAB1E
                                                              /--*  t356   long   
Generating: N233 (  4, 12) [000357] #---G-------       t357 = *  IND       ref    REG rdx $1d2
IN002c:        mov      rdx, gword ptr [rdx]
							GC regs: 000042C0 {rsi rdi r9 r14} => 000042C4 {rdx rsi rdi r9 r14}
                                                              /--*  t357   ref    
Generating: N235 (???,???) [000509] ----G-------       t509 = *  PUTARG_REG ref    REG rdx
							GC regs: 000042C4 {rdx rsi rdi r9 r14} => 000042C0 {rsi rdi r9 r14}
							GC regs: 000042C0 {rsi rdi r9 r14} => 000042C4 {rdx rsi rdi r9 r14}
Generating: N237 (  1,  1) [000040] ------------        t40 =    LCL_VAR   ref    V04 loc3         u:2 r14 REG r14 <l:$1ca, c:$2c1>
                                                              /--*  t40    ref    
Generating: N239 (???,???) [000510] ------------       t510 = *  PUTARG_REG ref    REG rcx
IN002d:        mov      rcx, r14
							GC regs: 000042C4 {rdx rsi rdi r9 r14} => 000042C6 {rcx rdx rsi rdi r9 r14}
Generating: N241 (  1,  1) [000244] ------------       t244 =    LCL_VAR   ref    V20 tmp14        u:2 r9 (last use) REG r9 $2c6
                                                              /--*  t244   ref    
Generating: N243 (???,???) [000511] ------------       t511 = *  PUTARG_REG ref    REG r9
							V20 in reg r9 is becoming dead  [000244]
							Live regs: 000042E8 {rbx rbp rsi rdi r9 r14} => 000040E8 {rbx rbp rsi rdi r14}
							Live vars: {V01 V02 V03 V04 V20 V29} => {V01 V02 V03 V04 V29}
							GC regs: 000042C6 {rcx rdx rsi rdi r9 r14} => 000040C6 {rcx rdx rsi rdi r14}
							GC regs: 000040C6 {rcx rdx rsi rdi r14} => 000042C6 {rcx rdx rsi rdi r9 r14}
Generating: N245 (  1,  1) [000243] ------------       t243 =    CNS_INT   int    2 REG r8 $42
IN002e:        mov      r8d, 2
                                                              /--*  t243   int    
Generating: N247 (???,???) [000512] ------------       t512 = *  PUTARG_REG int    REG r8
                                                              /--*  t509   ref    arg1 in rdx
                                                              +--*  t510   ref    arg0 in rcx
                                                              +--*  t511   ref    arg3 in r9
                                                              +--*  t512   int    arg2 in r8
Generating: N249 ( 21, 24) [000245] --CXG-------       t245 = *  CALL      ref    System.IO.Directory.InternalEnumeratePaths REG rax $2cc
							GC regs: 000042C6 {rcx rdx rsi rdi r9 r14} => 000042C2 {rcx rsi rdi r9 r14}
							GC regs: 000042C2 {rcx rsi rdi r9 r14} => 000042C0 {rsi rdi r9 r14}
							GC regs: 000042C0 {rsi rdi r9 r14} => 000040C0 {rsi rdi r14}
							Call: GCvars=0000000000000000 {}, gcrefRegs=000040C0 {rsi rdi r14}, byrefRegs=00000000 {}
IN002f:        call     System.IO.Directory:InternalEnumeratePaths(System.String,System.String,int,System.IO.EnumerationOptions):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]
							GC regs: 000040C0 {rsi rdi r14} => 000040C1 {rax rsi rdi r14}
                                                              /--*  t245   ref    
Generating: N251 ( 21, 24) [000054] DA-XG-------              *  STORE_LCL_VAR ref    V09 tmp3         d:2 r15 REG r15
							GC regs: 000040C1 {rax rsi rdi r14} => 000040C0 {rsi rdi r14}
IN0030:        mov      r15, rax
							V09 in reg r15 is becoming live  [000054]
							Live regs: 000040E8 {rbx rbp rsi rdi r14} => 0000C0E8 {rbx rbp rsi rdi r14 r15}
							Live vars: {V01 V02 V03 V04 V29} => {V01 V02 V03 V04 V09 V29}
							GC regs: 000040C0 {rsi rdi r14} => 0000C0C0 {rsi rdi r14 r15}
Generating: N253 (  2, 10) [000047] ------------        t47 =    CNS_INT   long   0x7ffc7e4c17e0 REG rcx $345
IN0031:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t47    long   
Generating: N255 (???,???) [000513] ------------       t513 = *  PUTARG_REG long   REG rcx
Generating: N257 (  1,  1) [000048] ------------        t48 =    CNS_INT   int    35 REG rdx $47
IN0032:        mov      edx, 35
                                                              /--*  t48    int    
Generating: N259 (???,???) [000514] ------------       t514 = *  PUTARG_REG int    REG rdx
                                                              /--*  t513   long   arg0 in rcx
                                                              +--*  t514   int    arg1 in rdx
Generating: N261 ( 17, 18) [000049] H-CXG-------        t49 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE REG rax $305
							Call: GCvars=0000000000000000 {}, gcrefRegs=0000C0C0 {rsi rdi r14 r15}, byrefRegs=00000000 {}
IN0033:        call     CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
Generating: N263 (  2, 10) [000364] I-----------       t364 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] REG rcx $186
IN0034:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t364   long   
Generating: N265 (  4, 12) [000045] n---G-------        t45 = *  IND       ref    REG r8 <l:$4c0, c:$2cf>
IN0035:        mov      r8, gword ptr [rcx]
							GC regs: 0000C0C0 {rsi rdi r14 r15} => 0000C1C0 {rsi rdi r8 r14 r15}
                                                              /--*  t45    ref    
Generating: N267 ( 22, 31) [000052] DA-XG-------              *  STORE_LCL_VAR ref    V08 tmp2         d:2 r8 REG r8
							GC regs: 0000C1C0 {rsi rdi r8 r14 r15} => 0000C0C0 {rsi rdi r14 r15}
							V08 in reg r8 is becoming live  [000052]
							Live regs: 0000C0E8 {rbx rbp rsi rdi r14 r15} => 0000C1E8 {rbx rbp rsi rdi r8 r14 r15}
							Live vars: {V01 V02 V03 V04 V09 V29} => {V01 V02 V03 V04 V08 V09 V29}
							GC regs: 0000C0C0 {rsi rdi r14 r15} => 0000C1C0 {rsi rdi r8 r14 r15}
Generating: N269 (  1,  1) [000055] ------------        t55 =    LCL_VAR   ref    V09 tmp3         u:2 r15 (last use) REG r15 $2cc
                                                              /--*  t55    ref    
Generating: N271 (  1,  3) [000062] DA----------              *  STORE_LCL_VAR ref    V10 tmp4         d:2 r15 REG r15
							V09 in reg r15 is becoming dead  [000055]
							Live regs: 0000C1E8 {rbx rbp rsi rdi r8 r14 r15} => 000041E8 {rbx rbp rsi rdi r8 r14}
							Live vars: {V01 V02 V03 V04 V08 V09 V29} => {V01 V02 V03 V04 V08 V29}
							GC regs: 0000C1C0 {rsi rdi r8 r14 r15} => 000041C0 {rsi rdi r8 r14}
							V10 in reg r15 is becoming live  [000062]
							Live regs: 000041E8 {rbx rbp rsi rdi r8 r14} => 0000C1E8 {rbx rbp rsi rdi r8 r14 r15}
							Live vars: {V01 V02 V03 V04 V08 V29} => {V01 V02 V03 V04 V08 V10 V29}
							GC regs: 000041C0 {rsi rdi r8 r14} => 0000C1C0 {rsi rdi r8 r14 r15}
Generating: N273 (  1,  1) [000056] ------------        t56 =    LCL_VAR   ref    V08 tmp2         u:2 r8 (last use) REG r8 <l:$4c0, c:$2cf>
                                                              /--*  t56    ref    
Generating: N275 (  1,  3) [000065] DA----------              *  STORE_LCL_VAR ref    V11 tmp5         d:2 r8 REG r8
							V08 in reg r8 is becoming dead  [000056]
							Live regs: 0000C1E8 {rbx rbp rsi rdi r8 r14 r15} => 0000C0E8 {rbx rbp rsi rdi r14 r15}
							Live vars: {V01 V02 V03 V04 V08 V10 V29} => {V01 V02 V03 V04 V10 V29}
							GC regs: 0000C1C0 {rsi rdi r8 r14 r15} => 0000C0C0 {rsi rdi r14 r15}
							V11 in reg r8 is becoming live  [000065]
							Live regs: 0000C0E8 {rbx rbp rsi rdi r14 r15} => 0000C1E8 {rbx rbp rsi rdi r8 r14 r15}
							Live vars: {V01 V02 V03 V04 V10 V29} => {V01 V02 V03 V04 V10 V11 V29}
							GC regs: 0000C0C0 {rsi rdi r14 r15} => 0000C1C0 {rsi rdi r8 r14 r15}
Generating: N277 (  1,  1) [000057] ------------        t57 =    LCL_VAR   ref    V11 tmp5         u:2 r8 REG r8 <l:$4c0, c:$2cf>
Generating: N279 (  1,  1) [000058] -c----------        t58 =    CNS_INT   ref    null REG NA $VN.Null
                                                              /--*  t57    ref    
                                                              +--*  t58    ref    
Generating: N281 (  3,  3) [000059] J------N----              *  NE        void   REG NA <l:$246, c:$245>
IN0036:        test     r8, r8
Generating: N283 (  5,  5) [000060] ------------              *  JTRUE     void   REG NA
IN0037:        jne      L_M47830_BB10

Scope info: end block BB07, IL range [037..04B)
Scope info: open scopes =
   1 (V01 loc0) [000..0C7)
   3 (V03 loc2) [000..0C7)
   2 (V02 loc1) [000..0C7)
   4 (V04 loc3) [000..0C7)

=============== Generating BB08 [000..062) -> BB16 (cond), preds={BB07} succs={BB09,BB16} flags=0x00000002.21480020: i hascall gcsafe newobj bwd LIR 
BB08 IN (6)={V01 V04     V03     V02 V29 V10} + ByrefExposed + GcHeap
     OUT(8)={V01 V04 V17 V03 V21 V02 V29 V10} + ByrefExposed + GcHeap

Recording Var Locations at start of BB08
  V01(rdi)  V04(r14)  V03(rbx)  V02(rsi)  V29(rbp)  V10(r15)
Change life 0000000000920093 {V01 V02 V03 V04 V10 V11 V29} -> 0000000000920013 {V01 V02 V03 V04 V10 V29}
							V11 in reg r8 is becoming dead  [------]
							Live regs: (unchanged) 00000000 {}
							Live regs: 00000000 {} => 0000C0E8 {rbx rbp rsi rdi r14 r15}
							GC regs: 00000000 {} => 0000C0C0 {rsi rdi r14 r15}
							Byref regs: (unchanged) 00000000 {}

      L_M47830_BB08:

Scope info: begin block BB08, IL range [000..062)
Scope info: open scopes =
   1 (V01 loc0) [000..0C7)
   3 (V03 loc2) [000..0C7)
   2 (V02 loc1) [000..0C7)
   4 (V04 loc3) [000..0C7)
Generating: N287 (  2, 10) [000157] H-----------       t157 =    CNS_INT(h) long   0xd1ffab1e token REG rcx $187
IN0038:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t157   long   
Generating: N289 (???,???) [000515] ------------       t515 = *  PUTARG_REG long   REG rcx
                                                              /--*  t515   long   arg0 in rcx
Generating: N291 ( 16, 16) [000158] --C---------       t158 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $1d6
							Call: GCvars=0000000000000000 {}, gcrefRegs=0000C0C0 {rsi rdi r14 r15}, byrefRegs=00000000 {}
IN0039:        call     CORINFO_HELP_NEWSFAST
							GC regs: 0000C0C0 {rsi rdi r14 r15} => 0000C0C1 {rax rsi rdi r14 r15}
                                                              /--*  t158   ref    
Generating: N293 ( 16, 16) [000160] DA----------              *  STORE_LCL_VAR ref    V17 tmp11        d:2 r12 REG r12
							GC regs: 0000C0C1 {rax rsi rdi r14 r15} => 0000C0C0 {rsi rdi r14 r15}
IN003a:        mov      r12, rax
							V17 in reg r12 is becoming live  [000160]
							Live regs: 0000C0E8 {rbx rbp rsi rdi r14 r15} => 0000D0E8 {rbx rbp rsi rdi r12 r14 r15}
							Live vars: {V01 V02 V03 V04 V10 V29} => {V01 V02 V03 V04 V10 V17 V29}
							GC regs: 0000C0C0 {rsi rdi r14 r15} => 0000D0C0 {rsi rdi r12 r14 r15}
Generating: N295 (  2, 10) [000368] I-----------       t368 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] REG rdx $188
IN003b:        mov      rdx, 0xD1FFAB1E
                                                              /--*  t368   long   
Generating: N297 (  4, 12) [000150] n---G-------       t150 = *  IND       ref    REG rdx <l:$4c1, c:$2d5>
IN003c:        mov      rdx, gword ptr [rdx]
							GC regs: 0000D0C0 {rsi rdi r12 r14 r15} => 0000D0C4 {rdx rsi rdi r12 r14 r15}
                                                              /--*  t150   ref    
Generating: N299 (  5, 13) [000262] DA--G-------              *  STORE_LCL_VAR ref    V21 tmp15        d:2 rdx REG rdx
							GC regs: 0000D0C4 {rdx rsi rdi r12 r14 r15} => 0000D0C0 {rsi rdi r12 r14 r15}
							V21 in reg rdx is becoming live  [000262]
							Live regs: 0000D0E8 {rbx rbp rsi rdi r12 r14 r15} => 0000D0EC {rdx rbx rbp rsi rdi r12 r14 r15}
							Live vars: {V01 V02 V03 V04 V10 V17 V29} => {V01 V02 V03 V04 V10 V17 V21 V29}
							GC regs: 0000D0C0 {rsi rdi r12 r14 r15} => 0000D0C4 {rdx rsi rdi r12 r14 r15}
Generating: N301 (  1,  1) [000249] ------------       t249 =    LCL_VAR   ref    V21 tmp15        u:2 rdx REG rdx <l:$4c1, c:$2d5>
Generating: N303 (  1,  1) [000250] -c----------       t250 =    CNS_INT   ref    null REG NA $VN.Null
                                                              /--*  t249   ref    
                                                              +--*  t250   ref    
Generating: N305 (  3,  3) [000251] J------N----              *  EQ        void   REG NA <l:$248, c:$247>
IN003d:        test     rdx, rdx
Generating: N307 (  5,  5) [000252] ------------              *  JTRUE     void   REG NA
IN003e:        je       L_M47830_BB16

Scope info: end block BB08, IL range [000..062)
Scope info: open scopes =
   1 (V01 loc0) [000..0C7)
   3 (V03 loc2) [000..0C7)
   2 (V02 loc1) [000..0C7)
   4 (V04 loc3) [000..0C7)

=============== Generating BB09 [000..000), preds={BB08} succs={BB10} flags=0x00000002.214b0060: i internal label target hascall gcsafe newobj bwd LIR 
BB09 IN (8)={V01 V04 V17 V03 V21     V02 V29 V10} + ByrefExposed + GcHeap
     OUT(7)={V01 V04     V03     V11 V02 V29 V10} + ByrefExposed + GcHeap

Recording Var Locations at start of BB09
  V01(rdi)  V04(r14)  V17(r12)  V03(rbx)  V21(rdx)  V02(rsi)  V29(rbp)  V10(r15)
Liveness not changing: 000000000092003B {V01 V02 V03 V04 V10 V17 V21 V29}
							Live regs: 00000000 {} => 0000D0EC {rdx rbx rbp rsi rdi r12 r14 r15}
							GC regs: 00000000 {} => 0000D0C4 {rdx rsi rdi r12 r14 r15}
							Byref regs: (unchanged) 00000000 {}

      L_M47830_BB09:

      G_M47830_IG06:        ; offs=0000B1H, funclet=00, bbWeight=2   
Label: IG07, GCvars=0000000000000000 {}, gcrefRegs=0000D0C4 {rdx rsi rdi r12 r14 r15}, byrefRegs=00000000 {}

Scope info: begin block BB09, IL range [000..000)
Scope info: open scopes =
   1 (V01 loc0) [000..0C7)
   3 (V03 loc2) [000..0C7)
   2 (V02 loc1) [000..0C7)
   4 (V04 loc3) [000..0C7)
Added IP mapping: NO_MAP STACK_EMPTY (G_M47830_IG07,ins#0,ofs#0) label
Generating: N311 (  1,  1) [000161] ------------       t161 =    LCL_VAR   ref    V17 tmp11        u:2 r12 REG r12 $1d6
                                                              /--*  t161   ref    
Generating: N313 (  2,  2) [000370] ------------       t370 = *  LEA(b+8)  byref  REG rcx
IN003f:        lea      rcx, bword ptr [r12+8]
							Byref regs: 00000000 {} => 00000002 {rcx}
Generating: N315 (  1,  1) [000253] ------------       t253 =    LCL_VAR   ref    V21 tmp15        u:2 rdx (last use) REG rdx <l:$4c1, c:$2d5>
                                                              /--*  t370   byref  
                                                              +--*  t253   ref    
Generating: N317 (???,???) [000476] -A--GO------              *  STOREIND  ref    REG NA
							Byref regs: 00000002 {rcx} => 00000000 {}
							V21 in reg rdx is becoming dead  [000253]
							Live regs: 0000D0EC {rdx rbx rbp rsi rdi r12 r14 r15} => 0000D0E8 {rbx rbp rsi rdi r12 r14 r15}
							Live vars: {V01 V02 V03 V04 V10 V17 V21 V29} => {V01 V02 V03 V04 V10 V17 V29}
							GC regs: 0000D0C4 {rdx rsi rdi r12 r14 r15} => 0000D0C0 {rsi rdi r12 r14 r15}
NoGC Call: savedSet=0000F0E8 {rbx rbp rsi rdi r12 r13 r14 r15}
							Call: GCvars=0000000000000000 {}, gcrefRegs=0000D0C0 {rsi rdi r12 r14 r15}, byrefRegs=00000000 {}
IN0040:        call     CORINFO_HELP_ASSIGN_REF
Generating: N319 (  1,  1) [000256] ------------       t256 =    LCL_VAR   ref    V17 tmp11        u:2 r12 REG r12 $1d6
                                                              /--*  t256   ref    
Generating: N321 (  2,  2) [000372] -c----------       t372 = *  LEA(b+24) byref  REG NA
Generating: N323 (  2, 10) [000156] H-----------       t156 =    CNS_INT(h) long   0xd1ffab1e ftn REG rdx $18a
IN0041:        mov      rdx, 0xD1FFAB1E
                                                              /--*  t372   byref  
                                                              +--*  t156   long   
Generating: N325 (???,???) [000477] -A--GO------              *  STOREIND  long   REG NA
IN0042:        mov      qword ptr [r12+24], rdx
Added IP mapping: 0x005C (G_M47830_IG07,ins#4,ofs#25) label
Generating: N327 (???,???) [000478] ------------                 IL_OFFSET void   IL offset: 0x5c REG NA
Generating: N329 (  2, 10) [000375] I-----------       t375 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_0] REG rcx $186
IN0043:        mov      rcx, 0xD1FFAB1E
Generating: N331 (  1,  1) [000164] ------------       t164 =    LCL_VAR   ref    V17 tmp11        u:2 r12 REG r12 $1d6
                                                              /--*  t375   long   
                                                              +--*  t164   ref    
Generating: N333 (???,???) [000479] -A--G-------              *  STOREIND  ref    REG NA
IN0044:        mov      rdx, r12
NoGC Call: savedSet=0000F0E8 {rbx rbp rsi rdi r12 r13 r14 r15}
							Call: GCvars=0000000000000000 {}, gcrefRegs=0000D0C0 {rsi rdi r12 r14 r15}, byrefRegs=00000000 {}
IN0045:        call     CORINFO_HELP_CHECKED_ASSIGN_REF
Generating: N335 (  1,  1) [000163] ------------       t163 =    LCL_VAR   ref    V17 tmp11        u:2 r12 (last use) REG r12 $1d6
                                                              /--*  t163   ref    
Generating: N337 (  1,  3) [000175] DA----------              *  STORE_LCL_VAR ref    V11 tmp5         d:4 r8 REG r8
							V17 in reg r12 is becoming dead  [000163]
							Live regs: 0000D0E8 {rbx rbp rsi rdi r12 r14 r15} => 0000C0E8 {rbx rbp rsi rdi r14 r15}
							Live vars: {V01 V02 V03 V04 V10 V17 V29} => {V01 V02 V03 V04 V10 V29}
							GC regs: 0000D0C0 {rsi rdi r12 r14 r15} => 0000C0C0 {rsi rdi r14 r15}
IN0046:        mov      r8, r12
							V11 in reg r8 is becoming live  [000175]
							Live regs: 0000C0E8 {rbx rbp rsi rdi r14 r15} => 0000C1E8 {rbx rbp rsi rdi r8 r14 r15}
							Live vars: {V01 V02 V03 V04 V10 V29} => {V01 V02 V03 V04 V10 V11 V29}
							GC regs: 0000C0C0 {rsi rdi r14 r15} => 0000C1C0 {rsi rdi r8 r14 r15}

Scope info: end block BB09, IL range [000..000)
Scope info: open scopes =
   1 (V01 loc0) [000..0C7)
   3 (V03 loc2) [000..0C7)
   2 (V02 loc1) [000..0C7)
   4 (V04 loc3) [000..0C7)

=============== Generating BB10 [062..085) -> BB13 (cond), preds={BB07,BB09} succs={BB11,BB13} flags=0x00000002.210b0020: i label target hascall gcsafe bwd LIR 
BB10 IN (7)={V01 V04 V03 V11     V02 V29 V10    } + ByrefExposed + GcHeap
     OUT(6)={V01     V03     V15 V02 V29     V14} + ByrefExposed + GcHeap

Recording Var Locations at start of BB10
  V01(rdi)  V04(r14)  V03(rbx)  V11(r8)  V02(rsi)  V29(rbp)  V10(r15)
Liveness not changing: 0000000000920093 {V01 V02 V03 V04 V10 V11 V29}
							Live regs: 00000000 {} => 0000C1E8 {rbx rbp rsi rdi r8 r14 r15}
							GC regs: 00000000 {} => 0000C1C0 {rsi rdi r8 r14 r15}
							Byref regs: (unchanged) 00000000 {}

      L_M47830_BB10:

      G_M47830_IG07:        ; offs=00012EH, funclet=00, bbWeight=2   
Label: IG08, GCvars=0000000000000000 {}, gcrefRegs=0000C1C0 {rsi rdi r8 r14 r15}, byrefRegs=00000000 {}

Scope info: begin block BB10, IL range [062..085)
Scope info: open scopes =
   1 (V01 loc0) [000..0C7)
   3 (V03 loc2) [000..0C7)
   2 (V02 loc1) [000..0C7)
   4 (V04 loc3) [000..0C7)
Generating: N341 (  1,  1) [000070] ------------        t70 =    LCL_VAR   ref    V11 tmp5         u:3 r8 (last use) REG r8 $4c4
                                                              /--*  t70    ref    
Generating: N343 (???,???) [000516] ------------       t516 = *  PUTARG_REG ref    REG r8
							V11 in reg r8 is becoming dead  [000070]
							Live regs: 0000C1E8 {rbx rbp rsi rdi r8 r14 r15} => 0000C0E8 {rbx rbp rsi rdi r14 r15}
							Live vars: {V01 V02 V03 V04 V10 V11 V29} => {V01 V02 V03 V04 V10 V29}
							GC regs: 0000C1C0 {rsi rdi r8 r14 r15} => 0000C0C0 {rsi rdi r14 r15}
							GC regs: 0000C0C0 {rsi rdi r14 r15} => 0000C1C0 {rsi rdi r8 r14 r15}
Generating: N345 (  1,  1) [000069] ------------        t69 =    LCL_VAR   ref    V10 tmp4         u:2 r15 (last use) REG r15 $2cc
                                                              /--*  t69    ref    
Generating: N347 (???,???) [000517] ------------       t517 = *  PUTARG_REG ref    REG rdx
							V10 in reg r15 is becoming dead  [000069]
							Live regs: 0000C0E8 {rbx rbp rsi rdi r14 r15} => 000040E8 {rbx rbp rsi rdi r14}
							Live vars: {V01 V02 V03 V04 V10 V29} => {V01 V02 V03 V04 V29}
							GC regs: 0000C1C0 {rsi rdi r8 r14 r15} => 000041C0 {rsi rdi r8 r14}
IN0047:        mov      rdx, r15
							GC regs: 000041C0 {rsi rdi r8 r14} => 000041C4 {rdx rsi rdi r8 r14}
Generating: N349 (  2, 10) [000072] H-----------        t72 =    CNS_INT(h) long   0xd1ffab1e method REG rcx $18d
IN0048:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t72    long   
Generating: N351 (???,???) [000518] ------------       t518 = *  PUTARG_REG long   REG rcx
                                                              /--*  t516   ref    arg2 in r8
                                                              +--*  t517   ref    arg1 in rdx
                                                              +--*  t518   long   arg0 in rcx
Generating: N353 ( 18, 20) [000071] --CXG-------        t71 = *  CALL      ref    System.Linq.Enumerable.Where REG rax $2db
							GC regs: 000041C4 {rdx rsi rdi r8 r14} => 000040C4 {rdx rsi rdi r14}
							GC regs: 000040C4 {rdx rsi rdi r14} => 000040C0 {rsi rdi r14}
							Call: GCvars=0000000000000000 {}, gcrefRegs=000040C0 {rsi rdi r14}, byrefRegs=00000000 {}
IN0049:        call     System.Linq.Enumerable:Where(System.Collections.Generic.IEnumerable`1[__Canon],System.Func`2[__Canon,Boolean]):System.Collections.Generic.IEnumerable`1[__Canon]
							GC regs: 000040C0 {rsi rdi r14} => 000040C1 {rax rsi rdi r14}
                                                              /--*  t71    ref    
Generating: N355 ( 18, 20) [000075] DA-XG-------              *  STORE_LCL_VAR ref    V05 loc4         d:2 r15 REG r15
							GC regs: 000040C1 {rax rsi rdi r14} => 000040C0 {rsi rdi r14}
IN004a:        mov      r15, rax
							V05 in reg r15 is becoming live  [000075]
							Live regs: 000040E8 {rbx rbp rsi rdi r14} => 0000C0E8 {rbx rbp rsi rdi r14 r15}
							Live vars: {V01 V02 V03 V04 V29} => {V01 V02 V03 V04 V05 V29}
							GC regs: 000040C0 {rsi rdi r14} => 0000C0C0 {rsi rdi r14 r15}
Added IP mapping: 0x0069 STACK_EMPTY (G_M47830_IG08,ins#4,ofs#21) label
Generating: N357 (???,???) [000480] ------------                 IL_OFFSET void   IL offset: 0x69 REG NA
Generating: N359 (  2, 10) [000273] ------------       t273 =    CNS_INT   long   0x7ffc7e783cd8 REG rcx $347
IN004b:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t273   long   
Generating: N361 (???,???) [000519] ------------       t519 = *  PUTARG_REG long   REG rcx
Generating: N363 (  1,  1) [000274] ------------       t274 =    CNS_INT   int    40 REG rdx $4a
IN004c:        mov      edx, 40
                                                              /--*  t274   int    
Generating: N365 (???,???) [000520] ------------       t520 = *  PUTARG_REG int    REG rdx
                                                              /--*  t519   long   arg0 in rcx
                                                              +--*  t520   int    arg1 in rdx
Generating: N367 ( 17, 18) [000275] H-CXG-------       t275 = *  CALL help long   HELPER.CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE REG rax $309
							Call: GCvars=0000000000000000 {}, gcrefRegs=0000C0C0 {rsi rdi r14 r15}, byrefRegs=00000000 {}
IN004d:        call     CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
Generating: N369 (  2, 10) [000381] I-----------       t381 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<Compatible>k__BackingField] REG rdx $18e
IN004e:        mov      rdx, 0xD1FFAB1E
                                                              /--*  t381   long   
Generating: N371 (  4, 12) [000271] n---G-------       t271 = *  IND       ref    REG r9 <l:$4c5, c:$2de>
IN004f:        mov      r9, gword ptr [rdx]
							GC regs: 0000C0C0 {rsi rdi r14 r15} => 0000C2C0 {rsi rdi r9 r14 r15}
                                                              /--*  t271   ref    
Generating: N373 ( 21, 30) [000283] DA-XG-------              *  STORE_LCL_VAR ref    V23 tmp17        d:2 r9 REG r9
							GC regs: 0000C2C0 {rsi rdi r9 r14 r15} => 0000C0C0 {rsi rdi r14 r15}
							V23 in reg r9 is becoming live  [000283]
							Live regs: 0000C0E8 {rbx rbp rsi rdi r14 r15} => 0000C2E8 {rbx rbp rsi rdi r9 r14 r15}
							Live vars: {V01 V02 V03 V04 V05 V29} => {V01 V02 V03 V04 V05 V23 V29}
							GC regs: 0000C0C0 {rsi rdi r14 r15} => 0000C2C0 {rsi rdi r9 r14 r15}
Generating: N375 (  2, 10) [000382] H-----------       t382 =    CNS_INT(h) long   0xD1FFAB1E "*.csproj" REG rdx $18f
IN0050:        mov      rdx, 0xD1FFAB1E
                                                              /--*  t382   long   
Generating: N377 (  4, 12) [000383] #---G-------       t383 = *  IND       ref    REG rdx $1e0
IN0051:        mov      rdx, gword ptr [rdx]
							GC regs: 0000C2C0 {rsi rdi r9 r14 r15} => 0000C2C4 {rdx rsi rdi r9 r14 r15}
                                                              /--*  t383   ref    
Generating: N379 (???,???) [000521] ----G-------       t521 = *  PUTARG_REG ref    REG rdx
							GC regs: 0000C2C4 {rdx rsi rdi r9 r14 r15} => 0000C2C0 {rsi rdi r9 r14 r15}
							GC regs: 0000C2C0 {rsi rdi r9 r14 r15} => 0000C2C4 {rdx rsi rdi r9 r14 r15}
Generating: N381 (  1,  1) [000077] ------------        t77 =    LCL_VAR   ref    V04 loc3         u:2 r14 (last use) REG r14 <l:$1ca, c:$2c1>
                                                              /--*  t77    ref    
Generating: N383 (???,???) [000522] ------------       t522 = *  PUTARG_REG ref    REG rcx
							V04 in reg r14 is becoming dead  [000077]
							Live regs: 0000C2E8 {rbx rbp rsi rdi r9 r14 r15} => 000082E8 {rbx rbp rsi rdi r9 r15}
							Live vars: {V01 V02 V03 V04 V05 V23 V29} => {V01 V02 V03 V05 V23 V29}
							GC regs: 0000C2C4 {rdx rsi rdi r9 r14 r15} => 000082C4 {rdx rsi rdi r9 r15}
IN0052:        mov      rcx, r14
							GC regs: 000082C4 {rdx rsi rdi r9 r15} => 000082C6 {rcx rdx rsi rdi r9 r15}
Generating: N385 (  1,  1) [000280] ------------       t280 =    LCL_VAR   ref    V23 tmp17        u:2 r9 (last use) REG r9 <l:$4c5, c:$2de>
                                                              /--*  t280   ref    
Generating: N387 (???,???) [000523] ------------       t523 = *  PUTARG_REG ref    REG r9
							V23 in reg r9 is becoming dead  [000280]
							Live regs: 000082E8 {rbx rbp rsi rdi r9 r15} => 000080E8 {rbx rbp rsi rdi r15}
							Live vars: {V01 V02 V03 V05 V23 V29} => {V01 V02 V03 V05 V29}
							GC regs: 000082C6 {rcx rdx rsi rdi r9 r15} => 000080C6 {rcx rdx rsi rdi r15}
							GC regs: 000080C6 {rcx rdx rsi rdi r15} => 000082C6 {rcx rdx rsi rdi r9 r15}
Generating: N389 (  1,  1) [000279] ------------       t279 =    CNS_INT   int    1 REG r8 $46
IN0053:        mov      r8d, 1
                                                              /--*  t279   int    
Generating: N391 (???,???) [000524] ------------       t524 = *  PUTARG_REG int    REG r8
                                                              /--*  t521   ref    arg1 in rdx
                                                              +--*  t522   ref    arg0 in rcx
                                                              +--*  t523   ref    arg3 in r9
                                                              +--*  t524   int    arg2 in r8
Generating: N393 ( 21, 24) [000281] --CXG-------       t281 = *  CALL      ref    System.IO.Directory.InternalEnumeratePaths REG rax $2e3
							GC regs: 000082C6 {rcx rdx rsi rdi r9 r15} => 000082C2 {rcx rsi rdi r9 r15}
							GC regs: 000082C2 {rcx rsi rdi r9 r15} => 000082C0 {rsi rdi r9 r15}
							GC regs: 000082C0 {rsi rdi r9 r15} => 000080C0 {rsi rdi r15}
							Call: GCvars=0000000000000000 {}, gcrefRegs=000080C0 {rsi rdi r15}, byrefRegs=00000000 {}
IN0054:        call     System.IO.Directory:InternalEnumeratePaths(System.String,System.String,int,System.IO.EnumerationOptions):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]
							GC regs: 000080C0 {rsi rdi r15} => 000080C1 {rax rsi rdi r15}
                                                              /--*  t281   ref    
Generating: N395 ( 21, 24) [000290] DA-XG-------              *  STORE_LCL_VAR ref    V24 tmp18        d:2 r8 REG r8
							GC regs: 000080C1 {rax rsi rdi r15} => 000080C0 {rsi rdi r15}
IN0055:        mov      r8, rax
							V24 in reg r8 is becoming live  [000290]
							Live regs: 000080E8 {rbx rbp rsi rdi r15} => 000081E8 {rbx rbp rsi rdi r8 r15}
							Live vars: {V01 V02 V03 V05 V29} => {V01 V02 V03 V05 V24 V29}
							GC regs: 000080C0 {rsi rdi r15} => 000081C0 {rsi rdi r8 r15}
Generating: N397 (  1,  1) [000285] ------------       t285 =    LCL_VAR   ref    V01 loc0         u:2 rdi REG rdi $1c1
                                                              /--*  t285   ref    
Generating: N399 (  2,  2) [000389] -c----------       t389 = *  LEA(b+16) byref  REG NA
                                                              /--*  t389   byref  
Generating: N401 (  4,  4) [000286] n---GO------       t286 = *  IND       int    REG rdx <l:$24c, c:$24b>
IN0056:        mov      edx, dword ptr [rdi+16]
                                                              /--*  t286   int    
Generating: N403 (???,???) [000525] ----GO------       t525 = *  PUTARG_REG int    REG rdx
Generating: N405 (  1,  1) [000076] ------------        t76 =    LCL_VAR   ref    V01 loc0         u:2 rdi REG rdi $1c1
                                                              /--*  t76    ref    
Generating: N407 (???,???) [000526] ------------       t526 = *  PUTARG_REG ref    REG rcx
IN0057:        mov      rcx, rdi
							GC regs: 000081C0 {rsi rdi r8 r15} => 000081C2 {rcx rsi rdi r8 r15}
Generating: N409 (  1,  1) [000287] ------------       t287 =    LCL_VAR   ref    V24 tmp18        u:2 r8 (last use) REG r8 $2e3
                                                              /--*  t287   ref    
Generating: N411 (???,???) [000527] ------------       t527 = *  PUTARG_REG ref    REG r8
							V24 in reg r8 is becoming dead  [000287]
							Live regs: 000081E8 {rbx rbp rsi rdi r8 r15} => 000080E8 {rbx rbp rsi rdi r15}
							Live vars: {V01 V02 V03 V05 V24 V29} => {V01 V02 V03 V05 V29}
							GC regs: 000081C2 {rcx rsi rdi r8 r15} => 000080C2 {rcx rsi rdi r15}
							GC regs: 000080C2 {rcx rsi rdi r15} => 000081C2 {rcx rsi rdi r8 r15}
                                                              /--*  t525   int    arg1 in rdx
                                                              +--*  t526   ref    this in rcx
                                                              +--*  t527   ref    arg2 in r8
Generating: N413 ( 20, 15) [000288] --CXGO------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange REG NA $VN.Void
							GC regs: 000081C2 {rcx rsi rdi r8 r15} => 000081C0 {rsi rdi r8 r15}
							GC regs: 000081C0 {rsi rdi r8 r15} => 000080C0 {rsi rdi r15}
							Call: GCvars=0000000000000000 {}, gcrefRegs=000080C0 {rsi rdi r15}, byrefRegs=00000000 {}
IN0058:        call     System.Collections.Generic.List`1[__Canon][System.__Canon]:InsertRange(int,System.Collections.Generic.IEnumerable`1[__Canon]):this
Added IP mapping: 0x007A STACK_EMPTY (G_M47830_IG08,ins#18,ofs#95)
Generating: N415 (???,???) [000481] ------------                 IL_OFFSET void   IL offset: 0x7a REG NA
Generating: N417 (  2, 10) [000395] I-----------       t395 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] REG rcx $191
IN0059:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t395   long   
Generating: N419 (  4, 12) [000084] n---G-------        t84 = *  IND       ref    REG r8 <l:$4c6, c:$2e9>
IN005a:        mov      r8, gword ptr [rcx]
							GC regs: 000080C0 {rsi rdi r15} => 000081C0 {rsi rdi r8 r15}
                                                              /--*  t84    ref    
Generating: N421 (  5, 13) [000091] DA--G-------              *  STORE_LCL_VAR ref    V12 tmp6         d:2 r8 REG r8
							GC regs: 000081C0 {rsi rdi r8 r15} => 000080C0 {rsi rdi r15}
							V12 in reg r8 is becoming live  [000091]
							Live regs: 000080E8 {rbx rbp rsi rdi r15} => 000081E8 {rbx rbp rsi rdi r8 r15}
							Live vars: {V01 V02 V03 V05 V29} => {V01 V02 V03 V05 V12 V29}
							GC regs: 000080C0 {rsi rdi r15} => 000081C0 {rsi rdi r8 r15}
Generating: N423 (  1,  1) [000083] ------------        t83 =    LCL_VAR   ref    V05 loc4         u:2 r15 (last use) REG r15 $2db
                                                              /--*  t83    ref    
Generating: N425 (  1,  3) [000101] DA----------              *  STORE_LCL_VAR ref    V14 tmp8         d:2 r15 REG r15
							V05 in reg r15 is becoming dead  [000083]
							Live regs: 000081E8 {rbx rbp rsi rdi r8 r15} => 000001E8 {rbx rbp rsi rdi r8}
							Live vars: {V01 V02 V03 V05 V12 V29} => {V01 V02 V03 V12 V29}
							GC regs: 000081C0 {rsi rdi r8 r15} => 000001C0 {rsi rdi r8}
							V14 in reg r15 is becoming live  [000101]
							Live regs: 000001E8 {rbx rbp rsi rdi r8} => 000081E8 {rbx rbp rsi rdi r8 r15}
							Live vars: {V01 V02 V03 V12 V29} => {V01 V02 V03 V12 V14 V29}
							GC regs: 000001C0 {rsi rdi r8} => 000081C0 {rsi rdi r8 r15}
Generating: N427 (  1,  1) [000092] ------------        t92 =    LCL_VAR   ref    V12 tmp6         u:2 r8 (last use) REG r8 <l:$4c6, c:$2e9>
                                                              /--*  t92    ref    
Generating: N429 (  1,  3) [000104] DA----------              *  STORE_LCL_VAR ref    V15 tmp9         d:2 r8 REG r8
							V12 in reg r8 is becoming dead  [000092]
							Live regs: 000081E8 {rbx rbp rsi rdi r8 r15} => 000080E8 {rbx rbp rsi rdi r15}
							Live vars: {V01 V02 V03 V12 V14 V29} => {V01 V02 V03 V14 V29}
							GC regs: 000081C0 {rsi rdi r8 r15} => 000080C0 {rsi rdi r15}
							V15 in reg r8 is becoming live  [000104]
							Live regs: 000080E8 {rbx rbp rsi rdi r15} => 000081E8 {rbx rbp rsi rdi r8 r15}
							Live vars: {V01 V02 V03 V14 V29} => {V01 V02 V03 V14 V15 V29}
							GC regs: 000080C0 {rsi rdi r15} => 000081C0 {rsi rdi r8 r15}
Generating: N431 (  1,  1) [000093] ------------        t93 =    LCL_VAR   ref    V15 tmp9         u:2 r8 REG r8 <l:$4c6, c:$2e9>
Generating: N433 (  1,  1) [000094] -c----------        t94 =    CNS_INT   ref    null REG NA $VN.Null
                                                              /--*  t93    ref    
                                                              +--*  t94    ref    
Generating: N435 (  3,  3) [000095] J------N----              *  NE        void   REG NA <l:$24e, c:$24d>
IN005b:        test     r8, r8
Generating: N437 (  5,  5) [000096] ------------              *  JTRUE     void   REG NA
IN005c:        jne      L_M47830_BB13

Scope info: end block BB10, IL range [062..085)
Scope info: open scopes =
   1 (V01 loc0) [000..0C7)
   3 (V03 loc2) [000..0C7)
   2 (V02 loc1) [000..0C7)

=============== Generating BB11 [000..09C) -> BB16 (cond), preds={BB10} succs={BB12,BB16} flags=0x00000002.21480020: i hascall gcsafe newobj bwd LIR 
BB11 IN (5)={V01     V03     V02 V29 V14} + ByrefExposed + GcHeap
     OUT(7)={V01 V16 V03 V25 V02 V29 V14} + ByrefExposed + GcHeap

Recording Var Locations at start of BB11
  V01(rdi)  V03(rbx)  V02(rsi)  V29(rbp)  V14(r15)
Change life 0000000001120111 {V01 V02 V03 V14 V15 V29} -> 0000000001120011 {V01 V02 V03 V14 V29}
							V15 in reg r8 is becoming dead  [------]
							Live regs: (unchanged) 00000000 {}
							Live regs: 00000000 {} => 000080E8 {rbx rbp rsi rdi r15}
							GC regs: 00000000 {} => 000080C0 {rsi rdi r15}
							Byref regs: (unchanged) 00000000 {}

      L_M47830_BB11:

Scope info: begin block BB11, IL range [000..09C)
Scope info: open scopes =
   1 (V01 loc0) [000..0C7)
   3 (V03 loc2) [000..0C7)
   2 (V02 loc1) [000..0C7)
Generating: N441 (  2, 10) [000128] H-----------       t128 =    CNS_INT(h) long   0xd1ffab1e token REG rcx $192
IN005d:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t128   long   
Generating: N443 (???,???) [000528] ------------       t528 = *  PUTARG_REG long   REG rcx
                                                              /--*  t528   long   arg0 in rcx
Generating: N445 ( 16, 16) [000129] --C---------       t129 = *  CALL help ref    HELPER.CORINFO_HELP_NEWSFAST REG rax $1e4
							Call: GCvars=0000000000000000 {}, gcrefRegs=000080C0 {rsi rdi r15}, byrefRegs=00000000 {}
IN005e:        call     CORINFO_HELP_NEWSFAST
							GC regs: 000080C0 {rsi rdi r15} => 000080C1 {rax rsi rdi r15}
                                                              /--*  t129   ref    
Generating: N447 ( 16, 16) [000131] DA----------              *  STORE_LCL_VAR ref    V16 tmp10        d:2 r14 REG r14
							GC regs: 000080C1 {rax rsi rdi r15} => 000080C0 {rsi rdi r15}
IN005f:        mov      r14, rax
							V16 in reg r14 is becoming live  [000131]
							Live regs: 000080E8 {rbx rbp rsi rdi r15} => 0000C0E8 {rbx rbp rsi rdi r14 r15}
							Live vars: {V01 V02 V03 V14 V29} => {V01 V02 V03 V14 V16 V29}
							GC regs: 000080C0 {rsi rdi r15} => 0000C0C0 {rsi rdi r14 r15}
Generating: N449 (  2, 10) [000399] I-----------       t399 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9] REG rdx $188
IN0060:        mov      rdx, 0xD1FFAB1E
                                                              /--*  t399   long   
Generating: N451 (  4, 12) [000121] n---G-------       t121 = *  IND       ref    REG rdx <l:$4c7, c:$2f0>
IN0061:        mov      rdx, gword ptr [rdx]
							GC regs: 0000C0C0 {rsi rdi r14 r15} => 0000C0C4 {rdx rsi rdi r14 r15}
                                                              /--*  t121   ref    
Generating: N453 (  5, 13) [000305] DA--G-------              *  STORE_LCL_VAR ref    V25 tmp19        d:2 rdx REG rdx
							GC regs: 0000C0C4 {rdx rsi rdi r14 r15} => 0000C0C0 {rsi rdi r14 r15}
							V25 in reg rdx is becoming live  [000305]
							Live regs: 0000C0E8 {rbx rbp rsi rdi r14 r15} => 0000C0EC {rdx rbx rbp rsi rdi r14 r15}
							Live vars: {V01 V02 V03 V14 V16 V29} => {V01 V02 V03 V14 V16 V25 V29}
							GC regs: 0000C0C0 {rsi rdi r14 r15} => 0000C0C4 {rdx rsi rdi r14 r15}
Generating: N455 (  1,  1) [000292] ------------       t292 =    LCL_VAR   ref    V25 tmp19        u:2 rdx REG rdx <l:$4c7, c:$2f0>
Generating: N457 (  1,  1) [000293] -c----------       t293 =    CNS_INT   ref    null REG NA $VN.Null
                                                              /--*  t292   ref    
                                                              +--*  t293   ref    
Generating: N459 (  3,  3) [000294] J------N----              *  EQ        void   REG NA <l:$250, c:$24f>
IN0062:        test     rdx, rdx
Generating: N461 (  5,  5) [000295] ------------              *  JTRUE     void   REG NA
IN0063:        je       L_M47830_BB16

Scope info: end block BB11, IL range [000..09C)
Scope info: open scopes =
   1 (V01 loc0) [000..0C7)
   3 (V03 loc2) [000..0C7)
   2 (V02 loc1) [000..0C7)

=============== Generating BB12 [000..000), preds={BB11} succs={BB13} flags=0x00000002.214b0060: i internal label target hascall gcsafe newobj bwd LIR 
BB12 IN (7)={V01 V16 V03 V25     V02 V29 V14} + ByrefExposed + GcHeap
     OUT(6)={V01     V03     V15 V02 V29 V14} + ByrefExposed + GcHeap

Recording Var Locations at start of BB12
  V01(rdi)  V16(r14)  V03(rbx)  V25(rdx)  V02(rsi)  V29(rbp)  V14(r15)
Liveness not changing: 0000000001120055 {V01 V02 V03 V14 V16 V25 V29}
							Live regs: 00000000 {} => 0000C0EC {rdx rbx rbp rsi rdi r14 r15}
							GC regs: 00000000 {} => 0000C0C4 {rdx rsi rdi r14 r15}
							Byref regs: (unchanged) 00000000 {}

      L_M47830_BB12:

      G_M47830_IG08:        ; offs=00015CH, funclet=00, bbWeight=2   
Label: IG09, GCvars=0000000000000000 {}, gcrefRegs=0000C0C4 {rdx rsi rdi r14 r15}, byrefRegs=00000000 {}

Scope info: begin block BB12, IL range [000..000)
Scope info: open scopes =
   1 (V01 loc0) [000..0C7)
   3 (V03 loc2) [000..0C7)
   2 (V02 loc1) [000..0C7)
Added IP mapping: NO_MAP STACK_EMPTY (G_M47830_IG09,ins#0,ofs#0) label
Generating: N465 (  1,  1) [000132] ------------       t132 =    LCL_VAR   ref    V16 tmp10        u:2 r14 REG r14 $1e4
                                                              /--*  t132   ref    
Generating: N467 (  2,  2) [000401] ------------       t401 = *  LEA(b+8)  byref  REG rcx
IN0064:        lea      rcx, bword ptr [r14+8]
							Byref regs: 00000000 {} => 00000002 {rcx}
Generating: N469 (  1,  1) [000296] ------------       t296 =    LCL_VAR   ref    V25 tmp19        u:2 rdx (last use) REG rdx <l:$4c7, c:$2f0>
                                                              /--*  t401   byref  
                                                              +--*  t296   ref    
Generating: N471 (???,???) [000482] -A--GO------              *  STOREIND  ref    REG NA
							Byref regs: 00000002 {rcx} => 00000000 {}
							V25 in reg rdx is becoming dead  [000296]
							Live regs: 0000C0EC {rdx rbx rbp rsi rdi r14 r15} => 0000C0E8 {rbx rbp rsi rdi r14 r15}
							Live vars: {V01 V02 V03 V14 V16 V25 V29} => {V01 V02 V03 V14 V16 V29}
							GC regs: 0000C0C4 {rdx rsi rdi r14 r15} => 0000C0C0 {rsi rdi r14 r15}
NoGC Call: savedSet=0000F0E8 {rbx rbp rsi rdi r12 r13 r14 r15}
							Call: GCvars=0000000000000000 {}, gcrefRegs=0000C0C0 {rsi rdi r14 r15}, byrefRegs=00000000 {}
IN0065:        call     CORINFO_HELP_ASSIGN_REF
Generating: N473 (  1,  1) [000299] ------------       t299 =    LCL_VAR   ref    V16 tmp10        u:2 r14 REG r14 $1e4
                                                              /--*  t299   ref    
Generating: N475 (  2,  2) [000403] -c----------       t403 = *  LEA(b+24) byref  REG NA
Generating: N477 (  2, 10) [000127] H-----------       t127 =    CNS_INT(h) long   0xd1ffab1e ftn REG rdx $194
IN0066:        mov      rdx, 0xD1FFAB1E
                                                              /--*  t403   byref  
                                                              +--*  t127   long   
Generating: N479 (???,???) [000483] -A--GO------              *  STOREIND  long   REG NA
IN0067:        mov      qword ptr [r14+24], rdx
Added IP mapping: 0x0096 (G_M47830_IG09,ins#4,ofs#23) label
Generating: N481 (???,???) [000484] ------------                 IL_OFFSET void   IL offset: 0x96 REG NA
Generating: N483 (  2, 10) [000406] I-----------       t406 =    CNS_INT(h) long   0xd1ffab1e static Fseq[<>9__2_1] REG rcx $191
IN0068:        mov      rcx, 0xD1FFAB1E
Generating: N485 (  1,  1) [000135] ------------       t135 =    LCL_VAR   ref    V16 tmp10        u:2 r14 REG r14 $1e4
                                                              /--*  t406   long   
                                                              +--*  t135   ref    
Generating: N487 (???,???) [000485] -A--G-------              *  STOREIND  ref    REG NA
IN0069:        mov      rdx, r14
NoGC Call: savedSet=0000F0E8 {rbx rbp rsi rdi r12 r13 r14 r15}
							Call: GCvars=0000000000000000 {}, gcrefRegs=0000C0C0 {rsi rdi r14 r15}, byrefRegs=00000000 {}
IN006a:        call     CORINFO_HELP_CHECKED_ASSIGN_REF
Generating: N489 (  1,  1) [000134] ------------       t134 =    LCL_VAR   ref    V16 tmp10        u:2 r14 (last use) REG r14 $1e4
                                                              /--*  t134   ref    
Generating: N491 (  1,  3) [000148] DA----------              *  STORE_LCL_VAR ref    V15 tmp9         d:4 r8 REG r8
							V16 in reg r14 is becoming dead  [000134]
							Live regs: 0000C0E8 {rbx rbp rsi rdi r14 r15} => 000080E8 {rbx rbp rsi rdi r15}
							Live vars: {V01 V02 V03 V14 V16 V29} => {V01 V02 V03 V14 V29}
							GC regs: 0000C0C0 {rsi rdi r14 r15} => 000080C0 {rsi rdi r15}
IN006b:        mov      r8, r14
							V15 in reg r8 is becoming live  [000148]
							Live regs: 000080E8 {rbx rbp rsi rdi r15} => 000081E8 {rbx rbp rsi rdi r8 r15}
							Live vars: {V01 V02 V03 V14 V29} => {V01 V02 V03 V14 V15 V29}
							GC regs: 000080C0 {rsi rdi r15} => 000081C0 {rsi rdi r8 r15}

Scope info: end block BB12, IL range [000..000)
Scope info: open scopes =
   1 (V01 loc0) [000..0C7)
   3 (V03 loc2) [000..0C7)
   2 (V02 loc1) [000..0C7)

=============== Generating BB13 [09C..0A6), preds={BB10,BB12} succs={BB14} flags=0x00000002.210b0020: i label target hascall gcsafe bwd LIR 
BB13 IN (6)={V01 V03 V15 V02 V29 V14} + ByrefExposed + GcHeap
     OUT(4)={V01 V03     V02 V29    } + ByrefExposed + GcHeap

Recording Var Locations at start of BB13
  V01(rdi)  V03(rbx)  V15(r8)  V02(rsi)  V29(rbp)  V14(r15)
Liveness not changing: 0000000001120111 {V01 V02 V03 V14 V15 V29}
							Live regs: 00000000 {} => 000081E8 {rbx rbp rsi rdi r8 r15}
							GC regs: 00000000 {} => 000081C0 {rsi rdi r8 r15}
							Byref regs: (unchanged) 00000000 {}

      L_M47830_BB13:

      G_M47830_IG09:        ; offs=0001F9H, funclet=00, bbWeight=2   
Label: IG10, GCvars=0000000000000000 {}, gcrefRegs=000081C0 {rsi rdi r8 r15}, byrefRegs=00000000 {}

Scope info: begin block BB13, IL range [09C..0A6)
Scope info: open scopes =
   1 (V01 loc0) [000..0C7)
   3 (V03 loc2) [000..0C7)
   2 (V02 loc1) [000..0C7)
Generating: N495 (  1,  1) [000111] ------------       t111 =    LCL_VAR   ref    V15 tmp9         u:3 r8 (last use) REG r8 $4ca
                                                              /--*  t111   ref    
Generating: N497 (???,???) [000529] ------------       t529 = *  PUTARG_REG ref    REG r8
							V15 in reg r8 is becoming dead  [000111]
							Live regs: 000081E8 {rbx rbp rsi rdi r8 r15} => 000080E8 {rbx rbp rsi rdi r15}
							Live vars: {V01 V02 V03 V14 V15 V29} => {V01 V02 V03 V14 V29}
							GC regs: 000081C0 {rsi rdi r8 r15} => 000080C0 {rsi rdi r15}
							GC regs: 000080C0 {rsi rdi r15} => 000081C0 {rsi rdi r8 r15}
Generating: N499 (  1,  1) [000110] ------------       t110 =    LCL_VAR   ref    V14 tmp8         u:2 r15 (last use) REG r15 $2db
                                                              /--*  t110   ref    
Generating: N501 (???,???) [000530] ------------       t530 = *  PUTARG_REG ref    REG rdx
							V14 in reg r15 is becoming dead  [000110]
							Live regs: 000080E8 {rbx rbp rsi rdi r15} => 000000E8 {rbx rbp rsi rdi}
							Live vars: {V01 V02 V03 V14 V29} => {V01 V02 V03 V29}
							GC regs: 000081C0 {rsi rdi r8 r15} => 000001C0 {rsi rdi r8}
IN006c:        mov      rdx, r15
							GC regs: 000001C0 {rsi rdi r8} => 000001C4 {rdx rsi rdi r8}
Generating: N503 (  2, 10) [000113] H-----------       t113 =    CNS_INT(h) long   0xd1ffab1e method REG rcx $196
IN006d:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t113   long   
Generating: N505 (???,???) [000531] ------------       t531 = *  PUTARG_REG long   REG rcx
                                                              /--*  t529   ref    arg2 in r8
                                                              +--*  t530   ref    arg1 in rdx
                                                              +--*  t531   long   arg0 in rcx
Generating: N507 ( 18, 20) [000112] --CXG-------       t112 = *  CALL      ref    System.Linq.Enumerable.SelectMany REG rax $2f6
							GC regs: 000001C4 {rdx rsi rdi r8} => 000000C4 {rdx rsi rdi}
							GC regs: 000000C4 {rdx rsi rdi} => 000000C0 {rsi rdi}
							Call: GCvars=0000000000000000 {}, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}
IN006e:        call     System.Linq.Enumerable:SelectMany(System.Collections.Generic.IEnumerable`1[__Canon],System.Func`2[__Canon,__Canon]):System.Collections.Generic.IEnumerable`1[__Canon]
							GC regs: 000000C0 {rsi rdi} => 000000C1 {rax rsi rdi}
                                                              /--*  t112   ref    
Generating: N509 ( 18, 20) [000313] DA-XG-------              *  STORE_LCL_VAR ref    V27 tmp21        d:2 r8 REG r8
							GC regs: 000000C1 {rax rsi rdi} => 000000C0 {rsi rdi}
IN006f:        mov      r8, rax
							V27 in reg r8 is becoming live  [000313]
							Live regs: 000000E8 {rbx rbp rsi rdi} => 000001E8 {rbx rbp rsi rdi r8}
							Live vars: {V01 V02 V03 V29} => {V01 V02 V03 V27 V29}
							GC regs: 000000C0 {rsi rdi} => 000001C0 {rsi rdi r8}
Generating: N511 (  1,  1) [000308] ------------       t308 =    LCL_VAR   ref    V01 loc0         u:2 rdi REG rdi $1c1
                                                              /--*  t308   ref    
Generating: N513 (  2,  2) [000411] -c----------       t411 = *  LEA(b+16) byref  REG NA
                                                              /--*  t411   byref  
Generating: N515 (  4,  4) [000309] n---GO------       t309 = *  IND       int    REG rdx <l:$254, c:$253>
IN0070:        mov      edx, dword ptr [rdi+16]
                                                              /--*  t309   int    
Generating: N517 (???,???) [000532] ----GO------       t532 = *  PUTARG_REG int    REG rdx
Generating: N519 (  1,  1) [000109] ------------       t109 =    LCL_VAR   ref    V01 loc0         u:2 rdi REG rdi $1c1
                                                              /--*  t109   ref    
Generating: N521 (???,???) [000533] ------------       t533 = *  PUTARG_REG ref    REG rcx
IN0071:        mov      rcx, rdi
							GC regs: 000001C0 {rsi rdi r8} => 000001C2 {rcx rsi rdi r8}
Generating: N523 (  1,  1) [000310] ------------       t310 =    LCL_VAR   ref    V27 tmp21        u:2 r8 (last use) REG r8 $2f6
                                                              /--*  t310   ref    
Generating: N525 (???,???) [000534] ------------       t534 = *  PUTARG_REG ref    REG r8
							V27 in reg r8 is becoming dead  [000310]
							Live regs: 000001E8 {rbx rbp rsi rdi r8} => 000000E8 {rbx rbp rsi rdi}
							Live vars: {V01 V02 V03 V27 V29} => {V01 V02 V03 V29}
							GC regs: 000001C2 {rcx rsi rdi r8} => 000000C2 {rcx rsi rdi}
							GC regs: 000000C2 {rcx rsi rdi} => 000001C2 {rcx rsi rdi r8}
                                                              /--*  t532   int    arg1 in rdx
                                                              +--*  t533   ref    this in rcx
                                                              +--*  t534   ref    arg2 in r8
Generating: N527 ( 20, 15) [000311] --CXGO------              *  CALL      void   System.Collections.Generic.List`1[__Canon][System.__Canon].InsertRange REG NA $VN.Void
							GC regs: 000001C2 {rcx rsi rdi r8} => 000001C0 {rsi rdi r8}
							GC regs: 000001C0 {rsi rdi r8} => 000000C0 {rsi rdi}
							Call: GCvars=0000000000000000 {}, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}
IN0072:        call     System.Collections.Generic.List`1[__Canon][System.__Canon]:InsertRange(int,System.Collections.Generic.IEnumerable`1[__Canon]):this

Scope info: end block BB13, IL range [09C..0A6)
Scope info: open scopes =
   1 (V01 loc0) [000..0C7)
   3 (V03 loc2) [000..0C7)
   2 (V02 loc1) [000..0C7)

=============== Generating BB14 [0A6..0B3) -> BB02 (cond), preds={BB04,BB05,BB13} succs={BB15,BB02} flags=0x00000000.211b0020: i label target gcsafe idxlen bwd LIR 
BB14 IN (4)={V01 V03 V02 V29} + ByrefExposed + GcHeap
     OUT(4)={V01 V03 V02 V29} + ByrefExposed + GcHeap

Recording Var Locations at start of BB14
  V01(rdi)  V03(rbx)  V02(rsi)  V29(rbp)
Liveness not changing: 0000000000120011 {V01 V02 V03 V29}
							Live regs: 00000000 {} => 000000E8 {rbx rbp rsi rdi}
							GC regs: 00000000 {} => 000000C0 {rsi rdi}
							Byref regs: (unchanged) 00000000 {}

      L_M47830_BB14:

      G_M47830_IG10:        ; offs=000225H, funclet=00, bbWeight=2   
Label: IG11, GCvars=0000000000000000 {}, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}

Scope info: begin block BB14, IL range [0A6..0B3)
Scope info: open scopes =
   1 (V01 loc0) [000..0C7)
   3 (V03 loc2) [000..0C7)
   2 (V02 loc1) [000..0C7)
Added IP mapping: 0x00A6 STACK_EMPTY (G_M47830_IG11,ins#0,ofs#0) label
Generating: N531 (???,???) [000486] ------------                 IL_OFFSET void   IL offset: 0xa6 REG NA
Generating: N533 (  1,  1) [000116] ------------       t116 =    LCL_VAR   int    V03 loc2         u:3 rbx (last use) REG rbx $280
Generating: N535 (  1,  1) [000117] -c----------       t117 =    CNS_INT   int    1 REG NA $46
                                                              /--*  t116   int    
                                                              +--*  t117   int    
Generating: N537 (  3,  3) [000118] ------------       t118 = *  ADD       int    REG rbx $269
							V03 in reg rbx is becoming dead  [000116]
							Live regs: 000000E8 {rbx rbp rsi rdi} => 000000E0 {rbp rsi rdi}
							Live vars: {V01 V02 V03 V29} => {V01 V02 V29}
IN0073:        inc      ebx
                                                              /--*  t118   int    
Generating: N539 (  3,  3) [000120] DA----------              *  STORE_LCL_VAR int    V03 loc2         d:4 rbx REG rbx
							V03 in reg rbx is becoming live  [000120]
							Live regs: 000000E0 {rbp rsi rdi} => 000000E8 {rbx rbp rsi rdi}
							Live vars: {V01 V02 V29} => {V01 V02 V03 V29}
Added IP mapping: 0x00AA STACK_EMPTY (G_M47830_IG11,ins#1,ofs#2)
Generating: N541 (???,???) [000487] ------------                 IL_OFFSET void   IL offset: 0xaa REG NA
Generating: N543 (  1,  1) [000456] ------------       t456 =    LCL_VAR   int    V29 cse1         u:1 rbp REG rbp $200
Generating: N545 (  1,  1) [000023] ------------        t23 =    LCL_VAR   int    V03 loc2         u:4 rbx REG rbx $269
                                                              /--*  t456   int    
                                                              +--*  t23    int    
Generating: N547 (  3,  3) [000026] J------N----              *  GT        void   REG NA $26b
IN0074:        cmp      ebp, ebx
Generating: N549 (  5,  5) [000027] ------------              *  JTRUE     void   REG NA
IN0075:        jg       L_M47830_BB02

Scope info: end block BB14, IL range [0A6..0B3)
Scope info: open scopes =
   1 (V01 loc0) [000..0C7)
   2 (V02 loc1) [000..0C7)

=============== Generating BB15 [0B3..0C7) (return), preds={BB01,BB14} succs={} flags=0x00000002.200b0020: i label target hascall gcsafe LIR 
BB15 IN (1)={V01} + ByrefExposed + GcHeap
     OUT(0)={   }

Recording Var Locations at start of BB15
  V01(rdi)
Change life 0000000000120011 {V01 V02 V03 V29} -> 0000000000000001 {V01}
							V03 in reg rbx is becoming dead  [------]
							Live regs: (unchanged) 00000000 {}
							V02 in reg rsi is becoming dead  [------]
							Live regs: (unchanged) 00000000 {}
							V29 in reg rbp is becoming dead  [------]
							Live regs: (unchanged) 00000000 {}
							Live regs: 00000000 {} => 00000080 {rdi}
							GC regs: 00000000 {} => 00000080 {rdi}
							Byref regs: (unchanged) 00000000 {}

      L_M47830_BB15:

      G_M47830_IG11:        ; offs=000245H, funclet=00, bbWeight=4   
Label: IG12, GCvars=0000000000000000 {}, gcrefRegs=00000080 {rdi}, byrefRegs=00000000 {}

Scope info: begin block BB15, IL range [0B3..0C7)
Scope info: open scopes =
   1 (V01 loc0) [000..0C7)
Added IP mapping: 0x00B3 STACK_EMPTY (G_M47830_IG12,ins#0,ofs#0) label
Generating: N553 (???,???) [000488] ------------                 IL_OFFSET void   IL offset: 0xb3 REG NA
Generating: N555 (  1,  1) [000180] ------------       t180 =    LCL_VAR   ref    V01 loc0         u:2 rdi REG rdi $1c1
                                                              /--*  t180   ref    
Generating: N557 (???,???) [000535] ------------       t535 = *  PUTARG_REG ref    REG rdx
IN0076:        mov      rdx, rdi
							GC regs: 00000080 {rdi} => 00000084 {rdx rdi}
Generating: N559 (  2, 10) [000182] H-----------       t182 =    CNS_INT(h) long   0xd1ffab1e method REG rcx $19c
IN0077:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t182   long   
Generating: N561 (???,???) [000536] ------------       t536 = *  PUTARG_REG long   REG rcx
                                                              /--*  t535   ref    arg1 in rdx
                                                              +--*  t536   long   arg0 in rcx
Generating: N563 ( 17, 18) [000181] --CXG-------              *  CALL      void   SolutionAnalyzer.GeneralExtensions.Shuffle REG NA $VN.Void
							GC regs: 00000084 {rdx rdi} => 00000080 {rdi}
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000080 {rdi}, byrefRegs=00000000 {}
IN0078:        call     SolutionAnalyzer.GeneralExtensions:Shuffle(System.Collections.Generic.List`1[__Canon])
Generating: N565 (  2, 10) [000417] H-----------       t417 =    CNS_INT(h) long   0xD1FFAB1E "Enumerated and shuffled the project paths." REG rdx $19d
IN0079:        mov      rdx, 0xD1FFAB1E
                                                              /--*  t417   long   
Generating: N567 (  4, 12) [000418] #---G-------       t418 = *  IND       ref    REG rdx $1f9
IN007a:        mov      rdx, gword ptr [rdx]
							GC regs: 00000080 {rdi} => 00000084 {rdx rdi}
                                                              /--*  t418   ref    
Generating: N569 (???,???) [000537] ----G-------       t537 = *  PUTARG_REG ref    REG rdx
							GC regs: 00000084 {rdx rdi} => 00000080 {rdi}
							GC regs: 00000080 {rdi} => 00000084 {rdx rdi}
Generating: N571 (  2, 10) [000186] H-----------       t186 =    CNS_INT(h) long   0xd1ffab1e method REG rcx $181
IN007b:        mov      rcx, 0xD1FFAB1E
                                                              /--*  t186   long   
Generating: N573 (???,???) [000538] ------------       t538 = *  PUTARG_REG long   REG rcx
Generating: N575 (  1,  1) [000184] ------------       t184 =    CNS_INT   int    2 REG r8 $42
IN007c:        mov      r8d, 2
                                                              /--*  t184   int    
Generating: N577 (???,???) [000539] ------------       t539 = *  PUTARG_REG int    REG r8
                                                              /--*  t537   ref    arg1 in rdx
                                                              +--*  t538   long   arg0 in rcx
                                                              +--*  t539   int    arg2 in r8
Generating: N579 ( 21, 31) [000185] --CXG-------       t185 = *  CALL      ref    SolutionAnalyzer.Logger.Log REG rax $10d
							GC regs: 00000084 {rdx rdi} => 00000080 {rdi}
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000080 {rdi}, byrefRegs=00000000 {}
IN007d:        call     SolutionAnalyzer.Logger:Log(System.__Canon,int):System.__Canon
							GC regs: 00000080 {rdi} => 00000081 {rax rdi}
							GC regs: 00000081 {rax rdi} => 00000080 {rdi}
Added IP mapping: 0x00C5 STACK_EMPTY (G_M47830_IG12,ins#8,ofs#52)
Generating: N581 (???,???) [000489] ------------                 IL_OFFSET void   IL offset: 0xc5 REG NA
Generating: N583 (  1,  1) [000190] ------------       t190 =    LCL_VAR   ref    V01 loc0         u:2 rdi (last use) REG rdi $1c1
                                                              /--*  t190   ref    
Generating: N585 (  2,  2) [000191] ------------              *  RETURN    ref    REG NA $10f
							V01 in reg rdi is becoming dead  [000190]
							Live regs: 00000080 {rdi} => 00000000 {}
							Live vars: {V01} => {}
							GC regs: 00000080 {rdi} => 00000000 {}
IN007e:        mov      rax, rdi

Scope info: end block BB15, IL range [0B3..0C7)
Scope info: ending scope, LVnum=0 [000..0C7)
Scope info: ending scope, LVnum=1 [000..0C7)
Scope info: ending scope, LVnum=2 [000..0C7)
Scope info: ending scope, LVnum=3 [000..0C7)
Scope info: ending scope, LVnum=4 [000..0C7)
Scope info: ending scope, LVnum=5 [000..0C7)
Scope info: open scopes =
   <none>
Added IP mapping: EPILOG STACK_EMPTY (G_M47830_IG12,ins#9,ofs#55) label
							GC regs: 00000000 {} => 00000001 {rax}
Extending return value GC liveness to epilog
Reserving epilog IG for block BB15

      G_M47830_IG12:        ; offs=00024FH, funclet=00, bbWeight=1   
*************** After placeholder IG creation
G_M47830_IG01:        ; func=00, offs=000000H, size=0000H, gcrefRegs=00000000 {} <-- Prolog IG
G_M47830_IG02:        ; offs=000000H, size=004EH, gcrefRegs=00000040 {rsi}, byrefRegs=00000000 {}, byref
G_M47830_IG03:        ; offs=00004EH, size=002BH, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}, byref
G_M47830_IG04:        ; offs=000079H, size=0028H, gcrefRegs=000040C0 {rsi rdi r14}, byrefRegs=00000000 {}, byref
G_M47830_IG05:        ; offs=0000A1H, size=0010H, gcrefRegs=000040C0 {rsi rdi r14}, byrefRegs=00000000 {}, byref
G_M47830_IG06:        ; offs=0000B1H, size=007DH, gcrefRegs=000040C0 {rsi rdi r14}, byrefRegs=00000000 {}, byref
G_M47830_IG07:        ; offs=00012EH, size=002EH, gcrefRegs=0000D0C4 {rdx rsi rdi r12 r14 r15}, byrefRegs=00000000 {}, byref
G_M47830_IG08:        ; offs=00015CH, size=009DH, gcrefRegs=0000C1C0 {rsi rdi r8 r14 r15}, byrefRegs=00000000 {}, byref
G_M47830_IG09:        ; offs=0001F9H, size=002CH, gcrefRegs=0000C0C4 {rdx rsi rdi r14 r15}, byrefRegs=00000000 {}, byref
G_M47830_IG10:        ; offs=000225H, size=0020H, gcrefRegs=000081C0 {rsi rdi r8 r15}, byrefRegs=00000000 {}, byref
G_M47830_IG11:        ; offs=000245H, size=000AH, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}, byref
G_M47830_IG12:        ; offs=00024FH, size=0037H, gcrefRegs=00000080 {rdi}, byrefRegs=00000000 {}, byref
G_M47830_IG13:        ; epilog placeholder, next placeholder=<END>, BB15 [0010], epilog, extend <-- First placeholder <-- Last placeholder
                      ;   PrevGCVars=0000000000000000 {}, PrevGCrefRegs=000000C0 {rsi rdi}, PrevByrefRegs=00000000 {}
                      ;   InitGCVars=0000000000000000 {}, InitGCrefRegs=00000080 {rdi}, InitByrefRegs=00000000 {}
G_M47830_IG14:        ; offs=000386H, size=0000H, gcrefRegs=00000000 {} <-- Current IG

=============== Generating BB16 [000..000) (throw), preds={BB08,BB11} succs={} flags=0x00000002.210b1060: i internal rare label target hascall gcsafe bwd LIR 
BB16 IN (0)={} + ByrefExposed + GcHeap
     OUT(0)={}

Recording Var Locations at start of BB16
  <none>

Liveness not changing: 0000000000000000 {}
							Live regs: (unchanged) 00000000 {}
							GC regs: (unchanged) 00000000 {}
							Byref regs: (unchanged) 00000000 {}

      L_M47830_BB16:
Label: IG14, GCvars=0000000000000000 {}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}

Scope info: begin block BB16, IL range [000..000)
Scope info: open scopes =
   <none>
Added IP mapping: NO_MAP STACK_EMPTY (G_M47830_IG14,ins#0,ofs#0) label
Generating: N589 ( 14,  5) [000303] --CXG-------                 CALL      void   System.MulticastDelegate.ThrowNullThisInDelegateToInstance REG NA $VN.Void
							Call: GCvars=0000000000000000 {}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}
IN007f:        call     System.MulticastDelegate:ThrowNullThisInDelegateToInstance()

Scope info: end block BB16, IL range [000..000)
Scope info: open scopes =
   <none>
IN0080:        int3     
Liveness not changing: 0000000000000000 {}

# compCycleEstimate =    515, compSizeEstimate =   599 SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]
; Final local variable assignments
;
;  V00 arg0         [V00,T21] (  3,  3   )     ref  ->  rsi         class-hnd
;  V01 loc0         [V01,T00] ( 13, 23   )     ref  ->  rdi         class-hnd exact
;  V02 loc1         [V02,T17] (  3,  6   )     ref  ->  rsi         class-hnd
;  V03 loc2         [V03,T04] (  5, 17   )     int  ->  rbx        
;  V04 loc3         [V04,T01] (  7, 20   )     ref  ->  r14         class-hnd
;  V05 loc4         [V05,T22] (  2,  4   )     ref  ->  r15         class-hnd
;  V06 OutArgs      [V06    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V07 tmp1         [V07,T18] (  3,  6   )     ref  ->  rdi         class-hnd exact "NewObj constructor temp"
;  V08 tmp2         [V08,T10] (  2,  8   )     ref  ->   r8         class-hnd "dup spill"
;  V09 tmp3         [V09,T11] (  2,  8   )     ref  ->  r15         class-hnd "impAppendStmt"
;  V10 tmp4         [V10,T23] (  2,  4   )     ref  ->  r15        
;  V11 tmp5         [V11,T07] (  4,  8   )     ref  ->   r8        
;  V12 tmp6         [V12,T12] (  2,  8   )     ref  ->   r8         class-hnd "dup spill"
;* V13 tmp7         [V13,T25] (  0,  0   )     ref  ->  zero-ref   
;  V14 tmp8         [V14,T24] (  2,  4   )     ref  ->  r15        
;  V15 tmp9         [V15,T08] (  4,  8   )     ref  ->   r8        
;  V16 tmp10        [V16,T02] (  5, 20   )     ref  ->  r14         class-hnd exact "NewObj constructor temp"
;  V17 tmp11        [V17,T03] (  5, 20   )     ref  ->  r12         class-hnd exact "NewObj constructor temp"
;  V18 tmp12        [V18,T19] (  3,  6   )     ref  ->  rcx         class-hnd "Inline stloc first use temp"
;  V19 tmp13        [V19,T09] (  4,  8   )     int  ->  rdx         "Inline stloc first use temp"
;  V20 tmp14        [V20,T13] (  2,  8   )     ref  ->   r9         class-hnd "Inlining Arg"
;  V21 tmp15        [V21,T05] (  3, 12   )     ref  ->  rdx         class-hnd "Inlining Arg"
;* V22 tmp16        [V22    ] (  0,  0   )    long  ->  zero-ref    "Inlining Arg"
;  V23 tmp17        [V23,T14] (  2,  8   )     ref  ->   r9         class-hnd "Inlining Arg"
;  V24 tmp18        [V24,T15] (  2,  8   )     ref  ->   r8         class-hnd "Inlining Arg"
;  V25 tmp19        [V25,T06] (  3, 12   )     ref  ->  rdx         class-hnd "Inlining Arg"
;* V26 tmp20        [V26    ] (  0,  0   )    long  ->  zero-ref    "Inlining Arg"
;  V27 tmp21        [V27,T16] (  2,  8   )     ref  ->   r8         class-hnd "Inlining Arg"
;* V28 cse0         [V28,T26] (  0,  0   )    long  ->  zero-ref    "CSE - aggressive"
;  V29 cse1         [V29,T20] (  3,  6   )     int  ->  rbp         "CSE - aggressive"
;
; Lcl frame size = 32
*************** Before prolog / epilog generation
G_M47830_IG01:        ; func=00, offs=000000H, size=0000H, gcrefRegs=00000000 {} <-- Prolog IG
G_M47830_IG02:        ; offs=000000H, size=004EH, gcrefRegs=00000040 {rsi}, byrefRegs=00000000 {}, byref
G_M47830_IG03:        ; offs=00004EH, size=002BH, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}, byref
G_M47830_IG04:        ; offs=000079H, size=0028H, gcrefRegs=000040C0 {rsi rdi r14}, byrefRegs=00000000 {}, byref
G_M47830_IG05:        ; offs=0000A1H, size=0010H, gcrefRegs=000040C0 {rsi rdi r14}, byrefRegs=00000000 {}, byref
G_M47830_IG06:        ; offs=0000B1H, size=007DH, gcrefRegs=000040C0 {rsi rdi r14}, byrefRegs=00000000 {}, byref
G_M47830_IG07:        ; offs=00012EH, size=002EH, gcrefRegs=0000D0C4 {rdx rsi rdi r12 r14 r15}, byrefRegs=00000000 {}, byref
G_M47830_IG08:        ; offs=00015CH, size=009DH, gcrefRegs=0000C1C0 {rsi rdi r8 r14 r15}, byrefRegs=00000000 {}, byref
G_M47830_IG09:        ; offs=0001F9H, size=002CH, gcrefRegs=0000C0C4 {rdx rsi rdi r14 r15}, byrefRegs=00000000 {}, byref
G_M47830_IG10:        ; offs=000225H, size=0020H, gcrefRegs=000081C0 {rsi rdi r8 r15}, byrefRegs=00000000 {}, byref
G_M47830_IG11:        ; offs=000245H, size=000AH, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}, byref
G_M47830_IG12:        ; offs=00024FH, size=0037H, gcrefRegs=00000080 {rdi}, byrefRegs=00000000 {}, byref
G_M47830_IG13:        ; epilog placeholder, next placeholder=<END>, BB15 [0010], epilog, extend <-- First placeholder <-- Last placeholder
                      ;   PrevGCVars=0000000000000000 {}, PrevGCrefRegs=000000C0 {rsi rdi}, PrevByrefRegs=00000000 {}
                      ;   InitGCVars=0000000000000000 {}, InitGCrefRegs=00000080 {rdi}, InitByrefRegs=00000000 {}
G_M47830_IG14:        ; offs=000386H, size=0000H, gcrefRegs=00000000 {} <-- Current IG
Recording Var Locations at start of BB01
  V00(rsi)

      G_M47830_IG14:        ; offs=000386H, funclet=00, bbWeight=0   
*************** In genFnProlog()
Added IP mapping to front: PROLOG STACK_EMPTY (G_M47830_IG01,ins#0,ofs#0) label

__prolog:
IN0081:        push     r15
IN0082:        push     r14
IN0083:        push     r12
IN0084:        push     rdi
IN0085:        push     rsi
IN0086:        push     rbp
IN0087:        push     rbx
IN0088:        sub      rsp, 32
*************** In genFnPrologCalleeRegArgs() for int regs
IN0089:        mov      rsi, rcx
*************** In genEnregisterIncomingStackArgs()


      G_M47830_IG01:        ; offs=000000H, funclet=00, bbWeight=1   
*************** In genFnEpilog()

__epilog:
gcVarPtrSetCur=0000000000000000 {}, gcRegGCrefSetCur=00000080 {rdi}, gcRegByrefSetCur=00000000 {}
IN008a:        add      rsp, 32
IN008b:        pop      rbx
IN008c:        pop      rbp
IN008d:        pop      rsi
IN008e:        pop      rdi
IN008f:        pop      r12
IN0090:        pop      r14
IN0091:        pop      r15
IN0092:        ret      

      G_M47830_IG13:        ; offs=000286H, funclet=00, bbWeight=1   
0 prologs, 1 epilogs, 0 funclet prologs, 0 funclet epilogs
*************** After prolog / epilog generation
G_M47830_IG01:        ; func=00, offs=000000H, size=0011H, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref, nogc <-- Prolog IG
G_M47830_IG02:        ; offs=000011H, size=004EH, gcrefRegs=00000040 {rsi}, byrefRegs=00000000 {}, byref
G_M47830_IG03:        ; offs=00005FH, size=002BH, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}, byref
G_M47830_IG04:        ; offs=00008AH, size=0028H, gcrefRegs=000040C0 {rsi rdi r14}, byrefRegs=00000000 {}, byref
G_M47830_IG05:        ; offs=0000B2H, size=0010H, gcrefRegs=000040C0 {rsi rdi r14}, byrefRegs=00000000 {}, byref
G_M47830_IG06:        ; offs=0000C2H, size=007DH, gcrefRegs=000040C0 {rsi rdi r14}, byrefRegs=00000000 {}, byref
G_M47830_IG07:        ; offs=00013FH, size=002EH, gcrefRegs=0000D0C4 {rdx rsi rdi r12 r14 r15}, byrefRegs=00000000 {}, byref
G_M47830_IG08:        ; offs=00016DH, size=009DH, gcrefRegs=0000C1C0 {rsi rdi r8 r14 r15}, byrefRegs=00000000 {}, byref
G_M47830_IG09:        ; offs=00020AH, size=002CH, gcrefRegs=0000C0C4 {rdx rsi rdi r14 r15}, byrefRegs=00000000 {}, byref
G_M47830_IG10:        ; offs=000236H, size=0020H, gcrefRegs=000081C0 {rsi rdi r8 r15}, byrefRegs=00000000 {}, byref
G_M47830_IG11:        ; offs=000256H, size=000AH, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}, byref
G_M47830_IG12:        ; offs=000260H, size=0037H, gcrefRegs=00000080 {rdi}, byrefRegs=00000000 {}, byref
G_M47830_IG13:        ; offs=000297H, size=000FH, epilog, nogc, extend
G_M47830_IG14:        ; offs=0002A6H, size=0006H, gcVars=0000000000000000 {}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, gcvars, byref
*************** In emitJumpDistBind()
Binding: IN000f: 000000 jle      L_M47830_BB15
Binding L_M47830_BB15 to G_M47830_IG12
Estimate of fwd jump [D1FFAB1E/015]: 0059 -> 0260 = 0205
Adjusted offset of BB03 from 005F to 005F
Binding: IN0019: 000000 je       L_M47830_BB07
Binding L_M47830_BB07 to G_M47830_IG06
Estimate of fwd jump [D1FFAB1E/025]: 0084 -> 00C2 = 003C
Shrinking jump [D1FFAB1E/025]
Adjusted offset of BB04 from 008A to 0086
Binding: IN001e: 000000 jbe      L_M47830_BB05
Binding L_M47830_BB05 to G_M47830_IG05
Estimate of fwd jump [D1FFAB1E/030]: 0093 -> 00AE = 0019
Shrinking jump [D1FFAB1E/030]
Binding: IN0023: 000000 jmp      L_M47830_BB14
Binding L_M47830_BB14 to G_M47830_IG11
Estimate of fwd jump [D1FFAB1E/035]: 00A5 -> 024E = 01A7
Adjusted offset of BB05 from 00B2 to 00AA
Binding: IN0027: 000000 jmp      L_M47830_BB14
Binding L_M47830_BB14 to G_M47830_IG11
Estimate of fwd jump [D1FFAB1E/039]: 00B5 -> 024E = 0197
Adjusted offset of BB06 from 00C2 to 00BA
Binding: IN0037: 000000 jne      L_M47830_BB10
Binding L_M47830_BB10 to G_M47830_IG08
Estimate of fwd jump [D1FFAB1E/055]: 0109 -> 0165 = 005A
Shrinking jump [D1FFAB1E/055]
Binding: IN003e: 000000 je       L_M47830_BB16
Binding L_M47830_BB16 to G_M47830_IG14
Estimate of fwd jump [D1FFAB1E/062]: 012D -> 029A = 016B
Adjusted offset of BB07 from 013F to 0133
Adjusted offset of BB08 from 016D to 0161
Binding: IN005c: 000000 jne      L_M47830_BB13
Binding L_M47830_BB13 to G_M47830_IG10
Estimate of fwd jump [D1FFAB1E/092]: 01D0 -> 022A = 0058
Shrinking jump [D1FFAB1E/092]
Binding: IN0063: 000000 je       L_M47830_BB16
Binding L_M47830_BB16 to G_M47830_IG14
Estimate of fwd jump [D1FFAB1E/099]: 01F4 -> 0296 = 00A0
Adjusted offset of BB09 from 020A to 01FA
Adjusted offset of BB10 from 0236 to 0226
Adjusted offset of BB11 from 0256 to 0246
Binding: IN0075: 000000 jg       L_M47830_BB02
Binding L_M47830_BB02 to G_M47830_IG03
Estimate of bwd jump [D1FFAB1E/117]: 024A -> 005F = 01ED
Adjusted offset of BB12 from 0260 to 0250
Adjusted offset of BB13 from 0297 to 0287
Adjusted offset of BB14 from 02A6 to 0296
Total shrinkage =  16, min extra jump size =  33

*************** Finishing PHASE Generate code

*************** Starting PHASE Emit code

Hot  code size = 0x29C bytes
Cold code size = 0x0 bytes
reserveUnwindInfo(isFunclet=FALSE, isColdCode=FALSE, unwindSize=0x14)
*************** In emitEndCodeGen()
Converting emitMaxStackDepth from bytes (0) to elements (0)

***************************************************************************
Instructions as they come out of the scheduler


G_M47830_IG01:        ; func=00, offs=000000H, size=0011H, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref, nogc <-- Prolog IG
IN0081: 000000 push     r15
IN0082: 000002 push     r14
IN0083: 000004 push     r12
IN0084: 000006 push     rdi
IN0085: 000007 push     rsi
IN0086: 000008 push     rbp
IN0087: 000009 push     rbx
IN0088: 00000A sub      rsp, 32
IN0089: 00000E mov      rsi, rcx
       ; gcrRegs +[rsi]
						;; bbWeight=1    PerfScore 7.50
G_M47830_IG02:        ; func=00, offs=000011H, size=004EH, gcrefRegs=00000040 {rsi}, byrefRegs=00000000 {}, byref
IN0001: 000011 mov      rdx, 0xD1FFAB1E
IN0002: 00001B mov      rdx, gword ptr [rdx]
       ; gcrRegs +[rdx]
IN0003: 00001E mov      rcx, 0xD1FFAB1E
IN0004: 000028 mov      r8d, 2
IN0005: 00002E call     SolutionAnalyzer.Logger:Log(System.__Canon,int):System.__Canon
       ; gcrRegs -[rdx] +[rax]
       ; gcr arg pop 0
IN0006: 000033 mov      rcx, 0xD1FFAB1E
IN0007: 00003D call     CORINFO_HELP_NEWSFAST
       ; gcr arg pop 0
IN0008: 000042 mov      rdi, rax
       ; gcrRegs +[rdi]
IN0009: 000045 mov      rcx, rdi
       ; gcrRegs +[rcx]
IN000a: 000048 mov      edx, 100
IN000b: 00004D call     System.Collections.Generic.List`1[__Canon][System.__Canon]:.ctor(int):this
       ; gcrRegs -[rax rcx]
       ; gcr arg pop 0
IN000c: 000052 xor      ebx, ebx
IN000d: 000054 mov      ebp, dword ptr [rsi+8]
IN000e: 000057 test     ebp, ebp
IN000f: 000059 jle      G_M47830_IG12
						;; bbWeight=1    PerfScore 10.25
G_M47830_IG03:        ; func=00, offs=00005FH, size=0027H, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}, byref, isz
IN0010: 00005F movsxd   rdx, ebx
IN0011: 000062 mov      r14, gword ptr [rsi+8*rdx+16]
       ; gcrRegs +[r14]
IN0012: 000067 cmp      dword ptr [r14], r14d
IN0013: 00006A mov      rdx, 0xD1FFAB1E
IN0014: 000074 mov      rdx, gword ptr [rdx]
       ; gcrRegs +[rdx]
IN0015: 000077 mov      rcx, r14
       ; gcrRegs +[rcx]
IN0016: 00007A xor      r8d, r8d
IN0017: 00007D call     System.String:EndsWith(System.String,int):bool:this
       ; gcrRegs -[rcx rdx]
       ; gcr arg pop 0
IN0018: 000082 test     eax, eax
IN0019: 000084 je       SHORT G_M47830_IG06
						;; bbWeight=4    PerfScore 37.00
G_M47830_IG04:        ; func=00, offs=000086H, size=0024H, gcrefRegs=000040C0 {rsi rdi r14}, byrefRegs=00000000 {}, byref, isz
IN001a: 000086 inc      dword ptr [rdi+20]
IN001b: 000089 mov      rcx, gword ptr [rdi+8]
       ; gcrRegs +[rcx]
IN001c: 00008D mov      edx, dword ptr [rdi+16]
IN001d: 000090 cmp      dword ptr [rcx+8], edx
IN001e: 000093 jbe      SHORT G_M47830_IG05
IN001f: 000095 lea      r8d, [rdx+1]
IN0020: 000099 mov      dword ptr [rdi+16], r8d
IN0021: 00009D mov      r8, r14
       ; gcrRegs +[r8]
IN0022: 0000A0 call     CORINFO_HELP_ARRADDR_ST
       ; gcrRegs -[rcx r8 r14]
       ; gcr arg pop 0
IN0023: 0000A5 jmp      G_M47830_IG11
						;; bbWeight=2    PerfScore 33.50
G_M47830_IG05:        ; func=00, offs=0000AAH, size=0010H, gcrefRegs=000040C0 {rsi rdi r14}, byrefRegs=00000000 {}, byref
       ; gcrRegs +[r14]
IN0024: 0000AA mov      rcx, rdi
       ; gcrRegs +[rcx]
IN0025: 0000AD mov      rdx, r14
       ; gcrRegs +[rdx]
IN0026: 0000B0 call     System.Collections.Generic.List`1[__Canon][System.__Canon]:AddWithResize(System.__Canon):this
       ; gcrRegs -[rcx rdx r14]
       ; gcr arg pop 0
IN0027: 0000B5 jmp      G_M47830_IG11
						;; bbWeight=2    PerfScore 7.00
G_M47830_IG06:        ; func=00, offs=0000BAH, size=0079H, gcrefRegs=000040C0 {rsi rdi r14}, byrefRegs=00000000 {}, byref, isz
       ; gcrRegs +[r14]
IN0028: 0000BA mov      ecx, 1
IN0029: 0000BF call     System.IO.EnumerationOptions:FromSearchOption(int):System.IO.EnumerationOptions
       ; gcrRegs +[rax]
       ; gcr arg pop 0
IN002a: 0000C4 mov      r9, rax
       ; gcrRegs +[r9]
IN002b: 0000C7 mov      rdx, 0xD1FFAB1E
IN002c: 0000D1 mov      rdx, gword ptr [rdx]
       ; gcrRegs +[rdx]
IN002d: 0000D4 mov      rcx, r14
       ; gcrRegs +[rcx]
IN002e: 0000D7 mov      r8d, 2
IN002f: 0000DD call     System.IO.Directory:InternalEnumeratePaths(System.String,System.String,int,System.IO.EnumerationOptions):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]
       ; gcrRegs -[rcx rdx r9]
       ; gcr arg pop 0
IN0030: 0000E2 mov      r15, rax
       ; gcrRegs +[r15]
IN0031: 0000E5 mov      rcx, 0xD1FFAB1E
IN0032: 0000EF mov      edx, 35
IN0033: 0000F4 call     CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
       ; gcrRegs -[rax]
       ; gcr arg pop 0
IN0034: 0000F9 mov      rcx, 0xD1FFAB1E
IN0035: 000103 mov      r8, gword ptr [rcx]
       ; gcrRegs +[r8]
IN0036: 000106 test     r8, r8
IN0037: 000109 jne      SHORT G_M47830_IG08
IN0038: 00010B mov      rcx, 0xD1FFAB1E
IN0039: 000115 call     CORINFO_HELP_NEWSFAST
       ; gcrRegs -[r8] +[rax]
       ; gcr arg pop 0
IN003a: 00011A mov      r12, rax
       ; gcrRegs +[r12]
IN003b: 00011D mov      rdx, 0xD1FFAB1E
IN003c: 000127 mov      rdx, gword ptr [rdx]
       ; gcrRegs +[rdx]
IN003d: 00012A test     rdx, rdx
IN003e: 00012D je       G_M47830_IG14
						;; bbWeight=2    PerfScore 31.00
G_M47830_IG07:        ; func=00, offs=000133H, size=002EH, gcrefRegs=0000D0C4 {rdx rsi rdi r12 r14 r15}, byrefRegs=00000000 {}, byref
       ; gcrRegs -[rax]
IN003f: 000133 lea      rcx, bword ptr [r12+8]
       ; byrRegs +[rcx]
IN0040: 000138 call     CORINFO_HELP_ASSIGN_REF
       ; gcrRegs -[rdx]
       ; byrRegs -[rcx]
IN0041: 00013D mov      rdx, 0xD1FFAB1E
IN0042: 000147 mov      qword ptr [r12+24], rdx
IN0043: 00014C mov      rcx, 0xD1FFAB1E
IN0044: 000156 mov      rdx, r12
       ; gcrRegs +[rdx]
IN0045: 000159 call     CORINFO_HELP_CHECKED_ASSIGN_REF
       ; gcrRegs -[rdx]
IN0046: 00015E mov      r8, r12
       ; gcrRegs +[r8]
						;; bbWeight=2    PerfScore 9.00
G_M47830_IG08:        ; func=00, offs=000161H, size=0099H, gcrefRegs=0000C1C0 {rsi rdi r8 r14 r15}, byrefRegs=00000000 {}, byref, isz
       ; gcrRegs -[r12]
IN0047: 000161 mov      rdx, r15
       ; gcrRegs +[rdx]
IN0048: 000164 mov      rcx, 0xD1FFAB1E
IN0049: 00016E call     System.Linq.Enumerable:Where(System.Collections.Generic.IEnumerable`1[__Canon],System.Func`2[__Canon,Boolean]):System.Collections.Generic.IEnumerable`1[__Canon]
       ; gcrRegs -[rdx r8 r15] +[rax]
       ; gcr arg pop 0
IN004a: 000173 mov      r15, rax
       ; gcrRegs +[r15]
IN004b: 000176 mov      rcx, 0xD1FFAB1E
IN004c: 000180 mov      edx, 40
IN004d: 000185 call     CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
       ; gcrRegs -[rax]
       ; gcr arg pop 0
IN004e: 00018A mov      rdx, 0xD1FFAB1E
IN004f: 000194 mov      r9, gword ptr [rdx]
       ; gcrRegs +[r9]
IN0050: 000197 mov      rdx, 0xD1FFAB1E
IN0051: 0001A1 mov      rdx, gword ptr [rdx]
       ; gcrRegs +[rdx]
IN0052: 0001A4 mov      rcx, r14
       ; gcrRegs +[rcx]
IN0053: 0001A7 mov      r8d, 1
IN0054: 0001AD call     System.IO.Directory:InternalEnumeratePaths(System.String,System.String,int,System.IO.EnumerationOptions):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]
       ; gcrRegs -[rcx rdx r9 r14] +[rax]
       ; gcr arg pop 0
IN0055: 0001B2 mov      r8, rax
       ; gcrRegs +[r8]
IN0056: 0001B5 mov      edx, dword ptr [rdi+16]
IN0057: 0001B8 mov      rcx, rdi
       ; gcrRegs +[rcx]
IN0058: 0001BB call     System.Collections.Generic.List`1[__Canon][System.__Canon]:InsertRange(int,System.Collections.Generic.IEnumerable`1[__Canon]):this
       ; gcrRegs -[rax rcx r8]
       ; gcr arg pop 0
IN0059: 0001C0 mov      rcx, 0xD1FFAB1E
IN005a: 0001CA mov      r8, gword ptr [rcx]
       ; gcrRegs +[r8]
IN005b: 0001CD test     r8, r8
IN005c: 0001D0 jne      SHORT G_M47830_IG10
IN005d: 0001D2 mov      rcx, 0xD1FFAB1E
IN005e: 0001DC call     CORINFO_HELP_NEWSFAST
       ; gcrRegs -[r8] +[rax]
       ; gcr arg pop 0
IN005f: 0001E1 mov      r14, rax
       ; gcrRegs +[r14]
IN0060: 0001E4 mov      rdx, 0xD1FFAB1E
IN0061: 0001EE mov      rdx, gword ptr [rdx]
       ; gcrRegs +[rdx]
IN0062: 0001F1 test     rdx, rdx
IN0063: 0001F4 je       G_M47830_IG14
						;; bbWeight=2    PerfScore 42.50
G_M47830_IG09:        ; func=00, offs=0001FAH, size=002CH, gcrefRegs=0000C0C4 {rdx rsi rdi r14 r15}, byrefRegs=00000000 {}, byref
       ; gcrRegs -[rax]
IN0064: 0001FA lea      rcx, bword ptr [r14+8]
       ; byrRegs +[rcx]
IN0065: 0001FE call     CORINFO_HELP_ASSIGN_REF
       ; gcrRegs -[rdx]
       ; byrRegs -[rcx]
IN0066: 000203 mov      rdx, 0xD1FFAB1E
IN0067: 00020D mov      qword ptr [r14+24], rdx
IN0068: 000211 mov      rcx, 0xD1FFAB1E
IN0069: 00021B mov      rdx, r14
       ; gcrRegs +[rdx]
IN006a: 00021E call     CORINFO_HELP_CHECKED_ASSIGN_REF
       ; gcrRegs -[rdx]
IN006b: 000223 mov      r8, r14
       ; gcrRegs +[r8]
						;; bbWeight=2    PerfScore 9.00
G_M47830_IG10:        ; func=00, offs=000226H, size=0020H, gcrefRegs=000081C0 {rsi rdi r8 r15}, byrefRegs=00000000 {}, byref
       ; gcrRegs -[r14]
IN006c: 000226 mov      rdx, r15
       ; gcrRegs +[rdx]
IN006d: 000229 mov      rcx, 0xD1FFAB1E
IN006e: 000233 call     System.Linq.Enumerable:SelectMany(System.Collections.Generic.IEnumerable`1[__Canon],System.Func`2[__Canon,__Canon]):System.Collections.Generic.IEnumerable`1[__Canon]
       ; gcrRegs -[rdx r8 r15] +[rax]
       ; gcr arg pop 0
IN006f: 000238 mov      r8, rax
       ; gcrRegs +[r8]
IN0070: 00023B mov      edx, dword ptr [rdi+16]
IN0071: 00023E mov      rcx, rdi
       ; gcrRegs +[rcx]
IN0072: 000241 call     System.Collections.Generic.List`1[__Canon][System.__Canon]:InsertRange(int,System.Collections.Generic.IEnumerable`1[__Canon]):this
       ; gcrRegs -[rax rcx r8]
       ; gcr arg pop 0
						;; bbWeight=2    PerfScore 10.00
G_M47830_IG11:        ; func=00, offs=000246H, size=000AH, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}, byref
IN0073: 000246 inc      ebx
IN0074: 000248 cmp      ebp, ebx
IN0075: 00024A jg       G_M47830_IG03
						;; bbWeight=4    PerfScore 6.00
G_M47830_IG12:        ; func=00, offs=000250H, size=0037H, gcrefRegs=00000080 {rdi}, byrefRegs=00000000 {}, byref
       ; gcrRegs -[rsi]
IN0076: 000250 mov      rdx, rdi
       ; gcrRegs +[rdx]
IN0077: 000253 mov      rcx, 0xD1FFAB1E
IN0078: 00025D call     SolutionAnalyzer.GeneralExtensions:Shuffle(System.Collections.Generic.List`1[__Canon])
       ; gcrRegs -[rdx]
       ; gcr arg pop 0
IN0079: 000262 mov      rdx, 0xD1FFAB1E
IN007a: 00026C mov      rdx, gword ptr [rdx]
       ; gcrRegs +[rdx]
IN007b: 00026F mov      rcx, 0xD1FFAB1E
IN007c: 000279 mov      r8d, 2
IN007d: 00027F call     SolutionAnalyzer.Logger:Log(System.__Canon,int):System.__Canon
       ; gcrRegs -[rdx] +[rax]
       ; gcr arg pop 0
IN007e: 000284 mov      rax, rdi
						;; bbWeight=1    PerfScore 5.50
G_M47830_IG13:        ; func=00, offs=000287H, size=000FH, epilog, nogc, extend
IN008a: 000287 add      rsp, 32
IN008b: 00028B pop      rbx
IN008c: 00028C pop      rbp
IN008d: 00028D pop      rsi
IN008e: 00028E pop      rdi
IN008f: 00028F pop      r12
IN0090: 000291 pop      r14
IN0091: 000293 pop      r15
IN0092: 000295 ret      
						;; bbWeight=1    PerfScore 4.75
G_M47830_IG14:        ; func=00, offs=000296H, size=0006H, gcVars=0000000000000000 {}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, gcvars, byref
       ; gcrRegs -[rax rdi]
IN007f: 000296 call     System.MulticastDelegate:ThrowNullThisInDelegateToInstance()
       ; gcr arg pop 0
IN0080: 00029B int3     
						;; bbWeight=0    PerfScore 0.00Allocated method code size =  668 , actual size =  668

; Total bytes of code 668, prolog size 14, PerfScore 279.80, instruction count 146 (MethodHash=a4534529) for method SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]
; ============================================================

*************** After end code gen, before unwindEmit()
G_M47830_IG01:        ; func=00, offs=000000H, size=0011H, bbWeight=1    PerfScore 7.50, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, byref, nogc <-- Prolog IG

IN0081: 000000 push     r15
IN0082: 000002 push     r14
IN0083: 000004 push     r12
IN0084: 000006 push     rdi
IN0085: 000007 push     rsi
IN0086: 000008 push     rbp
IN0087: 000009 push     rbx
IN0088: 00000A sub      rsp, 32
IN0089: 00000E mov      rsi, rcx

G_M47830_IG02:        ; offs=000011H, size=004EH, bbWeight=1    PerfScore 10.25, gcrefRegs=00000040 {rsi}, byrefRegs=00000000 {}, byref

IN0001: 000011 mov      rdx, 0xD1FFAB1E
IN0002: 00001B mov      rdx, gword ptr [rdx]
IN0003: 00001E mov      rcx, 0xD1FFAB1E
IN0004: 000028 mov      r8d, 2
IN0005: 00002E call     SolutionAnalyzer.Logger:Log(System.__Canon,int):System.__Canon
IN0006: 000033 mov      rcx, 0xD1FFAB1E
IN0007: 00003D call     CORINFO_HELP_NEWSFAST
IN0008: 000042 mov      rdi, rax
IN0009: 000045 mov      rcx, rdi
IN000a: 000048 mov      edx, 100
IN000b: 00004D call     System.Collections.Generic.List`1[__Canon][System.__Canon]:.ctor(int):this
IN000c: 000052 xor      ebx, ebx
IN000d: 000054 mov      ebp, dword ptr [rsi+8]
IN000e: 000057 test     ebp, ebp
IN000f: 000059 jle      G_M47830_IG12

G_M47830_IG03:        ; offs=00005FH, size=0027H, bbWeight=4    PerfScore 37.00, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}, byref, isz

IN0010: 00005F movsxd   rdx, ebx
IN0011: 000062 mov      r14, gword ptr [rsi+8*rdx+16]
IN0012: 000067 cmp      dword ptr [r14], r14d
IN0013: 00006A mov      rdx, 0xD1FFAB1E
IN0014: 000074 mov      rdx, gword ptr [rdx]
IN0015: 000077 mov      rcx, r14
IN0016: 00007A xor      r8d, r8d
IN0017: 00007D call     System.String:EndsWith(System.String,int):bool:this
IN0018: 000082 test     eax, eax
IN0019: 000084 je       SHORT G_M47830_IG06

G_M47830_IG04:        ; offs=000086H, size=0024H, bbWeight=2    PerfScore 33.50, gcrefRegs=000040C0 {rsi rdi r14}, byrefRegs=00000000 {}, byref, isz

IN001a: 000086 inc      dword ptr [rdi+20]
IN001b: 000089 mov      rcx, gword ptr [rdi+8]
IN001c: 00008D mov      edx, dword ptr [rdi+16]
IN001d: 000090 cmp      dword ptr [rcx+8], edx
IN001e: 000093 jbe      SHORT G_M47830_IG05
IN001f: 000095 lea      r8d, [rdx+1]
IN0020: 000099 mov      dword ptr [rdi+16], r8d
IN0021: 00009D mov      r8, r14
IN0022: 0000A0 call     CORINFO_HELP_ARRADDR_ST
IN0023: 0000A5 jmp      G_M47830_IG11

G_M47830_IG05:        ; offs=0000AAH, size=0010H, bbWeight=2    PerfScore 7.00, gcrefRegs=000040C0 {rsi rdi r14}, byrefRegs=00000000 {}, byref

IN0024: 0000AA mov      rcx, rdi
IN0025: 0000AD mov      rdx, r14
IN0026: 0000B0 call     System.Collections.Generic.List`1[__Canon][System.__Canon]:AddWithResize(System.__Canon):this
IN0027: 0000B5 jmp      G_M47830_IG11

G_M47830_IG06:        ; offs=0000BAH, size=0079H, bbWeight=2    PerfScore 31.00, gcrefRegs=000040C0 {rsi rdi r14}, byrefRegs=00000000 {}, byref, isz

IN0028: 0000BA mov      ecx, 1
IN0029: 0000BF call     System.IO.EnumerationOptions:FromSearchOption(int):System.IO.EnumerationOptions
IN002a: 0000C4 mov      r9, rax
IN002b: 0000C7 mov      rdx, 0xD1FFAB1E
IN002c: 0000D1 mov      rdx, gword ptr [rdx]
IN002d: 0000D4 mov      rcx, r14
IN002e: 0000D7 mov      r8d, 2
IN002f: 0000DD call     System.IO.Directory:InternalEnumeratePaths(System.String,System.String,int,System.IO.EnumerationOptions):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]
IN0030: 0000E2 mov      r15, rax
IN0031: 0000E5 mov      rcx, 0xD1FFAB1E
IN0032: 0000EF mov      edx, 35
IN0033: 0000F4 call     CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
IN0034: 0000F9 mov      rcx, 0xD1FFAB1E
IN0035: 000103 mov      r8, gword ptr [rcx]
IN0036: 000106 test     r8, r8
IN0037: 000109 jne      SHORT G_M47830_IG08
IN0038: 00010B mov      rcx, 0xD1FFAB1E
IN0039: 000115 call     CORINFO_HELP_NEWSFAST
IN003a: 00011A mov      r12, rax
IN003b: 00011D mov      rdx, 0xD1FFAB1E
IN003c: 000127 mov      rdx, gword ptr [rdx]
IN003d: 00012A test     rdx, rdx
IN003e: 00012D je       G_M47830_IG14

G_M47830_IG07:        ; offs=000133H, size=002EH, bbWeight=2    PerfScore 9.00, gcrefRegs=0000D0C4 {rdx rsi rdi r12 r14 r15}, byrefRegs=00000000 {}, byref

IN003f: 000133 lea      rcx, bword ptr [r12+8]
IN0040: 000138 call     CORINFO_HELP_ASSIGN_REF
IN0041: 00013D mov      rdx, 0xD1FFAB1E
IN0042: 000147 mov      qword ptr [r12+24], rdx
IN0043: 00014C mov      rcx, 0xD1FFAB1E
IN0044: 000156 mov      rdx, r12
IN0045: 000159 call     CORINFO_HELP_CHECKED_ASSIGN_REF
IN0046: 00015E mov      r8, r12

G_M47830_IG08:        ; offs=000161H, size=0099H, bbWeight=2    PerfScore 42.50, gcrefRegs=0000C1C0 {rsi rdi r8 r14 r15}, byrefRegs=00000000 {}, byref, isz

IN0047: 000161 mov      rdx, r15
IN0048: 000164 mov      rcx, 0xD1FFAB1E
IN0049: 00016E call     System.Linq.Enumerable:Where(System.Collections.Generic.IEnumerable`1[__Canon],System.Func`2[__Canon,Boolean]):System.Collections.Generic.IEnumerable`1[__Canon]
IN004a: 000173 mov      r15, rax
IN004b: 000176 mov      rcx, 0xD1FFAB1E
IN004c: 000180 mov      edx, 40
IN004d: 000185 call     CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
IN004e: 00018A mov      rdx, 0xD1FFAB1E
IN004f: 000194 mov      r9, gword ptr [rdx]
IN0050: 000197 mov      rdx, 0xD1FFAB1E
IN0051: 0001A1 mov      rdx, gword ptr [rdx]
IN0052: 0001A4 mov      rcx, r14
IN0053: 0001A7 mov      r8d, 1
IN0054: 0001AD call     System.IO.Directory:InternalEnumeratePaths(System.String,System.String,int,System.IO.EnumerationOptions):System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]
IN0055: 0001B2 mov      r8, rax
IN0056: 0001B5 mov      edx, dword ptr [rdi+16]
IN0057: 0001B8 mov      rcx, rdi
IN0058: 0001BB call     System.Collections.Generic.List`1[__Canon][System.__Canon]:InsertRange(int,System.Collections.Generic.IEnumerable`1[__Canon]):this
IN0059: 0001C0 mov      rcx, 0xD1FFAB1E
IN005a: 0001CA mov      r8, gword ptr [rcx]
IN005b: 0001CD test     r8, r8
IN005c: 0001D0 jne      SHORT G_M47830_IG10
IN005d: 0001D2 mov      rcx, 0xD1FFAB1E
IN005e: 0001DC call     CORINFO_HELP_NEWSFAST
IN005f: 0001E1 mov      r14, rax
IN0060: 0001E4 mov      rdx, 0xD1FFAB1E
IN0061: 0001EE mov      rdx, gword ptr [rdx]
IN0062: 0001F1 test     rdx, rdx
IN0063: 0001F4 je       G_M47830_IG14

G_M47830_IG09:        ; offs=0001FAH, size=002CH, bbWeight=2    PerfScore 9.00, gcrefRegs=0000C0C4 {rdx rsi rdi r14 r15}, byrefRegs=00000000 {}, byref

IN0064: 0001FA lea      rcx, bword ptr [r14+8]
IN0065: 0001FE call     CORINFO_HELP_ASSIGN_REF
IN0066: 000203 mov      rdx, 0xD1FFAB1E
IN0067: 00020D mov      qword ptr [r14+24], rdx
IN0068: 000211 mov      rcx, 0xD1FFAB1E
IN0069: 00021B mov      rdx, r14
IN006a: 00021E call     CORINFO_HELP_CHECKED_ASSIGN_REF
IN006b: 000223 mov      r8, r14

G_M47830_IG10:        ; offs=000226H, size=0020H, bbWeight=2    PerfScore 10.00, gcrefRegs=000081C0 {rsi rdi r8 r15}, byrefRegs=00000000 {}, byref

IN006c: 000226 mov      rdx, r15
IN006d: 000229 mov      rcx, 0xD1FFAB1E
IN006e: 000233 call     System.Linq.Enumerable:SelectMany(System.Collections.Generic.IEnumerable`1[__Canon],System.Func`2[__Canon,__Canon]):System.Collections.Generic.IEnumerable`1[__Canon]
IN006f: 000238 mov      r8, rax
IN0070: 00023B mov      edx, dword ptr [rdi+16]
IN0071: 00023E mov      rcx, rdi
IN0072: 000241 call     System.Collections.Generic.List`1[__Canon][System.__Canon]:InsertRange(int,System.Collections.Generic.IEnumerable`1[__Canon]):this

G_M47830_IG11:        ; offs=000246H, size=000AH, bbWeight=4    PerfScore 6.00, gcrefRegs=000000C0 {rsi rdi}, byrefRegs=00000000 {}, byref

IN0073: 000246 inc      ebx
IN0074: 000248 cmp      ebp, ebx
IN0075: 00024A jg       G_M47830_IG03

G_M47830_IG12:        ; offs=000250H, size=0037H, bbWeight=1    PerfScore 5.50, gcrefRegs=00000080 {rdi}, byrefRegs=00000000 {}, byref

IN0076: 000250 mov      rdx, rdi
IN0077: 000253 mov      rcx, 0xD1FFAB1E
IN0078: 00025D call     SolutionAnalyzer.GeneralExtensions:Shuffle(System.Collections.Generic.List`1[__Canon])
IN0079: 000262 mov      rdx, 0xD1FFAB1E
IN007a: 00026C mov      rdx, gword ptr [rdx]
IN007b: 00026F mov      rcx, 0xD1FFAB1E
IN007c: 000279 mov      r8d, 2
IN007d: 00027F call     SolutionAnalyzer.Logger:Log(System.__Canon,int):System.__Canon
IN007e: 000284 mov      rax, rdi

G_M47830_IG13:        ; offs=000287H, size=000FH, bbWeight=1    PerfScore 4.75, epilog, nogc, extend

IN008a: 000287 add      rsp, 32
IN008b: 00028B pop      rbx
IN008c: 00028C pop      rbp
IN008d: 00028D pop      rsi
IN008e: 00028E pop      rdi
IN008f: 00028F pop      r12
IN0090: 000291 pop      r14
IN0091: 000293 pop      r15
IN0092: 000295 ret      

G_M47830_IG14:        ; offs=000296H, size=0006H, bbWeight=0    PerfScore 0.00, gcVars=0000000000000000 {}, gcrefRegs=00000000 {}, byrefRegs=00000000 {}, gcvars, byref

IN007f: 000296 call     System.MulticastDelegate:ThrowNullThisInDelegateToInstance()
IN0080: 00029B int3     


*************** Finishing PHASE Emit code

*************** Starting PHASE Emit GC+EH tables
Unwind Info:
  >> Start offset   : 0x000000 (not in unwind data)
  >>   End offset   : 0xd1ffab1e (not in unwind data)
  Version           : 1
  Flags             : 0x00
  SizeOfProlog      : 0x0E
  CountOfUnwindCodes: 8
  FrameRegister     : none (0)
  FrameOffset       : N/A (no FrameRegister) (Value=0)
  UnwindCodes       :
    CodeOffset: 0x0E UnwindOp: UWOP_ALLOC_SMALL (2)     OpInfo: 3 * 8 + 8 = 32 = 0x20
    CodeOffset: 0x0A UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: rbx (3)
    CodeOffset: 0x09 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: rbp (5)
    CodeOffset: 0x08 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: rsi (6)
    CodeOffset: 0x07 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: rdi (7)
    CodeOffset: 0x06 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: r12 (12)
    CodeOffset: 0x04 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: r14 (14)
    CodeOffset: 0x02 UnwindOp: UWOP_PUSH_NONVOL (0)     OpInfo: r15 (15)
allocUnwindInfo(pHotCode=0x00000000D1FFAB1E, pColdCode=0x0000000000000000, startOffset=0x0, endOffset=0x29c, unwindSize=0x14, pUnwindBlock=0x00000000D1FFAB1E, funKind=0 (main function))
*************** In genIPmappingGen()
IP mapping count : 20
IL offs PROLOG : 0x00000000 ( STACK_EMPTY )
IL offs 0x000C : 0x00000033 ( STACK_EMPTY )
IL offs 0x0016 : 0x00000052 ( STACK_EMPTY )
IL offs 0x00AA : 0x00000054 ( STACK_EMPTY )
IL offs 0x001D : 0x0000005F ( STACK_EMPTY )
IL offs 0x0021 : 0x00000067 ( STACK_EMPTY )
IL offs 0x002E : 0x00000086 ( STACK_EMPTY )
IL offs 0x0037 : 0x000000BA ( STACK_EMPTY )
IL offs NO_MAP : 0x00000133 ( STACK_EMPTY )
IL offs 0x005C : 0x0000014C
IL offs 0x0069 : 0x00000176 ( STACK_EMPTY )
IL offs 0x007A : 0x000001C0 ( STACK_EMPTY )
IL offs NO_MAP : 0x000001FA ( STACK_EMPTY )
IL offs 0x0096 : 0x00000211
IL offs 0x00A6 : 0x00000246 ( STACK_EMPTY )
IL offs 0x00AA : 0x00000248 ( STACK_EMPTY )
IL offs 0x00B3 : 0x00000250 ( STACK_EMPTY )
IL offs 0x00C5 : 0x00000284 ( STACK_EMPTY )
IL offs EPILOG : 0x00000287 ( STACK_EMPTY )
IL offs NO_MAP : 0x00000296 ( STACK_EMPTY )

*************** In genSetScopeInfo()
VarLocInfo count is 8
; Variable debug info: 8 live range(s), 5 var(s) for method SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]
  0(   UNKNOWN) : From 00000000h to 00000011h, in rcx
  0(   UNKNOWN) : From 00000011h to 00000052h, in rsi
  4(   UNKNOWN) : From 00000086h to 0000009Dh, in r14
  4(   UNKNOWN) : From 000000AAh to 000000ADh, in r14
  4(   UNKNOWN) : From 000000BAh to 000001A4h, in r14
  3(   UNKNOWN) : From 0000005Fh to 00000246h, in rbx
  2(   UNKNOWN) : From 0000005Fh to 00000250h, in rsi
  1(   UNKNOWN) : From 0000005Fh to 00000284h, in rdi
*************** In gcInfoBlockHdrSave()
Set code length to 668.
Set ReturnKind to Object.
Set Outgoing stack arg area size to 32.
Register slot id for reg rsi = 0.
Register slot id for reg rdi = 1.
Register slot id for reg r14 = 2.
Register slot id for reg r15 = 3.
Set state of slot 0 at instr offset 0x2e to Live.
Set state of slot 0 at instr offset 0x33 to Dead.
Set state of slot 0 at instr offset 0x3d to Live.
Set state of slot 0 at instr offset 0x42 to Dead.
Set state of slot 0 at instr offset 0x4d to Live.
Set state of slot 1 at instr offset 0x4d to Live.
Set state of slot 0 at instr offset 0x52 to Dead.
Set state of slot 1 at instr offset 0x52 to Dead.
Set state of slot 0 at instr offset 0x7d to Live.
Set state of slot 1 at instr offset 0x7d to Live.
Set state of slot 2 at instr offset 0x7d to Live.
Set state of slot 0 at instr offset 0x82 to Dead.
Set state of slot 1 at instr offset 0x82 to Dead.
Set state of slot 2 at instr offset 0x82 to Dead.
Set state of slot 0 at instr offset 0xa0 to Live.
Set state of slot 1 at instr offset 0xa0 to Live.
Set state of slot 0 at instr offset 0xa5 to Dead.
Set state of slot 1 at instr offset 0xa5 to Dead.
Set state of slot 0 at instr offset 0xb0 to Live.
Set state of slot 1 at instr offset 0xb0 to Live.
Set state of slot 0 at instr offset 0xb5 to Dead.
Set state of slot 1 at instr offset 0xb5 to Dead.
Set state of slot 0 at instr offset 0xbf to Live.
Set state of slot 1 at instr offset 0xbf to Live.
Set state of slot 2 at instr offset 0xbf to Live.
Set state of slot 0 at instr offset 0xc4 to Dead.
Set state of slot 1 at instr offset 0xc4 to Dead.
Set state of slot 2 at instr offset 0xc4 to Dead.
Set state of slot 0 at instr offset 0xdd to Live.
Set state of slot 1 at instr offset 0xdd to Live.
Set state of slot 2 at instr offset 0xdd to Live.
Set state of slot 0 at instr offset 0xe2 to Dead.
Set state of slot 1 at instr offset 0xe2 to Dead.
Set state of slot 2 at instr offset 0xe2 to Dead.
Set state of slot 0 at instr offset 0xf4 to Live.
Set state of slot 1 at instr offset 0xf4 to Live.
Set state of slot 2 at instr offset 0xf4 to Live.
Set state of slot 3 at instr offset 0xf4 to Live.
Set state of slot 0 at instr offset 0xf9 to Dead.
Set state of slot 1 at instr offset 0xf9 to Dead.
Set state of slot 2 at instr offset 0xf9 to Dead.
Set state of slot 3 at instr offset 0xf9 to Dead.
Set state of slot 0 at instr offset 0x115 to Live.
Set state of slot 1 at instr offset 0x115 to Live.
Set state of slot 2 at instr offset 0x115 to Live.
Set state of slot 3 at instr offset 0x115 to Live.
Set state of slot 0 at instr offset 0x11a to Dead.
Set state of slot 1 at instr offset 0x11a to Dead.
Set state of slot 2 at instr offset 0x11a to Dead.
Set state of slot 3 at instr offset 0x11a to Dead.
Set state of slot 0 at instr offset 0x16e to Live.
Set state of slot 1 at instr offset 0x16e to Live.
Set state of slot 2 at instr offset 0x16e to Live.
Set state of slot 0 at instr offset 0x173 to Dead.
Set state of slot 1 at instr offset 0x173 to Dead.
Set state of slot 2 at instr offset 0x173 to Dead.
Set state of slot 0 at instr offset 0x185 to Live.
Set state of slot 1 at instr offset 0x185 to Live.
Set state of slot 2 at instr offset 0x185 to Live.
Set state of slot 3 at instr offset 0x185 to Live.
Set state of slot 0 at instr offset 0x18a to Dead.
Set state of slot 1 at instr offset 0x18a to Dead.
Set state of slot 2 at instr offset 0x18a to Dead.
Set state of slot 3 at instr offset 0x18a to Dead.
Set state of slot 0 at instr offset 0x1ad to Live.
Set state of slot 1 at instr offset 0x1ad to Live.
Set state of slot 3 at instr offset 0x1ad to Live.
Set state of slot 0 at instr offset 0x1b2 to Dead.
Set state of slot 1 at instr offset 0x1b2 to Dead.
Set state of slot 3 at instr offset 0x1b2 to Dead.
Set state of slot 0 at instr offset 0x1bb to Live.
Set state of slot 1 at instr offset 0x1bb to Live.
Set state of slot 3 at instr offset 0x1bb to Live.
Set state of slot 0 at instr offset 0x1c0 to Dead.
Set state of slot 1 at instr offset 0x1c0 to Dead.
Set state of slot 3 at instr offset 0x1c0 to Dead.
Set state of slot 0 at instr offset 0x1dc to Live.
Set state of slot 1 at instr offset 0x1dc to Live.
Set state of slot 3 at instr offset 0x1dc to Live.
Set state of slot 0 at instr offset 0x1e1 to Dead.
Set state of slot 1 at instr offset 0x1e1 to Dead.
Set state of slot 3 at instr offset 0x1e1 to Dead.
Set state of slot 0 at instr offset 0x233 to Live.
Set state of slot 1 at instr offset 0x233 to Live.
Set state of slot 0 at instr offset 0x238 to Dead.
Set state of slot 1 at instr offset 0x238 to Dead.
Set state of slot 0 at instr offset 0x241 to Live.
Set state of slot 1 at instr offset 0x241 to Live.
Set state of slot 0 at instr offset 0x246 to Dead.
Set state of slot 1 at instr offset 0x246 to Dead.
Set state of slot 1 at instr offset 0x25d to Live.
Set state of slot 1 at instr offset 0x262 to Dead.
Set state of slot 1 at instr offset 0x27f to Live.
Set state of slot 1 at instr offset 0x284 to Dead.
Defining 20 call sites:
    Offset 0x2e, size 5.
    Offset 0x3d, size 5.
    Offset 0x4d, size 5.
    Offset 0x7d, size 5.
    Offset 0xa0, size 5.
    Offset 0xb0, size 5.
    Offset 0xbf, size 5.
    Offset 0xdd, size 5.
    Offset 0xf4, size 5.
    Offset 0x115, size 5.
    Offset 0x16e, size 5.
    Offset 0x185, size 5.
    Offset 0x1ad, size 5.
    Offset 0x1bb, size 5.
    Offset 0x1dc, size 5.
    Offset 0x233, size 5.
    Offset 0x241, size 5.
    Offset 0x25d, size 5.
    Offset 0x27f, size 5.
    Offset 0x296, size 5.

*************** Finishing PHASE Emit GC+EH tables
Method code size: 668

Allocations for SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] (MethodHash=a4534529)
count:       7244, size:     478384, max =       4560
allocateMemory:     524288, nraUsed:     488248

Alloc'd bytes by kind:
                  kind |       size |     pct
  ---------------------+------------+--------
         AssertionProp |       6460 |   1.35%
               ASTNode |      73608 |  15.39%
              InstDesc |      13084 |   2.74%
              ImpStack |        624 |   0.13%
            BasicBlock |      10104 |   2.11%
             fgArgInfo |       3584 |   0.75%
       fgArgInfoPtrArr |        448 |   0.09%
              FlowList |       1376 |   0.29%
     TreeStatementList |        288 |   0.06%
               SiScope |        736 |   0.15%
       DominatorMemory |        816 |   0.17%
                  LSRA |       5400 |   1.13%
         LSRA_Interval |      11120 |   2.32%
      LSRA_RefPosition |      43520 |   9.10%
          Reachability |         16 |   0.00%
                   SSA |       5688 |   1.19%
           ValueNumber |      26561 |   5.55%
              LvaTable |       9712 |   2.03%
            UnwindInfo |          0 |   0.00%
                hashBv |        768 |   0.16%
                bitset |       1048 |   0.22%
          FixedBitVect |        236 |   0.05%
               Generic |       9306 |   1.95%
   LocalAddressVisitor |          0 |   0.00%
         FieldSeqStore |        792 |   0.17%
    ZeroOffsetFieldMap |        480 |   0.10%
          ArrayInfoMap |        192 |   0.04%
          MemoryPhiArg |        224 |   0.05%
                   CSE |       4416 |   0.92%
                    GC |       9224 |   1.93%
       CorTailCallInfo |          0 |   0.00%
              Inlining |      15944 |   3.33%
            ArrayStack |        256 |   0.05%
             DebugInfo |        944 |   0.20%
             DebugOnly |     204467 |  42.74%
               Codegen |       1176 |   0.25%
               LoopOpt |       2560 |   0.54%
             LoopHoist |        896 |   0.19%
               Unknown |       3070 |   0.64%
            RangeCheck |       5128 |   1.07%
              CopyProp |       3528 |   0.74%
           SideEffects |          0 |   0.00%
       ObjectAllocator |          0 |   0.00%
    VariableLiveRanges |          0 |   0.00%
           ClassLayout |          0 |   0.00%
       TailMergeThrows |        200 |   0.04%
             EarlyProp |         96 |   0.02%
              ZeroInit |        288 |   0.06%

****** DONE compiling SolutionAnalyzer.Results:GetProjectPaths(System.String[]):System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]